(define (game game-id-0) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (exists (?l4 - dodgeball)
      (adjacent_side ?c front ?l4)
    )
  )
)
(:constraints
  (and
    (forall (?t1 - hexagonal_bin ?l - hexagonal_bin ?b1 - hexagonal_bin)
      (and
        (preference dodgeballThrownToBin
          (then
            (hold (and (and (not (and (agent_holds ?b1) (and (adjacent room_center ?b1) (not (on ?b1 ?b) ) (and (agent_holds ?l2) (not (not (exists (?o4 - dodgeball) (agent_holds ?h) ) ) ) (agent_holds ?d) ) ) ) ) (not (and (on ?b2 ?b) (in_motion ?b1) ) ) ) (agent_holds ?b1) ) )
            (once (agent_holds ?b1) )
            (hold (not (adjacent ?b1 ?c3) ) )
          )
        )
      )
    )
    (preference throwAttempt
      (exists (?o - dodgeball ?db ?h - dodgeball)
        (then
          (hold-while (exists (?o2 - block) (agent_holds ?h) ) (not (faces ?l1 ?h) ) )
          (once (adjacent_side ?h ?h ?d) )
          (once (in_motion agent) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= 2 5 )
  )
)
(:scoring
  (count throwAttempt:dodgeball:doggie_bed)
)
)



(define (game game-id-1) (:domain many-objects-room-v1)
(:setup
  (forall (?l3 - wall)
    (exists (?b ?b1 ?h ?b - beachball ?ob - building)
      (exists (?c ?b4 - dodgeball)
        (exists (?p - hexagonal_bin ?d - dodgeball)
          (game-optional
            (agent_holds rug)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwOverRamp
      (exists (?o2 - (either book doggie_bed))
        (then
          (hold (and (agent_holds agent) (not (adjacent_side ?h front_left_corner ?o2) ) (and (and (touch ?c agent) (agent_holds ?o2) ) (not (not (not (agent_holds ?b2) ) ) ) ) ) )
          (once-measure (agent_holds ?o2) (distance_side desk front ?o2) )
          (hold (agent_holds ?o2) )
        )
      )
    )
  )
)
(:terminal
  (or
    (<= (count throwOverRamp:dodgeball) 5 )
    (and
      (>= (total-time) (* 4 2 (* 0.7 3 )
        )
      )
      (>= (count throwOverRamp:basketball:doggie_bed) (external-forall-maximize (- 15 )
        )
      )
    )
  )
)
(:scoring
  (* 5 3 (* 1 (count throwOverRamp:golfball) )
  )
)
)



(define (game game-id-2) (:domain few-objects-room-v1)
(:setup
  (forall (?b - (either bridge_block cylindrical_block))
    (forall (?c - dodgeball)
      (and
        (game-conserved
          (and
            (is_setup_object ?h)
            (agent_holds ?c)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?o4 - dodgeball)
        (then
          (once (agent_holds ?o4) )
          (hold (agent_holds ?o4) )
          (once (and (not (in_motion ?o4) ) (and (and (same_type ?h ?l4) (forall (?c2 - wall ?s - building ?b8 - doggie_bed) (agent_holds bed) ) ) (on ?b ?b) ) (in_motion ?b) ) )
          (once (broken ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (+ 8 10 )
  )
)
(:scoring
  (count-once ballThrownToBin:block)
)
)



(define (game game-id-3) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?t - (either bed chair pyramid_block))
      (game-conserved
        (not
          (and
            (and
              (not
                (broken ?t)
              )
              (agent_holds ?t)
              (on ?t ?b)
            )
            (not
              (and
                (is_setup_object ?t)
                (agent_holds ?c3)
              )
            )
          )
        )
      )
    )
    (and
      (game-optional
        (game_start )
      )
    )
    (forall (?c4 - hexagonal_bin ?b - (either triangle_block laptop) ?c2 - pyramid_block)
      (forall (?c5 - hexagonal_bin)
        (exists (?h - dodgeball)
          (game-conserved
            (on ?c2 floor)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference woodenBlockMovedFromRugToDesk
      (exists (?w2 ?d ?db - cube_block)
        (then
          (once (object_orientation ?d sideways) )
          (hold (on ?w2 ?h) )
          (hold (and (toggled_on ?d) (and (and (and (in_motion bed) (and (in_motion ?d) (same_object ?d ?d) ) (in_motion ?d) (agent_holds ?b) ) (adjacent desk ?b) ) (same_color ?w2 tan) ) ) )
        )
      )
    )
    (preference blockPlacedInBuilding
      (exists (?d - (either bridge_block golfball) ?s - hexagonal_bin)
        (then
          (once (or (in_motion ?d) (in ?d ?s) ) )
          (once (and (in ?d ?s) (in ?s ?o2) ) )
          (once (and (in_motion ?h) (not (agent_holds ?c) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (< (total-time) 3 )
    (or
      (not
        (>= 6 (< 2 (count-longest woodenBlockMovedFromRugToDesk:bed) )
        )
      )
      (= (= 7 (* (count woodenBlockMovedFromRugToDesk:golfball:beachball) )
        )
        2
      )
      (>= (* 5 16 )
        (+ 5 10 )
      )
    )
  )
)
(:scoring
  (* 50 (count-once-per-objects blockPlacedInBuilding:hexagonal_bin:blue_dodgeball) (+ 10 (* (count-once blockPlacedInBuilding:beachball:red) 3 )
      5
    )
  )
)
)



(define (game game-id-4) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (game-conserved
        (forall (?c - block ?l1 - cube_block)
          (same_color ?c3 ?c)
        )
      )
      (exists (?d - cube_block ?l2 - pillow)
        (game-conserved
          (adjacent room_center ?l2)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b1 - (either basketball pyramid_block cd pen tall_cylindrical_block dodgeball pyramid_block))
      (and
        (preference redDodgeballThrownToBin
          (exists (?l1 - cube_block)
            (then
              (once (touch ?o1 agent) )
              (hold (and (in_motion ?g) (not (object_orientation ?l1 sideways) ) ) )
              (hold (and (exists (?w ?o3 - hexagonal_bin) (or (and (agent_holds ?l1) (in ?db bed) (same_color ?r ?c) ) (and (in ?g ?l) (touch ?o ?o3) (and (and (on ?l1 ?c) (same_object ?o ?d) (not (on ?s ?d) ) (not (not (not (not (agent_holds ?h) ) ) ) ) ) (< 1 1) ) (agent_holds ?l2) (agent_holds ?b5) (not (agent_holds ?b) ) ) ) ) (not (agent_holds ?b1) ) (not (in ?b1 ?b1) ) (in ?b1 ?l1) (opposite ?l1 ?o) (agent_holds ?d) ) )
            )
          )
        )
      )
    )
    (preference itemsTurnedOff
      (exists (?c3 - block)
        (at-end
          (not
            (in_motion ?b5)
          )
        )
      )
    )
  )
)
(:terminal
  (> (+ 20 5 )
    (+ 100 (count-same-positions redDodgeballThrownToBin:golfball:blue_pyramid_block) )
  )
)
(:scoring
  (count-once-per-objects redDodgeballThrownToBin:yellow)
)
)



(define (game game-id-5) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (exists (?w1 - (either wall dodgeball) ?b - building)
        (and
          (and
            (game-optional
              (forall (?b2 - (either alarm_clock teddy_bear doggie_bed book doggie_bed cylindrical_block tall_cylindrical_block))
                (agent_holds ?b2)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - wall)
      (and
        (preference agentLeavesDogbedOrNoMoreBalls
          (exists (?f - cylindrical_block)
            (then
              (once (in_motion ?f) )
              (hold (agent_holds ?o) )
            )
          )
        )
      )
    )
    (forall (?c - dodgeball ?b3 - ball ?d ?d - (either cube_block dodgeball key_chain) ?s - ball)
      (and
        (preference bookOnDeskShelf
          (exists (?o2 - dodgeball ?b - dodgeball)
            (then
              (once (on ?d ?r2) )
              (once (exists (?h - dodgeball ?h - hexagonal_bin) (in_motion ?h) ) )
              (once (exists (?d - dodgeball) (agent_holds ?b) ) )
              (once (forall (?o3 - doggie_bed ?tb - dodgeball) (in_motion ?tb) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (count-once agentLeavesDogbedOrNoMoreBalls:triangle_block:hexagonal_bin:basketball) (total-score) )
  )
)
(:scoring
  (* (* 9 (count-once-per-objects bookOnDeskShelf:rug:golfball) )
    (count-longest bookOnDeskShelf:green)
  )
)
)



(define (game game-id-6) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds ?h)
  )
)
(:constraints
  (and
    (forall (?c3 - dodgeball)
      (and
        (preference ballNeverThrown
          (then
            (once (< (distance ?h ?c3) (distance west_wall ?t)) )
            (once (not (not (not (and (not (same_type ?c3 ?l2) ) (on ?c3 ?b4) (and (not (not (and (and (adjacent ?c3 ?d) (adjacent agent ?c3) ) (in_motion ?c3) (and (adjacent ?w1 ?b) (and (not (agent_holds ?c3) ) ) (and (agent_holds ?g) (in ?c3 ?c3) ) ) (and (not (and (exists (?p - hexagonal_bin) (faces ?p ?c3) ) (adjacent ?c3 ?c3) ) ) (and (in_motion ?c3) (< 1 (distance ?c3 ?b)) (exists (?h - teddy_bear ?b4 - (either alarm_clock dodgeball desktop)) (touch ?w1 rug) ) ) (same_color ?c3 ?c3) (not (and (and (not (on ?o ?c3) ) (broken ?d) ) (in_motion ?o) ) ) (agent_holds ?b) (and (touch ?o ?c3) (in ?d ?l3) ) (in_motion ?o) ) (> 1 (distance room_center ?c3)) (agent_holds ?g) ) ) ) ) ) ) ) ) )
            (once (adjacent room_center ?c3) )
          )
        )
      )
    )
    (preference redDodgeballThrownToBinWithoutTouchingFloor
      (exists (?d - chair)
        (then
          (hold (in_motion ?d) )
          (once (agent_holds ?b) )
          (hold (in_motion ?d) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= 2 3 )
    )
    (>= (* 18 15 4 (count-increasing-measure ballNeverThrown:red_pyramid_block) )
      (total-time)
    )
  )
)
(:scoring
  (count-once-per-objects ballNeverThrown:dodgeball)
)
)



(define (game game-id-7) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (forall (?b - hexagonal_bin)
        (exists (?l2 - hexagonal_bin ?c2 - (either rug alarm_clock book))
          (game-conserved
            (and
              (in_motion ?c2)
              (on ?c2 ?b)
              (in_motion ?c2)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - hexagonal_bin)
      (and
        (preference ballThrownToWallToAgent
          (exists (?d - building ?g - hexagonal_bin)
            (then
              (once (and (and (and (same_color ?o ?h) (adjacent_side room_center ?g ?g) ) (not (not (exists (?d - (either cd lamp tall_cylindrical_block golfball cellphone yellow_cube_block yellow) ?d2 - hexagonal_bin) (in_motion ?g) ) ) ) ) ) )
              (once (between ?h bed ?t) )
            )
          )
        )
        (preference throwToDrawerOrBin
          (exists (?r - hexagonal_bin)
            (then
              (once (touch ?c2 rug) )
              (once (not (not (and (adjacent_side ?r ?r ?r front) (game_over ) ) ) ) )
              (once (adjacent ?h ?h) )
            )
          )
        )
      )
    )
    (forall (?h - hexagonal_bin ?h - dodgeball ?b - hexagonal_bin ?l4 - hexagonal_bin)
      (and
        (preference ballThrownFromRug
          (exists (?b - dodgeball ?o4 - hexagonal_bin)
            (then
              (hold-while (not (equal_x_position ?h agent) ) (in_motion ?l4) (in_motion ?l4) (adjacent ?h ?l4) )
              (once (agent_holds ?b) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (>= 0 (total-score) )
      (> (total-time) 5 )
    )
  )
)
(:scoring
  (- (count-total throwToDrawerOrBin:dodgeball) )
)
)



(define (game game-id-8) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?c5 - ball ?d - dodgeball)
      (game-optional
        (and
          (not
            (in_motion green_golfball)
          )
          (in bed ?d)
        )
      )
    )
    (game-conserved
      (adjacent desk ?o2)
    )
    (game-conserved
      (and
        (agent_holds desk)
        (exists (?b1 - building)
          (not
            (forall (?db - (either pyramid_block flat_block))
              (object_orientation side_table ?b1)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference bookOnDeskShelf
      (exists (?p - wall)
        (then
          (once (rug_color_under ?p pink) )
          (once (in ?p ?t) )
          (once (and (agent_holds desk) (adjacent_side agent front ?t) ) )
        )
      )
    )
    (forall (?o4 - blue_pyramid_block)
      (and
        (preference throwToRampToBin
          (exists (?o2 - hexagonal_bin ?o4 - doggie_bed)
            (at-end
              (exists (?c6 - block ?h - block ?r1 - ball)
                (on ?b desk)
              )
            )
          )
        )
      )
    )
    (preference woodenBlockMovedFromRugToDesk
      (exists (?o - color)
        (at-end
          (and
            (adjacent bed ?o)
            (game_start )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count bookOnDeskShelf:hexagonal_bin) 2 )
)
(:scoring
  (count-once-per-external-objects throwToRampToBin:dodgeball:yellow_cube_block:beachball)
)
)



(define (game game-id-9) (:domain many-objects-room-v1)
(:setup
  (forall (?p - triangular_ramp)
    (exists (?h - dodgeball ?r1 - pillow)
      (and
        (game-conserved
          (in_motion ?p)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballFromRugToBin
      (exists (?b3 - color ?b - chair ?s - wall)
        (at-end
          (on ?s ?s)
        )
      )
    )
  )
)
(:terminal
  (<= (count-once dodgeballFromRugToBin:pink_dodgeball:golfball) (count dodgeballFromRugToBin:golfball:beachball) )
)
(:scoring
  (+ 30 (count dodgeballFromRugToBin:blue_dodgeball) )
)
)



(define (game game-id-10) (:domain many-objects-room-v1)
(:setup
  (exists (?t - (either chair) ?c1 - dodgeball ?h - cube_block ?c - hexagonal_bin)
    (game-conserved
      (not
        (= 1)
      )
    )
  )
)
(:constraints
  (and
    (preference throwOverRamp
      (exists (?o4 - dodgeball ?b7 - block)
        (then
          (hold (not (in_motion ?s) ) )
          (once (not (adjacent ?h ?w) ) )
          (hold-while (and (agent_holds ?b7) (on ?b7 ?r2) ) (not (not (agent_holds ?b7) ) ) (not (in ?d ?b7) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (> 10 (count throwOverRamp:red) )
  )
)
(:scoring
  (external-forall-maximize
    (count throwOverRamp:beachball:pink)
  )
)
)



(define (game game-id-11) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (forall (?c1 - wall)
        (exists (?h - ball)
          (game-conserved
            (in_motion ?w2)
          )
        )
      )
      (and
        (exists (?o - pillow ?o - flat_block)
          (exists (?o - cylindrical_block)
            (exists (?ob - hexagonal_bin ?c - hexagonal_bin)
              (and
                (and
                  (game-conserved
                    (and
                      (in_motion ?d)
                      (not
                        (and
                          (= (distance ?o ?c) 1)
                          (<= 8 7)
                          (agent_holds ?h)
                        )
                      )
                      (and
                        (same_color ?d blue)
                        (in_motion ?b)
                      )
                    )
                  )
                )
                (and
                  (and
                    (forall (?c - (either laptop pencil laptop) ?o - hexagonal_bin ?h - hexagonal_bin)
                      (forall (?d2 - chair)
                        (exists (?h - golfball ?o1 - (either dodgeball basketball) ?p3 - hexagonal_bin)
                          (or
                            (and
                              (exists (?h - (either cellphone alarm_clock beachball mug))
                                (and
                                  (game-conserved
                                    (or
                                      (and
                                        (in_motion desk)
                                        (not
                                          (not
                                            (on ?g ?p3)
                                          )
                                        )
                                        (exists (?x - cube_block ?h - triangular_ramp)
                                          (agent_holds ?c)
                                        )
                                      )
                                      (not
                                        (on ?d ?o)
                                      )
                                    )
                                  )
                                  (game-optional
                                    (or
                                      (in_motion ?h)
                                      (on ?p3 ?h)
                                    )
                                  )
                                )
                              )
                              (exists (?c6 - bridge_block)
                                (game-conserved
                                  (in ?o bed)
                                )
                              )
                              (exists (?d - hexagonal_bin ?h - block)
                                (and
                                  (exists (?w2 - dodgeball)
                                    (forall (?h - game_object)
                                      (exists (?h - building)
                                        (and
                                          (exists (?d - block)
                                            (and
                                              (exists (?b ?h - curved_wooden_ramp)
                                                (or
                                                  (game-optional
                                                    (and
                                                      (in ?h ?b2)
                                                      (agent_holds ?b)
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                            (forall (?b - game_object)
                              (not
                                (exists (?h - (either alarm_clock alarm_clock) ?d - building)
                                  (game-conserved
                                    (in_motion ?d)
                                  )
                                )
                              )
                            )
                            (forall (?tb - game_object)
                              (game-optional
                                (adjacent ?h ?p3)
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                  (forall (?r2 - (either book laptop))
                    (exists (?h - block)
                      (game-conserved
                        (not
                          (in_motion ?r2)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownIntoTarget
      (exists (?r1 - cube_block)
        (then
          (once (and (in_motion ?r1) (not (on ?r1 ?d) ) (not (and (in_motion ?r1) (in_motion ?r1) ) ) ) )
          (hold-while (and (in_motion ?r1) (agent_holds ?b) ) (adjacent_side ?h ?r1 ?d) )
          (once (agent_holds rug) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects ballThrownIntoTarget:golfball:beachball) (count ballThrownIntoTarget:blue_dodgeball) )
)
(:scoring
  (+ (* (* 5 (* (* (count ballThrownIntoTarget:pink_dodgeball) 7 (count ballThrownIntoTarget:dodgeball:pink) )
          3
        )
      )
      (external-forall-maximize
        (* (external-forall-maximize (count ballThrownIntoTarget:basketball:basketball) ) 16 )
      )
    )
    (* 10 (count-once-per-external-objects ballThrownIntoTarget:blue_dodgeball:beachball) )
  )
)
)



(define (game game-id-12) (:domain many-objects-room-v1)
(:setup
  (forall (?o3 - hexagonal_bin ?b - pyramid_block)
    (game-conserved
      (and
        (and
          (agent_holds ?b)
          (in_motion ?d)
        )
        (and
          (not
            (< 10 6)
          )
          (exists (?d ?p2 - pillow)
            (on ?p2 ?d)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference redDodgeballThrownToBin
      (exists (?l2 - hexagonal_bin)
        (at-end
          (adjacent ?h ?d)
        )
      )
    )
    (forall (?b ?o1 - (either mug pyramid_block pyramid_block))
      (and
        (preference blockOnBlockInTowerAtEnd
          (exists (?d1 - dodgeball ?b8 - building ?c3 - chair)
            (then
              (once (not (on ?c3 ?p1) ) )
              (hold (in ?o1 ?b) )
              (once (agent_holds ?c3) )
            )
          )
        )
        (preference ballThrownToChair
          (exists (?ob ?b - shelf ?c3 - dodgeball)
            (then
              (hold-while (agent_holds ?d) (and (in_motion green_golfball) (on ?c3 ?b) ) )
              (once (agent_holds ?c3) )
              (once (and (and (and (> (distance ?h ?c3) (distance room_center ?h)) (and (and (agent_holds ?b) (not (in ?o ?d) ) (not (on ?h ?b) ) ) (same_color ?w ?b) (rug_color_under ?b1 blue) ) (agent_holds ?o2) (agent_holds ?l) ) (agent_holds ?b) ) (not (and (adjacent_side agent front_left_corner agent left) (adjacent ?b ?o1) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) 3 )
)
(:scoring
  (count-shortest redDodgeballThrownToBin:brown:purple)
)
)



(define (game game-id-13) (:domain many-objects-room-v1)
(:setup
  (exists (?p1 - game_object)
    (not
      (exists (?b2 - (either cylindrical_block))
        (game-optional
          (and
            (on ?o ?p1)
            (agent_holds ?b2)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference cubeBlockInBuilding
      (exists (?p - game_object)
        (at-end
          (and
            (and
              (and
                (in ?o4 ?b)
                (on ?bl ?p)
              )
              (in_motion ?h)
            )
            (touch ?p ?b8)
          )
        )
      )
    )
    (forall (?s - block)
      (and
        (preference ballThrownMissesEverything
          (exists (?b7 - dodgeball)
            (then
              (once (in west_wall ?c1) )
              (once (< 1 (distance ?s ?b7)) )
              (once (in_motion ?b) )
            )
          )
        )
        (preference throwGolfballToBin
          (then
            (hold (and (and (and (adjacent agent ?s) (in_motion ?s) ) ) (not (agent_holds ?p2) ) ) )
            (once (not (agent_crouches ) ) )
            (once (< 7 (distance ?s ?s)) )
          )
        )
      )
    )
    (preference throwToBinFromOppositeWall
      (exists (?b3 - game_object)
        (at-end
          (not
            (and
              (between ?b3 ?b3 ?b)
              (in_motion ?t)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (+ 3 (count-once-per-objects ballThrownMissesEverything:tan:tall_cylindrical_block) )
  )
)
(:scoring
  (* (count-same-positions throwToBinFromOppositeWall:dodgeball:beachball) (* 2 (+ (- (count cubeBlockInBuilding:hexagonal_bin) )
        6
        (count ballThrownMissesEverything:yellow_cube_block)
        (count-once-per-objects ballThrownMissesEverything:pink_dodgeball)
      )
    )
    (count-measure ballThrownMissesEverything:basketball)
  )
)
)



(define (game game-id-14) (:domain few-objects-room-v1)
(:setup
  (forall (?h - hexagonal_bin)
    (and
      (forall (?l - building ?b - hexagonal_bin ?o2 - red_dodgeball)
        (and
          (game-optional
            (and
              (agent_holds agent)
              (not
                (and
                  (not
                    (in_motion ?h)
                  )
                  (agent_holds ?h)
                )
              )
            )
          )
          (game-optional
            (on ?o2 ?h)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectWithMatchingColor
      (exists (?c - building ?o5 - desk_shelf)
        (then
          (once (not (< (building_size ?o5) 1) ) )
          (once (and (on ?o5 ?o5) (and (in_motion ?b) (in_motion ?o5) (in_motion ?o5) (in_motion ?d) ) ) )
          (once (and (and (not (and (in_motion ?o5) (agent_holds ?b1) ) ) (and (and (not (< 1 (distance ?h ?o5)) ) (in_motion ?o5) (in_motion ?b) ) (same_color desk ?o5) (not (not (not (agent_holds ?o5) ) ) ) (and (not (or (in ?o5 ?c) (object_orientation floor sideways) ) ) (same_color ?b pink) ) ) ) (agent_holds ?b) (not (in_motion ?d) ) (forall (?b - dodgeball ?o3 - doggie_bed ?p2 - (either laptop)) (and (or (and (< 1 1) (not (>= 1 1) ) ) (not (on ?p2 rug) ) ) (and (and (not (not (and (and (or (agent_holds ?p2) (and (rug_color_under ?g blue) (agent_holds ?o5) (adjacent bed ?o5) ) ) (in_motion ?b) ) (not (or (and (on ?b ?o5) ) (agent_holds ?o5) ) ) ) ) ) (and (and (in_motion ?l1) (exists (?o - (either key_chain bridge_block)) (in_motion ?o) ) (same_type ?p2 ?p2) ) (not (on ?b ?p2) ) ) (in_motion ?d) ) (not (in_motion ?p2) ) ) ) ) (and (agent_holds ?o5) (on ?c ?h) ) (in ?w2 ?o5) (in_motion ?d) (and (and (exists (?o - ball ?d - game_object) (same_color ?o pink) ) (same_color ?b green) ) (adjacent ?o5 ?o5) ) (in_motion floor) (agent_holds ?o5) (not (and (on ?p1 ?l1) (open ?c) (touch ?o ?o5) ) ) (in_motion ?b) ) )
        )
      )
    )
    (preference ballThrownThroughRampAndBlocksToBin
      (exists (?t - dodgeball)
        (then
          (hold-while (and (in ?h ?c2) (in_motion ?t) (not (same_color ?t blue) ) (agent_holds rug) ) (same_type ?b pillow) )
          (hold-while (< (distance desk ?t) (building_size ?t)) (< (distance ?t ?b) 1) )
        )
      )
    )
  )
)
(:terminal
  (and
    (and
      (>= (count objectWithMatchingColor) (* (count objectWithMatchingColor:yellow_cube_block) (count-once-per-objects objectWithMatchingColor:cylindrical_block) )
      )
      (and
        (>= (count-shortest ballThrownThroughRampAndBlocksToBin:yellow_pyramid_block) (count ballThrownThroughRampAndBlocksToBin:triangle_block:yellow) )
        (not
          (or
            (or
              (>= (total-score) (total-score) )
              (>= (count-once-per-objects objectWithMatchingColor) (* (* (count ballThrownThroughRampAndBlocksToBin:hexagonal_bin) (- 5 (count ballThrownThroughRampAndBlocksToBin:golfball) ) )
                  30
                )
              )
            )
          )
        )
      )
      (= (total-time) (count objectWithMatchingColor:hexagonal_bin:blue_dodgeball) )
    )
  )
)
(:scoring
  (- 15 )
)
)



(define (game game-id-15) (:domain many-objects-room-v1)
(:setup
  (or
    (forall (?h - shelf)
      (and
        (game-conserved
          (or
            (on ?o1 ?l)
            (adjacent agent ?h)
          )
        )
      )
    )
    (exists (?d ?t - dodgeball)
      (and
        (forall (?s - doggie_bed)
          (forall (?g - wall ?l - game_object ?c - (either laptop doggie_bed cylindrical_block alarm_clock pencil golfball cube_block))
            (forall (?p2 - dodgeball)
              (exists (?c - building)
                (exists (?l - cube_block)
                  (forall (?c4 - (either laptop game_object yellow_cube_block))
                    (exists (?b - hexagonal_bin)
                      (forall (?d - watch ?d1 - dodgeball ?h - cube_block)
                        (forall (?h - block)
                          (game-conserved
                            (agent_holds ?c3)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
        (exists (?b - (either dodgeball main_light_switch dodgeball laptop) ?b ?p1 - hexagonal_bin)
          (game-conserved
            (and
              (not
                (not
                  (and
                    (in_motion ?p1)
                    (not
                      (same_object ?t ?b2)
                    )
                  )
                )
              )
              (and
                (same_color ?t pink)
                (same_color ?c ?p1)
              )
            )
          )
        )
        (forall (?h ?o - hexagonal_bin ?r - cube_block)
          (forall (?c - teddy_bear ?b - sliding_door)
            (and
              (game-conserved
                (in_motion ?h)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference golfballLandsInBinThroughRamp
      (exists (?o5 - ball)
        (at-end
          (is_setup_object ?l2)
        )
      )
    )
    (preference cubeBlockThrownToTopShelf
      (exists (?d - wall)
        (at-end
          (agent_holds ?d)
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 3 6 )
    (>= 20 1 )
  )
)
(:scoring
  (external-forall-maximize
    (count cubeBlockThrownToTopShelf:basketball)
  )
)
)



(define (game game-id-16) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?b - chair)
      (exists (?b9 - dodgeball)
        (game-conserved
          (same_type ?b9 ?b)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownIntoTarget
      (exists (?tb - hexagonal_bin)
        (then
          (hold (in ?f ?tb) )
          (once (agent_holds ?g) )
          (once (not (and (agent_holds ?tb) (and (not (is_setup_object ?tb) ) (agent_holds ?c4) (in_motion ?b) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (= (* (count ballThrownIntoTarget:golfball) (count-once-per-objects ballThrownIntoTarget:red:yellow) )
    2
  )
)
(:scoring
  (* (external-forall-maximize (count ballThrownIntoTarget:triangle_block) ) 2 )
)
)



(define (game game-id-17) (:domain few-objects-room-v1)
(:setup
  (forall (?o - curved_wooden_ramp)
    (forall (?b - game_object ?d - ball)
      (game-optional
        (not
          (in_motion ?o)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?x - curved_wooden_ramp ?d - (either cellphone golfball cellphone))
      (and
        (preference objectWithMatchingColor
          (exists (?b - dodgeball)
            (then
              (hold (in ?d ?g) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (+ 6 (= 0.7 10 )
    )
    (* 3 7 )
  )
)
(:scoring
  (* 5 100 )
)
)



(define (game game-id-18) (:domain medium-objects-room-v1)
(:setup
  (forall (?c5 - book)
    (game-conserved
      (not
        (agent_holds agent)
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballFromBlockToBin
      (exists (?h - book)
        (then
          (once (above ?o ?h) )
          (once (agent_holds ?b4) )
          (once (and (same_color ?h ?h) (not (agent_holds ?d) ) (on ?h ?d) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 6 (+ 2 (count-unique-positions dodgeballFromBlockToBin:dodgeball:beachball) )
    )
    (> 4 4 )
    (>= (* (count-once-per-objects dodgeballFromBlockToBin:hexagonal_bin) (count-once dodgeballFromBlockToBin:dodgeball) 10 (count-once-per-objects dodgeballFromBlockToBin:beachball:pink_dodgeball) (count-shortest dodgeballFromBlockToBin:dodgeball) 2 )
      (total-score)
    )
  )
)
(:scoring
  (* (+ (count dodgeballFromBlockToBin:basketball:red) (+ (* (+ 10 (- (count dodgeballFromBlockToBin) )
          )
          (* 10 (= (count-once-per-objects dodgeballFromBlockToBin:side_table) (* 2 (count dodgeballFromBlockToBin:dodgeball:golfball) (count dodgeballFromBlockToBin:golfball:dodgeball) )
              10
            )
          )
          3
        )
        8
      )
    )
    2
  )
)
)



(define (game game-id-19) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (touch ?b ?b)
  )
)
(:constraints
  (and
    (preference cubeBlockFromBedToShelf
      (exists (?d - ball ?d - (either dodgeball yellow_cube_block) ?c5 - game_object)
        (then
          (hold-while (in ?b ?h) (on ?l2 agent) (not (not (>= 4 1) ) ) (forall (?d - hexagonal_bin) (in_motion ?o) ) )
          (once (agent_holds bed) )
          (once (agent_holds ?t) )
        )
      )
    )
    (preference pillowMovedToRoomCenter
      (exists (?t - game_object ?o - ball ?h - dodgeball ?d - hexagonal_bin)
        (then
          (once (and (same_type ?l1 ball) (on ?d ?d) ) )
          (hold (in ?o ?g) )
          (hold-while (forall (?d - curved_wooden_ramp) (in floor ?d) ) (in_motion ?b) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-once-per-objects cubeBlockFromBedToShelf:pink_dodgeball) (total-time) )
    (>= 3 (count-once-per-objects pillowMovedToRoomCenter:dodgeball) )
  )
)
(:scoring
  (count-overlapping pillowMovedToRoomCenter:tan:dodgeball)
)
)



(define (game game-id-20) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (not
      (on ?c ?g)
    )
  )
)
(:constraints
  (and
    (preference throwBallToDoggieBedOffWall
      (exists (?l - dodgeball ?c - hexagonal_bin ?o - beachball ?d - block)
        (then
          (once (not (agent_holds ?d) ) )
          (hold (and (not (not (and (not (in_motion ?d) ) (in_motion north_wall) ) ) ) (in_motion ?d) ) )
          (hold (agent_holds ?o) )
        )
      )
    )
    (preference objectWithMatchingColor
      (exists (?c4 - block)
        (at-end
          (between ?c4 ?c4 ?b)
        )
      )
    )
  )
)
(:terminal
  (= 10 (total-score) )
)
(:scoring
  (- (* (count objectWithMatchingColor:bed) (* (count objectWithMatchingColor:green) )
      2
    )
  )
)
)



(define (game game-id-21) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds ?b3)
  )
)
(:constraints
  (and
    (preference dodgeballFromDeskToTarget
      (exists (?b ?o - chair ?p - hexagonal_bin ?r - teddy_bear)
        (then
          (hold (and (not (not (agent_holds ?r) ) ) (< 1 (distance ?r ?d)) ) )
          (once (and (is_setup_object ?r) (and (not (and (on ?r ?r) (and (not (and (agent_holds ?r) (agent_holds ?r) ) ) (not (on ?b ?r) ) ) (agent_holds ?o) (and (in_motion ?r) (not (on ?r ?b5) ) ) ) ) (forall (?d ?o - ball) (not (in_motion ?b) ) ) ) ) )
          (once (and (touch ?r ?r) (and (in_motion ?r) (not (not (same_object ?r ?r) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (<= (total-score) (total-time) )
)
(:scoring
  (count-overlapping dodgeballFromDeskToTarget:red_pyramid_block)
)
)



(define (game game-id-22) (:domain few-objects-room-v1)
(:setup
  (forall (?d - chair ?w2 - curved_wooden_ramp)
    (exists (?d - cube_block)
      (and
        (exists (?c - game_object)
          (forall (?b - block ?w1 - wall)
            (game-conserved
              (not
                (same_color ?w1 ?w2)
              )
            )
          )
        )
        (and
          (forall (?d - hexagonal_bin ?h - hexagonal_bin ?h - shelf)
            (and
              (game-conserved
                (not
                  (and
                    (and
                      (and
                        (agent_holds ?b2)
                        (forall (?d - hexagonal_bin ?h - hexagonal_bin)
                          (and
                            (in_motion ?d)
                          )
                        )
                        (and
                          (and
                            (agent_holds ?h)
                            (in_motion ?g)
                          )
                          (not
                            (and
                              (and
                                (not
                                  (agent_holds ?w2)
                                )
                                (touch ?o ?o)
                              )
                              (forall (?b5 ?o3 ?b - game_object)
                                (agent_holds ?c)
                              )
                            )
                          )
                        )
                        (and
                          (in_motion ?h)
                          (not
                            (on ?d ?d)
                          )
                          (< (distance ?h ?w2) (distance agent ?h))
                        )
                        (between ?d ?d ?d)
                        (not
                          (agent_holds ?b)
                        )
                      )
                      (not
                        (adjacent agent ?w2)
                      )
                    )
                    (agent_holds ?d)
                  )
                )
              )
              (exists (?t - (either key_chain doggie_bed))
                (exists (?r1 - dodgeball)
                  (game-conserved
                    (agent_holds ?r)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectMovedRoomSide
      (exists (?h - game_object)
        (then
          (once (and (same_type ?l ?h) (or (object_orientation desk upright) (adjacent ?h ?b) ) ) )
          (once (in_motion ?d) )
          (hold (and (in_motion ?o) (> 1 1) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (count-once objectMovedRoomSide:beachball:basketball) (* (count-longest objectMovedRoomSide:beachball) (* (- 6 )
        )
      )
    )
    (>= 5 (count objectMovedRoomSide:orange) )
    (>= (count-once-per-objects objectMovedRoomSide:golfball) (< (count-increasing-measure objectMovedRoomSide:dodgeball:golfball:orange) (count-unique-positions objectMovedRoomSide:basketball) )
    )
  )
)
(:scoring
  (* (count-once-per-objects objectMovedRoomSide:dodgeball) 5 )
)
)



(define (game game-id-23) (:domain many-objects-room-v1)
(:setup
  (forall (?db - (either hexagonal_bin dodgeball) ?r1 - building)
    (forall (?b - building ?c - game_object)
      (game-conserved
        (agent_holds ?c)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownIntoTarget
      (exists (?s - building ?d - (either desktop floor cube_block) ?h - ball)
        (then
          (once (agent_holds agent) )
          (hold (open ?o) )
          (once (in_motion ?r) )
          (once (adjacent_side ?w2 ?h ?h) )
        )
      )
    )
    (preference blockInTowerKnockedByDodgeball
      (exists (?g - block ?p3 - curved_wooden_ramp)
        (at-end
          (in ?b1 rug)
        )
      )
    )
  )
)
(:terminal
  (and
    (> (total-score) (count blockInTowerKnockedByDodgeball:beachball:yellow) )
  )
)
(:scoring
  (count-once-per-external-objects ballThrownIntoTarget:dodgeball:book:wall)
)
)



(define (game game-id-24) (:domain many-objects-room-v1)
(:setup
  (exists (?o - blue_cube_block ?db - teddy_bear)
    (game-conserved
      (> 3 (distance ?db ?b))
    )
  )
)
(:constraints
  (and
    (preference bookOnDeskShelf
      (exists (?l - beachball)
        (then
          (hold (not (agent_holds ?b2) ) )
          (once (touch ?d ?l) )
          (hold (in_motion ?l) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 5 (external-forall-maximize (* (* 8 (* (count-once-per-objects bookOnDeskShelf:cube_block) 300 )
            (count-once-per-objects bookOnDeskShelf:purple:dodgeball)
          )
          5
        )
      )
    )
    (>= (count bookOnDeskShelf:beachball) 2 )
  )
)
(:scoring
  (count-increasing-measure bookOnDeskShelf:doggie_bed)
)
)



(define (game game-id-25) (:domain few-objects-room-v1)
(:setup
  (forall (?t - hexagonal_bin ?w - hexagonal_bin)
    (game-conserved
      (not
        (in_motion ?b)
      )
    )
  )
)
(:constraints
  (and
    (preference thrownObjectHitsComputer
      (exists (?h - hexagonal_bin ?h - (either pen blue_cube_block))
        (then
          (once (and (on ?c ?b) (not (in_motion ?b) ) ) )
          (once (or (and (and (not (in_motion ?h) ) (equal_x_position room_center ?h) (and (agent_holds ?h) (agent_holds ?h) ) (in_motion ?h) (not (in_motion ?o) ) (on ?o ?h) (on ?h ?h) ) (exists (?s - (either alarm_clock)) (and (agent_holds ?s) (exists (?b - red_dodgeball ?o - game_object) (agent_holds ?h) ) ) ) ) (and (in_motion ?h) (in_motion ?c) ) ) )
          (once (in_motion desk) )
        )
      )
    )
  )
)
(:terminal
  (>= (count thrownObjectHitsComputer:dodgeball:dodgeball) 3 )
)
(:scoring
  (* (+ 2 (count thrownObjectHitsComputer) )
    (count thrownObjectHitsComputer:yellow)
  )
)
)



(define (game game-id-26) (:domain few-objects-room-v1)
(:setup
  (exists (?r1 - wall)
    (game-conserved
      (in_motion ?r1)
    )
  )
)
(:constraints
  (and
    (forall (?h - bridge_block)
      (and
        (preference teddyBearHitsBall
          (exists (?d - (either cube_block blue_cube_block pen) ?l - dodgeball)
            (then
              (once (not (faces ?l ?l) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (< (+ 2 3 )
      (= 1 )
    )
    (or
      (>= (total-score) (total-score) )
      (or
        (>= (* (* (* (count teddyBearHitsBall:dodgeball) 30 )
              8
            )
            10
          )
          (count-once-per-objects teddyBearHitsBall:blue_dodgeball)
        )
      )
    )
  )
)
(:scoring
  (= 15 1 )
)
)



(define (game game-id-27) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?o - golfball)
      (and
        (exists (?w - wall)
          (exists (?r - building)
            (exists (?l3 - hexagonal_bin ?c2 - hexagonal_bin ?s - cube_block)
              (or
                (game-conserved
                  (agent_holds ?b)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c - (either flat_block cylindrical_block) ?g - doggie_bed ?c3 - (either laptop cube_block))
      (and
        (preference thrownBallReachesEnd
          (then
            (once (forall (?d - dodgeball) (agent_holds ?c3) ) )
            (hold (not (not (adjacent ?w2 ?t) ) ) )
            (once (agent_holds ?c3) )
          )
        )
      )
    )
    (preference throwMissesBin
      (exists (?b9 - pillow ?t - doggie_bed)
        (then
          (once (in_motion ?t) )
          (once (on ?t desk) )
          (once (agent_holds ?d) )
        )
      )
    )
    (preference blockKnockedFromBuildingInBin
      (exists (?r - (either laptop pyramid_block))
        (then
          (hold (not (not (agent_holds ?r) ) ) )
          (hold (object_orientation ?r upright) )
          (once (on agent ?r) )
        )
      )
    )
  )
)
(:terminal
  (<= (total-time) (count blockKnockedFromBuildingInBin:green:beachball) )
)
(:scoring
  (count-longest throwMissesBin:golfball)
)
)



(define (game game-id-28) (:domain few-objects-room-v1)
(:setup
  (exists (?h ?bl - ball)
    (exists (?d - hexagonal_bin)
      (game-optional
        (not
          (in_motion ?g)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownThroughRampAndBlocksToBin
      (exists (?r - color ?d - (either tall_cylindrical_block bridge_block) ?c3 - dodgeball)
        (then
          (once (in_motion ?g) )
          (once (in ?d ?p) )
          (hold-while (agent_holds ?c3) (and (touch ?w ?o1) (adjacent agent ?c3) ) )
        )
      )
    )
  )
)
(:terminal
  (> (total-time) (+ 8 50 )
  )
)
(:scoring
  (count-measure ballThrownThroughRampAndBlocksToBin:dodgeball:pink_dodgeball)
)
)



(define (game game-id-29) (:domain medium-objects-room-v1)
(:setup
  (forall (?t - (either laptop cylindrical_block cellphone))
    (game-conserved
      (agent_holds ?d1)
    )
  )
)
(:constraints
  (and
    (forall (?tb - drawer)
      (and
        (preference matchingBuildingBuilt
          (exists (?b3 - ball)
            (then
              (once (and (same_object side_table ?d) (and (rug_color_under ?b3 ?c) (and (touch ?b3 ?b3) (and (<= 1 (distance ?w1 ?c)) (agent_holds ?tb) ) ) ) ) )
              (once (not (not (same_color ?d ?c) ) ) )
              (hold (agent_holds ?tb) )
              (once (toggled_on pink_dodgeball) )
            )
          )
        )
      )
    )
    (preference throwAttempt
      (exists (?o - chair ?w - hexagonal_bin)
        (then
          (hold (on ?d ?w) )
          (once (and (and (in_motion ?b) (not (not (touch ?w ?w) ) ) ) (not (>= (distance ?w ?w) 1) ) ) )
          (once (and (on ?g ?f) (or (in ?w ?w) (and (and (on ?w ?w) (agent_holds ?w) ) (agent_holds ?l3) (agent_holds ?r) (in_motion ?w) (not (on ?b ?d) ) (and (touch ?w ?w) (not (and (>= 1 (distance ?w ?d)) (in_motion ?b) ) ) ) ) ) ) )
          (once (not (and (not (not (in ?r ?b4) ) ) (agent_holds ?o4) ) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (<= (count-once matchingBuildingBuilt:purple) (= 7 (count-once-per-objects matchingBuildingBuilt:doggie_bed:pink) )
    )
  )
)
(:scoring
  (count-unique-positions throwAttempt:pink:blue_dodgeball)
)
)



(define (game game-id-30) (:domain medium-objects-room-v1)
(:setup
  (or
    (and
      (and
        (exists (?b6 - (either beachball cube_block wall) ?o1 - ball ?o1 - dodgeball)
          (and
            (or
              (and
                (game-conserved
                  (< 1 2)
                )
              )
            )
          )
        )
      )
      (and
        (exists (?c ?h ?h ?o5 ?ob ?o - (either dodgeball watch))
          (game-conserved
            (agent_holds ?o5)
          )
        )
        (game-conserved
          (agent_holds ?w)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToRampToBed
      (exists (?h - cube_block)
        (then
          (hold (and (adjacent ?h ?h) (in_motion desk) (not (on ?b ?b5) ) (and (and (on ?h ?d) (and (agent_holds ?h) (on ?c ?l2) ) ) (agent_holds ?h) ) (and (agent_holds ?f) (and (not (in_motion ?b) ) (not (in ?h ?h) ) ) ) (exists (?o - hexagonal_bin) (in_motion ?g) ) ) )
          (once (not (and (and (in_motion ?h) (same_type ?b ?l2) ) (on ?h ?b) (in_motion ?s) ) ) )
          (hold (agent_holds ?b) )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (count ballThrownToRampToBed:rug) 10 )
    (> (total-score) 8 )
  )
)
(:scoring
  (= (count ballThrownToRampToBed:basketball) (* (* (* (count-once ballThrownToRampToBed:dodgeball) (count ballThrownToRampToBed:basketball) )
        (+ 60 5 )
        (= (count ballThrownToRampToBed:yellow:doggie_bed) )
      )
      40
    )
  )
)
)



(define (game game-id-31) (:domain many-objects-room-v1)
(:setup
  (exists (?h - hexagonal_bin ?b - hexagonal_bin ?c - hexagonal_bin)
    (and
      (and
        (game-conserved
          (and
            (and
              (agent_holds ?p)
              (on ?l ?c)
            )
            (touch ?w2 ?t)
          )
        )
        (game-conserved
          (touch ?b ?b)
        )
        (forall (?d ?bl ?t ?d ?h ?c - game_object)
          (forall (?o - ball)
            (game-conserved
              (and
                (on ?d ?d)
                (agent_holds ?d)
                (not
                  (in_motion ?d)
                )
              )
            )
          )
        )
      )
      (forall (?b - building)
        (forall (?l3 - block)
          (game-conserved
            (in_motion ?c)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttemptFromDoor
      (exists (?b9 - hexagonal_bin ?h - hexagonal_bin ?o5 - hexagonal_bin)
        (then
          (hold (in_motion ?t) )
          (hold (and (< (distance ?w1 ?o5) (distance room_center ?o5)) (not (and (in_motion ?o5) (in ?o5 ?d) (< 1 1) ) ) ) )
          (hold-while (and (agent_holds ?p1) (exists (?t2 ?x ?o4 ?o5 ?r ?o1 - curved_wooden_ramp) (exists (?b - (either yellow_cube_block wall watch)) (on ?o1 ?o1) ) ) ) (< 1 1) )
        )
      )
    )
    (preference dodgeballBouncesOnceToDoggieBed
      (exists (?c2 ?o - dodgeball)
        (at-end
          (< 1 3)
        )
      )
    )
  )
)
(:terminal
  (>= 2 (count throwAttemptFromDoor:pyramid_block) )
)
(:scoring
  (* 3 (* (count-total dodgeballBouncesOnceToDoggieBed:basketball) (* 5 (* (count-once dodgeballBouncesOnceToDoggieBed:blue_cube_block) 10 )
      )
    )
  )
)
)



(define (game game-id-32) (:domain medium-objects-room-v1)
(:setup
  (and
    (or
      (exists (?h - hexagonal_bin)
        (and
          (and
            (forall (?d - block ?h - hexagonal_bin)
              (exists (?b ?s - chair)
                (exists (?b3 - tall_cylindrical_block)
                  (forall (?x - (either cube_block book laptop) ?l4 - hexagonal_bin)
                    (game-optional
                      (not
                        (in_motion ?s)
                      )
                    )
                  )
                )
              )
            )
          )
          (forall (?t - curved_wooden_ramp)
            (forall (?h - hexagonal_bin)
              (game-optional
                (agent_holds ?d)
              )
            )
          )
          (exists (?h - hexagonal_bin ?t ?w ?c ?o4 ?l ?b1 - building)
            (game-optional
              (forall (?l - hexagonal_bin)
                (agent_holds pink_dodgeball)
              )
            )
          )
        )
      )
    )
    (forall (?h - (either key_chain book doggie_bed))
      (game-conserved
        (exists (?d - (either yellow_cube_block bridge_block) ?t - (either beachball dodgeball pencil alarm_clock credit_card wall curved_wooden_ramp))
          (and
            (not
              (agent_holds ?o)
            )
            (in_motion ?p2)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballOnBedAtEnd
      (exists (?o - hexagonal_bin ?o4 - dodgeball)
        (then
          (hold (agent_holds ?d) )
          (once (on ?c ?g) )
        )
      )
    )
    (preference ballRolledOnRampToRug
      (exists (?t1 - building ?o - shelf)
        (at-end
          (not
            (and
              (in ?o ?b)
              (in_motion rug)
            )
          )
        )
      )
    )
    (preference blocksInPlace
      (exists (?g - beachball)
        (then
          (once (agent_holds ?g) )
          (once (not (in_motion ?l) ) )
          (once (not (and (in agent ?h) (not (not (agent_holds ?g) ) ) (and (in ?g ?g) (in_motion ?g) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= 10 (total-score) )
    (= (count-once-per-external-objects blocksInPlace:beachball) (count blocksInPlace:dodgeball) )
  )
)
(:scoring
  (count-once-per-objects ballOnBedAtEnd:hexagonal_bin)
)
)



(define (game game-id-33) (:domain many-objects-room-v1)
(:setup
  (forall (?c - dodgeball)
    (forall (?c - hexagonal_bin ?c - (either hexagonal_bin dodgeball pyramid_block) ?w2 - (either laptop top_drawer beachball))
      (game-optional
        (not
          (rug_color_under ?o2 ?c)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockThrowAttempt
      (exists (?s - wall)
        (then
          (once (agent_holds ?s) )
          (once (in_motion ?s) )
          (once (not (and (in ?b ?s) (agent_holds ?b) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 0.5 (* (* (external-forall-maximize (* (* (external-forall-minimize (external-forall-maximize (count-same-positions blockThrowAttempt:dodgeball) ) ) (count-once blockThrowAttempt:yellow_cube_block) )
            2
          )
        )
        (* 3 (count blockThrowAttempt:dodgeball:basketball) )
      )
      0.7
    )
  )
)
(:scoring
  (count blockThrowAttempt:blue_cube_block)
)
)



(define (game game-id-34) (:domain medium-objects-room-v1)
(:setup
  (exists (?h - hexagonal_bin ?b6 - hexagonal_bin)
    (and
      (game-conserved
        (or
          (not
            (on ?b6 ?r)
          )
          (agent_holds ?o)
          (and
            (and
              (or
                (in_motion ?b6)
                (and
                  (= (distance ?b6 ?b6) (distance ?h ?g))
                  (equal_x_position ?s ?b6)
                  (and
                    (agent_holds ?d)
                    (< 2 1)
                  )
                )
              )
              (and
                (> (distance agent ?b6) 1)
                (and
                  (broken ?d)
                  (not
                    (and
                      (forall (?b6 - ball)
                        (adjacent bed ?b6)
                      )
                      (in_motion ?d)
                    )
                  )
                )
              )
            )
            (and
              (not
                (not
                  (on ?b6 ?b6)
                )
              )
              (in_motion ?b6)
              (> (distance agent ?h) 2)
            )
          )
        )
      )
      (game-conserved
        (on ?b2 floor)
      )
      (game-optional
        (and
          (game_start )
          (agent_holds ?b6)
          (agent_holds ?b)
          (on ?b6 ?d1)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballAndBasketballInBin
      (exists (?w2 - curved_wooden_ramp)
        (then
          (hold (adjacent agent ?b2) )
          (hold-while (on ?h ?b) (not (on ?b ?d) ) )
          (once (not (and (not (equal_z_position ?w2 ?d) ) (same_color ?d ?tb) (not (in_motion ?w2) ) ) ) )
        )
      )
    )
    (preference blockIncorrectlyPicked
      (exists (?p1 - building)
        (then
          (once (in ?p1 ?t) )
          (once (and (in_motion ?p1) ) )
          (once (in_motion ?d) )
        )
      )
    )
  )
)
(:terminal
  (<= (total-time) (total-time) )
)
(:scoring
  (count-same-positions blockIncorrectlyPicked:green:dodgeball)
)
)



(define (game game-id-35) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (on ?b ?o)
  )
)
(:constraints
  (and
    (preference throwToBinFromOppositeWall
      (exists (?h - hexagonal_bin)
        (then
          (hold (and (or (and (and (on ?o5 ?d) (not (not (and (< (distance_side room_center back ?h front) 1) (in ?h ?h) (on ?h ?h) ) ) ) ) (agent_holds ?h) ) (in_motion ?h) ) (exists (?p - hexagonal_bin ?p3 - hexagonal_bin) (same_type ?h ?h) ) ) )
          (hold (< (distance bed ?h) 2) )
          (hold (not (in_motion ?h) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count throwToBinFromOppositeWall:triangle_block) 10 )
)
(:scoring
  (= (count throwToBinFromOppositeWall:basketball:red) (* (+ 5 (count throwToBinFromOppositeWall:golfball) )
      3
    )
  )
)
)



(define (game game-id-36) (:domain few-objects-room-v1)
(:setup
  (exists (?d - triangular_ramp)
    (exists (?h - hexagonal_bin)
      (game-optional
        (and
          (adjacent ?w2 ?o)
          (and
            (agent_holds ?h)
            (in_motion ?d)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?l1 - hexagonal_bin)
      (and
        (preference ballThrownFromBehindBlock
          (exists (?p - blue_pyramid_block)
            (at-end
              (and
                (on ?o ?p)
                (agent_holds ?l1)
              )
            )
          )
        )
        (preference throwFromEdgeOfRug
          (exists (?o - (either pyramid_block pencil laptop) ?d - chair)
            (then
              (once (or (<= 3 0) (agent_holds ?d) ) )
              (hold (in_motion ?c) )
              (hold-while (and (in_motion ?b) (in_motion ?d) ) (or (in_motion ?d) (and (in ?s ?d) (in_motion ?d) ) (in bed ?d) (exists (?p - hexagonal_bin) (agent_holds ?l1) ) ) )
            )
          )
        )
      )
    )
    (preference teddyBearLandsInBin
      (exists (?b1 - block)
        (then
          (once (not (adjacent ?b1 ?b1) ) )
          (once (on ?r bed) )
          (once (touch ?b1 ?o) )
        )
      )
    )
  )
)
(:terminal
  (>= 4 0 )
)
(:scoring
  (count-unique-positions ballThrownFromBehindBlock:dodgeball)
)
)



(define (game game-id-37) (:domain medium-objects-room-v1)
(:setup
  (exists (?c5 - bridge_block ?b10 - chair)
    (and
      (and
        (game-conserved
          (and
            (in_motion agent)
            (and
              (or
                (not
                  (not
                    (and
                      (on ?p ?b10)
                      (or
                        (in ?l ?b10)
                      )
                    )
                  )
                )
                (in_motion ?c)
              )
              (in_motion ?b10)
            )
            (and
              (agent_holds ?b1)
              (on ?b10 ?d)
            )
          )
        )
        (forall (?b5 - game_object)
          (and
            (not
              (and
                (forall (?d ?h - block ?c - game_object)
                  (and
                    (and
                      (game-conserved
                        (< (distance room_center ?b10) (distance bed ?b7))
                      )
                      (exists (?w - game_object)
                        (exists (?t - game_object)
                          (and
                            (exists (?c5 - (either blue_cube_block cube_block pencil))
                              (game-conserved
                                (in ?t ?w)
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
                (exists (?c3 - flat_block)
                  (forall (?t - (either dodgeball blue_cube_block))
                    (exists (?c - cylindrical_block ?d2 - building)
                      (game-conserved
                        (agent_holds ?c3)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
      (game-conserved
        (on bed ?b)
      )
      (and
        (game-conserved
          (not
            (in_motion ?h)
          )
        )
        (and
          (game-conserved
            (not
              (and
                (in_motion rug)
                (and
                  (agent_holds ?d)
                  (agent_holds ?b10)
                  (not
                    (touch ?b10 ?o)
                  )
                )
                (exists (?bl - pyramid_block ?f - hexagonal_bin)
                  (not
                    (and
                      (adjacent room_center ?o1)
                      (agent_holds ?f)
                    )
                  )
                )
                (agent_holds ?b10)
              )
            )
          )
          (game-optional
            (in_motion ?d)
          )
        )
        (game-conserved
          (on ?b ?b10)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?s - color)
      (and
        (preference throwBallFromOtherBallToBin
          (exists (?h ?h - wall ?o3 - game_object)
            (then
              (hold-while (and (forall (?b - ball) (in ?b ?d) ) (agent_holds ?s) ) (in_motion ?d) )
              (once (agent_holds ?o3) )
              (once (not (not (not (touch ?s ?b) ) ) ) )
            )
          )
        )
        (preference blockCorrectlyPicked
          (exists (?c1 - (either hexagonal_bin desktop) ?b - doggie_bed ?l4 - dodgeball)
            (then
              (once (game_over ) )
              (once (and (< 1 (distance bed ?l4)) ) )
              (once (and (and (not (not (same_color agent ?l4) ) ) (in_motion ?l4) ) (not (exists (?o5 - (either cylindrical_block cellphone) ?s - red_dodgeball) (not (exists (?o - ball) (and (and (in ?l4 ?b) (agent_holds ?s) ) (and (or (in ?s ?o) (and (and (in_motion ?l4) (in_motion ?o) (in_motion ?c) (on ?o ?o) ) (not (in_motion ?s) ) (is_setup_object ?o) ) ) (and (= 1 1) (in_motion ?b) ) ) (not (agent_holds ?w2) ) (not (= 5 (distance ?o ?l4)) ) (not (in ?l2 ?o) ) (same_type ?h drawer) (and (object_orientation ?s sideways) (and (<= (distance ?h ?o) (distance room_center ?l4)) (not (on ?l4 ?s) ) ) ) ) ) ) ) ) (faces bed bed) (object_orientation ?l4 upright) (and (in_motion ?l4) (object_orientation agent upright) (and (agent_holds ?s) (and (not (exists (?h - hexagonal_bin) (not (and (not (not (in_motion ?l) ) ) (not (not (not (touch ?h ?b) ) ) ) ) ) ) ) (and (in ?o ?d) (in ?b ?l4) ) ) ) ) (adjacent ?s ?s) (exists (?d - teddy_bear ?w2 - building) (in_motion ?l4) ) (or (in ?b ?s) (in_motion ?l4) (agent_holds ?s) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (count blockCorrectlyPicked:basketball:green) 4 )
    (not
      (= (+ (count-once blockCorrectlyPicked:yellow) (+ 3 10 )
          (count-once blockCorrectlyPicked:golfball)
          (count-once-per-objects throwBallFromOtherBallToBin:yellow)
        )
        (* 3 (count-once-per-objects blockCorrectlyPicked:yellow:blue_dodgeball) 10 )
      )
    )
  )
)
(:scoring
  (+ 5 10 (count blockCorrectlyPicked:doggie_bed) )
)
)



(define (game game-id-38) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (exists (?r - ball ?c5 - block)
        (not
          (not
            (agent_holds ?b)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballAndBasketballInBin
      (exists (?b - pillow ?s - dodgeball ?o - block)
        (then
          (hold (on ?o ?o) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (<= 1 (count dodgeballAndBasketballInBin:brown:dodgeball:hexagonal_bin) )
      (>= (* (count-once dodgeballAndBasketballInBin:yellow) (* 1 (* (count-once-per-objects dodgeballAndBasketballInBin:beachball) (count dodgeballAndBasketballInBin:cube_block) )
          )
        )
        (total-time)
      )
      (<= (count-once-per-objects dodgeballAndBasketballInBin:tan) 15 )
    )
    (>= 20 (total-score) )
    (>= (count-once-per-objects dodgeballAndBasketballInBin:basketball) (count dodgeballAndBasketballInBin:hexagonal_bin) )
  )
)
(:scoring
  (* (count-once-per-objects dodgeballAndBasketballInBin:dodgeball) 3 )
)
)



(define (game game-id-39) (:domain many-objects-room-v1)
(:setup
  (forall (?p - hexagonal_bin ?b10 - game_object ?c2 - dodgeball ?l3 - cube_block ?h - hexagonal_bin)
    (exists (?o - ball)
      (or
        (or
          (and
            (and
              (game-conserved
                (faces ?o bed)
              )
              (forall (?b - doggie_bed)
                (or
                  (exists (?b - (either desktop triangle_block))
                    (exists (?c2 - game_object)
                      (exists (?p ?b - dodgeball ?o - hexagonal_bin)
                        (game-optional
                          (and
                            (is_setup_object ?w)
                            (not
                              (in_motion ?o)
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToBinFromOppositeWall
      (exists (?b1 - ball)
        (at-end
          (on ?b1 bed)
        )
      )
    )
    (preference dodgeballFromDeskToTarget
      (exists (?d - teddy_bear)
        (then
          (once (adjacent desk ?d) )
          (hold (rug_color_under ?o ?d) )
          (once (and (not (on ?o ?d) ) (agent_holds ?d) ) )
        )
      )
    )
  )
)
(:terminal
  (<= (<= (count-once-per-objects throwToBinFromOppositeWall:pink_dodgeball:cube_block) 1 )
    1
  )
)
(:scoring
  (count throwToBinFromOppositeWall:beachball)
)
)



(define (game game-id-40) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?b1 - block ?o4 - cube_block ?d - curved_wooden_ramp)
      (forall (?d - curved_wooden_ramp)
        (and
          (and
            (game-conserved
              (adjacent ?d ?l)
            )
            (game-optional
              (and
                (in_motion ?d)
                (adjacent ?d ?b6)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?l - pillow)
      (and
        (preference objectOnBed
          (exists (?b1 - doggie_bed)
            (at-end
              (not
                (on ?b1 ?l)
              )
            )
          )
        )
      )
    )
    (preference objectInBuilding
      (exists (?b - dodgeball)
        (then
          (hold (not (not (in_motion ?b) ) ) )
          (once (and (not (on ?o3 ?b) ) (in_motion ?b) ) )
          (once (equal_z_position rug ?b) )
        )
      )
    )
    (forall (?ob - teddy_bear)
      (and
        (preference blockOnBlockInTowerAtEnd
          (exists (?w - teddy_bear)
            (then
              (once-measure (exists (?d2 ?c - dodgeball ?b8 - hexagonal_bin) (adjacent ?c agent) ) (x_position ?ob) )
              (once (not (and (not (and (forall (?b4 - teddy_bear) (not (and (not (and (in_motion ?w) (agent_holds desk) (agent_crouches ) ) ) (in ?t floor) ) ) ) (agent_holds ?w) ) ) (and (in_motion agent) (in ?ob ?w) (in_motion side_table) ) (on ?w ?ob) ) ) )
              (once (agent_holds ?ob) )
              (once (and (in_motion ?ob) (forall (?t - ball) (and (in_motion ?o) (< (distance room_center ?h) (distance agent ?h)) ) ) ) )
            )
          )
        )
        (preference dodgeballBouncesOnceToDoggieBed
          (exists (?t1 - sliding_door)
            (then
              (once (agent_holds ?t1) )
              (hold (on ?ob ?t1) )
              (hold-while (exists (?h - ball) (in_motion ?ob) ) (agent_holds ?t1) (in ?ob ?b) (on ?d ?b) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count objectOnBed:dodgeball:dodgeball) (count objectOnBed:blue_pyramid_block) )
)
(:scoring
  (count dodgeballBouncesOnceToDoggieBed:alarm_clock)
)
)



(define (game game-id-41) (:domain many-objects-room-v1)
(:setup
  (and
    (game-optional
      (in_motion ?g)
    )
  )
)
(:constraints
  (and
    (preference throwToBin
      (exists (?b - triangular_ramp ?h - tall_cylindrical_block)
        (then
          (once (not (>= (distance west_wall ?b) (distance ?h ?b)) ) )
          (hold (and (on ?h ?h) (in_motion ?h) ) )
        )
      )
    )
    (forall (?c2 - ball ?t - curved_wooden_ramp)
      (and
        (preference objectMovedRoomSide
          (exists (?p - cube_block ?o - hexagonal_bin ?d - (either doggie_bed hexagonal_bin))
            (then
              (once (and (on ?b ?o) (= 2 1 (distance ?t floor)) ) )
              (once (agent_holds ?t) )
              (hold (in ?b ?d) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (= 2 (count-once objectMovedRoomSide:pink_dodgeball) )
)
(:scoring
  (+ (count objectMovedRoomSide:basketball) 2 )
)
)



(define (game game-id-42) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (object_orientation rug upright)
  )
)
(:constraints
  (and
    (preference blockFromRugToDesk
      (exists (?h ?o1 - ball ?x - beachball)
        (then
          (hold (not (not (< 9 (distance desk ?b)) ) ) )
          (once (in ?x ?d) )
          (once (in_motion ?t) )
        )
      )
    )
    (preference ballThrownFromBehindBlock
      (exists (?d - dodgeball ?h ?t - red_pyramid_block)
        (then
          (hold (exists (?bl - ball) (in_motion ?h) ) )
          (once (not (and (and (on ?h ?o) (agent_holds ?h) ) (above ?h ?t) ) ) )
          (once (and (not (agent_holds agent) ) (not (and (on ?d ?h) (agent_holds ?h) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (< (- 180 )
    (total-time)
  )
)
(:scoring
  (count blockFromRugToDesk:beachball)
)
)



(define (game game-id-43) (:domain few-objects-room-v1)
(:setup
  (forall (?bl - bridge_block)
    (exists (?c - ball ?h - ball)
      (game-conserved
        (in_motion ?bl)
      )
    )
  )
)
(:constraints
  (and
    (preference laptopAndBookInPlace
      (exists (?l ?h - building ?d - (either book dodgeball))
        (then
          (once (not (agent_holds ?d) ) )
          (once (agent_holds ?d) )
          (hold-while (and (agent_holds ?o1) (in_motion ?g) ) (agent_holds ?c) (and (not (touch ?d ?d) ) (in_motion ?c) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-increasing-measure laptopAndBookInPlace:pink) (count laptopAndBookInPlace:golfball:pink_dodgeball) )
)
(:scoring
  (+ (count-longest laptopAndBookInPlace:block:beachball) 6 3 (count-unique-positions laptopAndBookInPlace:dodgeball:red:basketball) (count laptopAndBookInPlace:beachball) (* 5 (count laptopAndBookInPlace:yellow) )
  )
)
)



(define (game game-id-44) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (on ?d ?o2)
  )
)
(:constraints
  (and
    (preference objectInBuilding
      (exists (?p3 - game_object)
        (then
          (hold (and (agent_holds ?r) (in_motion ?p3) ) )
          (hold (not (and (and (not (between ?p3 ?c ?c) ) (not (in_motion ?d) ) (and (not (and (in ?d ?b) (in_motion ?b) ) ) (not (and (in_motion bed) (on ?p3 ?p3) ) ) ) ) (agent_holds ?p3) ) ) )
          (once (agent_holds ?p3) )
          (once (and (and (not (and (rug_color_under ?p3 tan) (on ?p3 ?d) ) ) (not (and (exists (?h - ball ?h - hexagonal_bin ?b - (either cellphone wall)) (not (agent_holds ?h) ) ) (and (exists (?h - hexagonal_bin) (and (in_motion ?b) (on ?d ?h) ) ) (on ?p3 ?p3) ) ) ) ) (adjacent_side door back ?p3) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (or
        (>= (count objectInBuilding:yellow) (total-score) )
        (and
          (>= 10 (count-once-per-objects objectInBuilding:hexagonal_bin) )
          (>= (count objectInBuilding:yellow) 30 )
          (not
            (>= (* 10 (* (count-once-per-objects objectInBuilding:doggie_bed:beachball) (count objectInBuilding:dodgeball) 4 (* (count objectInBuilding:dodgeball) (- 3 )
                    (count objectInBuilding:orange:dodgeball)
                    8
                    (+ (count-once-per-objects objectInBuilding:golfball) 2 )
                    (external-forall-maximize
                      (+ (count objectInBuilding:blue_dodgeball:blue_dodgeball) (count objectInBuilding:dodgeball) )
                    )
                    3
                    (count objectInBuilding:dodgeball:golfball)
                    (* 5 2 10 )
                  )
                  3
                  (-
                    2
                    (count-once-per-objects objectInBuilding:yellow)
                  )
                  15
                  4
                  (+ (count-once-per-objects objectInBuilding:pyramid_block:golfball) 5 )
                  5
                  (count objectInBuilding:beachball)
                  16
                )
              )
              (count-once-per-objects objectInBuilding:dodgeball)
            )
          )
        )
      )
      (>= 5 (external-forall-maximize (count-once-per-objects objectInBuilding:purple) ) )
    )
    (>= (external-forall-maximize (count-once-per-objects objectInBuilding:dodgeball) ) 0 )
  )
)
(:scoring
  (count-once-per-objects objectInBuilding)
)
)



(define (game game-id-45) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?r - dodgeball)
      (game-optional
        (agent_holds ?l)
      )
    )
    (forall (?h - dodgeball)
      (forall (?o - (either chair bridge_block))
        (forall (?t - building)
          (not
            (game-optional
              (in ?t ?o1)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballFromRugToBin
      (exists (?b ?r ?o ?b - watch)
        (then
          (once-measure (on ?o ?o) (distance agent ?b) )
          (once (in ?d ?b) )
          (once (on ?g ?r) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (or
        (<= (external-forall-minimize (count-measure dodgeballFromRugToBin:red) ) (count dodgeballFromRugToBin:block) )
        (>= (count dodgeballFromRugToBin:pink) (total-time) )
      )
      (or
        (> (+ 15 30 )
          3
        )
        (>= (+ (- 6 )
            10
          )
          6
        )
      )
      (or
        (>= (count-once-per-objects dodgeballFromRugToBin:pink) (* (count dodgeballFromRugToBin:basketball) (count dodgeballFromRugToBin:pink:purple) )
        )
        (> 2 2 )
      )
    )
    (>= (total-time) (count dodgeballFromRugToBin) )
  )
)
(:scoring
  (* (* 10 (count-once-per-objects dodgeballFromRugToBin:orange) )
    (count-once-per-objects dodgeballFromRugToBin:yellow)
    (* (* (count dodgeballFromRugToBin:basketball) 15 2 )
      5
    )
    3
  )
)
)



(define (game game-id-46) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-conserved
      (object_orientation ?d upside_down)
    )
  )
)
(:constraints
  (and
    (forall (?tb - hexagonal_bin)
      (and
        (preference throwAttempt
          (exists (?d - wall)
            (at-end
              (touch ?tb ?tb)
            )
          )
        )
        (preference blocksInPlace
          (exists (?h - dodgeball)
            (then
              (once (in ?h agent) )
              (once (and (forall (?b - chair) (touch ?b ?ob) ) (agent_holds ?h) ) )
              (once (agent_holds ?tb) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (= (count-once-per-objects throwAttempt:pink_dodgeball) (total-time) )
)
(:scoring
  (- 4 )
)
)



(define (game game-id-47) (:domain many-objects-room-v1)
(:setup
  (forall (?h - ball)
    (and
      (game-optional
        (agent_holds ?g)
      )
      (game-conserved
        (in_motion ?h)
      )
      (game-optional
        (and
          (and
            (not
              (in_motion ?d1)
            )
            (agent_holds ?h)
          )
          (and
            (< 0.5 (distance ?h ?h))
            (same_object ?h ?h)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference baseBlockInTowerAtEnd
      (exists (?d - (either book cylindrical_block) ?b3 - pillow)
        (then
          (hold (in_motion ?b) )
          (once (in_motion ?d) )
          (once (and (and (in_motion ?b3) ) (and (= 1 4) (on ?c ?b3) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (<= (count-once-per-objects baseBlockInTowerAtEnd:beachball:hexagonal_bin) (count-once-per-objects baseBlockInTowerAtEnd:beachball) )
    (or
      (or
        (>= (count baseBlockInTowerAtEnd:basketball) (total-score) )
        (and
          (or
            (>= (total-time) (count baseBlockInTowerAtEnd) )
          )
          (= (total-score) 9 )
        )
      )
    )
  )
)
(:scoring
  (external-forall-maximize
    (= (- 2 (+ (* 3 (count baseBlockInTowerAtEnd:pyramid_block) )
          (count baseBlockInTowerAtEnd:beachball)
        )
      )
      (* 10 (count baseBlockInTowerAtEnd:red:beachball) )
    )
  )
)
)



(define (game game-id-48) (:domain few-objects-room-v1)
(:setup
  (forall (?o - game_object)
    (game-optional
      (agent_holds ?b)
    )
  )
)
(:constraints
  (and
    (preference throwKnocksBlock
      (exists (?o - hexagonal_bin ?h - (either alarm_clock dodgeball) ?c - building)
        (then
          (once (in ?c ?o) )
          (hold (in_motion ?b5) )
          (once (and (or (on ?c ?b) (and (and (in_motion ?c) (agent_holds ?c) ) (and (broken ?b) (and (not (and (not (and (in_motion ?h) (and (in_motion ?d) (and (not (faces ?b ?c) ) (game_start ) ) ) ) ) (in ?c ?c) ) ) (agent_holds ?c) ) ) ) ) (adjacent ?d ?c) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (* (* (count-increasing-measure throwKnocksBlock:dodgeball:doggie_bed) (count throwKnocksBlock:pink:basketball:dodgeball) )
        5
      )
      (count-overlapping throwKnocksBlock)
    )
    5
  )
)
(:scoring
  (* 10 (* (count-measure throwKnocksBlock:cube_block) )
  )
)
)



(define (game game-id-49) (:domain many-objects-room-v1)
(:setup
  (forall (?h - beachball)
    (game-conserved
      (and
        (adjacent ?t1 ?c)
        (in_motion ?h)
      )
    )
  )
)
(:constraints
  (and
    (forall (?db - dodgeball ?o - hexagonal_bin)
      (and
        (preference objectWithMatchingColor
          (exists (?c6 - drawer)
            (then
              (once (in_motion ?b) )
              (hold (< (distance agent ?o) (distance ?c6 ?c6)) )
              (hold (equal_x_position ?c6 ?o) )
            )
          )
        )
        (preference pyramidBlockAtopTowerAtEnd
          (exists (?s ?l3 ?c3 - block ?w - wall ?t1 - cube_block)
            (then
              (hold (and (agent_holds ?t1) (on ?o ?s) ) )
              (hold (agent_holds ?d) )
              (hold (is_setup_object ?b) )
              (hold (and (open ?l1) (not (and (in_motion ?o) (exists (?c - yellow_cube_block ?b - building ?b - hexagonal_bin ?h ?d1 - game_object) (and (adjacent_side agent front ?r) (in_motion ?d) (agent_holds ?r) ) ) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 1 (count-once-per-objects pyramidBlockAtopTowerAtEnd:cube_block) )
)
(:scoring
  (count-once-per-objects pyramidBlockAtopTowerAtEnd:basketball)
)
)



(define (game game-id-50) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (adjacent agent ?d)
  )
)
(:constraints
  (and
    (preference towerFallsWhileBuilding
      (exists (?c - hexagonal_bin ?b4 - game_object ?d ?o - shelf ?p - cube_block)
        (at-end
          (not
            (< (distance_side desk ?p ?p front) (distance ?c ?l2))
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count towerFallsWhileBuilding:pink) (* 3 5 )
  )
)
(:scoring
  (count towerFallsWhileBuilding:pink)
)
)



(define (game game-id-51) (:domain few-objects-room-v1)
(:setup
  (exists (?l1 - hexagonal_bin)
    (exists (?b - game_object)
      (forall (?f - game_object ?b - hexagonal_bin)
        (exists (?d - ball ?r - dodgeball ?b - curved_wooden_ramp ?d - dodgeball)
          (exists (?r - ball)
            (game-conserved
              (and
                (exists (?w1 - block)
                  (agent_holds ?r)
                )
                (not
                  (agent_holds ?h)
                )
                (opposite ?p2 ?r)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockPlacedInBuilding
      (exists (?h - ball)
        (then
          (hold (in_motion ?h) )
        )
      )
    )
    (preference blockIncorrectlyPicked
      (exists (?c - hexagonal_bin ?b4 - dodgeball ?l1 - desk_shelf ?d - (either pillow cylindrical_block))
        (then
          (once (agent_holds ?d) )
          (once (not (in_motion ?l2) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count blockIncorrectlyPicked:red:pink_dodgeball) (external-forall-maximize (count blockIncorrectlyPicked:golfball) ) )
)
(:scoring
  (count-once-per-objects blockPlacedInBuilding:golfball)
)
)



(define (game game-id-52) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?r1 - hexagonal_bin)
      (and
        (and
          (game-conserved
            (not
              (in ?d rug)
            )
          )
          (exists (?b - beachball)
            (game-optional
              (agent_holds ?b)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwFromDoorToBin
      (exists (?b10 - dodgeball)
        (then
          (once (in ?g ?b10) )
          (hold (same_color ?b10 ?tb) )
          (hold-while (agent_holds ?d) (in ?b agent) )
          (once (and (in_motion agent) (exists (?o1 - dodgeball) (toggled_on ?o1) ) ) )
          (once (< 1 4) )
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (>= (total-time) (count throwFromDoorToBin:dodgeball) )
      (>= (* 6 15 )
        0
      )
      (or
        (>= 300 1 )
        (or
          (< (count throwFromDoorToBin:hexagonal_bin:green) (* 300 2 )
          )
          (> (+ 5 5 )
            (count-once-per-objects throwFromDoorToBin:yellow)
          )
        )
      )
    )
    (> 10 (total-score) )
  )
)
(:scoring
  (count throwFromDoorToBin:golfball)
)
)



(define (game game-id-53) (:domain medium-objects-room-v1)
(:setup
  (or
    (exists (?b9 ?r - chair)
      (game-conserved
        (in ?r ?r)
      )
    )
    (exists (?d - (either dodgeball yellow_cube_block))
      (forall (?p - chair)
        (and
          (game-conserved
            (in_motion ?g)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference laptopAndBookInPlace
      (exists (?w1 - hexagonal_bin)
        (then
          (hold (on ?c ?w1) )
          (hold (in ?w1 desk) )
          (once (in ?w1 ?b) )
        )
      )
    )
    (preference ballThrownFromRug
      (exists (?o - cube_block)
        (then
          (once (< 1 (distance ?o ?o)) )
          (once (and (in_motion ?o) (not (on ?o green_golfball) ) ) )
          (once (and (in_motion ?d) (in_motion ?bl) ) )
        )
      )
    )
    (preference throwToRampToBin
      (exists (?b - hexagonal_bin)
        (then
          (once (and (and (broken ?o) (and (not (object_orientation agent upright) ) (and (and (touch ?b ?b) (adjacent_side ?b ?b agent) (in_motion ?b) ) (agent_holds ?b) ) ) ) (on ?b agent) (and (agent_holds ?p) (exists (?d - hexagonal_bin) (in_motion ?b) ) ) (touch ?b rug) ) )
          (once (object_orientation ?d ?b) )
          (once (and (not (above ?d ?c) ) (and (broken ?b) (and (adjacent bed agent) (in_motion ?l1) (not (adjacent_side ?b front ?c) ) (not (in_motion ?b) ) (agent_holds ?b) (game_over ) ) (= (x_position ?b) 0) ) ) )
        )
      )
    )
    (preference throwInBin
      (exists (?o3 - book ?b - curved_wooden_ramp)
        (then
          (once (in_motion ?b) )
          (once (in_motion ?b) )
          (once (and (agent_holds ?t) (not (< (distance room_center ?b) (distance agent ?t)) ) ) )
        )
      )
    )
  )
)
(:terminal
  (< (external-forall-maximize (* (count-once throwInBin:beachball) 5 )
    )
    2
  )
)
(:scoring
  (count-once-per-objects laptopAndBookInPlace:doggie_bed:golfball)
)
)



(define (game game-id-54) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (and
        (forall (?b9 - ball)
          (and
            (exists (?r - (either teddy_bear ball laptop))
              (exists (?d - (either basketball pyramid_block) ?g ?c1 - hexagonal_bin)
                (and
                  (exists (?d - doggie_bed)
                    (game-optional
                      (in ?b4 ?g)
                    )
                  )
                  (and
                    (forall (?c - pyramid_block ?d - ball)
                      (game-optional
                        (agent_holds ?b9)
                      )
                    )
                    (exists (?c - (either pencil side_table))
                      (game-conserved
                        (or
                          (not
                            (in_motion ?c1)
                          )
                          (and
                            (not
                              (not
                                (and
                                  (not
                                    (in_motion ?b5)
                                  )
                                  (and
                                    (and
                                      (adjacent_side room_center front ?c1 front)
                                      (= (building_size ?c) 3 1)
                                    )
                                    (in_motion ?b9)
                                  )
                                )
                              )
                            )
                            (< 1 (x_position ?c))
                          )
                        )
                      )
                    )
                    (game-conserved
                      (and
                        (and
                          (not
                            (not
                              (not
                                (toggled_on ?b)
                              )
                            )
                          )
                          (and
                            (<= (distance_side ?r right ?d) 7)
                            (exists (?h - cube_block)
                              (in_motion ?b9)
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
            (and
              (and
                (and
                  (game-conserved
                    (not
                      (on ?b9 ?b9)
                    )
                  )
                )
              )
            )
          )
        )
        (exists (?h - dodgeball)
          (exists (?p - (either dodgeball book))
            (and
              (and
                (and
                  (game-conserved
                    (or
                      (not
                        (< (distance ?w1 ?b3) 1)
                      )
                      (toggled_on ?p)
                    )
                  )
                )
                (game-conserved
                  (same_type ?h ?h)
                )
                (forall (?h - hexagonal_bin)
                  (game-optional
                    (in_motion rug)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c - dodgeball)
      (and
        (preference objectLandsInBin
          (exists (?d - ball ?o - hexagonal_bin)
            (then
              (once (in ?o ?b) )
              (once (and (adjacent ?w1 ?o) (game_start ) ) )
              (once (not (equal_z_position agent ?o) ) )
            )
          )
        )
        (preference ballThrownToBin
          (exists (?db - game_object)
            (then
              (once (in_motion ?db) )
              (once (and (and (on ?db ?c) (not (and (agent_holds ?db) (and (in_motion ?c) (in_motion ?g) (and (and (on ?b ?c) (agent_holds ?c) ) (in_motion ?b) ) (not (and (in_motion ?b) (and (in ?c ?db) (agent_holds floor) ) ) ) ) ) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> 300 3 )
)
(:scoring
  (+ (- (* (* (count ballThrownToBin:purple) 30 )
        (+ (* (/ 1 (count-once ballThrownToBin:dodgeball) ) 5 )
        )
        1
        (* (* 5 5 )
          (* (- (- (>= (count objectLandsInBin:orange) (count objectLandsInBin:purple:red) )
              )
            )
            (* (count-once-per-objects objectLandsInBin) (count ballThrownToBin:red) 30 )
          )
        )
        (* (+ (count objectLandsInBin:blue_pyramid_block) (count ballThrownToBin:dodgeball) )
          (* (* (+ (* (count ballThrownToBin:cube_block) (count-once-per-objects ballThrownToBin:blue_dodgeball) )
                1
                3
              )
              5
            )
            10
          )
        )
        (* (* (count-once-per-objects objectLandsInBin:white) (count-once-per-objects objectLandsInBin:yellow) )
          (count-once ballThrownToBin:golfball:beachball)
        )
      )
    )
    5
  )
)
)



(define (game game-id-55) (:domain medium-objects-room-v1)
(:setup
  (exists (?g - hexagonal_bin)
    (and
      (exists (?b ?l ?d - hexagonal_bin)
        (game-conserved
          (exists (?w - ball ?d - game_object)
            (in_motion desk)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference golfballLandsInBinThroughRamp
      (exists (?b - (either alarm_clock bed) ?l - hexagonal_bin ?r - (either dodgeball hexagonal_bin) ?c2 - (either curved_wooden_ramp dodgeball teddy_bear))
        (then
          (once (and (not (and (agent_holds ?l3) (and (not (and (adjacent desk ?c2) (in_motion ?d) ) ) (not (not (and (agent_holds bed) (not (agent_holds ?c2) ) ) ) ) ) ) ) (on ?c2 ?g) (on agent ?c2) ) )
          (once (and (in_motion ?d) (and (in_motion ?c2) (and (on ?c2 ?c2) (forall (?c - building) (agent_holds agent) ) (not (agent_holds ?c2) ) ) ) ) )
          (hold (agent_holds ?c2) )
        )
      )
    )
    (preference blockKnockedFromBuildingInBin
      (exists (?d - cube_block ?c1 - pillow ?d - doggie_bed)
        (at-end
          (touch ?b ?b3)
        )
      )
    )
    (forall (?h - triangular_ramp)
      (and
        (preference dodgeballHitsPillowWithoutTouchingBlock
          (exists (?r2 ?l2 - hexagonal_bin)
            (then
              (once (and (in ?d ?d) (adjacent agent ?c4) ) )
              (hold (agent_holds ?g) )
              (hold (in_motion ?g) )
            )
          )
        )
        (preference ballDroppedInBin
          (exists (?g - pyramid_block ?g - ball ?c - ball)
            (then
              (once (not (in_motion ?b) ) )
              (hold (and (same_type ?h block) (and (not (in_motion ?c) ) (not (in_motion ?c) ) ) ) )
              (once (agent_holds ?c) )
            )
          )
        )
        (preference thrownBallReachesEnd
          (exists (?o - (either alarm_clock basketball))
            (then
              (once (not (or (between ?d ?h ?h) (agent_holds ?b) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (total-time) (count ballDroppedInBin:green) )
  )
)
(:scoring
  (* (* (* 8 (count-overlapping golfballLandsInBinThroughRamp:golfball:beachball) )
      6
    )
  )
)
)



(define (game game-id-56) (:domain few-objects-room-v1)
(:setup
  (forall (?c - dodgeball ?p - dodgeball)
    (game-conserved
      (in_motion north_wall)
    )
  )
)
(:constraints
  (and
    (preference throwAttemptFromDoor
      (exists (?b - pillow)
        (then
          (once (and (not (not (and (exists (?d - game_object) (not (not (adjacent ?h ?b) ) ) ) (not (same_color ?h ?b) ) ) ) ) (on ?b ?b) ) )
          (hold (in_motion ?b) )
          (hold-while (agent_crouches ) (not (exists (?w - (either alarm_clock hexagonal_bin dodgeball pyramid_block cellphone blue_cube_block main_light_switch)) (and (agent_holds ?w) (agent_holds ?w) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count throwAttemptFromDoor:dodgeball) (count throwAttemptFromDoor) )
)
(:scoring
  (- 8 )
)
)



(define (game game-id-57) (:domain few-objects-room-v1)
(:setup
  (forall (?w1 - teddy_bear ?s - ball)
    (exists (?p ?g - doggie_bed)
      (exists (?c3 - dodgeball ?b - (either cellphone cube_block))
        (game-conserved
          (on ?s ?d)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownHitsAgent
      (exists (?b2 - ball)
        (then
          (once-measure (and (not (touch ?b2 ?b2) ) (touch ?b2 ?b2) ) (distance ?b2 ?b2) )
          (once (exists (?h - hexagonal_bin) (exists (?b - hexagonal_bin ?c - curved_wooden_ramp ?c - building ?d - triangular_ramp) (and (and (in_motion ?t) (and (toggled_on ?r) (agent_holds ?d) ) ) (in ?h ?b2) (not (or (in_motion ?r) (agent_holds ?b2) ) ) (agent_holds ?b) (< (distance ?h ?b2) (building_size ?d)) (in_motion ?b2) (or (agent_holds ?b2) (and (not (on ?c3 ?b) ) (agent_holds ?b) ) ) ) ) ) )
          (once (above ?b2 ?b2) )
        )
      )
    )
    (forall (?x - game_object)
      (and
        (preference ballOnBedAtEnd
          (then
            (once (in_motion ?b) )
            (once (and (and (exists (?b - triangular_ramp) (and (agent_holds ?c) (and (in_motion ?b) (not (between ?o ?l ?b) ) (and (and (agent_holds ?b) (on ?x ?x) ) (< (distance_side ?x ?b ?x) 1) ) ) ) ) (and (in_motion rug) (on ?x ?x) ) ) (and (object_orientation ?o upright) (and (and (and (on ?x ?x) (in_motion ?x) ) (in_motion ?o) (and (not (and (game_start ) (adjacent desk ?b) (< 1 1) ) ) (on ?x ?b) ) ) (between ?d ?o ?b) ) ) ) )
            (once (not (not (same_type ?d ?l3) ) ) )
          )
        )
        (preference throwToBinFromOppositeWall
          (exists (?b1 - (either beachball hexagonal_bin laptop))
            (then
              (once (and (= 5 (distance ?h ?l)) (agent_holds ?h) ) )
              (once (in ?b1 ?b1) )
              (hold (or (and (not (adjacent_side ?w1 front_left_corner ?x left) ) (not (agent_holds ?c) ) ) (not (and (equal_z_position ?h ?l2) (and (not (and (same_color ?g ?x) (not (agent_holds ?x) ) ) ) (in_motion ?b) (agent_holds ?x) ) (adjacent ?b1 ?b1) ) ) ) )
            )
          )
        )
        (preference objectMoved
          (exists (?b5 - chair)
            (then
              (once (not (in_motion ?b5) ) )
              (hold (in ?c ?x) )
              (once (on ?d ?b5) )
            )
          )
        )
      )
    )
    (forall (?p - dodgeball)
      (and
        (preference objectToBinOnFirstTry
          (exists (?b - (either dodgeball wall))
            (then
              (hold-while (in_motion ?c2) (agent_holds ?b) )
              (once (or (<= (distance_side desk left ?b) 2) (in_motion ?b) ) )
              (once (in_motion ?b) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (and
      (>= (count ballOnBedAtEnd:red) (count-once-per-objects ballOnBedAtEnd:pink_dodgeball) )
      (>= 1 (count objectMoved:pink_dodgeball:dodgeball) )
    )
  )
)
(:scoring
  (<= (/ (count-once-per-objects objectMoved:blue_pyramid_block:dodgeball) (count-measure ballOnBedAtEnd:basketball) ) 3 )
)
)



(define (game game-id-58) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c2 - teddy_bear)
      (and
        (exists (?bl - chair)
          (forall (?d ?bl - wall ?o2 - curved_wooden_ramp ?b7 ?c - cube_block)
            (forall (?r - bridge_block)
              (exists (?b - wall ?b3 ?s - (either cellphone top_drawer))
                (forall (?h - game_object ?ob - hexagonal_bin)
                  (game-conserved
                    (on ?bl ?r)
                  )
                )
              )
            )
          )
        )
        (game-optional
          (in_motion floor)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference brownObjectMovedToRoomCenter
      (exists (?s - cube_block)
        (then
          (once (not (in_motion ?s) ) )
          (once (in_motion ?b) )
          (once (and (<= (distance agent ?c2) 1) (exists (?d - dodgeball) (not (agent_holds ?b) ) ) (on ?s ?b) (on ?s floor) ) )
        )
      )
    )
    (preference matchingBuildingBuilt
      (exists (?g - drawer ?b7 - curved_wooden_ramp ?c - bridge_block ?ob - dodgeball)
        (at-end
          (on ?ob ?c)
        )
      )
    )
  )
)
(:terminal
  (>= (* (count-once matchingBuildingBuilt:cube_block:golfball) (count brownObjectMovedToRoomCenter:beachball) )
    4
  )
)
(:scoring
  (count brownObjectMovedToRoomCenter:dodgeball)
)
)



(define (game game-id-59) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?o - game_object)
      (forall (?w - ball ?d - hexagonal_bin ?l2 - hexagonal_bin)
        (game-conserved
          (and
            (> (distance door ?w2) (x_position ?o))
            (agent_holds ?d)
          )
        )
      )
    )
    (game-conserved
      (agent_holds ?d)
    )
    (forall (?o1 - teddy_bear ?s - dodgeball)
      (game-conserved
        (same_type ?b ?s)
      )
    )
  )
)
(:constraints
  (and
    (preference cubeBlockThrowAttempt
      (exists (?c - teddy_bear)
        (then
          (once (in ?b ?c) )
          (once (on ?d ?c) )
          (once (not (not (on ?o ?c) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count cubeBlockThrowAttempt:golfball:yellow:dodgeball) (count cubeBlockThrowAttempt:dodgeball) )
)
(:scoring
  (* (count-longest cubeBlockThrowAttempt:purple) (external-forall-maximize (count-once-per-external-objects cubeBlockThrowAttempt:beachball) ) (= (count cubeBlockThrowAttempt:book) (* 5 (count cubeBlockThrowAttempt:golfball) )
    )
  )
)
)



(define (game game-id-60) (:domain many-objects-room-v1)
(:setup
  (forall (?s - ball ?t2 - (either dodgeball golfball) ?g - curved_wooden_ramp)
    (and
      (exists (?w - hexagonal_bin)
        (game-optional
          (agent_holds ?w)
        )
      )
      (game-conserved
        (>= 1 2)
      )
    )
  )
)
(:constraints
  (and
    (forall (?b4 - hexagonal_bin ?b - color)
      (and
        (preference nonBlockPlacedInBuilding
          (exists (?g - dodgeball)
            (then
              (hold-while (and (and (and (not (agent_holds pink_dodgeball) ) (agent_holds ?d) ) (and (not (and (agent_holds ?h) (> 5 7) (or (and (toggled_on ?g) (not (and (not (on ?g ?b) ) (in_motion ?b) ) ) ) (adjacent room_center ?d) (not (in_motion ?g) ) ) ) ) (agent_holds ?b) ) ) (not (on ?b ?b) ) (agent_holds ?d) (in ?b ?r) (not (on agent ?b) ) (in ?g desk) ) (adjacent desk ?b) (touch ?g ?b) (and (on bed ?g) (and (and (not (in_motion ?g) ) (< 0.5 (x_position ?b)) (agent_holds ?g) ) (object_orientation ?d upside_down) ) ) )
              (hold-while (on ?b ?b) (and (adjacent_side desk right ?g back) (agent_holds bed) ) (and (on ?h ?d) (adjacent ?b bed) ) )
              (once (and (agent_holds ?g) (and (agent_holds ?g) (in_motion desk) ) ) )
              (once (not (agent_holds ?g) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once nonBlockPlacedInBuilding:blue) (count nonBlockPlacedInBuilding:dodgeball) )
)
(:scoring
  (- (* (+ 3 )
      (count-longest nonBlockPlacedInBuilding:beachball)
    )
  )
)
)



(define (game game-id-61) (:domain medium-objects-room-v1)
(:setup
  (exists (?c3 - hexagonal_bin)
    (game-conserved
      (and
        (adjacent agent ?c)
        (in_motion ?c)
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballHitsPillowWithoutTouchingBlock
      (exists (?d ?h ?b5 ?d ?d ?b5 - doggie_bed)
        (then
          (once (agent_holds ?d) )
          (hold-while (in ?h ?d) (not (not (and (in_motion ?b) (adjacent ?b5 ?d) ) ) ) )
          (once (and (not (agent_holds ?d) ) (same_color ?o pink) ) )
        )
      )
    )
    (forall (?c6 - ball)
      (and
        (preference throwObjectToBin
          (exists (?b6 - hexagonal_bin ?w2 - hexagonal_bin)
            (at-end
              (same_type ?o ?w2)
            )
          )
        )
        (preference blockPickedUp
          (exists (?tb - ball)
            (then
              (hold (agent_holds ?tb) )
              (once (not (and (in_motion ?h) (in_motion floor) ) ) )
              (once (and (and (agent_holds ?o) (not (in_motion ?tb) ) ) (agent_holds ?c6) ) )
            )
          )
        )
      )
    )
    (preference ballThrowAttempt
      (exists (?c ?w ?o ?l2 ?d ?h ?o3 ?t ?o ?h - teddy_bear)
        (then
          (once (and (agent_holds ?o) (< 10 (distance ?d ?d)) ) )
          (hold (same_color ?d pink) )
          (hold (and (adjacent ?o3 ?l1) (and (not (on ?h ?l2) ) (in ?b1 ?t) ) (agent_holds ?d) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 5 3 )
    (>= (- (count-once-per-objects ballThrowAttempt:dodgeball) )
      (count-shortest blockPickedUp:dodgeball)
    )
  )
)
(:scoring
  (count-once-per-objects ballThrowAttempt:green:yellow)
)
)



(define (game game-id-62) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (not
      (in_motion ?r)
    )
  )
)
(:constraints
  (and
    (preference watchOnShelf
      (exists (?c2 - hexagonal_bin)
        (then
          (once (and (agent_holds ?c2) (and (game_over ) (in_motion agent) ) ) )
          (hold-while (agent_holds ?c) (same_type ?c2 block) (not (agent_holds ?o2) ) )
          (once (< 8 10) )
        )
      )
    )
  )
)
(:terminal
  (> (total-time) (external-forall-maximize (* (+ (* (count watchOnShelf:pink:cube_block) (count watchOnShelf:red) )
          3
        )
        (count watchOnShelf:dodgeball:pyramid_block)
      )
    )
  )
)
(:scoring
  (* (count-once-per-objects watchOnShelf:pink:dodgeball) 2 )
)
)



(define (game game-id-63) (:domain few-objects-room-v1)
(:setup
  (and
    (game-optional
      (not
        (not
          (forall (?p2 - pillow ?o ?b - dodgeball)
            (on ?g ?b)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockIncorrectlyPicked
      (exists (?w - chair)
        (then
          (once (or (in_motion ?w) (touch ?o3 ?w) ) )
          (once (not (adjacent ?w ?c) ) )
          (once (in ?c2 ?w) )
        )
      )
    )
    (preference objectToBinOnFirstTry
      (exists (?h - hexagonal_bin ?l - golfball ?h ?tb - (either dodgeball key_chain))
        (then
          (once (not (and (open ?h) (agent_holds ?h) ) ) )
          (once (not (touch ?l1 ?d) ) )
          (hold (touch ?tb ?tb) )
        )
      )
    )
  )
)
(:terminal
  (= (* (count blockIncorrectlyPicked:dodgeball) (count blockIncorrectlyPicked:basketball) )
    (count blockIncorrectlyPicked:beachball)
  )
)
(:scoring
  (+ (count objectToBinOnFirstTry:side_table) (* 3 (+ (count-once-per-external-objects blockIncorrectlyPicked:red:dodgeball) 6 )
    )
  )
)
)



(define (game game-id-64) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (not
      (= 1 2)
    )
  )
)
(:constraints
  (and
    (preference dropAttempt
      (exists (?ob - tall_cylindrical_block)
        (at-end
          (adjacent ?h ?ob)
        )
      )
    )
  )
)
(:terminal
  (>= (count-unique-positions dropAttempt:green) (+ 3 (count dropAttempt:pink) )
  )
)
(:scoring
  (count-once-per-objects dropAttempt:red:beachball)
)
)



(define (game game-id-65) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?l4 - cube_block)
      (and
        (game-conserved
          (and
            (same_object ?d ?l4)
            (not
              (< (distance ?w1 ?l4) (distance ?l4 ?l4))
            )
          )
        )
        (game-optional
          (= 0 (distance ?h agent))
        )
      )
    )
    (game-conserved
      (touch ?d ?p)
    )
  )
)
(:constraints
  (and
    (forall (?g - hexagonal_bin)
      (and
        (preference blockInTowerKnockedByDodgeball
          (exists (?b1 - hexagonal_bin ?c3 - dodgeball ?c1 - game_object ?h - shelf)
            (at-end
              (game_over )
            )
          )
        )
        (preference ballKnocksTeddy
          (then
            (hold (rug_color_under pink_dodgeball green) )
            (once (and (in agent ?d) (in_motion ?d) ) )
            (hold (faces ?b ?g) )
            (once (= 1 1) )
          )
        )
      )
    )
    (preference objectInBuilding
      (exists (?d - (either pen cube_block dodgeball) ?t2 - dodgeball)
        (then
          (once (or (on ?t2 ?t2) (agent_holds ?g) ) )
          (once (not (game_over ) ) )
          (once (and (not (open ?t) ) (in_motion ?d) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (* (count blockInTowerKnockedByDodgeball:golfball:basketball) 5 )
  )
)
(:scoring
  (* (count objectInBuilding) (count blockInTowerKnockedByDodgeball:green:basketball) )
)
)



(define (game game-id-66) (:domain medium-objects-room-v1)
(:setup
  (exists (?b - (either flat_block hexagonal_bin alarm_clock))
    (game-conserved
      (and
        (touch ?d ?b)
        (= (distance room_center ?b) 3)
        (and
          (in ?h ?l)
          (equal_z_position ?c ?b)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballDroppedInBin
      (exists (?g - hexagonal_bin ?c - (either desktop dodgeball bridge_block))
        (then
          (once (< 1 (distance ?c ?c)) )
          (hold-while (same_type ?h block) (exists (?d - ball) (in ?c ?d) ) (in bed ?c) (not (and (and (in ?c ?tb) (forall (?c - doggie_bed ?t - doggie_bed ?p3 - block) (and (adjacent ?h ?p3) (not (agent_holds ?d) ) ) ) (and (and (and (in_motion ?r) (in_motion ?o) ) ) (not (in_motion ?c) ) ) ) (and (exists (?d - (either book wall cube_block pyramid_block)) (agent_holds ?d) ) (not (in_motion ?c) ) ) (in ?c ?c) ) ) )
          (once (not (not (in_motion ?b) ) ) )
        )
      )
    )
    (preference blockPlacedInBuilding
      (exists (?h - block)
        (then
          (once (and (in_motion bed) (not (agent_holds ?d) ) ) )
          (hold-while (in_motion desk) (adjacent ?h ?h) )
          (once (not (adjacent_side agent front ?h left) ) )
        )
      )
    )
    (preference beachballBouncedOffRamp
      (exists (?b ?b - doggie_bed)
        (then
          (once (and (touch ?b ?b) (in_motion ?b) ) )
          (once (and (agent_holds ?b) (and (agent_holds ?p2) (and (or (adjacent ?d ?b) (agent_holds pink_dodgeball) (equal_z_position agent ?b) ) (and (and (agent_holds ?ob) (agent_holds ?b) (agent_holds ?b) (and (and (not (not (not (agent_holds ?d) ) ) ) (agent_holds ?o4) ) (in_motion ?d) ) ) (not (not (and (on ?b ?b) ) ) ) ) ) ) (in_motion ?t) (and (agent_holds ?d) (not (in_motion ?b) ) (agent_holds ?b) ) ) )
          (once (is_setup_object ?b) )
        )
      )
    )
  )
)
(:terminal
  (> (total-score) 10 )
)
(:scoring
  (count blockPlacedInBuilding:doggie_bed)
)
)



(define (game game-id-67) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (exists (?c - game_object)
      (object_orientation ?c1 upright)
    )
  )
)
(:constraints
  (and
    (preference throwAttemptFromBehindBlock
      (exists (?d - ball ?o - curved_wooden_ramp)
        (then
          (once (< 2 (distance ?w1 ?o)) )
          (hold (agent_holds desk) )
          (hold-while (not (and (and (in_motion ?o) (not (agent_holds ?o) ) ) (and (not (agent_holds ?o) ) (not (exists (?b - chair ?b - sliding_door) (on ?w2 ?o) ) ) ) ) ) (in_motion ?b1) )
        )
      )
    )
    (preference throwBallToDoggieBed
      (exists (?b10 - ball)
        (then
          (once (is_setup_object ?b10) )
          (once (touch ?b10 ?g) )
          (hold (and (in_motion ?d) (agent_holds ?b10) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (count throwAttemptFromBehindBlock:blue_dodgeball) )
)
(:scoring
  (count throwAttemptFromBehindBlock:pink)
)
)



(define (game game-id-68) (:domain medium-objects-room-v1)
(:setup
  (exists (?o - dodgeball)
    (game-conserved
      (is_setup_object ?o)
    )
  )
)
(:constraints
  (and
    (forall (?o3 ?b3 - dodgeball ?o4 - hexagonal_bin ?h - game_object)
      (and
        (preference throwAttemptFromDoor
          (exists (?l2 - dodgeball)
            (then
              (once (not (agent_holds ?b2) ) )
              (hold (and (exists (?h - game_object) (and (on ?h ?b) (and (on ?h ?r) (agent_holds ?g) (and (exists (?w1 - teddy_bear) (and (not (in_motion ?h) ) (not (in_motion bed) ) ) ) (and (on ?d ?ob) (on ?l ?h) ) ) ) ) ) (< 4 (distance room_center ?d)) ) )
              (once (same_object ?d ?l2) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 20 (external-forall-maximize (count throwAttemptFromDoor:golfball:hexagonal_bin) ) )
)
(:scoring
  (* (count-longest throwAttemptFromDoor:dodgeball) (count throwAttemptFromDoor:hexagonal_bin) )
)
)



(define (game game-id-69) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (< 2 1)
  )
)
(:constraints
  (and
    (preference smallItemsInPlace
      (exists (?p3 - (either lamp golfball laptop) ?b - hexagonal_bin)
        (then
          (once (not (and (< 1 (distance ?h ?b)) (exists (?r1 ?h - chair) (is_setup_object ?h) ) ) ) )
          (once (in ?b ?b) )
          (hold-while (agent_holds ?d) (agent_holds ?b) (touch ?b ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= 20 (total-score) )
)
(:scoring
  (count smallItemsInPlace:basketball)
)
)



(define (game game-id-70) (:domain few-objects-room-v1)
(:setup
  (exists (?r ?b - chair)
    (game-conserved
      (not
        (or
          (and
            (not
              (between ?r ?b ?b)
            )
            (agent_holds bed)
          )
          (not
            (not
              (agent_holds ?o)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference watchOnShelf
      (exists (?b5 - (either yellow_cube_block dodgeball))
        (then
          (hold (in_motion ?w2) )
          (once (in_motion ?d) )
          (once (in_motion ?b5) )
        )
      )
    )
  )
)
(:terminal
  (>= (- (external-forall-maximize (* (count watchOnShelf:yellow) 180 )
      )
    )
    (count watchOnShelf:green)
  )
)
(:scoring
  (* (count watchOnShelf:basketball) 4 )
)
)



(define (game game-id-71) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-optional
      (not
        (not
          (same_color ?c1 ?c)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference pinkObjectMovedToRoomCenter
      (exists (?o2 - hexagonal_bin)
        (then
          (once (agent_holds ?r) )
          (hold (and (open ?b) (in_motion ?o2) (agent_holds ?d) (agent_holds ?l) ) )
          (hold (adjacent ?o2 ?o2) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (external-forall-maximize (- (* (count-once-per-external-objects pinkObjectMovedToRoomCenter:pink) (* 3 (count-longest pinkObjectMovedToRoomCenter:pink:pink) )
        )
      )
    )
  )
)
(:scoring
  (count-once-per-external-objects pinkObjectMovedToRoomCenter:side_table)
)
)



(define (game game-id-72) (:domain medium-objects-room-v1)
(:setup
  (forall (?r1 - dodgeball ?d1 - shelf)
    (and
      (forall (?d - block)
        (game-optional
          (forall (?h - pillow)
            (adjacent_side ?d1 front ?h)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - doggie_bed)
      (and
        (preference golfballUnderBridgeWithoutTouchingBlock
          (exists (?c - ball)
            (then
              (once (agent_holds ?b) )
              (hold (in ?b ?b) )
              (once (touch ?o ?d) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (total-time) )
)
(:scoring
  (count golfballUnderBridgeWithoutTouchingBlock:purple:basketball)
)
)



(define (game game-id-73) (:domain many-objects-room-v1)
(:setup
  (exists (?b - chair ?o - hexagonal_bin)
    (game-optional
      (and
        (not
          (in_motion ?b)
        )
        (and
          (touch ?o ?d)
          (agent_holds ?b)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - pillow)
      (and
        (preference throwBallFromOtherBallToBin
          (exists (?r - ball)
            (then
              (once (in_motion ?r) )
              (hold-while (in_motion ?b) (in_motion ?p) (on ?h agent) (adjacent agent ?p) )
              (once (exists (?d - (either chair cylindrical_block wall doggie_bed dodgeball flat_block alarm_clock) ?c - triangular_ramp ?c2 - hexagonal_bin) (not (on ?g ?h) ) ) )
            )
          )
        )
      )
    )
    (preference throwFromDoorToBin
      (exists (?p2 - hexagonal_bin)
        (then
          (hold (adjacent bed ?s) )
          (once (agent_holds ?p2) )
          (once (agent_holds ?d) )
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (or
        (or
          (or
            (>= 6 (total-score) )
            (>= 1 (count-once throwBallFromOtherBallToBin:rug) )
          )
          (or
            (<= (count-once-per-objects throwBallFromOtherBallToBin:dodgeball) 10 )
            (or
              (not
                (or
                  (>= (- (* (count throwFromDoorToBin:yellow) (count throwBallFromOtherBallToBin:red) )
                      (count-once-per-objects throwFromDoorToBin:beachball)
                    )
                    (count throwFromDoorToBin:cube_block:dodgeball)
                  )
                  (<= 7 (count throwFromDoorToBin:blue_dodgeball:yellow) )
                )
              )
              (or
                (or
                  (>= 60 (count throwFromDoorToBin:golfball) )
                  (= (* (count-once throwFromDoorToBin:basketball) (external-forall-minimize (* (* (external-forall-minimize (* (+ 3 15 )
                                (count throwFromDoorToBin:basketball)
                                (* (count throwBallFromOtherBallToBin:dodgeball) (count throwFromDoorToBin:basketball) )
                              )
                            )
                            (+ (count throwFromDoorToBin:red) (* (count-once-per-objects throwFromDoorToBin:dodgeball) (count-once-per-objects throwBallFromOtherBallToBin:basketball) )
                            )
                          )
                          (* (count-once-per-objects throwBallFromOtherBallToBin:red) 10 (= 2 (+ 3 (* (+ 4 (* 4 (count throwFromDoorToBin) )
                                  )
                                  (+ (+ (count-shortest throwFromDoorToBin:pink) (* 1 (+ (+ 10 (* 4 3 (count throwBallFromOtherBallToBin:beachball) )
                                            300
                                            (external-forall-maximize
                                              (count throwFromDoorToBin:beachball)
                                            )
                                            5
                                            (+ 100 2 )
                                          )
                                          6
                                        )
                                        (count-once-per-objects throwFromDoorToBin:red)
                                        6
                                        5
                                        (- (* (count-once-per-objects throwFromDoorToBin:doggie_bed) (count throwFromDoorToBin:green) )
                                        )
                                      )
                                    )
                                    (count-once-per-objects throwFromDoorToBin:beachball:basketball)
                                  )
                                  (count-measure throwFromDoorToBin:pink)
                                  (* 3 (count throwBallFromOtherBallToBin:book) )
                                  (-
                                    10
                                    (count throwFromDoorToBin:doggie_bed)
                                  )
                                  8
                                  (+ (count throwFromDoorToBin:beachball) (count-unique-positions throwBallFromOtherBallToBin:golfball) )
                                  (* (count throwFromDoorToBin:golfball) (external-forall-minimize (count-once-per-objects throwFromDoorToBin:purple) ) )
                                  0.5
                                )
                                1
                              )
                            )
                            100
                            (count-overlapping throwFromDoorToBin:red)
                            (count-once-per-external-objects throwBallFromOtherBallToBin:beachball:pink)
                            3
                          )
                        )
                      )
                    )
                    (count throwFromDoorToBin:pink_dodgeball)
                  )
                )
                (>= (* 100 (- (- (count throwBallFromOtherBallToBin:basketball) )
                    )
                    5
                    2
                  )
                  7
                )
              )
            )
          )
        )
        (or
          (>= 4 (count-unique-positions throwBallFromOtherBallToBin:dodgeball) )
          (= (count throwFromDoorToBin:blue_dodgeball:pink:green) (* (+ (- 10 )
                1
              )
            )
          )
          (= 10 (total-score) )
        )
      )
      (>= 3 (total-score) )
    )
    (>= (total-time) (* 20 (count-once-per-objects throwBallFromOtherBallToBin:pink) )
    )
    (>= 6 6 )
  )
)
(:scoring
  (count-measure throwBallFromOtherBallToBin:dodgeball:yellow)
)
)



(define (game game-id-74) (:domain medium-objects-room-v1)
(:setup
  (forall (?h - game_object ?h - doggie_bed ?w - dodgeball)
    (forall (?b - (either game_object cube_block teddy_bear pink))
      (exists (?f - beachball)
        (exists (?o - curved_wooden_ramp)
          (game-optional
            (and
              (agent_holds ?w)
              (agent_holds ?b)
              (not
                (< (distance_side ?w front ?w) 7)
              )
              (in_motion ?c)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownIntoTarget
      (exists (?b3 - block)
        (then
          (once (on ?o ?o) )
          (once (not (agent_holds agent) ) )
          (hold-while (agent_holds ?b3) (not (agent_holds ?h) ) )
        )
      )
    )
    (preference ballThrownFromDoor
      (exists (?d - curved_wooden_ramp)
        (then
          (once (and (or (agent_holds ?b) (in_motion ?d) (in_motion ?d) ) (and (agent_holds ?o) (agent_holds ?c) ) ) )
          (once (object_orientation ?d upside_down) )
          (once (in ?d ?d) )
        )
      )
    )
    (forall (?h - shelf)
      (and
        (preference ballThrownOntoTarget
          (exists (?o - hexagonal_bin)
            (then
              (once (touch ?o ?h) )
              (hold (not (adjacent ?o ?l) ) )
              (once (in ?d ?t) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 15 (total-score) )
    (>= (* (count-once ballThrownIntoTarget:pink_dodgeball:red_pyramid_block) (count-once-per-objects ballThrownIntoTarget:red) (* 2 (count-once-per-objects ballThrownFromDoor:beachball) )
        50
      )
      (total-time)
    )
  )
)
(:scoring
  (* 7 5 )
)
)



(define (game game-id-75) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds ?b1)
  )
)
(:constraints
  (and
    (forall (?w2 ?c - ball)
      (and
        (preference throwAttempt
          (then
            (once (not (and (not (and (agent_holds ?c) (not (and (in ?t ?c) (not (and (adjacent ?c ?c) (in ?c ?w2) ) ) ) ) ) ) (on ?d ?c) ) ) )
            (once (in_motion ?d) )
            (hold (is_setup_object ?c) )
          )
        )
      )
    )
    (preference dodgeballFromDeskToTarget
      (exists (?b - game_object ?t - dodgeball ?d - curved_wooden_ramp ?l - hexagonal_bin)
        (then
          (hold-while (agent_holds ?d) (not (agent_holds ?l) ) (in ?o ?c) (and (in_motion ?l) (on ?t ?l) (or (adjacent_side ?l right ?d) (< (distance ?d ?l) 8) ) ) )
          (once (not (exists (?r - hexagonal_bin) (agent_holds ?l) ) ) )
          (hold (agent_holds ?l) )
        )
      )
    )
    (forall (?o1 - hexagonal_bin)
      (and
        (preference teddyBearHitsBall
          (exists (?b - (either teddy_bear) ?b1 - hexagonal_bin)
            (then
              (once (and (object_orientation ?b upright) (not (not (same_type ?o1 ?b1) ) ) ) )
              (once (opposite desk ?b1) )
              (once (and (in ?o1 ?b1) (agent_holds ?o) ) )
            )
          )
        )
      )
    )
    (preference blockInTowerKnocked
      (exists (?c3 - dodgeball ?d - teddy_bear)
        (then
          (hold (not (above ?b ?c) ) )
          (once (adjacent agent ?o4) )
          (once (agent_holds ?o) )
        )
      )
    )
    (preference ballThrownFromObjectToBin
      (exists (?b - doggie_bed ?b1 - hexagonal_bin)
        (then
          (hold (in ?l1 desk) )
          (hold (and (touch ?d ?b1) (in_motion ?b1) (in_motion ?b1) ) )
          (once (in_motion ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) 5 )
)
(:scoring
  (* (+ (count-overlapping dodgeballFromDeskToTarget:triangle_block) (* (count-once-per-objects ballThrownFromObjectToBin:golfball) 5 (count dodgeballFromDeskToTarget) )
    )
    5
  )
)
)



(define (game game-id-76) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?o5 - chair)
      (and
        (game-optional
          (in_motion ?c)
        )
        (and
          (forall (?db - doggie_bed)
            (game-conserved
              (and
                (not
                  (in_motion ?db)
                )
                (in_motion ?o5)
              )
            )
          )
          (and
            (game-conserved
              (equal_z_position ?c ?o5)
            )
          )
        )
        (game-conserved
          (in_motion ?g)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference basketMadeFromRug
      (exists (?h - doggie_bed)
        (at-end
          (and
            (agent_holds ?h)
            (agent_holds ?d)
          )
        )
      )
    )
  )
)
(:terminal
  (> (count-overlapping basketMadeFromRug:basketball) (total-score) )
)
(:scoring
  (count-once-per-objects basketMadeFromRug:red)
)
)



(define (game game-id-77) (:domain few-objects-room-v1)
(:setup
  (exists (?b - hexagonal_bin ?g - hexagonal_bin ?b4 - (either pink cube_block) ?b - chair)
    (game-conserved
      (in_motion ?d)
    )
  )
)
(:constraints
  (and
    (preference otherObjectsOnDeskShelf
      (exists (?b - game_object)
        (at-end
          (open ?b)
        )
      )
    )
    (preference pyramidBlockAtopTowerAtEnd
      (exists (?c - doggie_bed ?c - dodgeball ?h - hexagonal_bin)
        (then
          (hold (agent_holds ?h) )
          (hold (on ?h ?s) )
          (once (not (in_motion ?b) ) )
        )
      )
    )
    (forall (?h - hexagonal_bin ?l ?d - game_object)
      (and
        (preference cubeThrownToBin
          (exists (?r - block)
            (then
              (hold (agent_holds ?b) )
              (hold (in ?d ?b) )
              (once (not (above ?b ?d) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (not
      (>= 10 (total-score) )
    )
    (>= 5 (* (external-forall-minimize (* (- (external-forall-minimize (count-longest cubeThrownToBin:alarm_clock) ) )
            3
          )
        )
        (- 10 )
      )
    )
  )
)
(:scoring
  (count cubeThrownToBin:doggie_bed)
)
)



(define (game game-id-78) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (not
      (forall (?p1 - building ?b9 ?o3 ?d ?b ?c3 ?c1 - blue_cube_block)
        (not
          (in ?b rug)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrowAttempt
      (exists (?o5 - hexagonal_bin ?b2 - ball)
        (then
          (once (or (and (on ?b2 ?b) (in_motion ?o2) (or (in_motion ?d) (and (not (and (and (not (not (and (game_over ) (in ?b2 rug) ) ) ) (adjacent west_wall ?b2) ) (exists (?c - hexagonal_bin) (agent_holds ?b2) ) ) ) (not (in ?d ?b2) ) ) ) ) (not (agent_holds ?b2) ) ) )
          (once-measure (= 8 (distance_side agent right ?d)) (distance desk ?h) )
          (hold-while (agent_holds ?g) (on ?b2 ?b2) )
        )
      )
    )
    (preference throwBallFromOtherBallToBin
      (exists (?b2 - hexagonal_bin ?o - hexagonal_bin ?h - game_object)
        (then
          (once (not (< (x_position ?h) 2) ) )
          (hold (and (in_motion ?h) (not (not (on ?h ?c) ) ) ) )
          (once (not (or (and (not (not (in ?l1 ?t) ) ) (and (> 3 (distance ?h ?b)) (and (adjacent ?r ?h) (not (forall (?h - curved_wooden_ramp) (< 8 (distance ?h ?h)) ) ) ) ) ) (agent_holds ?o) (same_type ?h ?h) ) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (> (total-time) (total-time) )
    (>= (* (count-once-per-objects ballThrowAttempt:dodgeball) 2 )
      (+ (count ballThrowAttempt:dodgeball:dodgeball) (count-once ballThrowAttempt:orange) )
    )
  )
)
(:scoring
  (external-forall-maximize
    (count-once-per-objects throwBallFromOtherBallToBin:hexagonal_bin)
  )
)
)



(define (game game-id-79) (:domain many-objects-room-v1)
(:setup
  (exists (?h - dodgeball)
    (and
      (game-conserved
        (in ?h ?h)
      )
    )
  )
)
(:constraints
  (and
    (preference throwMissesBin
      (exists (?d - shelf)
        (then
          (once (not (forall (?c - dodgeball) (in_motion ?c1) ) ) )
          (hold (adjacent_side ?d back ?d) )
          (once (not (not (not (in agent ?d) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (total-time) )
)
(:scoring
  (count throwMissesBin:basketball)
)
)



(define (game game-id-80) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (adjacent ?b1 north_wall)
  )
)
(:constraints
  (and
    (preference throwInBin
      (exists (?h - ball)
        (then
          (hold (< 1 1) )
          (once (agent_holds ?h) )
          (hold-while (agent_holds ?w) (in ?h ?h) (> (distance ?h ?b1) 1) )
        )
      )
    )
    (preference beachballOnRug
      (exists (?b10 - (either golfball cube_block) ?d ?o1 ?b ?c ?r2 ?o - game_object)
        (at-end
          (not
            (rug_color_under ?b tan)
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (<= 5 (count throwInBin:blue_dodgeball) )
      (>= (count throwInBin:dodgeball) (count-once throwInBin:dodgeball) )
    )
    (>= 2 (+ 10 (* (* (/ (count-once-per-objects beachballOnRug:golfball:pink) 5 ) (* (* (* 1 (* (count-once-per-objects beachballOnRug:yellow:dodgeball) (count throwInBin:red) )
                )
                (count beachballOnRug:golfball)
              )
              (* (count-once-per-objects throwInBin:blue_dodgeball) 6 )
            )
          )
          (count-once-per-objects beachballOnRug:pink_dodgeball)
        )
      )
    )
  )
)
(:scoring
  (* 3 3 (* (count beachballOnRug:doggie_bed) (* 3 2 )
    )
  )
)
)



(define (game game-id-81) (:domain many-objects-room-v1)
(:setup
  (exists (?c2 - building)
    (forall (?h - hexagonal_bin ?d ?p2 - block)
      (game-optional
        (and
          (not
            (agent_holds ?d)
          )
          (agent_holds agent)
          (not
            (and
              (not
                (and
                  (not
                    (agent_holds ?b)
                  )
                  (in ?bl ?d)
                )
              )
              (and
                (above ?d ?d)
                (agent_holds ?t1)
              )
            )
          )
          (on ?p2 pink_dodgeball)
          (adjacent ?w1 ?d)
          (and
            (and
              (agent_holds ?c2)
              (< (distance_side room_center front_left_corner ?p2) 1)
              (not
                (agent_holds ?d)
              )
            )
            (not
              (agent_holds ?b)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - game_object ?o2 - hexagonal_bin)
      (and
        (preference failedThrowAttempt
          (exists (?l - hexagonal_bin)
            (then
              (once (not (agent_holds desk) ) )
              (once (touch ?h ?d) )
              (hold (in_motion ?d) )
              (once (and (and (agent_holds ?d) (on ?l ?h) ) (in_motion ?l) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects failedThrowAttempt:dodgeball) (total-time) )
)
(:scoring
  (count failedThrowAttempt:basketball)
)
)



(define (game game-id-82) (:domain many-objects-room-v1)
(:setup
  (or
    (game-optional
      (game_start )
    )
    (forall (?w2 - dodgeball ?b - hexagonal_bin)
      (game-optional
        (in_motion agent)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownIntoTarget
      (exists (?b6 - chair)
        (then
          (once (touch ?b6 ?b6) )
          (hold (not (agent_holds ?b6) ) )
          (once (forall (?b - game_object) (touch main_light_switch ?b) ) )
        )
      )
    )
    (forall (?w2 - shelf)
      (and
        (preference gameBlockFound
          (exists (?c - hexagonal_bin)
            (then
              (hold (in_motion ?g) )
              (once (< (distance agent bed) 1) )
              (once (is_setup_object ?b3) )
              (once (forall (?h - shelf) (adjacent bed ?d) ) )
              (hold (not (in_motion ?w2) ) )
            )
          )
        )
        (preference blockOnBlockInTowerAtEnd
          (exists (?d1 - (either rug))
            (then
              (once (not (or (< 1 (distance ?w1 ?d1)) (and (not (not (in_motion ?w2) ) ) (agent_holds ?d) (touch ?b ?w2) (in_motion ?d1) ) ) ) )
              (hold (agent_holds ?r) )
              (hold (exists (?h - (either red cellphone)) (on ?d1 ?l1) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 3 (* 2 (* 6 (- (* (count-once-per-objects ballThrownIntoTarget:red_pyramid_block) (* 9 (* 300 0 300 (* (count gameBlockFound:red:basketball) 15 (* 2 (count-total gameBlockFound:basketball) )
                  )
                  (count-once-per-objects ballThrownIntoTarget:beachball:dodgeball)
                  (* (+ (count gameBlockFound:golfball) (count-once-per-objects gameBlockFound:dodgeball:hexagonal_bin) )
                    (count gameBlockFound:golfball)
                    (count-overlapping ballThrownIntoTarget:basketball:dodgeball)
                  )
                )
              )
              (count blockOnBlockInTowerAtEnd:dodgeball)
            )
          )
        )
      )
    )
    (or
      (<= 10 2 )
      (not
        (>= (* 10 (count-once-per-objects blockOnBlockInTowerAtEnd:beachball:cube_block) (count blockOnBlockInTowerAtEnd:beachball:red) 2 (* 5 4 )
          )
          (count blockOnBlockInTowerAtEnd:basketball)
        )
      )
    )
  )
)
(:scoring
  (* 300 (count gameBlockFound:doggie_bed) )
)
)



(define (game game-id-83) (:domain medium-objects-room-v1)
(:setup
  (exists (?h - dodgeball ?r2 - cube_block)
    (game-optional
      (and
        (and
          (not
            (agent_holds green_golfball)
          )
          (and
            (and
              (agent_holds ?l1)
              (< 2 1)
            )
            (adjacent_side ?r2 back ?r2)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToBinFromDistance
      (exists (?c - wall ?b ?b7 ?c - hexagonal_bin)
        (at-end
          (not
            (not
              (in_motion ?d)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= 2 (<= 9 (* (<= (count-once-per-objects throwToBinFromDistance:yellow:dodgeball) 16 )
        10
        5
      )
    )
  )
)
(:scoring
  (count throwToBinFromDistance:pink_dodgeball)
)
)



(define (game game-id-84) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?o - dodgeball)
      (game-conserved
        (touch ?d ?d)
      )
    )
  )
)
(:constraints
  (and
    (preference cubeBlockFromBedToShelf
      (exists (?r ?d2 - ball)
        (then
          (hold (not (in_motion ?d) ) )
          (hold (in_motion ?r) )
          (once (agent_holds ?o) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (<= (+ (* 5 2 )
          (* (* 10 5 (* (count cubeBlockFromBedToShelf:green) (external-forall-maximize (count-once-per-objects cubeBlockFromBedToShelf:triangle_block) ) )
            )
            4
          )
        )
        (count cubeBlockFromBedToShelf:brown)
      )
      (count cubeBlockFromBedToShelf:rug:yellow)
    )
    (+ 8 (* (count cubeBlockFromBedToShelf:cube_block) (count cubeBlockFromBedToShelf:hexagonal_bin:doggie_bed) (count-shortest cubeBlockFromBedToShelf:basketball:pink_dodgeball:golfball) (+ 100 (<= 10 15 )
        )
      )
    )
  )
)
(:scoring
  (external-forall-maximize
    (count-increasing-measure cubeBlockFromBedToShelf:pink)
  )
)
)



(define (game game-id-85) (:domain medium-objects-room-v1)
(:setup
  (exists (?t ?c3 - dodgeball)
    (and
      (and
        (exists (?o - beachball)
          (forall (?h - cube_block)
            (forall (?d - cube_block)
              (and
                (game-optional
                  (agent_holds ?h)
                )
                (exists (?o4 - teddy_bear)
                  (forall (?ob - dodgeball)
                    (exists (?h - teddy_bear)
                      (game-optional
                        (in ?d ?d)
                      )
                    )
                  )
                )
                (game-optional
                  (in_motion ?h)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference itemsTurnedOff
      (exists (?c - beachball)
        (then
          (once (not (agent_holds ?c) ) )
          (once (and (and (in_motion ?c) (and (and (not (in_motion ?d) ) (or (and (and (and (adjacent room_center ?d) (or (in_motion ?c) (not (or (< (distance ?c ?b) (distance ?c ?c)) (and (not (agent_holds ?c) ) (not (on ?c ?h) ) ) ) ) ) ) (in_motion ?c) ) (in ?c ?h) ) ) ) (agent_holds ?c) ) (< (distance ?c ?c) 1) ) (and (in_motion ?h) (and (on ?o ?o) (forall (?d - hexagonal_bin) (on ?b ?o) ) ) ) ) )
          (once (and (in_motion ?c) (and (not (and (object_orientation ?c upright) (agent_holds ?h) ) ) (in_motion ?c) ) ) )
        )
      )
    )
    (preference blockThrowAttempt
      (exists (?d - hexagonal_bin)
        (then
          (once (in_motion ?d) )
          (once (object_orientation ?d ?d) )
          (once (in ?o ?o) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (* (count-once-per-objects blockThrowAttempt:pink_dodgeball) 4 )
      (count-total blockThrowAttempt:blue_dodgeball:pyramid_block)
    )
    5
  )
)
(:scoring
  (* 20 (* 3 (count itemsTurnedOff) )
  )
)
)



(define (game game-id-86) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (adjacent room_center ?d)
  )
)
(:constraints
  (and
    (preference throwOverRamp
      (exists (?b2 - dodgeball)
        (at-end
          (exists (?b ?h - cube_block ?h - block)
            (agent_holds ?b)
          )
        )
      )
    )
  )
)
(:terminal
  (>= 2 5 )
)
(:scoring
  (* 3 (count throwOverRamp:blue_pyramid_block:doggie_bed) )
)
)



(define (game game-id-87) (:domain few-objects-room-v1)
(:setup
  (exists (?p2 - block ?o1 - hexagonal_bin)
    (game-optional
      (equal_x_position ?o1 ?o1)
    )
  )
)
(:constraints
  (and
    (forall (?d - cube_block)
      (and
        (preference throwToBin
          (exists (?bl - game_object)
            (then
              (once (adjacent_side bed ?d ?bl) )
              (once (and (adjacent ?bl ?l) (agent_holds ?b) ) )
              (hold (in ?o ?b) )
            )
          )
        )
        (preference beachballOnRug
          (exists (?c - (either basketball key_chain triangle_block cube_block))
            (then
              (once (and (in ?o ?d) (same_object ?d ?o) ) )
              (once (and (in_motion ?c) (and (and (or (agent_holds ?o) ) (agent_holds ?c) ) (< (distance room_center ?c) 1) ) ) )
              (hold (in ?d ?d) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (external-forall-maximize (* 7 2 )
      )
      (count-unique-positions throwToBin:dodgeball)
    )
    (> (* (count-once-per-objects beachballOnRug:dodgeball) (count-total throwToBin:dodgeball) )
      2
    )
    (not
      (> (total-time) 0.5 )
    )
  )
)
(:scoring
  (* (* 3 8 (* (count throwToBin:yellow_pyramid_block:orange) )
      (count-measure beachballOnRug:doggie_bed)
    )
    (count beachballOnRug:green:hexagonal_bin:orange)
  )
)
)



(define (game game-id-88) (:domain few-objects-room-v1)
(:setup
  (forall (?b9 - (either rug laptop cellphone pink))
    (and
      (game-conserved
        (in_motion ?d)
      )
      (and
        (game-conserved
          (agent_holds ?h)
        )
        (not
          (game-optional
            (not
              (not
                (and
                  (and
                    (agent_holds ?b9)
                    (not
                      (or
                        (in_motion ?b9)
                        (adjacent desk ?o)
                      )
                    )
                  )
                  (agent_holds ?b)
                )
              )
            )
          )
        )
      )
      (game-conserved
        (agent_holds agent)
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToBinOffObject
      (exists (?g - golfball)
        (then
          (once (<= (distance desk ?g) 1) )
          (once (agent_holds ?g) )
          (once (on ?b ?g) )
        )
      )
    )
    (preference smallItemsInPlace
      (exists (?t1 - hexagonal_bin ?c - hexagonal_bin ?o - building)
        (then
          (once (not (and (and (and (exists (?b - hexagonal_bin) (agent_holds ?o) ) (and (on ?o rug) (in_motion ?o) ) ) (exists (?t1 ?c - cube_block ?d - wall ?t ?c - (either game_object) ?c - game_object) (adjacent ?h ?c) ) (in_motion ?l2) ) (agent_holds ?r) ) ) )
          (hold-while (in ?d ?o) (on ?o ?d) )
          (once (agent_holds ?o) )
        )
      )
    )
    (preference throwToBin
      (exists (?b9 - ball ?s - hexagonal_bin)
        (then
          (once (not (and (on ?w agent) (and (not (in_motion ?d) ) (and (on ?s ?s) (forall (?p3 - hexagonal_bin ?tb - (either teddy_bear yellow_cube_block dodgeball)) (equal_z_position room_center ?tb) ) ) ) (and (in ?d ?d) (and (and (agent_holds agent) (not (exists (?d - (either yellow_cube_block book) ?h - hexagonal_bin) (not (< 1 1) ) ) ) ) (in_motion ?b) ) ) (= 0.5 1) ) ) )
          (hold (not (agent_holds ?s) ) )
          (once (on ?s ?s) )
          (hold (not (in_motion ?s) ) )
          (once (and (agent_holds ?d) (agent_holds ?c) ) )
        )
      )
    )
  )
)
(:terminal
  (= (total-score) (- 4 )
  )
)
(:scoring
  (count-once-per-objects throwToBin:dodgeball:pink:pink_dodgeball)
)
)



(define (game game-id-89) (:domain many-objects-room-v1)
(:setup
  (exists (?d - (either blue_cube_block pyramid_block) ?d - pyramid_block)
    (exists (?h - (either book cylindrical_block) ?b - hexagonal_bin ?o - ball)
      (and
        (game-conserved
          (adjacent ?o1 ?l)
        )
        (game-conserved
          (not
            (or
              (in_motion ?h)
              (not
                (not
                  (not
                    (or
                      (and
                        (not
                          (not
                            (<= (distance room_center ?o) (distance rug ?d))
                          )
                        )
                        (in_motion ?d)
                      )
                      (not
                        (adjacent ?c ?d)
                      )
                      (and
                        (touch ?o ?b)
                        (in_motion agent)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference brownObjectMovedToRoomCenter
      (exists (?d - ball ?t2 - hexagonal_bin)
        (then
          (hold-while (object_orientation agent ?t2) (and (agent_holds ?t) (in_motion ?c4) ) )
          (once (object_orientation ?t2 upright) )
        )
      )
    )
  )
)
(:terminal
  (<= (total-time) 2 )
)
(:scoring
  (= 5 (+ 3 2 )
  )
)
)



(define (game game-id-90) (:domain few-objects-room-v1)
(:setup
  (exists (?b4 - game_object)
    (and
      (forall (?g - hexagonal_bin ?d - block)
        (and
          (exists (?c3 - ball ?t - game_object ?o - building)
            (and
              (forall (?c5 - (either pyramid_block key_chain))
                (game-optional
                  (in_motion ?d)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference pillowMovedToRoomCenter
      (exists (?r - dodgeball)
        (then
          (once-measure (on ?r ?h) (distance room_center ?o) )
          (once (touch ?r ?h) )
          (once (on ?p ?r) )
        )
      )
    )
    (preference ballThrownFromDoor
      (exists (?d - hexagonal_bin)
        (then
          (once (in ?h ?d) )
          (once (and (and (same_color ?b5 ?tb) (agent_holds ?d) (in_motion ?d) (same_color ?o ?d) ) (not (agent_holds ?b) ) ) )
          (hold (not (on ?d ?h) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (total-time) 30 )
  )
)
(:scoring
  (* 1 (* 0 (+ (count pillowMovedToRoomCenter:purple) 10 4 )
    )
    10
  )
)
)



(define (game game-id-91) (:domain few-objects-room-v1)
(:setup
  (exists (?c ?c5 ?o2 - hexagonal_bin)
    (game-conserved
      (not
        (not
          (adjacent ?w1 ?c)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference pillowThrownToDoggieBed
      (exists (?s - hexagonal_bin)
        (then
          (hold (and (touch ?d ?h) (and (on ?s ?s) (in_motion ?o) ) ) )
          (once (agent_holds ?b) )
          (once (in ?s ?b1) )
        )
      )
    )
    (forall (?b - (either bridge_block pink) ?c2 - hexagonal_bin)
      (and
        (preference dodgeballThrownToBinFromDesk
          (exists (?c - drawer)
            (then
              (once (in_motion ?c2) )
              (once (> (distance ?h ?h) (distance ?w1 ?c2)) )
              (once (not (in_motion ?c2) ) )
            )
          )
        )
        (preference throwAttemptFromDoor
          (exists (?b4 - (either bridge_block dodgeball) ?r - hexagonal_bin)
            (then
              (once (not (touch ?d ?h) ) )
              (once (on ?b ?d) )
              (hold (same_type ?o bridge_block) )
            )
          )
        )
      )
    )
    (preference pyramidBlockAtopTowerAtEnd
      (exists (?o - game_object ?c - hexagonal_bin)
        (then
          (once (on ?c ?c) )
          (once (and (touch ?b ?d) (agent_holds ?c) ) )
          (hold (agent_holds ?c) )
        )
      )
    )
    (forall (?ob - chair)
      (and
        (preference ballThrownFromBehindBlock
          (exists (?c1 - triangular_ramp)
            (then
              (hold (not (in_motion ?ob) ) )
              (hold (above ?c1 ?ob) )
              (hold (agent_holds ?ob) )
            )
          )
        )
        (preference ballThrownFromObjectToBin
          (exists (?r1 - block ?p2 - block)
            (then
              (once (adjacent room_center rug) )
              (once (faces ?b1 ?ob) )
              (once (or (opposite ?b ?ob) (> 1 (distance desk ?l2)) ) )
            )
          )
        )
      )
    )
    (preference blindsOpened
      (exists (?h - game_object)
        (then
          (once (same_object ?h ?l) )
          (once (and (on ?c ?h) (exists (?h - dodgeball) (not (adjacent ?h ?b) ) ) ) )
          (once (in_motion ?h) )
        )
      )
    )
    (preference basketMadeFromRug
      (exists (?h - ball)
        (at-end
          (and
            (exists (?c - (either dodgeball yellow_cube_block))
              (and
                (on ?b ?h)
                (toggled_on ?c)
              )
            )
            (in_motion ?h)
          )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (* (+ 6 (count-once-per-objects pillowThrownToDoggieBed:beachball) )
        (* (* 7 1 2 )
          10
        )
      )
      2
    )
    5
  )
)
(:scoring
  (* (count-once-per-objects ballThrownFromBehindBlock:yellow) 3 )
)
)



(define (game game-id-92) (:domain medium-objects-room-v1)
(:setup
  (or
    (exists (?b - triangular_ramp)
      (exists (?d - hexagonal_bin)
        (and
          (game-optional
            (and
              (in_motion ?o)
              (and
                (and
                  (not
                    (touch ?d ?b)
                  )
                  (adjacent ?w1 ?d)
                )
                (and
                  (and
                    (and
                      (in_motion pink_dodgeball)
                    )
                    (in_motion ?b)
                    (agent_holds ?d)
                  )
                  (in_motion ?f)
                )
              )
            )
          )
          (and
            (exists (?h - curved_wooden_ramp)
              (exists (?p - hexagonal_bin ?h - dodgeball ?c ?bl - (either laptop tall_cylindrical_block))
                (exists (?r - triangular_ramp ?b - (either golfball dodgeball))
                  (or
                    (exists (?h - blue_cube_block ?p - hexagonal_bin ?tb - ball)
                      (game-conserved
                        (and
                          (agent_holds ?h)
                          (in ?d ?c)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - (either cellphone dodgeball) ?o - wall)
      (and
        (preference throwKnocksOverBear
          (exists (?d - dodgeball)
            (then
              (hold (in_motion ?o) )
              (once (agent_holds ?d) )
              (hold (is_setup_object ?h) )
              (once (in_motion ?d) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 6 5 )
)
(:scoring
  (count throwKnocksOverBear:dodgeball)
)
)



(define (game game-id-93) (:domain many-objects-room-v1)
(:setup
  (exists (?p1 - flat_block ?b1 - building)
    (forall (?db - cube_block)
      (game-conserved
        (in ?l1 ?db)
      )
    )
  )
)
(:constraints
  (and
    (forall (?c - doggie_bed)
      (and
        (preference teddyBearLandsInBin
          (exists (?h - ball)
            (at-end
              (and
                (in ?s ?h)
                (touch ?b ?b)
              )
            )
          )
        )
        (preference ballThrownToBed
          (exists (?d - color)
            (then
              (hold (agent_holds ?d) )
              (once (agent_holds ?c) )
              (once (in ?d ?l2) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> 2 2 )
)
(:scoring
  (* (external-forall-maximize (+ (count-once-per-objects teddyBearLandsInBin:basketball) (count-total ballThrownToBed) (* (* (count teddyBearLandsInBin:alarm_clock) (count-same-positions teddyBearLandsInBin:blue_dodgeball) )
          5
        )
        (>= 9 2 )
        5
      )
    )
    (external-forall-maximize
      (* (count-once-per-objects ballThrownToBed:pink:book) (+ (count ballThrownToBed:pink:yellow) (* (count-once-per-external-objects ballThrownToBed:dodgeball) (* 4 50 (count-once-per-objects teddyBearLandsInBin:pink) )
          )
        )
        4
      )
    )
    (count ballThrownToBed:blue_dodgeball)
    (count-once-per-objects ballThrownToBed:beachball:basketball)
    4
    2
    (count-once-per-objects ballThrownToBed:pink:hexagonal_bin)
    3
    (* 5 10 )
    180
    1
    (count-measure teddyBearLandsInBin:golfball:beachball)
  )
)
)



(define (game game-id-94) (:domain medium-objects-room-v1)
(:setup
  (exists (?s - game_object)
    (exists (?c - hexagonal_bin ?c - (either cylindrical_block triangle_block) ?c - tall_cylindrical_block ?b - doggie_bed)
      (game-conserved
        (not
          (not
            (and
              (in_motion ?b)
              (not
                (in_motion ?b)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToRug
      (exists (?b2 - (either dodgeball) ?l - triangular_ramp)
        (then
          (hold (in_motion ?l) )
          (once (on ?g ?l) )
          (once (and (in_motion ?c2) (< 2 (distance ?w1 ?b)) ) )
        )
      )
    )
    (preference throwInBin
      (exists (?r - dodgeball ?b - pillow)
        (then
          (once (agent_holds ?b) )
          (once (broken ?t2) )
          (hold (on ?d ?b) )
        )
      )
    )
    (preference throwBallToDoggieBedOffWall
      (exists (?g ?o5 - teddy_bear)
        (at-end
          (not
            (and
              (adjacent room_center ?g)
              (not
                (and
                  (in ?o5 ?o5)
                  (exists (?t - teddy_bear ?b10 - dodgeball)
                    (adjacent bed ?b)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> 4 (total-time) )
)
(:scoring
  (* (count ballThrownToRug:dodgeball) (count-once throwInBin:red) )
)
)



(define (game game-id-95) (:domain many-objects-room-v1)
(:setup
  (forall (?c1 - hexagonal_bin)
    (game-conserved
      (not
        (in_motion top_shelf)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownFromDoor
      (exists (?c - doggie_bed ?h - (either curved_wooden_ramp tall_cylindrical_block dodgeball))
        (then
          (once (on ?d ?h) )
          (hold (and (in_motion ?h) (not (adjacent agent ?h) ) ) )
          (once (and (game_start ) (= 4 (distance ?w ?b)) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (total-time) )
)
(:scoring
  (count ballThrownFromDoor:yellow)
)
)



(define (game game-id-96) (:domain medium-objects-room-v1)
(:setup
  (forall (?l2 - block ?t1 ?r2 ?w1 - game_object ?b8 - cube_block ?o - hexagonal_bin)
    (and
      (exists (?d2 - hexagonal_bin)
        (exists (?r - dodgeball ?f - cube_block)
          (and
            (game-optional
              (= (distance agent ?d2))
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballHitsBinBottom
      (exists (?r - dodgeball ?b - cube_block)
        (at-end
          (agent_holds ?b)
        )
      )
    )
  )
)
(:terminal
  (or
    (<= 1 (* (external-forall-maximize (count dodgeballHitsBinBottom:blue_cube_block:dodgeball) ) 5 )
    )
    (>= (total-score) 2 )
  )
)
(:scoring
  (count-once-per-objects dodgeballHitsBinBottom:book)
)
)



(define (game game-id-97) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (not
      (in_motion ?b)
    )
  )
)
(:constraints
  (and
    (preference throwToBin
      (exists (?b8 - pillow)
        (then
          (hold (object_orientation ?b8 upright) )
          (once (on ?b3 ?b8) )
          (once (agent_holds agent) )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (count-once throwToBin:green) )
)
(:scoring
  (count-once throwToBin:green)
)
)



(define (game game-id-98) (:domain few-objects-room-v1)
(:setup
  (forall (?p1 - hexagonal_bin)
    (exists (?h - hexagonal_bin ?b - hexagonal_bin)
      (exists (?b - dodgeball)
        (game-optional
          (toggled_on ?c)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?p2 - (either dodgeball bridge_block))
        (then
          (hold (not (in_motion ?l) ) )
          (once (not (agent_holds ?b) ) )
          (once (in_motion ?p2) )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (total-time) )
)
(:scoring
  (- (* (count throwAttempt:basketball) (count throwAttempt:hexagonal_bin) (count-overlapping throwAttempt:pink) (count throwAttempt:yellow) )
  )
)
)



(define (game game-id-99) (:domain medium-objects-room-v1)
(:setup
  (forall (?x ?c4 - dodgeball ?o2 - building)
    (exists (?w - hexagonal_bin)
      (forall (?c4 - block)
        (and
          (forall (?g - (either laptop block))
            (exists (?g - game_object)
              (and
                (and
                  (forall (?l4 - dodgeball)
                    (exists (?t2 - curved_wooden_ramp)
                      (game-optional
                        (on ?w ?l4)
                      )
                    )
                  )
                )
                (game-conserved
                  (in_motion ?o)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference beachballBouncedOffRamp
      (exists (?b2 - red_dodgeball ?r - (either golfball pyramid_block cellphone))
        (at-end
          (not
            (in_motion agent)
          )
        )
      )
    )
  )
)
(:terminal
  (> (total-score) (count beachballBouncedOffRamp:orange) )
)
(:scoring
  (* (count beachballBouncedOffRamp:book) 9 )
)
)



(define (game game-id-100) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-conserved
      (agent_holds ?c)
    )
    (forall (?b - cylindrical_block ?g - dodgeball)
      (forall (?b - hexagonal_bin ?r - curved_wooden_ramp)
        (game-conserved
          (in_motion ?r)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - hexagonal_bin ?b - dodgeball ?c6 - (either flat_block bridge_block))
      (and
        (preference itemsTurnedOff
          (exists (?b2 - hexagonal_bin)
            (then
              (hold (on top_shelf ?c6) )
              (once (agent_holds ?d) )
              (once (agent_holds ?b2) )
            )
          )
        )
        (preference ballThrownToBin
          (exists (?s - ball ?f - bridge_block ?h - (either pencil golfball))
            (then
              (hold (forall (?c - cylindrical_block) (and (and (agent_holds ?p2) (or (not (and (touch ?r ?b) ) ) (and (and (on ?c ?c) (touch ?c6 ?h) ) (adjacent door ?w) ) ) ) (in_motion ?d) ) ) )
              (hold (not (and (in_motion ?l) (agent_holds ?d) ) ) )
              (once (not (on ?d ?c6) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (and
        (>= 4 (count-once-per-objects ballThrownToBin:orange:red) )
      )
    )
    (or
      (not
        (or
          (> (count-once-per-objects itemsTurnedOff:golfball) (count itemsTurnedOff:blue_dodgeball) )
          (and
            (>= (count ballThrownToBin:dodgeball:pink_dodgeball) 5 )
          )
          (< 15 (count-unique-positions itemsTurnedOff:beachball) )
        )
      )
      (>= (count-once-per-objects ballThrownToBin:dodgeball) 8 )
    )
  )
)
(:scoring
  (count itemsTurnedOff:pink:blue_pyramid_block)
)
)



(define (game game-id-101) (:domain medium-objects-room-v1)
(:setup
  (forall (?p - (either book cd) ?c - dodgeball)
    (forall (?b ?w1 ?o4 - cube_block)
      (forall (?b - curved_wooden_ramp)
        (forall (?b - dodgeball)
          (game-optional
            (not
              (not
                (and
                  (agent_holds ?d)
                  (on ?w1 ?w1)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference matchingBuildingBuilt
      (exists (?c - hexagonal_bin ?d - hexagonal_bin)
        (then
          (hold (not (on ?d ?d) ) )
          (once (agent_holds ?d) )
          (hold (and (agent_holds ?d) (in_motion ?l) ) )
        )
      )
    )
  )
)
(:terminal
  (> (total-score) (total-score) )
)
(:scoring
  (- (+ (count-once-per-objects matchingBuildingBuilt:blue_cube_block) (+ (count matchingBuildingBuilt:red_pyramid_block:tan) 20 )
      (+ (count-once-per-objects matchingBuildingBuilt:dodgeball) 50 )
    )
  )
)
)



(define (game game-id-102) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (agent_holds ?h)
  )
)
(:constraints
  (and
    (forall (?b - hexagonal_bin)
      (and
        (preference dodgeballHitsBin
          (exists (?b - block ?b1 - doggie_bed)
            (then
              (hold-while (in_motion ?b) (not (between ?b ?b ?b1) ) (adjacent west_wall ?o) )
              (once (< 1 (distance ?b2 ?d)) )
              (once (not (agent_holds ?b) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (>= (+ (* 5 (count-once dodgeballHitsBin:yellow_cube_block) )
          3
          (count dodgeballHitsBin:alarm_clock)
        )
        (* (count dodgeballHitsBin:basketball) 10 0 )
      )
      (< (* (+ (count dodgeballHitsBin:dodgeball) (* (count-same-positions dodgeballHitsBin:beachball) 5 )
          )
          (+ (count-once-per-objects dodgeballHitsBin:alarm_clock) (- (* (+ (count dodgeballHitsBin:alarm_clock:purple:golfball) (count dodgeballHitsBin:triangle_block:green) )
                2
              )
            )
          )
        )
        10
      )
      (>= (total-time) (count dodgeballHitsBin:dodgeball:bed) )
    )
    (> (+ (* (* 3 )
          (count-once dodgeballHitsBin:hexagonal_bin)
          10
        )
        (+ (count-once-per-external-objects dodgeballHitsBin:side_table) 10 3 )
      )
      (external-forall-maximize
        (+ (* (count-once dodgeballHitsBin:purple:beachball:dodgeball) 10 )
          (count-once-per-objects dodgeballHitsBin:dodgeball)
        )
      )
    )
  )
)
(:scoring
  (* 10 (count-once dodgeballHitsBin:pink:blue_pyramid_block) (count-shortest dodgeballHitsBin:orange:top_drawer) (= 10 30 )
    (* 3 4 10 )
  )
)
)



(define (game game-id-103) (:domain medium-objects-room-v1)
(:setup
  (exists (?b10 - block ?o ?b10 ?b3 ?o ?ob ?b ?r1 ?g ?r1 ?b - hexagonal_bin ?c - hexagonal_bin)
    (and
      (game-conserved
        (not
          (same_type ?c ?c)
        )
      )
      (forall (?b - (either laptop hexagonal_bin))
        (game-conserved
          (not
            (and
              (exists (?c - bridge_block ?r - hexagonal_bin ?w1 - hexagonal_bin)
                (not
                  (in ?b5 ?o)
                )
              )
              (not
                (agent_holds ?c)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwMovesBeachballWithoutKnockingTeddy
      (exists (?h ?b5 - (either dodgeball main_light_switch))
        (then
          (hold (on door ?b5) )
          (once (agent_holds ?h) )
        )
      )
    )
    (preference dodgeballsInPlace
      (exists (?h - chair ?d - cube_block)
        (then
          (once (or (and (and (agent_holds ?d) (in_motion ?b) ) (not (in_motion ?b) ) (not (and (agent_holds bed) (not (not (not (and (and (touch ?t ?d) (on ?o ?d) ) (not (agent_holds ?b) ) ) ) ) ) ) ) ) (same_type ?d ?d) (touch ?d ?g) ) )
          (once (on ?b pink_dodgeball) )
          (once (agent_holds ?d) )
        )
      )
    )
  )
)
(:terminal
  (>= 4 5 )
)
(:scoring
  (count throwMovesBeachballWithoutKnockingTeddy:dodgeball)
)
)



(define (game game-id-104) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (not
      (= (distance room_center ?b4) (distance ?c floor))
    )
  )
)
(:constraints
  (and
    (forall (?c - ball)
      (and
        (preference itemInClosedDrawerAtEnd
          (exists (?b - (either red cellphone))
            (then
              (once (in_motion ?r) )
              (hold-while (and (not (not (> (distance desk ?h) (distance ?w2 ?d)) ) ) (not (in_motion ?d) ) (in ?c ?c) ) (agent_holds ?c) )
              (once (in_motion ?c) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= 3 (* (* (count-once-per-objects itemInClosedDrawerAtEnd:dodgeball) (> (- (* 2 (* 3 (* 2 2 (* (count itemInClosedDrawerAtEnd:green) 10 (count-once-per-objects itemInClosedDrawerAtEnd:basketball:dodgeball) (* 5 (count itemInClosedDrawerAtEnd:hexagonal_bin) )
                      3
                      (count itemInClosedDrawerAtEnd:beachball)
                    )
                  )
                  9
                )
              )
            )
            (* (count-once-per-objects itemInClosedDrawerAtEnd:beachball) (count-once-per-objects itemInClosedDrawerAtEnd:green) )
          )
          (* 2 (* 10 (* (count itemInClosedDrawerAtEnd:beachball) 3 (* 2 10 )
              )
              (count-once itemInClosedDrawerAtEnd:dodgeball)
              (+ (* 5 10 )
                (* (+ (* 3 (* 0 3 )
                    )
                    5
                    3
                  )
                  (+ 5 (count itemInClosedDrawerAtEnd:green) )
                )
              )
            )
          )
        )
      )
    )
    (not
      (> (total-score) (count-measure itemInClosedDrawerAtEnd:alarm_clock) )
    )
  )
)
(:scoring
  (-
    (* (= 20 (- (* (external-forall-maximize (external-forall-minimize (* (count-once-per-external-objects itemInClosedDrawerAtEnd:tall_cylindrical_block) (- 5 )
                )
              )
            )
          )
        )
        3
      )
      (* (* (+ 30 15 )
          (count-once itemInClosedDrawerAtEnd:red)
        )
        (count-once itemInClosedDrawerAtEnd:dodgeball)
        (count itemInClosedDrawerAtEnd:triangle_block:dodgeball)
        10
        (count-once itemInClosedDrawerAtEnd:doggie_bed)
        (* (count-once-per-objects itemInClosedDrawerAtEnd:beachball) 10 )
        (count itemInClosedDrawerAtEnd:rug)
        (count itemInClosedDrawerAtEnd:beachball)
        (count itemInClosedDrawerAtEnd:golfball:basketball:golfball)
        (- 2 )
        (count itemInClosedDrawerAtEnd:yellow_pyramid_block)
        (* (* 5 (count-once itemInClosedDrawerAtEnd:dodgeball) 4 )
          (* (count-once-per-objects itemInClosedDrawerAtEnd:book:doggie_bed) 5 )
        )
      )
    )
    (* (count-increasing-measure itemInClosedDrawerAtEnd:pink) (count itemInClosedDrawerAtEnd:dodgeball:beachball) )
  )
)
)



(define (game game-id-105) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?c3 - cube_block)
      (exists (?r - (either basketball book))
        (and
          (forall (?c3 - pillow)
            (forall (?c3 - cube_block)
              (exists (?w2 - dodgeball ?h - (either flat_block wall triangle_block))
                (and
                  (or
                    (forall (?o - game_object)
                      (exists (?c - hexagonal_bin)
                        (game-conserved
                          (exists (?b9 - red_pyramid_block ?h - pyramid_block)
                            (in_motion ?c3)
                          )
                        )
                      )
                    )
                    (game-optional
                      (agent_holds ?c3)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b6 - dodgeball ?d2 - dodgeball)
      (and
        (preference bookOnDeskShelf
          (at-end
            (on agent rug)
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (< (total-time) (count-once-per-objects bookOnDeskShelf:doggie_bed) )
  )
)
(:scoring
  (+ (count-once bookOnDeskShelf:blue_dodgeball:beachball) 5 20 (count bookOnDeskShelf:yellow) (count bookOnDeskShelf:dodgeball) 10 )
)
)



(define (game game-id-106) (:domain medium-objects-room-v1)
(:setup
  (exists (?b - block)
    (game-optional
      (in ?l1 ?c)
    )
  )
)
(:constraints
  (and
    (preference dodgeballHitsBin
      (exists (?b2 - hexagonal_bin)
        (then
          (once (on ?b2 ?d) )
          (once (< 1 2) )
          (hold (in_motion ?g) )
        )
      )
    )
    (forall (?r - ball)
      (and
        (preference objectToBinOnFirstTry
          (exists (?d - dodgeball)
            (then
              (once (not (agent_holds ?b) ) )
              (hold (touch ?r ?r) )
              (once (same_color ?d yellow) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (total-score) (count objectToBinOnFirstTry:beachball) )
)
(:scoring
  (* (+ 0 6 )
    (external-forall-minimize
      (count dodgeballHitsBin:rug:basketball)
    )
  )
)
)



(define (game game-id-107) (:domain few-objects-room-v1)
(:setup
  (exists (?c - cube_block ?h - dodgeball ?b ?b8 - (either pink cylindrical_block))
    (game-conserved
      (and
        (agent_holds ?b)
        (or
          (on ?b ?b8)
          (in_motion ?b)
          (adjacent door ?b8)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o2 - hexagonal_bin)
      (and
        (preference dodgeballFromBlockToBin
          (exists (?w2 - flat_block)
            (then
              (once (same_color ?o2 tan) )
              (hold-while (and (in ?w2 ?o2) (not (not (agent_holds ?c4) ) ) ) (not (not (on ?o2 ?o) ) ) )
              (once (on agent ?w2) )
            )
          )
        )
      )
    )
    (preference laptopAndBookInPlace
      (exists (?h - chair)
        (at-end
          (agent_crouches )
        )
      )
    )
    (preference throwToBinFromDistance
      (exists (?b - ball)
        (then
          (once (agent_holds ?d) )
          (once (same_color ?b pink) )
          (once (touch ?b ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (> (- (count-once-per-objects throwToBinFromDistance:yellow:alarm_clock) )
      (count-once-per-objects throwToBinFromDistance:basketball)
    )
  )
)
(:scoring
  (* (count-longest throwToBinFromDistance:hexagonal_bin) 1 (- (count laptopAndBookInPlace:yellow) )
    (count-once throwToBinFromDistance:purple:hexagonal_bin)
    10
    3
  )
)
)



(define (game game-id-108) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?d1 - doggie_bed)
      (exists (?l2 ?o ?w1 - ball ?b2 - dodgeball)
        (or
          (forall (?s - building ?b7 - hexagonal_bin)
            (and
              (exists (?o - tan_cube_block)
                (and
                  (and
                    (game-conserved
                      (exists (?d ?o1 ?l1 - teddy_bear)
                        (and
                          (in_motion ?b)
                          (and
                            (in ?d ?t)
                            (in ?o ?b)
                          )
                        )
                      )
                    )
                  )
                  (game-conserved
                    (on ?d1 ?o)
                  )
                  (and
                    (forall (?d - dodgeball)
                      (exists (?g - game_object)
                        (and
                          (exists (?p - wall ?g - hexagonal_bin)
                            (game-conserved
                              (not
                                (not
                                  (and
                                    (not
                                      (and
                                        (not
                                          (in_motion ?b)
                                        )
                                        (and
                                          (and
                                            (> (distance_side ?h left ?b front) 2)
                                            (and
                                              (not
                                                (and
                                                  (= (distance agent agent) (distance ?b ?b))
                                                  (touch ?b ?o)
                                                )
                                              )
                                              (in_motion ?g)
                                            )
                                          )
                                          (in ?d ?d1)
                                        )
                                      )
                                    )
                                    (in_motion ?b7)
                                  )
                                )
                              )
                            )
                          )
                          (exists (?b - ball ?p - game_object ?d - (either wall dodgeball) ?d - dodgeball)
                            (and
                              (forall (?db - hexagonal_bin ?t - ball)
                                (exists (?o1 - doggie_bed)
                                  (exists (?o - triangular_ramp)
                                    (game-optional
                                      (agent_crouches )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
          (exists (?r2 - hexagonal_bin ?w1 - blinds)
            (game-conserved
              (exists (?b9 - dodgeball ?s - (either pillow main_light_switch) ?h - curved_wooden_ramp)
                (in_motion ?w1)
              )
            )
          )
          (exists (?h - cube_block ?b - doggie_bed ?h - ball)
            (and
              (game-conserved
                (agent_holds ?o2)
              )
              (and
                (game-optional
                  (exists (?h - golfball)
                    (in_motion floor)
                  )
                )
              )
              (game-conserved
                (agent_holds ?d1)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballsInPlace
      (exists (?d - curved_wooden_ramp)
        (then
          (once (agent_holds floor) )
          (hold (agent_holds ?c) )
          (once (agent_holds ?d) )
        )
      )
    )
  )
)
(:terminal
  (>= 20 4 )
)
(:scoring
  (count-once dodgeballsInPlace:hexagonal_bin)
)
)



(define (game game-id-109) (:domain medium-objects-room-v1)
(:setup
  (exists (?d - (either dodgeball dodgeball chair))
    (exists (?r - curved_wooden_ramp)
      (and
        (game-optional
          (and
            (not
              (< (distance_side ?w2 back ?r) (distance door ?r))
            )
            (or
              (not
                (between bed ?b ?d)
              )
              (adjacent room_center ?d)
            )
          )
        )
        (game-conserved
          (in_motion ?r)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwTeddyOntoPillow
      (exists (?d - (either golfball alarm_clock block))
        (then
          (once (not (in_motion ?d) ) )
          (once (in_motion ?l) )
          (once (in_motion ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (- (count throwTeddyOntoPillow:beachball) )
  )
)
(:scoring
  (- (* (count throwTeddyOntoPillow:red) 5 )
  )
)
)



(define (game game-id-110) (:domain few-objects-room-v1)
(:setup
  (exists (?h - tall_cylindrical_block)
    (game-conserved
      (not
        (touch ?l ?b)
      )
    )
  )
)
(:constraints
  (and
    (preference throwToBin
      (exists (?h - (either cellphone pyramid_block) ?r - ball)
        (then
          (once (and (in_motion ?r) (in ?d ?h) ) )
          (hold (and (agent_holds ?g) (exists (?c - hexagonal_bin) (in_motion desk) ) ) )
          (hold (< 1 (distance ?r ?b)) )
        )
      )
    )
    (preference nonBlockPlacedInBuilding
      (exists (?b - hexagonal_bin)
        (then
          (once (touch ?b4 ?l1) )
          (once (not (not (and (and (on ?b ?b) (and (not (and (and (or (in ?b7 ?b) (agent_holds ?b) ) (in_motion ?b) (adjacent ?c ?r) ) (in_motion ?b) ) ) (and (faces ?d ?c) (and (agent_holds ?b) ) (in_motion ?s) ) ) ) (and (and (in ?b ?b) (agent_holds ?b) ) (agent_holds ?b) ) ) ) ) )
          (once (not (not (in ?b1 ?o2) ) ) )
          (hold (and (agent_holds ?o1) (not (and (in_motion ?h) (not (and (agent_holds ?d) (< 10 (distance ?b floor)) ) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count nonBlockPlacedInBuilding:purple) (count-total throwToBin:golfball:dodgeball) )
)
(:scoring
  (count throwToBin:hexagonal_bin)
)
)



(define (game game-id-111) (:domain many-objects-room-v1)
(:setup
  (exists (?s - dodgeball ?b7 - curved_wooden_ramp)
    (game-conserved
      (and
        (and
          (exists (?d - building)
            (in_motion ?b7)
          )
          (or
            (and
              (not
                (adjacent ?b7 ?b7)
              )
              (in_motion ?b7)
            )
            (not
              (agent_holds ?c)
            )
            (not
              (forall (?l - desk_shelf ?h - block)
                (on ?b ?h)
              )
            )
            (not
              (object_orientation ?b6 upright)
            )
          )
          (not
            (on side_table ?b7)
          )
        )
        (and
          (or
            (not
              (not
                (on ?l ?b7)
              )
            )
            (touch ?g ?b7)
          )
          (and
            (on ?b7 ?b7)
            (not
              (agent_holds ?b7)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - (either golfball dodgeball hexagonal_bin) ?r - chair)
      (and
        (preference blockInTowerAtEnd
          (exists (?b7 - ball)
            (at-end
              (on ?c3 ?h)
            )
          )
        )
      )
    )
    (preference throwKnocksBlock
      (exists (?l - block)
        (at-end
          (in ?l ?l)
        )
      )
    )
    (preference objectsHidden
      (exists (?l4 - pillow)
        (then
          (hold (in_motion ?b4) )
          (once (agent_holds ?l4) )
          (once (on ?l4 ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (count-total blockInTowerAtEnd:basketball) )
)
(:scoring
  (count-once-per-objects throwKnocksBlock:dodgeball)
)
)



(define (game game-id-112) (:domain many-objects-room-v1)
(:setup
  (forall (?w1 - building)
    (and
      (game-conserved
        (in ?w1 ?w1)
      )
      (game-conserved
        (and
          (agent_holds ?d)
          (touch ?w1 ?c)
        )
      )
      (and
        (game-optional
          (agent_holds ?w1)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference pillowThrownToDoggieBed
      (exists (?g - (either blue_cube_block cd))
        (then
          (once (not (in_motion ?g) ) )
          (hold (on ?b ?g) )
          (once (= (x_position ?g) (distance west_wall ?b)) )
        )
      )
    )
    (forall (?s - chair ?d1 - (either main_light_switch golfball chair))
      (and
        (preference throwMovesBeachballWithoutKnockingTeddy
          (exists (?o - hexagonal_bin ?f - game_object)
            (then
              (once (and (and (or (or (and (in_motion ?b) (in ?o ?f) ) (touch ?d1 ?d1) ) (adjacent ?h ?d) ) (and (in_motion ?g) (not (agent_holds ?d1) ) ) ) (same_color ?d1 ?f) (adjacent ?h top_shelf) (in ?c ?f) (agent_holds ?b) (agent_holds ?c) (in ?d1 ?d) (in ?l2 desk) ) )
              (hold-while (open ?b) (and (not (agent_holds ?d1) ) (and (and (same_color ?d1 ?d1) (equal_z_position desk ?f) ) (agent_holds ?o1) ) ) )
              (hold (not (in_motion ?h) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> 5 (count throwMovesBeachballWithoutKnockingTeddy:red) )
)
(:scoring
  (count pillowThrownToDoggieBed:pyramid_block)
)
)



(define (game game-id-113) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (not
      (agent_holds ?o)
    )
  )
)
(:constraints
  (and
    (preference objectMovedRoomSide
      (exists (?o2 - dodgeball ?h - hexagonal_bin)
        (then
          (once (on ?o ?h) )
          (hold (in_motion ?c) )
          (hold (> (distance_side ?d front_left_corner desk back) (distance_side ?h ?h ?c4 back)) )
        )
      )
    )
    (preference objectWithMatchingColor
      (exists (?c1 - block)
        (at-end
          (in_motion ?d)
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) 3 )
)
(:scoring
  (count objectWithMatchingColor:green)
)
)



(define (game game-id-114) (:domain few-objects-room-v1)
(:setup
  (exists (?w2 - game_object)
    (game-optional
      (between ?w2 ?w2 ?w2)
    )
  )
)
(:constraints
  (and
    (preference dodgeballHitsBin
      (exists (?t ?c ?c ?c6 ?b ?c - curved_wooden_ramp)
        (then
          (once (in ?b ?b) )
          (once (in_motion ?c6) )
          (hold-while (on ?b ?c) (in_motion ?b) )
        )
      )
    )
    (forall (?c3 - triangular_ramp)
      (and
        (preference watchOnShelf
          (exists (?w1 - ball)
            (then
              (hold (agent_holds ?c3) )
              (once (and (in ?t ?b) (on ?w1 ?c3) (not (not (opposite ?o2 ?c3) ) ) ) )
              (once (and (and (not (not (adjacent desk floor) ) ) (and (in_motion ?b) (in_motion ?w1) ) ) (not (on bed bed) ) (and (agent_crouches ) (and (agent_holds ?c3) (and (in_motion ?b) (in_motion ?w1) (is_setup_object green_golfball) ) ) (agent_holds ?c3) (in_motion ?c) (and (and (not (not (on ?c3 ?w1) ) ) (and (in_motion ?b) (adjacent agent ?w1) ) ) (on ?h ?w1) ) (< (distance door rug) 6) (agent_holds ?c3) (and (agent_holds ?h) (adjacent_side agent ?w1 ?c3) ) ) ) )
            )
          )
        )
      )
    )
    (preference ballThrownToChair
      (exists (?b - triangular_ramp)
        (then
          (once (in ?b ?b) )
        )
      )
    )
  )
)
(:terminal
  (> (count watchOnShelf:yellow:green) (total-score) )
)
(:scoring
  (* 30 50 )
)
)



(define (game game-id-115) (:domain medium-objects-room-v1)
(:setup
  (forall (?l ?h - tan_cube_block ?b - curved_wooden_ramp)
    (and
      (exists (?o4 - pillow)
        (exists (?l - doggie_bed ?b - chair)
          (game-conserved
            (in ?o4 ?h)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwInBin
      (exists (?s - ball ?c - game_object)
        (at-end
          (agent_holds agent)
        )
      )
    )
    (preference throwFromEdgeOfRug
      (exists (?r - teddy_bear ?d1 - building)
        (then
          (hold-while (is_setup_object ?h) (on ?d1 ?l) (not (not (above ?d1 ?d1) ) ) )
          (once (in ?d1 ?b) )
          (once (agent_holds door) )
        )
      )
    )
  )
)
(:terminal
  (= 4 (external-forall-maximize (count throwFromEdgeOfRug:basketball) ) )
)
(:scoring
  (* (* 1 (* 10 (count throwFromEdgeOfRug:hexagonal_bin) )
    )
    (* 40 (count-total throwFromEdgeOfRug:dodgeball) )
  )
)
)



(define (game game-id-116) (:domain medium-objects-room-v1)
(:setup
  (exists (?l ?d - hexagonal_bin)
    (forall (?d - block)
      (game-conserved
        (on desk ?d)
      )
    )
  )
)
(:constraints
  (and
    (forall (?r1 - dodgeball ?w1 ?b7 - pyramid_block ?o3 - game_object)
      (and
        (preference blockInTowerKnocked
          (exists (?l2 - hexagonal_bin)
            (at-end
              (agent_holds ?c1)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* (count blockInTowerKnocked:basketball) (count-unique-positions blockInTowerKnocked:pyramid_block) )
      (count blockInTowerKnocked:dodgeball)
    )
  )
)
(:scoring
  (count-once-per-objects blockInTowerKnocked:basketball:golfball:green)
)
)



(define (game game-id-117) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (in_motion ?d)
  )
)
(:constraints
  (and
    (preference towerFallsWhileBuilding
      (exists (?h - ball ?b - cube_block)
        (then
          (once (in_motion ?t) )
          (hold-while (between ?b ?d ?b) (same_color ?o ?b) (and (touch ?b ?b) (in_motion ?b) ) )
        )
      )
    )
  )
)
(:terminal
  (<= 4 5 )
)
(:scoring
  (count towerFallsWhileBuilding:pink)
)
)



(define (game game-id-118) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds ?d)
  )
)
(:constraints
  (and
    (forall (?d - shelf)
      (and
        (preference blocksInPlace
          (exists (?h - hexagonal_bin)
            (then
              (once (adjacent ?h ?b) )
              (once (in ?d ?h) )
              (once (adjacent agent ?h) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (< 3 (+ 2 (+ 4 (count-increasing-measure blocksInPlace:basketball) )
        5
        5
      )
    )
    (or
      (or
        (or
          (> (count blocksInPlace:beachball) (count-shortest blocksInPlace:beachball) )
          (< (* 2 (count blocksInPlace:green) (count-total blocksInPlace:beachball:beachball) )
            (count-once-per-objects blocksInPlace:green)
          )
        )
      )
      (>= 3 10 )
      (>= (+ (+ (+ 10 (count blocksInPlace:pyramid_block) )
            (count-same-positions blocksInPlace:basketball:orange)
          )
          (+ (+ 2 (count blocksInPlace:basketball) )
            (count-once-per-objects blocksInPlace:hexagonal_bin)
          )
          4
        )
        15
      )
    )
  )
)
(:scoring
  (count-once blocksInPlace)
)
)



(define (game game-id-119) (:domain medium-objects-room-v1)
(:setup
  (exists (?c6 - chair ?g - block)
    (exists (?c - hexagonal_bin)
      (and
        (game-conserved
          (>= 1 (distance ?w2 ?g))
        )
        (exists (?o - chair)
          (game-optional
            (and
              (not
                (adjacent bed ?o)
              )
              (and
                (adjacent agent ?g)
                (agent_holds ?g)
                (on ?h ?g)
              )
              (in_motion agent)
              (forall (?h - teddy_bear ?d - dodgeball)
                (= 4 1)
              )
              (agent_holds ?c)
              (and
                (in_motion south_wall)
                (and
                  (and
                    (and
                      (not
                        (not
                          (and
                            (toggled_on ?c)
                            (in_motion ?d)
                          )
                        )
                      )
                      (and
                        (on ?c ?b1)
                        (and
                          (in_motion ?c)
                          (on ?o2 bed)
                        )
                      )
                      (and
                        (and
                          (not
                            (agent_holds ?c)
                          )
                          (adjacent_side ?g front ?b)
                        )
                        (touch ?o ?d)
                      )
                    )
                    (and
                      (object_orientation ?b upright)
                      (and
                        (touch ?o ?r)
                        (not
                          (on ?g agent)
                        )
                      )
                    )
                    (and
                      (agent_holds ?o)
                      (agent_holds ?c)
                    )
                    (or
                      (on ?c4 ?o)
                      (adjacent_side agent front ?o)
                    )
                    (> 6 (distance ?w1 bed))
                    (in_motion ?g)
                    (not
                      (equal_z_position room_center ?c)
                    )
                    (in_motion agent)
                  )
                  (in_motion ?c)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?w2 - dodgeball ?l2 ?d - game_object)
      (and
        (preference throwOverRamp
          (then
            (once (and (not (< (distance bed ?d) (distance ?d ?l2)) ) (agent_holds ?b) ) )
            (once (equal_z_position ?h ?l2) )
            (hold (agent_holds ?d) )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (< (count-once-per-objects throwOverRamp:dodgeball:beachball) (count-once-per-objects throwOverRamp:pink) )
    )
    (or
      (> (count-once throwOverRamp:beachball:red) (count-once-per-objects throwOverRamp:dodgeball:red_pyramid_block) )
    )
    (> 1 (total-score) )
  )
)
(:scoring
  (count throwOverRamp:green:dodgeball)
)
)



(define (game game-id-120) (:domain medium-objects-room-v1)
(:setup
  (exists (?c6 - red_dodgeball ?h - (either bridge_block curved_wooden_ramp))
    (exists (?o1 - block)
      (exists (?o - shelf)
        (game-optional
          (touch ?o1 ?o)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockThrowAttempt
      (exists (?h ?x ?t ?t2 ?c4 ?r2 - color ?o5 - ball)
        (at-end
          (same_color ?o5 blue)
        )
      )
    )
    (preference throwMovesBeachballWithoutKnockingTeddy
      (exists (?c - teddy_bear ?b7 - (either basketball cd))
        (then
          (hold (and (agent_holds ?b) (and (adjacent ?b7 ?b7) (and (not (and (and (and (not (agent_holds ?b7) ) (on ?d ?b7) ) (< (distance agent ?g) (distance agent ?t)) ) (same_type ?p ?b7) (adjacent ?c1 ?b7) ) ) (not (not (and (and (and (and (is_setup_object ?b7) (and (and (and (adjacent ?w2 ?d) (in_motion ?b) (on ?b4 ?l2) ) (and (not (not (agent_holds ?b) ) ) (agent_holds ?h) ) ) (and (agent_holds ?b7) (agent_holds ?h) (and (exists (?p1 - cube_block) (in ?b1 ?b) ) (agent_crouches ) ) ) (and (and (agent_holds ?d) (in_motion ?r) ) (on ?p ?t) ) ) ) (agent_holds ?b7) ) (and (agent_holds ?p) (and (adjacent agent ?b) (touch ?o ?b7) ) ) ) (and (not (agent_holds ?b2) ) (agent_holds ?b7) ) ) ) ) ) ) ) )
          (once (same_color ?p green) )
          (once (agent_holds ?b7) )
        )
      )
    )
    (preference agentLeavesDogbedOrNoMoreBalls
      (exists (?h - hexagonal_bin)
        (at-end
          (adjacent ?h ?h)
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-once-per-objects agentLeavesDogbedOrNoMoreBalls:beachball:green) (* 5 50 )
    )
    (not
      (not
        (>= (* (+ 10 (count blockThrowAttempt:tan:yellow) (* 0 (count agentLeavesDogbedOrNoMoreBalls:pink_dodgeball) )
            )
            2
          )
          (* 1 (count agentLeavesDogbedOrNoMoreBalls:dodgeball) )
        )
      )
    )
    (> 3 (total-time) )
  )
)
(:scoring
  (- (* 6 6 )
  )
)
)



(define (game game-id-121) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (exists (?g - hexagonal_bin)
        (and
          (forall (?h - ball)
            (game-optional
              (touch ?g ?g)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballNeverThrown
      (exists (?o1 - hexagonal_bin ?c - block)
        (then
          (hold (between ?p ?b ?c) )
          (once (not (not (and (in ?w bed) (and (agent_holds ?t) (forall (?d - game_object) (not (and (same_color ?d ?d) (agent_holds ?c) ) ) ) ) ) ) ) )
          (once (and (in_motion ?c) (on ?c rug) (exists (?l1 - game_object) (not (and (or (and (and (in_motion ?d) (exists (?c1 - (either tall_cylindrical_block side_table)) (or (not (adjacent room_center ?l1) ) (and (in ?c ?c1) (> (distance door ?c2) (building_size ?o)) ) ) ) (is_setup_object ?d) ) (in_motion ?b) (in ?l1 ?c) ) (and (in_motion ?c) (adjacent ?h agent) (not (in_motion ?l1) ) ) ) (agent_holds ?c) ) ) ) (agent_holds ?d) (touch ?c ?d) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 4 (- (* (count ballNeverThrown:pink) 2 )
    )
  )
)
(:scoring
  (+ (count ballNeverThrown:book) (count-once ballNeverThrown:basketball) (count-once-per-objects ballNeverThrown:pink) )
)
)



(define (game game-id-122) (:domain few-objects-room-v1)
(:setup
  (forall (?c6 - hexagonal_bin ?h - hexagonal_bin)
    (forall (?w1 - (either blue_cube_block blue_cube_block) ?b - hexagonal_bin)
      (forall (?t2 - dodgeball ?b - golfball)
        (forall (?db - chair)
          (exists (?o - hexagonal_bin ?r1 - cube_block)
            (exists (?s - dodgeball)
              (game-conserved
                (on ?s ?r1)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockThrowAttempt
      (exists (?l2 - bridge_block)
        (then
          (hold-while (and (in_motion pink_dodgeball) (agent_holds ?p1) ) (not (in_motion ?c) ) )
          (once (and (not (agent_holds ?d) ) (in_motion ?l2) (and (not (not (and (not (adjacent ?l2 ?l2) ) (and (agent_crouches ) (not (in_motion ?l2) ) ) (> (distance ?l2 ?o) (distance bed ?l2)) ) ) ) (not (and (not (in_motion ?b) ) (in_motion ?l2) ) ) ) ) )
          (once (< (distance ?l2 ?l2) (distance room_center ?l2)) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (total-score) 5 )
    (>= (* 5 0 )
      (total-score)
    )
    (>= (total-score) (= (count blockThrowAttempt:dodgeball) (count blockThrowAttempt:basketball) )
    )
  )
)
(:scoring
  (external-forall-maximize
    (count blockThrowAttempt:basketball:beachball)
  )
)
)



(define (game game-id-123) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (not
      (< 4 1)
    )
  )
)
(:constraints
  (and
    (preference ballThrownThroughRampToBin
      (exists (?b - curved_wooden_ramp)
        (at-end
          (in ?b ?c)
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (count-once ballThrownThroughRampToBin:golfball:beachball) 5 )
    (>= (total-score) (count ballThrownThroughRampToBin:purple) )
    (< 6 (* (* (external-forall-maximize (count ballThrownThroughRampToBin:dodgeball) ) (count-once-per-objects ballThrownThroughRampToBin:golfball) (count ballThrownThroughRampToBin:beachball) )
        (+ 10 (+ (external-forall-minimize (+ (count-once ballThrownThroughRampToBin:hexagonal_bin) 4 (* (count-total ballThrownThroughRampToBin:cylindrical_block) (* (count ballThrownThroughRampToBin:red) (* (count-once-per-external-objects ballThrownThroughRampToBin:basketball:tall_cylindrical_block) 10 (count ballThrownThroughRampToBin:yellow) (count-once ballThrownThroughRampToBin:pink) (count ballThrownThroughRampToBin:yellow:blue_pyramid_block) )
                  )
                )
                6
                (* 2 (* (count-same-positions ballThrownThroughRampToBin:pink:basketball) (* 2 (count-once-per-objects ballThrownThroughRampToBin:yellow:cube_block) )
                  )
                  (count-shortest ballThrownThroughRampToBin:book)
                  1
                  (* (count ballThrownThroughRampToBin:basketball) 1 )
                  (* (count ballThrownThroughRampToBin:yellow_pyramid_block) (+ (count-once-per-external-objects ballThrownThroughRampToBin:blue:dodgeball) 3 )
                  )
                )
                2
              )
            )
            (count-once-per-objects ballThrownThroughRampToBin:basketball)
          )
        )
      )
    )
  )
)
(:scoring
  (* (count-once-per-objects ballThrownThroughRampToBin:golfball:golfball) 4 )
)
)



(define (game game-id-124) (:domain many-objects-room-v1)
(:setup
  (exists (?o2 - cube_block)
    (and
      (game-conserved
        (agent_holds ?o2)
      )
    )
  )
)
(:constraints
  (and
    (forall (?c4 ?h - hexagonal_bin)
      (and
        (preference dodgeballThrownToBinFromDesk
          (exists (?l3 - teddy_bear ?h - wall)
            (then
              (hold (and (or (and (in ?h ?o) (agent_holds ?g) ) (in ?h ?c4) ) (not (not (not (and (rug_color_under ?d ?c) (and (and (in_motion ?p1) (on bed ?h) ) (and (not (not (and (in ?w2 ?c4) (agent_holds ?c) ) ) ) (and (> 2 (distance agent ?c4)) (not (same_type ?b ?c4) ) ) ) (same_color ?c ?c4) ) (agent_holds ?h) ) ) ) ) ) )
              (once (adjacent_side ?h front ?o) )
              (once (equal_z_position ?h ?b) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (= 3 (* (external-forall-maximize (> (* (* (- 300 )
              (+ (count-once-per-objects dodgeballThrownToBinFromDesk:pyramid_block:hexagonal_bin) (count-once dodgeballThrownToBinFromDesk:basketball:red) (count-once-per-external-objects dodgeballThrownToBinFromDesk:red) (* 10 (+ (count dodgeballThrownToBinFromDesk) (count-once dodgeballThrownToBinFromDesk:beachball) )
                )
                (* 10 (* (count-overlapping dodgeballThrownToBinFromDesk:blue_pyramid_block) 3 )
                )
                (count-once-per-objects dodgeballThrownToBinFromDesk:dodgeball)
              )
            )
            (count-measure dodgeballThrownToBinFromDesk)
          )
          5
        )
      )
      2
    )
  )
)
(:scoring
  (count-once-per-objects dodgeballThrownToBinFromDesk:golfball:purple)
)
)



(define (game game-id-125) (:domain few-objects-room-v1)
(:setup
  (forall (?h - wall)
    (game-conserved
      (between ?h ?b ?g)
    )
  )
)
(:constraints
  (and
    (preference objectToBinOnFirstTry
      (exists (?b1 - doggie_bed ?b - dodgeball)
        (then
          (once (not (and (in_motion ?b) (agent_holds ?b) (and (not (and (is_setup_object ?d) (in_motion ?t) ) ) (not (or (and (> (distance ?h ?b) (distance agent ?b)) (equal_z_position agent ?b) (in ?l2 ?d) ) (not (or (and (in_motion ?b) (on ?b ?o) ) (above ?c4 ?b1) ) ) ) ) ) ) ) )
          (once (and (on ?b ?b) (and (not (and (in_motion ?b) (in_motion ?b) (and (not (agent_holds ?b) ) (touch ?c1 ?b) ) ) ) (and (and (on ?b ?b) (on ?b ?b) ) (and (in ?b pink_dodgeball) (not (in ?d ?b) ) ) ) ) (agent_holds ?b) ) )
          (hold (not (adjacent ?h ?b) ) )
        )
      )
    )
    (preference throwToBinFromDistance
      (exists (?h - pyramid_block ?l1 - cube_block)
        (then
          (once (in_motion ?d) )
          (once (not (and (not (not (agent_holds ?c) ) ) (< 1 1) ) ) )
          (once (adjacent bed ?b) )
          (once (and (and (or (>= 7 (distance desk ?l1)) (equal_x_position ?l1 ?h) ) (same_color ?g ?l1) ) (in_motion ?b) ) )
          (hold (in_motion ?p) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count-measure throwToBinFromDistance:bed) (count-increasing-measure throwToBinFromDistance:pyramid_block) )
    15
  )
)
(:scoring
  (- (count throwToBinFromDistance:yellow_cube_block:yellow) )
)
)



(define (game game-id-126) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (agent_holds ?w)
  )
)
(:constraints
  (and
    (preference objectLandsInBin
      (exists (?ob - dodgeball ?h - ball ?p3 - dodgeball ?h - (either bridge_block alarm_clock pyramid_block))
        (at-end
          (and
            (on ?h ?l2)
            (in_motion ?d)
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (total-time) (count objectLandsInBin:doggie_bed) )
    (>= (total-score) (total-time) )
    (or
      (and
        (> (total-time) 50 )
      )
      (<= 4 (* 4 (count-once-per-objects objectLandsInBin:golfball) )
      )
      (> (total-score) (+ 4 (count objectLandsInBin:golfball) )
      )
    )
  )
)
(:scoring
  (* (* (count-shortest objectLandsInBin:pyramid_block) 5 )
    20
  )
)
)



(define (game game-id-127) (:domain many-objects-room-v1)
(:setup
  (exists (?o3 - hexagonal_bin)
    (game-optional
      (< (distance room_center ?c) 3)
    )
  )
)
(:constraints
  (and
    (preference ballThrownIntoTarget
      (exists (?c2 - triangular_ramp)
        (then
          (once (in ?c2 ?b) )
          (hold-while (in_motion ?b) (and (and (agent_holds ?b) (adjacent ?w2 ?c2) ) (on ?c2 ?c2) (and (agent_holds ?c2) (adjacent bed ?d) (rug_color_under ?g brown) ) (in ?c2 ?b) (and (not (and (in ?b ?c2) (on ?c2 ?b) ) ) (not (on ?c2 ?c2) ) ) (and (on ?o ?d1) (and (agent_holds ?c2) (and (in_motion desk) (not (< 3 8) ) ) (not (and (< (distance ?c2 ?c2) 1) (and (in_motion ?c2) (in_motion ?c2) ) ) ) ) ) (on ?b agent) ) )
          (once (and (and (in ?d ?bl) (in_motion ?w1) (in_motion ?c2) (and (and (not (game_start ) ) (agent_holds ?b) ) (not (and (in_motion ?c2) ) ) ) (in_motion ?c2) (agent_holds ?c2) ) (and (and (and (agent_holds ?c2) (not (adjacent ?h ?c2) ) (and (not (touch agent ?h) ) (and (not (and (and (agent_holds ?t) (not (forall (?g - dodgeball) (touch ?c ?c2) ) ) ) (not (not (agent_holds ?h) ) ) ) ) (and (not (exists (?o - cube_block) (agent_holds ?h) ) ) (not (and (on ?s ?h) (> (distance ?d ?b) (distance ?c2 ?c2)) ) ) ) ) ) ) (adjacent_side ?w2 front ?c2) ) (on ?d ?d) ) (not (not (not (agent_holds pink_dodgeball) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (* (count-once-per-external-objects ballThrownIntoTarget:purple:bed) (count-once-per-objects ballThrownIntoTarget:dodgeball) (external-forall-maximize (count-once ballThrownIntoTarget:beachball) ) )
      (total-score)
    )
    (>= (count ballThrownIntoTarget:yellow) 100 )
    (<= (* (count-once-per-objects ballThrownIntoTarget:top_drawer) (count ballThrownIntoTarget:basketball) )
      (total-time)
    )
  )
)
(:scoring
  (+ (external-forall-maximize (count-once-per-external-objects ballThrownIntoTarget:golfball) ) 10 )
)
)



(define (game game-id-128) (:domain medium-objects-room-v1)
(:setup
  (exists (?db - bridge_block)
    (game-conserved
      (and
        (and
          (and
            (rug_color_under ?db ?db)
            (not
              (not
                (forall (?p1 - wall)
                  (or
                    (not
                      (< 2 (distance ?p1 ?p1))
                    )
                    (agent_holds ?r)
                  )
                )
              )
            )
            (and
              (open ?b)
              (exists (?t1 - dodgeball)
                (and
                  (not
                    (and
                      (toggled_on ?b)
                      (in_motion ?c)
                    )
                  )
                  (and
                    (agent_holds ?t1)
                    (exists (?d - dodgeball ?t - shelf ?d - ball)
                      (agent_holds ?t)
                    )
                  )
                )
              )
              (not
                (is_setup_object bed)
              )
            )
          )
          (adjacent ?db ?db)
        )
        (agent_holds agent)
      )
    )
  )
)
(:constraints
  (and
    (preference cubeBlockThrowAttempt
      (exists (?b - (either dodgeball teddy_bear cellphone))
        (then
          (hold (and (agent_holds ?d) (in_motion ?b) ) )
          (hold (in_motion ?r) )
          (hold (and (agent_holds agent) (in ?b ?r) ) )
        )
      )
    )
    (preference laptopAndBookInPlace
      (exists (?d - hexagonal_bin ?tb - ball)
        (then
          (once (in_motion ?b) )
          (hold-while (not (= 3) ) (or (agent_holds ?d) (agent_holds ?o) ) )
          (hold (not (in_motion ?tb) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects cubeBlockThrowAttempt:pink_dodgeball) (total-score) )
)
(:scoring
  (count cubeBlockThrowAttempt:tan:pink_dodgeball)
)
)



(define (game game-id-129) (:domain few-objects-room-v1)
(:setup
  (forall (?o - hexagonal_bin)
    (not
      (game-optional
        (on ?c3 ?b)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownThroughRampAndBlocksToBin
      (exists (?c1 - dodgeball ?t1 - blue_cube_block ?r - curved_wooden_ramp)
        (then
          (hold (agent_holds ?c4) )
          (once (in ?d ?d1) )
          (hold (agent_holds ?p) )
        )
      )
    )
    (preference objectMoved
      (exists (?d - ball)
        (then
          (once (in_motion ?c) )
          (once (agent_holds ?h) )
          (once (on ?d ?l1) )
        )
      )
    )
  )
)
(:terminal
  (= (count-overlapping objectMoved:doggie_bed) (total-time) )
)
(:scoring
  (count-once ballThrownThroughRampAndBlocksToBin:golfball)
)
)



(define (game game-id-130) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (not
      (forall (?d2 - (either dodgeball hexagonal_bin doggie_bed))
        (not
          (and
            (= (x_position ?h) (distance_side room_center back ?d1) 1)
            (adjacent_side room_center front ?d2)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b7 - ball ?c - ball)
      (and
        (preference blockOnBlockInTowerAtEnd
          (exists (?d - dodgeball)
            (at-end
              (and
                (and
                  (touch ?o ?b)
                  (in_motion ?b)
                )
              )
            )
          )
        )
        (preference redDodgeballThrownToBin
          (exists (?l - ball ?c - triangular_ramp ?c - cube_block ?h - hexagonal_bin ?b - game_object)
            (then
              (once (touch ?c ?b4) )
              (hold-while (and (on ?l ?b) (in_motion ?r) ) (and (in_motion ?b) (and (not (agent_holds ?o) ) (and (in_motion ?b) (and (in ?b ?o3) (in ?c ?ob) (agent_holds ?b) ) ) ) ) )
              (once (agent_holds ?b) )
            )
          )
        )
        (preference ballThrowAttempt
          (exists (?b1 - hexagonal_bin)
            (then
              (once (and (in ?b1 ?o) (and (agent_holds ?o) (and (not (not (not (and (> 6 (distance ?w1 ?d)) (not (< (distance ?h ?c) (distance ?c ?l1)) ) ) ) ) ) (not (on ?b1 ?c) ) ) (not (and (not (adjacent desk bed) ) (on ?c ?c) (in_motion ?b1) (not (agent_holds ?b1) ) (not (on ?d ?d) ) (in_motion ?d) (and (not (and (in_motion ?b1) (adjacent room_center ?b1) ) ) (and (not (or (and (and (in_motion ?o) (on ?l2 ?c) (on ?c ?d) (in_motion ?b) ) (agent_holds ?c) ) (or (and (in ?d ?c) (agent_holds ?b1) (not (agent_holds ?c) ) (in_motion ?b) (touch ?c ?b1) (in_motion ?g) ) (same_type ?r ?b1) (and (on agent ?o1) (agent_holds ?b) ) ) ) ) (not (adjacent agent ?c) ) ) ) ) ) ) ) )
              (hold (not (not (agent_holds ?b) ) ) )
              (once (< (distance ?h ?c) 1) )
            )
          )
        )
        (preference throwKnocksBlock
          (exists (?b - color)
            (then
              (once (same_color ?d green) )
              (once (and (not (not (agent_holds ?b) ) ) (touch ?c ?c) (in_motion ?g) ) )
              (once (and (in_motion bed) (and (in_motion ?b) (= (x_position ?c) (distance ?t1 ?g)) ) (same_color ?b8 pink) ) )
            )
          )
        )
      )
    )
    (preference otherObjectsOnDeskShelf
      (exists (?h - hexagonal_bin ?l1 - hexagonal_bin)
        (then
          (once (not (and (object_orientation agent ?l1) (in_motion ?l1) ) ) )
          (once (not (and (touch bed ?h) (on ?d rug) ) ) )
          (hold (agent_holds ?d) )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (count-once-per-objects blockOnBlockInTowerAtEnd:basketball) )
)
(:scoring
  (count-once-per-objects throwKnocksBlock:hexagonal_bin)
)
)



(define (game game-id-131) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?ob - dodgeball)
      (and
        (game-conserved
          (same_color ?b pink)
        )
      )
    )
    (game-conserved
      (not
        (exists (?p - chair)
          (not
            (in_motion ?p)
          )
        )
      )
    )
    (forall (?h - (either book bed laptop))
      (game-conserved
        (not
          (in_motion ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference pinkObjectMovedToRoomCenter
      (exists (?b - dodgeball)
        (then
          (hold (not (and (not (> (distance agent ?b) (distance ?b ?o)) ) (on ?b ?d) (not (and (in_motion bed) (on ?b ?b) ) ) (same_color ?b pink) ) ) )
          (once (in ?c ?b) )
          (once (agent_holds ?d) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) 5 )
)
(:scoring
  (external-forall-maximize
    (* (- 6 3 ) 20 )
  )
)
)



(define (game game-id-132) (:domain medium-objects-room-v1)
(:setup
  (exists (?t - hexagonal_bin)
    (and
      (game-conserved
        (in_motion ?t)
      )
      (exists (?h ?o - dodgeball ?d - cylindrical_block)
        (and
          (game-conserved
            (equal_z_position agent ?d)
          )
          (and
            (and
              (exists (?w - dodgeball ?r - hexagonal_bin)
                (and
                  (and
                    (exists (?r2 - dodgeball)
                      (game-conserved
                        (object_orientation ?tb upside_down)
                      )
                    )
                    (exists (?w1 ?h - game_object ?g - cube_block ?b10 - ball)
                      (game-optional
                        (rug_color_under ?t ?b10)
                      )
                    )
                  )
                )
              )
              (game-conserved
                (not
                  (in ?t ?d)
                )
              )
            )
            (and
              (game-conserved
                (on ?t ?g)
              )
            )
          )
        )
      )
      (and
        (exists (?r - beachball ?d - hexagonal_bin)
          (exists (?h - (either cd pen) ?b - (either dodgeball main_light_switch) ?b - dodgeball)
            (game-conserved
              (on ?d pink_dodgeball)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?l1 - hexagonal_bin ?c - (either tall_cylindrical_block key_chain))
      (and
        (preference objectLandsInBin
          (exists (?h - cube_block)
            (at-end
              (or
                (and
                  (and
                    (agent_holds ?h)
                    (equal_x_position ?h ?h)
                  )
                  (adjacent_side ?t1 front ?c)
                  (or
                    (not
                      (agent_holds ?d)
                    )
                    (not
                      (< (distance ?c ?c) 9)
                    )
                    (not
                      (in_motion ?h)
                    )
                  )
                )
                (and
                  (in_motion ?c)
                  (not
                    (and
                      (in ?d ?h)
                      (in ?o ?d)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
    (forall (?b - doggie_bed ?d - bridge_block)
      (and
        (preference throwToRampToBin
          (exists (?b - curved_wooden_ramp)
            (then
              (hold (in ?b ?d) )
              (once (in_motion ?d) )
              (once (same_object ?d ?b) )
            )
          )
        )
        (preference golfballLandsInBinThroughRamp
          (exists (?h ?o3 - dodgeball)
            (then
              (once (not (and (and (in_motion ?d) (on ?r1 ?b) ) (and (same_color ?b ?o2) (in_motion ?d) ) ) ) )
              (once (exists (?p1 - cylindrical_block ?h - book) (or (not (on ?o3 ?l1) ) (and (agent_holds ?b) ) ) ) )
              (once (adjacent ?d ?d) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (> (external-forall-maximize (count-once-per-objects golfballLandsInBinThroughRamp:basketball) ) (+ 5 10 )
    )
  )
)
(:scoring
  (count objectLandsInBin:green)
)
)



(define (game game-id-133) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (in_motion ?d)
  )
)
(:constraints
  (and
    (preference failedThrowToBin
      (exists (?b1 - building ?r2 - (either cube_block alarm_clock))
        (then
          (hold (and (rug_color_under ?h yellow) (not (not (and (and (exists (?w1 - (either golfball tall_cylindrical_block)) (game_over ) ) (on ?r2 ?d) ) (not (game_over ) ) ) ) ) ) )
          (once (not (agent_holds ?r2) ) )
          (hold (not (same_color ?r2 yellow) ) )
        )
      )
    )
  )
)
(:terminal
  (> (total-score) (* (count-once-per-objects failedThrowToBin:book) 20 )
  )
)
(:scoring
  (* 50 (/ (count failedThrowToBin:beachball) 2 ) (* 3 2 )
    2
    3
    (count failedThrowToBin:dodgeball)
    (count failedThrowToBin:pink)
    (count failedThrowToBin:pink)
    (* (* 20 (count-overlapping failedThrowToBin:purple) )
      5
    )
    (* (* 2 3 (= 12 (count failedThrowToBin:yellow) )
      )
      20
      (* 15 (* (count failedThrowToBin:tall_cylindrical_block:basketball) (count-once-per-objects failedThrowToBin:golfball) )
      )
      8
    )
    3
    (count failedThrowToBin:pink:golfball)
  )
)
)



(define (game game-id-134) (:domain few-objects-room-v1)
(:setup
  (forall (?b9 ?o - ball ?s - hexagonal_bin)
    (exists (?c1 - book)
      (exists (?b - (either top_drawer doggie_bed))
        (and
          (forall (?p - shelf ?b - block)
            (forall (?o - ball)
              (exists (?d ?p3 - hexagonal_bin ?d - building)
                (forall (?d - doggie_bed)
                  (and
                    (exists (?l1 ?o5 - wall ?c - block ?ob - hexagonal_bin)
                      (exists (?b - hexagonal_bin)
                        (game-conserved
                          (in_motion ?ob)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockInTowerKnockedByDodgeball
      (exists (?r - wall ?b - cube_block)
        (then
          (hold-while (in rug ?b) (not (not (in_motion ?c) ) ) )
          (once (on ?b ?b) )
          (hold-while (in ?b ?b) (on ?t ?o) )
        )
      )
    )
    (preference pyramidBlockAtopTowerAtEnd
      (exists (?o3 ?l2 - block)
        (at-end
          (and
            (and
              (not
                (and
                  (agent_holds ?l)
                  (in_motion ?l2)
                )
              )
              (not
                (adjacent east_sliding_door ?l2)
              )
            )
            (in_motion ?d)
          )
        )
      )
    )
  )
)
(:terminal
  (= (count pyramidBlockAtopTowerAtEnd:blue_cube_block) (external-forall-maximize (count-once-per-external-objects pyramidBlockAtopTowerAtEnd:book:dodgeball) ) )
)
(:scoring
  (count-increasing-measure pyramidBlockAtopTowerAtEnd:pink:dodgeball)
)
)



(define (game game-id-135) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (not
      (equal_z_position desk ?b)
    )
  )
)
(:constraints
  (and
    (preference dodgeballFromDeskToTarget
      (exists (?b - chair)
        (then
          (hold (on ?w ?d) )
          (once (>= 1 1) )
          (hold-while (and (agent_holds ?d) (in_motion ?l2) ) (in_motion ?b) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (total-score) (+ 3 (count dodgeballFromDeskToTarget:yellow:golfball) )
    )
    (<= 30 (- 10 )
    )
    (<= 1 (* 3 (count dodgeballFromDeskToTarget:dodgeball) )
    )
  )
)
(:scoring
  (external-forall-maximize
    (+ (count-once-per-external-objects dodgeballFromDeskToTarget:pink) (count dodgeballFromDeskToTarget:basketball) 1 )
  )
)
)



(define (game game-id-136) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (in_motion ?c3)
  )
)
(:constraints
  (and
    (forall (?c4 - dodgeball)
      (and
        (preference thrownBallReachesEnd
          (exists (?o5 - dodgeball ?l2 - (either floor pencil key_chain))
            (then
              (hold (equal_z_position ?l2 ?c4) )
              (hold-while (and (and (not (not (exists (?o5 - tall_cylindrical_block) (same_object ?l2 bed) ) ) ) (agent_holds ?c4) ) (in ?c4 ?r) ) (same_object ?g ?d) (not (and (on ?h ?c4) (and (agent_holds ?c6) (in_motion ?o) ) ) ) )
              (hold-while (not (in_motion ?c4) ) (and (agent_crouches ) (agent_holds ?c4) ) )
            )
          )
        )
      )
    )
    (preference objectWithMatchingColor
      (exists (?b - cube_block)
        (then
          (once (and (agent_holds ?b) (in_motion ?b) ) )
          (once (and (not (same_type ?w ?l3) ) (same_object ?b ?ob) ) )
          (once (exists (?t2 - hexagonal_bin) (on ?b ?b2) ) )
        )
      )
    )
    (preference laptopAndBookInPlace
      (exists (?t2 - hexagonal_bin ?p2 - curved_wooden_ramp)
        (then
          (hold-while (same_color ?c ?p2) (exists (?d - pillow ?b - hexagonal_bin) (and (or (in_motion ?p) (and (and (and (or (on ?b ?l) (adjacent desk ?b) ) (in ?c2 ?d) ) (agent_holds ?p2) ) (and (agent_holds agent) (not (rug_color_under ?r ?p2) ) (= 3) ) ) (< 0.5 6) ) (in_motion ?b) ) ) )
          (once (agent_holds ?b) )
          (hold (and (< (distance door ?p2) (distance ?p2 ?p2)) (object_orientation ?h upright) ) )
        )
      )
    )
  )
)
(:terminal
  (<= (count thrownBallReachesEnd:yellow) 5 )
)
(:scoring
  (+ (count-once-per-external-objects thrownBallReachesEnd:dodgeball) (count objectWithMatchingColor:dodgeball:beachball) )
)
)



(define (game game-id-137) (:domain many-objects-room-v1)
(:setup
  (forall (?w - curved_wooden_ramp ?w - ball)
    (and
      (forall (?t ?tb - ball)
        (game-optional
          (in_motion ?tb)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToChair
      (exists (?r - dodgeball)
        (then
          (once (in_motion ?r) )
          (hold (same_type ?r ?r) )
          (once (agent_holds ?r) )
        )
      )
    )
    (forall (?d ?b5 - shelf)
      (and
        (preference dodgeballThrownToBinFromDesk
          (exists (?l - cube_block ?c2 - cube_block)
            (at-end
              (and
                (and
                  (not
                    (in_motion ?d)
                  )
                  (not
                    (not
                      (not
                        (adjacent_side rug front ?o)
                      )
                    )
                  )
                )
                (not
                  (and
                    (in_motion ?h)
                    (in_motion ?l)
                  )
                )
              )
            )
          )
        )
        (preference blockThrowAttempt
          (exists (?d1 - hexagonal_bin ?t1 - dodgeball)
            (at-end
              (agent_holds ?h)
            )
          )
        )
        (preference objectToBinOnFirstTry
          (exists (?g - (either desktop block))
            (then
              (hold-while (on ?l ?b5) (in ?b5 ?d) )
              (hold (and (object_orientation ?g ?d) (< 2 (x_position ?d)) (in_motion ?b5) (adjacent ?g ?g) ) )
              (once (and (and (and (and (in rug ?d) (in_motion ?g) ) (and (adjacent ?h ?c) (and (agent_holds ?d) (or (agent_holds ?g) (in ?g ?g) ) ) ) ) (and (same_type ?b5 ?g) (in_motion ?b) ) ) (on ?l2 agent) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< 10 (count dodgeballThrownToBinFromDesk:dodgeball) )
)
(:scoring
  (+ (- (- (* (>= 2 (* 8 (count objectToBinOnFirstTry:pink) 20 5 (count dodgeballThrownToBinFromDesk:red_pyramid_block) 1 )
          )
          (count-once-per-objects dodgeballThrownToBinFromDesk:golfball:golfball:pink_dodgeball)
        )
      )
    )
    3
  )
)
)



(define (game game-id-138) (:domain few-objects-room-v1)
(:setup
  (exists (?b - (either pen wall))
    (game-conserved
      (not
        (agent_holds ?b)
      )
    )
  )
)
(:constraints
  (and
    (preference blockInTowerKnocked
      (exists (?c - ball)
        (at-end
          (in_motion ?c1)
        )
      )
    )
  )
)
(:terminal
  (<= (count-once-per-external-objects blockInTowerKnocked:dodgeball:hexagonal_bin) 2 )
)
(:scoring
  (count-shortest blockInTowerKnocked:beachball:dodgeball)
)
)



(define (game game-id-139) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?g - (either doggie_bed blue_cube_block pen) ?o2 ?b ?s - dodgeball)
      (exists (?b - hexagonal_bin)
        (forall (?p1 - (either bridge_block hexagonal_bin))
          (exists (?l - hexagonal_bin ?r - curved_wooden_ramp)
            (game-conserved
              (agent_holds ?t)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?s - hexagonal_bin ?h - teddy_bear ?c - (either cellphone cylindrical_block))
      (and
        (preference throwBallToDoggieBed
          (exists (?h ?b - dodgeball ?b2 - dodgeball)
            (at-end
              (in_motion ?c)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (total-score) (total-score) )
  )
)
(:scoring
  (count-increasing-measure throwBallToDoggieBed:dodgeball)
)
)



(define (game game-id-140) (:domain medium-objects-room-v1)
(:setup
  (or
    (game-optional
      (not
        (in_motion ?b)
      )
    )
  )
)
(:constraints
  (and
    (preference nonBlockPlacedInBuilding
      (exists (?d - golfball ?p - blue_cube_block)
        (then
          (once (or (and (rug_color_under ?p ?c) (on ?p ?p) ) (and (< 1 6) (agent_holds ?h) ) ) )
          (once-measure (and (not (not (not (not (agent_holds ?p) ) ) ) ) (and (and (agent_holds ?p) (in_motion ?p) (and (exists (?o ?l3 ?b ?g - hexagonal_bin ?w - hexagonal_bin ?l1 ?o2 ?h ?g - game_object) (in ?p ?b) ) (and (not (agent_holds ?g) ) (not (adjacent ?p ?b) ) ) ) ) (adjacent ?t1 ?o1) ) ) (distance rug ?b) )
          (hold (in_motion ?d) )
        )
      )
    )
  )
)
(:terminal
  (> 4 (* (count-once-per-objects nonBlockPlacedInBuilding:pink) (count nonBlockPlacedInBuilding:dodgeball) (count nonBlockPlacedInBuilding:dodgeball) 3 (* 10 3 )
      1
    )
  )
)
(:scoring
  (count-measure nonBlockPlacedInBuilding:green:dodgeball)
)
)



(define (game game-id-141) (:domain medium-objects-room-v1)
(:setup
  (not
    (forall (?g - hexagonal_bin)
      (exists (?l2 - dodgeball ?b1 ?b - dodgeball)
        (forall (?t1 - curved_wooden_ramp ?r2 - hexagonal_bin)
          (game-optional
            (agent_holds ?b1)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockInTowerKnocked
      (exists (?o2 - triangular_ramp)
        (then
          (hold (in ?o2 ?o2) )
          (once (agent_holds ?o2) )
          (once (and (not (not (in_motion ?b) ) ) (agent_holds ?r) ) )
          (once (and (agent_holds ?o2) (not (and (on ?h ?o2) (and (and (and (and (agent_crouches ) (< (distance ?h ?d) (distance ?o2 ?r)) ) (in_motion ?b) ) (< (distance ?o2 ?o2) 10) (in_motion ?b) ) (not (and (and (above ?o2 ?o2) (and (not (broken ?b) ) (on ?o2 ?o2) ) ) (not (agent_holds ?d) ) (and (not (between ?o2 ?bl ?o2) ) (same_type ?c block) ) ) ) ) ) ) ) )
          (once (touch ?d ?o2) )
          (once (not (and (on ?h ?b) (not (not (and (in ?o2 ?o2) (rug_color_under ?o2 ?tb) ) ) ) (in_motion ?f) (not (and (not (in ?o2 ?b1) ) (< (building_size ?c) (distance desk ?d)) (< 5 (distance desk ?o2)) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 1 (total-score) )
)
(:scoring
  (count-total blockInTowerKnocked)
)
)



(define (game game-id-142) (:domain medium-objects-room-v1)
(:setup
  (exists (?s - hexagonal_bin ?o - (either doggie_bed bridge_block yellow_cube_block))
    (game-conserved
      (is_setup_object ?b)
    )
  )
)
(:constraints
  (and
    (forall (?h - triangular_ramp)
      (and
        (preference objectInBuilding
          (exists (?o - hexagonal_bin)
            (then
              (once (not (not (not (touch ?b3 ?h) ) ) ) )
              (once (agent_holds ?o) )
              (once (and (touch ?o ?h) (is_setup_object ?b2) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (- 6 )
      2
    )
  )
)
(:scoring
  (count objectInBuilding:green:blue_pyramid_block:pyramid_block)
)
)



(define (game game-id-143) (:domain medium-objects-room-v1)
(:setup
  (exists (?d - pillow)
    (exists (?d - building ?w - chair ?o - game_object)
      (and
        (and
          (game-conserved
            (and
              (and
                (and
                  (in_motion ?d)
                  (and
                    (forall (?c - (either pillow wall cellphone) ?b - curved_wooden_ramp ?w - teddy_bear)
                      (not
                        (and
                          (and
                            (= (distance rug ?c2) (distance ?w ?o))
                            (and
                              (and
                                (not
                                  (on ?b ?o)
                                )
                                (in_motion ?d)
                                (in_motion ?o)
                                (not
                                  (and
                                    (forall (?o2 - doggie_bed ?d - ball)
                                      (not
                                        (not
                                          (and
                                            (in_motion ?l2)
                                            (on ?o ?d)
                                          )
                                        )
                                      )
                                    )
                                    (touch ?d ?w)
                                    (exists (?w2 - teddy_bear)
                                      (on ?d ?g)
                                    )
                                    (agent_holds ?d)
                                  )
                                )
                              )
                              (in ?c ?d)
                            )
                          )
                        )
                      )
                    )
                    (> (distance bed ?d) 1)
                  )
                )
                (not
                  (not
                    (in_motion ?o)
                  )
                )
              )
              (< (distance side_table ?d) (distance ?d ?b))
            )
          )
          (and
            (game-conserved
              (touch ?r ?b)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?t2 - dodgeball)
      (and
        (preference ballInOrOnBin
          (exists (?h - beachball)
            (then
              (once (in_motion ?d) )
              (hold (agent_holds ?o) )
              (once (and (on ?t2 ?s) (and (= 1 (distance ?h ?d)) (on ?t2 ?h) ) ) )
            )
          )
        )
      )
    )
    (preference throwToRampToBin
      (exists (?b6 - building)
        (then
          (hold (not (agent_holds ?b6) ) )
          (once (and (and (exists (?d - wall) (same_object ?b6 ?d) ) (not (in_motion ?b) ) ) (in_motion agent) (not (agent_holds ?b6) ) ) )
          (once (on ?b6 ?b6) )
        )
      )
    )
  )
)
(:terminal
  (>= 60 (total-score) )
)
(:scoring
  (* 2 (external-forall-maximize (+ (count-once-per-objects ballInOrOnBin:white) 2 )
    )
  )
)
)



(define (game game-id-144) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?b7 - hexagonal_bin)
      (exists (?w1 - (either block dodgeball) ?d - (either dodgeball ball) ?g - curved_wooden_ramp)
        (or
          (game-optional
            (not
              (adjacent room_center ?b)
            )
          )
          (forall (?w - (either dodgeball pink))
            (and
              (game-conserved
                (in_motion ?b)
              )
              (and
                (and
                  (game-conserved
                    (and
                      (agent_holds ?b7)
                      (agent_holds bed)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
    (and
      (and
        (game-optional
          (agent_holds ?h)
        )
        (exists (?b6 - dodgeball ?o - hexagonal_bin)
          (game-conserved
            (not
              (not
                (in ?o ?o)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference castleBuilt
      (exists (?b - (either cube_block book))
        (then
          (hold (on ?b ?b) )
          (hold (not (same_type ?l pillow) ) )
          (hold (exists (?d - drawer ?b5 ?o2 - (either chair basketball blue_cube_block)) (exists (?s - hexagonal_bin) (= (distance_side ?h back ?o) (distance ?b ?b) (distance ?b5 ?d)) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (total-score) )
)
(:scoring
  (+ (count-once-per-objects castleBuilt:doggie_bed) (count castleBuilt:golfball) (+ (count-once-per-objects castleBuilt:purple) 15 )
  )
)
)



(define (game game-id-145) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (game-optional
        (in_motion bed)
      )
      (exists (?g - game_object ?g - dodgeball ?w - hexagonal_bin)
        (and
          (game-optional
            (broken ?h)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference pillowMovedToRoomCenter
      (exists (?r2 - hexagonal_bin)
        (then
          (once (in_motion ?d) )
          (once (faces ?o3 ?g) )
          (hold-while (agent_holds agent) (not (in ?d ?l) ) )
        )
      )
    )
    (forall (?d - hexagonal_bin)
      (and
        (preference ballNeverThrown
          (exists (?h - teddy_bear)
            (at-end
              (rug_color_under ?o pink)
            )
          )
        )
        (preference blockToBinFromRug
          (exists (?l1 - block)
            (then
              (once (in_motion ?c) )
              (hold (agent_holds ?l1) )
              (once (exists (?r - cube_block) (not (and (> (distance ?w1 ?l1) (distance ?c ?d)) (on ?b ?c) ) ) ) )
              (once (on ?l1 ?l1) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (> (count blockToBinFromRug:purple) (count-once ballNeverThrown:dodgeball:brown) )
    (or
      (>= (* (* (count ballNeverThrown:dodgeball:red) (count ballNeverThrown:yellow) )
          5
        )
        (+ (count ballNeverThrown:blue_cube_block:pink_dodgeball) (count ballNeverThrown:beachball) )
      )
    )
    (>= (count-overlapping ballNeverThrown:purple) (total-score) )
  )
)
(:scoring
  (= (/ (- (* (count-once-per-objects ballNeverThrown:golfball) 40 )
      )
      (+ (- (* 10 2 (* (+ (count pillowMovedToRoomCenter:basketball:dodgeball) (external-forall-maximize (- 3 )
                )
              )
              (count-once ballNeverThrown:golfball)
              7
            )
          )
        )
        (* (count-once pillowMovedToRoomCenter:yellow_cube_block:orange:golfball) (* 10 3 )
          10
          (* 1 15 )
        )
      )
    )
    10
  )
)
)



(define (game game-id-146) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (exists (?t ?b - pillow ?c - triangular_ramp)
      (= 5 6)
    )
  )
)
(:constraints
  (and
    (preference ballThrownIntoTarget
      (exists (?p - doggie_bed ?tb - shelf)
        (then
          (once (agent_holds ?l) )
          (hold (in_motion ?b) )
          (once (not (touch ?tb agent) ) )
          (once (not (and (< 3 1) (exists (?b1 - cube_block) (touch ?o ?b1) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (+ (- 1 )
      (+ 100 (* (count-once-per-objects ballThrownIntoTarget:beachball) (count ballThrownIntoTarget:pink) )
        (- 3 )
      )
    )
  )
)
(:scoring
  (+ (* (* (count ballThrownIntoTarget:doggie_bed:bed) (+ (= (count-once-per-external-objects ballThrownIntoTarget:hexagonal_bin:yellow_cube_block) 2 )
          (+ 5 3 )
        )
        (* (* 7 8 )
          5
        )
        (* (= 6 3 )
          (count ballThrownIntoTarget:dodgeball)
        )
        (+ (count-once ballThrownIntoTarget:basketball) 20 )
        (count ballThrownIntoTarget)
      )
      (count ballThrownIntoTarget:blue_dodgeball:cube_block)
    )
    2
  )
)
)



(define (game game-id-147) (:domain many-objects-room-v1)
(:setup
  (forall (?c - dodgeball)
    (game-optional
      (in_motion ?o)
    )
  )
)
(:constraints
  (and
    (forall (?b1 - hexagonal_bin)
      (and
        (preference throwBallToBin
          (exists (?s - triangular_ramp)
            (at-end
              (agent_holds ?b1)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 4 (+ 1 (count-once-per-objects throwBallToBin:basketball) )
    )
    (>= (count-once-per-objects throwBallToBin:blue_dodgeball:beachball) (count-once-per-objects throwBallToBin:yellow:blue_dodgeball) )
  )
)
(:scoring
  (count-once throwBallToBin:pink_dodgeball:pink)
)
)



(define (game game-id-148) (:domain medium-objects-room-v1)
(:setup
  (exists (?h - cylindrical_block)
    (game-conserved
      (and
        (< 4 4)
        (on pink_dodgeball ?h)
      )
    )
  )
)
(:constraints
  (and
    (preference throwToBin
      (exists (?l3 - ball)
        (then
          (once (touch ?d agent) )
          (once (or (touch ?l3 ?l3) (agent_holds ?b) ) )
          (once (not (in ?l3 ?h) ) )
        )
      )
    )
    (forall (?h - game_object)
      (and
        (preference throwFromBehindChairsInBin
          (exists (?p1 - bridge_block ?c - ball ?h - beachball)
            (then
              (once (agent_holds ?h) )
              (once (on ?h ?h) )
              (once (agent_holds agent) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= (count-once-per-objects throwFromBehindChairsInBin:dodgeball:dodgeball) 8 )
)
(:scoring
  (> 8 10 )
)
)



(define (game game-id-149) (:domain medium-objects-room-v1)
(:setup
  (exists (?d - shelf)
    (exists (?b - dodgeball)
      (and
        (game-conserved
          (and
            (and
              (and
                (not
                  (in_motion ?l)
                )
                (and
                  (touch ?d ?t)
                  (on ?d ?b)
                )
                (adjacent_side ?s front ?b)
              )
              (on ?l1 ?d)
            )
            (adjacent ?d ?d)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballDroppedInBin
      (exists (?o3 - hexagonal_bin ?s - block)
        (then
          (hold (not (on ?s desk) ) )
          (once (not (agent_holds ?s) ) )
          (once (is_setup_object ?s) )
        )
      )
    )
  )
)
(:terminal
  (or
    (and
      (>= 3 (* (+ (count-overlapping ballDroppedInBin:dodgeball) 5 )
          1
          0
          (-
            (* 20 (* (- (+ (count-unique-positions ballDroppedInBin:blue_dodgeball) 0 )
                )
                (count-overlapping ballDroppedInBin:red_pyramid_block)
              )
              3
            )
            30
          )
          (* (= (= (count ballDroppedInBin:pink_dodgeball:dodgeball) 3 )
              10
            )
            (* (count ballDroppedInBin:hexagonal_bin) 20 )
            (* (count-measure ballDroppedInBin:hexagonal_bin) 6 )
          )
        )
      )
    )
    (<= (- (count-once-per-external-objects ballDroppedInBin:beachball) )
      (* (count ballDroppedInBin:pink:dodgeball) 20 )
    )
    (> (total-score) (count ballDroppedInBin:basketball:yellow) )
  )
)
(:scoring
  (count ballDroppedInBin:basketball)
)
)



(define (game game-id-150) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?o - game_object ?g - hexagonal_bin)
      (game-conserved
        (in_motion top_shelf)
      )
    )
    (exists (?d - triangular_ramp)
      (exists (?d - hexagonal_bin)
        (forall (?s - doggie_bed)
          (game-optional
            (in floor ?b6)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?tb - game_object ?r2 - doggie_bed)
      (and
        (preference dodgeballBouncesOnceToDoggieBed
          (exists (?c3 - flat_block)
            (then
              (hold-while (object_orientation agent upright) (in_motion rug) )
              (once (agent_holds ?o2) )
              (hold (= 5 (x_position ?c)) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (total-time) )
)
(:scoring
  (count-once dodgeballBouncesOnceToDoggieBed:hexagonal_bin:side_table)
)
)



(define (game game-id-151) (:domain many-objects-room-v1)
(:setup
  (exists (?l4 - (either pillow alarm_clock))
    (not
      (game-optional
        (exists (?w2 - (either dodgeball credit_card) ?t - color)
          (< 1 1)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - triangular_ramp ?w2 - hexagonal_bin)
      (and
        (preference ballThrownToRug
          (exists (?t - desk_shelf)
            (then
              (hold (and (on ?w2 ?o) (agent_holds ?o) (and (and (agent_holds ?c) (agent_holds ?t) (not (in_motion ?w2) ) ) (touch ?t ?d) (equal_z_position bed ?w2) ) ) )
              (once (and (on ?t ?r) (on ?w2 ?t) ) )
              (hold (not (in_motion ?t) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 8 (* (count-once-per-objects ballThrownToRug:wall) (count ballThrownToRug:golfball) (count-once-per-objects ballThrownToRug:pink_dodgeball) )
  )
)
(:scoring
  (count-once-per-objects ballThrownToRug:orange:basketball:dodgeball)
)
)



(define (game game-id-152) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (game-optional
        (agent_holds agent)
      )
    )
  )
)
(:constraints
  (and
    (preference objectOnBed
      (exists (?t - game_object)
        (at-end
          (on ?t ?t)
        )
      )
    )
  )
)
(:terminal
  (>= 5 (count-increasing-measure objectOnBed:blue_cube_block) )
)
(:scoring
  (* (+ 3 (count-once-per-objects objectOnBed:beachball) (count-once-per-objects objectOnBed:red:beachball) 6 100 0.7 )
    (count-measure objectOnBed:cylindrical_block)
  )
)
)



(define (game game-id-153) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?b ?w1 - wall ?b5 - block)
      (and
        (game-conserved
          (and
            (in ?b5 ?b5)
            (and
              (same_color ?b blue)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballFromBlockToBin
      (exists (?p - (either golfball cylindrical_block cellphone) ?t - wall)
        (then
          (once (not (not (and (not (agent_holds ?t) ) (on rug ?b3) (not (in_motion bed) ) ) ) ) )
          (once (and (agent_holds ?t) (on ?t ?t) ) )
          (once (and (and (not (and (agent_holds ?d) (and (and (and (and (on ?t ?t) (exists (?h - pillow ?db - hexagonal_bin ?d2 - chair) (= 1 (distance ?r ?h)) ) ) (and (above ?c ?g) (open ?c2) (not (agent_holds ?t) ) ) (touch ?b ?t) ) (exists (?b3 - hexagonal_bin ?t1 ?d ?h ?d - game_object) (adjacent_side room_center ?d ?d) ) ) (in_motion ?t) ) ) ) (equal_z_position room_center ?p) ) (or (on ?g ?o) (not (touch ?t ?b) ) ) ) )
        )
      )
    )
    (forall (?h - cube_block)
      (and
        (preference dodgeballThrownToBin
          (exists (?l2 - dodgeball)
            (then
              (once (rug_color_under ?b ?c) )
              (hold (rug_color_under ?l2 ?h) )
              (once (above ?o ?b) )
            )
          )
        )
        (preference cubeThrownToBin
          (exists (?b4 ?h - chair ?b9 - dodgeball)
            (then
              (once (in ?w ?l) )
              (once (and (and (> 4 1) (and (on ?d ?c4) (broken ?h) ) ) (on rug ?b9) ) )
              (hold (adjacent ?b9 ?b9) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-overlapping dodgeballFromBlockToBin:dodgeball) (total-time) )
)
(:scoring
  (count dodgeballFromBlockToBin:golfball)
)
)



(define (game game-id-154) (:domain few-objects-room-v1)
(:setup
  (forall (?h - doggie_bed)
    (game-conserved
      (in ?h ?h)
    )
  )
)
(:constraints
  (and
    (preference blockToBinFromRug
      (exists (?b6 - game_object)
        (then
          (once (on ?l ?b6) )
          (once (touch ?b6 ?c6) )
          (once (and (in_motion ?b6) (not (game_over ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (+ (* (count blockToBinFromRug:golfball) 3 )
        10
        (count blockToBinFromRug:blue_dodgeball:basketball:beachball)
      )
      (count blockToBinFromRug:orange)
    )
    (count-once-per-objects blockToBinFromRug:doggie_bed)
  )
)
(:scoring
  (count blockToBinFromRug:purple)
)
)



(define (game game-id-155) (:domain medium-objects-room-v1)
(:setup
  (exists (?b2 - dodgeball)
    (exists (?h - ball)
      (game-conserved
        (in_motion ?b2)
      )
    )
  )
)
(:constraints
  (and
    (preference nonBlockPlacedInBuilding
      (exists (?ob - ball)
        (then
          (hold (in_motion ?ob) )
          (hold (agent_holds ?ob) )
          (once (and (not (touch ?ob ?ob) ) (and (in_motion ?b) (> (distance ?ob ?ob) 1) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 6 (total-score) )
    (>= (total-score) (* (count nonBlockPlacedInBuilding:red:blue_pyramid_block) (count nonBlockPlacedInBuilding:dodgeball:red) )
    )
  )
)
(:scoring
  (count nonBlockPlacedInBuilding:golfball)
)
)



(define (game game-id-156) (:domain few-objects-room-v1)
(:setup
  (exists (?o - hexagonal_bin ?l - (either triangle_block dodgeball teddy_bear))
    (exists (?h ?g - color ?d - building)
      (forall (?w - cube_block)
        (game-conserved
          (or
            (and
              (agent_holds ?l)
              (in_motion ?w)
            )
            (not
              (and
                (< (distance desk ?w) 2)
              )
            )
            (touch ?d ?l)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference agentLeavesDogbedOrNoMoreBalls
      (exists (?d - wall)
        (at-end
          (in_motion ?d)
        )
      )
    )
    (preference throwBallToBin
      (exists (?d - (either dodgeball dodgeball))
        (then
          (once (and (adjacent bed ?d) (and (in ?b ?db) (adjacent desk ?d) ) (in_motion ?h) (adjacent_side ?d front ?d) (and (= 1 1 1 (distance west_wall ?d)) (and (equal_z_position desk ?d) (in_motion floor) ) ) (and (between ?d ?d ?d) (not (in_motion ?d) ) ) ) )
          (once (forall (?d - hexagonal_bin ?x - game_object) (in_motion ?w) ) )
          (once (touch ?d ?l) )
        )
      )
    )
  )
)
(:terminal
  (>= 5 10 )
)
(:scoring
  (+ (count-once-per-objects throwBallToBin:dodgeball) (* 9 (+ (* (count agentLeavesDogbedOrNoMoreBalls:dodgeball) 5 )
        (count agentLeavesDogbedOrNoMoreBalls:beachball)
      )
    )
    4
    (count-once-per-objects throwBallToBin:red)
  )
)
)



(define (game game-id-157) (:domain medium-objects-room-v1)
(:setup
  (exists (?h - (either side_table dodgeball cube_block) ?p3 - game_object)
    (game-optional
      (in ?r ?p3)
    )
  )
)
(:constraints
  (and
    (preference failedThrowAttempt
      (exists (?c - curved_wooden_ramp)
        (at-end
          (agent_holds ?r)
        )
      )
    )
    (preference redDodgeballThrownToBinWithoutTouchingFloor
      (exists (?d - chair)
        (then
          (once (in_motion ?d) )
          (hold (agent_holds ?d) )
          (hold (or (same_color ?d ?d) (on ?d ?s) ) )
        )
      )
    )
  )
)
(:terminal
  (< (total-time) (count redDodgeballThrownToBinWithoutTouchingFloor:hexagonal_bin:dodgeball:basketball) )
)
(:scoring
  (count failedThrowAttempt:basketball)
)
)



(define (game game-id-158) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?c - flat_block)
      (game-conserved
        (in ?c ?c)
      )
    )
  )
)
(:constraints
  (and
    (preference throwInBin
      (exists (?p1 - hexagonal_bin)
        (at-end
          (and
            (in ?p1 ?b8)
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (count throwInBin:blue_dodgeball) 3 )
    (>= 1 (total-score) )
  )
)
(:scoring
  (count throwInBin:orange)
)
)



(define (game game-id-159) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (on agent ?d)
  )
)
(:constraints
  (and
    (preference ballThrownToRug
      (exists (?h - hexagonal_bin)
        (then
          (hold (exists (?b2 - hexagonal_bin ?g - doggie_bed) (not (game_over ) ) ) )
          (once (and (in ?h ?h) ) )
          (once (and (and (in_motion ?h) (in_motion ?h) ) (and (agent_holds ?h) (agent_holds ?p) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 7 2 )
)
(:scoring
  (count-once-per-objects ballThrownToRug:blue_cube_block)
)
)



(define (game game-id-160) (:domain medium-objects-room-v1)
(:setup
  (exists (?b - (either rug golfball) ?h - drawer)
    (forall (?l3 - hexagonal_bin ?h - blue_cube_block ?h - wall)
      (exists (?tb - ball)
        (game-conserved
          (in ?b ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownIntoTarget
      (exists (?l1 - hexagonal_bin ?w2 - chair)
        (then
          (once (and (and (not (agent_holds ?w2) ) (and (agent_holds ?d) ) ) (and (in_motion ?w2) (agent_holds ?d) ) (adjacent_side desk ?w2 ?w2) ) )
        )
      )
    )
    (preference objectMovedRoomSide
      (exists (?l1 ?o - dodgeball ?c - hexagonal_bin)
        (at-end
          (forall (?o2 - (either rug basketball))
            (and
              (agent_holds ?o2)
              (touch ?o2 ?c)
              (or
                (in ?c ?o2)
                (and
                  (and
                    (between ?o2 ?c ?o2)
                    (not
                      (agent_holds ?c)
                    )
                    (in_motion ?c)
                    (> 9 1)
                  )
                  (and
                    (adjacent agent ?d)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (count objectMovedRoomSide:red) )
)
(:scoring
  (* 6 (* 6 1 )
  )
)
)



(define (game game-id-161) (:domain few-objects-room-v1)
(:setup
  (forall (?f - ball)
    (game-optional
      (in_motion ?f)
    )
  )
)
(:constraints
  (and
    (preference dodgeballHitsPillowWithoutTouchingBlock
      (exists (?r - cube_block)
        (then
          (once (on bed agent) )
          (once (not (in_motion ?r) ) )
          (once (not (in_motion ?r) ) )
        )
      )
    )
  )
)
(:terminal
  (= (count dodgeballHitsPillowWithoutTouchingBlock:tan) (count dodgeballHitsPillowWithoutTouchingBlock:yellow:hexagonal_bin) )
)
(:scoring
  (count-once-per-objects dodgeballHitsPillowWithoutTouchingBlock:dodgeball)
)
)



(define (game game-id-162) (:domain medium-objects-room-v1)
(:setup
  (not
    (game-optional
      (agent_holds ?d)
    )
  )
)
(:constraints
  (and
    (preference throwToDrawerOrBin
      (exists (?b6 ?c4 - dodgeball)
        (at-end
          (in bed pink_dodgeball)
        )
      )
    )
    (preference throwInBin
      (exists (?b - doggie_bed)
        (then
          (once (agent_holds ?c) )
          (hold (agent_holds ?r) )
          (hold (not (faces ?b top_drawer) ) )
        )
      )
    )
  )
)
(:terminal
  (> (total-score) 1 )
)
(:scoring
  (count-increasing-measure throwToDrawerOrBin:basketball)
)
)



(define (game game-id-163) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds ?b)
  )
)
(:constraints
  (and
    (preference blockThrowAttempt
      (exists (?t - (either mug key_chain cellphone key_chain))
        (at-end
          (or
            (on ?d desk)
            (and
              (exists (?b - triangular_ramp)
                (and
                  (not
                    (not
                      (and
                        (same_object desk bed)
                        (open ?t)
                        (in_motion ?b)
                      )
                    )
                  )
                  (on ?b ?d)
                )
              )
              (agent_holds ?p1)
            )
          )
        )
      )
    )
    (preference pillowMovedToRoomCenter
      (exists (?b2 - shelf)
        (then
          (once (touch ?b2 ?b2) )
          (hold-while (rug_color_under ?b2 ?c) (adjacent_side ?h front ?b2) )
        )
      )
    )
  )
)
(:terminal
  (>= 3 3 )
)
(:scoring
  (+ (* (count blockThrowAttempt:basketball) 25 )
    10
    (* (* 9 9 )
      (+ (* 10 (* (count pillowMovedToRoomCenter:book) 5 )
          (count pillowMovedToRoomCenter:doggie_bed:pyramid_block)
        )
        (count-once-per-objects pillowMovedToRoomCenter:beachball)
      )
    )
  )
)
)



(define (game game-id-164) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (broken ?c)
  )
)
(:constraints
  (and
    (forall (?b - cube_block ?g - game_object)
      (and
        (preference blockIncorrectlyPicked
          (exists (?b - cube_block)
            (then
              (once (agent_holds ?b) )
              (once (exists (?t - bridge_block ?o - dodgeball) (in_motion desk) ) )
              (once (in_motion ?b) )
            )
          )
        )
        (preference itemsTurnedOff
          (exists (?o1 - (either lamp doggie_bed))
            (then
              (hold-while (in_motion ?g) (agent_holds ?g) )
              (once (exists (?s - hexagonal_bin) (not (in_motion ?d) ) ) )
              (once (in_motion ?g) )
            )
          )
        )
        (preference throwBallToDoggieBed
          (exists (?l2 - cube_block)
            (at-end
              (and
                (in ?p2 ?g)
                (not
                  (agent_holds ?c3)
                )
              )
            )
          )
        )
      )
    )
    (preference objectWithMatchingColor
      (exists (?h - chair)
        (then
          (once (and (not (and (and (and (in_motion ?h) (agent_holds ?h) (on ?b ?d) ) (exists (?tb - cube_block) (in ?p ?o) ) ) (not (adjacent room_center ?h) ) (on ?h ?o2) ) ) (not (on ?h ?h) ) (on ?h ?d) ) )
          (once (in_motion floor) )
          (hold (agent_holds ?g) )
        )
      )
    )
  )
)
(:terminal
  (<= (total-time) (total-time) )
)
(:scoring
  (count throwBallToDoggieBed:pink)
)
)



(define (game game-id-165) (:domain many-objects-room-v1)
(:setup
  (forall (?d - ball ?o - (either laptop cd))
    (game-optional
      (game_start )
    )
  )
)
(:constraints
  (and
    (forall (?o3 - bridge_block ?f - (either cube_block doggie_bed))
      (and
        (preference itemInClosedDrawerAtEnd
          (exists (?h - wall)
            (then
              (once (and (equal_z_position agent ?b) (equal_z_position ?h ?h) ) )
              (hold (exists (?d - golfball) (same_color ?h ?tb) ) )
              (once (and (same_color ?f pink) (not (agent_holds ?d) ) ) )
            )
          )
        )
      )
    )
    (preference dodgeballAndBasketballInBin
      (exists (?b3 - dodgeball)
        (then
          (once (same_type ?b3 ?b3) )
          (once (> 1 (distance agent ?b3)) )
          (once (in_motion ?o) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) 5 )
)
(:scoring
  (count itemInClosedDrawerAtEnd:golfball)
)
)



(define (game game-id-166) (:domain few-objects-room-v1)
(:setup
  (exists (?c2 - hexagonal_bin ?ob - pyramid_block)
    (game-conserved
      (not
        (and
          (agent_holds ?ob)
          (not
            (or
              (on ?h ?t)
              (and
                (and
                  (agent_holds ?h)
                  (same_type ?b4 ?ob)
                  (on ?o ?ob)
                )
                (and
                  (in_motion ?ob)
                  (not
                    (and
                      (and
                        (not
                          (broken ?ob)
                        )
                        (in_motion ?ob)
                        (and
                          (agent_holds ?ob)
                          (or
                            (on ?b ?d)
                            (agent_holds ?ob)
                          )
                          (not
                            (not
                              (and
                                (and
                                  (agent_holds ?ob)
                                  (and
                                    (and
                                      (in agent ?ob)
                                      (agent_holds west_wall)
                                    )
                                    (in_motion ?ob)
                                  )
                                  (exists (?c1 - game_object)
                                    (in_motion ?c1)
                                  )
                                )
                                (agent_holds ?w2)
                              )
                            )
                          )
                          (open ?ob)
                          (or
                            (same_color ?ob pink)
                            (not
                              (agent_holds ?g)
                            )
                          )
                          (same_object ?d ?o)
                          (agent_holds ?ob)
                          (not
                            (not
                              (agent_holds ?ob)
                            )
                          )
                          (equal_z_position ?o1 ?ob)
                          (agent_holds ?ob)
                        )
                      )
                      (on ?c2 ?ob)
                    )
                  )
                )
              )
              (not
                (not
                  (agent_holds ?b)
                )
              )
            )
          )
          (in_motion ?ob)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?w - hexagonal_bin)
      (and
        (preference smallItemsInPlace
          (exists (?s - block ?h - pillow)
            (then
              (hold (not (in_motion ?d) ) )
              (hold (and (exists (?c2 - dodgeball ?b - block) (open ?b) ) ) )
              (hold (and (game_over ) (and (object_orientation ?l upright) (not (not (or (and (touch ?h ?h) (exists (?d - (either dodgeball tall_cylindrical_block)) (> 2 (distance ?d ?d)) ) ) (on ?p ?o) ) ) ) ) ) )
            )
          )
        )
        (preference blueObjectMovedToRoomCenter
          (exists (?w1 - block)
            (then
              (once (same_color ?w1 ?c) )
            )
          )
        )
      )
    )
    (preference dodgeballsInPlace
      (exists (?o3 - cube_block)
        (at-end
          (not
            (not
              (and
                (not
                  (and
                    (in ?d ?c1)
                    (> (distance room_center ?l1) (distance_side ?c back ?o3))
                  )
                )
                (in_motion ?o)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (or
        (> (count blueObjectMovedToRoomCenter:dodgeball) (count smallItemsInPlace:basketball) )
        (or
          (<= 10 (* 3 5 (+ 4 12 )
            )
          )
        )
      )
      (>= (count smallItemsInPlace:hexagonal_bin) (count smallItemsInPlace:dodgeball) )
    )
    (> (* (count dodgeballsInPlace:pink_dodgeball) 10 )
      4
    )
  )
)
(:scoring
  (- 6 )
)
)



(define (game game-id-167) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (same_color ?d ?c)
  )
)
(:constraints
  (and
    (forall (?h - teddy_bear)
      (and
        (preference throwBallToDoggieBedOffWall
          (exists (?b - (either laptop cellphone))
            (then
              (once (in_motion ?d) )
              (hold-while (in_motion ?o) (and (agent_holds ?l2) (is_setup_object ?b) ) (and (not (touch ?d ?b) ) (on ?h ?d) ) )
              (hold (in_motion ?b) )
            )
          )
        )
        (preference throwAttemptKnocksBlock
          (exists (?t - beachball)
            (at-end
              (in_motion ?b)
            )
          )
        )
      )
    )
    (forall (?b6 - wall)
      (and
        (preference redDodgeballThrownToBin
          (exists (?c - ball ?w - bridge_block)
            (then
              (hold (on ?b6 ?b6) )
              (once (not (not (in_motion ?l1) ) ) )
              (once (in_motion ?d) )
              (once (in_motion ?b6) )
              (once (and (and (is_setup_object ?b) (and (in_motion desk) (adjacent room_center desk) (in_motion ?w) (not (not (not (and (and (in_motion ?b) (not (in_motion ?d) ) ) (in_motion ?w) ) ) ) ) (and (adjacent_side ?b6 back ?c4 ?b6) (and (and (adjacent agent ?w) (opposite ?w ?w) ) (in_motion ?b6) (and (in ?b5 ?g) (not (adjacent desk ?o4) ) ) ) ) (and (agent_holds ?b6) (< 1 (distance agent ?b6)) ) ) ) (in_motion ?b) ) )
            )
          )
        )
        (preference redDodgeballThrownToBinWithoutTouchingFloor
          (exists (?b10 - hexagonal_bin)
            (then
              (once (on ?b10 ?b10) )
              (once (exists (?b - drawer) (or (on ?b ?o2) ) ) )
              (once (on ?h pink_dodgeball) )
            )
          )
        )
      )
    )
    (preference gameObjectToBin
      (exists (?ob - game_object)
        (at-end
          (same_type ?ob ?ob)
        )
      )
    )
  )
)
(:terminal
  (>= 5 (- 3 )
  )
)
(:scoring
  (+ (count gameObjectToBin:purple) (count-once throwBallToDoggieBedOffWall:beachball) )
)
)



(define (game game-id-168) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (= 1 (distance door ?b))
  )
)
(:constraints
  (and
    (preference objectLandsInBin
      (exists (?o2 - shelf)
        (then
          (once (and (and (on ?o2 ?b) (and (not (agent_holds ?l) ) (and (and (not (adjacent_side agent front ?o2) ) (faces ?o2 ?d) ) (and (same_object ?g ?r) (not (not (not (on ?o ?d) ) ) ) ) ) ) ) (on rug desk) ) )
          (hold (in_motion ?o2) )
          (hold (adjacent_side ?h front_left_corner ?o2) )
        )
      )
    )
    (preference throwAttempt
      (exists (?c - pillow)
        (then
          (once (not (agent_holds bed) ) )
          (hold (agent_holds ?c) )
          (once (agent_holds ?d) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (- (* 5 (* (* (- 3 (count throwAttempt:pink_dodgeball) ) (* (count-longest objectLandsInBin:pink_dodgeball:red) (count throwAttempt:yellow) )
            )
            (count-once-per-objects objectLandsInBin:golfball:beachball)
            (count-once-per-objects objectLandsInBin:pink)
          )
        )
      )
      (total-score)
    )
  )
)
(:scoring
  (count-overlapping objectLandsInBin:dodgeball)
)
)



(define (game game-id-169) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (on ?h ?b)
  )
)
(:constraints
  (and
    (forall (?c - hexagonal_bin)
      (and
        (preference ballToBinFromBed
          (exists (?ob - doggie_bed)
            (at-end
              (in_motion ?b)
            )
          )
        )
        (preference otherObjectsOnDeskShelf
          (then
            (once (in_motion ?o) )
            (hold (and (rug_color_under ?c ?c) (not (not (in_motion ?b) ) ) (not (agent_holds ?c) ) ) )
            (hold (not (and (same_color ?c ?c) (not (toggled_on ?l1) ) (and (agent_holds ?c3) ) (exists (?h - hexagonal_bin) (and (< (distance door ?h) (distance rug ?d)) (not (and (in ?c ?c) (not (not (not (rug_color_under ?h blue) ) ) ) ) ) ) ) ) ) )
          )
        )
      )
    )
    (preference throwToDrawerOrBin
      (exists (?b ?t2 ?ob ?r ?d ?w1 - (either desktop laptop))
        (at-end
          (and
            (adjacent_side agent front ?l2 right)
            (between ?c ?t2 ?ob)
          )
        )
      )
    )
    (forall (?h ?d ?g ?r2 ?h ?d ?r2 ?g ?b ?o1 - hexagonal_bin)
      (and
        (preference throwAttempt
          (exists (?c - chair)
            (then
              (hold (same_color ?h pink) )
              (once (in_motion ?o1) )
              (once (in_motion ?r2) )
            )
          )
        )
        (preference bounceBallToBin
          (then
            (hold-while (< 2 1) (agent_holds ?o1) (< (distance room_center ?b) 7) (touch ?b ?h) )
            (once (object_orientation ?b1 upright) )
            (once (agent_holds ?d1) )
          )
        )
        (preference cubeBlockFromBedToShelf
          (exists (?r - game_object)
            (then
              (once (adjacent agent ?b) )
              (once (rug_color_under ?p ?r2) )
              (hold (and (and (agent_holds ?g) (in ?r2 ?r) ) (agent_holds ?r2) ) )
            )
          )
        )
        (preference greenObjectMovedToRoomCenter
          (exists (?c3 - hexagonal_bin)
            (then
              (once (not (between ?d ?c ?b) ) )
              (hold-while (agent_holds ?d) (> (distance room_center ?d) (distance ?w1 ?o1)) (and (forall (?r - triangular_ramp) (and (in agent ?o1) (agent_holds ?b) ) ) (and (agent_holds ?c) (and (not (is_setup_object ?r) ) (not (rug_color_under ?b6 blue) ) ) ) ) )
              (once (adjacent ?r2 ?d) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects throwToDrawerOrBin:beachball) (- (* 10 (* 4 4 )
      )
    )
  )
)
(:scoring
  (count bounceBallToBin:yellow)
)
)



(define (game game-id-170) (:domain few-objects-room-v1)
(:setup
  (forall (?r2 - curved_wooden_ramp)
    (game-conserved
      (and
        (in_motion ?t)
        (agent_holds ?c)
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - hexagonal_bin ?c4 - (either pen cube_block) ?f - hexagonal_bin)
      (and
        (preference throwToRampToBin
          (exists (?o ?h ?s ?b ?l1 ?t - (either dodgeball doggie_bed golfball teddy_bear chair) ?r - (either doggie_bed doggie_bed cylindrical_block))
            (at-end
              (in_motion ?l)
            )
          )
        )
      )
    )
    (preference objectsHidden
      (exists (?s - hexagonal_bin)
        (then
          (hold (agent_holds ?x) )
          (once (in_motion ?d) )
          (hold (in_motion ?c) )
        )
      )
    )
    (preference ballRolledOnRampToRug
      (exists (?h - hexagonal_bin)
        (then
          (once (in ?c ?d) )
          (once (in_motion ?d) )
          (hold-while (adjacent room_center ?t) (faces ?o2 ?h) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* (external-forall-maximize (count throwToRampToBin:red:basketball) ) (* (* (count throwToRampToBin:bed) 6 )
          (* (* (count ballRolledOnRampToRug:red) (count-once-per-objects throwToRampToBin:orange) )
            (count-once-per-external-objects throwToRampToBin:golfball)
          )
        )
        30
      )
      (total-time)
    )
  )
)
(:scoring
  (+ 25 2 (* (count throwToRampToBin:wall) (count-once-per-objects objectsHidden:dodgeball) (count-unique-positions ballRolledOnRampToRug:dodgeball:blue_pyramid_block) )
    (* (count-unique-positions ballRolledOnRampToRug:pink) 3 1 )
    (* (count-once objectsHidden:dodgeball) (count objectsHidden:pink:basketball) )
    (> (count-once-per-objects throwToRampToBin:hexagonal_bin) 10 )
    (count objectsHidden:pink_dodgeball:basketball:basketball)
    (count ballRolledOnRampToRug:pink_dodgeball)
    (* 6 5 )
    (count ballRolledOnRampToRug:bed:yellow)
    1
    20
  )
)
)



(define (game game-id-171) (:domain medium-objects-room-v1)
(:setup
  (forall (?c6 ?b - wall ?r2 - (either cube_block yellow_cube_block))
    (game-conserved
      (and
        (or
          (on ?r2 ?r2)
          (and
            (not
              (exists (?ob - block)
                (agent_holds ?b2)
              )
            )
            (and
              (in_motion ?c)
              (not
                (touch ?r2 ?r2)
              )
            )
          )
        )
        (and
          (and
            (exists (?t - cube_block ?o - (either watch chair cube_block))
              (agent_holds desk)
            )
            (not
              (and
                (= 10 0.5)
                (and
                  (and
                    (and
                      (and
                        (between ?h ?r2 ?b)
                        (above ?d ?b)
                      )
                      (opposite ?r2 ?ob)
                    )
                    (not
                      (in_motion ?b)
                    )
                    (or
                      (agent_holds ?o)
                      (in ?p ?r2)
                    )
                    (on ?d ?r2)
                  )
                  (exists (?h - (either cylindrical_block dodgeball))
                    (and
                      (exists (?c - wall)
                        (in ?r2 rug)
                      )
                      (adjacent agent ?o3)
                    )
                  )
                )
                (not
                  (and
                    (agent_holds ?d)
                  )
                )
              )
            )
          )
          (adjacent ?r2 ?r2)
          (and
            (in_motion ?d)
            (and
              (equal_z_position desk ?d)
              (> (distance ?h ?r2) 5)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwFromBehindChairsInBin
      (exists (?l3 - dodgeball ?f ?b10 ?d ?r ?c ?r - hexagonal_bin ?b - curved_wooden_ramp)
        (then
          (once (and (agent_crouches ) (in_motion floor) (and (in ?b ?b) (and (in_motion ?b) (same_object ?b ?b) ) ) ) )
          (once (adjacent rug ?b) )
          (hold (in ?b ?b) )
        )
      )
    )
    (preference throwMissesBin
      (exists (?r - game_object ?p ?b ?l1 ?x - hexagonal_bin ?d - hexagonal_bin)
        (then
          (hold (not (and (adjacent_side ?d front ?d) (not (not (on ?l ?d) ) ) (not (between ?d ?d ?d) ) ) ) )
          (hold (and (agent_holds ?d) (not (not (not (and (and (and (not (agent_holds ?d) ) (and (not (equal_z_position ?h ?o1) ) (in ?d ?d) ) ) (not (not (not (game_start ) ) ) ) (in_motion ?d) ) (agent_holds ?d) ) ) ) ) (same_type ?d ?d) ) )
          (once (opposite ?d ?d) )
        )
      )
    )
    (forall (?h - (either golfball beachball))
      (and
        (preference throwGolfballToBin
          (exists (?p2 - tall_cylindrical_block)
            (then
              (once (and (or (in ?d ?p2) ) (in_motion ?c) ) )
              (once (agent_holds ?d) )
              (once (on ?p2 ?p2) )
            )
          )
        )
        (preference ballThrownOntoTarget
          (exists (?p3 - color ?l - block)
            (at-end
              (agent_holds ?h)
            )
          )
        )
        (preference ballThrownFromBehindBlock
          (exists (?g - hexagonal_bin)
            (then
              (once (not (and (and (not (touch ?l2 ?g) ) (in agent ?o) ) (adjacent door bed) ) ) )
              (once (in_motion ?b) )
              (once (in ?g ?h) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) 20 )
)
(:scoring
  (* (* (count throwGolfballToBin:hexagonal_bin) (external-forall-minimize (count-once-per-objects ballThrownFromBehindBlock:dodgeball:dodgeball) ) )
    4
  )
)
)



(define (game game-id-172) (:domain many-objects-room-v1)
(:setup
  (exists (?db - cube_block ?g - (either hexagonal_bin cellphone))
    (and
      (game-conserved
        (in_motion ?c4)
      )
      (and
        (exists (?c4 - beachball)
          (game-conserved
            (and
              (not
                (agent_holds ?l)
              )
              (not
                (not
                  (not
                    (agent_holds ?l)
                  )
                )
              )
            )
          )
        )
        (exists (?h - wall ?c3 - curved_wooden_ramp ?h - hexagonal_bin)
          (and
            (and
              (game-optional
                (above ?h ?c)
              )
              (exists (?p - block)
                (forall (?h - hexagonal_bin)
                  (exists (?b - hexagonal_bin)
                    (game-optional
                      (not
                        (and
                          (not
                            (not
                              (agent_holds ?b)
                            )
                          )
                          (agent_holds ?o)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
        (forall (?b - game_object)
          (and
            (game-optional
              (agent_holds ?b)
            )
            (game-optional
              (agent_holds ?b)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockCorrectlyPicked
      (exists (?b7 - red_dodgeball)
        (then
          (once (or (and (not (and (agent_holds ?b7) (exists (?h - hexagonal_bin) (agent_holds desk) ) (not (in ?b ?l2) ) ) ) (on ?b ?b7) ) (same_object ?b ?b) ) )
          (hold (in_motion ?b7) )
          (once (on ?o ?b7) )
        )
      )
    )
  )
)
(:terminal
  (> 10 (- (count-once-per-objects blockCorrectlyPicked:dodgeball) )
  )
)
(:scoring
  (count blockCorrectlyPicked)
)
)



(define (game game-id-173) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?g - game_object ?d ?h - hexagonal_bin)
      (exists (?d - hexagonal_bin)
        (exists (?h - ball)
          (game-conserved
            (same_color ?c3 ?d)
          )
        )
      )
    )
    (exists (?h - block ?g - hexagonal_bin)
      (game-conserved
        (> (distance ?b ?g) 1)
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballFromBlockToBin
      (at-end
        (adjacent_side ?h front ?o back)
      )
    )
    (preference gameObjectToBin
      (exists (?h - building ?d - curved_wooden_ramp)
        (then
          (once (< 1 5) )
          (once (on ?d ?d) )
          (hold (not (and (in_motion ?d) (>= 1 (distance agent ?b)) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (<= (- (count-overlapping gameObjectToBin:yellow:dodgeball) )
      (count-once-per-objects gameObjectToBin:red_pyramid_block:hexagonal_bin)
    )
    (not
      (>= 10 3 )
    )
  )
)
(:scoring
  (* 20 100 )
)
)



(define (game game-id-174) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (and
      (or
        (agent_holds ?g)
        (not
          (not
            (in ?h ?r)
          )
        )
      )
      (agent_holds rug)
      (not
        (exists (?o - curved_wooden_ramp)
          (on ?t ?o)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttemptKnocksBlock
      (exists (?d1 ?p2 - teddy_bear)
        (at-end
          (and
            (agent_holds ?o)
            (and
              (not
                (not
                  (and
                    (opposite ?d1 ?b)
                    (and
                      (agent_holds ?b)
                      (agent_holds ?p2)
                    )
                  )
                )
              )
              (and
                (and
                  (object_orientation agent upright)
                  (in ?o ?p2)
                )
                (and
                  (adjacent room_center ?p2)
                  (in_motion ?p2)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (count throwAttemptKnocksBlock:dodgeball:red_pyramid_block) (count-once-per-objects throwAttemptKnocksBlock:basketball:beachball:yellow) )
    (>= 10 (* 3 (+ 100 6 )
      )
    )
    (>= (total-time) 10 )
  )
)
(:scoring
  (count-once-per-objects throwAttemptKnocksBlock:book)
)
)



(define (game game-id-175) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds ?o)
  )
)
(:constraints
  (and
    (preference teddyBearLandsInBin
      (exists (?o - cube_block ?o - (either cylindrical_block cylindrical_block))
        (then
          (once (in ?d ?c) )
          (once (agent_holds ?o) )
          (hold (in_motion ?o) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (total-score) (+ 10 (count-shortest teddyBearLandsInBin:dodgeball) )
    )
    (> (total-time) (count teddyBearLandsInBin:beachball) )
  )
)
(:scoring
  (count teddyBearLandsInBin:cube_block)
)
)



(define (game game-id-176) (:domain few-objects-room-v1)
(:setup
  (exists (?s ?c6 ?b ?t1 ?h - ball ?o - hexagonal_bin ?o - ball)
    (game-conserved
      (on ?b ?o)
    )
  )
)
(:constraints
  (and
    (preference ballRolledOnRampToRug
      (exists (?o5 - (either cellphone floor dodgeball) ?h - (either golfball cd golfball) ?d - game_object)
        (then
          (once (in ?r ?d) )
          (once (and (and (not (and (not (and (agent_holds ?d) (not (in_motion ?d) ) ) ) (and (and (not (not (not (not (agent_holds ?d) ) ) ) ) (and (same_type ?b ?l4) (agent_holds ?d) ) (not (in_motion ?b) ) ) (in ?d ?b) ) ) ) (and (adjacent ?c ?d) (and (and (< 1 1) (touch ?b agent) (adjacent ?d ?d) ) (is_setup_object ?b) (adjacent_side bed front_left_corner ?h front) (and (in_motion ?b) (on ?d ?d) ) ) ) (agent_holds ?b) ) (< 1 8) ) )
          (once (adjacent room_center agent) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (* (* 5 (+ (* (count ballRolledOnRampToRug:doggie_bed:blue_pyramid_block) (+ (count ballRolledOnRampToRug:hexagonal_bin:alarm_clock) (count-once-per-objects ballRolledOnRampToRug:blue_dodgeball) )
            (count ballRolledOnRampToRug:dodgeball:hexagonal_bin)
          )
          (count ballRolledOnRampToRug:yellow)
        )
      )
      (count-once-per-objects ballRolledOnRampToRug:golfball:dodgeball:pink_dodgeball)
    )
  )
)
(:scoring
  (count-overlapping ballRolledOnRampToRug:blue_dodgeball)
)
)



(define (game game-id-177) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?b - (either pink bridge_block key_chain main_light_switch dodgeball watch cylindrical_block))
      (forall (?b - ball ?h - pyramid_block)
        (and
          (and
            (not
              (exists (?b - block ?d - curved_wooden_ramp)
                (forall (?r - hexagonal_bin)
                  (game-conserved
                    (game_start )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockInTowerKnocked
      (exists (?h - ball)
        (then
          (hold (in_motion ?l) )
          (once (on ?b ?h) )
          (once (in_motion ?h) )
        )
      )
    )
    (forall (?d1 - pillow)
      (and
        (preference throwBallToBinOffObject
          (exists (?h - cube_block)
            (then
              (hold (agent_holds ?d1) )
              (hold (and (and (and (and (not (agent_holds ?d1) ) (and (> 1 2) (on ?h desk) ) ) (agent_holds desk) (agent_holds ?h) (in_motion ?h) ) (not (faces agent ?d1) ) (agent_holds ?h) ) (faces ?h ?d) (broken ?b) ) )
              (hold (not (not (in_motion ?d) ) ) )
              (once (not (game_start ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (total-score) )
)
(:scoring
  (count-same-positions throwBallToBinOffObject:dodgeball)
)
)



(define (game game-id-178) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (not
      (same_type ?o bridge_block)
    )
  )
)
(:constraints
  (and
    (preference throwObjectToBin
      (exists (?d - cube_block)
        (then
          (once (rug_color_under ?d blue) )
          (once (on ?d ?d) )
          (once (agent_holds ?d) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (total-time) )
)
(:scoring
  (count-once-per-objects throwObjectToBin:pink_dodgeball)
)
)



(define (game game-id-179) (:domain medium-objects-room-v1)
(:setup
  (exists (?l3 - hexagonal_bin)
    (forall (?b - curved_wooden_ramp ?c - doggie_bed)
      (and
        (game-conserved
          (game_start )
        )
        (game-optional
          (and
            (not
              (in_motion ?h)
            )
            (not
              (not
                (and
                  (touch ?o ?c)
                  (in_motion desk)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference agentLeavesDogbedOrNoMoreBalls
      (exists (?h - hexagonal_bin ?w2 - block)
        (then
          (once (in_motion ?g) )
          (once (agent_holds ?w2) )
          (once (not (in_motion ?w2) ) )
        )
      )
    )
  )
)
(:terminal
  (<= (count agentLeavesDogbedOrNoMoreBalls:dodgeball) (count-once-per-objects agentLeavesDogbedOrNoMoreBalls:blue_dodgeball) )
)
(:scoring
  (count agentLeavesDogbedOrNoMoreBalls)
)
)



(define (game game-id-180) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (in_motion ?d)
  )
)
(:constraints
  (and
    (preference dropAttempt
      (exists (?o - wall)
        (at-end
          (and
            (and
              (in_motion ?o)
              (not
                (not
                  (and
                    (and
                      (not
                        (on ?o ?g)
                      )
                      (and
                        (rug_color_under ?o ?o)
                      )
                    )
                    (agent_holds ?c3)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (* (count dropAttempt:pyramid_block) (count dropAttempt:basketball) )
      (count-once-per-objects dropAttempt:dodgeball)
    )
  )
)
(:scoring
  (+ 4 10 )
)
)



(define (game game-id-181) (:domain few-objects-room-v1)
(:setup
  (exists (?h - game_object)
    (exists (?o2 - game_object ?t1 - hexagonal_bin)
      (game-conserved
        (not
          (in_motion ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference redDodgeballThrownToBinWithoutTouchingFloor
      (exists (?b - ball)
        (at-end
          (on ?b rug)
        )
      )
    )
    (preference throwAttemptKnocksBlock
      (exists (?o1 - hexagonal_bin ?w1 - building)
        (then
          (hold (not (and (and (on ?t ?w1) (not (and (agent_holds ?w1) (and (and (agent_holds ?w1) (and (not (in_motion ?g) ) (not (not (and (in_motion ?b) ) ) ) ) ) (and (agent_holds ?w1) ) ) ) ) ) (not (not (on ?c3 ?b) ) ) ) ) )
          (once (adjacent ?b2 ?w1) )
          (once (in_motion ?b) )
        )
      )
    )
    (preference ballThrownToRampToBed
      (exists (?b - ball)
        (at-end
          (in_motion rug)
        )
      )
    )
    (preference blockOnBlockInTowerAtEnd
      (exists (?l1 - hexagonal_bin ?d1 - game_object)
        (then
          (hold (not (not (and (and (agent_holds ?d1) (agent_holds ?o) ) (same_type desk ?l4) ) ) ) )
          (once (agent_holds ?d1) )
          (once-measure (same_color ?l3 blue) (distance_side ?d1 left ?b) )
        )
      )
    )
    (preference pinkObjectMovedToRoomCenter
      (exists (?c - (either dodgeball dodgeball dodgeball))
        (then
          (hold (agent_holds ?g) )
          (once (touch ?d ?o3) )
          (hold (in_motion ?d) )
        )
      )
    )
    (preference throwGolfballToBin
      (exists (?o - ball)
        (at-end
          (and
            (in ?d ?o)
            (open ?o)
          )
        )
      )
    )
  )
)
(:terminal
  (>= 2 2 )
)
(:scoring
  (count-once-per-objects throwAttemptKnocksBlock:yellow)
)
)



(define (game game-id-182) (:domain many-objects-room-v1)
(:setup
  (forall (?b8 - ball)
    (game-optional
      (in_motion ?b8)
    )
  )
)
(:constraints
  (and
    (preference throwBallToDoggieBed
      (exists (?o5 - hexagonal_bin ?l1 - hexagonal_bin ?c - ball)
        (then
          (once (and (and (or (in_motion ?c) (in_motion ?h) ) (agent_holds ?c) ) (in_motion ?o) ) )
          (once (or (in ?c ?d) (and (agent_holds ?h) (and (not (and (not (not (< (distance ?r ?b) (distance desk ?d)) ) ) (in_motion ?c) (not (in_motion ?g) ) ) ) (faces ?b ?c) ) ) ) )
          (once (not (not (agent_holds ?c) ) ) )
          (once (and (in_motion ?c) (in ?c ?c) ) )
        )
      )
    )
  )
)
(:terminal
  (> (total-score) 6 )
)
(:scoring
  (external-forall-maximize
    (+ (* (* 1 (* (* (* (* 3 (count throwBallToDoggieBed:dodgeball:hexagonal_bin) )
                2
              )
              10
            )
            (count-unique-positions throwBallToDoggieBed:yellow:hexagonal_bin)
          )
          300
        )
        2
      )
      (count throwBallToDoggieBed:purple)
    )
  )
)
)



(define (game game-id-183) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (forall (?c1 - (either pencil))
      (not
        (and
          (in ?c1 ?c1)
          (between ?c1 ?c1 ?d)
          (adjacent agent desk)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballDroppedInBin
      (exists (?o - doggie_bed)
        (then
          (once (not (> (distance ?s ?c) (distance ?s ?t)) ) )
          (once (not (in ?o ?c) ) )
          (once (and (and (adjacent room_center agent) (not (and (in_motion ?o) (in_motion ?o) (agent_holds ?d) ) ) ) (agent_holds ?o) ) )
        )
      )
    )
    (preference cubeBlockInBuilding
      (exists (?s ?d - (either key_chain cylindrical_block doggie_bed) ?c ?b - dodgeball)
        (then
          (hold (in_motion ?h) )
          (once (not (and (adjacent ?c ?d) (agent_holds ?d) ) ) )
          (hold (and (exists (?c - triangular_ramp ?l3 - hexagonal_bin) (not (on ?b ?p3) ) ) (and (not (and (in ?b ?b) (same_color ?c pink) ) ) (and (not (not (and (in ?d ?d) (agent_holds ?c) ) ) ) (on ?d ?d) ) ) (not (and (on ?t ?b) (toggled_on ?b) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= 8 (+ 3 (* (count cubeBlockInBuilding:dodgeball) (external-forall-maximize (* 6 (count ballDroppedInBin:dodgeball) )
          )
        )
        (count-once-per-objects cubeBlockInBuilding:yellow:hexagonal_bin)
      )
    )
  )
)
(:scoring
  (* (* (count cubeBlockInBuilding:blue_pyramid_block) 5 (count ballDroppedInBin) )
    10
  )
)
)



(define (game game-id-184) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (game-conserved
        (exists (?t - dodgeball)
          (agent_holds ?c)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?t - bridge_block)
        (then
          (hold (in ?l ?t) )
          (once (agent_holds ?g) )
          (once (in ?o ?t) )
        )
      )
    )
    (preference beachballOnRug
      (exists (?d - hexagonal_bin)
        (then
          (once (not (not (on ?l ?d) ) ) )
          (hold (not (is_setup_object ?h) ) )
          (once (< 10 (distance ?b1 ?d)) )
        )
      )
    )
  )
)
(:terminal
  (>= 300 (total-score) )
)
(:scoring
  (count ballThrownToBin:pink)
)
)



(define (game game-id-185) (:domain medium-objects-room-v1)
(:setup
  (forall (?h - teddy_bear)
    (game-optional
      (not
        (< 6 1)
      )
    )
  )
)
(:constraints
  (and
    (preference blockPlacedInBuilding
      (exists (?o2 - ball ?r - color)
        (then
          (once (on ?d ?o) )
          (once (in_motion ?r) )
          (hold (and (toggled_on ?b) (not (not (in_motion ?r) ) ) ) )
        )
      )
    )
    (preference objectThrownFromRug
      (exists (?tb ?b4 ?o ?r ?c ?b1 ?b ?h ?c ?w2 - block ?o1 - hexagonal_bin)
        (then
          (once (agent_holds ?b) )
          (once (not (in ?o1 ?d) ) )
          (once (on ?o1 ?h) )
        )
      )
    )
    (preference failedThrowAttempt
      (exists (?f - game_object)
        (then
          (once (and (agent_holds ?f) (in_motion ?f) (and (not (rug_color_under ?f ?f) ) (and (agent_holds ?f) (agent_holds ?t) (in_motion ?f) (same_color ?f ?o2) (adjacent_side ?c back ?b) (same_color ?c1 ?c) ) ) (agent_holds ?h) (agent_holds ?g) (same_object ?b ?f) (>= (distance ?h ?f) (distance ?f ?f)) (in ?p2 ?f) ) )
          (hold (and (touch ?f ?d) (agent_holds ?f) ) )
          (once (in ?f ?b) )
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (>= (total-score) 100 )
      (and
        (<= (count-once-per-objects failedThrowAttempt:green) (total-score) )
        (>= (* 40 3 )
          5
        )
        (and
          (> 2 (* 5 6 )
          )
          (not
            (>= (+ (count failedThrowAttempt:orange) 3 (+ 6 (- (+ (< 5 10 )
                      (count-once-per-objects failedThrowAttempt)
                    )
                  )
                )
              )
              (+ 5 (count-once-per-objects blockPlacedInBuilding:alarm_clock) )
            )
          )
          (>= (count objectThrownFromRug:dodgeball) (* 25 (count-once-per-objects blockPlacedInBuilding:beachball) )
          )
        )
      )
    )
  )
)
(:scoring
  (count failedThrowAttempt:green:basketball)
)
)



(define (game game-id-186) (:domain few-objects-room-v1)
(:setup
  (forall (?t - ball ?h - (either hexagonal_bin basketball floor))
    (exists (?o1 - ball)
      (and
        (game-conserved
          (in ?o1 ?o1)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b7 - hexagonal_bin ?c - cube_block)
      (and
        (preference gameBlockFound
          (exists (?ob - hexagonal_bin ?c6 - curved_wooden_ramp)
            (then
              (hold (touch ?c6 ?b) )
              (once (touch ?c6 ?c6) )
              (once (and (agent_crouches ) (and (not (and (exists (?b ?d1 - building ?b1 - building) (in ?c6 ?d) ) (on floor ?c) ) ) (and (is_setup_object ?c) (agent_holds ?r) (not (on ?c6 ?r) ) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (total-time) )
)
(:scoring
  (external-forall-minimize
    (* (count gameBlockFound:pink:dodgeball) (count-once-per-external-objects gameBlockFound:basketball:basketball) (count gameBlockFound:green) )
  )
)
)



(define (game game-id-187) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (agent_holds ?d)
  )
)
(:constraints
  (and
    (preference golfballInBinFromPillow
      (exists (?d - hexagonal_bin ?o - shelf ?l4 - game_object)
        (then
          (once (agent_holds ?l4) )
          (once (and (above ?o ?g) (in_motion ?l4) (and (agent_holds ?t) (agent_holds ?h) ) ) )
          (once (in_motion ?d) )
        )
      )
    )
  )
)
(:terminal
  (>= (= (* 10 (* (count-once-per-objects golfballInBinFromPillow:alarm_clock) (count golfballInBinFromPillow:dodgeball) )
      )
    )
    (+ (count golfballInBinFromPillow:basketball) (- (* 0 5 (count golfballInBinFromPillow:pink_dodgeball:dodgeball) )
      )
      (+ (count golfballInBinFromPillow:pink_dodgeball:basketball) (count-once-per-objects golfballInBinFromPillow:red) (external-forall-maximize (* (= (* 5 0 )
              (count golfballInBinFromPillow:golfball)
            )
            (external-forall-minimize
              (count-once golfballInBinFromPillow:book)
            )
            8
          )
        )
        (count-once golfballInBinFromPillow:dodgeball)
        0.7
        2
        (- (count-once-per-objects golfballInBinFromPillow:blue_dodgeball) )
      )
    )
  )
)
(:scoring
  (+ 50 3 )
)
)



(define (game game-id-188) (:domain medium-objects-room-v1)
(:setup
  (exists (?w1 - curved_wooden_ramp)
    (game-conserved
      (adjacent desk ?w1)
    )
  )
)
(:constraints
  (and
    (preference blocksInPlace
      (exists (?l3 - hexagonal_bin)
        (then
          (hold (on ?r ?h) )
          (hold (and (and (and (agent_holds ?d) (not (and (and (opposite ?b ?h) (on agent ?l3) (>= (distance desk ?b) 1) ) (in ?l3 ?g) ) ) ) (forall (?w - hexagonal_bin) (agent_holds ?h) ) ) (in ?d ?l3) ) )
          (hold (< 9 (distance ?l3 ?l3)) )
        )
      )
    )
  )
)
(:terminal
  (<= (count-same-positions blocksInPlace:red) (total-score) )
)
(:scoring
  (count blocksInPlace:tall_cylindrical_block)
)
)



(define (game game-id-189) (:domain many-objects-room-v1)
(:setup
  (forall (?r - hexagonal_bin ?o2 - chair ?d - doggie_bed)
    (game-conserved
      (same_object ?d ?d)
    )
  )
)
(:constraints
  (and
    (forall (?c - (either yellow_cube_block dodgeball))
      (and
        (preference nonBlockPlacedInBuilding
          (exists (?b - block ?h ?h - golfball)
            (then
              (hold-while (and (agent_holds agent) (or (and (in_motion ?h) (on ?o ?c) ) (not (in ?c ?h) ) (not (in desk ?d) ) ) ) (in_motion ?o) )
              (once (in_motion ?h) )
              (once (on ?b ?c) )
            )
          )
        )
        (preference basketMadeFromRug
          (exists (?c - book)
            (then
              (hold (in_motion ?b) )
              (once (not (agent_holds ?c) ) )
              (once (adjacent room_center ?c) )
            )
          )
        )
        (preference redDodgeballThrownToBin
          (exists (?h - red_dodgeball)
            (then
              (once (exists (?d - game_object) (faces ?d bed) ) )
              (once (not (adjacent agent ?c) ) )
              (once (not (in ?o ?b) ) )
            )
          )
        )
      )
    )
    (forall (?p2 - game_object ?r - hexagonal_bin ?b - dodgeball)
      (and
        (preference ballThrownToRampToBed
          (exists (?o2 - game_object)
            (then
              (hold (not (and (adjacent ?o2 ?o2) (in_motion ?o) (agent_holds agent) ) ) )
              (hold (and (rug_color_under ?c4 ?o2) (agent_holds agent) (rug_color_under ?o2 pink) ) )
              (hold (in_motion ?o2) )
            )
          )
        )
      )
    )
    (preference ballNeverThrown
      (exists (?d - (either mug cellphone) ?o - dodgeball)
        (then
          (once (not (and (in_motion ?d) (and (not (forall (?d - hexagonal_bin) (on ?d ?d) ) ) (and (in_motion ?o) (adjacent_side desk front ?d) ) (and (in_motion ?o) (not (in ?b agent) ) (not (in ?o ?o) ) (on ?o floor) (in_motion ?o) (agent_holds ?b5) (in ?o ?b) (not (not (not (not (in_motion desk) ) ) ) ) (in ?o ?d) (<= 4 8) ) ) (and (in_motion ?d) (on ?b ?o) ) ) ) )
          (hold-while (adjacent ?h ?b) (in_motion ?b) )
          (once (in_motion ?d) )
        )
      )
    )
    (preference throwKnocksOverBear
      (exists (?p - tall_cylindrical_block ?b - dodgeball)
        (at-end
          (in ?d ?b)
        )
      )
    )
    (preference ballThrownToChair
      (exists (?h - (either golfball key_chain tall_cylindrical_block))
        (then
          (once (in_motion ?r) )
          (once (agent_holds ?b) )
          (hold-while (object_orientation ?h sideways) (in_motion ?h) (not (and (agent_holds ?h) (exists (?g ?b - chair) (agent_holds ?b) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count ballNeverThrown:tan:white) (total-time) )
)
(:scoring
  (- (count ballNeverThrown:red:block) )
)
)



(define (game game-id-190) (:domain many-objects-room-v1)
(:setup
  (forall (?b1 ?o ?d - game_object)
    (and
      (and
        (and
          (and
            (game-optional
              (toggled_on ?l)
            )
            (game-conserved
              (and
                (in_motion ?b1)
                (on ?o ?d)
              )
            )
          )
        )
      )
      (exists (?l2 - (either wall doggie_bed))
        (and
          (and
            (forall (?c - shelf)
              (exists (?b - book)
                (and
                  (exists (?h - cube_block)
                    (exists (?b - dodgeball)
                      (and
                        (exists (?c3 - cube_block)
                          (game-conserved
                            (adjacent_side ?h back ?c)
                          )
                        )
                        (game-conserved
                          (in ?d ?h)
                        )
                        (game-conserved
                          (and
                            (agent_holds ?l2)
                            (and
                              (in_motion ?h)
                              (in_motion ?d)
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
            (game-conserved
              (in ?c ?b1)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c2 - hexagonal_bin ?b - hexagonal_bin ?o4 - block)
      (and
        (preference objectThrownFromRug
          (exists (?t - hexagonal_bin ?d - shelf ?c - hexagonal_bin)
            (then
              (once (in_motion floor) )
              (once (touch ?g ?o4) )
              (hold (not (and (faces north_wall ?c) (touch ?c ?c) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> 3 (* (* 1 10 )
      (count objectThrownFromRug)
      3
    )
  )
)
(:scoring
  (count-once objectThrownFromRug:green)
)
)



(define (game game-id-191) (:domain few-objects-room-v1)
(:setup
  (exists (?o - cube_block ?p - teddy_bear)
    (game-conserved
      (on ?p ?p)
    )
  )
)
(:constraints
  (and
    (preference throwToDrawerOrBin
      (exists (?l ?d - blue_pyramid_block)
        (then
          (once (< 1 1) )
          (once (agent_holds ?l) )
          (once (not (and (agent_holds ?g) (rug_color_under ?d pink) (in ?d ?d) ) ) )
        )
      )
    )
  )
)
(:terminal
  (<= (= 2 (external-forall-maximize (- 3 (count-once throwToDrawerOrBin:dodgeball:dodgeball) ) ) (* 3 (count-overlapping throwToDrawerOrBin:yellow) )
    )
    (count throwToDrawerOrBin:red_pyramid_block)
  )
)
(:scoring
  (count-once-per-objects throwToDrawerOrBin:red:orange)
)
)



(define (game game-id-192) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?g - cube_block ?p3 - dodgeball)
      (game-optional
        (and
          (faces ?p3 ?c)
          (same_object ?o ?d)
        )
      )
    )
    (game-conserved
      (on ?h ?t)
    )
  )
)
(:constraints
  (and
    (forall (?o - hexagonal_bin ?c - cube_block ?h - wall)
      (and
        (preference throwBallFromOtherBallToBin
          (exists (?l1 - (either floor block) ?c - hexagonal_bin ?d ?h - red_pyramid_block)
            (then
              (once (on ?b ?b) )
              (hold (adjacent desk ?d) )
              (hold (touch ?d ?h) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (* (* 1 2 )
      (count-once-per-external-objects throwBallFromOtherBallToBin:hexagonal_bin)
    )
    9
  )
)
(:scoring
  (count throwBallFromOtherBallToBin:dodgeball)
)
)



(define (game game-id-193) (:domain many-objects-room-v1)
(:setup
  (forall (?t - doggie_bed)
    (exists (?r - dodgeball)
      (not
        (game-optional
          (not
            (agent_holds ?r)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownThroughRampAndBlocksToBin
      (exists (?b - pyramid_block)
        (then
          (hold-while (exists (?d - block ?c ?h ?b ?r ?b ?h - hexagonal_bin ?p - curved_wooden_ramp) (and (in_motion ?b) (on ?c ?d) ) ) (rug_color_under ?c5 ?b) )
          (once (exists (?b2 - shelf) (broken ?b) ) )
          (once (and (not (and (not (exists (?b7 - doggie_bed) (and (in ?b ?b) (agent_holds ?b) ) ) ) (not (agent_holds ?b) ) ) ) (and (in_motion ?w1) (adjacent room_center floor) (not (in_motion ?h) ) (adjacent_side ?h front ?d) ) (not (agent_holds ?d) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 1 7 )
    (or
      (>= (* (* 3 2 )
          (count ballThrownThroughRampAndBlocksToBin:blue_dodgeball)
        )
        (total-time)
      )
      (> (count ballThrownThroughRampAndBlocksToBin:dodgeball) (* 5 (* (* (* (count ballThrownThroughRampAndBlocksToBin:dodgeball:red) (count-once ballThrownThroughRampAndBlocksToBin:tall_cylindrical_block:golfball) )
              (count ballThrownThroughRampAndBlocksToBin:blue_dodgeball)
            )
            (count ballThrownThroughRampAndBlocksToBin:blue_cube_block)
            8
          )
        )
      )
    )
  )
)
(:scoring
  (count ballThrownThroughRampAndBlocksToBin:alarm_clock)
)
)



(define (game game-id-194) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (exists (?p - ball)
      (agent_holds ?p)
    )
  )
)
(:constraints
  (and
    (forall (?b - building ?h - (either bed alarm_clock laptop))
      (and
        (preference throwKnocksOverBear
          (exists (?p3 - game_object)
            (then
              (once (and (agent_holds ?c) (in_motion ?d) ) )
              (hold (in ?p3 ?b) )
              (hold (and (and (agent_holds ?p3) (on ?t2 ?d) ) (and (and (agent_holds ?h) (in ?h ?d) ) (and (exists (?t - ball ?b4 - (either cube_block)) (same_color ?b blue) ) (not (rug_color_under ?d ?tb) ) ) (on ?l2 ?c2) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 300 300 )
)
(:scoring
  (count-once throwKnocksOverBear:pink_dodgeball)
)
)



(define (game game-id-195) (:domain few-objects-room-v1)
(:setup
  (exists (?s - (either cylindrical_block alarm_clock) ?o - doggie_bed ?h - building)
    (and
      (and
        (exists (?c - hexagonal_bin ?c5 - dodgeball)
          (exists (?p2 - building)
            (and
              (game-conserved
                (and
                  (in_motion ?h)
                  (not
                    (and
                      (in ?b5 ?d)
                      (and
                        (forall (?p1 - dodgeball)
                          (and
                            (touch ?o ?t)
                            (> (distance ?p2 ?c5) (distance ?h ?h))
                            (on ?o green_golfball)
                          )
                        )
                        (in ?c5 ?c5)
                      )
                    )
                  )
                )
              )
              (forall (?h - chair ?b - ball)
                (or
                  (and
                    (exists (?b3 - dodgeball ?ob - cube_block)
                      (forall (?b5 - dodgeball)
                        (and
                          (game-conserved
                            (in ?h ?c5)
                          )
                        )
                      )
                    )
                  )
                  (game-conserved
                    (on ?b ?b4)
                  )
                  (and
                    (and
                      (game-optional
                        (and
                          (not
                            (and
                              (not
                                (not
                                  (< (distance ?c5 ?b) 0)
                                )
                              )
                              (adjacent ?w1 ?c5)
                            )
                          )
                          (> (distance_side room_center front_left_corner ?g) 0)
                          (and
                            (in_motion ?h)
                            (and
                              (on ?h ?c5)
                              (not
                                (and
                                  (on ?b ?d)
                                  (or
                                    (in ?h ?c)
                                    (in_motion ?p2)
                                  )
                                )
                              )
                            )
                            (> (building_size ?b) (distance desk ?p2))
                            (not
                              (agent_holds ?d)
                            )
                            (< (distance ?c5 ?c5) 1)
                            (and
                              (not
                                (on ?b ?h)
                              )
                              (in_motion ?c5)
                            )
                            (exists (?o4 ?o - block ?c - game_object ?d - hexagonal_bin)
                              (agent_holds ?c5)
                            )
                          )
                        )
                      )
                      (and
                        (and
                          (and
                            (game-conserved
                              (and
                                (and
                                  (in_motion ?h)
                                  (broken ?l)
                                  (and
                                    (and
                                      (agent_holds desk)
                                      (in ?h ?b6)
                                    )
                                    (not
                                      (agent_holds ?b)
                                    )
                                  )
                                )
                                (broken ?b)
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
        (forall (?tb - dodgeball ?l4 - game_object)
          (game-conserved
            (not
              (not
                (broken ?b)
              )
            )
          )
        )
        (game-optional
          (on ?h bed)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference itemsBroken
      (exists (?h - chair)
        (then
          (hold (agent_holds ?h) )
          (hold (agent_holds ?b) )
          (once (not (and (exists (?c - dodgeball) (open ?d) ) (in rug ?d) ) ) )
        )
      )
    )
    (preference blockThrowAttempt
      (exists (?d - hexagonal_bin ?l3 - tall_cylindrical_block ?l2 - hexagonal_bin)
        (then
          (once (touch ?l2 ?o) )
          (once (adjacent ?h ?c) )
          (once (not (agent_holds ?l2) ) )
          (once (not (in_motion ?d) ) )
        )
      )
    )
  )
)
(:terminal
  (> (* (= 18 (* 3 8 )
      )
      (count-once-per-objects itemsBroken:tall_cylindrical_block)
      (* (+ 2 (= 5 4 )
        )
        5
      )
    )
    (- 30 )
  )
)
(:scoring
  (count-same-positions itemsBroken:pink:pink)
)
)



(define (game game-id-196) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (not
      (not
        (in_motion top_shelf)
      )
    )
  )
)
(:constraints
  (and
    (forall (?g - block)
      (and
        (preference binKnockedOver
          (exists (?d - hexagonal_bin)
            (then
              (once (agent_holds ?d) )
              (once (game_over ) )
              (once (same_color ?d ?g) )
            )
          )
        )
        (preference throwAttempt
          (exists (?h - desktop)
            (then
              (once (touch ?h ?h) )
              (once (= 7 0.5) )
              (hold (not (and (agent_holds ?d) (exists (?c - doggie_bed ?p - hexagonal_bin) (agent_holds ?p) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 1 (total-time) )
)
(:scoring
  (count binKnockedOver:green)
)
)



(define (game game-id-197) (:domain medium-objects-room-v1)
(:setup
  (exists (?r - hexagonal_bin)
    (and
      (forall (?r - hexagonal_bin)
        (and
          (and
            (and
              (and
                (forall (?c - hexagonal_bin)
                  (game-conserved
                    (and
                      (agent_holds ?o)
                      (< 1 2)
                      (rug_color_under ?c ?c)
                    )
                  )
                )
              )
            )
            (forall (?b - dodgeball)
              (exists (?c - ball)
                (and
                  (and
                    (and
                      (exists (?d - hexagonal_bin)
                        (game-conserved
                          (on ?d ?c)
                        )
                      )
                    )
                  )
                  (game-conserved
                    (agent_holds ?o)
                  )
                )
              )
            )
          )
          (and
            (exists (?r - hexagonal_bin)
              (exists (?d - hexagonal_bin)
                (game-conserved
                  (in ?r ?t)
                )
              )
            )
          )
          (exists (?b5 - teddy_bear ?w - ball)
            (exists (?c2 - dodgeball)
              (game-conserved
                (not
                  (in_motion ?d)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - hexagonal_bin)
      (and
        (preference throwInBin
          (exists (?d - hexagonal_bin ?c1 - (either doggie_bed game_object book))
            (then
              (once (agent_holds ?b) )
              (once (agent_holds ?l) )
              (once (in ?c1 ?d) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 2 4 )
)
(:scoring
  (count throwInBin:dodgeball)
)
)



(define (game game-id-198) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?b4 - red_dodgeball)
      (game-conserved
        (same_object ?b ?d)
      )
    )
    (exists (?c ?f ?d1 ?b ?c ?b7 - hexagonal_bin)
      (game-optional
        (and
          (= (distance bed ?l))
          (on ?c ?b)
          (in_motion ?c)
          (in ?d ?d)
          (forall (?d - hexagonal_bin)
            (not
              (agent_holds ?b)
            )
          )
          (and
            (and
              (on ?o ?h)
              (and
                (touch ?b7 ?r)
                (<= 1 (distance room_center ?b))
              )
              (on ?h ?b7)
            )
            (is_setup_object ?f)
          )
          (in_motion ?h)
          (agent_holds ?o)
          (not
            (not
              (not
                (agent_holds ?b3)
              )
            )
          )
          (not
            (not
              (and
                (on bed ?t)
                (and
                  (in_motion ?b7)
                  (and
                    (not
                      (touch ?h ?b7)
                    )
                    (agent_holds bed)
                    (in_motion ?d)
                  )
                )
                (and
                  (agent_holds ?g)
                  (agent_holds ?f)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference greenObjectMovedToRoomCenter
      (exists (?s - color)
        (then
          (once (on ?t ?s) )
          (once (agent_holds ?s) )
          (hold (< 1 7) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) 3 )
)
(:scoring
  (count greenObjectMovedToRoomCenter:hexagonal_bin)
)
)



(define (game game-id-199) (:domain many-objects-room-v1)
(:setup
  (and
    (game-optional
      (not
        (exists (?d - wall)
          (same_color ?g green)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToDoggieBedOffWall
      (exists (?c2 ?l ?h ?p2 ?h ?b - shelf)
        (then
          (once (and (in ?l ?l2) (agent_holds ?c) ) )
          (once (adjacent_side room_center back ?c2) )
          (hold (rug_color_under ?b ?b) )
        )
      )
    )
  )
)
(:terminal
  (> (* 5 2 )
    (count-once throwBallToDoggieBedOffWall:beachball:purple)
  )
)
(:scoring
  (count-once-per-objects throwBallToDoggieBedOffWall:book)
)
)



(define (game game-id-200) (:domain few-objects-room-v1)
(:setup
  (exists (?x - red_dodgeball)
    (forall (?r2 - beachball)
      (exists (?b3 - block ?w2 - wall)
        (and
          (exists (?d - chair)
            (and
              (forall (?bl - (either cube_block hexagonal_bin))
                (forall (?h - (either book chair) ?o - block ?c6 - triangular_ramp ?b8 - hexagonal_bin ?w1 - golfball)
                  (game-optional
                    (not
                      (agent_holds ?o)
                    )
                  )
                )
              )
              (game-conserved
                (in ?w2 ?w)
              )
              (and
                (and
                  (and
                    (and
                      (and
                        (exists (?b4 - hexagonal_bin)
                          (exists (?o3 - cube_block ?b - (either cylindrical_block chair))
                            (and
                              (game-conserved
                                (agent_holds ?b4)
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
          (exists (?d - block)
            (exists (?h - game_object)
              (and
                (and
                  (game-conserved
                    (not
                      (on ?h ?x)
                    )
                  )
                )
                (exists (?d - hexagonal_bin)
                  (game-conserved
                    (adjacent_side agent front ?h)
                  )
                )
              )
            )
          )
          (and
            (exists (?g - hexagonal_bin)
              (exists (?d - curved_wooden_ramp)
                (exists (?w2 - hexagonal_bin)
                  (game-conserved
                    (and
                      (exists (?h ?h - (either dodgeball cellphone book))
                        (< 0 1)
                      )
                      (in ?d ?l)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballHitsBin
      (exists (?c - teddy_bear ?c1 - hexagonal_bin ?c - curved_wooden_ramp)
        (then
          (once (or (< 2 10) (in ?b ?c2) ) )
          (once (and (exists (?h - pillow ?c1 - chair ?c - game_object) (agent_holds ?b) ) (not (not (in_motion ?c) ) ) (not (agent_holds ?c) ) (in_motion rug) ) )
          (hold-while (agent_holds ?c) (object_orientation ?b ?c) (faces ?c ?d) (and (not (and (and (in_motion ?o) (agent_holds ?d) ) (in ?c ?b) ) ) (not (in_motion desk) ) (and (on ?c ?b) (in_motion ?b) ) ) )
        )
      )
    )
    (preference cubeBlockThrowAttempt
      (exists (?c3 - (either pink pyramid_block laptop alarm_clock) ?h - wall ?b - hexagonal_bin)
        (then
          (hold (touch ?b ?l2) )
          (once (agent_crouches ) )
          (hold-while (agent_holds ?b) (< (distance ?h ?b) (distance ?b ?d)) (and (exists (?b - desktop ?r - curved_wooden_ramp) (not (agent_holds ?h) ) ) (touch ?b ?b) (touch ?b ?c) (in_motion ?b) ) (not (touch ?b ?c) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (* (+ 100 10 )
          15
        )
        (count-once-per-objects dodgeballHitsBin:golfball)
      )
      (<= 10 (* 5 (count-once-per-objects dodgeballHitsBin:basketball) )
      )
    )
  )
)
(:scoring
  (- (count cubeBlockThrowAttempt:basketball:basketball) )
)
)



(define (game game-id-201) (:domain many-objects-room-v1)
(:setup
  (forall (?db - chair ?h - block)
    (exists (?h - block)
      (and
        (game-optional
          (in_motion bottom_shelf)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference failedThrowToBin
      (exists (?h - dodgeball)
        (then
          (hold (on ?h ?h) )
          (hold (and (opposite ?d ?h) (and (agent_holds ?h) (agent_holds ?o1) ) ) )
          (once (in_motion ?h) )
        )
      )
    )
    (forall (?b4 - block)
      (and
        (preference objectToBinOnFirstTry
          (exists (?h - doggie_bed ?s - dodgeball)
            (at-end
              (or
                (on ?h pink_dodgeball)
                (and
                  (on ?o ?s)
                  (open ?b4)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count objectToBinOnFirstTry:yellow) (total-score) )
    (>= 3 0 )
  )
)
(:scoring
  (count-once-per-objects failedThrowToBin:dodgeball:yellow)
)
)



(define (game game-id-202) (:domain medium-objects-room-v1)
(:setup
  (forall (?h - (either cylindrical_block))
    (forall (?b - game_object)
      (not
        (and
          (game-conserved
            (adjacent ?h ?l)
          )
          (not
            (and
              (game-optional
                (agent_holds ?o2)
              )
              (game-conserved
                (not
                  (agent_holds ?h)
                )
              )
              (exists (?c1 - teddy_bear ?l - dodgeball)
                (game-optional
                  (in_motion agent)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwInBin
      (exists (?r - shelf ?b - hexagonal_bin)
        (then
          (hold (adjacent_side ?b left ?c front) )
          (once (in_motion ?b) )
          (once (and (not (not (and (or (and (> 2 (distance bed ?b)) (adjacent ?b ?c) (agent_holds ?b) (and (forall (?t - hexagonal_bin) (adjacent_side ?t back ?t) ) (agent_holds ?b) (< (distance desk ?b) 8) (on ?b ?d) (and (agent_holds ?b) (exists (?l2 - dodgeball) (on ?l2 ?b) ) (and (same_color ?b ?c) (game_start ) ) ) (agent_holds ?b) (in_motion ?b) ) ) (and (and (agent_holds ?b) (and (not (and (rug_color_under ?p pink) (agent_holds ?b) ) ) (and (on ?h ?o) (agent_holds ?b) ) ) ) (not (is_setup_object ?b) ) ) ) (agent_holds ?b) ) ) ) (and (not (exists (?h - drawer) (not (not (not (and (not (and (and (in_motion ?h) (agent_holds ?h) ) (and (and (same_color ?h ?h) (and (in ?b ?h) (and (and (and (in_motion ?tb) (and (and (in_motion ?b) (on ?r desk) ) (touch ?h desk) ) ) (not (forall (?d ?w2 - dodgeball) (on ?w2 ?b) ) ) ) (in_motion door) ) ) ) (not (and (in_motion ?c1) (not (and (and (not (and (not (and (and (not (< (distance desk desk) (distance ?h ?w1)) ) (in_motion ?b) ) (not (in ?g ?h) ) ) ) (game_start ) (= 1 1 1) ) ) (in_motion ?b) (equal_z_position ?d ?o4) ) (and (> 0 (distance bed ?g)) (agent_holds ?b) (in_motion agent) (forall (?b - red_dodgeball) (touch ?c ?b) ) ) ) ) ) ) ) ) ) (adjacent bed ?d) (in_motion ?b) ) ) ) ) ) ) (in_motion ?b) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (* (- (external-forall-maximize (count throwInBin:yellow) ) )
        (+ (+ (- (count-once-per-objects throwInBin:red) )
            (+ (+ (- (+ 1 (count-once-per-external-objects throwInBin:block) )
                )
                (count throwInBin:blue_dodgeball)
              )
              (* (count-once throwInBin:pink_dodgeball) (count throwInBin:beachball:yellow) )
              2
            )
          )
          (* (+ 1 8 )
          )
          (- 3 )
        )
      )
      (* (* (* (count-once throwInBin:golfball) (* (count-once-per-objects throwInBin:hexagonal_bin) (* (count throwInBin:yellow) (* (* (count throwInBin:beachball) 3 (external-forall-minimize (count-once-per-objects throwInBin:dodgeball) ) 1 )
                  (count-once-per-objects throwInBin:golfball)
                )
              )
            )
            (- 10 )
            5
          )
          5
        )
        (count-same-positions throwInBin:dodgeball:purple)
      )
      (* 6 3 )
      (external-forall-maximize
        (+ (* 2 (count throwInBin:dodgeball) )
          3
        )
      )
      10
      (+ (count-once-per-objects throwInBin:cylindrical_block) (+ (external-forall-maximize (count-once throwInBin:dodgeball) ) 3 )
      )
    )
    3
  )
)
(:scoring
  (count throwInBin:beachball)
)
)



(define (game game-id-203) (:domain many-objects-room-v1)
(:setup
  (exists (?b - (either top_drawer key_chain))
    (game-conserved
      (adjacent desk ?b)
    )
  )
)
(:constraints
  (and
    (forall (?h - curved_wooden_ramp)
      (and
        (preference throwOverRamp
          (exists (?t - hexagonal_bin)
            (then
              (hold-while (in ?h ?h) (> 1 4) (and (agent_holds ?h) (in_motion ?t) ) )
              (once (agent_holds ?r) )
              (once (and (on ?b ?h) (not (and (and (< (distance agent ?d) (distance ?h ?ob)) (agent_holds ?t) (agent_holds ?t) (agent_holds ?b) ) (agent_holds ?b) ) ) ) )
            )
          )
        )
      )
    )
    (preference basketMadeFromRug
      (exists (?c1 - dodgeball ?d - dodgeball)
        (then
          (once-measure (exists (?h ?d2 - game_object) (in_motion ?d2) ) (distance ?d floor) )
          (once (and (< (distance ?h ?t) 0) (adjacent agent ?o) (on ?l ?b) ) )
          (once (adjacent ?d rug) )
        )
      )
    )
  )
)
(:terminal
  (> (total-score) 8 )
)
(:scoring
  (* (count basketMadeFromRug:blue_cube_block:dodgeball) 15 )
)
)



(define (game game-id-204) (:domain many-objects-room-v1)
(:setup
  (exists (?o - chair)
    (game-conserved
      (not
        (agent_holds ?o)
      )
    )
  )
)
(:constraints
  (and
    (forall (?b2 - (either chair triangle_block desktop))
      (and
        (preference blockCorrectlyPicked
          (exists (?c2 - wall ?d - game_object)
            (then
              (once (and (agent_holds ?b) (in_motion ?b) ) )
              (hold (not (on ?g agent) ) )
              (hold (in_motion ?h) )
            )
          )
        )
        (preference ballNeverThrown
          (exists (?b - hexagonal_bin ?c - hexagonal_bin)
            (then
              (hold (touch ?c ?d) )
              (hold (adjacent ?w2 ?o) )
              (once (and (and (in_motion ?c) (agent_holds ?o) ) (agent_holds ?g) ) )
              (once (not (agent_holds ?c) ) )
            )
          )
        )
        (preference objectsHidden
          (exists (?o - desktop)
            (at-end
              (same_type ?d ?b2)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count objectsHidden:dodgeball:yellow) (* (count-once ballNeverThrown:blue) (- (count ballNeverThrown:basketball:pink) )
    )
  )
)
(:scoring
  (+ (* 300 (count-once-per-objects objectsHidden:golfball:dodgeball:golfball) )
    2
  )
)
)



(define (game game-id-205) (:domain few-objects-room-v1)
(:setup
  (exists (?p - building)
    (game-conserved
      (agent_holds ?d)
    )
  )
)
(:constraints
  (and
    (preference ballThrownIntoTarget
      (exists (?h - dodgeball)
        (at-end
          (and
            (not
              (and
                (and
                  (agent_holds ?h)
                  (in_motion ?o)
                  (agent_holds rug)
                )
                (not
                  (not
                    (in_motion ?c3)
                  )
                )
              )
            )
            (in_motion ?h)
          )
        )
      )
    )
  )
)
(:terminal
  (= (* (+ (count-once-per-objects ballThrownIntoTarget) 9 )
      (* 10 (* (* (* (count ballThrownIntoTarget:dodgeball) 7 )
            3
            (count ballThrownIntoTarget:dodgeball:pink)
            5
            (count-once-per-objects ballThrownIntoTarget:red)
            (count ballThrownIntoTarget:beachball:red)
            (external-forall-maximize
              (count-once-per-objects ballThrownIntoTarget:basketball)
            )
          )
          4
        )
      )
    )
    (count ballThrownIntoTarget:beachball:yellow)
  )
)
(:scoring
  (* (* (* 3 (+ (count ballThrownIntoTarget:red) (- (count-once-per-objects ballThrownIntoTarget:purple) )
        )
      )
    )
    2
  )
)
)



(define (game game-id-206) (:domain few-objects-room-v1)
(:setup
  (exists (?l2 - (either golfball))
    (exists (?o - block ?t1 - book)
      (game-optional
        (same_object ?l2 ?l2)
      )
    )
  )
)
(:constraints
  (and
    (preference blockFromRugToDesk
      (exists (?c - doggie_bed)
        (then
          (once (and (adjacent ?c ?c) (in_motion ?c) ) )
          (once (and (not (on ?d ?c) ) (not (< (distance_side agent back ?c front) (distance agent ?c)) ) (and (exists (?b - ball) (on ?d ?d) ) (and (or (in_motion ?g) (< 1 1) ) (agent_holds ?c) ) ) ) )
          (once-measure (and (= 1 (distance_side ?h front ?b2)) (in_motion agent) ) (distance ?c desk) )
        )
      )
    )
    (preference objectWithMatchingColor
      (exists (?b - bridge_block ?p - ball ?c - ball ?l - (either golfball cylindrical_block))
        (then
          (once (touch ?l ?l) )
          (once (not (and (in_motion ?b) (agent_holds agent) ) ) )
          (once (not (toggled_on ?d) ) )
        )
      )
    )
  )
)
(:terminal
  (> (count-once-per-objects objectWithMatchingColor:beachball) (count blockFromRugToDesk:hexagonal_bin:hexagonal_bin) )
)
(:scoring
  (external-forall-maximize
    (* 180 (count-once blockFromRugToDesk:dodgeball) )
  )
)
)



(define (game game-id-207) (:domain medium-objects-room-v1)
(:setup
  (forall (?c3 - ball)
    (not
      (and
        (game-conserved
          (and
            (object_orientation ?h upright)
            (or
              (and
                (in ?c3 ?c3)
                (agent_holds top_shelf)
                (forall (?h - (either yellow_cube_block teddy_bear laptop))
                  (on ?o ?c3)
                )
              )
              (adjacent desk ?d)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?w - ball ?h - ball)
      (and
        (preference ballThrownThroughRampToBin
          (exists (?ob - cube_block)
            (then
              (once (and (not (and (and (and (in_motion ?d1) (same_color ?t blue) (agent_crouches ) (agent_holds ?h) ) (in_motion ?h) ) (or (in_motion ?ob) (not (in_motion agent) ) (adjacent bed ?h) ) ) ) (on ?b ?h) ) )
              (once (game_start ) )
              (once (exists (?t - yellow_cube_block) (in_motion ?h) ) )
            )
          )
        )
        (preference itemsHidingScreens
          (then
            (once (and (on ?p2 ?r) (in_motion ?r) (in_motion ?t) ) )
            (hold (and (on ?h ?t) (on ?b ?b1) ) )
            (once (on ?c ?b) )
            (once (and (in_motion ?b) (in_motion ?h) ) )
            (once (agent_holds agent) )
          )
        )
      )
    )
  )
)
(:terminal
  (<= (total-time) 10 )
)
(:scoring
  (count itemsHidingScreens:basketball)
)
)



(define (game game-id-208) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (or
      (agent_holds ?l)
    )
  )
)
(:constraints
  (and
    (forall (?db - ball)
      (and
        (preference blockCorrectlyPicked
          (exists (?d - (either mug doggie_bed))
            (then
              (hold (rug_color_under ?d blue) )
              (once (touch ?d ?db) )
            )
          )
        )
      )
    )
    (preference redDodgeballThrownToBin
      (exists (?w - (either pencil laptop))
        (then
          (hold (in ?w ?w) )
          (once (exists (?b ?d ?b ?x ?d - ball) (on ?h ?b) ) )
          (once (not (and (agent_holds ?d) (and (is_setup_object ?o) (agent_holds ?p) ) ) ) )
        )
      )
    )
    (preference objectToBinOnFirstTry
      (then
        (once (not (agent_holds bed) ) )
        (once (in_motion ?o) )
      )
    )
  )
)
(:terminal
  (or
    (= 20 2 )
    (>= 3 6 )
    (or
      (> (* 3 5 )
        (count blockCorrectlyPicked:basketball)
      )
    )
    (>= (* (count redDodgeballThrownToBin:beachball) (+ 100 (+ (count redDodgeballThrownToBin:pink_dodgeball) (- (* (count-unique-positions objectToBinOnFirstTry:basketball) 3 )
            )
          )
        )
      )
      (count-shortest objectToBinOnFirstTry:golfball:red)
    )
  )
)
(:scoring
  (* (= (count redDodgeballThrownToBin:beachball) (count blockCorrectlyPicked:red) )
  )
)
)



(define (game game-id-209) (:domain many-objects-room-v1)
(:setup
  (exists (?d - block)
    (game-optional
      (in ?o2 ?d)
    )
  )
)
(:constraints
  (and
    (preference throwFromEdgeOfRug
      (exists (?h ?t1 - (either basketball dodgeball))
        (then
          (hold (on ?h ?c) )
          (once (on ?h ?t1) )
          (once (exists (?tb - (either cube_block cellphone)) (in ?c ?t1) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (count-once-per-objects throwFromEdgeOfRug:basketball) )
)
(:scoring
  (* (+ (external-forall-maximize (count throwFromEdgeOfRug:dodgeball) ) (count throwFromEdgeOfRug:green) (count throwFromEdgeOfRug:alarm_clock:dodgeball) (< (count-once-per-objects throwFromEdgeOfRug:dodgeball) 15 )
      (count-total throwFromEdgeOfRug:golfball)
      (count throwFromEdgeOfRug:yellow:red_pyramid_block)
    )
    (count-once-per-objects throwFromEdgeOfRug:beachball:basketball:top_drawer)
  )
)
)



(define (game game-id-210) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds ?c)
  )
)
(:constraints
  (and
    (preference blockInTowerKnocked
      (exists (?b6 - game_object ?t - curved_wooden_ramp)
        (then
          (once (in_motion ?l) )
          (hold-while (and (agent_holds ?b) (and (not (in_motion ?o) ) (same_color ?b ?o2) ) ) (and (adjacent desk ?h) (not (not (on ?t ?t) ) ) ) (and (not (object_orientation ?b upside_down) ) (in_motion ?t) ) (not (not (exists (?s - hexagonal_bin) (not (on ?d ?c1) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 6 (* 2 (* (external-forall-minimize (count blockInTowerKnocked:yellow) ) 2 )
    )
  )
)
(:scoring
  (count blockInTowerKnocked:dodgeball:yellow)
)
)



(define (game game-id-211) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (not
      (in_motion ?o3)
    )
  )
)
(:constraints
  (and
    (preference blockOnBlockInTowerAtEnd
      (exists (?r - (either cube_block dodgeball) ?g - wall)
        (then
          (hold (on ?g ?g) )
          (hold (not (in top_drawer agent) ) )
          (once (in_motion floor) )
          (once (not (and (< (distance ?h ?h) 9) (rug_color_under bed blue) (exists (?b - pillow) (not (agent_holds ?g) ) ) ) ) )
        )
      )
    )
    (preference cubeBlockThrowAttempt
      (exists (?o4 ?c - (either triangular_ramp cube_block))
        (at-end
          (on ?b ?p2)
        )
      )
    )
    (preference blockInTowerAtEnd
      (at-end
        (forall (?c - beachball)
          (agent_holds ?c)
        )
      )
    )
  )
)
(:terminal
  (>= 5 2 )
)
(:scoring
  (* (* 2 2 )
    9
  )
)
)



(define (game game-id-212) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?l - chair ?d - hexagonal_bin)
      (and
        (exists (?c - ball)
          (game-conserved
            (not
              (same_type ?c ?d)
            )
          )
        )
      )
    )
    (exists (?b - dodgeball ?h - triangular_ramp)
      (exists (?b5 - hexagonal_bin)
        (and
          (and
            (forall (?b - hexagonal_bin)
              (exists (?c3 - ball)
                (game-conserved
                  (agent_holds ?c3)
                )
              )
            )
            (exists (?p2 - hexagonal_bin ?c - hexagonal_bin)
              (and
                (game-optional
                  (in_motion ?b1)
                )
                (game-conserved
                  (in ?c ?h)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttemptFromBehindBlock
      (exists (?h - hexagonal_bin)
        (then
          (once (not (in ?h ?h) ) )
          (hold (touch ?h ?o) )
          (once (agent_holds desk) )
        )
      )
    )
  )
)
(:terminal
  (and
    (and
      (and
        (>= (- 2 )
          5
        )
        (>= (total-score) (count-once-per-external-objects throwAttemptFromBehindBlock) )
        (and
          (= (total-score) (<= (count-once-per-objects throwAttemptFromBehindBlock:side_table) 1 )
          )
          (>= (count-once-per-objects throwAttemptFromBehindBlock:basketball:rug) (total-score) )
          (or
            (or
              (>= (total-time) (total-time) )
              (>= (external-forall-maximize (count-once-per-external-objects throwAttemptFromBehindBlock:yellow_cube_block) ) (count-once-per-objects throwAttemptFromBehindBlock:beachball:book) )
              (not
                (>= (* (+ 10 5 )
                    (count-once-per-objects throwAttemptFromBehindBlock:beachball)
                  )
                  (* (count throwAttemptFromBehindBlock:basketball) (count-once-per-objects throwAttemptFromBehindBlock:dodgeball) )
                )
              )
            )
            (and
              (or
                (>= (total-time) (* 15 (count throwAttemptFromBehindBlock:dodgeball) )
                )
                (>= (+ 20 (count-once-per-objects throwAttemptFromBehindBlock:purple) )
                  (count throwAttemptFromBehindBlock:doggie_bed:cylindrical_block:yellow)
                )
                (>= 0.5 (total-score) )
              )
              (or
                (or
                  (>= (+ (count-same-positions throwAttemptFromBehindBlock:dodgeball:golfball) (count-once-per-objects throwAttemptFromBehindBlock:dodgeball) )
                    (count-once throwAttemptFromBehindBlock)
                  )
                  (= (count throwAttemptFromBehindBlock:rug) (count throwAttemptFromBehindBlock:hexagonal_bin) )
                )
                (>= 3 5 )
              )
            )
          )
        )
      )
      (< (count-once throwAttemptFromBehindBlock:pink) 5 )
      (>= (count-once-per-objects throwAttemptFromBehindBlock:pink) (* (* 3 5 )
          2
          (count-once-per-objects throwAttemptFromBehindBlock:bed)
        )
      )
    )
    (>= (count-once-per-external-objects throwAttemptFromBehindBlock:blue_dodgeball) (total-time) )
  )
)
(:scoring
  (count throwAttemptFromBehindBlock:blue_pyramid_block)
)
)



(define (game game-id-213) (:domain medium-objects-room-v1)
(:setup
  (exists (?r2 - dodgeball)
    (and
      (forall (?l - building ?h - dodgeball)
        (exists (?h - cube_block ?db - cube_block)
          (exists (?l - game_object ?b10 - cylindrical_block)
            (exists (?l2 - wall)
              (game-optional
                (on ?b2 ?l2)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b10 - hexagonal_bin ?o - ball)
      (and
        (preference throwToBin
          (exists (?c4 - (either cylindrical_block pen) ?o - doggie_bed ?c - (either basketball golfball))
            (at-end
              (open ?b)
            )
          )
        )
        (preference throwGolfballToBin
          (exists (?o - (either dodgeball dodgeball golfball teddy_bear hexagonal_bin top_drawer game_object))
            (at-end
              (above agent ?d)
            )
          )
        )
        (preference blockInTowerAtEnd
          (exists (?b - cylindrical_block ?b5 - cube_block)
            (then
              (once (agent_holds ?h) )
              (once (not (and (not (not (not (agent_holds ?b) ) ) ) (and (<= (distance south_wall ?d) (distance room_center agent)) (not (and (and (agent_holds ?b5) (in_motion ?b5) (and (in_motion bed) (agent_holds ?o) ) (not (on ?o ?b5) ) ) (agent_crouches ) ) ) ) ) ) )
            )
          )
        )
        (preference baseBlockInTowerAtEnd
          (then
            (hold (on ?o ?o) )
            (hold (and (< 0 4) (or (and (and (not (and (and (object_orientation ?o upside_down) ) (= (distance agent ?o) (distance agent ?b)) ) ) (not (on ?b ?l) ) ) ) (adjacent ?h ?d) ) ) )
            (once (in ?o ?t) )
          )
        )
      )
    )
    (forall (?t2 - ball)
      (and
        (preference throwToBinFromOppositeWall
          (exists (?b - cylindrical_block ?c - sliding_door)
            (then
              (hold (game_over ) )
              (once (and (not (and (agent_holds ?c) ) ) (not (in_motion ?t2) ) ) )
              (hold (agent_holds ?r) )
              (hold (in_motion ?t2) )
              (once (< 1 1) )
              (once (= 9 (distance ?b1 ?b)) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-increasing-measure throwToBin:pink_dodgeball) 1 )
)
(:scoring
  (count throwToBinFromOppositeWall:yellow)
)
)



(define (game game-id-214) (:domain few-objects-room-v1)
(:setup
  (exists (?h - cube_block ?d - cube_block ?w1 - hexagonal_bin)
    (game-conserved
      (and
        (and
          (exists (?b - (either laptop pyramid_block) ?t - shelf)
            (agent_holds ?b)
          )
          (exists (?b - dodgeball)
            (on ?w1 ?c3)
          )
        )
        (>= 0 6)
      )
    )
  )
)
(:constraints
  (and
    (preference redDodgeballThrownToBin
      (exists (?s - (either book basketball cellphone))
        (then
          (once (agent_holds ?s) )
          (once (in_motion ?s) )
          (once (on ?g ?l) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 5 15 )
    (count redDodgeballThrownToBin:beachball)
  )
)
(:scoring
  (count-overlapping redDodgeballThrownToBin:basketball)
)
)



(define (game game-id-215) (:domain few-objects-room-v1)
(:setup
  (exists (?ob - shelf ?d2 - dodgeball)
    (game-optional
      (in_motion ?d2)
    )
  )
)
(:constraints
  (and
    (preference ballThrownToWallToAgent
      (exists (?w1 - game_object)
        (then
          (hold-while (and (in desk ?b) (on ?w1 ?w1) ) (not (not (between ?c ?o2 ?w1) ) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (count-once-per-objects ballThrownToWallToAgent:blue_cube_block) (total-score) )
  )
)
(:scoring
  (* 8 (* (count-overlapping ballThrownToWallToAgent:pink_dodgeball:yellow) (count ballThrownToWallToAgent:yellow) )
    (* (= (* (* (* (count-unique-positions ballThrownToWallToAgent:tan) 2 )
            (count-once-per-objects ballThrownToWallToAgent:beachball)
            (count ballThrownToWallToAgent:dodgeball:golfball)
            4
          )
          (count ballThrownToWallToAgent:beachball)
        )
        (count-once ballThrownToWallToAgent:book)
      )
      (count-once-per-objects ballThrownToWallToAgent:hexagonal_bin)
      10
    )
  )
)
)



(define (game game-id-216) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?d - hexagonal_bin)
      (forall (?c1 - color)
        (and
          (exists (?c - (either beachball lamp) ?s - hexagonal_bin)
            (and
              (game-conserved
                (not
                  (not
                    (and
                      (on desk ?r)
                      (in_motion ?d)
                    )
                  )
                )
              )
              (forall (?d - teddy_bear)
                (game-conserved
                  (forall (?d - hexagonal_bin)
                    (in_motion ?l2)
                  )
                )
              )
              (game-conserved
                (in_motion top_shelf)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference thrownObjectHitsComputer
      (exists (?c - (either ball triangular_ramp doggie_bed))
        (at-end
          (not
            (in_motion ?c)
          )
        )
      )
    )
  )
)
(:terminal
  (= (count thrownObjectHitsComputer:golfball) (count-measure thrownObjectHitsComputer:dodgeball) )
)
(:scoring
  (-
    (+ 4 )
    300
  )
)
)



(define (game game-id-217) (:domain medium-objects-room-v1)
(:setup
  (exists (?b3 - building)
    (exists (?p3 - dodgeball ?r1 - curved_wooden_ramp)
      (exists (?b - cylindrical_block ?c - game_object)
        (exists (?b2 - teddy_bear ?d - red_dodgeball)
          (game-optional
            (agent_holds ?p)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference castleBuilt
      (exists (?f - hexagonal_bin ?b2 - teddy_bear)
        (then
          (hold (and (equal_x_position ?h ?t) (and (in ?b2 ?b2) (in_motion ?b2) (agent_holds ?b2) ) ) )
          (hold-while (rug_color_under ?h ?b2) (on ?d ?b2) )
          (once (not (and (on ?b2 ?o) (and (object_orientation ?b2 ?b2) (agent_holds ?b2) (not (agent_holds ?b) ) ) ) ) )
        )
      )
    )
    (preference dodgeballHitsPillowWithoutTouchingBlock
      (exists (?o - hexagonal_bin)
        (then
          (once (in_motion ?o) )
          (hold (on ?w2 ?b) )
          (once (and (agent_holds pink_dodgeball) (and (and (touch ?o ?o) (not (in_motion ?o) ) (touch ?o ?d) ) (toggled_on ?d) ) (and (exists (?o - block) (not (in_motion ?o) ) ) (adjacent agent ?b) ) (and (and (in_motion ?d) (< (distance_side ?h front ?d) 7) ) (adjacent agent ?o) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (- (count-once dodgeballHitsPillowWithoutTouchingBlock:beachball) )
    (+ 5 100 )
  )
)
(:scoring
  (external-forall-minimize
    (+ 10 (* (* (count castleBuilt:dodgeball) 3 6 )
      )
    )
  )
)
)



(define (game game-id-218) (:domain few-objects-room-v1)
(:setup
  (forall (?b - hexagonal_bin)
    (not
      (exists (?c - dodgeball)
        (forall (?c - (either pillow main_light_switch) ?o3 - (either ball beachball cellphone))
          (forall (?b - cube_block ?t - doggie_bed)
            (game-optional
              (in_motion ?c)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference pyramidBlockAtopTowerAtEnd
      (exists (?t - block ?o - dodgeball)
        (then
          (hold (agent_crouches ) )
          (once (in_motion ?o) )
          (once-measure (not (on ?b ?o) ) (distance ?h ?b) )
        )
      )
    )
    (preference ballToBinFromBed
      (exists (?h - hexagonal_bin)
        (then
          (once (or (and (and (not (agent_crouches ) ) (and (in_motion ?h) (adjacent room_center ?h) ) ) (and (> 1 (distance door ?d)) (and (in_motion ?h) (on ?h ?o3) (exists (?c2 - (either cube_block bridge_block)) (exists (?d - cube_block ?x - ball ?c2 - (either cylindrical_block doggie_bed game_object)) (agent_holds ?c) ) ) ) ) ) (agent_holds ?h) ) )
          (once (and (and (agent_holds ?h) (adjacent desk ?d) ) (in_motion ?g) (and (agent_holds ?d) (agent_holds ?g) ) (and (in ?h ?h) (< (distance room_center ?d) (distance room_center ?h)) ) ) )
          (hold-while (on ?h ?d) (not (or (agent_holds ?h) (not (on ?h ?c) ) ) ) (on ?h ?b8) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects pyramidBlockAtopTowerAtEnd:golfball) (count pyramidBlockAtopTowerAtEnd:blue_dodgeball) )
)
(:scoring
  (count pyramidBlockAtopTowerAtEnd:basketball)
)
)



(define (game game-id-219) (:domain many-objects-room-v1)
(:setup
  (exists (?b - curved_wooden_ramp ?x - hexagonal_bin)
    (forall (?w1 - (either pyramid_block golfball))
      (game-conserved
        (on ?w1 ?b)
      )
    )
  )
)
(:constraints
  (and
    (preference ballInOrOnBin
      (exists (?b10 - (either tall_cylindrical_block cylindrical_block teddy_bear cellphone hexagonal_bin))
        (then
          (once (not (opposite ?b10 ?b10) ) )
          (hold (touch ?b10 ?b10) )
          (hold-while (not (and (adjacent ?h ?b10) (and (on ?b10 ?b10) (not (not (not (exists (?b - dodgeball ?r - curved_wooden_ramp ?d - wall) (and (agent_holds ?d) (faces ?d agent) (and (in ?h ?b10) (touch ?h ?d) ) ) ) ) ) ) ) ) ) (agent_holds ?b10) (and (touch ?p rug) (or (and (adjacent room_center ?b10) (agent_holds ?h) ) (and (<= (distance ?b10 ?b2) 2) (and (not (not (exists (?o - block) (not (and (agent_holds ?d) (not (not (in_motion ?o) ) ) ) ) ) ) ) (adjacent bed ?b10) ) ) ) ) )
        )
      )
    )
    (forall (?c - game_object)
      (and
        (preference dodgeballHitsBinBottom
          (exists (?h ?ob - chair)
            (then
              (once (in_motion ?ob) )
              (hold-while (or (and (adjacent ?h ?c) (exists (?o1 - game_object) (not (above ?b ?b) ) ) ) (agent_holds pink_dodgeball) ) (exists (?r - wall ?d2 - (either dodgeball bridge_block dodgeball)) (< (distance ?d2 ?c) 1) ) )
              (once (agent_holds ?h) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (not
      (or
        (>= (+ (+ (* (= (- (+ 5 (count-longest dodgeballHitsBinBottom:pink:dodgeball) )
                  )
                  (count dodgeballHitsBinBottom:red:basketball:pyramid_block)
                )
                (count-once-per-objects dodgeballHitsBinBottom:hexagonal_bin)
              )
              6
            )
            (count-once-per-objects ballInOrOnBin:dodgeball)
          )
          (count ballInOrOnBin:dodgeball)
        )
        (>= (count dodgeballHitsBinBottom:yellow) (total-score) )
      )
    )
    (or
      (>= (total-score) (total-score) )
      (>= 5 2 )
      (>= 4 (count dodgeballHitsBinBottom:hexagonal_bin) )
    )
  )
)
(:scoring
  (* (* (count-once-per-objects ballInOrOnBin:beachball:dodgeball) (* 10 (+ (count-total dodgeballHitsBinBottom:dodgeball) 300 )
      )
    )
    5
    (count dodgeballHitsBinBottom:cube_block)
    2
  )
)
)



(define (game game-id-220) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (same_color green_golfball ?c)
  )
)
(:constraints
  (and
    (preference objectThrownFromRug
      (exists (?b - hexagonal_bin ?d - building)
        (then
          (once (on ?d ?b) )
          (once (not (and (not (in ?d ?d) ) (in ?d ?d) (agent_holds ?d) ) ) )
          (once (and (in_motion ?d) (touch ?d ?d) ) )
        )
      )
    )
    (preference agentLeavesDogbedOrNoMoreBalls
      (exists (?c4 - ball)
        (then
          (once (not (and (not (adjacent agent ?c4) ) (not (not (and (agent_holds ?d) (on ?c4 ?c4) ) ) ) ) ) )
          (once (and (and (not (touch ?l2 ?c4) ) (or (>= 0.5 (building_size ?c4)) ) ) (agent_holds ?h) ) )
          (once (and (>= 3 (distance_side agent right ?c4)) (not (not (not (and (and (agent_holds ?c4) (on ?c4 ?g) ) (agent_holds ?d) ) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (<= (>= (* (count-total agentLeavesDogbedOrNoMoreBalls:beachball) (count objectThrownFromRug:block) )
        20
      )
      3
    )
  )
)
(:scoring
  (* 7 (* 2 (+ (count agentLeavesDogbedOrNoMoreBalls:yellow) (count-increasing-measure agentLeavesDogbedOrNoMoreBalls:orange:dodgeball) )
    )
    (count-once agentLeavesDogbedOrNoMoreBalls:orange)
    8
    3
    (* (count objectThrownFromRug:book) (count-once-per-objects agentLeavesDogbedOrNoMoreBalls:green) 5 1 )
  )
)
)



(define (game game-id-221) (:domain few-objects-room-v1)
(:setup
  (not
    (game-optional
      (on ?d ?b)
    )
  )
)
(:constraints
  (and
    (preference dodgeballBouncesOnceToDoggieBed
      (exists (?g - hexagonal_bin)
        (at-end
          (agent_holds ?g)
        )
      )
    )
    (forall (?d - doggie_bed ?h - game_object ?r - ball)
      (and
        (preference throwAttempt
          (then
            (once-measure (in_motion ?d) (distance ?d ?c) )
            (once (on ?o ?r) )
            (once (on ?r desk) )
          )
        )
      )
    )
    (preference dropAttempt
      (exists (?p3 - wall)
        (then
          (once (and (agent_holds ?h) (on ?p3 agent) ) )
          (once (and (in_motion ?b) (and (in_motion ?c1) (in_motion ?p3) ) ) )
          (once (and (in bed ?o) (touch bed ?d) ) )
        )
      )
    )
    (preference pyramidBlockAtopTowerAtEnd
      (exists (?b - hexagonal_bin ?b10 - (either laptop pyramid_block))
        (then
          (once (and (agent_holds ?b10) (and (in ?b10 ?b10) (on ?h ?b10) (and (adjacent desk ?g) (agent_holds ?b10) (in_motion ?b10) ) ) (equal_z_position ?c ?b10) (agent_holds ?b2) ) )
          (once (and (on ?b10 ?o) (in_motion ?b10) (and (in_motion ?c) ) ) )
          (once (in_motion ?d) )
        )
      )
    )
  )
)
(:terminal
  (and
    (and
      (>= (count dodgeballBouncesOnceToDoggieBed:block) (count-once-per-objects dropAttempt:beachball) )
      (>= 4 5 )
      (>= (total-time) (total-score) )
    )
    (or
      (>= (count-once pyramidBlockAtopTowerAtEnd:dodgeball) (count throwAttempt:brown) )
    )
  )
)
(:scoring
  (* 1 2 )
)
)



(define (game game-id-222) (:domain many-objects-room-v1)
(:setup
  (exists (?d - dodgeball)
    (and
      (game-conserved
        (between ?d ?b1 ?d)
      )
    )
  )
)
(:constraints
  (and
    (preference matchingBuildingBuilt
      (exists (?r1 - color)
        (at-end
          (or
            (in_motion ?r1)
            (>= (distance ?r1 ?o) (distance desk ?r1))
          )
        )
      )
    )
    (preference ballThrowAttempt
      (exists (?h - game_object ?h - color)
        (at-end
          (in ?h bed)
        )
      )
    )
  )
)
(:terminal
  (or
    (< (* 10 300 )
      (> (external-forall-maximize (count-once-per-objects ballThrowAttempt:alarm_clock) ) (* (>= 5 (count ballThrowAttempt:beachball) )
          (count-once-per-objects matchingBuildingBuilt:dodgeball:basketball)
          (+ 2 (count-once matchingBuildingBuilt:beachball) )
        )
      )
    )
    (or
      (>= (+ (count-once-per-objects ballThrowAttempt:dodgeball) (count-once-per-objects matchingBuildingBuilt:green) )
        2
      )
    )
    (not
      (or
        (>= (* (count matchingBuildingBuilt:green) )
          (count-once matchingBuildingBuilt:green:yellow)
        )
        (<= 1 (total-score) )
      )
    )
  )
)
(:scoring
  (count matchingBuildingBuilt:beachball)
)
)



(define (game game-id-223) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (in_motion ?b)
    )
  )
)
(:constraints
  (and
    (preference ballThrowAttempt
      (exists (?l1 - hexagonal_bin)
        (at-end
          (not
            (agent_holds ?w1)
          )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (count-once-per-objects ballThrowAttempt:yellow) )
)
(:scoring
  (* 30 (* (count-once-per-objects ballThrowAttempt:beachball) 3 )
  )
)
)



(define (game game-id-224) (:domain medium-objects-room-v1)
(:setup
  (forall (?h ?c - ball)
    (forall (?t - teddy_bear)
      (game-conserved
        (in ?c ?o)
      )
    )
  )
)
(:constraints
  (and
    (preference golfballUnderBridgeWithoutTouchingBlock
      (exists (?w2 - game_object ?h - dodgeball)
        (then
          (hold (agent_holds ?h) )
          (once (or (agent_holds ?s) (in ?h ?l) ) )
          (once (broken ?h) )
        )
      )
    )
    (forall (?c2 - dodgeball)
      (and
        (preference ballNeverThrown
          (exists (?b - dodgeball)
            (at-end
              (not
                (and
                  (and
                    (touch ?c2 ?b)
                  )
                  (in_motion ?c)
                )
              )
            )
          )
        )
        (preference ballThrownToRug
          (exists (?l1 - hexagonal_bin ?d - block)
            (then
              (hold (same_type ?t ?c2) )
              (once (and (not (on ?c2 ?d) ) (in_motion ?b) ) )
              (once (exists (?p - ball) (and (touch agent ?d) (and (agent_holds ?d) (and (on ?w ?c2) (in_motion ?h) ) ) ) ) )
            )
          )
        )
      )
    )
    (forall (?o4 - dodgeball ?t - ball)
      (and
        (preference blockFromRugToDesk
          (exists (?g - ball)
            (then
              (hold (not (game_over ) ) )
              (hold-while (not (and (in_motion ?t) (< (distance_side rug front rug) (distance agent ?t)) (same_type desk ?g) ) ) (not (and (agent_holds ?g) (agent_holds ?c) ) ) )
              (once (and (in_motion ?b) (agent_holds ?g) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count-once-per-external-objects golfballUnderBridgeWithoutTouchingBlock:beachball) 4 10 )
    10
  )
)
(:scoring
  (count blockFromRugToDesk:dodgeball)
)
)



(define (game game-id-225) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?b - game_object)
      (game-conserved
        (and
          (exists (?b - hexagonal_bin)
            (agent_holds ?b)
          )
          (not
            (in ?d ?t)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b ?l2 - golfball ?h - hexagonal_bin)
      (and
        (preference basketMadeFromRug
          (exists (?t1 - wall ?db - hexagonal_bin ?t ?l ?o ?w2 ?d ?o - dodgeball)
            (then
              (once (broken ?b2) )
              (once (and (on ?w2 ?l) (and (on ?t ?d) (on ?h bed) (agent_holds ?d) (and (agent_holds ?d) (not (and (adjacent room_center ?o) (adjacent ?d ?o2) ) ) (not (object_orientation ?ob upside_down) ) ) (adjacent_side ?l front ?o) (and (and (in ?b ?d) (not (adjacent agent ?l) ) ) (exists (?p2 ?c5 - building) (not (and (in_motion ?o) (agent_holds ?c5) ) ) ) ) (agent_holds ?l) (not (in ?t ?l2) ) ) (rug_color_under ?b ?c) ) )
              (once (or (in_motion ?l) (not (adjacent rug ?c3) ) ) )
              (once (object_orientation ?d upright) )
            )
          )
        )
      )
    )
    (preference throwToBin
      (exists (?d1 ?b3 - golfball ?c4 - dodgeball)
        (at-end
          (adjacent ?c4 ?c4)
        )
      )
    )
    (preference throwBallToBin
      (exists (?t2 - cube_block)
        (at-end
          (in ?b ?t)
        )
      )
    )
  )
)
(:terminal
  (and
    (<= (count basketMadeFromRug:cube_block:basketball) (count throwToBin:dodgeball) )
    (>= (count-once-per-objects throwToBin:side_table) (count-once-per-objects basketMadeFromRug:basketball) )
    (or
      (not
        (>= (count-once-per-objects basketMadeFromRug:doggie_bed) (total-score) )
      )
      (>= (total-score) 7 )
    )
  )
)
(:scoring
  (count throwToBin:dodgeball)
)
)



(define (game game-id-226) (:domain few-objects-room-v1)
(:setup
  (exists (?b8 - building)
    (game-optional
      (and
        (on ?d ?c2)
        (adjacent agent ?l1)
        (agent_holds ?b8)
        (adjacent ?b8 ?h)
        (and
          (and
            (agent_holds ?o)
            (not
              (not
                (agent_holds ?b8)
              )
            )
          )
          (is_setup_object ?h)
          (in ?b8 ?w)
        )
        (agent_holds ?o)
        (and
          (and
            (not
              (not
                (on ?g ?b8)
              )
            )
            (not
              (agent_holds ?r)
            )
          )
          (and
            (and
              (in_motion ?b8)
              (object_orientation ?b8 upside_down)
            )
            (in_motion ?d)
          )
          (<= 10 (distance ?h ?b8))
        )
        (agent_holds ?b8)
      )
    )
  )
)
(:constraints
  (and
    (preference teddyBearLandsInBin
      (exists (?s - game_object ?o - wall)
        (at-end
          (and
            (agent_holds ?o)
            (agent_holds ?g)
            (< (distance ?o ?o) 5)
            (and
              (adjacent room_center ?o)
              (not
                (agent_holds ?o)
              )
            )
          )
        )
      )
    )
    (forall (?h - building ?c - hexagonal_bin)
      (and
        (preference throwAttempt
          (exists (?h - desk_shelf)
            (then
              (hold (exists (?c4 - hexagonal_bin) (faces ?c ?g) ) )
              (hold (not (< 1 6) ) )
              (hold (< (distance agent ?c) (distance_side room_center ?c ?o)) )
            )
          )
        )
        (preference ballThrownFromRug
          (exists (?h - block ?o2 - dodgeball ?h ?d - (either pyramid_block) ?l - doggie_bed)
            (then
              (once (on ?l ?o) )
              (once (touch ?d ?b) )
              (hold (and (not (adjacent agent ?c) ) (agent_holds ?c) (and (agent_holds ?o) (adjacent ?l ?c) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (+ (* 5 2 (* (+ (* 8 )
              10
            )
            (count-once-per-objects throwAttempt:cube_block)
          )
        )
        (count teddyBearLandsInBin:side_table)
      )
      (count-once-per-objects throwAttempt:yellow)
    )
  )
)
(:scoring
  (+ 3 (count teddyBearLandsInBin:dodgeball) )
)
)



(define (game game-id-227) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (in_motion ?d)
  )
)
(:constraints
  (and
    (forall (?o5 - building)
      (and
        (preference cubeBlockThrownToTopShelf
          (exists (?l1 - doggie_bed)
            (then
              (once (in ?b ?l1) )
              (once (in_motion ?l1) )
              (hold (not (in_motion ?l1) ) )
            )
          )
        )
        (preference golfballLandsInBinThroughRamp
          (exists (?db - building)
            (at-end
              (and
                (not
                  (and
                    (agent_holds ?o2)
                    (agent_holds ?b)
                  )
                )
                (opposite desk ?b)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (> 20 (total-time) )
    (> 5 15 )
  )
)
(:scoring
  (count golfballLandsInBinThroughRamp:dodgeball)
)
)



(define (game game-id-228) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (forall (?b - dodgeball)
      (agent_holds ?o)
    )
  )
)
(:constraints
  (and
    (preference blockInTowerAtEnd
      (exists (?b - doggie_bed)
        (then
          (hold-while (in_motion ?b) (not (and (exists (?b - cube_block ?h - (either book pencil golfball)) (not (rug_color_under ?b ?b) ) ) (between ?b ?b ?w) ) ) )
          (once (in_motion ?l3) )
          (hold (same_color ?b green) )
        )
      )
    )
    (forall (?c4 - dodgeball)
      (and
        (preference golfballUnderBridgeWithoutTouchingBlock
          (then
            (once (agent_holds ?c4) )
            (hold (< 4 (distance ?h ?c4)) )
            (once (not (and (not (agent_holds ?d) ) (and (agent_holds agent) (on ?c4 ?d) ) ) ) )
          )
        )
      )
    )
    (preference dodgeballHitsBinBottom
      (exists (?h - hexagonal_bin)
        (at-end
          (on ?h ?o1)
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (external-forall-maximize (* (* (count-once-per-objects golfballUnderBridgeWithoutTouchingBlock:pink_dodgeball:red) (external-forall-maximize (count golfballUnderBridgeWithoutTouchingBlock:hexagonal_bin) ) )
            2
            (count golfballUnderBridgeWithoutTouchingBlock:dodgeball)
            (count-once-per-external-objects golfballUnderBridgeWithoutTouchingBlock:cylindrical_block)
            10
            (+ (count-once-per-objects golfballUnderBridgeWithoutTouchingBlock:golfball:blue) (+ 3 5 (* (count dodgeballHitsBinBottom:pink:basketball) 10 )
                1
                (+ (count-once-per-objects dodgeballHitsBinBottom:golfball) 3 )
                (+ 30 (+ (count-once-per-objects golfballUnderBridgeWithoutTouchingBlock:rug:pink) 10 )
                )
              )
              (count-total blockInTowerAtEnd:red)
            )
            (- (count blockInTowerAtEnd:book) )
            (count-longest golfballUnderBridgeWithoutTouchingBlock:blue_dodgeball)
            1
          )
        )
        (count dodgeballHitsBinBottom:basketball)
      )
      (>= (total-score) (count-once-per-objects dodgeballHitsBinBottom:pink) )
    )
    (<= 10 (count-once-per-objects golfballUnderBridgeWithoutTouchingBlock:beachball) )
  )
)
(:scoring
  (count golfballUnderBridgeWithoutTouchingBlock:blue_pyramid_block:blue_dodgeball)
)
)



(define (game game-id-229) (:domain medium-objects-room-v1)
(:setup
  (forall (?c - teddy_bear ?w2 - game_object ?p3 - hexagonal_bin)
    (and
      (game-conserved
        (and
          (same_type ?p3 pillow)
          (agent_holds agent)
        )
      )
      (not
        (and
          (and
            (exists (?c - hexagonal_bin)
              (and
                (exists (?o - dodgeball)
                  (game-optional
                    (on ?p3 ?o)
                  )
                )
              )
            )
          )
        )
      )
      (game-conserved
        (not
          (and
            (in_motion ?p3)
            (= 1 (distance ?p3 ?p3) (distance agent ?h))
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b3 - hexagonal_bin ?c1 - cube_block)
      (and
        (preference agentLeavesDogbedOrNoMoreBalls
          (exists (?b - hexagonal_bin ?t - game_object ?t ?r2 ?w2 - dodgeball ?h - (either desktop hexagonal_bin))
            (then
              (once (not (agent_holds ?ob) ) )
            )
          )
        )
      )
    )
    (forall (?b - hexagonal_bin)
      (and
        (preference failedThrowAttempt
          (exists (?c4 - curved_wooden_ramp ?r - dodgeball)
            (then
              (once (agent_holds ?r) )
              (once (and (on ?h ?r) (not (toggled_on ?r) ) ) )
              (hold (agent_holds ?r) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (> (total-time) (+ (count agentLeavesDogbedOrNoMoreBalls:beachball) (* (count agentLeavesDogbedOrNoMoreBalls:red:dodgeball) (count agentLeavesDogbedOrNoMoreBalls:basketball) (count-once-per-external-objects failedThrowAttempt:pink:green) )
      )
    )
  )
)
(:scoring
  (< (+ (* (count failedThrowAttempt:doggie_bed) 2 )
      (* 3 3 )
    )
    (count failedThrowAttempt:beachball)
  )
)
)



(define (game game-id-230) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (in_motion ?c)
  )
)
(:constraints
  (and
    (preference blockIncorrectlyPicked
      (exists (?b - dodgeball)
        (then
          (once (in_motion ?b) )
          (once (touch ?h ?b) )
          (once (is_setup_object desk) )
        )
      )
    )
  )
)
(:terminal
  (>= (count blockIncorrectlyPicked:top_drawer:yellow_cube_block) (count blockIncorrectlyPicked:dodgeball:dodgeball) )
)
(:scoring
  (* 20 40 )
)
)



(define (game game-id-231) (:domain medium-objects-room-v1)
(:setup
  (forall (?b9 - (either book) ?h - hexagonal_bin)
    (and
      (exists (?g - curved_wooden_ramp ?g - hexagonal_bin)
        (game-conserved
          (in_motion ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?ob - doggie_bed ?h - hexagonal_bin)
      (and
        (preference cubeBlockThrownToTopShelf
          (then
            (once (and (and (not (same_object ?b3 ?h) ) (not (and (game_over ) (agent_holds ?h) ) ) ) (not (agent_holds ?h) ) ) )
            (hold (agent_holds ?l) )
            (once (touch ?o2 ?p) )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (count cubeBlockThrownToTopShelf:doggie_bed:basketball) )
)
(:scoring
  (+ (- (count cubeBlockThrownToTopShelf:dodgeball) )
    5
  )
)
)



(define (game game-id-232) (:domain medium-objects-room-v1)
(:setup
  (exists (?l2 - block ?c5 - cube_block)
    (forall (?c1 - chair ?r2 - (either book bridge_block flat_block))
      (game-optional
        (game_start )
      )
    )
  )
)
(:constraints
  (and
    (preference objectMovedRoomSide
      (exists (?b4 - hexagonal_bin)
        (then
          (hold-while (in_motion ?o4) (between ?b4 ?b ?b4) (above ?b4 ?b4) )
          (once (in_motion ?o1) )
          (once (in_motion ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) 6 )
)
(:scoring
  (* (count-once-per-objects objectMovedRoomSide:pink:wall) (* 2 (count-once-per-objects objectMovedRoomSide:pink_dodgeball) )
  )
)
)



(define (game game-id-233) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (same_type ?o2 block)
  )
)
(:constraints
  (and
    (preference throwFromDoorToBin
      (exists (?w - dodgeball)
        (then
          (once (in_motion ?w) )
          (hold-while (not (and (in desk ?b) (same_object ?d agent) ) ) (not (on ?w ?b8) ) (= 1 (distance ?o agent)) )
          (once (and (in_motion ?c) (and (agent_holds ?d1) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count throwFromDoorToBin:pink) (* 5 (count-once throwFromDoorToBin:red) 15 2 (* (* (+ (+ 3 (count throwFromDoorToBin:dodgeball) )
              (* (count throwFromDoorToBin:pink) (count-once-per-objects throwFromDoorToBin:purple:dodgeball) (count-once-per-external-objects throwFromDoorToBin:dodgeball:yellow) )
            )
            (* (count throwFromDoorToBin:basketball:purple) 5 )
          )
          (count throwFromDoorToBin:pink)
        )
      )
    )
    (count-total throwFromDoorToBin:green)
  )
)
(:scoring
  (+ (count throwFromDoorToBin:pink_dodgeball:dodgeball) 6 )
)
)



(define (game game-id-234) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?d - curved_wooden_ramp ?h ?h - chair)
      (and
        (game-conserved
          (adjacent door ?c6)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?o4 - ball)
        (then
          (once (not (open ?o4) ) )
          (hold (on ?o4 ?o4) )
          (hold (agent_holds ?o4) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (or
        (or
          (<= (total-time) (count-overlapping ballThrownToBin:dodgeball) )
        )
      )
      (> (* (count ballThrownToBin:pink) (count ballThrownToBin:yellow) )
        (count-unique-positions ballThrownToBin:yellow:dodgeball)
      )
    )
    (> (* (+ 5 )
        (+ 3 (count ballThrownToBin:beachball:blue_pyramid_block) )
      )
      (count-once-per-objects ballThrownToBin:dodgeball)
    )
  )
)
(:scoring
  (count ballThrownToBin:dodgeball)
)
)



(define (game game-id-235) (:domain medium-objects-room-v1)
(:setup
  (exists (?h - dodgeball ?w2 - doggie_bed)
    (exists (?l3 - hexagonal_bin)
      (forall (?b ?o - game_object ?d - ball)
        (forall (?d - cube_block ?b6 - ball)
          (forall (?c - ball)
            (game-conserved
              (adjacent desk ?c)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?ob - hexagonal_bin ?g - golfball)
      (and
        (preference cubeBlockInBuilding
          (exists (?o - ball)
            (then
              (hold (not (< (distance_side desk back ?c2 back) 2) ) )
              (once (adjacent_side ?h front ?b) )
              (once (in_motion ?d) )
            )
          )
        )
      )
    )
    (preference golfballInBinFromPillow
      (exists (?b4 ?l2 ?w1 ?c ?t ?d - (either desktop cube_block) ?c - game_object)
        (then
          (hold (in ?b ?b) )
          (hold (and (or (and (or (and (and (> (distance ?c bed) (distance door ?c)) (rug_color_under ?c pink) (and (not (agent_holds ?l) ) (game_start ) ) ) (adjacent rug ?c) (not (agent_holds ?d) ) (not (in_motion bed) ) (and (in_motion ?c) (not (equal_z_position ?b2 ?g) ) (in_motion ?b) ) (and (on ?c ?d) (and (not (and (agent_crouches ) (adjacent_side ?c front ?b) ) ) (in ?c ?c) (not (and (and (and (exists (?o - doggie_bed ?b - building ?h - tall_cylindrical_block ?t1 - triangular_ramp ?p3 - hexagonal_bin) (in ?b ?p3) ) (agent_holds ?b) (not (not (agent_holds ?b8) ) ) (and (on ?d ?c) (not (same_type ?b pillow) ) (not (agent_holds ?h) ) (in_motion agent) (exists (?h - teddy_bear) (agent_holds floor) ) (not (in_motion ?c) ) (>= 1 (distance ?d ?c)) (same_type ?c blinds) ) (in_motion ?b) (agent_holds desk) ) (in ?h ?c) ) ) ) ) ) ) (< (distance ?c ?b) (distance agent ?c)) ) (agent_holds ?c) ) (in ?c ?c) ) (in_motion ?t) ) )
          (once (not (and (in_motion ?d) (not (and (in_motion ?f) (and (not (and (in ?c ?c) ) ) (and (in agent ?d) (in ?c ?d) ) ) ) ) (or (adjacent ?c ?d) (and (not (agent_holds ?c) ) (in_motion ?c) (agent_holds ?b) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (* 9 (count-once-per-external-objects cubeBlockInBuilding:green:blue_dodgeball) )
      5
    )
    40
  )
)
(:scoring
  (count cubeBlockInBuilding:orange:basketball)
)
)



(define (game game-id-236) (:domain medium-objects-room-v1)
(:setup
  (exists (?b - beachball ?l2 - (either credit_card mug triangular_ramp) ?h - curved_wooden_ramp ?h ?h - dodgeball)
    (and
      (game-conserved
        (and
          (in ?h ?b)
          (in_motion ?c)
        )
      )
      (forall (?b8 - block ?ob - (either pyramid_block dodgeball basketball))
        (game-optional
          (agent_holds ?b)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blocksInPlace
      (exists (?b8 - hexagonal_bin)
        (then
          (hold (not (not (not (exists (?s - red_dodgeball) (not (not (and (agent_holds ?s) (adjacent desk ?b) ) ) ) ) ) ) ) )
          (once (agent_holds ?b8) )
          (once (agent_holds agent) )
        )
      )
    )
    (forall (?r - block)
      (and
        (preference throwAttempt
          (exists (?d - building)
            (at-end
              (and
                (in_motion ?r)
                (agent_holds ?d)
              )
            )
          )
        )
        (preference bigObjectThrownToBed
          (exists (?h ?d ?h ?c1 - (either basketball yellow_cube_block) ?d - hexagonal_bin)
            (then
              (once (not (agent_crouches ) ) )
              (once (and (touch ?b ?l4) (agent_holds ?d) ) )
              (once (and (and (and (in_motion ?r) (adjacent ?r ?r) ) (on ?d ?d) ) (or (agent_holds ?o) (in ?l1 ?s) (not (and (and (not (not (game_over ) ) ) (exists (?c1 - chair) (not (exists (?c - beachball) (adjacent ?w1 ?c1) ) ) ) ) (and (and (not (not (not (and (in_motion ?d) (same_type ?r ?l4) ) ) ) ) (not (and (on agent rug) (and (same_object ?l ?r) (in_motion ?d) ) ) ) (in_motion ?c3) ) (and (not (and (on ?d ?b) (and (not (rug_color_under ?b ?d) ) (not (in ?o ?h) ) ) ) ) (in ?l ?r) ) ) ) ) (and (not (agent_holds ?d) ) (agent_holds ?d) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count throwAttempt) (* 3 (count bigObjectThrownToBed:blue_dodgeball:red) (= 50 (external-forall-maximize (count throwAttempt:basketball:basketball) ) 100 )
    )
  )
)
(:scoring
  (* 4 (count bigObjectThrownToBed:red) (count blocksInPlace:dodgeball) )
)
)



(define (game game-id-237) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (forall (?r - dodgeball)
        (and
          (exists (?b1 - game_object)
            (forall (?o1 - desktop ?w - cube_block ?p - wall)
              (game-conserved
                (in_motion ?b)
              )
            )
          )
          (exists (?o3 - game_object)
            (exists (?r - ball)
              (exists (?t1 - (either bridge_block dodgeball key_chain) ?l1 - hexagonal_bin)
                (game-conserved
                  (same_type ?c1 ?l4)
                )
              )
            )
          )
        )
      )
    )
    (forall (?b ?d - dodgeball)
      (forall (?l - building)
        (and
          (game-conserved
            (in_motion ?d)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownFromBehindBlock
      (exists (?d - dodgeball ?g - pillow ?t2 - hexagonal_bin)
        (then
          (hold (agent_holds ?t2) )
          (hold (and (in_motion green_golfball) (open ?r) ) )
          (hold (and (>= (distance ?h ?b4) 1) (agent_holds ?t2) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (and
      (>= (* (count ballThrownFromBehindBlock:pink_dodgeball) 7 (- 2 )
          (= 10 (count-once ballThrownFromBehindBlock:red) )
          5
        )
        (- 2 )
      )
      (not
        (>= (count ballThrownFromBehindBlock:dodgeball) (* 3 (count-once-per-external-objects ballThrownFromBehindBlock:basketball:dodgeball) )
        )
      )
    )
    (>= 8 (count-once-per-objects ballThrownFromBehindBlock:cube_block:basketball) )
  )
)
(:scoring
  (count-once-per-external-objects ballThrownFromBehindBlock:purple)
)
)



(define (game game-id-238) (:domain few-objects-room-v1)
(:setup
  (exists (?f - hexagonal_bin ?d - building)
    (game-conserved
      (and
        (agent_holds ?b7)
        (and
          (in ?d ?d)
          (not
            (not
              (in_motion ?t)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectInBuilding
      (exists (?f ?h - chair)
        (then
          (once (on ?d ?f) )
          (once (and (agent_holds rug) (and (in_motion ?f) (in ?h ?f) ) ) )
          (once (agent_holds ?f) )
        )
      )
    )
    (preference ballThrownToRampToBed
      (exists (?c - bridge_block)
        (then
          (hold (in_motion ?h) )
          (once (same_object ?c ?c) )
          (once (agent_holds ?c) )
        )
      )
    )
    (forall (?l1 - dodgeball)
      (and
        (preference objectWithMatchingColor
          (exists (?r1 - teddy_bear ?b9 - drawer)
            (then
              (hold-while (agent_holds ?l1) (on ?b9 ?l1) (agent_holds ?d) (agent_holds ?b9) )
              (once (agent_holds ?b) )
              (once (in ?p ?c) )
            )
          )
        )
        (preference itemsBroken
          (exists (?o4 - (either credit_card hexagonal_bin book) ?w2 - hexagonal_bin ?t - (either dodgeball pyramid_block tall_cylindrical_block block alarm_clock))
            (then
              (once (and (= 2 10 1 (distance_side ?t front_left_corner ?d ?t)) (in ?b ?l1) ) )
              (once (not (rug_color_under ?r pink) ) )
              (hold (in ?h ?l1) )
            )
          )
        )
      )
    )
    (forall (?l2 ?b ?c4 - (either golfball pyramid_block floor))
      (and
        (preference throwAttempt
          (exists (?o - building ?b3 - hexagonal_bin)
            (at-end
              (not
                (not
                  (on ?h ?c)
                )
              )
            )
          )
        )
      )
    )
    (preference ballThrownToRug
      (exists (?w2 - ball)
        (then
          (once (adjacent agent ?w2) )
          (once (agent_holds ?g) )
          (once (> (distance room_center ?o) (distance ?w2 ?o2)) )
        )
      )
    )
  )
)
(:terminal
  (<= 15 1 )
)
(:scoring
  (count itemsBroken:pink_dodgeball)
)
)



(define (game game-id-239) (:domain many-objects-room-v1)
(:setup
  (exists (?d - cylindrical_block)
    (game-optional
      (and
        (and
          (opposite ?d ?l)
          (in ?d ?d)
          (not
            (in_motion ?d)
          )
        )
        (same_type ?d ?d)
        (in_motion ?d)
      )
    )
  )
)
(:constraints
  (and
    (preference matchingBuildingBuilt
      (exists (?bl ?c - flat_block)
        (then
          (hold-while (in ?c ?bl) (agent_holds ?l) )
          (once (and (in_motion ?c) (in_motion ?b) ) )
          (hold-while (not (in ?bl ?b) ) (exists (?d - game_object) (in ?c ?b) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once matchingBuildingBuilt:doggie_bed) (+ 15 (* 7 (external-forall-maximize (count-once-per-objects matchingBuildingBuilt:cube_block) ) )
      3
    )
  )
)
(:scoring
  (* 10 (+ 2 (+ (count matchingBuildingBuilt:beachball:basketball) (count matchingBuildingBuilt:pink) )
    )
  )
)
)



(define (game game-id-240) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (same_color ?b ?c)
  )
)
(:constraints
  (and
    (preference nonBlockPlacedInBuilding
      (exists (?b - (either cube_block pyramid_block cellphone) ?r1 - hexagonal_bin ?o2 - teddy_bear ?c4 ?d - dodgeball)
        (then
          (once (and (and (and (touch ?d ?c4) (not (agent_holds ?d) ) (not (and (on ?c4 ?d) ) ) (in_motion ?c4) ) (not (not (above ?c4 ?l) ) ) ) (in ?c4 ?d) ) )
          (once (rug_color_under ?c4 ?d) )
          (once (on ?c ?d) )
        )
      )
    )
  )
)
(:terminal
  (< (- (count-once-per-objects nonBlockPlacedInBuilding:purple) )
    (* 4 (* (* (count-measure nonBlockPlacedInBuilding:beachball) (* 6 (/ 3 (count-measure nonBlockPlacedInBuilding:dodgeball) ) )
        )
        (external-forall-maximize
          (count-once nonBlockPlacedInBuilding:pyramid_block)
        )
      )
      3
      (> 20 (count nonBlockPlacedInBuilding:dodgeball:green) )
    )
  )
)
(:scoring
  (count-once-per-external-objects nonBlockPlacedInBuilding:green)
)
)



(define (game game-id-241) (:domain medium-objects-room-v1)
(:setup
  (exists (?c6 - color ?l ?p2 ?d ?t ?r ?b - building)
    (and
      (forall (?c1 - chair)
        (exists (?b - hexagonal_bin ?d - triangular_ramp ?r - hexagonal_bin)
          (exists (?g ?l3 - hexagonal_bin)
            (not
              (game-conserved
                (and
                  (exists (?h - dodgeball ?g - hexagonal_bin)
                    (rug_color_under ?g ?tb)
                  )
                  (on agent ?l3)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToRampToBin
      (exists (?o1 - (either key_chain golfball) ?p2 ?g - bridge_block)
        (then
          (once (agent_crouches ) )
          (once (agent_holds ?p2) )
          (once (> 2 (distance ?h ?p2)) )
        )
      )
    )
    (preference itemsTurnedOff
      (exists (?b9 - doggie_bed ?b - teddy_bear ?l1 - dodgeball)
        (then
          (once (adjacent bed ?b) )
          (hold-while (agent_holds ?l1) (exists (?c5 - hexagonal_bin ?b - hexagonal_bin) (and (< 5 (distance agent ?b)) (and (game_start ) (in_motion ?b) ) ) ) )
          (hold (not (and (agent_holds ?l1) (touch ?l1 ?l1) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count itemsTurnedOff:dodgeball) 3 )
    (>= 2 (* (count-once-per-external-objects itemsTurnedOff:beachball) (* 3 6 )
      )
    )
  )
)
(:scoring
  (external-forall-maximize
    (* (count throwToRampToBin:golfball) (* (* (count-once-per-external-objects throwToRampToBin:cube_block) (count-once-per-external-objects itemsTurnedOff:yellow) )
        10
      )
    )
  )
)
)



(define (game game-id-242) (:domain medium-objects-room-v1)
(:setup
  (exists (?b - hexagonal_bin)
    (game-conserved
      (in ?b ?b)
    )
  )
)
(:constraints
  (and
    (forall (?h - hexagonal_bin)
      (and
        (preference cubeBlockInBuilding
          (then
            (once (not (and (and (and (in_motion ?b) (not (in_motion ?h) ) ) (and (same_type ?c ?h) (in_motion ?l1) ) ) (not (in_motion bed) ) ) ) )
            (hold (same_color ?h blue) )
            (once (and (not (touch ?h ?h) ) (on ?h ?d) (and (on ?l2 ?h) (not (in_motion ?b) ) (not (>= (distance agent ?d) 1) ) ) ) )
            (hold (and (in_motion ?d) (in_motion ?h) ) )
          )
        )
      )
    )
    (preference throwMovesBeachballWithoutKnockingTeddy
      (exists (?c2 - shelf)
        (then
          (hold (< (distance_side desk right ?c2) 6) )
          (once (agent_holds ?d) )
          (hold-while (and (agent_holds ?d) (or (not (agent_holds ?b) ) (and (in_motion ?p) (not (and (in_motion ?c) (adjacent bed ?b) ) ) ) ) ) (not (in ?h ?d) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (count cubeBlockInBuilding:pink) )
)
(:scoring
  (* 3 (external-forall-maximize (count cubeBlockInBuilding:dodgeball) ) )
)
)



(define (game game-id-243) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (in_motion ?d)
  )
)
(:constraints
  (and
    (preference ballThrownFromBehindBlock
      (exists (?d - block)
        (then
          (once (adjacent room_center ?d) )
          (once (in_motion ?h) )
          (hold-while (in_motion ?d) (or (and (agent_holds ?d) (in_motion ?d) ) (on ?d ?b) ) (touch ?d ?r) )
        )
      )
    )
  )
)
(:terminal
  (>= (- (external-forall-minimize (+ 3 (< 1 3 )
        )
      )
    )
    (* (count-once ballThrownFromBehindBlock:yellow) (* (* 100 1 )
        5
      )
    )
  )
)
(:scoring
  (* (count-measure ballThrownFromBehindBlock:side_table:purple) 3 50 )
)
)



(define (game game-id-244) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?c3 ?bl - red_dodgeball)
      (forall (?w2 - (either pyramid_block cube_block))
        (exists (?c ?d - (either desktop cylindrical_block))
          (forall (?ob - ball)
            (and
              (game-conserved
                (not
                  (in_motion ?b)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference itemsBroken
      (exists (?b - chair)
        (at-end
          (in_motion ?o)
        )
      )
    )
  )
)
(:terminal
  (>= (count itemsBroken:basketball) (* (count-shortest itemsBroken:beachball:basketball) 5 )
  )
)
(:scoring
  (count itemsBroken:basketball)
)
)



(define (game game-id-245) (:domain medium-objects-room-v1)
(:setup
  (forall (?s - ball ?h - (either cube_block pen) ?tb - ball ?d - (either cube_block pencil))
    (exists (?h - hexagonal_bin)
      (exists (?ob - (either lamp alarm_clock bridge_block))
        (game-conserved
          (and
            (not
              (and
                (agent_holds ?d)
                (on ?ob ?h)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?g - chair ?b10 - doggie_bed)
      (and
        (preference blockIncorrectlyPicked
          (then
            (once (same_type ?c ?b10) )
            (once (not (adjacent ?b10 ?t) ) )
            (once (and (not (agent_holds ?o) ) (adjacent ?h ?b10) ) )
          )
        )
        (preference throwAttempt
          (exists (?r - hexagonal_bin)
            (then
              (hold (>= 1 2) )
              (once (touch ?r ?r) )
              (hold-while (forall (?h - dodgeball ?o2 - cube_block ?h - doggie_bed) (agent_holds ?h) ) (not (in_motion ?h) ) )
            )
          )
        )
        (preference dodgeballsInPlace
          (exists (?b - ball)
            (then
              (once (in ?b ?o) )
              (once (or (not (not (not (< (distance room_center ?b8) (distance ?b ?b)) ) ) ) (< (distance_side ?w1 front ?b) 9) ) )
              (once (not (and (not (not (agent_holds ?b) ) ) (not (equal_z_position agent ?b) ) ) ) )
            )
          )
        )
        (preference cubeBlockFromBedToShelf
          (exists (?h - beachball ?h - block)
            (at-end
              (same_color ?b10 ?h)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (total-time) )
)
(:scoring
  (count throwAttempt:dodgeball)
)
)



(define (game game-id-246) (:domain few-objects-room-v1)
(:setup
  (forall (?o2 - hexagonal_bin)
    (forall (?s - hexagonal_bin ?h - teddy_bear)
      (exists (?o5 - wall)
        (game-conserved
          (not
            (and
              (or
                (< 9 1)
                (and
                  (in_motion ?h)
                  (and
                    (agent_holds ?o2)
                  )
                )
              )
              (adjacent agent ?h)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference matchingBuildingBuilt
      (exists (?b3 - game_object ?b2 - hexagonal_bin)
        (then
          (once (not (in_motion ?b2) ) )
          (hold (adjacent_side ?b1 right ?b) )
          (hold (touch ?b ?b2) )
        )
      )
    )
    (preference ballThrownToChair
      (exists (?b9 - hexagonal_bin)
        (then
          (once (and (agent_holds top_shelf) (on ?b9 top_drawer) ) )
          (hold (in_motion ?b9) )
        )
      )
    )
  )
)
(:terminal
  (<= 4 6 )
)
(:scoring
  (count-once-per-external-objects matchingBuildingBuilt:golfball)
)
)



(define (game game-id-247) (:domain few-objects-room-v1)
(:setup
  (exists (?l1 ?f - yellow_cube_block ?b - (either hexagonal_bin laptop))
    (and
      (game-conserved
        (touch ?d ?b3)
      )
    )
  )
)
(:constraints
  (and
    (forall (?t1 - curved_wooden_ramp ?c - dodgeball ?t - dodgeball)
      (and
        (preference blockKnockedFromBuildingInBin
          (exists (?l2 - color ?r - hexagonal_bin)
            (then
              (once (agent_holds ?h) )
              (hold (in_motion ?r) )
              (hold (in_motion ?t) )
            )
          )
        )
      )
    )
    (forall (?p - hexagonal_bin ?r2 - block ?l - (either hexagonal_bin yellow game_object))
      (and
        (preference throwToBin
          (exists (?h - hexagonal_bin ?o - ball)
            (then
              (once (exists (?d - game_object) (agent_holds ?b) ) )
              (once (on ?b ?o) )
              (once (and (and (not (and (not (not (in_motion ?l) ) ) (opposite ?l ?d) ) ) (not (on ?o ?c) ) ) (in_motion ?o) ) )
            )
          )
        )
        (preference cubeThrownToBin
          (exists (?b - hexagonal_bin)
            (then
              (once (in_motion ?t) )
              (once (and (and (agent_holds ?b) (and (>= 2 (distance agent ?b)) (in_motion ?o) (adjacent ?b ?s) ) ) (in ?l ?b) ) )
              (once (agent_holds ?p) )
            )
          )
        )
      )
    )
    (forall (?o5 - hexagonal_bin)
      (and
        (preference gameBlockFound
          (exists (?h - wall)
            (then
              (once (not (on ?o5 ?h) ) )
              (once (in_motion ?h) )
              (once (in_motion ?b) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (total-time) )
)
(:scoring
  (+ (= (= (+ 3 10 )
        (count-once-per-external-objects throwToBin)
      )
      (count-once-per-objects cubeThrownToBin:golfball)
    )
    2
    (* (count-once-per-objects blockKnockedFromBuildingInBin:book) (external-forall-maximize (count-increasing-measure gameBlockFound:dodgeball) ) (count blockKnockedFromBuildingInBin:yellow) )
  )
)
)



(define (game game-id-248) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?b1 - (either golfball))
      (and
        (game-conserved
          (agent_holds ?b1)
        )
        (game-conserved
          (not
            (not
              (or
                (and
                  (on ?h ?b1)
                  (agent_holds ?b1)
                )
                (in ?b agent)
              )
            )
          )
        )
        (forall (?h - triangular_ramp)
          (game-conserved
            (not
              (toggled_on ?h)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwMovesBeachballWithoutKnockingTeddy
      (exists (?c - hexagonal_bin ?c - hexagonal_bin)
        (then
          (hold (and (in_motion ?c) (in ?c ?o) ) )
          (hold-while (not (agent_holds ?c) ) (not (adjacent agent ?d) ) )
        )
      )
    )
    (preference cubeBlockFromBedToShelf
      (exists (?l4 - hexagonal_bin)
        (then
          (once (< 1 (distance bed ?r)) )
          (once (in_motion ?d) )
          (once (same_color ?o blue) )
        )
      )
    )
  )
)
(:terminal
  (> 40 (* (* 5 2 )
      5
    )
  )
)
(:scoring
  (= (+ (count cubeBlockFromBedToShelf:basketball) (count throwMovesBeachballWithoutKnockingTeddy:green:block) )
    (* (count-once-per-objects throwMovesBeachballWithoutKnockingTeddy:golfball) (count cubeBlockFromBedToShelf:blue_dodgeball:pink) )
  )
)
)



(define (game game-id-249) (:domain few-objects-room-v1)
(:setup
  (forall (?h - teddy_bear)
    (game-conserved
      (agent_holds ?h)
    )
  )
)
(:constraints
  (and
    (preference ballThrownMissesEverything
      (exists (?o - curved_wooden_ramp)
        (then
          (once (not (and (not (agent_holds ?o) ) (or (not (not (touch ?o agent) ) ) (in_motion ?o) ) ) ) )
          (once (and (not (in_motion ?d) ) (agent_holds ?o) ) )
          (once (equal_z_position ?o ?b) )
        )
      )
    )
    (preference ballKnocksTeddy
      (exists (?b10 - hexagonal_bin)
        (then
          (hold (not (on ?c ?h) ) )
        )
      )
    )
  )
)
(:terminal
  (> (count ballThrownMissesEverything:dodgeball:golfball) (total-score) )
)
(:scoring
  (* (external-forall-maximize (external-forall-maximize (* 2 (count ballKnocksTeddy:top_drawer:golfball) )
      )
    )
    6
  )
)
)



(define (game game-id-250) (:domain medium-objects-room-v1)
(:setup
  (forall (?h - dodgeball)
    (and
      (and
        (not
          (and
            (game-conserved
              (game_start )
            )
          )
        )
        (and
          (game-conserved
            (and
              (and
                (< 2 (distance_side agent ?h ?b))
                (not
                  (agent_holds ?h)
                )
                (on ?o1 ?h)
              )
              (in ?b ?h)
            )
          )
        )
      )
      (exists (?c - dodgeball ?x - (either desktop rug))
        (and
          (or
            (and
              (game-conserved
                (or
                  (touch ?h ?l2)
                  (not
                    (not
                      (and
                        (agent_holds ?b)
                        (not
                          (on ?h ?o)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
          (exists (?l - (either dodgeball ball alarm_clock) ?l - teddy_bear)
            (game-conserved
              (rug_color_under ?x ?c)
            )
          )
          (and
            (and
              (and
                (game-conserved
                  (agent_holds ?h)
                )
              )
            )
          )
        )
      )
      (game-conserved
        (on ?c1 ?c)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownIntoTarget
      (exists (?b - cube_block ?t - (either pyramid_block pillow) ?b1 - hexagonal_bin ?b - curved_wooden_ramp)
        (then
          (hold-while (not (is_setup_object top_shelf) ) (agent_holds ?b) (agent_holds ?d) (agent_crouches ) )
          (hold (not (exists (?d ?r ?b5 ?b ?c6 - ball ?h - hexagonal_bin ?l1 - cube_block) (adjacent agent ?b) ) ) )
          (hold (and (or (agent_holds pink_dodgeball) (on ?b ?r) (agent_holds ?b9) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (total-score) )
)
(:scoring
  (count-once-per-objects ballThrownIntoTarget:red)
)
)



(define (game game-id-251) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?b1 - (either game_object rug blue_cube_block) ?l2 - dodgeball)
      (exists (?h - (either yellow lamp))
        (forall (?b10 - drawer ?db - pillow ?c5 - block)
          (and
            (exists (?bl - dodgeball)
              (game-conserved
                (in ?bl ?l2)
              )
            )
            (and
              (exists (?b - doggie_bed)
                (forall (?ob - cube_block ?h - (either wall bed))
                  (game-conserved
                    (not
                      (in_motion bed)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
    (exists (?b9 ?b - cube_block)
      (forall (?s - dodgeball)
        (forall (?d2 - game_object ?b6 - curved_wooden_ramp)
          (game-conserved
            (adjacent ?d ?h)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference otherObjectsOnDeskShelf
      (exists (?r2 - blue_cube_block ?o2 - teddy_bear)
        (at-end
          (or
            (and
              (in_motion ?o2)
              (agent_holds ?o)
            )
            (in_motion ?o2)
          )
        )
      )
    )
    (forall (?s - hexagonal_bin ?tb - cube_block)
      (and
        (preference dodgeballFromDeskToTarget
          (exists (?b - chair)
            (at-end
              (and
                (not
                  (in ?tb ?b)
                )
                (agent_holds ?tb)
                (in ?b ?tb)
                (forall (?b1 - cube_block)
                  (in_motion ?o)
                )
                (in_motion ?tb)
                (agent_holds ?o)
                (in_motion ?b)
                (and
                  (in_motion ?b4)
                  (not
                    (not
                      (same_type ?tb ?tb)
                    )
                  )
                )
                (in_motion ?b)
                (not
                  (not
                    (agent_holds ?b)
                  )
                )
                (in_motion ?l2)
                (not
                  (agent_holds ?h)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (total-score) )
)
(:scoring
  (+ (* 5 (external-forall-maximize (+ (count dodgeballFromDeskToTarget:yellow) (- (count-once-per-objects dodgeballFromDeskToTarget:beachball) )
        )
      )
    )
    (count dodgeballFromDeskToTarget:tall_cylindrical_block)
  )
)
)



(define (game game-id-252) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (same_type top_shelf ?l3)
  )
)
(:constraints
  (and
    (forall (?r - hexagonal_bin ?b - dodgeball)
      (and
        (preference golfballUnderBridgeWithoutTouchingBlock
          (then
            (once (in_motion ?h) )
            (hold (not (and (in_motion ?b) (and (adjacent desk ?b) (< 1 (distance_side agent front ?b front)) ) ) ) )
            (once (in ?o1 ?d) )
          )
        )
      )
    )
    (preference blockPickedUp
      (exists (?b - dodgeball)
        (then
          (once (not (open ?b) ) )
          (once (and (and (not (not (adjacent bed ?b) ) ) (opposite ?b ?c) ) (opposite ?b ?c) (touch top_shelf ?b) ) )
          (once (object_orientation ?p upright) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once golfballUnderBridgeWithoutTouchingBlock:dodgeball) (+ 9 1 )
  )
)
(:scoring
  (count golfballUnderBridgeWithoutTouchingBlock:beachball)
)
)



(define (game game-id-253) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds ?l)
  )
)
(:constraints
  (and
    (preference pillowMovedToRoomCenter
      (exists (?o2 - hexagonal_bin)
        (at-end
          (in pink_dodgeball ?o2)
        )
      )
    )
  )
)
(:terminal
  (< (+ (* (= (count pillowMovedToRoomCenter:blue_pyramid_block:purple) )
        (count-shortest pillowMovedToRoomCenter:golfball)
      )
      (* 3 10 )
    )
    1
  )
)
(:scoring
  (* (count pillowMovedToRoomCenter:green) (- 1 )
  )
)
)



(define (game game-id-254) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (in_motion floor)
  )
)
(:constraints
  (and
    (forall (?w - ball)
      (and
        (preference ballThrowAttempt
          (exists (?b1 - ball ?b - cube_block)
            (at-end
              (and
                (in_motion ?b6)
                (not
                  (in ?w rug)
                )
              )
            )
          )
        )
        (preference cubeBlockThrowAttempt
          (then
            (once (exists (?b3 - cube_block ?b2 - red_dodgeball) (in_motion ?b2) ) )
            (hold (and (<= 1 (distance ?w agent)) (equal_x_position ?r ?d) ) )
            (hold (< (distance room_center ?w) 1) )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (* (count-once-per-objects cubeBlockThrowAttempt:dodgeball) (count cubeBlockThrowAttempt:dodgeball) )
  )
)
(:scoring
  (+ (+ 2 (* (count-once-per-objects cubeBlockThrowAttempt:cube_block) 15 10 2 5 6 )
    )
    (* (* (count-once-per-objects ballThrowAttempt) 2 )
      (+ 9 3 20 )
    )
  )
)
)



(define (game game-id-255) (:domain few-objects-room-v1)
(:setup
  (exists (?g - (either desktop book))
    (forall (?b - (either pillow pillow golfball))
      (and
        (and
          (forall (?c1 - hexagonal_bin)
            (game-optional
              (broken ?b)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?h - cube_block)
        (at-end
          (and
            (agent_holds ?h)
            (agent_holds ?h)
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-same-positions throwAttempt:golfball) (total-time) )
)
(:scoring
  (* 2 (- (count-measure throwAttempt:red) )
    (+ (* 40 (* (- (count-same-positions throwAttempt:pink) )
          15
        )
      )
      (* (count-once throwAttempt:blue_pyramid_block) (+ 300 10 (* 3 (count-once-per-objects throwAttempt:golfball:alarm_clock) )
          (* (/ (* 5 (< (* (count-once-per-objects throwAttempt:beachball) 300 )
                  (count-once-per-objects throwAttempt:red)
                )
              )
              10
            )
            5
          )
          (count throwAttempt:dodgeball:dodgeball)
          (* (count-once-per-objects throwAttempt:dodgeball) (- (count throwAttempt:pink_dodgeball:pink_dodgeball) )
          )
          (+ (count throwAttempt:green:basketball) 2 )
          (* (* (* (count-once throwAttempt:green) (count-once-per-objects throwAttempt:dodgeball) )
              (count throwAttempt:green)
            )
            (* (- 4 )
              5
              2
              (count-once-per-objects throwAttempt:triangle_block)
              2
              (= (* (count throwAttempt:red) 5 )
                (count throwAttempt:pink:dodgeball:cylindrical_block)
                10
              )
              2
            )
          )
          (count-once-per-external-objects throwAttempt:dodgeball:pink)
        )
      )
    )
    20
  )
)
)



(define (game game-id-256) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (or
      (in_motion ?b)
      (in ?o4 ?s)
      (adjacent door ?b)
    )
  )
)
(:constraints
  (and
    (preference throwObjectToBin
      (exists (?r - (either wall pyramid_block) ?d - hexagonal_bin)
        (then
          (once (not (in ?o1 ?b) ) )
          (once (and (agent_holds desk) (in agent ?d) ) )
        )
      )
    )
    (forall (?w2 - cube_block ?b1 - dodgeball)
      (and
        (preference itemsHidingScreens
          (exists (?b - hexagonal_bin)
            (at-end
              (in floor ?b1)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 1 8 )
    (not
      (>= 18 (total-time) )
    )
    (>= (count-increasing-measure itemsHidingScreens:dodgeball) (count-measure throwObjectToBin:basketball:yellow) )
  )
)
(:scoring
  (count itemsHidingScreens:pink)
)
)



(define (game game-id-257) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-conserved
      (in_motion ?d)
    )
  )
)
(:constraints
  (and
    (forall (?o3 - hexagonal_bin)
      (and
        (preference woodenBlockMovedFromRugToDesk
          (exists (?d - (either triangle_block dodgeball) ?t2 ?h ?d1 ?c1 ?b ?b - dodgeball ?b2 - (either pyramid_block cube_block cellphone))
            (at-end
              (agent_holds ?d)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< (- (* 10 3 )
    )
    (total-score)
  )
)
(:scoring
  (count-shortest woodenBlockMovedFromRugToDesk:red_pyramid_block)
)
)



(define (game game-id-258) (:domain many-objects-room-v1)
(:setup
  (exists (?o - (either pyramid_block hexagonal_bin pencil) ?bl - game_object)
    (game-conserved
      (in_motion ?b)
    )
  )
)
(:constraints
  (and
    (forall (?c - ball)
      (and
        (preference bookOnDeskShelf
          (exists (?h - hexagonal_bin ?c2 - dodgeball ?r - doggie_bed)
            (then
              (once (equal_z_position agent ?d) )
              (once (same_type ?c drawer) )
              (once (not (> (distance room_center ?c) 4) ) )
              (once (in_motion ?o1) )
            )
          )
        )
      )
    )
    (preference pyramidBlockAtopTowerAtEnd
      (exists (?d - hexagonal_bin)
        (then
          (once (or (in ?b ?d) (not (and (and (in ?t ?d) (in ?c pink_dodgeball) ) (not (rug_color_under ?t pink) ) ) ) ) )
          (once (agent_holds ?d) )
          (hold (not (in ?d ?h) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count pyramidBlockAtopTowerAtEnd:dodgeball) (total-score) )
)
(:scoring
  (* (count-once-per-objects pyramidBlockAtopTowerAtEnd:green:blue_pyramid_block) 5 )
)
)



(define (game game-id-259) (:domain many-objects-room-v1)
(:setup
  (forall (?p - hexagonal_bin)
    (forall (?w - building ?d1 - (either key_chain dodgeball doggie_bed))
      (exists (?h - building ?h - wall)
        (game-optional
          (on bed ?r)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference thrownBallHitsBlock
      (exists (?b - dodgeball ?o - hexagonal_bin)
        (then
          (hold (or (agent_holds ?b) (in_motion ?h) ) )
          (hold-while (on ?w ?l) (not (and (and (not (and (object_orientation ?o upright) (in ?o ?o) ) ) (exists (?h - dodgeball ?o ?o - color ?b - game_object) (in_motion ?o) ) (on ?o ?o) ) (object_orientation ?o upright) (in ?o ?r) ) ) (not (and (agent_holds ?h) (< 1 (distance ?o ?o)) ) ) )
          (hold (on ?c ?o) )
        )
      )
    )
    (forall (?l2 - dodgeball)
      (and
        (preference pillowThrownToDoggieBed
          (exists (?c - game_object)
            (then
              (once (not (> (distance ?b1 ?d) 1) ) )
              (hold (in ?l2 ?l2) )
              (hold (exists (?w2 - dodgeball ?r2 - hexagonal_bin) (toggled_on ?l2) ) )
            )
          )
        )
        (preference blueObjectMovedToRoomCenter
          (exists (?b - hexagonal_bin)
            (then
              (once (in_motion ?b) )
              (hold (in_motion ?l2) )
              (once (same_color ?b ?c) )
            )
          )
        )
        (preference nonBlockPlacedInBuilding
          (exists (?w1 - dodgeball)
            (then
              (hold (game_over ) )
              (once (in ?o ?r) )
              (once (in_motion ?h) )
            )
          )
        )
      )
    )
    (preference ballThrownToBin
      (exists (?f - (either yellow_cube_block lamp pyramid_block) ?h - (either pyramid_block laptop))
        (then
          (hold (on ?h ?d) )
          (once (not (in_motion ?h) ) )
          (hold (in_motion ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= 15 (total-score) )
)
(:scoring
  (* (+ (count-once-per-objects ballThrownToBin:dodgeball:blue_dodgeball) (count thrownBallHitsBlock:orange:orange:hexagonal_bin) )
    9
  )
)
)



(define (game game-id-260) (:domain many-objects-room-v1)
(:setup
  (exists (?d - hexagonal_bin)
    (game-conserved
      (toggled_on ?d)
    )
  )
)
(:constraints
  (and
    (preference ballToBinFromBed
      (exists (?b - dodgeball ?l - dodgeball)
        (then
          (once (not (exists (?t2 - game_object) (game_over ) ) ) )
          (once (not (broken ?d) ) )
        )
      )
    )
  )
)
(:terminal
  (> (+ (count ballToBinFromBed:dodgeball:yellow) (* (count-once-per-objects ballToBinFromBed:green) 3 (count-once-per-objects ballToBinFromBed:beachball) (count ballToBinFromBed:pink_dodgeball:beachball) (count ballToBinFromBed:golfball) (- (- (count ballToBinFromBed:book) )
        )
      )
    )
    5
  )
)
(:scoring
  (count ballToBinFromBed:pink)
)
)



(define (game game-id-261) (:domain few-objects-room-v1)
(:setup
  (exists (?ob - dodgeball)
    (game-conserved
      (or
        (and
          (and
            (and
              (on ?h ?ob)
              (not
                (< 6 (distance ?h agent))
              )
              (on ?ob ?ob)
              (and
                (equal_z_position agent ?ob)
                (exists (?w - cube_block)
                  (in_motion ?g)
                )
                (and
                  (agent_holds ?ob)
                  (not
                    (agent_holds ?ob)
                  )
                )
                (on ?ob ?b)
              )
            )
            (< 2 1)
          )
          (and
            (not
              (agent_holds ?ob)
            )
            (adjacent agent ?ob)
            (agent_holds ?b)
          )
          (or
            (agent_holds ?ob)
            (< 4 (distance ?ob ?ob))
          )
        )
        (agent_holds ?ob)
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallFromOtherBallToBin
      (exists (?h - cube_block ?f - ball)
        (at-end
          (and
            (forall (?r2 ?c - block)
              (equal_z_position room_center ?c)
            )
            (not
              (not
                (touch ?b ?f)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* 2 4 10 )
    (* (count throwBallFromOtherBallToBin:beachball) (+ 15 (* (count-once-per-objects throwBallFromOtherBallToBin:red) (* 4 (+ (* (count-once-per-external-objects throwBallFromOtherBallToBin:cube_block) (count-once-per-objects throwBallFromOtherBallToBin:basketball) )
              (count throwBallFromOtherBallToBin:blue_dodgeball)
            )
          )
        )
      )
    )
  )
)
(:scoring
  (- 2 )
)
)



(define (game game-id-262) (:domain few-objects-room-v1)
(:setup
  (exists (?l1 - flat_block ?c3 - hexagonal_bin ?ob - curved_wooden_ramp)
    (game-conserved
      (on ?ob ?ob)
    )
  )
)
(:constraints
  (and
    (preference objectInBuilding
      (exists (?h - golfball)
        (at-end
          (in_motion ?h)
        )
      )
    )
    (preference itemsBroken
      (exists (?b - (either hexagonal_bin laptop hexagonal_bin dodgeball) ?c5 - doggie_bed)
        (then
          (once (and (not (agent_holds ?c5) ) (on ?g ?h) ) )
          (once (in_motion ?h) )
          (hold (not (agent_holds ?c5) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (or
        (>= 5 (- (count itemsBroken:dodgeball) )
        )
      )
    )
    (>= (* 8 (count-once-per-objects objectInBuilding:basketball:pink) )
      (total-score)
    )
  )
)
(:scoring
  (+ (count itemsBroken:orange) (count-once-per-objects objectInBuilding:yellow) )
)
)



(define (game game-id-263) (:domain many-objects-room-v1)
(:setup
  (forall (?o2 ?c2 ?d ?p - dodgeball)
    (not
      (game-optional
        (not
          (not
            (open ?c2)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToRampToBin
      (exists (?b - beachball ?h - pyramid_block)
        (then
          (hold (in_motion ?o) )
          (hold (on ?h ?b1) )
          (once (and (not (in ?h ?b2) ) (not (< (distance ?h desk) (distance ?h agent)) ) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= 9 (total-score) )
  )
)
(:scoring
  (* 5 (* (count-once throwToRampToBin:cylindrical_block) (= (+ (count-overlapping throwToRampToBin:beachball) 2 )
        (count throwToRampToBin:pink_dodgeball)
      )
      5
    )
  )
)
)



(define (game game-id-264) (:domain medium-objects-room-v1)
(:setup
  (or
    (exists (?c - pyramid_block ?o1 - hexagonal_bin)
      (game-conserved
        (agent_holds ?o1)
      )
    )
  )
)
(:constraints
  (and
    (forall (?b2 - block)
      (and
        (preference blockKnockedFromBuildingInBin
          (exists (?d - hexagonal_bin)
            (at-end
              (not
                (agent_holds ?b)
              )
            )
          )
        )
        (preference throwAttemptFromDoor
          (exists (?d - (either cube_block doggie_bed book) ?d - game_object ?d - building ?d - flat_block ?o - hexagonal_bin)
            (then
              (once (or (touch ?c3 bed) (and (not (is_setup_object ?s) ) (agent_holds ?b2) (adjacent agent ?d) ) ) )
              (once (in_motion ?o) )
              (hold-while (on ?b2 ?b2) (in ?b2 ?d) (in ?o ?o) (and (not (agent_holds ?b2) ) (not (not (not (and (in ?r ?b2) (in_motion ?b2) ) ) ) ) ) )
            )
          )
        )
      )
    )
    (preference watchOnShelf
      (exists (?f - hexagonal_bin)
        (then
          (once (agent_holds ?l) )
          (hold (and (not (in ?f ?f) ) (not (and (and (and (and (same_color ?d brown) (in ?d top_drawer) ) (not (in ?b ?f) ) ) (and (agent_holds ?f) (rug_color_under ?o2 brown) (on ?o3 ?d) ) ) (and (and (in_motion ?f) (in_motion ?f) ) (in_motion ?f) ) ) ) (in_motion bed) ) )
          (once (< (distance agent ?f) (distance_side ?b1 front ?f)) )
        )
      )
    )
    (preference throwToBinFromDistance
      (exists (?b - hexagonal_bin)
        (at-end
          (agent_holds ?b)
        )
      )
    )
  )
)
(:terminal
  (>= (count throwAttemptFromDoor:basketball) 1 )
)
(:scoring
  (count throwToBinFromDistance:hexagonal_bin)
)
)



(define (game game-id-265) (:domain few-objects-room-v1)
(:setup
  (exists (?b3 - game_object)
    (game-conserved
      (in ?b ?b3)
    )
  )
)
(:constraints
  (and
    (preference itemsTurnedOff
      (exists (?s - (either cube_block book))
        (then
          (hold-while (and (exists (?o3 - color) (in ?s ?s) ) (agent_holds ?r2) ) (< 1 (distance ?w1 ?s)) (exists (?p3 - cube_block) (and (agent_holds ?s) (not (same_type ?b blinds) ) ) ) )
          (hold (not (and (in_motion ?r) (agent_holds ?s) ) ) )
          (hold (agent_holds ?h) )
        )
      )
    )
    (forall (?h - building ?h - game_object)
      (and
        (preference cubeBlockFromBedToShelf
          (exists (?b5 - desktop)
            (then
              (once (not (and (not (not (on ?h ?o1) ) ) (in_motion ?d) ) ) )
              (once (in_motion ?l) )
              (once (adjacent ?b5 ?b5) )
            )
          )
        )
      )
    )
    (preference gameObjectToBin
      (exists (?b - book)
        (then
          (once (and (agent_holds ?b) (broken ?b) ) )
          (hold (in ?b desk) )
          (once (agent_holds bed) )
          (hold (not (in_motion agent) ) )
          (once (and (and (in_motion ?b) (and (adjacent_side room_center front ?b) (equal_z_position south_wall ?b) ) ) (not (and (not (in_motion ?b) ) (and (not (in_motion ?b) ) (exists (?h - (either desktop hexagonal_bin) ?c - teddy_bear) (agent_holds ?c) ) (and (agent_holds ?b) (adjacent_side ?c ?b bed) (and (and (in_motion agent) (agent_crouches ) (adjacent room_center ?b) ) (in_motion bottom_shelf) ) (touch ?l1 ?b) ) ) ) ) ) )
        )
      )
    )
    (preference smallItemsInPlace
      (at-end
        (object_orientation ?b upright)
      )
    )
  )
)
(:terminal
  (not
    (not
      (or
        (>= (count-once-per-objects cubeBlockFromBedToShelf:block) (count-once-per-objects gameObjectToBin:purple) )
        (>= (count cubeBlockFromBedToShelf:basketball:pink) (count-once-per-objects itemsTurnedOff:brown) )
      )
    )
  )
)
(:scoring
  (* 5 (* 6 3 )
    0
  )
)
)



(define (game game-id-266) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - ball)
      (or
        (game-optional
          (agent_holds ?d)
        )
        (game-conserved
          (in ?g ?c)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwObjectToBin
      (exists (?c - game_object)
        (then
          (once (agent_holds ?h) )
          (once (< 2 7) )
          (once (in ?c ?c) )
        )
      )
    )
  )
)
(:terminal
  (>= 5 6 )
)
(:scoring
  (count-overlapping throwObjectToBin:dodgeball)
)
)



(define (game game-id-267) (:domain medium-objects-room-v1)
(:setup
  (exists (?d - hexagonal_bin)
    (and
      (game-conserved
        (in_motion ?d)
      )
      (exists (?c5 - hexagonal_bin)
        (and
          (game-conserved
            (and
              (and
                (and
                  (in_motion ?b)
                )
                (not
                  (in ?c5 ?b)
                )
              )
              (in_motion ?b)
            )
          )
          (game-optional
            (agent_holds ?d)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference failedThrowAttempt
      (exists (?h - (either cube_block laptop cylindrical_block dodgeball) ?d - hexagonal_bin)
        (then
          (once (not (and (not (in ?b ?d) ) (in_motion ?d) (in ?b ?d) ) ) )
          (once-measure (in_motion ?d) (distance desk ?l1) )
          (once (in_motion ?d) )
        )
      )
    )
    (preference itemsHidingScreens
      (exists (?c ?s ?c3 - curved_wooden_ramp)
        (at-end
          (and
            (= 7 (distance ?w2 ?o))
            (on ?o ?d)
          )
        )
      )
    )
    (preference ballRolledOnRampToRug
      (exists (?t1 - dodgeball ?h - (either dodgeball desktop))
        (then
          (once (not (on ?h ?h) ) )
          (once (not (and (agent_holds desk) (in ?h ?ob) ) ) )
          (hold (in_motion ?o) )
        )
      )
    )
  )
)
(:terminal
  (>= (count itemsHidingScreens:red) 9 )
)
(:scoring
  (count-once-per-objects failedThrowAttempt:basketball:basketball)
)
)



(define (game game-id-268) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?d - dodgeball ?b8 - cube_block)
      (game-conserved
        (in_motion ?b8)
      )
    )
    (game-conserved
      (game_over )
    )
    (and
      (game-optional
        (in_motion ?d)
      )
    )
  )
)
(:constraints
  (and
    (preference objectToBinOnFirstTry
      (exists (?w - pillow)
        (then
          (once (not (and (above ?l ?o) (on ?w ?w) ) ) )
          (once (in_motion ?d2) )
          (once (faces ?h ?h) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* (* 15 (* 3 (count objectToBinOnFirstTry:pink) )
        )
        (+ 3 (+ (+ (count-once-per-objects objectToBinOnFirstTry:red_pyramid_block) 3 )
            7
          )
        )
      )
      (* (* 2 )
        50
      )
    )
    (>= 4 6 )
  )
)
(:scoring
  (external-forall-maximize
    (count objectToBinOnFirstTry:hexagonal_bin)
  )
)
)



(define (game game-id-269) (:domain many-objects-room-v1)
(:setup
  (exists (?s - dodgeball)
    (game-conserved
      (agent_holds ?b)
    )
  )
)
(:constraints
  (and
    (preference ballThrownToChair
      (exists (?h - hexagonal_bin ?b2 - cube_block)
        (at-end
          (in_motion ?d)
        )
      )
    )
    (forall (?d - (either wall cube_block) ?o - chair ?b6 ?d2 - triangular_ramp)
      (and
        (preference ballThrownToWallToAgent
          (exists (?b1 - curved_wooden_ramp)
            (at-end
              (not
                (and
                  (and
                    (adjacent agent ?g)
                    (< 1 (distance room_center ?b1))
                  )
                  (opposite ?o ?b)
                  (not
                    (in_motion ?d2)
                  )
                )
              )
            )
          )
        )
        (preference objectMoved
          (exists (?c - curved_wooden_ramp ?o1 - doggie_bed)
            (then
              (hold (in ?h ?o1) )
              (once-measure (on ?d ?b6) (x_position ?d2) )
              (once (in_motion ?b6) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (and
      (>= (* 10 10 )
        15
      )
      (>= 10 (+ (* (+ 5 (count objectMoved:basketball) )
            (+ 10 (count-once-per-objects objectMoved:basketball) )
          )
          (* (external-forall-minimize (count ballThrownToChair:cube_block:block) ) (+ (* (count-increasing-measure ballThrownToWallToAgent:orange) 8 )
              (* (+ (count-once-per-objects objectMoved:dodgeball) (count ballThrownToWallToAgent:red_pyramid_block) (- (count-once objectMoved:golfball) (count-once-per-external-objects ballThrownToWallToAgent:blue_dodgeball) ) )
                (* 5 3 )
              )
              10
            )
            5
            (+ 3 (count ballThrownToChair:dodgeball:blue_pyramid_block) )
            (count-once-per-external-objects ballThrownToChair:basketball)
            (count objectMoved:pink:yellow_cube_block:yellow)
            (+ (external-forall-minimize (+ 20 (count ballThrownToWallToAgent:pink_dodgeball:green) )
              )
              (count-once-per-objects objectMoved:green)
            )
            2
            5
          )
        )
      )
      (< (count-once-per-external-objects ballThrownToWallToAgent:basketball) 3 )
    )
  )
)
(:scoring
  (count-once-per-objects objectMoved:yellow)
)
)



(define (game game-id-270) (:domain few-objects-room-v1)
(:setup
  (forall (?b8 - hexagonal_bin)
    (and
      (exists (?b - building)
        (game-conserved
          (agent_holds ?b8)
        )
      )
      (game-conserved
        (in_motion ?d)
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballFromDeskToTarget
      (exists (?o2 - chair)
        (then
          (hold (between ?o2 agent ?o2) )
          (once (touch ?o2 ?c) )
          (hold-while (agent_holds ?b) (above ?o ?b2) (rug_color_under ?o2 ?o2) (object_orientation ?o upright) )
          (hold (in_motion ?d) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (count dodgeballFromDeskToTarget:green) (total-time) )
    (or
      (or
        (>= (total-time) (total-time) )
        (>= (total-time) (count-measure dodgeballFromDeskToTarget:basketball) )
        (> 5 (- 3 )
        )
      )
      (>= (count dodgeballFromDeskToTarget:tall_cylindrical_block) (count-measure dodgeballFromDeskToTarget:block) )
    )
  )
)
(:scoring
  (count dodgeballFromDeskToTarget:dodgeball)
)
)



(define (game game-id-271) (:domain many-objects-room-v1)
(:setup
  (exists (?t - building)
    (game-conserved
      (agent_holds ?g)
    )
  )
)
(:constraints
  (and
    (forall (?o4 - pillow ?l - drawer)
      (and
        (preference ballRolledOnRampToRug
          (exists (?h - green_triangular_ramp)
            (then
              (once (adjacent room_center ?l) )
              (once (not (and (or (equal_z_position agent ?d) (agent_holds ?b10) ) (not (and (and (and (< 7 (distance room_center ?g)) (not (not (not (agent_holds ?l) ) ) ) (and (agent_holds ?d) (< 1 10) ) ) (in_motion ?l) (and (adjacent agent ?h) (and (and (not (agent_holds ?o) ) (is_setup_object ?l2) ) (or (in_motion ?h) (and (in ?h ?h) (< 1 (distance desk ?h)) (not (touch ?b1 agent) ) ) (and (agent_holds ?l) (not (forall (?h - (either basketball golfball) ?b - hexagonal_bin) (on ?l ?b) ) ) ) ) ) ) (not (agent_holds ?h) ) ) (in ?h ?h) ) ) ) ) )
              (once (not (and (not (in ?l ?h) ) (and (same_object ?h ?b) (toggled_on ?d) (and (on ?l ?c) (in_motion ?c2) (object_orientation ?h ?l) ) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> 2 (total-score) )
)
(:scoring
  (count-once ballRolledOnRampToRug:beachball)
)
)



(define (game game-id-272) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?b1 - cube_block)
      (and
        (exists (?b ?h - ball)
          (and
            (game-conserved
              (and
                (not
                  (agent_holds ?d)
                )
                (or
                  (and
                    (on ?g ?bl)
                    (touch ?b ?b1)
                  )
                  (not
                    (adjacent ?h ?o)
                  )
                )
                (same_object ?b ?h)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?l - doggie_bed ?o5 - book)
        (then
          (hold-while (adjacent ?o5 ?r) (adjacent ?o5 ?f) )
          (hold (same_color desk ?o5) )
          (hold (not (same_object ?h ?o5) ) )
        )
      )
    )
  )
)
(:terminal
  (> 5 3 )
)
(:scoring
  (count-once-per-objects throwAttempt:pink_dodgeball:golfball)
)
)



(define (game game-id-273) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (forall (?h - dodgeball)
        (game-conserved
          (and
            (and
              (on ?h ?h)
              (broken ?c3)
            )
            (not
              (agent_holds ?h)
            )
            (or
              (not
                (touch ?h ?b2)
              )
              (broken ?h)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?tb - (either bridge_block triangle_block) ?d - hexagonal_bin)
      (and
        (preference dodgeballThrownToBin
          (exists (?s ?d2 ?o1 ?o ?h ?o1 - cube_block)
            (then
              (hold (in ?d ?d) )
              (hold (toggled_on rug) )
              (hold (and (between ?d ?s ?d2) ) )
            )
          )
        )
        (preference nonBlockPlacedInBuilding
          (exists (?b7 - hexagonal_bin ?c - teddy_bear)
            (then
              (hold-while (on ?c ?c) (on ?b ?ob) )
              (hold (< 1 (distance desk ?h)) )
              (once (touch ?d ?d) )
            )
          )
        )
      )
    )
    (preference throwFromBehindChairsInBin
      (exists (?h - dodgeball ?db - cube_block)
        (then
          (once (not (and (in_motion ?db) (agent_holds ?c) ) ) )
          (once (and (not (and (and (same_color door pink) (agent_holds ?db) ) (on ?db ?db) (< (distance ?h ?db) (x_position ?db)) ) ) (touch ?db ?g) ) )
          (once (in ?d ?db) )
        )
      )
    )
    (preference cubeBlockThrowAttempt
      (exists (?h - (either dodgeball yellow_cube_block desktop))
        (then
          (once (and (in_motion ?c2) (< (distance desk ?h) 1) ) )
          (once (and (not (and (in_motion ?h) (agent_holds ?h) ) ) (in_motion ?d) ) )
          (once (on ?h ?h) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 25 (count-unique-positions nonBlockPlacedInBuilding) )
    (+ (+ 5 (count-once nonBlockPlacedInBuilding:golfball) )
      (+ 50 (count cubeBlockThrowAttempt:green) )
    )
  )
)
(:scoring
  (count throwFromBehindChairsInBin:basketball)
)
)



(define (game game-id-274) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-conserved
      (> 1 0)
    )
  )
)
(:constraints
  (and
    (preference throwToBin
      (exists (?d ?h - hexagonal_bin ?c - ball)
        (then
          (once (agent_holds ?c) )
          (once (agent_holds desk) )
          (once (in_motion ?o) )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (total-score) )
)
(:scoring
  (count throwToBin:beachball)
)
)



(define (game game-id-275) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?o - hexagonal_bin)
      (game-conserved
        (and
          (= (distance ?d ?o) (distance ?o floor))
          (agent_holds floor)
          (not
            (and
              (in_motion ?b)
              (not
                (on ?o ?g)
              )
            )
          )
        )
      )
    )
    (exists (?b - pyramid_block ?h ?d - hexagonal_bin)
      (exists (?c1 - (either yellow_cube_block cellphone))
        (and
          (game-optional
            (in ?d ?c)
          )
          (and
            (forall (?g - cube_block)
              (exists (?r - (either dodgeball blue_cube_block) ?o1 - hexagonal_bin)
                (and
                  (and
                    (forall (?h - curved_wooden_ramp ?r - (either pillow ball))
                      (or
                        (and
                          (and
                            (game-conserved
                              (not
                                (not
                                  (agent_holds ?r)
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                    (exists (?b2 - shelf ?c - dodgeball ?c4 - dodgeball)
                      (exists (?h - doggie_bed ?w - triangular_ramp)
                        (game-conserved
                          (not
                            (in_motion ?b)
                          )
                        )
                      )
                    )
                    (game-optional
                      (agent_crouches )
                    )
                  )
                  (and
                    (and
                      (game-optional
                        (adjacent_side rug left ?p)
                      )
                      (game-conserved
                        (agent_holds ?o1)
                      )
                      (game-optional
                        (and
                          (not
                            (touch ?o ?d)
                          )
                          (rug_color_under ?h ?o2)
                          (in_motion ?d)
                          (not
                            (not
                              (not
                                (forall (?l2 - hexagonal_bin ?d ?b9 - pyramid_block)
                                  (broken ?h)
                                )
                              )
                            )
                          )
                          (not
                            (not
                              (in ?d ?d)
                            )
                          )
                          (< (distance agent ?h) (distance agent ?o1))
                        )
                      )
                    )
                    (and
                      (game-conserved
                        (and
                          (on ?d ?d)
                          (on ?d ?b)
                        )
                      )
                    )
                  )
                  (game-optional
                    (in_motion ?b)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectWithMatchingColor
      (exists (?c - game_object ?c1 - dodgeball ?b10 - game_object ?t - hexagonal_bin)
        (then
          (once (and (not (not (and (and (in_motion ?d) (object_orientation ?t upright) ) (agent_holds ?b) (adjacent ?c ?t1) (and (and (< (distance ?t ?t) (distance ?w2 ?h)) (not (in ?c bed) ) ) (touch desk ?t) (on ?o ?b) (and (in_motion ?b) (and (between ?t ?t ?t) (in_motion ?r) ) ) ) (not (not (not (not (agent_holds ?t) ) ) ) ) (in_motion ?l) ) ) ) (and (in ?t ?t) (and (and (adjacent_side ?t left ?t) (in ?t ?d) ) (faces ?b ?t2) ) (touch agent ?t) (on ?f ?t) (and (< 1 1) (and (touch ?t ?d) (not (in_motion ?o2) ) ) ) (on ?t ?b) (and (and (on agent ?t) (agent_holds desk) ) (and (touch ?b desk) (< (distance ?c1 ?b) 1) (adjacent desk pink_dodgeball) ) ) (agent_holds ?t) (on ?d ?l) (agent_holds ?d) ) ) )
          (once (not (not (in_motion ?o1) ) ) )
          (hold (touch ?t ?t) )
        )
      )
    )
  )
)
(:terminal
  (or
    (<= 10 3 )
  )
)
(:scoring
  (count-overlapping objectWithMatchingColor:hexagonal_bin)
)
)



(define (game game-id-276) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (in ?l ?c1)
  )
)
(:constraints
  (and
    (preference cubeThrownToBin
      (exists (?b - hexagonal_bin)
        (then
          (once (exists (?b - hexagonal_bin ?h - cube_block) (agent_holds ?h) ) )
          (hold (forall (?t1 - hexagonal_bin) (and (< (distance ?b2 ?b) 1) (adjacent ?c ?o) ) ) )
          (once (object_orientation top_shelf ?b) )
        )
      )
    )
    (preference throwBallToBin
      (exists (?bl - ball ?o - pyramid_block)
        (then
          (hold (in_motion ?o) )
          (hold-while (not (agent_holds ?o) ) (and (between ?b1 ?o agent) (in_motion ?o) (not (agent_holds ?o) ) (not (adjacent ?o ?o) ) ) )
          (hold (on bed ?o) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 3 (+ (+ (count-once-per-objects throwBallToBin:basketball:yellow_pyramid_block) (count-once-per-external-objects cubeThrownToBin:dodgeball:green) )
        (- (count-once-per-objects throwBallToBin:basketball) )
        (count throwBallToBin:basketball:yellow)
      )
    )
    (> (count-once-per-objects throwBallToBin:golfball) (total-time) )
    (or
      (> (* (count-once-per-objects cubeThrownToBin:yellow_pyramid_block) 4 1 )
        (total-score)
      )
      (> 40 (count-once-per-objects throwBallToBin:dodgeball:green) )
      (> 2 (* 10 15 (count cubeThrownToBin:basketball) (external-forall-maximize (count throwBallToBin:doggie_bed) ) (* (count throwBallToBin:basketball) 8 )
          (* 6 (+ (count-total throwBallToBin:green:book) 10 (count-once-per-objects throwBallToBin:yellow:dodgeball) 10 25 )
            15
            (* (* 3 (= 5 (+ (count-once-per-external-objects cubeThrownToBin:green:dodgeball:beachball) (+ (count-same-positions cubeThrownToBin:green) (count-once-per-objects throwBallToBin:blue_cube_block:doggie_bed:beachball) (= 6 (external-forall-maximize (+ (count-increasing-measure throwBallToBin:dodgeball:blue_cube_block:golfball) 4 )
                        )
                      )
                    )
                  )
                )
              )
              (count-once-per-objects throwBallToBin)
            )
            10
            (* (- (- 2 )
              )
              (* (count throwBallToBin:side_table) 1 (+ (count cubeThrownToBin:dodgeball:wall) (* 15 (* (* (* 10 (count cubeThrownToBin:yellow) )
                        (+ (* (count-longest cubeThrownToBin:cube_block) )
                          (count throwBallToBin:purple)
                          (count-overlapping throwBallToBin:hexagonal_bin)
                        )
                      )
                      (* 15 6 )
                    )
                  )
                  (* 3 (+ 9 3 )
                  )
                  5
                  (count-once-per-objects throwBallToBin:book)
                  1
                  (count-once-per-objects cubeThrownToBin:dodgeball)
                  (count throwBallToBin:basketball)
                  5
                  (* 180 (count throwBallToBin:cylindrical_block) )
                  5
                  (* (+ (count throwBallToBin:block) (count cubeThrownToBin:red) )
                    5
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:scoring
  (count-unique-positions cubeThrownToBin:red)
)
)



(define (game game-id-277) (:domain few-objects-room-v1)
(:setup
  (forall (?c - hexagonal_bin)
    (game-optional
      (agent_holds ?b)
    )
  )
)
(:constraints
  (and
    (preference dodgeballHitsBin
      (exists (?o4 - triangular_ramp)
        (then
          (once (and (not (not (same_color ?b blue) ) ) (on ?o4 pink_dodgeball) ) )
          (once (agent_holds ?o) )
          (once (in ?s ?o4) )
        )
      )
    )
    (preference blindsOpened
      (exists (?p1 ?b - dodgeball)
        (then
          (hold (in_motion ?d) )
          (once (not (and (in_motion ?b) (not (on ?p1 ?d) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (count-once-per-objects blindsOpened:green) )
)
(:scoring
  (count-once-per-objects blindsOpened:blue_pyramid_block)
)
)



(define (game game-id-278) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (in_motion ?o1)
  )
)
(:constraints
  (and
    (forall (?l - hexagonal_bin)
      (and
        (preference cubeBlockFromBedToShelf
          (exists (?s - game_object)
            (at-end
              (not
                (agent_holds ?l)
              )
            )
          )
        )
      )
    )
    (preference ballOnBedAtEnd
      (exists (?o5 - pillow)
        (then
          (once (on bed ?o5) )
          (hold-while (not (and (and (or (adjacent_side room_center front ?c) (on ?b ?b) (in_motion ?o) ) (not (not (and (touch ?d ?d) (not (on ?o5 ?o5) ) ) ) ) ) (agent_holds ?o5) ) ) (touch ?r ?o1) (in_motion ?d) )
          (once (rug_color_under ?o5 green) )
        )
      )
    )
    (forall (?o1 - (either blue_cube_block book))
      (and
        (preference redDodgeballThrownToBin
          (exists (?d - doggie_bed ?b - wall ?d ?b6 - hexagonal_bin ?b1 - cube_block)
            (then
              (once (in_motion ?b1) )
              (once (not (in_motion ?b1) ) )
              (hold (agent_holds agent) )
            )
          )
        )
        (preference itemsTurnedOff
          (exists (?b3 - triangular_ramp ?w2 - (either dodgeball laptop))
            (then
              (hold (and (not (not (and (not (on ?o1 ?o1) ) (exists (?b3 - game_object) (or (agent_holds ?g) (in_motion ?l) (in_motion ?o1) ) ) ) ) ) (in ?o1 ?o1) ) )
              (once (not (and (not (adjacent desk ?o) ) (agent_holds ?d) ) ) )
              (once (agent_holds ?o1) )
            )
          )
        )
        (preference teddyBearHitsBall
          (exists (?b3 - game_object)
            (at-end
              (forall (?o - cube_block)
                (not
                  (agent_holds ?s)
                )
              )
            )
          )
        )
        (preference cubeBlockThrownToTopShelf
          (exists (?h - (either cd cd) ?o - hexagonal_bin)
            (then
              (once (same_color ?o1 ?o2) )
              (once (adjacent ?o ?d) )
              (once (and (not (between ?b1 ?o ?o) ) (adjacent ?h ?b) ) )
            )
          )
        )
      )
    )
    (forall (?b - cube_block)
      (and
        (preference itemsHidingScreens
          (exists (?s - ball)
            (then
              (hold (exists (?w1 - bridge_block ?o3 - block) (not (on ?s ?s) ) ) )
              (once (and (< (distance ?w1 ?s) (distance west_wall ?s)) (and (agent_holds ?s) (in_motion ?b) ) (opposite ?g ?b) ) )
              (once (agent_holds ?c) )
            )
          )
        )
      )
    )
    (preference thrownBallHitsBlock
      (exists (?ob - (either blue_cube_block tall_cylindrical_block) ?o - hexagonal_bin)
        (then
          (once (on ?c2 ?d) )
          (once (touch ?o ?h) )
          (hold (and (exists (?c - teddy_bear) (adjacent bed ?d) ) (and (agent_holds ?o) (and (exists (?c3 - curved_wooden_ramp ?g - dodgeball ?b2 - (either flat_block dodgeball) ?g - ball) (touch ?t bed) ) (= (distance ?o ?o) (distance room_center ?o)) ) ) ) )
        )
      )
    )
    (preference ballThrownHitsAgent
      (exists (?h ?r ?c ?l1 ?d1 ?ob ?b ?c ?c6 ?bl - (either cellphone mug))
        (then
          (once (in_motion rug) )
          (hold (and (or (and (in_motion ?b) (not (agent_holds ?bl) ) (in_motion bed) ) (not (adjacent_side room_center ?h ?b) ) (in_motion ?d) ) (agent_holds ?o3) ) )
          (hold (and (agent_holds ?d) (<= (distance ?h ?h) 1) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (- (* 2 (external-forall-minimize (count-once-per-objects itemsTurnedOff:block) ) )
      )
      (count thrownBallHitsBlock:dodgeball:basketball:pink)
    )
    (= (total-score) 0 )
  )
)
(:scoring
  (* 20 (count-once-per-external-objects cubeBlockThrownToTopShelf:dodgeball:orange) 50 (count-once-per-objects thrownBallHitsBlock:orange:dodgeball) (* (count-measure itemsTurnedOff:dodgeball) (count itemsTurnedOff:dodgeball) )
    30
  )
)
)



(define (game game-id-279) (:domain many-objects-room-v1)
(:setup
  (exists (?d - hexagonal_bin)
    (and
      (game-optional
        (and
          (in_motion ?d)
          (not
            (not
              (on ?d rug)
            )
          )
        )
      )
      (forall (?d - triangular_ramp)
        (game-conserved
          (agent_holds bed)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o ?c - book ?d - chair)
      (and
        (preference objectWithMatchingColor
          (exists (?c2 - curved_wooden_ramp)
            (then
              (once (and (and (not (>= 1 6) ) (not (game_start ) ) ) (not (adjacent_side room_center ?d ?c2) ) (on ?t ?d) (in_motion ?t) ) )
              (hold (not (< (distance ?h ?b) (distance ?d ?c2)) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= (* 10 (* 3 (count objectWithMatchingColor:yellow) (count-once objectWithMatchingColor:beachball) )
    )
    (count-overlapping objectWithMatchingColor:pyramid_block)
  )
)
(:scoring
  (* (external-forall-maximize (* (external-forall-minimize (+ (external-forall-maximize (* 4 (count objectWithMatchingColor:basketball) )
            )
            25
          )
        )
        9
      )
    )
    (count-once objectWithMatchingColor:yellow)
  )
)
)



(define (game game-id-280) (:domain many-objects-room-v1)
(:setup
  (exists (?d2 ?l - hexagonal_bin)
    (exists (?p1 - ball)
      (and
        (or
          (forall (?b5 - cube_block)
            (and
              (game-optional
                (and
                  (and
                    (agent_holds ?c)
                    (and
                      (not
                        (not
                          (rug_color_under ?b blue)
                        )
                      )
                      (in_motion ?o)
                      (not
                        (not
                          (and
                            (game_over )
                            (on ?d ?s)
                          )
                        )
                      )
                    )
                  )
                  (exists (?b5 - (either dodgeball blue_cube_block yellow_cube_block))
                    (agent_holds ?b5)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - ball)
      (and
        (preference ballDroppedInBin
          (at-end
            (touch ?h ?b)
          )
        )
        (preference nonBlockPlacedInBuilding
          (exists (?b7 - (either dodgeball doggie_bed) ?o4 - dodgeball)
            (then
              (once (in ?c ?h) )
              (hold (in ?o4 ?d) )
              (once (same_type ?d pillow) )
            )
          )
        )
        (preference dodgeballFromDeskToTarget
          (exists (?h - hexagonal_bin ?h - cube_block ?c3 ?o ?b10 - (either cylindrical_block) ?o1 - game_object)
            (then
              (once (or (or (and (and (in_motion ?d) (or (not (on ?h ?t) ) (> 1 2) ) ) (adjacent room_center ?h) ) (and (agent_holds ?b) (same_color ?h ?h) (agent_holds ?o1) (same_type ?h ?o1) ) ) (same_object agent ?d) ) )
              (once-measure (in_motion ?o1) (distance ?h ?d) )
              (once (agent_holds ?o1) )
            )
          )
        )
        (preference thrownBallHitsBlock
          (then
            (once (in ?h ?h) )
            (once (not (agent_holds ?p1) ) )
            (hold (not (not (not (on ?h ?c) ) ) ) )
          )
        )
      )
    )
    (forall (?o4 - hexagonal_bin ?d - hexagonal_bin)
      (and
        (preference throwMissesBin
          (then
            (once (adjacent_side room_center left desk) )
            (once (and (agent_holds ?d) (and (in_motion ?b) (in_motion ?b) ) ) )
            (once (> (building_size ?d) 2) )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (not
      (>= 6 (count throwMissesBin:yellow) )
    )
    (and
      (>= (total-time) (+ (count-once-per-objects dodgeballFromDeskToTarget:dodgeball) (count-once-per-objects thrownBallHitsBlock:hexagonal_bin) (* (* (+ 2 (= (- (count-same-positions ballDroppedInBin:blue_dodgeball) )
                  (external-forall-maximize
                    (* (count-once-per-objects thrownBallHitsBlock:dodgeball:golfball) (+ (count throwMissesBin:blue_dodgeball) (count thrownBallHitsBlock:beachball) )
                    )
                  )
                )
              )
              (- (* (count thrownBallHitsBlock:beachball) 1 )
              )
              (count nonBlockPlacedInBuilding:yellow:triangle_block)
            )
            (count thrownBallHitsBlock:dodgeball:beachball:blue_dodgeball)
          )
          3
          (count-once-per-external-objects thrownBallHitsBlock:dodgeball)
          (+ 10 (count thrownBallHitsBlock:doggie_bed) )
        )
      )
    )
    (or
      (= 10 (- (count ballDroppedInBin:golfball) )
      )
      (>= (total-score) 6 )
    )
  )
)
(:scoring
  (count-once-per-external-objects thrownBallHitsBlock:purple)
)
)



(define (game game-id-281) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (agent_holds ?b)
  )
)
(:constraints
  (and
    (forall (?b - hexagonal_bin)
      (and
        (preference ballThrownMissesEverything
          (exists (?w - wall)
            (then
              (once (in_motion ?c) )
              (hold (and (in ?b ?b) (not (or (and (< (distance agent ?b) (distance_side bed ?w ?w back)) (open ?w) ) (agent_holds ?d) ) ) ) )
              (hold-while (is_setup_object ?b) (in_motion ?b) )
            )
          )
        )
      )
    )
    (preference throwBallToBin
      (exists (?b4 - game_object)
        (then
          (once (in_motion ?b4) )
        )
      )
    )
    (preference blockPlacedInBuilding
      (exists (?d - green_triangular_ramp ?b - (either alarm_clock doggie_bed cd))
        (then
          (hold (not (equal_x_position ?b ?b) ) )
          (hold (and (not (agent_holds ?o) ) (not (in_motion ?d) ) ) )
          (once (and (not (not (not (in ?d ?p2) ) ) ) (adjacent bed ?d) (adjacent desk ?b) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 5 (total-time) )
    (>= 4 (total-score) )
  )
)
(:scoring
  (count-once ballThrownMissesEverything:beachball)
)
)



(define (game game-id-282) (:domain medium-objects-room-v1)
(:setup
  (exists (?p3 - (either yellow_cube_block desktop curved_wooden_ramp))
    (game-conserved
      (exists (?b - dodgeball)
        (adjacent ?b ?p3)
      )
    )
  )
)
(:constraints
  (and
    (forall (?bl - ball)
      (and
        (preference dodgeballsInPlace
          (exists (?b5 - (either cellphone beachball pyramid_block))
            (then
              (hold (object_orientation side_table upright) )
              (hold (on ?o ?b5) )
              (once (and (not (touch ?p2 ?b5) ) (in ?h ?d) ) )
              (once (not (agent_holds ?b) ) )
            )
          )
        )
        (preference ballThrownFromDoor
          (exists (?h ?f ?b - hexagonal_bin)
            (then
              (once (not (not (and (object_orientation ?bl sideways) (not (not (in_motion ?b) ) ) ) ) ) )
              (once (in_motion ?c) )
              (once (and (not (> 1 (distance ?bl ?b)) ) (and (between ?c2 ?h desk) (above top_drawer ?h) (exists (?b - dodgeball) (in ?f ?h) ) ) ) )
            )
          )
        )
        (preference throwBallToBin
          (exists (?o1 - shelf ?w1 - triangular_ramp ?b - golfball)
            (at-end
              (in_motion ?c2)
            )
          )
        )
      )
    )
    (forall (?b2 - block)
      (and
        (preference throwOverRamp
          (exists (?p ?l1 - block ?c3 - red_dodgeball)
            (then
              (once (not (touch ?b ?h) ) )
              (hold (not (in_motion ?c3) ) )
              (once (agent_holds ?b) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects dodgeballsInPlace:dodgeball) 15 )
)
(:scoring
  (count-once-per-objects ballThrownFromDoor:blue_dodgeball)
)
)



(define (game game-id-283) (:domain few-objects-room-v1)
(:setup
  (forall (?s - (either red golfball))
    (not
      (game-conserved
        (and
          (not
            (above ?s ?s)
          )
          (not
            (not
              (in_motion ?d)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToBin
      (exists (?p2 - teddy_bear)
        (at-end
          (agent_holds ?p2)
        )
      )
    )
    (preference nonBlockPlacedInBuilding
      (exists (?b1 ?h - curved_wooden_ramp)
        (then
          (hold (and (game_start ) (adjacent_side ?h front agent) (agent_holds bed) (not (not (in_motion ?b1) ) ) ) )
          (once (in_motion ?b) )
          (once (not (faces ?h ?b1) ) )
          (hold-while (or (and (above ?b ?b1) (and (not (in bed ?d) ) (forall (?h - hexagonal_bin) (in_motion ?d) ) ) ) (and (same_type ?l3 pillow) (and (exists (?o - (either book pyramid_block)) (<= 1 (distance ?d ?d)) ) (touch ?h ?l) (agent_holds ?b1) ) ) ) (not (and (on pink_dodgeball rug) (game_start ) ) ) )
        )
      )
    )
    (preference ballInOrOnBin
      (exists (?t1 - game_object)
        (then
          (hold (in ?l1 ?t1) )
          (hold-while (in ?b ?t1) (faces ?t1 ?b) )
          (hold (agent_holds ?w1) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 1 100 )
    (count nonBlockPlacedInBuilding:alarm_clock)
  )
)
(:scoring
  (count-longest ballInOrOnBin:golfball)
)
)



(define (game game-id-284) (:domain many-objects-room-v1)
(:setup
  (forall (?s - block)
    (and
      (exists (?d - game_object)
        (exists (?c - teddy_bear ?p - hexagonal_bin)
          (game-conserved
            (agent_holds ?p)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - flat_block ?b - doggie_bed)
      (and
        (preference throwAttemptFromBehindBlock
          (exists (?bl - dodgeball)
            (then
              (hold (agent_holds ?o) )
              (once (adjacent room_center ?r) )
              (once (and (not (agent_holds ?g) ) (in_motion ?bl) ) )
              (once (agent_crouches ) )
            )
          )
        )
        (preference dodgeballThrownToBinFromDesk
          (exists (?o - dodgeball)
            (at-end
              (> (distance ?o ?b) (distance ?c1 ?o))
            )
          )
        )
      )
    )
    (preference throwAttempt
      (exists (?h - (either dodgeball dodgeball))
        (then
          (hold-while (on ?h ?c) (in_motion ?o2) (agent_holds desk) (not (in_motion ?d) ) )
          (hold (and (not (on ?c ?b) ) (rug_color_under ?b ?o2) (not (agent_holds ?h) ) ) )
          (hold (toggled_on ?h) )
          (hold (game_over ) )
        )
      )
    )
    (forall (?c - ball)
      (and
        (preference thrownBallReachesEnd
          (exists (?o - doggie_bed)
            (then
              (once (in ?o ?bl) )
              (once (= (distance door ?c) 4 0.5) )
              (once (forall (?bl - shelf ?l2 - beachball) (touch ?o ?d) ) )
            )
          )
        )
        (preference throwToDrawerOrBin
          (exists (?p - watch)
            (then
              (once (and (in_motion ?d) (not (< (distance ?c ?p) 9) ) ) )
              (hold (and (in_motion ?o1) (on ?t ?l2) ) )
              (hold (not (adjacent agent ?o) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 30 (count-once throwAttempt:dodgeball:pink) )
)
(:scoring
  (count throwAttemptFromBehindBlock:pink_dodgeball)
)
)



(define (game game-id-285) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (and
      (agent_holds ?l1)
      (not
        (exists (?l - hexagonal_bin ?l4 - wall)
          (agent_holds ?l4)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToBinFromOppositeWall
      (exists (?o - hexagonal_bin ?t - hexagonal_bin)
        (then
          (once (in_motion ?h) )
          (once (agent_holds ?c1) )
          (once (in_motion ?w) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (+ (count throwToBinFromOppositeWall:purple) 15 (count throwToBinFromOppositeWall:dodgeball) )
      10
    )
  )
)
(:scoring
  (count-once-per-objects throwToBinFromOppositeWall:basketball)
)
)



(define (game game-id-286) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (adjacent agent ?b)
  )
)
(:constraints
  (and
    (preference objectToBinOnFirstTry
      (exists (?c5 - doggie_bed)
        (then
          (once (not (adjacent agent ?c5) ) )
          (hold (< (distance_side ?d front ?o) 1) )
          (once (in_motion ?w2) )
        )
      )
    )
    (preference throwAttempt
      (exists (?d - chair ?h - (either blue_cube_block blue_cube_block))
        (then
          (hold (in ?h ?h) )
          (once (agent_holds ?t) )
          (once (in ?h ?d) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (* 5 (* (* (count-once-per-objects objectToBinOnFirstTry:beachball) 10 )
        (count objectToBinOnFirstTry:pink_dodgeball)
      )
    )
  )
)
(:scoring
  (* (* (external-forall-maximize (count-once-per-objects throwAttempt:blue_dodgeball) ) (count throwAttempt:purple:dodgeball) )
    (+ (count-once-per-objects throwAttempt:yellow_pyramid_block) (+ 10 5 )
    )
  )
)
)



(define (game game-id-287) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-conserved
      (touch ?b ?c1)
    )
  )
)
(:constraints
  (and
    (preference ballThrownIntoTarget
      (exists (?l - dodgeball ?c4 - dodgeball ?s - hexagonal_bin)
        (then
          (once (< (distance bed ?s) (distance room_center ?o5)) )
          (once (in ?bl ?s) )
          (once (exists (?b - dodgeball) (object_orientation ?r upright) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count ballThrownIntoTarget:golfball) 4 )
    (= 20 (* (+ (* (count ballThrownIntoTarget:beachball) (count-once ballThrownIntoTarget:red) )
          (* (- (count ballThrownIntoTarget:beachball) )
            (count-once ballThrownIntoTarget:dodgeball)
          )
        )
        10
      )
    )
  )
)
(:scoring
  (count ballThrownIntoTarget:cylindrical_block)
)
)



(define (game game-id-288) (:domain few-objects-room-v1)
(:setup
  (not
    (and
      (exists (?b8 - hexagonal_bin ?s - building)
        (forall (?t - hexagonal_bin)
          (and
            (exists (?c - hexagonal_bin ?p3 - bridge_block ?h - game_object)
              (forall (?d - (either alarm_clock bed ball wall))
                (exists (?d - game_object)
                  (exists (?h - hexagonal_bin)
                    (not
                      (and
                        (exists (?db - game_object)
                          (exists (?r1 ?d ?c - block ?l - ball)
                            (or
                              (exists (?h - block)
                                (and
                                  (not
                                    (game-optional
                                      (and
                                        (in_motion ?b1)
                                        (adjacent ?s ?t)
                                        (object_orientation desk upside_down)
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
            (exists (?p - (either blue_cube_block pencil) ?c - hexagonal_bin)
              (exists (?b5 - ball ?db - ball)
                (forall (?o - curved_wooden_ramp)
                  (and
                    (exists (?b - hexagonal_bin)
                      (game-conserved
                        (agent_holds ?g)
                      )
                    )
                    (not
                      (game-conserved
                        (agent_holds floor)
                      )
                    )
                    (forall (?o - pillow ?c - shelf ?h - hexagonal_bin)
                      (game-conserved
                        (agent_holds ?h)
                      )
                    )
                  )
                )
              )
            )
            (game-conserved
              (on ?r ?s)
            )
          )
        )
      )
      (exists (?h - curved_wooden_ramp)
        (exists (?p - chair)
          (and
            (and
              (and
                (or
                  (exists (?o2 - hexagonal_bin ?bl - bridge_block)
                    (forall (?h - hexagonal_bin)
                      (and
                        (forall (?h - hexagonal_bin)
                          (not
                            (exists (?b2 - hexagonal_bin)
                              (exists (?d - wall)
                                (game-conserved
                                  (and
                                    (not
                                      (in_motion ?r)
                                    )
                                    (and
                                      (and
                                        (and
                                          (and
                                            (not
                                              (in_motion ?l1)
                                            )
                                            (and
                                              (not
                                                (agent_holds ?h)
                                              )
                                              (on ?b ?c)
                                            )
                                          )
                                          (in ?bl ?b)
                                        )
                                        (not
                                          (and
                                            (in_motion ?h)
                                            (agent_holds ?bl)
                                          )
                                        )
                                      )
                                      (not
                                        (above ?d ?b2)
                                      )
                                      (in_motion ?b8)
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
              (game-conserved
                (rug_color_under floor ?h)
              )
              (game-optional
                (in_motion ?p)
              )
            )
            (game-conserved
              (and
                (and
                  (and
                    (on ?h ?p)
                    (adjacent room_center door)
                  )
                  (and
                    (in_motion ?h)
                    (above floor ?h)
                  )
                  (in_motion ?l1)
                  (agent_holds ?b)
                  (and
                    (< (distance ?h ?p) (distance side_table ?h))
                    (in_motion ?d)
                  )
                )
                (>= 0 2)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference castleBuilt
      (exists (?c1 - triangular_ramp ?w - cube_block ?h - ball)
        (at-end
          (and
            (adjacent bed ?h)
            (on ?b ?h)
          )
        )
      )
    )
  )
)
(:terminal
  (> 6 (count castleBuilt:blue_dodgeball) )
)
(:scoring
  (* (count castleBuilt:beachball) 2 )
)
)



(define (game game-id-289) (:domain medium-objects-room-v1)
(:setup
  (forall (?c1 - hexagonal_bin)
    (game-conserved
      (and
        (agent_holds ?c1)
        (< (distance_side ?r ?c1 ?c1) (distance desk ?c1))
      )
    )
  )
)
(:constraints
  (and
    (preference blocksInPlace
      (exists (?b - hexagonal_bin)
        (then
          (hold (and (not (and (touch ?o2 ?b) (and (not (rug_color_under bed ?b) ) (object_orientation ?b sideways) ) ) ) (and (in_motion ?p) ) ) )
          (hold (and (not (in_motion ?h) ) (agent_holds agent) ) )
          (hold (in_motion ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (- (+ (+ 2 5 )
          6
        )
      )
      2
    )
    (total-time)
  )
)
(:scoring
  (* (external-forall-minimize (* (count-once-per-objects blocksInPlace:basketball:dodgeball) (count-once blocksInPlace:pink_dodgeball) )
    )
    (count blocksInPlace:basketball)
  )
)
)



(define (game game-id-290) (:domain medium-objects-room-v1)
(:setup
  (forall (?h - ball)
    (game-conserved
      (and
        (and
          (adjacent agent ?d)
          (in_motion ?l)
        )
        (in_motion ?b2)
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - pillow ?b - (either pyramid_block golfball pink))
      (and
        (preference blockToBinFromRug
          (exists (?t - triangular_ramp)
            (then
              (once (< 0 (distance door pink_dodgeball)) )
              (once (agent_holds ?l1) )
              (once (agent_holds ?b) )
            )
          )
        )
        (preference ballThrownToRug
          (exists (?o - cube_block ?o4 - (either dodgeball pyramid_block floor cube_block))
            (then
              (once (in_motion ?o4) )
              (once (in_motion ?d) )
              (once (and (in_motion ?l) (agent_holds ?b) (agent_holds ?b) ) )
              (once (not (faces ?o4 ?o) ) )
            )
          )
        )
        (preference throwAttemptKnocksBlock
          (exists (?o - triangular_ramp)
            (then
              (once (and (not (in_motion ?d1) ) (agent_holds ?b) (not (= (distance ?b ?b) (distance door ?b)) ) ) )
              (once (on ?o ?b) )
              (once (object_orientation ?b sideways) )
            )
          )
        )
      )
    )
    (forall (?p2 - hexagonal_bin ?d - cube_block)
      (and
        (preference thrownObjectHitsComputer
          (at-end
            (not
              (agent_holds ?d)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count ballThrownToRug:alarm_clock:dodgeball) (* 15 (count ballThrownToRug:beachball:beachball:pink) )
  )
)
(:scoring
  (count-once-per-objects throwAttemptKnocksBlock:blue_pyramid_block)
)
)



(define (game game-id-291) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds ?d)
  )
)
(:constraints
  (and
    (preference ballThrownFromRug
      (exists (?o - hexagonal_bin ?x - ball)
        (then
          (once (agent_holds ?h) )
          (once (not (and (and (and (not (in ?b ?h) ) (in_motion ?b) ) ) (not (and (rug_color_under ?b ?x) (agent_holds ?c) ) ) ) ) )
          (once-measure (exists (?h - doggie_bed) (not (and (< (building_size ?t) (distance ?h ?b)) (in_motion ?d) ) ) ) (distance ?d ?x) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (* (+ (+ 2 300 )
          (* 2 2 )
          (count ballThrownFromRug:top_drawer)
          (count ballThrownFromRug:beachball)
          (+ 3 (count ballThrownFromRug:alarm_clock) (* (+ 2 25 )
              8
            )
          )
          (* 0 (count-once-per-objects ballThrownFromRug:red) (* 10 6 1 10 5 5 (count ballThrownFromRug:dodgeball) (count ballThrownFromRug:pink) 1 )
          )
          (* (* (+ 6 (* (- -10 )
                  2
                )
              )
              (count ballThrownFromRug:hexagonal_bin)
            )
            (<= (* (* (count-once-per-objects ballThrownFromRug:pink) (* (count ballThrownFromRug:blue_dodgeball:basketball) (count ballThrownFromRug:wall:blue_cube_block) )
                  6
                )
                4
              )
              (count-shortest ballThrownFromRug:orange)
            )
          )
          50
          2
          6
          (- (* 1 (* (- 5 )
                (count ballThrownFromRug:book)
              )
            )
          )
          30
        )
        (+ (count ballThrownFromRug:yellow_cube_block) 2 )
        (count ballThrownFromRug:blue_dodgeball)
        5
        1
        (>= 3 (count-once-per-objects ballThrownFromRug:pink_dodgeball:beachball) )
        (* (* 10 (* (= (count-total ballThrownFromRug:golfball) 10 (count ballThrownFromRug:yellow:orange) )
              0
            )
          )
          (count-once-per-objects ballThrownFromRug:dodgeball)
        )
        100
        (count ballThrownFromRug:yellow)
      )
      50
    )
  )
)
(:scoring
  (count-once-per-external-objects ballThrownFromRug:basketball)
)
)



(define (game game-id-292) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds ?o1)
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?o - hexagonal_bin ?h - color)
        (then
          (once (adjacent ?h ?b) )
          (once (agent_holds ?h) )
          (hold (not (and (agent_holds ?b3) (agent_holds ?l1) ) ) )
        )
      )
    )
    (forall (?b10 - cube_block)
      (and
        (preference dodgeballAndBasketballInBin
          (exists (?d - hexagonal_bin)
            (at-end
              (agent_holds ?h)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (* (count throwAttempt:beachball) (count-once-per-objects dodgeballAndBasketballInBin:basketball) )
  )
)
(:scoring
  (count throwAttempt:dodgeball)
)
)



(define (game game-id-293) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (agent_holds ?h)
  )
)
(:constraints
  (and
    (preference golfballInBinFromPillow
      (exists (?l - hexagonal_bin)
        (then
          (hold (same_color ?r ?l) )
          (hold (not (equal_z_position desk ?h) ) )
          (hold (same_color ?l blue) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (not
        (>= (count-once-per-objects golfballInBinFromPillow:basketball) 20 )
      )
      (or
        (>= (count golfballInBinFromPillow:yellow:red) (count-once-per-objects golfballInBinFromPillow:book:dodgeball) )
        (>= (* 2 1 )
          (count-once-per-objects golfballInBinFromPillow:hexagonal_bin)
        )
      )
    )
    (>= 2 (total-time) )
  )
)
(:scoring
  (count golfballInBinFromPillow:dodgeball)
)
)



(define (game game-id-294) (:domain many-objects-room-v1)
(:setup
  (exists (?p - dodgeball)
    (exists (?b - shelf)
      (forall (?b5 - hexagonal_bin ?l ?d ?b ?b - hexagonal_bin)
        (and
          (forall (?b - hexagonal_bin)
            (game-optional
              (agent_holds ?h)
            )
          )
          (exists (?r - dodgeball ?h - hexagonal_bin)
            (exists (?d - dodgeball ?c - hexagonal_bin ?l - building)
              (game-conserved
                (agent_holds ?r)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference laptopAndBookInPlace
      (exists (?b6 - hexagonal_bin ?ob - shelf)
        (at-end
          (not
            (and
              (not
                (on ?ob ?h)
              )
              (in_motion ?ob)
              (same_object ?ob ?ob)
              (not
                (agent_holds ?ob)
              )
            )
          )
        )
      )
    )
    (preference objectWithMatchingColor
      (exists (?b - hexagonal_bin)
        (then
          (hold (not (not (adjacent_side ?h left ?b) ) ) )
          (hold (in_motion ?l) )
          (hold-while (agent_holds ?d) (adjacent ?b ?b) )
          (once (is_setup_object ?b) )
          (once (agent_holds ?b) )
        )
      )
    )
    (preference teddyBearLandsInBin
      (exists (?c1 - cube_block)
        (then
          (once (in_motion ?c1) )
          (once (and (touch ?c ?c1) (agent_holds ?b) ) )
          (once (agent_holds ?c1) )
          (hold (not (in_motion ?b) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (* (count teddyBearLandsInBin:tan:green) 3 )
      5
    )
    (> 0.7 5 )
  )
)
(:scoring
  (* (* 6 )
    5
  )
)
)



(define (game game-id-295) (:domain medium-objects-room-v1)
(:setup
  (forall (?h - red_dodgeball)
    (and
      (exists (?c - block)
        (game-conserved
          (and
            (not
              (and
                (and
                  (and
                    (agent_holds ?b)
                    (open ?c)
                  )
                  (agent_holds ?o2)
                  (not
                    (agent_holds ?h)
                  )
                )
                (in_motion ?d)
                (< 6 (distance ?h ?h))
              )
            )
            (in_motion ?o)
          )
        )
      )
      (game-optional
        (touch ?d ?o)
      )
    )
  )
)
(:constraints
  (and
    (forall (?l - hexagonal_bin ?t1 - hexagonal_bin)
      (and
        (preference ballThrownToRampToBed
          (exists (?c4 - desktop)
            (at-end
              (or
                (agent_holds ?o)
                (not
                  (in ?c4 ?r)
                )
                (and
                  (not
                    (in_motion ?l4)
                  )
                  (not
                    (same_color ?c ?c)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= 10 (* 1 5 )
    )
  )
)
(:scoring
  (count-once-per-objects ballThrownToRampToBed:basketball)
)
)



(define (game game-id-296) (:domain few-objects-room-v1)
(:setup
  (forall (?t2 - hexagonal_bin ?h - game_object)
    (exists (?h - curved_wooden_ramp)
      (forall (?h - chair)
        (forall (?d - hexagonal_bin)
          (exists (?c ?l - beachball)
            (forall (?f - tall_cylindrical_block)
              (and
                (and
                  (forall (?b - ball)
                    (exists (?d - blue_pyramid_block)
                      (game-conserved
                        (not
                          (on ?d ?d)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownThroughRampAndBlocksToBin
      (exists (?h - hexagonal_bin)
        (at-end
          (and
            (on ?h ?h)
            (and
              (and
                (agent_holds ?b)
                (or
                  (not
                    (and
                      (opposite ?d ?g)
                      (on ?c3 ?h)
                      (rug_color_under ?h ?c)
                    )
                  )
                  (not
                    (not
                      (on ?h ?h)
                    )
                  )
                )
                (and
                  (on ?h ?l)
                  (not
                    (on ?h ?b)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (and
      (>= (count-increasing-measure ballThrownThroughRampAndBlocksToBin:red_pyramid_block) 5 )
      (>= 3 (count-once-per-objects ballThrownThroughRampAndBlocksToBin:golfball) )
    )
  )
)
(:scoring
  (* (count ballThrownThroughRampAndBlocksToBin:hexagonal_bin) (+ 5 (+ (count-once-per-external-objects ballThrownThroughRampAndBlocksToBin:beachball) (* (* (external-forall-maximize (* (count-shortest ballThrownThroughRampAndBlocksToBin:beachball) (count-once ballThrownThroughRampAndBlocksToBin:orange) )
            )
            (count-once-per-objects ballThrownThroughRampAndBlocksToBin:dodgeball)
          )
          (external-forall-minimize
            (* 5 (count ballThrownThroughRampAndBlocksToBin:golfball) )
          )
        )
      )
    )
  )
)
)



(define (game game-id-297) (:domain many-objects-room-v1)
(:setup
  (forall (?p - wall ?h - building)
    (game-conserved
      (not
        (and
          (not
            (adjacent ?h ?o)
          )
          (and
            (agent_holds agent)
            (on ?h ?h)
          )
          (not
            (in ?b ?b1)
          )
          (equal_z_position ?h ?o2)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - drawer)
      (and
        (preference smallObjectThrownToBed
          (exists (?c - hexagonal_bin)
            (then
              (once (< 1 (distance ?c ?h)) )
              (hold (not (and (touch ?g ?h) (not (in ?h ?c) ) ) ) )
              (hold (adjacent_side desk left ?d) )
            )
          )
        )
        (preference throwObjectToBin
          (exists (?d - building)
            (then
              (hold (in_motion ?c3) )
              (hold (in_motion ?h) )
              (once (in_motion ?d) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count smallObjectThrownToBed:rug:basketball) 2 )
    (> (total-score) (total-time) )
  )
)
(:scoring
  (* (count throwObjectToBin:basketball:green) (count throwObjectToBin:golfball:beachball) )
)
)



(define (game game-id-298) (:domain few-objects-room-v1)
(:setup
  (forall (?r - doggie_bed)
    (game-optional
      (touch ?r ?d)
    )
  )
)
(:constraints
  (and
    (forall (?o - curved_wooden_ramp)
      (and
        (preference blockInTowerKnockedByDodgeball
          (exists (?l4 - hexagonal_bin)
            (then
              (once-measure (not (in_motion ?d) ) (distance bed ?b) )
              (hold (in_motion ?l4) )
              (once (in_motion ?l4) )
            )
          )
        )
      )
    )
    (preference dodgeballHitsBinBottom
      (exists (?s ?c - hexagonal_bin)
        (then
          (once (agent_crouches ) )
          (once (adjacent ?c ?c) )
          (hold (not (on bed ?s) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 6 (* (* 3 (* (count dodgeballHitsBinBottom:basketball) (count dodgeballHitsBinBottom:pink) )
      )
      5
    )
  )
)
(:scoring
  (+ 6 (* (external-forall-minimize (/ 4 (count-once-per-objects blockInTowerKnockedByDodgeball:blue_cube_block) ) ) 5 )
  )
)
)



(define (game game-id-299) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (and
        (exists (?r - doggie_bed ?h - cube_block)
          (and
            (and
              (exists (?d - doggie_bed)
                (and
                  (exists (?w - game_object ?b - hexagonal_bin)
                    (exists (?r - beachball)
                      (forall (?d - watch)
                        (exists (?t1 - cube_block ?h - building ?d2 ?o3 ?d ?b3 - hexagonal_bin ?h - block)
                          (game-optional
                            (not
                              (in ?o ?h)
                            )
                          )
                        )
                      )
                    )
                  )
                  (forall (?o1 - (either golfball credit_card dodgeball) ?t1 - dodgeball ?t - (either basketball pink blue_cube_block blue_cube_block yellow_cube_block cube_block hexagonal_bin))
                    (game-conserved
                      (same_type ?h block)
                    )
                  )
                  (forall (?o4 - dodgeball ?b7 - block)
                    (and
                      (exists (?c1 - cube_block)
                        (and
                          (game-conserved
                            (not
                              (in ?h ?b)
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
            (forall (?g - dodgeball ?d - dodgeball ?b9 - hexagonal_bin)
              (exists (?p - drawer)
                (game-conserved
                  (agent_holds ?b9)
                )
              )
            )
            (and
              (game-conserved
                (and
                  (in_motion ?h)
                  (and
                    (not
                      (agent_holds ?h)
                    )
                    (not
                      (game_over )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference matchingBuildingBuilt
      (exists (?b8 - dodgeball)
        (then
          (once (in ?d ?c) )
          (hold-while (not (object_orientation ?h upside_down) ) (in rug ?b8) )
          (once (on ?b8 ?b8) )
        )
      )
    )
  )
)
(:terminal
  (<= (count-once-per-objects matchingBuildingBuilt:golfball:dodgeball:blue_pyramid_block) (total-score) )
)
(:scoring
  (count-once matchingBuildingBuilt:doggie_bed:dodgeball)
)
)



(define (game game-id-300) (:domain medium-objects-room-v1)
(:setup
  (exists (?d - ball ?o2 - hexagonal_bin)
    (and
      (game-conserved
        (and
          (agent_holds ?o2)
          (in_motion ?o2)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference basketMadeFromRug
      (exists (?b - chair)
        (at-end
          (not
            (and
              (in_motion ?b)
              (in ?b ?b1)
            )
          )
        )
      )
    )
    (preference ballKnocksBlockFromRug
      (exists (?c5 - ball)
        (then
          (once-measure (agent_holds ?s) (x_position ?c) )
          (hold (agent_holds ?c5) )
          (once (adjacent ?d ?c5) )
        )
      )
    )
  )
)
(:terminal
  (<= 6 10 )
)
(:scoring
  (* 3 (external-forall-maximize (count-total basketMadeFromRug:blue_dodgeball) ) )
)
)



(define (game game-id-301) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?c1 - hexagonal_bin)
      (exists (?b - chair)
        (game-optional
          (not
            (in_motion ?c1)
          )
        )
      )
    )
    (forall (?b7 - (either main_light_switch pyramid_block) ?b ?t ?h - block)
      (and
        (game-optional
          (and
            (in ?b pink_dodgeball)
            (same_color ?t ?h)
          )
        )
      )
    )
    (and
      (exists (?l - tan_cube_block ?tb - hexagonal_bin)
        (not
          (exists (?b - (either dodgeball book))
            (and
              (and
                (exists (?x - hexagonal_bin ?c - curved_wooden_ramp)
                  (exists (?h - hexagonal_bin)
                    (exists (?o ?p - (either basketball curved_wooden_ramp) ?c1 - (either mug cylindrical_block))
                      (and
                        (game-optional
                          (in_motion ?c1)
                        )
                        (and
                          (exists (?b2 - flat_block)
                            (and
                              (exists (?c4 - (either dodgeball dodgeball dodgeball))
                                (exists (?b - triangular_ramp)
                                  (forall (?h - hexagonal_bin ?l3 - hexagonal_bin)
                                    (game-conserved
                                      (< (distance desk ?h) 2)
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                        (and
                          (game-conserved
                            (adjacent ?c ?p)
                          )
                        )
                      )
                    )
                  )
                )
                (forall (?b - hexagonal_bin)
                  (and
                    (and
                      (game-optional
                        (in_motion ?t)
                      )
                    )
                    (exists (?w2 - (either basketball bridge_block) ?t - cube_block)
                      (forall (?r1 - (either cellphone cellphone) ?tb - dodgeball)
                        (exists (?c - dodgeball)
                          (game-conserved
                            (in_motion ?d)
                          )
                        )
                      )
                    )
                  )
                )
              )
              (game-optional
                (and
                  (not
                    (in_motion ?o)
                  )
                  (rug_color_under ?g ?tb)
                )
              )
              (game-optional
                (touch ?l ?d)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c - pillow)
      (and
        (preference bounceBallToBin
          (exists (?b - block)
            (then
              (hold (< (distance_side ?c ?b ?c back) (distance desk ?c)) )
              (once (and (< 1 10) (in ?b ?b) ) )
            )
          )
        )
        (preference baseBlockInTowerAtEnd
          (exists (?c1 - building)
            (then
              (hold (on ?c ?l1) )
              (once (not (in ?b ?o) ) )
              (once (not (game_start ) ) )
            )
          )
        )
      )
    )
    (preference dodgeballsInPlace
      (exists (?b6 - (either game_object dodgeball book cellphone key_chain dodgeball lamp) ?d - beachball)
        (then
          (once (exists (?o - block) (in ?d ?o4) ) )
          (once (not (not (same_type ?h ?l4) ) ) )
          (once (in_motion ?d) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (total-score) (count-once-per-objects baseBlockInTowerAtEnd:green:yellow) )
      (>= 10 (total-time) )
    )
    (>= (count dodgeballsInPlace:purple) (total-score) )
  )
)
(:scoring
  (external-forall-maximize
    (count baseBlockInTowerAtEnd:golfball:golfball)
  )
)
)



(define (game game-id-302) (:domain few-objects-room-v1)
(:setup
  (forall (?l3 - sliding_door ?s ?o - hexagonal_bin)
    (exists (?b - game_object)
      (game-optional
        (and
          (in_motion ?b)
          (not
            (agent_holds bed)
          )
          (in_motion ?s)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToDoggieBedOffWall
      (exists (?c - (either golfball cube_block))
        (then
          (hold (in_motion ?c) )
          (once (and (adjacent ?c ?c) (not (agent_holds ?c) ) ) )
          (once (and (not (agent_holds ?r) ) (between agent ?c1 ?c) ) )
        )
      )
    )
  )
)
(:terminal
  (= 100 (* (count throwBallToDoggieBedOffWall:pink_dodgeball:orange) 15 )
  )
)
(:scoring
  (+ (* (count throwBallToDoggieBedOffWall:basketball) (count throwBallToDoggieBedOffWall:beachball) )
    (+ (count throwBallToDoggieBedOffWall:dodgeball) (* (count-once throwBallToDoggieBedOffWall:book) (* (count-once-per-objects throwBallToDoggieBedOffWall:orange:red) 3 )
        8
      )
    )
  )
)
)



(define (game game-id-303) (:domain many-objects-room-v1)
(:setup
  (exists (?c - color ?r1 - hexagonal_bin)
    (game-optional
      (adjacent_side agent front ?c)
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?c - wall ?b2 - block)
        (then
          (once (in_motion ?b2) )
          (once (in_motion ?d) )
          (hold (in ?b2 ?f) )
          (once (>= 1 2) )
        )
      )
    )
    (forall (?o - hexagonal_bin ?l4 - doggie_bed)
      (and
        (preference dodgeballThrownToBinFromDesk
          (exists (?h - hexagonal_bin)
            (then
              (once (and (toggled_on agent) (and (not (on ?o1 ?l4) ) (on ?c ?h) ) ) )
              (once (not (in_motion ?l4) ) )
              (once (same_type ?b ?h) )
            )
          )
        )
      )
    )
    (preference objectMoved
      (exists (?r2 - cube_block)
        (then
          (once (in ?r2 ?b) )
          (hold-while (in ?c ?r2) (in_motion ?r2) (touch ?r2 ?r) )
          (once (forall (?b8 - ball) (not (forall (?f - hexagonal_bin) (not (not (not (not (and (not (not (agent_holds ?d) ) ) (not (in ?r ?r2) ) ) ) ) ) ) ) ) ) )
        )
      )
    )
    (preference throwBallFromOtherBallToBin
      (exists (?c6 - chair)
        (then
          (once (and (agent_holds ?c6) (not (not (and (and (agent_holds ?b) (not (touch ?c6 ?o) ) ) (agent_holds ?d) ) ) ) ) )
          (hold (and (touch ?c6 ?b) (exists (?r - dodgeball) (agent_crouches ) ) (and (in_motion ?h) (or (and (agent_holds ?b) (in ?c6 ?d) ) (or (in ?c6 ?d) (on agent ?b) ) ) (and (same_color ?c6 ?c6) (agent_holds ?c6) (above ?t ?c6) ) (not (forall (?r - ball) (and (not (and (and (in ?d ?o) (and (not (same_type agent ?l2) ) (agent_holds ?l1) ) (exists (?w - game_object) (adjacent ?r ?c6) ) ) (opposite ?r pink_dodgeball) ) ) (same_object ?r ?c6) ) ) ) ) ) )
          (once (not (and (on ?o ?h) (not (agent_holds ?c6) ) (< (x_position ?l1) (x_position ?o)) ) ) )
        )
      )
    )
    (preference matchingBuildingBuilt
      (exists (?d - hexagonal_bin ?c4 - hexagonal_bin)
        (then
          (once (agent_holds ?g) )
          (once (not (and (agent_holds ?c1) (in_motion ?b) (in_motion ?c4) ) ) )
          (once (above ?w2 ?c4) )
        )
      )
    )
    (preference blockInTowerKnockedByDodgeball
      (exists (?h - dodgeball)
        (then
          (once (and (exists (?o - triangular_ramp) (not (exists (?h - hexagonal_bin) (not (= (distance ?h ?o)) ) ) ) ) (adjacent_side room_center front_left_corner ?b front) ) )
          (once (in_motion ?o) )
          (once (on ?h ?h) )
        )
      )
    )
  )
)
(:terminal
  (> (* (* (external-forall-maximize (count-once objectMoved:top_drawer) ) (count-once-per-objects objectMoved) )
      (count blockInTowerKnockedByDodgeball:pink_dodgeball)
    )
    (count throwBallFromOtherBallToBin:yellow:yellow_pyramid_block:dodgeball)
  )
)
(:scoring
  (* 2 20 )
)
)



(define (game game-id-304) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (in_motion ?g)
  )
)
(:constraints
  (and
    (preference ballThrownIntoTarget
      (exists (?o2 - watch)
        (at-end
          (agent_holds ?o2)
        )
      )
    )
    (preference itemsTurnedOff
      (exists (?ob - (either beachball pyramid_block))
        (then
          (once (not (in ?ob ?c) ) )
          (once (not (> (distance desk ?r) (distance room_center ?ob)) ) )
          (once (< (distance room_center ?ob) 2) )
        )
      )
    )
    (forall (?b1 - golfball ?h - beachball)
      (and
        (preference otherObjectsOnDeskShelf
          (exists (?c4 - (either desktop credit_card))
            (then
              (hold (touch ?h ?h) )
              (once (not (not (adjacent ?h ?d) ) ) )
              (once (and (and (in ?h ?c4) (and (and (on ?d ?o5) (agent_holds ?h) ) (< (distance ?h ?h) (distance rug ?c4)) ) ) ) )
            )
          )
        )
        (preference blockPlacedInBuilding
          (exists (?h - beachball)
            (then
              (hold (adjacent ?h ?h) )
              (once (agent_holds ?c2) )
              (once (agent_holds ?o1) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (count ballThrownIntoTarget:hexagonal_bin) (total-time) )
)
(:scoring
  (count-same-positions blockPlacedInBuilding:yellow)
)
)



(define (game game-id-305) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (and
      (exists (?h - golfball)
        (in ?h ?d)
      )
      (< 1 1)
      (forall (?d - hexagonal_bin)
        (or
          (and
            (not
              (same_type ?b2 blinds)
            )
            (and
              (touch ?d floor)
              (object_orientation ?d sideways)
            )
          )
          (not
            (in ?c5 ?d)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b5 - building ?c - dodgeball)
      (and
        (preference greenObjectMovedToRoomCenter
          (exists (?d2 - block)
            (at-end
              (on ?b ?o)
            )
          )
        )
        (preference blockToBinFromRug
          (exists (?c - desktop)
            (then
              (hold (in_motion ?g) )
              (once (in_motion ?c) )
              (once (in_motion ?d) )
            )
          )
        )
      )
    )
    (preference dodgeballsInPlace
      (exists (?d - hexagonal_bin ?h - (either wall golfball bed))
        (then
          (once (not (and (agent_holds ?h) (in ?b ?h) ) ) )
          (hold (and (adjacent ?w2 ?h) (and (agent_holds ?h) (and (not (and (agent_holds ?h) (and (in_motion ?h) (agent_holds ?h) (and (toggled_on ?h) (agent_holds ?d) ) ) ) ) (not (and (= (distance ?h ?o2)) (is_setup_object ?h) (and (adjacent room_center ?h) (in_motion ?h) ) (game_start ) ) ) ) (in agent ?o) ) ) )
          (once (not (not (agent_holds ?b) ) ) )
        )
      )
    )
    (preference ballThrownMissesEverything
      (exists (?p1 - hexagonal_bin)
        (then
          (hold (agent_holds pink_dodgeball) )
          (hold (opposite ?o ?p1) )
          (hold-while (agent_holds ?p1) (adjacent ?p1 ?p1) (in_motion ?p1) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count-once-per-objects blockToBinFromRug:dodgeball) 0 5 (count blockToBinFromRug:block) (* (* (count-once greenObjectMovedToRoomCenter:basketball) 7 )
        10
      )
      (count-once-per-objects dodgeballsInPlace:hexagonal_bin)
      5
      (+ (count-once-per-external-objects dodgeballsInPlace:green) 3 )
      0.5
    )
    15
  )
)
(:scoring
  (- (count-once-per-objects ballThrownMissesEverything:golfball:blue_dodgeball) )
)
)



(define (game game-id-306) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (and
      (not
        (on ?c ?o)
      )
      (agent_holds ?b)
      (not
        (in_motion ?w1)
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - cylindrical_block)
      (and
        (preference throwAttempt
          (exists (?h - shelf)
            (then
              (once (same_type ?b ?h) )
              (once (exists (?c2 - hexagonal_bin) (and (agent_holds ?d) (between ?b ?r ?c2) (agent_holds ?h) (and (agent_holds ?d) (and (agent_holds ?d) ) ) (equal_x_position ?d ?c2) (not (and (in ?h agent) (and (same_type ?o bridge_block) (in_motion ?d) ) (not (not (not (not (broken ?d) ) ) ) ) ) ) (faces rug ?h) ) ) )
              (once (in ?b5 ?d) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (total-score) (count-once-per-objects throwAttempt:dodgeball) )
)
(:scoring
  (count-once-per-objects throwAttempt:side_table)
)
)



(define (game game-id-307) (:domain few-objects-room-v1)
(:setup
  (forall (?b - flat_block ?o - shelf ?d1 - block)
    (and
      (game-conserved
        (agent_holds ?d)
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?db - hexagonal_bin ?b - dodgeball)
        (then
          (once (in_motion ?b) )
          (hold (or (on desk ?h) (and (is_setup_object ?b) (adjacent ?b ?b) (in ?b1 ?p2) (and (< (distance room_center ?b) 8) (not (adjacent room_center ?b) ) (>= (x_position ?b) 3) (and (in_motion ?b) (in_motion ?b) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ 10 3 )
    (* 3 15 )
  )
)
(:scoring
  (+ 4 6 )
)
)



(define (game game-id-308) (:domain medium-objects-room-v1)
(:setup
  (exists (?c - hexagonal_bin ?o2 - dodgeball)
    (game-conserved
      (adjacent_side ?h back ?o2)
    )
  )
)
(:constraints
  (and
    (preference redDodgeballThrownToBin
      (exists (?o - hexagonal_bin)
        (then
          (once (and (< 1 (distance ?h ?b)) (not (agent_holds ?o) ) (not (agent_holds ?o) ) (not (adjacent ?w1 ?d) ) ) )
          (once (not (in_motion ?o1) ) )
          (hold-while (not (agent_holds ?p) ) (in_motion ?g) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (count redDodgeballThrownToBin:yellow:doggie_bed) (external-forall-maximize (count redDodgeballThrownToBin:pink) ) )
      (>= 6 (count-once redDodgeballThrownToBin:red) )
    )
    (> 3 4 )
  )
)
(:scoring
  (count-once redDodgeballThrownToBin:dodgeball:golfball)
)
)



(define (game game-id-309) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (in_motion ?b)
  )
)
(:constraints
  (and
    (preference ballThrownIntoTarget
      (exists (?b4 - hexagonal_bin)
        (then
          (hold (same_color ?h ?b4) )
          (once (on ?d ?b4) )
          (hold (and (and (touch ?b4 ?b) (agent_holds ?t) ) (in_motion ?d) (adjacent ?w2 pink_dodgeball) ) )
        )
      )
    )
    (forall (?d - hexagonal_bin)
      (and
        (preference throwMissesBin
          (exists (?w1 - cube_block ?s - (either desktop desktop) ?d - hexagonal_bin ?d - cube_block)
            (then
              (once (and (agent_holds ?b2) (exists (?o - chair) (agent_holds ?b) ) ) )
              (once (and (agent_holds ?l) (in_motion ?b) ) )
              (hold (and (not (faces ?d ?b) ) (agent_holds ?d) ) )
            )
          )
        )
        (preference blockInTowerAtEnd
          (exists (?c2 ?t1 ?w - golfball)
            (at-end
              (and
                (agent_holds ?w)
                (game_over )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (+ (* (count-longest ballThrownIntoTarget:basketball:dodgeball) 18 )
      3
    )
    (count blockInTowerAtEnd:hexagonal_bin)
  )
)
(:scoring
  (count blockInTowerAtEnd:green)
)
)



(define (game game-id-310) (:domain medium-objects-room-v1)
(:setup
  (forall (?d - dodgeball)
    (and
      (game-optional
        (not
          (>= 1 (distance_side rug left ?c ?d))
        )
      )
      (game-conserved
        (agent_holds ?r)
      )
    )
  )
)
(:constraints
  (and
    (preference throwToBinFromOppositeWall
      (exists (?c - triangular_ramp ?h - building)
        (then
          (once (adjacent ?h ?h) )
          (once (agent_holds ?s) )
          (once (touch ?b ?h) )
        )
      )
    )
  )
)
(:terminal
  (= (+ 10 (* (count throwToBinFromOppositeWall:purple) (+ (* 10 (count-total throwToBinFromOppositeWall) )
          3
        )
        30
      )
    )
    (count-once-per-objects throwToBinFromOppositeWall:pink)
  )
)
(:scoring
  (* (+ (= (count throwToBinFromOppositeWall) (count throwToBinFromOppositeWall:hexagonal_bin) )
      (* 8 (count-once-per-objects throwToBinFromOppositeWall:beachball) )
    )
    (count throwToBinFromOppositeWall)
  )
)
)



(define (game game-id-311) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds agent)
  )
)
(:constraints
  (and
    (forall (?g - game_object)
      (and
        (preference blockIncorrectlyPicked
          (exists (?b - chair)
            (at-end
              (not
                (agent_holds ?b)
              )
            )
          )
        )
        (preference ballThrownIntoTarget
          (exists (?b - (either pyramid_block pencil) ?b - hexagonal_bin ?h - teddy_bear ?h - hexagonal_bin)
            (then
              (hold (in ?g ?h) )
              (once (game_start ) )
              (once (< (distance desk ?c) (distance ?c ?c1)) )
            )
          )
        )
        (preference thrownObjectHitsComputer
          (exists (?h - game_object ?b9 - bridge_block)
            (at-end
              (agent_holds ?l)
            )
          )
        )
      )
    )
    (preference objectThrownFromRug
      (exists (?tb - (either cube_block golfball pyramid_block) ?o4 - ball ?o - hexagonal_bin ?h - hexagonal_bin)
        (then
          (once (not (in_motion ?h) ) )
          (once (and (agent_holds ?h) (or (and (agent_holds ?d) (exists (?c3 - hexagonal_bin ?w1 - pyramid_block) (in_motion ?b) ) ) (in_motion ?h) (adjacent ?h ?d) ) (is_setup_object ?b) ) )
          (once (rug_color_under ?h pink) )
        )
      )
    )
  )
)
(:terminal
  (or
    (<= (count blockIncorrectlyPicked:dodgeball) (total-time) )
    (>= 1 (count-same-positions thrownObjectHitsComputer:basketball) )
  )
)
(:scoring
  (count-once-per-objects thrownObjectHitsComputer:green)
)
)



(define (game game-id-312) (:domain few-objects-room-v1)
(:setup
  (exists (?l1 - hexagonal_bin)
    (exists (?o2 - hexagonal_bin ?d - hexagonal_bin ?o5 - cube_block)
      (game-conserved
        (object_orientation ?o5 sideways)
      )
    )
  )
)
(:constraints
  (and
    (forall (?t - dodgeball)
      (and
        (preference bookOnDeskShelf
          (exists (?l1 - ball)
            (then
              (hold (not (on ?t ?l1) ) )
              (once (in_motion ?t) )
              (once (not (agent_holds ?l1) ) )
            )
          )
        )
      )
    )
    (preference blockInTowerKnockedByDodgeball
      (exists (?c - dodgeball)
        (at-end
          (agent_holds bed)
        )
      )
    )
    (forall (?d - cube_block ?h - flat_block)
      (and
        (preference throwAttempt
          (exists (?o3 ?d ?b ?c6 - dodgeball)
            (then
              (hold (in_motion ?o3) )
              (hold (agent_holds ?o) )
              (hold (same_object ?c6 ?o3) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (not
      (>= (count blockInTowerKnockedByDodgeball:book) 6 )
    )
    (>= (count bookOnDeskShelf:red:beachball) (total-score) )
    (> (* (count blockInTowerKnockedByDodgeball:red) (= 1 )
      )
      3
    )
  )
)
(:scoring
  (count-once-per-objects throwAttempt:yellow_cube_block)
)
)



(define (game game-id-313) (:domain medium-objects-room-v1)
(:setup
  (forall (?b - building)
    (forall (?w1 ?d - hexagonal_bin)
      (game-optional
        (in ?d ?b)
      )
    )
  )
)
(:constraints
  (and
    (forall (?g - teddy_bear)
      (and
        (preference throwToBinFromDistance
          (exists (?w - (either book doggie_bed))
            (then
              (once (and (in_motion ?w) (and (not (and (and (agent_holds ?b) (not (and (in_motion ?o) (not (in_motion ?o) ) ) ) (not (same_color ?w yellow) ) ) (on ?w ?b) (not (same_type ?l1 ?g) ) (and (rug_color_under ?w green) (on ?g ?d) (and (in_motion ?w) (not (< (building_size ?w) (distance agent ?w)) ) (and (and (forall (?ob - dodgeball) (> 1 1) ) (agent_holds ?h) ) (on ?c6 ?w) ) (or (or (on ?x ?d) (agent_holds ?w) ) (same_object ?g ?d) (agent_holds ?r) ) (and (and (and (agent_holds ?w) (forall (?h - building) (and (in_motion ?d) (adjacent ?w ?o4) ) ) ) (agent_holds ?w) ) (in_motion ?w) ) (and (in_motion ?w) (adjacent ?w ?b) ) (rug_color_under ?b ?w) (and (not (not (agent_holds ?g) ) ) (not (on ?d ?b) ) ) (or (in ?g ?g) (agent_holds ?w) ) (not (in_motion ?w) ) (adjacent ?c ?w) (in ?b ?w) ) ) ) ) (and (not (and (same_type ?w bridge_block) (in ?o bed) ) ) (and (in_motion ?d) (agent_holds ?w) (and (is_setup_object ?d) ) ) ) ) ) )
              (once (and (agent_holds ?h) (exists (?c2 - hexagonal_bin) (in_motion ?w) ) ) )
              (once (in_motion ?g) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= 5 (* 3 (+ (count-once-per-objects throwToBinFromDistance:red:hexagonal_bin) 3 3 )
    )
  )
)
(:scoring
  (count throwToBinFromDistance:yellow)
)
)



(define (game game-id-314) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (in_motion ?b)
  )
)
(:constraints
  (and
    (preference objectMoved
      (exists (?h - wall ?b1 - ball)
        (at-end
          (not
            (is_setup_object ?b1)
          )
        )
      )
    )
    (forall (?p2 - sliding_door)
      (and
        (preference watchOnShelf
          (exists (?o - cube_block ?o - hexagonal_bin)
            (then
              (once (agent_holds ?o) )
              (hold (not (forall (?c4 - block ?x - cube_block ?p - hexagonal_bin) (not (exists (?d - hexagonal_bin ?b - triangular_ramp) (touch ?b ?o) ) ) ) ) )
              (once (agent_holds ?d) )
            )
          )
        )
        (preference itemsHidingScreens
          (exists (?b2 - cube_block)
            (at-end
              (in_motion ?t)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (total-score) (count itemsHidingScreens:hexagonal_bin) )
  )
)
(:scoring
  (count itemsHidingScreens:beachball:red)
)
)



(define (game game-id-315) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?c - game_object)
      (and
        (forall (?c3 - hexagonal_bin)
          (exists (?b5 - curved_wooden_ramp)
            (game-conserved
              (and
                (in_motion ?s)
                (agent_holds ?c)
                (and
                  (and
                    (not
                      (in ?d ?b)
                    )
                    (not
                      (< (distance ?h ?c) 2)
                    )
                  )
                  (not
                    (and
                      (agent_holds ?c3)
                      (touch ?c3 ?b)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference laptopAndBookInPlace
      (exists (?t2 - (either cd game_object pillow) ?ob - shelf)
        (then
          (hold (agent_holds ?d) )
          (once (in_motion ?c) )
          (once (touch ?ob ?ob) )
        )
      )
    )
    (preference blockOnBlockInTowerAtEnd
      (exists (?c2 - hexagonal_bin)
        (then
          (once (on ?c2 ?t) )
          (once (not (on ?o ?c2) ) )
          (once (and (touch ?c2 ?c2) (and (and (in_motion ?c2) ) (and (not (not (adjacent ?c2 ?c) ) ) (adjacent ?c2 ?c2) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (+ (+ (* (* (+ (count laptopAndBookInPlace:purple) (* (* (- 4 )
                    (+ 5 (external-forall-maximize (count-once-per-objects laptopAndBookInPlace:dodgeball) ) (count blockOnBlockInTowerAtEnd:green:yellow) (* (* 2 (count blockOnBlockInTowerAtEnd:dodgeball) )
                        (count-increasing-measure laptopAndBookInPlace:purple:dodgeball)
                        (count-once-per-objects laptopAndBookInPlace:green)
                      )
                    )
                  )
                  (count laptopAndBookInPlace:dodgeball:dodgeball)
                )
              )
              -30
              5
              (+ (* (* 1 60 (count laptopAndBookInPlace:dodgeball) (count blockOnBlockInTowerAtEnd:golfball) (* 3 (* 100 )
                      3
                      2
                      1
                      (count-once-per-objects laptopAndBookInPlace:red)
                    )
                    (+ 5 )
                  )
                  (- 3 )
                  8
                )
                (* (count-once-per-external-objects blockOnBlockInTowerAtEnd:beachball:golfball) 10 (count-once-per-objects blockOnBlockInTowerAtEnd:basketball:dodgeball) )
                (count laptopAndBookInPlace:doggie_bed:golfball)
                (count-same-positions blockOnBlockInTowerAtEnd:orange)
                6
                (* (* (* 10 4 )
                    4
                  )
                  8
                )
              )
              (count-shortest laptopAndBookInPlace:alarm_clock)
              3
              (<= 1 (count-overlapping laptopAndBookInPlace:red) )
              (* (count-once laptopAndBookInPlace:blue_dodgeball:golfball) 6 )
              (count-once-per-objects blockOnBlockInTowerAtEnd:blue_dodgeball)
              (count blockOnBlockInTowerAtEnd:rug)
              (+ 15 (count blockOnBlockInTowerAtEnd:block) )
              (count-overlapping blockOnBlockInTowerAtEnd:red)
            )
            (count-measure laptopAndBookInPlace:red)
          )
          (* 2 (* (* 2 (external-forall-maximize (* (count-once-per-objects blockOnBlockInTowerAtEnd:basketball:dodgeball) (* 1 (* (* 100 6 )
                        10
                      )
                    )
                    6
                  )
                )
              )
              (count-once-per-objects laptopAndBookInPlace:dodgeball)
            )
          )
          (count laptopAndBookInPlace:dodgeball:dodgeball)
        )
        (count-total laptopAndBookInPlace:dodgeball)
      )
      2
    )
    10
  )
)
(:scoring
  (- 1 )
)
)



(define (game game-id-316) (:domain medium-objects-room-v1)
(:setup
  (forall (?d1 - dodgeball ?r - hexagonal_bin)
    (and
      (game-optional
        (agent_holds ?r)
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballHitsBinBottom
      (exists (?b - ball)
        (at-end
          (adjacent agent ?b)
        )
      )
    )
  )
)
(:terminal
  (= (total-score) (total-score) )
)
(:scoring
  (count-unique-positions dodgeballHitsBinBottom:hexagonal_bin)
)
)



(define (game game-id-317) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (in_motion ?c)
  )
)
(:constraints
  (and
    (preference throwFromBehindChairsInBin
      (exists (?b1 - hexagonal_bin)
        (then
          (once (not (in_motion ?t) ) )
          (once (and (in_motion ?b1) (is_setup_object ?d) ) )
          (hold (agent_holds ?b1) )
        )
      )
    )
    (forall (?b8 - hexagonal_bin ?o5 - hexagonal_bin)
      (and
        (preference throwObjectToBin
          (exists (?c2 - hexagonal_bin)
            (at-end
              (not
                (same_object ?h ?c2)
              )
            )
          )
        )
        (preference thrownBallReachesEnd
          (exists (?h - teddy_bear ?ob - hexagonal_bin)
            (at-end
              (and
                (in_motion ?ob)
                (not
                  (not
                    (not
                      (exists (?b10 - color)
                        (not
                          (not
                            (and
                              (not
                                (and
                                  (and
                                    (on ?b ?o)
                                    (not
                                      (and
                                        (not
                                          (on ?ob ?d)
                                        )
                                        (not
                                          (and
                                            (opposite ?b6 ?h)
                                            (and
                                              (< 1 (distance_side agent ?o5 ?p))
                                              (agent_holds ?o)
                                            )
                                          )
                                        )
                                        (not
                                          (agent_holds top_drawer)
                                        )
                                      )
                                    )
                                  )
                                  (agent_holds ?o5)
                                )
                              )
                              (agent_holds ?o5)
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
    (preference dodgeballThrownToBinFromDesk
      (exists (?l4 - hexagonal_bin)
        (then
          (once (touch ?l4 ?l4) )
          (once (in_motion ?l1) )
          (once (and (not (and (between ?c ?l4 ?l4) (agent_holds ?d) (< (distance ?h ?l4) 1) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (count-once-per-external-objects throwFromBehindChairsInBin:red) (total-score) )
    (>= (* (count-once-per-objects throwObjectToBin:blue_dodgeball) 180 (count-once-per-external-objects throwObjectToBin:basketball) 10 )
      2
    )
  )
)
(:scoring
  (external-forall-maximize
    (count thrownBallReachesEnd:cube_block)
  )
)
)



(define (game game-id-318) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (in_motion ?ob)
  )
)
(:constraints
  (and
    (preference itemInClosedDrawerAtEnd
      (exists (?b8 - teddy_bear ?b6 - cube_block)
        (then
          (hold (in_motion top_shelf) )
          (once (adjacent room_center ?b6) )
        )
      )
    )
    (preference ballThrownToRampToBed
      (exists (?c - (either cube_block triangle_block) ?h - triangular_ramp)
        (then
          (once (not (and (in_motion ?h) (and (agent_holds bed) (and (not (on ?t agent) ) (and (in ?h ?h) (in_motion ?g) (in_motion ?b) ) ) (on ?h ?h) ) (in ?l1 ?h) (agent_holds ?o) ) ) )
          (once (not (and (in_motion ?d) (< (distance room_center ?o) 1) ) ) )
          (hold (not (agent_holds rug) ) )
        )
      )
    )
    (preference throwFromBehindChairsInBin
      (exists (?c4 - game_object)
        (then
          (hold (between ?c4 ?c4 ?h) )
          (once (on ?c2 ?d) )
          (once (not (on ?bl ?b) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 2 (= (count throwFromBehindChairsInBin:dodgeball:beachball) (count-overlapping throwFromBehindChairsInBin:doggie_bed) )
    )
  )
)
(:scoring
  (* (count ballThrownToRampToBed:orange:pink) (* (count-once itemInClosedDrawerAtEnd:green) (count-once-per-external-objects ballThrownToRampToBed:pink:brown:dodgeball) )
  )
)
)



(define (game game-id-319) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (object_orientation ?b sideways)
  )
)
(:constraints
  (and
    (preference throwTeddyOntoPillow
      (exists (?c - ball)
        (then
          (once (and (in_motion ?d) (exists (?b8 ?h ?h - hexagonal_bin) (in_motion ?ob) ) ) )
          (once (and (and (and (and (agent_holds ?c) (agent_holds ?d) (and (or (< 6 (distance_side ?c front ?b)) (agent_holds ?c) ) (on ?c ?c) ) (agent_holds ?l1) ) (< 1 (distance agent ?b)) (agent_holds ?c) ) (on rug ?b) ) (in_motion ?c) ) )
          (once (same_type ?c bridge_block) )
        )
      )
    )
    (preference watchOnShelf
      (exists (?h - game_object)
        (then
          (hold (object_orientation ?d upright) )
          (hold-while (in_motion ?h) (not (and (exists (?b - ball) (exists (?c - dodgeball) (agent_holds ?b) ) ) (not (not (in ?h ?h) ) ) ) ) )
          (once (exists (?b - shelf) (in_motion ?h) ) )
        )
      )
    )
    (preference ballKnocksTeddy
      (exists (?b1 - doggie_bed)
        (then
          (hold (equal_z_position agent ?b1) )
          (hold-while (in_motion ?b1) (in_motion ?b1) )
          (hold-while (not (in_motion ?b1) ) (and (on ?c ?b1) (agent_holds ?b1) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* (count watchOnShelf:golfball) (* 1 (* (- 10 )
            (count ballKnocksTeddy:dodgeball)
          )
        )
      )
      1
    )
    (or
      (> (* 2 (count ballKnocksTeddy:beachball) )
        6
      )
      (>= (* (count watchOnShelf:red) (* 3 (count throwTeddyOntoPillow:dodgeball) )
        )
        10
      )
    )
    (>= 2 5 )
  )
)
(:scoring
  (count-once-per-objects watchOnShelf:beachball)
)
)



(define (game game-id-320) (:domain many-objects-room-v1)
(:setup
  (exists (?t - dodgeball)
    (forall (?t - beachball)
      (game-conserved
        (and
          (touch ?t ?l1)
          (on ?b ?t)
          (same_type desk block)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference thrownObjectHitsComputer
      (exists (?d - game_object)
        (then
          (once (and (agent_holds ?l) (touch ?d ?d) ) )
          (hold (in_motion rug) )
          (once (in ?c2 ?d) )
        )
      )
    )
    (preference dodgeballHitsBinBottom
      (exists (?d - dodgeball ?h - building)
        (then
          (once (in ?h ?h) )
          (once (adjacent ?h ?h) )
          (once (on ?h ?g) )
        )
      )
    )
    (preference beachballBouncedOffRamp
      (exists (?c - hexagonal_bin)
        (then
          (hold-while (and (exists (?d - hexagonal_bin) (adjacent_side desk front ?d) ) (same_color ?c ?c) ) (exists (?b1 - curved_wooden_ramp ?o2 - hexagonal_bin) (not (adjacent_side agent front_left_corner rug) ) ) (not (on ?c ?c) ) (adjacent ?c ?c) )
          (once (and (on ?o ?r) (game_over ) ) )
          (once (broken ?c) )
        )
      )
    )
  )
)
(:terminal
  (= 2 10 )
)
(:scoring
  (external-forall-maximize
    (count dodgeballHitsBinBottom:hexagonal_bin)
  )
)
)



(define (game game-id-321) (:domain many-objects-room-v1)
(:setup
  (exists (?d - building)
    (or
      (and
        (game-conserved
          (agent_holds ?o)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballNeverThrown
      (exists (?b4 - hexagonal_bin)
        (at-end
          (same_color ?b4 yellow)
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects ballNeverThrown:beachball:dodgeball:yellow) 3 )
)
(:scoring
  (* (count ballNeverThrown:green) (>= (count-once-per-objects ballNeverThrown:golfball) (count-once ballNeverThrown:yellow) )
  )
)
)



(define (game game-id-322) (:domain medium-objects-room-v1)
(:setup
  (forall (?h ?r1 - hexagonal_bin)
    (and
      (game-conserved
        (not
          (not
            (not
              (and
                (agent_holds ?d)
                (and
                  (in_motion ?r1)
                  (agent_holds agent)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?l2 - dodgeball ?b - dodgeball ?p - shelf)
      (and
        (preference ballThrownFromBehindBlock
          (exists (?o - teddy_bear ?l4 - building)
            (then
              (once (in ?l4 ?s) )
              (once (and (broken ?b) (and (on ?l4 ?l4) (in_motion ?b) ) ) )
              (once (adjacent_side ?l4 front ?d front_left_corner) )
            )
          )
        )
      )
    )
    (forall (?bl - curved_wooden_ramp)
      (and
        (preference throwBallToDoggieBed
          (exists (?b2 - triangular_ramp)
            (then
              (once (opposite ?bl ?o) )
              (once (adjacent_side ?b2 ?b2 ?b2) )
              (once (in ?bl ?b) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> 6 20 )
)
(:scoring
  (* (count ballThrownFromBehindBlock:beachball) (count ballThrownFromBehindBlock:beachball) )
)
)



(define (game game-id-323) (:domain medium-objects-room-v1)
(:setup
  (forall (?d1 - red_dodgeball ?h - hexagonal_bin)
    (or
      (forall (?t - cube_block ?c1 - watch ?d2 - (either book dodgeball))
        (exists (?o5 - wall ?c - wall ?c5 - curved_wooden_ramp)
          (exists (?t - game_object)
            (not
              (forall (?d - hexagonal_bin ?d ?d - hexagonal_bin ?ob - cube_block)
                (and
                  (exists (?h - block)
                    (exists (?ob - hexagonal_bin ?b - desk_shelf ?d - wall)
                      (game-conserved
                        (on ?d ?c)
                      )
                    )
                  )
                  (game-conserved
                    (in ?h ?o1)
                  )
                )
              )
            )
          )
        )
      )
      (game-optional
        (and
          (and
            (on ?h ?l)
            (and
              (not
                (in_motion ?d)
              )
              (and
                (and
                  (agent_holds ?l1)
                  (and
                    (in_motion ?h)
                    (in ?h ?d)
                  )
                  (in_motion ?h)
                  (in_motion ?h)
                  (and
                    (same_color ?h blue)
                    (adjacent rug ?h)
                  )
                  (not
                    (and
                      (agent_holds ?d)
                      (agent_holds ?g)
                    )
                  )
                  (not
                    (and
                      (adjacent desk desk)
                      (and
                        (agent_holds ?o)
                        (in desk ?h)
                        (and
                          (equal_z_position ?c ?h)
                          (agent_holds ?b)
                        )
                        (forall (?l2 - curved_wooden_ramp)
                          (in_motion ?o3)
                        )
                      )
                    )
                  )
                )
                (in ?o2 ?d)
              )
              (not
                (same_type ?h ?h)
              )
            )
            (opposite ?h ?h)
          )
          (and
            (on ?h ?h)
            (not
              (is_setup_object ?b)
            )
          )
          (in_motion ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockPickedUp
      (exists (?d1 - hexagonal_bin ?h - shelf)
        (then
          (hold (and (agent_crouches ) (adjacent_side desk left ?h) ) )
          (once (in ?b ?h) )
          (once (and (agent_holds ?b1) (adjacent_side ?h back ?h) ) )
        )
      )
    )
    (preference blockPlacedInBuilding
      (exists (?b10 - doggie_bed ?r - hexagonal_bin)
        (then
          (hold (in_motion ?b) )
          (once (in_motion ?r) )
          (once (in_motion ?t) )
        )
      )
    )
  )
)
(:terminal
  (<= (total-time) 10 )
)
(:scoring
  (count-same-positions blockPlacedInBuilding:basketball)
)
)



(define (game game-id-324) (:domain many-objects-room-v1)
(:setup
  (and
    (game-optional
      (exists (?b1 - hexagonal_bin)
        (in_motion ?h)
      )
    )
  )
)
(:constraints
  (and
    (forall (?c - dodgeball)
      (and
        (preference redDodgeballThrownToBinWithoutTouchingFloor
          (exists (?b - doggie_bed)
            (then
              (once (adjacent ?w2 ?b) )
              (hold-while (in_motion ?c) (agent_holds ?c) )
              (hold-while (in_motion ?b) (in_motion ?c) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (count-once-per-objects redDodgeballThrownToBinWithoutTouchingFloor:dodgeball) (total-score) )
    (or
      (<= (count redDodgeballThrownToBinWithoutTouchingFloor:yellow_cube_block:cylindrical_block) (count redDodgeballThrownToBinWithoutTouchingFloor:hexagonal_bin) )
      (or
        (>= (count-same-positions redDodgeballThrownToBinWithoutTouchingFloor:basketball) (* (count-once-per-objects redDodgeballThrownToBinWithoutTouchingFloor:orange:dodgeball) (count redDodgeballThrownToBinWithoutTouchingFloor) )
        )
        (or
          (or
            (>= (count-once-per-objects redDodgeballThrownToBinWithoutTouchingFloor:green:tan:dodgeball) 6 )
            (>= (count redDodgeballThrownToBinWithoutTouchingFloor:red:hexagonal_bin) (count redDodgeballThrownToBinWithoutTouchingFloor:beachball:blue) )
          )
          (>= (total-score) (count redDodgeballThrownToBinWithoutTouchingFloor:pink:blue_dodgeball) )
          (>= (- (count redDodgeballThrownToBinWithoutTouchingFloor:golfball:dodgeball) )
            (count-once redDodgeballThrownToBinWithoutTouchingFloor:blue_dodgeball)
          )
        )
        (>= (* 15 (count-once-per-objects redDodgeballThrownToBinWithoutTouchingFloor:dodgeball:yellow) )
          2
        )
      )
    )
  )
)
(:scoring
  (count redDodgeballThrownToBinWithoutTouchingFloor:basketball)
)
)



(define (game game-id-325) (:domain many-objects-room-v1)
(:setup
  (forall (?b4 - block ?h - game_object ?p - drawer)
    (exists (?g - cube_block)
      (game-conserved
        (in_motion ?o)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownFromObjectToBin
      (exists (?d - chair)
        (then
          (once (object_orientation ?b2 upright) )
          (once (not (in ?d ?h) ) )
        )
      )
    )
  )
)
(:terminal
  (<= (count ballThrownFromObjectToBin:blue_dodgeball) (total-score) )
)
(:scoring
  (count-once ballThrownFromObjectToBin:yellow)
)
)



(define (game game-id-326) (:domain few-objects-room-v1)
(:setup
  (forall (?c - hexagonal_bin)
    (game-optional
      (and
        (in_motion ?c)
        (in ?b4 ?l1)
        (adjacent_side ?h left ?b)
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballAndBasketballInBin
      (exists (?c - building)
        (then
          (once-measure (and (and (and (in_motion ?b) (adjacent door ?c) (on ?c ?c) ) ) (agent_holds ?c) (and (in_motion ?o3) (on ?d ?o) (< (x_position ?b) (distance ?c ?b4)) ) (on ?c ?c) ) (distance_side agent ?c ?c front) )
          (once (and (and (on ?o bed) (agent_holds ?c) (faces ?c ?c) ) (agent_holds ?d) ) )
          (hold-while (exists (?p - golfball ?h - dodgeball) (object_orientation ?h upside_down) ) (not (agent_holds ?c) ) (adjacent ?c ?o) (same_color ?c ?c) )
        )
      )
    )
    (forall (?c - doggie_bed ?d - (either blue_cube_block dodgeball))
      (and
        (preference ballThrownToBin
          (exists (?l2 - yellow_cube_block)
            (then
              (hold (adjacent_side desk ?d ?d front) )
              (once (and (touch ?l2 ?o) (not (adjacent ?d ?b) ) ) )
              (hold (in_motion ?d) )
            )
          )
        )
        (preference blockToBinFromRug
          (exists (?o - hexagonal_bin)
            (at-end
              (and
                (adjacent ?c bed)
                (agent_holds ?h)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count ballThrownToBin:pink_dodgeball:yellow) (count-shortest blockToBinFromRug:red) )
)
(:scoring
  (* 8 (count dodgeballAndBasketballInBin:hexagonal_bin:pink) )
)
)



(define (game game-id-327) (:domain many-objects-room-v1)
(:setup
  (exists (?t1 - beachball)
    (game-optional
      (adjacent_side ?h back ?t1)
    )
  )
)
(:constraints
  (and
    (preference objectOnBed
      (exists (?b5 - cube_block)
        (at-end
          (broken ?b2)
        )
      )
    )
    (forall (?p - wall ?c - triangular_ramp)
      (and
        (preference throwMissesBin
          (exists (?s - hexagonal_bin ?b3 - (either dodgeball pillow cellphone) ?w2 - hexagonal_bin)
            (at-end
              (and
                (not
                  (in ?c ?h)
                )
                (in_motion ?b)
              )
            )
          )
        )
      )
    )
    (preference throwFromBehindChairsInBin
      (exists (?b - ball ?t - (either book pencil golfball))
        (at-end
          (and
            (in_motion ?t)
            (exists (?d - shelf ?d - shelf)
              (or
                (and
                  (in ?o desk)
                  (game_over )
                )
                (and
                  (not
                    (not
                      (agent_holds ?b)
                    )
                  )
                  (agent_holds ?d)
                )
                (and
                  (and
                    (not
                      (touch ?d rug)
                    )
                    (and
                      (in_motion top_shelf)
                      (not
                        (agent_holds ?o)
                      )
                    )
                  )
                  (< 1 8)
                )
                (in ?d ?d)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) 15 )
)
(:scoring
  (count-overlapping objectOnBed:beachball)
)
)



(define (game game-id-328) (:domain medium-objects-room-v1)
(:setup
  (exists (?o - hexagonal_bin)
    (game-conserved
      (not
        (not
          (on ?o ?o)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballInOrOnBin
      (exists (?l - book)
        (then
          (hold (and (and (not (not (in_motion ?d) ) ) (not (and (on ?l ?l) (in ?l ?l) ) ) (>= (distance ?w1 ?l) (distance agent ?l)) ) (in ?w1 ?o) (>= 1 (distance door ?l)) ) )
          (hold (and (and (agent_holds ?l) (adjacent door ?l) (= 1 0) ) (and (rug_color_under ?d ?c) (in_motion ?g) ) (in_motion ?l) ) )
          (hold (agent_holds desk) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects ballInOrOnBin:green) (* 4 8 )
  )
)
(:scoring
  (* (count ballInOrOnBin:blue_dodgeball) (count-increasing-measure ballInOrOnBin:yellow_cube_block) )
)
)



(define (game game-id-329) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?b - wall)
      (exists (?h - dodgeball)
        (exists (?c ?c2 ?l2 ?b - hexagonal_bin)
          (and
            (game-conserved
              (touch ?b ?l2)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownFromObjectToBin
      (exists (?c1 - doggie_bed ?b ?h ?d ?p2 - (either pyramid_block pillow pen))
        (at-end
          (in ?p2 ?b)
        )
      )
    )
  )
)
(:terminal
  (< 2 (count ballThrownFromObjectToBin:beachball) )
)
(:scoring
  (+ 10 5 )
)
)



(define (game game-id-330) (:domain medium-objects-room-v1)
(:setup
  (exists (?t1 - hexagonal_bin)
    (game-conserved
      (not
        (and
          (agent_holds ?t1)
          (not
            (and
              (not
                (on rug ?t1)
              )
              (touch ?t1 ?t1)
              (agent_holds ?t1)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference redDodgeballThrownToBinWithoutTouchingFloor
      (exists (?x - curved_wooden_ramp)
        (at-end
          (not
            (not
              (or
                (not
                  (on ?b ?d)
                )
                (or
                  (and
                    (on ?h ?x)
                    (not
                      (adjacent ?c ?d)
                    )
                  )
                  (in_motion ?x)
                  (or
                    (and
                      (on ?x ?x)
                      (agent_holds ?x)
                    )
                    (between ?x ?b ?c3)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< (count redDodgeballThrownToBinWithoutTouchingFloor:golfball) 15 )
)
(:scoring
  (count-once-per-objects redDodgeballThrownToBinWithoutTouchingFloor:pink)
)
)



(define (game game-id-331) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (game-optional
        (adjacent ?h ?l2)
      )
    )
    (game-conserved
      (exists (?d - ball ?d - game_object)
        (in ?d ?d)
      )
    )
  )
)
(:constraints
  (and
    (forall (?b1 ?b1 - blue_cube_block)
      (and
        (preference pyramidBlockAtopTowerAtEnd
          (exists (?o3 - hexagonal_bin ?p3 - hexagonal_bin)
            (then
              (hold (exists (?o1 - shelf) (and (not (not (agent_holds ?p3) ) ) (not (agent_holds ?b) ) (exists (?d - color ?d2 - hexagonal_bin) (not (in_motion ?d) ) ) (agent_holds agent) ) ) )
              (once (> (distance ?p3 ?b1) (distance agent ?b)) )
              (once (and (<= (distance ?b1 ?g) (distance door ?db)) (in_motion ?p3) ) )
            )
          )
        )
      )
    )
    (forall (?c - (either bridge_block) ?d - hexagonal_bin)
      (and
        (preference blockThrowAttempt
          (then
            (hold (and (not (agent_holds ?d) ) (not (in_motion ?d) ) (in_motion ?d) ) )
            (hold (and (not (equal_z_position ?h ?h) ) (adjacent agent ?d) ) )
            (hold-while (and (agent_holds ?d) (not (not (and (not (not (and (adjacent desk ?d) (not (< 1 (distance ?d desk)) ) ) ) ) (and (on ?d agent) (and (agent_holds ?d) (not (or (adjacent_side door front ?d) (not (touch ?d ?d) ) ) ) ) (or (not (and (and (agent_holds ?c) (or (agent_holds ?b) (and (not (in_motion ?c) ) (and (adjacent_side ?h front ?d front) (and (agent_holds ?d) (in_motion ?d) ) ) ) ) (in ?d ?ob) ) (and (agent_holds ?d) (and (agent_holds ?d) (forall (?c - hexagonal_bin) (< 1 (distance ?d ?d)) ) ) ) ) ) (adjacent agent ?d) (is_setup_object ?d) ) (not (game_start ) ) (> (x_position door) (distance_side agent left ?b front)) (agent_holds ?h) ) ) ) ) ) (agent_holds ?c) )
          )
        )
      )
    )
    (preference objectsHidden
      (exists (?b2 - game_object)
        (then
          (hold (in_motion ?r) )
          (once (in_motion ?b2) )
          (hold (in ?d ?d) )
        )
      )
    )
  )
)
(:terminal
  (>= 10 6 )
)
(:scoring
  (count-once-per-objects blockThrowAttempt:pink)
)
)



(define (game game-id-332) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (< 1 (distance ?c1 ?b))
  )
)
(:constraints
  (and
    (preference dodgeballFromRugToBin
      (exists (?d - game_object ?r - block)
        (then
          (hold (on ?d ?b1) )
          (once (in_motion ?r) )
          (once (and (and (in_motion ?h) (in_motion ?h) (on ?r ?r) (and (not (not (not (agent_holds ?r) ) ) ) (agent_holds ?b) ) (in ?r ?r) (and (not (same_color ?r pink) ) (< (distance ?r ?r) (distance ?r ?d)) ) ) (agent_holds ?r) (equal_x_position room_center ?g) (agent_holds ?r) ) )
        )
      )
    )
    (preference blockInTowerAtEnd
      (exists (?b1 - wall ?b5 - dodgeball)
        (then
          (once-measure (on ?d ?c4) (distance south_wall ?o5) )
          (once (not (< 1 8) ) )
          (once (and (in_motion ?h) (and (and (and (on ?b5 ?b5) (agent_holds ?d) ) (on ?g ?g) ) (not (< 1 (distance ?c ?b5)) ) ) ) )
        )
      )
    )
    (forall (?g - block)
      (and
        (preference blockPickedUp
          (exists (?t ?b - hexagonal_bin)
            (then
              (once (and (not (touch ?c ?d) ) (and (not (agent_holds ?d) ) (same_color ?c2 ?c) (agent_holds rug) ) ) )
              (once (not (adjacent ?h ?b) ) )
              (once (in_motion ?p) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (+ 2 10 )
      5
    )
    (not
      (>= (count-longest blockPickedUp:blue_cube_block:orange) (* 16 6 )
      )
    )
  )
)
(:scoring
  (+ 6 15 2 )
)
)



(define (game game-id-333) (:domain many-objects-room-v1)
(:setup
  (exists (?t - game_object)
    (game-conserved
      (and
        (and
          (agent_holds ?t)
          (above ?d ?b)
        )
        (agent_holds ?b)
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToDoggieBed
      (exists (?tb - cylindrical_block)
        (then
          (once (and (agent_holds ?tb) (not (touch ?o ?d) ) ) )
          (once (touch ?b agent) )
          (once (not (and (not (agent_holds ?tb) ) (= (distance ?c ?tb) 2) ) ) )
        )
      )
    )
    (preference throwKnocksBlock
      (exists (?s - game_object)
        (then
          (once (and (agent_holds ?s) (not (equal_x_position bed ?s) ) ) )
          (hold (not (in_motion ?d) ) )
          (hold (not (agent_holds ?b) ) )
          (once (agent_holds ?s) )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (count-once-per-objects throwKnocksBlock:alarm_clock) 5 )
    (> (= 10 10 )
      (count-total throwBallToDoggieBed:golfball)
    )
  )
)
(:scoring
  (count-once-per-external-objects throwBallToDoggieBed:dodgeball)
)
)



(define (game game-id-334) (:domain few-objects-room-v1)
(:setup
  (exists (?c6 - doggie_bed ?d ?b6 ?d ?h ?b ?l2 - hexagonal_bin ?b7 ?d ?c1 ?b - golfball ?b3 - hexagonal_bin)
    (exists (?c5 - blue_cube_block)
      (and
        (forall (?b2 - yellow_pyramid_block)
          (game-optional
            (agent_holds ?c5)
          )
        )
        (game-conserved
          (> (distance ?h ?d) (distance ?w2 ?b))
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - watch ?c - dodgeball)
      (and
        (preference throwTeddyOntoPillow
          (exists (?c6 - block)
            (then
              (once (in ?c6 ?c6) )
              (once (agent_holds ?c) )
              (hold-while (in_motion ?c3) (<= 1 1) )
            )
          )
        )
        (preference throwInBin
          (exists (?c - hexagonal_bin)
            (then
              (once (is_setup_object ?c) )
              (once (not (agent_holds ?c) ) )
              (once (touch ?ob ?c) )
              (once (and (agent_holds ?c) (not (not (not (in_motion ?l) ) ) ) ) )
            )
          )
        )
        (preference ballOnBedAtEnd
          (exists (?l - dodgeball)
            (then
              (hold (not (object_orientation ?l upright) ) )
              (hold (exists (?b ?b1 - (either yellow_cube_block)) (and (agent_holds ?b1) (agent_holds ?b1) ) ) )
              (hold (opposite ?r ?c) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (>= (* (* 6 (= (count ballOnBedAtEnd:doggie_bed) (count-once-per-objects ballOnBedAtEnd:red) )
            (* 2 (* 6 2 (* 6 16 )
                5
                (count ballOnBedAtEnd:blue_dodgeball:dodgeball)
                2
              )
            )
          )
          (count ballOnBedAtEnd:red)
        )
        (count throwInBin:beachball)
      )
      2
    )
    (* (* (* 4 4 (count-once-per-objects throwTeddyOntoPillow:dodgeball:book) (count-once ballOnBedAtEnd:alarm_clock:blue_dodgeball) 5 )
        (count-once-per-external-objects ballOnBedAtEnd:basketball)
      )
      (+ (count throwInBin) (* 2 (* (* (* (count throwInBin:book) 8 (* (* (count-same-positions throwInBin:yellow:beachball) (count-once-per-objects throwTeddyOntoPillow:dodgeball) (+ (+ (count-same-positions ballOnBedAtEnd:dodgeball) (count-once-per-objects throwInBin:purple) )
                      (* 0.5 (count throwTeddyOntoPillow:dodgeball:basketball) )
                    )
                    (+ 10 300 )
                    (* (- (count-once-per-objects throwInBin:beachball) )
                      (+ 180 6 )
                    )
                    10
                  )
                  (* (count-once-per-external-objects throwTeddyOntoPillow:golfball) 5 )
                )
                (count-once-per-objects throwTeddyOntoPillow:alarm_clock)
                2
                4
              )
              (count throwTeddyOntoPillow:basketball:basketball)
            )
            (count-measure ballOnBedAtEnd:yellow_cube_block:pink_dodgeball)
          )
        )
      )
      (<= 9 (+ (count ballOnBedAtEnd:blue_dodgeball) (* 100 (- (count-overlapping throwInBin:golfball) (+ 5 5 )
            )
          )
        )
      )
    )
  )
)
(:scoring
  (* 10 (+ (count-once-per-objects ballOnBedAtEnd:green) (+ (+ (count ballOnBedAtEnd:yellow) (count-once-per-objects throwInBin) (count ballOnBedAtEnd:doggie_bed) 10 10 2 )
        (count-once-per-objects ballOnBedAtEnd:tall_cylindrical_block)
      )
    )
  )
)
)



(define (game game-id-335) (:domain medium-objects-room-v1)
(:setup
  (exists (?g - color)
    (exists (?ob - (either yellow_cube_block triangle_block) ?c1 - dodgeball)
      (and
        (exists (?g - hexagonal_bin)
          (exists (?w1 - flat_block)
            (and
              (game-conserved
                (in_motion ?c1)
              )
            )
          )
        )
        (forall (?c6 - curved_wooden_ramp ?o5 - dodgeball ?h - hexagonal_bin)
          (and
            (game-conserved
              (not
                (above ?g ?d)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownThroughRampAndBlocksToBin
      (exists (?o5 - hexagonal_bin)
        (then
          (hold (faces ?o5 ?d) )
          (once (not (and (and (not (in_motion ?o5) ) (faces ?b ?g) ) (agent_holds ?o3) ) ) )
          (hold (not (adjacent ?c ?o5) ) )
        )
      )
    )
    (forall (?c1 - ball)
      (and
        (preference golfballLandsInBinThroughRamp
          (exists (?b7 - dodgeball)
            (at-end
              (object_orientation ?b7 upright)
            )
          )
        )
        (preference throwBallToBinOffObject
          (exists (?b7 - hexagonal_bin)
            (then
              (hold-while (and (and (and (in_motion ?c1) (in_motion ?d) ) (agent_holds ?h) ) (object_orientation ?c1 upside_down) (in ?b7 ?p) ) (in_motion ?b) )
              (hold (not (agent_holds ?d) ) )
              (once (not (is_setup_object ?c1) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (and
      (not
        (>= 6 (* 100 (< (> (count-unique-positions golfballLandsInBinThroughRamp:doggie_bed) (count throwBallToBinOffObject:dodgeball:purple) )
              (* (+ (count-total ballThrownThroughRampAndBlocksToBin:cylindrical_block) (+ 100 2 )
                )
                (count throwBallToBinOffObject:blue_dodgeball:dodgeball)
                (external-forall-maximize
                  (count-once-per-objects golfballLandsInBinThroughRamp:green)
                )
              )
            )
          )
        )
      )
    )
    (>= (total-time) (count-measure ballThrownThroughRampAndBlocksToBin:yellow) )
  )
)
(:scoring
  (count golfballLandsInBinThroughRamp:basketball)
)
)



(define (game game-id-336) (:domain medium-objects-room-v1)
(:setup
  (forall (?t - (either beachball red dodgeball))
    (game-conserved
      (touch ?g ?d)
    )
  )
)
(:constraints
  (and
    (preference throwFromBehindChairsInBin
      (exists (?o1 - block ?c - shelf ?h - golfball)
        (then
          (once (in_motion ?c) )
          (hold-while (on ?h ?h) (on ?h ?b1) )
          (once (in ?h ?h) )
        )
      )
    )
    (forall (?c - doggie_bed)
      (and
        (preference objectWithMatchingColor
          (exists (?t2 - dodgeball ?d - teddy_bear)
            (then
              (hold (not (and (and (adjacent side_table ?h) (rug_color_under ?d ?c) ) (not (and (or (> 1 (distance_side desk right ?c)) (agent_holds ?c) (in_motion ?t1) ) (and (adjacent south_wall ?o1) (and (in ?g ?b1) (not (= 2 (distance ?d ?o)) ) ) ) ) ) ) ) )
              (once (agent_holds ?o) )
            )
          )
        )
      )
    )
    (preference ballThrownFromDoor
      (exists (?b - pillow ?h - doggie_bed)
        (then
          (once (not (broken ?b6) ) )
          (once (adjacent_side ?h front_left_corner ?h) )
          (once (and (in ?d ?h) (in ?h ?g) ) )
        )
      )
    )
  )
)
(:terminal
  (= (total-score) 0 )
)
(:scoring
  (count throwFromBehindChairsInBin:dodgeball)
)
)



(define (game game-id-337) (:domain many-objects-room-v1)
(:setup
  (exists (?s - dodgeball ?c2 - doggie_bed)
    (forall (?w - ball)
      (and
        (and
          (game-conserved
            (on ?d ?c2)
          )
          (exists (?o - (either cube_block tall_cylindrical_block) ?c - building)
            (game-optional
              (agent_crouches )
            )
          )
        )
        (and
          (game-conserved
            (same_color ?w ?w)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?l2 - ball)
      (and
        (preference throwBallToDoggieBedOffWall
          (then
            (hold (not (in_motion ?p) ) )
            (once (or (adjacent ?l2 ?l2) (and (in_motion ?d) (same_type ?l ?l2) ) ) )
            (hold (agent_holds ?l2) )
          )
        )
        (preference blindsOpened
          (exists (?s - dodgeball)
            (then
              (once (and (and (agent_holds ?s) (in_motion agent) (agent_crouches ) ) (not (on ?o ?s) ) ) )
              (once (forall (?h ?l - (either book cellphone)) (on ?g ?l2) ) )
              (hold (agent_holds ?l2) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (and
        (>= 25 (count blindsOpened:hexagonal_bin) )
        (>= (count throwBallToDoggieBedOffWall:dodgeball) 2 )
        (or
          (>= (count-measure throwBallToDoggieBedOffWall:dodgeball) (total-score) )
          (>= (count-once-per-external-objects blindsOpened:beachball) (count-shortest blindsOpened:doggie_bed) )
          (and
            (>= (* 9 3 )
              (count-overlapping throwBallToDoggieBedOffWall:dodgeball)
            )
            (>= (count-longest blindsOpened:dodgeball:pink_dodgeball) (count-once-per-objects throwBallToDoggieBedOffWall:red) )
            (> 10 (total-score) )
          )
          (>= (- (* (count blindsOpened:yellow) 3 )
              (- (count blindsOpened:pink) )
            )
            (* 30 9 )
          )
        )
      )
      (or
        (>= (count throwBallToDoggieBedOffWall:pink:beachball) (total-time) )
        (or
          (or
            (or
              (>= (total-time) (> (* (+ (* (count-once-per-external-objects blindsOpened:beachball) 2 )
                      3
                    )
                    (/
                      5
                      2
                    )
                  )
                  (count-once-per-objects blindsOpened:dodgeball)
                )
              )
            )
            (or
              (or
                (and
                  (not
                    (<= (total-score) 6 )
                  )
                )
                (>= (count-once blindsOpened:hexagonal_bin) (total-time) )
              )
              (>= (count throwBallToDoggieBedOffWall:hexagonal_bin:basketball) (count-increasing-measure throwBallToDoggieBedOffWall:dodgeball) )
              (>= (total-time) (count blindsOpened:dodgeball) )
            )
          )
          (>= 8 (total-time) )
        )
        (= (total-time) 2 )
        (>= 3 (total-score) )
      )
      (>= (+ 180 10 )
        (count blindsOpened:brown)
      )
    )
    (or
      (= (total-score) (count-once-per-objects blindsOpened:hexagonal_bin) )
    )
  )
)
(:scoring
  (* (* 5 (+ (* 3 10 (= 2 )
          (count blindsOpened:basketball)
          (* 6 (count blindsOpened:dodgeball) )
        )
        (* 0 (count-total throwBallToDoggieBedOffWall:top_drawer:basketball) )
      )
    )
    (* 8 (count blindsOpened:book) )
  )
)
)



(define (game game-id-338) (:domain few-objects-room-v1)
(:setup
  (or
    (exists (?b - hexagonal_bin)
      (forall (?s - (either bridge_block golfball) ?p - golfball)
        (game-conserved
          (rug_color_under agent pink)
        )
      )
    )
    (game-conserved
      (adjacent room_center ?c3)
    )
  )
)
(:constraints
  (and
    (preference ballThrownToRug
      (exists (?b - desktop)
        (then
          (once (not (in_motion ?d) ) )
          (hold-while (adjacent agent rug) (game_over ) (adjacent room_center ?l2) (in_motion ?b) )
          (hold-while (same_color ?d brown) (not (not (in ?o ?b) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count ballThrownToRug:beachball) (* 8 15 )
  )
)
(:scoring
  (count-once-per-external-objects ballThrownToRug:side_table)
)
)



(define (game game-id-339) (:domain few-objects-room-v1)
(:setup
  (forall (?c1 - (either bridge_block))
    (and
      (and
        (forall (?d2 - ball ?h - bridge_block ?o - ball)
          (or
            (forall (?o2 - cube_block)
              (game-conserved
                (not
                  (and
                    (not
                      (not
                        (not
                          (in_motion ?o2)
                        )
                      )
                    )
                    (adjacent room_center ?o)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToRampToBed
      (exists (?c - game_object)
        (then
          (once (and (in ?c ?c) (agent_holds ?c) ) )
          (once (in ?c pink_dodgeball) )
          (once (in rug ?c) )
        )
      )
    )
    (forall (?b8 - hexagonal_bin)
      (and
        (preference ballThrownToBed
          (exists (?r1 ?o2 - block)
            (at-end
              (on ?h desk)
            )
          )
        )
      )
    )
    (forall (?r - cube_block)
      (and
        (preference itemsTurnedOff
          (exists (?b ?c3 - cube_block ?d - ball ?h - hexagonal_bin ?o3 - hexagonal_bin)
            (then
              (hold (not (= (distance ?r ?p) 7) ) )
              (once (exists (?c3 - cube_block ?bl - dodgeball) (not (not (on ?bl ?o3) ) ) ) )
              (once (< 1 1) )
            )
          )
        )
      )
    )
    (forall (?b9 - building ?h - red_dodgeball ?l3 ?h - color ?tb - pillow ?d - (either golfball laptop book))
      (and
        (preference objectMoved
          (exists (?b3 - ball)
            (then
              (hold (and (exists (?w1 - hexagonal_bin) (and (in_motion ?d) (and (and (on ?b ?b3) (< (distance ?b3 ?d) 7) ) (not (agent_holds ?d) ) (and (agent_holds ?g) (agent_holds ?b) (agent_holds ?b3) (on ?s floor) ) (agent_holds ?w1) (agent_holds ?b3) (touch agent ?d) ) (not (object_orientation ?d upright) ) ) ) (not (object_orientation ?b upright) ) ) )
              (once (not (in_motion ?d) ) )
              (hold (agent_holds ?b) )
            )
          )
        )
        (preference dodgeballThrownToBinFromDesk
          (exists (?h - dodgeball)
            (then
              (hold-while (not (agent_holds ?d) ) (exists (?c - building ?f ?t ?g - dodgeball) (< 1 (distance_side room_center back ?g)) ) (exists (?b - game_object ?d - pillow) (object_orientation ?d upright) ) (in_motion ?c) )
              (hold (< 1 1) )
              (hold (game_over ) )
            )
          )
        )
      )
    )
    (forall (?b - building)
      (and
        (preference basketMadeFromRug
          (exists (?w2 - curved_wooden_ramp ?p2 - cube_block)
            (then
              (hold (not (in_motion ?h) ) )
              (once (< 1 (distance ?c ?h)) )
              (once (above ?d1 ?d) )
            )
          )
        )
      )
    )
    (preference cubeBlockFromBedToShelf
      (exists (?c1 - shelf)
        (then
          (hold (game_over ) )
          (once (and (agent_holds ?c1) (in_motion ?c1) ) )
          (hold (in_motion ?c1) )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (- (count-shortest itemsTurnedOff:red:dodgeball) )
  )
)
(:scoring
  (count-shortest ballThrownToBed:pink)
)
)



(define (game game-id-340) (:domain many-objects-room-v1)
(:setup
  (forall (?h - dodgeball ?l - game_object)
    (game-optional
      (in_motion ?l)
    )
  )
)
(:constraints
  (and
    (preference laptopAndBookInPlace
      (exists (?w2 - ball ?o2 ?b6 - dodgeball)
        (then
          (once (and (in_motion bed) (in_motion ?b) ) )
          (once (object_orientation ?o2 upside_down) )
        )
      )
    )
    (preference blockKnockedFromBuildingInBin
      (exists (?o4 - block)
        (at-end
          (agent_holds ?o4)
        )
      )
    )
  )
)
(:terminal
  (>= (= (* (count laptopAndBookInPlace) (* (count-once-per-external-objects blockKnockedFromBuildingInBin) (count blockKnockedFromBuildingInBin) 2 )
      )
      (* 10 3 2 )
      (count-once-per-objects blockKnockedFromBuildingInBin:pink_dodgeball)
    )
    (total-score)
  )
)
(:scoring
  (* 60 (+ 1 (* (count-once-per-objects laptopAndBookInPlace:doggie_bed) (count-unique-positions laptopAndBookInPlace:blue_dodgeball:beachball) )
      8
      3
    )
  )
)
)



(define (game game-id-341) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (not
      (<= (distance ?r bed) 6)
    )
  )
)
(:constraints
  (and
    (preference laptopAndBookInPlace
      (exists (?b - (either cube_block chair rug) ?b3 - building)
        (then
          (hold (not (on ?t1 ?b3) ) )
          (once (in_motion ?b3) )
          (hold (in_motion ?b3) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 2 (count-measure laptopAndBookInPlace:pink_dodgeball) )
  )
)
(:scoring
  (external-forall-maximize
    (count laptopAndBookInPlace:dodgeball)
  )
)
)



(define (game game-id-342) (:domain medium-objects-room-v1)
(:setup
  (exists (?d - building)
    (and
      (exists (?r - block ?b ?d - game_object)
        (exists (?d - hexagonal_bin)
          (game-optional
            (in_motion ?d)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - chair ?b9 - (either dodgeball dodgeball triangle_block) ?t2 - (either dodgeball laptop) ?h - curved_wooden_ramp)
      (and
        (preference thrownObjectHitsComputer
          (exists (?h - doggie_bed ?l4 - curved_wooden_ramp)
            (at-end
              (same_color ?l4 ?tb)
            )
          )
        )
      )
    )
    (preference ballThrownToBin
      (exists (?b - (either wall))
        (then
          (once (exists (?o3 - dodgeball) (and (between ?b ?d floor) (not (and (and (and (in_motion ?c) (equal_z_position ?d ?b) ) (< 1 (distance agent ?o)) (not (exists (?d - curved_wooden_ramp) (and (in_motion ?h) (agent_holds ?b2) (agent_holds ?b) (agent_holds ?d) ) ) ) ) (in_motion ?b) ) ) ) ) )
          (hold (agent_holds ?c) )
          (once (toggled_on ?b) )
        )
      )
    )
  )
)
(:terminal
  (or
    (and
      (<= (count ballThrownToBin:pink:bed) (* 3 (count-once-per-objects thrownObjectHitsComputer:purple) )
      )
      (>= (* (>= (count-once-per-objects thrownObjectHitsComputer:pyramid_block) 5 )
          (+ (* (* 3 (external-forall-maximize (count-once ballThrownToBin:rug) ) )
              (* (count ballThrownToBin:yellow) (* 10 18 )
              )
            )
            (+ (* (count thrownObjectHitsComputer:book:yellow) (count-once-per-objects ballThrownToBin:basketball) )
              (+ (count thrownObjectHitsComputer:book:triangle_block) (external-forall-minimize (* (* (* (external-forall-maximize (/ (count thrownObjectHitsComputer:orange) (count-once-per-objects thrownObjectHitsComputer:dodgeball) ) ) (external-forall-maximize (+ (external-forall-maximize (count thrownObjectHitsComputer:tall_cylindrical_block) ) (+ 6 1 (= (count-once ballThrownToBin:doggie_bed) )
                            )
                          )
                        )
                      )
                      (count ballThrownToBin:dodgeball:dodgeball)
                    )
                    20
                  )
                )
              )
            )
          )
        )
        2
      )
      (>= 3 20 )
    )
    (< 2 (+ (* (count ballThrownToBin:orange:golfball) 3 )
        6
      )
    )
  )
)
(:scoring
  (* 6 0.5 )
)
)



(define (game game-id-343) (:domain medium-objects-room-v1)
(:setup
  (exists (?p - hexagonal_bin)
    (exists (?b - desk_shelf ?l ?o ?c - (either tall_cylindrical_block blue_cube_block) ?d ?h - curved_wooden_ramp)
      (game-conserved
        (in ?d pink_dodgeball)
      )
    )
  )
)
(:constraints
  (and
    (preference throwFromBehindChairsInBin
      (exists (?h - desk_shelf ?h - game_object ?w2 - hexagonal_bin ?c3 - building)
        (then
          (hold-while (and (in_motion ?c3) (and (in ?b ?c3) (agent_holds ?d) (in_motion ?c) (or (agent_holds ?b) (in_motion ?c3) ) ) ) (in_motion ?c3) (open ?b) (agent_holds ?d) )
          (hold (in_motion ?h) )
          (once (on ?b2 ?c3) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= 2 3 )
    (or
      (>= (count throwFromBehindChairsInBin:yellow:purple) (count throwFromBehindChairsInBin:basketball) )
    )
  )
)
(:scoring
  (count throwFromBehindChairsInBin:dodgeball)
)
)



(define (game game-id-344) (:domain medium-objects-room-v1)
(:setup
  (forall (?s - dodgeball ?o1 - ball)
    (and
      (game-optional
        (in ?o1 ?o1)
      )
      (game-optional
        (same_type ?o1 ?o1)
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - (either beachball wall))
      (and
        (preference throwGolfballToBin
          (exists (?c ?ob - cube_block)
            (then
              (hold (in_motion ?b) )
              (hold (not (not (equal_z_position ?b1 ?c) ) ) )
              (once (not (exists (?bl - ball ?h - dodgeball) (not (in_motion ?d) ) ) ) )
            )
          )
        )
      )
    )
    (forall (?c1 - cube_block ?d - (either cylindrical_block tall_cylindrical_block))
      (and
        (preference blockThrowAttempt
          (exists (?w - shelf)
            (at-end
              (agent_holds ?w)
            )
          )
        )
      )
    )
    (preference ballThrownIntoTarget
      (exists (?c - block ?d - hexagonal_bin)
        (then
          (once (and (in_motion ?d) (and (same_type desk ?l2) ) ) )
          (once (on ?b2 ?b) )
          (once (in_motion ?d) )
        )
      )
    )
  )
)
(:terminal
  (<= 1 5 )
)
(:scoring
  (* 2 8 )
)
)



(define (game game-id-345) (:domain few-objects-room-v1)
(:setup
  (forall (?c4 - ball)
    (exists (?b5 - chair ?d2 - hexagonal_bin)
      (and
        (and
          (game-conserved
            (not
              (not
                (in_motion ?c4)
              )
            )
          )
        )
        (game-optional
          (or
            (in_motion ?d2)
            (on ?h ?d2)
            (agent_holds ?c4)
          )
        )
        (and
          (and
            (game-conserved
              (exists (?b2 - hexagonal_bin)
                (agent_holds ?c1)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o1 - cube_block)
      (and
        (preference dodgeballThrownToBinFromDesk
          (exists (?w - ball ?b - cube_block)
            (then
              (hold (and (and (agent_holds ?o1) (same_object ?g ?b) ) (and (on ?o1 ?b) (adjacent ?h ?b) (not (agent_holds ?o1) ) (not (not (agent_holds ?b) ) ) ) (in_motion ?t) (not (in ?d ?b) ) ) )
              (once (not (equal_x_position ?b ?b) ) )
              (once (or (not (and (game_start ) (agent_holds ?o1) ) ) (in_motion ?o1) (in_motion ?b) ) )
              (hold-while (in ?r ?h) (and (not (between ?o ?f ?b) ) (agent_holds ?o) ) (same_color ?o1 ?o1) )
            )
          )
        )
        (preference blockInTowerKnocked
          (exists (?l1 - hexagonal_bin)
            (then
              (once (and (same_type pink_dodgeball drawer) (same_type ?o1 pillow) ) )
              (hold (forall (?p ?b - (either book doggie_bed) ?b - beachball) (adjacent agent ?l1) ) )
              (once (agent_holds ?l1) )
            )
          )
        )
      )
    )
    (preference throwToBinFromOppositeWall
      (exists (?c2 - hexagonal_bin ?b9 - game_object ?h - ball)
        (at-end
          (and
            (and
              (agent_holds ?g)
              (in_motion ?d)
            )
            (on ?h ?h)
            (not
              (agent_holds ?d)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< (count-once blockInTowerKnocked:dodgeball) (* 5 (* 3 (* 10 10 )
        (count dodgeballThrownToBinFromDesk:yellow)
      )
    )
  )
)
(:scoring
  (* 5 (count throwToBinFromOppositeWall:dodgeball) )
)
)



(define (game game-id-346) (:domain medium-objects-room-v1)
(:setup
  (exists (?h - cylindrical_block)
    (exists (?h - dodgeball)
      (game-optional
        (on ?h ?r)
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - hexagonal_bin ?b3 - watch)
      (and
        (preference blockFromRugToDesk
          (exists (?h - building)
            (then
              (once (same_type ?h bridge_block) )
              (once (and (and (adjacent_side ?h ?b3 ?b3) (> 0 8) ) (adjacent ?h ?b1) (not (agent_holds ?b) ) ) )
              (hold (not (not (on ?h side_table) ) ) )
            )
          )
        )
        (preference woodenBlockMovedFromRugToDesk
          (exists (?r - wall)
            (then
              (once (and (in_motion ?d) (on ?r ?b1) ) )
              (once (agent_holds ?l1) )
              (hold (in_motion ?d) )
            )
          )
        )
        (preference objectThrownFromRug
          (exists (?b - shelf)
            (then
              (once (in_motion ?b3) )
              (once (agent_holds ?d) )
              (once (not (agent_holds ?b) ) )
            )
          )
        )
      )
    )
    (preference ballThrownOntoTarget
      (exists (?b - curved_wooden_ramp ?tb - hexagonal_bin)
        (then
          (hold (not (and (not (equal_x_position ?h ?tb) ) (not (and (same_object ?g ?d) (and (agent_holds ?o) (in_motion ?tb) ) (in ?b ?tb) ) ) ) ) )
          (once (not (not (object_orientation rug upright) ) ) )
          (once (on ?tb ?o) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (count ballThrownOntoTarget:cylindrical_block) )
)
(:scoring
  (count-increasing-measure blockFromRugToDesk:beachball:green)
)
)



(define (game game-id-347) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (= 1 1)
  )
)
(:constraints
  (and
    (preference nonBlockPlacedInBuilding
      (exists (?r - ball)
        (then
          (hold (and (< 9 (distance ?w1 ?b)) (equal_z_position ?h ?c) ) )
          (once (and (not (not (agent_holds ?r) ) ) (on ?b3 ?r) (not (not (not (adjacent ?h ?b) ) ) ) ) )
          (once (agent_holds ?c4) )
        )
      )
    )
  )
)
(:terminal
  (>= 100 5 )
)
(:scoring
  (count nonBlockPlacedInBuilding:top_drawer)
)
)



(define (game game-id-348) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (agent_holds ?b2)
  )
)
(:constraints
  (and
    (forall (?r - hexagonal_bin ?t - wall ?o2 - yellow_cube_block)
      (and
        (preference objectInBuilding
          (exists (?b - cube_block)
            (then
              (hold-while (not (on agent ?o) ) (touch ?o2 ?d) (agent_holds ?b) )
              (once (on ?o ?o2) )
              (once (same_color ?o2 yellow) )
            )
          )
        )
        (preference binKnockedOver
          (exists (?t1 - bridge_block)
            (then
              (once (toggled_on ?o2) )
              (hold (in_motion ?c2) )
              (once (agent_holds ?o2) )
            )
          )
        )
      )
    )
    (preference pinkObjectMovedToRoomCenter
      (exists (?b - (either triangle_block dodgeball) ?r2 - hexagonal_bin)
        (then
          (once (in ?r2 ?p2) )
          (hold (> 1 1) )
          (hold-while (touch ?r2 ?r2) (in_motion ?r2) (agent_holds ?r2) )
        )
      )
    )
    (forall (?o - building)
      (and
        (preference throwBallToBin
          (exists (?b - cube_block)
            (then
              (once (on ?g ?o) )
              (once (agent_holds ?o) )
              (once (same_type ?b ball) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (count pinkObjectMovedToRoomCenter:dodgeball) )
)
(:scoring
  (* 4 (count throwBallToBin:dodgeball) )
)
)



(define (game game-id-349) (:domain many-objects-room-v1)
(:setup
  (forall (?o - game_object)
    (exists (?c - curved_wooden_ramp)
      (and
        (game-optional
          (same_type ?l1 pillow)
        )
        (and
          (exists (?d - pillow)
            (exists (?l - chair ?p - dodgeball)
              (exists (?c2 - ball)
                (exists (?h - building ?t - ball)
                  (forall (?b7 - pyramid_block)
                    (and
                      (game-conserved
                        (and
                          (same_object ?c2 ?o)
                          (toggled_on ?t)
                        )
                      )
                      (game-conserved
                        (in floor ?b)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownFromObjectToBin
      (exists (?r ?g ?b2 ?r ?c ?b7 - game_object ?f ?o - building)
        (then
          (hold-while (not (toggled_on ?h) ) (not (on ?f ?f) ) )
          (hold (not (not (not (> (distance ?f ?d) 1) ) ) ) )
          (hold (< (distance room_center ?f) 1) )
        )
      )
    )
    (preference golfballInBinFromPillow
      (then
        (once (in_motion ?h) )
        (once (exists (?b9 - cube_block ?t - cube_block) (in_motion ?b) ) )
        (once (in_motion ?o) )
      )
    )
    (forall (?h - hexagonal_bin)
      (and
        (preference objectToBinOnFirstTry
          (exists (?d - chair)
            (then
              (hold-while (adjacent_side ?d front_left_corner ?o front) (and (agent_holds ?l1) (in ?d ?h) ) )
              (hold (not (on ?c ?d) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count ballThrownFromObjectToBin:doggie_bed) (count golfballInBinFromPillow:dodgeball) )
    1
  )
)
(:scoring
  (count-once-per-objects ballThrownFromObjectToBin:dodgeball)
)
)



(define (game game-id-350) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (adjacent_side bed back ?b)
  )
)
(:constraints
  (and
    (preference nonBlockPlacedInBuilding
      (exists (?g - desktop ?l2 - doggie_bed)
        (then
          (once (and (not (object_orientation ?g upright) ) (and (and (opposite ?d ?l2) (on ?l2 ?l2) ) (in_motion ?l2) ) ) )
          (hold (> 1 (distance ?l2 ?c1)) )
          (hold (agent_holds ?l2) )
          (once (on ?d ?d) )
          (once (in_motion ?b) )
          (once (adjacent ?l2 ?l2) )
        )
      )
    )
    (preference thrownBallReachesEnd
      (exists (?tb - hexagonal_bin ?h - hexagonal_bin)
        (then
          (once (adjacent ?h ?b) )
          (once (not (and (game_over ) (on ?h ?h) ) ) )
          (once (in_motion ?d) )
        )
      )
    )
  )
)
(:terminal
  (not
    (not
      (or
        (>= 4 (count-once thrownBallReachesEnd:yellow_pyramid_block) )
        (or
          (and
            (> (count thrownBallReachesEnd:bed) (count thrownBallReachesEnd:pyramid_block) )
            (>= (total-score) (total-score) )
          )
          (> (+ (count thrownBallReachesEnd:pink_dodgeball) (* 10 (* (count-shortest nonBlockPlacedInBuilding:pink_dodgeball) 5 )
              )
            )
            5
          )
          (>= 5 4 )
        )
      )
    )
  )
)
(:scoring
  (* (count-once-per-objects thrownBallReachesEnd:top_drawer) (count nonBlockPlacedInBuilding:blue) )
)
)



(define (game game-id-351) (:domain few-objects-room-v1)
(:setup
  (forall (?d1 - ball ?d - game_object ?b4 - hexagonal_bin)
    (and
      (forall (?r - block ?b6 - game_object ?s - hexagonal_bin)
        (and
          (exists (?p - cube_block)
            (game-conserved
              (on ?b4 ?c)
            )
          )
          (game-conserved
            (adjacent ?b4 ?b)
          )
          (game-optional
            (< (distance room_center ?b4) (distance ?s ?h))
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?w1 - block)
      (and
        (preference objectOnBed
          (exists (?d1 - wall)
            (then
              (hold-while (not (in_motion ?w1) ) (and (and (or (object_orientation rug ?d1) (and (agent_holds ?d) (not (not (agent_holds ?l) ) ) ) ) (= 1) ) (above ?d1 ?d1) (open ?w1) ) )
              (once (on ?w1 ?d1) )
              (once (adjacent_side ?c1 ?d1 ?b) )
              (once (in_motion ?b) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (- 1 )
    10
  )
)
(:scoring
  (* (count-once-per-objects objectOnBed:yellow_cube_block) 3 )
)
)



(define (game game-id-352) (:domain many-objects-room-v1)
(:setup
  (forall (?bl - bridge_block)
    (or
      (game-optional
        (agent_holds ?d)
      )
    )
  )
)
(:constraints
  (and
    (preference throwKnocksOverBear
      (exists (?g - (either cylindrical_block desktop))
        (at-end
          (agent_holds bed)
        )
      )
    )
    (preference ballThrownToRampToBed
      (exists (?h - triangular_ramp)
        (then
          (once (in ?h ?h) )
          (hold-while (not (game_over ) ) (on agent ?h) )
          (hold-while (agent_holds ?t) (in_motion ?l1) )
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (>= (total-time) 2 )
      (or
        (>= (count-once-per-objects ballThrownToRampToBed:beachball) (count-once-per-objects ballThrownToRampToBed:pyramid_block) )
        (>= (* (* (count-measure throwKnocksOverBear:white) (count-once-per-objects ballThrownToRampToBed:yellow_cube_block) )
            (count-once throwKnocksOverBear:beachball)
          )
          5
        )
      )
    )
  )
)
(:scoring
  (count-once ballThrownToRampToBed:hexagonal_bin:dodgeball)
)
)



(define (game game-id-353) (:domain many-objects-room-v1)
(:setup
  (forall (?d - drawer)
    (forall (?c - (either cube_block hexagonal_bin mug) ?b4 - (either doggie_bed) ?h - pillow)
      (exists (?b10 - chair ?ob - (either floor golfball book))
        (and
          (forall (?b4 - green_triangular_ramp ?h - yellow_pyramid_block)
            (game-optional
              (not
                (not
                  (agent_holds ?b)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownMissesEverything
      (exists (?b - dodgeball)
        (then
          (once (agent_holds ?o) )
          (once (exists (?l ?ob - (either triangular_ramp cellphone mug blue_cube_block chair bridge_block tall_cylindrical_block) ?o - block) (adjacent room_center ?r) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (count ballThrownMissesEverything:doggie_bed:top_drawer) )
)
(:scoring
  (* (- (external-forall-maximize (count-once-per-objects ballThrownMissesEverything:hexagonal_bin:basketball) ) 30 ) (* 4 (- (count-once-per-objects ballThrownMissesEverything:beachball) 3 ) (count ballThrownMissesEverything:top_drawer) )
  )
)
)



(define (game game-id-354) (:domain few-objects-room-v1)
(:setup
  (exists (?c - hexagonal_bin ?w2 - hexagonal_bin ?c6 - game_object)
    (forall (?d - dodgeball)
      (game-optional
        (in ?d ?b)
      )
    )
  )
)
(:constraints
  (and
    (preference cubeBlockThrownToTopShelf
      (exists (?h - flat_block)
        (then
          (hold (same_type ?h ball) )
          (once (not (exists (?b5 - dodgeball) (in_motion ?b5) ) ) )
          (hold (not (not (on ?h ?h) ) ) )
        )
      )
    )
  )
)
(:terminal
  (> (+ (external-forall-maximize (* (count-once cubeBlockThrownToTopShelf:blue_dodgeball:blue_cube_block:pink_dodgeball) (count-once-per-objects cubeBlockThrownToTopShelf:beachball) )
      )
      (* (* 10 5 )
        (+ (+ (* (+ 3 3 (* 5 8 )
              )
              (* (* (* (* (count cubeBlockThrownToTopShelf:side_table) (external-forall-maximize (count cubeBlockThrownToTopShelf:cylindrical_block) ) )
                    (count cubeBlockThrownToTopShelf:dodgeball)
                  )
                  (* (count-once-per-external-objects cubeBlockThrownToTopShelf:hexagonal_bin) 18 )
                  5
                  (* (count-once cubeBlockThrownToTopShelf:yellow) (count-unique-positions cubeBlockThrownToTopShelf:top_drawer) )
                  2
                  (count-once-per-objects cubeBlockThrownToTopShelf:purple)
                  (* (* 10 (external-forall-maximize (count-once-per-objects cubeBlockThrownToTopShelf:blue_pyramid_block) ) )
                    (+ 5 (+ 8 (count cubeBlockThrownToTopShelf:dodgeball) (count-once-per-objects cubeBlockThrownToTopShelf:book:orange) 3 (count-once-per-objects cubeBlockThrownToTopShelf:basketball) 300 (* (* (count cubeBlockThrownToTopShelf:dodgeball:purple) (count cubeBlockThrownToTopShelf:basketball) )
                          4
                        )
                        5
                        1
                      )
                    )
                  )
                  6
                  5
                )
                (count-once-per-objects cubeBlockThrownToTopShelf:basketball)
              )
              (* (count-once-per-objects cubeBlockThrownToTopShelf:blue_dodgeball:pink) (count-once-per-objects cubeBlockThrownToTopShelf:wall:pink_dodgeball) )
              (* (count cubeBlockThrownToTopShelf:basketball) 6 )
            )
            (count-overlapping cubeBlockThrownToTopShelf)
            (- (external-forall-maximize (count-total cubeBlockThrownToTopShelf:white) ) )
            (count-once-per-objects cubeBlockThrownToTopShelf:basketball)
            4
          )
          50
        )
      )
    )
    (* (+ 2 (count-once cubeBlockThrownToTopShelf:yellow) )
      3
    )
  )
)
(:scoring
  (+ (count cubeBlockThrownToTopShelf:dodgeball) (* (+ (count-once-per-objects cubeBlockThrownToTopShelf:blue_pyramid_block:blue_pyramid_block) (count-once cubeBlockThrownToTopShelf:cylindrical_block) )
      (count cubeBlockThrownToTopShelf:yellow)
      (* 10 (count-longest cubeBlockThrownToTopShelf:yellow) )
    )
  )
)
)



(define (game game-id-355) (:domain medium-objects-room-v1)
(:setup
  (forall (?h - building)
    (forall (?r1 - game_object)
      (and
        (forall (?c1 - hexagonal_bin ?l2 - curved_wooden_ramp ?g ?h - building)
          (exists (?o3 - color)
            (game-optional
              (agent_holds ?r)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference cubeThrownToBin
      (exists (?bl - color ?h - (either laptop pillow))
        (then
          (once (in_motion ?h) )
          (once (agent_holds top_shelf) )
          (hold (not (or (not (in_motion ?b) ) (or (= (distance ?h ?t) (distance ?h ?h)) (and (not (agent_holds ?d) ) (and (not (not (not (in ?h ?h) ) ) ) (between ?o ?c ?d) ) ) ) (not (or (not (on ?h ?h) ) (agent_holds ?h) ) ) (not (in ?d ?o) ) ) ) )
        )
      )
    )
    (preference ballThrownToBin
      (exists (?h - dodgeball)
        (then
          (once (agent_holds ?r) )
          (hold (and (and (and (not (not (between desk ?d ?h) ) ) (and (agent_holds ?b) (agent_holds ?h) ) ) (same_type ?h pillow) (opposite bed ?h) ) (touch ?h ?b) ) )
          (once (or (in_motion desk) (agent_holds ?h) ) )
        )
      )
    )
    (preference ballThrownMissesEverything
      (exists (?o - game_object)
        (then
          (once (in_motion ?d) )
          (once (and (in ?o ?w1) (in ?d ?d) (in_motion ?o) ) )
          (hold (not (in ?o ?d) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (<= 1 (count ballThrownToBin:book) )
      (and
        (> (count cubeThrownToBin:beachball) 3 )
      )
    )
    (<= (count-once-per-objects ballThrownMissesEverything:dodgeball) 8 )
    (and
      (or
        (<= (count ballThrownMissesEverything:pink) (count ballThrownMissesEverything:basketball) )
        (>= (count ballThrownMissesEverything:doggie_bed:yellow) (* 30 (count cubeThrownToBin:pink_dodgeball) (count-same-positions ballThrownMissesEverything:golfball) )
        )
      )
      (or
        (or
          (and
            (or
              (>= (count-once-per-objects ballThrownMissesEverything:blue_pyramid_block) (* 100 (* 2 (* 2 (count-once-per-objects cubeThrownToBin) )
                  )
                  6
                )
              )
              (or
                (> (count-increasing-measure ballThrownMissesEverything:golfball:pink_dodgeball) 5 )
              )
            )
            (<= (count cubeThrownToBin:yellow:green) (+ 50 (>= (* (count-once-per-objects ballThrownToBin:basketball) 2 20 )
                  (* (+ 30 )
                    (* (* (* 3 2 )
                        (- 9 )
                      )
                      (count ballThrownToBin:dodgeball)
                    )
                  )
                )
              )
            )
            (or
              (>= (* (* (* (count-measure cubeThrownToBin:dodgeball) 7 )
                    (* 10 9 )
                  )
                  3
                )
                (count-once-per-objects ballThrownToBin:blue)
              )
              (< (total-score) (+ 1 5 )
              )
            )
          )
          (<= (* (count-once-per-objects ballThrownMissesEverything:blue_pyramid_block) (count-total ballThrownToBin:golfball) )
            (count ballThrownMissesEverything:pink)
          )
        )
        (>= (count cubeThrownToBin:triangle_block:green:basketball) (total-time) )
      )
    )
  )
)
(:scoring
  (external-forall-maximize
    (- 10 )
  )
)
)



(define (game game-id-356) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (exists (?h - pillow)
      (not
        (not
          (on ?h ?o5)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballAndBasketballInBin
      (exists (?d - ball)
        (then
          (hold (not (in_motion ?d) ) )
          (once (on ?d ?h) )
          (once (> 1 1) )
        )
      )
    )
    (preference itemsBroken
      (exists (?t - dodgeball)
        (then
          (hold (and (and (in ?t ?l) (same_color ?b ?c) ) (and (touch ?t ?t) (agent_holds ?t) (and (on ?t ?t) (adjacent ?h ?t) ) ) ) )
          (hold (not (forall (?c3 - pillow) (and (not (not (in_motion ?c3) ) ) (and (not (in_motion ?h) ) (adjacent room_center ?t) (adjacent ?h ?p) ) ) ) ) )
          (once (in ?b ?h) )
        )
      )
    )
    (preference throwInBin
      (exists (?x - game_object ?l - cube_block)
        (at-end
          (rug_color_under ?l ?o2)
        )
      )
    )
  )
)
(:terminal
  (or
    (> (* 10 2 )
      1
    )
    (>= (count throwInBin:dodgeball) 2 )
  )
)
(:scoring
  (count throwInBin:tall_cylindrical_block)
)
)



(define (game game-id-357) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (and
      (touch ?b2 ?d)
      (not
        (and
          (adjacent ?b1 ?c)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownFromDoor
      (exists (?b - dodgeball ?w1 - dodgeball)
        (then
          (once (adjacent_side agent front ?w1) )
          (hold (or (and (and (or (toggled_on ?w1) (not (not (and (in_motion ?w1) (not (agent_holds ?w1) ) (< (distance room_center ?w1) (distance ?w1 ?w1)) (not (adjacent east_sliding_door ?b) ) (adjacent door ?w1) (not (and (on ?h ?t) (not (agent_holds ?g) ) ) ) (exists (?c - block) (in_motion ?c) ) (in ?w1 ?w1) (on ?l1 ?w1) (and (and (adjacent room_center ?g) (not (not (not (same_object ?w1 bed) ) ) ) ) (and (on ?o ?w1) (touch ?w1 ?w1) (on ?w1 ?w1) ) ) ) ) ) (on ?d ?w1) ) (and (< 9 8) (and (not (not (not (not (and (and (touch ?w1 bed) (in_motion ?b) (and (agent_holds ?b) (touch ?d ?w1) (not (not (and (not (same_type ?w1 ?w1) ) (faces ?w1 ?w1) ) ) ) (agent_holds ?w1) ) (in ?w1 ?w1) (and (in_motion ?d) ) (forall (?b3 - (either blue_cube_block dodgeball) ?h - ball) (agent_holds ?h) ) (and (not (agent_holds ?w1) ) (agent_holds ?w1) ) (and (exists (?b1 - ball ?b8 ?l - hexagonal_bin) (or (not (and (touch ?g ?w1) (= (distance room_center ?b8) (distance_side east_sliding_door front ?l)) (adjacent_side desk front ?h) (and (and (in_motion ?b8) (agent_holds ?b8) ) (agent_holds ?w1) (not (on ?l ?b2) ) (not (and (object_orientation ?r sideways) (touch ?l ?w1) ) ) (in_motion ?o) ) ) ) (and (agent_holds ?b) (not (touch rug ?l) ) ) ) ) (on ?c4 ?w1) ) ) (and (on ?w1 ?w1) (in_motion ?h) ) ) ) ) ) ) (not (and (not (touch ?w1 ?w1) ) (and (< 1 1) (< 1 (distance ?b ?w1)) ) (and (on ?d ?w1) (and (adjacent rug ?b) (broken ?s) ) ) ) ) (in_motion ?l) ) (exists (?c - dodgeball) (< 2 (x_position ?c)) ) ) ) (and (object_orientation ?w1 upright) (in_motion ?h) (and (in ?w1 ?w1) (adjacent ?w1 ?w1) ) ) ) ) )
          (once (agent_holds ?w1) )
          (once (and (in_motion ?w1) (game_start ) (and (not (touch ?b rug) ) (in_motion ?w1) ) ) )
        )
      )
    )
  )
)
(:terminal
  (> (count-unique-positions ballThrownFromDoor:blue_dodgeball:red) (+ 180 5 )
  )
)
(:scoring
  (count-once-per-objects ballThrownFromDoor:triangle_block:basketball)
)
)



(define (game game-id-358) (:domain medium-objects-room-v1)
(:setup
  (forall (?d - dodgeball ?h - dodgeball)
    (exists (?ob - hexagonal_bin)
      (game-conserved
        (agent_holds ?b3)
      )
    )
  )
)
(:constraints
  (and
    (preference teddyBearHitsBall
      (exists (?bl - cube_block)
        (then
          (once (and (open ?bl) (in ?bl green_golfball) ) )
          (once (in_motion ?o1) )
          (hold (in_motion ?d) )
        )
      )
    )
    (forall (?r - golfball ?t1 - game_object)
      (and
        (preference objectInBuilding
          (exists (?d1 - (either pyramid_block bridge_block hexagonal_bin) ?h ?ob - (either blue_cube_block wall desktop))
            (at-end
              (not
                (adjacent ?h ?h)
              )
            )
          )
        )
        (preference ballDroppedInBin
          (then
            (hold-while (not (agent_holds ?b) ) (not (< 1 2) ) )
            (once (in_motion agent) )
            (once (and (in_motion agent) (in_motion ?b) ) )
          )
        )
      )
    )
    (preference ballThrownFromDoor
      (exists (?c - cube_block)
        (then
          (hold (not (agent_holds ?b) ) )
          (once (in_motion ?b) )
          (once (and (and (and (touch ?c ?c) (not (in_motion ?c) ) (agent_holds ?b) ) (broken ?h) ) (in_motion ?c) (on ?c ?c) (on ?c ?b) (and (and (in_motion ?c) (touch ?c ?c) ) (and (in_motion ?h) ) (in_motion ?c) ) (and (in_motion ?c) (adjacent desk ?c) (touch ?t ?c) ) (equal_x_position desk ?c) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 20 15 )
)
(:scoring
  (count teddyBearHitsBall:golfball)
)
)



(define (game game-id-359) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?t - wall)
      (exists (?b - shelf ?d - pyramid_block ?d2 - hexagonal_bin)
        (game-optional
          (exists (?b ?b - building)
            (not
              (adjacent agent ?b)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o - tall_cylindrical_block ?b8 - game_object)
      (and
        (preference throwAttemptFromBehindBlock
          (exists (?b6 - hexagonal_bin)
            (at-end
              (adjacent ?b1 ?d)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (* 6 (* 10 (* 4 (* 5 5 (* (count throwAttemptFromBehindBlock:blue_cube_block) 1 3 )
          )
          16
          4
          3
          (> (* (- (= 50 (+ (count-once-per-objects throwAttemptFromBehindBlock) (* (count-once-per-objects throwAttemptFromBehindBlock:red) -30 )
                  )
                )
              )
              7
            )
            2
          )
        )
        3
      )
    )
    (count throwAttemptFromBehindBlock:pink_dodgeball:hexagonal_bin)
  )
)
(:scoring
  (count throwAttemptFromBehindBlock:red_pyramid_block:beachball)
)
)



(define (game game-id-360) (:domain few-objects-room-v1)
(:setup
  (forall (?b - hexagonal_bin ?d - hexagonal_bin)
    (exists (?c1 - dodgeball)
      (exists (?b - ball)
        (and
          (exists (?p1 - dodgeball ?b7 - (either key_chain bridge_block))
            (exists (?bl - dodgeball)
              (exists (?d - dodgeball ?b5 - game_object ?d - block)
                (game-conserved
                  (on ?bl ?b7)
                )
              )
            )
          )
          (exists (?h - doggie_bed)
            (game-conserved
              (and
                (and
                  (not
                    (and
                      (not
                        (in_motion ?c)
                      )
                      (agent_holds ?h)
                      (not
                        (and
                          (rug_color_under ?d tan)
                          (touch ?b ?b)
                        )
                      )
                      (and
                        (not
                          (agent_holds ?h)
                        )
                        (agent_holds ?h)
                      )
                    )
                  )
                  (agent_holds ?b)
                )
                (and
                  (agent_holds ?d)
                  (touch ?c ?b)
                  (= 1 2)
                  (in_motion ?b)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwKnocksBlock
      (exists (?b2 - dodgeball)
        (then
          (hold (and (and (on ?r ?b2) (in_motion ?b2) ) (and (not (agent_holds ?d) ) (and (and (and (in_motion ?b2) (on ?d ?b2) ) (in_motion ?b2) ) (and (in ?b2 ?b2) (in_motion ?d) (not (in_motion ?b2) ) (adjacent ?w2 ?b2) ) (on ?c ?l) ) ) ) )
          (once (and (in_motion ?c1) (in_motion ?b2) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (count-shortest throwKnocksBlock:red) )
)
(:scoring
  (count throwKnocksBlock:red)
)
)



(define (game game-id-361) (:domain many-objects-room-v1)
(:setup
  (exists (?d - cube_block)
    (and
      (and
        (exists (?b9 - (either pyramid_block golfball) ?r - game_object)
          (and
            (exists (?b3 - dodgeball)
              (game-conserved
                (> (distance bed ?l) 1)
              )
            )
          )
        )
        (forall (?w2 - cube_block ?t1 - hexagonal_bin)
          (exists (?b - drawer ?l2 - (either cylindrical_block cylindrical_block) ?w2 - golfball)
            (forall (?b6 - game_object)
              (exists (?d - hexagonal_bin ?l - (either pink floor))
                (and
                  (game-optional
                    (agent_holds ?b)
                  )
                  (exists (?d - ball ?b - dodgeball)
                    (game-conserved
                      (<= (building_size ?d) 5)
                    )
                  )
                )
              )
            )
          )
        )
        (and
          (game-conserved
            (not
              (not
                (agent_holds ?d)
              )
            )
          )
          (and
            (game-conserved
              (adjacent ?d ?d)
            )
            (and
              (game-optional
                (and
                  (not
                    (and
                      (not
                        (not
                          (in_motion ?d)
                        )
                      )
                    )
                  )
                  (touch ?h ?d)
                  (not
                    (in_motion ?g)
                  )
                  (in_motion ?c1)
                )
              )
              (and
                (forall (?b7 - hexagonal_bin)
                  (and
                    (game-conserved
                      (on ?d ?d)
                    )
                    (exists (?h - chair ?p2 - curved_wooden_ramp ?o3 - (either pillow desktop))
                      (game-conserved
                        (not
                          (agent_holds ?g)
                        )
                      )
                    )
                    (forall (?h - curved_wooden_ramp)
                      (exists (?p1 ?c1 - ball)
                        (game-conserved
                          (same_type ?c1 pillow)
                        )
                      )
                    )
                  )
                )
              )
              (and
                (game-optional
                  (adjacent_side agent left ?d)
                )
              )
            )
            (forall (?r - beachball)
              (game-conserved
                (faces ?d ?b)
              )
            )
            (game-optional
              (not
                (agent_holds floor)
              )
            )
          )
        )
      )
      (and
        (exists (?d - (either dodgeball golfball) ?t - building)
          (not
            (and
              (game-optional
                (touch ?t ?c)
              )
            )
          )
        )
        (and
          (and
            (game-optional
              (or
                (on ?d ?d)
                (agent_holds ?d)
                (agent_crouches )
                (same_color ?p ?d)
              )
            )
            (and
              (exists (?o2 - hexagonal_bin ?b - dodgeball)
                (game-optional
                  (adjacent ?b ?d)
                )
              )
            )
            (game-conserved
              (and
                (in_motion ?h)
                (not
                  (on agent ?d)
                )
              )
            )
          )
        )
      )
      (game-conserved
        (adjacent_side agent front ?d)
      )
      (game-conserved
        (and
          (and
            (and
              (agent_holds ?d)
              (in_motion ?o)
            )
            (and
              (not
                (and
                  (not
                    (in ?h ?b1)
                  )
                  (same_object ?d ?d)
                )
              )
              (open rug)
            )
            (not
              (and
                (agent_holds ?d)
                (not
                  (agent_holds ?d)
                )
              )
            )
          )
          (on ?d ?t)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference cubeBlockFromBedToShelf
      (exists (?c - hexagonal_bin ?h - (either tall_cylindrical_block golfball cellphone) ?tb - block)
        (then
          (once (in_motion ?t) )
          (hold (not (in_motion ?tb) ) )
          (hold (agent_holds ?d) )
        )
      )
    )
  )
)
(:terminal
  (> (count-once-per-objects cubeBlockFromBedToShelf) 3 )
)
(:scoring
  (count-once cubeBlockFromBedToShelf:dodgeball:white)
)
)



(define (game game-id-362) (:domain few-objects-room-v1)
(:setup
  (exists (?l - triangular_ramp)
    (game-optional
      (not
        (same_color ?l1 ?l)
      )
    )
  )
)
(:constraints
  (and
    (preference throwFromBehindChairsInBin
      (exists (?h - teddy_bear ?s ?o ?h ?h ?t2 ?b8 ?h ?f ?l ?b7 - block ?o1 - (either bridge_block ball))
        (then
          (once (and (same_type ?g block) (agent_holds ?o) (toggled_on ?o1) ) )
          (once (in_motion ?b) )
          (once (agent_holds agent) )
          (once (and (equal_x_position room_center ?d) (not (agent_holds ?o1) ) ) )
        )
      )
    )
    (preference pillowMovedToRoomCenter
      (exists (?s - block ?l - curved_wooden_ramp)
        (then
          (once (< (distance ?l ?l) (distance ?l ?b)) )
          (hold (not (adjacent room_center ?l) ) )
          (once (in_motion ?l) )
        )
      )
    )
  )
)
(:terminal
  (and
    (<= (count-once-per-objects pillowMovedToRoomCenter:red) (count-increasing-measure throwFromBehindChairsInBin:basketball) )
  )
)
(:scoring
  (* 3 (* (count pillowMovedToRoomCenter:green:hexagonal_bin) 7 )
  )
)
)



(define (game game-id-363) (:domain few-objects-room-v1)
(:setup
  (exists (?w2 - hexagonal_bin)
    (exists (?h ?o - game_object)
      (and
        (not
          (exists (?bl - block ?h - hexagonal_bin)
            (exists (?d - golfball)
              (forall (?b - dodgeball)
                (and
                  (exists (?tb - hexagonal_bin ?b - game_object)
                    (game-optional
                      (exists (?c - (either basketball cellphone triangle_block teddy_bear))
                        (and
                          (in_motion ?h)
                          (< 1 7)
                        )
                      )
                    )
                  )
                  (forall (?o - ball)
                    (and
                      (and
                        (game-conserved
                          (not
                            (on bed ?b)
                          )
                        )
                      )
                      (and
                        (exists (?d - cube_block ?d - red_dodgeball)
                          (not
                            (and
                              (exists (?c5 - doggie_bed)
                                (and
                                  (exists (?b2 - dodgeball ?h - golfball ?g - hexagonal_bin)
                                    (and
                                      (forall (?o2 - hexagonal_bin ?l1 - (either laptop dodgeball pink pink) ?l2 - curved_wooden_ramp ?d - chair ?b - hexagonal_bin)
                                        (exists (?l4 - desktop)
                                          (game-optional
                                            (agent_holds ?b)
                                          )
                                        )
                                      )
                                    )
                                  )
                                  (game-optional
                                    (above ?h ?b)
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                      (and
                        (game-conserved
                          (or
                            (agent_holds ?w2)
                            (equal_x_position bed ?h)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
        (game-conserved
          (and
            (exists (?d ?w2 - block)
              (or
                (is_setup_object bed)
                (and
                  (and
                    (in_motion ?o)
                    (in_motion ?b)
                    (not
                      (and
                        (not
                          (< 10 (distance ?o ?b))
                        )
                        (on ?b ?b)
                      )
                    )
                    (object_orientation ?t ?w2)
                    (not
                      (adjacent ?b1 ?b)
                    )
                    (agent_holds ?o)
                    (in_motion ?l)
                    (in_motion ?b)
                    (or
                      (and
                        (on ?d bed)
                        (and
                          (agent_holds ?o)
                          (on ?l1 ?h)
                          (not
                            (object_orientation ?d ?o)
                          )
                        )
                        (not
                          (not
                            (agent_holds ?b)
                          )
                        )
                      )
                      (> (distance_side ?w2 right ?o ?h) (distance_side ?w2 ?h ?d front))
                    )
                    (not
                      (and
                        (exists (?db - dodgeball)
                          (agent_holds ?h)
                        )
                        (in ?d ?w2)
                      )
                    )
                    (and
                      (on top_shelf ?d)
                      (in_motion ?b)
                    )
                    (touch ?w2 ?d)
                  )
                  (exists (?b1 - (either dodgeball doggie_bed))
                    (not
                      (same_color ?b ?d)
                    )
                  )
                )
              )
            )
            (and
              (not
                (and
                  (agent_holds ?w2)
                  (on ?b ?w2)
                )
              )
              (in ?d ?b10)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballKnocksTeddy
      (exists (?o1 - hexagonal_bin)
        (then
          (once (agent_holds ?d) )
          (hold (on ?o1 green_golfball) )
          (once (object_orientation ?d upright) )
        )
      )
    )
    (forall (?c - ball)
      (and
        (preference throwBallToBin
          (exists (?r1 - (either cd blue_cube_block pillow) ?c6 - wall ?p - triangular_ramp)
            (then
              (hold (and (on bed ?b8) (in_motion ?d) ) )
              (once (not (on ?d ?o) ) )
              (hold (agent_holds ?c) )
            )
          )
        )
      )
    )
    (preference thrownBallHitsBlock
      (exists (?w - dodgeball ?b5 - chair)
        (then
          (once (same_color ?o ?b5) )
          (once (agent_holds ?b5) )
          (hold (not (not (not (agent_holds ?l) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 4 (* (count-once-per-objects thrownBallHitsBlock:basketball) (+ 6 )
      (count-once-per-objects throwBallToBin:dodgeball:red)
      (* 2 (count-once-per-objects ballKnocksTeddy:pink) )
      10
      3
    )
  )
)
(:scoring
  (count throwBallToBin:beachball)
)
)



(define (game game-id-364) (:domain few-objects-room-v1)
(:setup
  (forall (?s - wall)
    (game-optional
      (agent_holds ?b)
    )
  )
)
(:constraints
  (and
    (preference objectMoved
      (exists (?l3 - (either dodgeball hexagonal_bin blue_cube_block))
        (then
          (once (on ?l3 ?l3) )
          (once-measure (agent_holds ?l3) (distance ?h ?l3) )
          (once (= (distance_side ?l3 ?l3 ?l3 ?l3) (distance ?h ?l3)) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (* (<= 4 3 )
        (count objectMoved:pink:orange)
      )
      (* 4 (count objectMoved:basketball:beachball:doggie_bed) )
    )
    2
  )
)
(:scoring
  (count objectMoved:pink:golfball)
)
)



(define (game game-id-365) (:domain medium-objects-room-v1)
(:setup
  (forall (?c1 - green_triangular_ramp)
    (game-optional
      (in_motion door)
    )
  )
)
(:constraints
  (and
    (preference beachballBouncedOffRamp
      (exists (?p3 - wall ?w2 - cylindrical_block)
        (then
          (hold (< (distance_side ?w2 ?w2 ?w2) 1) )
          (once (agent_holds ?w2) )
          (once (on ?d ?w2) )
        )
      )
    )
    (preference ballNeverThrown
      (exists (?h - dodgeball ?b3 - dodgeball)
        (then
          (once (not (agent_holds ?b4) ) )
          (once (and (agent_holds ?b3) (and (or (in ?b3 ?o) (exists (?b3 - (either doggie_bed pyramid_block) ?l - hexagonal_bin ?c3 - doggie_bed ?b ?c - hexagonal_bin) (on ?b ?c) ) ) (agent_holds ?b3) ) (< (distance ?b3 ?c1) 8) ) )
          (once (and (and (not (on ?o ?o) ) (not (on ?d ?d) ) ) (not (in_motion ?f) ) (agent_holds ?b) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 1 (external-forall-maximize (* 20 9 2 (>= (count-total beachballBouncedOffRamp:beachball) 10 )
        5
        100
      )
    )
  )
)
(:scoring
  (count-once-per-objects ballNeverThrown:yellow)
)
)



(define (game game-id-366) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (game-conserved
        (on ?h ?b)
      )
      (and
        (exists (?d - (either book dodgeball))
          (forall (?r - cube_block)
            (and
              (game-conserved
                (in_motion bed)
              )
            )
          )
        )
      )
      (and
        (forall (?b7 - (either yellow_cube_block golfball) ?o - golfball)
          (and
            (exists (?h ?t - dodgeball ?b3 - blue_cube_block)
              (and
                (forall (?w - drawer)
                  (exists (?ob - hexagonal_bin)
                    (exists (?b - doggie_bed ?b - hexagonal_bin)
                      (not
                        (exists (?c6 - teddy_bear ?o3 - doggie_bed)
                          (forall (?r2 - triangular_ramp)
                            (and
                              (and
                                (and
                                  (not
                                    (game-optional
                                      (and
                                        (exists (?h - hexagonal_bin ?d - game_object)
                                          (agent_holds ?t)
                                        )
                                        (not
                                          (agent_holds ?d)
                                        )
                                        (object_orientation ?o upright)
                                        (exists (?l - dodgeball)
                                          (not
                                            (touch ?g ?b3)
                                          )
                                        )
                                      )
                                    )
                                  )
                                  (and
                                    (exists (?b - hexagonal_bin)
                                      (game-conserved
                                        (is_setup_object ?b)
                                      )
                                    )
                                  )
                                  (forall (?b1 - hexagonal_bin ?b - block)
                                    (game-conserved
                                      (< (building_size ?c4) 6)
                                    )
                                  )
                                )
                                (game-conserved
                                  (and
                                    (not
                                      (agent_holds ?t)
                                    )
                                    (not
                                      (between ?o3 ?w ?r2)
                                    )
                                  )
                                )
                                (forall (?c1 - game_object)
                                  (exists (?o2 ?c1 - (either chair golfball))
                                    (exists (?h - game_object ?d2 - hexagonal_bin ?o - dodgeball)
                                      (forall (?d - block ?o - hexagonal_bin)
                                        (exists (?f - ball)
                                          (forall (?b5 ?c5 ?b ?c - game_object)
                                            (game-conserved
                                              (exists (?ob - (either hexagonal_bin desktop bridge_block) ?o2 - doggie_bed ?b7 - hexagonal_bin)
                                                (= (distance desk ?c2) 6)
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                              (game-optional
                                (on ?h ?ob)
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
                (forall (?s - wall)
                  (game-conserved
                    (agent_holds ?o)
                  )
                )
              )
            )
            (exists (?c3 - pillow ?t - doggie_bed ?p1 - hexagonal_bin)
              (and
                (game-optional
                  (game_start )
                )
              )
            )
            (game-conserved
              (adjacent ?o ?c)
            )
          )
        )
        (game-conserved
          (not
            (and
              (same_object ?b ?r)
              (not
                (agent_holds ?g)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToDrawerOrBin
      (exists (?l2 ?c ?d ?h ?c5 ?d ?h ?l ?t ?p1 - dodgeball)
        (then
          (once (not (on ?c5 ?c5) ) )
          (hold (not (and (in_motion ?p1) (on ?c5 ?b) (and (not (exists (?c1 - doggie_bed) (in_motion ?t) ) ) (and (agent_holds ?l) (on ?p1 floor) (on ?l2 ?b) (on ?o ?d) ) (in_motion ?l) ) ) ) )
          (hold (not (on ?o1 ?d) ) )
        )
      )
    )
    (preference throwAttemptKnocksBlock
      (exists (?b - block)
        (at-end
          (or
            (and
              (and
                (in_motion ?b)
                (and
                  (not
                    (agent_holds ?b)
                  )
                  (on bed ?b)
                )
              )
              (not
                (game_over )
              )
            )
            (agent_holds ?b)
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= 3 (count throwAttemptKnocksBlock:beachball:alarm_clock) )
    )
  )
)
(:scoring
  (count-once-per-objects throwToDrawerOrBin:pink_dodgeball:yellow)
)
)



(define (game game-id-367) (:domain few-objects-room-v1)
(:setup
  (forall (?s - hexagonal_bin ?x - block)
    (forall (?s ?h - doggie_bed)
      (exists (?t - red_dodgeball)
        (forall (?b4 ?l1 ?o - wall ?h - dodgeball ?l3 - (either bridge_block dodgeball))
          (forall (?w1 - curved_wooden_ramp)
            (and
              (and
                (game-conserved
                  (agent_holds ?s)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwKnocksOverBear
      (exists (?h - ball ?w1 - blinds)
        (then
          (once (on ?w1 ?w1) )
          (hold (in_motion ?w1) )
          (hold (in_motion ?w1) )
        )
      )
    )
  )
)
(:terminal
  (>= 5 20 )
)
(:scoring
  (* (* (count throwKnocksOverBear:basketball) 2 )
    (count throwKnocksOverBear:dodgeball:blue_dodgeball)
  )
)
)



(define (game game-id-368) (:domain few-objects-room-v1)
(:setup
  (exists (?h - hexagonal_bin)
    (and
      (forall (?c2 - hexagonal_bin ?h - block)
        (forall (?h ?d - game_object)
          (exists (?f - (either pencil blue_cube_block pyramid_block))
            (forall (?o - hexagonal_bin ?w2 ?r ?db ?b ?c ?r - hexagonal_bin)
              (game-conserved
                (on ?d ?b)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?d - book ?t2 - chair)
        (then
          (once (not (in ?t2 floor) ) )
          (hold (on ?t2 ?b) )
          (once (agent_holds ?t2) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 8 )
)
(:scoring
  (count throwAttempt:blue_dodgeball)
)
)



(define (game game-id-369) (:domain medium-objects-room-v1)
(:setup
  (exists (?b - game_object ?c1 - game_object)
    (and
      (exists (?o - hexagonal_bin)
        (forall (?h - block)
          (exists (?o ?c ?d ?d2 - bridge_block)
            (and
              (exists (?c4 ?c1 - desktop)
                (and
                  (and
                    (or
                      (and
                        (game-conserved
                          (not
                            (in ?b3 ?c4)
                          )
                        )
                        (game-conserved
                          (and
                            (equal_z_position ?d2 bed)
                          )
                        )
                      )
                    )
                  )
                )
              )
              (exists (?t - dodgeball ?b2 - hexagonal_bin)
                (exists (?h - dodgeball ?g - (either cube_block tall_cylindrical_block))
                  (exists (?b - hexagonal_bin)
                    (and
                      (and
                        (exists (?c - hexagonal_bin)
                          (game-conserved
                            (on ?g agent)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference itemInClosedDrawerAtEnd
      (exists (?d - hexagonal_bin)
        (then
          (hold (in_motion ?b) )
          (once (exists (?d - hexagonal_bin ?d - yellow_pyramid_block) (on ?l4 bed) ) )
          (once (object_orientation top_shelf upright) )
        )
      )
    )
  )
)
(:terminal
  (>= (count itemInClosedDrawerAtEnd:blue_dodgeball) (count itemInClosedDrawerAtEnd:green) )
)
(:scoring
  (+ 6 (+ 10 40 )
  )
)
)



(define (game game-id-370) (:domain many-objects-room-v1)
(:setup
  (exists (?d - cube_block)
    (exists (?b - hexagonal_bin)
      (and
        (game-optional
          (in ?d ?b)
        )
        (forall (?h - hexagonal_bin)
          (forall (?c - dodgeball)
            (game-optional
              (and
                (in_motion ?b)
                (agent_holds ?h)
              )
            )
          )
        )
        (game-conserved
          (same_type ?b block)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballToBinFromBed
      (exists (?o1 - cube_block)
        (then
          (once (agent_holds ?d) )
        )
      )
    )
  )
)
(:terminal
  (> 2 5 )
)
(:scoring
  (* (count ballToBinFromBed:basketball) (* (count ballToBinFromBed:blue_dodgeball) (* (count-once ballToBinFromBed) (count-once-per-external-objects ballToBinFromBed:dodgeball:triangle_block) )
    )
    (count-once ballToBinFromBed:hexagonal_bin)
  )
)
)



(define (game game-id-371) (:domain medium-objects-room-v1)
(:setup
  (forall (?l3 - game_object ?o - building)
    (or
      (game-conserved
        (not
          (game_start )
        )
      )
      (forall (?o3 - game_object)
        (exists (?o2 - pillow)
          (and
            (forall (?p - hexagonal_bin ?s - dodgeball)
              (game-optional
                (and
                  (and
                    (and
                      (in_motion ?o2)
                    )
                    (and
                      (not
                        (exists (?c - ball)
                          (in_motion ?b)
                        )
                      )
                      (object_orientation ?s upright)
                    )
                  )
                  (< (distance room_center ?o) 8)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballAndBasketballInBin
      (exists (?o3 - dodgeball)
        (then
          (once (in_motion ?o3) )
          (once (on ?o3 ?o3) )
          (hold-while (on ?o3 ?b) (on ?b ?o3) )
          (once (not (agent_holds ?o3) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count dodgeballAndBasketballInBin:yellow:dodgeball:green) (total-score) )
)
(:scoring
  (- (count dodgeballAndBasketballInBin:green) )
)
)



(define (game game-id-372) (:domain medium-objects-room-v1)
(:setup
  (forall (?d - cube_block ?c - (either beachball dodgeball alarm_clock basketball))
    (forall (?b - ball ?h - hexagonal_bin)
      (game-conserved
        (agent_holds ?h)
      )
    )
  )
)
(:constraints
  (and
    (preference itemsTurnedOff
      (exists (?w1 - (either desktop dodgeball pink))
        (at-end
          (and
            (not
              (agent_holds ?w1)
            )
            (in_motion ?g)
            (and
              (agent_holds ?d)
              (agent_holds ?o)
              (not
                (in_motion ?w1)
              )
              (in_motion ?l1)
              (adjacent ?h ?p2)
              (in ?w1 ?o1)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count itemsTurnedOff:basketball) 2 )
)
(:scoring
  (count itemsTurnedOff:basketball)
)
)



(define (game game-id-373) (:domain medium-objects-room-v1)
(:setup
  (forall (?b - doggie_bed ?o - hexagonal_bin)
    (game-optional
      (agent_holds ?o)
    )
  )
)
(:constraints
  (and
    (preference blockFromRugToDesk
      (exists (?o - wall)
        (then
          (once (in_motion ?o) )
          (once (adjacent ?o agent) )
          (once (on ?h ?o) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) 5 )
)
(:scoring
  (count blockFromRugToDesk:yellow)
)
)



(define (game game-id-374) (:domain medium-objects-room-v1)
(:setup
  (exists (?b - dodgeball)
    (exists (?b - chair ?t1 - (either triangle_block) ?s - game_object ?g ?c1 - hexagonal_bin)
      (game-conserved
        (exists (?w1 - (either block))
          (not
            (agent_holds ?b)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectMoved
      (exists (?c - (either dodgeball) ?r - triangular_ramp)
        (at-end
          (agent_holds ?g)
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count objectMoved:beachball) (count objectMoved:red:dodgeball) )
    (not
      (or
        (> 3 1 )
        (<= (count-once-per-objects objectMoved:beachball:dodgeball:tan) 15 )
      )
    )
  )
)
(:scoring
  (+ (= (count-once-per-external-objects objectMoved:dodgeball:pink) )
    5
    30
    300
    (* 16 (* 3 (count-once-per-objects objectMoved:pyramid_block) 50 6 (count objectMoved:orange) 7 )
    )
    (* (* (+ 1 (count objectMoved:hexagonal_bin:brown) (* 2 (count objectMoved:dodgeball:beachball) )
        )
        (- (count-once-per-objects objectMoved:green) )
      )
      (count-once-per-objects objectMoved:beachball)
    )
  )
)
)



(define (game game-id-375) (:domain few-objects-room-v1)
(:setup
  (exists (?w2 ?f - game_object ?b5 - block ?x ?r2 - block ?w1 - (either chair))
    (and
      (and
        (game-conserved
          (and
            (same_object ?w1 side_table)
            (in_motion ?o)
          )
        )
      )
      (not
        (game-optional
          (broken ?d)
        )
      )
      (exists (?l - hexagonal_bin)
        (and
          (game-conserved
            (on ?l ?o2)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - desk_shelf)
      (and
        (preference ballInOrOnBin
          (exists (?r - block)
            (then
              (once (game_start ) )
              (once (in ?h ?r) )
              (once (is_setup_object ?h) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (total-time) )
)
(:scoring
  (count-total ballInOrOnBin:golfball:golfball)
)
)



(define (game game-id-376) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (on ?r ?o)
  )
)
(:constraints
  (and
    (forall (?l - hexagonal_bin)
      (and
        (preference blueObjectMovedToRoomCenter
          (exists (?b2 - pillow ?r - block)
            (at-end
              (in_motion ?o)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count blueObjectMovedToRoomCenter:golfball) (+ 40 (* (+ (external-forall-maximize (count-once-per-objects blueObjectMovedToRoomCenter:tan) ) (count-measure blueObjectMovedToRoomCenter:dodgeball) )
        (* 10 (count blueObjectMovedToRoomCenter:beachball) )
      )
    )
  )
)
(:scoring
  (count blueObjectMovedToRoomCenter:dodgeball)
)
)



(define (game game-id-377) (:domain few-objects-room-v1)
(:setup
  (forall (?b7 - red_dodgeball)
    (game-conserved
      (< (building_size ?b7) 1)
    )
  )
)
(:constraints
  (and
    (forall (?b - hexagonal_bin)
      (and
        (preference beachballBouncedOffRamp
          (exists (?d - block ?l - block)
            (then
              (hold (and (not (and (in_motion ?b) (adjacent agent ?d) ) ) (touch ?t ?c6) ) )
              (once (agent_holds ?c) )
              (once (not (not (and (same_color floor yellow) (not (agent_holds ?b) ) ) ) ) )
            )
          )
        )
        (preference throwToBinFromOppositeWall
          (exists (?d - (either cube_block cylindrical_block))
            (then
              (once (touch ?b ?b) )
              (hold (and (and (agent_holds ?b) ) (adjacent desk ?b) ) )
              (once (and (not (and (in ?d ?b) (on ?c1 ?b) ) ) (equal_z_position door ?d) ) )
            )
          )
        )
      )
    )
    (forall (?o - dodgeball)
      (and
        (preference dodgeballFromBlockToBin
          (then
            (once (not (not (between bed ?h ?o) ) ) )
            (hold-while (on ?b ?o) (on floor ?o) )
            (once (in_motion ?d) )
          )
        )
      )
    )
    (preference blockToBinFromRug
      (exists (?l1 - ball)
        (then
          (once (agent_holds ?l1) )
          (hold (> (building_size ?h) 1) )
          (once (<= 1 (distance agent ?g)) )
          (once (not (and (< 6 (distance ?c ?l)) (toggled_on ?b) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 1 (* (count-overlapping blockToBinFromRug:orange:doggie_bed) (* (= (* (count-once dodgeballFromBlockToBin:hexagonal_bin:dodgeball) 2 )
          (* (* (+ 9 10 )
              (+ (count beachballBouncedOffRamp:dodgeball:beachball:basketball) 1 (count beachballBouncedOffRamp:rug:basketball) )
            )
            (- 2 )
          )
        )
        (* 3 (count-once throwToBinFromOppositeWall:pink) )
      )
    )
  )
)
(:scoring
  (count-once-per-objects throwToBinFromOppositeWall:basketball)
)
)



(define (game game-id-378) (:domain few-objects-room-v1)
(:setup
  (not
    (exists (?b1 - ball)
      (exists (?g - ball)
        (or
          (game-optional
            (opposite ?d ?g)
          )
          (and
            (forall (?b ?g - dodgeball)
              (exists (?d - ball)
                (and
                  (and
                    (and
                      (game-conserved
                        (agent_holds ?o)
                      )
                    )
                    (game-optional
                      (in_motion ?b)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballThrownToBinFromDesk
      (exists (?x - hexagonal_bin)
        (then
          (hold (in_motion agent) )
          (once (and (and (not (not (in ?x ?x) ) ) (or (adjacent desk ?x) (agent_holds ?d) ) ) (agent_holds ?d1) (on rug ?x) ) )
          (once (in_motion ?x) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* (+ 5 (* 5 (count-once-per-objects dodgeballThrownToBinFromDesk:dodgeball:doggie_bed) )
        )
        15
      )
      (total-time)
    )
    (>= (+ 10 (+ (count dodgeballThrownToBinFromDesk:green) 2 )
      )
      (count-once-per-objects dodgeballThrownToBinFromDesk:doggie_bed)
    )
  )
)
(:scoring
  (+ (count dodgeballThrownToBinFromDesk:brown) 3 )
)
)



(define (game game-id-379) (:domain medium-objects-room-v1)
(:setup
  (exists (?c - dodgeball)
    (and
      (and
        (exists (?b - doggie_bed)
          (exists (?t - game_object)
            (and
              (and
                (game-conserved
                  (same_color ?c ?t)
                )
              )
            )
          )
        )
        (and
          (exists (?r - pillow)
            (game-conserved
              (and
                (exists (?o3 - curved_wooden_ramp)
                  (and
                    (equal_z_position ?c ?o3)
                    (object_orientation ?c ?r)
                  )
                )
                (on ?r ?d)
              )
            )
          )
          (forall (?l1 - hexagonal_bin)
            (game-conserved
              (and
                (and
                  (or
                    (game_over )
                    (agent_crouches )
                  )
                  (agent_holds ?l1)
                )
                (< 7 1)
              )
            )
          )
        )
        (game-conserved
          (or
            (same_color ?b ?tb)
            (not
              (agent_holds ?b)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectLandsInBin
      (exists (?d - hexagonal_bin)
        (then
          (once (and (not (same_object ?d ?g) ) (adjacent_side rug front ?d front) ) )
          (once (in ?d ?d) )
          (hold (exists (?b6 - game_object) (and (in ?b ?b) (not (and (on ?b6 ?d) (and (and (not (on ?o ?d) ) (not (and (in_motion ?c) (< 10 (distance ?d ?b)) ) ) (not (and (in ?b6 ?b3) (touch ?b6 ?d) ) ) (agent_holds ?b6) ) (not (broken ?d) ) (agent_holds ?o) (in_motion ?b6) ) ) ) ) ) )
        )
      )
    )
    (preference blockPickedUp
      (exists (?h - book ?l2 - teddy_bear)
        (at-end
          (in_motion ?h)
        )
      )
    )
  )
)
(:terminal
  (>= (count objectLandsInBin:blue_dodgeball) (* 3 5 (+ (count-once-per-objects blockPickedUp:dodgeball:blue_pyramid_block) 30 )
      (count objectLandsInBin:purple)
    )
  )
)
(:scoring
  (count blockPickedUp:beachball)
)
)



(define (game game-id-380) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (same_type ?o ball)
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?b - hexagonal_bin)
        (then
          (hold-while (and (and (and (in_motion ?c) (and (adjacent ?h desk) (same_object ?b ?b) ) ) (same_color ?b tan) ) (not (in ?b ?b) ) ) (> (distance bed agent) 1) )
          (hold (not (in_motion ?o2) ) )
          (once (in_motion ?d) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-longest throwAttempt:pink) (total-time) )
)
(:scoring
  (count-once-per-objects throwAttempt:dodgeball)
)
)



(define (game game-id-381) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?l3 - chair ?b - hexagonal_bin)
      (and
        (game-conserved
          (not
            (and
              (in_motion ?g)
              (in ?d ?b)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?r2 - (either basketball golfball) ?h - game_object)
      (and
        (preference throwBallFromOtherBallToBin
          (then
            (once (in_motion ?d) )
            (once (not (adjacent ?h ?h) ) )
            (once (in_motion ?h) )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 5 6 )
)
(:scoring
  (count throwBallFromOtherBallToBin:hexagonal_bin)
)
)



(define (game game-id-382) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (exists (?g - curved_wooden_ramp)
      (adjacent_side ?g left ?b1)
    )
  )
)
(:constraints
  (and
    (preference objectMoved
      (exists (?b - (either cube_block flat_block) ?h - curved_wooden_ramp)
        (then
          (hold (faces ?b4 ?o) )
          (hold-while (agent_holds ?h) (agent_holds ?d) )
          (once (same_type ?b ?h) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) 4 )
)
(:scoring
  (* (count-once objectMoved:hexagonal_bin) (count objectMoved:dodgeball) )
)
)



(define (game game-id-383) (:domain few-objects-room-v1)
(:setup
  (forall (?h - block)
    (and
      (and
        (game-optional
          (forall (?d - dodgeball)
            (exists (?d - teddy_bear)
              (in ?h ?h)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - dodgeball ?c5 - ball ?g - hexagonal_bin ?b5 - hexagonal_bin ?g - red_dodgeball)
      (and
        (preference ballThrownToWallToAgent
          (exists (?b4 - block)
            (then
              (once (in_motion ?g) )
              (once (adjacent ?g ?h) )
              (once (same_object ?b ?b) )
            )
          )
        )
      )
    )
    (preference tanObjectMovedToRoomCenter
      (exists (?s - cube_block ?o1 - curved_wooden_ramp)
        (then
          (hold (not (agent_holds ?o1) ) )
          (once (agent_holds ?b) )
          (hold (not (and (and (in_motion ?o1) (on ?o1 ?o) ) (adjacent agent ?o1) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (= (count ballThrownToWallToAgent:pink) 3 )
    (or
      (>= (total-time) (- 3 )
      )
      (and
        (and
          (>= (total-time) 2 )
        )
      )
    )
  )
)
(:scoring
  (count-once ballThrownToWallToAgent:dodgeball)
)
)



(define (game game-id-384) (:domain medium-objects-room-v1)
(:setup
  (forall (?g - building)
    (game-optional
      (not
        (in_motion ?b)
      )
    )
  )
)
(:constraints
  (and
    (preference objectThrownFromRug
      (exists (?ob - game_object ?l - game_object)
        (then
          (hold (agent_holds ?w2) )
          (once (not (not (on ?l ?b6) ) ) )
          (once (and (in_motion ?g) (and (adjacent room_center ?l) (not (agent_holds ?l) ) ) (on ?l ?l) ) )
        )
      )
    )
    (preference teddyBearHitsBall
      (exists (?t2 - dodgeball)
        (then
          (once (and (not (in_motion ?t2) ) (touch ?t2 ?t2) ) )
          (hold (on ?d ?t2) )
          (once (exists (?w - hexagonal_bin) (< 6 (distance ?w ?w)) ) )
        )
      )
    )
    (preference blockInTowerKnockedByDodgeball
      (exists (?w - color ?t - cube_block)
        (then
          (once (agent_holds ?t) )
          (once (< 4 2) )
          (hold (and (touch ?d ?t) (agent_holds ?t) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count blockInTowerKnockedByDodgeball:dodgeball) (count-longest blockInTowerKnockedByDodgeball:blue_pyramid_block) )
    (> 8 (count-unique-positions blockInTowerKnockedByDodgeball:pink:red) )
    (>= (* 2 2 3 10 )
      (* (count blockInTowerKnockedByDodgeball:yellow) 8 )
    )
  )
)
(:scoring
  (= (count-measure blockInTowerKnockedByDodgeball:purple) (count blockInTowerKnockedByDodgeball:dodgeball) )
)
)



(define (game game-id-385) (:domain medium-objects-room-v1)
(:setup
  (forall (?h - cube_block ?o - doggie_bed)
    (exists (?d - dodgeball ?h - game_object ?c - tall_cylindrical_block ?d - chair)
      (game-optional
        (in_motion ?d)
      )
    )
  )
)
(:constraints
  (and
    (forall (?c - dodgeball ?h - dodgeball ?b - wall ?d - (either pillow cylindrical_block))
      (and
        (preference blockInTowerAtEnd
          (exists (?d1 - doggie_bed)
            (then
              (hold (on ?d ?b) )
              (once (forall (?c - block) (in ?d1 ?b) ) )
              (once (on ?ob ?o) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= (* 60 (count-once-per-external-objects blockInTowerAtEnd:pink:dodgeball) )
    1
  )
)
(:scoring
  (count-total blockInTowerAtEnd:purple:purple)
)
)



(define (game game-id-386) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-optional
      (not
        (exists (?h - cube_block ?t - dodgeball)
          (and
            (faces ?t ?t)
            (not
              (adjacent ?t ?t)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwInBin
      (exists (?w1 - (either game_object key_chain))
        (at-end
          (open ?g)
        )
      )
    )
  )
)
(:terminal
  (> (total-score) (* (+ 5 (* (count throwInBin:purple) (* 3 1 )
        )
      )
      (* (- 4 )
        (+ (count-once throwInBin:white) (count-once throwInBin:golfball:dodgeball) )
      )
    )
  )
)
(:scoring
  (count-increasing-measure throwInBin:blue_dodgeball:block)
)
)



(define (game game-id-387) (:domain many-objects-room-v1)
(:setup
  (forall (?d - (either yellow_cube_block teddy_bear) ?x - block)
    (and
      (game-conserved
        (equal_z_position bed ?c)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownFromObjectToBin
      (exists (?d - game_object)
        (then
          (hold (on ?d ?d) )
          (once (in_motion ?d) )
        )
      )
    )
    (preference ballKnocksTeddy
      (exists (?o - golfball)
        (at-end
          (not
            (exists (?w1 - doggie_bed ?o3 - ball ?b2 - (either pen yellow_cube_block) ?d - (either cube_block dodgeball alarm_clock))
              (and
                (in_motion ?d)
                (not
                  (< (distance bed ?o) (distance ?d ?b))
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count-once-per-objects ballKnocksTeddy:basketball:blue_dodgeball) 0 )
    (count ballKnocksTeddy:book)
  )
)
(:scoring
  (count ballThrownFromObjectToBin:hexagonal_bin:red)
)
)



(define (game game-id-388) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (in_motion ?o4)
  )
)
(:constraints
  (and
    (forall (?b10 - hexagonal_bin)
      (and
        (preference throwKnocksBlock
          (exists (?o ?o - doggie_bed ?x ?b ?h - hexagonal_bin ?r - (either game_object floor pyramid_block) ?h ?c ?w ?l2 ?c4 ?h - hexagonal_bin ?p2 ?g - hexagonal_bin)
            (then
              (once (and (not (and (exists (?c - ball) (object_orientation ?r2 upright) ) (on ?b10 green_golfball) ) ) (or (agent_holds ?g) (exists (?o - hexagonal_bin ?o - (either cube_block teddy_bear)) (in_motion ?g) ) (and (game_over ) (or (not (and (on ?d ?b10) (and (and (in_motion ?g) (open agent) ) (in_motion ?g) (in_motion green_golfball) ) ) ) (in_motion ?p2) ) ) ) ) )
              (once (not (in_motion ?g) ) )
              (once (agent_holds rug) )
            )
          )
        )
      )
    )
    (preference dodgeballThrownToBinFromDesk
      (exists (?d - hexagonal_bin ?p - game_object)
        (then
          (once (in_motion ?w2) )
          (once (and (same_color ?s brown) (in_motion ?b3) (and (not (not (agent_holds desk) ) ) (exists (?b - hexagonal_bin ?r - dodgeball) (and (is_setup_object floor) (not (not (adjacent room_center ?p) ) ) ) ) ) ) )
          (hold (agent_holds ?o) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (total-time) (count throwKnocksBlock:beachball) )
    (or
      (or
        (or
          (> (total-score) 5 )
          (= 3 (* (count-once-per-objects throwKnocksBlock:pyramid_block) (* (count-once-per-objects dodgeballThrownToBinFromDesk:pink:top_drawer) (count throwKnocksBlock:yellow) )
            )
          )
        )
        (> (* (external-forall-maximize (count throwKnocksBlock:green) ) (count dodgeballThrownToBinFromDesk:beachball) )
          (count-once-per-objects dodgeballThrownToBinFromDesk:pink)
        )
      )
    )
  )
)
(:scoring
  (* (* (count-overlapping throwKnocksBlock:beachball) 0 10 (count-once-per-objects throwKnocksBlock:dodgeball) (* 10 (count-once-per-objects dodgeballThrownToBinFromDesk) 1 )
      6
      (+ (count-increasing-measure dodgeballThrownToBinFromDesk:white) 7 )
      5
      (= (= 4 (* 2 (* 8 (+ 5 2 )
            )
          )
        )
        3
        (count throwKnocksBlock:yellow)
      )
      (count dodgeballThrownToBinFromDesk:pink_dodgeball:dodgeball)
      6
      6
    )
    (* (* (count-once-per-objects dodgeballThrownToBinFromDesk:dodgeball) (count-once dodgeballThrownToBinFromDesk:dodgeball) )
      (count-same-positions throwKnocksBlock:hexagonal_bin:tall_cylindrical_block:green)
      (count-once dodgeballThrownToBinFromDesk:dodgeball)
    )
  )
)
)



(define (game game-id-389) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (not
      (agent_crouches )
    )
  )
)
(:constraints
  (and
    (preference dodgeballHitsBinBottom
      (exists (?db - building ?c6 - beachball)
        (then
          (hold (and (not (and (and (> (distance ?c6 ?l) 1) (on ?c6 ?f) ) (or (and (on ?s ?g) (in_motion ?c6) (same_object rug ?t) (not (and (and (adjacent rug ?c6) (not (exists (?w2 - block) (not (and (and (on ?c6 ?w2) (not (and (agent_holds ?b) (not (not (agent_holds ?c6) ) ) ) ) ) (agent_holds ?c6) (in_motion ?c6) (open ?w2) (not (adjacent ?h ?w2) ) (agent_holds ?c6) ) ) ) ) ) (on ?b ?c6) ) ) (not (agent_holds ?c6) ) (or (in_motion ?o) (and (not (and (agent_holds ?b) (on ?b ?s) ) ) ) ) (and (in_motion bed) (and (not (agent_holds ?b) ) (not (not (same_type ?b ?c6) ) ) ) (not (in ?d ?c6) ) (agent_holds ?d) (and (same_object ?c6 ?c6) (not (and (not (agent_holds ?c6) ) (game_start ) ) ) ) (< 1 2) (and (not (faces ?b ?c6) ) (in ?c6 ?d) ) ) ) (and (not (rug_color_under ?c6 blue) ) (agent_holds ?c6) ) ) ) ) (agent_holds agent) (and (not (agent_holds ?c6) ) (on ?o2 ?w1) ) ) )
          (once (and (not (in_motion ?c6) ) (and (not (and (in_motion ?c6) (agent_holds ?c6) ) ) (in_motion ?d) ) ) )
          (once (agent_holds ?d) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (count-once dodgeballHitsBinBottom:basketball) (count dodgeballHitsBinBottom:beachball) )
    (count-once dodgeballHitsBinBottom:basketball:pyramid_block)
  )
)
(:scoring
  (count-measure dodgeballHitsBinBottom:dodgeball)
)
)



(define (game game-id-390) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?b - dodgeball ?w ?c2 ?b ?c3 ?d ?b10 ?l1 ?d1 ?t ?t1 - hexagonal_bin)
      (and
        (exists (?l - shelf ?o3 - dodgeball ?b - color)
          (and
            (game-optional
              (agent_holds ?l1)
            )
          )
        )
        (forall (?o - hexagonal_bin)
          (and
            (and
              (game-optional
                (adjacent ?h ?d)
              )
              (game-conserved
                (adjacent ?c2 ?t1)
              )
              (game-conserved
                (< 10 (distance ?b10 ?t))
              )
            )
            (exists (?bl - cube_block ?f - doggie_bed)
              (and
                (game-conserved
                  (agent_holds ?b)
                )
                (and
                  (forall (?o3 - hexagonal_bin ?o - hexagonal_bin)
                    (game-conserved
                      (agent_holds ?r)
                    )
                  )
                  (or
                    (exists (?b - dodgeball ?s - block)
                      (exists (?h - dodgeball)
                        (forall (?b - hexagonal_bin)
                          (game-conserved
                            (in ?d ?t)
                          )
                        )
                      )
                    )
                    (exists (?h - teddy_bear)
                      (and
                        (game-conserved
                          (and
                            (above agent ?b)
                            (not
                              (on ?b10 ?t)
                            )
                          )
                        )
                      )
                    )
                    (exists (?b - game_object)
                      (game-conserved
                        (not
                          (> 1 (distance room_center ?t))
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?d - (either teddy_bear cylindrical_block) ?b1 ?b - color ?c5 - cube_block)
        (at-end
          (on ?h ?c5)
        )
      )
    )
  )
)
(:terminal
  (> (count throwAttempt:purple:purple) 2 )
)
(:scoring
  (+ (* (/ (* 2 6 (= (count throwAttempt:beachball) )
        )
        (- 2 )
      )
      (count throwAttempt:rug)
    )
  )
)
)



(define (game game-id-391) (:domain medium-objects-room-v1)
(:setup
  (forall (?o2 - (either dodgeball hexagonal_bin) ?f - building)
    (and
      (game-optional
        (game_over )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o - hexagonal_bin)
      (and
        (preference cubeThrownToBin
          (exists (?b - chair ?h - shelf ?o2 - dodgeball)
            (then
              (once (same_color ?o ?c) )
              (once (not (not (not (agent_holds ?d) ) ) ) )
              (hold (on ?o2 ?o) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 4 (count-once-per-objects cubeThrownToBin:top_drawer) )
  )
)
(:scoring
  (count cubeThrownToBin:rug)
)
)



(define (game game-id-392) (:domain medium-objects-room-v1)
(:setup
  (forall (?o2 - ball)
    (game-conserved
      (on ?o2 ?d)
    )
  )
)
(:constraints
  (and
    (preference throwKnocksOverBear
      (exists (?p - dodgeball)
        (then
          (once (equal_z_position ?c ?g) )
          (hold (and (in_motion ?p) (not (adjacent rug ?p) ) ) )
          (hold (< 1 4) )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (count-once-per-objects throwKnocksOverBear:golfball) )
)
(:scoring
  (count throwKnocksOverBear:pink)
)
)



(define (game game-id-393) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (exists (?h - curved_wooden_ramp ?b8 - teddy_bear)
        (game-optional
          (opposite desktop ?b8)
        )
      )
    )
    (exists (?c3 - dodgeball ?p - block)
      (forall (?l1 - (either chair curved_wooden_ramp) ?w1 - shelf)
        (game-conserved
          (same_color ?b2 green)
        )
      )
    )
    (or
      (exists (?o - pillow ?c3 - curved_wooden_ramp)
        (and
          (exists (?c1 - beachball)
            (forall (?b1 - building ?x - hexagonal_bin)
              (and
                (game-optional
                  (not
                    (same_type ?c1 ball)
                  )
                )
                (forall (?b - dodgeball)
                  (and
                    (exists (?h - doggie_bed ?w1 - wall)
                      (exists (?r - game_object ?b7 - cube_block)
                        (forall (?b1 - curved_wooden_ramp)
                          (forall (?o - (either beachball mug))
                            (exists (?b1 - (either triangle_block beachball book beachball))
                              (and
                                (and
                                  (exists (?b7 ?c3 - wall ?b - hexagonal_bin)
                                    (and
                                      (exists (?d - cube_block)
                                        (forall (?o - building)
                                          (game-optional
                                            (not
                                              (and
                                                (not
                                                  (not
                                                    (< 1 (distance ?w2 ?d1))
                                                  )
                                                )
                                                (not
                                                  (not
                                                    (adjacent desk ?t)
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                  (and
                                    (exists (?db - hexagonal_bin)
                                      (game-optional
                                        (and
                                          (not
                                            (not
                                              (agent_holds ?db)
                                            )
                                          )
                                          (agent_holds ?b)
                                        )
                                      )
                                    )
                                  )
                                  (game-conserved
                                    (equal_z_position ?b ?g)
                                  )
                                )
                                (forall (?b9 - hexagonal_bin)
                                  (and
                                    (game-optional
                                      (and
                                        (not
                                          (and
                                            (and
                                              (on ?c1 pink_dodgeball)
                                              (between ?w1 ?b ?b9)
                                            )
                                            (in_motion desk)
                                          )
                                        )
                                        (in_motion ?r)
                                        (and
                                          (agent_holds ?b3)
                                          (or
                                            (not
                                              (and
                                                (and
                                                  (game_start )
                                                  (agent_holds ?c1)
                                                )
                                                (or
                                                  (on ?b7 ?b1)
                                                  (agent_holds ?d)
                                                  (equal_z_position desk ?c2)
                                                )
                                              )
                                            )
                                            (in bed ?b)
                                          )
                                        )
                                        (same_color ?b7 green)
                                      )
                                    )
                                    (exists (?c6 - hexagonal_bin)
                                      (forall (?d - red_dodgeball)
                                        (game-conserved
                                          (and
                                            (and
                                              (and
                                                (not
                                                  (adjacent agent ?h)
                                                )
                                                (in ?o ?b)
                                              )
                                              (same_type ?x ?l2)
                                            )
                                            (in_motion ?d)
                                            (equal_z_position ?w1 ?b7)
                                            (in_motion ?l4)
                                            (touch ?c1 ?b)
                                            (agent_holds ?d)
                                            (and
                                              (= 1 4)
                                              (in_motion agent)
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                                (game-conserved
                                  (and
                                    (in_motion ?g)
                                    (in ?o ?h)
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                    (game-conserved
                      (adjacent ?d ?b10)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
    (exists (?tb - (either chair) ?l1 - hexagonal_bin ?h - ball ?p1 - hexagonal_bin)
      (game-conserved
        (not
          (and
            (on ?p1 ?d1)
            (in_motion ?p1)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToWallToAgent
      (exists (?o - hexagonal_bin ?b1 - building)
        (then
          (hold (not (faces ?c ?o) ) )
          (once (in_motion ?b1) )
          (once (< 1 (distance agent ?b1)) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (< 2 (* (external-forall-minimize (count-once ballThrownToWallToAgent:blue_pyramid_block) ) (- 3 )
        )
      )
      (or
        (or
          (>= (total-score) 1 )
          (> 5 (total-time) )
          (not
            (or
              (not
                (> 10 5 )
              )
              (> 2 5 )
              (or
                (and
                  (>= (total-score) (+ (+ (count ballThrownToWallToAgent:purple) 4 )
                      (* (count-measure ballThrownToWallToAgent:alarm_clock:blue_dodgeball) (* 16 (count ballThrownToWallToAgent:basketball) )
                      )
                      (count ballThrownToWallToAgent:golfball)
                      18
                    )
                  )
                )
                (> 3 (+ (count ballThrownToWallToAgent:basketball:yellow) (* 15 3 )
                  )
                )
              )
            )
          )
        )
        (>= 3 (count ballThrownToWallToAgent:beachball) )
      )
      (> (count ballThrownToWallToAgent:basketball) (count-once-per-external-objects ballThrownToWallToAgent:beachball) )
    )
    (<= 2 (count-once-per-objects ballThrownToWallToAgent:doggie_bed) )
  )
)
(:scoring
  (count ballThrownToWallToAgent:beachball)
)
)



(define (game game-id-394) (:domain many-objects-room-v1)
(:setup
  (exists (?h - hexagonal_bin)
    (game-optional
      (in_motion ?d)
    )
  )
)
(:constraints
  (and
    (preference cubeThrownToBin
      (exists (?c6 - dodgeball ?d ?g - cube_block)
        (then
          (once (< 1 (distance ?h ?h)) )
          (once (open ?d) )
          (hold (agent_holds ?d) )
        )
      )
    )
    (preference blueObjectMovedToRoomCenter
      (exists (?p3 - building ?f - hexagonal_bin ?w - (either desktop basketball tall_cylindrical_block))
        (then
          (once (not (on ?r ?c) ) )
          (once (agent_holds ?w) )
          (once (not (agent_holds ?d) ) )
        )
      )
    )
  )
)
(:terminal
  (<= 3 (* (count-once cubeThrownToBin:dodgeball) (* (+ (* (external-forall-maximize (count cubeThrownToBin:brown) ) (count cubeThrownToBin:beachball:yellow) )
          (* 10 (count cubeThrownToBin:dodgeball) )
        )
        (count-once-per-objects blueObjectMovedToRoomCenter:green)
      )
    )
  )
)
(:scoring
  (count-once-per-objects cubeThrownToBin:hexagonal_bin)
)
)



(define (game game-id-395) (:domain few-objects-room-v1)
(:setup
  (forall (?d - pyramid_block)
    (and
      (forall (?h - block)
        (exists (?b9 - pyramid_block)
          (and
            (game-optional
              (on ?h ?d)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?ob - ball)
      (and
        (preference ballKnocksTeddy
          (exists (?b8 - game_object ?d - ball)
            (then
              (hold (same_color ?d pink) )
              (once (not (agent_holds ?d) ) )
              (hold (and (in_motion ?b) (and (same_color ?d ?d) (same_type ?ob ball) ) ) )
            )
          )
        )
        (preference blockPickedUp
          (exists (?x - game_object ?s - hexagonal_bin)
            (then
              (once (and (in_motion ?s) (and (and (not (and (or (same_color ?s blue) ) (not (and (and (not (and (in side_table ?ob) (adjacent ?ob ?ob) ) ) (in_motion ?ob) ) (and (not (not (on ?b ?c) ) ) (or (and (in ?s ?s) (and (and (or (not (adjacent agent ?s) ) (adjacent agent ?b) ) (and (and (and (touch ?b ?b1) (not (not (and (not (on ?ob ?s) ) (not (on ?c ?d) ) ) ) ) ) ) (and (in_motion ?d) (not (not (between bed ?s ?ob) ) ) ) (and (in_motion ?b) (> 7 1) ) ) ) (agent_holds ?o) ) ) ) ) ) ) ) ) (not (agent_holds ?ob) ) ) (< 1 (distance ?s ?h)) (on ?w ?ob) (and (adjacent ?s ?b) (not (adjacent ?s ?o4) ) ) ) ) )
              (once (object_orientation ?s upside_down) )
              (once (not (agent_holds ?h) ) )
            )
          )
        )
        (preference itemsTurnedOff
          (exists (?f - (either alarm_clock cylindrical_block) ?f - cube_block)
            (then
              (hold (same_object ?h ?f) )
              (hold (and (faces ?ob ?ob) (= (distance ?w2 ?b) 1) ) )
              (hold (in_motion ?c) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< 10 (total-time) )
)
(:scoring
  (count-once-per-objects ballKnocksTeddy:beachball)
)
)



(define (game game-id-396) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?p2 - building)
      (game-conserved
        (not
          (touch ?h ?p2)
        )
      )
    )
    (exists (?t - drawer ?s - doggie_bed ?o5 - dodgeball)
      (game-optional
        (agent_holds ?g)
      )
    )
  )
)
(:constraints
  (and
    (preference pillowThrownToDoggieBed
      (exists (?b5 - cube_block)
        (then
          (once (adjacent ?h agent) )
          (once (not (and (and (rug_color_under ?b ?b5) (and (in_motion ?b5) (on ?s ?l1) ) ) (not (on ?d ?b5) ) (and (agent_holds bed) ) ) ) )
          (once (exists (?g - dodgeball ?r - hexagonal_bin ?w1 - hexagonal_bin) (not (not (and (not (and (not (< (distance ?c ?b5) 1) ) ) ) (agent_holds ?w1) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count pillowThrownToDoggieBed:dodgeball:pink_dodgeball) (count-unique-positions pillowThrownToDoggieBed:green) )
    (<= (+ (* (- (count pillowThrownToDoggieBed:basketball) )
          5
        )
        (count pillowThrownToDoggieBed:basketball:pink)
      )
      2
    )
  )
)
(:scoring
  (* (* (count pillowThrownToDoggieBed:pink) 2 (+ 2 10 2 )
      (count-once-per-external-objects pillowThrownToDoggieBed:dodgeball)
    )
    (external-forall-maximize
      (count-once-per-objects pillowThrownToDoggieBed:white:yellow:pink)
    )
  )
)
)



(define (game game-id-397) (:domain many-objects-room-v1)
(:setup
  (forall (?w1 - (either cd flat_block) ?s - hexagonal_bin ?t - hexagonal_bin)
    (forall (?b - teddy_bear)
      (game-conserved
        (same_type ?o3 ball)
      )
    )
  )
)
(:constraints
  (and
    (preference blockInTowerAtEnd
      (exists (?b2 - dodgeball)
        (then
          (once (not (game_start ) ) )
          (hold (agent_holds ?t) )
          (once (in ?b2 ?b2) )
        )
      )
    )
  )
)
(:terminal
  (<= 4 (total-score) )
)
(:scoring
  (+ 7 (count blockInTowerAtEnd:golfball:basketball) 8 (count blockInTowerAtEnd:hexagonal_bin:hexagonal_bin) (count blockInTowerAtEnd:white) (count-once-per-external-objects blockInTowerAtEnd:blue) )
)
)



(define (game game-id-398) (:domain few-objects-room-v1)
(:setup
  (exists (?w1 - block)
    (forall (?d - dodgeball)
      (game-conserved
        (in_motion ?d)
      )
    )
  )
)
(:constraints
  (and
    (preference dropAttempt
      (exists (?b - hexagonal_bin)
        (at-end
          (agent_holds ?b)
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (count-once-per-objects dropAttempt:yellow:red) )
)
(:scoring
  (* 300 (* (count dropAttempt:bed) (count-unique-positions dropAttempt:pink) 5 )
  )
)
)



(define (game game-id-399) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (not
      (and
        (adjacent agent ?r)
        (agent_holds ?d)
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?b - triangular_ramp)
        (then
          (hold-while (not (not (agent_holds ?b) ) ) (adjacent ?b ?d) )
          (once (and (not (in_motion ?b) ) (and (agent_holds ?b) (and (in_motion ?b) (< 7 (distance ?b ?b)) ) ) ) )
          (hold (forall (?tb - teddy_bear ?g - ball) (adjacent_side ?g ?g ?b front) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (count throwBallToBin:green) (* (+ 2 (count-once-per-objects throwBallToBin) )
        2
      )
    )
  )
)
(:scoring
  (-
    1
    (count-shortest throwBallToBin:triangle_block)
  )
)
)



(define (game game-id-400) (:domain few-objects-room-v1)
(:setup
  (exists (?o - dodgeball)
    (game-conserved
      (forall (?l - flat_block)
        (not
          (on ?o2 ?l)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockKnockedFromBuildingInBin
      (exists (?ob - hexagonal_bin ?b - (either dodgeball dodgeball cylindrical_block))
        (then
          (once (in_motion ?b) )
          (once (exists (?d - chair) (and (not (in ?d ?d) ) (and (not (adjacent rug ?bl) ) (on ?d ?b) ) (in_motion ?b5) ) ) )
          (once (on ?b ?h) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ 5 (count-once blockKnockedFromBuildingInBin:pink) (* 10 (count-shortest blockKnockedFromBuildingInBin:dodgeball:blue_pyramid_block) )
    )
    (count blockKnockedFromBuildingInBin:blue)
  )
)
(:scoring
  (count blockKnockedFromBuildingInBin:red)
)
)



(define (game game-id-401) (:domain many-objects-room-v1)
(:setup
  (exists (?b5 - dodgeball ?d - hexagonal_bin)
    (forall (?c - dodgeball)
      (forall (?b - game_object)
        (forall (?x - (either tall_cylindrical_block doggie_bed))
          (forall (?l - ball ?o3 - ball)
            (exists (?o - curved_wooden_ramp)
              (exists (?b4 ?w1 - teddy_bear)
                (and
                  (game-conserved
                    (not
                      (touch ?b ?d)
                    )
                  )
                  (game-conserved
                    (or
                      (in_motion ?w1)
                      (< 4 1)
                    )
                  )
                  (game-optional
                    (in_motion ?x)
                  )
                  (and
                    (exists (?l2 - dodgeball ?b - curved_wooden_ramp)
                      (or
                        (and
                          (and
                            (forall (?s - flat_block ?h - green_triangular_ramp)
                              (game-conserved
                                (not
                                  (in ?r ?h)
                                )
                              )
                            )
                            (exists (?h - doggie_bed)
                              (and
                                (and
                                  (forall (?t - hexagonal_bin)
                                    (and
                                      (game-conserved
                                        (not
                                          (in_motion ?d)
                                        )
                                      )
                                    )
                                  )
                                  (forall (?c - (either basketball cube_block))
                                    (game-conserved
                                      (not
                                        (faces floor ?o3)
                                      )
                                    )
                                  )
                                )
                              )
                            )
                            (exists (?h - chair ?b1 - block)
                              (exists (?bl - curved_wooden_ramp)
                                (game-conserved
                                  (in ?b4 ?h)
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                  (forall (?l - doggie_bed)
                    (forall (?x - hexagonal_bin ?w ?o - wall)
                      (game-conserved
                        (exists (?c - chair)
                          (< (distance ?w1 ?c) (distance_side ?o3 left ?d right))
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballBouncesOnceToDoggieBed
      (exists (?b2 - block)
        (then
          (once (not (and (and (forall (?o4 - shelf) (agent_holds ?b2) ) ) (not (and (not (in ?b2 ?b2) ) (same_color ?b2 blue) ) ) (not (on ?b2 ?d) ) (and (in_motion ?o) (not (in ?o1 ?b2) ) (agent_holds ?b2) ) ) ) )
          (once (not (agent_holds ?h) ) )
          (hold (not (not (in_motion ?h) ) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (= 10 (* (count dodgeballBouncesOnceToDoggieBed:hexagonal_bin) 5 )
      )
      (count dodgeballBouncesOnceToDoggieBed:blue_dodgeball)
    )
  )
)
(:scoring
  (count dodgeballBouncesOnceToDoggieBed:golfball:red)
)
)



(define (game game-id-402) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?p - dodgeball)
      (forall (?b1 - hexagonal_bin ?r - red_dodgeball)
        (game-optional
          (not
            (and
              (< (distance bed ?b) (distance ?w1 ?p))
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?b8 - dodgeball ?c1 - hexagonal_bin)
        (then
          (hold-while (and (agent_holds ?d) (not (equal_x_position ?c1 ?c1) ) ) (and (agent_holds ?l) (in_motion ?d) ) (or (adjacent_side ?h front ?d) (in_motion ?t) ) )
          (once (and (< (distance ?h ?c1) (distance ?c1 ?d)) (and (agent_holds ?o) (not (on ?c1 bed) ) ) ) )
          (once (equal_x_position bed desk) )
        )
      )
    )
    (preference basketMadeFromRug
      (exists (?d - doggie_bed)
        (at-end
          (same_object ?d ?d)
        )
      )
    )
  )
)
(:terminal
  (> 6 (count-once-per-objects ballThrownToBin:dodgeball) )
)
(:scoring
  (* (count ballThrownToBin:golfball) (count ballThrownToBin:golfball) )
)
)



(define (game game-id-403) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (and
        (and
          (exists (?b9 - hexagonal_bin ?d - dodgeball)
            (game-conserved
              (in_motion ?b)
            )
          )
        )
        (forall (?d - hexagonal_bin)
          (and
            (exists (?w - triangular_ramp)
              (and
                (game-conserved
                  (not
                    (not
                      (in_motion ?c)
                    )
                  )
                )
                (exists (?h - dodgeball)
                  (game-optional
                    (agent_holds ?h)
                  )
                )
                (or
                  (exists (?s - blinds ?s - hexagonal_bin)
                    (and
                      (exists (?l - curved_wooden_ramp)
                        (game-conserved
                          (> (distance agent ?l) (distance agent ?s))
                        )
                      )
                    )
                  )
                  (game-conserved
                    (< 3 1)
                  )
                  (and
                    (game-conserved
                      (exists (?p2 - hexagonal_bin ?o1 - ball)
                        (not
                          (and
                            (in_motion ?o1)
                            (exists (?b1 ?h ?o ?o ?d1 ?b3 ?p ?b4 ?l ?c5 - dodgeball ?b2 - bridge_block)
                              (and
                                (and
                                  (in_motion ?o1)
                                  (in ?p2 agent)
                                )
                                (agent_holds ?d)
                                (not
                                  (not
                                    (in_motion ?b)
                                  )
                                )
                                (and
                                  (agent_holds ?o1)
                                  (and
                                    (toggled_on ?s)
                                    (broken ?o1)
                                  )
                                  (< (x_position ?d) (distance room_center ?b))
                                  (not
                                    (on bed ?d)
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
            (and
              (game-conserved
                (not
                  (forall (?l - hexagonal_bin)
                    (on ?d ?g)
                  )
                )
              )
            )
          )
        )
        (forall (?h - desk_shelf ?o - ball)
          (and
            (and
              (not
                (game-conserved
                  (agent_holds ?o)
                )
              )
            )
            (and
              (exists (?o ?b10 - dodgeball ?b3 - wall ?l1 - hexagonal_bin)
                (and
                  (forall (?tb - hexagonal_bin)
                    (exists (?b4 - (either chair cylindrical_block hexagonal_bin cd) ?b2 - hexagonal_bin)
                      (exists (?b5 ?p ?s - teddy_bear ?p2 ?c ?w1 ?h ?b6 ?w - ball)
                        (game-optional
                          (forall (?c - shelf)
                            (equal_z_position ?h ?b)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToBinFromDistance
      (exists (?b7 - hexagonal_bin)
        (then
          (hold-while (adjacent agent ?b7) (< 1 1) (on ?b ?d) )
          (once (open ?h) )
          (once (above ?g ?b7) )
        )
      )
    )
    (preference throwAttempt
      (exists (?b - dodgeball)
        (then
          (hold (in ?o ?b) )
          (once (forall (?h ?c1 - (either triangle_block mug book)) (not (same_type ?b ball) ) ) )
          (hold-while (on ?b ?b) (exists (?w1 - hexagonal_bin) (game_over ) ) )
        )
      )
    )
  )
)
(:terminal
  (= (+ -30 (- (* (+ (* (< (count-once-per-objects throwToBinFromDistance:blue_dodgeball) (count throwToBinFromDistance:hexagonal_bin) )
              9
            )
            (count-once-per-objects throwToBinFromDistance:dodgeball)
          )
          (* 2 (count throwAttempt:basketball:pink_dodgeball) (/ (count-once-per-objects throwToBinFromDistance) (count-measure throwAttempt:dodgeball) ) (* (* 6 (external-forall-maximize (count-once throwToBinFromDistance:yellow_cube_block) ) (count-measure throwAttempt:pyramid_block) )
              3
              (count-once throwAttempt:yellow)
              3
              3
            )
            180
            6
          )
        )
      )
      (* (count throwAttempt:orange) (count-once-per-external-objects throwToBinFromDistance:side_table:yellow:basketball) )
    )
    10
  )
)
(:scoring
  (count-same-positions throwAttempt:yellow:doggie_bed)
)
)



(define (game game-id-404) (:domain medium-objects-room-v1)
(:setup
  (exists (?f - curved_wooden_ramp)
    (game-optional
      (> (distance ?o ?f) (distance bed ?f))
    )
  )
)
(:constraints
  (and
    (preference blockInTowerAtEnd
      (exists (?b - wall)
        (at-end
          (on ?bl ?d)
        )
      )
    )
  )
)
(:terminal
  (>= 6 (total-time) )
)
(:scoring
  (count blockInTowerAtEnd:beachball)
)
)



(define (game game-id-405) (:domain few-objects-room-v1)
(:setup
  (forall (?o2 - ball)
    (game-conserved
      (in ?w2 ?h)
    )
  )
)
(:constraints
  (and
    (preference failedThrowAttempt
      (exists (?o1 - shelf ?b3 - flat_block)
        (at-end
          (in ?b3 ?h)
        )
      )
    )
  )
)
(:terminal
  (>= 2 40 )
)
(:scoring
  (= (count-once-per-objects failedThrowAttempt:dodgeball) 10 )
)
)



(define (game game-id-406) (:domain few-objects-room-v1)
(:setup
  (exists (?f - building)
    (game-conserved
      (and
        (on ?b ?f)
        (in_motion ?b)
      )
    )
  )
)
(:constraints
  (and
    (preference throwObjectToBin
      (exists (?b5 - building)
        (at-end
          (in_motion ?b5)
        )
      )
    )
    (forall (?b ?o - building)
      (and
        (preference ballThrownFromDoor
          (exists (?c2 - (either mug))
            (then
              (hold (in ?o ?t) )
              (hold (agent_holds ?b) )
              (once (in_motion rug) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< (count-once-per-objects ballThrownFromDoor:green) (count-once-per-objects throwObjectToBin:basketball) )
)
(:scoring
  (count-increasing-measure ballThrownFromDoor:blue_dodgeball:doggie_bed)
)
)



(define (game game-id-407) (:domain few-objects-room-v1)
(:setup
  (exists (?c2 - triangular_ramp)
    (exists (?l - game_object)
      (exists (?b10 - cube_block ?l1 - pyramid_block)
        (game-conserved
          (in_motion ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToDrawerOrBin
      (exists (?w2 - cube_block)
        (then
          (once (agent_holds ?l2) )
          (once (agent_holds ?w2) )
          (once (not (and (and (and (on ?w2 ?w2) (agent_holds ?w2) ) (in_motion ?w2) (touch ?o ?d) ) (in_motion ?w2) (not (not (open ?l) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (external-forall-maximize (* (count-same-positions throwToDrawerOrBin:basketball:dodgeball) 50 )
    )
    (count throwToDrawerOrBin:yellow_cube_block)
  )
)
(:scoring
  (* (count-once-per-objects throwToDrawerOrBin:blue_dodgeball) 5 )
)
)



(define (game game-id-408) (:domain few-objects-room-v1)
(:setup
  (exists (?c2 - red_dodgeball)
    (game-conserved
      (touch ?o ?b)
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?o1 - dodgeball)
        (then
          (once (adjacent desk ?l1) )
          (hold (not (and (adjacent agent ?d) (and (not (and (on ?o ?o1) (agent_holds ?b3) ) ) (in_motion ?l2) (not (and (not (and (not (not (not (not (not (= 0 (distance room_center ?g)) ) ) ) ) ) (agent_holds ?o1) (agent_holds ?o1) (and (and (agent_holds ?o1) (in_motion agent) ) (< (building_size ?o) 7) ) ) ) (in ?d agent) ) ) ) ) ) )
          (hold (in_motion ?o1) )
          (once (> 1 1) )
        )
      )
    )
    (forall (?b - pillow)
      (and
        (preference ballNeverThrown
          (then
            (once (and (not (agent_holds ?b) ) (agent_holds ?b) ) )
            (hold (exists (?l1 - (either cube_block dodgeball tall_cylindrical_block) ?o4 - hexagonal_bin) (agent_holds ?b) ) )
            (once (not (not (between ?b ?o ?d) ) ) )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (total-time) )
)
(:scoring
  (count ballNeverThrown:dodgeball)
)
)



(define (game game-id-409) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds ?d)
  )
)
(:constraints
  (and
    (forall (?o3 - curved_wooden_ramp)
      (and
        (preference ballOnBedAtEnd
          (exists (?p - hexagonal_bin)
            (then
              (once (not (not (in ?h ?d) ) ) )
              (hold (equal_z_position ?o3 ?b) )
              (hold (and (agent_holds ?o3) (object_orientation ?o3 upright) ) )
            )
          )
        )
        (preference bigObjectThrownToBed
          (exists (?p - block)
            (then
              (once (forall (?h - hexagonal_bin ?l - game_object) (in ?l ?b) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (> (- (* (count ballOnBedAtEnd) (count bigObjectThrownToBed:basketball) )
      )
      (total-score)
    )
    (>= (total-score) (* (count-once-per-objects bigObjectThrownToBed:dodgeball:beachball) 1 )
    )
  )
)
(:scoring
  (* (+ (* (count-once-per-objects ballOnBedAtEnd:basketball) (count ballOnBedAtEnd:dodgeball) (* 30 (count ballOnBedAtEnd:dodgeball:dodgeball) 10 6 )
      )
      (* (count-total ballOnBedAtEnd:dodgeball) (* (count bigObjectThrownToBed:dodgeball) (* (* (count ballOnBedAtEnd:basketball) (+ 1 (+ (+ 5 (+ (* (count ballOnBedAtEnd:dodgeball) (* (count-once-per-objects ballOnBedAtEnd:pink) (count bigObjectThrownToBed:yellow) )
                      )
                      (* 5 (+ 1 9 )
                      )
                    )
                  )
                  (count-overlapping bigObjectThrownToBed:beachball:wall)
                )
              )
              (<= (+ 8 (count-once-per-objects ballOnBedAtEnd:side_table) )
                (* (external-forall-maximize (count-once-per-external-objects ballOnBedAtEnd:blue_cube_block:pink) ) 15 (count ballOnBedAtEnd:golfball:golfball:rug) (count ballOnBedAtEnd:yellow) (+ (count bigObjectThrownToBed:basketball) 50 )
                  (count-once-per-objects ballOnBedAtEnd:beachball)
                  (< (count-once bigObjectThrownToBed:alarm_clock) (+ (count bigObjectThrownToBed:rug) (count bigObjectThrownToBed:basketball) 5 10 )
                  )
                  (count-longest ballOnBedAtEnd:dodgeball)
                  (count bigObjectThrownToBed:dodgeball)
                )
              )
              (* (count-once-per-objects ballOnBedAtEnd:golfball) 1 )
            )
          )
        )
      )
    )
    6
  )
)
)



(define (game game-id-410) (:domain few-objects-room-v1)
(:setup
  (not
    (and
      (game-conserved
        (exists (?w - shelf)
          (< (x_position ?bl) 0.5)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?o2 - doggie_bed)
        (at-end
          (in_motion ?c)
        )
      )
    )
    (preference cubeBlockInBuilding
      (exists (?t2 - ball)
        (then
          (once (and (not (< (distance ?h ?l) (distance ?c ?r)) ) (agent_holds ?d) ) )
          (once (and (on ?t2 ?t2) (or (agent_holds ?t2) (and (not (same_color ?t2 brown) ) (not (in ?h ?t2) ) ) ) ) )
          (once (and (and (same_color ?t2 ?t2) (and (< (distance agent ?t2) 10) (and (in ?t2 ?t2) (in_motion ?d) ) ) (in ?t2 ?t2) ) (< (distance agent ?c) 1) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (* (count cubeBlockInBuilding:basketball) (* 3 2 )
      )
      (count throwBallToBin:dodgeball)
    )
    (+ 7 (count-once-per-objects throwBallToBin:golfball) -10 (* (count throwBallToBin:pyramid_block:dodgeball) (- 2 )
      )
      15
      (count-once-per-objects cubeBlockInBuilding:basketball)
      50
    )
  )
)
(:scoring
  (+ (count cubeBlockInBuilding:yellow_cube_block:beachball) (count-once-per-objects throwBallToBin:dodgeball) )
)
)



(define (game game-id-411) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (is_setup_object ?h)
  )
)
(:constraints
  (and
    (forall (?b1 - (either cube_block wall golfball))
      (and
        (preference throwToDrawerOrBin
          (exists (?o - dodgeball)
            (then
              (hold (agent_holds ?o) )
              (hold (not (and (in_motion ?b1) (in_motion ?c4) ) ) )
              (hold-while (object_orientation ?b upside_down) (and (and (same_object ?b ?b) (not (in ?o ?d) ) ) (forall (?g - curved_wooden_ramp) (and (agent_holds ?g) (on ?c ?g) ) ) (agent_holds bed) ) (and (not (and (adjacent_side ?b1 back ?b) (and (on ?c ?o) (in_motion rug) (and (and (in_motion ?l) (and (exists (?db - ball ?h ?h - dodgeball) (on ?h ?d) ) (and (agent_holds ?c) (game_over ) ) (and (in desk ?b) (in_motion ?d) ) (agent_holds ?o) ) ) (in_motion ?b) (not (adjacent ?d ?b) ) ) (adjacent ?s agent) (in_motion ?b1) (is_setup_object ?c) ) (adjacent_side ?o ?o ?ob) (not (not (agent_holds agent) ) ) (in_motion agent) (and (on ?b1 ?h) (in_motion ?b1) ) (not (and (game_over ) (adjacent desk ?c) ) ) (not (in_motion floor) ) (in_motion ?b1) (and (agent_holds ?r) (agent_holds ?b) ) ) ) (agent_holds bed) (agent_holds ?b1) ) (not (and (not (not (agent_holds ?b) ) ) ) ) )
            )
          )
        )
      )
    )
    (preference ballThrownToBin
      (exists (?c - ball)
        (at-end
          (not
            (in_motion ?c)
          )
        )
      )
    )
  )
)
(:terminal
  (= (= (count-once-per-objects throwToDrawerOrBin:orange) (* (* (count throwToDrawerOrBin:basketball) (* 5 (* (external-forall-maximize (* 6 (count-once throwToDrawerOrBin:golfball) )
              )
              (* (count throwToDrawerOrBin:dodgeball:dodgeball) )
            )
          )
        )
        2
      )
    )
    10
  )
)
(:scoring
  (+ 10 (* 5 5 )
  )
)
)



(define (game game-id-412) (:domain many-objects-room-v1)
(:setup
  (forall (?h - (either dodgeball dodgeball) ?t - hexagonal_bin ?c - teddy_bear)
    (game-conserved
      (in_motion ?b)
    )
  )
)
(:constraints
  (and
    (preference blockInTowerKnockedByDodgeball
      (exists (?b - game_object)
        (then
          (once (and (adjacent room_center ?d) (not (is_setup_object top_shelf) ) ) )
          (once (forall (?h - building) (agent_holds ?b) ) )
          (once (and (and (not (in_motion ?b) ) (agent_holds ?b) ) (<= (distance desk ?b) (distance desk ?b)) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* 3 (count-once-per-objects blockInTowerKnockedByDodgeball:dodgeball) )
      (* (count-once-per-objects blockInTowerKnockedByDodgeball:book) (<= (+ (count blockInTowerKnockedByDodgeball:dodgeball) (= 7 (count-once-per-objects blockInTowerKnockedByDodgeball:blue_dodgeball:dodgeball) )
          )
          (- 15 )
        )
      )
    )
    (not
      (not
        (>= 6 3 )
      )
    )
  )
)
(:scoring
  (count blockInTowerKnockedByDodgeball:cube_block)
)
)



(define (game game-id-413) (:domain few-objects-room-v1)
(:setup
  (forall (?d - dodgeball)
    (and
      (forall (?h - (either dodgeball side_table pillow) ?c - game_object)
        (exists (?b - hexagonal_bin)
          (and
            (exists (?db - (either laptop laptop bridge_block) ?o3 ?h - ball)
              (and
                (exists (?o4 - (either yellow yellow))
                  (exists (?w2 - triangular_ramp)
                    (game-conserved
                      (and
                        (in_motion ?d)
                        (exists (?t1 - ball)
                          (agent_holds ?b)
                        )
                      )
                    )
                  )
                )
              )
            )
            (and
              (and
                (game-conserved
                  (and
                    (and
                      (< (distance ?b ?b) 1)
                      (not
                        (not
                          (in ?b ?d)
                        )
                      )
                    )
                    (and
                      (not
                        (on ?d ?o)
                      )
                      (on ?c agent)
                    )
                  )
                )
                (game-conserved
                  (in_motion ?l2)
                )
              )
            )
            (game-conserved
              (in_motion ?c)
            )
          )
        )
      )
      (exists (?b5 - hexagonal_bin)
        (game-optional
          (not
            (not
              (touch ?d ?c)
            )
          )
        )
      )
      (game-optional
        (in_motion ?o)
      )
    )
  )
)
(:constraints
  (and
    (preference throwMovesBeachballWithoutKnockingTeddy
      (exists (?c - (either blue_cube_block bridge_block) ?bl - golfball)
        (then
          (once (agent_holds ?d) )
        )
      )
    )
    (preference dropAttempt
      (exists (?f - building ?c - block)
        (then
          (once (agent_holds ?t) )
          (once (in_motion ?c) )
          (hold (not (in ?c ?c) ) )
        )
      )
    )
    (forall (?h - cube_block)
      (and
        (preference objectMovedRoomSide
          (exists (?o - drawer)
            (at-end
              (exists (?c4 ?o - game_object ?h - hexagonal_bin ?d1 - curved_wooden_ramp ?c5 - hexagonal_bin)
                (= 1)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (- 20 )
        (* (count throwMovesBeachballWithoutKnockingTeddy:dodgeball:dodgeball) 0.7 )
      )
      (>= 6 (total-score) )
    )
    (= (+ (count throwMovesBeachballWithoutKnockingTeddy:basketball) (* (* 5 (count-once-per-objects dropAttempt:red:dodgeball) )
          7
          (* 10 (count objectMovedRoomSide:pyramid_block:pink_dodgeball) )
        )
      )
      (total-time)
    )
  )
)
(:scoring
  (count objectMovedRoomSide:beachball)
)
)



(define (game game-id-414) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (on ?r ?o)
  )
)
(:constraints
  (and
    (preference golfballLandsInBinThroughRamp
      (exists (?c - cube_block)
        (then
          (once (in_motion ?c) )
          (once (or (agent_holds ?c) (adjacent desk ?s) ) )
          (hold (= 0.5 5 8) )
        )
      )
    )
  )
)
(:terminal
  (> (total-score) (total-time) )
)
(:scoring
  (* (count golfballLandsInBinThroughRamp:purple) 3 )
)
)



(define (game game-id-415) (:domain few-objects-room-v1)
(:setup
  (forall (?l - (either wall yellow_cube_block))
    (forall (?h - ball ?d - ball)
      (forall (?d - ball ?o - hexagonal_bin)
        (forall (?h - ball)
          (and
            (exists (?b - dodgeball ?b7 - dodgeball ?c - flat_block)
              (game-optional
                (in pink_dodgeball ?c)
              )
            )
            (and
              (and
                (game-optional
                  (and
                    (exists (?h - doggie_bed ?l4 - dodgeball)
                      (in_motion ?t)
                    )
                    (> (distance ?w2 bed) (distance ?l ?h))
                  )
                )
                (and
                  (game-optional
                    (not
                      (not
                        (and
                          (not
                            (not
                              (not
                                (agent_holds ?d2)
                              )
                            )
                          )
                          (in ?o ?r)
                        )
                      )
                    )
                  )
                )
              )
              (exists (?r2 - doggie_bed)
                (forall (?d - pillow ?o3 - game_object ?o - (either teddy_bear laptop cube_block))
                  (exists (?s ?o5 ?h ?d - hexagonal_bin ?d - ball)
                    (game-conserved
                      (touch ?r2 ?b6)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference agentLeavesDogbedOrNoMoreBalls
      (exists (?d ?w ?t - ball ?t ?d - doggie_bed ?h - hexagonal_bin)
        (at-end
          (and
            (and
              (in_motion ?t)
              (agent_holds ?h)
            )
            (touch ?d ?b2)
          )
        )
      )
    )
    (preference thrownObjectHitsComputer
      (exists (?b6 - doggie_bed)
        (then
          (once (not (in_motion ?w2) ) )
          (once (agent_holds ?o) )
          (once (in_motion ?d) )
        )
      )
    )
  )
)
(:terminal
  (>= 6 3 )
)
(:scoring
  (+ 5 (* (count-same-positions agentLeavesDogbedOrNoMoreBalls:blue_dodgeball:green) (count agentLeavesDogbedOrNoMoreBalls:wall) )
  )
)
)



(define (game game-id-416) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (in_motion ?s)
  )
)
(:constraints
  (and
    (forall (?c - doggie_bed)
      (and
        (preference ballThrownThroughRampAndBlocksToBin
          (exists (?b - doggie_bed)
            (then
              (once (and (not (exists (?p1 - doggie_bed) (in_motion ?c) ) ) (agent_holds ?c) ) )
              (once (on ?c ?b) )
              (once (agent_holds ?t) )
            )
          )
        )
        (preference matchingBuildingBuilt
          (exists (?p2 ?l - dodgeball ?o - cylindrical_block)
            (then
              (once (same_color ?d pink) )
              (hold (agent_holds ?c) )
              (once (not (in_motion pink_dodgeball) ) )
            )
          )
        )
        (preference throwOverRamp
          (exists (?w ?d - dodgeball ?p3 - ball)
            (then
              (hold (not (on ?g ?c) ) )
              (hold (in_motion ?d) )
              (once (not (agent_holds ?o) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (total-score) 3 )
    (>= (* (* (* (count throwOverRamp:blue_pyramid_block) 18 )
          (* 1 (count-once-per-objects ballThrownThroughRampAndBlocksToBin:dodgeball) )
        )
        (+ 5 4 (< (* 5 (* 5 2 )
            )
            (= (count ballThrownThroughRampAndBlocksToBin:dodgeball) (* 6 5 )
            )
          )
        )
      )
      2
    )
  )
)
(:scoring
  (* 5 5 )
)
)



(define (game game-id-417) (:domain medium-objects-room-v1)
(:setup
  (forall (?o4 - teddy_bear)
    (game-conserved
      (on ?o4 ?d)
    )
  )
)
(:constraints
  (and
    (preference throwMissesBin
      (exists (?d - dodgeball)
        (then
          (hold (in_motion ?d) )
          (hold-while (and (not (in_motion ?c) ) (and (>= 1 1) (> 3 (distance door ?d)) ) (faces ?l2 ?d) (and (and (on rug ?d) (agent_holds ?d) ) (and (= (x_position ?d) (distance room_center ?d)) (exists (?o - golfball) (on floor bed) ) ) (and (in ?d ?c4) (or (and (and (adjacent ?d ?b) (not (agent_holds ?d) ) (and (is_setup_object ?d) (and (agent_holds ?d) (in_motion ?c) ) (same_object ?s ?d) (in_motion ?b) (on ?d ?b) (forall (?b - hexagonal_bin) (and (not (in ?d ?b) ) (in ?b ?b) ) ) ) (not (and (and (game_over ) (not (< (distance ?d ?d) 0) ) ) (exists (?c1 - teddy_bear ?b ?g - ball) (agent_holds ?d) ) ) ) (<= (distance ?d ?d) 1) (in_motion ?d) ) (in_motion ?o) ) (and (same_color ?b ?d) (in ?c ?d) ) ) ) ) ) (agent_holds ?d) )
          (hold (agent_holds ?b) )
        )
      )
    )
  )
)
(:terminal
  (< (+ 10 3 )
    (total-time)
  )
)
(:scoring
  (* 2 (* 3 (count throwMissesBin:dodgeball) )
  )
)
)



(define (game game-id-418) (:domain medium-objects-room-v1)
(:setup
  (or
    (game-optional
      (same_object ?l2 rug)
    )
  )
)
(:constraints
  (and
    (forall (?r2 - hexagonal_bin ?b - cube_block)
      (and
        (preference gameObjectToBin
          (exists (?s - (either pen dodgeball lamp cube_block cylindrical_block dodgeball cylindrical_block))
            (then
              (hold-while (same_type ?b ?l2) (and (in ?c3 ?o) (and (and (in_motion ?o) (in desk ?b) (in_motion ?o1) ) (touch ?s ?b) ) ) )
              (once (faces ?o ?b) )
              (once (and (and (on ?d ?c2) (< (distance desk ?b) 2) ) (adjacent_side agent back ?b front) (and (and (same_object ?b ?s) (not (and (agent_holds ?s) (and (agent_holds rug) (same_color ?t blue) (not (agent_crouches ) ) ) (not (in ?b7 ?l) ) ) ) ) (broken bed) ) (game_start ) ) )
            )
          )
        )
      )
    )
    (forall (?o - game_object)
      (and
        (preference ballToBinFromBed
          (exists (?o - (either dodgeball dodgeball alarm_clock) ?o1 - cube_block)
            (then
              (once (in_motion ?o1) )
              (once (and (and (not (and (and (and (not (agent_holds ?o) ) (and (and (and (rug_color_under ?d ?o1) (in ?r ?o) ) (agent_holds ?b) ) (in_motion ?b) (adjacent ?o ?o) ) ) (adjacent_side ?o1 back ?t) ) (open agent) ) ) (in_motion ?o1) (agent_holds ?c) (< (distance agent ?o) (distance ?h ?w1)) ) (not (and (agent_holds ?o) (agent_holds ?o1) ) ) (on ?o ?o1) (touch ?o1 ?d) ) )
              (hold (game_over ) )
            )
          )
        )
        (preference dodgeballThrownToBinFromDesk
          (exists (?r - building ?b - ball)
            (then
              (hold (and (not (and (not (not (agent_holds ?h) ) ) (and (not (not (not (on ?b ?g) ) ) ) (not (agent_holds ?o) ) (and (not (in_motion ?l2) ) (same_object ?b ?o) ) (and (and (not (not (in_motion ?o) ) ) (above bed ?b) (agent_holds ?bl) (in_motion rug) ) (game_over ) (in_motion ?b) ) (in ?o ?o) (not (in ?b ?o) ) (and (same_type ?b ?b) (not (in_motion ?h) ) ) (adjacent_side ?o front_left_corner agent front) (agent_holds ?b3) (game_over ) (not (on ?o ?b) ) (in ?c ?o) ) ) ) (and (or (adjacent room_center ?d) (in_motion ?h) ) (and (exists (?b - game_object) (in_motion ?b) ) (agent_holds ?o3) ) ) ) )
              (once (and (not (and (< 4 (distance ?d ?d)) (on ?b ?c2) ) ) ) )
              (hold (agent_holds ?o) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (or
        (or
          (>= (< (count ballToBinFromBed:yellow) 20 )
            10
          )
          (< (count gameObjectToBin:orange) 3 )
          (>= 10 (total-score) )
        )
        (>= (count-once-per-objects ballToBinFromBed:yellow) (total-score) )
      )
      (>= (count dodgeballThrownToBinFromDesk:beachball) 8 )
      (>= 2 (* 1 0 )
      )
      (or
        (or
          (or
            (< 180 (+ (* (= (count-total ballToBinFromBed:blue_cube_block) 2 (count-once gameObjectToBin:basketball) )
                  2
                )
                (count-longest gameObjectToBin:hexagonal_bin:basketball)
              )
            )
            (not
              (<= (* (count dodgeballThrownToBinFromDesk:tan) (* (* (* (* (count ballToBinFromBed:triangle_block) 1 )
                        (count dodgeballThrownToBinFromDesk:green)
                      )
                      5
                    )
                    (+ (= (count dodgeballThrownToBinFromDesk:basketball:blue_cube_block) 5 )
                      1
                    )
                  )
                )
                (count-once dodgeballThrownToBinFromDesk:dodgeball)
              )
            )
          )
          (or
            (>= (+ 5 5 )
              (* (- (* (* 2 2 (count-unique-positions gameObjectToBin:basketball) (count-once-per-objects ballToBinFromBed:beachball) )
                    (external-forall-maximize
                      (* (count dodgeballThrownToBinFromDesk:basketball) 3 )
                    )
                    (external-forall-minimize
                      (* (count gameObjectToBin:pyramid_block:pyramid_block:dodgeball) 2 )
                    )
                  )
                )
                (+ 5 (* (count ballToBinFromBed:pyramid_block) (count dodgeballThrownToBinFromDesk:pink) )
                )
              )
            )
            (or
              (or
                (>= 30 5 )
                (or
                  (>= 1 20 )
                  (>= (count-once-per-objects dodgeballThrownToBinFromDesk:hexagonal_bin) (count dodgeballThrownToBinFromDesk:basketball) )
                )
              )
              (or
                (>= (* (* (+ (count-once-per-objects gameObjectToBin:yellow_cube_block) (+ (count dodgeballThrownToBinFromDesk:yellow) (count dodgeballThrownToBinFromDesk:pink) )
                      )
                      (count-unique-positions gameObjectToBin)
                    )
                    (external-forall-maximize
                      (= (* 4 10 5 )
                      )
                    )
                  )
                  1
                )
                (>= 3 (total-time) )
              )
            )
            (and
              (not
                (>= 20 7 )
              )
              (or
                (= 10 (count-once-per-objects dodgeballThrownToBinFromDesk:beachball) )
                (or
                  (>= 7 3 )
                  (>= (* (count gameObjectToBin:dodgeball) (count gameObjectToBin:purple:yellow:yellow_cube_block) )
                    (total-score)
                  )
                )
              )
              (or
                (< (* (+ 20 3 2 )
                    (count ballToBinFromBed:pink)
                  )
                  (count-once-per-objects ballToBinFromBed:basketball)
                )
                (>= 300 (count ballToBinFromBed:pyramid_block:book) )
              )
            )
          )
          (>= (count-once ballToBinFromBed:beachball) 1 )
        )
        (>= (count-once-per-external-objects gameObjectToBin:tall_cylindrical_block:book) 10 )
        (>= (count ballToBinFromBed:tall_cylindrical_block:tall_cylindrical_block) (+ 2 3 )
        )
        (> (count-once-per-objects ballToBinFromBed:dodgeball) (count dodgeballThrownToBinFromDesk:cube_block:yellow) )
      )
    )
    (> (total-score) 8 )
  )
)
(:scoring
  (* (count ballToBinFromBed:golfball) (* (count gameObjectToBin:basketball) (* 1 (+ 5 6 )
      )
    )
  )
)
)



(define (game game-id-419) (:domain many-objects-room-v1)
(:setup
  (or
    (game-conserved
      (in_motion ?l)
    )
    (forall (?b4 - dodgeball)
      (and
        (game-optional
          (in_motion ?b4)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwObjectToBin
      (exists (?b2 - wall ?d - hexagonal_bin)
        (then
          (once (and (and (and (not (in_motion ?b) ) (in_motion ?c) ) (and (not (equal_z_position ?d ?l3) ) (in ?b ?d) ) (and (not (touch ?d ?d) ) (and (in ?b4 ?d) ) (not (in_motion ?c) ) ) (and (not (in_motion ?r) ) (and (or (or (adjacent agent ?b) (>= 8 6) ) (not (on ?o ?d) ) ) (and (not (same_color ?d blue) ) (< (distance door agent) (distance room_center ?d)) (on agent ?b1) ) ) (in ?d ?d) ) ) (< (distance room_center ?d) 2) ) )
          (once (in ?h ?d) )
          (hold (not (not (exists (?c - drawer) (adjacent desk ?d) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count throwObjectToBin:blue) (+ (* (count-increasing-measure throwObjectToBin:dodgeball) 0 )
      8
    )
  )
)
(:scoring
  (count-once-per-external-objects throwObjectToBin:dodgeball)
)
)



(define (game game-id-420) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?w - hexagonal_bin)
      (forall (?h ?l2 ?b ?h - (either game_object key_chain cd))
        (and
          (forall (?t - hexagonal_bin)
            (forall (?c - (either mug cd blue_cube_block) ?o - (either key_chain))
              (and
                (exists (?h - golfball ?c - shelf)
                  (game-conserved
                    (agent_holds ?d)
                  )
                )
                (game-optional
                  (and
                    (same_object ?o ?o)
                    (touch ?o2 ?w)
                  )
                )
              )
            )
          )
          (exists (?b - (either red hexagonal_bin laptop))
            (game-conserved
              (agent_holds ?w)
            )
          )
        )
      )
    )
    (and
      (forall (?b1 ?l3 - curved_wooden_ramp)
        (and
          (and
            (and
              (and
                (exists (?l - (either laptop golfball))
                  (game-optional
                    (not
                      (<= 3 (distance ?d ?t))
                    )
                  )
                )
                (game-conserved
                  (in_motion ?g)
                )
              )
            )
          )
        )
      )
      (forall (?l - (either wall cylindrical_block))
        (and
          (forall (?b - ball)
            (exists (?b5 - game_object ?d - hexagonal_bin)
              (and
                (or
                  (and
                    (exists (?h - beachball ?g - teddy_bear)
                      (exists (?t - blue_pyramid_block)
                        (exists (?o - block)
                          (forall (?c6 - hexagonal_bin)
                            (game-conserved
                              (and
                                (= (distance ?g agent) (distance door ?b3))
                                (in_motion ?h)
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                  (exists (?o - wall)
                    (and
                      (game-conserved
                        (in ?w2 ?d)
                      )
                    )
                  )
                  (exists (?c - dodgeball)
                    (and
                      (forall (?h - drawer)
                        (exists (?h - hexagonal_bin)
                          (exists (?x - (either cube_block beachball))
                            (game-conserved
                              (exists (?b - tall_cylindrical_block ?h ?b9 - curved_wooden_ramp)
                                (touch bottom_shelf ?x)
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
          (and
            (forall (?r - hexagonal_bin)
              (exists (?t - cube_block)
                (exists (?h - game_object)
                  (exists (?r - dodgeball ?h - hexagonal_bin)
                    (and
                      (game-conserved
                        (and
                          (and
                            (in ?b ?d)
                            (in_motion ?b)
                          )
                          (agent_holds ?h)
                          (agent_holds ?b)
                          (and
                            (and
                              (not
                                (in_motion ?d)
                              )
                              (and
                                (in_motion ?t)
                                (in_motion ?h)
                              )
                            )
                            (not
                              (not
                                (not
                                  (and
                                    (not
                                      (object_orientation ?d2 upright)
                                    )
                                    (agent_holds ?c)
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                      (game-conserved
                        (agent_holds desk)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
    (game-conserved
      (touch ?b ?l)
    )
  )
)
(:constraints
  (and
    (preference throwBallToDoggieBed
      (exists (?g - pyramid_block ?ob - building)
        (then
          (hold (not (and (agent_holds ?ob) (not (not (adjacent ?ob ?c) ) ) ) ) )
          (hold-while (agent_holds ?t) (in_motion agent) )
          (hold (not (on ?ob ?ob) ) )
        )
      )
    )
    (preference cubeBlockInBuilding
      (exists (?d - (either golfball cube_block watch))
        (then
          (hold (not (on ?h rug) ) )
          (once (agent_holds rug) )
          (once (touch ?d ?o) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) 4 )
)
(:scoring
  (* (= (count throwBallToDoggieBed:dodgeball) (* (count-once-per-objects throwBallToDoggieBed) (* (count throwBallToDoggieBed:beachball:yellow) (count throwBallToDoggieBed:book) )
      )
    )
    (* (count throwBallToDoggieBed:dodgeball) 3 )
    (count-once-per-objects cubeBlockInBuilding:red)
  )
)
)



(define (game game-id-421) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?o - hexagonal_bin ?c3 - red_dodgeball)
      (exists (?o4 - (either tall_cylindrical_block alarm_clock))
        (not
          (game-optional
            (and
              (forall (?b8 - (either cd pencil hexagonal_bin))
                (and
                  (in_motion ?d)
                  (agent_holds ?b)
                )
              )
              (in ?o4 ?c3)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference beachballBouncedOffRamp
      (exists (?w2 - color ?o - hexagonal_bin ?g - game_object)
        (then
          (once (agent_holds ?l1) )
          (once (forall (?b5 - curved_wooden_ramp) (and (forall (?w - chair) (same_color ?g ?tb) ) (on ?g ?b5) ) ) )
          (once (not (agent_holds ?g) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (> (total-time) (external-forall-minimize (count beachballBouncedOffRamp:yellow_cube_block:tan:golfball) ) )
  )
)
(:scoring
  (- (* 3 (* 5 2 )
    )
  )
)
)



(define (game game-id-422) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (in_motion ?ob)
  )
)
(:constraints
  (and
    (preference objectThrownFromRug
      (exists (?bl - doggie_bed)
        (then
          (once (in_motion ?bl) )
          (hold-while (and (not (in_motion rug) ) (agent_holds agent) ) (in_motion ?bl) )
          (once (adjacent room_center ?bl) )
        )
      )
    )
  )
)
(:terminal
  (>= (count objectThrownFromRug:pyramid_block) (count objectThrownFromRug:dodgeball) )
)
(:scoring
  (> (count objectThrownFromRug:pink_dodgeball:top_drawer) (+ (external-forall-maximize (external-forall-maximize (+ 3 (* (count objectThrownFromRug:bed:golfball) 0 )
            (count objectThrownFromRug:basketball)
            (* 16 (count objectThrownFromRug) )
            (* (count-once-per-objects objectThrownFromRug:rug) (count objectThrownFromRug:dodgeball:pyramid_block) (count objectThrownFromRug:purple) )
            (external-forall-maximize
              (count-once objectThrownFromRug:dodgeball)
            )
            300
          )
        )
      )
      (count objectThrownFromRug)
    )
  )
)
)



(define (game game-id-423) (:domain many-objects-room-v1)
(:setup
  (exists (?b - hexagonal_bin ?b - wall)
    (exists (?o - (either laptop cube_block) ?c - game_object)
      (exists (?h ?b3 - hexagonal_bin)
        (or
          (and
            (and
              (and
                (game-optional
                  (adjacent agent ?b3)
                )
              )
              (game-conserved
                (agent_holds ?b)
              )
              (exists (?f - blue_cube_block)
                (and
                  (exists (?p2 - color)
                    (and
                      (game-conserved
                        (agent_holds ?p)
                      )
                    )
                  )
                )
              )
              (game-conserved
                (in_motion ?b)
              )
            )
            (forall (?tb - game_object)
              (game-conserved
                (and
                  (and
                    (agent_holds ?h)
                    (agent_holds ?b)
                    (not
                      (in_motion ?b)
                    )
                  )
                  (agent_holds ?tb)
                )
              )
            )
            (or
              (forall (?b5 - (either doggie_bed hexagonal_bin laptop))
                (game-conserved
                  (in pink_dodgeball agent)
                )
              )
            )
          )
          (forall (?h - beachball ?l - dodgeball)
            (forall (?d - hexagonal_bin ?o - (either side_table dodgeball ball))
              (exists (?l2 - ball)
                (exists (?b - block ?b3 - dodgeball)
                  (game-conserved
                    (agent_holds ?w)
                  )
                )
              )
            )
          )
          (game-optional
            (agent_holds ?d)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockPickedUp
      (exists (?d - shelf)
        (then
          (hold (object_orientation ?d upright) )
          (once (in_motion ?d) )
          (once (and (< 2 1) (not (and (and (agent_holds ?d) (agent_holds ?d) (not (and (and (game_start ) (in ?d ?d) ) (agent_holds ?d) ) ) ) (agent_holds ?b) ) ) ) )
        )
      )
    )
    (preference agentLeavesDogbedOrNoMoreBalls
      (exists (?b - dodgeball)
        (then
          (hold-while (agent_holds agent) (in_motion ?b) )
          (once (rug_color_under ?b3 blue) )
          (once (and (in_motion ?b) (agent_holds ?b) ) )
        )
      )
    )
    (forall (?d - hexagonal_bin)
      (and
        (preference throwAttempt
          (exists (?c - cube_block)
            (at-end
              (in_motion ?d)
            )
          )
        )
      )
    )
    (preference blockOnBlockInTowerAtEnd
      (exists (?r - hexagonal_bin ?o - dodgeball)
        (at-end
          (not
            (is_setup_object ?d)
          )
        )
      )
    )
    (preference ballThrownThroughRampToBin
      (exists (?ob - chair)
        (then
          (once (exists (?b - dodgeball ?b ?b3 - wall ?r2 - ball) (not (and (agent_holds ?o1) (same_color ?ob pink) ) ) ) )
          (hold-while (exists (?c - shelf) (in_motion ?g) ) (not (not (not (and (not (touch ?b ?l) ) (< (distance room_center ?d) 3) ) ) ) ) (same_type ?c ?l3) (in ?d ?b1) )
          (once (agent_holds ?ob) )
        )
      )
    )
  )
)
(:terminal
  (>= 7 (< 2 2 )
  )
)
(:scoring
  (* 30 (- (count agentLeavesDogbedOrNoMoreBalls:pyramid_block:hexagonal_bin:yellow_cube_block) )
  )
)
)



(define (game game-id-424) (:domain medium-objects-room-v1)
(:setup
  (exists (?p1 - dodgeball)
    (exists (?b - (either alarm_clock dodgeball pen))
      (and
        (forall (?t - hexagonal_bin)
          (game-conserved
            (forall (?d - cube_block)
              (and
                (agent_holds ?b)
              )
            )
          )
        )
        (forall (?t2 - triangular_ramp)
          (exists (?b - red_dodgeball ?h ?h - curved_wooden_ramp)
            (exists (?d - red_dodgeball)
              (game-conserved
                (in_motion ?d)
              )
            )
          )
        )
        (game-conserved
          (or
            (not
              (> (distance_side ?d ?p1 ?p1 front) (distance desk ?r))
            )
            (in ?h ?h)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b3 - color)
      (and
        (preference dodgeballHitsBin
          (exists (?o - wall ?c - dodgeball)
            (then
              (once (not (in rug ?c) ) )
              (once (not (agent_holds ?b3) ) )
              (hold (not (same_color ?c ?b3) ) )
            )
          )
        )
        (preference ballThrownFromBehindBlock
          (exists (?ob - pillow)
            (then
              (hold (in_motion ?b) )
              (once (not (not (not (in_motion ?b3) ) ) ) )
              (once (above ?ob ?b) )
            )
          )
        )
        (preference dodgeballThrownToBinFromDesk
          (exists (?f - doggie_bed)
            (at-end
              (not
                (not
                  (not
                    (exists (?b2 - (either doggie_bed rug side_table))
                      (on ?f ?b3)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects dodgeballThrownToBinFromDesk:blue_dodgeball:dodgeball) (- 100 )
  )
)
(:scoring
  (count-overlapping dodgeballThrownToBinFromDesk:beachball)
)
)



(define (game game-id-425) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?w - dodgeball)
      (game-conserved
        (not
          (same_color ?w ?w)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballKnocksBlockFromRug
      (exists (?p - dodgeball)
        (then
          (once (exists (?d - doggie_bed ?p2 ?c3 - tall_cylindrical_block) (and (in ?b ?b) (not (and (adjacent agent ?b3) (not (not (is_setup_object ?o1) ) ) ) ) ) ) )
          (once (in ?p ?c) )
          (hold (not (same_object ?b ?b) ) )
        )
      )
    )
    (preference matchingBuildingBuilt
      (exists (?b ?c1 - (either dodgeball yellow_cube_block))
        (at-end
          (not
            (in ?b ?c)
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* (= (* (* 2 (external-forall-maximize (count matchingBuildingBuilt:yellow:green) ) )
            5
          )
        )
        (count ballKnocksBlockFromRug:dodgeball)
      )
      (count matchingBuildingBuilt:dodgeball)
    )
    (<= (+ (count-once-per-external-objects ballKnocksBlockFromRug:cube_block) 4 )
      3
    )
    (= (> (+ 300 (* (+ 0.7 (count ballKnocksBlockFromRug:book:side_table:hexagonal_bin) )
            (count-once-per-objects matchingBuildingBuilt:pink_dodgeball:top_drawer)
          )
        )
        6
      )
      (total-time)
    )
  )
)
(:scoring
  (* 8 (* (count matchingBuildingBuilt:dodgeball) (+ 9 (+ (count-once matchingBuildingBuilt:basketball) 15 )
      )
    )
  )
)
)



(define (game game-id-426) (:domain medium-objects-room-v1)
(:setup
  (exists (?c - (either alarm_clock yellow_cube_block doggie_bed) ?b5 - chair)
    (and
      (and
        (forall (?b8 - wall)
          (game-conserved
            (in ?c ?d)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectToBinOnFirstTry
      (exists (?d - (either wall pillow game_object))
        (then
          (once (in_motion ?d) )
          (once (equal_z_position ?d agent) )
          (once (in_motion ?d) )
        )
      )
    )
    (forall (?o2 - cube_block)
      (and
        (preference basketMadeFromRug
          (exists (?p - (either laptop pencil cd doggie_bed))
            (then
              (once (agent_holds ?p) )
              (once (in ?b ?l) )
              (once (in ?p bed) )
            )
          )
        )
        (preference ballThrownToRampToBed
          (exists (?b6 - cube_block)
            (then
              (once (agent_holds ?b6) )
              (once (on ?b6 ?b6) )
              (once (and (not (and (agent_holds ?o) (not (adjacent_side room_center ?o2 ?b6) ) ) ) (adjacent agent ?o2) ) )
              (once (and (adjacent ?o2 ?b1) (> (distance ?b6 ?p) (distance_side room_center front ?b2)) ) )
            )
          )
        )
      )
    )
    (preference ballThrownFromBehindBlock
      (exists (?o1 - hexagonal_bin ?b - hexagonal_bin)
        (then
          (hold-while (on ?b ?b) (not (is_setup_object ?b) ) (in agent ?b1) (exists (?t - cube_block ?b - (either alarm_clock basketball pyramid_block)) (and (exists (?w - (either desktop doggie_bed) ?o2 - beachball) (not (in_motion ?h) ) ) (and (same_color ?b ?tb) (object_orientation ?b ?b) ) ) ) )
          (hold (in ?b ?g) )
          (hold (and (exists (?o2 - teddy_bear ?b - hexagonal_bin ?b - hexagonal_bin) (in_motion ?b) ) (not (not (agent_holds ?b) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (<= 1 (* 6 16 (count-longest ballThrownToRampToBed:dodgeball) )
  )
)
(:scoring
  (count-longest objectToBinOnFirstTry:wall)
)
)



(define (game game-id-427) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (forall (?ob - game_object)
        (game-optional
          (on ?ob ?d)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b10 - chair ?g - (either cellphone bridge_block) ?d2 - chair)
      (and
        (preference objectThrownFromRug
          (exists (?p2 - dodgeball)
            (then
              (once (in ?t ?p) )
              (once (agent_holds ?c) )
              (once (> (distance ?d2 ?d) (distance ?p2 ?h)) )
            )
          )
        )
        (preference itemInClosedDrawerAtEnd
          (exists (?d - hexagonal_bin)
            (at-end
              (and
                (on ?c ?d2)
                (agent_holds ?b)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (* (count itemInClosedDrawerAtEnd:dodgeball) (count-same-positions objectThrownFromRug:orange:yellow) 10 (count itemInClosedDrawerAtEnd:green) 2 (* (count objectThrownFromRug) 1 )
      (* (count-once itemInClosedDrawerAtEnd:hexagonal_bin) (* 5 (+ 2 1 )
        )
      )
      (* 7 (* 40 (count-once-per-external-objects objectThrownFromRug:basketball:dodgeball) (external-forall-maximize (+ (* 8 (count-once-per-objects objectThrownFromRug:dodgeball) )
              8
            )
          )
          (count-shortest itemInClosedDrawerAtEnd:alarm_clock:golfball)
          (* (count-once-per-external-objects objectThrownFromRug:pink:green:book) (+ (count objectThrownFromRug:brown:basketball) (+ 10 4 )
            )
          )
          (+ (count-same-positions objectThrownFromRug:purple) (* 25 (count objectThrownFromRug:dodgeball:pink_dodgeball) 180 3 (* (count itemInClosedDrawerAtEnd:red) (+ 10 (* (count-once itemInClosedDrawerAtEnd:dodgeball) (* 1 (* 1 (* (* (count itemInClosedDrawerAtEnd:yellow:basketball) 8 )
                          20
                          (* (count-once-per-objects itemInClosedDrawerAtEnd:basketball) (count-total objectThrownFromRug:top_drawer) (count itemInClosedDrawerAtEnd:blue_cube_block:dodgeball:beachball) (count-once-per-objects objectThrownFromRug:cylindrical_block) (count objectThrownFromRug:pink) )
                        )
                      )
                      (count-once-per-objects objectThrownFromRug:dodgeball)
                    )
                  )
                )
              )
              3
            )
          )
        )
      )
      (count-once-per-objects objectThrownFromRug:hexagonal_bin)
      5
      0
      4
    )
    15
  )
)
(:scoring
  (- (count-once-per-objects itemInClosedDrawerAtEnd) )
)
)



(define (game game-id-428) (:domain few-objects-room-v1)
(:setup
  (forall (?d ?d1 - golfball ?o1 - beachball)
    (forall (?d - pyramid_block)
      (and
        (game-optional
          (on ?o1 ?bl)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference pillowMovedToRoomCenter
      (exists (?d - ball)
        (then
          (once (not (adjacent ?c ?d) ) )
          (once (is_setup_object ?d) )
          (once (in ?b ?d) )
        )
      )
    )
    (preference dropAttempt
      (exists (?x - doggie_bed)
        (then
          (once (and (and (in_motion desk) (and (object_orientation ?b ?x) (and (< (distance_side desk back ?x front) (distance ?w ?b7)) (and (between ?d ?x ?h) (agent_holds ?x) (in ?x ?x) ) ) (in_motion ?d) ) ) (and (and (and (agent_holds ?b) (agent_holds ?x) ) (exists (?b - blue_pyramid_block) (in_motion ?d) ) ) (in ?p ?b3) (and (and (not (not (and (not (agent_holds ?x) ) (not (exists (?d - shelf) (agent_holds ?d) ) ) ) ) ) (= (distance ?x ?x) 1) ) (not (not (adjacent_side ?x left ?b3) ) ) ) (or (< (distance bed ?r) 0) (and (in_motion ?x) (in_motion ?x) ) (and (or (not (in_motion ?b) ) (and (in_motion ?x) (and (in ?x ?x) (= (distance ?x ?p) (distance door ?h)) (agent_holds ?x) ) ) ) (not (on ?b ?h) ) ) ) (on ?d ?x) (< 1 (distance agent ?b)) ) ) )
          (once (and (touch ?o2 ?x) (adjacent ?w1 ?b) ) )
          (once (and (and (not (and (game_over ) (and (agent_holds ?x) (not (< 2 (distance ?c ?b5)) ) (and (touch ?g ?b) (on ?x ?h) ) (agent_holds ?b5) ) (touch door ?x) (in_motion ?h) (rug_color_under ?c2 blue) (in_motion agent) (agent_holds side_table) (on ?b1 ?x) ) ) (not (agent_holds ?x) ) ) (and (not (agent_holds ?r) ) (in_motion ?x) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 40 (count dropAttempt:beachball) )
    (total-score)
  )
)
(:scoring
  (count-once-per-external-objects pillowMovedToRoomCenter:blue_dodgeball:pink_dodgeball)
)
)



(define (game game-id-429) (:domain medium-objects-room-v1)
(:setup
  (exists (?o1 ?r ?b1 ?d - chair ?d - drawer ?c - ball)
    (game-conserved
      (agent_holds ?c)
    )
  )
)
(:constraints
  (and
    (preference dodgeballAndBasketballInBin
      (exists (?b - hexagonal_bin)
        (then
          (once (and (and (adjacent desk ?r) (not (in_motion ?b) ) (on ?b ?c) ) (or (and (in_motion ?g) (in_motion ?b) ) (touch ?d ?b) ) ) )
          (once (touch ?b ?c) )
          (once (adjacent_side room_center front ?b) )
        )
      )
    )
    (forall (?d - pyramid_block)
      (and
        (preference throwAttemptFromDoor
          (then
            (hold-while (agent_holds ?b) (on ?d agent) )
            (hold (on ?c ?o1) )
            (hold-while (adjacent_side room_center left ?d) (and (on ?b ?b) (agent_holds ?h) (adjacent room_center desk) ) (and (same_color ?b pink) (in floor ?d) ) (< (distance ?r ?d) (distance_side ?d ?d rug back)) )
          )
        )
        (preference watchOnShelf
          (exists (?d - curved_wooden_ramp)
            (then
              (once (on agent ?d) )
              (once (not (agent_holds ?b) ) )
              (hold (not (and (game_over ) (in_motion ?d) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (+ 5 (+ 10 4 )
      )
      (* (* (* (* (count throwAttemptFromDoor:dodgeball) 9 (* (count-once-per-objects throwAttemptFromDoor:bed) (count-once-per-objects throwAttemptFromDoor:pink) 2 )
            )
            2
            3
          )
          (external-forall-maximize
            (count-once-per-objects dodgeballAndBasketballInBin:pink)
          )
        )
        (+ (count-once-per-external-objects throwAttemptFromDoor:hexagonal_bin:basketball) (* 5 (* 5 3 )
          )
        )
      )
    )
    18
  )
)
(:scoring
  (* (+ (count-once-per-objects dodgeballAndBasketballInBin:hexagonal_bin) 10 )
    (* (count-once-per-objects dodgeballAndBasketballInBin:yellow) (* (count throwAttemptFromDoor:hexagonal_bin) (external-forall-minimize (* (* (external-forall-maximize (count throwAttemptFromDoor:hexagonal_bin) ) 6 3 )
            (* 5 (count-once-per-objects throwAttemptFromDoor:beachball:basketball:basketball) )
          )
        )
        1
        (- (* (count-total dodgeballAndBasketballInBin:dodgeball) (* 3 (+ 8 5 )
              (+ (/ 4 (- 1 )
                )
                (count-same-positions watchOnShelf:dodgeball)
                (* 6 50 )
              )
              4
              (count watchOnShelf:hexagonal_bin:pyramid_block)
              3
            )
          )
        )
        (+ 50 18 )
        (* (count watchOnShelf:basketball) (* (count throwAttemptFromDoor:rug:dodgeball) 10 )
        )
      )
      (count-overlapping dodgeballAndBasketballInBin:purple)
      3
      10
      (* (>= (count throwAttemptFromDoor:alarm_clock) 5 )
        (* 3 5 )
        (count dodgeballAndBasketballInBin:pink)
        (* (* 12 3 )
          (count-once-per-objects throwAttemptFromDoor:alarm_clock:beachball)
          3
        )
        (* (* (count throwAttemptFromDoor:yellow_cube_block:beachball) (count-once-per-objects watchOnShelf:basketball) )
          (count throwAttemptFromDoor:purple:dodgeball)
        )
      )
    )
  )
)
)



(define (game game-id-430) (:domain few-objects-room-v1)
(:setup
  (exists (?b - doggie_bed)
    (game-conserved
      (not
        (on ?h ?b4)
      )
    )
  )
)
(:constraints
  (and
    (preference throwGolfballToBin
      (exists (?b4 - hexagonal_bin ?d1 - building)
        (then
          (once (not (not (not (in_motion ?d) ) ) ) )
          (once (not (and (not (or (and (and (and (in_motion ?d1) (or (not (in_motion ?s) ) (same_color ?g pink) ) ) (agent_holds ?d) (and (and (in_motion ?d1) (not (and (not (not (on ?d1 ?c2) ) ) (or (agent_holds ?d1) (adjacent ?h ?b6) ) ) ) (not (in_motion ?d1) ) ) (not (not (not (and (touch ?d1 ?d1) (adjacent ?h ?b) (in ?d1 ?d1) (adjacent_side room_center ?d1 ?t front) ) ) ) ) (on ?b ?d1) ) ) (and (equal_z_position ?s ?d1) ) ) (or (or (not (forall (?c3 - hexagonal_bin) (on ?l1 ?o) ) ) (on ?d1 ?t) (in_motion ?d) ) (not (and (not (not (in_motion ?d1) ) ) (not (exists (?d - hexagonal_bin) (agent_holds rug) ) ) ) ) ) ) ) (agent_holds ?d1) ) ) )
          (once (not (and (exists (?c - building) (not (<= 8 (distance room_center bed)) ) ) (or (in ?d1 ?t) (not (agent_holds ?d) ) ) ) ) )
        )
      )
    )
    (preference throwObjectToBin
      (exists (?l2 - shelf ?c5 - beachball)
        (then
          (once (and (and (in ?t ?c) (in_motion ?o) ) (in_motion ?c5) ) )
          (once (not (not (not (not (same_object ?c5 ?c5) ) ) ) ) )
          (once (same_object ?c5 ?c5) )
        )
      )
    )
    (preference dodgeballFromDeskToTarget
      (exists (?w2 - block)
        (then
          (hold (or (toggled_on ?c) (in ?w2 ?w2) ) )
          (hold-while (on ?w2 ?w2) (not (not (in_motion ?w2) ) ) )
          (hold-while (touch ?w2 ?w2) (in ?w2 ?t) )
        )
      )
    )
    (preference throwAttemptKnocksBlock
      (exists (?h - blue_cube_block ?tb - tall_cylindrical_block ?t - (either key_chain laptop basketball))
        (then
          (hold-while (agent_holds bed) (not (and (adjacent room_center agent) (< (distance room_center ?b) 6) ) ) )
          (once (< (distance desk ?b) (building_size agent)) )
          (once (and (agent_crouches ) (agent_holds ?t) (in_motion ?t) ) )
        )
      )
    )
    (preference ballDroppedInBin
      (exists (?d - flat_block)
        (then
          (hold (or (not (not (agent_holds ?b) ) ) (above ?d ?b) (on ?d agent) (not (not (not (in ?d ?b) ) ) ) ) )
          (once (in ?d ?d) )
          (hold (not (faces ?d ?o1) ) )
        )
      )
    )
    (preference woodenBlockMovedFromRugToDesk
      (exists (?h - doggie_bed)
        (at-end
          (or
            (exists (?d - book ?p2 - shelf)
              (on ?o ?h)
            )
            (agent_holds ?d)
          )
        )
      )
    )
  )
)
(:terminal
  (<= 9 (* (+ (count-once throwObjectToBin:beachball) (count-once-per-external-objects throwObjectToBin:basketball:golfball) 3 5 15 (count dodgeballFromDeskToTarget:basketball) (count throwAttemptKnocksBlock:dodgeball) 15 (count ballDroppedInBin:beachball) )
      (count-once-per-objects ballDroppedInBin:yellow)
      (count throwObjectToBin:golfball)
    )
  )
)
(:scoring
  (count throwObjectToBin:pink)
)
)



(define (game game-id-431) (:domain medium-objects-room-v1)
(:setup
  (exists (?ob - red_dodgeball)
    (and
      (game-conserved
        (equal_x_position ?r ?ob)
      )
      (and
        (game-conserved
          (<= 1 7)
        )
      )
      (and
        (and
          (exists (?w - ball)
            (game-optional
              (not
                (not
                  (on ?ob ?w2)
                )
              )
            )
          )
          (and
            (forall (?tb - hexagonal_bin)
              (game-conserved
                (agent_holds ?c)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c2 ?o4 - hexagonal_bin)
      (and
        (preference blockCorrectlyPicked
          (exists (?h - (either laptop bed dodgeball))
            (then
              (hold (is_setup_object ?h) )
              (once (agent_holds ?o4) )
              (hold (not (and (and (not (agent_holds ?l1) ) (game_start ) (= (distance rug ?c2) 1 1) ) ) ) )
            )
          )
        )
        (preference throwBallToDoggieBedOffWall
          (exists (?b - color)
            (then
              (hold (not (in ?p ?c2) ) )
              (once (and (in_motion ?o) (agent_holds ?ob) (not (agent_holds ?o4) ) ) )
              (once (and (not (in_motion ?o4) ) (and (in_motion ?b) (and (agent_holds ?h) (adjacent ?o4 ?b) ) ) ) )
            )
          )
        )
      )
    )
    (forall (?b9 - hexagonal_bin)
      (and
        (preference throwToBin
          (exists (?l4 - beachball ?h - dodgeball)
            (then
              (once (and (adjacent room_center ?p) (touch ?b9 ?b9) ) )
              (once (on ?d ?h) )
              (hold (<= 1 (distance ?h ?h)) )
            )
          )
        )
        (preference ballRolledOnRampToRug
          (exists (?b - building ?h - game_object)
            (then
              (once (and (adjacent_side ?b9 front ?h) (in_motion ?o) ) )
              (hold (between pink_dodgeball ?b ?b) )
              (hold (not (and (and (adjacent_side ?b9 ?h ?b9) (and (and (adjacent ?h ?c) (broken ?h) ) (adjacent agent ?h) ) (exists (?d - triangular_ramp) (or (agent_holds ?t) (= 1 (distance room_center ?b)) (adjacent ?h ?d) ) ) ) (and (in_motion ?o) (same_color ?b9 ?b9) ) (in ?h ?d) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (total-time) (+ (external-forall-minimize (count blockCorrectlyPicked:dodgeball:pink) ) (count-once blockCorrectlyPicked:cube_block) )
    )
  )
)
(:scoring
  (count-once-per-objects blockCorrectlyPicked:dodgeball:dodgeball)
)
)



(define (game game-id-432) (:domain few-objects-room-v1)
(:setup
  (exists (?s - shelf)
    (game-conserved
      (agent_holds ?b)
    )
  )
)
(:constraints
  (and
    (preference ballOnBedAtEnd
      (exists (?d - dodgeball)
        (then
          (once (not (in ?d agent) ) )
          (hold (exists (?c - (either pen pyramid_block doggie_bed)) (in_motion ?c) ) )
          (once (and (in ?b ?o) (on ?o1 ?g) ) )
        )
      )
    )
    (forall (?g - (either flat_block hexagonal_bin))
      (and
        (preference cubeBlockInBuilding
          (exists (?o2 - chair)
            (then
              (hold (rug_color_under ?b brown) )
              (once (not (in_motion ?b) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) 20 )
)
(:scoring
  (<= (count-once-per-objects ballOnBedAtEnd:yellow:basketball:book) (+ 0 50 )
  )
)
)



(define (game game-id-433) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (= (distance_side door front ?bl) 1)
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?d - block ?l - hexagonal_bin)
        (then
          (once (forall (?b5 - building) (not (and (and (touch ?l ?b5) (agent_holds ?l) (and (on ?l ?l) (in_motion ?b5) ) (between ?b5 ?l3 ?b5) ) (equal_z_position room_center ?o4) (exists (?o ?d2 ?c2 ?h ?w1 ?b8 - wall ?b - doggie_bed) (<= (distance ?b ?b5) (distance desk ?b)) ) ) ) ) )
          (once (in_motion ?l) )
          (hold (same_color ?b blue) )
        )
      )
    )
  )
)
(:terminal
  (or
    (<= 3 18 )
    (= 1 40 )
    (and
      (or
        (>= 5 (total-score) )
      )
      (>= (count throwAttempt:red:golfball) 8 )
      (and
        (>= (* (count-once-per-objects throwAttempt:red:blue_dodgeball) 18 )
          10
        )
        (>= 5 10 )
        (not
          (>= (+ (external-forall-maximize (count-once-per-external-objects throwAttempt:blue_dodgeball) ) (count-overlapping throwAttempt:golfball) )
            (total-time)
          )
        )
      )
    )
  )
)
(:scoring
  (count throwAttempt:pink)
)
)



(define (game game-id-434) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?l4 - color)
      (game-conserved
        (agent_holds ?o1)
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - (either cylindrical_block dodgeball cube_block) ?t - dodgeball)
      (and
        (preference dodgeballHitsBinBottom
          (exists (?h - dodgeball ?r - curved_wooden_ramp)
            (then
              (hold (adjacent door ?r) )
              (hold-while (and (and (in ?t ?r) (not (agent_holds ?r) ) ) (is_setup_object ?t) ) (and (toggled_on ?o) (agent_holds ?h) ) )
              (once-measure (in_motion ?l2) (distance ?t ?r) )
            )
          )
        )
      )
    )
    (forall (?b4 - ball ?o4 - hexagonal_bin ?d - hexagonal_bin)
      (and
        (preference throwToBin
          (exists (?c5 - hexagonal_bin)
            (then
              (once (in_motion ?d) )
              (hold (agent_holds ?b1) )
            )
          )
        )
        (preference blockPlacedInBuilding
          (exists (?tb - cube_block)
            (then
              (once (not (agent_holds ?h) ) )
              (once (and (on ?c5 ?tb) (and (not (on ?t ?d) ) (agent_holds ?f) (not (not (agent_holds ?tb) ) ) ) ) )
              (once (in ?d ?tb) )
            )
          )
        )
      )
    )
    (forall (?o5 - color)
      (and
        (preference ballNeverThrown
          (exists (?c6 - (either cylindrical_block hexagonal_bin) ?d - block)
            (then
              (hold (not (in ?o5 ?d) ) )
              (once (and (agent_holds ?d) (same_color ?h ?c) ) )
              (once (and (and (and (adjacent ?o5 bed) (and (not (agent_holds ?o) ) ) (not (not (exists (?c - yellow_cube_block) (same_color ?c ?d) ) ) ) ) (not (and (not (is_setup_object ?o5) ) (and (and (between ?h ?d ?b) (and (in_motion ?o5) (agent_holds ?l) (agent_holds agent) ) ) (and (agent_holds ?l1) (adjacent ?h ?l) ) ) (adjacent door ?c) (> 6 6) ) ) ) (not (not (in ?o5 ?d) ) ) (and (not (agent_holds ?o5) ) (and (in_motion ?g) (agent_holds ?o5) ) ) ) )
            )
          )
        )
        (preference dropAttempt
          (exists (?w1 ?c - (either bridge_block golfball))
            (then
              (hold-while (in_motion ?o5) (in_motion ?w1) (agent_holds ?o5) )
              (once (rug_color_under ?o5 brown) )
              (hold (not (and (not (in ?o5 ?w2) ) (touch ?b ?o5) (in_motion ?g) (on ?h ?d) (not (agent_holds ?b) ) (and (agent_holds ?g) (touch ?d agent) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (and
      (or
        (>= (external-forall-maximize (count ballNeverThrown:basketball:dodgeball) ) (count-total throwToBin:golfball:dodgeball) )
      )
    )
    (or
      (>= (count-once-per-objects throwToBin:blue_dodgeball) (external-forall-maximize (count ballNeverThrown:orange) ) )
      (<= (count-once-per-external-objects dropAttempt:dodgeball) (* 30 (count throwToBin:pyramid_block) )
      )
    )
  )
)
(:scoring
  (- (external-forall-maximize (* (count-unique-positions throwToBin:basketball) (* 50 (count-same-positions throwToBin:beachball:pink) )
        (+ 2 (count-once blockPlacedInBuilding:book) -10 )
      )
    )
  )
)
)



(define (game game-id-435) (:domain medium-objects-room-v1)
(:setup
  (exists (?d - golfball)
    (game-optional
      (not
        (not
          (same_color ?d ?d)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference beachballBouncedOffRamp
      (exists (?b - hexagonal_bin ?h ?l3 - (either cube_block alarm_clock))
        (then
          (hold (on ?h top_shelf) )
          (hold (< (distance room_center ?b) 1) )
          (once (and (adjacent ?l3 ?h) (in ?c3 ?h) (on ?b ?o2) (agent_holds ?l3) ) )
        )
      )
    )
    (preference pillowMovedToRoomCenter
      (exists (?d - pyramid_block)
        (then
          (hold-while (not (not (in_motion ?b) ) ) (rug_color_under ?d ?c) )
          (hold (touch ?d ?d) )
          (once (agent_holds bed) )
        )
      )
    )
  )
)
(:terminal
  (> (count beachballBouncedOffRamp:basketball) (count pillowMovedToRoomCenter:pink) )
)
(:scoring
  (* (* 5 (* (count-once beachballBouncedOffRamp:red:pink) 8 )
    )
    (count pillowMovedToRoomCenter:dodgeball)
  )
)
)



(define (game game-id-436) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?db - game_object)
      (game-optional
        (agent_holds ?db)
      )
    )
    (and
      (forall (?b7 - ball)
        (game-conserved
          (and
            (not
              (agent_holds ?b7)
            )
            (in_motion ?b)
          )
        )
      )
    )
    (forall (?c4 - dodgeball ?l2 ?w - block)
      (and
        (game-conserved
          (> 6 (distance ?d ?bl))
        )
        (and
          (and
            (exists (?f - block ?b - dodgeball)
              (game-optional
                (not
                  (in_motion desk)
                )
              )
            )
          )
          (and
            (game-optional
              (agent_holds ?w)
            )
            (exists (?b - ball)
              (and
                (and
                  (game-optional
                    (not
                      (broken ?w)
                    )
                  )
                  (game-optional
                    (agent_holds ?g)
                  )
                  (exists (?b6 - (either wall pyramid_block hexagonal_bin game_object) ?r - hexagonal_bin)
                    (forall (?g - dodgeball)
                      (and
                        (forall (?w2 - hexagonal_bin)
                          (game-optional
                            (in_motion ?l2)
                          )
                        )
                        (forall (?d - game_object)
                          (game-conserved
                            (above ?d agent)
                          )
                        )
                        (game-conserved
                          (agent_holds ?d)
                        )
                      )
                    )
                  )
                )
                (and
                  (exists (?c2 - dodgeball ?h - (either game_object cube_block triangle_block dodgeball) ?h ?r1 - triangular_ramp)
                    (and
                      (forall (?g - hexagonal_bin ?r - (either tall_cylindrical_block book doggie_bed))
                        (game-conserved
                          (and
                            (and
                              (object_orientation bed upright)
                              (in ?d ?b)
                            )
                            (in ?w ?r1)
                          )
                        )
                      )
                      (and
                        (and
                          (and
                            (and
                              (and
                                (game-conserved
                                  (agent_holds ?d)
                                )
                              )
                            )
                            (forall (?o2 - hexagonal_bin)
                              (game-conserved
                                (and
                                  (not
                                    (= (distance ?h ?h))
                                  )
                                  (not
                                    (and
                                      (on ?b ?l2)
                                      (not
                                        (in ?l2 ?l2)
                                      )
                                    )
                                  )
                                )
                              )
                            )
                            (game-optional
                              (faces ?d ?r)
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
    (forall (?d1 - curved_wooden_ramp ?s - cube_block)
      (exists (?o2 - doggie_bed)
        (game-conserved
          (not
            (in ?o2 ?s)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToRampToBed
      (exists (?h ?b8 - cylindrical_block ?r2 - flat_block)
        (at-end
          (and
            (not
              (touch ?r2 ?r2)
            )
            (not
              (< 0 2)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (* 7 7 (* (external-forall-maximize (count-once-per-objects ballThrownToRampToBed:beachball:pink) ) 300 )
        (count-increasing-measure ballThrownToRampToBed:golfball:doggie_bed)
      )
      4
    )
  )
)
(:scoring
  (* 5 (count ballThrownToRampToBed:dodgeball) )
)
)



(define (game game-id-437) (:domain many-objects-room-v1)
(:setup
  (exists (?c - cylindrical_block)
    (game-optional
      (not
        (not
          (not
            (agent_holds ?b1)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dropAttempt
      (exists (?b4 - hexagonal_bin)
        (then
          (hold (agent_holds ?d) )
          (once (not (on ?d ?b4) ) )
          (once (and (exists (?o - pyramid_block ?c1 - dodgeball) (and (and (not (not (agent_holds ?b4) ) ) (agent_holds ?c1) ) (and (not (exists (?b1 - (either key_chain)) (not (not (in_motion ?b1) ) ) ) ) (> (x_position ?c1) 0.5) ) ) ) (< 1 (distance_side door front desk ?b4)) (and (in_motion ?h) (not (< (distance desk ?l) (distance_side desk ?b4 ?d)) ) ) ) )
        )
      )
    )
    (preference ballInOrOnBin
      (exists (?h - dodgeball ?c3 - (either basketball teddy_bear))
        (then
          (hold (same_type ?c3 pillow) )
          (once (in_motion ?bl) )
          (once (and (and (in_motion ?o) (not (exists (?b - chair ?d ?h ?c2 - drawer) (in ?d ?c2) ) ) ) (and (not (agent_holds ?c3) ) (in ?o ?c3) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) 12 )
)
(:scoring
  (+ (count-overlapping ballInOrOnBin:basketball) (* (+ 2 )
      (count dropAttempt:hexagonal_bin)
      2
      (* (* 0 (external-forall-maximize (* (count-once-per-objects dropAttempt:golfball) (- (+ (count-once dropAttempt:dodgeball) 5 3 3 9 )
              )
            )
          )
        )
        (count ballInOrOnBin:blue_dodgeball)
        (count ballInOrOnBin:beachball:bed:dodgeball)
        2
        (count-measure ballInOrOnBin:pink_dodgeball:basketball)
        5
        (count dropAttempt:basketball)
      )
      (count-once-per-objects dropAttempt:blue_pyramid_block)
      (count-once-per-objects dropAttempt:red)
    )
  )
)
)



(define (game game-id-438) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - cylindrical_block)
      (exists (?h - ball ?d - dodgeball)
        (forall (?o - ball ?o1 - cube_block)
          (exists (?h - chair)
            (and
              (forall (?o2 - block)
                (game-conserved
                  (adjacent room_center ?b1)
                )
              )
            )
          )
        )
      )
    )
    (exists (?b10 - pyramid_block)
      (game-conserved
        (not
          (in_motion ?b10)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - ball ?r - ball)
      (and
        (preference gameBlockFound
          (exists (?c - ball)
            (then
              (once (on ?c ?c3) )
              (hold (and (not (not (object_orientation bed upside_down) ) ) (touch ?g ?d) ) )
              (once (in_motion ?c) )
            )
          )
        )
        (preference dodgeballFromRugToBin
          (exists (?s - hexagonal_bin)
            (then
              (once (agent_holds ?b) )
              (once (and (on ?b ?b) (agent_holds ?r) ) )
              (hold-while (same_color floor ?r) (not (in_motion ?r) ) )
            )
          )
        )
        (preference failedThrowToBin
          (exists (?t - red_dodgeball)
            (then
              (once (in ?d ?r) )
              (once (not (not (agent_holds ?t) ) ) )
              (once (and (not (not (touch ?o ?r) ) ) (not (same_type ?g ball) ) ) )
              (once (and (and (agent_holds ?t) (touch ?h ?t) ) (between ?t ?t ?r) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) 1 )
)
(:scoring
  (* (* 2 (count-once dodgeballFromRugToBin:basketball) 0.7 )
    (* (* 6 3 4 15 )
      (* 1 2 (- (count-once dodgeballFromRugToBin) )
      )
    )
    9
  )
)
)



(define (game game-id-439) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (in_motion ?b2)
  )
)
(:constraints
  (and
    (forall (?w - building)
      (and
        (preference smallItemsInPlace
          (then
            (once (and (and (on ?b ?w) (agent_holds ?w) ) (faces ?o ?w) (and (is_setup_object ?d) (agent_holds ?w) (same_color ?w pink) (agent_holds agent) ) ) )
            (once (on ?b ?d) )
            (once (and (and (on ?w2 ?o) (not (is_setup_object ?w) ) ) (on rug ?w) ) )
          )
        )
      )
    )
    (forall (?r2 - block)
      (and
        (preference ballThrownThroughRampAndBlocksToBin
          (exists (?l - (either cellphone cd key_chain cube_block pillow cellphone main_light_switch))
            (then
              (once (exists (?h - red_dodgeball) (not (not (not (not (in_motion ?h) ) ) ) ) ) )
              (once (same_color ?l yellow) )
              (hold (not (< (distance ?l ?r2) 1) ) )
            )
          )
        )
        (preference objectInBuilding
          (then
            (once (exists (?h - (either dodgeball dodgeball) ?c1 - ball) (and (adjacent room_center ?r2) (touch ?b ?o4) ) ) )
            (once (not (and (< (distance ?r2 ?r2) 5) (in_motion ?h) ) ) )
            (once (agent_holds ?o) )
          )
        )
      )
    )
    (preference throwMissesBin
      (exists (?d1 - hexagonal_bin ?p3 - hexagonal_bin ?h - color)
        (then
          (hold (adjacent ?h ?h) )
        )
      )
    )
    (preference ballNeverThrown
      (then
        (once (not (agent_holds ?c) ) )
      )
    )
  )
)
(:terminal
  (>= (* 10 100 (count-once-per-objects objectInBuilding:dodgeball:doggie_bed) )
    10
  )
)
(:scoring
  (+ (count objectInBuilding:basketball:orange) (* 9 (* 15 (* (+ 3 (count-once-per-objects objectInBuilding:pink_dodgeball) )
          (* (count-once-per-objects throwMissesBin:orange) (* (* 7 (count ballNeverThrown:blue_dodgeball) )
              (count throwMissesBin:blue_pyramid_block:alarm_clock)
            )
          )
        )
        (external-forall-minimize
          (* (count ballNeverThrown:tan) (count ballNeverThrown:blue_dodgeball) )
        )
        (count-once ballNeverThrown:blue_pyramid_block:blue_cube_block)
      )
    )
  )
)
)



(define (game game-id-440) (:domain medium-objects-room-v1)
(:setup
  (forall (?w2 - (either hexagonal_bin dodgeball pencil dodgeball))
    (and
      (exists (?l1 - doggie_bed)
        (game-conserved
          (faces ?l1 ?l1)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballToBinFromBed
      (exists (?c - hexagonal_bin)
        (at-end
          (not
            (agent_holds ?d)
          )
        )
      )
    )
    (preference throwAttemptKnocksBlock
      (exists (?c - color)
        (then
          (once (agent_holds ?c) )
          (once (object_orientation ?tb upright) )
          (once (and (agent_holds ?c) (and (adjacent agent ?b) (not (and (on bed ?d) (adjacent agent ?c) ) ) ) (touch ?c pink_dodgeball) ) )
        )
      )
    )
  )
)
(:terminal
  (= (count-increasing-measure throwAttemptKnocksBlock:yellow) (* (count ballToBinFromBed:triangle_block) (count throwAttemptKnocksBlock:book:red) (count-once throwAttemptKnocksBlock:basketball) (count-once-per-objects throwAttemptKnocksBlock:alarm_clock) 100 (* 10 0 )
    )
  )
)
(:scoring
  (count-once-per-objects ballToBinFromBed:dodgeball:pink)
)
)



(define (game game-id-441) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?b - curved_wooden_ramp)
      (game-optional
        (< 8 (distance ?b ?b))
      )
    )
  )
)
(:constraints
  (and
    (forall (?b6 - color)
      (and
        (preference ballThrownThroughRampToBin
          (exists (?p - (either pillow dodgeball))
            (then
              (once (on ?g ?p) )
              (once (and (not (agent_holds ?b6) ) (and (not (adjacent_side ?b6 back ?p) ) (on ?b6 pink_dodgeball) ) ) )
              (once (and (adjacent ?p ?o) (in ?b ?o1) ) )
            )
          )
        )
        (preference objectThrownFromRug
          (exists (?d - chair)
            (then
              (hold-while (adjacent ?d ?d) (in ?o1 ?p2) (and (or (same_object ?o ?c) ) (agent_holds ?d) ) )
              (once (agent_holds ?d) )
              (hold-while (on ?b6 pink_dodgeball) (on ?d ?b) (not (not (exists (?h - block ?c1 - pyramid_block) (and (between ?b6 desk ?c) (not (not (not (agent_holds ?d) ) ) ) ) ) ) ) (and (in_motion ?h) (agent_holds bottom_shelf) ) )
            )
          )
        )
        (preference throwToRampToBin
          (exists (?c2 - cylindrical_block ?w - cube_block ?o3 - block)
            (at-end
              (in_motion ?t)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-once ballThrownThroughRampToBin:beachball:blue_dodgeball) (total-score) )
    (and
      (> (count-once-per-objects objectThrownFromRug:cube_block) 4 )
      (= 30 (count ballThrownThroughRampToBin:beachball) )
    )
    (<= (count-once-per-objects throwToRampToBin:book) (total-score) )
  )
)
(:scoring
  (count-increasing-measure ballThrownThroughRampToBin:dodgeball:blue)
)
)



(define (game game-id-442) (:domain few-objects-room-v1)
(:setup
  (exists (?o - hexagonal_bin)
    (game-conserved
      (adjacent ?b ?o)
    )
  )
)
(:constraints
  (and
    (preference throwFromDoorToBin
      (exists (?h - block ?c - hexagonal_bin ?w2 - red_dodgeball ?o3 - dodgeball)
        (then
          (hold-while (not (>= (distance ?o3 ?o3) 1) ) (adjacent agent ?o3) (not (and (agent_holds ?ob) (not (and (and (agent_holds ?l) (and (and (agent_holds agent) (in_motion ?d) ) ) ) (in ?o3 ?o3) ) ) ) ) )
          (once (same_color ?o tan) )
          (once (adjacent_side room_center front ?o) )
        )
      )
    )
    (forall (?s - hexagonal_bin)
      (and
        (preference ballThrownToChair
          (exists (?h - dodgeball ?c - hexagonal_bin)
            (then
              (once (not (object_orientation ?s sideways) ) )
              (once (in agent ?s) )
              (hold (not (not (< (distance ?c ?c) 1) ) ) )
            )
          )
        )
        (preference laptopAndBookInPlace
          (exists (?c5 - ball)
            (then
              (once (or (on ?b ?c5) ) )
              (hold-while (not (agent_holds ?s) ) (agent_holds ?t) (and (is_setup_object ?c5) (agent_holds floor) (adjacent ?s ?bl) ) )
              (once (not (and (and (in_motion agent) (agent_holds ?s) ) (in_motion ?s) ) ) )
              (hold (agent_holds ?s) )
            )
          )
        )
        (preference thrownBallHitsBlock
          (at-end
            (adjacent_side desk front ?s)
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (and
      (not
        (> (count laptopAndBookInPlace:orange) 2 )
      )
      (>= (total-score) (count-once-per-objects laptopAndBookInPlace:dodgeball) )
    )
  )
)
(:scoring
  (count-measure throwFromDoorToBin)
)
)



(define (game game-id-443) (:domain medium-objects-room-v1)
(:setup
  (forall (?h - (either dodgeball basketball bridge_block))
    (game-conserved
      (and
        (agent_holds ?g)
        (on ?d ?b)
      )
    )
  )
)
(:constraints
  (and
    (preference objectToBinOnFirstTry
      (exists (?db - (either cube_block alarm_clock teddy_bear) ?c - blue_cube_block ?b2 - chair)
        (then
          (once (touch ?d ?b2) )
          (once (equal_x_position ?b2 ?b2) )
          (hold (= (distance ?c ?b2) (distance rug ?b2)) )
        )
      )
    )
    (forall (?g - curved_wooden_ramp ?s - (either dodgeball cellphone))
      (and
        (preference tanObjectMovedToRoomCenter
          (exists (?d - (either alarm_clock cellphone) ?h - dodgeball)
            (then
              (hold (not (agent_holds ?b) ) )
              (hold (and (and (not (adjacent ?b ?b) ) (not (and (not (on ?o ?o) ) (same_object ?o ?b5) ) ) ) (= 10 (building_size ?b)) ) )
              (once (and (adjacent room_center ?h) (agent_holds top_shelf) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count tanObjectMovedToRoomCenter:dodgeball) (total-time) )
)
(:scoring
  (+ 3 (count tanObjectMovedToRoomCenter:red) (* (count objectToBinOnFirstTry:dodgeball) (count tanObjectMovedToRoomCenter:golfball:pink) )
  )
)
)



(define (game game-id-444) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (<= 2 1)
  )
)
(:constraints
  (and
    (preference blockInTowerAtEnd
      (exists (?r - game_object ?b - shelf ?b3 - cube_block)
        (then
          (once (and (and (agent_holds ?b3) (agent_holds ?b3) ) (>= (distance ?b3 ?b) 9) ) )
          (hold (agent_holds ?b) )
          (once (on ?b3 ?b3) )
        )
      )
    )
    (forall (?h - watch)
      (and
        (preference ballThrownFromDoor
          (exists (?t2 - pyramid_block)
            (then
              (once (and (in_motion ?t2) (touch ?p2 ?h) ) )
              (once (not (and (adjacent room_center ?b) (adjacent ?t2 ?h) ) ) )
              (hold-while (not (not (exists (?l2 - ball) (and (object_orientation ?l2 ?h) (in ?t2 ?t2) ) ) ) ) (in_motion ?t2) (broken ?d) )
            )
          )
        )
        (preference throwTeddyOntoPillow
          (exists (?h - hexagonal_bin)
            (then
              (once (agent_holds ?h) )
              (hold (adjacent desk ?h) )
              (once (in_motion ?h) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 10 (+ 3 50 )
    )
    (or
      (>= 5 (+ (+ (count blockInTowerAtEnd:dodgeball) 3 )
          (count throwTeddyOntoPillow:beachball:tall_cylindrical_block)
        )
      )
      (>= 10 (- 2 (* (external-forall-maximize (= (count throwTeddyOntoPillow:blue_cube_block) )
            )
            15
          )
        )
      )
    )
  )
)
(:scoring
  (* (count ballThrownFromDoor:basketball:dodgeball) 3 )
)
)



(define (game game-id-445) (:domain medium-objects-room-v1)
(:setup
  (or
    (and
      (game-conserved
        (in_motion desk)
      )
    )
  )
)
(:constraints
  (and
    (forall (?l - (either bridge_block triangle_block dodgeball))
      (and
        (preference dodgeballBouncesOnceToDoggieBed
          (exists (?c4 - cube_block ?p3 - beachball)
            (at-end
              (< 1 3)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-unique-positions dodgeballBouncesOnceToDoggieBed:yellow) (count-once-per-objects dodgeballBouncesOnceToDoggieBed:pink) )
)
(:scoring
  (+ 3 )
)
)



(define (game game-id-446) (:domain medium-objects-room-v1)
(:setup
  (exists (?h - ball)
    (game-conserved
      (not
        (agent_holds agent)
      )
    )
  )
)
(:constraints
  (and
    (preference bounceBallToBin
      (exists (?w - ball)
        (then
          (once (on ?d ?w) )
          (hold-while (broken ?w) (open ?b) )
          (once (agent_holds ?w) )
        )
      )
    )
    (preference throwAttempt
      (exists (?s - hexagonal_bin)
        (then
          (once (and (agent_holds desk) (in ?s ?s) ) )
          (once (adjacent_side ?c front ?g front) )
          (once (on ?h ?s) )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (count-once-per-objects throwAttempt:dodgeball) )
)
(:scoring
  (= 30 4 )
)
)



(define (game game-id-447) (:domain medium-objects-room-v1)
(:setup
  (exists (?p2 - (either dodgeball book))
    (exists (?t - doggie_bed ?l2 - doggie_bed)
      (game-conserved
        (and
          (agent_holds ?p2)
          (between ?b ?l2 desk)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?p ?h - hexagonal_bin ?l - yellow_cube_block)
      (and
        (preference throwAttemptFromBehindBlock
          (exists (?h - hexagonal_bin)
            (at-end
              (not
                (and
                  (and
                    (agent_holds ?d)
                    (not
                      (touch ?d bed)
                    )
                  )
                  (agent_holds ?l)
                )
              )
            )
          )
        )
        (preference ballToBinFromBed
          (exists (?p - hexagonal_bin)
            (then
              (hold-while (in_motion ?p) (in_motion ?d) (and (and (on ?b ?l) (and (touch ?l ?l) (not (adjacent ?l ?r) ) ) ) (touch ?l bed) ) )
              (hold (on bed ?d) )
              (once (and (or (or (and (not (on ?b ?b) ) ) (and (and (in_motion ?p) (and (and (rug_color_under ?p green) (agent_holds ?h) ) (in_motion ?l2) ) ) (in_motion pink_dodgeball) ) (in_motion ?h) ) (in ?p ?b) ) (agent_crouches ) ) )
              (once (in_motion ?b3) )
            )
          )
        )
        (preference agentLeavesDogbedOrNoMoreBalls
          (exists (?h ?b5 ?b ?h - dodgeball)
            (at-end
              (exists (?h - teddy_bear)
                (in_motion floor)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (* 9 7 (count-total agentLeavesDogbedOrNoMoreBalls:yellow:beachball:red) (external-forall-maximize (count ballToBinFromBed) ) 5 (+ 4 3 )
    )
    (count-once-per-external-objects ballToBinFromBed:blue_dodgeball:beachball)
  )
)
(:scoring
  (count-once-per-objects agentLeavesDogbedOrNoMoreBalls:dodgeball)
)
)



(define (game game-id-448) (:domain few-objects-room-v1)
(:setup
  (exists (?b - dodgeball)
    (exists (?h - wall)
      (game-conserved
        (or
          (not
            (and
              (in_motion ?h)
              (agent_holds ?b)
              (not
                (and
                  (not
                    (opposite ?d ?b)
                  )
                  (and
                    (< (distance_side ?h back ?o1 front) (distance desk ?h))
                    (and
                      (on ?t ?h)
                      (in_motion ?h)
                      (not
                        (agent_holds ?b)
                      )
                    )
                    (adjacent_side door ?b ?b)
                  )
                )
              )
              (opposite ?h ?h)
              (not
                (on ?d ?h)
              )
              (agent_holds ?b)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - (either dodgeball cellphone cube_block))
      (and
        (preference ballThrownOntoTarget
          (exists (?h ?h ?c3 ?p2 ?c ?d - hexagonal_bin ?g - doggie_bed)
            (then
              (hold-while (on ?b ?g) (not (in_motion ?g) ) (in_motion ?b) (in_motion ?o) )
              (hold (not (between ?g ?o ?b) ) )
              (hold-while (exists (?b6 - (either dodgeball bridge_block) ?d - teddy_bear) (in_motion ?g) ) (and (not (in_motion ?g) ) (object_orientation ?l upright) ) (agent_holds ?c2) (and (toggled_on ?b) (in_motion ?b) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once ballThrownOntoTarget) (count-once-per-external-objects ballThrownOntoTarget:basketball) )
)
(:scoring
  (count ballThrownOntoTarget:blue_dodgeball)
)
)



(define (game game-id-449) (:domain many-objects-room-v1)
(:setup
  (not
    (game-optional
      (touch ?o ?l2)
    )
  )
)
(:constraints
  (and
    (preference throwAttemptFromBehindBlock
      (exists (?h - doggie_bed)
        (then
          (once (on ?p1 ?h) )
          (hold-while (adjacent desk ?b) (in ?h ?h) (and (not (touch ?d ?h) ) (in_motion ?h) ) )
          (once (agent_holds ?o) )
        )
      )
    )
    (forall (?s - dodgeball)
      (and
        (preference cubeBlockInBuilding
          (exists (?c4 - hexagonal_bin ?l3 - color)
            (then
              (hold-while (or (not (exists (?o - dodgeball) (object_orientation ?g upright) ) ) ) (and (agent_holds ?s) (in_motion ?c2) ) (and (adjacent ?h ?l) (in ?s rug) ) )
              (once (in_motion ?l1) )
              (hold (not (and (on ?s ?d) (agent_holds ?l3) ) ) )
            )
          )
        )
        (preference throwAttempt
          (exists (?c ?o3 - ball ?o4 - curved_wooden_ramp ?t - dodgeball ?b - ball)
            (then
              (once (and (agent_holds ?o) (not (exists (?o4 - ball ?c - hexagonal_bin) (exists (?b6 - cube_block) (not (agent_holds ?s) ) ) ) ) ) )
              (once (in_motion ?b) )
              (hold (in_motion ?s) )
            )
          )
        )
        (preference throwBallToDoggieBedOffWall
          (exists (?s - shelf)
            (then
              (hold (and (touch ?s ?t) (game_over ) (on ?s ?d) ) )
              (once (rug_color_under ?b1 pink) )
              (once (and (adjacent ?s ?h) (on ?d agent) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (total-score) 10 )
    (>= 20 (* 100 2 )
    )
  )
)
(:scoring
  (count throwAttempt:red)
)
)



(define (game game-id-450) (:domain few-objects-room-v1)
(:setup
  (forall (?o4 - hexagonal_bin)
    (forall (?d ?r - game_object)
      (forall (?h - dodgeball)
        (and
          (forall (?s - hexagonal_bin)
            (and
              (forall (?s - dodgeball ?o - (either doggie_bed pencil))
                (or
                  (game-conserved
                    (exists (?o4 ?b10 ?t1 - curved_wooden_ramp)
                      (adjacent ?h ?h)
                    )
                  )
                )
              )
              (and
                (exists (?l2 - (either mug book))
                  (forall (?l2 - (either cylindrical_block cylindrical_block))
                    (and
                      (game-conserved
                        (and
                          (and
                            (same_object ?d ?l2)
                            (in_motion ?o)
                          )
                          (object_orientation ?r upright)
                          (and
                            (on ?o ?s)
                            (touch ?h ?l2)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectOnBed
      (exists (?h - (either golfball floor))
        (at-end
          (and
            (adjacent desk ?h)
            (on ?b ?h)
          )
        )
      )
    )
    (preference beachballOnRug
      (exists (?d2 - dodgeball ?ob - dodgeball)
        (then
          (once (in ?c ?ob) )
          (hold (on ?l2 ?d) )
          (once (and (in_motion ?o2) (not (same_type ?c pillow) ) ) )
        )
      )
    )
    (preference redDodgeballThrownToBin
      (exists (?b5 - (either triangle_block flat_block) ?w1 - (either cd cellphone) ?h - hexagonal_bin)
        (then
          (once (touch ?h ?d) )
          (once (in ?r ?b1) )
          (hold (faces ?d ?b) )
        )
      )
    )
  )
)
(:terminal
  (not
    (and
      (>= (total-score) (- 5 )
      )
      (>= (* (external-forall-minimize (count beachballOnRug:dodgeball) ) 3 )
        (total-score)
      )
    )
  )
)
(:scoring
  (external-forall-maximize
    (count-once-per-objects redDodgeballThrownToBin:dodgeball)
  )
)
)



(define (game game-id-451) (:domain few-objects-room-v1)
(:setup
  (exists (?d - chair ?p1 ?o3 - hexagonal_bin)
    (and
      (and
        (and
          (and
            (game-conserved
              (not
                (in_motion ?o3)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference cubeBlockThrowAttempt
      (exists (?l2 - red_dodgeball)
        (at-end
          (above ?c ?o)
        )
      )
    )
  )
)
(:terminal
  (< 1 (total-time) )
)
(:scoring
  (count cubeBlockThrowAttempt:red)
)
)



(define (game game-id-452) (:domain medium-objects-room-v1)
(:setup
  (forall (?b ?l4 - cube_block)
    (exists (?d - hexagonal_bin ?h - pyramid_block)
      (game-conserved
        (same_object ?g ?d)
      )
    )
  )
)
(:constraints
  (and
    (preference pillowMovedToRoomCenter
      (exists (?p2 - hexagonal_bin)
        (then
          (once (touch ?c1 ?d) )
          (once (< 9 (distance bed ?d)) )
          (hold (and (game_start ) (and (object_orientation ?b6 ?p2) (= 1 (distance_side ?h right ?p2)) ) (and (and (not (in ?b ?p2) ) (on ?d ?b1) ) (touch ?p2 ?p2) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 10 (- (+ (count pillowMovedToRoomCenter:beachball) 6 )
      )
    )
    (total-score)
  )
)
(:scoring
  (+ 2 4 )
)
)



(define (game game-id-453) (:domain few-objects-room-v1)
(:setup
  (exists (?s - (either cylindrical_block cellphone yellow))
    (forall (?b - hexagonal_bin)
      (game-conserved
        (in ?b ?b)
      )
    )
  )
)
(:constraints
  (and
    (forall (?o2 - hexagonal_bin)
      (and
        (preference dodgeballHitsBin
          (exists (?c2 - hexagonal_bin)
            (then
              (once (in pink_dodgeball ?o2) )
              (hold (and (agent_holds ?c2) (adjacent room_center ?o) ) )
              (once (and (not (agent_holds ?d) ) (forall (?tb - dodgeball) (not (in ?d ?tb) ) ) (agent_holds ?d) ) )
              (hold-while (agent_holds ?g) (touch ?g ?c2) )
            )
          )
        )
        (preference blocksInPlace
          (exists (?g - pillow)
            (then
              (once (same_type ?g ?o2) )
              (hold (in_motion ?o2) )
              (once (agent_holds ?d) )
            )
          )
        )
      )
    )
    (forall (?h - block)
      (and
        (preference blueObjectMovedToRoomCenter
          (exists (?p3 - (either golfball lamp dodgeball) ?t - cube_block ?h - yellow_pyramid_block)
            (at-end
              (in_motion ?ob)
            )
          )
        )
        (preference basketMadeFromRug
          (exists (?x - hexagonal_bin)
            (at-end
              (= (distance desk ?h) 1)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (> 2 3 )
  )
)
(:scoring
  (- (count-once-per-objects blueObjectMovedToRoomCenter:dodgeball) )
)
)



(define (game game-id-454) (:domain medium-objects-room-v1)
(:setup
  (or
    (or
      (exists (?d ?l - block)
        (game-conserved
          (in ?l1 ?b3)
        )
      )
      (exists (?w1 ?w - yellow_pyramid_block)
        (game-conserved
          (not
            (and
              (and
                (rug_color_under ?w1 blue)
                (and
                  (not
                    (not
                      (in_motion ?p3)
                    )
                  )
                  (in_motion ?b1)
                  (in_motion ?d)
                )
              )
              (agent_holds ?h)
            )
          )
        )
      )
      (forall (?ob - tall_cylindrical_block ?b - game_object ?h - hexagonal_bin)
        (forall (?l3 - hexagonal_bin ?d - (either hexagonal_bin golfball book))
          (game-optional
            (not
              (agent_holds ?h)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - game_object ?o - hexagonal_bin ?ob - hexagonal_bin ?h - block)
      (and
        (preference blockPlacedInBuilding
          (exists (?c1 ?h - dodgeball)
            (then
              (hold (and (on ?b ?b) (not (agent_holds ?c1) ) ) )
              (once (agent_holds ?b) )
              (hold-while (or (on ?h floor) (not (agent_holds ?h) ) ) (agent_holds ?g) )
            )
          )
        )
        (preference objectMovedRoomSide
          (exists (?t1 - color)
            (then
              (hold-while (agent_holds ?o) (exists (?b - hexagonal_bin) (between ?d1 ?c2 ?d) ) )
              (once (not (and (exists (?o - dodgeball) (exists (?w - hexagonal_bin) (in ?o ?c) ) ) (on desk ?t1) ) ) )
              (once (not (and (touch ?c ?l2) (not (and (and (in_motion ?t1) (not (in ?o ?b) ) ) (and (not (exists (?c3 - doggie_bed) (agent_holds ?b) ) ) (on ?l ?w2) ) ) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (< 4 (total-score) )
    (>= (total-score) (count-once-per-objects objectMovedRoomSide:red) )
    (or
      (not
        (or
          (>= (+ 10 (+ (* 6 (+ 3 (count-once blockPlacedInBuilding:beachball) (count-once-per-external-objects blockPlacedInBuilding:side_table) )
                  1
                  4
                )
                300
              )
            )
            (* (* (* (- (+ 5 (count blockPlacedInBuilding:dodgeball) )
                    (count-measure blockPlacedInBuilding:book)
                  )
                  30
                )
                (count-once-per-objects blockPlacedInBuilding:yellow_pyramid_block)
              )
              4
            )
          )
        )
      )
    )
  )
)
(:scoring
  (count-once-per-objects blockPlacedInBuilding:white)
)
)



(define (game game-id-455) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (exists (?c1 - (either pink laptop))
        (game-conserved
          (adjacent bed ?c1)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - ball)
      (and
        (preference smallObjectThrownToBed
          (exists (?x - watch)
            (at-end
              (and
                (on ?d ?x)
                (not
                  (in ?l ?x)
                )
              )
            )
          )
        )
        (preference itemsHidingScreens
          (then
            (hold (agent_holds ?b) )
            (once (in_motion ?b) )
            (once (equal_z_position room_center ?g) )
          )
        )
      )
    )
    (preference objectsHidden
      (exists (?l2 - cube_block)
        (then
          (once (and (and (and (in_motion ?b) (and (and (and (not (agent_holds ?w2) ) (in_motion ?l2) ) (and (in ?l2 ?l2) (in desk ?l2) ) ) (on ?l2 ?l2) ) ) (adjacent agent ?s) ) (adjacent agent ?b) (< (distance ?w1 ?l2) (distance ?l2 ?l2)) ) )
          (once (on ?l2 desk) )
          (hold (not (agent_holds ?b) ) )
          (hold-while (on ?b ?l2) (in_motion ?l2) )
        )
      )
    )
    (forall (?w - hexagonal_bin ?b - hexagonal_bin)
      (and
        (preference gameObjectToBin
          (exists (?p3 - dodgeball)
            (then
              (once (and (and (in_motion ?b) (adjacent door ?b) ) (agent_holds ?h) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (* (* 2 20 (count-measure gameObjectToBin:yellow) (* (count-once-per-objects itemsHidingScreens:green:basketball) 2 )
          (count-once-per-objects objectsHidden:purple)
          2
          (* 5 (< (+ 1 )
              5
            )
          )
          (count-once-per-objects objectsHidden:basketball)
          (count-unique-positions objectsHidden:basketball)
          (* (count-measure itemsHidingScreens:green) (count itemsHidingScreens:basketball) 5 (count itemsHidingScreens:purple:golfball) (count-shortest smallObjectThrownToBed:pink) (count gameObjectToBin:beachball) 0 )
          6
          0.5
        )
        (+ (+ (- (count-same-positions smallObjectThrownToBed:yellow_cube_block) 0.7 ) (count-once-per-objects itemsHidingScreens:dodgeball) )
          (count smallObjectThrownToBed:dodgeball:yellow)
          (count-total gameObjectToBin:golfball)
        )
      )
      5
    )
  )
)
(:scoring
  (external-forall-maximize
    (count smallObjectThrownToBed:blue_dodgeball:dodgeball)
  )
)
)



(define (game game-id-456) (:domain few-objects-room-v1)
(:setup
  (exists (?h - building ?h - dodgeball)
    (and
      (and
        (game-conserved
          (on ?h ?d)
        )
        (exists (?l - cube_block)
          (and
            (or
              (and
                (exists (?db - (either alarm_clock mug dodgeball dodgeball) ?h - hexagonal_bin ?b4 - hexagonal_bin)
                  (game-optional
                    (not
                      (above ?h ?l)
                    )
                  )
                )
              )
            )
            (exists (?o - hexagonal_bin)
              (and
                (and
                  (game-conserved
                    (same_color ?h pink)
                  )
                )
              )
            )
            (game-optional
              (in_motion ?h)
            )
          )
        )
        (forall (?d1 - building)
          (game-optional
            (and
              (in_motion ?b3)
              (not
                (not
                  (agent_holds ?d)
                )
              )
              (not
                (object_orientation ?h ?d1)
              )
              (same_object ?b ?b)
            )
          )
        )
        (exists (?h - (either golfball book yellow_cube_block dodgeball alarm_clock laptop cylindrical_block) ?l - building ?p - hexagonal_bin)
          (game-conserved
            (< (x_position ?h) (distance ?c agent))
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - cube_block)
      (and
        (preference throwBallFromOtherBallToBin
          (exists (?b - hexagonal_bin)
            (then
              (once (in_motion ?d) )
              (once (and (not (on ?d ?h) ) (not (and (same_color ?g ?d) (and (and (agent_holds ?b) (above ?d ?b) ) (is_setup_object ?h) ) ) ) ) )
              (once (in ?b ?d) )
            )
          )
        )
        (preference thrownBallHitsBlock
          (exists (?o - hexagonal_bin)
            (then
              (once (not (touch ?h ?b) ) )
              (once (and (touch ?b ?g) (and (and (not (and (in_motion ?d) (same_object ?o ?d) ) ) (in ?d ?o) (not (agent_holds ?d) ) ) (agent_holds ?b) ) ) )
              (once (not (in ?w2 ?d) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (or
        (> (total-score) 7 )
        (> (* (count-once-per-external-objects throwBallFromOtherBallToBin:golfball) (count-once-per-objects thrownBallHitsBlock:dodgeball:dodgeball) )
          15
        )
      )
      (or
        (not
          (>= (* 6 (count-once-per-external-objects throwBallFromOtherBallToBin:hexagonal_bin) )
            (count-once throwBallFromOtherBallToBin:yellow)
          )
        )
        (>= (count throwBallFromOtherBallToBin:blue_dodgeball) (total-score) )
      )
    )
  )
)
(:scoring
  (* (* (count-once-per-objects thrownBallHitsBlock:dodgeball) 8 )
    5
    (* (count-once thrownBallHitsBlock:dodgeball) (external-forall-maximize (* (* (+ (count throwBallFromOtherBallToBin:dodgeball) (count-once-per-objects thrownBallHitsBlock:beachball) )
            2
          )
        )
      )
    )
    (+ (* (count-once-per-objects thrownBallHitsBlock:green) 1 )
      30
      (count-once-per-objects throwBallFromOtherBallToBin:brown:purple)
    )
    0
    10
    (count throwBallFromOtherBallToBin:pink:dodgeball)
    18
    (external-forall-maximize
      (+ (count thrownBallHitsBlock:red) (* (count throwBallFromOtherBallToBin:purple) 6 )
      )
    )
    8
    (count-longest thrownBallHitsBlock:blue_pyramid_block)
    (/
      (count throwBallFromOtherBallToBin:pink)
      (- 10 )
    )
  )
)
)



(define (game game-id-457) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?o4 ?h - game_object)
      (and
        (exists (?b - wall)
          (game-optional
            (and
              (and
                (and
                  (and
                    (and
                      (and
                        (and
                          (agent_holds ?o4)
                          (in ?h ?h)
                          (forall (?b - (either teddy_bear hexagonal_bin))
                            (same_color ?o ?c)
                          )
                          (not
                            (or
                              (>= 1 1)
                              (< 1 (distance ?h ?b))
                            )
                          )
                          (adjacent room_center ?b)
                          (on ?o4 ?d)
                          (and
                            (game_start )
                            (agent_holds ?h)
                          )
                          (adjacent desk rug)
                        )
                        (not
                          (not
                            (faces ?o floor)
                          )
                        )
                      )
                      (and
                        (in_motion ?o4)
                        (or
                          (in_motion ?h)
                          (and
                            (>= (distance desk ?o4) 3)
                            (not
                              (= 5 1)
                            )
                          )
                        )
                      )
                    )
                    (forall (?h - hexagonal_bin ?b - block)
                      (agent_holds ?d)
                    )
                  )
                  (object_orientation ?c2 upright)
                  (not
                    (> 1 (distance desk ?h))
                  )
                )
                (and
                  (and
                    (touch ?b ?d)
                    (and
                      (on ?c ?r)
                      (on ?b ?d)
                    )
                  )
                  (agent_holds ?o4)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?p3 - game_object)
      (and
        (preference thrownBallHitsBlock
          (at-end
            (not
              (and
                (agent_holds ?p3)
                (in_motion ?p3)
              )
            )
          )
        )
      )
    )
    (preference throwAttempt
      (exists (?c - (either laptop cube_block))
        (then
          (hold (>= (distance_side agent back ?c) 5) )
          (once (agent_holds ?h) )
          (hold (and (and (= (x_position ?p) 10) (in_motion ?b) ) (agent_holds ?t1) ) )
        )
      )
    )
  )
)
(:terminal
  (> (count throwAttempt:dodgeball:yellow) (+ 1 3 )
  )
)
(:scoring
  (count throwAttempt:yellow)
)
)



(define (game game-id-458) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (on ?d bed)
  )
)
(:constraints
  (and
    (forall (?g - (either wall))
      (and
        (preference dodgeballBouncesOnceToDoggieBed
          (exists (?p ?h - dodgeball)
            (then
              (once (in desk ?d) )
              (hold (in ?p ?p) )
              (once (not (agent_crouches ) ) )
            )
          )
        )
        (preference blockInTowerKnockedByDodgeball
          (exists (?b8 ?d - (either golfball) ?bl - cube_block ?c - curved_wooden_ramp)
            (at-end
              (and
                (< (distance_side desk front ?g) (distance ?h ?g))
                (is_setup_object ?g)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 4 (- 1 )
  )
)
(:scoring
  (* (* (+ (- 2 )
        5
      )
      (count dodgeballBouncesOnceToDoggieBed:yellow)
    )
    (= (external-forall-minimize (count-unique-positions dodgeballBouncesOnceToDoggieBed:beachball) ) (count dodgeballBouncesOnceToDoggieBed) )
    100
    (* (count blockInTowerKnockedByDodgeball:dodgeball:basketball:golfball) (* 2 (* 18 30 9 2 (count blockInTowerKnockedByDodgeball:dodgeball) (count dodgeballBouncesOnceToDoggieBed:green:blue_cube_block) )
      )
    )
  )
)
)



(define (game game-id-459) (:domain medium-objects-room-v1)
(:setup
  (not
    (forall (?o - game_object)
      (and
        (and
          (game-conserved
            (in ?o ?o)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballBouncesOnceToDoggieBed
      (exists (?d - building)
        (then
          (once (and (not (not (or (and (in_motion ?d) (and (in_motion ?t) (touch ?d ?d) ) (in ?b ?d) ) (in_motion ?h) ) ) ) (not (< (distance ?w1 ?d) (distance_side desk front ?d)) ) ) )
          (once (and (or (toggled_on ?d) (not (and (touch ?d agent) (and (agent_holds ?d) (and (is_setup_object ?d) (in ?d ?b) ) ) ) ) (and (agent_holds ?d) (and (above ?d ?o) (not (not (not (in_motion ?o3) ) ) ) (equal_x_position south_wall ?d) (touch ?o ?d) (in_motion ?d) (and (agent_holds ?d) (in ?d door) ) ) ) ) (in_motion ?l) ) )
          (once (not (adjacent desk ?d) ) )
        )
      )
    )
    (preference cubeBlockFromBedToShelf
      (exists (?d - cube_block)
        (then
          (hold (and (above ?b ?d) (and (and (not (not (and (agent_holds ?c) (on ?d ?d) ) ) ) (agent_holds ?b) ) (not (agent_holds ?t) ) (forall (?t - blue_pyramid_block ?s - (either dodgeball blue_cube_block)) (agent_holds ?d) ) (not (not (and (< 1 2) (broken ?b5) ) ) ) (and (and (forall (?p2 - dodgeball) (and (touch ?d ?p2) (forall (?d - (either pink cube_block dodgeball)) (on ?d ?d) ) ) ) (agent_holds ?d) ) (not (not (in_motion ?b) ) ) (in_motion ?d) (or (in_motion ?d) (agent_holds ?o) ) (< (distance desk floor) 8) (same_color ?g ?c) (toggled_on ?g) ) (in_motion ?d) ) ) )
          (hold (agent_holds ?d) )
          (once (game_start ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count dodgeballBouncesOnceToDoggieBed:hexagonal_bin:yellow:red) (count cubeBlockFromBedToShelf:yellow_pyramid_block) )
)
(:scoring
  (count dodgeballBouncesOnceToDoggieBed:red)
)
)



(define (game game-id-460) (:domain medium-objects-room-v1)
(:setup
  (forall (?b1 - dodgeball)
    (exists (?h ?o2 ?h - pyramid_block ?t1 - (either golfball pen))
      (and
        (game-conserved
          (not
            (same_type ?t1 ?b1)
          )
        )
        (exists (?t2 - game_object ?o3 - hexagonal_bin)
          (and
            (game-conserved
              (adjacent agent ?b1)
            )
            (and
              (game-conserved
                (and
                  (in ?b4 ?b)
                  (in_motion ?l1)
                  (not
                    (in ?d ?c)
                  )
                )
              )
            )
            (forall (?b3 - hexagonal_bin)
              (game-optional
                (agent_holds ?d)
              )
            )
          )
        )
        (exists (?d - dodgeball ?g - block ?h - hexagonal_bin ?c2 - dodgeball)
          (game-optional
            (> (distance_side ?h back ?c2) (distance_side bed front_left_corner ?b right))
          )
        )
        (and
          (game-conserved
            (between ?t1 ?b agent)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - block)
      (and
        (preference ballThrownFromRug
          (then
            (hold (on ?b ?d) )
            (once (not (same_object ?t ?l2) ) )
            (once (in_motion ?o) )
          )
        )
        (preference ballInOrOnBin
          (exists (?b1 - cube_block)
            (at-end
              (in_motion ?b)
            )
          )
        )
      )
    )
    (preference ballNeverThrown
      (exists (?b - hexagonal_bin)
        (then
          (once (agent_holds rug) )
          (hold (agent_holds desk) )
          (once (and (not (adjacent room_center ?b) ) (and (not (not (in_motion ?h) ) ) (in_motion ?d1) ) ) )
        )
      )
    )
    (forall (?h - shelf)
      (and
        (preference objectMovedRoomSide
          (exists (?w2 - hexagonal_bin)
            (then
              (hold (on ?h ?c3) )
              (hold (on ?w2 ?l) )
              (hold (not (agent_holds ?h) ) )
            )
          )
        )
        (preference pillowThrownToDoggieBed
          (exists (?w1 - drawer)
            (then
              (once (and (open ?h) (and (and (not (and (in_motion ?h) (rug_color_under ?x pink) ) ) (agent_holds ?l3) ) ) (equal_x_position ?h ?h) ) )
              (once (agent_holds ?w1) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (- (count-once pillowThrownToDoggieBed:green) )
    3
  )
)
(:scoring
  (count pillowThrownToDoggieBed:golfball:book)
)
)



(define (game game-id-461) (:domain medium-objects-room-v1)
(:setup
  (exists (?b2 - curved_wooden_ramp ?l3 - dodgeball)
    (and
      (and
        (and
          (and
            (and
              (forall (?w2 - game_object)
                (exists (?t - drawer)
                  (and
                    (game-conserved
                      (and
                        (and
                          (agent_holds ?t)
                          (on ?b ?t)
                          (and
                            (on ?t ?g)
                            (on ?t side_table)
                            (and
                              (and
                                (on ?b ?w2)
                                (in_motion ?l3)
                              )
                              (on ?l3 ?w2)
                              (not
                                (in_motion agent)
                              )
                              (in_motion ?t)
                              (and
                                (adjacent_side desk right ?w2)
                                (and
                                  (agent_holds agent)
                                  (agent_holds ?t)
                                )
                              )
                              (and
                                (agent_holds ?l3)
                                (and
                                  (not
                                    (not
                                      (agent_holds ?b)
                                    )
                                  )
                                  (agent_holds ?d)
                                  (and
                                    (not
                                      (not
                                        (> (distance ?h ?o) (distance desk ?c))
                                      )
                                    )
                                    (and
                                      (not
                                        (or
                                          (agent_holds ?d)
                                          (is_setup_object ?t)
                                        )
                                      )
                                      (not
                                        (in ?l3 ?l3)
                                      )
                                      (same_color ?t ?c)
                                    )
                                  )
                                  (not
                                    (= 5 (distance ?t ?l3))
                                  )
                                  (forall (?d ?h - dodgeball ?w1 - hexagonal_bin)
                                    (and
                                      (same_type ?l3 drawer)
                                      (agent_holds ?o)
                                    )
                                  )
                                  (on ?o ?b)
                                )
                              )
                              (and
                                (in_motion ?t)
                                (in_motion ?t)
                                (on ?h ?b)
                              )
                              (in_motion ?d)
                              (not
                                (in_motion agent)
                              )
                              (and
                                (not
                                  (exists (?d - block)
                                    (not
                                      (on ?r ?l3)
                                    )
                                  )
                                )
                                (and
                                  (not
                                    (agent_holds ?b)
                                  )
                                  (on ?d ?g)
                                )
                              )
                              (not
                                (and
                                  (exists (?o4 ?c - cylindrical_block)
                                    (and
                                      (forall (?h - game_object)
                                        (on ?w2 ?b)
                                      )
                                      (< (distance bed top_shelf) 3)
                                    )
                                  )
                                )
                              )
                              (and
                                (not
                                  (or
                                    (on ?w2 ?bl)
                                    (not
                                      (and
                                        (in_motion ?d)
                                        (on ?r ?d)
                                      )
                                    )
                                  )
                                )
                                (not
                                  (not
                                    (agent_holds ?b)
                                  )
                                )
                              )
                            )
                            (and
                              (and
                                (and
                                  (rug_color_under ?h ?t)
                                  (agent_holds ?r)
                                )
                                (agent_holds ?l)
                              )
                              (on desk ?o)
                            )
                          )
                        )
                        (not
                          (same_type ?o ?l3)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
          (and
            (game-conserved
              (adjacent ?l3 agent)
            )
            (game-conserved
              (touch ?l3 ?t)
            )
          )
        )
      )
      (exists (?c - (either cube_block main_light_switch blue_cube_block))
        (and
          (and
            (game-conserved
              (agent_holds ?d)
            )
          )
          (and
            (and
              (and
                (exists (?w2 - dodgeball ?s - hexagonal_bin)
                  (game-optional
                    (not
                      (in_motion ?c)
                    )
                  )
                )
              )
            )
            (game-conserved
              (not
                (agent_holds ?o)
              )
            )
          )
        )
      )
      (forall (?r - cube_block ?h - ball)
        (forall (?b - hexagonal_bin ?d - (either pyramid_block tall_cylindrical_block))
          (game-conserved
            (in ?b ?d)
          )
        )
      )
      (forall (?h - game_object)
        (forall (?f - ball)
          (and
            (exists (?b6 - doggie_bed ?db - (either golfball rug))
              (game-conserved
                (and
                  (adjacent_side ?l3 ?l3 ?r)
                  (agent_holds ?l1)
                )
              )
            )
            (exists (?c ?b - teddy_bear)
              (and
                (and
                  (or
                    (exists (?o5 - building)
                      (exists (?t - (either cylindrical_block pyramid_block hexagonal_bin))
                        (exists (?l2 - (either cellphone laptop blue_cube_block))
                          (game-conserved
                            (< 1 (distance_side ?c ?b ?c))
                          )
                        )
                      )
                    )
                    (game-optional
                      (agent_holds ?l3)
                    )
                    (game-optional
                      (and
                        (and
                          (touch ?c ?d)
                          (in_motion ?t)
                        )
                        (same_color ?h brown)
                      )
                    )
                  )
                  (and
                    (and
                      (and
                        (exists (?t2 - cylindrical_block)
                          (or
                            (game-conserved
                              (in_motion ?c)
                            )
                            (forall (?h - hexagonal_bin)
                              (game-optional
                                (and
                                  (in_motion ?b3)
                                  (and
                                    (= 1 (distance agent ?l3))
                                    (equal_z_position ?h ?c3)
                                  )
                                )
                              )
                            )
                            (exists (?h - hexagonal_bin)
                              (and
                                (exists (?o3 - ball ?d - game_object ?l - dodgeball ?h - hexagonal_bin ?b8 - drawer)
                                  (forall (?p1 - shelf ?o1 - doggie_bed ?h - block)
                                    (game-optional
                                      (in_motion agent)
                                    )
                                  )
                                )
                                (exists (?c - (either desktop golfball) ?b - curved_wooden_ramp)
                                  (game-conserved
                                    (not
                                      (agent_holds ?f)
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                      (game-conserved
                        (and
                          (in_motion ?b)
                          (in_motion ?l3)
                          (on ?f ?b1)
                          (in_motion ?b)
                        )
                      )
                    )
                    (game-optional
                      (adjacent agent ?b)
                    )
                  )
                )
                (exists (?t1 - (either chair lamp))
                  (forall (?o - cube_block)
                    (exists (?d - ball)
                      (and
                        (game-conserved
                          (equal_x_position ?t1 ?o)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference smallObjectThrownToBed
      (exists (?w2 - block)
        (then
          (once (exists (?b - ball) (is_setup_object ?d) ) )
          (once (in_motion ?b) )
          (once (agent_holds ?w2) )
        )
      )
    )
    (preference teddyBearHitsBall
      (exists (?p3 - teddy_bear)
        (then
          (hold (in_motion ?p3) )
          (once (and (agent_holds ?p3) (not (broken ?d) ) (in_motion ?p3) ) )
          (once (not (not (in_motion ?d) ) ) )
        )
      )
    )
  )
)
(:terminal
  (> (total-time) (count-longest teddyBearHitsBall:beachball) )
)
(:scoring
  (/
    6
    (count teddyBearHitsBall:red)
  )
)
)



(define (game game-id-462) (:domain few-objects-room-v1)
(:setup
  (exists (?w2 - ball)
    (or
      (and
        (or
          (game-optional
            (agent_holds ?d)
          )
          (exists (?o ?c3 - wall ?h - chair ?c3 - (either dodgeball dodgeball))
            (or
              (and
                (and
                  (game-conserved
                    (adjacent ?c3 ?h)
                  )
                )
              )
              (exists (?l4 - doggie_bed)
                (game-optional
                  (agent_holds ?h)
                )
              )
            )
          )
        )
      )
      (forall (?o4 - triangular_ramp ?bl - doggie_bed)
        (forall (?b - (either hexagonal_bin dodgeball) ?d - ball ?d - building)
          (game-conserved
            (in ?c ?bl)
          )
        )
      )
      (or
        (forall (?h - hexagonal_bin)
          (game-conserved
            (in ?h ?d)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference golfballInBinFromPillow
      (exists (?d - dodgeball)
        (then
          (hold (and (not (between ?d ?d agent) ) (and (in_motion ?d) (or (in_motion ?d) (agent_holds ?bl) (and (agent_holds ?b) (adjacent_side ?w1 front agent) ) ) ) ) )
          (once (in_motion ?d) )
          (hold (and (and (not (and (not (or (not (not (on ?l ?p) ) ) ) ) (agent_holds floor) ) ) (adjacent desk ?d) ) (object_orientation ?d sideways) (and (or (not (and (touch ?c ?l) (agent_holds ?l) ) ) (not (toggled_on ?d) ) (and (equal_x_position ?h ?d) (agent_holds ?d) ) ) (not (on ?c1 ?c1) ) (and (not (and (and (agent_holds ?d) (not (on ?d ?d) ) ) (and (agent_holds ?l3) (and (not (object_orientation ?b ?d) ) (in_motion ?d) ) ) (< (distance ?d ?f) 1) ) ) (agent_holds ?b) ) ) (and (and (not (and (not (and (not (and (and (and (in_motion ?d) (in floor ?b) ) (agent_holds ?o2) ) (agent_holds desk) ) ) (exists (?b - hexagonal_bin ?t - doggie_bed ?b1 ?r1 ?h ?b10 ?c6 ?h - dodgeball) (exists (?o - (either book dodgeball) ?h - cube_block) (and (agent_holds ?d) (agent_holds ?d) ) ) ) ) ) (and (> (distance desk ?d) 1) (not (< 1 4) ) (in_motion green_golfball) ) ) ) (exists (?c - doggie_bed) (in green_golfball ?c) ) ) (in ?d ?p) ) ) )
          (hold (not (and (agent_holds ?d) (< (distance ?w1 ?d) 2) ) ) )
        )
      )
    )
    (preference ballInOrOnBin
      (exists (?h - shelf)
        (then
          (once (and (> (distance room_center ?h) 1) (on ?d ?h) ) )
          (once (< 0 (distance ?h ?h)) )
        )
      )
    )
  )
)
(:terminal
  (and
    (< 8 (count golfballInBinFromPillow:hexagonal_bin) )
    (>= 6 (count ballInOrOnBin:beachball) )
    (>= 5 3 )
  )
)
(:scoring
  (count-once-per-objects golfballInBinFromPillow:purple)
)
)



(define (game game-id-463) (:domain few-objects-room-v1)
(:setup
  (forall (?t - (either bridge_block hexagonal_bin key_chain beachball))
    (and
      (game-optional
        (open ?t)
      )
    )
  )
)
(:constraints
  (and
    (forall (?p3 - doggie_bed)
      (and
        (preference tanObjectMovedToRoomCenter
          (exists (?o - hexagonal_bin)
            (then
              (once (and (and (and (and (not (agent_holds ?o) ) (not (not (not (in ?p3 ?p3) ) ) ) ) (on ?p3 ?p3) ) (agent_holds ?o) ) (in ?o ?o) (agent_holds ?p3) ) )
              (once (and (exists (?r1 - hexagonal_bin) (and (and (in_motion ?p3) (and (adjacent rug ?d) (faces ?p3 ?d) ) ) (and (in_motion bed) (< (distance ?h ?h) 1) ) ) ) (= 9) ) )
              (once (object_orientation ?d upright) )
            )
          )
        )
        (preference throwAttempt
          (exists (?c - hexagonal_bin ?s - dodgeball)
            (at-end
              (in_motion ?p3)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) 60 )
)
(:scoring
  (count tanObjectMovedToRoomCenter:beachball:hexagonal_bin)
)
)



(define (game game-id-464) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (is_setup_object ?b2)
  )
)
(:constraints
  (and
    (preference ballOnBedAtEnd
      (exists (?o3 - curved_wooden_ramp)
        (at-end
          (agent_holds ?o3)
        )
      )
    )
    (preference throwToDrawerOrBin
      (exists (?c - (either dodgeball bridge_block bridge_block) ?h - pillow)
        (then
          (once (adjacent ?h ?h) )
          (hold (and (and (in ?h ?h) (and (exists (?d - cylindrical_block) (faces ?d ?d) ) (in_motion ?h) ) ) (in_motion ?p) (is_setup_object ?c3) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 50 5 (= 30 (count-once-per-objects throwToDrawerOrBin:beachball) )
      (count-once-per-objects ballOnBedAtEnd:doggie_bed)
    )
    2
  )
)
(:scoring
  (count throwToDrawerOrBin:dodgeball:pink_dodgeball)
)
)



(define (game game-id-465) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (not
      (same_object ?b ?h)
    )
  )
)
(:constraints
  (and
    (preference throwToRampToBin
      (exists (?b - game_object)
        (at-end
          (and
            (< (distance ?b ?b) (distance room_center ?b))
            (not
              (in_motion ?b)
            )
            (on ?b ?l2)
            (on ?d ?b)
            (and
              (in ?b ?b)
              (and
                (agent_holds ?d)
                (not
                  (same_type ?d ?b)
                )
              )
            )
            (agent_holds ?b)
          )
        )
      )
    )
    (preference ballThrownIntoTarget
      (exists (?ob - pillow)
        (then
          (hold (above ?b ?l1) )
          (once (in_motion ?ob) )
          (once (on ?w1 ?ob) )
        )
      )
    )
    (preference ballThrownThroughRampAndBlocksToBin
      (then
        (hold (in_motion ?b2) )
      )
    )
    (preference ballKnocksBlockFromRug
      (exists (?d - dodgeball ?w2 ?b3 - (either pyramid_block bridge_block))
        (then
          (once (exists (?b - dodgeball ?b1 - game_object) (on ?b3 ?b1) ) )
          (once (not (agent_holds ?b3) ) )
          (once-measure (> 6 2) (distance ?c1 ?w2) )
        )
      )
    )
    (preference ballThrownToRug
      (exists (?p ?b - ball)
        (at-end
          (between ?o ?p ?b)
        )
      )
    )
  )
)
(:terminal
  (>= (count-once ballThrownIntoTarget:yellow) (total-time) )
)
(:scoring
  (<= (count throwToRampToBin:dodgeball) 50 )
)
)



(define (game game-id-466) (:domain many-objects-room-v1)
(:setup
  (forall (?c - hexagonal_bin)
    (game-conserved
      (forall (?b - hexagonal_bin)
        (agent_holds ?d1)
      )
    )
  )
)
(:constraints
  (and
    (preference ballRolledOnRampToRug
      (exists (?b8 - building ?d2 ?b - cube_block)
        (then
          (once (not (< (distance ?c ?b) (distance ?w2 ?d2)) ) )
          (once (agent_holds ?b) )
          (hold (adjacent ?d2 ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= 20 (+ (count ballRolledOnRampToRug:hexagonal_bin) (count-once-per-objects ballRolledOnRampToRug:dodgeball) )
  )
)
(:scoring
  (external-forall-maximize
    (count ballRolledOnRampToRug)
  )
)
)



(define (game game-id-467) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (and
      (agent_holds ?r)
      (agent_holds ?o)
    )
  )
)
(:constraints
  (and
    (preference laptopAndBookInPlace
      (exists (?l3 - (either dodgeball tall_cylindrical_block))
        (then
          (once (not (and (agent_holds ?l3) (on ?s ?l3) (in ?d bed) ) ) )
          (once (in_motion ?d) )
          (once (in_motion ?l3) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (+ 3 5 1 (+ (* (> 1 (>= (* (+ (* 20 9 (count laptopAndBookInPlace:dodgeball) )
                    (/
                      18
                      (* (count-measure laptopAndBookInPlace:yellow:blue_dodgeball) (count laptopAndBookInPlace:golfball) )
                    )
                  )
                  15
                )
                (count-longest laptopAndBookInPlace:book)
              )
            )
            (-
              1
              (* (* (* 5 (count-longest laptopAndBookInPlace:golfball) )
                  (* 1 (+ (count-measure laptopAndBookInPlace) 6 )
                  )
                )
                (+ 2 5 )
              )
            )
          )
          6
        )
        (count laptopAndBookInPlace:golfball)
        30
      )
      1
    )
    (total-score)
  )
)
(:scoring
  (count-overlapping laptopAndBookInPlace:golfball)
)
)



(define (game game-id-468) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?t - cube_block ?r - curved_wooden_ramp)
      (exists (?b4 - dodgeball ?w - ball)
        (forall (?o - (either pyramid_block cd cd))
          (game-optional
            (on ?w desk)
          )
        )
      )
    )
    (exists (?d - hexagonal_bin)
      (or
        (and
          (and
            (game-conserved
              (not
                (in ?b ?d)
              )
            )
          )
        )
        (forall (?h - hexagonal_bin)
          (and
            (exists (?d - dodgeball)
              (game-optional
                (or
                  (and
                    (not
                      (agent_holds ?l3)
                    )
                    (on ?h ?h)
                  )
                  (in ?d ?o)
                )
              )
            )
          )
        )
        (exists (?o - hexagonal_bin)
          (forall (?d - cube_block)
            (exists (?c - hexagonal_bin ?o ?d ?b5 - teddy_bear)
              (and
                (game-optional
                  (in ?b6 agent)
                )
                (and
                  (and
                    (game-conserved
                      (agent_holds ?b5)
                    )
                  )
                  (exists (?s - (either book pyramid_block) ?b - block)
                    (and
                      (and
                        (exists (?b - desktop)
                          (and
                            (forall (?o5 - color ?b4 - cube_block)
                              (exists (?d - hexagonal_bin)
                                (game-conserved
                                  (on ?b5 ?b5)
                                )
                              )
                            )
                          )
                        )
                        (game-conserved
                          (on desktop ?h)
                        )
                      )
                    )
                  )
                  (and
                    (and
                      (exists (?c1 - (either golfball teddy_bear desktop))
                        (forall (?o3 ?c - blue_cube_block)
                          (game-conserved
                            (in_motion ?c)
                          )
                        )
                      )
                      (and
                        (and
                          (exists (?d - cube_block)
                            (game-optional
                              (not
                                (= 7 (distance ?b5 ?h))
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToBed
      (exists (?h - game_object ?o - golfball)
        (then
          (once (not (agent_holds ?o) ) )
          (hold-while (in_motion ?o) (or (touch ?o ?o) (game_start ) ) (in ?h ?o) )
          (hold (not (> 1 1) ) )
        )
      )
    )
    (preference smallObjectThrownToBed
      (exists (?c4 - pillow ?d - dodgeball)
        (then
          (once (in west_wall ?ob) )
          (once (and (not (in_motion ?c1) ) (in_motion ?l1) ) )
          (once (in_motion ?d) )
          (once (agent_holds ?d) )
          (once (not (and (not (and (and (in agent ?b) (and (in ?d ?b) (on ?b agent) ) ) (not (and (adjacent_side ?h front ?d front) (on ?d ?d) (touch ?d ?d) (not (adjacent agent ?d) ) (not (not (or (agent_holds ?d) (in_motion ?d) ) ) ) ) ) ) ) (game_start ) ) ) )
        )
      )
    )
    (forall (?b2 - hexagonal_bin ?o5 - (either teddy_bear cube_block) ?h - (either golfball book))
      (and
        (preference towerFallsWhileBuilding
          (exists (?c5 - dodgeball ?h - hexagonal_bin ?h - hexagonal_bin)
            (at-end
              (not
                (adjacent ?d ?g)
              )
            )
          )
        )
      )
    )
    (preference ballOnBedAtEnd
      (exists (?ob - game_object)
        (then
          (hold-while (agent_holds ?b) (agent_holds ?ob) )
          (once (agent_holds ?ob) )
          (once (in_motion ?r) )
        )
      )
    )
    (preference dodgeballAndBasketballInBin
      (exists (?b1 ?b - (either pyramid_block red dodgeball chair pink bridge_block wall) ?d - (either dodgeball yellow_cube_block) ?h - curved_wooden_ramp)
        (then
          (hold (< 9 (distance ?h ?o)) )
          (hold (equal_z_position desk ?h) )
        )
      )
    )
  )
)
(:terminal
  (>= 180 (count smallObjectThrownToBed:orange) )
)
(:scoring
  (count towerFallsWhileBuilding:golfball:dodgeball)
)
)



(define (game game-id-469) (:domain many-objects-room-v1)
(:setup
  (exists (?r1 - doggie_bed)
    (and
      (game-conserved
        (agent_holds ?r1)
      )
      (game-conserved
        (in_motion ?r1)
      )
      (exists (?b6 - game_object)
        (forall (?w1 - ball ?c - (either doggie_bed laptop alarm_clock) ?o - pillow)
          (game-conserved
            (agent_holds ?o)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference throwAttempt
          (exists (?b2 - hexagonal_bin)
            (then
              (once (in ?b2 ?d) )
              (once (< (distance ?h agent) 7) )
              (once (on ?b2 ?b) )
            )
          )
        )
        (preference blindsOpened
          (exists (?b - color)
            (at-end
              (agent_holds ?b)
            )
          )
        )
      )
    )
    (forall (?h - hexagonal_bin)
      (and
        (preference thrownObjectHitsComputer
          (exists (?c1 - ball ?p1 - ball)
            (then
              (hold (< (distance west_wall desk) (distance bed ?p1)) )
              (hold (in_motion ?t) )
              (once-measure (in_motion ?h) (distance room_center ?h) )
            )
          )
        )
        (preference baseBlockInTowerAtEnd
          (exists (?h - dodgeball ?s - game_object)
            (then
              (once (and (agent_holds ?h) (agent_holds ?b) (game_start ) (and (in_motion ?s) (adjacent_side room_center left ?s) ) ) )
              (once (and (agent_holds bed) (not (not (not (in ?b ?s) ) ) ) ) )
              (once (is_setup_object ?d) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= 5 18 )
  )
)
(:scoring
  (count-once-per-objects baseBlockInTowerAtEnd:dodgeball)
)
)



(define (game game-id-470) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (exists (?d - game_object)
        (game-conserved
          (on ?c ?d)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference basketMadeFromRug
      (exists (?c3 - drawer)
        (then
          (once (and (not (rug_color_under ?r blue) ) (in ?c2 ?b) (on ?c3 ?s) ) )
          (once (not (not (agent_holds agent) ) ) )
          (hold (forall (?b - doggie_bed) (agent_holds ?c3) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (or
        (> 3 5 )
        (>= (count-once-per-objects basketMadeFromRug:red_pyramid_block) 3 )
      )
      (<= (* 9 2 )
        (- (count-once-per-objects basketMadeFromRug:yellow) )
      )
    )
  )
)
(:scoring
  (count-once-per-objects basketMadeFromRug:cylindrical_block)
)
)



(define (game game-id-471) (:domain medium-objects-room-v1)
(:setup
  (not
    (exists (?r - ball ?d - block)
      (and
        (forall (?ob - hexagonal_bin)
          (and
            (exists (?h - shelf ?f - block)
              (exists (?b ?b - dodgeball ?r - hexagonal_bin ?p2 - (either hexagonal_bin chair))
                (game-conserved
                  (and
                    (not
                      (agent_holds ?g)
                    )
                    (not
                      (or
                        (agent_holds desk)
                        (not
                          (same_object ?d ?f)
                        )
                      )
                    )
                    (agent_holds ?p2)
                  )
                )
              )
            )
            (game-optional
              (not
                (and
                  (not
                    (in_motion ?o2)
                  )
                  (agent_holds ?c2)
                  (not
                    (in_motion ?w2)
                  )
                )
              )
            )
            (game-optional
              (agent_holds ?d)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockInTowerKnocked
      (exists (?c3 - hexagonal_bin ?c - sliding_door)
        (then
          (once (agent_holds ?b) )
          (once (in_motion ?c) )
          (hold (same_type agent blinds) )
          (hold (toggled_on ?h) )
        )
      )
    )
  )
)
(:terminal
  (>= (external-forall-maximize (- 2 3 ) ) 2 )
)
(:scoring
  (* (+ (/ 30 3 ) (count blockInTowerKnocked:orange:red) )
    (count-once-per-objects blockInTowerKnocked:side_table)
  )
)
)



(define (game game-id-472) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?l1 - golfball)
      (and
        (forall (?p3 - block)
          (game-optional
            (not
              (or
                (agent_holds ?p3)
                (and
                  (and
                    (not
                      (not
                        (in ?c ?c)
                      )
                    )
                    (forall (?g - beachball ?b - desk_shelf)
                      (in_motion ?b)
                    )
                    (or
                      (broken ?d)
                      (and
                        (and
                          (faces ?bl ?p3)
                          (in_motion ?d)
                          (agent_holds ?h)
                          (in_motion ?d)
                        )
                        (< (distance ?r ?b) 0)
                      )
                    )
                    (in_motion agent)
                  )
                  (not
                    (exists (?b8 - golfball ?d - color)
                      (in ?p3 ?d)
                    )
                  )
                  (and
                    (in ?l1 ?f)
                    (and
                      (>= 0.5 4)
                      (agent_holds ?o1)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
    (and
      (forall (?r - block)
        (game-optional
          (agent_holds ?r)
        )
      )
      (and
        (forall (?b2 - block)
          (game-optional
            (agent_holds ?b2)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballOnBedAtEnd
      (exists (?p2 - cube_block)
        (then
          (once (and (and (in_motion ?d) ) (and (and (agent_holds ?p2) (touch ?p2 ?p2) ) (not (>= 8 (distance_side desk ?p2 ?b front_left_corner)) ) ) (agent_holds ?p2) ) )
          (once (not (adjacent ?c1 ?p2) ) )
          (hold (not (not (in ?p2 ?g) ) ) )
        )
      )
    )
  )
)
(:terminal
  (<= (- (* 2 (* (* 20 10 )
          (count ballOnBedAtEnd:yellow)
          (count ballOnBedAtEnd:tan)
          5
        )
      )
    )
    (count-total ballOnBedAtEnd:triangle_block)
  )
)
(:scoring
  (count-once ballOnBedAtEnd:alarm_clock)
)
)



(define (game game-id-473) (:domain medium-objects-room-v1)
(:setup
  (exists (?b4 - cube_block)
    (forall (?h - game_object ?w2 - beachball ?t - game_object)
      (forall (?h - drawer ?c6 ?w2 ?p ?ob ?d ?b6 - game_object)
        (game-optional
          (and
            (forall (?d - (either beachball))
              (and
                (is_setup_object ?b4)
                (agent_holds ?o)
              )
            )
            (exists (?o - dodgeball ?h - curved_wooden_ramp)
              (agent_holds ?c6)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - cube_block)
      (and
        (preference ballToBinFromBed
          (exists (?p - curved_wooden_ramp ?o - hexagonal_bin)
            (then
              (once-measure (in_motion ?d) (distance ?o ?o) )
              (once (> (x_position ?d) 1) )
              (hold (open ?d) )
            )
          )
        )
      )
    )
    (preference throwKnocksOverBear
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (is_setup_object ?h) )
          (once (not (not (in_motion ?h) ) ) )
          (hold (and (not (not (and (touch bed ?h) (in ?b3 ?h) ) ) ) (in_motion ?h) ) )
        )
      )
    )
    (forall (?b - hexagonal_bin)
      (and
        (preference failedThrowToBin
          (exists (?c - chair ?h - hexagonal_bin)
            (at-end
              (agent_holds ?h)
            )
          )
        )
      )
    )
    (forall (?h - cube_block ?t2 - dodgeball ?d - building)
      (and
        (preference blindsOpened
          (then
            (once (adjacent room_center ?d) )
            (once (on ?b ?o) )
            (once (in_motion ?b) )
            (once (not (in_motion bed) ) )
            (once (not (and (in_motion ?d) (agent_holds ?d) (in ?c ?d) (< (distance bed ?d) (distance ?d ?d)) ) ) )
            (once (in_motion agent) )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (count-same-positions blindsOpened:blue_pyramid_block:purple) )
)
(:scoring
  (count-once-per-objects failedThrowToBin:yellow)
)
)



(define (game game-id-474) (:domain medium-objects-room-v1)
(:setup
  (forall (?h - hexagonal_bin ?h - dodgeball ?c - game_object)
    (and
      (game-optional
        (agent_holds ?c)
      )
      (forall (?w - pillow)
        (exists (?l - hexagonal_bin ?c - shelf)
          (exists (?c - doggie_bed)
            (game-optional
              (and
                (not
                  (and
                    (on ?w ?c)
                    (agent_holds ?h)
                  )
                )
                (on ?w ?o5)
              )
            )
          )
        )
      )
      (game-conserved
        (adjacent_side agent front ?d)
      )
    )
  )
)
(:constraints
  (and
    (forall (?p - cube_block)
      (and
        (preference ballOnBedAtEnd
          (exists (?b - curved_wooden_ramp)
            (then
              (once (same_object ?o bed) )
              (once (agent_holds ?s) )
              (hold (and (adjacent room_center ?r2) (and (not (agent_holds ?o) ) (on ?o ?b) ) ) )
              (once (agent_holds ?bl) )
            )
          )
        )
      )
    )
    (forall (?s - hexagonal_bin ?h - ball ?o - block ?w - ball)
      (and
        (preference dodgeballThrownToBinFromDesk
          (then
            (hold (and (on ?h ?w) (agent_holds ?w) ) )
            (once (on ?d ?w) )
            (once (not (in_motion ?w) ) )
          )
        )
        (preference dodgeballHitsBin
          (exists (?r - hexagonal_bin)
            (at-end
              (agent_holds ?o)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= 40 (count dodgeballHitsBin:golfball:blue_dodgeball) )
    (not
      (>= (count ballOnBedAtEnd:dodgeball) (total-time) )
    )
    (>= (count ballOnBedAtEnd:yellow:pink_dodgeball) (count dodgeballThrownToBinFromDesk:golfball:dodgeball) )
  )
)
(:scoring
  (+ (- (count-once ballOnBedAtEnd:doggie_bed) )
    (* 10 180 )
  )
)
)



(define (game game-id-475) (:domain medium-objects-room-v1)
(:setup
  (exists (?l4 - (either blue_cube_block cellphone))
    (exists (?c2 - block)
      (game-optional
        (agent_holds ?c2)
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?o - block ?h - curved_wooden_ramp ?h - cube_block)
        (then
          (once (and (and (opposite ?b ?h) (touch ?b ?b10) ) (agent_holds ?t) ) )
          (once (and (= 7) (and (not (above ?b ?o) ) (on ?h ?h) (agent_holds ?d) ) ) )
          (hold (agent_holds ?b1) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) 10 )
)
(:scoring
  (+ (+ (* (count throwAttempt:beachball) (* (count throwAttempt) 2 )
        30
      )
      (count-once-per-objects throwAttempt:dodgeball:yellow_cube_block)
      10
      (+ 7 3 (count-same-positions throwAttempt:green:beachball) 15 (* (* (* 30 3 )
            (+ (count throwAttempt:book) (* 10 (+ 2 (+ (count throwAttempt:purple) 3 (count throwAttempt:yellow) )
                )
                3
                (* 50 (+ 4 7 )
                )
              )
              1
            )
          )
          (= 30 (count-total throwAttempt:hexagonal_bin) )
        )
        3
      )
      6
      (count-once-per-objects throwAttempt:yellow:green)
      (+ 15 (count-measure throwAttempt:purple:wall) )
      (* 5 50 )
      (* 30 5 )
    )
    (* 20 (count throwAttempt:dodgeball) )
  )
)
)



(define (game game-id-476) (:domain many-objects-room-v1)
(:setup
  (exists (?h - hexagonal_bin ?b7 - dodgeball)
    (game-conserved
      (not
        (in_motion ?o)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?b - cube_block)
        (then
          (hold (not (on ?b ?b) ) )
          (once (in ?s agent) )
          (hold (agent_holds ?o) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 30 (+ (count ballThrownToBin:dodgeball:green) 7 )
    )
    10
  )
)
(:scoring
  (* (count-once-per-objects ballThrownToBin:beachball) 3 (count ballThrownToBin:beachball:beachball) (* 2 10 )
    (count-total ballThrownToBin:red)
    10
  )
)
)



(define (game game-id-477) (:domain few-objects-room-v1)
(:setup
  (exists (?b5 - game_object)
    (forall (?tb - cube_block)
      (and
        (exists (?h - dodgeball)
          (and
            (and
              (and
                (forall (?b10 - triangular_ramp)
                  (game-conserved
                    (not
                      (agent_holds pink_dodgeball)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference smallObjectThrownToBed
      (exists (?t1 ?c ?o3 - dodgeball ?b - chair ?c5 - doggie_bed)
        (at-end
          (not
            (not
              (broken ?c5)
            )
          )
        )
      )
    )
    (forall (?b9 - (either dodgeball pink) ?ob - chair)
      (and
        (preference blockIncorrectlyPicked
          (exists (?d ?b ?c2 - cylindrical_block)
            (then
              (once (not (and (equal_z_position ?r ?c2) (and (agent_holds ?d) (in_motion ?c2) (and (not (in_motion ?ob) ) (and (in_motion ?h) (not (on ?d ?ob) ) ) ) (and (in_motion ?ob) (<= 1 1) ) ) ) ) )
              (once (in_motion ?ob) )
              (once (and (on ?d ?c2) (in_motion desk) ) )
            )
          )
        )
        (preference ballThrownThroughRampToBin
          (exists (?p - (either pyramid_block teddy_bear) ?o - game_object)
            (at-end
              (in_motion ?o2)
            )
          )
        )
        (preference dodgeballHitsPillowWithoutTouchingBlock
          (exists (?c - shelf)
            (then
              (once (not (touch ?ob ?g) ) )
              (once (and (same_color ?d ?tb) (not (open ?d) ) ) )
              (hold-while (above ?b ?h) (in ?b ?ob) )
            )
          )
        )
        (preference dodgeballBouncesOnceToDoggieBed
          (exists (?h - (either laptop watch desktop alarm_clock))
            (then
              (hold (not (and (between ?h ?h ?h) (agent_holds ?b) (on ?ob ?ob) ) ) )
              (once (agent_holds ?c) )
              (hold (and (and (on ?d ?h) (agent_holds ?g) (and (in_motion ?h) (not (= 6 3) ) ) ) (and (= (distance door ?o1) 1) (not (adjacent bed ?b) ) (in_motion ?ob) (agent_holds ?d) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (total-score) (total-time) )
    (>= (total-time) (count ballThrownThroughRampToBin:pink_dodgeball) )
  )
)
(:scoring
  (count-once-per-objects smallObjectThrownToBed:dodgeball)
)
)



(define (game game-id-478) (:domain many-objects-room-v1)
(:setup
  (forall (?w2 - (either bridge_block laptop cd) ?d - chair)
    (exists (?d - curved_wooden_ramp)
      (game-conserved
        (on ?d ?b)
      )
    )
  )
)
(:constraints
  (and
    (forall (?c - cube_block)
      (and
        (preference blockPickedUp
          (exists (?b - hexagonal_bin)
            (then
              (once (not (agent_holds ?d) ) )
              (once (on ?d ?b) )
              (once (and (touch ?d ?b) (and (< (distance desk ?g) 4) (on ?c ?b) ) ) )
            )
          )
        )
        (preference dodgeballsInPlace
          (exists (?t - hexagonal_bin)
            (then
              (once (in_motion ?t) )
              (hold-while (and (agent_holds ?c) (<= (distance_side ?c front ?d front) 1) (and (not (agent_holds ?t) ) (and (on ?g ?d) (not (on ?c ?t) ) ) ) ) (not (and (or (and (on ?l2 ?c) (in_motion ?t) (or (on ?r ?t) ) (touch ?b ?t) (in_motion ?c) (in_motion ?t) (in ?b agent) ) (exists (?c3 - block ?h - game_object ?c5 - hexagonal_bin) (exists (?b - ball) (same_object ?b ?l1) ) ) ) (and (and (and (not (in_motion ?b) ) (not (in_motion ?t) ) ) (adjacent ?c ?c) ) (in ?t ?c) (on ?h ?t) ) ) ) (is_setup_object ?d) )
              (once (not (and (and (and (agent_holds ?c) (rug_color_under ?c tan) ) (toggled_on ?c) (and (in_motion ?h) (in_motion ?c) ) ) (same_color ?b ?o2) ) ) )
            )
          )
        )
      )
    )
    (preference gameObjectToBin
      (exists (?b4 - hexagonal_bin ?g - (either red game_object))
        (then
          (hold (< 8 1) )
          (once-measure (and (in ?b ?g) ) (distance ?g ?g) )
          (hold (not (broken agent) ) )
        )
      )
    )
    (preference thrownBallHitsBlock
      (exists (?o - ball)
        (at-end
          (in_motion ?d)
        )
      )
    )
  )
)
(:terminal
  (>= (count gameObjectToBin:beachball) (external-forall-maximize (* (count-once gameObjectToBin:dodgeball:beachball) (count blockPickedUp:hexagonal_bin) )
    )
  )
)
(:scoring
  (count-once-per-objects gameObjectToBin:dodgeball)
)
)



(define (game game-id-479) (:domain many-objects-room-v1)
(:setup
  (exists (?h - cube_block ?w1 - block)
    (game-conserved
      (agent_holds ?b)
    )
  )
)
(:constraints
  (and
    (preference bounceBallToBin
      (exists (?l1 - dodgeball)
        (at-end
          (not
            (on ?g ?c)
          )
        )
      )
    )
    (forall (?c2 - hexagonal_bin)
      (and
        (preference gameObjectToBin
          (exists (?c2 - teddy_bear)
            (at-end
              (agent_holds ?c2)
            )
          )
        )
      )
    )
    (preference objectInBuilding
      (exists (?d - doggie_bed)
        (then
          (hold (or (not (and (in_motion agent) (and (forall (?w1 - (either main_light_switch)) (in_motion ?o1) ) (in_motion ?h) ) ) ) ) )
          (once (on ?d ?b) )
          (hold (agent_holds ?d) )
        )
      )
    )
  )
)
(:terminal
  (<= (total-time) (total-time) )
)
(:scoring
  (* 2 (count-same-positions bounceBallToBin:dodgeball) (count-longest bounceBallToBin:book) )
)
)



(define (game game-id-480) (:domain medium-objects-room-v1)
(:setup
  (exists (?d - ball ?b - (either golfball basketball))
    (exists (?w1 - hexagonal_bin)
      (game-conserved
        (not
          (agent_holds ?b)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h ?b ?l - (either bridge_block red))
      (and
        (preference dropAttempt
          (exists (?p2 - yellow_cube_block ?w1 - hexagonal_bin)
            (then
              (once (not (in_motion ?h) ) )
              (once (< 3 1) )
              (once (in_motion ?b) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (+ 4 (* 3 (* (count dropAttempt:yellow) 8 )
      )
    )
    (count-once-per-objects dropAttempt:pink_dodgeball)
  )
)
(:scoring
  (* (+ 3 15 )
    (count dropAttempt:basketball)
  )
)
)



(define (game game-id-481) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (forall (?h - (either cd key_chain))
        (game-optional
          (in_motion ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?t - dodgeball)
      (and
        (preference pyramidBlockAtopTowerAtEnd
          (exists (?r ?c - hexagonal_bin ?l - curved_wooden_ramp)
            (at-end
              (in ?t ?l)
            )
          )
        )
      )
    )
    (preference matchingBuildingBuilt
      (exists (?w2 - drawer)
        (then
          (once (or (not (adjacent_side ?w2 front ?w2) ) (in ?w2 ?b) (in ?w2 ?b1) (in_motion ?d) ) )
          (hold-while (and (not (and (in_motion ?w2) (agent_holds ?w2) (in_motion ?h) (> 1 1) (not (not (and (agent_holds ?b) (in ?c1 ?b) ) ) ) (in ?c ?o) ) ) (agent_holds ?w2) ) (agent_holds ?w2) )
          (hold (object_orientation ?d upright) )
        )
      )
    )
  )
)
(:terminal
  (<= (count matchingBuildingBuilt:basketball:golfball) (external-forall-maximize (count matchingBuildingBuilt:blue_dodgeball:beachball) ) )
)
(:scoring
  (count-once-per-objects pyramidBlockAtopTowerAtEnd:side_table)
)
)



(define (game game-id-482) (:domain many-objects-room-v1)
(:setup
  (forall (?d - wall ?d - ball)
    (forall (?h - golfball)
      (and
        (and
          (game-conserved
            (< 1 (distance ?h ?d))
          )
          (game-conserved
            (touch ?b1 ?h)
          )
          (game-optional
            (on ?l2 ?h)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToRampToBin
      (exists (?r1 - hexagonal_bin)
        (then
          (once (exists (?d2 - hexagonal_bin) (touch rug ?r1) ) )
          (once (agent_holds ?s) )
          (once (< 4 1) )
        )
      )
    )
  )
)
(:terminal
  (<= (* 2 4 )
    (count throwToRampToBin:pink_dodgeball)
  )
)
(:scoring
  (+ (= (count-once-per-external-objects throwToRampToBin:basketball) (count-same-positions throwToRampToBin:blue_dodgeball) )
    (* 100 (* (count throwToRampToBin:basketball) (count throwToRampToBin:pink) )
    )
  )
)
)



(define (game game-id-483) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c2 - hexagonal_bin)
      (or
        (game-conserved
          (in_motion ?c2)
        )
        (exists (?h - hexagonal_bin)
          (and
            (game-conserved
              (agent_holds ?d)
            )
          )
        )
        (exists (?p - doggie_bed)
          (exists (?p2 - curved_wooden_ramp ?b7 - (either basketball tall_cylindrical_block))
            (game-optional
              (opposite ?b7 ?h)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?t - doggie_bed)
      (and
        (preference itemInClosedDrawerAtEnd
          (exists (?h - (either alarm_clock desktop))
            (then
              (once (on ?b ?h) )
              (once (in_motion ?w1) )
              (once (same_color ?d ?h) )
            )
          )
        )
      )
    )
    (preference blindsOpened
      (exists (?h - hexagonal_bin)
        (then
          (once (agent_holds ?h) )
          (once (forall (?d2 - hexagonal_bin) (on agent ?l) ) )
          (once (faces ?d ?h) )
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (or
        (or
          (>= (total-time) (* (+ (count-unique-positions itemInClosedDrawerAtEnd:yellow) (+ (count blindsOpened:orange) (count blindsOpened:dodgeball) (count-once blindsOpened:dodgeball) )
                (= 1 9 )
              )
              (* 0.5 (* -10 (count itemInClosedDrawerAtEnd:yellow_cube_block) )
              )
            )
          )
          (>= (* 0 (* (count blindsOpened) (* 5 10 )
              )
              (count-once-per-objects blindsOpened:basketball)
              (count itemInClosedDrawerAtEnd:pink)
              3
              25
            )
            (count-once-per-objects blindsOpened:basketball:basketball)
          )
        )
      )
      (or
        (>= (count blindsOpened:blue_cube_block) (count-once-per-objects blindsOpened:beachball) )
        (>= 180 (- 5 )
        )
        (<= (total-score) (< 3 6 )
        )
      )
    )
  )
)
(:scoring
  (* (* 3 )
    (count itemInClosedDrawerAtEnd:dodgeball)
  )
)
)



(define (game game-id-484) (:domain many-objects-room-v1)
(:setup
  (forall (?b - dodgeball ?h - building ?h - hexagonal_bin)
    (exists (?h - hexagonal_bin)
      (game-conserved
        (agent_holds ?h)
      )
    )
  )
)
(:constraints
  (and
    (preference woodenBlockMovedFromRugToDesk
      (exists (?h - curved_wooden_ramp)
        (then
          (hold-while (and (and (not (not (not (in_motion ?w) ) ) ) (and (adjacent desk agent) (not (or (and (not (on ?h ?h) ) (agent_holds ?h) ) (and (agent_holds ?h) (in_motion ?h) ) (and (in_motion ?b) ) ) ) (adjacent ?h ?h) ) ) (on ?b ?o) ) (touch ?h ?h) (object_orientation ?t upright) )
          (once (adjacent rug ?h) )
          (once (agent_holds ?h) )
        )
      )
    )
  )
)
(:terminal
  (> (count woodenBlockMovedFromRugToDesk:yellow) 4 )
)
(:scoring
  (* (+ (count woodenBlockMovedFromRugToDesk:dodgeball) )
    (< (- 8 )
      3
    )
  )
)
)



(define (game game-id-485) (:domain many-objects-room-v1)
(:setup
  (exists (?h - (either teddy_bear ball))
    (and
      (forall (?o - (either blue_cube_block book) ?b - chair)
        (game-optional
          (in ?b ?h)
        )
      )
      (not
        (game-optional
          (not
            (exists (?d - game_object)
              (in ?d desk)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference failedThrowAttempt
      (exists (?r - hexagonal_bin)
        (then
          (once (not (agent_holds ?d) ) )
          (hold (in_motion ?r) )
          (once (same_color ?r ?c) )
        )
      )
    )
    (preference blindsOpened
      (exists (?h - desktop ?h - sliding_door ?b9 - hexagonal_bin)
        (then
          (hold (and (in_motion ?b9) (= (distance_side ?h front ?b9) 1) (agent_holds ?h) ) )
          (once (exists (?b ?b2 ?p ?c ?h ?r ?h ?d ?o ?db - building ?h - doggie_bed) (in_motion ?b9) ) )
          (hold (object_orientation ?d ?b9) )
        )
      )
    )
    (forall (?h ?s - hexagonal_bin ?c2 - hexagonal_bin)
      (and
        (preference dodgeballFromRugToBin
          (exists (?t2 - building)
            (then
              (once (or (in_motion ?g) (and (and (and (not (not (same_type ?b5 ?t2) ) ) (not (rug_color_under ?b3 green) ) ) (agent_holds ?g) ) (< (distance room_center ?c2) 1) ) ) )
            )
          )
        )
        (preference cubeBlockInBuilding
          (exists (?s - (either cellphone beachball triangle_block) ?b - bridge_block ?r - (either key_chain))
            (then
              (once (and (not (broken ?l2) ) (on ?c2 ?b) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (* 3 2 )
      (total-time)
    )
  )
)
(:scoring
  (count dodgeballFromRugToBin:dodgeball)
)
)



(define (game game-id-486) (:domain few-objects-room-v1)
(:setup
  (forall (?p ?db - triangular_ramp)
    (forall (?g ?d - dodgeball)
      (game-conserved
        (in_motion ?d)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownHitsAgent
      (exists (?o2 - dodgeball)
        (at-end
          (exists (?d - hexagonal_bin)
            (and
              (and
                (not
                  (not
                    (touch ?d ?d)
                  )
                )
                (agent_holds ?d)
                (< 1 1)
                (and
                  (not
                    (and
                      (agent_holds ?o2)
                    )
                  )
                  (in_motion ?c)
                )
              )
              (and
                (and
                  (in_motion ?o2)
                  (and
                    (not
                      (not
                        (touch ?g ?o2)
                      )
                    )
                    (exists (?b10 - game_object)
                      (and
                        (in ?b10 ?d)
                        (and
                          (game_over )
                          (agent_holds ?p)
                        )
                        (exists (?w2 - ball)
                          (agent_holds ?d)
                        )
                      )
                    )
                  )
                )
                (on ?b ?d)
                (agent_holds ?d)
              )
            )
          )
        )
      )
    )
    (preference throwKnocksOverBear
      (exists (?b4 - curved_wooden_ramp)
        (then
          (hold (same_type ?b4 ?b4) )
          (once (in_motion ?h) )
          (hold (not (> (distance rug ?o) 1) ) )
        )
      )
    )
  )
)
(:terminal
  (< (* 5 (count-once-per-objects ballThrownHitsAgent:dodgeball) )
    4
  )
)
(:scoring
  (+ 3 5 )
)
)



(define (game game-id-487) (:domain few-objects-room-v1)
(:setup
  (exists (?db - ball)
    (game-optional
      (and
        (and
          (in ?c ?o)
          (< (distance ?w ?db) (distance ?db ?b))
        )
        (not
          (not
            (< 1 (distance bed ?db))
          )
        )
        (not
          (touch ?db ?db)
        )
        (not
          (in ?w2 ?b)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToBin
      (exists (?h ?o1 - color ?o - doggie_bed ?b - wall)
        (then
          (hold (in ?b ?b) )
          (hold (and (in ?b ?t) (in_motion ?b) (in_motion ?b) ) )
          (once (and (agent_holds ?b) (> 9 (distance ?d ?b)) ) )
        )
      )
    )
    (preference blockFromRugToDesk
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d) )
          (once (not (and (< (distance ?d ?b) (distance desk ?b)) (in_motion ?d) ) ) )
          (once (in_motion ?b) )
        )
      )
    )
    (preference castleBuilt
      (exists (?r1 - block)
        (at-end
          (not
            (on ?r1 ?r1)
          )
        )
      )
    )
  )
)
(:terminal
  (< (count-once-per-external-objects blockFromRugToDesk:cube_block:basketball) (+ 10 (+ 8 (* 6 2 (count blockFromRugToDesk:pink) )
      )
    )
  )
)
(:scoring
  (* 1 5 )
)
)



(define (game game-id-488) (:domain medium-objects-room-v1)
(:setup
  (forall (?l - cube_block)
    (game-conserved
      (and
        (in_motion ?d)
        (in_motion ?l)
        (not
          (same_color ?l ?l)
        )
        (and
          (< (distance ?h ?o2) (distance ?h ?l))
          (between agent ?l ?l)
        )
        (not
          (and
            (not
              (equal_x_position room_center ?l)
            )
            (on ?l ?l)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToBinFromOppositeWall
      (exists (?h - shelf ?b - hexagonal_bin)
        (then
          (once (and (adjacent ?b ?b) (< (distance ?b ?b) 1) (< 2 (distance ?h ?b)) ) )
          (once (and (agent_holds ?d) (adjacent_side bed ?b ?b) (in ?o1 ?d) ) )
          (hold (not (and (and (adjacent ?d ?b) (and (and (on ?b ?b) (touch ?b ?b) ) (and (and (and (not (rug_color_under ?b1 ?b) ) (or (not (not (not (and (opposite ?o ?b) (in ?b ?b) (and (in_motion ?d) (faces ?b ?b) ) ) ) ) ) (not (on ?b ?b) ) ) (and (adjacent ?b ?b) (exists (?b - (either doggie_bed)) (in_motion ?t) ) (in_motion ?b) ) ) (adjacent_side bed ?b ?h) ) (in_motion ?b) ) (agent_holds ?g) ) (in_motion ?b) ) (not (exists (?o3 - flat_block) (and (on ?h ?d) (in door ?b) ) ) ) ) ) )
        )
      )
    )
    (preference ballThrownThroughRampAndBlocksToBin
      (exists (?s - cube_block)
        (then
          (once (and (adjacent room_center ?g) (in_motion ?s) ) )
          (hold-while (in ?s ?s) (in_motion ?b) (not (< 1 1) ) (in_motion ?s) )
          (once (and (on ?s ?l2) (agent_holds ?b) (adjacent_side ?h front ?b) (agent_holds ?s) (and (same_color ?s pink) (not (on ?b5 ?c1) ) (in_motion ?s) (agent_holds ?o1) ) (in_motion ?d) (not (>= 1 5) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (= 2 5 )
    (>= (count-measure ballThrownThroughRampAndBlocksToBin:dodgeball) 3 )
    (>= (+ 7 6 )
      10
    )
  )
)
(:scoring
  (* (* 10 (* 40 3 )
    )
    5
  )
)
)



(define (game game-id-489) (:domain many-objects-room-v1)
(:setup
  (or
    (forall (?h - (either flat_block tall_cylindrical_block pillow) ?b5 - chair)
      (forall (?h - (either hexagonal_bin book))
        (and
          (exists (?c - dodgeball ?c - (either bridge_block cube_block) ?b ?c - triangular_ramp)
            (exists (?p3 ?c - hexagonal_bin ?l - dodgeball)
              (game-conserved
                (agent_holds ?l)
              )
            )
          )
        )
      )
    )
    (not
      (exists (?h - sliding_door)
        (exists (?t - curved_wooden_ramp)
          (exists (?h - hexagonal_bin)
            (and
              (exists (?b - curved_wooden_ramp)
                (game-conserved
                  (same_type ?d pillow)
                )
              )
              (forall (?b - hexagonal_bin)
                (game-optional
                  (or
                    (agent_holds ?t)
                    (in_motion ?d)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToWallToAgent
      (exists (?c - cylindrical_block)
        (at-end
          (in_motion ?c)
        )
      )
    )
    (preference ballThrowAttempt
      (exists (?o3 - block ?c4 ?o - game_object)
        (then
          (hold (toggled_on ?h) )
          (hold (agent_holds ?l1) )
          (once (not (adjacent ?h ?d) ) )
        )
      )
    )
    (preference ballKnocksTeddy
      (exists (?t - dodgeball)
        (then
          (once (not (and (not (not (and (not (and (not (in_motion ?t) ) (in_motion ?t) ) ) (agent_holds ?b) (agent_holds ?b) ) ) ) (not (not (and (not (on ?d ?o) ) (and (in_motion ?t) (and (in_motion ?t) (agent_holds ?b1) ) ) (not (touch ?t ?b) ) ) ) ) ) ) )
          (once (and (in_motion ?t) (same_type ?t ?l3) ) )
          (once (and (< 2 8) (agent_holds ?t) (not (< 6 9) ) (and (in_motion ?t) (on ?t pink_dodgeball) ) (and (and (and (in_motion ?t) (agent_holds ?t) (adjacent ?r ?t) (on ?t ?b) ) (not (and (and (in_motion ?t) (not (agent_holds ?b) ) ) (and (is_setup_object ?b) (in_motion ?t) ) ) ) ) (< 2 (distance ?r ?t)) ) (agent_holds ?o) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (> (count ballThrownToWallToAgent:orange) (- 7 )
      )
      (< 6 2 )
      (not
        (>= (* 4 (- (count-shortest ballKnocksTeddy:beachball) )
          )
          (count ballThrowAttempt:pink)
        )
      )
    )
    (>= 10 (total-time) )
    (> (count ballKnocksTeddy) (count ballKnocksTeddy:basketball) )
  )
)
(:scoring
  (count ballKnocksTeddy:basketball)
)
)



(define (game game-id-490) (:domain medium-objects-room-v1)
(:setup
  (forall (?l1 ?l ?d ?t1 ?h ?c6 - golfball ?c1 - (either top_drawer tall_cylindrical_block))
    (game-conserved
      (exists (?t - block ?h - ball ?b10 - golfball ?c - (either hexagonal_bin cd))
        (adjacent_side desk front agent)
      )
    )
  )
)
(:constraints
  (and
    (forall (?r2 - dodgeball)
      (and
        (preference ballThrownOntoTarget
          (exists (?s - beachball ?l1 - cube_block)
            (then
              (once (and (not (on ?l1 ?l1) ) (not (agent_holds ?r2) ) ) )
              (hold (agent_holds ?l1) )
              (hold-while (not (adjacent ?r2 ?h) ) (open ?l1) )
            )
          )
        )
        (preference golfballInBinFromPillow
          (then
            (once (not (in ?d ?r2) ) )
            (once (in_motion ?r2) )
            (once (in ?r2 ?d) )
            (hold (agent_holds ?b) )
            (hold (and (adjacent room_center ?c) (in_motion ?b) ) )
          )
        )
      )
    )
    (preference blockInTowerAtEnd
      (exists (?o - (either yellow_cube_block dodgeball))
        (then
          (hold-while (on ?d ?b) (or (on ?o ?o) (or (< 1 (distance desk ?r)) (same_type ?o pillow) ) ) )
          (once (< 1 3) )
          (hold (in_motion agent) )
          (hold (agent_holds ?o) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (or
        (>= (total-score) (total-score) )
        (>= (count ballThrownOntoTarget:alarm_clock) (* 6 (external-forall-maximize (count ballThrownOntoTarget:beachball) ) (count-once ballThrownOntoTarget:rug) 3 300 5 )
        )
        (> (count-once-per-objects blockInTowerAtEnd:dodgeball) 6 )
      )
      (>= (count blockInTowerAtEnd:beachball) (total-score) )
    )
    (>= (+ (count-longest golfballInBinFromPillow:beachball) (* 4 (- (+ (* (- 5 )
                2
              )
              (count-shortest ballThrownOntoTarget:dodgeball)
            )
          )
          (count-same-positions golfballInBinFromPillow:golfball)
          (* (count blockInTowerAtEnd:golfball) 10 )
        )
      )
      7
    )
    (>= 6 (* (* (count-once-per-objects blockInTowerAtEnd:beachball) (+ (* (count golfballInBinFromPillow:book) (count-unique-positions ballThrownOntoTarget:golfball:purple) )
            (* (count-once-per-objects ballThrownOntoTarget:beachball:yellow_pyramid_block) (= (* (count ballThrownOntoTarget:green) )
                1
              )
            )
          )
        )
        (- 5 )
      )
    )
  )
)
(:scoring
  (* (count ballThrownOntoTarget:pyramid_block) 6 10 )
)
)



(define (game game-id-491) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?b8 - ball ?l - cube_block)
      (exists (?o2 - hexagonal_bin ?h - doggie_bed)
        (exists (?p - (either alarm_clock triangle_block))
          (game-optional
            (in ?p ?d)
          )
        )
      )
    )
    (forall (?o4 - (either pyramid_block block))
      (exists (?b - ball ?h - ball)
        (exists (?h ?b - cube_block ?o - (either hexagonal_bin hexagonal_bin))
          (forall (?b - hexagonal_bin)
            (game-conserved
              (in_motion ?b)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwMovesBeachballWithoutKnockingTeddy
      (exists (?w1 - hexagonal_bin ?s - hexagonal_bin ?o1 - hexagonal_bin)
        (then
          (hold (exists (?b - ball) (and (and (on ?l1 ?d) (not (in_motion ?b) ) (in_motion ?o1) (agent_holds ?o1) ) (agent_holds agent) (in ?d ?b) ) ) )
          (hold (in ?o1 ?l) )
          (once (on ?t ?o1) )
        )
      )
    )
    (forall (?d ?b - ball)
      (and
        (preference ballThrownToBin
          (then
            (hold (on ?d ?d) )
            (once (exists (?d - dodgeball ?g - hexagonal_bin ?c2 ?l - cube_block) (in ?db ?h) ) )
            (once (not (and (not (not (on pink_dodgeball ?d) ) ) (in_motion ?c5) ) ) )
          )
        )
        (preference throwAttempt
          (then
            (once (and (< (distance ?b2 ?o) (distance rug ?b1)) (agent_holds ?b) ) )
            (once (agent_holds ?o) )
            (once (in_motion ?b) )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (total-time) )
)
(:scoring
  (count ballThrownToBin:alarm_clock)
)
)



(define (game game-id-492) (:domain many-objects-room-v1)
(:setup
  (exists (?c - doggie_bed)
    (game-optional
      (agent_holds ?c)
    )
  )
)
(:constraints
  (and
    (preference itemsTurnedOff
      (exists (?t - game_object)
        (then
          (once (toggled_on ?t) )
          (once (and (agent_holds ?b2) (agent_holds ?b) ) )
          (hold (agent_holds ?t) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* 10 (= (* (count itemsTurnedOff:cylindrical_block:basketball) (count itemsTurnedOff:pink_dodgeball) )
          6
        )
      )
      1
    )
    (>= (total-score) (- (count itemsTurnedOff:triangle_block) )
    )
  )
)
(:scoring
  (- (/ 18 0 ) )
)
)



(define (game game-id-493) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (not
      (in_motion ?d)
    )
  )
)
(:constraints
  (and
    (forall (?o3 - (either golfball tall_cylindrical_block) ?h - cylindrical_block)
      (and
        (preference ballKnocksBlockFromRug
          (exists (?b7 - dodgeball)
            (then
              (hold (in_motion ?b7) )
              (once (in_motion ?b7) )
              (once (and (on ?d ?h) (agent_holds ?b7) ) )
            )
          )
        )
        (preference ballToBinFromBed
          (exists (?h - dodgeball)
            (then
              (hold (not (not (agent_holds top_drawer) ) ) )
              (once (in ?h ?d) )
              (once (on ?h ?b) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> 3 (count ballKnocksBlockFromRug:beachball:block:blue_dodgeball) )
)
(:scoring
  (count ballToBinFromBed:red_pyramid_block)
)
)



(define (game game-id-494) (:domain few-objects-room-v1)
(:setup
  (forall (?l3 - hexagonal_bin ?t - hexagonal_bin)
    (and
      (game-conserved
        (and
          (agent_holds ?b)
          (in ?t ?t)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockInTowerKnocked
      (exists (?c - ball)
        (at-end
          (agent_holds ?c)
        )
      )
    )
    (preference ballOnBedAtEnd
      (exists (?tb - hexagonal_bin)
        (then
          (once (adjacent_side ?c front_left_corner ?t) )
          (once (on ?b ?tb) )
          (once (not (same_color ?g blue) ) )
        )
      )
    )
    (preference failedThrowToBin
      (exists (?b - hexagonal_bin)
        (then
          (once (not (in_motion ?o2) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 5 100 (= 6 10 )
    )
    (count-longest ballOnBedAtEnd:orange:yellow)
  )
)
(:scoring
  (count ballOnBedAtEnd:blue_cube_block)
)
)



(define (game game-id-495) (:domain medium-objects-room-v1)
(:setup
  (exists (?g - hexagonal_bin)
    (not
      (and
        (game-conserved
          (on ?g ?d)
        )
        (exists (?p2 - hexagonal_bin)
          (exists (?b2 - game_object ?b10 - hexagonal_bin)
            (exists (?b - hexagonal_bin ?ob - hexagonal_bin ?c ?h ?o5 ?c1 - triangular_ramp ?b - (either main_light_switch basketball))
              (exists (?s - hexagonal_bin)
                (not
                  (game-optional
                    (and
                      (on ?b ?h)
                      (and
                        (not
                          (in_motion ?b)
                        )
                        (forall (?b6 - cube_block)
                          (agent_holds ?b)
                        )
                      )
                      (not
                        (agent_crouches )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference itemInClosedDrawerAtEnd
      (exists (?o3 - (either key_chain doggie_bed))
        (then
          (once (not (<= 8 (distance agent ?o3)) ) )
          (hold (agent_holds ?o3) )
          (hold (and (agent_holds ?d) (equal_x_position room_center ?o3) ) )
        )
      )
    )
    (preference dodgeballThrownToBinFromDesk
      (exists (?h - dodgeball)
        (then
          (hold (not (same_color ?o yellow) ) )
          (once (exists (?r1 - hexagonal_bin) (broken ?b) ) )
          (once (in ?h ?b) )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (<= (count itemInClosedDrawerAtEnd:dodgeball) (count-measure itemInClosedDrawerAtEnd:pyramid_block:basketball) )
      (= (count-once dodgeballThrownToBinFromDesk:dodgeball) 2 )
    )
  )
)
(:scoring
  (* (count-once itemInClosedDrawerAtEnd:beachball) 0 )
)
)



(define (game game-id-496) (:domain medium-objects-room-v1)
(:setup
  (exists (?c2 - hexagonal_bin)
    (game-conserved
      (in_motion ?c2)
    )
  )
)
(:constraints
  (and
    (preference bounceBallToBin
      (exists (?c - hexagonal_bin ?d - (either dodgeball mug))
        (at-end
          (on agent ?b)
        )
      )
    )
  )
)
(:terminal
  (>= (count bounceBallToBin:basketball) (count bounceBallToBin:top_drawer:red) )
)
(:scoring
  (- (count bounceBallToBin:basketball:beachball:blue_dodgeball) )
)
)



(define (game game-id-497) (:domain few-objects-room-v1)
(:setup
  (forall (?h - cube_block)
    (and
      (and
        (forall (?p3 - cube_block)
          (game-conserved
            (or
              (not
                (and
                  (not
                    (and
                      (on ?g ?p3)
                      (not
                        (on ?p3 ?c)
                      )
                    )
                  )
                )
              )
              (on ?p3 ?b)
            )
          )
        )
        (exists (?d - hexagonal_bin)
          (forall (?l - hexagonal_bin ?b2 - dodgeball ?o - (either dodgeball laptop))
            (and
              (and
                (exists (?c4 - book ?h - cube_block)
                  (exists (?b - building)
                    (game-conserved
                      (> 2 8)
                    )
                  )
                )
              )
              (game-conserved
                (and
                  (and
                    (in_motion ?d)
                    (in ?h ?d)
                  )
                  (in_motion ?b)
                )
              )
              (game-conserved
                (and
                  (is_setup_object ?d)
                  (not
                    (in_motion ?c)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballThrownToBinFromDesk
      (exists (?t - hexagonal_bin ?t1 - dodgeball ?b - block)
        (then
          (once (in_motion ?b) )
          (once (and (on bottom_shelf ?b) (agent_holds ?d) ) )
        )
      )
    )
  )
)
(:terminal
  (> (count dodgeballThrownToBinFromDesk:dodgeball) 3 )
)
(:scoring
  (count-once-per-objects dodgeballThrownToBinFromDesk:pink)
)
)



(define (game game-id-498) (:domain few-objects-room-v1)
(:setup
  (exists (?b - drawer)
    (exists (?t - doggie_bed)
      (and
        (and
          (game-optional
            (agent_holds ?b)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectInBuilding
      (exists (?b ?h ?w1 - curved_wooden_ramp)
        (then
          (once (above ?g ?h) )
          (hold-while (adjacent_side agent ?b ?d) (in_motion ?b) )
          (once (not (same_color ?h ?b) ) )
        )
      )
    )
  )
)
(:terminal
  (< (count-once-per-objects objectInBuilding:blue_dodgeball) (count-once-per-external-objects objectInBuilding:pink) )
)
(:scoring
  (count-once-per-objects objectInBuilding:doggie_bed)
)
)



(define (game game-id-499) (:domain medium-objects-room-v1)
(:setup
  (forall (?b - cylindrical_block)
    (game-optional
      (or
        (in_motion ?b)
        (and
          (not
            (in_motion ?b)
          )
          (not
            (same_type ?b2 pillow)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownThroughRampAndBlocksToBin
      (exists (?w - dodgeball ?h - dodgeball)
        (at-end
          (not
            (game_over )
          )
        )
      )
    )
    (preference objectMoved
      (exists (?b - hexagonal_bin ?c - (either beachball) ?r - hexagonal_bin ?b - shelf)
        (then
          (hold (adjacent_side agent ?b ?l front) )
          (hold (in ?f ?b) )
          (once (adjacent ?b ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= (count objectMoved:orange:blue) (count objectMoved:beachball) )
)
(:scoring
  (count-once-per-objects objectMoved:doggie_bed)
)
)



(define (game game-id-500) (:domain many-objects-room-v1)
(:setup
  (exists (?l4 - (either cellphone cube_block) ?c6 - hexagonal_bin)
    (game-optional
      (not
        (not
          (and
            (and
              (in ?c6 ?c6)
              (forall (?b - (either pen side_table dodgeball) ?h - hexagonal_bin)
                (exists (?b10 - block)
                  (in_motion ?p1)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToBed
      (exists (?w - golfball)
        (then
          (once (agent_holds ?d) )
          (hold (and (in_motion ?b) (not (adjacent ?w ?b) ) ) )
          (once (in_motion ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (total-time) )
)
(:scoring
  (= 1 2 8 )
)
)



(define (game game-id-501) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (in_motion ?r)
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?d - hexagonal_bin ?w1 - hexagonal_bin ?b - dodgeball)
        (then
          (once (on ?b ?t) )
          (once (on ?b agent) )
        )
      )
    )
    (preference ballThrownThroughRampAndBlocksToBin
      (exists (?d - game_object ?h - pyramid_block)
        (then
          (once (in_motion ?t) )
          (once (forall (?o2 - hexagonal_bin ?s - dodgeball) (and (in ?t ?h) ) ) )
          (once-measure (adjacent_side ?w2 front ?h) (distance desk ?h) )
        )
      )
    )
    (preference throwToBinFromDistance
      (exists (?h - dodgeball ?ob - hexagonal_bin)
        (then
          (once (rug_color_under ?d ?c) )
          (hold (on ?ob ?ob) )
          (hold (and (not (in_motion ?b4) ) (opposite ?ob ?t) (not (on rug ?ob) ) ) )
          (once (on ?d ?ob) )
        )
      )
    )
    (preference ballThrownOntoTarget
      (exists (?h - curved_wooden_ramp ?b1 - game_object)
        (at-end
          (agent_holds ?b1)
        )
      )
    )
    (preference ballThrownToChair
      (exists (?b2 - teddy_bear)
        (then
          (once (in_motion ?b2) )
          (once (and (not (on ?b2 agent) ) (agent_holds ?b2) ) )
          (once (and (agent_holds ?b2) (in ?c ?l4) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (count-once-per-objects ballThrownThroughRampAndBlocksToBin:purple) )
)
(:scoring
  (+ (count-once-per-objects ballThrownOntoTarget:basketball:doggie_bed) 4 )
)
)



(define (game game-id-502) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds ?b)
  )
)
(:constraints
  (and
    (preference objectMovedRoomSide
      (exists (?l2 - dodgeball ?t - hexagonal_bin)
        (at-end
          (rug_color_under ?b ?t)
        )
      )
    )
  )
)
(:terminal
  (> (count objectMovedRoomSide:yellow_cube_block) (+ (count-once objectMovedRoomSide) 2 )
  )
)
(:scoring
  (count-once-per-objects objectMovedRoomSide:yellow:yellow)
)
)



(define (game game-id-503) (:domain few-objects-room-v1)
(:setup
  (and
    (game-conserved
      (in_motion ?p)
    )
    (forall (?o - ball)
      (forall (?d - doggie_bed)
        (and
          (or
            (forall (?b1 - hexagonal_bin)
              (game-conserved
                (agent_holds ?g)
              )
            )
            (exists (?o1 - hexagonal_bin)
              (exists (?b - desktop ?b - hexagonal_bin)
                (exists (?d - curved_wooden_ramp)
                  (forall (?c - (either doggie_bed blue_cube_block teddy_bear))
                    (exists (?t - hexagonal_bin)
                      (and
                        (forall (?o - (either bridge_block desktop) ?b10 - hexagonal_bin ?h - game_object)
                          (exists (?b - hexagonal_bin ?s ?d1 - hexagonal_bin)
                            (exists (?b - hexagonal_bin ?h - hexagonal_bin)
                              (game-optional
                                (same_type ?s block)
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
            (game-conserved
              (and
                (in_motion ?o)
                (and
                  (in_motion rug)
                  (and
                    (< 2 1)
                    (agent_holds ?o)
                    (not
                      (= (distance side_table ?o) 9)
                    )
                    (forall (?o2 - ball)
                      (= (x_position ?d) (x_position ?o))
                    )
                  )
                )
                (not
                  (and
                    (or
                      (agent_holds ?o)
                      (on ?c ?o2)
                      (on ?h ?d)
                    )
                    (touch ?c3 ?o)
                  )
                )
              )
            )
          )
        )
      )
    )
    (exists (?h - wall)
      (exists (?c - hexagonal_bin)
        (game-conserved
          (> (distance rug ?c) (distance ?h ?c))
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - curved_wooden_ramp)
      (and
        (preference throwFromBehindChairsInBin
          (exists (?g - hexagonal_bin)
            (then
              (once (in ?g ?h) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (total-score) (count throwFromBehindChairsInBin:beachball) )
    (= (count-once-per-external-objects throwFromBehindChairsInBin:yellow) (* 3 2 )
    )
  )
)
(:scoring
  (count throwFromBehindChairsInBin:blue_dodgeball)
)
)



(define (game game-id-504) (:domain many-objects-room-v1)
(:setup
  (forall (?h - hexagonal_bin)
    (game-optional
      (agent_holds ?h)
    )
  )
)
(:constraints
  (and
    (preference objectThrownFromRug
      (exists (?d - hexagonal_bin)
        (then
          (once (not (agent_holds ?r) ) )
          (hold (equal_x_position ?d agent) )
          (hold (touch ?d ?o2) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count objectThrownFromRug:basketball) (* 10 (count-once-per-objects objectThrownFromRug:basketball:yellow) )
    )
    (or
      (and
        (not
          (and
            (>= (+ (* (- (count-once objectThrownFromRug:red:dodgeball) )
                  (* 2 180 )
                )
              )
              (count objectThrownFromRug:dodgeball)
            )
            (= 5 (total-time) )
            (= 10 (external-forall-maximize (count-once-per-objects objectThrownFromRug:hexagonal_bin) ) )
          )
        )
      )
      (>= 2 10 )
    )
  )
)
(:scoring
  (* 3 (* 9 3 )
  )
)
)



(define (game game-id-505) (:domain few-objects-room-v1)
(:setup
  (exists (?s - hexagonal_bin ?t - dodgeball)
    (and
      (and
        (forall (?r - curved_wooden_ramp)
          (and
            (exists (?h - hexagonal_bin)
              (exists (?c2 - (either yellow_cube_block))
                (game-conserved
                  (not
                    (agent_holds ?r)
                  )
                )
              )
            )
          )
        )
      )
      (game-conserved
        (and
          (and
            (agent_holds ?c)
            (in_motion ?d)
            (exists (?h - bridge_block ?t - curved_wooden_ramp)
              (not
                (not
                  (in ?t agent)
                )
              )
            )
            (in_motion ?w1)
            (and
              (is_setup_object ?b)
              (object_orientation ?g upright)
            )
          )
          (not
            (and
              (on ?p ?d)
              (on ?d ?c3)
            )
          )
        )
      )
      (game-conserved
        (on ?d ?t)
      )
    )
  )
)
(:constraints
  (and
    (preference objectWithMatchingColor
      (exists (?h - ball ?l2 - hexagonal_bin)
        (at-end
          (and
            (not
              (agent_holds ?l2)
            )
            (not
              (in_motion ?b)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-external-objects objectWithMatchingColor:doggie_bed) (count-once-per-objects objectWithMatchingColor:basketball) )
)
(:scoring
  (+ (count-same-positions objectWithMatchingColor:dodgeball) (count-unique-positions objectWithMatchingColor:dodgeball) (* (count objectWithMatchingColor:cylindrical_block) (count-once objectWithMatchingColor:hexagonal_bin:beachball) )
    5
    (count objectWithMatchingColor:pink:alarm_clock)
    (count-once-per-objects objectWithMatchingColor:pink)
  )
)
)



(define (game game-id-506) (:domain many-objects-room-v1)
(:setup
  (forall (?p2 - (either book dodgeball) ?d - dodgeball)
    (game-conserved
      (on ?b5 ?d)
    )
  )
)
(:constraints
  (and
    (preference throwAttemptFromBehindBlock
      (exists (?t1 ?b3 - shelf)
        (then
          (hold (agent_holds ?t1) )
          (once (and (in ?b ?t1) (faces ?b ?w1) (not (adjacent_side ?b3 front ?o) ) (agent_holds ?b) ) )
          (hold (not (in_motion ?o) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (- (count-once-per-external-objects throwAttemptFromBehindBlock:yellow) (count throwAttemptFromBehindBlock:beachball) ) (count throwAttemptFromBehindBlock:blue_cube_block) )
)
(:scoring
  (+ 6 3 )
)
)



(define (game game-id-507) (:domain few-objects-room-v1)
(:setup
  (forall (?r ?c - (either floor) ?l - ball)
    (game-conserved
      (exists (?d - curved_wooden_ramp)
        (not
          (and
            (in_motion ?d)
            (not
              (agent_holds ?l)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballHitsBinBottom
      (exists (?w1 ?d - desk_shelf ?d - ball)
        (at-end
          (faces ?b ?o)
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects dodgeballHitsBinBottom:pink:hexagonal_bin) (* 2 10 (* (count dodgeballHitsBinBottom:block) 18 )
    )
  )
)
(:scoring
  (* 1 20 )
)
)



(define (game game-id-508) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?h - (either bridge_block hexagonal_bin))
      (game-optional
        (<= (distance room_center ?o) 1)
      )
    )
    (exists (?p2 - hexagonal_bin)
      (game-conserved
        (< (distance desk ?p2) 0)
      )
    )
  )
)
(:constraints
  (and
    (forall (?l4 - (either pencil triangle_block))
      (and
        (preference pyramidBlockAtopTowerAtEnd
          (exists (?w1 - hexagonal_bin ?p2 - cylindrical_block)
            (at-end
              (not
                (or
                  (not
                    (equal_x_position room_center ?l4)
                  )
                  (not
                    (<= (building_size ?p2) 1)
                  )
                  (agent_holds ?g)
                )
              )
            )
          )
        )
      )
    )
    (forall (?o5 - game_object)
      (and
        (preference throwTeddyOntoPillow
          (exists (?c3 - ball)
            (then
              (once (and (in_motion ?c3) (exists (?c1 - hexagonal_bin) (in_motion ?b) ) ) )
              (once (in_motion ?h) )
              (once (< 1 (distance ?o5 ?c3)) )
            )
          )
        )
      )
    )
    (forall (?b - hexagonal_bin)
      (and
        (preference objectThrownFromRug
          (exists (?b - doggie_bed)
            (then
              (once (not (not (and (rug_color_under ?b pink) (in_motion ?o) ) ) ) )
              (once (touch ?h ?b) )
              (once (and (agent_holds desk) (on ?d ?b) ) )
            )
          )
        )
        (preference ballInOrOnBin
          (exists (?g - game_object)
            (then
              (once (not (and (exists (?o1 ?w - game_object) (is_setup_object ?o1) ) (toggled_on desk) ) ) )
              (once (in_motion ?b) )
              (once (agent_holds agent) )
            )
          )
        )
        (preference blocksInPlace
          (exists (?l4 - blue_pyramid_block)
            (then
              (hold (agent_holds ?b) )
              (hold (in_motion ?g) )
              (once (in_motion ?d) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (= (count-once-per-objects objectThrownFromRug:beachball:beachball) (- (* 1 (count-once-per-external-objects objectThrownFromRug:yellow) )
    )
  )
)
(:scoring
  (* (count-once-per-external-objects pyramidBlockAtopTowerAtEnd:bed) 50 )
)
)



(define (game game-id-509) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (not
      (not
        (agent_holds ?d)
      )
    )
  )
)
(:constraints
  (and
    (preference gameObjectToBin
      (exists (?s - wall ?l3 - block)
        (then
          (once (agent_holds ?b) )
          (once (< 1 1) )
          (hold-while (in_motion ?c) (rug_color_under ?d ?c) )
        )
      )
    )
    (forall (?d - ball ?b - (either cellphone laptop))
      (and
        (preference dodgeballFromDeskToTarget
          (exists (?s - dodgeball)
            (then
              (hold (in_motion ?o) )
              (once (rug_color_under ?b ?c) )
              (once (same_color ?c pink) )
            )
          )
        )
        (preference throwAttemptKnocksBlock
          (exists (?p - (either yellow chair bridge_block) ?b8 - ball)
            (then
              (once (not (is_setup_object ?b8) ) )
              (once (< 9 (distance ?b8 ?b8)) )
              (once (agent_holds ?b8) )
            )
          )
        )
        (preference bookOnDeskShelf
          (exists (?h - (either doggie_bed floor))
            (then
              (hold (and (agent_holds ?h) (not (agent_holds ?h) ) (in_motion ?h) ) )
              (once (open ?d) )
              (hold-while (agent_holds ?c) (in_motion ?b) (agent_holds ?c) )
            )
          )
        )
      )
    )
    (preference basketMadeFromRug
      (exists (?b - teddy_bear ?h - ball)
        (then
          (once (and (in_motion ?h) (and (adjacent ?h ?b) (agent_holds ?d) ) ) )
          (hold-while (same_color ?h pink) (in_motion ?h) )
          (once (equal_x_position room_center ?d) )
        )
      )
    )
    (preference blockPickedUp
      (exists (?b - hexagonal_bin)
        (then
          (hold (in_motion ?d) )
          (hold (and (agent_holds ?b) (and (and (and (in ?b ?h) (not (and (in_motion ?b) (agent_holds bed) (= 1 1) ) ) ) (not (on ?b ?b) ) ) (and (in ?b ?c3) (game_over ) ) ) ) )
          (once (rug_color_under ?b tan) )
        )
      )
    )
    (preference throwObjectToBin
      (exists (?w - dodgeball ?r - (either floor cd))
        (then
          (once (and (not (and (equal_z_position bed ?l2) (in_motion ?r) ) ) (and (in_motion ?d) (in ?d ?r) ) (on ?p2 ?r) ) )
          (once (in_motion ?r) )
          (once (in_motion ?d) )
        )
      )
    )
  )
)
(:terminal
  (= (count-once-per-objects gameObjectToBin:golfball) 2 )
)
(:scoring
  (count-once-per-objects dodgeballFromDeskToTarget:blue_dodgeball:blue_dodgeball)
)
)



(define (game game-id-510) (:domain medium-objects-room-v1)
(:setup
  (not
    (and
      (game-optional
        (not
          (agent_holds agent)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference thrownBallHitsBlock
      (exists (?d - hexagonal_bin ?d - hexagonal_bin)
        (then
          (once (agent_holds ?d) )
        )
      )
    )
    (preference objectMoved
      (exists (?b2 - game_object)
        (then
          (once (not (not (not (in_motion ?h) ) ) ) )
          (hold-while (agent_holds ?b2) (in_motion ?l) )
          (once (in_motion ?r) )
        )
      )
    )
  )
)
(:terminal
  (> (count-once-per-objects thrownBallHitsBlock:dodgeball) (count thrownBallHitsBlock:golfball) )
)
(:scoring
  (count thrownBallHitsBlock:pink:golfball)
)
)



(define (game game-id-511) (:domain few-objects-room-v1)
(:setup
  (exists (?b - blinds)
    (game-conserved
      (agent_holds ?b)
    )
  )
)
(:constraints
  (and
    (preference beachballOnRug
      (exists (?t - building ?bl - cube_block)
        (then
          (hold (in_motion ?bl) )
          (once (not (in_motion ?bl) ) )
          (once (in_motion ?bl) )
        )
      )
    )
    (preference throwAttempt
      (exists (?ob - (either floor cd))
        (at-end
          (<= (distance ?ob ?d) 1)
        )
      )
    )
  )
)
(:terminal
  (>= -10 (count beachballOnRug:green) )
)
(:scoring
  (count beachballOnRug:basketball)
)
)



(define (game game-id-512) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds ?d)
  )
)
(:constraints
  (and
    (preference dodgeballFromBlockToBin
      (exists (?h - doggie_bed ?b1 - pyramid_block)
        (at-end
          (agent_holds ?h)
        )
      )
    )
  )
)
(:terminal
  (> (total-score) (count-measure dodgeballFromBlockToBin:dodgeball) )
)
(:scoring
  (count dodgeballFromBlockToBin:dodgeball)
)
)



(define (game game-id-513) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (in_motion ?b)
  )
)
(:constraints
  (and
    (preference dodgeballHitsPillowWithoutTouchingBlock
      (exists (?h - hexagonal_bin ?b6 - bridge_block)
        (then
          (once (adjacent_side room_center front ?b) )
          (once (not (touch ?d ?b6) ) )
          (once (same_type ?l pillow) )
        )
      )
    )
    (preference pinkObjectMovedToRoomCenter
      (exists (?l1 - dodgeball)
        (at-end
          (and
            (and
              (forall (?h - (either book yellow_cube_block) ?c2 - dodgeball)
                (in_motion ?d)
              )
              (in_motion ?l1)
              (not
                (in_motion ?l1)
              )
            )
            (not
              (= 2 8)
            )
          )
        )
      )
    )
    (preference throwTeddyOntoPillow
      (exists (?b - hexagonal_bin ?t - building)
        (then
          (once (object_orientation ?t upright) )
          (once (agent_holds ?t) )
          (once (and (open ?t) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 5 1 )
)
(:scoring
  (* (external-forall-maximize (* 10 2 )
    )
    (+ (count-once-per-external-objects dodgeballHitsPillowWithoutTouchingBlock:basketball) (* (* (+ 3 1 (+ (count throwTeddyOntoPillow:yellow) 3 0.5 )
          )
          (count-once-per-external-objects throwTeddyOntoPillow:blue_cube_block)
        )
        10
      )
      (count dodgeballHitsPillowWithoutTouchingBlock:red)
    )
    (count pinkObjectMovedToRoomCenter:blue_dodgeball)
    5
  )
)
)



(define (game game-id-514) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (in_motion ?l)
  )
)
(:constraints
  (and
    (forall (?b - hexagonal_bin ?b8 - pyramid_block)
      (and
        (preference throwToDrawerOrBin
          (exists (?c2 - hexagonal_bin)
            (then
              (once (in_motion ?b) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) 3 )
)
(:scoring
  (count-once-per-objects throwToDrawerOrBin:pink:book)
)
)



(define (game game-id-515) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?d ?p ?o ?c3 - building ?h - (either flat_block golfball pyramid_block dodgeball alarm_clock) ?c - cube_block)
      (and
        (and
          (and
            (and
              (exists (?d - dodgeball)
                (forall (?c2 ?o3 - golfball ?d - book)
                  (and
                    (and
                      (game-conserved
                        (on bed ?d)
                      )
                    )
                  )
                )
              )
            )
            (or
              (exists (?o - ball ?o2 - block ?c2 - cylindrical_block)
                (forall (?h - hexagonal_bin ?r1 - block)
                  (game-optional
                    (not
                      (between ?c2 ?d ?d)
                    )
                  )
                )
              )
              (forall (?w2 - (either yellow_cube_block cylindrical_block))
                (exists (?g - hexagonal_bin)
                  (game-optional
                    (on ?g ?l1)
                  )
                )
              )
            )
          )
          (game-optional
            (not
              (on ?b ?c)
            )
          )
        )
        (exists (?w2 - shelf)
          (game-optional
            (adjacent room_center ?c)
          )
        )
        (game-optional
          (not
            (exists (?g - hexagonal_bin ?b3 - dodgeball)
              (not
                (and
                  (in_motion ?b)
                  (adjacent agent bed)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?ob - yellow_pyramid_block ?b9 - (either bridge_block bridge_block cylindrical_block) ?o5 - cube_block)
      (and
        (preference greenObjectMovedToRoomCenter
          (exists (?c5 - ball ?o - ball)
            (at-end
              (not
                (agent_holds ?o5)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= 6 (- (count-increasing-measure greenObjectMovedToRoomCenter:dodgeball) )
  )
)
(:scoring
  (count-overlapping greenObjectMovedToRoomCenter:book)
)
)



(define (game game-id-516) (:domain few-objects-room-v1)
(:setup
  (and
    (game-optional
      (and
        (agent_holds ?b)
        (> 1 8)
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?ob - game_object)
        (then
          (once (and (agent_holds ?d) (touch ?ob ?ob) (object_orientation ?ob upright) ) )
          (once (not (in_motion bed) ) )
          (hold (on ?p1 ?d) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ 50 (count throwAttempt:red:cylindrical_block) )
    (count throwAttempt:top_drawer:beachball)
  )
)
(:scoring
  (count throwAttempt:hexagonal_bin)
)
)



(define (game game-id-517) (:domain many-objects-room-v1)
(:setup
  (exists (?r2 ?o5 - (either cube_block alarm_clock) ?w1 - building)
    (game-optional
      (in ?w1 ?w1)
    )
  )
)
(:constraints
  (and
    (preference blockIncorrectlyPicked
      (exists (?o4 - dodgeball ?b - sliding_door ?h - dodgeball)
        (at-end
          (in_motion ?b)
        )
      )
    )
  )
)
(:terminal
  (<= (total-score) (* (count-once-per-objects blockIncorrectlyPicked:blue_dodgeball) (count blockIncorrectlyPicked:blue_cube_block) )
  )
)
(:scoring
  (count blockIncorrectlyPicked)
)
)



(define (game game-id-518) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (in_motion ?o1)
  )
)
(:constraints
  (and
    (preference laptopAndBookInPlace
      (exists (?t1 - game_object)
        (then
          (once (in_motion ?r) )
          (hold (forall (?h - (either yellow_cube_block yellow_cube_block) ?ob - block ?b - ball ?c - hexagonal_bin) (adjacent room_center agent) ) )
          (once (agent_holds ?t1) )
        )
      )
    )
    (preference ballThrownToChair
      (exists (?c - hexagonal_bin)
        (at-end
          (agent_holds ?o5)
        )
      )
    )
  )
)
(:terminal
  (<= (total-time) (count laptopAndBookInPlace:dodgeball) )
)
(:scoring
  (external-forall-maximize
    (count-increasing-measure ballThrownToChair:pyramid_block)
  )
)
)



(define (game game-id-519) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?d - tall_cylindrical_block)
      (or
        (forall (?o3 - cube_block ?o - hexagonal_bin ?l2 - beachball ?b5 - hexagonal_bin)
          (and
            (exists (?w1 - bridge_block)
              (or
                (and
                  (game-optional
                    (game_over )
                  )
                  (exists (?p - color ?r1 - cylindrical_block)
                    (and
                      (exists (?t - game_object)
                        (and
                          (exists (?o - shelf)
                            (forall (?c2 - hexagonal_bin)
                              (and
                                (game-optional
                                  (on ?c ?r1)
                                )
                                (and
                                  (game-conserved
                                    (in ?b ?c2)
                                  )
                                )
                              )
                            )
                          )
                          (game-conserved
                            (agent_crouches )
                          )
                        )
                      )
                    )
                  )
                )
                (or
                  (and
                    (game-conserved
                      (on ?b5 ?c)
                    )
                    (or
                      (game-optional
                        (in_motion rug)
                      )
                      (game-conserved
                        (exists (?p1 - blue_pyramid_block)
                          (and
                            (agent_holds ?c2)
                          )
                        )
                      )
                      (exists (?h - chair)
                        (exists (?t - (either hexagonal_bin key_chain dodgeball))
                          (forall (?b - building ?p2 - pillow)
                            (and
                              (and
                                (forall (?d - hexagonal_bin ?t2 ?b - block)
                                  (or
                                    (exists (?r - game_object)
                                      (and
                                        (and
                                          (or
                                            (and
                                              (game-conserved
                                                (not
                                                  (on ?b ?g)
                                                )
                                              )
                                              (exists (?b - hexagonal_bin ?d - wall ?r2 - dodgeball ?o - beachball)
                                                (exists (?p1 - hexagonal_bin ?h - ball)
                                                  (and
                                                    (and
                                                      (game-conserved
                                                        (and
                                                          (same_color ?b blue)
                                                          (not
                                                            (agent_holds ?p)
                                                          )
                                                        )
                                                      )
                                                      (and
                                                        (and
                                                          (game-optional
                                                            (and
                                                              (adjacent agent ?b)
                                                              (in_motion ?d)
                                                            )
                                                          )
                                                          (and
                                                            (forall (?b - hexagonal_bin)
                                                              (forall (?o1 - golfball ?d - cube_block)
                                                                (exists (?b - hexagonal_bin ?d - hexagonal_bin)
                                                                  (and
                                                                    (exists (?b - flat_block)
                                                                      (game-conserved
                                                                        (< 2 (distance ?h ?b))
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                            (and
                                                              (and
                                                                (forall (?b ?r2 - hexagonal_bin)
                                                                  (game-conserved
                                                                    (in_motion ?d)
                                                                  )
                                                                )
                                                                (game-conserved
                                                                  (< 10 2)
                                                                )
                                                              )
                                                            )
                                                            (exists (?d2 - (either bed golfball) ?d - ball)
                                                              (exists (?c5 - dodgeball)
                                                                (exists (?d - yellow_cube_block ?bl - hexagonal_bin)
                                                                  (game-conserved
                                                                    (agent_holds ?r)
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                          (game-optional
                                                            (touch ?p ?d)
                                                          )
                                                        )
                                                      )
                                                      (game-conserved
                                                        (equal_x_position ?h ?b5)
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                            (game-optional
                                              (< (distance ?t ?p2) (distance_side ?d ?t2 ?b5))
                                            )
                                            (exists (?h ?w1 ?b4 ?c3 - color)
                                              (game-conserved
                                                (on ?d ?d)
                                              )
                                            )
                                          )
                                        )
                                        (and
                                          (and
                                            (game-optional
                                              (< (distance ?t ?r) (distance bed agent))
                                            )
                                            (game-conserved
                                              (agent_holds agent)
                                            )
                                          )
                                          (exists (?o3 - dodgeball)
                                            (and
                                              (and
                                                (exists (?h - hexagonal_bin)
                                                  (and
                                                    (forall (?h - pillow)
                                                      (exists (?d - hexagonal_bin)
                                                        (game-optional
                                                          (and
                                                            (in ?o ?t2)
                                                            (opposite ?c ?b5)
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                                (game-conserved
                                                  (agent_holds ?h)
                                                )
                                              )
                                              (and
                                                (game-conserved
                                                  (opposite ?o3 ?b5)
                                                )
                                                (and
                                                  (and
                                                    (forall (?l2 - ball)
                                                      (and
                                                        (game-conserved
                                                          (agent_holds ?d)
                                                        )
                                                        (forall (?h - curved_wooden_ramp)
                                                          (exists (?t - curved_wooden_ramp)
                                                            (game-conserved
                                                              (and
                                                                (in_motion ?d)
                                                                (on floor ?b)
                                                              )
                                                            )
                                                          )
                                                        )
                                                        (and
                                                          (exists (?t2 - hexagonal_bin ?b4 - ball ?l2 - hexagonal_bin)
                                                            (game-conserved
                                                              (< (distance_side ?b front_left_corner ?b) (x_position ?w1))
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                    (forall (?s - hexagonal_bin)
                                                      (game-optional
                                                        (in_motion ?p2)
                                                      )
                                                    )
                                                  )
                                                  (game-conserved
                                                    (not
                                                      (on ?p2 ?b)
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                          (and
                                            (forall (?c6 - game_object)
                                              (exists (?b - doggie_bed ?b ?d - dodgeball)
                                                (game-optional
                                                  (and
                                                    (not
                                                      (> (distance ?h ?b) (distance ?d ?h))
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                        (and
                                          (game-conserved
                                            (not
                                              (in_motion ?b)
                                            )
                                          )
                                        )
                                      )
                                    )
                                    (and
                                      (game-conserved
                                        (and
                                          (in ?o bed)
                                          (not
                                            (< 1 1)
                                          )
                                        )
                                      )
                                    )
                                    (exists (?d - triangular_ramp ?d - drawer)
                                      (exists (?p - ball ?d2 - (either floor alarm_clock))
                                        (game-conserved
                                          (and
                                            (in_motion ?p2)
                                            (agent_holds ?b)
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                                (exists (?b - (either cube_block lamp yellow_cube_block))
                                  (and
                                    (game-conserved
                                      (in_motion ?t)
                                    )
                                    (and
                                      (exists (?r - shelf ?c - (either top_drawer doggie_bed) ?w2 - dodgeball)
                                        (forall (?p - block ?x ?c5 ?h - dodgeball ?c4 - (either cd desktop))
                                          (and
                                            (game-conserved
                                              (not
                                                (and
                                                  (agent_holds ?c4)
                                                  (in_motion ?o)
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                      (forall (?h - hexagonal_bin)
                                        (forall (?l1 - (either book side_table basketball))
                                          (and
                                            (game-optional
                                              (and
                                                (in ?t ?h)
                                                (forall (?o - hexagonal_bin)
                                                  (agent_holds ?b)
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                                (exists (?d - hexagonal_bin)
                                  (exists (?c - ball ?d - dodgeball)
                                    (exists (?o - hexagonal_bin ?c2 - shelf)
                                      (game-optional
                                        (on ?b5 ?b)
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                    (forall (?b2 - hexagonal_bin)
                      (and
                        (and
                          (exists (?h - hexagonal_bin ?c6 - chair)
                            (and
                              (and
                                (and
                                  (and
                                    (game-conserved
                                      (in ?o ?h)
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                  (and
                    (not
                      (exists (?c1 - dodgeball ?p3 - hexagonal_bin)
                        (and
                          (game-optional
                            (in_motion ?w1)
                          )
                        )
                      )
                    )
                    (forall (?o - doggie_bed ?l4 - dodgeball)
                      (game-conserved
                        (not
                          (in_motion ?d)
                        )
                      )
                    )
                  )
                  (game-conserved
                    (and
                      (same_color rug ?b5)
                      (and
                        (and
                          (agent_holds ?w1)
                          (in_motion ?w1)
                        )
                        (not
                          (and
                            (not
                              (not
                                (agent_holds ?d)
                              )
                            )
                            (and
                              (in_motion ?b5)
                              (agent_holds ?b)
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
        (and
          (game-conserved
            (in ?h ?d)
          )
        )
      )
    )
    (exists (?c - building)
      (game-optional
        (forall (?l ?d2 - (either block cube_block))
          (and
            (in ?d2 ?d2)
            (not
              (exists (?b - dodgeball ?b - hexagonal_bin)
                (in_motion ?d2)
              )
            )
          )
        )
      )
    )
    (and
      (game-conserved
        (open side_table)
      )
    )
  )
)
(:constraints
  (and
    (preference teddyBearLandsInBin
      (exists (?h - (either cellphone dodgeball mug dodgeball bridge_block pyramid_block dodgeball) ?p - pillow)
        (then
          (once (and (in ?d ?d) (adjacent ?h ?p) ) )
          (hold (in_motion ?p) )
          (hold (and (in_motion ?p) (adjacent ?p ?o) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count teddyBearLandsInBin:dodgeball:pink) (* (count teddyBearLandsInBin:orange) (count teddyBearLandsInBin) )
    )
    2
  )
)
(:scoring
  (count-once-per-objects teddyBearLandsInBin:beachball:pink)
)
)



(define (game game-id-520) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-conserved
      (on ?b ?c4)
    )
    (game-conserved
      (in_motion ?b)
    )
  )
)
(:constraints
  (and
    (preference throwKnocksBlock
      (exists (?h - (either dodgeball cube_block) ?o ?h - hexagonal_bin ?d - hexagonal_bin ?b - ball)
        (then
          (once (agent_holds ?c) )
          (once (agent_holds ?b3) )
          (once (opposite ?b ?d) )
        )
      )
    )
    (preference blindsOpened
      (exists (?l1 - bridge_block)
        (then
          (once (not (in_motion top_drawer) ) )
          (once (and (touch top_shelf ?l1) (in_motion ?h) ) )
          (once (touch ?c2 ?l1) )
        )
      )
    )
  )
)
(:terminal
  (or
    (<= (total-score) 3 )
    (>= (count throwKnocksBlock:dodgeball:dodgeball) (total-score) )
  )
)
(:scoring
  (count blindsOpened:green)
)
)



(define (game game-id-521) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (game-conserved
        (agent_holds ?d)
      )
      (forall (?b5 - teddy_bear ?s - color)
        (exists (?b2 - (either pencil) ?b - hexagonal_bin ?b9 - (either blue_cube_block golfball))
          (forall (?l - pyramid_block)
            (game-optional
              (not
                (agent_holds ?s)
              )
            )
          )
        )
      )
    )
    (game-conserved
      (forall (?b - hexagonal_bin ?l - dodgeball)
        (same_object ?l ?l)
      )
    )
  )
)
(:constraints
  (and
    (preference blockCorrectlyPicked
      (exists (?b3 - game_object)
        (then
          (once (and (not (same_color ?b3 blue) ) (not (touch ?b3 ?b3) ) ) )
          (hold (on ?b3 ?b) )
          (once (and (not (faces ?d ?b3) ) (and (not (or (not (equal_z_position ?b3 ?b) ) (not (in ?b3 ?b3) ) ) ) (and (equal_z_position ?w1 ?b3) (and (in_motion ?b) (in_motion ?b3) (on ?b3 ?b3) (and (not (< (distance_side ?c back ?b) 0) ) (touch ?b1 ?b3) ) ) (or (on ?b3 ?b3) (not (agent_holds ?b3) ) ) ) ) ) )
        )
      )
    )
    (preference blockPlacedInBuilding
      (exists (?o - dodgeball ?l2 - (either dodgeball))
        (at-end
          (agent_holds ?l2)
        )
      )
    )
  )
)
(:terminal
  (>= (* 10 30 )
    (count-once blockPlacedInBuilding:beachball)
  )
)
(:scoring
  (* 3 10 )
)
)



(define (game game-id-522) (:domain few-objects-room-v1)
(:setup
  (exists (?b - hexagonal_bin ?d - pillow ?f - hexagonal_bin)
    (forall (?o - doggie_bed)
      (exists (?s - (either ball))
        (not
          (game-optional
            (and
              (not
                (agent_holds ?c)
              )
              (and
                (in_motion ?o)
                (and
                  (on ?d ?s)
                  (not
                    (agent_holds ?h)
                  )
                )
                (not
                  (in_motion ?o)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwFromDoorToBin
      (exists (?l - doggie_bed)
        (then
          (hold-while (> 3 (distance agent ?l)) (not (on ?p ?l) ) (and (and (in ?l ?l) (in_motion bed) ) (and (and (< 5 2) (in ?l ?l) ) (and (on agent ?l) (faces ?p ?l) ) ) ) )
          (hold (in ?l ?l) )
          (once (in_motion ?b) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 1 (+ 5 (count throwFromDoorToBin:beachball) )
    )
    (or
      (>= 3 (count throwFromDoorToBin:yellow_cube_block) )
      (> (> (count-increasing-measure throwFromDoorToBin:green) (+ (count throwFromDoorToBin:basketball) 5 )
        )
        (count throwFromDoorToBin:basketball)
      )
      (> (* (count throwFromDoorToBin:purple) (* 3 (count-once throwFromDoorToBin:basketball) (count-once-per-external-objects throwFromDoorToBin:blue_cube_block:green) )
        )
        (* 20 )
      )
    )
    (or
      (< (* (* 6 50 )
          (count-once-per-objects throwFromDoorToBin:yellow)
        )
        6
      )
    )
  )
)
(:scoring
  (count-overlapping throwFromDoorToBin:book)
)
)



(define (game game-id-523) (:domain few-objects-room-v1)
(:setup
  (exists (?o1 - hexagonal_bin ?b - (either wall dodgeball))
    (exists (?o - ball)
      (and
        (exists (?b10 - hexagonal_bin)
          (and
            (game-optional
              (touch ?b ?o)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference cubeBlockThrowAttempt
      (exists (?b - hexagonal_bin ?l2 ?c4 ?db ?b10 ?b1 ?tb - shelf ?l ?b2 ?t ?f ?b ?b - ball)
        (then
          (hold (is_setup_object ?b2) )
          (once (and (not (and (on ?b ?t) (and (on ?o2 ?b) (adjacent_side ?h front_left_corner ?h) ) ) ) (object_orientation ?c1 upright) ) )
          (once (and (agent_holds ?o) (or (not (rug_color_under ?c ?t) ) (agent_holds ?b2) ) (in_motion ?h) (on ?t bed) (not (agent_holds ?l) ) (<= 8 (distance agent ?t)) (agent_holds ?b) (same_color desk ?f) (not (not (in_motion ?c) ) ) (and (and (is_setup_object ?b) (agent_holds ?b2) ) (not (and (in_motion ?f) (exists (?g - (either curved_wooden_ramp dodgeball)) (in_motion ?d) ) (and (= (distance agent ?r) (distance room_center ?t)) (and (in ?b ?c) (and (and (is_setup_object ?d) (agent_holds ?l) ) (on rug ?p) ) ) ) ) ) ) (in ?b ?b) (agent_holds agent) ) )
        )
      )
    )
    (preference throwToBinFromDistance
      (exists (?o2 - hexagonal_bin)
        (then
          (once (agent_holds ?b) )
          (once (agent_holds ?o) )
          (once (not (not (and (< 1 (distance ?c ?b1)) (exists (?o - dodgeball) (on ?o ?o2) ) ) ) ) )
        )
      )
    )
    (forall (?r - (either chair cylindrical_block))
      (and
        (preference ballThrownFromRug
          (exists (?c - block)
            (at-end
              (in_motion ?c)
            )
          )
        )
        (preference ballThrownToBin
          (exists (?d - (either alarm_clock golfball))
            (then
              (once (in ?g ?d) )
              (once (not (adjacent room_center ?w) ) )
              (hold (not (and (and (not (agent_holds ?r) ) (on ?t ?b4) ) (in_motion ?h) ) ) )
            )
          )
        )
      )
    )
    (preference blockFromRugToDesk
      (exists (?p - block ?r - dodgeball)
        (then
          (once (in ?d ?r) )
          (once (and (not (in ?r ?b) ) (in ?r ?d) (and (between ?r bed ?r) (and (agent_holds ?r) (agent_holds ?r) ) ) ) )
          (once (and (agent_holds ?b) (adjacent_side ?r front ?b3) ) )
        )
      )
    )
    (forall (?b - (either chair bridge_block yellow_cube_block) ?l1 - color)
      (and
        (preference dodgeballAndBasketballInBin
          (exists (?w2 - cube_block ?p - hexagonal_bin)
            (then
              (once (object_orientation ?t upright) )
              (once (touch ?l1 ?p) )
              (once (and (agent_holds ?b5) (in desk ?b) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (- 30 )
    4
  )
)
(:scoring
  (> (* (* 5 3 (+ (* 5 (count throwToBinFromDistance:dodgeball:yellow_pyramid_block) 8 )
          5
        )
      )
    )
    (count-once-per-objects ballThrownFromRug:hexagonal_bin)
  )
)
)



(define (game game-id-524) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (exists (?c2 - (either cube_block pillow cd))
        (exists (?b5 - game_object)
          (and
            (or
              (game-conserved
                (toggled_on ?c2)
              )
            )
            (not
              (exists (?s - (either teddy_bear))
                (game-conserved
                  (agent_holds ?o)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballsInPlace
      (exists (?h - curved_wooden_ramp ?h - dodgeball)
        (at-end
          (in_motion ?b)
        )
      )
    )
  )
)
(:terminal
  (>= (+ 4 (+ (count-overlapping dodgeballsInPlace:yellow) (count dodgeballsInPlace) )
      3
    )
    (total-score)
  )
)
(:scoring
  (count-total dodgeballsInPlace:hexagonal_bin)
)
)



(define (game game-id-525) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (game-conserved
        (on ?b ?b1)
      )
    )
  )
)
(:constraints
  (and
    (preference bounceBallToBin
      (exists (?r - hexagonal_bin ?w - block)
        (then
          (once (agent_crouches ) )
          (once (agent_holds ?s) )
          (once (not (agent_holds ?h) ) )
        )
      )
    )
    (preference pinkObjectMovedToRoomCenter
      (exists (?b6 - dodgeball ?c - chair)
        (then
          (once (and (and (and (agent_holds ?o) (in ?c ?c) (touch ?c ?c) (adjacent ?c ?c) (on ?c ?c) (not (on agent ?c) ) (not (and (equal_z_position agent ?b) (forall (?h - block) (on ?c ?c) ) ) ) (agent_holds ?c) (and (on ?c ?c) (not (same_type ?b pillow) ) ) (on ?c ?l) (and (in ?c ?ob) (open ?c) ) (and (opposite ?g ?o) (in_motion ?c) (on ?d ?c) (and (agent_holds ?c) (agent_holds ?h) (not (not (not (or (not (and (and (object_orientation ?c sideways) (agent_holds ?d) ) (and (not (agent_holds ?t) ) (touch ?t ?c) ) (and (adjacent ?w2 ?g) (agent_holds ?h) (agent_holds ?c) (in_motion ?c) ) ) ) (on ?b ?c) ) ) ) ) (in ?c ?h) (not (touch ?c ?d) ) (in_motion ?o) (object_orientation ?b ?c) (and (rug_color_under ?d blue) (on ?c bed) ) ) ) ) (in ?c ?c) (or (rug_color_under ?b ?c) (in_motion ?b) ) (and (not (adjacent ?c ?c) ) (on ?b1 ?o) ) ) (in_motion ?c) (not (and (in_motion ?c) (touch ?c ?l1) ) ) (on ?c ?c) ) )
          (once (and (agent_holds ?c) (exists (?l3 - desk_shelf ?bl - cube_block) (> (distance ?h ?bl) 1) ) (<= (x_position ?c) (distance agent ?c)) ) )
          (hold (agent_holds ?g) )
        )
      )
    )
  )
)
(:terminal
  (>= 8 2 )
)
(:scoring
  (count-once-per-objects pinkObjectMovedToRoomCenter)
)
)



(define (game game-id-526) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds ?d)
  )
)
(:constraints
  (and
    (preference ballThrownFromObjectToBin
      (exists (?s - hexagonal_bin)
        (then
          (hold (not (exists (?h - triangular_ramp) (not (and (and (and (and (in_motion ?o1) (in_motion ?s) ) (and (and (not (adjacent room_center ?h) ) (in_motion ?s) ) (agent_holds ?l2) ) ) (on ?h rug) ) (and (not (in_motion ?s) ) (and (not (not (on ?b ?w1) ) ) (agent_holds ?h) ) ) ) ) ) ) )
          (hold-while (and (adjacent_side ?s back ?s left) (same_object ?s ?d) ) (or (and (same_color ?d ?s) (in ?t ?s) (not (not (in_motion ?d) ) ) ) (touch ?s ?s) (in ?d ?b) ) )
          (once (in_motion ?d) )
        )
      )
    )
  )
)
(:terminal
  (<= (count-once-per-objects ballThrownFromObjectToBin:golfball) (total-score) )
)
(:scoring
  (count ballThrownFromObjectToBin:pink:rug:golfball)
)
)



(define (game game-id-527) (:domain medium-objects-room-v1)
(:setup
  (exists (?h - hexagonal_bin ?t - (either bridge_block triangle_block) ?d - curved_wooden_ramp)
    (game-conserved
      (in ?d ?b)
    )
  )
)
(:constraints
  (and
    (preference throwTeddyOntoPillow
      (exists (?b ?h ?h - cube_block)
        (then
          (hold (not (and (in ?g ?h) (and (and (in_motion ?d1) (equal_z_position desk ?h) ) (and (agent_holds ?h) (in_motion agent) (touch ?b1 ?b) ) ) ) ) )
          (hold (in_motion ?b) )
          (hold (not (object_orientation ?h ?b) ) )
          (once (and (agent_holds ?b) (exists (?g - cylindrical_block ?b4 - dodgeball ?p ?d ?b2 ?h - ball ?l - drawer) (adjacent room_center ?t) ) ) )
        )
      )
    )
  )
)
(:terminal
  (< (count throwTeddyOntoPillow:pink) (count-once-per-external-objects throwTeddyOntoPillow:hexagonal_bin) )
)
(:scoring
  (* 3 )
)
)



(define (game game-id-528) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (in_motion ?b)
  )
)
(:constraints
  (and
    (forall (?p1 - game_object ?d - ball)
      (and
        (preference blockInTowerAtEnd
          (exists (?d - dodgeball ?r - (either triangular_ramp) ?g - (either cube_block golfball) ?d - (either cd book))
            (then
              (hold (in ?w2 ?d) )
              (hold (not (not (agent_holds ?d) ) ) )
              (hold-while (not (not (in_motion ?bl) ) ) (and (and (agent_holds ?d) (or (not (not (and (broken ?b) ) ) ) (agent_holds ?b) ) ) ) )
            )
          )
        )
      )
    )
    (forall (?b - block)
      (and
        (preference throwMovesBeachballWithoutKnockingTeddy
          (exists (?tb - cube_block)
            (then
              (once (exists (?c6 - hexagonal_bin ?tb - curved_wooden_ramp ?l3 - dodgeball) (not (on ?l3 ?tb) ) ) )
            )
          )
        )
        (preference teddyBearHitsBall
          (exists (?d - dodgeball)
            (then
              (once (on ?l ?d) )
              (once (on ?d ?h) )
              (hold (and (toggled_on ?d) (not (and (and (in ?b3 ?l1) (not (above ?d ?d) ) ) (and (in_motion ?g) (not (not (in_motion ?d) ) ) ) ) ) (and (in_motion ?b) (exists (?h - hexagonal_bin) (not (in_motion ?b) ) ) ) ) )
              (hold (on ?h desk) )
            )
          )
        )
      )
    )
    (preference ballThrownHitsAgent
      (exists (?o1 ?b5 - doggie_bed ?d - dodgeball ?o - hexagonal_bin)
        (at-end
          (not
            (and
              (not
                (and
                  (and
                    (agent_holds ?o)
                    (and
                      (not
                        (in ?w2 ?o)
                      )
                      (< 1 (distance bed ?o))
                    )
                  )
                  (<= (distance ?h ?b) 1)
                )
              )
              (not
                (in_motion ?o)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (* (count-once-per-objects teddyBearHitsBall:basketball) (<= (count blockInTowerAtEnd:tall_cylindrical_block) (count-once-per-objects blockInTowerAtEnd:dodgeball:dodgeball) )
      )
      10
    )
    (total-score)
  )
)
(:scoring
  (count-once-per-objects teddyBearHitsBall:pink_dodgeball)
)
)



(define (game game-id-529) (:domain medium-objects-room-v1)
(:setup
  (forall (?w - hexagonal_bin ?h - game_object)
    (and
      (forall (?c6 - hexagonal_bin)
        (game-conserved
          (exists (?o5 - building ?s - hexagonal_bin)
            (not
              (rug_color_under ?b ?h)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b ?c - (either beachball hexagonal_bin) ?d - hexagonal_bin ?o3 ?s - cylindrical_block)
      (and
        (preference nonBlockPlacedInBuilding
          (then
            (hold (same_type ?b ?l4) )
            (once-measure (in_motion ?s) (distance door ?o3) )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (count nonBlockPlacedInBuilding:pink_dodgeball) )
)
(:scoring
  (+ (+ (+ (= 6 (* 3 (* (* 7 (* 4 (count nonBlockPlacedInBuilding:basketball) )
                (count-once nonBlockPlacedInBuilding:dodgeball)
                10
                (external-forall-maximize
                  (count nonBlockPlacedInBuilding:yellow)
                )
                (count nonBlockPlacedInBuilding:basketball)
              )
              (external-forall-maximize
                (+ (+ 5 (count nonBlockPlacedInBuilding:beachball) )
                  (count-unique-positions nonBlockPlacedInBuilding:orange:basketball)
                )
              )
            )
          )
        )
        (* (* (* 2 (count-shortest nonBlockPlacedInBuilding:hexagonal_bin) )
            (* (count-measure nonBlockPlacedInBuilding:red_pyramid_block:dodgeball) (count-once-per-objects nonBlockPlacedInBuilding:yellow) )
          )
          (count-longest nonBlockPlacedInBuilding:dodgeball)
        )
      )
      0
      (count nonBlockPlacedInBuilding:green)
      10
      5
      (+ 5 3 )
    )
    (* (* 5 (- 3 )
      )
      (= 9 5 (* (* (count-same-positions nonBlockPlacedInBuilding:yellow_cube_block) 5 )
          (count-once-per-objects nonBlockPlacedInBuilding:pink)
        )
      )
    )
    (count nonBlockPlacedInBuilding:dodgeball)
    8
    (count nonBlockPlacedInBuilding:doggie_bed)
    5
  )
)
)



(define (game game-id-530) (:domain many-objects-room-v1)
(:setup
  (forall (?h - dodgeball)
    (and
      (game-conserved
        (< 1 (distance ?h ?c))
      )
    )
  )
)
(:constraints
  (and
    (preference throwFromBehindChairsInBin
      (exists (?b - hexagonal_bin)
        (then
          (hold-while (and (and (on ?b ?b) (in_motion ?t) ) (not (on ?h ?b) ) ) (in ?b ?d) )
          (hold (same_object ?b ?l) )
          (once (or (not (in agent ?d) ) (not (in_motion ?b) ) ) )
        )
      )
    )
    (forall (?c - tall_cylindrical_block)
      (and
        (preference dodgeballThrownToBinFromDesk
          (exists (?h - building)
            (then
              (hold (agent_holds ?c1) )
              (once (not (agent_holds ?b) ) )
              (once (in ?h ?d) )
            )
          )
        )
        (preference objectInBuilding
          (exists (?d - (either cube_block game_object))
            (then
              (once (< (x_position ?d) 9) )
              (once (in_motion ?o) )
              (hold (< (distance desk ?c) 1) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (> (count dodgeballThrownToBinFromDesk:block) 10 )
    )
    (and
      (and
        (and
          (> 2 (count-once-per-objects throwFromBehindChairsInBin:dodgeball) )
        )
        (>= (count-once-per-objects throwFromBehindChairsInBin:basketball) 3 )
        (and
          (= (/ (* (count-longest dodgeballThrownToBinFromDesk:red) 3 )
              (count-once-per-objects throwFromBehindChairsInBin:blue_dodgeball)
            )
            (total-score)
          )
          (< (total-time) (total-score) )
        )
      )
      (< (* 5 3 )
        (* (count throwFromBehindChairsInBin:dodgeball) 3 )
      )
    )
    (or
      (>= 4 (count dodgeballThrownToBinFromDesk:blue) )
      (> (total-score) (total-score) )
    )
  )
)
(:scoring
  (+ 10 (- 6 )
  )
)
)



(define (game game-id-531) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (adjacent room_center ?h)
  )
)
(:constraints
  (and
    (preference otherObjectsOnDeskShelf
      (exists (?b - color ?t2 - (either dodgeball desktop lamp))
        (then
          (hold (< (distance agent ?t2) (distance room_center agent)) )
          (once (equal_x_position ?t2 ?b) )
          (once (not (<= (distance ?t2 green_golfball) 10) ) )
        )
      )
    )
    (preference golfballInBinFromPillow
      (exists (?r1 - hexagonal_bin ?d - sliding_door)
        (then
          (once (exists (?d - sliding_door) (and (and (agent_holds ?d) (in_motion ?d) (in ?d ?d) ) (not (<= 1 (distance east_sliding_door ?o)) ) (on ?d agent) ) ) )
          (hold (forall (?d - ball) (and (in_motion ?r) (not (not (forall (?p3 - hexagonal_bin) (not (not (not (and (exists (?r - ball ?tb - (either dodgeball cylindrical_block doggie_bed book)) (in_motion ?p3) ) (and (touch ?r ?b) (not (adjacent ?p3 ?d) ) ) ) ) ) ) ) ) ) (toggled_on ?h) (in_motion ?g) (not (on ?t ?l) ) (agent_holds ?d) (between ?l1 ?b1 ?d) ) ) )
          (hold (= 0 2) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (* (>= (count golfballInBinFromPillow:dodgeball) 9 )
      (count-same-positions golfballInBinFromPillow:pink)
    )
  )
)
(:scoring
  (count golfballInBinFromPillow:yellow)
)
)



(define (game game-id-532) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?l1 - dodgeball)
      (game-conserved
        (on agent ?c4)
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToDoggieBed
      (exists (?b4 - game_object ?d1 - cube_block)
        (then
          (hold (not (not (agent_holds ?b) ) ) )
          (once (in ?d1 ?d) )
          (once (same_color ?b ?d1) )
        )
      )
    )
  )
)
(:terminal
  (> (* 7 (count throwBallToDoggieBed:dodgeball) 12 300 (count throwBallToDoggieBed:wall) (* 2 10 )
    )
    (* 50 (count-once throwBallToDoggieBed:beachball) )
  )
)
(:scoring
  (* (count throwBallToDoggieBed:pink_dodgeball) (count throwBallToDoggieBed:book) )
)
)



(define (game game-id-533) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (in_motion agent)
  )
)
(:constraints
  (and
    (preference golfballUnderBridgeWithoutTouchingBlock
      (exists (?h - cube_block)
        (then
          (hold (not (on ?d ?h) ) )
          (once (adjacent room_center ?h) )
          (once (on ?h ?h) )
          (once (not (and (agent_holds ?h) (and (or (adjacent agent ?t) ) (agent_holds ?o) ) (agent_holds ?h) ) ) )
        )
      )
    )
  )
)
(:terminal
  (> 3 3 )
)
(:scoring
  (* (count-longest golfballUnderBridgeWithoutTouchingBlock) (+ 6 (count-once-per-objects golfballUnderBridgeWithoutTouchingBlock:basketball) )
  )
)
)



(define (game game-id-534) (:domain few-objects-room-v1)
(:setup
  (exists (?r - hexagonal_bin ?o - chair)
    (game-conserved
      (and
        (> (distance ?h ?o) 7)
      )
    )
  )
)
(:constraints
  (and
    (preference pinkObjectMovedToRoomCenter
      (exists (?c6 - hexagonal_bin)
        (at-end
          (and
            (exists (?s - game_object)
              (and
                (not
                  (adjacent room_center ?c)
                )
                (broken bed)
                (and
                  (on ?s ?c6)
                  (and
                    (and
                      (and
                        (and
                          (agent_holds ?c6)
                          (not
                            (agent_holds ?c6)
                          )
                          (< (distance ?d ?c6) 1)
                        )
                        (in_motion ?b)
                      )
                      (in ?w1 ?w1)
                    )
                    (in_motion ?b6)
                  )
                )
                (on ?s ?c6)
              )
            )
            (> 1 (distance bed ?c))
          )
        )
      )
    )
    (forall (?w1 - hexagonal_bin)
      (and
        (preference bookOnDeskShelf
          (exists (?d1 ?o2 - hexagonal_bin)
            (then
              (hold (in ?w1 ?d1) )
              (once (in_motion ?d1) )
              (hold (in_motion ?b) )
            )
          )
        )
        (preference blockInTowerAtEnd
          (exists (?s - block)
            (at-end
              (adjacent ?w1 ?l1)
            )
          )
        )
        (preference pillowThrownToDoggieBed
          (then
            (hold (on ?w1 ?w1) )
            (hold-while (< 0.5 2) (exists (?o - chair) (adjacent_side ?o ?w1 ?o) ) )
            (once (agent_holds ?b) )
          )
        )
      )
    )
  )
)
(:terminal
  (<= (count-same-positions pinkObjectMovedToRoomCenter:rug) (count pillowThrownToDoggieBed:yellow) )
)
(:scoring
  (count-once-per-objects pinkObjectMovedToRoomCenter:blue_pyramid_block:basketball)
)
)



(define (game game-id-535) (:domain many-objects-room-v1)
(:setup
  (forall (?h - hexagonal_bin ?t - hexagonal_bin)
    (exists (?t - (either cube_block))
      (exists (?p2 - (either golfball wall red rug ball dodgeball basketball))
        (forall (?l - game_object)
          (and
            (and
              (and
                (game-optional
                  (in_motion ?l)
                )
                (forall (?b1 ?b ?l1 - hexagonal_bin ?b3 - red_dodgeball)
                  (and
                    (and
                      (and
                        (exists (?h - hexagonal_bin)
                          (and
                            (forall (?b3 - wall ?t1 - dodgeball)
                              (forall (?h - doggie_bed)
                                (game-conserved
                                  (not
                                    (adjacent ?p2 ?p2)
                                  )
                                )
                              )
                            )
                            (and
                              (game-optional
                                (in_motion agent)
                              )
                            )
                          )
                        )
                      )
                    )
                    (game-conserved
                      (in_motion ?d)
                    )
                  )
                )
                (exists (?d - chair ?b4 - pillow)
                  (game-conserved
                    (agent_holds ?p2)
                  )
                )
              )
              (or
                (and
                  (game-conserved
                    (exists (?b9 - block)
                      (in_motion ?p2)
                    )
                  )
                  (game-optional
                    (not
                      (adjacent agent ?b)
                    )
                  )
                  (game-optional
                    (> (distance bed ?c) (x_position ?d))
                  )
                )
              )
            )
            (forall (?s - ball ?h - hexagonal_bin)
              (exists (?t - hexagonal_bin)
                (game-conserved
                  (not
                    (and
                      (agent_holds ?p2)
                      (same_object ?b ?h)
                    )
                  )
                )
              )
            )
            (forall (?d2 - hexagonal_bin)
              (and
                (and
                  (game-optional
                    (in_motion ?l1)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballThrownToBinFromDesk
      (exists (?c6 - (either bed doggie_bed cd) ?o5 - ball)
        (then
          (once (and (on ?t ?o5) (not (or (< (distance ?o5 agent) (distance ?d ?o5)) (< (distance_side door ?o5 ?o5) (distance ?b1 ?o5)) ) ) ) )
          (once (adjacent room_center ?o5) )
          (once (faces ?o5 ?o5) )
        )
      )
    )
  )
)
(:terminal
  (and
    (< 10 (external-forall-maximize (count dodgeballThrownToBinFromDesk:beachball) ) )
  )
)
(:scoring
  (+ 30 (external-forall-maximize (* (* (count dodgeballThrownToBinFromDesk:hexagonal_bin) 7 )
        7
        (* 3 15 5 )
      )
    )
  )
)
)



(define (game game-id-536) (:domain medium-objects-room-v1)
(:setup
  (exists (?o - dodgeball ?b - wall)
    (forall (?h - doggie_bed)
      (exists (?b - cube_block)
        (exists (?b7 - shelf)
          (game-optional
            (not
              (in_motion ?l)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - dodgeball ?b - block)
      (and
        (preference ballThrownToBin
          (exists (?p - book ?w2 - cube_block)
            (then
              (hold (on ?o ?l2) )
              (once (in_motion ?w2) )
              (hold-while (is_setup_object ?b) (agent_holds ?d) (and (in_motion ?w2) (not (agent_holds ?d) ) (toggled_on ?b) (in_motion ?w2) ) (not (in ?w2 ?b) ) )
            )
          )
        )
        (preference ballKnocksBlockFromRug
          (exists (?l2 - shelf)
            (then
              (once (rug_color_under ?t ?l2) )
              (hold (not (agent_holds ?b) ) )
              (hold (and (not (agent_holds ?d) ) (not (not (not (in ?l2 bed) ) ) ) ) )
            )
          )
        )
      )
    )
    (preference dropAttempt
      (exists (?d - wall)
        (then
          (hold (agent_holds ?d) )
          (hold (and (same_color ?d ?d) (agent_holds ?c1) (in_motion ?d) (and (in_motion ?b) (agent_holds ?c2) (agent_holds ?d) (not (not (not (and (not (not (and (on ?d ?d) (touch ?d ?d) ) ) ) (not (and (on ?s bed) (and (in_motion floor) (in ?d ?b) ) ) ) ) ) ) ) (same_object ?d ?d) (agent_holds ?d) (in ?d ?c) ) (and (adjacent ?w1 ?d) (touch ?d ?o1) ) (exists (?o - dodgeball) (on ?c ?o) ) ) )
          (once (on ?d ?b1) )
        )
      )
    )
    (preference bounceBallToBin
      (exists (?b2 - dodgeball ?ob - hexagonal_bin)
        (then
          (hold (agent_holds ?d) )
          (once (agent_holds ?t1) )
          (hold-while (not (adjacent ?ob ?ob) ) (or (in ?ob ?d) (in ?ob ?d) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count-unique-positions dropAttempt:pink) (count ballThrownToBin:book) (count bounceBallToBin:dodgeball) (* (+ (count dropAttempt:dodgeball) (* (* (= (count dropAttempt:golfball:block:dodgeball) (count bounceBallToBin:beachball) )
              (- 2 )
              10
            )
            (count-unique-positions ballKnocksBlockFromRug:pink)
            10
          )
        )
        (+ (* (+ (count-once-per-objects bounceBallToBin:dodgeball:basketball) (count-once-per-objects dropAttempt:white) (count dropAttempt:red:dodgeball) (count-once-per-objects dropAttempt:green) (count-once-per-objects dropAttempt:yellow) (count ballKnocksBlockFromRug:dodgeball) )
            (count ballKnocksBlockFromRug:hexagonal_bin:beachball:yellow)
            (+ (count ballThrownToBin:basketball:blue_cube_block) 25 (external-forall-minimize (* (count ballKnocksBlockFromRug:dodgeball) 3 2 (* (count-once-per-external-objects ballThrownToBin:pink) (* (count-once-per-objects ballKnocksBlockFromRug:basketball:beachball:dodgeball) (* 6 4 )
                    )
                  )
                  (+ 1 (<= (external-forall-minimize (count dropAttempt:doggie_bed) ) (count-once-per-objects bounceBallToBin:book) )
                  )
                  (- (+ (+ 3 (+ (* (count ballKnocksBlockFromRug:basketball) (external-forall-maximize (count-once-per-objects ballThrownToBin:yellow) ) (count ballThrownToBin:red) )
                          300
                          10
                        )
                      )
                      (count-once-per-external-objects ballThrownToBin:hexagonal_bin)
                    )
                  )
                )
              )
              10
              (count dropAttempt:yellow:dodgeball)
              3
              3
              (count-total bounceBallToBin:golfball:yellow)
              3
            )
            (count-once dropAttempt:yellow)
            (count bounceBallToBin:dodgeball:green)
            (* 4 (* (> 10 7 )
                15
              )
            )
          )
          (* (count-once-per-objects dropAttempt:yellow) 7 )
        )
      )
      3
      4
      (* (external-forall-maximize (count ballThrownToBin:white) ) (count ballKnocksBlockFromRug:dodgeball) (count-once-per-objects bounceBallToBin:red_pyramid_block) )
      (count bounceBallToBin:blue_pyramid_block)
      9
    )
    20
  )
)
(:scoring
  (count-once ballKnocksBlockFromRug:dodgeball)
)
)



(define (game game-id-537) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (game_start )
  )
)
(:constraints
  (and
    (preference throwTeddyOntoPillow
      (exists (?h - sliding_door ?d2 - hexagonal_bin ?c2 - curved_wooden_ramp ?c - hexagonal_bin ?b - hexagonal_bin)
        (then
          (once (and (not (adjacent ?b ?b) ) (and (agent_holds ?b) (in_motion ?b) ) (not (in_motion ?b) ) ) )
          (once (equal_x_position room_center ?d) )
          (once (in agent ?c) )
        )
      )
    )
  )
)
(:terminal
  (>= (= (count throwTeddyOntoPillow:tall_cylindrical_block) (* (* 5 2 )
        (count-once-per-objects throwTeddyOntoPillow:top_drawer)
      )
    )
    (count throwTeddyOntoPillow:basketball)
  )
)
(:scoring
  (count throwTeddyOntoPillow:golfball)
)
)



(define (game game-id-538) (:domain many-objects-room-v1)
(:setup
  (forall (?o2 - building ?r - ball)
    (game-conserved
      (agent_holds ?r)
    )
  )
)
(:constraints
  (and
    (preference throwInBin
      (exists (?b - hexagonal_bin ?g - shelf ?l - triangular_ramp)
        (at-end
          (and
            (agent_holds ?b)
            (and
              (= (distance agent ?g) (building_size ?b) 5)
              (< (distance room_center agent) 5)
              (in_motion ?l)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (or
        (and
          (>= (external-forall-maximize (* (count throwInBin:yellow_pyramid_block:hexagonal_bin:rug) (* 5 (count throwInBin) )
              )
            )
            5
          )
          (= (+ (count throwInBin:yellow_cube_block:yellow_cube_block) 3 10 )
            (count-once-per-objects throwInBin:hexagonal_bin)
          )
        )
        (= 2 2 )
      )
      (>= 15 (total-time) )
      (>= 0 (total-score) )
    )
    (> 30 (count throwInBin:basketball) )
    (>= (count throwInBin:dodgeball:blue_cube_block) (total-time) )
  )
)
(:scoring
  (* 2 3 )
)
)



(define (game game-id-539) (:domain medium-objects-room-v1)
(:setup
  (exists (?g - doggie_bed)
    (game-conserved
      (or
        (in_motion ?g)
        (agent_holds ?g)
      )
    )
  )
)
(:constraints
  (and
    (preference blueObjectMovedToRoomCenter
      (exists (?c - hexagonal_bin)
        (at-end
          (and
            (on ?h ?c)
            (in ?c ?g)
            (agent_holds ?c)
            (in_motion ?c)
          )
        )
      )
    )
    (preference pillowThrownToDoggieBed
      (exists (?d - (either golfball cylindrical_block key_chain pencil chair blue_cube_block bridge_block) ?p2 - dodgeball)
        (at-end
          (adjacent_side room_center front ?d)
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 5 (total-score) )
    (>= (total-score) (count pillowThrownToDoggieBed:pink:tall_cylindrical_block) )
  )
)
(:scoring
  (count-once-per-objects pillowThrownToDoggieBed:yellow:pink)
)
)



(define (game game-id-540) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (adjacent room_center ?b)
  )
)
(:constraints
  (and
    (preference redDodgeballThrownToBin
      (exists (?o - (either cube_block cube_block golfball beachball))
        (then
          (once (and (adjacent ?w1 ?o) (agent_holds ?o) ) )
          (hold (not (and (< 0 1) (and (agent_holds ?o) (in_motion ?b) ) ) ) )
          (once (agent_crouches ) )
        )
      )
    )
  )
)
(:terminal
  (<= 1 (* (external-forall-minimize (count-once-per-external-objects redDodgeballThrownToBin:purple) ) 2 5 2 (external-forall-maximize (* 3 4 )
      )
    )
  )
)
(:scoring
  (external-forall-maximize
    (* (* 5 5 )
      (= (external-forall-maximize (count-shortest redDodgeballThrownToBin:beachball) ) (count-once-per-objects redDodgeballThrownToBin:dodgeball) )
    )
  )
)
)



(define (game game-id-541) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (exists (?ob - hexagonal_bin)
      (not
        (not
          (in_motion ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToRampToBed
      (exists (?t - (either pink laptop triangular_ramp laptop))
        (then
          (hold (not (and (is_setup_object ?t) (and (agent_holds ?t) (adjacent ?t ?t) ) ) ) )
          (hold (in_motion ?h) )
          (once (on ?o ?g) )
          (hold (< 6 1) )
          (once (in_motion ?t) )
          (once (in ?t ?t) )
        )
      )
    )
    (preference throwBallToBin
      (exists (?l1 - (either main_light_switch pillow))
        (then
          (once (in ?o ?l1) )
          (hold (in_motion ?o) )
          (hold (in_motion ?l1) )
        )
      )
    )
    (preference throwAttemptFromDoor
      (exists (?h - hexagonal_bin)
        (then
          (once (in_motion ?d) )
          (once (and (agent_holds ?h) (not (not (same_type ?h ball) ) ) ) )
          (once (in_motion ?h) )
        )
      )
    )
    (preference ballOnBedAtEnd
      (exists (?b - (either desktop pillow))
        (then
          (hold (in_motion ?b) )
          (once (not (and (agent_holds ?b) (and (agent_holds ?b) (and (and (agent_holds ?b) (equal_z_position agent ?d) ) (and (object_orientation ?o ?b) (not (and (not (is_setup_object ?l1) ) ) ) ) ) ) ) ) )
          (hold-while (not (agent_holds ?b) ) (in ?b ?b) )
        )
      )
    )
    (preference binKnockedOver
      (exists (?l2 - chair)
        (then
          (once (and (exists (?c - (either game_object beachball) ?c6 - cube_block) (not (agent_holds ?c6) ) ) ) )
          (once (in ?l2 ?h) )
          (once (faces agent ?w1) )
        )
      )
    )
  )
)
(:terminal
  (>= (count ballThrownToRampToBed:blue_pyramid_block) 4 )
)
(:scoring
  (+ (+ 5 5 )
    100
    6
    (* 5 9 3 )
    4
    (* (count ballOnBedAtEnd:yellow_cube_block) 0 )
  )
)
)



(define (game game-id-542) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (game-optional
        (in ?l1 ?b)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownThroughRampAndBlocksToBin
      (exists (?tb ?d - hexagonal_bin)
        (then
          (once (not (forall (?b - pyramid_block) (on ?c desk) ) ) )
          (hold-while (agent_holds ?tb) (in_motion ?h) )
          (once (touch ?b ?tb) )
        )
      )
    )
    (preference throwBallToBin
      (exists (?p2 - red_dodgeball ?h - (either dodgeball laptop dodgeball cube_block))
        (then
          (once (agent_holds agent) )
          (once (and (in ?h agent) (exists (?x - hexagonal_bin ?o4 - dodgeball) (exists (?r - desk_shelf) (not (and (same_type ?h ball) (and (adjacent agent ?d) (in_motion ?r) ) ) ) ) ) ) )
          (once (and (and (and (and (and (in ?h ?b) (rug_color_under ?b ?tb) ) (in_motion ?h) (agent_holds ?h) ) (and (in_motion ?h) (agent_holds ?h) ) (adjacent agent ?h) ) (in_motion ?h) ) (in_motion ?d) ) )
          (once (exists (?b - teddy_bear) (toggled_on ?h) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (or
        (< (count-total ballThrownThroughRampAndBlocksToBin:hexagonal_bin) (+ 8 (+ (- (= 5 (* (+ (+ (* 18 5 )
                        2
                        10
                        7
                        10
                        (* (+ 2 1 )
                          4
                        )
                        (count throwBallToBin:beachball)
                        (* (* 3 2 )
                          (+ (+ (count ballThrownThroughRampAndBlocksToBin:pink_dodgeball) (count-once ballThrownThroughRampAndBlocksToBin) )
                            (count-once throwBallToBin:book:dodgeball)
                          )
                        )
                        (count-once-per-objects ballThrownThroughRampAndBlocksToBin:block)
                        8
                        (+ (count ballThrownThroughRampAndBlocksToBin:book:dodgeball) 4 )
                        (count-once-per-objects throwBallToBin:dodgeball)
                      )
                      4
                    )
                    (+ (count ballThrownThroughRampAndBlocksToBin:dodgeball) (count ballThrownThroughRampAndBlocksToBin:tall_cylindrical_block:dodgeball) (* (count ballThrownThroughRampAndBlocksToBin:book) 20 )
                      2
                      (* (count ballThrownThroughRampAndBlocksToBin:dodgeball) (count-unique-positions ballThrownThroughRampAndBlocksToBin:dodgeball:side_table) (count-once-per-objects ballThrownThroughRampAndBlocksToBin:hexagonal_bin:basketball) (< (+ 10 1 )
                          2
                        )
                        100
                        (* 3 3 (+ (count-once-per-external-objects throwBallToBin:blue_dodgeball) (count-once-per-objects throwBallToBin:basketball) )
                          (count-once-per-objects throwBallToBin:pink_dodgeball)
                          5
                          (* (* (* (external-forall-maximize (* 1 (* (* (* (* (count ballThrownThroughRampAndBlocksToBin:basketball) (external-forall-maximize (+ (count throwBallToBin:blue_pyramid_block) (+ (count ballThrownThroughRampAndBlocksToBin:book) (* 2 4 (count ballThrownThroughRampAndBlocksToBin:dodgeball:dodgeball) )
                                                )
                                                10
                                              )
                                            )
                                            5
                                            (count-once throwBallToBin:dodgeball:dodgeball)
                                            20
                                            (/
                                              (count throwBallToBin:alarm_clock:blue_dodgeball)
                                              (- (count throwBallToBin:blue_pyramid_block) )
                                            )
                                          )
                                          (- (* (* 3 (count ballThrownThroughRampAndBlocksToBin:dodgeball) )
                                              (* 10 (external-forall-maximize (count-shortest throwBallToBin:basketball) ) )
                                            )
                                          )
                                        )
                                        10
                                      )
                                      (count-shortest throwBallToBin:triangle_block:pink)
                                    )
                                    (* (* (> (count throwBallToBin:book) 2 )
                                        (count-once-per-objects throwBallToBin:green:yellow_cube_block)
                                      )
                                    )
                                  )
                                )
                                (external-forall-maximize
                                  (count throwBallToBin)
                                )
                                (- (* 5 )
                                )
                              )
                              (* 1 (- 10 )
                              )
                            )
                            (+ (count-once-per-objects ballThrownThroughRampAndBlocksToBin:golfball) (count-once-per-objects throwBallToBin:golfball) 5 (count-once throwBallToBin:blue_dodgeball) 1 9 )
                          )
                          6
                          (count-once-per-objects ballThrownThroughRampAndBlocksToBin:dodgeball)
                          (count ballThrownThroughRampAndBlocksToBin:hexagonal_bin)
                          4
                          (* 3 (count-once-per-objects ballThrownThroughRampAndBlocksToBin:white) )
                          (* 100 4 )
                        )
                        (+ (count-once throwBallToBin:pink:pink_dodgeball) (+ (+ (>= 6 (* (count ballThrownThroughRampAndBlocksToBin:dodgeball) (count throwBallToBin:blue_dodgeball:doggie_bed:yellow_cube_block) )
                              )
                              6
                            )
                            2
                          )
                        )
                      )
                      (* 4 (- 2 )
                        3
                      )
                    )
                    (count-once-per-objects ballThrownThroughRampAndBlocksToBin:dodgeball)
                    (* (count-once-per-external-objects throwBallToBin:orange) (= (+ (count throwBallToBin:pink_dodgeball) 2 )
                        (* (count-once ballThrownThroughRampAndBlocksToBin:blue_cube_block) 8 (external-forall-minimize (* 7 100 )
                          )
                          6
                        )
                      )
                      300
                      (+ (= (count throwBallToBin:pink_dodgeball) )
                        (* (count throwBallToBin:blue_dodgeball:dodgeball) (count-once-per-objects ballThrownThroughRampAndBlocksToBin:book) )
                      )
                      10
                      (count ballThrownThroughRampAndBlocksToBin:beachball:dodgeball)
                      3
                    )
                    (* (count-once-per-objects ballThrownThroughRampAndBlocksToBin:block) 4 )
                    6
                  )
                )
                (count ballThrownThroughRampAndBlocksToBin:pink_dodgeball)
              )
              2
            )
          )
        )
        (>= 3 (external-forall-minimize (external-forall-minimize (count throwBallToBin:pink) ) ) )
        (and
          (> 6 (count throwBallToBin:golfball) )
          (>= (count ballThrownThroughRampAndBlocksToBin:top_drawer) (* (external-forall-minimize (/ (count ballThrownThroughRampAndBlocksToBin:rug) (count ballThrownThroughRampAndBlocksToBin:blue_dodgeball) ) ) (count ballThrownThroughRampAndBlocksToBin:yellow:beachball) )
          )
        )
      )
    )
  )
)
(:scoring
  (count ballThrownThroughRampAndBlocksToBin:blue_dodgeball)
)
)



(define (game game-id-543) (:domain many-objects-room-v1)
(:setup
  (forall (?d - wall)
    (and
      (game-optional
        (not
          (touch rug ?c)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToBinFromOppositeWall
      (exists (?o - (either key_chain pyramid_block))
        (then
          (hold (and (in ?d ?c4) (agent_holds ?t) (not (< 1 0) ) ) )
          (hold (game_start ) )
          (hold (in ?b desk) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects throwToBinFromOppositeWall:golfball:beachball) (total-score) )
)
(:scoring
  (+ (external-forall-minimize (count-once-per-objects throwToBinFromOppositeWall:dodgeball) ) (+ 3 (count throwToBinFromOppositeWall) 5 )
    (count throwToBinFromOppositeWall:red)
  )
)
)



(define (game game-id-544) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (game_start )
  )
)
(:constraints
  (and
    (preference ballKnocksBlockFromRug
      (exists (?c - chair ?h - color)
        (then
          (hold-while (in_motion ?bl) (in ?h ?h) (and (and (and (on ?o bed) (not (on agent ?w2) ) ) (in_motion ?d) ) (on ?h ?h) ) (and (agent_holds ?d) (forall (?o3 - triangular_ramp ?s - hexagonal_bin) (not (above ?b ?s) ) ) ) )
          (hold (and (not (< (distance door ?h) (distance ?h ?b)) ) (in ?h ?h) ) )
          (once (adjacent_side desk left ?h) )
          (once-measure (agent_holds ?h) (distance_side ?c ?h ?h) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (total-score) )
)
(:scoring
  (count-once-per-external-objects ballKnocksBlockFromRug:golfball)
)
)



(define (game game-id-545) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?o - curved_wooden_ramp)
      (forall (?w1 - building ?d - tan_cube_block)
        (game-optional
          (not
            (not
              (exists (?h - hexagonal_bin)
                (= 1 (distance_side door front_left_corner ?d))
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference pillowThrownToDoggieBed
      (exists (?d - (either block dodgeball))
        (then
          (hold (not (and (and (agent_holds pink_dodgeball) (not (agent_holds ?d) ) (agent_holds ?d) ) (exists (?d - dodgeball ?r - chair) (agent_holds ?r) ) ) ) )
          (hold (adjacent_side east_sliding_door ?d ?b) )
          (once (and (in_motion ?d) (touch ?h ?d) (and (and (and (on ?h ?r) (in ?d ?c2) ) ) (agent_holds ?d) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (count pillowThrownToDoggieBed:wall) )
)
(:scoring
  (* 10 0 (* (* (* (count-once-per-external-objects pillowThrownToDoggieBed:basketball) 4 )
        (* 50 3 )
      )
      (* 6 0.5 )
    )
  )
)
)



(define (game game-id-546) (:domain many-objects-room-v1)
(:setup
  (exists (?o4 - hexagonal_bin ?c3 - ball)
    (and
      (and
        (game-conserved
          (object_orientation ?c3 upside_down)
        )
        (game-conserved
          (in_motion ?c3)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference bigObjectThrownToBed
      (exists (?h - curved_wooden_ramp)
        (then
          (hold (on ?h ?h) )
          (hold (on ?l ?bl) )
          (once (opposite ?h ?o) )
        )
      )
    )
    (forall (?d - building ?db - hexagonal_bin)
      (and
        (preference blockOnBlockInTowerAtEnd
          (exists (?o3 - golfball)
            (then
              (hold (and (in_motion green_golfball) (and (and (in_motion ?c) (and (< 1 (distance ?t1 ?db)) (not (= (distance ?c ?o) 4) ) ) (in_motion ?g) ) (in_motion ?c3) (agent_holds ?db) ) ) )
              (once (on ?o3 ?o3) )
              (hold (and (in_motion ?db) (and (not (adjacent ?db ?o3) ) (and (not (in_motion ?o3) ) (<= (distance agent ?b) 1) (agent_holds ?db) ) ) ) )
            )
          )
        )
        (preference ballThrownIntoTarget
          (exists (?t1 - hexagonal_bin ?b9 - ball ?c5 - (either laptop pillow))
            (then
              (hold (not (forall (?h - (either yellow_cube_block dodgeball) ?h - (either golfball ball)) (not (agent_holds ?db) ) ) ) )
              (hold (object_orientation ?c5 upright) )
              (hold (in_motion ?c5) )
            )
          )
        )
        (preference throwFromEdgeOfRug
          (exists (?d1 - hexagonal_bin)
            (at-end
              (not
                (in_motion ?b)
              )
            )
          )
        )
      )
    )
    (preference throwToRampToBin
      (exists (?b1 - (either basketball doggie_bed dodgeball))
        (then
          (hold (in_motion ?b1) )
          (once (and (= (distance ?b1 ?b1) 1) (exists (?b - hexagonal_bin) (not (not (and (and (= (distance_side ?c right ?b) 1) (<= 1 (distance desk ?b)) ) (equal_z_position ?w ?c) ) ) ) ) ) )
          (once (in_motion ?b) )
        )
      )
    )
    (preference throwToBin
      (exists (?c - dodgeball)
        (then
          (once (open ?c) )
          (hold (on ?c ?c) )
          (hold (on ?d ?b3) )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (* (- (* 0 (= 3 )
        )
      )
      2
    )
  )
)
(:scoring
  (+ 2 4 )
)
)



(define (game game-id-547) (:domain many-objects-room-v1)
(:setup
  (exists (?c1 - ball)
    (and
      (and
        (game-conserved
          (and
            (on ?c1 ?b)
            (in_motion ?c1)
          )
        )
        (game-conserved
          (not
            (exists (?o5 - (either alarm_clock pyramid_block) ?d - hexagonal_bin)
              (agent_holds ?g)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference woodenBlockMovedFromRugToDesk
      (exists (?c4 ?h ?o1 ?t2 ?h - hexagonal_bin)
        (then
          (once (not (agent_holds ?o) ) )
          (once (not (= (distance ?c4 ?r) 2) ) )
          (once (in_motion ?t2) )
        )
      )
    )
    (forall (?o - block)
      (and
        (preference towerFallsWhileBuilding
          (then
            (hold (in_motion ?b5) )
            (once (in_motion ?o) )
            (once (game_start ) )
          )
        )
        (preference otherObjectsOnDeskShelf
          (exists (?h - cube_block)
            (then
              (once (in_motion ?h) )
              (once (not (not (not (on agent ?s) ) ) ) )
              (hold (and (not (not (not (and (on ?h ?o) (in ?o5 ?h) (and (not (and (agent_holds desk) (agent_holds ?o) ) ) (in_motion ?l2) ) ) ) ) ) (and (not (on ?h ?d) ) (and (on ?bl ?h) (and (adjacent room_center bed) (agent_holds ?h) (in_motion ?b) ) ) ) (in ?o ?d) ) )
            )
          )
        )
        (preference objectInBuilding
          (at-end
            (not
              (in_motion ?b)
            )
          )
        )
        (preference ballKnocksBlockFromRug
          (exists (?c - (either wall hexagonal_bin cd))
            (then
              (once (agent_holds ?h) )
              (hold-while (not (on ?o ?o) ) (not (same_color ?h ?tb) ) )
              (once (and (in_motion ?o) (in ?c ?o) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-external-objects otherObjectsOnDeskShelf:hexagonal_bin) 15 )
)
(:scoring
  (+ 2 (- (+ (count towerFallsWhileBuilding:cube_block) 7 )
    )
  )
)
)



(define (game game-id-548) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (> 3 (building_size ?b))
  )
)
(:constraints
  (and
    (preference objectWithMatchingColor
      (exists (?b - wall)
        (then
          (hold (same_color ?b blue) )
          (hold (game_start ) )
          (once (not (and (in_motion ?h) (agent_holds ?b) ) ) )
        )
      )
    )
    (preference ballInOrOnBin
      (exists (?b - beachball)
        (at-end
          (and
            (and
              (not
                (and
                  (not
                    (and
                      (in_motion ?h)
                      (adjacent ?h agent)
                    )
                  )
                  (in_motion ?b)
                  (and
                    (agent_holds ?l)
                    (not
                      (or
                        (in_motion ?b)
                        (agent_holds ?b)
                      )
                    )
                  )
                  (agent_holds ?b)
                )
              )
              (between ?b1 ?b ?b)
            )
            (not
              (adjacent ?c ?b)
            )
            (on ?b ?b)
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (<= (total-score) (external-forall-maximize (count-once ballInOrOnBin:hexagonal_bin) ) )
    (> (count ballInOrOnBin:brown) (count objectWithMatchingColor:dodgeball:pink:pink_dodgeball) )
  )
)
(:scoring
  (* (count ballInOrOnBin:beachball) (* (* (= (count objectWithMatchingColor:beachball:bed) (count objectWithMatchingColor:dodgeball:basketball) )
        (count objectWithMatchingColor:blue_cube_block:green)
      )
      (* (count objectWithMatchingColor:dodgeball) (count ballInOrOnBin:beachball) )
    )
  )
)
)



(define (game game-id-549) (:domain many-objects-room-v1)
(:setup
  (exists (?t - hexagonal_bin)
    (game-optional
      (not
        (not
          (agent_holds ?t)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballFromDeskToTarget
      (exists (?d - dodgeball)
        (then
          (hold (and (in ?g ?d) (not (not (not (not (equal_x_position ?h ?d) ) ) ) ) ) )
          (hold (in_motion rug) )
          (hold (in_motion ?d) )
        )
      )
    )
    (preference throwGolfballToBin
      (exists (?h - block)
        (then
          (once (agent_holds ?h) )
          (once (or (< 2 (distance ?b1 ?l1)) (and (and (agent_holds ?h) (in_motion ?h) ) (on ?h ?h) ) ) )
          (once (not (in ?h ?b) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 3 )
)
(:scoring
  (count dodgeballFromDeskToTarget:green:golfball:dodgeball)
)
)



(define (game game-id-550) (:domain few-objects-room-v1)
(:setup
  (exists (?o - dodgeball ?c4 - hexagonal_bin)
    (game-conserved
      (not
        (equal_x_position ?c4 ?c4)
      )
    )
  )
)
(:constraints
  (and
    (preference throwMovesBeachballWithoutKnockingTeddy
      (exists (?o3 - block)
        (then
          (hold (not (agent_holds ?o3) ) )
          (once (and (faces ?o3 ?t) (same_color ?b ?c) ) )
          (once (= 0.5 (distance room_center ?d) 1) )
        )
      )
    )
    (preference thrownBallHitsBlock
      (exists (?o4 - wall)
        (at-end
          (not
            (not
              (on ?d agent)
            )
          )
        )
      )
    )
    (forall (?ob - cube_block)
      (and
        (preference ballDroppedInBin
          (then
            (once (exists (?o1 ?t - hexagonal_bin) (not (on ?b ?t) ) ) )
            (once (agent_holds ?b2) )
            (once (and (not (not (and (in ?ob ?b) (agent_holds rug) ) ) ) (and (agent_holds ?d) (agent_holds ?ob) (in_motion ?ob) (and (agent_holds ?p) (< 1 (distance ?w2 ?o)) ) (and (not (not (and (on ?ob ?ob) (in_motion desk) ) ) ) (in_motion ?ob) ) (touch ?ob ?ob) ) (exists (?h - pillow) (in_motion ?h) ) (not (and (not (and (exists (?o - ball) (and (in agent agent) (faces ?b ?b) ) ) (and (object_orientation top_shelf upright) (and (in_motion bed) (in ?d ?ob) ) ) ) ) (not (same_color ?ob ?c) ) ) ) ) )
          )
        )
      )
    )
    (preference ballThrownToRampToBed
      (exists (?c - (either chair alarm_clock))
        (at-end
          (same_color ?c ?c)
        )
      )
    )
    (preference throwOverRamp
      (exists (?r - hexagonal_bin ?b4 ?p1 - hexagonal_bin ?o ?l3 ?d ?c6 ?p2 ?l3 - flat_block)
        (then
          (once (exists (?h ?ob - dodgeball) (not (agent_holds ?c6) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count ballDroppedInBin:basketball) (* 10 (count thrownBallHitsBlock:basketball:purple) (count ballDroppedInBin:beachball) )
  )
)
(:scoring
  (* 5 (* 6 -10 )
    (count-once-per-objects throwOverRamp:red:blue_pyramid_block:beachball)
    0
  )
)
)



(define (game game-id-551) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?r ?b4 - hexagonal_bin)
      (exists (?c - shelf)
        (exists (?h - hexagonal_bin ?d - doggie_bed ?r ?bl - desk_shelf)
          (and
            (exists (?d - hexagonal_bin)
              (exists (?h - hexagonal_bin ?r1 - ball)
                (game-optional
                  (in green_golfball ?r)
                )
              )
            )
            (game-optional
              (on ?d ?d)
            )
            (forall (?b - cylindrical_block)
              (and
                (exists (?b - desk_shelf)
                  (game-optional
                    (and
                      (not
                        (in_motion ?b)
                      )
                      (and
                        (on ?b ?b)
                        (on ?b ?b)
                      )
                    )
                  )
                )
                (game-optional
                  (in ?b ?b)
                )
                (exists (?l2 - dodgeball ?b5 - (either pillow cylindrical_block golfball))
                  (forall (?b - ball)
                    (exists (?r2 ?h ?l - building)
                      (and
                        (game-conserved
                          (< 5 6)
                        )
                        (exists (?b5 - (either watch golfball))
                          (game-conserved
                            (< (distance ?l ?h) (distance desk ?r))
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference itemsHidingScreens
      (exists (?b4 - hexagonal_bin ?db - building)
        (then
          (once (not (not (agent_holds ?db) ) ) )
          (hold-while (not (above ?h ?d) ) (in_motion ?d) (in_motion ?b) )
        )
      )
    )
    (preference gameObjectToBin
      (exists (?b8 - (either golfball alarm_clock flat_block) ?d ?w1 - dodgeball)
        (then
          (once (in_motion ?w1) )
          (once (in_motion ?d) )
          (once (not (in_motion ?d) ) )
          (hold (adjacent desk ?w1) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (count-once-per-objects gameObjectToBin:beachball) (count gameObjectToBin:dodgeball:beachball) )
    4
  )
)
(:scoring
  (count gameObjectToBin:dodgeball:tan)
)
)



(define (game game-id-552) (:domain medium-objects-room-v1)
(:setup
  (not
    (exists (?h - cube_block ?d - hexagonal_bin ?d - book)
      (and
        (not
          (and
            (game-conserved
              (= 1 1)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h ?t ?b4 - sliding_door ?d - teddy_bear)
      (and
        (preference blockKnockedFromBuildingInBin
          (exists (?h - hexagonal_bin)
            (at-end
              (agent_holds ?d)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (total-score) )
)
(:scoring
  (count-once blockKnockedFromBuildingInBin:dodgeball:red)
)
)



(define (game game-id-553) (:domain few-objects-room-v1)
(:setup
  (forall (?b ?b1 - ball)
    (exists (?t - ball ?d - hexagonal_bin)
      (forall (?b - golfball)
        (forall (?b10 - dodgeball)
          (and
            (and
              (forall (?h - building)
                (game-optional
                  (and
                    (same_object ?b ?b)
                    (not
                      (not
                        (in_motion ?h)
                      )
                    )
                  )
                )
              )
              (exists (?c - hexagonal_bin)
                (and
                  (game-conserved
                    (object_orientation desk ?d)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o5 - beachball)
      (and
        (preference throwKnocksOverBear
          (exists (?d - dodgeball)
            (at-end
              (and
                (not
                  (on ?b ?o5)
                )
                (and
                  (in ?o5 ?c)
                  (agent_holds ?d)
                )
              )
            )
          )
        )
      )
    )
    (forall (?c3 - hexagonal_bin)
      (and
        (preference blockInTowerKnockedByDodgeball
          (exists (?f - shelf ?h - (either bridge_block pyramid_block) ?b - (either bridge_block yellow) ?c ?l3 - (either laptop dodgeball cube_block))
            (then
              (once (in ?c ?b) )
              (once (not (in_motion ?h) ) )
              (once (and (and (agent_holds ?l3) (in_motion ?h) ) (not (in ?l3 ?bl) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (external-forall-maximize (count blockInTowerKnockedByDodgeball:pink) ) )
)
(:scoring
  (* 6 2 )
)
)



(define (game game-id-554) (:domain few-objects-room-v1)
(:setup
  (exists (?l4 - hexagonal_bin)
    (or
      (forall (?h - dodgeball)
        (forall (?b2 ?r ?o ?d - hexagonal_bin ?t - hexagonal_bin)
          (game-conserved
            (not
              (in_motion ?r)
            )
          )
        )
      )
      (exists (?b - bridge_block)
        (exists (?b - cube_block)
          (game-conserved
            (agent_holds ?r)
          )
        )
      )
      (game-optional
        (and
          (in_motion ?l4)
          (adjacent bed ?l4)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballOnBedAtEnd
      (exists (?l3 - sliding_door ?t - game_object ?o5 - cube_block)
        (at-end
          (and
            (on ?d ?c)
            (equal_z_position ?d ?c)
          )
        )
      )
    )
    (preference throwBallToBin
      (exists (?l1 - block ?l ?g - hexagonal_bin)
        (then
          (hold (agent_holds ?p) )
          (once (same_type ?l ?l) )
          (once (agent_holds ?d) )
        )
      )
    )
  )
)
(:terminal
  (> (count-once-per-objects ballOnBedAtEnd:dodgeball) (count throwBallToBin:dodgeball:pink) )
)
(:scoring
  (* (+ (* 2 (count throwBallToBin:golfball) )
      (count throwBallToBin:yellow)
    )
    (* 3 (count-once-per-objects throwBallToBin:blue_dodgeball:dodgeball) )
  )
)
)



(define (game game-id-555) (:domain medium-objects-room-v1)
(:setup
  (exists (?r2 - game_object)
    (and
      (exists (?r - golfball)
        (game-optional
          (agent_holds ?b)
        )
      )
      (game-optional
        (touch ?d ?b)
      )
      (game-optional
        (object_orientation ?b2 upright)
      )
      (exists (?c - cube_block)
        (exists (?w2 - cube_block)
          (and
            (game-conserved
              (or
                (object_orientation ?r2 ?r2)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference golfballLandsInBinThroughRamp
      (exists (?b3 - block)
        (then
          (once (agent_holds ?b) )
          (once (game_over ) )
          (once-measure (and (in_motion ?b) (not (not (adjacent ?b3 ?d) ) ) (agent_holds ?b3) ) (building_size ?d) )
        )
      )
    )
  )
)
(:terminal
  (>= (count golfballLandsInBinThroughRamp:dodgeball) 300 )
)
(:scoring
  (+ (count-once-per-objects golfballLandsInBinThroughRamp:pink:pink) 15 )
)
)



(define (game game-id-556) (:domain medium-objects-room-v1)
(:setup
  (forall (?o2 - building ?c - green_triangular_ramp)
    (exists (?h - building)
      (game-conserved
        (agent_holds ?d)
      )
    )
  )
)
(:constraints
  (and
    (forall (?t - pyramid_block ?d - curved_wooden_ramp ?o2 - hexagonal_bin ?b - cube_block ?d ?d - (either golfball))
      (and
        (preference matchingBuildingBuilt
          (exists (?c - color)
            (then
              (hold (not (agent_holds ?o) ) )
              (hold-while (agent_holds ?d) (rug_color_under ?c ?tb) )
              (once (in_motion ?l1) )
            )
          )
        )
        (preference dodgeballsInPlace
          (exists (?t1 - dodgeball)
            (then
              (hold (adjacent bed rug) )
              (hold (and (toggled_on ?t1) (not (not (in_motion ?t1) ) ) (= (distance ?h ?d) (distance room_center ?bl)) ) )
              (once (not (and (< (distance ?t1 ?c) 1) (same_color ?c pink) ) ) )
            )
          )
        )
      )
    )
    (forall (?o - curved_wooden_ramp)
      (and
        (preference smallItemsInPlace
          (exists (?b - teddy_bear ?r - flat_block ?h - game_object)
            (then
              (once (agent_holds ?b) )
              (hold (agent_holds ?h) )
              (once (< (distance ?w2 ?o) 9) )
            )
          )
        )
        (preference dodgeballAndBasketballInBin
          (exists (?c2 - dodgeball ?t - ball)
            (then
              (once (open ?b) )
              (once (exists (?g - (either floor dodgeball key_chain) ?b8 ?b - ball) (in ?b ?o3) ) )
              (once (on ?o agent) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (count-once-per-objects dodgeballAndBasketballInBin:dodgeball) )
)
(:scoring
  (count matchingBuildingBuilt:basketball)
)
)



(define (game game-id-557) (:domain few-objects-room-v1)
(:setup
  (and
    (not
      (forall (?b - (either golfball blue_cube_block) ?d ?b - bridge_block)
        (exists (?b - shelf ?b - (either key_chain cylindrical_block) ?p3 - game_object ?b9 - building)
          (or
            (and
              (exists (?bl - dodgeball)
                (forall (?b4 - (either book lamp game_object cube_block))
                  (and
                    (exists (?b3 - building)
                      (not
                        (and
                          (game-conserved
                            (agent_holds ?l)
                          )
                        )
                      )
                    )
                    (not
                      (exists (?f - hexagonal_bin ?b7 - hexagonal_bin ?d - game_object)
                        (exists (?h - doggie_bed)
                          (game-conserved
                            (and
                              (not
                                (same_color ?b4 ?c)
                              )
                              (in_motion ?b)
                              (and
                                (adjacent room_center ?g)
                                (exists (?r - block)
                                  (agent_holds ?b9)
                                )
                                (agent_holds ?h)
                              )
                            )
                          )
                        )
                      )
                    )
                    (and
                      (exists (?o - hexagonal_bin ?o - hexagonal_bin)
                        (and
                          (game-conserved
                            (in_motion agent)
                          )
                          (and
                            (exists (?o - dodgeball)
                              (forall (?b2 - hexagonal_bin)
                                (and
                                  (game-conserved
                                    (or
                                      (not
                                        (adjacent ?h ?h)
                                      )
                                      (in ?bl ?o)
                                    )
                                  )
                                )
                              )
                            )
                          )
                          (forall (?h - building)
                            (not
                              (and
                                (game-conserved
                                  (exists (?c - teddy_bear)
                                    (agent_holds ?b)
                                  )
                                )
                                (game-conserved
                                  (not
                                    (adjacent ?b4 ?b5)
                                  )
                                )
                                (and
                                  (exists (?b1 - hexagonal_bin ?h - building)
                                    (game-optional
                                      (not
                                        (forall (?b - dodgeball ?o - cube_block ?h - hexagonal_bin)
                                          (< 1 (distance ?d ?d))
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                      (forall (?o1 - cube_block)
                        (exists (?b9 - shelf)
                          (and
                            (game-conserved
                              (not
                                (agent_holds ?b4)
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
              (game-conserved
                (on ?b9 ?d)
              )
              (forall (?s - pillow ?l - red_pyramid_block ?b5 ?b7 ?c5 - watch)
                (exists (?h - ball)
                  (forall (?r - dodgeball)
                    (game-optional
                      (not
                        (and
                          (not
                            (and
                              (agent_holds ?r)
                              (not
                                (in ?c5 ?b)
                              )
                            )
                          )
                          (and
                            (agent_holds ?d)
                            (rug_color_under ?r ?b5)
                          )
                          (in_motion ?t)
                          (game_start )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
    (and
      (exists (?b4 - dodgeball)
        (exists (?b - hexagonal_bin)
          (game-conserved
            (in_motion ?b4)
          )
        )
      )
      (and
        (and
          (and
            (exists (?b ?d - beachball ?h - hexagonal_bin)
              (game-optional
                (in_motion bed)
              )
            )
            (exists (?o - hexagonal_bin ?d ?c4 - game_object)
              (forall (?b4 - game_object)
                (game-conserved
                  (not
                    (in_motion ?b)
                  )
                )
              )
            )
          )
        )
      )
      (forall (?f - teddy_bear)
        (exists (?c - hexagonal_bin ?h - cube_block ?c2 - building)
          (and
            (game-conserved
              (and
                (on agent ?c2)
                (agent_holds ?b5)
              )
            )
          )
        )
      )
    )
    (exists (?o2 - (either laptop pen))
      (and
        (exists (?b2 - cube_block)
          (forall (?l1 - hexagonal_bin)
            (game-optional
              (in ?r ?o2)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference baseBlockInTowerAtEnd
      (exists (?f - chair)
        (then
          (once (and (on ?t ?f) (in_motion ?o) (object_orientation ?g sideways) ) )
          (hold (in_motion ?f) )
          (once (not (not (agent_holds ?f) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ 1 10 )
    2
  )
)
(:scoring
  (* (- (count baseBlockInTowerAtEnd:pink) (- (- 100 (count-once-per-objects baseBlockInTowerAtEnd:golfball) ) )
    )
  )
)
)



(define (game game-id-558) (:domain few-objects-room-v1)
(:setup
  (not
    (not
      (game-conserved
        (in agent agent)
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToDoggieBedOffWall
      (exists (?b - dodgeball ?c4 - game_object)
        (at-end
          (not
            (and
              (touch ?l2 ?b)
              (in_motion agent)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (> 100 5 )
    )
  )
)
(:scoring
  (count-measure throwBallToDoggieBedOffWall:blue_cube_block)
)
)



(define (game game-id-559) (:domain few-objects-room-v1)
(:setup
  (forall (?d - teddy_bear)
    (forall (?s - doggie_bed ?d - ball)
      (and
        (or
          (game-conserved
            (in_motion ?d)
          )
          (and
            (forall (?b - (either pink pyramid_block))
              (game-conserved
                (not
                  (on ?d ?d)
                )
              )
            )
            (game-conserved
              (and
                (agent_holds agent)
                (< (distance desk ?h) 6)
              )
            )
            (game-conserved
              (not
                (exists (?b8 - teddy_bear)
                  (in_motion ?d)
                )
              )
            )
          )
          (and
            (and
              (game-conserved
                (same_color ?d ?d)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockThrowAttempt
      (exists (?h ?r - chair ?l4 - chair)
        (then
          (hold-while (and (not (in_motion ?l4) ) (is_setup_object ?b) ) (in_motion ?d) (and (object_orientation ?l4 sideways) (on ?h ?r) ) )
          (hold (in_motion ?b) )
          (hold (same_color ?bl pink) )
        )
      )
    )
    (preference throwToBin
      (exists (?bl - golfball)
        (then
          (once-measure (or (on ?bl ?bl) (and (forall (?ob - (either dodgeball dodgeball)) (same_color ?t ?bl) ) (equal_x_position ?bl ?bl) ) ) (distance agent ?d) )
          (once (or (agent_holds floor) (or (not (in_motion ?b) ) ) ) )
          (once (open ?bl) )
        )
      )
    )
    (preference throwAttempt
      (exists (?h - wall)
        (then
          (once (in_motion ?d) )
          (hold (agent_holds ?c) )
          (hold (not (agent_holds ?o) ) )
        )
      )
    )
    (forall (?d ?b3 - building ?h - cube_block)
      (and
        (preference itemsBroken
          (exists (?o ?l ?g - block ?b4 - dodgeball)
            (then
              (once (agent_holds floor) )
              (once (adjacent ?w2 ?h) )
              (hold (in ?c ?b4) )
            )
          )
        )
      )
    )
    (forall (?g - wall ?t - cube_block)
      (and
        (preference throwAttemptFromDoor
          (then
            (once (and (or (in ?t ?t) (and (agent_holds rug) (in_motion ?t) ) (in_motion ?t) (adjacent_side ?t ?t ?b front) ) (and (exists (?c4 - cube_block ?b2 - building) (agent_holds bed) ) (agent_holds ?s) ) (on bed ?t) (agent_holds ?t) (not (and (agent_holds ?h) (and (and (on ?t ?t) (not (not (and (touch ?t ?c2) (not (agent_holds ?d) ) ) ) ) ) (exists (?l2 - (either laptop book key_chain)) (not (not (not (in_motion ?b) ) ) ) ) ) (not (adjacent east_sliding_door ?t) ) (agent_holds ?g) ) ) (and (or (on ?t ?b) (agent_holds ?d) ) (and (agent_holds ?t) (and (in ?t ?t) (adjacent_side west_wall front ?t) ) ) ) (and (and (on agent ?t) (and (in_motion green_golfball) (in_motion ?o) ) ) (on ?t ?t) ) ) )
            (hold (agent_holds ?d) )
            (hold (is_setup_object ?d) )
          )
        )
      )
    )
  )
)
(:terminal
  (= (count blockThrowAttempt:hexagonal_bin) (* 50 (count-once-per-objects throwAttempt:pink_dodgeball) )
  )
)
(:scoring
  (count-once-per-objects throwAttemptFromDoor:beachball)
)
)



(define (game game-id-560) (:domain few-objects-room-v1)
(:setup
  (forall (?h - doggie_bed)
    (exists (?r - hexagonal_bin)
      (forall (?w - teddy_bear)
        (and
          (exists (?h - golfball)
            (exists (?s - hexagonal_bin)
              (game-optional
                (not
                  (not
                    (in_motion ?h)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwKnocksBlock
      (exists (?o - cube_block ?db - cube_block ?b - (either cd yellow_cube_block) ?c4 - pillow ?h - chair)
        (at-end
          (and
            (in ?d ?d)
            (and
              (in_motion ?h)
              (not
                (and
                  (touch ?h ?h)
                  (same_type ?h ?h)
                  (not
                    (not
                      (on ?h ?c)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
    (forall (?o - hexagonal_bin ?h - wall ?c2 - cube_block)
      (and
        (preference rollBallToBin
          (exists (?b7 - ball ?o - hexagonal_bin ?b4 - dodgeball)
            (at-end
              (and
                (not
                  (on ?b desk)
                )
                (in_motion ?c2)
                (agent_holds ?b4)
              )
            )
          )
        )
        (preference throwOverRamp
          (exists (?b10 - hexagonal_bin ?t - curved_wooden_ramp)
            (then
              (once (in_motion ?t) )
            )
          )
        )
      )
    )
    (forall (?d - hexagonal_bin ?w - pillow)
      (and
        (preference throwToBinFromOppositeWall
          (exists (?b5 - (either cylindrical_block key_chain) ?w - color)
            (then
              (once (not (on ?w ?w) ) )
              (hold (object_orientation ?w ?w) )
              (once (and (touch ?r1 ?w) (not (and (adjacent ?w ?w) (and (in_motion bed) (in_motion ?w) ) ) ) ) )
            )
          )
        )
        (preference ballInOrOnBin
          (exists (?d - game_object)
            (then
              (hold (in_motion ?b2) )
              (once (not (agent_holds ?w) ) )
              (hold (touch ?d ?l4) )
            )
          )
        )
      )
    )
    (forall (?d - hexagonal_bin)
      (and
        (preference objectLandsInBin
          (exists (?h - tan_cube_block)
            (then
              (once (and (is_setup_object ?d) (forall (?s - game_object) (adjacent ?h ?h) ) (agent_holds ?l) ) )
              (hold (not (in_motion ?d) ) )
              (hold (adjacent bed ?o) )
            )
          )
        )
      )
    )
    (preference blockThrowAttempt
      (exists (?c1 - hexagonal_bin)
        (then
          (hold-while (agent_holds ?c1) (< 8 (distance desk ?c1)) )
          (once (agent_holds ?c1) )
          (hold-while (in ?c ?d) (and (and (on ?c1 ?b) (and (in_motion ?c1) (not (in_motion rug) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= 5 (+ 10 (- 4 )
        (count ballInOrOnBin:red_pyramid_block)
        -10
        (+ 15 5 (+ 5 1 )
        )
      )
    )
    (> (count-once throwOverRamp:dodgeball:golfball) (+ (+ (count-once throwOverRamp:doggie_bed) (* (+ (count-once objectLandsInBin:hexagonal_bin:dodgeball) (external-forall-maximize (count-overlapping throwOverRamp:dodgeball) ) )
            1
          )
        )
        2
      )
    )
  )
)
(:scoring
  (+ (* (- (external-forall-minimize (external-forall-maximize (* (- (count objectLandsInBin:dodgeball:dodgeball) )
              180
            )
          )
        )
      )
      (* (count blockThrowAttempt:hexagonal_bin) 100 )
    )
    8
  )
)
)



(define (game game-id-561) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (forall (?o ?b4 - curved_wooden_ramp)
        (exists (?r2 - golfball)
          (game-conserved
            (and
              (in_motion ?b3)
              (in_motion ?r2)
              (agent_holds ?o)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?w1 - pyramid_block ?h - pillow ?l3 - beachball)
      (and
        (preference pillowThrownToDoggieBed
          (exists (?b - hexagonal_bin)
            (then
              (once (and (agent_holds bed) (on ?o ?l) (in ?l3 ?d) ) )
              (hold (and (and (< 1 (distance ?b ?l3)) (not (in floor ?b) ) ) (same_color ?p ?l3) ) )
              (hold-while (exists (?o - cylindrical_block) (and (in_motion ?l) (not (and (adjacent ?c ?o) (or (or (exists (?b - game_object ?d - building) (not (not (same_object ?o ?l3) ) ) ) (on ?bl ?b) (same_color ?c blue) ) (not (in ?b ?d) ) ) ) ) ) ) (= (distance ?h ?d) 8) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (count-once-per-objects pillowThrownToDoggieBed:pink) )
)
(:scoring
  (count-once pillowThrownToDoggieBed)
)
)



(define (game game-id-562) (:domain few-objects-room-v1)
(:setup
  (forall (?h - beachball)
    (game-conserved
      (on desk ?h)
    )
  )
)
(:constraints
  (and
    (preference dodgeballAndBasketballInBin
      (exists (?b6 - (either doggie_bed teddy_bear))
        (then
          (once (game_over ) )
          (hold (on ?b6 pink_dodgeball) )
          (once (agent_holds ?t) )
        )
      )
    )
    (preference throwBallToBin
      (exists (?b - chair)
        (then
          (once (equal_z_position ?b ?b) )
          (once (agent_holds ?b) )
          (once (in_motion ?b2) )
        )
      )
    )
    (preference ballThrownIntoTarget
      (exists (?t - hexagonal_bin ?c6 ?b - pillow)
        (then
          (once (agent_holds ?r) )
          (hold-while (not (in_motion ?b2) ) (and (exists (?g - block ?p - (either tall_cylindrical_block desktop) ?l3 - hexagonal_bin) (on ?r ?c6) ) (< 4 9) ) (not (not (on ?b ?r) ) ) (> (distance ?c6 ?c6) 1) )
          (hold (not (touch ?b floor) ) )
        )
      )
    )
    (preference cubeBlockInBuilding
      (exists (?f - (either triangle_block cellphone) ?g - doggie_bed)
        (at-end
          (and
            (not
              (on ?c ?g)
            )
            (on ?c ?d)
          )
        )
      )
    )
    (forall (?b8 - dodgeball)
      (and
        (preference baseBlockInTowerAtEnd
          (exists (?d - hexagonal_bin)
            (then
              (hold (not (in_motion rug) ) )
              (hold (in ?b8 ?d) )
              (once (not (in ?c3 ?d) ) )
            )
          )
        )
        (preference objectToBinOnFirstTry
          (exists (?h - ball)
            (at-end
              (and
                (not
                  (and
                    (not
                      (= 1 10)
                    )
                    (in_motion ?h)
                    (agent_holds ?c)
                  )
                )
                (not
                  (agent_holds ?p)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< (count-once dodgeballAndBasketballInBin:dodgeball) (count throwBallToBin:orange:red:pink) )
)
(:scoring
  (external-forall-minimize
    (+ (count baseBlockInTowerAtEnd:hexagonal_bin) (count-same-positions throwBallToBin:dodgeball) (external-forall-maximize (count-once-per-objects dodgeballAndBasketballInBin:orange) ) (count-same-positions cubeBlockInBuilding:red) 5 (count throwBallToBin:yellow) )
  )
)
)



(define (game game-id-563) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - cylindrical_block)
      (and
        (exists (?o - hexagonal_bin)
          (game-conserved
            (agent_holds ?t)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockFromRugToDesk
      (exists (?h - hexagonal_bin)
        (then
          (hold (and (not (< (distance ?b1 agent) 2) ) (on ?h ?c) ) )
          (once (in_motion floor) )
          (once (open ?h) )
          (hold (adjacent ?h ?h) )
        )
      )
    )
  )
)
(:terminal
  (> (count-once-per-objects blockFromRugToDesk:golfball) (* (+ 3 (count-once-per-external-objects blockFromRugToDesk:pink_dodgeball:basketball) )
      (+ (count blockFromRugToDesk:yellow:beachball) (* 50 2 )
      )
    )
  )
)
(:scoring
  (+ (count blockFromRugToDesk:blue_dodgeball) (count-once-per-objects blockFromRugToDesk:beachball:tall_cylindrical_block) )
)
)



(define (game game-id-564) (:domain few-objects-room-v1)
(:setup
  (exists (?b8 - (either cube_block hexagonal_bin red))
    (exists (?w - dodgeball)
      (forall (?r1 - ball)
        (and
          (forall (?r2 - curved_wooden_ramp)
            (forall (?o5 - chair ?b ?d - ball)
              (exists (?d - building ?l3 - dodgeball ?p - golfball)
                (and
                  (exists (?w1 - dodgeball)
                    (game-conserved
                      (adjacent_side ?w1 left ?h)
                    )
                  )
                  (game-optional
                    (or
                      (not
                        (not
                          (touch ?d ?w1)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballFromDeskToTarget
      (exists (?t - golfball)
        (then
          (once (>= 7 0) )
          (once (< 2 (distance ?h ?t)) )
          (once (not (above ?d ?w2) ) )
        )
      )
    )
  )
)
(:terminal
  (<= 3 1 )
)
(:scoring
  (+ 1 (count dodgeballFromDeskToTarget:basketball) )
)
)



(define (game game-id-565) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (on ?d ?b)
  )
)
(:constraints
  (and
    (forall (?s - hexagonal_bin)
      (and
        (preference dodgeballFromRugToBin
          (exists (?t - game_object)
            (then
              (once (on ?d ?t) )
              (once (in_motion ?t) )
              (hold (adjacent ?t ?s) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* (* (count dodgeballFromRugToBin:basketball:dodgeball:pink) (* (count dodgeballFromRugToBin:yellow) (count-unique-positions dodgeballFromRugToBin:yellow_pyramid_block) (count dodgeballFromRugToBin:golfball:pink_dodgeball) 6 (* 4 20 )
            (* 5 20 )
            (count dodgeballFromRugToBin:dodgeball)
            (count-once dodgeballFromRugToBin:yellow)
            (count-once-per-objects dodgeballFromRugToBin:yellow)
          )
        )
        1
      )
      (total-score)
    )
    (> (/ 2 5 ) 6 )
  )
)
(:scoring
  (* (* (count dodgeballFromRugToBin:golfball) 15 )
    (* (count-longest dodgeballFromRugToBin) 180 )
  )
)
)



(define (game game-id-566) (:domain many-objects-room-v1)
(:setup
  (forall (?h - game_object ?x - hexagonal_bin)
    (and
      (exists (?d - shelf)
        (forall (?b - doggie_bed ?w1 - game_object)
          (game-conserved
            (in_motion ?r)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - (either cellphone teddy_bear))
      (and
        (preference woodenBlockMovedFromRugToDesk
          (exists (?b - dodgeball ?h - hexagonal_bin)
            (then
              (once (agent_holds ?h) )
              (hold (in ?d ?o1) )
            )
          )
        )
      )
    )
    (preference blockThrowAttempt
      (exists (?b3 - cube_block)
        (then
          (once (same_type ?b3 block) )
          (once (adjacent ?b3 ?b3) )
          (hold (and (not (agent_holds ?b3) ) (not (not (same_color ?b3 ?tb) ) ) (in ?b3 ?g) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (total-score) )
)
(:scoring
  (count-once-per-objects blockThrowAttempt:beachball:purple)
)
)



(define (game game-id-567) (:domain many-objects-room-v1)
(:setup
  (forall (?b6 - cube_block)
    (and
      (game-optional
        (on ?b6 ?ob)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownHitsAgent
      (exists (?h - wall)
        (then
          (once (or (and (on ?b3 ?d) (and (same_color ?ob ?c) (and (and (on ?c1 ?h) (same_color ?h ?h) ) (agent_holds ?o) ) ) ) (agent_holds ?h) (agent_holds ?d) ) )
          (hold (in_motion ?o1) )
          (once (touch floor ?g) )
        )
      )
    )
    (forall (?c - ball)
      (and
        (preference throwAttempt
          (exists (?h ?g ?b1 ?r2 ?w ?c - ball)
            (then
              (hold (in_motion agent) )
              (once (between ?d ?d ?r2) )
              (once (in ?o ?d) )
            )
          )
        )
        (preference blockInTowerAtEnd
          (exists (?h - hexagonal_bin)
            (at-end
              (agent_crouches )
            )
          )
        )
        (preference blindsOpened
          (exists (?w1 - (either tall_cylindrical_block) ?h - hexagonal_bin)
            (then
              (once (in_motion ?d) )
              (once (on ?c ?d) )
              (hold (not (forall (?c - dodgeball) (same_color ?b5 blue) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count blindsOpened:dodgeball) 10 (* 5 (count throwAttempt:orange:yellow) )
    )
    (+ 3 (count-shortest blindsOpened:triangle_block) )
  )
)
(:scoring
  (* 8 )
)
)



(define (game game-id-568) (:domain many-objects-room-v1)
(:setup
  (forall (?b - hexagonal_bin)
    (game-conserved
      (and
        (in_motion ?g)
        (agent_holds ?d)
      )
    )
  )
)
(:constraints
  (and
    (forall (?tb - game_object ?bl - (either cellphone top_drawer))
      (and
        (preference itemsBroken
          (exists (?t - curved_wooden_ramp ?o - dodgeball)
            (then
              (once (not (in_motion ?o) ) )
              (once (or (faces ?bl ?o) (exists (?b - cube_block) (in_motion ?c) ) ) )
            )
          )
        )
      )
    )
    (preference ballInOrOnBin
      (exists (?h ?c - cube_block ?h - hexagonal_bin)
        (then
          (once (agent_holds ?r) )
          (hold (in ?h ?h) )
          (hold (faces ?h ?h) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ 2 (* (* (* (count-once ballInOrOnBin:yellow) (* (* (* 0 20 )
                (- (count itemsBroken:yellow:dodgeball) )
              )
              2
            )
          )
          (* (count ballInOrOnBin:side_table) 3 (count ballInOrOnBin:green) (count ballInOrOnBin) )
        )
        (count itemsBroken:block)
      )
    )
    2
  )
)
(:scoring
  (* 5 (count-once-per-objects ballInOrOnBin:blue_cube_block) )
)
)



(define (game game-id-569) (:domain few-objects-room-v1)
(:setup
  (forall (?c - (either dodgeball cellphone))
    (forall (?r1 ?c - dodgeball)
      (game-conserved
        (in_motion rug)
      )
    )
  )
)
(:constraints
  (and
    (preference laptopAndBookInPlace
      (exists (?h - hexagonal_bin)
        (then
          (once (<= 0 (distance ?w2 ?d)) )
          (once (agent_holds ?h) )
          (hold (and (in_motion ?h) (in_motion ?d) ) )
        )
      )
    )
    (forall (?b ?o - dodgeball ?d - cylindrical_block ?ob - chair)
      (and
        (preference dodgeballsInPlace
          (exists (?o1 - dodgeball)
            (then
              (once (not (in_motion ?o1) ) )
              (hold (in ?c3 ?ob) )
              (once (< (distance_side bed back ?b) 1) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (and
      (< (count-once-per-objects laptopAndBookInPlace:basketball:wall) (total-time) )
      (> (count laptopAndBookInPlace:pink:doggie_bed) (total-score) )
      (or
        (or
          (>= 3 5 )
          (>= (count laptopAndBookInPlace:green:basketball) (total-score) )
          (>= 10 (* 6 (count laptopAndBookInPlace:red:tan) )
          )
        )
      )
    )
  )
)
(:scoring
  (* (* (count dodgeballsInPlace:red) 1 (* (* (count laptopAndBookInPlace:dodgeball) (* (count-once-per-objects laptopAndBookInPlace:basketball) 1 )
        )
        10
        8
      )
      (count-once-per-objects laptopAndBookInPlace:doggie_bed)
    )
    30
    (- 10 )
    (count-once-per-objects dodgeballsInPlace:blue_dodgeball:golfball)
    (count-once laptopAndBookInPlace:blue:blue_dodgeball)
    (count dodgeballsInPlace:golfball)
  )
)
)



(define (game game-id-570) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (agent_holds ?b)
  )
)
(:constraints
  (and
    (forall (?tb - chair)
      (and
        (preference ballThrownToBed
          (exists (?d - building)
            (then
              (once (broken ?tb) )
              (once (not (not (on bed desk) ) ) )
              (hold (< 1 0) )
            )
          )
        )
        (preference throwFromDoorToBin
          (exists (?c2 - drawer)
            (then
              (once (or (and (not (in ?d ?d) ) (is_setup_object ?c2) (and (agent_holds ?c2) (and (in_motion ?d) (same_color door blue) ) ) ) (on ?c2 ?r) ) )
              (once (and (in_motion desk) (in_motion ?b) (not (agent_holds ?o5) ) ) )
              (once (in_motion ?bl) )
            )
          )
        )
      )
    )
    (preference dodgeballFromRugToBin
      (exists (?h - (either laptop cylindrical_block wall))
        (at-end
          (touch ?h ?h)
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (>= (count-once throwFromDoorToBin:dodgeball:blue_cube_block) (total-score) )
      (or
        (>= (+ (* (count-once dodgeballFromRugToBin:beachball) 5 )
            (count-once-per-objects dodgeballFromRugToBin:red)
          )
          (total-score)
        )
        (or
          (> 3 (total-score) )
          (or
            (and
              (< (count-once-per-objects ballThrownToBed:dodgeball) 10 )
              (>= (total-score) (total-score) )
              (>= 2 (total-time) )
            )
            (not
              (and
                (< 15 3 )
              )
            )
          )
        )
        (or
          (or
            (>= 8 20 )
            (>= (count throwFromDoorToBin:rug) (count-once-per-objects throwFromDoorToBin:dodgeball:orange:basketball) )
            (>= (count-once throwFromDoorToBin:golfball) 2 )
            (> (count-once-per-objects ballThrownToBed:basketball) (count-shortest dodgeballFromRugToBin:hexagonal_bin) )
          )
          (< (total-score) (count dodgeballFromRugToBin:cylindrical_block) )
        )
      )
    )
  )
)
(:scoring
  (- 6 )
)
)



(define (game game-id-571) (:domain medium-objects-room-v1)
(:setup
  (exists (?d - game_object ?h ?h ?c3 ?r1 - cube_block)
    (game-optional
      (in_motion ?h)
    )
  )
)
(:constraints
  (and
    (forall (?d - dodgeball)
      (and
        (preference ballThrownToWallToAgent
          (exists (?t - hexagonal_bin)
            (at-end
              (not
                (adjacent agent ?d)
              )
            )
          )
        )
        (preference throwBallFromOtherBallToBin
          (exists (?h - game_object ?b - hexagonal_bin)
            (at-end
              (forall (?h - (either side_table book cylindrical_block))
                (and
                  (agent_holds ?b)
                  (agent_holds ?g)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (> 7 (count ballThrownToWallToAgent:orange:hexagonal_bin) )
    (>= 6 (- (+ (external-forall-maximize (* (* 4 (* (* 3 (count throwBallFromOtherBallToBin:yellow) )
                  3
                )
              )
              1
              (- 3 )
              (* (count throwBallFromOtherBallToBin:pink_dodgeball) (external-forall-minimize (count-once ballThrownToWallToAgent:orange) ) )
            )
          )
          5
        )
      )
    )
  )
)
(:scoring
  (count-once-per-objects ballThrownToWallToAgent:book)
)
)



(define (game game-id-572) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (not
      (in_motion ?b5)
    )
  )
)
(:constraints
  (and
    (forall (?c - dodgeball)
      (and
        (preference ballToBinFromBed
          (exists (?s - game_object ?g - (either bridge_block basketball cylindrical_block))
            (then
              (once (and (adjacent ?c ?c) (in_motion ?g) (and (and (and (not (not (and (exists (?c6 - building) (in_motion ?c6) ) (adjacent_side room_center front_left_corner ?p) ) ) ) (in_motion ?c) ) (not (not (in_motion ?g) ) ) (in_motion ?o) (in_motion ?d) ) (on ?o ?g) ) (and (same_type ?h block) (exists (?d - pillow) (on ?g ?g) ) ) ) )
              (hold (is_setup_object ?g) )
              (once (agent_holds ?b) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< (+ (count ballToBinFromBed:orange) 4 )
    8
  )
)
(:scoring
  (count ballToBinFromBed:pink_dodgeball)
)
)



(define (game game-id-573) (:domain many-objects-room-v1)
(:setup
  (exists (?h - ball ?tb - (either alarm_clock block))
    (forall (?r - game_object)
      (game-optional
        (not
          (is_setup_object ?tb)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?t1 - block)
      (and
        (preference dodgeballHitsPillowWithoutTouchingBlock
          (exists (?b5 - cube_block)
            (then
              (once (and (in_motion ?b5) (in_motion ?b5) (agent_holds ?b5) ) )
              (once (adjacent ?h ?b) )
              (once (on ?t1 ?b5) )
            )
          )
        )
        (preference gameObjectToBin
          (exists (?l ?g - game_object)
            (then
              (hold (in_motion ?l) )
              (once (<= 1 1) )
              (once (and (object_orientation ?t1 sideways) (> 6 5) ) )
            )
          )
        )
      )
    )
    (forall (?s - (either cube_block cube_block pen))
      (and
        (preference watchOnShelf
          (exists (?g - (either cube_block blue_cube_block dodgeball))
            (at-end
              (not
                (= 9 1)
              )
            )
          )
        )
        (preference greenObjectMovedToRoomCenter
          (exists (?r - teddy_bear ?h - hexagonal_bin)
            (then
              (once (in_motion ?o) )
            )
          )
        )
      )
    )
    (forall (?d - cube_block)
      (and
        (preference ballToBinFromBed
          (exists (?d - block)
            (then
              (once (and (is_setup_object ?d) (not (and (exists (?b3 - hexagonal_bin ?h - pyramid_block) (not (and (not (agent_holds ?b) ) (<= 1 1) ) ) ) (not (and (not (not (agent_holds ?d) ) ) (and (and (and (and (not (not (agent_holds ?d) ) ) (on ?b ?d) ) (and (and (not (on ?d ?d) ) (on ?g ?h) ) (agent_holds ?b) ) ) (= 9 3) (in ?b ?d) (on ?d ?d) (on ?d ?c3) ) (not (agent_holds ?d) ) (and (on ?d ?d) (not (not (in_motion ?r) ) ) ) ) (and (not (and (= (distance ?h ?h) 0.5) (and (>= 1 (distance agent ?d)) (open ?b) ) (in_motion ?d) (not (adjacent agent ?o1) ) ) ) (in_motion ?d) ) ) ) ) ) ) )
              (once (and (agent_holds ?d) (< (distance ?d ?d) (distance_side ?w1 ?d ?d)) ) )
              (hold (game_over ) )
            )
          )
        )
        (preference throwAttemptFromBehindBlock
          (exists (?b - block)
            (then
              (once-measure (>= (distance_side ?d ?d ?d front) (distance ?h ?h)) (x_position ?p) )
              (once (in_motion ?b) )
              (once (< 1 5) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (<= (count dodgeballHitsPillowWithoutTouchingBlock:basketball) (count throwAttemptFromBehindBlock:red_pyramid_block) )
    (<= 3 2 )
  )
)
(:scoring
  (count watchOnShelf:pink)
)
)



(define (game game-id-574) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (toggled_on rug)
  )
)
(:constraints
  (and
    (preference throwInBin
      (exists (?h - hexagonal_bin)
        (then
          (hold (same_type ?h ?l2) )
          (once (in ?h ?h) )
          (hold (not (not (not (and (and (not (in_motion ?h) ) (not (and (and (not (not (adjacent ?h ?h) ) ) (in_motion ?h) (and (not (agent_holds ?c1) ) (> (distance ?h ?h) (distance room_center ?d)) ) ) (and (not (on ?l ?o) ) (not (exists (?o2 - dodgeball ?b - (either laptop cube_block teddy_bear) ?h ?w1 - teddy_bear ?o - chair) (not (in_motion ?d) ) ) ) (in ?h ?b) (on ?b ?b) (not (and (touch ?g bed) ) ) (not (exists (?d1 - block) (agent_holds ?d) ) ) ) ) ) ) (on west_wall ?h) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= 3 15 )
      (> (count-increasing-measure throwInBin:purple) 10 )
    )
    (>= 10 3 )
  )
)
(:scoring
  (count-once-per-objects throwInBin:dodgeball)
)
)



(define (game game-id-575) (:domain few-objects-room-v1)
(:setup
  (forall (?f - dodgeball)
    (forall (?c6 - game_object)
      (forall (?l4 - ball ?r - hexagonal_bin)
        (game-conserved
          (adjacent room_center ?c6)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballKnocksBlockFromRug
      (exists (?h - (either dodgeball alarm_clock floor))
        (then
          (once (not (in_motion ?d) ) )
          (hold (and (not (not (between ?d ?b ?g) ) ) (not (in floor ?b) ) ) )
          (hold (adjacent desk ?t) )
          (once (and (and (agent_holds ?b) ) (and (agent_holds ?b) (exists (?p1 - (either book desktop)) (and (and (in_motion ?p1) (in_motion ?s) ) (agent_holds agent) ) ) (and (rug_color_under ?l ?h) (same_type ?h ?h) ) (and (exists (?c3 - hexagonal_bin) (in_motion ?h) ) (or (agent_holds ?bl) (and (adjacent room_center ?h) (exists (?c - pyramid_block) (and (not (on ?h ?c) ) (agent_holds ?o) ) ) (agent_holds ?o) (on ?h ?o) ) ) (and (= 0.5 (distance ?h ?r)) (in_motion ?c2) ) ) ) ) )
        )
      )
    )
    (forall (?l2 - hexagonal_bin ?h - ball)
      (and
        (preference throwKnocksBlock
          (exists (?o4 ?h - hexagonal_bin ?b - game_object ?b4 - pyramid_block)
            (then
              (hold (equal_z_position ?b2 ?b) )
              (once (adjacent_side ?h ?h rug) )
            )
          )
        )
        (preference ballThrownToBed
          (exists (?c - dodgeball ?h - dodgeball)
            (at-end
              (and
                (and
                  (not
                    (agent_holds ?h)
                  )
                  (equal_z_position agent ?o)
                  (not
                    (not
                      (or
                        (equal_x_position bed ?h)
                        (not
                          (same_color ?l ?h)
                        )
                      )
                    )
                  )
                )
                (and
                  (in_motion ?b)
                  (not
                    (> (distance ?h ?t) (distance desk ?r))
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (count ballKnocksBlockFromRug:basketball) (total-score) )
)
(:scoring
  (count ballThrownToBed)
)
)



(define (game game-id-576) (:domain many-objects-room-v1)
(:setup
  (exists (?l2 ?b ?h - chair ?l2 - curved_wooden_ramp)
    (and
      (exists (?s - chair)
        (and
          (and
            (forall (?s - dodgeball)
              (exists (?d2 - (either floor cylindrical_block blue_cube_block) ?o - building ?h - book)
                (not
                  (and
                    (not
                      (or
                        (game-conserved
                          (not
                            (and
                              (equal_z_position room_center ?l2)
                            )
                          )
                        )
                        (and
                          (and
                            (forall (?d - chair)
                              (game-conserved
                                (in ?s ?b)
                              )
                            )
                            (game-optional
                              (on ?h desk)
                            )
                          )
                          (exists (?w1 - dodgeball)
                            (and
                              (game-conserved
                                (on ?w1 ?b)
                              )
                              (and
                                (game-optional
                                  (not
                                    (agent_holds ?w1)
                                  )
                                )
                                (not
                                  (game-conserved
                                    (rug_color_under ?d pink)
                                  )
                                )
                                (forall (?b2 - (either triangle_block laptop))
                                  (not
                                    (exists (?b4 - block ?l3 - game_object)
                                      (and
                                        (game-optional
                                          (and
                                            (and
                                              (on ?l2 ?l3)
                                              (and
                                                (not
                                                  (adjacent ?l2 ?w1)
                                                )
                                                (in ?o ?h)
                                                (agent_holds ?h)
                                                (agent_holds floor)
                                              )
                                              (adjacent agent agent)
                                            )
                                            (in_motion ?l2)
                                          )
                                        )
                                        (and
                                          (exists (?w - hexagonal_bin ?o - game_object)
                                            (game-conserved
                                              (agent_holds ?c2)
                                            )
                                          )
                                          (game-optional
                                            (in_motion ?l2)
                                          )
                                          (game-optional
                                            (in ?w1 ?l1)
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                              (game-conserved
                                (faces ?s ?s)
                              )
                              (game-optional
                                (same_color ?w1 pink)
                              )
                            )
                          )
                          (game-optional
                            (and
                              (in_motion ?l2)
                              (in_motion ?d)
                              (and
                                (object_orientation ?l2 upright)
                                (and
                                  (on ?l2 ?d)
                                  (in_motion ?l4)
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                    (game-optional
                      (not
                        (and
                          (and
                            (in_motion ?l2)
                            (not
                              (agent_holds ?l2)
                            )
                          )
                          (on ?h ?h)
                        )
                      )
                    )
                    (forall (?b4 - cube_block)
                      (or
                        (exists (?b - (either cellphone key_chain desktop))
                          (and
                            (exists (?b - hexagonal_bin ?o - curved_wooden_ramp)
                              (game-conserved
                                (opposite ?s ?d)
                              )
                            )
                            (game-conserved
                              (not
                                (not
                                  (and
                                    (not
                                      (on ?d ?b4)
                                    )
                                    (agent_holds ?b)
                                  )
                                )
                              )
                            )
                            (not
                              (game-conserved
                                (not
                                  (in_motion ?b4)
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
          (forall (?w2 - doggie_bed)
            (and
              (game-optional
                (and
                  (in_motion agent)
                  (on ?o ?l2)
                )
              )
            )
          )
        )
      )
      (forall (?h - pyramid_block ?d - hexagonal_bin)
        (game-optional
          (agent_holds pink_dodgeball)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?bl - (either doggie_bed cube_block cube_block))
      (and
        (preference blockFromRugToDesk
          (then
            (once (and (agent_holds ?c) (object_orientation ?bl upright) ) )
            (once (on west_wall ?bl) )
            (once (in_motion ?bl) )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-overlapping blockFromRugToDesk:white) (total-score) )
)
(:scoring
  (count-once-per-objects blockFromRugToDesk:doggie_bed:beachball)
)
)



(define (game game-id-577) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds ?b)
  )
)
(:constraints
  (and
    (forall (?h - wall)
      (and
        (preference throwBallFromOtherBallToBin
          (exists (?b3 - cube_block)
            (at-end
              (in ?d ?h)
            )
          )
        )
        (preference ballRolledOnRampToRug
          (exists (?c5 - chair)
            (then
              (once (agent_holds ?c) )
              (once (on ?h ?g) )
              (once (< 4 (distance ?h ?c5)) )
            )
          )
        )
      )
    )
    (preference throwFromDoorToBin
      (exists (?o2 - cube_block ?ob - block)
        (then
          (once (in_motion ?ob) )
          (hold (in_motion ?ob) )
          (once (on ?ob ?h) )
        )
      )
    )
  )
)
(:terminal
  (> (external-forall-maximize (count-once-per-objects ballRolledOnRampToRug:hexagonal_bin) ) 18 )
)
(:scoring
  (+ (count-increasing-measure throwFromDoorToBin:pink) (count-once-per-objects ballRolledOnRampToRug:pink_dodgeball:hexagonal_bin) )
)
)



(define (game game-id-578) (:domain few-objects-room-v1)
(:setup
  (exists (?t2 - hexagonal_bin)
    (game-optional
      (in_motion ?t2)
    )
  )
)
(:constraints
  (and
    (forall (?c3 - (either side_table cellphone triangular_ramp))
      (and
        (preference throwToBinFromOppositeWall
          (exists (?p - dodgeball)
            (at-end
              (agent_holds ?b)
            )
          )
        )
        (preference binKnockedOver
          (exists (?h - pyramid_block)
            (then
              (once (in_motion ?h) )
              (once (and (adjacent bed ?l) (not (and (touch ?o ?h) (and (and (adjacent agent ?b) (agent_holds ?b) ) (on ?h ?b) (not (adjacent_side ?o1 front ?d) ) (and (not (in_motion ?c3) ) (not (in ?b1 ?h) ) (agent_holds ?r) ) ) ) ) ) )
              (hold (not (not (not (in_motion ?p3) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< (total-time) (* (* 5 0 )
      (count throwToBinFromOppositeWall:blue_pyramid_block)
    )
  )
)
(:scoring
  (* (count-once-per-objects throwToBinFromOppositeWall:dodgeball) (count-once binKnockedOver) )
)
)



(define (game game-id-579) (:domain many-objects-room-v1)
(:setup
  (forall (?r - (either dodgeball golfball) ?c4 - (either desktop cylindrical_block dodgeball))
    (game-conserved
      (not
        (not
          (or
            (and
              (in ?b ?c4)
              (agent_holds ?b)
              (and
                (in ?c4 ?c4)
                (exists (?c2 ?d ?r1 ?c1 ?c ?t2 ?b ?d ?b1 ?o5 - color ?r2 - pillow)
                  (< 9 (distance bed ?c4))
                )
              )
            )
            (not
              (not
                (and
                  (adjacent room_center ?c4)
                  (in_motion bed)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - block ?l - (either book chair) ?h - dodgeball)
      (and
        (preference smallItemsInPlace
          (exists (?h - cube_block)
            (then
              (once (and (and (not (agent_holds ?h) ) (and (in_motion ?h) (agent_holds ?h) ) ) (not (in_motion ?o2) ) ) )
              (once (in ?h ?h) )
              (hold (in_motion ?d) )
              (once (in_motion ?c) )
              (hold (and (agent_holds ?r) (in_motion ?b) ) )
            )
          )
        )
      )
    )
    (preference beachballBouncedOffRamp
      (exists (?b3 - dodgeball ?d ?l2 ?c - (either dodgeball golfball hexagonal_bin triangular_ramp book blue_cube_block cellphone))
        (then
          (once (adjacent ?l2 ?b) )
          (once (same_object ?b ?l2) )
          (hold (not (in_motion ?b3) ) )
        )
      )
    )
    (forall (?w - ball)
      (and
        (preference ballThrownToRampToBed
          (exists (?c - building ?d2 - hexagonal_bin)
            (then
              (once (> (distance ?d2 ?d) 5) )
              (once (agent_holds agent) )
              (once (adjacent_side ?w front ?h) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (total-score) )
)
(:scoring
  (* (* (count ballThrownToRampToBed:blue) (count ballThrownToRampToBed:orange:basketball:blue_dodgeball) )
    (count-once-per-external-objects smallItemsInPlace:blue_dodgeball)
  )
)
)



(define (game game-id-580) (:domain medium-objects-room-v1)
(:setup
  (forall (?d - hexagonal_bin)
    (exists (?db - pillow)
      (exists (?b3 - doggie_bed)
        (exists (?b7 - building)
          (forall (?h - cube_block ?g ?l ?d2 - hexagonal_bin)
            (exists (?o2 - hexagonal_bin ?c ?c2 ?b1 ?b ?s ?d - dodgeball)
              (game-optional
                (and
                  (= (distance_side agent left ?b) 1)
                  (and
                    (agent_holds bed)
                    (in ?h ?o)
                  )
                  (in_motion ?b)
                  (not
                    (in_motion ?b)
                  )
                  (and
                    (not
                      (is_setup_object ?c2)
                    )
                    (in_motion ?c)
                    (and
                      (in ?w2 ?c)
                      (> (distance_side ?d2 left ?s) (building_size ?b))
                    )
                  )
                  (agent_holds ?b)
                  (and
                    (not
                      (and
                        (and
                          (not
                            (and
                              (agent_holds ?d)
                              (touch ?b1 ?d)
                            )
                          )
                          (adjacent ?s ?b)
                          (not
                            (agent_holds ?o)
                          )
                          (>= 8 1)
                        )
                        (same_object ?o ?b)
                      )
                    )
                    (and
                      (faces ?b ?b7)
                      (in_motion ?b7)
                      (not
                        (agent_holds ?c)
                      )
                      (not
                        (broken ?db)
                      )
                      (< (distance ?h ?d) 6)
                      (equal_x_position ?l ?l)
                      (touch ?l ?d2)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwTeddyOntoPillow
      (exists (?b - hexagonal_bin)
        (at-end
          (same_color ?b ?b)
        )
      )
    )
  )
)
(:terminal
  (> (total-time) (total-time) )
)
(:scoring
  (count throwTeddyOntoPillow:beachball)
)
)



(define (game game-id-581) (:domain medium-objects-room-v1)
(:setup
  (exists (?c ?g - cube_block)
    (and
      (game-conserved
        (in_motion ?b)
      )
      (exists (?d - teddy_bear ?h - (either golfball cube_block cylindrical_block))
        (game-conserved
          (agent_holds ?l)
        )
      )
      (game-conserved
        (touch ?b bed)
      )
      (and
        (and
          (forall (?h - golfball)
            (exists (?o2 ?db ?w ?o ?p2 - cube_block)
              (game-optional
                (agent_holds ?o)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c ?h - dodgeball)
      (and
        (preference throwToBin
          (exists (?h - hexagonal_bin)
            (then
              (hold (and (and (and (not (touch ?h ?h) ) (agent_holds ?l2) ) (and (open ?s) (not (in_motion ?c) ) ) ) (< 1 2) ) )
              (once (agent_holds agent) )
              (hold (and (not (and (on ?c ?b) (agent_holds ?h) ) ) ) )
            )
          )
        )
      )
    )
    (forall (?s - red_dodgeball ?b - drawer)
      (and
        (preference castleBuilt
          (exists (?h - (either pencil game_object))
            (then
              (once (agent_holds ?d) )
              (once (in_motion ?b) )
              (hold (and (adjacent desk ?b) (not (not (in_motion ?bl) ) ) (and (agent_holds ?h) (in_motion ?b) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count castleBuilt:book) (external-forall-maximize (count castleBuilt:basketball:dodgeball) ) )
)
(:scoring
  (count castleBuilt:yellow:tall_cylindrical_block)
)
)



(define (game game-id-582) (:domain few-objects-room-v1)
(:setup
  (exists (?h - dodgeball)
    (game-conserved
      (or
        (equal_z_position ?h ?c)
        (and
          (on ?b ?c)
          (not
            (agent_holds rug)
          )
          (and
            (adjacent ?h ?d)
            (not
              (< (distance ?h ?d) (distance_side ?c right ?o))
            )
            (agent_holds ?h)
          )
          (agent_holds ?h)
          (in ?h ?h)
          (in_motion ?b)
          (agent_holds ?d)
          (not
            (above ?c2 ?t2)
          )
          (>= (distance room_center ?h) 1)
          (not
            (agent_holds ?d)
          )
          (in_motion ?b)
          (= 1 4)
        )
        (agent_holds ?h)
      )
    )
  )
)
(:constraints
  (and
    (forall (?d1 - (either beachball pillow))
      (and
        (preference blockOnBlockInTowerAtEnd
          (exists (?b ?h ?d1 - hexagonal_bin)
            (then
              (hold (< (distance room_center ?b) (distance_side ?h ?b ?h)) )
              (once (on ?h ?c) )
              (once (not (>= 6 (distance door ?d)) ) )
            )
          )
        )
      )
    )
    (preference pyramidBlockAtopTowerAtEnd
      (exists (?t - (either blue_cube_block cube_block))
        (at-end
          (and
            (on ?t ?d)
            (not
              (not
                (<= 1 (distance ?h ?b))
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (> 10 (* (count blockOnBlockInTowerAtEnd:red:golfball) (+ 10 (+ (count pyramidBlockAtopTowerAtEnd:hexagonal_bin) (count-once-per-objects blockOnBlockInTowerAtEnd:dodgeball) 10 )
        )
      )
    )
  )
)
(:scoring
  (count-once-per-objects blockOnBlockInTowerAtEnd:golfball)
)
)



(define (game game-id-583) (:domain many-objects-room-v1)
(:setup
  (exists (?l4 - triangular_ramp)
    (exists (?c - red_dodgeball)
      (game-optional
        (in_motion ?l4)
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - (either wall yellow_cube_block key_chain cd credit_card))
      (and
        (preference objectInBuilding
          (exists (?h - wall)
            (then
              (hold (not (in_motion ?b) ) )
              (hold (= (distance ?h ?d) (distance_side agent front ?b1)) )
              (hold (in_motion ?h) )
            )
          )
        )
        (preference blockInTowerAtEnd
          (exists (?c - ball ?t1 - hexagonal_bin)
            (at-end
              (not
                (agent_holds pink_dodgeball)
              )
            )
          )
        )
        (preference objectToBinOnFirstTry
          (exists (?d - chair)
            (at-end
              (on ?c2 ?h)
            )
          )
        )
      )
    )
    (preference throwToRampToBin
      (exists (?b - dodgeball ?r - hexagonal_bin)
        (at-end
          (in_motion ?w1)
        )
      )
    )
  )
)
(:terminal
  (>= (* (* (* (+ (count objectToBinOnFirstTry:yellow) 1 (external-forall-maximize (* (+ (* (+ (* 30 (count blockInTowerAtEnd:basketball:green:orange) )
                      15
                    )
                    (* (+ (<= 18 (* (count objectToBinOnFirstTry:hexagonal_bin:basketball) (* (* (count objectInBuilding:dodgeball) (* (* (count-once blockInTowerAtEnd:pyramid_block) (count objectToBinOnFirstTry:orange:pink_dodgeball) )
                                  (count throwToRampToBin:basketball)
                                  (count-once-per-objects objectToBinOnFirstTry:pink)
                                  10
                                )
                                (count objectInBuilding:basketball)
                              )
                              (count-once objectToBinOnFirstTry:hexagonal_bin)
                            )
                          )
                        )
                        (count-once objectToBinOnFirstTry:tan:rug)
                      )
                      2
                    )
                  )
                  20
                )
                (count blockInTowerAtEnd:purple)
                (* (count-once-per-objects objectToBinOnFirstTry:dodgeball) (* (count blockInTowerAtEnd:side_table) (count objectToBinOnFirstTry:dodgeball) 4 (+ 5 (+ (count objectToBinOnFirstTry:beachball) (count throwToRampToBin:purple:pink) )
                    )
                    8
                    (* (count blockInTowerAtEnd:purple) (* 3 )
                    )
                  )
                )
                (- 3 )
              )
            )
            (* (* 2 (count-once-per-objects blockInTowerAtEnd:beachball) )
              (count objectToBinOnFirstTry:cube_block)
            )
          )
          (* (- (count-measure throwToRampToBin) )
            (count-once-per-objects objectToBinOnFirstTry:golfball:dodgeball)
          )
        )
        (count-once-per-objects objectToBinOnFirstTry:blue_dodgeball)
      )
      (count-longest throwToRampToBin:book)
      (count-once objectToBinOnFirstTry:green)
    )
    (total-score)
  )
)
(:scoring
  (* (+ 10 (* 5 3 )
    )
    (* (+ 50 (= (count-increasing-measure blockInTowerAtEnd:yellow_cube_block:pink_dodgeball) 20 )
      )
      (count objectInBuilding:golfball)
    )
  )
)
)



(define (game game-id-584) (:domain many-objects-room-v1)
(:setup
  (forall (?t - game_object ?b3 - ball)
    (forall (?r2 ?d ?d ?o1 ?b1 ?d2 - beachball ?g - hexagonal_bin)
      (or
        (and
          (exists (?o4 - hexagonal_bin)
            (exists (?w2 - (either triangle_block hexagonal_bin))
              (forall (?c4 - cube_block)
                (game-conserved
                  (in ?d2 ?b)
                )
              )
            )
          )
        )
        (game-conserved
          (on agent ?b)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballsInPlace
      (exists (?b3 - game_object ?c4 - dodgeball ?c - block ?l2 - (either alarm_clock))
        (then
          (once (on ?b2 bed) )
          (once (in_motion ?l2) )
          (once (adjacent ?w2 agent) )
        )
      )
    )
  )
)
(:terminal
  (>= (= (* (external-forall-maximize (count-increasing-measure dodgeballsInPlace:orange) ) 7 )
      (count-total dodgeballsInPlace)
    )
    (* 10 (>= (* (count-once-per-objects dodgeballsInPlace:blue_pyramid_block:basketball) (count-shortest dodgeballsInPlace:dodgeball) )
        9
      )
    )
  )
)
(:scoring
  (count dodgeballsInPlace:blue_dodgeball)
)
)



(define (game game-id-585) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (not
      (agent_crouches )
    )
  )
)
(:constraints
  (and
    (forall (?h - beachball)
      (and
        (preference cubeThrownToBin
          (then
            (once (agent_holds ?b) )
            (once (is_setup_object agent) )
            (hold (and (agent_holds ?d) (and (and (in_motion ?b) ) (and (in_motion ?h) (not (in ?h ?h) ) ) ) ) )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (count cubeThrownToBin:dodgeball) (total-score) )
      (< (total-time) (* (count cubeThrownToBin:hexagonal_bin:dodgeball:green) (count cubeThrownToBin:blue:blue_pyramid_block) )
      )
    )
    (>= (count cubeThrownToBin:basketball) (count cubeThrownToBin:book:yellow) )
    (or
      (> 2 (count cubeThrownToBin:basketball:dodgeball) )
      (>= 10 (* (count cubeThrownToBin:pink) (= 5 (count-once-per-objects cubeThrownToBin:dodgeball:basketball) (+ 10 (* (+ (external-forall-maximize (+ 5 (count cubeThrownToBin:golfball:yellow) 5 )
                  )
                  (+ (count-unique-positions cubeThrownToBin:yellow) (* (* (count cubeThrownToBin:dodgeball) 2 )
                      3
                    )
                  )
                  (* (count-once-per-objects cubeThrownToBin:beachball) 3 )
                  25
                  10
                  (count-once-per-objects cubeThrownToBin:basketball:dodgeball)
                )
                (external-forall-maximize
                  (count cubeThrownToBin:blue_dodgeball:yellow)
                )
              )
            )
          )
          (count-once-per-objects cubeThrownToBin:blue_cube_block)
        )
      )
    )
  )
)
(:scoring
  (* 3 (- 8 )
  )
)
)



(define (game game-id-586) (:domain few-objects-room-v1)
(:setup
  (exists (?o - shelf ?b - ball)
    (forall (?h - block)
      (or
        (forall (?h - dodgeball ?c4 - cube_block)
          (forall (?b4 - hexagonal_bin)
            (game-optional
              (not
                (on ?h ?b)
              )
            )
          )
        )
        (game-conserved
          (in_motion ?c)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectLandsInBin
      (exists (?p2 - dodgeball)
        (then
          (hold (not (not (not (in_motion ?p2) ) ) ) )
          (once (not (and (< 4 5) (touch ?p2 ?d) ) ) )
          (once-measure (agent_holds ?b2) (building_size ?o3) )
        )
      )
    )
    (preference ballThrownThroughRampAndBlocksToBin
      (exists (?r2 - block)
        (then
          (once (agent_holds ?r2) )
          (hold-while (agent_holds ?d) (adjacent ?r2 ?b) (adjacent_side desk right ?l2) (on ?r2 ?o) )
          (once (agent_holds ?r2) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (count-once-per-objects ballThrownThroughRampAndBlocksToBin:golfball) )
)
(:scoring
  (+ 5 10 )
)
)



(define (game game-id-587) (:domain medium-objects-room-v1)
(:setup
  (exists (?o5 - dodgeball)
    (game-optional
      (in_motion ?d)
    )
  )
)
(:constraints
  (and
    (preference blockPlacedInBuilding
      (exists (?c5 - game_object ?b1 - desk_shelf)
        (then
          (hold (and (not (<= (distance room_center ?b1) (distance bed ?d)) ) (in agent ?c1) ) )
          (hold (on ?b1 agent) )
          (once (and (not (on ?b1 ?b) ) (and (and (exists (?d - building) (exists (?h - triangular_ramp) (not (not (and (< 1 1) (on ?b1 ?g) ) ) ) ) ) (touch ?g ?c) ) (not (exists (?s - desk_shelf) (< 7 1) ) ) (adjacent room_center ?b) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (count-once blockPlacedInBuilding:bed:beachball) )
)
(:scoring
  (count-once blockPlacedInBuilding:hexagonal_bin)
)
)



(define (game game-id-588) (:domain few-objects-room-v1)
(:setup
  (forall (?f - hexagonal_bin)
    (game-conserved
      (on ?l1 floor)
    )
  )
)
(:constraints
  (and
    (forall (?t - hexagonal_bin)
      (and
        (preference dodgeballAndBasketballInBin
          (exists (?t - (either desktop basketball triangle_block yellow_cube_block blue_cube_block cellphone laptop))
            (at-end
              (and
                (not
                  (not
                    (in ?t ?t)
                  )
                )
              )
            )
          )
        )
        (preference objectMoved
          (exists (?l2 - curved_wooden_ramp ?b - hexagonal_bin)
            (then
              (hold-while (and (agent_holds ?b) (on ?b ?b) ) (touch ?b ?t) )
              (hold (in_motion ?b) )
              (once (and (not (on ?t ?b) ) (in ?d ?b) ) )
            )
          )
        )
        (preference objectOnBed
          (exists (?c - ball)
            (then
              (hold-while (and (and (and (on ?c ?c) (in_motion ?c) ) (not (= (distance agent ?c) (distance_side ?c front ?h)) ) ) (agent_holds ?c) ) (agent_holds ?c) )
              (hold-while (and (and (agent_holds agent) (on ?b ?c) ) (agent_holds ?b) (object_orientation ?c ?c) ) (object_orientation ?t upright) (in_motion ?t) (adjacent ?c ?d) )
              (once (and (not (and (in_motion ?b) ) ) (and (agent_holds ?t) (not (not (exists (?h - shelf ?p - ball) (between ?t ?c ?b) ) ) ) ) ) )
            )
          )
        )
      )
    )
    (preference objectInBuilding
      (exists (?h - hexagonal_bin)
        (then
          (once (agent_holds ?h) )
          (once (in_motion ?h) )
        )
      )
    )
    (preference throwBallFromOtherBallToBin
      (exists (?b - building)
        (then
          (once (not (agent_holds ?b) ) )
          (hold (adjacent ?b ?b) )
          (hold-while (same_object ?o1 ?b) (not (not (not (and (and (agent_holds ?b) (< (distance ?d ?o) 0.5) (and (in ?b floor) (and (in_motion ?b) (and (on ?b ?b) ) (same_object ?o ?b) ) ) ) (and (not (in ?o ?d) ) (touch ?b ?t) ) (agent_holds ?b) (in ?b door) (and (adjacent ?w2 ?d) (agent_holds ?d) ) (exists (?t - golfball) (not (in_motion ?b) ) ) (agent_holds ?b) (and (game_start ) (equal_z_position ?w1 ?b) ) (not (same_type ?b ?l2) ) (in ?b ?b) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (total-score) )
)
(:scoring
  (count-once-per-external-objects dodgeballAndBasketballInBin:basketball)
)
)



(define (game game-id-589) (:domain many-objects-room-v1)
(:setup
  (forall (?h - block)
    (and
      (game-conserved
        (and
          (agent_holds ?d)
          (in_motion ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference bookOnDeskShelf
      (exists (?h - hexagonal_bin)
        (then
          (once (< 3 1) )
          (once (adjacent ?d ?o) )
          (hold (agent_holds ?h) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count bookOnDeskShelf:purple) (+ 20 3 )
    )
  )
)
(:scoring
  (* 3 (* (count-once-per-objects bookOnDeskShelf:hexagonal_bin:blue_dodgeball) (external-forall-maximize (count-once-per-objects bookOnDeskShelf:blue:golfball:dodgeball) ) )
  )
)
)



(define (game game-id-590) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds ?t)
  )
)
(:constraints
  (and
    (preference itemsBroken
      (exists (?p3 - red_dodgeball ?s - teddy_bear)
        (at-end
          (agent_holds ?s)
        )
      )
    )
  )
)
(:terminal
  (>= (- (count itemsBroken:pink) )
    (count itemsBroken:doggie_bed)
  )
)
(:scoring
  (count itemsBroken:beachball)
)
)



(define (game game-id-591) (:domain few-objects-room-v1)
(:setup
  (exists (?t - hexagonal_bin)
    (exists (?b - dodgeball)
      (not
        (and
          (exists (?o1 - cube_block)
            (or
              (not
                (and
                  (forall (?h - (either pillow dodgeball doggie_bed))
                    (exists (?h - dodgeball)
                      (forall (?p2 - hexagonal_bin)
                        (game-optional
                          (not
                            (and
                              (and
                                (not
                                  (on ?o ?c)
                                )
                                (adjacent agent ?p2)
                              )
                              (in_motion ?b)
                              (not
                                (in_motion ?p2)
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                  (not
                    (exists (?b1 - yellow_pyramid_block)
                      (game-optional
                        (in_motion south_wall)
                      )
                    )
                  )
                )
              )
              (forall (?w - pillow ?p - dodgeball)
                (game-conserved
                  (and
                    (in_motion ?t)
                    (not
                      (not
                        (rug_color_under ?t ?c)
                      )
                    )
                    (in ?p ?g)
                  )
                )
              )
              (exists (?h - blue_pyramid_block ?r - blinds)
                (and
                  (exists (?c4 - ball ?c - cube_block ?b - game_object)
                    (and
                      (not
                        (forall (?o2 ?p2 ?b7 - cube_block)
                          (game-conserved
                            (and
                              (not
                                (and
                                  (not
                                    (and
                                      (not
                                        (in_motion floor)
                                      )
                                      (and
                                        (>= 5 (distance ?c ?b))
                                        (in_motion ?o2)
                                        (or
                                          (agent_holds ?d)
                                          (not
                                            (forall (?d2 - hexagonal_bin ?p - game_object)
                                              (in ?o ?h)
                                            )
                                          )
                                        )
                                      )
                                      (and
                                        (on ?b ?b7)
                                        (and
                                          (not
                                            (agent_holds ?l2)
                                          )
                                          (in ?b ?b)
                                        )
                                      )
                                    )
                                  )
                                  (and
                                    (not
                                      (agent_holds ?t)
                                    )
                                    (in_motion ?c)
                                  )
                                )
                              )
                              (in_motion ?d)
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
          (forall (?h - dodgeball)
            (forall (?r - hexagonal_bin)
              (and
                (game-conserved
                  (exists (?b9 - building ?c - ball)
                    (and
                      (agent_holds ?d)
                      (in_motion ?b)
                      (touch ?r ?t)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectToBinOnFirstTry
      (exists (?b - cube_block ?x ?g - pillow)
        (then
          (hold (not (agent_holds ?h) ) )
          (once (in_motion ?x) )
          (hold (and (agent_holds ?x) (agent_holds ?x) (not (and (on ?g ?o) (> (building_size ?o) 10) ) ) ) )
          (once (game_over ) )
          (hold (not (< (distance ?d ?d) 1) ) )
          (hold (in_motion ?d) )
        )
      )
    )
    (forall (?c6 - (either dodgeball mug))
      (and
        (preference gameBlockFound
          (exists (?c2 - (either hexagonal_bin key_chain dodgeball hexagonal_bin))
            (then
              (hold-while (not (in_motion ?w1) ) (in_motion ?c2) (adjacent ?d ?o4) )
              (once (in_motion ?c6) )
              (once (and (between ?d ?d ?d) (on ?c6 ?c2) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> 40 -10 )
)
(:scoring
  (count-once-per-objects objectToBinOnFirstTry:pink)
)
)



(define (game game-id-592) (:domain medium-objects-room-v1)
(:setup
  (exists (?b2 - game_object ?t - dodgeball)
    (game-conserved
      (in_motion ?t)
    )
  )
)
(:constraints
  (and
    (preference basketMadeFromRug
      (exists (?bl - dodgeball)
        (at-end
          (and
            (in ?bl ?bl)
            (in_motion ?bl)
          )
        )
      )
    )
    (preference throwAttempt
      (exists (?l1 - hexagonal_bin)
        (then
          (once (not (agent_holds ?d) ) )
          (once (and (on ?l1 ?b) (in_motion ?l1) ) )
          (hold (not (agent_holds ?b) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (total-score) (count-once-per-objects throwAttempt:dodgeball) )
  )
)
(:scoring
  (count-once-per-objects basketMadeFromRug:golfball:yellow:hexagonal_bin)
)
)



(define (game game-id-593) (:domain medium-objects-room-v1)
(:setup
  (exists (?g - tan_cube_block ?g - teddy_bear)
    (forall (?c - wall)
      (game-conserved
        (agent_holds ?h)
      )
    )
  )
)
(:constraints
  (and
    (forall (?c5 - hexagonal_bin ?h - (either beachball book))
      (and
        (preference agentLeavesDogbedOrNoMoreBalls
          (exists (?d2 - block)
            (then
              (once (agent_holds top_drawer) )
              (once (and (and (opposite ?b ?l) (agent_holds ?b) (on ?c ?h) (agent_holds ?h) ) (not (agent_holds agent) ) (not (agent_holds ?d2) ) ) )
              (hold (in_motion ?h) )
            )
          )
        )
        (preference beachballBouncedOffRamp
          (exists (?w1 - tall_cylindrical_block ?d ?ob - hexagonal_bin ?b10 - curved_wooden_ramp)
            (then
              (once (not (and (in_motion ?c1) (same_type bed block) ) ) )
              (once (or (in ?d ?l2) (not (in_motion ?b) ) (agent_holds ?h) (and (and (on ?b10 ?bl) (and (in_motion ?h) (in_motion ?b10) ) ) (not (in_motion ?h) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 4 (= (count agentLeavesDogbedOrNoMoreBalls:basketball) 40 )
  )
)
(:scoring
  (count-unique-positions beachballBouncedOffRamp:pink_dodgeball:yellow)
)
)



(define (game game-id-594) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-optional
      (forall (?h - hexagonal_bin)
        (not
          (and
            (agent_holds ?h)
            (is_setup_object ?c6)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference beachballBouncedOffRamp
      (exists (?b5 - hexagonal_bin)
        (then
          (once (not (is_setup_object agent) ) )
          (once (and (in ?ob ?b5) (in ?b5 ?b5) ) )
          (once (touch agent ?d) )
        )
      )
    )
    (preference gameBlockFound
      (exists (?c2 - hexagonal_bin)
        (then
          (once (adjacent_side ?c2 ?c2 ?c2) )
          (hold (= 1 (building_size desk)) )
          (once (agent_holds ?t) )
        )
      )
    )
    (forall (?d - hexagonal_bin ?w1 - curved_wooden_ramp)
      (and
        (preference throwFromBehindChairsInBin
          (exists (?r - hexagonal_bin ?s - (either blue_cube_block golfball game_object) ?b - cube_block)
            (then
              (hold (in_motion ?d) )
              (hold (in_motion ?b) )
              (once (and (and (agent_holds ?b3) (and (< (distance_side ?b right ?b) (distance ?h ?t)) (agent_holds ?b) ) (not (adjacent bed floor) ) (> 1 (distance room_center ?b)) ) (in_motion ?w1) ) )
            )
          )
        )
        (preference objectInBuilding
          (exists (?r - ball)
            (then
              (hold (in ?l1 ?b3) )
              (once (equal_z_position ?c ?o) )
              (once (in_motion ?w1) )
            )
          )
        )
        (preference cubeBlockFromBedToShelf
          (exists (?f - hexagonal_bin)
            (then
              (hold-while (agent_holds ?f) (game_start ) )
              (once (not (agent_holds ?b1) ) )
              (once (agent_holds ?b) )
            )
          )
        )
      )
    )
    (forall (?b - hexagonal_bin)
      (and
        (preference throwObjectToBin
          (exists (?h - game_object ?r1 - hexagonal_bin)
            (at-end
              (not
                (exists (?b - hexagonal_bin)
                  (on ?b ?d)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (count throwFromBehindChairsInBin:red:yellow:golfball) )
)
(:scoring
  (count throwFromBehindChairsInBin:golfball)
)
)



(define (game game-id-595) (:domain medium-objects-room-v1)
(:setup
  (forall (?db - (either cube_block cd laptop) ?g - building)
    (exists (?o4 - hexagonal_bin)
      (game-optional
        (adjacent ?g ?g)
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?d - hexagonal_bin ?c - hexagonal_bin)
        (then
          (hold (on ?c ?c) )
          (hold-while (agent_holds ?c) (same_object ?c ?l) )
          (once (not (in ?c ?c) ) )
        )
      )
    )
    (preference itemsHidingScreens
      (exists (?p3 - block ?o3 - block)
        (then
          (once (in_motion ?b) )
          (hold (and (and (on ?b ?o3) (< 0.5 (distance agent ?d)) (in ?o3 desk) (adjacent_side room_center ?o3 ?o3 front) (in_motion ?o3) (and (and (and (in ?d ?o3) (in agent ?w2) (and (agent_holds ?o3) (in_motion ?o3) ) (in bed ?h) (not (exists (?p - ball) (in_motion ?d) ) ) (and (not (in_motion ?c) ) (not (on ?o3 ?l2) ) ) (< (distance ?h ?o3) (distance agent ?o3)) (not (not (and (touch ?r ?o3) ) ) ) (not (rug_color_under ?h ?o3) ) (on ?d ?o3) ) (and (in_motion ?d) (in_motion ?o3) (touch ?o3 ?o3) (in_motion ?o3) ) (and (and (in_motion ?f) (and (on ?o3 ?o3) (and (and (touch ?d ?o3) (on ?o3 ?o3) ) (< (distance_side ?o3 back ?o3) 1) ) ) ) (< (distance ?h ?o3) (distance_side bed front ?b)) ) ) (and (not (in ?b ?d) ) (faces ?t ?o) (exists (?h - beachball) (touch ?p ?h) ) (agent_holds ?d) (exists (?b - hexagonal_bin ?d - beachball ?h - hexagonal_bin) (adjacent_side ?h ?o3 ?h) ) (agent_holds ?o3) (exists (?ob - curved_wooden_ramp) (not (not (rug_color_under ?tb ?ob) ) ) ) (and (and (not (not (in_motion ?o3) ) ) (not (on ?o3 ?o3) ) (and (open ?g) (not (touch ?b ?o3) ) (or (agent_holds ?g) (>= (distance ?o3 ?h) 3) (same_object ?d ?o3) ) ) ) (in_motion ?d) ) (and (on ?d ?o3) (touch ?o3 ?o3) ) (adjacent ?o3 ?h) ) (and (game_start ) (< (distance ?o3 ?o3) 6) ) ) ) (agent_holds ?o3) (on ?o3 ?h) ) )
          (hold (agent_holds ?o) )
        )
      )
    )
    (preference pyramidBlockAtopTowerAtEnd
      (exists (?d - game_object)
        (then
          (once (not (in_motion ?d) ) )
          (hold (agent_holds ?d) )
          (hold (adjacent ?h ?o) )
        )
      )
    )
  )
)
(:terminal
  (>= 6 3 )
)
(:scoring
  (count-once throwBallToBin:dodgeball:golfball:hexagonal_bin)
)
)



(define (game game-id-596) (:domain few-objects-room-v1)
(:setup
  (exists (?t1 - desktop)
    (exists (?s - bridge_block ?b - ball)
      (exists (?b - ball)
        (exists (?r - chair)
          (and
            (exists (?l3 - dodgeball ?d - curved_wooden_ramp)
              (and
                (forall (?f - wall)
                  (game-conserved
                    (on ?b ?d)
                  )
                )
                (not
                  (exists (?h - hexagonal_bin)
                    (forall (?l - doggie_bed)
                      (exists (?h - teddy_bear)
                        (game-conserved
                          (not
                            (agent_holds floor)
                          )
                        )
                      )
                    )
                  )
                )
                (game-conserved
                  (and
                    (in_motion ?t1)
                    (and
                      (and
                        (and
                          (in_motion ?g)
                          (agent_holds ?t1)
                        )
                        (between ?d ?d ?h)
                      )
                      (in_motion ?b)
                      (above agent ?b)
                    )
                  )
                )
              )
            )
            (and
              (game-conserved
                (and
                  (not
                    (not
                      (and
                        (agent_holds ?t1)
                        (and
                          (in_motion ?t1)
                          (not
                            (not
                              (and
                                (agent_holds ?d)
                                (and
                                  (in_motion ?r)
                                  (and
                                    (and
                                      (and
                                        (and
                                          (not
                                            (not
                                              (object_orientation ?h upside_down)
                                            )
                                          )
                                          (and
                                            (not
                                              (or
                                                (agent_holds ?h)
                                                (and
                                                  (not
                                                    (and
                                                      (forall (?x - (either curved_wooden_ramp))
                                                        (and
                                                          (in_motion ?b)
                                                          (touch ?r ?b)
                                                        )
                                                      )
                                                      (agent_holds ?t1)
                                                      (same_color ?l1 ?t1)
                                                      (exists (?c1 - doggie_bed)
                                                        (not
                                                          (same_object ?o ?c1)
                                                        )
                                                      )
                                                      (and
                                                        (in_motion ?r)
                                                        (in_motion ?g)
                                                      )
                                                      (and
                                                        (in ?b ?t1)
                                                        (object_orientation ?t1 ?t1)
                                                      )
                                                      (on bed agent)
                                                    )
                                                  )
                                                  (in_motion ?b)
                                                  (on ?p ?t1)
                                                )
                                              )
                                            )
                                            (not
                                              (< (distance room_center ?ob) (distance ?b ?t1))
                                            )
                                          )
                                        )
                                        (exists (?w1 - ball)
                                          (forall (?c2 - ball ?h - ball)
                                            (in_motion floor)
                                          )
                                        )
                                      )
                                      (< 3 (distance door ?r))
                                      (in ?h ?c5)
                                    )
                                    (adjacent agent ?g)
                                    (in_motion ?b)
                                    (on ?b ?b)
                                    (and
                                      (adjacent_side door back ?r)
                                      (agent_holds ?b)
                                    )
                                    (and
                                      (agent_holds ?b)
                                      (not
                                        (and
                                          (not
                                            (= 1)
                                          )
                                          (on ?b ?b)
                                        )
                                      )
                                    )
                                  )
                                  (and
                                    (agent_holds ?r)
                                    (on ?h desk)
                                  )
                                  (not
                                    (and
                                      (not
                                        (agent_holds ?l)
                                      )
                                      (not
                                        (= (distance ?b1 ?d) 1)
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                        (in ?p2 ?r)
                      )
                    )
                  )
                  (rug_color_under ?b ?c)
                  (not
                    (agent_holds ?b)
                  )
                )
              )
              (and
                (and
                  (exists (?o - hexagonal_bin)
                    (exists (?d ?o - dodgeball)
                      (game-optional
                        (adjacent ?h ?r)
                      )
                    )
                  )
                  (exists (?o3 - triangular_ramp ?c1 - teddy_bear)
                    (game-optional
                      (not
                        (exists (?p - hexagonal_bin)
                          (exists (?h - shelf ?w - (either triangular_ramp ball blue_cube_block))
                            (and
                              (in_motion ?c1)
                              (not
                                (and
                                  (exists (?p ?w - hexagonal_bin)
                                    (on ?d ?b)
                                  )
                                  (agent_holds ?o)
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
            (forall (?b - hexagonal_bin)
              (exists (?h - (either blue_cube_block doggie_bed))
                (forall (?h ?b6 ?h ?b ?b7 ?c - hexagonal_bin)
                  (game-optional
                    (and
                      (adjacent_side ?d front ?o)
                      (and
                        (agent_holds ?b7)
                        (in_motion ?b)
                        (not
                          (and
                            (and
                              (on ?b floor)
                              (in ?b7 ?b7)
                            )
                            (in_motion ?r)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectsHidden
      (exists (?d - (either cylindrical_block dodgeball) ?s - hexagonal_bin ?t1 - hexagonal_bin)
        (then
          (hold-while (in_motion ?p) (on rug ?b) )
          (hold-while (not (rug_color_under ?t1 blue) ) (not (adjacent bed ?d) ) )
          (once-measure (agent_holds ?d) (distance agent ?t1) )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (* 10 (count-once-per-objects objectsHidden:dodgeball) )
  )
)
(:scoring
  (count-once-per-objects objectsHidden:rug)
)
)



(define (game game-id-597) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (not
      (same_type ?b ?l4)
    )
  )
)
(:constraints
  (and
    (preference objectOnBed
      (exists (?c - golfball ?t - (either golfball block))
        (at-end
          (agent_holds ?h)
        )
      )
    )
    (forall (?h - building)
      (and
        (preference ballNeverThrown
          (exists (?c2 - wall ?o4 - game_object)
            (then
              (once (in_motion ?o4) )
              (hold (agent_holds ?h) )
              (once (and (not (and (in ?o4 ?c5) (agent_holds ?l) (on ?h ?h) ) ) (in ?l1 ?b) ) )
            )
          )
        )
        (preference ballThrownFromRug
          (exists (?b - wall)
            (then
              (once (agent_holds ?b) )
              (once (agent_holds ?p) )
              (once (in_motion ?b) )
            )
          )
        )
      )
    )
    (preference cubeThrownToBin
      (exists (?s ?t ?o ?p2 - doggie_bed)
        (then
          (once (and (broken ?s) (same_type ?s ?p2) ) )
          (hold (and (in_motion ?b) (agent_holds ?c) ) )
          (once (agent_holds ?b4) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (total-time) (* (count objectOnBed:golfball) (* 2 (* 1 (count-once ballNeverThrown:pink_dodgeball) )
        )
      )
    )
    (>= (count ballNeverThrown:orange:pink:golfball) (total-time) )
    (or
      (>= (count-once objectOnBed:rug:pink_dodgeball) (count-once-per-objects ballNeverThrown) )
      (and
        (>= (total-score) (count-increasing-measure ballThrownFromRug:dodgeball) )
        (> (external-forall-maximize (- (count cubeThrownToBin:dodgeball) )
          )
          10
        )
        (> (count-once ballThrownFromRug:green) (< (count-once-per-objects ballNeverThrown:beachball) (external-forall-maximize (count objectOnBed:blue_dodgeball) ) )
        )
      )
    )
  )
)
(:scoring
  (+ 10 2 )
)
)



(define (game game-id-598) (:domain many-objects-room-v1)
(:setup
  (exists (?c2 - dodgeball)
    (exists (?b - (either rug hexagonal_bin golfball))
      (and
        (or
          (and
            (exists (?o4 - block ?c ?p - pyramid_block)
              (game-optional
                (agent_holds ?d)
              )
            )
            (and
              (exists (?h - curved_wooden_ramp ?w - shelf)
                (game-conserved
                  (touch ?b floor)
                )
              )
              (forall (?c2 - hexagonal_bin ?c1 ?l4 - (either side_table game_object))
                (game-optional
                  (and
                    (above ?l4 ?d)
                  )
                )
              )
              (game-optional
                (in ?b agent)
              )
            )
          )
          (exists (?g - (either golfball bed cylindrical_block))
            (and
              (exists (?c - hexagonal_bin ?d - chair ?r2 - hexagonal_bin)
                (exists (?c - red_dodgeball ?c - drawer)
                  (and
                    (exists (?o5 - (either dodgeball cd pillow) ?d - triangular_ramp)
                      (game-optional
                        (not
                          (and
                            (adjacent ?h ?c)
                            (equal_x_position ?c ?h)
                          )
                        )
                      )
                    )
                  )
                )
              )
              (exists (?b - wall)
                (game-optional
                  (agent_holds ?g)
                )
              )
            )
          )
        )
        (and
          (exists (?d - doggie_bed)
            (game-conserved
              (not
                (between ?c2 ?b ?b)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballKnocksBlockFromRug
      (exists (?o ?d1 - game_object ?h - dodgeball)
        (then
          (once (on ?h ?b) )
          (once (not (same_color ?h blue) ) )
          (once (not (agent_holds ?l1) ) )
          (once (touch ?r ?o) )
          (once (and (and (not (in_motion ?h) ) (agent_holds ?h) ) (on ?h ?b) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count-once ballKnocksBlockFromRug:cylindrical_block:pink) (+ (+ 3 10 )
        (* (count-once-per-objects ballKnocksBlockFromRug:dodgeball) 5 )
        (= (count-once-per-objects ballKnocksBlockFromRug) (count-once-per-objects ballKnocksBlockFromRug:beachball:dodgeball) )
        1
        8
        (count-once-per-objects ballKnocksBlockFromRug:beachball:pink_dodgeball)
        (count-once-per-objects ballKnocksBlockFromRug:green:pink)
        (* 2 5 )
        6
      )
    )
    (total-score)
  )
)
(:scoring
  (count-once-per-objects ballKnocksBlockFromRug:bed)
)
)



(define (game game-id-599) (:domain many-objects-room-v1)
(:setup
  (forall (?h ?c - (either teddy_bear cylindrical_block))
    (forall (?d - hexagonal_bin)
      (game-conserved
        (agent_holds ?h)
      )
    )
  )
)
(:constraints
  (and
    (forall (?o3 - block)
      (and
        (preference agentLeavesDogbedOrNoMoreBalls
          (exists (?w1 - game_object ?bl - red_pyramid_block)
            (then
              (once (> 10 0.5) )
              (hold-while (in ?b ?bl) (in_motion ?d) )
              (once (exists (?c - (either yellow_cube_block hexagonal_bin)) (not (same_color ?d pink) ) ) )
            )
          )
        )
        (preference blockPlacedInBuilding
          (exists (?o3 - shelf ?h - cube_block)
            (then
              (hold (not (and (agent_holds ?b) (equal_z_position ?h ?b) ) ) )
              (hold (game_start ) )
              (once (exists (?d - (either dodgeball wall) ?p1 - dodgeball) (and (in ?c ?h) (not (and (in_motion ?d) (in desktop ?p1) ) ) ) ) )
            )
          )
        )
        (preference itemsHidingScreens
          (exists (?c6 - (either rug flat_block curved_wooden_ramp))
            (then
              (once (adjacent ?o3 ?o) )
              (once (in_motion ?b) )
              (once (in ?b ?d) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (* 2 (* (count-once-per-objects blockPlacedInBuilding:blue_dodgeball:dodgeball) 0 )
      )
      (count itemsHidingScreens:blue)
    )
    (* 3 2 (* 50 (count agentLeavesDogbedOrNoMoreBalls:pink) )
      (count blockPlacedInBuilding:dodgeball)
      6
      3
      (* 8 5 )
      (count-once-per-objects agentLeavesDogbedOrNoMoreBalls:dodgeball:triangle_block)
      1
    )
  )
)
(:scoring
  (count itemsHidingScreens:red_pyramid_block)
)
)



(define (game game-id-600) (:domain few-objects-room-v1)
(:setup
  (exists (?c1 - hexagonal_bin ?d - red_dodgeball ?o - block ?l3 - (either hexagonal_bin lamp))
    (game-optional
      (rug_color_under ?ob ?c)
    )
  )
)
(:constraints
  (and
    (forall (?t - yellow_cube_block)
      (and
        (preference throwToBin
          (exists (?h - cube_block ?b7 - dodgeball)
            (then
              (once (in_motion ?b7) )
              (once (exists (?r - wall) (< (distance ?h ?b7) (distance ?b ?g)) ) )
              (hold (not (broken ?b7) ) )
            )
          )
        )
      )
    )
    (forall (?d - hexagonal_bin ?s - dodgeball)
      (and
        (preference baseBlockInTowerAtEnd
          (exists (?o - cube_block ?d - sliding_door)
            (then
              (once (same_object ?d ?d) )
              (hold-while (in_motion ?d) (and (exists (?t - hexagonal_bin) (not (touch ?o ?d) ) ) (in_motion ?d) ) )
              (once (broken ?d) )
            )
          )
        )
      )
    )
    (forall (?d1 - (either bridge_block dodgeball) ?d - pillow)
      (and
        (preference thrownObjectHitsComputer
          (exists (?b - dodgeball ?b - drawer)
            (then
              (hold (and (in ?b ?b) (in_motion ?d) ) )
              (once (not (in ?d ?d) ) )
              (hold (not (in ?b ?d) ) )
            )
          )
        )
        (preference blockIncorrectlyPicked
          (exists (?d - (either cylindrical_block yellow golfball book) ?r - curved_wooden_ramp)
            (then
              (once (exists (?s - golfball ?o4 - dodgeball) (in ?b ?d) ) )
              (once (agent_holds rug) )
              (hold (adjacent ?r ?b) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (count thrownObjectHitsComputer:dodgeball) (count throwToBin:golfball) )
    (count-shortest throwToBin:pink)
  )
)
(:scoring
  (count baseBlockInTowerAtEnd:dodgeball)
)
)



(define (game game-id-601) (:domain few-objects-room-v1)
(:setup
  (exists (?b10 - dodgeball ?b2 - dodgeball)
    (exists (?b3 - curved_wooden_ramp)
      (not
        (game-conserved
          (in_motion ?b3)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference failedThrowAttempt
      (exists (?b2 - hexagonal_bin)
        (then
          (once (not (in_motion ?h) ) )
          (once (on ?b2 ?b2) )
          (once (object_orientation ?r upright) )
        )
      )
    )
    (preference blockInTowerAtEnd
      (exists (?r - dodgeball)
        (then
          (hold (not (in agent ?r) ) )
          (hold (in_motion agent) )
          (hold-while (and (touch desk ?r) (in_motion ?r) ) (in_motion ?b) )
        )
      )
    )
  )
)
(:terminal
  (= 1 (total-time) )
)
(:scoring
  (* 2 (count-once-per-external-objects blockInTowerAtEnd:doggie_bed:basketball) )
)
)



(define (game game-id-602) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (faces ?d ?h)
  )
)
(:constraints
  (and
    (preference redDodgeballThrownToBin
      (exists (?b - building)
        (then
          (hold (on desk agent) )
          (once (exists (?d - teddy_bear) (in ?t ?b) ) )
          (once (in_motion ?b) )
        )
      )
    )
  )
)
(:terminal
  (and
    (= (* (+ (count redDodgeballThrownToBin:golfball) (+ (count-once-per-objects redDodgeballThrownToBin:yellow_cube_block) (count-once-per-objects redDodgeballThrownToBin:yellow) 10 )
        )
        (count-once-per-objects redDodgeballThrownToBin:basketball)
      )
      0
    )
  )
)
(:scoring
  (count redDodgeballThrownToBin:dodgeball)
)
)



(define (game game-id-603) (:domain many-objects-room-v1)
(:setup
  (forall (?h - ball)
    (game-conserved
      (and
        (touch ?d floor)
        (touch ?o ?h)
      )
    )
  )
)
(:constraints
  (and
    (preference teddyBearLandsInBin
      (exists (?b10 - cube_block)
        (at-end
          (adjacent ?h ?b10)
        )
      )
    )
    (preference blockThrowAttempt
      (exists (?s - game_object)
        (then
          (once (on desk ?s) )
          (once (and (agent_holds ?g) (in_motion ?s) (not (and (and (agent_holds ?s) (not (not (and (and (agent_holds rug) (in_motion ?s) ) (not (not (adjacent_side ?h ?s ?s) ) ) ) ) ) ) (and (not (agent_holds ?o1) ) (and (adjacent ?b2 ?c) (in_motion ?s) ) ) ) ) (agent_holds desk) ) )
          (hold (and (in ?t2 ?s) (in ?s ?s) ) )
        )
      )
    )
    (preference ballThrownOntoTarget
      (exists (?h - dodgeball)
        (then
          (hold (and (and (on ?d ?h) (not (same_color ?b ?c) ) ) (or (and (and (on ?b ?d) (and (not (exists (?c - hexagonal_bin ?l2 - dodgeball) (not (not (in_motion ?d) ) ) ) ) (and (on ?f ?h) (agent_holds ?o) ) ) ) (faces ?o ?o4) ) (not (agent_holds agent) ) ) ) )
          (once (adjacent ?c ?d) )
          (once (and (agent_holds ?h) (and (in_motion ?c1) (same_color ?c pink) ) ) )
        )
      )
    )
    (preference golfballLandsInBinThroughRamp
      (exists (?c ?b - hexagonal_bin)
        (then
          (hold (agent_holds ?o1) )
          (once (on ?b ?c) )
          (once (not (is_setup_object ?c) ) )
        )
      )
    )
    (preference throwBallToBin
      (exists (?d1 - red_dodgeball ?o - hexagonal_bin)
        (then
          (once (and (on ?o ?o) (and (same_color ?l pink) ) ) )
          (hold-while (and (not (rug_color_under ?b ?o) ) (agent_holds ?b) ) (same_type ?o pillow) )
          (once (not (in_motion ?o) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count golfballLandsInBinThroughRamp:doggie_bed:pink_dodgeball) (* (count ballThrownOntoTarget:pink) )
    )
    (or
      (>= 2 (+ 100 10 )
      )
      (not
        (or
          (>= 7 6 )
          (> (count-once-per-objects teddyBearLandsInBin:hexagonal_bin) (* (- 4 )
              (count throwBallToBin:white)
            )
          )
        )
      )
      (>= 3 (total-time) )
    )
  )
)
(:scoring
  (count-once-per-objects throwBallToBin:dodgeball)
)
)



(define (game game-id-604) (:domain few-objects-room-v1)
(:setup
  (forall (?w2 - pyramid_block)
    (game-optional
      (agent_holds ?b3)
    )
  )
)
(:constraints
  (and
    (preference throwBallToDoggieBed
      (exists (?c - doggie_bed)
        (then
          (once (equal_z_position bed ?b) )
          (hold (in_motion ?o) )
        )
      )
    )
    (forall (?o5 ?b ?t ?b4 ?c4 ?h - (either cylindrical_block bed))
      (and
        (preference ballThrownToBed
          (at-end
            (and
              (not
                (and
                  (not
                    (in_motion bed)
                  )
                  (agent_holds ?o)
                )
              )
              (on ?h ?o5)
              (not
                (in ?b4 floor)
              )
              (same_color ?t blue)
            )
          )
        )
      )
    )
    (forall (?b2 - game_object ?r1 - chair ?c1 - chair ?tb - pyramid_block)
      (and
        (preference throwBallToDoggieBedOffWall
          (exists (?p2 ?t2 - building)
            (then
              (once (on ?o ?t2) )
              (once (agent_holds ?o) )
              (once (and (same_color ?d brown) (agent_holds ?d) (agent_holds ?tb) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (count throwBallToDoggieBed:bed:blue_dodgeball) )
)
(:scoring
  (count-unique-positions throwBallToDoggieBedOffWall:blue_dodgeball:dodgeball)
)
)



(define (game game-id-605) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds ?d)
  )
)
(:constraints
  (and
    (preference cubeBlockInBuilding
      (exists (?h - dodgeball)
        (then
          (once (agent_crouches ) )
          (once (and (not (not (in ?l ?h) ) ) (in_motion ?h) (and (not (not (adjacent ?h ?h) ) ) (and (is_setup_object ?b) (not (or (on ?h ?h) (not (and (not (and (not (on ?c ?h) ) (in_motion ?d) ) ) (< (distance room_center ?b5) 6) (in ?d bottom_shelf) ) ) ) ) ) ) ) )
          (hold (>= 0.5 (x_position ?l1)) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 0 (count cubeBlockInBuilding:doggie_bed) )
  )
)
(:scoring
  (count cubeBlockInBuilding:basketball)
)
)



(define (game game-id-606) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?b - hexagonal_bin ?c - hexagonal_bin ?t - hexagonal_bin)
      (game-conserved
        (agent_holds ?l)
      )
    )
  )
)
(:constraints
  (and
    (forall (?o1 ?p1 - hexagonal_bin)
      (and
        (preference ballOnBedAtEnd
          (exists (?b3 - block ?o2 - cube_block)
            (then
              (once (agent_holds ?d) )
              (once (and (in_motion ?w) (same_color ?b pink) ) )
              (hold-while (not (touch ?l ?d) ) (in_motion ?b) )
            )
          )
        )
        (preference itemsTurnedOff
          (exists (?o3 - shelf)
            (then
              (once (touch ?p1 ?g) )
              (hold-while (not (and (on pink_dodgeball ?b) (touch ?s ?d) (in ?o3 ?d) (and (in_motion ?o3) (not (and (on ?o3 ?b) (same_object ?p ?o3) ) ) (is_setup_object ?o1) ) ) ) (agent_holds ?p1) )
              (once (on desk ?h) )
            )
          )
        )
        (preference ballToBinFromBed
          (exists (?d - ball ?o2 - ball)
            (then
              (hold (not (not (not (and (object_orientation ?h sideways) (is_setup_object ?s) (in_motion ?p1) ) ) ) ) )
              (hold (and (<= (distance room_center ?l1) (distance agent ?o2)) (not (not (adjacent ?w2 ?p1) ) ) ) )
              (once (not (on ?o2 ?d) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< (* (count ballOnBedAtEnd:basketball) (count-increasing-measure ballToBinFromBed:basketball) )
    (count ballOnBedAtEnd:doggie_bed)
  )
)
(:scoring
  (* (* (count-once-per-objects ballToBinFromBed) 15 )
  )
)
)



(define (game game-id-607) (:domain medium-objects-room-v1)
(:setup
  (forall (?b - cube_block)
    (and
      (and
        (exists (?g - hexagonal_bin ?d ?d2 - teddy_bear)
          (forall (?h - cube_block ?l2 - curved_wooden_ramp)
            (and
              (exists (?d - curved_wooden_ramp ?o - curved_wooden_ramp)
                (forall (?b8 - hexagonal_bin)
                  (game-conserved
                    (not
                      (in ?d2 ?b)
                    )
                  )
                )
              )
              (game-conserved
                (agent_holds ?b)
              )
            )
          )
        )
        (exists (?h - pillow)
          (game-optional
            (in_motion ?b5)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectWithMatchingColor
      (exists (?t - (either dodgeball cd))
        (at-end
          (agent_holds ?c)
        )
      )
    )
    (forall (?b1 - wall)
      (and
        (preference throwAttemptFromDoor
          (exists (?c - dodgeball ?b - desk_shelf ?t - hexagonal_bin)
            (then
              (hold (not (and (adjacent door ?h) (agent_holds ?c3) ) ) )
              (hold (on ?b1 ?b1) )
              (hold (in rug ?t) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (<= 6 (total-score) )
    (> 10 8 )
  )
)
(:scoring
  (+ (count throwAttemptFromDoor:green:cube_block) 2 )
)
)



(define (game game-id-608) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (game-conserved
        (object_orientation ?d upright)
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttemptFromBehindBlock
      (exists (?w - cylindrical_block)
        (then
          (hold (not (between ?h ?b ?b) ) )
          (hold (and (and (adjacent_side agent right ?w) (agent_holds ?h) (or (adjacent ?w ?w) (not (agent_holds ?w) ) ) ) (not (adjacent ?w ?w) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (> (total-score) (* 5 (count-once throwAttemptFromBehindBlock:dodgeball) (+ 6 (count throwAttemptFromBehindBlock:hexagonal_bin) )
        )
      )
      (>= (count-once-per-objects throwAttemptFromBehindBlock:golfball:green) (total-score) )
      (or
        (or
          (< (count-once-per-objects throwAttemptFromBehindBlock:dodgeball:blue_dodgeball) 6 )
          (not
            (>= (total-time) (total-time) )
          )
        )
        (>= (count throwAttemptFromBehindBlock:red) 100 )
      )
    )
    (<= (count-once-per-objects throwAttemptFromBehindBlock:blue) 10 )
  )
)
(:scoring
  (+ (count-once-per-objects throwAttemptFromBehindBlock:dodgeball:basketball) 5 (+ 3 3 )
  )
)
)



(define (game game-id-609) (:domain few-objects-room-v1)
(:setup
  (exists (?c - wall)
    (game-optional
      (touch ?c ?c)
    )
  )
)
(:constraints
  (and
    (preference throwMissesBin
      (exists (?l - ball ?o - ball)
        (then
          (once (and (on ?b rug) (and (exists (?r - teddy_bear) (adjacent agent ?x) ) (and (not (not (on ?b ?d) ) ) (touch ?o ?o) ) ) ) )
          (hold (on ?o ?o) )
          (hold (not (agent_holds ?g) ) )
        )
      )
    )
  )
)
(:terminal
  (<= 2 (total-time) )
)
(:scoring
  (count throwMissesBin:blue)
)
)



(define (game game-id-610) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (not
      (and
        (not
          (in door ?d)
        )
        (< 1 2)
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?o - game_object)
        (at-end
          (on ?o ?r)
        )
      )
    )
  )
)
(:terminal
  (or
    (> 5 (= 1 (count-once-per-objects throwAttempt:dodgeball) )
    )
    (> (total-time) 3 )
  )
)
(:scoring
  (count-total throwAttempt:dodgeball)
)
)



(define (game game-id-611) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?b2 - dodgeball)
      (and
        (game-optional
          (adjacent_side ?b2 front ?o right)
        )
        (game-optional
          (exists (?c - hexagonal_bin)
            (exists (?o2 ?p2 ?l2 ?b ?c ?c - ball ?bl - (either tall_cylindrical_block alarm_clock basketball))
              (in_motion bed)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownFromBehindBlock
      (exists (?h - dodgeball)
        (at-end
          (agent_holds ?h)
        )
      )
    )
    (forall (?db - hexagonal_bin ?b - (either curved_wooden_ramp rug) ?s - dodgeball ?d - curved_wooden_ramp)
      (and
        (preference bookOnDeskShelf
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?l2) (not (and (in_motion ?h) (on door ?h) (rug_color_under ?p2 tan) ) ) ) )
              (once (in_motion ?d) )
              (hold (on ?c ?g) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) 5 )
)
(:scoring
  (+ (= (count-shortest ballThrownFromBehindBlock:pink) (count-once-per-external-objects ballThrownFromBehindBlock) )
    1
  )
)
)



(define (game game-id-612) (:domain many-objects-room-v1)
(:setup
  (forall (?p3 ?b - dodgeball)
    (game-conserved
      (not
        (in_motion ?b)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownMissesEverything
      (exists (?o - ball)
        (then
          (once (not (same_type ?o ?o) ) )
          (once (agent_holds floor) )
          (once (in ?o ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= 4 (count ballThrownMissesEverything:beachball:orange) )
)
(:scoring
  (* (count ballThrownMissesEverything:pink) 2 (+ 2 50 )
    0
    (* (+ (count-once-per-objects ballThrownMissesEverything) (+ 2 2 )
      )
      (* (+ (* (count ballThrownMissesEverything:triangle_block) (count-once-per-objects ballThrownMissesEverything:hexagonal_bin:beachball) )
          3
        )
        -10
      )
    )
    (count ballThrownMissesEverything:dodgeball)
    (count ballThrownMissesEverything:yellow)
    (count-once-per-objects ballThrownMissesEverything:doggie_bed)
    20
  )
)
)



(define (game game-id-613) (:domain medium-objects-room-v1)
(:setup
  (exists (?d - hexagonal_bin ?p1 - hexagonal_bin)
    (game-optional
      (on ?p1 ?b2)
    )
  )
)
(:constraints
  (and
    (preference objectWithMatchingColor
      (exists (?d - (either triangular_ramp golfball pink))
        (at-end
          (and
            (is_setup_object ?ob)
            (and
              (equal_z_position room_center rug)
              (in agent desk)
              (same_type ?d ?l3)
            )
            (same_object ?d ?b)
          )
        )
      )
    )
    (preference blockInTowerKnocked
      (exists (?c - wall ?o - dodgeball ?d - hexagonal_bin ?w2 - curved_wooden_ramp)
        (then
          (once (and (in_motion ?w2) (object_orientation ?w2 upright) (agent_holds ?w1) ) )
          (once (agent_holds bed) )
          (once (agent_holds ?w2) )
        )
      )
    )
    (preference cubeBlockInBuilding
      (exists (?b1 - bridge_block)
        (then
          (hold (in ?b1 ?d) )
          (once (agent_holds ?b1) )
          (once (not (and (equal_z_position room_center ?o) (agent_holds ?b) (and (not (not (not (on ?b1 ?b1) ) ) ) (in_motion ?b1) ) ) ) )
        )
      )
    )
    (preference throwOverRamp
      (exists (?l4 - pillow ?o4 - hexagonal_bin)
        (then
          (once (and (in_motion ?b) (and (agent_holds ?b) (exists (?b - wall) (adjacent room_center ?o4) ) ) ) )
          (once (> 1 (distance room_center ?o4)) )
          (once (and (agent_holds ?c1) (in ?d ?h) ) )
          (once (and (adjacent ?h ?b) ) )
        )
      )
    )
    (preference agentLeavesDogbedOrNoMoreBalls
      (exists (?x - doggie_bed)
        (then
          (hold (on ?x ?b) )
          (once (and (exists (?c3 - (either key_chain cube_block)) (in_motion ?x) ) (not (< 1 (distance ?d ?d)) ) ) )
          (hold-while (in_motion ?x) (not (same_type ?r ?x) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (> (< 5 (count agentLeavesDogbedOrNoMoreBalls:yellow) )
      (total-score)
    )
  )
)
(:scoring
  (count agentLeavesDogbedOrNoMoreBalls:dodgeball)
)
)



(define (game game-id-614) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (game-optional
        (not
          (equal_x_position ?d ?b)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b6 - cube_block)
      (and
        (preference throwKnocksOverBear
          (exists (?c - (either pyramid_block triangular_ramp))
            (then
              (hold (in_motion ?b) )
              (once (in_motion ?b6) )
              (once (on ?h ?h) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (<= (count throwKnocksOverBear) (* (count-shortest throwKnocksOverBear:yellow:green) (+ (count throwKnocksOverBear:basketball) 9 (count throwKnocksOverBear:golfball) 10 (* (count throwKnocksOverBear:dodgeball) 5 40 (count-longest throwKnocksOverBear:book) )
          (count throwKnocksOverBear:pink_dodgeball:basketball:purple)
        )
      )
    )
    3
  )
)
(:scoring
  (+ 2 10 )
)
)



(define (game game-id-615) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (agent_holds ?l1)
  )
)
(:constraints
  (and
    (forall (?r - building)
      (and
        (preference cubeBlockInBuilding
          (exists (?c5 - (either pyramid_block dodgeball bridge_block))
            (then
              (once (agent_holds ?r) )
              (hold (on ?b ?r) )
              (once (not (in_motion ?r) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count cubeBlockInBuilding:pink) 5 )
)
(:scoring
  (* (count-once-per-objects cubeBlockInBuilding:blue_dodgeball:red) (count cubeBlockInBuilding:red) )
)
)



(define (game game-id-616) (:domain few-objects-room-v1)
(:setup
  (and
    (game-conserved
      (< 1 1)
    )
  )
)
(:constraints
  (and
    (preference throwGolfballToBin
      (exists (?o - doggie_bed)
        (then
          (once (and (agent_holds ?d) (not (on ?o ?o) ) (agent_holds ?o) (agent_holds ?o) (not (agent_holds bed) ) (in_motion ?o) (and (is_setup_object ?l) (adjacent ?o ?l) ) ) )
          (once (and (in_motion ?o) (in rug ?b4) ) )
          (hold (and (and (on ?o ?w) (equal_z_position desk ?d) (exists (?w1 - triangular_ramp) (in_motion ?b) ) ) (in_motion ?c) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= 7 (* 0.7 (* 6 (- (- (= (count-once-per-objects throwGolfballToBin:cube_block:pyramid_block) (* 3 (* (count throwGolfballToBin:yellow_cube_block) 5 )
                  )
                  (count throwGolfballToBin:basketball:top_drawer)
                )
              )
            )
          )
        )
      )
      (and
        (>= (+ 5 (count throwGolfballToBin:yellow) )
          (* 1 3 9 )
        )
        (< (count throwGolfballToBin:yellow) (count-once-per-external-objects throwGolfballToBin:blue_cube_block:tan) )
        (or
          (>= (count throwGolfballToBin:dodgeball) (* 4 15 (count-once throwGolfballToBin:purple) )
          )
          (or
            (>= (count-once-per-objects throwGolfballToBin:beachball) (* 10 (+ 10 (+ (- (count-once-per-external-objects throwGolfballToBin:blue) )
                    (count-once-per-external-objects throwGolfballToBin:pink:golfball)
                    (count throwGolfballToBin:pink)
                  )
                  (count-once-per-objects throwGolfballToBin:basketball)
                )
              )
            )
            (< (total-score) (+ 3 5 (count-once throwGolfballToBin:hexagonal_bin) )
            )
          )
        )
      )
      (>= (external-forall-maximize (* 3 10 )
        )
        (count throwGolfballToBin:red:golfball)
      )
    )
    (>= 16 (count-once-per-objects throwGolfballToBin) )
  )
)
(:scoring
  (count-increasing-measure throwGolfballToBin:orange)
)
)



(define (game game-id-617) (:domain many-objects-room-v1)
(:setup
  (exists (?c1 - block ?b - hexagonal_bin ?t2 - ball)
    (game-conserved
      (same_type ?t2 blinds)
    )
  )
)
(:constraints
  (and
    (preference beachballBouncedOffRamp
      (exists (?b4 - pillow)
        (then
          (hold (not (adjacent ?w1 ?b) ) )
          (hold (faces ?l ?c) )
          (hold (adjacent ?h desk) )
        )
      )
    )
    (preference objectThrownFromRug
      (exists (?h - bridge_block)
        (then
          (once (in_motion ?r) )
          (once (agent_holds ?r) )
          (hold-while (in_motion ?r) (> 8 (distance ?h ?h)) )
          (hold (in_motion ?h) )
        )
      )
    )
  )
)
(:terminal
  (< (* 1 (count objectThrownFromRug:beachball:book) )
    6
  )
)
(:scoring
  (count-once-per-objects beachballBouncedOffRamp:beachball:green)
)
)



(define (game game-id-618) (:domain few-objects-room-v1)
(:setup
  (forall (?t - cube_block)
    (game-conserved
      (in_motion ?l1)
    )
  )
)
(:constraints
  (and
    (preference beachballOnRug
      (exists (?o2 - (either golfball doggie_bed) ?p - teddy_bear)
        (then
          (once (not (not (not (< 1 1) ) ) ) )
          (once (agent_holds ?p) )
          (once (> 0 3) )
        )
      )
    )
    (preference throwAttempt
      (exists (?b3 - dodgeball ?b - game_object)
        (then
          (once (agent_holds ?b) )
          (once (on desk ?h) )
          (hold (on ?b ?l4) )
          (hold (agent_holds ?b1) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (+ (* 5 8 )
      1
    )
  )
)
(:scoring
  (count-once-per-objects beachballOnRug:golfball)
)
)



(define (game game-id-619) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (game-conserved
        (broken ?l)
      )
    )
  )
)
(:constraints
  (and
    (forall (?t2 - hexagonal_bin ?h - cube_block)
      (and
        (preference dodgeballAndBasketballInBin
          (exists (?h - hexagonal_bin)
            (then
              (hold (not (in_motion ?h) ) )
              (hold (adjacent ?w1 ?b) )
              (hold (and (and (agent_holds ?h) (and (agent_holds green_golfball) (and (in_motion ?h) (above ?h ?b) ) ) ) (in ?h ?b) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< (- (count dodgeballAndBasketballInBin) )
    10
  )
)
(:scoring
  (* (+ 4 15 (count dodgeballAndBasketballInBin:basketball:beachball) (* (* 30 100 9 (count-once-per-objects dodgeballAndBasketballInBin:pink_dodgeball:dodgeball) )
        3
        (count-increasing-measure dodgeballAndBasketballInBin:basketball)
      )
      (* 4 2 )
    )
    (count-shortest dodgeballAndBasketballInBin:golfball)
  )
)
)



(define (game game-id-620) (:domain few-objects-room-v1)
(:setup
  (exists (?l3 - block)
    (forall (?h - dodgeball ?c - ball)
      (game-conserved
        (not
          (not
            (adjacent agent ?h)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference failedThrowAttempt
      (exists (?c4 - hexagonal_bin)
        (then
          (hold (agent_holds ?o) )
          (hold (and (and (in_motion ?b4) (in_motion ?o) ) (object_orientation ?c4 ?c4) ) )
          (hold (not (not (on ?b ?c4) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (+ 10 (* (count failedThrowAttempt:yellow_cube_block) (= 3 6 )
        )
        (count-once failedThrowAttempt:rug)
        (+ (count-once-per-objects failedThrowAttempt:yellow:yellow) (count-once-per-objects failedThrowAttempt:beachball) )
      )
      (* (* 20 10 2 6 )
        (count failedThrowAttempt:pyramid_block)
      )
    )
    (and
      (or
        (and
          (or
            (= (* (* (count-overlapping failedThrowAttempt:beachball) (* (* (count failedThrowAttempt:yellow_cube_block:basketball) (count-same-positions failedThrowAttempt:doggie_bed) )
                    (count-once-per-objects failedThrowAttempt:beachball:dodgeball)
                  )
                )
                (count failedThrowAttempt:green)
              )
              (total-time)
            )
            (>= (total-score) (count failedThrowAttempt:doggie_bed) )
            (> (total-time) (count failedThrowAttempt:blue) )
          )
          (> 6 (+ (count failedThrowAttempt:green) )
          )
          (>= (* (* (count-once-per-objects failedThrowAttempt:pink_dodgeball) (+ (* 5 5 )
                  (count failedThrowAttempt:golfball)
                )
              )
              (+ (count failedThrowAttempt:pink) (count-once-per-objects failedThrowAttempt:pyramid_block) )
            )
            (total-time)
          )
        )
        (not
          (or
            (>= (total-score) 0.7 )
            (or
              (>= (* (count-once-per-objects failedThrowAttempt:pink_dodgeball) 10 )
                3
              )
              (> (* (count failedThrowAttempt:dodgeball) 3 )
                (total-score)
              )
              (>= (count failedThrowAttempt:yellow) (count-same-positions failedThrowAttempt:beachball) )
            )
            (not
              (>= (+ (count-once failedThrowAttempt:pink) (* 3 (count failedThrowAttempt:beachball) )
                )
                6
              )
            )
          )
        )
      )
      (or
        (or
          (> (count-once failedThrowAttempt:red) (count-once-per-objects failedThrowAttempt:triangle_block:dodgeball) )
          (or
            (>= 2 15 )
            (>= (count-once failedThrowAttempt:green) 3 )
            (or
              (> (total-score) 4 )
              (>= (count failedThrowAttempt:dodgeball) (* 12 1 )
              )
              (<= (* (external-forall-minimize (count failedThrowAttempt:red:beachball) ) 4 )
                (count failedThrowAttempt:basketball:pink:dodgeball)
              )
            )
          )
        )
        (< (* (count-longest failedThrowAttempt:yellow) (- 6 )
            3
            (+ (* (+ 3 5 )
                9
              )
              (* (external-forall-maximize (count failedThrowAttempt:yellow) ) (* (count failedThrowAttempt:beachball:pink_dodgeball) 6 )
              )
              (count failedThrowAttempt:basketball:golfball)
              (external-forall-minimize
                (external-forall-maximize
                  (+ 3 (= (= (* (>= (- (+ 8 )
                            )
                            3
                          )
                          (count failedThrowAttempt:golfball)
                          (count failedThrowAttempt:yellow)
                        )
                      )
                    )
                  )
                )
              )
              2
              (count failedThrowAttempt:yellow)
              1
              0
              300
              (count failedThrowAttempt:green)
              5
              15
            )
            (count failedThrowAttempt:beachball)
            (* (count failedThrowAttempt:yellow:pink:yellow) (count failedThrowAttempt:golfball:hexagonal_bin) )
          )
          5
        )
        (> (count failedThrowAttempt:yellow_cube_block) 10 )
      )
    )
    (< (count failedThrowAttempt:alarm_clock) 1 )
  )
)
(:scoring
  (count-once failedThrowAttempt:golfball)
)
)



(define (game game-id-621) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (not
      (in_motion ?c2)
    )
  )
)
(:constraints
  (and
    (forall (?l1 - shelf ?h - (either golfball dodgeball cube_block))
      (and
        (preference throwKnocksOverBear
          (at-end
            (in_motion ?h)
          )
        )
        (preference gameObjectToBin
          (then
            (hold-while (agent_holds ?b) (and (agent_holds pink_dodgeball) (in_motion ?h) ) )
            (once (forall (?d - hexagonal_bin) (in_motion ?d) ) )
            (once (exists (?r2 - dodgeball ?d - chair) (= (distance_side ?h left ?h back) (distance agent agent) 1) ) )
          )
        )
      )
    )
  )
)
(:terminal
  (> 5 (count gameObjectToBin:golfball:red) )
)
(:scoring
  (count gameObjectToBin:basketball)
)
)



(define (game game-id-622) (:domain many-objects-room-v1)
(:setup
  (exists (?d - bridge_block)
    (and
      (game-conserved
        (and
          (or
            (not
              (equal_z_position ?r ?c)
            )
          )
          (on ?b ?d)
        )
      )
      (forall (?h - game_object ?h - teddy_bear)
        (game-conserved
          (on ?b ?b)
        )
      )
      (game-conserved
        (and
          (exists (?c4 - game_object ?g - hexagonal_bin ?b - dodgeball)
            (and
              (and
                (agent_holds ?d)
                (in_motion ?b)
                (agent_holds ?b)
              )
              (on ?h ?d)
            )
          )
          (not
            (and
              (not
                (exists (?h - game_object)
                  (exists (?r - hexagonal_bin ?b10 - dodgeball)
                    (and
                      (and
                        (and
                          (equal_x_position ?d door)
                          (and
                            (on rug ?d)
                            (on ?h ?d)
                          )
                          (and
                            (in_motion ?b)
                            (not
                              (in_motion ?t)
                            )
                            (and
                              (in_motion ?c)
                              (in_motion floor)
                            )
                          )
                        )
                        (not
                          (in ?b agent)
                        )
                        (not
                          (exists (?p1 - building)
                            (not
                              (agent_holds ?b)
                            )
                          )
                        )
                      )
                      (agent_holds ?l1)
                    )
                  )
                )
              )
              (agent_holds ?d)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference golfballLandsInBinThroughRamp
      (exists (?c1 - ball)
        (then
          (hold-while (and (in_motion ?c1) (agent_holds ?c1) ) (exists (?d - hexagonal_bin) (adjacent ?c1 ?d) ) (in_motion ?d) (in_motion desk) )
          (once (agent_holds ?c1) )
          (once (touch ?c1 ?c1) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (count-once-per-objects golfballLandsInBinThroughRamp:dodgeball) 4 )
      (>= (count golfballLandsInBinThroughRamp:cube_block:triangle_block) (count-shortest golfballLandsInBinThroughRamp:yellow) )
    )
    (>= (count-overlapping golfballLandsInBinThroughRamp:purple) 2 )
  )
)
(:scoring
  (external-forall-minimize
    (count golfballLandsInBinThroughRamp:red)
  )
)
)



(define (game game-id-623) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?o - triangular_ramp)
      (and
        (forall (?h - dodgeball ?o2 - cube_block)
          (and
            (game-conserved
              (and
                (in_motion ?o)
                (on ?b desk)
              )
            )
            (and
              (game-optional
                (in_motion ?o)
              )
            )
            (game-optional
              (in ?b ?b)
            )
          )
        )
        (game-conserved
          (and
            (and
              (in_motion ?o)
              (in ?o ?t)
              (agent_holds ?b)
            )
            (agent_holds ?c)
          )
        )
      )
    )
    (forall (?c5 - golfball ?d - (either teddy_bear cylindrical_block))
      (and
        (forall (?b3 - dodgeball)
          (and
            (forall (?s - dodgeball ?w2 - beachball)
              (and
                (game-conserved
                  (object_orientation ?d sideways)
                )
                (or
                  (game-optional
                    (in_motion ?d)
                  )
                  (forall (?w - (either desktop book floor))
                    (and
                      (and
                        (and
                          (and
                            (exists (?o - cube_block)
                              (and
                                (game-optional
                                  (in_motion ?o)
                                )
                              )
                            )
                          )
                          (game-conserved
                            (agent_holds ?b3)
                          )
                        )
                        (and
                          (exists (?o3 - block)
                            (game-conserved
                              (not
                                (on ?w2 ?h)
                              )
                            )
                          )
                          (and
                            (game-optional
                              (and
                                (in_motion ?h)
                                (agent_holds ?w)
                              )
                            )
                            (and
                              (game-optional
                                (agent_holds ?o)
                              )
                              (exists (?d - dodgeball)
                                (game-conserved
                                  (in_motion ?h)
                                )
                              )
                            )
                            (and
                              (game-optional
                                (agent_holds bed)
                              )
                            )
                          )
                          (forall (?w - game_object)
                            (and
                              (exists (?d - triangular_ramp)
                                (game-conserved
                                  (and
                                    (not
                                      (on ?d ?w2)
                                    )
                                    (in_motion ?b3)
                                  )
                                )
                              )
                            )
                          )
                        )
                        (not
                          (exists (?o3 ?t2 ?c4 ?r ?o ?b - game_object)
                            (game-conserved
                              (in ?p ?b)
                            )
                          )
                        )
                        (forall (?b - curved_wooden_ramp ?c2 - hexagonal_bin ?b - (either bridge_block dodgeball) ?o2 - bridge_block)
                          (and
                            (exists (?c - bridge_block)
                              (exists (?d2 - hexagonal_bin)
                                (exists (?h - curved_wooden_ramp)
                                  (game-optional
                                    (and
                                      (in_motion ?o)
                                      (between ?h ?d bed)
                                    )
                                  )
                                )
                              )
                            )
                            (game-conserved
                              (not
                                (forall (?w ?b3 - hexagonal_bin)
                                  (exists (?w2 - ball)
                                    (and
                                      (< (distance ?o2 ?w) 1)
                                      (in_motion ?c)
                                      (and
                                        (on ?b3 ?b)
                                        (agent_holds ?b3)
                                      )
                                    )
                                  )
                                )
                              )
                            )
                            (exists (?s - wall ?g - ball ?d - (either cylindrical_block triangular_ramp top_drawer))
                              (exists (?b6 - dodgeball ?o5 - doggie_bed)
                                (exists (?c - game_object ?l - pillow)
                                  (game-conserved
                                    (agent_holds ?b)
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                      (game-conserved
                        (on ?s ?b3)
                      )
                      (game-optional
                        (in_motion ?b)
                      )
                    )
                  )
                )
              )
            )
            (or
              (exists (?d - triangular_ramp ?b - hexagonal_bin)
                (forall (?g - chair)
                  (and
                    (and
                      (exists (?g - hexagonal_bin)
                        (forall (?d - hexagonal_bin)
                          (forall (?c - chair)
                            (exists (?h - ball)
                              (forall (?o - hexagonal_bin)
                                (exists (?c - block)
                                  (and
                                    (game-conserved
                                      (and
                                        (not
                                          (adjacent ?h ?b3)
                                        )
                                        (in_motion ?h)
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                      (game-conserved
                        (game_start )
                      )
                      (forall (?g - blinds)
                        (exists (?h - game_object)
                          (forall (?d2 - (either pyramid_block pink))
                            (game-conserved
                              (agent_holds ?s)
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
        (forall (?d1 ?w2 - drawer)
          (and
            (game-conserved
              (object_orientation ?h upright)
            )
          )
        )
        (game-conserved
          (in_motion desk)
        )
      )
    )
    (game-optional
      (toggled_on ?c)
    )
  )
)
(:constraints
  (and
    (preference failedThrowToBin
      (exists (?b7 - wall ?f - doggie_bed)
        (then
          (hold (on bed ?b) )
          (once (agent_holds ?f) )
          (once (exists (?d - building) (not (agent_holds ?d) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (+ (count failedThrowToBin:hexagonal_bin) (* (count failedThrowToBin:pink) 100 )
      )
      (count failedThrowToBin:yellow_pyramid_block)
    )
    2
  )
)
(:scoring
  (count failedThrowToBin:blue_cube_block:dodgeball)
)
)



(define (game game-id-624) (:domain few-objects-room-v1)
(:setup
  (exists (?h - game_object)
    (game-optional
      (not
        (and
          (not
            (exists (?c4 - teddy_bear ?d - dodgeball)
              (agent_holds ?h)
            )
          )
          (in_motion ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c - pillow ?b4 - building ?h - hexagonal_bin ?h - (either top_drawer mug book))
      (and
        (preference throwToRampToBin
          (exists (?o4 ?d - curved_wooden_ramp ?r - hexagonal_bin)
            (then
              (hold-while (not (not (faces ?b ?r) ) ) (and (not (not (agent_holds ?b) ) ) (agent_crouches ) ) (agent_holds ?h) )
              (once (and (agent_holds ?r) (not (in ?d ?c) ) (in_motion ?b) (not (on ?l1 ?b) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (count throwToRampToBin:dodgeball) )
)
(:scoring
  (+ (count-measure throwToRampToBin:dodgeball) (count-once throwToRampToBin:pink:dodgeball) )
)
)



(define (game game-id-625) (:domain medium-objects-room-v1)
(:setup
  (forall (?r2 ?c2 ?o ?s ?o1 ?b3 - dodgeball)
    (and
      (and
        (and
          (game-conserved
            (not
              (> (distance room_center ?r2) 1)
            )
          )
          (game-conserved
            (not
              (adjacent ?o1 ?b)
            )
          )
          (game-optional
            (on ?b3 ?o1)
          )
        )
        (exists (?b - building ?p ?g ?c1 ?o1 ?b2 ?p3 - curved_wooden_ramp)
          (game-conserved
            (and
              (not
                (same_color ?r ?b3)
              )
              (< (distance ?c2 ?o) (distance agent ?r))
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?t2 ?b - dodgeball ?b5 - hexagonal_bin ?l1 - hexagonal_bin ?w - ball)
      (and
        (preference itemsTurnedOff
          (exists (?l4 ?d ?b ?s - hexagonal_bin)
            (at-end
              (on ?b ?w)
            )
          )
        )
        (preference throwBallToBin
          (then
            (hold-while (not (and (touch ?w ?c) (on ?c3 ?d) ) ) (and (on ?bl ?d) (< (distance ?w ?b) 2) ) )
            (once (in ?w ?c1) )
            (once (agent_holds ?w) )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (count-once throwBallToBin:basketball:dodgeball) )
)
(:scoring
  (+ 4 (* (* (count throwBallToBin:blue_cube_block:dodgeball) (+ (count throwBallToBin:dodgeball) (+ (+ (* (* (+ 5 1 )
                  (- 25 )
                )
                (count-increasing-measure itemsTurnedOff:dodgeball:beachball)
              )
              3
            )
            (+ (+ (count-once throwBallToBin:beachball) 3 )
              (+ (- (count-once-per-external-objects itemsTurnedOff:cylindrical_block) )
                5
              )
            )
          )
        )
      )
      2
      (* 3 (* 3 18 )
        3
        (* (count itemsTurnedOff:hexagonal_bin) (* (< (+ 10 (external-forall-maximize (external-forall-maximize (count-once-per-objects itemsTurnedOff:beachball) ) ) )
              100
            )
            (count itemsTurnedOff:dodgeball:purple)
            (* (+ (count-once-per-external-objects throwBallToBin:green) (count throwBallToBin:yellow_cube_block:green) )
              10
            )
          )
          25
        )
      )
    )
  )
)
)



(define (game game-id-626) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?c6 - dodgeball)
      (and
        (and
          (exists (?b4 - game_object)
            (exists (?w1 - ball ?c - building)
              (game-conserved
                (in_motion ?b4)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - dodgeball ?h - color)
      (and
        (preference greenObjectMovedToRoomCenter
          (exists (?l - dodgeball)
            (then
              (hold (exists (?h - (either dodgeball hexagonal_bin)) (not (agent_holds ?h) ) ) )
              (once (not (and (adjacent agent ?s) (adjacent_side ?h front ?h) ) ) )
              (hold (agent_holds ?r) )
            )
          )
        )
        (preference throwToBinFromOppositeWall
          (then
            (once (not (in_motion ?h) ) )
            (hold-while (exists (?b - hexagonal_bin ?p - dodgeball) (= (distance side_table ?p) (distance rug ?b)) ) (open ?d) )
            (hold (touch desktop ?h) )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (+ 30 10 (* 20 (* (+ (external-forall-maximize (count throwToBinFromOppositeWall) ) (count throwToBinFromOppositeWall:blue_pyramid_block:blue_dodgeball) )
          (count throwToBinFromOppositeWall:yellow:pink_dodgeball)
        )
      )
    )
  )
)
(:scoring
  (count-longest greenObjectMovedToRoomCenter:rug)
)
)



(define (game game-id-627) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (exists (?c - (either cube_block desktop))
        (exists (?b4 ?l - game_object ?t2 ?b10 - cube_block ?d - blinds)
          (game-optional
            (adjacent agent ?d)
          )
        )
      )
      (game-optional
        (on ?g ?p)
      )
    )
  )
)
(:constraints
  (and
    (forall (?o - red_dodgeball)
      (and
        (preference throwToDrawerOrBin
          (exists (?r - ball)
            (then
              (once (in_motion ?r) )
              (once (and (same_type ?r bridge_block) (and (< (distance ?o bed) 1) (not (not (not (on ?b ?g) ) ) ) ) (< (distance_side agent front ?bl) (distance ?o ?b)) ) )
              (once (on ?d ?o) )
            )
          )
        )
      )
    )
    (preference golfballInBinFromPillow
      (exists (?d - triangular_ramp)
        (then
          (hold-while (not (agent_holds ?d) ) (agent_holds ?b) )
          (once (in ?g ?d) )
          (hold (and (in_motion ?b) (in_motion ?d) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (* 10 (* (* (count golfballInBinFromPillow:doggie_bed:red) (* 1 4 )
          )
          (count-increasing-measure golfballInBinFromPillow:beachball)
        )
      )
      (count throwToDrawerOrBin:basketball:dodgeball)
    )
    (< (* 9 (* (count-once-per-objects golfballInBinFromPillow:beachball:dodgeball) 30 )
      )
      (total-time)
    )
    (> (total-score) (count-once-per-objects throwToDrawerOrBin:yellow) )
  )
)
(:scoring
  (count-once-per-objects golfballInBinFromPillow:blue_pyramid_block)
)
)



(define (game game-id-628) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?o1 - building)
      (game-optional
        (agent_holds ?o1)
      )
    )
    (exists (?h ?c4 ?d2 - (either hexagonal_bin wall blue_cube_block))
      (forall (?d - ball)
        (and
          (not
            (game-conserved
              (agent_holds ?c4)
            )
          )
          (game-conserved
            (in top_drawer ?d)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference towerFallsWhileBuilding
      (exists (?d - hexagonal_bin ?c - cube_block)
        (then
          (once (agent_holds ?c) )
          (once (agent_holds ?o) )
          (once (exists (?b - hexagonal_bin) (and (in_motion ?c) (and (and (open ?c) ) ) (exists (?c4 - beachball) (on ?c ?g) ) ) ) )
        )
      )
    )
    (forall (?b9 ?b ?c2 - hexagonal_bin ?d ?d1 - wall ?h - game_object)
      (and
        (preference throwAttemptFromDoor
          (at-end
            (and
              (on ?c ?h)
              (not
                (not
                  (touch ?d ?h)
                )
              )
            )
          )
        )
      )
    )
    (forall (?p2 - chair ?h - cube_block)
      (and
        (preference dodgeballAndBasketballInBin
          (exists (?b - (either blue_cube_block book dodgeball) ?d - cube_block)
            (at-end
              (agent_holds ?d)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< (total-time) (+ 9 3 )
  )
)
(:scoring
  (* (count towerFallsWhileBuilding:alarm_clock) (* (> (- 3 )
        3
      )
      (* (count throwAttemptFromDoor:rug) (* (>= (- (* (* 9 )
                (count throwAttemptFromDoor:dodgeball)
              )
            )
            3
          )
          (count-once dodgeballAndBasketballInBin:green)
        )
      )
      10
    )
  )
)
)



(define (game game-id-629) (:domain few-objects-room-v1)
(:setup
  (exists (?c - hexagonal_bin ?b - cube_block)
    (and
      (game-conserved
        (object_orientation ?p2 sideways)
      )
      (game-conserved
        (not
          (in ?d ?b)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference watchOnShelf
      (exists (?r2 ?x ?c ?t1 - (either pyramid_block))
        (then
          (once (agent_holds bed) )
          (hold (agent_holds ?b) )
          (once (on ?c ?x) )
          (hold (in_motion ?c) )
          (once (not (not (and (and (agent_holds ?r2) (rug_color_under ?x brown) (< 10 (distance_side room_center right ?b)) (and (on ?x ?t) (agent_holds ?b) ) ) (agent_holds ?x) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (< (count-once-per-external-objects watchOnShelf:brown:hexagonal_bin:doggie_bed) (total-time) )
)
(:scoring
  (+ (* (- (* (* (external-forall-minimize (count watchOnShelf:cube_block:green) ) (count-once watchOnShelf:pink_dodgeball:orange) )
          (count watchOnShelf:dodgeball)
        )
      )
      (- (count-once-per-external-objects watchOnShelf:pyramid_block) )
    )
    (* (count watchOnShelf:green) (count-shortest watchOnShelf:doggie_bed) )
    (count watchOnShelf:beachball)
  )
)
)



(define (game game-id-630) (:domain many-objects-room-v1)
(:setup
  (exists (?o - cube_block)
    (and
      (exists (?s ?s ?h - cube_block)
        (game-conserved
          (not
            (not
              (and
                (same_color ?t ?s)
                (in_motion door)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference cubeBlockInBuilding
      (exists (?s - block ?t2 - (either dodgeball book))
        (then
          (once (not (agent_holds ?t2) ) )
          (hold (agent_holds ?t2) )
          (once (in_motion ?d) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (total-score) (* (* 100 (count cubeBlockInBuilding:beachball) )
          10
        )
      )
      (> (count-once-per-objects cubeBlockInBuilding:red) 3 )
    )
    (>= (total-score) (count cubeBlockInBuilding:yellow) )
  )
)
(:scoring
  (count cubeBlockInBuilding:basketball)
)
)



(define (game game-id-631) (:domain many-objects-room-v1)
(:setup
  (forall (?h - game_object ?b - drawer)
    (and
      (and
        (exists (?r2 - chair)
          (exists (?l4 - ball)
            (forall (?d - hexagonal_bin)
              (and
                (exists (?t - hexagonal_bin)
                  (game-conserved
                    (adjacent_side ?d front ?o)
                  )
                )
              )
            )
          )
        )
        (exists (?r1 - ball)
          (and
            (and
              (forall (?c2 - building)
                (exists (?h - chair ?w - hexagonal_bin)
                  (exists (?bl - building)
                    (game-optional
                      (and
                        (and
                          (above ?bl ?r1)
                          (agent_holds ?c2)
                        )
                        (on ?b ?c2)
                      )
                    )
                  )
                )
              )
              (forall (?h - game_object)
                (forall (?w1 - hexagonal_bin)
                  (game-conserved
                    (and
                      (in_motion ?b)
                      (not
                        (and
                          (agent_holds ?t)
                          (in ?d ?c)
                          (in_motion ?d)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
      (forall (?r - doggie_bed ?b5 - hexagonal_bin)
        (game-optional
          (and
            (and
              (exists (?h - (either dodgeball doggie_bed dodgeball) ?w1 - hexagonal_bin)
                (not
                  (adjacent ?b ?b5)
                )
              )
              (adjacent ?h floor)
            )
            (or
              (in_motion ?d)
              (not
                (opposite ?b ?b)
              )
              (< (building_size ?b) (x_position ?b5))
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttemptFromDoor
      (exists (?c - triangular_ramp ?b - dodgeball ?c4 ?t ?g ?o1 ?l1 ?c - dodgeball)
        (then
          (once (and (exists (?h ?w - golfball) (adjacent ?o1 ?c) ) (and (on ?g ?c) (open ?l1) ) ) )
          (hold (exists (?b2 - yellow_cube_block ?b1 - dodgeball) (agent_holds ?o1) ) )
          (once (same_type ?o1 pillow) )
        )
      )
    )
    (preference throwToBinFromDistance
      (exists (?l3 - wall ?b6 - hexagonal_bin)
        (then
          (once (and (and (and (and (in_motion ?b6) (and (and (agent_holds ?d) ) (on ?b6 ?b6) (touch ?b6 ?b6) ) (and (on ?b6 ?b) ) ) (adjacent agent ?b6) ) (not (on ?d ?b) ) (same_color agent tan) ) (in ?c4 ?b6) ) )
          (hold (adjacent bed ?h) )
          (hold-while (exists (?db - shelf ?b - (either cellphone yellow_cube_block)) (not (in bed ?b6) ) ) (not (on ?b6 ?b) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (and
      (<= (count-increasing-measure throwToBinFromDistance:basketball) (* (count throwAttemptFromDoor:hexagonal_bin:golfball) (* (count throwAttemptFromDoor:basketball:pink) (+ (+ (count-once-per-external-objects throwToBinFromDistance:tan) (count-once-per-objects throwToBinFromDistance:pyramid_block:basketball) )
              (count-once-per-objects throwAttemptFromDoor:golfball)
            )
          )
          20
        )
      )
      (> (count-once-per-objects throwAttemptFromDoor:green) (+ (count throwAttemptFromDoor:hexagonal_bin) (* (count throwAttemptFromDoor:beachball:golfball) 4 )
          6
        )
      )
      (and
        (>= (count-once throwAttemptFromDoor:yellow) (total-time) )
      )
    )
    (> (count-once-per-objects throwAttemptFromDoor:beachball) (total-time) )
  )
)
(:scoring
  (count-once-per-objects throwAttemptFromDoor)
)
)



(define (game game-id-632) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-optional
      (agent_holds ?d)
    )
    (exists (?l2 ?l - dodgeball)
      (and
        (game-optional
          (not
            (exists (?b - game_object ?o1 - hexagonal_bin)
              (not
                (not
                  (not
                    (in_motion ?g)
                  )
                )
              )
            )
          )
        )
      )
    )
    (exists (?p2 ?b ?o ?l4 ?b ?tb - hexagonal_bin)
      (or
        (and
          (game-conserved
            (on ?l1 ?b2)
          )
        )
        (and
          (game-conserved
            (agent_holds ?t)
          )
          (game-conserved
            (in_motion ?b)
          )
          (game-conserved
            (agent_holds ?g)
          )
        )
        (exists (?w2 - color ?h - curved_wooden_ramp ?db - teddy_bear)
          (and
            (exists (?b2 - curved_wooden_ramp)
              (exists (?c - dodgeball)
                (and
                  (not
                    (game-conserved
                      (and
                        (on ?b ?d)
                        (in_motion ?l)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
    (not
      (and
        (forall (?w1 - block)
          (exists (?t - chair)
            (and
              (and
                (and
                  (game-conserved
                    (agent_holds ?w)
                  )
                  (forall (?o - sliding_door ?b3 - (either laptop laptop chair golfball))
                    (exists (?b - doggie_bed)
                      (game-optional
                        (and
                          (on ?t ?r)
                          (on ?t ?w1)
                          (touch ?b1 ?b)
                        )
                      )
                    )
                  )
                )
                (forall (?h - hexagonal_bin)
                  (and
                    (exists (?w - doggie_bed)
                      (exists (?t2 - game_object)
                        (forall (?d - shelf)
                          (game-conserved
                            (opposite ?h ?o)
                          )
                        )
                      )
                    )
                    (game-conserved
                      (not
                        (in ?t main_light_switch)
                      )
                    )
                    (forall (?c - desk_shelf)
                      (game-conserved
                        (not
                          (agent_holds ?r)
                        )
                      )
                    )
                  )
                )
                (game-conserved
                  (> (distance agent ?b) 1)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?t - hexagonal_bin)
      (and
        (preference blockFromRugToDesk
          (exists (?b3 ?d - hexagonal_bin)
            (then
              (once (not (in ?d ?d) ) )
              (once (agent_holds ?t) )
              (once (agent_holds ?b) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (- (* 3 (count blockFromRugToDesk:pink) )
    )
    (total-time)
  )
)
(:scoring
  (* (count-once-per-objects blockFromRugToDesk:blue_pyramid_block) 3 )
)
)



(define (game game-id-633) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-conserved
      (and
        (not
          (in_motion ?o1)
        )
        (in_motion ?c6)
      )
    )
    (exists (?b - beachball ?w - dodgeball)
      (game-optional
        (not
          (in ?b4 ?w)
        )
      )
    )
    (exists (?r2 - ball)
      (game-conserved
        (not
          (in_motion ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToChair
      (exists (?d - (either doggie_bed desktop) ?d - game_object)
        (then
          (once (forall (?l - hexagonal_bin) (equal_z_position ?l ?c) ) )
          (once (< (distance ?c ?d) (distance ?d ?d)) )
          (once (not (not (exists (?r - hexagonal_bin ?h - hexagonal_bin ?d - hexagonal_bin) (agent_holds ?d) ) ) ) )
          (once (> 5 6) )
        )
      )
    )
    (preference bookOnDeskShelf
      (exists (?d - yellow_cube_block ?h - hexagonal_bin)
        (then
          (hold (not (adjacent_side ?h right ?b) ) )
          (hold (not (in_motion ?o1) ) )
          (once (in_motion ?b) )
        )
      )
    )
  )
)
(:terminal
  (< (total-score) (count ballThrownToChair:book) )
)
(:scoring
  (count ballThrownToChair:yellow)
)
)



(define (game game-id-634) (:domain few-objects-room-v1)
(:setup
  (exists (?p3 - (either dodgeball yellow_cube_block pencil) ?d1 - ball)
    (exists (?b - cube_block ?db - doggie_bed)
      (game-conserved
        (in ?d1 ?d)
      )
    )
  )
)
(:constraints
  (and
    (forall (?x - game_object ?d - (either flat_block cylindrical_block laptop))
      (and
        (preference tanObjectMovedToRoomCenter
          (exists (?o2 - block ?b6 ?c6 - hexagonal_bin)
            (then
              (hold (agent_holds ?c) )
              (once (in_motion ?d) )
              (once (equal_z_position ?r ?o) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (- (count-same-positions tanObjectMovedToRoomCenter:basketball) )
      (- (count-once-per-objects tanObjectMovedToRoomCenter:golfball) )
    )
  )
)
(:scoring
  (count-once-per-objects tanObjectMovedToRoomCenter:blue_dodgeball)
)
)



(define (game game-id-635) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?w2 - hexagonal_bin ?b - red_pyramid_block)
      (and
        (and
          (forall (?c2 - shelf)
            (forall (?o - hexagonal_bin)
              (game-conserved
                (agent_holds ?c2)
              )
            )
          )
          (or
            (game-conserved
              (and
                (agent_holds ?o)
                (in_motion ?o1)
              )
            )
          )
          (game-conserved
            (above ?b ?d)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - triangular_ramp)
      (and
        (preference ballThrownFromBehindBlock
          (exists (?o - wall ?w2 - (either top_drawer yellow_cube_block dodgeball) ?b10 - ball)
            (at-end
              (not
                (touch ?d ?b10)
              )
            )
          )
        )
      )
    )
    (preference ballThrownHitsAgent
      (exists (?b3 - (either laptop alarm_clock))
        (then
          (once (and (is_setup_object ?b3) (adjacent ?b3 ?b3) (and (above ?b3 ?b) (on ?t ?b) ) (exists (?x - hexagonal_bin ?w2 - wall) (in_motion ?b) ) ) )
          (once (not (in ?b3 ?b) ) )
          (once (in ?b ?b3) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects ballThrownFromBehindBlock:red) (= (- 1 )
      (count ballThrownFromBehindBlock:red)
    )
  )
)
(:scoring
  (* (* (= 6 (count-once-per-objects ballThrownHitsAgent:dodgeball) )
      10
    )
    (count-once ballThrownHitsAgent:basketball)
  )
)
)



(define (game game-id-636) (:domain medium-objects-room-v1)
(:setup
  (exists (?o ?o2 ?l3 ?o3 ?h ?b - hexagonal_bin)
    (exists (?t2 - doggie_bed)
      (exists (?c3 - wall ?b - building)
        (exists (?b ?l - chair)
          (game-conserved
            (agent_holds ?b)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttemptFromBehindBlock
      (exists (?c - curved_wooden_ramp)
        (then
          (once (not (rug_color_under ?h pink) ) )
          (once (adjacent bed floor) )
          (once (not (not (not (not (on ?w1 ?c) ) ) ) ) )
          (once (not (and (not (not (on ?c ?c) ) ) (agent_holds desk) ) ) )
        )
      )
    )
    (preference pillowMovedToRoomCenter
      (exists (?p3 - building)
        (then
          (hold-while (not (same_type ?p3 drawer) ) (in_motion ?o) (on ?p3 ?p3) )
          (hold (adjacent ?s ?p3) )
          (hold-while (not (not (< (x_position ?t) (distance desk ?c)) ) ) (not (adjacent ?s ?p3) ) (and (in ?p3 ?h) (on ?b ?p3) (not (and (= 1 1) (in_motion ?p3) (not (and (in bed ?g) (not (in_motion ?p3) ) ) ) (toggled_on ?b) ) ) ) )
        )
      )
    )
    (forall (?b - ball)
      (and
        (preference blocksInPlace
          (exists (?o2 - dodgeball)
            (then
              (hold (in_motion ?b) )
              (once (on west_wall ?o2) )
              (once (in_motion ?o) )
              (once (on ?t ?o1) )
            )
          )
        )
        (preference blueObjectMovedToRoomCenter
          (exists (?d - (either dodgeball mug))
            (then
              (once (on ?b ?b) )
              (hold-while (agent_holds ?b) (not (and (and (in ?d rug) (agent_holds ?b) ) (in_motion ?b) ) ) )
              (hold (adjacent side_table ?d) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (- 3 )
    (count-once-per-external-objects blueObjectMovedToRoomCenter:basketball)
  )
)
(:scoring
  (count pillowMovedToRoomCenter:dodgeball)
)
)



(define (game game-id-637) (:domain many-objects-room-v1)
(:setup
  (exists (?p3 - tall_cylindrical_block)
    (exists (?w1 - dodgeball)
      (and
        (game-conserved
          (adjacent ?h ?r)
        )
        (game-optional
          (not
            (< (distance ?p3 ?w1) (distance ?d ?o))
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference baseBlockInTowerAtEnd
      (exists (?r - dodgeball)
        (then
          (once (< 2 1) )
          (once (agent_holds ?bl) )
          (once (on ?r ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= (count baseBlockInTowerAtEnd:pink:red) (total-score) )
)
(:scoring
  (* (count-total baseBlockInTowerAtEnd:basketball) 10 )
)
)



(define (game game-id-638) (:domain many-objects-room-v1)
(:setup
  (exists (?o2 - hexagonal_bin)
    (game-conserved
      (agent_holds ?l1)
    )
  )
)
(:constraints
  (and
    (forall (?o - (either dodgeball key_chain) ?h - (either cellphone bridge_block lamp pencil blue_cube_block tall_cylindrical_block blue_cube_block))
      (and
        (preference throwToBinFromDistance
          (exists (?h - hexagonal_bin)
            (then
              (once (and (in_motion ?d) (in ?d agent) (exists (?tb - (either book pencil cube_block)) (adjacent ?d ?h) ) (on ?h ?h) ) )
              (once (equal_z_position ?h ?h) )
              (hold (in_motion ?h) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (= (count throwToBinFromDistance:beachball) (count throwToBinFromDistance:basketball) )
)
(:scoring
  (= (count-once-per-objects throwToBinFromDistance:basketball:dodgeball) 3 )
)
)



(define (game game-id-639) (:domain few-objects-room-v1)
(:setup
  (exists (?g - game_object)
    (forall (?b - pillow)
      (game-optional
        (on ?b ?b)
      )
    )
  )
)
(:constraints
  (and
    (forall (?t2 - (either golfball dodgeball))
      (and
        (preference teddyBearLandsInBin
          (exists (?b - red_dodgeball ?d - block)
            (then
              (hold (in_motion ?t2) )
              (once (not (opposite rug ?d) ) )
              (hold-while (not (agent_holds ?t2) ) (and (game_start ) (not (not (and (equal_z_position ?h ?c1) (in ?b ?d) ) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< (count-once-per-objects teddyBearLandsInBin:golfball) 3 )
)
(:scoring
  (- (- (count-shortest teddyBearLandsInBin:basketball) )
  )
)
)



(define (game game-id-640) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?d - game_object ?b - ball ?o5 - hexagonal_bin ?h - (either dodgeball cube_block))
      (game-conserved
        (in_motion ?h)
      )
    )
  )
)
(:constraints
  (and
    (preference thrownObjectHitsComputer
      (exists (?d ?d - (either alarm_clock bridge_block))
        (then
          (hold (< (distance room_center ?t) 1) )
          (once (agent_holds ?d) )
          (once (in ?d ?c) )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (>= 2 (count thrownObjectHitsComputer:dodgeball) )
      (count thrownObjectHitsComputer:cube_block)
    )
    (>= (+ (count-once-per-external-objects thrownObjectHitsComputer:blue_dodgeball:dodgeball) (* 3 (count-once-per-objects thrownObjectHitsComputer:tall_cylindrical_block) )
        180
        (* (= (- (count-once thrownObjectHitsComputer:doggie_bed) )
          )
          (count-once-per-external-objects thrownObjectHitsComputer:orange)
        )
      )
      (count-once-per-objects thrownObjectHitsComputer:red)
    )
    (or
      (or
        (>= 10 (count thrownObjectHitsComputer:purple) )
        (or
          (not
            (>= (total-time) (count thrownObjectHitsComputer:pink) )
          )
          (or
            (or
              (or
                (>= 3 3 )
                (>= (count thrownObjectHitsComputer:beachball) 300 )
              )
              (> (count thrownObjectHitsComputer:blue_dodgeball) 3 )
              (<= (* 10 2 )
                10
              )
            )
          )
        )
      )
      (>= 2 (count thrownObjectHitsComputer:basketball) )
    )
  )
)
(:scoring
  (count-once thrownObjectHitsComputer:dodgeball)
)
)



(define (game game-id-641) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-conserved
      (agent_holds ?g)
    )
    (forall (?b10 - ball ?h - cube_block)
      (forall (?l - block)
        (forall (?w - ball)
          (and
            (forall (?b5 - game_object)
              (and
                (game-conserved
                  (not
                    (in_motion ?d)
                  )
                )
              )
            )
            (game-optional
              (and
                (not
                  (and
                    (and
                      (not
                        (and
                          (exists (?b - (either side_table hexagonal_bin))
                            (not
                              (agent_holds ?b)
                            )
                          )
                          (exists (?p2 - (either triangle_block golfball))
                            (agent_holds ?w)
                          )
                        )
                      )
                      (faces ?w ?h)
                      (or
                        (same_object ?l ?d)
                        (and
                          (agent_holds ?h)
                          (not
                            (touch ?d ?l)
                          )
                        )
                      )
                      (adjacent ?r ?w)
                      (and
                        (is_setup_object ?b)
                        (not
                          (not
                            (is_setup_object ?l1)
                          )
                        )
                      )
                      (broken ?l)
                    )
                    (and
                      (in_motion ?w)
                      (and
                        (in_motion ?o)
                        (touch ?l ?l)
                      )
                    )
                  )
                )
                (in_motion ?l)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference baseBlockInTowerAtEnd
      (exists (?p2 - hexagonal_bin ?b10 - cube_block)
        (then
          (once (agent_holds ?t) )
          (once (in_motion ?b10) )
          (once (agent_holds ?b10) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count-measure baseBlockInTowerAtEnd:pink_dodgeball) 2 )
    2
  )
)
(:scoring
  (count-unique-positions baseBlockInTowerAtEnd:hexagonal_bin)
)
)



(define (game game-id-642) (:domain medium-objects-room-v1)
(:setup
  (exists (?b5 ?l - flat_block)
    (game-optional
      (agent_holds ?b)
    )
  )
)
(:constraints
  (and
    (preference objectOnBed
      (exists (?t2 - dodgeball)
        (then
          (hold (and (not (agent_holds ?t2) ) (between ?h ?t ?t2) ) )
          (once (not (in_motion ?d) ) )
          (hold (not (adjacent desk ?t2) ) )
        )
      )
    )
    (preference ballThrownIntoTarget
      (exists (?c4 - hexagonal_bin)
        (then
          (hold (agent_holds ?d) )
          (once (in_motion ?c4) )
          (once (touch ?c4 ?c4) )
        )
      )
    )
    (forall (?h - curved_wooden_ramp ?d ?r - doggie_bed ?o - red_dodgeball)
      (and
        (preference dodgeballThrownToBinFromDesk
          (exists (?d - dodgeball)
            (then
              (once (< (distance ?o ?c) 1) )
              (hold (adjacent bed ?w1) )
              (once (adjacent ?r ?c) )
              (hold (open ?d) )
            )
          )
        )
        (preference thrownBallReachesEnd
          (exists (?w2 - (either teddy_bear blue_cube_block))
            (then
              (hold (and (and (agent_holds ?w2) (adjacent_side agent front ?d front) (same_color ?w2 ?w2) ) (in ?b ?d) (agent_holds ?o) ) )
              (hold (adjacent ?w2 ?l) )
              (once (not (on ?t ?w2) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (total-score) (+ 7 (count dodgeballThrownToBinFromDesk:dodgeball) (* (* 3 )
        9
        (* (* (- (- (- 1 )
              )
            )
            (* (- (* 2 (count-measure thrownBallReachesEnd:dodgeball) )
              )
              (count-once-per-objects ballThrownIntoTarget:bed)
              (count dodgeballThrownToBinFromDesk:orange:rug)
            )
          )
          (- (* (/ 5 1 ) (count-once thrownBallReachesEnd:basketball) )
          )
        )
        0
      )
      18
      (count objectOnBed:doggie_bed)
      (count thrownBallReachesEnd:beachball)
      (count-overlapping ballThrownIntoTarget:blue_dodgeball:blue_pyramid_block:yellow)
      (- 2 )
      (count-increasing-measure dodgeballThrownToBinFromDesk:beachball)
    )
  )
)
(:scoring
  (count thrownBallReachesEnd:green)
)
)



(define (game game-id-643) (:domain few-objects-room-v1)
(:setup
  (exists (?c - yellow_cube_block)
    (exists (?b - hexagonal_bin)
      (forall (?p3 - block)
        (and
          (exists (?b4 - dodgeball ?w2 - (either tall_cylindrical_block credit_card))
            (game-optional
              (on agent ?d)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallFromOtherBallToBin
      (exists (?t ?c - chair ?p3 - ball)
        (then
          (once (agent_holds ?bl) )
          (once (not (not (and (agent_holds ?w2) (and (< 7 (distance ?p3 ?o)) (on ?h ?r) ) (broken ?p3) (and (and (in_motion ?p3) (agent_holds ?d) ) (forall (?c - dodgeball) (not (agent_holds ?b) ) ) ) (on ?p3 ?b) (and (or (agent_holds ?p3) (< 1 1) ) (in_motion ?p3) ) (agent_holds ?p3) (and (object_orientation ?b sideways) (in_motion ?p3) ) ) ) ) )
          (hold (and (in_motion bed) (and (in ?d ?p3) (and (not (and (not (agent_holds ?l3) ) (on desk ?p3) ) ) (on ?h ?c1) (object_orientation ?p3 upright) ) ) ) )
          (once (in_motion ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= (count throwBallFromOtherBallToBin:basketball:cylindrical_block) (+ (count throwBallFromOtherBallToBin:pink_dodgeball) (* (* 3 (count-once throwBallFromOtherBallToBin:dodgeball) )
        (+ (external-forall-maximize (count-unique-positions throwBallFromOtherBallToBin:purple) ) (count throwBallFromOtherBallToBin:beachball) 3 (external-forall-minimize (- 1 )
          )
          (count-same-positions throwBallFromOtherBallToBin:pink)
          2
          (count-measure throwBallFromOtherBallToBin:white)
          6
          1
          3
          (count throwBallFromOtherBallToBin:basketball)
          8
        )
      )
    )
  )
)
(:scoring
  (* 10 4 )
)
)



(define (game game-id-644) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (not
      (open ?g)
    )
  )
)
(:constraints
  (and
    (preference matchingBuildingBuilt
      (exists (?ob - wall ?h ?c2 - hexagonal_bin ?t2 - hexagonal_bin)
        (at-end
          (open ?c2)
        )
      )
    )
  )
)
(:terminal
  (< 5 (* 0.5 (count matchingBuildingBuilt:hexagonal_bin) )
  )
)
(:scoring
  (count matchingBuildingBuilt:dodgeball)
)
)



(define (game game-id-645) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (and
      (game_over )
      (agent_holds ?d)
    )
  )
)
(:constraints
  (and
    (forall (?h - hexagonal_bin ?d - (either mug watch laptop))
      (and
        (preference dodgeballBouncesOnceToDoggieBed
          (exists (?d - building)
            (then
              (once (is_setup_object ?b) )
              (hold-while (agent_holds ?l1) (in_motion south_wall) (and (agent_holds ?d) (faces ?o3 ?c) ) )
              (hold (agent_holds bed) )
            )
          )
        )
      )
    )
    (forall (?b3 - red_dodgeball)
      (and
        (preference blockPickedUp
          (exists (?p1 - watch ?b4 - game_object)
            (at-end
              (in_motion ?b3)
            )
          )
        )
        (preference bigObjectThrownToBed
          (exists (?b - triangular_ramp)
            (then
              (once (and (in ?h ?b) (in_motion ?b) (not (in_motion ?b) ) (in_motion bed) ) )
              (hold (in_motion rug) )
              (hold (and (agent_holds ?h) (and (not (in ?d ?r) ) (toggled_on ?b) ) ) )
            )
          )
        )
        (preference throwOverRamp
          (exists (?o - red_pyramid_block)
            (then
              (hold (agent_holds ?b3) )
              (hold (in_motion ?b3) )
              (once (between ?b3 ?o2 ?o) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) 10 )
)
(:scoring
  (count dodgeballBouncesOnceToDoggieBed:doggie_bed)
)
)



(define (game game-id-646) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (and
      (not
        (same_color ?bl pink)
      )
      (< 7 5)
    )
  )
)
(:constraints
  (and
    (preference ballThrownToRampToBed
      (exists (?tb - chair ?b4 - dodgeball)
        (then
          (hold (not (not (and (and (on ?r ?l) (agent_holds ?b4) ) (agent_holds ?b4) ) ) ) )
          (once (agent_holds ?b4) )
          (hold (adjacent desk ?b) )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (total-score) 2 )
    (>= (total-score) (* (* (count ballThrownToRampToBed:beachball) (count ballThrownToRampToBed:yellow_pyramid_block:doggie_bed) )
        (+ 1 (* (count-once ballThrownToRampToBed:pink_dodgeball) (count ballThrownToRampToBed:pink) )
        )
        (count ballThrownToRampToBed:tan)
        2
      )
    )
    (>= (count ballThrownToRampToBed:beachball) (* (count ballThrownToRampToBed:golfball) (* 7 )
      )
    )
  )
)
(:scoring
  (count ballThrownToRampToBed:rug)
)
)



(define (game game-id-647) (:domain many-objects-room-v1)
(:setup
  (exists (?b10 - curved_wooden_ramp)
    (not
      (exists (?w2 - block)
        (exists (?o4 - block)
          (game-conserved
            (not
              (agent_holds ?b10)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o - hexagonal_bin ?c3 - teddy_bear)
      (and
        (preference throwAttemptFromBehindBlock
          (exists (?o ?d - (either golfball key_chain))
            (then
              (hold (< 2 1) )
              (once (agent_holds ?l) )
              (hold (in_motion ?c3) )
            )
          )
        )
      )
    )
    (preference throwToDrawerOrBin
      (exists (?x - hexagonal_bin ?o3 - dodgeball)
        (then
          (once (agent_holds ?c) )
          (once (adjacent rug ?o3) )
          (once (and (not (and (or (and (< 1 6) (in_motion ?o3) ) (not (or (agent_holds ?o3) (in_motion ?o3) ) ) ) (on ?o3 ?c) ) ) (adjacent ?o ?b) ) )
        )
      )
    )
    (preference cubeThrownToBin
      (exists (?h ?c1 - cube_block)
        (then
          (once (same_color ?s ?c) )
        )
      )
    )
    (preference baseBlockInTowerAtEnd
      (exists (?d - pillow)
        (then
          (once (same_type ?d pillow) )
          (once (adjacent_side bed front ?d) )
          (hold (and (and (< 7 (distance ?d ?b)) (and (touch ?d ?d) (agent_holds ?d) ) ) (on top_shelf ?d) (agent_holds ?d) (> (distance ?d ?d) (distance room_center ?b)) ) )
        )
      )
    )
    (forall (?h - cube_block)
      (and
        (preference brownObjectMovedToRoomCenter
          (exists (?c - cube_block ?b - triangular_ramp)
            (then
              (hold (and (< 0 10) (on ?h desk) ) )
              (hold (agent_holds ?t) )
              (once (agent_holds ?h) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (total-time) (count brownObjectMovedToRoomCenter:pink) )
)
(:scoring
  (count-total throwAttemptFromBehindBlock:blue_cube_block)
)
)



(define (game game-id-648) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds ?d)
  )
)
(:constraints
  (and
    (preference blockInTowerKnockedByDodgeball
      (exists (?h - ball)
        (then
          (once (agent_holds ?h) )
          (once (not (not (equal_x_position ?w2 ?f) ) ) )
          (hold (on ?c ?h) )
        )
      )
    )
  )
)
(:terminal
  (>= 6 (count-once-per-objects blockInTowerKnockedByDodgeball:dodgeball:dodgeball) )
)
(:scoring
  (- (count blockInTowerKnockedByDodgeball:beachball) )
)
)



(define (game game-id-649) (:domain many-objects-room-v1)
(:setup
  (exists (?b - dodgeball ?b9 - (either top_drawer red))
    (and
      (and
        (forall (?b - block)
          (and
            (exists (?s - hexagonal_bin)
              (exists (?d2 - ball)
                (game-conserved
                  (touch ?db ?d2)
                )
              )
            )
          )
        )
        (and
          (and
            (game-conserved
              (adjacent agent ?b)
            )
          )
          (game-conserved
            (agent_holds ?c)
          )
        )
        (game-conserved
          (in_motion ?b9)
        )
      )
      (game-conserved
        (or
          (adjacent desk ?b)
          (on ?d ?b9)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballOnBedAtEnd
      (exists (?o3 - shelf ?t1 - building)
        (then
          (once (same_object ?o1 ?t1) )
          (once (in_motion ?o) )
          (once (toggled_on ?o) )
        )
      )
    )
    (preference pillowThrownToDoggieBed
      (exists (?b1 - dodgeball ?l2 - ball)
        (then
          (once (in_motion ?l2) )
          (hold (agent_holds ?l2) )
          (hold (in_motion ?g) )
          (once (not (not (same_color ?b ?l2) ) ) )
          (once (not (agent_holds ?b) ) )
        )
      )
    )
  )
)
(:terminal
  (> 5 (+ (* (count-measure ballOnBedAtEnd:pink) (+ 10 3 )
      )
      (* 3 (count ballOnBedAtEnd:pink_dodgeball) (<= 0 (* 5 1 4 (count-once-per-objects ballOnBedAtEnd:orange) (count pillowThrownToDoggieBed:basketball) (count-once-per-objects pillowThrownToDoggieBed:top_drawer) )
        )
        (count pillowThrownToDoggieBed:purple)
        (-
          (- (count pillowThrownToDoggieBed:blue_dodgeball) )
          5
        )
        (>= (count pillowThrownToDoggieBed:yellow:pink:beachball) (count-once ballOnBedAtEnd:yellow_pyramid_block) )
      )
      40
      (* (count ballOnBedAtEnd:basketball:red) 18 2 (* 4 8 (count-once-per-objects pillowThrownToDoggieBed:pink:doggie_bed) )
        (count-once-per-objects pillowThrownToDoggieBed:basketball)
        1
      )
      2
      (count-once-per-objects ballOnBedAtEnd)
      6
      7
      0
      (count-once-per-objects ballOnBedAtEnd:basketball)
      (count-once ballOnBedAtEnd:tan:hexagonal_bin)
      (* (count ballOnBedAtEnd:dodgeball) 2 )
    )
  )
)
(:scoring
  (* 7 (* 4 (count-same-positions pillowThrownToDoggieBed:yellow:green) )
  )
)
)



(define (game game-id-650) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (and
      (object_orientation rug sideways)
      (in_motion ?r)
    )
  )
)
(:constraints
  (and
    (forall (?b5 - dodgeball ?h - (either cellphone dodgeball pyramid_block))
      (and
        (preference agentLeavesDogbedOrNoMoreBalls
          (exists (?g ?o5 - dodgeball)
            (then
              (once-measure (adjacent_side agent front ?g) (distance ?h ?h) )
              (once (not (not (exists (?l - chair) (in_motion ?o5) ) ) ) )
              (once (in_motion ?b) )
            )
          )
        )
        (preference redDodgeballThrownToBinWithoutTouchingFloor
          (exists (?b6 - triangular_ramp ?c4 - cube_block ?d - block)
            (then
              (once (and (and (in_motion ?o) (and (and (and (not (on ?d ?h) ) (agent_holds ?o) ) (and (and (same_color ?h brown) (not (and (object_orientation ?b sideways) (same_color ?c ?c) ) ) ) (and (open ?d) (and (not (in_motion ?b) ) (not (and (in ?h ?h) ) ) ) (in_motion ?o) ) ) ) (adjacent ?d ?d) (agent_holds ?d) ) (and (and (agent_holds ?b) (adjacent ?d ?h) ) ) ) (in_motion ?h) (agent_holds ?g) ) )
              (once (not (and (game_over ) (in_motion ?d) ) ) )
              (hold (and (not (touch ?d ?h) ) (on ?r ?b) ) )
            )
          )
        )
        (preference ballThrownHitsAgent
          (exists (?h - hexagonal_bin)
            (then
              (hold (< (distance ?w2 ?d) (distance desk ?h)) )
              (once (in floor bed) )
              (once (and (and (in ?h ?g) (agent_holds ?h) (same_type ?b ?l4) ) (on ?d ?h) ) )
            )
          )
        )
      )
    )
    (preference objectToBinOnFirstTry
      (exists (?c1 - hexagonal_bin ?b - hexagonal_bin)
        (then
          (once (in_motion ?h) )
          (once (is_setup_object desk) )
          (hold-while (not (forall (?o - (either chair beachball)) (agent_holds ?o) ) ) (agent_holds ?o) (on ?b ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects agentLeavesDogbedOrNoMoreBalls:basketball) (count-once-per-objects redDodgeballThrownToBinWithoutTouchingFloor:blue_pyramid_block:pink_dodgeball) )
)
(:scoring
  (- (count ballThrownHitsAgent:basketball) )
)
)



(define (game game-id-651) (:domain medium-objects-room-v1)
(:setup
  (not
    (game-conserved
      (game_over )
    )
  )
)
(:constraints
  (and
    (forall (?l3 - hexagonal_bin ?c - desk_shelf)
      (and
        (preference throwFromEdgeOfRug
          (exists (?b4 ?t2 ?r1 - hexagonal_bin)
            (then
              (once (on ?t2 ?t2) )
              (once (not (not (agent_holds ?c) ) ) )
              (once (not (in_motion ?h) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (= 2 (* (+ 5 20 )
          10
        )
        5
      )
      (* 6 5 (count-overlapping throwFromEdgeOfRug:blue_dodgeball) )
    )
  )
)
(:scoring
  (* 5 (count throwFromEdgeOfRug:beachball:basketball) )
)
)



(define (game game-id-652) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds desk)
  )
)
(:constraints
  (and
    (preference greenObjectMovedToRoomCenter
      (exists (?b8 - shelf)
        (then
          (hold (and (not (and (not (in ?o3 ?o) ) (not (in_motion ?b) ) ) ) (not (in_motion ?b8) ) (agent_holds ?b8) ) )
        )
      )
    )
  )
)
(:terminal
  (> (count-same-positions greenObjectMovedToRoomCenter:pink:hexagonal_bin) 4 )
)
(:scoring
  (* (count greenObjectMovedToRoomCenter:beachball) (* 15 (+ (count greenObjectMovedToRoomCenter:doggie_bed) (count greenObjectMovedToRoomCenter:red) )
    )
  )
)
)



(define (game game-id-653) (:domain few-objects-room-v1)
(:setup
  (and
    (game-conserved
      (or
        (agent_holds ?o)
        (< 0 9)
      )
    )
  )
)
(:constraints
  (and
    (preference throwOverRamp
      (exists (?w - pyramid_block)
        (then
          (hold-while (on desk ?w) (agent_holds ?b) )
          (hold (is_setup_object ?b2) )
          (once (not (< 1 (distance desk ?bl)) ) )
        )
      )
    )
  )
)
(:terminal
  (> (count-once throwOverRamp:dodgeball) 5 )
)
(:scoring
  (count throwOverRamp:hexagonal_bin:brown)
)
)



(define (game game-id-654) (:domain medium-objects-room-v1)
(:setup
  (exists (?h - beachball)
    (exists (?d - drawer ?c2 - building)
      (and
        (exists (?t - sliding_door)
          (exists (?c - hexagonal_bin)
            (exists (?d - hexagonal_bin ?o3 ?w2 - game_object)
              (forall (?d - ball)
                (and
                  (game-optional
                    (rug_color_under ?h ?c)
                  )
                  (and
                    (game-conserved
                      (on ?t ?o)
                    )
                  )
                  (exists (?l - game_object)
                    (game-optional
                      (< (distance ?c ?t) 5)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference gameObjectToBin
      (exists (?f - hexagonal_bin ?h - (either cellphone triangle_block))
        (at-end
          (on ?h ?b)
        )
      )
    )
    (preference blockFromRugToDesk
      (exists (?b ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?b) (and (and (and (agent_holds ?h) (and (not (game_start ) ) (agent_holds ?f) (adjacent ?h ?h) (and (and (on ?o ?b) ) (not (in_motion agent) ) ) (and (in_motion ?g) (and (object_orientation ?o ?b) (in_motion ?b) (in_motion ?b2) ) (not (and (and (same_type top_drawer ?b) (on ?l ?h) (not (and (in_motion ?h) (and (not (and (agent_holds ?d1) (in_motion ?d) ) ) (not (not (not (and (not (and (in ?c ?h) (and (faces ?h ?g) (not (< 5 5) ) (in ?d ?h) ) ) ) (in ?b ?b) ) ) ) ) ) (< (distance agent floor) 1) (and (object_orientation ?b upright) (and (and (forall (?b1 - hexagonal_bin ?p - doggie_bed) (< (distance ?h ?b) 2) ) (< (distance door ?h) 3) ) (not (not (= 1 (distance_side room_center left ?b)) ) ) (and (agent_holds ?b) (in_motion ?o1) ) ) ) ) ) ) (agent_holds ?h) ) ) (not (not (and (not (> 10 (distance ?s ?o)) ) (in_motion ?d) (in_motion ?h) ) ) ) ) (or (exists (?b7 - game_object ?b9 - ball) (and (in_motion ?d) (agent_holds ?b9) (agent_holds rug) ) ) (not (not (agent_holds ?p) ) ) ) ) (<= 4 (distance desk ?h)) ) (agent_holds ?b1) ) (and (agent_holds ?o3) (not (and (and (agent_holds ?h) (on ?c ?b) (in ?d ?h) (not (adjacent room_center ?h) ) ) (rug_color_under ?h ?b) ) ) ) ) ) )
          (once (adjacent_side door front ?c) )
          (hold (in ?b agent) )
        )
      )
    )
    (forall (?o - hexagonal_bin ?c - ball ?c - dodgeball)
      (and
        (preference throwAttemptKnocksBlock
          (exists (?d - building ?w2 - (either teddy_bear dodgeball blue_cube_block) ?tb - yellow_pyramid_block)
            (then
              (hold (in_motion desk) )
              (once (agent_holds ?d) )
              (hold (not (touch ?c ?tb) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects blockFromRugToDesk:pink) 10 )
)
(:scoring
  (count blockFromRugToDesk)
)
)



(define (game game-id-655) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (opposite desk bed)
  )
)
(:constraints
  (and
    (forall (?h ?r1 - cube_block)
      (and
        (preference dodgeballThrownToBinFromDesk
          (exists (?h - hexagonal_bin ?b - (either beachball cube_block golfball))
            (then
              (once (not (not (not (and (and (and (in_motion ?c) (and (= 1 (distance room_center agent)) (not (adjacent ?r ?r1) ) ) (agent_holds ?r1) ) (not (in ?d ?r1) ) ) (in_motion ?h) ) ) ) ) )
              (once (in_motion ?t) )
              (once (not (above floor ?b) ) )
            )
          )
        )
      )
    )
    (preference thrownObjectHitsComputer
      (exists (?c ?b ?c ?b4 ?p2 - hexagonal_bin)
        (then
          (once (< 6 (distance ?h agent)) )
          (once-measure (touch ?b4 ?b) (distance agent ?b) )
          (hold (or (not (not (faces ?b ?r) ) ) (in ?d top_drawer) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (total-time) (* (* (* 3 3 )
          3
          1
          2
          (count-once-per-objects thrownObjectHitsComputer:pink_dodgeball)
        )
        (count-once-per-objects thrownObjectHitsComputer:dodgeball)
      )
    )
    (or
      (>= (= (count dodgeballThrownToBinFromDesk) (count dodgeballThrownToBinFromDesk:beachball) )
        3
      )
      (>= (count dodgeballThrownToBinFromDesk:blue) (+ 2 0.5 (count thrownObjectHitsComputer:hexagonal_bin) )
      )
      (and
        (<= 3 (* 3 (+ (* (count-once-per-objects dodgeballThrownToBinFromDesk:hexagonal_bin) 5 )
              8
            )
          )
        )
        (>= (count-once dodgeballThrownToBinFromDesk:yellow:tall_cylindrical_block:side_table) (= (= (count-shortest dodgeballThrownToBinFromDesk:basketball) (count dodgeballThrownToBinFromDesk:golfball) )
          )
        )
        (or
          (and
            (or
              (>= (total-score) (count dodgeballThrownToBinFromDesk:dodgeball) )
              (>= (count dodgeballThrownToBinFromDesk:beachball) (> (count thrownObjectHitsComputer:hexagonal_bin) 2 )
              )
            )
          )
          (>= 25 (- (count dodgeballThrownToBinFromDesk:yellow) )
          )
        )
      )
      (> (count dodgeballThrownToBinFromDesk:beachball) (+ (- (* 10 (count thrownObjectHitsComputer:purple) )
          )
          3
        )
      )
    )
  )
)
(:scoring
  (+ 1 2 )
)
)



(define (game game-id-656) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - (either dodgeball beachball key_chain alarm_clock))
      (and
        (and
          (forall (?c - (either yellow game_object))
            (and
              (game-optional
                (not
                  (and
                    (not
                      (same_object ?b3 ?p)
                    )
                    (agent_holds ?b)
                  )
                )
              )
              (game-conserved
                (in ?c ?b)
              )
              (game-conserved
                (not
                  (in_motion ?d)
                )
              )
              (game-conserved
                (agent_holds ?r)
              )
            )
          )
          (and
            (and
              (and
                (game-conserved
                  (touch ?h ?c)
                )
              )
            )
          )
          (or
            (and
              (game-conserved
                (and
                  (agent_holds ?h)
                  (exists (?h - (either cd dodgeball) ?b - hexagonal_bin)
                    (in ?d ?b)
                  )
                )
              )
            )
            (game-conserved
              (not
                (and
                  (not
                    (not
                      (and
                        (agent_holds ?d)
                        (same_object ?h ?h)
                      )
                    )
                  )
                  (exists (?b5 - ball ?c2 ?d ?d - building ?o5 - ball ?w - teddy_bear)
                    (in_motion ?b)
                  )
                  (adjacent room_center ?h)
                  (< 0 3)
                )
              )
            )
            (exists (?h - curved_wooden_ramp)
              (exists (?h - ball)
                (not
                  (and
                    (game-conserved
                      (in_motion ?r)
                    )
                    (game-optional
                      (< 4 1)
                    )
                    (and
                      (and
                        (exists (?h - ball)
                          (game-optional
                            (and
                              (not
                                (same_object ?b ?d)
                              )
                              (and
                                (= (distance_side ?d ?h ?c3) (x_position ?h))
                                (not
                                  (agent_holds ?l)
                                )
                              )
                            )
                          )
                        )
                        (game-conserved
                          (not
                            (between ?o ?h ?o3)
                          )
                        )
                        (exists (?p3 - ball)
                          (game-optional
                            (adjacent ?w2 ?h)
                          )
                        )
                      )
                      (not
                        (and
                          (exists (?x - beachball ?r ?r - hexagonal_bin)
                            (and
                              (game-conserved
                                (game_start )
                              )
                            )
                          )
                          (game-conserved
                            (exists (?b - hexagonal_bin)
                              (in_motion ?b)
                            )
                          )
                          (forall (?b - cube_block)
                            (exists (?h - chair)
                              (game-optional
                                (on ?b ?ob)
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c - hexagonal_bin ?h - (either book hexagonal_bin))
      (and
        (preference throwToBin
          (exists (?b - dodgeball ?h - dodgeball)
            (then
              (once-measure (agent_holds ?d) (distance ?h ?h) )
              (once (> 1 (distance room_center ?h)) )
              (hold-while (agent_holds ?h) (or (adjacent ?h ?d) (not (and (in_motion ?h) (and (same_type ?h ?h) (above ?h ?b) (and (exists (?c - tan_cube_block) (and (and (and (in_motion ?c) (in_motion ?d) ) (and (agent_holds desk) (rug_color_under ?o brown) (in_motion ?c) ) ) (not (not (in_motion ?p) ) ) ) ) (equal_z_position agent ?d) ) (in_motion ?h) ) ) ) ) (and (faces ?b ?h) (and (touch ?h ?h) (in ?h ?b) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) 10 )
)
(:scoring
  (* 3 (count-once-per-objects throwToBin:yellow_pyramid_block) )
)
)



(define (game game-id-657) (:domain medium-objects-room-v1)
(:setup
  (forall (?b1 - block)
    (and
      (game-optional
        (agent_holds ?b)
      )
      (exists (?h - game_object ?c - (either key_chain blue_cube_block laptop))
        (exists (?h - triangular_ramp)
          (exists (?w2 - building ?o1 - block)
            (game-conserved
              (on ?b ?r)
            )
          )
        )
      )
      (exists (?t - dodgeball)
        (and
          (game-optional
            (and
              (and
                (in ?b1 ?b1)
                (agent_holds ?g)
                (<= (building_size ?t) (distance_side ?h front_left_corner ?h))
              )
              (same_type ?p2 ball)
            )
          )
          (game-conserved
            (in_motion ?b1)
          )
          (and
            (and
              (exists (?r - hexagonal_bin ?d - beachball)
                (and
                  (game-optional
                    (adjacent_side room_center back ?d)
                  )
                )
              )
              (and
                (game-conserved
                  (agent_holds ?d)
                )
              )
              (exists (?h - tall_cylindrical_block)
                (not
                  (forall (?d - dodgeball)
                    (game-conserved
                      (same_type ?b1 pillow)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttemptFromDoor
      (exists (?p - ball ?b8 - cube_block)
        (then
          (once (not (touch ?c ?b8) ) )
          (hold (agent_holds ?h) )
          (once (exists (?c - hexagonal_bin ?d - (either golfball doggie_bed)) (broken ?c2) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (external-forall-maximize (<= 3 1 )
    )
    2
  )
)
(:scoring
  (< (* 3 (count throwAttemptFromDoor:dodgeball) (count throwAttemptFromDoor:red) )
    (* (- (- (* (* (count-shortest throwAttemptFromDoor:yellow) (count throwAttemptFromDoor:purple) (- (- 5 )
              )
              (+ 5 30 )
              (count-once throwAttemptFromDoor:dodgeball)
              (count throwAttemptFromDoor:dodgeball)
            )
            (count-once-per-objects throwAttemptFromDoor:blue_dodgeball)
          )
        )
      )
      (* (count-total throwAttemptFromDoor:hexagonal_bin) (count throwAttemptFromDoor:dodgeball) (count-once-per-objects throwAttemptFromDoor:dodgeball) 10 )
      50
      (count-once-per-objects throwAttemptFromDoor:brown)
      4
      (count-once-per-objects throwAttemptFromDoor:doggie_bed)
    )
  )
)
)



(define (game game-id-658) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (> 5 1)
  )
)
(:constraints
  (and
    (preference teddyBearHitsBall
      (exists (?p2 - triangular_ramp)
        (then
          (hold-while (agent_holds ?d) (and (equal_x_position ?h bottom_shelf) (agent_holds ?c) ) )
          (once (touch ?p2 ?p2) )
          (hold (in ?p2 ?d) )
        )
      )
    )
    (preference castleBuilt
      (exists (?c - doggie_bed ?tb - doggie_bed ?c - game_object)
        (at-end
          (or
            (in ?t ?c)
            (touch ?h ?c)
            (not
              (not
                (touch bed ?l1)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (* 10 7 (count-unique-positions teddyBearHitsBall:dodgeball) )
  )
)
(:scoring
  (* (count-once teddyBearHitsBall:yellow) (count-overlapping castleBuilt:pink:purple) )
)
)



(define (game game-id-659) (:domain medium-objects-room-v1)
(:setup
  (forall (?t2 - hexagonal_bin)
    (game-conserved
      (and
        (exists (?p3 - desk_shelf ?d - (either alarm_clock triangle_block basketball) ?o - hexagonal_bin)
          (agent_holds ?f)
        )
        (agent_holds ?r)
      )
    )
  )
)
(:constraints
  (and
    (preference objectsHidden
      (exists (?d - hexagonal_bin ?b5 - red_dodgeball)
        (then
          (once (agent_holds ?b) )
          (hold (agent_holds ?ob) )
          (once (touch ?b5 west_wall) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (* 3 (count-overlapping objectsHidden:green:yellow_pyramid_block:basketball) (+ (count objectsHidden:basketball:dodgeball) (+ (* (+ (count objectsHidden:dodgeball:orange) (count-once-per-objects objectsHidden:purple:yellow) )
              (>= (count-unique-positions objectsHidden) (count-once-per-objects objectsHidden:book) )
            )
            10
            2
          )
        )
        1
        (count-once-per-objects objectsHidden:white)
        (- (- (- (* 10 (* (> 40 (count objectsHidden:red) )
                  2
                )
              )
            )
          )
        )
        10
        5
        (count-once-per-objects objectsHidden:book)
        6
        (* 3 (* (* 5 (< (< (count-once-per-objects objectsHidden:pink) (count-once-per-objects objectsHidden:beachball) )
                (count objectsHidden:dodgeball)
              )
            )
            2
            5
          )
        )
        3
      )
      1
    )
  )
)
(:scoring
  (count objectsHidden:pink_dodgeball)
)
)



(define (game game-id-660) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?r - hexagonal_bin)
      (exists (?f ?c3 ?b ?p1 - dodgeball ?l - hexagonal_bin ?o - doggie_bed)
        (forall (?p - beachball)
          (game-conserved
            (not
              (in ?d ?b)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?l1 ?d ?c ?h ?b2 - hexagonal_bin)
      (and
        (preference dropAttempt
          (exists (?d - dodgeball ?d1 - dodgeball)
            (at-end
              (same_color floor ?c)
            )
          )
        )
        (preference pillowThrownToDoggieBed
          (exists (?b ?o - hexagonal_bin ?c - hexagonal_bin)
            (then
              (once (agent_holds ?d) )
              (once (and (and (in ?h ?d) (not (adjacent_side desk front ?d front) ) ) (agent_holds ?c) ) )
              (hold (game_start ) )
            )
          )
        )
      )
    )
    (preference teddyBearHitsBall
      (exists (?b - pillow)
        (then
          (once (in_motion ?o) )
          (once (agent_holds ?b) )
          (once (and (agent_holds ?b) (and (is_setup_object ?h) (in_motion ?d) (object_orientation ?b upright) (not (agent_holds ?d) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (= (< (count-once teddyBearHitsBall:doggie_bed) (= 1 (count pillowThrownToDoggieBed:hexagonal_bin) )
    )
    (count dropAttempt:pink_dodgeball:pink)
  )
)
(:scoring
  (count-once-per-objects dropAttempt:dodgeball)
)
)



(define (game game-id-661) (:domain many-objects-room-v1)
(:setup
  (exists (?b - (either bridge_block key_chain book bridge_block doggie_bed blue_cube_block desktop))
    (exists (?r1 - dodgeball)
      (game-conserved
        (touch ?r1 ?b)
      )
    )
  )
)
(:constraints
  (and
    (forall (?b ?b6 ?o ?s ?d ?d - cube_block)
      (and
        (preference blockFromRugToDesk
          (exists (?p - building)
            (then
              (hold (and (not (exists (?c - curved_wooden_ramp ?f - hexagonal_bin) (and (in_motion ?b) (in_motion ?h) ) ) ) (agent_holds ?o) (adjacent ?c ?c) (not (on ?b6 ?c) ) ) )
              (once (in_motion ?s) )
              (hold (on ?d ?b) )
            )
          )
        )
        (preference pyramidBlockAtopTowerAtEnd
          (exists (?b6 - ball)
            (then
              (once (agent_holds ?b) )
              (once (< (distance_side ?d ?s ?o ?b6) (distance_side desk front ?g)) )
            )
          )
        )
        (preference cubeThrownToBin
          (then
            (hold (touch ?d ?o) )
            (once (adjacent agent ?d) )
            (hold (adjacent ?b2 ?s) )
          )
        )
      )
    )
    (preference blindsOpened
      (exists (?o5 - dodgeball)
        (then
          (once (in ?b ?d) )
          (once (not (exists (?d - ball ?o1 - hexagonal_bin ?d - hexagonal_bin ?r1 - curved_wooden_ramp) (in ?o5 ?o5) ) ) )
          (once (< (distance ?h ?f) (distance ?d ?o5)) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) 2 )
)
(:scoring
  (* (- (count cubeThrownToBin:hexagonal_bin) 5 ) (* 20 (* (+ 5 (count-once-per-objects pyramidBlockAtopTowerAtEnd:doggie_bed) (count-once-per-objects pyramidBlockAtopTowerAtEnd:wall) )
        (> 4 5 )
      )
      (count-shortest pyramidBlockAtopTowerAtEnd:yellow)
    )
    (count blindsOpened:dodgeball:dodgeball)
  )
)
)



(define (game game-id-662) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (game_start )
  )
)
(:constraints
  (and
    (forall (?f - hexagonal_bin ?c - game_object ?o1 - dodgeball ?s - beachball)
      (and
        (preference ballThrownToChair
          (exists (?l1 - hexagonal_bin)
            (then
              (once (or (agent_holds ?b) (in_motion ?s) ) )
              (hold (equal_z_position ?h ?d) )
              (once (in_motion ?s) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* 5 (external-forall-maximize (* (count-once ballThrownToChair:hexagonal_bin) (- (count-once ballThrownToChair:yellow) )
            (* (+ 1 6 )
              (* 7 10 )
            )
            (count-once-per-objects ballThrownToChair:beachball:dodgeball)
            30
            5
          )
        )
      )
      (* (count ballThrownToChair:beachball:golfball) 0 )
    )
    (> 2 (total-score) )
  )
)
(:scoring
  (* (count-once-per-objects ballThrownToChair:yellow_cube_block:basketball) 5 )
)
)



(define (game game-id-663) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-optional
      (and
        (in ?b ?w1)
        (not
          (on ?b7 ?d)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectThrownFromRug
      (exists (?r - tall_cylindrical_block)
        (then
          (hold (= (x_position ?c) (distance ?r ?r)) )
          (hold (agent_holds ?g) )
          (once (in ?l ?r) )
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (>= (total-time) (* 3 (count objectThrownFromRug:basketball) )
      )
      (= (* 10 (* 5 (* (count objectThrownFromRug:top_drawer) (* (count objectThrownFromRug:dodgeball) (count objectThrownFromRug:basketball) )
            )
          )
        )
        (+ 6 (count-once objectThrownFromRug:doggie_bed) )
      )
      (>= (* (* (count objectThrownFromRug:yellow) 5 )
          (count-increasing-measure objectThrownFromRug:yellow_pyramid_block:pink_dodgeball:basketball)
        )
        (= (count objectThrownFromRug:golfball) (+ (count-once-per-objects objectThrownFromRug) (count objectThrownFromRug:hexagonal_bin) )
          (= (count objectThrownFromRug:dodgeball) (* 4 (count objectThrownFromRug:pink) )
            (= 10 30 )
          )
        )
      )
    )
  )
)
(:scoring
  (- (* 2 (* (* (count objectThrownFromRug:tall_cylindrical_block) (* (* 6 (+ 10 (+ (count objectThrownFromRug:blue) (* (count-once-per-objects objectThrownFromRug:orange:alarm_clock) (count-once-per-objects objectThrownFromRug:pink) )
                )
              )
            )
            (count-once-per-objects objectThrownFromRug)
            (+ 1 2 (count-shortest objectThrownFromRug) 16 (+ (+ (count-once-per-objects objectThrownFromRug:side_table) 3 )
                6
              )
              (count-overlapping objectThrownFromRug:beachball:basketball)
              (count objectThrownFromRug:dodgeball:green)
              10
              (count objectThrownFromRug:beachball:beachball)
            )
            (count-same-positions objectThrownFromRug:pink)
            (count-once-per-objects objectThrownFromRug:dodgeball)
            10
            (>= 15 (+ (+ (count objectThrownFromRug:yellow:golfball:pink) (count-once-per-external-objects objectThrownFromRug:yellow) )
                2
                (* 0 2 )
              )
            )
          )
        )
        (count objectThrownFromRug:wall)
        (* (count-once objectThrownFromRug) 3 (count-once-per-objects objectThrownFromRug:red_pyramid_block) )
      )
    )
  )
)
)



(define (game game-id-664) (:domain many-objects-room-v1)
(:setup
  (exists (?b - flat_block)
    (game-conserved
      (not
        (is_setup_object ?b)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownFromDoor
      (exists (?ob - hexagonal_bin)
        (at-end
          (on ?ob ?ob)
        )
      )
    )
    (preference ballThrownToWallToAgent
      (exists (?c - golfball)
        (then
          (hold (not (touch rug ?h) ) )
          (once (on ?c6 agent) )
          (hold (and (not (and (< 1 2) (not (and (agent_holds ?p) (on ?o ?c) ) ) (on rug ?c) (not (agent_holds ?c) ) (and (in ?c ?c) (and (and (on agent ?c1) (and (exists (?b2 - (either cylindrical_block desktop lamp pillow) ?x - game_object) (adjacent agent ?d) ) (on ?c ?c) (in_motion ?c) ) ) (object_orientation ?c upright) (agent_holds ?b) ) ) (in_motion ?l1) (or (is_setup_object ?d) (opposite ?b desk) ) ) ) (and (and (= 1) (in_motion ?b) (same_color desktop ?c) ) (above ?c ?b) ) ) )
        )
      )
    )
    (preference ballThrownHitsAgent
      (exists (?b - hexagonal_bin)
        (then
          (hold (and (adjacent_side agent ?b top_shelf right) (and (adjacent ?h ?b) (not (not (not (exists (?c4 - hexagonal_bin) (not (and (and (>= 1 (distance bed ?p2)) (and (on ?b ?b) (adjacent ?h ?o) ) ) (opposite ?c2 ?c4) ) ) ) ) ) ) ) ) )
          (hold (not (in_motion ?b) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (total-score) )
)
(:scoring
  (* (* (count ballThrownFromDoor:green) )
    4
  )
)
)



(define (game game-id-665) (:domain medium-objects-room-v1)
(:setup
  (not
    (game-conserved
      (game_over )
    )
  )
)
(:constraints
  (and
    (forall (?o1 - cube_block)
      (and
        (preference smallItemsInPlace
          (exists (?c2 - dodgeball)
            (then
              (once (in_motion ?o1) )
              (once (same_object ?h ?l1) )
              (once (in_motion ?c) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count smallItemsInPlace:dodgeball) (total-time) )
)
(:scoring
  (* (* 3 (+ 2 (- (count smallItemsInPlace:blue_dodgeball:beachball) )
        (* (count smallItemsInPlace:purple) 10 )
        (+ (count-once-per-objects smallItemsInPlace) (* (count smallItemsInPlace:golfball) 2 )
        )
        3
      )
    )
    5
  )
)
)



(define (game game-id-666) (:domain few-objects-room-v1)
(:setup
  (exists (?h - hexagonal_bin ?h - ball)
    (game-conserved
      (same_color ?c blue)
    )
  )
)
(:constraints
  (and
    (preference dodgeballFromBlockToBin
      (exists (?o - ball ?w2 - hexagonal_bin ?c - block)
        (then
          (hold (not (agent_holds ?c) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= 0 2 )
  )
)
(:scoring
  (+ (count-measure dodgeballFromBlockToBin:green:pink) (count dodgeballFromBlockToBin:basketball:tall_cylindrical_block:pink) )
)
)



(define (game game-id-667) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - ball)
      (game-optional
        (not
          (in_motion rug)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference smallObjectThrownToBed
      (exists (?o5 - ball)
        (then
          (once (agent_holds ?o5) )
          (once (exists (?ob - game_object) (in_motion ?o5) ) )
          (hold (agent_holds ?o5) )
        )
      )
    )
    (preference ballThrownToWallToAgent
      (exists (?w2 - dodgeball)
        (at-end
          (and
            (agent_holds ?w2)
            (between ?b ?w2 ?w2)
          )
        )
      )
    )
    (forall (?o2 - cube_block)
      (and
        (preference dodgeballsInPlace
          (exists (?c ?b - shelf)
            (then
              (once (on ?w ?o2) )
              (hold-while (and (not (broken ?o) ) (exists (?o3 - cylindrical_block ?b8 - building) (open ?b) ) ) (in ?h ?b) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* 1 3 )
    (+ (count smallObjectThrownToBed:dodgeball) (+ 9 10 )
    )
  )
)
(:scoring
  (count-once dodgeballsInPlace:dodgeball:dodgeball)
)
)



(define (game game-id-668) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-conserved
      (agent_holds pink_dodgeball)
    )
  )
)
(:constraints
  (and
    (preference ballThrownFromObjectToBin
      (exists (?d - dodgeball ?t - block)
        (then
          (once (and (rug_color_under ?c1 pink) (on ?t ?o) ) )
          (once (broken ?g) )
          (once (broken ?d) )
        )
      )
    )
  )
)
(:terminal
  (> (total-score) (total-time) )
)
(:scoring
  (* 3 (= 3 (count-once-per-objects ballThrownFromObjectToBin:dodgeball:book) )
    (count-overlapping ballThrownFromObjectToBin:beachball:dodgeball)
  )
)
)



(define (game game-id-669) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (< (building_size ?b) (distance ?d ?h))
  )
)
(:constraints
  (and
    (forall (?w1 ?d - block ?b - hexagonal_bin ?l1 - dodgeball)
      (and
        (preference dodgeballFromDeskToTarget
          (exists (?w1 - (either dodgeball golfball))
            (then
              (hold-while (agent_holds ?b1) (not (= 9 3) ) (on ?l1 ?l1) (not (and (not (broken ?b1) ) (< 1 (distance ?w1 ?l1)) ) ) )
              (hold (exists (?h - hexagonal_bin) (in ?h ?w1) ) )
              (once (and (and (and (on ?t ?l1) (not (touch ?l1 ?l1) ) ) ) (agent_holds ?b1) ) )
            )
          )
        )
      )
    )
    (preference throwToRampToBin
      (exists (?b1 - dodgeball ?db - chair ?d - desk_shelf ?c4 - building)
        (then
          (hold (and (and (not (in_motion ?o2) ) (in_motion ?c4) ) ) )
          (once (and (and (in_motion ?d) (touch ?c4 ?d) ) (not (not (and (agent_holds ?c4) (adjacent desk ?c4) ) ) ) ) )
          (once (and (and (in_motion ?o) (and (and (in ?o ?c4) (not (agent_holds ?bl) ) ) (on ?c4 ?c4) ) (equal_z_position agent ?c4) ) (on ?c4 ?c4) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count-once-per-objects throwToRampToBin:basketball) (+ (count-unique-positions throwToRampToBin:dodgeball) (count dodgeballFromDeskToTarget:dodgeball) )
    )
    (count-overlapping dodgeballFromDeskToTarget:dodgeball:golfball:beachball)
  )
)
(:scoring
  (- (count-once throwToRampToBin:dodgeball) )
)
)



(define (game game-id-670) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (game-optional
        (exists (?p2 - dodgeball)
          (not
            (in_motion ?d)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectThrownFromRug
      (exists (?c2 - cube_block)
        (at-end
          (in_motion ?o)
        )
      )
    )
    (preference throwGolfballToBin
      (exists (?g ?s - game_object)
        (then
          (once (and (forall (?o - hexagonal_bin) (not (and (in_motion desk) (not (touch ?c ?o) ) ) ) ) (in_motion ?b) (in ?d ?g) (in_motion rug) (agent_holds ?s) (not (not (in_motion ?b) ) ) ) )
          (once (touch ?g bed) )
          (hold-while (not (not (not (agent_holds ?s) ) ) ) (on ?s ?b) )
        )
      )
    )
  )
)
(:terminal
  (> (- (* (+ (* (+ (count objectThrownFromRug:cube_block) (* (- 6 )
                30
              )
            )
            2
          )
          (* (count throwGolfballToBin:basketball) 50 (* 3 (+ 5 (count objectThrownFromRug:dodgeball) )
            )
          )
          60
        )
        (count-measure objectThrownFromRug:top_drawer:beachball:pink)
        (count throwGolfballToBin:cylindrical_block)
      )
    )
    (total-score)
  )
)
(:scoring
  (* (count objectThrownFromRug:dodgeball) (* (external-forall-maximize (* (count throwGolfballToBin:red) 2 )
      )
      2
    )
  )
)
)



(define (game game-id-671) (:domain medium-objects-room-v1)
(:setup
  (forall (?ob - dodgeball)
    (and
      (exists (?b - hexagonal_bin ?c - dodgeball ?t2 - ball)
        (and
          (game-conserved
            (agent_holds bed)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference pillowMovedToRoomCenter
      (exists (?b - cube_block ?b - dodgeball ?t1 - hexagonal_bin ?b - dodgeball ?o4 - color)
        (then
          (hold-while (in bed ?o4) (in_motion ?d) (and (touch ?b9 ?o4) (in_motion ?d) (in_motion ?d) (in_motion ?c) ) )
          (once (not (not (in_motion ?o4) ) ) )
          (once (rug_color_under ?o4 ?o4) )
        )
      )
    )
    (forall (?p1 - cube_block ?p3 - dodgeball)
      (and
        (preference blockKnockedFromBuildingInBin
          (exists (?g - block ?h - game_object)
            (then
              (once (agent_holds ?p3) )
              (hold (in ?d ?b) )
              (once (not (in_motion ?p3) ) )
            )
          )
        )
      )
    )
    (preference cubeBlockThrowAttempt
      (exists (?t2 - dodgeball)
        (then
          (once (agent_holds ?t2) )
          (hold-while (or (agent_holds ?h) (agent_holds ?t2) ) (agent_holds ?t2) (touch rug ?t2) (not (and (not (and (object_orientation ?b sideways) (and (in_motion ?b) (and (same_color ?g ?c) ) ) ) ) (and (and (and (in ?t2 ?t2) (> 1 5) (and (in_motion ?c4) ) ) (not (on ?t2 ?t2) ) ) (not (and (exists (?l3 - book) (in_motion ?w1) ) (in_motion ?b) (adjacent desk ?t2) ) ) ) ) ) )
          (hold (and (agent_holds ?t2) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (total-score) )
)
(:scoring
  (count-once-per-objects pillowMovedToRoomCenter:golfball)
)
)



(define (game game-id-672) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (< (building_size ?s) 5)
  )
)
(:constraints
  (and
    (preference cubeThrownToBin
      (exists (?c2 - wall ?d - dodgeball)
        (at-end
          (in_motion ?c)
        )
      )
    )
  )
)
(:terminal
  (or
    (> (count-once cubeThrownToBin:pyramid_block:hexagonal_bin) 6 )
    (>= 3 15 )
    (or
      (and
        (>= (count-longest cubeThrownToBin:dodgeball:green:dodgeball) 3 )
        (and
          (>= (+ (+ 3 (count-once-per-objects cubeThrownToBin:cube_block) )
              3
              6
              (+ 10 2 )
            )
            (total-score)
          )
          (not
            (not
              (>= 2 10 )
            )
          )
          (>= (total-score) (count cubeThrownToBin:dodgeball:green) )
        )
      )
      (< 1 (count-same-positions cubeThrownToBin:beachball) )
    )
  )
)
(:scoring
  (count-increasing-measure cubeThrownToBin:beachball:top_drawer)
)
)



(define (game game-id-673) (:domain many-objects-room-v1)
(:setup
  (and
    (game-optional
      (forall (?c2 - ball)
        (agent_holds ?b)
      )
    )
  )
)
(:constraints
  (and
    (forall (?b3 - game_object ?b4 - dodgeball)
      (and
        (preference objectsHidden
          (exists (?c - chair)
            (then
              (once (rug_color_under bed blue) )
              (once (agent_holds pink_dodgeball) )
              (once (in_motion ?c) )
            )
          )
        )
        (preference castleBuilt
          (exists (?d - curved_wooden_ramp ?h - beachball ?g - curved_wooden_ramp)
            (then
              (once (on desk ?b4) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= (count-once-per-objects castleBuilt:dodgeball) (total-score) )
)
(:scoring
  (+ (count castleBuilt:dodgeball) 4 )
)
)



(define (game game-id-674) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?db - bridge_block ?d - ball ?g - block)
      (game-optional
        (in_motion ?g)
      )
    )
  )
)
(:constraints
  (and
    (preference beachballOnRug
      (exists (?t - (either doggie_bed tall_cylindrical_block laptop))
        (at-end
          (not
            (in_motion ?t)
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects beachballOnRug:pink) (count beachballOnRug:hexagonal_bin) )
)
(:scoring
  (= (* (count-once-per-objects beachballOnRug:beachball) (* (count-longest beachballOnRug:book) (+ (count-once beachballOnRug:tall_cylindrical_block) (count beachballOnRug:triangle_block) )
        (* 5 (count beachballOnRug:dodgeball) )
        (count beachballOnRug:pink:golfball:pink)
      )
    )
    15
  )
)
)



(define (game game-id-675) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (> (distance_side ?h front_left_corner ?b8) (distance room_center ?d))
  )
)
(:constraints
  (and
    (forall (?h - red_dodgeball ?c - (either credit_card lamp))
      (and
        (preference beachballOnRug
          (exists (?l - ball)
            (then
              (once (agent_holds ?d) )
              (hold (< (distance room_center ?c) (distance desk agent)) )
              (once (on ?c ?h) )
              (hold (in_motion ?c) )
            )
          )
        )
        (preference golfballLandsInBinThroughRamp
          (exists (?d - curved_wooden_ramp)
            (then
              (once (agent_holds ?c) )
            )
          )
        )
      )
    )
    (preference objectInBuilding
      (exists (?g - hexagonal_bin)
        (then
          (once (and (in_motion ?b1) (in_motion ?d) ) )
          (hold (touch ?d ?g) )
          (once (and (adjacent desk ?g) (exists (?w - pillow ?l3 - hexagonal_bin ?c4 - ball) (and (and (forall (?h - (either floor cube_block pyramid_block) ?h - golfball) (in_motion ?g) ) (and (agent_holds ?g) (not (agent_holds ?g) ) ) ) (< (distance ?c4 ?g) (distance_side desk ?c4 rug)) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 100 (+ 6 5 (count objectInBuilding:orange) )
  )
)
(:scoring
  (count-once-per-objects objectInBuilding:beachball)
)
)



(define (game game-id-676) (:domain few-objects-room-v1)
(:setup
  (forall (?r - hexagonal_bin)
    (forall (?p1 ?o - blinds ?b3 - beachball ?f - hexagonal_bin ?o - hexagonal_bin)
      (forall (?o - hexagonal_bin ?s - game_object ?h - color)
        (game-conserved
          (not
            (in_motion ?d)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c - hexagonal_bin)
      (and
        (preference cubeBlockThrownToTopShelf
          (exists (?c - cylindrical_block)
            (then
              (once (not (in_motion ?c) ) )
              (once (and (and (in_motion ?c) (faces ?g ?d) ) (and (not (in_motion ?c) ) (on ?c ?d) ) ) )
              (once (in_motion ?d) )
            )
          )
        )
      )
    )
    (preference throwFromBehindChairsInBin
      (exists (?r2 ?d - wall)
        (then
          (hold-while (in_motion ?g) (on ?d ?r2) (same_object ?r2 ?r2) )
          (hold (touch ?o ?d) )
          (hold (not (and (and (adjacent ?s ?d) (< (distance ?w1 ?b) 1) (and (in_motion ?d) (in_motion bed) (on ?h desk) (not (<= (distance room_center ?r2) (distance agent ?h)) ) (in ?r2 ?h) (on ?o ?d) ) ) (opposite ?d ?r2) ) ) )
        )
      )
    )
  )
)
(:terminal
  (= (* (count throwFromBehindChairsInBin:yellow:hexagonal_bin) 2 )
    (total-time)
  )
)
(:scoring
  (count cubeBlockThrownToTopShelf:green:dodgeball)
)
)



(define (game game-id-677) (:domain medium-objects-room-v1)
(:setup
  (exists (?o - desktop)
    (game-conserved
      (in_motion ?o)
    )
  )
)
(:constraints
  (and
    (forall (?d - dodgeball)
      (and
        (preference dodgeballThrownToBin
          (exists (?r1 - dodgeball)
            (at-end
              (and
                (and
                  (in_motion ?r1)
                  (not
                    (in_motion ?o)
                  )
                )
                (touch ?b ?d)
                (in_motion ?b)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 15 (* 15 (count dodgeballThrownToBin:doggie_bed:blue:beachball) (count-longest dodgeballThrownToBin:cube_block) (count dodgeballThrownToBin:block:basketball) (count dodgeballThrownToBin:yellow:book) (* 2 5 )
      (count-once-per-external-objects dodgeballThrownToBin:golfball)
    )
  )
)
(:scoring
  (count-unique-positions dodgeballThrownToBin:basketball)
)
)



(define (game game-id-678) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-conserved
      (agent_holds ?b)
    )
    (and
      (and
        (forall (?h - dodgeball)
          (exists (?r - game_object)
            (forall (?bl - doggie_bed ?d - block ?h - doggie_bed ?g - green_triangular_ramp)
              (game-conserved
                (in ?c ?b)
              )
            )
          )
        )
      )
      (game-conserved
        (not
          (not
            (not
              (agent_holds ?b)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?w1 - dodgeball ?b2 ?db - (either golfball bridge_block))
      (and
        (preference golfballUnderBridgeWithoutTouchingBlock
          (then
            (once (touch ?db ?o) )
            (once (on ?b2 ?h) )
            (once (adjacent ?c ?db) )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (- (= (count golfballUnderBridgeWithoutTouchingBlock:beachball) (count golfballUnderBridgeWithoutTouchingBlock:basketball) )
    )
    (>= 5 (* 2 10 )
    )
  )
)
(:scoring
  (+ 50 (count-increasing-measure golfballUnderBridgeWithoutTouchingBlock:orange) )
)
)



(define (game game-id-679) (:domain medium-objects-room-v1)
(:setup
  (forall (?r - curved_wooden_ramp ?c4 - ball ?b ?b ?l2 ?s - hexagonal_bin)
    (not
      (forall (?l2 - block)
        (game-optional
          (on ?d ?b)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwFromBehindChairsInBin
      (exists (?r - hexagonal_bin ?b - teddy_bear ?b - (either triangle_block yellow_cube_block pen) ?d - curved_wooden_ramp ?c2 - hexagonal_bin)
        (at-end
          (not
            (and
              (or
                (not
                  (on ?o1 ?p1)
                )
                (not
                  (on desk bed)
                )
              )
              (open ?b)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 5 1 )
    (< (/ 3 (* (* (/ (- (* 3 (count-overlapping throwFromBehindChairsInBin:blue_pyramid_block) (* (* (+ (- 5 )
                        3
                        2
                        4
                      )
                      (count-once-per-objects throwFromBehindChairsInBin:basketball)
                    )
                    15
                  )
                  (+ (+ 0 (count throwFromBehindChairsInBin:blue) )
                    (* 5 30 )
                    (count throwFromBehindChairsInBin:dodgeball)
                  )
                )
              )
              (+ 1 2 )
            )
            50
          )
        )
      )
      (count throwFromBehindChairsInBin:doggie_bed:beachball)
    )
  )
)
(:scoring
  (count throwFromBehindChairsInBin:pink)
)
)



(define (game game-id-680) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (exists (?h - doggie_bed)
      (and
        (agent_holds ?d)
        (not
          (and
            (agent_holds agent)
            (not
              (agent_holds bed)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference tanObjectMovedToRoomCenter
      (exists (?b - dodgeball)
        (then
          (once (< (x_position ?d) (distance_side ?b front floor)) )
          (hold-while (and (in_motion ?b) (in_motion ?b) ) (and (toggled_on ?c3) (in_motion door) ) )
          (once (not (not (rug_color_under ?b ?b) ) ) )
        )
      )
    )
    (preference blockToBinFromRug
      (exists (?d - dodgeball)
        (then
          (once (> 0.5 (distance ?d agent)) )
          (once (exists (?r - pillow ?l2 - hexagonal_bin ?p - dodgeball ?d ?l ?b4 ?g - hexagonal_bin) (< (building_size ?b4) 7) ) )
          (hold (and (and (not (or (exists (?ob ?s - hexagonal_bin) (and (and (and (or (not (in ?b ?d) ) (on ?s ?b) ) (agent_holds ?d) ) (faces ?ob ?d) (and (and (not (faces ?o ?ob) ) (agent_holds ?s) ) (agent_holds ?s) ) (adjacent rug ?ob) ) (in_motion ?bl) ) ) (and (and (in_motion ?c) (not (and (in ?b ?d) (or (in ?d ?t) (and (not (in_motion ?d) ) (exists (?o3 - (either cylindrical_block key_chain pyramid_block)) (in_motion ?o3) ) ) ) ) ) ) (adjacent ?c desk) ) ) ) (and (and (or (not (not (and (on ?d ?h) (and (in_motion ?d) (not (agent_holds ?d) ) ) ) ) ) (agent_holds ?d) ) (not (in ?d ?b1) ) (agent_holds ?b) ) (not (and (in_motion ?d) (in_motion ?d) (on ?d ?d) ) ) ) ) (not (agent_holds ?c) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (not
      (>= (count-once tanObjectMovedToRoomCenter:blue_pyramid_block:beachball) 2 )
    )
    (or
      (>= 3 (total-score) )
    )
  )
)
(:scoring
  (count-once tanObjectMovedToRoomCenter:golfball)
)
)



(define (game game-id-681) (:domain few-objects-room-v1)
(:setup
  (exists (?h - wall ?h - pillow)
    (and
      (and
        (game-conserved
          (rug_color_under agent ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownFromRug
      (exists (?b - dodgeball ?o - dodgeball)
        (then
          (once (not (on ?o ?b) ) )
          (hold (in_motion ?o) )
        )
      )
    )
  )
)
(:terminal
  (>= (count ballThrownFromRug:beachball) (total-score) )
)
(:scoring
  (count ballThrownFromRug:yellow)
)
)



(define (game game-id-682) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds ?o)
  )
)
(:constraints
  (and
    (forall (?s - hexagonal_bin)
      (and
        (preference throwFromBehindChairsInBin
          (exists (?o - curved_wooden_ramp ?b - (either pyramid_block beachball golfball))
            (at-end
              (agent_holds ?s)
            )
          )
        )
        (preference blockInTowerKnocked
          (exists (?b - game_object)
            (then
              (hold (< 1 4) )
              (once (agent_holds ?c) )
              (once (agent_holds ?b) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> 5 (total-score) )
)
(:scoring
  (* (* 5 16 )
    (count-overlapping blockInTowerKnocked:hexagonal_bin)
    1
    (count blockInTowerKnocked)
    (* (= (* (* 15 (count throwFromBehindChairsInBin:side_table:dodgeball) )
          (+ 5 10 )
        )
        (count-once blockInTowerKnocked:dodgeball)
      )
      (external-forall-minimize
        (- (+ 6 (count-once-per-objects blockInTowerKnocked:pyramid_block:tan) (* (count-once-per-objects blockInTowerKnocked:book) (count-once-per-objects throwFromBehindChairsInBin:dodgeball:pyramid_block) )
          )
        )
      )
    )
  )
)
)



(define (game game-id-683) (:domain medium-objects-room-v1)
(:setup
  (exists (?d - hexagonal_bin)
    (game-optional
      (and
        (forall (?h - pillow)
          (adjacent ?h ?g)
        )
        (in_motion ?d)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownFromRug
      (exists (?b6 - curved_wooden_ramp)
        (then
          (once (agent_holds ?b6) )
          (once (not (and (and (not (agent_holds ?b4) ) (agent_holds ?d) ) (same_object ?p ?b6) ) ) )
          (once (and (and (agent_holds ?b6) (in_motion ?b6) (not (agent_holds ?b6) ) (and (in_motion ?b6) (agent_holds ?b) ) (not (not (agent_holds ?b6) ) ) (and (and (not (in_motion ?d) ) (in_motion ?b6) ) (and (in_motion ?b6) (in ?w1 ?b) ) ) (exists (?g - hexagonal_bin) (same_object pink_dodgeball ?b6) ) ) (in_motion ?c) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (+ 5 0.7 )
      (total-score)
    )
    (and
      (or
        (or
          (>= (+ (count-total ballThrownFromRug:pink_dodgeball) (count ballThrownFromRug:pink_dodgeball:orange) )
            5
          )
          (or
            (> 7 10 )
            (>= (total-score) 3 )
          )
        )
        (or
          (and
            (= (* (count-once-per-objects ballThrownFromRug:red) 5 )
              (count-overlapping ballThrownFromRug:red)
            )
            (<= (count ballThrownFromRug:golfball) 2 )
            (<= (* (* 4 16 )
                5
              )
              (- (count-once ballThrownFromRug:red) )
            )
          )
          (> (count ballThrownFromRug:golfball:golfball) (= (count-once-per-objects ballThrownFromRug:green) (count ballThrownFromRug:beachball) )
          )
          (or
            (<= 9 2 )
            (> 10 (count-once-per-objects ballThrownFromRug:golfball) )
            (>= 5 2 )
          )
          (>= (+ (count-once-per-objects ballThrownFromRug:green:basketball) 5 3 )
            (+ 10 (* 3 1 )
              2
            )
          )
        )
      )
    )
  )
)
(:scoring
  (count-once-per-external-objects ballThrownFromRug:dodgeball:triangle_block)
)
)



(define (game game-id-684) (:domain many-objects-room-v1)
(:setup
  (exists (?b5 - (either lamp cylindrical_block))
    (game-conserved
      (agent_holds ?d)
    )
  )
)
(:constraints
  (and
    (preference itemsHidingScreens
      (exists (?f - dodgeball)
        (then
          (hold (on ?f ?f) )
          (once (on ?f ?g) )
          (once (and (> (distance ?f ?h) (distance_side ?h ?f ?f)) (same_type ?f ?f) (< (distance agent ?b4) 1) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once itemsHidingScreens:cube_block:beachball) (total-score) )
)
(:scoring
  (count-total itemsHidingScreens:basketball:bed:basketball)
)
)



(define (game game-id-685) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (in_motion ?b)
  )
)
(:constraints
  (and
    (preference pillowThrownToDoggieBed
      (exists (?t - shelf)
        (at-end
          (< 1 2)
        )
      )
    )
    (forall (?ob - (either flat_block hexagonal_bin))
      (and
        (preference dodgeballFromDeskToTarget
          (exists (?h - hexagonal_bin)
            (then
              (once (and (not (equal_z_position room_center floor) ) ) )
              (hold (in_motion ?h) )
              (hold (touch ?b ?b) )
            )
          )
        )
        (preference gameObjectToBin
          (exists (?b - hexagonal_bin)
            (then
              (once (adjacent door ?d1) )
              (hold (agent_holds ?ob) )
              (once (in ?ob ?ob) )
            )
          )
        )
      )
    )
    (preference woodenBlockMovedFromRugToDesk
      (exists (?b - dodgeball)
        (then
          (once (in_motion desk) )
          (once (exists (?b ?b - dodgeball) (agent_holds ?b) ) )
          (hold-while (in ?d ?b) (touch ?d ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= (count dodgeballFromDeskToTarget:golfball) (count-once dodgeballFromDeskToTarget:pink_dodgeball) )
)
(:scoring
  (count woodenBlockMovedFromRugToDesk:beachball)
)
)



(define (game game-id-686) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (in_motion ?b)
  )
)
(:constraints
  (and
    (forall (?l - doggie_bed ?l4 - dodgeball)
      (and
        (preference throwBallToDoggieBedOffWall
          (exists (?b - block)
            (then
              (hold (in_motion ?l4) )
              (hold-while (on ?h ?b) (and (agent_holds ?b) (on ?b bed) ) (not (in_motion ?b1) ) (on ?l4 ?b) )
              (once (in_motion ?l4) )
            )
          )
        )
        (preference dodgeballFromBlockToBin
          (exists (?o ?g ?d - tall_cylindrical_block)
            (then
              (once (same_type ?h ?d) )
              (once (agent_crouches ) )
              (hold (and (agent_holds ?b) (in_motion agent) ) )
              (once (agent_holds rug) )
              (hold-while (< 1 (distance ?s ?d)) (agent_holds ?c) (not (on ?o ?d) ) )
              (once (in_motion agent) )
            )
          )
        )
        (preference blockPickedUp
          (exists (?b - hexagonal_bin)
            (then
              (hold (in ?d ?g) )
              (hold-while (and (and (not (not (on ?l4 ?b) ) ) (in_motion ?b) ) (touch ?d ?b) ) (<= 1 (distance bed ?l4)) (not (and (not (and (not (in_motion ?b) ) (agent_holds top_shelf) ) ) (on ?l4 ?l4) ) ) (agent_holds ?d) )
              (once (and (in ?b ?b) (agent_holds ?b) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once dodgeballFromBlockToBin:yellow) (total-score) )
)
(:scoring
  (+ (* 5 8 (count dodgeballFromBlockToBin:blue_cube_block) 3 3 (* (count dodgeballFromBlockToBin:red:green) 6 )
    )
    4
  )
)
)



(define (game game-id-687) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?b - dodgeball ?c3 - curved_wooden_ramp)
      (game-conserved
        (not
          (not
            (and
              (agent_holds ?c3)
              (< (distance ?h ?c3) 3)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockIncorrectlyPicked
      (exists (?b - hexagonal_bin)
        (then
          (once (not (not (and (< 1 (distance room_center ?b3)) (in_motion ?o) (on ?b ?g) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (total-time) )
)
(:scoring
  (count-once-per-objects blockIncorrectlyPicked:pink)
)
)



(define (game game-id-688) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?b - hexagonal_bin ?t - hexagonal_bin ?s - hexagonal_bin)
      (game-conserved
        (agent_holds ?s)
      )
    )
    (exists (?b - dodgeball)
      (exists (?b - teddy_bear)
        (game-optional
          (not
            (not
              (and
                (not
                  (and
                    (not
                      (not
                        (not
                          (in_motion desk)
                        )
                      )
                    )
                    (and
                      (agent_holds ?l1)
                      (object_orientation ?b ?b)
                    )
                  )
                )
                (on ?b ?h)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?h - dodgeball)
        (then
          (once (and (and (agent_holds ?h) (in_motion ?h) ) (agent_holds ?h) ) )
          (once (exists (?h - game_object) (< (distance ?h ?h) 1) ) )
          (hold-while (and (in ?l ?d) (and (not (agent_holds ?h) ) (and (and (and (agent_holds ?g) (in_motion ?h) (agent_holds ?h) (> (distance agent ?h) (distance ?r ?c)) (agent_holds ?b) (agent_holds ?h) (>= 4 1) (in_motion ?c) ) (and (not (and (opposite ?h ?h) (or (on ?d ?h) (and (agent_holds ?d) (on ?l ?l1) (agent_holds ?b) ) (same_color ?h pink) (and (not (< (distance ?h ?h) 1) ) (and (in ?h ?f) (open agent) ) ) ) ) ) (< (x_position ?h) 7) (and (in_motion ?h) (is_setup_object ?h) (< 9 (distance door ?h)) (agent_holds ?h) (in_motion ?h) (adjacent door ?o) ) ) ) (agent_holds ?h) ) (not (exists (?b6 - block) (not (touch ?h ?h) ) ) ) (in_motion ?h) (or (in ?b ?h) (and (agent_holds ?b) (and (agent_holds ?o) (faces ?d ?b3) ) ) ) (in_motion ?b) (agent_holds ?h) ) ) (in_motion ?h) (same_type ?h bridge_block) )
        )
      )
    )
    (preference throwFromBehindChairsInBin
      (exists (?o4 - (either basketball cylindrical_block dodgeball) ?h - hexagonal_bin)
        (then
          (hold (on ?h ?h) )
          (hold (in_motion ?g) )
          (once (not (and (not (on ?b ?l) ) (agent_holds ?g) ) ) )
        )
      )
    )
    (preference itemInClosedDrawerAtEnd
      (exists (?b - ball)
        (at-end
          (adjacent ?b agent)
        )
      )
    )
  )
)
(:terminal
  (= (count itemInClosedDrawerAtEnd:beachball) (* 1 (count-measure ballThrownToBin:purple) )
  )
)
(:scoring
  (* (count-once-per-objects throwFromBehindChairsInBin:orange) 5 (external-forall-maximize (- (+ 5 20 )
      )
    )
    (* (count throwFromBehindChairsInBin:red) 8 )
  )
)
)



(define (game game-id-689) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-optional
      (< 1 10)
    )
  )
)
(:constraints
  (and
    (preference agentLeavesDogbedOrNoMoreBalls
      (exists (?c1 - pillow)
        (then
          (hold (on ?c1 ?d) )
          (once (in_motion ?c1) )
          (once (not (not (adjacent ?c1 ?c1) ) ) )
        )
      )
    )
    (forall (?x - doggie_bed)
      (and
        (preference woodenBlockMovedFromRugToDesk
          (exists (?b1 - hexagonal_bin)
            (at-end
              (agent_holds ?b)
            )
          )
        )
        (preference baseBlockInTowerAtEnd
          (exists (?o2 - hexagonal_bin ?c - block)
            (then
              (hold (agent_holds ?x) )
              (once (touch ?x ?r) )
              (once (agent_holds ?c) )
            )
          )
        )
      )
    )
    (preference blockInTowerKnockedByDodgeball
      (exists (?h - hexagonal_bin ?l2 - doggie_bed)
        (at-end
          (in ?l2 pink_dodgeball)
        )
      )
    )
  )
)
(:terminal
  (> (count-once-per-objects blockInTowerKnockedByDodgeball:blue_dodgeball) (total-score) )
)
(:scoring
  (* (+ (+ (count woodenBlockMovedFromRugToDesk:pink_dodgeball:beachball) 2 )
      10
    )
    5
    (+ 4 (* (+ 9 (* 3 (* (* 3 (* (count-once-per-objects woodenBlockMovedFromRugToDesk:yellow:basketball) (+ (* (* 5 5 )
                      3
                      (external-forall-maximize
                        (* (- (* (count baseBlockInTowerAtEnd:tall_cylindrical_block) (+ (count-once-per-objects blockInTowerKnockedByDodgeball:block:tall_cylindrical_block) (count woodenBlockMovedFromRugToDesk:purple) )
                            )
                          )
                          (count baseBlockInTowerAtEnd:basketball:dodgeball)
                        )
                      )
                    )
                    2
                  )
                )
              )
              (* 10 3 )
            )
            (count blockInTowerKnockedByDodgeball:dodgeball)
          )
          1
          2
          4
          3
          (count blockInTowerKnockedByDodgeball:dodgeball:tan)
        )
        (+ 0 (count-once-per-external-objects agentLeavesDogbedOrNoMoreBalls:basketball) )
      )
      (/
        (count-once-per-objects baseBlockInTowerAtEnd:dodgeball)
        (count-once-per-objects blockInTowerKnockedByDodgeball:golfball:golfball)
      )
      (* 0 4 )
      2
      (count blockInTowerKnockedByDodgeball:pink_dodgeball)
    )
  )
)
)



(define (game game-id-690) (:domain many-objects-room-v1)
(:setup
  (forall (?b - yellow_cube_block)
    (forall (?r - chair ?g - pillow)
      (forall (?b1 - ball)
        (exists (?b - (either blue_cube_block))
          (game-conserved
            (in_motion ?b)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectsHidden
      (exists (?h - block)
        (at-end
          (in ?d ?h)
        )
      )
    )
    (preference dodgeballFromBlockToBin
      (exists (?h - (either pen cube_block))
        (at-end
          (not
            (and
              (is_setup_object ?g)
              (agent_holds ?h)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (count-once-per-objects dodgeballFromBlockToBin:dodgeball) )
)
(:scoring
  (* 2 (count dodgeballFromBlockToBin:dodgeball) 3 15 8 (+ 2 (* 2 9 )
    )
    (count-once objectsHidden:dodgeball)
    (count-once dodgeballFromBlockToBin:beachball)
    3
  )
)
)



(define (game game-id-691) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (same_type ?c pillow)
  )
)
(:constraints
  (and
    (preference cubeThrownToBin
      (exists (?c - wall)
        (then
          (once (< (distance ?c ?c3) (distance ?w1 ?c)) )
          (hold (in ?c ?b) )
          (once (not (rug_color_under ?d ?c) ) )
        )
      )
    )
    (preference ballThrownToBed
      (exists (?p3 - game_object ?d - (either laptop cube_block) ?d - hexagonal_bin)
        (then
          (hold (in_motion ?d) )
          (hold (not (adjacent ?h ?d) ) )
        )
      )
    )
    (forall (?o - (either pink pencil cellphone desktop))
      (and
        (preference objectMovedRoomSide
          (exists (?d - hexagonal_bin)
            (then
              (once (and (between ?d agent ?o) (forall (?bl - game_object) (and (not (adjacent agent ?bl) ) (not (agent_holds ?b) ) (on ?o ?h) (and (and (on ?t rug) (game_over ) ) (exists (?c4 - dodgeball ?b1 - hexagonal_bin) (and (and (not (and (in_motion top_shelf) (adjacent ?bl ?l) (in_motion ?d) ) ) (= 1 2) (agent_holds ?g) (not (not (in_motion ?b1) ) ) (and (in_motion ?bl) (in ?t ?bl) ) (agent_holds ?b1) (same_color ?d ?d) (agent_holds ?b1) ) (and (and (adjacent ?s ?d) (agent_holds ?l1) ) (in_motion ?d) ) (not (equal_z_position bed ?o) ) ) ) ) (agent_holds rug) (and (and (not (agent_holds ?d) ) (rug_color_under ?bl ?d) ) (on ?bl ?d) ) (not (in_motion ?bl) ) (on ?bl ?o) ) ) ) )
              (once (and (not (same_color ?d ?o) ) (same_object ?o ?d) ) )
              (once (adjacent_side ?h ?d ?d) )
            )
          )
        )
        (preference gameObjectToBin
          (exists (?db - cylindrical_block)
            (then
              (hold-while (agent_holds ?r) (agent_holds ?db) )
              (once (exists (?l1 - hexagonal_bin ?tb - (either golfball golfball)) (toggled_on ?o) ) )
              (hold (not (game_over ) ) )
            )
          )
        )
        (preference dodgeballHitsBin
          (exists (?x - dodgeball)
            (then
              (hold-while (agent_holds ?l) (and (in_motion ?x) (on ?o ?x) ) )
              (once (in_motion ?b) )
              (once (> (distance ?x ?x) 7) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> 5 4 )
)
(:scoring
  (external-forall-maximize
    (count-once-per-objects ballThrownToBed:golfball:basketball:golfball)
  )
)
)



(define (game game-id-692) (:domain medium-objects-room-v1)
(:setup
  (forall (?b - dodgeball)
    (or
      (and
        (forall (?b1 - shelf)
          (and
            (game-conserved
              (exists (?l4 - book)
                (in_motion ?b)
              )
            )
          )
        )
      )
      (exists (?t - hexagonal_bin)
        (game-conserved
          (not
            (not
              (in ?t ?b)
            )
          )
        )
      )
      (game-optional
        (agent_holds ?d1)
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttemptFromDoor
      (exists (?l - shelf ?b3 - hexagonal_bin)
        (at-end
          (agent_holds ?d)
        )
      )
    )
  )
)
(:terminal
  (> (total-score) 2 )
)
(:scoring
  (count-once-per-objects throwAttemptFromDoor:pink)
)
)



(define (game game-id-693) (:domain medium-objects-room-v1)
(:setup
  (exists (?b - shelf)
    (forall (?d - cube_block)
      (game-conserved
        (touch ?h ?d)
      )
    )
  )
)
(:constraints
  (and
    (preference blindsOpened
      (exists (?b - hexagonal_bin)
        (at-end
          (< (distance ?b ?w) (distance room_center ?d))
        )
      )
    )
  )
)
(:terminal
  (not
    (>= 5 (total-score) )
  )
)
(:scoring
  (count blindsOpened:book:blue)
)
)



(define (game game-id-694) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (> 10 (distance ?w2 ?o))
  )
)
(:constraints
  (and
    (preference watchOnShelf
      (exists (?c6 - hexagonal_bin)
        (then
          (once (adjacent room_center ?g) )
          (once (not (in_motion ?c6) ) )
          (once (and (adjacent ?w2 ?c6) (not (not (in_motion ?c6) ) ) (in_motion ?c6) ) )
          (hold (agent_holds ?c6) )
        )
      )
    )
    (preference throwAttempt
      (exists (?bl - hexagonal_bin)
        (at-end
          (not
            (in floor ?bl)
          )
        )
      )
    )
    (forall (?b - hexagonal_bin)
      (and
        (preference ballInOrOnBin
          (exists (?o1 - hexagonal_bin)
            (then
              (once (touch ?b ?b) )
              (once (exists (?d - chair ?c - hexagonal_bin) (not (and (agent_holds ?b) (on desk ?b) ) ) ) )
              (hold (in ?t ?b) )
            )
          )
        )
      )
    )
    (preference throwKnocksBlock
      (exists (?p3 - hexagonal_bin)
        (then
          (hold (not (in_motion ?p3) ) )
          (once (agent_holds ?p3) )
          (once (not (exists (?b - dodgeball ?h - block) (agent_holds ?p3) ) ) )
        )
      )
    )
    (forall (?d - hexagonal_bin ?ob - cube_block ?d - hexagonal_bin)
      (and
        (preference throwFromBehindChairsInBin
          (then
            (once (not (and (adjacent_side room_center ?d ?d) (same_type ?d ?d) ) ) )
            (hold (same_color agent pink) )
            (once (touch bed desk) )
          )
        )
      )
    )
    (forall (?c4 - color ?b1 - building)
      (and
        (preference pillowThrownToDoggieBed
          (exists (?c - hexagonal_bin ?s - curved_wooden_ramp ?c ?g - hexagonal_bin ?h - ball)
            (then
              (once (adjacent ?h ?h) )
              (hold (in ?h ?d) )
              (hold (not (touch ?h ?h) ) )
            )
          )
        )
        (preference ballThrownToChair
          (exists (?t - dodgeball)
            (then
              (once-measure (open ?o) (distance ?t ?b) )
              (once (not (not (not (and (= (distance_side side_table front ?t) 9) (agent_holds ?t) (not (and (not (in ?b1 ?b) ) (not (and (and (agent_holds ?t) (<= 1 2) (in ?t ?b1) (in_motion ?t) ) (and (not (and (agent_holds ?h) (exists (?o - ball ?f - building) (in_motion ?b1) ) ) ) (on desk ?b) ) ) ) ) ) (in ?b1 ?b) ) ) ) ) )
              (once (in_motion ?t) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< (total-time) (* 10 6 )
  )
)
(:scoring
  (= (+ (* 3 (count-once throwKnocksBlock:book) )
      3
    )
    18
  )
)
)



(define (game game-id-695) (:domain few-objects-room-v1)
(:setup
  (forall (?b4 ?ob - (either mug dodgeball doggie_bed))
    (game-conserved
      (on ?p ?l3)
    )
  )
)
(:constraints
  (and
    (preference objectLandsInBin
      (exists (?r - shelf)
        (at-end
          (toggled_on ?o)
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (total-score) 8 )
  )
)
(:scoring
  (count-once-per-objects objectLandsInBin:hexagonal_bin)
)
)



(define (game game-id-696) (:domain many-objects-room-v1)
(:setup
  (exists (?c2 - ball ?c2 - ball)
    (and
      (exists (?c1 ?t1 ?h - doggie_bed ?l2 - doggie_bed)
        (and
          (game-conserved
            (and
              (and
                (not
                  (same_type ?o block)
                )
                (and
                  (in_motion ?c2)
                  (< 1 (x_position ?l2))
                  (in_motion ?c2)
                  (agent_holds ?l2)
                )
              )
              (same_object ?c2 rug)
            )
          )
          (and
            (and
              (game-conserved
                (same_color ?d ?l2)
              )
            )
            (not
              (exists (?b - hexagonal_bin)
                (and
                  (and
                    (forall (?c - building)
                      (exists (?h - doggie_bed)
                        (forall (?d - building)
                          (exists (?c1 - cube_block ?r - dodgeball)
                            (and
                              (and
                                (exists (?ob - ball ?r - cylindrical_block)
                                  (exists (?w ?b2 ?h ?c2 - hexagonal_bin ?b - hexagonal_bin)
                                    (and
                                      (game-optional
                                        (game_start )
                                      )
                                    )
                                  )
                                )
                              )
                              (or
                                (exists (?h - color)
                                  (exists (?b - pillow ?d - block)
                                    (exists (?h - (either pencil laptop wall))
                                      (game-conserved
                                        (object_orientation ?r upright)
                                      )
                                    )
                                  )
                                )
                                (game-conserved
                                  (and
                                    (agent_holds ?d)
                                    (same_type ?c2 pillow)
                                  )
                                )
                                (exists (?d - hexagonal_bin ?b4 - building)
                                  (game-conserved
                                    (faces bed ?d1)
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                    (forall (?w - ball)
                      (exists (?t - ball ?o4 - hexagonal_bin)
                        (game-conserved
                          (and
                            (touch ?b ?c2)
                            (broken ?b)
                          )
                        )
                      )
                    )
                  )
                  (and
                    (exists (?r1 - ball ?b - cube_block ?b - ball)
                      (exists (?b - (either dodgeball pyramid_block))
                        (game-conserved
                          (agent_holds ?s)
                        )
                      )
                    )
                    (forall (?h - building)
                      (or
                        (game-optional
                          (agent_holds ?b)
                        )
                        (and
                          (game-conserved
                            (and
                              (adjacent ?l2 west_wall)
                              (agent_holds ?b)
                            )
                          )
                          (and
                            (exists (?s - hexagonal_bin)
                              (game-optional
                                (adjacent ?h ?h)
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                  (and
                    (forall (?h - hexagonal_bin ?w2 - pyramid_block)
                      (game-conserved
                        (< (distance ?c2 ?c2) 1)
                      )
                    )
                  )
                )
              )
            )
            (forall (?d - triangular_ramp)
              (exists (?h - curved_wooden_ramp ?h - dodgeball ?b8 - ball)
                (and
                  (game-conserved
                    (in desk ?d)
                  )
                  (game-optional
                    (on ?d ?l2)
                  )
                  (forall (?b - hexagonal_bin ?h - ball)
                    (and
                      (game-conserved
                        (and
                          (and
                            (and
                              (agent_holds ?d)
                              (agent_holds ?h)
                            )
                            (< 10 (distance ?h ?h))
                          )
                          (agent_holds ?d)
                        )
                      )
                      (game-optional
                        (on ?c bed)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference pyramidBlockAtopTowerAtEnd
      (exists (?d - building ?b2 - block ?r - ball)
        (then
          (once (not (not (exists (?b1 - game_object) (game_start ) ) ) ) )
          (hold (exists (?p1 - drawer) (< 5 1) ) )
          (once (agent_holds ?d) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 4 (total-score) )
    (< (total-score) (total-score) )
  )
)
(:scoring
  (external-forall-maximize
    (count pyramidBlockAtopTowerAtEnd:golfball)
  )
)
)



(define (game game-id-697) (:domain medium-objects-room-v1)
(:setup
  (forall (?b8 - doggie_bed ?l - doggie_bed)
    (game-conserved
      (in_motion ?b)
    )
  )
)
(:constraints
  (and
    (preference throwToBinFromDistance
      (exists (?o2 - hexagonal_bin)
        (then
          (hold (or (and (or (in_motion ?g) ) (> 1 1) (and (and (in ?o2 bed) (in_motion ?o) (in_motion floor) ) (agent_holds ?o2) ) ) (on ?b ?o2) ) )
          (once (or (is_setup_object ?o) (and (broken ?b1) (not (and (and (agent_holds ?b) (agent_holds ?o2) ) (not (or (not (agent_holds ?o2) ) (and (on ?c4 ?b5) (and (on ?o2 ?o) (or (not (and (in_motion ?d) (not (agent_holds ?o2) ) ) ) (and (agent_holds agent) (same_object ?s ?o2) (in_motion ?x) ) ) ) ) ) ) (forall (?c - (either cd desktop triangle_block)) (and (adjacent_side bed front ?b) (not (in_motion ?c) ) (in_motion ?d) ) ) ) ) ) ) )
          (once (game_start ) )
        )
      )
    )
    (preference ballThrownThroughRampToBin
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?l) )
          (once (on ?d ?d) )
          (hold (in_motion ?d) )
        )
      )
    )
    (forall (?b - red_dodgeball)
      (and
        (preference ballThrownToWallToAgent
          (exists (?p - hexagonal_bin)
            (then
              (once (adjacent agent ?p) )
              (once (in ?g ?b) )
              (once (game_over ) )
            )
          )
        )
        (preference thrownBallHitsBlock
          (exists (?o1 - building)
            (at-end
              (exists (?db - building)
                (on ?d ?b)
              )
            )
          )
        )
        (preference blockOnBlockInTowerAtEnd
          (then
            (hold-while (exists (?t - game_object) (between ?d agent ?d) ) (and (and (not (in ?b ?b) ) (on ?h ?d) ) (in ?g ?c3) ) (not (in_motion ?g) ) )
            (once (or (and (same_color ?d ?b) (not (not (and (> (distance ?h ?o) (distance ?w2 ?b)) (> 3 2) ) ) ) ) (touch ?t ?b) (agent_holds ?d) ) )
            (once (or (in_motion ?b) (adjacent ?d ?b) ) )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count blockOnBlockInTowerAtEnd:green) (total-score) )
)
(:scoring
  (* (* 6 )
    (<= (count-once ballThrownToWallToAgent:yellow) (* (* 10 1 )
        (* (count ballThrownToWallToAgent:yellow) (count throwToBinFromDistance:dodgeball) )
        50
        100
      )
    )
  )
)
)



(define (game game-id-698) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (not
      (agent_holds ?d)
    )
  )
)
(:constraints
  (and
    (preference greenObjectMovedToRoomCenter
      (exists (?s - hexagonal_bin ?b - hexagonal_bin)
        (then
          (once (on ?b ?b) )
          (once (touch ?b rug) )
          (once (and (and (and (in_motion ?b) (not (and (on ?b ?b) (in_motion ?b) ) ) ) (agent_holds ?b) ) (or (agent_holds ?b) (not (in_motion ?b) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (<= 2 10 )
    (>= (count greenObjectMovedToRoomCenter:book:pink:golfball) (* 3 (count-once greenObjectMovedToRoomCenter:golfball:pink) )
    )
    (or
      (>= 5 (* 7 6 )
      )
    )
  )
)
(:scoring
  (count-once-per-objects greenObjectMovedToRoomCenter:blue:blue_dodgeball)
)
)



(define (game game-id-699) (:domain many-objects-room-v1)
(:setup
  (forall (?p2 - ball)
    (game-optional
      (> 2 1)
    )
  )
)
(:constraints
  (and
    (preference thrownBallHitsBlock
      (exists (?c - triangular_ramp)
        (then
          (once (in_motion ?c) )
          (hold (and (not (not (in_motion ?c) ) ) (agent_holds ?d) ) )
          (once (adjacent_side side_table back ?c) )
        )
      )
    )
    (preference ballInOrOnBin
      (exists (?c - hexagonal_bin)
        (then
          (once (not (touch ?o ?c) ) )
          (hold (in ?c ?o1) )
          (once (not (not (on ?c ?b) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (and
      (>= (count thrownBallHitsBlock:red) (count-measure thrownBallHitsBlock:beachball:dodgeball) )
    )
    (>= (count-once-per-objects ballInOrOnBin:yellow_cube_block:basketball) 9 )
  )
)
(:scoring
  (count ballInOrOnBin:dodgeball)
)
)



(define (game game-id-700) (:domain few-objects-room-v1)
(:setup
  (forall (?g ?d - curved_wooden_ramp ?c - building)
    (exists (?c - red_dodgeball)
      (and
        (exists (?o - shelf ?t1 - doggie_bed)
          (and
            (forall (?p - ball ?d - hexagonal_bin ?b - doggie_bed)
              (game-optional
                (in_motion ?g)
              )
            )
          )
        )
        (exists (?h - hexagonal_bin)
          (exists (?h - color ?o1 ?o - hexagonal_bin)
            (game-optional
              (and
                (and
                  (on ?b ?h)
                )
                (touch ?h floor)
                (not
                  (and
                    (not
                      (= (distance room_center ?t))
                    )
                    (in_motion ?g)
                    (in_motion ?o1)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference teddyBearLandsInBin
      (exists (?o - hexagonal_bin)
        (then
          (once (not (not (agent_holds ?s) ) ) )
          (hold (in_motion ?o) )
          (once (in ?b ?o) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 10 (count teddyBearLandsInBin:basketball) )
    (count teddyBearLandsInBin:doggie_bed)
  )
)
(:scoring
  (count-longest teddyBearLandsInBin:pink_dodgeball:yellow)
)
)



(define (game game-id-701) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (is_setup_object ?o)
  )
)
(:constraints
  (and
    (preference ballKnocksBlockFromRug
      (exists (?r - hexagonal_bin)
        (then
          (once (not (and (agent_holds ?h) (in_motion ?o) (not (and (and (adjacent ?h ?r) (in_motion ?r) ) (object_orientation ?h ?r) (and (on ?r ?r) (and (adjacent ?r ?r) (in_motion ?r) ) (exists (?o - hexagonal_bin) (equal_x_position ?c ?b) ) ) (adjacent ?r ?c1) (and (in ?r ?d) (is_setup_object ?r) ) (exists (?c - hexagonal_bin) (or (in_motion ?c) (agent_holds ?d) ) ) (adjacent_side ?h back ?r) ) ) ) ) )
          (once (in ?b desk) )
          (hold (and (in_motion agent) (not (in floor ?r) ) ) )
        )
      )
    )
    (preference throwAttemptFromBehindBlock
      (exists (?h - hexagonal_bin)
        (then
          (once (agent_holds ?h) )
          (hold (same_type ?g ?l2) )
          (once (or (and (and (in_motion ?c) (not (agent_holds ?g) ) (not (agent_holds ?r) ) ) (and (on ?h ?d) (in_motion ?h) (in_motion ?h) (game_start ) (touch ?d ?h) (not (not (same_color ?h blue) ) ) ) ) (in ?ob ?g) (and (agent_holds ?h) (and (or (and (on ?h ?h) ) (and (agent_holds ?b) (not (on ?h ?h) ) ) ) (agent_holds ?h) ) ) (< 1 (distance ?h ?l2)) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count ballKnocksBlockFromRug:blue_dodgeball) (total-score) )
  )
)
(:scoring
  (count throwAttemptFromBehindBlock:basketball)
)
)



(define (game game-id-702) (:domain many-objects-room-v1)
(:setup
  (or
    (exists (?h - (either dodgeball yellow))
      (game-conserved
        (in_motion ?d)
      )
    )
    (and
      (game-conserved
        (agent_holds ?d)
      )
    )
  )
)
(:constraints
  (and
    (preference throwKnocksBlock
      (exists (?b - dodgeball)
        (then
          (once (and (not (forall (?x - game_object ?c - golfball ?d - teddy_bear) (on ?d ?h) ) ) (toggled_on ?b) ) )
          (hold (agent_holds ?b) )
          (hold (= (distance ?b ?b)) )
        )
      )
    )
  )
)
(:terminal
  (or
    (and
      (>= (* (count throwKnocksBlock:dodgeball:cube_block) (count throwKnocksBlock:beachball:rug) )
        (- 4 )
      )
      (and
        (>= (* (count-once throwKnocksBlock:yellow) (* (count-once-per-external-objects throwKnocksBlock:dodgeball) 3 )
          )
          (total-time)
        )
        (or
          (< (count-unique-positions throwKnocksBlock:hexagonal_bin) (+ (count-once throwKnocksBlock:purple:yellow:hexagonal_bin) (count throwKnocksBlock:basketball) )
          )
          (> 2 (count-once-per-objects throwKnocksBlock:pink_dodgeball) )
        )
      )
    )
    (>= 4 (* (+ 5 9 )
        (count throwKnocksBlock:dodgeball)
        3
      )
    )
    (>= (external-forall-maximize (= 50 (count throwKnocksBlock:doggie_bed) )
      )
      (total-score)
    )
  )
)
(:scoring
  (- 180 )
)
)



(define (game game-id-703) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (not
      (agent_holds ?b)
    )
  )
)
(:constraints
  (and
    (preference blockCorrectlyPicked
      (exists (?h - color ?h - (either yellow_cube_block cube_block))
        (then
          (once (and (agent_holds ?l) (agent_holds ?d) ) )
          (hold (agent_holds ?h) )
          (hold (agent_holds floor) )
        )
      )
    )
    (preference blockThrowAttempt
      (exists (?d - red_dodgeball)
        (then
          (once (and (and (agent_holds ?g) (not (agent_holds ?d) ) ) (not (game_over ) ) ) )
          (once (not (not (and (not (and (not (agent_holds ?d) ) (adjacent agent ?d) ) ) (not (in_motion ?b) ) ) ) ) )
          (once (exists (?b3 - hexagonal_bin ?l - block ?b - cube_block) (game_over ) ) )
        )
      )
    )
    (preference objectOnBed
      (exists (?l - (either tall_cylindrical_block cube_block))
        (then
          (once (and (not (in_motion ?l) ) (on ?l ?g) ) )
          (hold (not (on ?l ?l) ) )
          (hold (in_motion ?l) )
        )
      )
    )
  )
)
(:terminal
  (> (total-score) 100 )
)
(:scoring
  (count-once-per-objects objectOnBed:golfball)
)
)



(define (game game-id-704) (:domain medium-objects-room-v1)
(:setup
  (exists (?b - curved_wooden_ramp)
    (forall (?h - hexagonal_bin)
      (forall (?h - (either dodgeball blue_cube_block bed))
        (and
          (and
            (game-optional
              (on ?b ?d)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?l - dodgeball)
      (and
        (preference dodgeballHitsBinBottom
          (exists (?b3 ?bl - hexagonal_bin ?r - hexagonal_bin)
            (then
              (once (< 2 6) )
              (once (and (and (not (not (in_motion ?d1) ) ) (agent_holds ?r) ) (agent_holds ?g) ) )
              (once (agent_holds ?l) )
            )
          )
        )
      )
    )
    (forall (?t - chair)
      (and
        (preference greenObjectMovedToRoomCenter
          (exists (?c - hexagonal_bin ?w2 - cylindrical_block)
            (then
              (once (in ?d ?h) )
              (once (>= 4 (distance agent ?d)) )
              (once (= (distance room_center ?o1) (distance ?h ?d)) )
            )
          )
        )
        (preference dodgeballBouncesOnceToDoggieBed
          (exists (?b - (either main_light_switch pyramid_block) ?b - doggie_bed ?c - cube_block ?c2 - tall_cylindrical_block)
            (at-end
              (same_color ?o2 brown)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (not
      (> (+ 3 30 )
        (total-time)
      )
    )
  )
)
(:scoring
  (= (count-once-per-objects dodgeballBouncesOnceToDoggieBed:white) 20 1 )
)
)



(define (game game-id-705) (:domain few-objects-room-v1)
(:setup
  (forall (?r - game_object)
    (and
      (game-conserved
        (and
          (in_motion ?r)
          (not
            (on ?r ?r)
          )
          (= (distance ?d door) (distance desk ?d))
        )
      )
      (and
        (exists (?r - (either laptop))
          (forall (?bl - flat_block)
            (exists (?b8 - dodgeball ?c - dodgeball ?b7 - chair)
              (exists (?o - game_object)
                (game-conserved
                  (and
                    (not
                      (and
                        (<= (distance ?r ?b7) (distance_side ?o ?b7 ?o))
                        (not
                          (and
                            (not
                              (agent_holds ?h)
                            )
                            (exists (?b8 - hexagonal_bin)
                              (in_motion ?r)
                            )
                          )
                        )
                        (agent_holds ?b)
                        (equal_x_position ?o ?r)
                      )
                    )
                    (not
                      (not
                        (= (distance_side room_center front ?r left) 1 8)
                      )
                    )
                  )
                )
              )
            )
          )
        )
        (and
          (game-conserved
            (on ?r ?b)
          )
        )
        (and
          (game-conserved
            (agent_holds green_golfball)
          )
          (exists (?h ?p ?g - dodgeball)
            (game-conserved
              (in ?b ?g)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference golfballLandsInBinThroughRamp
      (exists (?b - hexagonal_bin)
        (then
          (hold (not (in_motion ?b) ) )
          (once (in_motion ?c5) )
          (once (and (and (in ?b ?b) (not (in ?b ?b) ) (agent_holds ?c3) (on ?g bed) (same_object ?b ?b) ) (not (not (adjacent agent ?b) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count golfballLandsInBinThroughRamp:dodgeball:cylindrical_block) (total-time) )
    (>= 9 9 )
    (= (count-once-per-objects golfballLandsInBinThroughRamp:beachball:basketball) (count golfballLandsInBinThroughRamp:dodgeball:yellow_cube_block) )
  )
)
(:scoring
  (count-total golfballLandsInBinThroughRamp:basketball)
)
)



(define (game game-id-706) (:domain many-objects-room-v1)
(:setup
  (exists (?o4 - ball)
    (game-conserved
      (in_motion ?o4)
    )
  )
)
(:constraints
  (and
    (preference bookOnDeskShelf
      (exists (?r - pillow)
        (then
          (once (and (not (not (in_motion ?b) ) ) (agent_holds ?r) ) )
          (hold-while (not (= (distance_side ?r front ?b)) ) (and (game_over ) (on ?r ?r) ) )
          (once (in ?o1 ?r) )
        )
      )
    )
  )
)
(:terminal
  (>= (count bookOnDeskShelf:yellow) 10 )
)
(:scoring
  (count bookOnDeskShelf:blue_cube_block)
)
)



(define (game game-id-707) (:domain medium-objects-room-v1)
(:setup
  (forall (?o4 - pillow ?c - shelf)
    (and
      (game-conserved
        (not
          (in ?c ?c)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownMissesEverything
      (exists (?c - wall)
        (then
          (once (agent_holds ?c) )
          (hold (or (agent_holds agent) (and (is_setup_object ?c) (not (in_motion ?c) ) ) ) )
          (once (equal_z_position ?h ?d) )
        )
      )
    )
    (forall (?l3 - beachball)
      (and
        (preference throwToRampToBin
          (exists (?b6 - teddy_bear)
            (then
              (hold (on ?c ?l3) )
              (once (in_motion ?l3) )
              (once (not (>= 3 (distance desk ?b6)) ) )
            )
          )
        )
        (preference basketMadeFromRug
          (exists (?b - doggie_bed)
            (then
              (hold (and (agent_holds ?l3) (is_setup_object ?b) ) )
              (hold (and (in_motion ?b) (on ?l3 ?d) ) )
              (once (not (in_motion ?b) ) )
            )
          )
        )
      )
    )
    (forall (?l1 - (either cd chair))
      (and
        (preference bounceBallToBin
          (exists (?t - (either side_table dodgeball) ?l1 - golfball ?h - dodgeball ?r - red_dodgeball)
            (then
              (once (forall (?c2 - game_object) (agent_holds ?c) ) )
              (once (agent_holds floor) )
              (hold (not (and (in_motion ?r) (in ?g ?l1) ) ) )
            )
          )
        )
        (preference ballThrownThroughRampToBin
          (exists (?b8 ?b ?h - sliding_door)
            (at-end
              (agent_holds ?b)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count ballThrownMissesEverything:beachball) (total-score) )
)
(:scoring
  (count-once-per-objects ballThrownThroughRampToBin:basketball:hexagonal_bin)
)
)



(define (game game-id-708) (:domain medium-objects-room-v1)
(:setup
  (and
    (not
      (game-conserved
        (agent_holds ?h)
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - cylindrical_block)
      (and
        (preference throwFromEdgeOfRug
          (exists (?d - hexagonal_bin ?d2 - (either book book))
            (then
              (once (and (and (and (in_motion ?d2) (in_motion ?d) ) (in_motion rug) (and (not (not (adjacent desk ?b) ) ) (agent_holds pink_dodgeball) ) ) (agent_holds ?d2) ) )
              (once (on ?h rug) )
              (hold (agent_holds ?h) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count throwFromEdgeOfRug:dodgeball) (count throwFromEdgeOfRug) )
  )
)
(:scoring
  (* (<= 2 (count-once-per-objects throwFromEdgeOfRug:red_pyramid_block) )
    (count-once-per-objects throwFromEdgeOfRug:blue_dodgeball)
  )
)
)



(define (game game-id-709) (:domain medium-objects-room-v1)
(:setup
  (forall (?c5 - (either book doggie_bed triangle_block))
    (exists (?d - (either dodgeball basketball))
      (game-conserved
        (agent_holds ?c)
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - bridge_block ?l2 - shelf ?h - shelf)
      (and
        (preference blockInTowerAtEnd
          (exists (?h - chair ?b - hexagonal_bin)
            (then
              (once (adjacent ?h ?h) )
            )
          )
        )
        (preference smallItemsInPlace
          (exists (?h - hexagonal_bin)
            (then
              (once (in_motion ?h) )
              (once (in_motion ?h) )
              (once (game_over ) )
            )
          )
        )
      )
    )
    (forall (?p2 - wall ?c - cylindrical_block ?l - (either blue_cube_block cube_block))
      (and
        (preference blocksInPlace
          (exists (?l4 - building)
            (at-end
              (not
                (and
                  (agent_holds ?l)
                  (touch ?l4 ?l4)
                )
              )
            )
          )
        )
      )
    )
    (preference dodgeballThrownToBinFromDesk
      (exists (?h ?tb ?h - hexagonal_bin)
        (then
          (hold (and (not (not (adjacent_side desk front ?tb) ) ) (not (touch ?c2 ?b) ) (agent_crouches ) ) )
          (once (not (and (in ?h ?t) (object_orientation bed upright) ) ) )
          (once (and (agent_holds ?tb) (touch ?h ?h) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (count-once blocksInPlace:red) )
)
(:scoring
  (* 6 (* (* 15 (count-once-per-objects blocksInPlace:yellow) )
      (count smallItemsInPlace:golfball:hexagonal_bin)
    )
  )
)
)



(define (game game-id-710) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (exists (?b9 - dodgeball)
        (and
          (game-conserved
            (not
              (in ?b9 ?b9)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballDroppedInBin
      (exists (?b - chair)
        (then
          (once (in_motion ?g) )
          (once (in_motion ?b) )
          (once (same_color ?b ?b) )
        )
      )
    )
    (preference throwBallToDoggieBed
      (exists (?l2 - game_object)
        (then
          (hold (in_motion ?l2) )
          (once (and (in_motion ?d) (broken ?l2) ) )
          (once (not (and (agent_holds ?l2) (agent_holds ?l2) ) ) )
        )
      )
    )
    (preference blockKnockedFromBuildingInBin
      (exists (?o2 - ball)
        (at-end
          (and
            (and
              (same_type ?o2 block)
              (and
                (and
                  (not
                    (and
                      (equal_z_position ?o2 ?o2)
                      (and
                        (not
                          (not
                            (adjacent_side ?c1 ?o2 ?d)
                          )
                        )
                      )
                    )
                  )
                  (>= (distance ?h ?b) (distance east_sliding_door ?o))
                )
                (adjacent_side room_center right ?o)
                (adjacent ?o2 ?h)
              )
              (not
                (not
                  (< (distance room_center ?o2) 1)
                )
              )
            )
            (not
              (adjacent ?o2 ?o2)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (count blockKnockedFromBuildingInBin) )
)
(:scoring
  (* 3 6 3 (count throwBallToDoggieBed:pink_dodgeball) (* (* 300 (= (* (+ (count-once ballDroppedInBin:white) (count-once-per-objects throwBallToDoggieBed:golfball) )
            (+ (count-once-per-objects blockKnockedFromBuildingInBin:yellow) 5 7 )
          )
        )
        3
      )
      5
    )
    3
  )
)
)



(define (game game-id-711) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (adjacent ?o1 ?b)
  )
)
(:constraints
  (and
    (preference ballOnBedAtEnd
      (exists (?b1 - hexagonal_bin)
        (at-end
          (and
            (exists (?b5 - color)
              (agent_holds ?b5)
            )
            (not
              (in ?b1 ?b1)
            )
          )
        )
      )
    )
    (forall (?b4 - game_object)
      (and
        (preference ballThrownFromDoor
          (exists (?b - hexagonal_bin)
            (then
              (once (not (in ?b4 ?b4) ) )
              (once (< 4 (distance ?b4 ?b)) )
              (once (in_motion ?b) )
            )
          )
        )
      )
    )
    (preference pillowThrownToDoggieBed
      (exists (?h - beachball ?l2 - block)
        (then
          (hold (exists (?d - dodgeball) (and (not (not (in_motion ?l2) ) ) (not (equal_z_position ?l2 ?o) ) ) ) )
          (hold (in_motion ?l2) )
          (hold (and (not (not (in_motion ?l2) ) ) (agent_holds ?l2) ) )
        )
      )
    )
  )
)
(:terminal
  (> 4 10 )
)
(:scoring
  (count-once-per-objects ballOnBedAtEnd:purple)
)
)



(define (game game-id-712) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds ?d)
  )
)
(:constraints
  (and
    (preference throwToBinFromOppositeWall
      (exists (?d - (either doggie_bed desktop blue_cube_block dodgeball dodgeball mug cylindrical_block) ?p - cube_block)
        (then
          (hold-while (and (in ?l ?d) ) (agent_holds ?h) )
          (once (agent_holds ?d) )
          (once (and (or (in_motion ?d) (in_motion ?p) ) (exists (?c3 - teddy_bear) (is_setup_object agent) ) ) )
        )
      )
    )
    (preference itemInClosedDrawerAtEnd
      (exists (?b2 - building ?b1 - hexagonal_bin)
        (then
          (once (not (not (adjacent ?h ?b1) ) ) )
          (hold (in_motion ?b1) )
          (hold (and (not (not (agent_holds ?g) ) ) (not (adjacent ?b1 ?p) ) ) )
        )
      )
    )
  )
)
(:terminal
  (<= 5 (* 10 3 )
  )
)
(:scoring
  (count-once-per-objects throwToBinFromOppositeWall:basketball)
)
)



(define (game game-id-713) (:domain many-objects-room-v1)
(:setup
  (forall (?c1 - hexagonal_bin)
    (game-conserved
      (and
        (not
          (and
            (and
              (touch ?c1 ?c1)
              (agent_holds bed)
            )
            (not
              (< 1 1)
            )
            (in_motion ?g)
          )
        )
        (and
          (touch ?b8 ?b1)
          (agent_holds ?r)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballThrownToBin
      (exists (?g - ball)
        (then
          (once (agent_holds ?l) )
          (once (= 10 (distance rug ?b)) )
          (once (not (and (on ?d ?h) (in_motion ?b) ) ) )
        )
      )
    )
    (preference throwBallToBinOffObject
      (exists (?h ?t - block ?g ?d - drawer)
        (then
          (hold (agent_holds agent) )
          (hold (not (not (and (and (not (in ?o ?d) ) (and (on ?g ?d) (rug_color_under ?s green) ) ) (agent_holds ?g) ) ) ) )
          (once (agent_holds ?g) )
        )
      )
    )
  )
)
(:terminal
  (> (* (* 10 3 )
      2
    )
    (total-score)
  )
)
(:scoring
  (+ (external-forall-minimize (+ (external-forall-maximize (count-once-per-external-objects throwBallToBinOffObject:beachball) ) 5 )
    )
    (count-once-per-objects throwBallToBinOffObject:blue_dodgeball:bed)
  )
)
)



(define (game game-id-714) (:domain few-objects-room-v1)
(:setup
  (forall (?h - building)
    (or
      (game-optional
        (agent_holds ?h)
      )
    )
  )
)
(:constraints
  (and
    (forall (?f - teddy_bear)
      (and
        (preference ballThrownHitsAgent
          (then
            (once (adjacent room_center ?d) )
            (once (agent_holds ?f) )
          )
        )
      )
    )
  )
)
(:terminal
  (> (total-score) 10 )
)
(:scoring
  (count ballThrownHitsAgent:golfball:yellow_cube_block)
)
)



(define (game game-id-715) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (in_motion agent)
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?t - game_object)
        (at-end
          (and
            (agent_holds ?t)
            (on ?c ?h)
            (or
              (not
                (touch ?d ?c)
              )
              (touch ?t ?t)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (<= (total-score) 5 )
  )
)
(:scoring
  (count throwAttempt:golfball)
)
)



(define (game game-id-716) (:domain medium-objects-room-v1)
(:setup
  (exists (?r - bridge_block)
    (or
      (game-optional
        (in_motion ?bl)
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - dodgeball)
      (and
        (preference blockKnockedFromBuildingInBin
          (then
            (hold (and (>= 1 2) ) )
            (hold (same_color ?b blue) )
            (hold (not (< 1 (x_position ?b)) ) )
          )
        )
      )
    )
    (preference throwAttempt
      (exists (?r1 - hexagonal_bin ?w1 - (either flat_block blue_cube_block))
        (then
          (once (in_motion ?b) )
          (hold (in_motion ?d) )
          (once (in_motion ?w1) )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (count-once-per-objects blockKnockedFromBuildingInBin:basketball:pink) )
)
(:scoring
  (count throwAttempt:dodgeball:blue_dodgeball)
)
)



(define (game game-id-717) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (equal_x_position room_center ?l2)
  )
)
(:constraints
  (and
    (preference ballDroppedInBin
      (exists (?b - building)
        (then
          (once (faces ?d ?d) )
          (hold (in ?d ?o) )
          (hold (not (= (x_position ?b) (distance room_center ?b) (distance agent ?l)) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (total-score) )
)
(:scoring
  (count ballDroppedInBin:red:dodgeball)
)
)



(define (game game-id-718) (:domain few-objects-room-v1)
(:setup
  (exists (?p3 - ball)
    (exists (?d - block)
      (forall (?d1 - building)
        (forall (?h - doggie_bed)
          (forall (?o - wall)
            (exists (?b - (either basketball cube_block tall_cylindrical_block) ?c5 - hexagonal_bin ?r1 - wall ?l - hexagonal_bin)
              (and
                (exists (?r2 - hexagonal_bin)
                  (game-conserved
                    (in_motion ?d)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?t - dodgeball ?bl ?p2 ?h ?l ?w1 ?s ?l1 ?l ?h ?g - hexagonal_bin ?c3 - ball)
      (and
        (preference redDodgeballThrownToBin
          (exists (?c4 - block ?h - dodgeball ?d - blue_pyramid_block)
            (then
              (hold-while (in_motion agent) (and (or (and (exists (?h ?o ?w - (either wall laptop pillow laptop)) (agent_holds ?d) ) (and (< 1 5) (on ?d ?o) ) (on ?b ?b) ) (agent_holds ?d) (toggled_on ?l1) ) (and (in_motion ?d) (agent_holds ?o) (adjacent ?c ?d) ) (in_motion ?c3) (not (and (agent_holds ?p) (not (touch ?l floor) ) (not (on ?b5 bed) ) (and (not (not (exists (?o - triangular_ramp ?b - chair) (exists (?g ?h - wall) (in_motion ?c3) ) ) ) ) (agent_holds ?c3) ) (not (in_motion ?c3) ) (in ?ob ?d) (in_motion ?d) (< (building_size ?c3) 0.5) ) ) (and (not (agent_holds ?d) ) (in_motion ?d) ) (in_motion ?o1) (forall (?d - dodgeball ?d - curved_wooden_ramp) (adjacent ?d ?d) ) ) )
              (hold-while (in ?c3 ?d) (open ?g) )
              (once (agent_holds ?d) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (count redDodgeballThrownToBin:pyramid_block) (* 5 2 )
    )
    (>= 4 (total-time) )
    (>= 10 (count redDodgeballThrownToBin:dodgeball) )
    (> (* (external-forall-maximize (* 40 2 )
        )
        5
      )
      5
    )
  )
)
(:scoring
  (* (count redDodgeballThrownToBin:pink) 8 )
)
)



(define (game game-id-719) (:domain medium-objects-room-v1)
(:setup
  (forall (?o1 ?o - cube_block)
    (and
      (forall (?d - hexagonal_bin)
        (game-conserved
          (on ?d ?b)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c - hexagonal_bin)
      (and
        (preference throwFromEdgeOfRug
          (exists (?l - (either chair hexagonal_bin dodgeball) ?b - hexagonal_bin)
            (at-end
              (agent_holds ?c)
            )
          )
        )
        (preference objectMoved
          (exists (?p1 - building)
            (then
              (once (adjacent ?c ?p1) )
              (once (not (agent_holds ?p1) ) )
              (hold (agent_holds ?l2) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (total-time) )
)
(:scoring
  (count throwFromEdgeOfRug:red_pyramid_block)
)
)



(define (game game-id-720) (:domain many-objects-room-v1)
(:setup
  (forall (?c1 - pillow)
    (and
      (forall (?r - hexagonal_bin ?c - dodgeball)
        (exists (?h ?s - teddy_bear)
          (game-optional
            (not
              (and
                (and
                  (adjacent ?c ?c1)
                  (agent_holds ?h)
                )
                (agent_holds ?o)
                (on ?g ?p)
              )
            )
          )
        )
      )
      (game-conserved
        (agent_holds ?c1)
      )
      (forall (?b7 - (either cube_block) ?d - curved_wooden_ramp)
        (game-optional
          (and
            (agent_holds ?b)
            (not
              (rug_color_under ?c1 ?c)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c - (either rug pillow pyramid_block))
      (and
        (preference blockKnockedFromBuildingInBin
          (exists (?h ?w2 - shelf)
            (then
              (hold (in ?b ?w2) )
              (once (agent_holds rug) )
              (once (touch ?l1 ?d) )
            )
          )
        )
        (preference ballThrownMissesEverything
          (exists (?o - chair)
            (then
              (hold (not (and (agent_holds agent) (exists (?d - hexagonal_bin) (not (agent_holds ?o) ) ) ) ) )
              (hold (and (agent_holds ?o) (in ?c ?c) ) )
              (once (and (on floor ?c) (in_motion ?c) ) )
            )
          )
        )
        (preference throwBallToBin
          (then
            (once (and (in ?c ?d) (agent_holds ?c) ) )
            (once (same_type ?c blinds) )
            (once (in_motion ?c) )
          )
        )
      )
    )
    (preference throwGolfballToBin
      (exists (?o2 - hexagonal_bin)
        (then
          (once (in_motion ?o2) )
          (once (in_motion ?o2) )
          (hold (and (touch agent ?bl) (and (not (in_motion bed) ) (> (distance door ?o2) 0) ) ) )
        )
      )
    )
    (preference pyramidBlockAtopTowerAtEnd
      (exists (?o - beachball)
        (at-end
          (agent_holds ?o)
        )
      )
    )
  )
)
(:terminal
  (>= (* 3 (count ballThrownMissesEverything:pyramid_block:dodgeball) )
    3
  )
)
(:scoring
  (+ (count blockKnockedFromBuildingInBin:cube_block) (- (count-once ballThrownMissesEverything:dodgeball:basketball) )
  )
)
)



(define (game game-id-721) (:domain many-objects-room-v1)
(:setup
  (forall (?h - hexagonal_bin)
    (exists (?b1 - hexagonal_bin)
      (exists (?b6 - dodgeball ?o - doggie_bed ?h - hexagonal_bin)
        (exists (?o - (either pen floor))
          (exists (?d - color ?g - desktop ?db - (either beachball pencil pen))
            (and
              (game-conserved
                (< (x_position ?h) 2)
              )
              (game-conserved
                (in ?d ?b1)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?bl - (either key_chain) ?g - dodgeball ?w1 - (either cube_block hexagonal_bin) ?c2 - hexagonal_bin)
      (and
        (preference matchingBuildingBuilt
          (exists (?h - wall)
            (at-end
              (or
                (opposite ?c2 ?b)
                (adjacent ?h ?p2)
              )
            )
          )
        )
        (preference greenObjectMovedToRoomCenter
          (exists (?c6 - hexagonal_bin ?o - blue_cube_block ?h - (either dodgeball laptop) ?l2 - book)
            (then
              (once (in_motion ?d) )
            )
          )
        )
      )
    )
    (preference failedThrowAttempt
      (exists (?b - red_dodgeball)
        (then
          (hold-while (on ?b ?b) (not (agent_holds ?t) ) )
          (hold-while (not (adjacent_side ?h back ?o) ) (in_motion ?b) (on ?b ?t) (on ?b ?b) )
          (once (< 0 3) )
        )
      )
    )
  )
)
(:terminal
  (= (* 10 (count-once-per-objects matchingBuildingBuilt:blue_dodgeball) )
    (total-score)
  )
)
(:scoring
  (count failedThrowAttempt:red)
)
)



(define (game game-id-722) (:domain many-objects-room-v1)
(:setup
  (forall (?b - block)
    (game-conserved
      (agent_holds ?b)
    )
  )
)
(:constraints
  (and
    (forall (?w - color)
      (and
        (preference objectsHidden
          (exists (?o - blue_pyramid_block)
            (then
              (once (in ?o ?b) )
              (hold (not (and (not (not (not (< (distance ?d ?d) 1) ) ) ) (agent_holds ?w) ) ) )
              (hold-while (adjacent ?o ?w) (not (and (in_motion ?w) (on rug ?b) ) ) )
            )
          )
        )
        (preference throwToDrawerOrBin
          (exists (?b1 - game_object)
            (then
              (once (agent_holds ?o2) )
              (once (in_motion ?b1) )
              (hold (adjacent ?w ?w) )
            )
          )
        )
        (preference throwBallToBinOffObject
          (exists (?f ?b4 ?s ?b8 ?b ?d ?l1 ?d ?b6 ?p - dodgeball ?h - pyramid_block)
            (then
              (once (faces ?w ?h) )
              (once (not (not (agent_holds desktop) ) ) )
              (once (same_type ?t block) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (= (* (count-once-per-objects objectsHidden:pink_dodgeball) (count-once-per-objects objectsHidden:tan) )
    (count throwToDrawerOrBin:block)
  )
)
(:scoring
  (count throwToDrawerOrBin:golfball)
)
)



(define (game game-id-723) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (in ?c ?b)
  )
)
(:constraints
  (and
    (preference rollBallToBin
      (exists (?t ?b2 ?l2 ?l2 ?h ?o5 - ball ?g - chair ?s - building)
        (then
          (once (not (agent_holds ?b) ) )
          (once (not (on ?d ?s) ) )
          (hold (and (in_motion ?s) (exists (?b - pillow ?b7 ?c6 - building) (same_object ?h ?s) ) ) )
          (once (not (not (not (and (and (in desk ?o1) (not (agent_holds ?s) ) ) (or (and (and (adjacent_side ?h left ?s front) (same_color ?s ?c) ) (and (same_type ?s ?l2) (agent_holds ?s) ) ) ) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (count-shortest rollBallToBin:beachball) )
)
(:scoring
  (count rollBallToBin:pink_dodgeball)
)
)



(define (game game-id-724) (:domain few-objects-room-v1)
(:setup
  (forall (?b - hexagonal_bin)
    (forall (?c - shelf)
      (game-optional
        (in_motion ?c)
      )
    )
  )
)
(:constraints
  (and
    (forall (?l - hexagonal_bin ?b3 - tan_cube_block)
      (and
        (preference blockInTowerKnockedByDodgeball
          (exists (?c - ball ?c6 - triangular_ramp)
            (then
              (once (same_color ?b3 tan) )
              (hold (same_color ?c6 ?c6) )
              (once (equal_x_position ?h bed) )
            )
          )
        )
        (preference objectWithMatchingColor
          (then
            (once (not (and (<= (distance agent ?o4) (distance ?c1 floor)) (and (game_over ) (not (and (adjacent ?h ?o) (not (agent_holds ?b3) ) ) ) ) ) ) )
            (hold (and (< (distance_side ?b3 ?b3 ?b3) (distance room_center ?b4)) (in_motion ?b3) (not (and (agent_holds ?b3) (agent_holds ?b3) ) ) ) )
            (once (and (on ?t ?h) (not (on ?b3 ?p) ) ) )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (total-score) (total-score) )
    (>= 0 3 )
  )
)
(:scoring
  (* (count objectWithMatchingColor:dodgeball:pink_dodgeball) (* (* (* (* (count blockInTowerKnockedByDodgeball:pink_dodgeball) 5 )
          10
        )
        (count blockInTowerKnockedByDodgeball:blue_cube_block:beachball)
        (count blockInTowerKnockedByDodgeball:red:yellow)
      )
      (* (* (+ (count-once-per-objects objectWithMatchingColor:dodgeball) (count-once-per-external-objects blockInTowerKnockedByDodgeball:pyramid_block:orange) )
          1
        )
        1
        0
      )
    )
  )
)
)



(define (game game-id-725) (:domain many-objects-room-v1)
(:setup
  (exists (?h - chair)
    (game-conserved
      (agent_holds ?h)
    )
  )
)
(:constraints
  (and
    (preference thrownBallReachesEnd
      (exists (?c - ball)
        (then
          (hold-while (< (distance ?h ?c) 5) (and (and (agent_holds ?b1) (not (same_type ?c block) ) ) (and (in_motion ?c) (not (open ?o) ) ) ) )
          (once (and (exists (?o1 - block) (touch ?d ?b) ) (on ?c ?o1) ) )
          (hold-while (touch ?d ?c) (agent_holds ?c) )
          (hold (agent_holds ?p) )
        )
      )
    )
    (preference thrownObjectHitsComputer
      (exists (?o - ball ?w1 - hexagonal_bin)
        (then
          (hold (in_motion ?d) )
          (hold (and (in_motion ?w1) (agent_holds ?w1) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects thrownBallReachesEnd:white:block) (* (> (* 2 (+ (count-once-per-external-objects thrownObjectHitsComputer:doggie_bed) (* 2 (count-once-per-objects thrownBallReachesEnd:beachball) )
            (* 0.7 (* 3 0 )
              (count-longest thrownObjectHitsComputer:yellow)
              (count thrownBallReachesEnd:dodgeball:orange)
            )
          )
          (+ 3 10 )
          (* (* (external-forall-maximize (+ (count-overlapping thrownBallReachesEnd:dodgeball:yellow) 5 )
              )
              (count thrownObjectHitsComputer:dodgeball)
              (external-forall-maximize
                (* (+ (count thrownObjectHitsComputer:yellow_cube_block) (+ (* 2 (count-once-per-objects thrownObjectHitsComputer:purple) )
                      (count thrownBallReachesEnd:yellow)
                    )
                  )
                  (count-once-per-objects thrownObjectHitsComputer:brown)
                )
              )
            )
            9
          )
          7
        )
        (count-once-per-objects thrownObjectHitsComputer:red)
      )
      (count thrownObjectHitsComputer:pink_dodgeball:dodgeball)
    )
  )
)
(:scoring
  (* (* (count thrownBallReachesEnd:purple) (* (count-once thrownBallReachesEnd:pyramid_block) 10 )
    )
    6
  )
)
)



(define (game game-id-726) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (broken agent)
  )
)
(:constraints
  (and
    (forall (?c - cube_block)
      (and
        (preference teddyBearHitsBall
          (exists (?b6 - shelf)
            (then
              (once (= 2 1) )
              (once (not (in_motion ?b2) ) )
              (once (agent_crouches ) )
            )
          )
        )
        (preference thrownObjectHitsComputer
          (at-end
            (in ?c agent)
          )
        )
        (preference blueObjectMovedToRoomCenter
          (exists (?db - cube_block)
            (then
              (once (>= 3 (distance ?h ?d)) )
              (hold (agent_holds ?b) )
              (hold (in ?db ?l) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (+ (external-forall-minimize (* (count-once-per-objects teddyBearHitsBall:dodgeball) )
      )
      (count blueObjectMovedToRoomCenter:dodgeball:rug)
      (+ (count-once-per-objects blueObjectMovedToRoomCenter:golfball) (count-once-per-objects blueObjectMovedToRoomCenter:pink) )
    )
    4
  )
)
(:scoring
  (external-forall-maximize
    (* 2 )
  )
)
)



(define (game game-id-727) (:domain few-objects-room-v1)
(:setup
  (exists (?d - red_dodgeball)
    (exists (?o - color)
      (game-optional
        (not
          (same_color ?b pink)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - curved_wooden_ramp ?l3 - ball)
      (and
        (preference cubeBlockInBuilding
          (exists (?b9 - cube_block ?c - building)
            (then
              (hold (on ?l3 ?tb) )
              (once (not (not (not (adjacent ?c agent) ) ) ) )
              (once (and (same_color ?b ?c) (and (not (on ?b ?b) ) (on ?l3 ?b2) ) ) )
            )
          )
        )
      )
    )
    (preference ballThrownThroughRampToBin
      (exists (?b4 - (either blue_cube_block blue_cube_block) ?d - hexagonal_bin)
        (then
          (once (and (< 9 (distance ?d ?d)) (not (= 3 1) ) ) )
          (once (not (game_start ) ) )
          (hold-while (in ?d desk) (exists (?h - flat_block) (and (not (agent_holds ?d) ) (toggled_on ?h) ) ) )
        )
      )
    )
  )
)
(:terminal
  (> 2 5 )
)
(:scoring
  (* 5 (count cubeBlockInBuilding:pyramid_block) (external-forall-minimize (+ (< (count-once-per-objects ballThrownThroughRampToBin:red:yellow) (count cubeBlockInBuilding:tan) )
        (count-once-per-objects cubeBlockInBuilding:red)
      )
    )
    (< (count ballThrownThroughRampToBin:red) (* (* (count-once-per-external-objects ballThrownThroughRampToBin) (count-once ballThrownThroughRampToBin:beachball) )
        (+ (count-once-per-objects ballThrownThroughRampToBin:green) 20 )
      )
    )
    (count cubeBlockInBuilding:purple)
    (* 5 (count ballThrownThroughRampToBin:green:yellow) )
    3
  )
)
)



(define (game game-id-728) (:domain many-objects-room-v1)
(:setup
  (exists (?d - teddy_bear ?b - ball ?h - sliding_door)
    (exists (?c1 - (either cylindrical_block alarm_clock cellphone))
      (game-conserved
        (not
          (in_motion ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?r - desk_shelf ?r - hexagonal_bin ?b2 ?t2 - dodgeball)
      (and
        (preference thrownObjectHitsComputer
          (exists (?o1 - ball ?db - hexagonal_bin)
            (at-end
              (and
                (agent_holds ?t2)
                (on ?b2 ?t2)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (count thrownObjectHitsComputer:pyramid_block:golfball) (count thrownObjectHitsComputer:beachball) )
    (> (total-score) (count-once-per-objects thrownObjectHitsComputer:dodgeball) )
    (>= (* 10 )
      (+ 50 (count thrownObjectHitsComputer:hexagonal_bin:golfball) )
    )
  )
)
(:scoring
  (+ (count-once-per-objects thrownObjectHitsComputer:dodgeball) (count thrownObjectHitsComputer:green) )
)
)



(define (game game-id-729) (:domain medium-objects-room-v1)
(:setup
  (not
    (exists (?b - game_object)
      (game-conserved
        (in_motion ?b)
      )
    )
  )
)
(:constraints
  (and
    (forall (?o - building)
      (and
        (preference blockPickedUp
          (exists (?c3 - beachball)
            (then
              (once (and (not (on ?o ?d) ) (same_color ?c3 pink) (not (< 1 (distance ?c3 ?d)) ) ) )
              (once (in_motion ?c3) )
              (once (and (and (in_motion ?b) (not (is_setup_object ?h) ) ) (not (same_type ?o block) ) ) )
            )
          )
        )
      )
    )
    (forall (?w1 - red_dodgeball)
      (and
        (preference objectWithMatchingColor
          (exists (?h - doggie_bed ?l4 ?t1 ?d2 ?o ?o ?c - (either mug key_chain))
            (then
              (hold (not (in_motion ?w1) ) )
              (once (object_orientation ?d sideways) )
              (once (not (and (not (or (not (exists (?b - building) (agent_holds ?l4) ) ) (and (same_object ?c ?l2) (not (not (in ?o ?t1) ) ) ) ) ) ) ) )
            )
          )
        )
      )
    )
    (preference objectOnBed
      (exists (?d - color)
        (then
          (hold (not (exists (?c1 - curved_wooden_ramp) (agent_holds ?b1) ) ) )
          (once (is_setup_object ?d) )
          (once (on ?d ?d) )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (>= (count blockPickedUp:dodgeball) 3 )
  )
)
(:scoring
  (count-once-per-objects objectOnBed:top_drawer)
)
)



(define (game game-id-730) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (not
      (exists (?w2 - doggie_bed ?o - ball)
        (in_motion ?l1)
      )
    )
  )
)
(:constraints
  (and
    (preference bigObjectThrownToBed
      (exists (?b ?p1 - doggie_bed)
        (at-end
          (< (distance room_center ?o) (distance agent ?d))
        )
      )
    )
    (preference ballThrownThroughRampToBin
      (exists (?o3 - shelf ?p - teddy_bear)
        (then
          (once (and (agent_holds ?o) (and (agent_holds ?p) (not (in ?p ?b) ) ) ) )
          (once (agent_holds ?g) )
          (once (agent_holds ?p) )
        )
      )
    )
  )
)
(:terminal
  (> (= (* (count-once-per-external-objects ballThrownThroughRampToBin:dodgeball:blue_dodgeball) (* 3 40 )
      )
      2
    )
    (count ballThrownThroughRampToBin:pink)
  )
)
(:scoring
  (count-once-per-objects ballThrownThroughRampToBin:red_pyramid_block)
)
)



(define (game game-id-731) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (not
      (exists (?db - hexagonal_bin)
        (and
          (exists (?x - (either dodgeball laptop))
            (in ?db ?b)
          )
          (not
            (agent_holds ?db)
          )
          (not
            (and
              (and
                (on ?db ?db)
              )
              (same_object ?o ?r)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?l - ball)
      (and
        (preference blockKnockedFromBuildingInBin
          (exists (?o2 - hexagonal_bin)
            (at-end
              (and
                (agent_holds ?l)
                (not
                  (on ?o2 rug)
                )
              )
            )
          )
        )
      )
    )
    (preference gameBlockFound
      (exists (?c2 - dodgeball ?b10 - dodgeball)
        (then
          (hold-while (agent_holds ?w1) (agent_holds ?g) )
          (hold (is_setup_object ?d) )
          (hold (not (and (touch ?b10 ?d) (and (in_motion ?o1) (agent_holds ?c) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (> (total-time) 3 )
)
(:scoring
  (count gameBlockFound:dodgeball)
)
)



(define (game game-id-732) (:domain many-objects-room-v1)
(:setup
  (exists (?d1 - block)
    (game-conserved
      (< (distance_side desk back ?d1) (distance desk ?d1))
    )
  )
)
(:constraints
  (and
    (preference ballKnocksTeddy
      (exists (?b - game_object)
        (then
          (once (in_motion rug) )
          (once (< (distance desk ?b) 1) )
          (hold (in_motion ?b) )
        )
      )
    )
    (preference throwToRampToBin
      (exists (?h - golfball)
        (then
          (once (on ?d ?h) )
          (hold (and (and (and (agent_holds ?h) (agent_holds ?l2) ) (in_motion ?l1) ) (not (and (or (and (and (and (not (and (not (and (in ?h ?d) (touch ?h top_shelf) ) ) (in_motion ?t2) ) ) (not (in_motion ?d) ) (exists (?w2 - (either bridge_block blue_cube_block flat_block cube_block)) (and (and (in_motion ?c) (and (agent_holds ?p) (on ?o ?w2) ) ) (in bed ?w2) ) ) ) (agent_holds ?h) ) (agent_holds ?g) ) (exists (?h - game_object) (agent_holds ?h) ) ) (and (or (and (in_motion ?o) (object_orientation ?b upright) ) (agent_holds ?h) ) (not (agent_holds ?d) ) ) ) ) ) )
          (once (object_orientation ?h ?h) )
        )
      )
    )
    (forall (?c2 - ball)
      (and
        (preference greenObjectMovedToRoomCenter
          (exists (?c - (either hexagonal_bin pink book) ?h ?b6 - curved_wooden_ramp)
            (then
              (hold (and (is_setup_object ?b6) (on ?b5 ?h) ) )
              (once (agent_holds ?s) )
              (hold (in_motion ?b) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once ballKnocksTeddy:dodgeball) 8 )
)
(:scoring
  (count ballKnocksTeddy:beachball:basketball)
)
)



(define (game game-id-733) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (= 4 1)
  )
)
(:constraints
  (and
    (preference throwFromEdgeOfRug
      (exists (?s - dodgeball ?h ?ob - doggie_bed)
        (then
          (hold (in ?b ?ob) )
          (hold (not (and (and (and (not (or (not (in_motion ?ob) ) (and (and (in_motion ?h) (> 4 7) ) (agent_holds ?o1) ) ) ) (in ?h ?ob) ) (agent_holds ?h) ) (< 3 1) ) ) )
          (hold (in_motion ?d) )
        )
      )
    )
    (preference objectMovedRoomSide
      (exists (?c4 - hexagonal_bin ?c1 - ball ?h - book)
        (at-end
          (adjacent desk ?b)
        )
      )
    )
  )
)
(:terminal
  (> 100 (count-once objectMovedRoomSide:beachball) )
)
(:scoring
  (count-once throwFromEdgeOfRug:yellow)
)
)



(define (game game-id-734) (:domain many-objects-room-v1)
(:setup
  (forall (?g - (either golfball curved_wooden_ramp) ?ob - cube_block)
    (and
      (exists (?l - (either alarm_clock dodgeball) ?b - (either dodgeball bridge_block))
        (exists (?b10 - building)
          (exists (?c2 - hexagonal_bin ?b6 - hexagonal_bin)
            (and
              (forall (?d - (either chair floor floor))
                (game-optional
                  (and
                    (in_motion ?b10)
                    (and
                      (and
                        (adjacent room_center desk)
                        (on ?b10 ?b)
                      )
                      (< 4 5)
                    )
                  )
                )
              )
              (game-conserved
                (on ?c ?b)
              )
              (and
                (game-optional
                  (not
                    (in_motion ?b10)
                  )
                )
              )
            )
          )
        )
      )
      (and
        (and
          (game-conserved
            (in ?g ?o)
          )
        )
        (exists (?g - hexagonal_bin)
          (exists (?o - ball ?h - hexagonal_bin ?b1 ?o2 ?b - (either laptop lamp))
            (and
              (and
                (game-conserved
                  (< 4 (distance ?c ?b5))
                )
                (or
                  (game-optional
                    (same_color ?o2 ?b1)
                  )
                  (game-optional
                    (and
                      (not
                        (agent_crouches )
                      )
                      (touch ?h ?g)
                    )
                  )
                )
              )
            )
          )
        )
        (and
          (game-conserved
            (not
              (not
                (in_motion ?h)
              )
            )
          )
        )
      )
      (game-conserved
        (not
          (agent_holds ?c1)
        )
      )
      (forall (?c2 - ball ?b - dodgeball ?w1 - ball)
        (game-conserved
          (not
            (agent_holds rug)
          )
        )
      )
      (exists (?o3 - hexagonal_bin)
        (exists (?d - cube_block)
          (and
            (game-conserved
              (in ?o3 ?o3)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockKnockedFromBuildingInBin
      (exists (?b4 - chair)
        (then
          (once (in_motion ?b4) )
          (once (and (and (not (not (not (in ?b4 ?d) ) ) ) (not (touch ?l1 ?c) ) ) (in_motion ?l) ) )
          (hold (agent_holds ?d) )
          (once (same_object ?b ?c2) )
        )
      )
    )
    (forall (?t1 - dodgeball)
      (and
        (preference rollBallToBin
          (exists (?d - (either teddy_bear teddy_bear lamp golfball) ?h - building)
            (at-end
              (and
                (agent_holds ?t1)
                (agent_holds ?l2)
                (on ?b ?t1)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (> (count blockKnockedFromBuildingInBin:beachball) 1 )
      (>= 40 8 )
    )
    (>= (- (count-longest rollBallToBin:pink_dodgeball) )
      5
    )
    (>= 5 (count-longest rollBallToBin:dodgeball) )
  )
)
(:scoring
  (count blockKnockedFromBuildingInBin:green:pink_dodgeball)
)
)



(define (game game-id-735) (:domain many-objects-room-v1)
(:setup
  (forall (?b2 - shelf)
    (exists (?l2 - (either pen book))
      (and
        (and
          (and
            (game-optional
              (broken desk)
            )
            (exists (?r - game_object)
              (and
                (game-conserved
                  (agent_holds ?l2)
                )
                (exists (?b10 - triangular_ramp)
                  (game-conserved
                    (not
                      (in_motion ?b2)
                    )
                  )
                )
                (game-conserved
                  (touch ?b ?b2)
                )
              )
            )
            (game-conserved
              (touch ?b ?d)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference tanObjectMovedToRoomCenter
      (exists (?h - cube_block ?r - block ?g - cube_block)
        (then
          (once (not (and (and (agent_holds ?h) (not (on ?g ?c) ) ) (and (and (and (in_motion ?g) (agent_holds ?l1) (and (not (in_motion ?o) ) (agent_holds ?d) ) ) (on ?h ?l2) ) (and (not (agent_holds ?g) ) (agent_holds ?b4) ) ) ) ) )
          (hold (in_motion ?g) )
          (once (in ?g ?g) )
        )
      )
    )
  )
)
(:terminal
  (and
    (and
      (and
        (>= 7 (count-once tanObjectMovedToRoomCenter:beachball:basketball:bed) )
        (>= 1 -10 )
        (>= (* 4 (count-once-per-objects tanObjectMovedToRoomCenter:blue_dodgeball) )
          (count tanObjectMovedToRoomCenter:block)
        )
      )
    )
    (< 8 (count tanObjectMovedToRoomCenter:pink_dodgeball) )
  )
)
(:scoring
  (* 10 4 )
)
)



(define (game game-id-736) (:domain few-objects-room-v1)
(:setup
  (forall (?d - hexagonal_bin)
    (and
      (game-conserved
        (in ?d ?h)
      )
      (not
        (forall (?t2 - ball)
          (forall (?g - shelf)
            (forall (?o2 - block)
              (game-conserved
                (agent_holds ?h)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference woodenBlockMovedFromRugToDesk
      (exists (?r - watch ?b ?h - dodgeball ?f - hexagonal_bin ?t - desktop)
        (at-end
          (not
            (on ?t ?t)
          )
        )
      )
    )
    (forall (?c4 - dodgeball)
      (and
        (preference watchOnShelf
          (exists (?b4 - hexagonal_bin)
            (then
              (once (and (not (in_motion ?b) ) (in_motion ?b) (equal_z_position desk ?b) ) )
              (once (agent_holds ?b4) )
              (once (on ?c4 ?c4) )
            )
          )
        )
      )
    )
    (preference beachballOnRug
      (exists (?g ?b - ball)
        (then
          (hold (in_motion ?b) )
          (once (in_motion ?g) )
        )
      )
    )
  )
)
(:terminal
  (> (* (count-once-per-objects beachballOnRug:yellow) )
    (count beachballOnRug:yellow)
  )
)
(:scoring
  (count-overlapping woodenBlockMovedFromRugToDesk:doggie_bed:yellow_cube_block)
)
)



(define (game game-id-737) (:domain many-objects-room-v1)
(:setup
  (forall (?b1 - building)
    (or
      (exists (?ob - dodgeball)
        (exists (?h - pillow ?c3 - dodgeball ?s - building)
          (game-conserved
            (in_motion ?b1)
          )
        )
      )
      (game-optional
        (not
          (>= (distance ?h ?b1) (distance ?h ?b1))
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockKnockedFromBuildingInBin
      (exists (?l - (either golfball yellow) ?h ?h - hexagonal_bin)
        (then
          (hold (> 1 6) )
          (once (not (not (exists (?b - hexagonal_bin ?b2 - teddy_bear) (and (adjacent ?h ?b2) (touch bed ?b2) ) ) ) ) )
          (once (agent_holds ?b) )
          (hold-while (< (distance ?h ?t) 8) (agent_holds ?b) )
          (hold (not (and (in_motion ?h) (agent_holds ?o) (<= (distance agent ?h) (building_size ?w1)) (adjacent_side ?r ?h ?h) ) ) )
          (hold (and (and (agent_holds ?c) (in ?h rug) ) (in agent top_drawer) ) )
        )
      )
    )
    (preference basketMadeFromRug
      (exists (?b7 - dodgeball)
        (then
          (hold-while (and (in_motion ?b7) (adjacent bed ?c) ) (and (in_motion ?b7) (agent_holds ?d) ) )
          (once (agent_holds ?b) )
          (hold (and (not (and (object_orientation ?d upright) (object_orientation ?t ?b7) ) ) (and (and (not (in_motion ?b7) ) (agent_holds ?b7) ) (and (adjacent ?b7 ?b4) (and (not (on ?d ?b7) ) (= (distance desk ?b7) (distance_side ?c front_left_corner ?h)) (and (exists (?h - block) (agent_holds ?b7) ) (in_motion ?d) ) ) (and (and (not (adjacent ?b7 ?b) ) (agent_holds ?c3) ) (on ?c3 ?o) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (= (count basketMadeFromRug:purple) (count basketMadeFromRug:rug:red) )
)
(:scoring
  (count basketMadeFromRug:dodgeball)
)
)



(define (game game-id-738) (:domain many-objects-room-v1)
(:setup
  (exists (?o4 - block)
    (and
      (exists (?g - hexagonal_bin)
        (game-conserved
          (in ?p ?g)
        )
      )
      (game-optional
        (and
          (and
            (same_object ?o4 ?c)
            (= 2 (building_size ?t))
            (agent_holds ?o4)
          )
          (and
            (on ?w2 ?c)
            (not
              (agent_holds ?o)
            )
            (broken ?w1)
          )
        )
      )
      (forall (?h - ball)
        (forall (?o1 - doggie_bed ?o4 - blue_cube_block ?h - hexagonal_bin)
          (game-conserved
            (agent_holds ?h)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballNeverThrown
      (exists (?d - game_object ?p1 - building ?d - shelf ?b ?d1 - hexagonal_bin ?d ?b5 - pillow)
        (then
          (hold (and (agent_holds ?d) (and (agent_holds ?h) (agent_holds ?r2) ) ) )
          (hold (adjacent_side ?t1 back ?o back) )
          (once (and (agent_holds ?d) (in_motion ?r) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (- (* (+ 3 (count-measure ballNeverThrown:dodgeball:basketball) )
          10
        )
      )
      (* 10 (= 3 2 )
      )
      (count-once-per-objects ballNeverThrown:red)
      (count-overlapping ballNeverThrown:pink)
      10
      (count-unique-positions ballNeverThrown:white:dodgeball)
    )
    (total-score)
  )
)
(:scoring
  (+ (count ballNeverThrown:basketball) (count-once ballNeverThrown:book:dodgeball) )
)
)



(define (game game-id-739) (:domain many-objects-room-v1)
(:setup
  (forall (?b - ball)
    (and
      (exists (?o - hexagonal_bin ?r - dodgeball)
        (exists (?p - cube_block)
          (exists (?c6 - block ?p2 - red_pyramid_block)
            (and
              (game-conserved
                (agent_holds ?b)
              )
              (game-conserved
                (and
                  (touch ?b ?g)
                  (same_type ?p ?p2)
                  (and
                    (agent_holds ?r)
                    (not
                      (and
                        (and
                          (and
                            (rug_color_under ?b tan)
                            (in_motion ?p)
                          )
                          (< (distance ?p2 ?b) 5)
                        )
                        (not
                          (in_motion ?d)
                        )
                        (< 2 (distance rug ?d))
                        (agent_holds ?d)
                        (and
                          (in_motion ?b)
                          (in ?p2 ?c)
                        )
                        (on ?d ?p2)
                        (agent_holds ?r)
                        (or
                          (agent_holds ?d)
                          (on ?o ?d)
                        )
                      )
                    )
                  )
                )
              )
              (game-optional
                (exists (?h - dodgeball ?c1 - doggie_bed)
                  (exists (?w2 - dodgeball)
                    (in_motion ?b)
                  )
                )
              )
            )
          )
        )
      )
      (game-conserved
        (in_motion ?b)
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToDoggieBedOffWall
      (exists (?c - hexagonal_bin)
        (then
          (hold (not (on ?c ?l) ) )
          (once (and (< (distance ?h ?g) (distance ?c ?h)) ) )
          (once (and (not (rug_color_under ?c ?c) ) (agent_holds ?c) ) )
          (hold-while (not (same_type ?c block) ) (not (in_motion ?d) ) )
          (once (agent_holds ?c) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) 15 )
)
(:scoring
  (* (* (* (count throwBallToDoggieBedOffWall:beachball) 8 (count-once-per-objects throwBallToDoggieBedOffWall:alarm_clock) 3 5 2 )
      50
    )
    (count throwBallToDoggieBedOffWall:doggie_bed)
  )
)
)



(define (game game-id-740) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?b8 - pillow ?b4 - (either chair cylindrical_block))
      (and
        (exists (?l1 - hexagonal_bin ?o - block ?b4 - block)
          (game-optional
            (not
              (faces ?c ?b4)
            )
          )
        )
        (and
          (game-conserved
            (and
              (and
                (touch ?o ?b4)
                (above rug ?d)
              )
              (agent_holds ?b)
              (= (distance ?b4 ?h))
              (exists (?h ?b - hexagonal_bin ?h - hexagonal_bin)
                (in_motion ?o)
              )
              (object_orientation ?b4 upright)
              (and
                (not
                  (in ?d ?b4)
                )
                (not
                  (not
                    (in_motion ?o)
                  )
                )
              )
            )
          )
        )
        (and
          (and
            (forall (?g - drawer)
              (game-conserved
                (and
                  (in_motion ?b)
                  (agent_holds ?b4)
                  (not
                    (in_motion ?b4)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c1 - (either doggie_bed cd))
      (and
        (preference blockPickedUp
          (exists (?c6 - ball ?l - (either alarm_clock ball main_light_switch))
            (then
              (once (not (in_motion ?h) ) )
              (once (not (in_motion ?d) ) )
              (hold (and (and (not (and (agent_holds ?b) (in_motion ?o) ) ) (and (and (< (distance_side ?l front_left_corner ?l1) (x_position ?b5)) (> (distance_side room_center ?c1 ?t) (distance door ?l)) ) (not (on ?c1 ?d) ) ) ) (and (not (touch ?t ?c1) ) (in ?c1 ?l) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (= (total-score) 1 )
)
(:scoring
  (count blockPickedUp)
)
)



(define (game game-id-741) (:domain many-objects-room-v1)
(:setup
  (exists (?b - triangular_ramp ?l1 - triangular_ramp)
    (or
      (game-optional
        (game_over )
      )
      (forall (?l - ball ?h - hexagonal_bin)
        (game-conserved
          (< (x_position ?h) (distance_side desk back ?g))
        )
      )
      (exists (?b2 - game_object)
        (game-optional
          (and
            (and
              (in ?l1 ?b)
              (< (distance ?b2 ?o) (distance_side room_center back ?h))
              (same_type ?l1 ?b2)
            )
            (on ?r ?l1)
            (same_type ?h ?l4)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - dodgeball)
      (and
        (preference beachballOnRug
          (exists (?t1 - sliding_door)
            (then
              (once (agent_holds ?b) )
              (once (in_motion ?t1) )
              (once (exists (?b ?s ?d ?c3 - hexagonal_bin) (agent_holds ?d) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (< 7 20 )
    )
    (= (total-time) (* (count-once-per-objects beachballOnRug:golfball) (* 2 4 )
      )
    )
  )
)
(:scoring
  (- 10 )
)
)



(define (game game-id-742) (:domain few-objects-room-v1)
(:setup
  (exists (?d - hexagonal_bin)
    (game-conserved
      (on ?l ?d)
    )
  )
)
(:constraints
  (and
    (preference golfballLandsInBinThroughRamp
      (exists (?p1 - golfball)
        (then
          (once (and (in ?p1 ?p1) (game_start ) ) )
          (once (in_motion ?d) )
          (once (and (in_motion ?p1) ) )
        )
      )
    )
  )
)
(:terminal
  (> (count golfballLandsInBinThroughRamp:pink) (total-time) )
)
(:scoring
  (* (* (count-once-per-objects golfballLandsInBinThroughRamp:green) (count-unique-positions golfballLandsInBinThroughRamp:yellow) )
    10
    3
    5
    (count-once-per-objects golfballLandsInBinThroughRamp:dodgeball)
    (count-increasing-measure golfballLandsInBinThroughRamp:dodgeball)
  )
)
)



(define (game game-id-743) (:domain few-objects-room-v1)
(:setup
  (forall (?l - curved_wooden_ramp ?l - shelf)
    (exists (?w2 - game_object)
      (exists (?b - (either tall_cylindrical_block blue_cube_block pyramid_block))
        (game-optional
          (not
            (not
              (and
                (< 1 4)
                (in ?b ?b1)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b1 - hexagonal_bin)
      (and
        (preference blockOnBlockInTowerAtEnd
          (exists (?f - dodgeball ?r2 - dodgeball ?b ?c ?h ?w1 ?l4 ?w2 - teddy_bear)
            (then
              (hold (same_color ?l4 pink) )
              (hold (rug_color_under ?ob brown) )
              (once (on ?l4 ?t) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (* 1 )
  )
)
(:scoring
  (* (count blockOnBlockInTowerAtEnd:dodgeball) (* (count-once-per-objects blockOnBlockInTowerAtEnd:basketball) (+ (/ 4 (external-forall-maximize (count-once-per-objects blockOnBlockInTowerAtEnd) ) ) (+ 7 (count-once-per-objects blockOnBlockInTowerAtEnd:golfball) )
      )
      5
    )
  )
)
)



(define (game game-id-744) (:domain few-objects-room-v1)
(:setup
  (exists (?c2 - (either book golfball))
    (game-conserved
      (not
        (on ?c2 ?d)
      )
    )
  )
)
(:constraints
  (and
    (preference pillowThrownToDoggieBed
      (exists (?h - hexagonal_bin)
        (at-end
          (adjacent ?h ?o)
        )
      )
    )
  )
)
(:terminal
  (or
    (> (count pillowThrownToDoggieBed:red) (+ (+ (count pillowThrownToDoggieBed:basketball) (count-increasing-measure pillowThrownToDoggieBed:dodgeball) )
        (+ 3 (count pillowThrownToDoggieBed:pink) )
        (count-once-per-objects pillowThrownToDoggieBed:basketball)
        5
        20
        (count-measure pillowThrownToDoggieBed:basketball)
      )
    )
  )
)
(:scoring
  (count pillowThrownToDoggieBed:cylindrical_block)
)
)



(define (game game-id-745) (:domain medium-objects-room-v1)
(:setup
  (exists (?b - drawer ?h - hexagonal_bin)
    (game-conserved
      (on ?o1 ?b)
    )
  )
)
(:constraints
  (and
    (preference itemsHidingScreens
      (exists (?b - game_object)
        (then
          (once (in ?w2 ?b) )
          (once (not (in_motion ?b) ) )
          (hold (in ?h ?b) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (count itemsHidingScreens:purple) (total-score) )
      (or
        (and
          (>= (count itemsHidingScreens:red:dodgeball) (- 30 )
          )
        )
      )
    )
    (or
      (or
        (>= (total-time) 3 )
      )
    )
  )
)
(:scoring
  (= (* 1 (= 180 (count itemsHidingScreens:rug:yellow) 8 )
    )
    (- 50 )
    (count-once-per-objects itemsHidingScreens:blue_dodgeball)
  )
)
)



(define (game game-id-746) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?o - blue_pyramid_block)
      (and
        (forall (?o3 - drawer)
          (exists (?b - blue_cube_block ?t - cube_block)
            (game-conserved
              (agent_holds ?o3)
            )
          )
        )
        (and
          (and
            (game-optional
              (and
                (not
                  (and
                    (faces ?l2 ?o)
                    (on agent ?b)
                  )
                )
                (not
                  (in_motion ?o)
                )
              )
            )
            (exists (?b - (either dodgeball golfball))
              (forall (?h - dodgeball)
                (game-conserved
                  (and
                    (forall (?h - pillow ?w - dodgeball)
                      (and
                        (in ?o ?l1)
                        (and
                          (exists (?h - game_object ?d - shelf)
                            (< (distance bed ?b) 0.5)
                          )
                          (in_motion ?l)
                        )
                      )
                    )
                    (touch ?d ?b)
                    (on ?o ?o)
                    (in_motion ?h)
                  )
                )
              )
            )
            (game-optional
              (on ?r ?o)
            )
          )
          (and
            (forall (?r - (either basketball ball))
              (and
                (and
                  (game-optional
                    (forall (?c - cube_block)
                      (and
                        (in ?c agent)
                      )
                    )
                  )
                  (and
                    (game-conserved
                      (in_motion ?l1)
                    )
                  )
                  (game-conserved
                    (not
                      (or
                        (not
                          (not
                            (not
                              (on ?b ?b3)
                            )
                          )
                        )
                        (not
                          (not
                            (agent_holds ?r)
                          )
                        )
                      )
                    )
                  )
                  (and
                    (game-conserved
                      (agent_holds ?r)
                    )
                    (and
                      (and
                        (and
                          (game-conserved
                            (agent_holds ?r)
                          )
                        )
                      )
                      (or
                        (and
                          (not
                            (not
                              (exists (?o - teddy_bear)
                                (exists (?o2 - (either key_chain flat_block game_object))
                                  (and
                                    (game-conserved
                                      (agent_holds ?b)
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                        (game-conserved
                          (in_motion ?l)
                        )
                      )
                      (exists (?ob ?p3 ?r ?g ?c ?d1 - dodgeball)
                        (game-optional
                          (touch ?c ?c)
                        )
                      )
                      (game-conserved
                        (not
                          (> (distance ?w1 ?o) (building_size ?b))
                        )
                      )
                      (or
                        (and
                          (forall (?g - hexagonal_bin ?b - hexagonal_bin ?b3 - ball)
                            (game-optional
                              (adjacent desk bed)
                            )
                          )
                        )
                        (exists (?h - doggie_bed ?ob - ball)
                          (and
                            (exists (?h - game_object)
                              (game-conserved
                                (and
                                  (not
                                    (not
                                      (not
                                        (< 1 1)
                                      )
                                    )
                                  )
                                  (in_motion ?bl)
                                )
                              )
                            )
                            (exists (?h - (either pillow doggie_bed) ?b - ball)
                              (exists (?w2 - hexagonal_bin)
                                (forall (?b6 - hexagonal_bin ?h - dodgeball)
                                  (game-conserved
                                    (agent_holds ?b)
                                  )
                                )
                              )
                            )
                            (game-conserved
                              (in_motion ?r)
                            )
                            (game-conserved
                              (exists (?h - ball ?o ?d ?h - wall)
                                (not
                                  (agent_holds ?h)
                                )
                              )
                            )
                          )
                        )
                        (game-optional
                          (touch ?c ?r)
                        )
                      )
                    )
                  )
                  (and
                    (exists (?w - watch)
                      (or
                        (game-conserved
                          (or
                            (adjacent agent ?g)
                            (not
                              (agent_holds ?d)
                            )
                          )
                        )
                        (game-optional
                          (adjacent ?b ?o)
                        )
                        (and
                          (exists (?o1 - wall)
                            (and
                              (forall (?tb - block)
                                (exists (?h - game_object)
                                  (forall (?c - block)
                                    (and
                                      (game-conserved
                                        (and
                                          (and
                                            (adjacent room_center ?r)
                                            (not
                                              (and
                                                (and
                                                  (is_setup_object ?d)
                                                  (and
                                                    (not
                                                      (in_motion ?d)
                                                    )
                                                    (agent_holds ?h)
                                                  )
                                                )
                                                (> 5 7)
                                              )
                                            )
                                          )
                                          (on ?c ?bl)
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                              (and
                                (game-optional
                                  (agent_holds ?o1)
                                )
                                (forall (?h - drawer ?h - hexagonal_bin)
                                  (exists (?c - game_object)
                                    (game-conserved
                                      (agent_holds desk)
                                    )
                                  )
                                )
                              )
                              (game-conserved
                                (adjacent agent ?c)
                              )
                            )
                          )
                          (exists (?b ?g ?b2 - hexagonal_bin ?c - hexagonal_bin ?b5 - hexagonal_bin)
                            (exists (?b - hexagonal_bin)
                              (game-conserved
                                (and
                                  (touch rug ?b)
                                  (agent_holds ?o)
                                )
                              )
                            )
                          )
                          (game-conserved
                            (agent_holds ?h)
                          )
                        )
                      )
                    )
                    (exists (?l4 - sliding_door ?b - game_object)
                      (game-optional
                        (in ?r ?b)
                      )
                    )
                    (and
                      (not
                        (forall (?o ?c2 ?x - dodgeball)
                          (exists (?b1 - curved_wooden_ramp ?g - cube_block)
                            (game-conserved
                              (and
                                (and
                                  (not
                                    (not
                                      (in_motion ?c2)
                                    )
                                  )
                                  (and
                                    (not
                                      (not
                                        (agent_holds ?t)
                                      )
                                    )
                                    (on ?g ?r)
                                  )
                                )
                                (not
                                  (exists (?d - hexagonal_bin)
                                    (agent_holds ?d)
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                    (game-conserved
                      (in ?r top_drawer)
                    )
                  )
                )
              )
            )
          )
          (game-conserved
            (forall (?t - doggie_bed)
              (on ?t ?d)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference towerFallsWhileBuilding
      (exists (?d - hexagonal_bin ?o - pillow)
        (at-end
          (and
            (= (distance ?h ?h) 1)
            (adjacent_side room_center left agent front)
          )
        )
      )
    )
    (preference throwBallToDoggieBedOffWall
      (exists (?h - ball ?o4 - curved_wooden_ramp ?db - (either cylindrical_block desktop dodgeball))
        (at-end
          (in_motion ?d)
        )
      )
    )
    (preference failedThrowAttempt
      (exists (?o - (either top_drawer alarm_clock))
        (then
          (hold-while (adjacent room_center ?o) (on ?o ?o) (and (not (touch rug desk) ) (in ?o ?o) ) (not (agent_holds ?o) ) )
          (hold (on ?d ?b) )
          (once (agent_holds ?b) )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (* 2 (* 100 (+ 1 (* 15 (count-once-per-objects throwBallToDoggieBedOffWall:blue_pyramid_block) (count-once-per-objects towerFallsWhileBuilding:hexagonal_bin:red) (- (count towerFallsWhileBuilding:dodgeball:triangle_block:basketball) )
            )
          )
        )
      )
      50
    )
    (>= (count-once failedThrowAttempt) (total-time) )
    (< (count-once-per-objects towerFallsWhileBuilding:golfball:basketball) 30 )
  )
)
(:scoring
  (count failedThrowAttempt:green)
)
)



(define (game game-id-747) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?b3 - doggie_bed)
      (and
        (forall (?b - red_dodgeball)
          (exists (?b - dodgeball)
            (exists (?r - drawer)
              (forall (?o3 ?o - chair ?h - ball)
                (game-optional
                  (agent_holds ?o)
                )
              )
            )
          )
        )
        (game-conserved
          (object_orientation ?b3 upright)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference matchingBuildingBuilt
      (exists (?t - (either laptop desktop cube_block))
        (then
          (hold (not (and (agent_holds ?t) (and (in ?r ?t) (above ?t ?l3) ) ) ) )
          (once (on ?t ?g) )
          (once (not (= (distance room_center ?b)) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (count-once-per-objects matchingBuildingBuilt:purple:golfball) )
)
(:scoring
  (count-increasing-measure matchingBuildingBuilt:blue_cube_block)
)
)



(define (game game-id-748) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (game-optional
        (adjacent_side desk front ?d back)
      )
    )
    (exists (?d - hexagonal_bin)
      (and
        (game-optional
          (in_motion ?d)
        )
      )
    )
    (game-optional
      (or
        (or
          (in_motion ?o)
          (not
            (and
              (not
                (agent_holds bed)
              )
              (in_motion ?o2)
            )
          )
        )
        (agent_holds ?b)
      )
    )
    (game-conserved
      (exists (?h - hexagonal_bin)
        (and
          (not
            (not
              (and
                (in_motion ?h)
                (and
                  (not
                    (in ?h ?b)
                  )
                  (and
                    (adjacent ?c1 ?h)
                    (in ?b ?o)
                    (in_motion ?o)
                  )
                  (not
                    (on agent ?h)
                  )
                )
              )
            )
          )
          (not
            (and
              (> 10 (distance ?h ?h))
              (or
                (is_setup_object ?d)
                (and
                  (not
                    (in ?h bed)
                  )
                  (= 3 6)
                  (adjacent ?h ?h)
                )
              )
            )
          )
        )
      )
    )
    (forall (?p1 ?p1 ?h - hexagonal_bin ?h - dodgeball ?w1 - hexagonal_bin)
      (exists (?b10 ?d1 - dodgeball)
        (game-optional
          (not
            (touch ?b10 ?d1)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballKnocksBlockFromRug
      (exists (?b1 - desk_shelf ?c - chair)
        (then
          (once (not (same_color ?o ?c) ) )
          (hold (and (and (agent_holds ?h) (or (agent_holds ?c) (adjacent door ?c) ) (in_motion ?ob) (and (not (and (agent_holds ?c) (agent_holds ?c) ) ) (same_color ?c ?c) ) (exists (?l2 - building) (and (agent_holds ?b) (in_motion ?c) ) ) (on ?o ?c) (< (distance agent ?c) 1) ) (and (in_motion ?r) (and (agent_holds ?d) (on ?c rug) (in_motion ?c) (agent_holds ?c) ) ) ) )
          (once (adjacent_side room_center front_left_corner ?c) )
        )
      )
    )
    (preference golfballInBinFromPillow
      (exists (?b7 - (either golfball pyramid_block doggie_bed))
        (then
          (hold-while (in_motion ?o) (not (< 6 2) ) )
          (once (agent_holds ?b) )
          (once (and (agent_holds ?d) (or (on ?b ?o2) (in ?b7 ?b7) (rug_color_under ?h ?c) (not (is_setup_object ?h) ) ) (not (adjacent bed ?b7) ) (and (agent_holds ?b7) (not (not (not (exists (?w2 - (either bridge_block block cellphone)) (adjacent_side ?h front_left_corner ?b7) ) ) ) ) (< (distance agent ?b7) (distance ?h ?l)) ) (in ?b7 ?o) (equal_x_position ?b7 ?b7) ) )
        )
      )
    )
    (preference ballRolledOnRampToRug
      (exists (?b - hexagonal_bin)
        (then
          (hold (agent_holds ?b) )
          (hold (not (and (in_motion ?b) (agent_holds ?b) ) ) )
          (once (exists (?p3 - pillow) (not (on ?b ?b) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (external-forall-minimize (+ (+ (* (>= (count-measure ballRolledOnRampToRug:yellow_cube_block) 2 )
            2
          )
          4
          (+ (count-once golfballInBinFromPillow:blue_dodgeball) 5 )
        )
        (* (count-once-per-external-objects golfballInBinFromPillow:basketball) 5 )
        (count ballKnocksBlockFromRug:beachball)
      )
    )
    (* (* 3 (external-forall-maximize (count-once golfballInBinFromPillow:beachball) ) )
      -10
    )
  )
)
(:scoring
  (count-once-per-objects ballKnocksBlockFromRug:basketball)
)
)



(define (game game-id-749) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?r1 - ball)
      (and
        (game-optional
          (in_motion ?c)
        )
        (game-conserved
          (not
            (not
              (not
                (and
                  (not
                    (in_motion ?r1)
                  )
                  (and
                    (not
                      (agent_holds ?l2)
                    )
                    (agent_holds ?r1)
                    (not
                      (in_motion ?l1)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?h ?d - drawer)
        (then
          (hold (< 6 (distance agent ?d)) )
          (hold (= (distance agent bed) 1) )
          (hold (in_motion ?h) )
        )
      )
    )
  )
)
(:terminal
  (= 5 (external-forall-maximize (* (count-total throwBallToBin:blue_dodgeball) (+ (count-total throwBallToBin:dodgeball:green) (* (count throwBallToBin:hexagonal_bin:blue_cube_block:golfball) (* (count-shortest throwBallToBin:brown) 8 )
            10
          )
          (count throwBallToBin:book)
        )
      )
    )
  )
)
(:scoring
  (external-forall-maximize
    (* (count-longest throwBallToBin:dodgeball) (count throwBallToBin:pyramid_block) )
  )
)
)



(define (game game-id-750) (:domain medium-objects-room-v1)
(:setup
  (forall (?db - hexagonal_bin)
    (forall (?d - chair)
      (and
        (exists (?d - hexagonal_bin ?h - hexagonal_bin ?t2 - (either basketball cellphone) ?l - (either laptop) ?h - hexagonal_bin)
          (forall (?s - (either cd key_chain key_chain))
            (exists (?d2 - (either flat_block yellow_cube_block))
              (and
                (game-conserved
                  (in_motion ?w)
                )
                (game-optional
                  (and
                    (agent_holds ?d)
                    (adjacent bed ?db)
                  )
                )
              )
            )
          )
        )
        (game-conserved
          (> 5 (distance bed ?b))
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownHitsAgent
      (exists (?w1 - beachball ?c ?o1 - hexagonal_bin)
        (then
          (once (not (in_motion ?o1) ) )
          (once (and (not (agent_holds desk) ) (object_orientation ?c upright) ) )
          (once (and (in_motion ?d) (and (adjacent_side ?c ?c ?b) (exists (?o - hexagonal_bin) (in_motion ?s) ) ) ) )
        )
      )
    )
    (preference cubeThrownToBin
      (exists (?d - curved_wooden_ramp)
        (then
          (once (not (is_setup_object ?d) ) )
          (once (< 6 (distance ?d ?b)) )
          (once (not (not (in_motion ?b) ) ) )
          (once (forall (?r - hexagonal_bin) (not (not (touch ?r ?b) ) ) ) )
          (hold (and (and (in_motion ?d) (in_motion ?d) ) (in_motion ?p1) ) )
          (hold (same_color ?d ?d) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 10 )
)
(:scoring
  (count-once cubeThrownToBin:purple)
)
)



(define (game game-id-751) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (in_motion ?o)
  )
)
(:constraints
  (and
    (preference blockPlacedInBuilding
      (exists (?tb - cube_block)
        (then
          (once (on ?b ?tb) )
          (hold (agent_holds ?d) )
          (once (on ?tb ?d) )
        )
      )
    )
    (preference blockPickedUp
      (exists (?p3 - cylindrical_block)
        (then
          (once (same_type ?p3 ?p3) )
          (hold (agent_holds ?p3) )
          (hold-while (not (between ?p3 ?d ?p3) ) (faces ?h ?p3) )
        )
      )
    )
  )
)
(:terminal
  (> (count blockPickedUp:red_pyramid_block:dodgeball) (total-time) )
)
(:scoring
  (* 20 (count-once-per-objects blockPlacedInBuilding:red:blue_cube_block) )
)
)



(define (game game-id-752) (:domain few-objects-room-v1)
(:setup
  (forall (?t - cube_block)
    (exists (?o2 - (either cylindrical_block side_table))
      (forall (?g - ball ?b - hexagonal_bin)
        (game-conserved
          (agent_holds ?b)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownFromObjectToBin
      (exists (?b6 ?d - dodgeball)
        (then
          (hold (and (not (in_motion ?b6) ) (above ?t ?b6) ) )
          (hold (in ?b6 ?d) )
          (hold (and (not (touch ?b3 ?d) ) (not (and (and (same_color ?d ?d) (and (agent_holds ?d) (in_motion ?h) ) ) (and (and (on ?d ?b6) (adjacent door ?o) ) (and (and (in_motion bed) (not (on ?d ?h) ) ) (or (not (not (<= (x_position ?b) 1) ) ) (not (and (agent_holds ?d) (in_motion ?d) ) ) ) ) ) ) ) (not (agent_holds ?o) ) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= 3 10 )
  )
)
(:scoring
  (+ (+ (count-longest ballThrownFromObjectToBin:dodgeball) (<= (count-once-per-objects ballThrownFromObjectToBin:golfball) 5 )
    )
    (* (count ballThrownFromObjectToBin:doggie_bed) 5 )
  )
)
)



(define (game game-id-753) (:domain medium-objects-room-v1)
(:setup
  (or
    (exists (?s - hexagonal_bin)
      (and
        (game-conserved
          (and
            (in_motion ?s)
            (in_motion ?s)
            (agent_holds ?s)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?t2 ?tb - dodgeball ?b6 - teddy_bear)
      (and
        (preference cubeBlockThrownToTopShelf
          (exists (?c - ball)
            (then
              (hold (exists (?d - (either flat_block basketball tall_cylindrical_block triangle_block)) (on ?o2 ?d) ) )
              (hold (not (>= (distance ?b6 ?b) (distance ?d ?d)) ) )
              (once (agent_holds ?c) )
            )
          )
        )
        (preference basketMadeFromRug
          (exists (?b - hexagonal_bin ?l2 - (either alarm_clock dodgeball) ?c - cylindrical_block ?r2 - ball ?d - cube_block)
            (then
              (hold-while (in ?b ?b6) (and (and (exists (?d - building) (and (same_color ?b6 ?c) (faces ?b6 ?h) ) ) (not (or (touch ?d ?o) (agent_holds agent) ) ) ) (touch ?d rug) ) )
              (hold-while (and (agent_holds ?d) (agent_holds ?b6) ) (and (exists (?w2 - shelf) (touch ?d ?c) ) (adjacent agent ?h) ) (touch ?c ?b6) )
              (once (adjacent ?w ?d) )
              (once (< 1 (distance_side ?d ?d ?d front_left_corner)) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (total-time) )
)
(:scoring
  (count-overlapping basketMadeFromRug:pink_dodgeball:blue_dodgeball)
)
)



(define (game game-id-754) (:domain few-objects-room-v1)
(:setup
  (forall (?r - dodgeball)
    (game-conserved
      (agent_holds agent)
    )
  )
)
(:constraints
  (and
    (preference otherObjectsOnDeskShelf
      (exists (?b4 - hexagonal_bin)
        (at-end
          (in_motion ?l1)
        )
      )
    )
    (forall (?d - teddy_bear)
      (and
        (preference bookOnDeskShelf
          (exists (?b7 - dodgeball)
            (then
              (once (not (touch ?o ?h) ) )
              (once (on ?h ?t) )
              (once (in ?l2 ?h) )
            )
          )
        )
        (preference thrownObjectHitsComputer
          (exists (?ob - game_object)
            (at-end
              (adjacent ?w2 ?ob)
            )
          )
        )
      )
    )
    (preference failedThrowToBin
      (exists (?d - wall)
        (then
          (once (< (distance_side ?w2 back ?d front) 0.5) )
          (once (not (and (agent_holds ?b) (equal_z_position door ?d) (in ?d ?d) ) ) )
          (once (in_motion ?o) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (total-time) 1 )
    (or
      (>= 6 (total-score) )
      (>= 4 (total-time) )
      (> (total-score) (count-once-per-objects otherObjectsOnDeskShelf:blue_dodgeball) )
    )
  )
)
(:scoring
  (count-measure failedThrowToBin:basketball:yellow)
)
)



(define (game game-id-755) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (not
      (in_motion ?t)
    )
  )
)
(:constraints
  (and
    (forall (?s - chair)
      (and
        (preference objectToBinOnFirstTry
          (exists (?b - block ?l1 - ball ?b10 - hexagonal_bin)
            (then
              (once (rug_color_under ?b10 ?c) )
              (once (same_type ?b10 ?b10) )
              (once (touch ?o3 ?c) )
            )
          )
        )
      )
    )
    (preference ballNeverThrown
      (exists (?b7 ?x ?h ?c - hexagonal_bin)
        (then
          (once (in_motion ?b) )
        )
      )
    )
    (forall (?o3 - triangular_ramp)
      (and
        (preference dodgeballsInPlace
          (exists (?h - cube_block ?l1 ?o4 ?h ?c ?b ?x ?b ?d ?s ?d1 - curved_wooden_ramp)
            (then
              (once (and (and (between ?w2 ?b ?b) (agent_holds ?h) ) (touch ?h ?b) ) )
              (once (in_motion ?d) )
              (hold (on ?o3 ?t) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 30 (- (count-once-per-objects dodgeballsInPlace:triangle_block) )
  )
)
(:scoring
  (* 5 (* (* (+ (* (count dodgeballsInPlace:dodgeball:beachball) (* (* (* 2 10 )
                (count-total objectToBinOnFirstTry:blue_dodgeball:yellow)
              )
              (count-once-per-objects ballNeverThrown:dodgeball:beachball)
            )
          )
          3
        )
        (* 2 (+ (count ballNeverThrown) (- (count-once-per-objects objectToBinOnFirstTry:pink:bed) )
          )
        )
      )
      10
      5
    )
  )
)
)



(define (game game-id-756) (:domain few-objects-room-v1)
(:setup
  (forall (?h - dodgeball)
    (game-conserved
      (and
        (equal_z_position agent ?h)
        (and
          (on ?h ?h)
          (between ?l2 ?h ?h)
        )
        (< 10 4)
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballFromRugToBin
      (exists (?b - wall ?h - color ?f - hexagonal_bin)
        (then
          (hold-while (on ?h ?t) (in_motion rug) )
          (hold (and (agent_holds ?l) ) )
          (hold (not (forall (?b1 - hexagonal_bin) (not (and (adjacent ?b1 ?c) (adjacent_side ?w2 front ?r1 ?f) ) ) ) ) )
        )
      )
    )
    (preference blockInTowerKnocked
      (exists (?l2 - (either pyramid_block main_light_switch))
        (then
          (once (in_motion ?l2) )
          (once (and (and (adjacent door ?l2) (and (not (and (agent_holds ?c2) (not (> (distance_side ?r left ?l2 front) (distance ?l2 agent)) ) ) ) (in_motion ?l2) ) (agent_holds ?l2) ) (in_motion ?l2) (and (not (agent_holds rug) ) (and (on desk ?b) (agent_holds ?l2) ) ) (exists (?d - hexagonal_bin) (and (and (not (not (on ?l2 ?d) ) ) (adjacent room_center ?l2) ) (agent_holds ?c4) ) ) (agent_holds ?o2) (not (not (not (rug_color_under ?l2 brown) ) ) ) (not (on ?t ?l2) ) ) )
          (once (in_motion ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= (count blockInTowerKnocked:pink_dodgeball) (+ (count blockInTowerKnocked:pink) (* (count dodgeballFromRugToBin:red) (count-once-per-objects dodgeballFromRugToBin:dodgeball) (count-once-per-objects dodgeballFromRugToBin:side_table:basketball:yellow_cube_block) (count-overlapping dodgeballFromRugToBin:dodgeball) (count-once dodgeballFromRugToBin:golfball) 1 (count-once-per-objects dodgeballFromRugToBin:blue_dodgeball) )
      (- 2 )
    )
  )
)
(:scoring
  (external-forall-maximize
    (* (count dodgeballFromRugToBin:golfball:triangle_block) 4 )
  )
)
)



(define (game game-id-757) (:domain few-objects-room-v1)
(:setup
  (exists (?d - (either tall_cylindrical_block bridge_block))
    (and
      (and
        (exists (?w - bridge_block)
          (forall (?b5 - game_object)
            (game-optional
              (in_motion ?b)
            )
          )
        )
        (exists (?b - (either cylindrical_block basketball))
          (and
            (exists (?b2 - ball)
              (exists (?h - ball ?d - pillow ?h - hexagonal_bin)
                (game-optional
                  (agent_holds ?b)
                )
              )
            )
            (game-optional
              (in_motion ?d)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - wall)
      (and
        (preference itemsTurnedOff
          (exists (?c - dodgeball)
            (at-end
              (and
                (touch ?o ?r)
                (agent_crouches )
              )
            )
          )
        )
      )
    )
    (preference ballThrowAttempt
      (exists (?o3 - triangular_ramp)
        (then
          (once (above ?o3 ?b) )
          (once (not (and (exists (?b - doggie_bed ?o - pyramid_block ?tb - hexagonal_bin) (agent_holds ?o) ) (exists (?h - pillow) (in_motion bed) ) ) ) )
          (hold (same_color ?b ?o3) )
          (hold (exists (?r2 ?f ?t ?b7 ?r ?d - (either cd yellow_cube_block) ?t - block) (not (agent_holds ?o3) ) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (and
      (>= 2 20 )
      (not
        (> (total-time) 3 )
      )
    )
    (>= (total-time) 30 )
  )
)
(:scoring
  (count ballThrowAttempt:pink_dodgeball:yellow:wall)
)
)



(define (game game-id-758) (:domain few-objects-room-v1)
(:setup
  (forall (?h - tan_cube_block ?b - dodgeball)
    (game-conserved
      (and
        (is_setup_object ?b)
        (and
          (on ?b ?d)
          (= 1 (distance ?h agent))
        )
        (not
          (touch ?d ?b)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?p - hexagonal_bin ?x - beachball)
      (and
        (preference dodgeballThrownToBinFromDesk
          (exists (?r1 - color ?d - block ?b - dodgeball)
            (then
              (once (in ?x ?b) )
              (once (in ?c ?g) )
              (hold (agent_holds ?b) )
            )
          )
        )
      )
    )
    (preference matchingBuildingBuilt
      (exists (?b ?p - ball)
        (then
          (hold (and (not (agent_holds ?b) ) (and (in_motion ?l2) (and (in_motion ?p) (exists (?o3 - hexagonal_bin ?h - dodgeball ?h - (either laptop pink) ?o - (either mug blue_cube_block basketball pencil golfball cellphone dodgeball) ?b - chair) (agent_holds ?p) ) ) ) ) )
          (once (not (forall (?b5 - hexagonal_bin) (and (above ?p ?b) (or (exists (?o4 - block ?h - dodgeball ?h - hexagonal_bin) (agent_holds ?b5) ) ) ) ) ) )
          (once (in_motion ?p) )
        )
      )
    )
    (preference blueObjectMovedToRoomCenter
      (exists (?h - red_dodgeball)
        (then
          (once (adjacent_side ?d front_left_corner ?c1 back) )
          (once (and (agent_holds ?o2) (rug_color_under ?h green) (adjacent bed ?o) ) )
          (once (exists (?b10 - block) (in_motion ?l) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 40 (* (count-total matchingBuildingBuilt:golfball) 10 )
  )
)
(:scoring
  (count-total blueObjectMovedToRoomCenter:dodgeball)
)
)



(define (game game-id-759) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?x - dodgeball)
      (and
        (forall (?c - game_object ?t2 - book)
          (exists (?d - wall)
            (and
              (and
                (forall (?t1 - ball)
                  (game-conserved
                    (and
                      (and
                        (agent_holds ?o)
                        (in ?x ?t2)
                      )
                      (on ?t ?b1)
                    )
                  )
                )
                (exists (?c3 - hexagonal_bin)
                  (exists (?s - teddy_bear)
                    (game-conserved
                      (same_color ?x ?d)
                    )
                  )
                )
                (exists (?ob - block)
                  (game-conserved
                    (= 8 1 (distance room_center ?o))
                  )
                )
              )
            )
          )
        )
      )
    )
    (game-conserved
      (on ?b ?h)
    )
  )
)
(:constraints
  (and
    (forall (?h - ball)
      (and
        (preference golfballInBinFromPillow
          (exists (?b7 - hexagonal_bin)
            (then
              (hold (not (not (not (not (and (same_color ?h pink) (and (in_motion ?h) (equal_x_position agent ?h) ) ) ) ) ) ) )
              (once (exists (?c3 - dodgeball ?t1 - game_object) (in_motion ?d) ) )
              (once (on ?h ?o) )
            )
          )
        )
        (preference objectWithMatchingColor
          (exists (?p2 - hexagonal_bin ?h - dodgeball)
            (then
              (hold-while (in_motion agent) (and (and (adjacent rug ?d) (and (not (agent_holds agent) ) (<= 1 1) (in_motion ?b1) (not (and (adjacent ?d ?h) (not (and (in_motion ?d) (in_motion ?h) (object_orientation agent upright) (on ?h ?d) (< (distance bed ?b) 7) (and (not (not (on ?h ?w2) ) ) (agent_holds ?h) ) (and (or (agent_holds ?o4) (and (and (and (touch ?h agent) (agent_holds ?h) ) (adjacent agent ?b) ) (equal_z_position room_center ?h) (and (on ?o5 ?b1) (on ?db ?h) ) ) ) (and (< (distance_side door front_left_corner ?h) (distance agent ?b)) (touch ?h ?c) (in ?r ?o) (and (not (not (in_motion ?h) ) ) (and (agent_holds ?h) (in ?b ?h) (and (touch ?b ?d) (toggled_on ?s) ) ) ) ) (adjacent desk ?d) (not (not (agent_holds ?h) ) ) (and (in_motion top_drawer) ) (agent_holds ?b) (and (rug_color_under ?h ?h) (and (in ?d ?h) (not (exists (?b - hexagonal_bin) (not (same_type ?h blinds) ) ) ) ) ) (< 3 (distance ?h ?h)) (not (in_motion ?d) ) (agent_holds ?c3) (and (and (not (= 2) ) (in ?h ?r) ) (in_motion ?o) (on ?r ?l) ) (exists (?bl - hexagonal_bin) (on ?g ?d) ) ) (not (agent_holds ?h) ) (and (exists (?h - ball ?r - game_object) (agent_holds ?t) ) (and (exists (?p - red_dodgeball ?l - triangular_ramp) (agent_holds green_golfball) ) (on ?h ?d) ) (faces ?b ?b) (and (on ?h ?h) (not (< (distance ?w1 ?h) (distance_side ?h back ?l)) ) ) ) (adjacent_side room_center front ?h) ) ) (< (distance agent agent) 6) ) ) ) ) (and (not (in ?b ?h) ) (forall (?r2 - (either doggie_bed cellphone blue_cube_block)) (on ?b ?h) ) ) ) (agent_holds ?b) (in_motion ?b) )
              (hold-while (not (not (equal_z_position ?h ?h) ) ) (and (not (equal_z_position ?h ?b) ) (on desk ?b) (agent_holds ?h) (and (not (same_object ?h ?b) ) (not (in rug ?h) ) (on ?h ?h) (game_start ) (> (distance agent ?h) 1) (agent_holds ?h) ) ) )
              (once (not (agent_holds ?h) ) )
            )
          )
        )
      )
    )
    (preference beachballBouncedOffRamp
      (exists (?t - dodgeball)
        (then
          (once (in ?b ?t) )
          (hold (not (agent_holds agent) ) )
          (once (< (distance ?t agent) 1) )
        )
      )
    )
    (preference pyramidBlockAtopTowerAtEnd
      (exists (?d - wall ?h - (either yellow_cube_block cellphone desktop))
        (then
          (hold-while (agent_holds ?h) (and (agent_holds ?o) (agent_holds ?h) ) (same_type ?h drawer) (and (= 3 (distance ?h ?h)) (in ?r ?d) ) )
          (once (in_motion ?h) )
          (hold (and (and (in_motion ?b) (and (not (< (distance room_center ?o1) 1) ) (not (or (and (between ?h ?h ?h) (not (not (in_motion ?h) ) ) ) (and (agent_holds ?d) (in_motion ?c1) ) ) ) (touch ?h ?h) ) ) (agent_holds ?o4) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects objectWithMatchingColor:yellow) 5 )
)
(:scoring
  (- (- (* 5 (external-forall-maximize (* (+ (* (count pyramidBlockAtopTowerAtEnd:pink:beachball) (* (count golfballInBinFromPillow:orange) (count golfballInBinFromPillow:golfball) )
              )
              (count-once-per-objects pyramidBlockAtopTowerAtEnd:dodgeball)
            )
            (* (count-once-per-objects beachballBouncedOffRamp:pink:purple) (count objectWithMatchingColor:purple) (* (* 9 (* (* (count beachballBouncedOffRamp:beachball) 5 )
                    (* (count-once-per-external-objects golfballInBinFromPillow:blue_pyramid_block) 3 )
                  )
                )
                (* (* (* (count-once golfballInBinFromPillow:basketball:doggie_bed) (* 2 7 )
                    )
                    (* (* (+ 15 15 )
                        2
                      )
                      15
                    )
                  )
                  7
                )
              )
            )
          )
        )
      )
    )
  )
)
)



(define (game game-id-760) (:domain few-objects-room-v1)
(:setup
  (forall (?w - hexagonal_bin)
    (forall (?b7 - color)
      (and
        (game-conserved
          (or
            (not
              (agent_holds ?w)
            )
            (adjacent bed ?b)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference itemInClosedDrawerAtEnd
      (exists (?d - hexagonal_bin ?h ?p ?d ?x - dodgeball)
        (then
          (once (in_motion ?o) )
          (once (in_motion ?t) )
          (hold (>= (x_position ?x) (distance desk ?h)) )
          (once (on ?d ?h) )
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (or
        (>= (total-score) (total-score) )
        (> 6 2 )
        (or
          (not
            (> 3 (* 50 1 (- (external-forall-minimize (count itemInClosedDrawerAtEnd:dodgeball) ) )
              )
            )
          )
          (> 2 (+ (* 2 15 )
              2
            )
          )
          (> (* (count itemInClosedDrawerAtEnd:purple) (count itemInClosedDrawerAtEnd:purple:basketball) )
            (total-score)
          )
        )
        (not
          (>= (* (+ 1 (count itemInClosedDrawerAtEnd:blue_dodgeball) )
              6
            )
            (total-score)
          )
        )
      )
      (>= (+ (+ (* (count-once-per-objects itemInClosedDrawerAtEnd:dodgeball) (* (- (- (count itemInClosedDrawerAtEnd:pink:yellow) )
                )
                7
                (count-same-positions itemInClosedDrawerAtEnd:rug)
              )
            )
            (count itemInClosedDrawerAtEnd:red)
          )
          (count-once-per-objects itemInClosedDrawerAtEnd:red)
        )
        9
      )
    )
    (>= 3 (* 15 2 )
    )
    (>= 3 (total-time) )
  )
)
(:scoring
  (-
    (- (/ 10 (- 1 )
      )
    )
    10
  )
)
)



(define (game game-id-761) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (not
      (agent_holds ?b)
    )
  )
)
(:constraints
  (and
    (preference throwBallFromOtherBallToBin
      (exists (?o - game_object)
        (then
          (once (or (on ?o ?o) (not (and (< 7 0.5) (and (and (in_motion ?o) (in_motion ?o) (and (in_motion agent) (and (and (not (not (and (rug_color_under ?c brown) (between ?o ?o ?c) ) ) ) (and (in_motion ?o) (in ?b ?o) (on ?l1 ?o) (forall (?w2 - bridge_block) (exists (?d - hexagonal_bin) (on ?w2 ?b) ) ) (forall (?b - hexagonal_bin) (not (agent_holds ?o) ) ) (game_over ) (< 6 1) (and (and (in ?b ?o) (agent_holds ?o) ) (adjacent ?c ?o) ) (on ?l ?h) (and (in_motion agent) (same_color ?b green) ) ) (same_type ?h ball) (in ?o ?b) (or (exists (?o - hexagonal_bin) (and (not (and (not (not (in ?o1 ?o) ) ) (agent_holds ?t) ) ) (above ?o ?d) ) ) (agent_holds ?o) ) ) (not (agent_holds ?d) ) (and (and (in_motion ?b1) (and (agent_holds ?d) (same_type ?d bridge_block) (and (in_motion ?d) (agent_holds ?o) ) ) ) (in_motion ?o) ) (faces ?o ?g) (on ?o ?b) (< 1 (distance door ?o)) (rug_color_under ?g brown) (rug_color_under ?d ?c) (not (above ?t ?h) ) (in_motion rug) ) ) ) (< (distance_side ?o front ?o) 2) ) ) ) (object_orientation ?c upright) ) )
          (once (on ?o ?b) )
          (once (agent_holds ?c) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects throwBallFromOtherBallToBin:beachball) 7 )
)
(:scoring
  (= (count-once throwBallFromOtherBallToBin:yellow) 6 )
)
)



(define (game game-id-762) (:domain many-objects-room-v1)
(:setup
  (exists (?d - tan_cube_block ?d - doggie_bed ?l - block)
    (and
      (exists (?b - dodgeball)
        (and
          (game-conserved
            (on ?l ?o)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectLandsInBin
      (exists (?p - doggie_bed ?r - building)
        (then
          (hold (in_motion ?d) )
        )
      )
    )
    (preference blindsOpened
      (exists (?c - dodgeball)
        (then
          (once (exists (?db ?ob - building ?s - triangular_ramp) (not (not (and (not (in_motion ?d) ) (and (object_orientation ?c ?c) (and (not (not (not (and (in ?s ?o) (in_motion ?s) ) ) ) ) (and (not (in ?b ?s) ) (and (not (touch ?c ?c) ) (= (distance ?s ?s) 1) ) ) (< 1 1) ) ) ) ) ) ) )
          (hold (not (exists (?ob - hexagonal_bin) (agent_holds bed) ) ) )
          (once (agent_holds ?c) )
        )
      )
    )
    (forall (?h - hexagonal_bin)
      (and
        (preference beachballBouncedOffRamp
          (exists (?s - shelf ?o2 - ball)
            (then
              (once (touch desk ?o2) )
              (hold-while (broken ?h) (and (and (on ?d ?b) (in_motion ?d) ) (not (on ?b1 ?h) ) ) (not (= 2 (distance ?h ?h)) ) (and (in_motion ?h) (agent_holds ?d) (not (in ?h ?h) ) ) )
              (hold-while (agent_holds ?o2) (not (exists (?h ?t ?w ?c ?b ?x - ball ?l - desk_shelf) (in_motion ?c) ) ) (same_type ?h ball) )
            )
          )
        )
        (preference ballThrownToRug
          (exists (?b1 - hexagonal_bin ?t2 - dodgeball)
            (at-end
              (same_object ?b pink_dodgeball)
            )
          )
        )
      )
    )
    (preference throwToBin
      (exists (?db - hexagonal_bin)
        (then
          (once (not (exists (?b - hexagonal_bin) (agent_holds agent) ) ) )
          (once (not (on ?d ?d) ) )
          (hold (in_motion ?t) )
        )
      )
    )
    (preference throwObjectToBin
      (exists (?g - (either mug cube_block))
        (at-end
          (agent_holds ?g)
        )
      )
    )
  )
)
(:terminal
  (or
    (<= (+ 3 (count-once throwToBin:pink) 3 )
      1
    )
    (and
      (and
        (>= (count throwObjectToBin:dodgeball) (* (+ (count-once-per-objects objectLandsInBin:basketball:pink_dodgeball) 2 5 (count-shortest objectLandsInBin:green:yellow:pink) )
            (count throwObjectToBin:book)
            2
            (+ 2 (count-once ballThrownToRug:beachball) )
            (>= (count ballThrownToRug:pink) 2 )
            1
          )
        )
        (and
          (< (= 2 15 )
            (count throwToBin:blue_cube_block)
          )
          (or
            (<= 5 (* (- (count ballThrownToRug:golfball) )
                2
              )
            )
            (or
              (<= (* 0 30 )
                (* 4 (* (* (* (* (* (count throwObjectToBin:dodgeball) )
                          10
                        )
                        (+ 3 6 )
                      )
                      (* 30 10 )
                    )
                    (count-once-per-objects blindsOpened:dodgeball)
                  )
                )
              )
              (> 10 (< 10 (* (< 1 (count objectLandsInBin:orange:dodgeball) )
                    (count throwObjectToBin:blue_pyramid_block)
                  )
                )
              )
              (and
                (>= 2 (count beachballBouncedOffRamp:dodgeball) )
              )
              (<= (count objectLandsInBin:pink) (* (count throwToBin:pink_dodgeball) (- (count-once-per-objects objectLandsInBin:cylindrical_block:red) )
                )
              )
            )
            (>= (count-overlapping ballThrownToRug:pink_dodgeball:dodgeball) 3 )
          )
          (<= 0 (total-time) )
        )
      )
    )
  )
)
(:scoring
  (- 2 )
)
)



(define (game game-id-763) (:domain few-objects-room-v1)
(:setup
  (exists (?c - hexagonal_bin)
    (forall (?b1 - hexagonal_bin)
      (forall (?b5 - curved_wooden_ramp ?d - dodgeball)
        (and
          (and
            (forall (?b1 ?r2 - teddy_bear)
              (and
                (game-conserved
                  (touch ?d ?g)
                )
                (forall (?o - building)
                  (game-optional
                    (and
                      (in_motion ?b)
                      (adjacent room_center ?x)
                    )
                  )
                )
                (game-conserved
                  (in_motion ?b3)
                )
              )
            )
            (forall (?b - ball)
              (exists (?g - cube_block)
                (exists (?h - cube_block ?h - (either doggie_bed mug alarm_clock desktop dodgeball cd yellow_cube_block))
                  (exists (?c6 - game_object ?g - ball)
                    (and
                      (game-optional
                        (= (distance room_center ?b) 1)
                      )
                    )
                  )
                )
              )
            )
            (game-conserved
              (in ?c ?d)
            )
          )
          (and
            (game-conserved
              (in ?d ?t)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference golfballLandsInBinThroughRamp
      (then
        (once (not (< 3 (distance_side agent front ?s)) ) )
        (once (agent_holds ?b) )
        (once (agent_holds ?b) )
      )
    )
  )
)
(:terminal
  (>= (total-score) 8 )
)
(:scoring
  (* (+ 5 5 )
    100
  )
)
)



(define (game game-id-764) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (not
      (forall (?w - color ?d ?t1 - block)
        (and
          (in_motion ?d)
          (and
            (agent_holds ?o)
            (not
              (adjacent agent ?t)
            )
            (touch ?c3 ?d)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blocksInPlace
      (exists (?g ?h - ball)
        (at-end
          (touch ?b2 ?g)
        )
      )
    )
    (forall (?b1 - pillow)
      (and
        (preference throwMovesBeachballWithoutKnockingTeddy
          (exists (?d1 - game_object ?c2 - hexagonal_bin ?l1 - block ?b - triangular_ramp)
            (at-end
              (and
                (touch ?b ?b)
                (adjacent ?h ?b)
              )
            )
          )
        )
        (preference dodgeballHitsBin
          (then
            (once (and (not (in_motion ?b) ) (broken ?b4) ) )
            (once (and (between ?b1 ?c ?b1) (and (not (not (touch ?o ?c) ) ) (in ?b1 ?c) ) (adjacent ?o1 ?d) (in agent ?b1) ) )
            (hold (not (and (and (touch ?b1 ?b1) (agent_holds ?b) ) (agent_holds ?r) ) ) )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-external-objects throwMovesBeachballWithoutKnockingTeddy) (total-time) )
)
(:scoring
  (count blocksInPlace:beachball)
)
)



(define (game game-id-765) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (not
      (not
        (not
          (not
            (is_setup_object ?d)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownHitsAgent
      (exists (?r - flat_block)
        (then
          (once (in pink_dodgeball ?r) )
          (hold (and (in_motion ?r) (not (agent_holds ?r) ) ) )
          (once (not (not (and (between ?b ?d ?b) (not (not (on ?c4 ?r) ) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (> -30 (total-score) )
)
(:scoring
  (count-once-per-objects ballThrownHitsAgent:dodgeball)
)
)



(define (game game-id-766) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?h - (either basketball floor book))
      (and
        (and
          (forall (?s - blue_pyramid_block)
            (forall (?b7 - beachball)
              (exists (?h - hexagonal_bin)
                (forall (?b - dodgeball)
                  (or
                    (exists (?d2 - ball)
                      (forall (?o - hexagonal_bin)
                        (game-conserved
                          (agent_holds ?l)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
        (and
          (and
            (exists (?c4 ?d - building)
              (game-conserved
                (touch ?b ?d)
              )
            )
          )
          (exists (?o - dodgeball)
            (game-conserved
              (and
                (touch ?g ?b)
                (and
                  (agent_holds ?b)
                  (and
                    (in_motion ?h)
                    (on ?h ?h)
                  )
                  (in_motion ?o)
                )
              )
            )
          )
          (game-conserved
            (in_motion ?d)
          )
        )
        (game-conserved
          (and
            (not
              (in_motion ?h)
            )
            (and
              (and
                (> 1 2)
                (not
                  (on ?b ?b5)
                )
              )
              (and
                (is_setup_object ?h)
                (on ?h ?b)
                (on floor ?h)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballHitsBin
      (exists (?r2 - hexagonal_bin)
        (then
          (once (and (not (and (in ?r2 ?r2) (in_motion bed) ) ) (agent_holds ?r2) ) )
          (once (and (toggled_on ?l1) (not (game_start ) ) (and (exists (?h - hexagonal_bin) (not (in_motion ?h) ) ) (not (and (not (agent_holds main_light_switch) ) (broken ?r2) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (count-unique-positions dodgeballHitsBin:beachball) (total-time) )
  )
)
(:scoring
  (count-once-per-objects dodgeballHitsBin:basketball)
)
)



(define (game game-id-767) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-conserved
      (in_motion ?c)
    )
  )
)
(:constraints
  (and
    (forall (?r2 - curved_wooden_ramp ?c4 - cube_block)
      (and
        (preference ballDroppedInBin
          (exists (?w2 - hexagonal_bin ?b2 - shelf)
            (then
              (once (in_motion ?p) )
              (once (not (and (not (agent_crouches ) ) ) ) )
              (once (and (or (in_motion ?d) (< (distance room_center ?b2) 1) ) (in_motion agent) ) )
            )
          )
        )
        (preference ballThrowAttempt
          (exists (?ob ?p ?p3 ?s ?c ?b - cube_block)
            (then
              (hold (in_motion ?s) )
              (hold (and (agent_holds ?b) (not (and (not (and (in_motion ?g) (toggled_on ?c2) ) ) (and (not (same_type top_shelf ?l4) ) (between ?p3 ?c ?p) ) ) ) ) )
              (once (not (not (not (forall (?r ?g - cube_block ?t - building) (between ?b ?b4 ?o) ) ) ) ) )
            )
          )
        )
      )
    )
    (preference blockOnBlockInTowerAtEnd
      (exists (?b - (either hexagonal_bin laptop floor))
        (then
          (once (in_motion ?s) )
          (hold-while (agent_holds agent) (in_motion ?b) )
          (once (touch ?h agent) )
          (once (in ?b ?b) )
        )
      )
    )
    (forall (?h - beachball)
      (and
        (preference ballThrownToRampToBed
          (then
            (once (not (> (distance desk ?c) (distance agent ?h)) ) )
            (once (in_motion ?p) )
            (hold (not (agent_holds ?h) ) )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= 5 (count blockOnBlockInTowerAtEnd:dodgeball) )
  )
)
(:scoring
  (count blockOnBlockInTowerAtEnd:blue_dodgeball:blue_dodgeball)
)
)



(define (game game-id-768) (:domain few-objects-room-v1)
(:setup
  (exists (?d - dodgeball)
    (game-conserved
      (on ?d ?d)
    )
  )
)
(:constraints
  (and
    (preference rollBallToBin
      (exists (?db - hexagonal_bin)
        (then
          (once (in_motion ?g) )
          (once (not (agent_crouches ) ) )
          (once (adjacent ?db ?db) )
        )
      )
    )
    (preference teddyBearHitsBall
      (exists (?c5 ?x ?d ?h - building ?c - hexagonal_bin)
        (then
          (once (agent_holds ?b) )
          (hold-while (not (not (< (distance room_center ?c) (distance ?h ?o)) ) ) (agent_holds ?h) )
          (once (on ?c ?c) )
        )
      )
    )
    (forall (?d - hexagonal_bin)
      (and
        (preference throwFromDoorToBin
          (exists (?o - dodgeball ?h ?d - (either wall golfball dodgeball))
            (then
              (hold (touch ?b ?d) )
              (hold (not (in_motion ?d) ) )
              (once (not (in_motion ?d) ) )
            )
          )
        )
        (preference cubeBlockFromBedToShelf
          (then
            (once (in ?d ?d) )
            (once (in ?d ?b3) )
            (once (< (distance_side desk back ?b front) 10) )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 9 (count-once-per-objects throwFromDoorToBin:pyramid_block) )
)
(:scoring
  (* 1 )
)
)



(define (game game-id-769) (:domain many-objects-room-v1)
(:setup
  (exists (?d2 - ball ?h - ball)
    (forall (?x - ball ?d - pyramid_block)
      (exists (?b2 - hexagonal_bin)
        (game-optional
          (exists (?d - hexagonal_bin ?b4 - dodgeball)
            (agent_holds ?x)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c - hexagonal_bin)
      (and
        (preference ballThrownFromDoor
          (exists (?c2 - game_object ?l - pillow ?g - curved_wooden_ramp)
            (at-end
              (on ?g ?d)
            )
          )
        )
      )
    )
    (forall (?o - wall ?h - (either mug chair))
      (and
        (preference watchOnShelf
          (exists (?o - cube_block)
            (at-end
              (in ?c ?o)
            )
          )
        )
        (preference tanObjectMovedToRoomCenter
          (exists (?b7 - hexagonal_bin ?ob - hexagonal_bin)
            (then
              (hold (toggled_on ?o) )
              (once (opposite ?b ?h) )
              (once (game_over ) )
            )
          )
        )
        (preference throwOverRamp
          (exists (?b3 - cube_block)
            (then
              (once (in ?b ?b3) )
              (once (in_motion ?b3) )
              (once (is_setup_object ?h) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 5 5 )
)
(:scoring
  (count watchOnShelf:brown:pyramid_block)
)
)



(define (game game-id-770) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (in_motion ?l2)
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?c - triangular_ramp ?c - hexagonal_bin ?t - hexagonal_bin)
        (at-end
          (in_motion ?t)
        )
      )
    )
    (forall (?g - (either yellow_cube_block tall_cylindrical_block) ?c1 - game_object)
      (and
        (preference blockIncorrectlyPicked
          (exists (?b8 - (either blue_cube_block hexagonal_bin bridge_block) ?r - ball)
            (at-end
              (agent_holds ?c1)
            )
          )
        )
        (preference throwBallToBin
          (exists (?o - hexagonal_bin)
            (then
              (hold (in ?o agent) )
              (once (in_motion ?h) )
              (hold-while (faces ?o ?p) (exists (?h - dodgeball) (agent_holds ?w2) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (* (count-once throwAttempt:dodgeball:basketball:pink) 2 (+ (count blockIncorrectlyPicked:beachball) (+ (count blockIncorrectlyPicked:hexagonal_bin:dodgeball) (count throwAttempt:beachball) (count-total throwAttempt:red) )
        5
        0
        (/
          3
          (- (external-forall-maximize (count throwAttempt:green:basketball:dodgeball) ) )
        )
        (* 0.5 3 (count-once-per-external-objects throwAttempt:dodgeball) (count-once-per-objects throwBallToBin:dodgeball) (external-forall-minimize (* 1 (count throwBallToBin:yellow) (count-once throwBallToBin:golfball) )
          )
          (count throwAttempt:hexagonal_bin)
        )
      )
      20
    )
  )
)
(:scoring
  (count-once throwBallToBin:beachball)
)
)



(define (game game-id-771) (:domain few-objects-room-v1)
(:setup
  (and
    (game-optional
      (not
        (adjacent desk ?o)
      )
    )
    (forall (?b - golfball ?t - hexagonal_bin)
      (and
        (forall (?p1 - cube_block)
          (exists (?o2 - ball)
            (game-conserved
              (in ?t2 ?b)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?w - hexagonal_bin)
      (and
        (preference throwFromEdgeOfRug
          (exists (?tb - golfball ?o - hexagonal_bin ?g ?d ?d - pillow ?l2 - doggie_bed)
            (then
              (once (and (agent_holds ?g) (not (and (adjacent_side desk front ?o1) (and (agent_holds ?l2) (not (in_motion ?b8) ) ) ) ) ) )
              (once (not (adjacent agent ?l2) ) )
              (once (agent_holds ?h) )
            )
          )
        )
      )
    )
    (forall (?h - hexagonal_bin)
      (and
        (preference cubeBlockFromBedToShelf
          (then
            (hold (in_motion ?h) )
            (once (in_motion ?h) )
            (hold-while (in_motion ?t) (not (opposite ?b ?d) ) )
          )
        )
      )
    )
  )
)
(:terminal
  (> (count-once-per-objects cubeBlockFromBedToShelf:red:dodgeball) (* 5 (count throwFromEdgeOfRug:yellow) )
  )
)
(:scoring
  (count-once-per-objects throwFromEdgeOfRug:pink)
)
)



(define (game game-id-772) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-conserved
      (agent_holds ?d)
    )
  )
)
(:constraints
  (and
    (preference blockInTowerAtEnd
      (exists (?o1 - hexagonal_bin)
        (at-end
          (< (distance room_center ?o1) 9)
        )
      )
    )
  )
)
(:terminal
  (>= (+ (count-once blockInTowerAtEnd:orange) (count blockInTowerAtEnd:pink) 3 (* (count-once blockInTowerAtEnd:green:red) 9 (* (count blockInTowerAtEnd:dodgeball) 4 )
      )
    )
    (total-score)
  )
)
(:scoring
  (external-forall-maximize
    (count-once-per-objects blockInTowerAtEnd:basketball)
  )
)
)



(define (game game-id-773) (:domain many-objects-room-v1)
(:setup
  (forall (?b - hexagonal_bin ?b9 - hexagonal_bin)
    (and
      (forall (?ob - (either cellphone credit_card))
        (and
          (and
            (forall (?o - dodgeball)
              (game-optional
                (not
                  (or
                    (in ?d ?h)
                    (not
                      (same_color ?ob pink)
                    )
                  )
                )
              )
            )
            (game-conserved
              (in ?b9 ?b1)
            )
            (game-conserved
              (not
                (in_motion ?b)
              )
            )
          )
          (exists (?g - hexagonal_bin ?r - ball)
            (and
              (exists (?d - dodgeball)
                (game-conserved
                  (in ?b9 agent)
                )
              )
            )
          )
          (exists (?c - golfball ?b3 - teddy_bear)
            (forall (?c - cylindrical_block)
              (game-conserved
                (and
                  (in_motion ?d)
                  (in_motion ?c)
                  (and
                    (in_motion ?ob)
                    (not
                      (in_motion ?c)
                    )
                    (not
                      (above ?r bed)
                    )
                  )
                  (touch ?b9 ?b3)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference smallItemsInPlace
      (exists (?h - hexagonal_bin)
        (then
          (once (not (or (< (distance ?d ?d) (distance ?w2 ?b)) (not (and (faces ?b ?d) (adjacent room_center ?d) (in ?d ?h) ) ) ) ) )
          (hold (not (and (not (and (and (in_motion ?g) (not (adjacent ?h ?c5) ) (touch ?h bed) ) (in_motion ?h) ) ) (and (and (in_motion ?d) (and (on ?d ?d) (in_motion ?b) (and (in_motion ?h) (agent_holds ?h) ) ) (agent_holds ?h) ) (rug_color_under rug brown) ) (not (and (not (agent_holds ?h) ) (<= (distance_side ?h front ?b) 1) (agent_holds ?r2) ) ) ) ) )
          (once (and (agent_holds ?h) (in_motion desk) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (* (count smallItemsInPlace:top_drawer) (* (* (count smallItemsInPlace:pink) (count smallItemsInPlace:yellow_cube_block) )
        5
      )
      0.5
    )
  )
)
(:scoring
  (count-once smallItemsInPlace:dodgeball)
)
)



(define (game game-id-774) (:domain medium-objects-room-v1)
(:setup
  (forall (?o - doggie_bed)
    (forall (?c2 - beachball)
      (forall (?h ?d - bridge_block)
        (or
          (forall (?w1 - hexagonal_bin)
            (exists (?b2 - triangular_ramp)
              (and
                (game-optional
                  (not
                    (not
                      (touch ?w ?d)
                    )
                  )
                )
              )
            )
          )
          (game-conserved
            (agent_holds ?s)
          )
          (and
            (exists (?x - hexagonal_bin ?c - (either cd) ?c3 - wall)
              (and
                (exists (?ob - cube_block)
                  (forall (?c - hexagonal_bin ?w - curved_wooden_ramp ?o - (either dodgeball basketball))
                    (forall (?d - hexagonal_bin)
                      (and
                        (game-conserved
                          (< 1 (distance_side agent back agent))
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference watchOnShelf
      (exists (?d - hexagonal_bin)
        (then
          (once (touch agent ?d) )
          (once (in ?d ?d) )
          (once (exists (?o1 - (either pen pink) ?g - dodgeball) (and (agent_holds ?l) (not (and (agent_holds ?o) (not (and (< 2 1) (or (and (or (and (exists (?b1 - ball) (in_motion ?g) ) (in_motion ?d) (in ?s ?d) (in_motion ?d) (same_type desk bridge_block) (and (in_motion door) (broken ?b) ) (not (on ?d ?g) ) (agent_holds ?g) (equal_z_position ?h ?g) (not (same_type ?d ?d) ) ) (not (and (or (in_motion ?d) ) (and (not (not (not (= (distance ?c ?d) 3) ) ) ) (and (not (touch pink_dodgeball ?d) ) (in_motion agent) ) ) (<= 4 1) ) ) (in_motion ?g) ) (in_motion agent) (on ?b ?g) ) (in_motion ?l2) ) ) ) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (total-time) (count-measure watchOnShelf:pink:golfball) )
    (>= (total-time) (count-longest watchOnShelf:pink_dodgeball) )
  )
)
(:scoring
  (count watchOnShelf:red)
)
)



(define (game game-id-775) (:domain few-objects-room-v1)
(:setup
  (forall (?h - book)
    (game-conserved
      (adjacent_side agent ?h ?h)
    )
  )
)
(:constraints
  (and
    (forall (?d - game_object)
      (and
        (preference dodgeballHitsBinBottom
          (exists (?t2 - dodgeball)
            (at-end
              (and
                (= 2 (distance desk ?d) 7)
                (= (distance ?d ?h) 1)
              )
            )
          )
        )
        (preference ballToBinFromBed
          (exists (?p - ball)
            (then
              (hold (in_motion ?d) )
              (hold (agent_holds ?p) )
              (once (object_orientation ?d sideways) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 5 2 )
)
(:scoring
  (external-forall-maximize
    (count-once-per-objects dodgeballHitsBinBottom:dodgeball)
  )
)
)



(define (game game-id-776) (:domain many-objects-room-v1)
(:setup
  (exists (?o - block)
    (exists (?d - chair)
      (game-conserved
        (on ?d ?o)
      )
    )
  )
)
(:constraints
  (and
    (preference pillowMovedToRoomCenter
      (at-end
        (on ?d ?b)
      )
    )
  )
)
(:terminal
  (>= 6 (external-forall-minimize (count-once-per-objects pillowMovedToRoomCenter:dodgeball) ) )
)
(:scoring
  (+ 10 50 )
)
)



(define (game game-id-777) (:domain few-objects-room-v1)
(:setup
  (forall (?s - hexagonal_bin ?b - dodgeball ?c - cube_block ?b - flat_block ?bl - dodgeball)
    (exists (?c6 - color ?h - dodgeball)
      (game-conserved
        (in_motion ?bl)
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - shelf ?d - ball)
      (and
        (preference throwOverRamp
          (exists (?c - ball)
            (then
              (hold-while (and (and (adjacent desk ?d) (in ?t agent) ) (not (in_motion ?b) ) ) (agent_holds desktop) (not (not (in_motion ?c) ) ) )
              (once (not (broken bed) ) )
              (hold-while (in_motion ?d) (in ?t ?c) (not (not (in_motion ?c1) ) ) )
            )
          )
        )
        (preference blockPlacedInBuilding
          (exists (?b1 - dodgeball)
            (then
              (hold (and (and (on ?d ?b) (in_motion ?b1) (not (adjacent ?b1 ?b2) ) ) (or (not (not (agent_holds floor) ) ) (in_motion ?b1) (in_motion ?b) ) ) )
              (hold-while (in_motion ?d) (and (and (not (and (not (is_setup_object ?d) ) (and (> 6 9) (agent_holds ?b) (and (agent_holds ?d) (and (agent_holds ?c) (in_motion ?b) ) ) ) ) ) (in_motion ?t) ) (adjacent ?h side_table) (and (adjacent_side ?h right ?g) (and (< (distance ?h ?h) (distance ?b1 ?b1)) (agent_holds ?d) (and (in_motion ?d) (in_motion ?d) ) ) ) ) )
              (hold-while (not (and (not (and (in ?b1 ?h) (not (on ?d ?h) ) (and (on ?o ?d) (in_motion ?l1) (same_type ?r ?d) (and (not (not (on rug ?d) ) ) (on ?d ?d) ) ) ) ) (< (distance ?b1 ?b1) (distance side_table ?b1)) ) ) (agent_holds ?d) )
            )
          )
        )
        (preference ballThrownThroughRampAndBlocksToBin
          (exists (?o - pyramid_block ?h - dodgeball)
            (then
              (hold (in_motion agent) )
              (hold (same_object ?d ?h) )
              (once (not (agent_holds ?h) ) )
            )
          )
        )
      )
    )
    (forall (?t - triangular_ramp)
      (and
        (preference baseBlockInTowerAtEnd
          (exists (?b - dodgeball)
            (then
              (once (agent_holds ?c2) )
              (once (on ?r ?d) )
              (once (in_motion agent) )
            )
          )
        )
        (preference nonBlockPlacedInBuilding
          (exists (?d ?o1 - dodgeball)
            (then
              (hold (same_color agent yellow) )
              (once (in ?b ?l2) )
              (hold (in_motion ?t) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (count throwOverRamp:basketball) )
)
(:scoring
  (* 4 40 )
)
)



(define (game game-id-778) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (in_motion ?d)
  )
)
(:constraints
  (and
    (preference thrownBallHitsBlock
      (exists (?w2 - dodgeball ?h - flat_block ?b9 - dodgeball)
        (then
          (once (in_motion rug) )
          (hold (not (agent_holds ?b9) ) )
          (once (agent_holds ?d) )
        )
      )
    )
    (preference blockToBinFromRug
      (exists (?l4 - dodgeball)
        (at-end
          (same_color main_light_switch ?c)
        )
      )
    )
    (preference dodgeballBouncesOnceToDoggieBed
      (exists (?b - curved_wooden_ramp ?o - cube_block ?d - hexagonal_bin)
        (then
          (hold (in_motion ?d) )
          (once (and (and (in_motion ?d) (agent_holds ?b) ) (on ?d ?d) ) )
          (once (agent_holds ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= 4 (total-time) )
)
(:scoring
  (count-unique-positions thrownBallHitsBlock:purple)
)
)



(define (game game-id-779) (:domain many-objects-room-v1)
(:setup
  (forall (?p1 ?b2 ?o5 - (either pyramid_block key_chain) ?w2 - dodgeball ?o ?o5 - curved_wooden_ramp ?d - hexagonal_bin ?h - (either curved_wooden_ramp laptop))
    (exists (?b - beachball)
      (forall (?h ?h - game_object)
        (and
          (and
            (exists (?s - ball ?b1 - hexagonal_bin)
              (forall (?d - pillow)
                (exists (?l2 - ball)
                  (exists (?o - hexagonal_bin)
                    (and
                      (exists (?r - cube_block)
                        (game-conserved
                          (and
                            (< (distance agent ?o) 2)
                            (touch ?o ?d)
                            (not
                              (not
                                (rug_color_under ?b brown)
                              )
                            )
                          )
                        )
                      )
                      (game-conserved
                        (agent_holds ?d)
                      )
                      (game-conserved
                        (not
                          (in ?d ?b)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
          (exists (?c - hexagonal_bin ?h - ball)
            (game-conserved
              (and
                (not
                  (agent_holds ?d)
                )
                (not
                  (and
                    (not
                      (< 1 2)
                    )
                    (in ?h ?b)
                    (and
                      (in_motion ?h)
                      (agent_holds ?h)
                    )
                    (and
                      (in_motion ?h)
                      (in ?b ?c1)
                      (not
                        (and
                          (< 5 1)
                          (not
                            (on bed ?b)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
          (exists (?w - (either dodgeball floor) ?h - ball)
            (game-conserved
              (and
                (on ?c3 ?h)
                (not
                  (agent_holds ?o)
                )
                (adjacent room_center ?d)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?r - cylindrical_block)
        (then
          (once (same_type ?r blinds) )
          (once (in_motion ?d) )
          (hold (in ?t ?b) )
        )
      )
    )
  )
)
(:terminal
  (not
    (not
      (<= 3 (* (* 10 (* 2 2 )
            4
            (count-once-per-objects throwBallToBin:red)
            (count-once throwBallToBin)
            (* (count throwBallToBin:book) (external-forall-maximize (* 1 (count throwBallToBin:basketball) )
              )
            )
          )
          (+ (* (count-once-per-objects throwBallToBin:golfball:beachball) (* (+ (* 100 (+ (* 10 (count-once-per-objects throwBallToBin:green:dodgeball) )
                      (* 8 (count throwBallToBin:beachball:golfball) )
                    )
                  )
                  (* 5 (* (* (count throwBallToBin:golfball:blue_cube_block) 5 )
                      (* 3 (count-once throwBallToBin:pink) (count throwBallToBin:doggie_bed) 15 )
                    )
                  )
                )
                2
              )
            )
            (* (* (count-once-per-objects throwBallToBin:yellow) (count-measure throwBallToBin:dodgeball) )
              (* (count-once-per-objects throwBallToBin:hexagonal_bin) 2 )
            )
            (* (count throwBallToBin:golfball) (count-once throwBallToBin:doggie_bed:pink:pink_dodgeball) 10 )
          )
        )
      )
    )
  )
)
(:scoring
  (* 5 (* (>= 15 (count throwBallToBin:dodgeball) )
      (count-once-per-objects throwBallToBin:basketball)
    )
  )
)
)



(define (game game-id-780) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?d - cube_block)
      (game-optional
        (agent_holds ?d)
      )
    )
  )
)
(:constraints
  (and
    (forall (?b1 ?r - (either laptop yellow_cube_block))
      (and
        (preference ballThrownToRampToBed
          (exists (?b - dodgeball)
            (then
              (hold (and (exists (?o - cube_block) (not (in_motion ?o) ) ) (adjacent ?b1 ?b) (agent_holds ?r) (in_motion ?b) ) )
              (once (and (not (and (in ?c ?g) (agent_holds ?d) ) ) (or (and (equal_x_position ?r ?h) (and (on ?b ?r) (not (in_motion ?r) ) ) (> (distance ?b1 ?r) (x_position ?d)) ) ) (forall (?b4 - building) (same_color ?l ?b4) ) ) )
              (hold (and (and (on ?b ?w) (not (in_motion ?r) ) ) (and (same_color ?b ?b1) (and (and (in_motion ?b1) (in_motion ?d) ) (and (forall (?c - curved_wooden_ramp) (or (on ?b ?b1) (not (adjacent ?d ?b) ) ) ) (in_motion ?d) ) ) ) (in_motion ?b) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (< (= 2 3 (count-once-per-external-objects ballThrownToRampToBed:beachball) )
      (total-time)
    )
  )
)
(:scoring
  (* (count ballThrownToRampToBed:yellow:dodgeball) 6 )
)
)



(define (game game-id-781) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (exists (?d - game_object)
      (in ?o ?d)
    )
  )
)
(:constraints
  (and
    (forall (?o - game_object)
      (and
        (preference blindsOpened
          (exists (?c - hexagonal_bin ?tb ?c1 - game_object)
            (then
              (once (agent_holds ?o) )
              (once (in_motion ?c) )
              (hold (in ?b ?tb) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (= (count-once-per-objects blindsOpened:golfball) 1 )
)
(:scoring
  (count-once-per-objects blindsOpened)
)
)



(define (game game-id-782) (:domain medium-objects-room-v1)
(:setup
  (exists (?d - flat_block)
    (game-conserved
      (rug_color_under ?d ?d)
    )
  )
)
(:constraints
  (and
    (preference dodgeballFromDeskToTarget
      (exists (?l4 - wall ?b7 - (either laptop cd))
        (then
          (hold (agent_holds ?d) )
          (hold (agent_holds ?c1) )
          (once (and (and (and (in_motion ?b) (and (agent_holds green_golfball) (and (agent_holds ?c1) (touch ?b agent) ) ) ) (and (and (in ?c ?b7) (not (<= 1 3) ) (and (in_motion ?d) (agent_holds ?b7) (not (exists (?b - hexagonal_bin) (in_motion ?b) ) ) (not (adjacent ?b7 ?d) ) ) ) (adjacent ?s ?b7) ) ) (in_motion ?o) ) )
          (once (not (and (on ?h ?b) (on ?b7 ?b) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects dodgeballFromDeskToTarget:red) (* (count dodgeballFromDeskToTarget:tall_cylindrical_block) 9 )
  )
)
(:scoring
  (* 5 (count dodgeballFromDeskToTarget:orange:beachball) )
)
)



(define (game game-id-783) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (agent_holds ?g)
  )
)
(:constraints
  (and
    (preference ballThrownOntoTarget
      (exists (?ob ?h - curved_wooden_ramp)
        (then
          (hold (and (not (adjacent_side ?b front ?ob back) ) ) )
          (once (adjacent_side ?h front ?c) )
          (once (agent_holds ?bl) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (count-once ballThrownOntoTarget:dodgeball) )
)
(:scoring
  (* (count-longest ballThrownOntoTarget:basketball) 8 )
)
)



(define (game game-id-784) (:domain many-objects-room-v1)
(:setup
  (forall (?b - (either ball cube_block teddy_bear chair))
    (and
      (and
        (and
          (exists (?b - curved_wooden_ramp)
            (game-conserved
              (agent_holds ?d)
            )
          )
        )
      )
      (forall (?o4 - dodgeball)
        (game-conserved
          (same_type ?b block)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockInTowerKnockedByDodgeball
      (exists (?d - hexagonal_bin)
        (at-end
          (and
            (and
              (agent_holds ?b)
              (not
                (agent_holds ?d)
              )
            )
            (exists (?h - wall)
              (not
                (and
                  (touch ?c4 agent)
                  (in_motion ?h)
                )
              )
            )
            (and
              (and
                (in ?h ?b6)
                (in_motion ?d)
              )
              (not
                (not
                  (not
                    (in_motion ?b)
                  )
                )
              )
              (in ?h ?d)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count blockInTowerKnockedByDodgeball:hexagonal_bin) (* (count blockInTowerKnockedByDodgeball:beachball) 4 )
    )
    (or
      (>= 6 (* (+ 2 (count-once-per-objects blockInTowerKnockedByDodgeball:yellow) )
          (count-measure blockInTowerKnockedByDodgeball:basketball)
        )
      )
    )
  )
)
(:scoring
  (external-forall-maximize
    (count blockInTowerKnockedByDodgeball:yellow)
  )
)
)



(define (game game-id-785) (:domain many-objects-room-v1)
(:setup
  (forall (?h - hexagonal_bin)
    (exists (?h - ball)
      (game-optional
        (adjacent ?h ?h)
      )
    )
  )
)
(:constraints
  (and
    (preference throwFromEdgeOfRug
      (exists (?h - hexagonal_bin)
        (at-end
          (faces ?h ?h)
        )
      )
    )
  )
)
(:terminal
  (>= (count-unique-positions throwFromEdgeOfRug:beachball) (* (+ (+ 10 6 )
        1
      )
      (count-once-per-external-objects throwFromEdgeOfRug:basketball)
    )
  )
)
(:scoring
  (* 10 5 )
)
)



(define (game game-id-786) (:domain many-objects-room-v1)
(:setup
  (exists (?o3 - teddy_bear)
    (exists (?c6 - hexagonal_bin)
      (exists (?r2 - ball)
        (and
          (game-conserved
            (not
              (not
                (and
                  (in_motion ?d)
                  (and
                    (not
                      (and
                        (in ?b ?c6)
                      )
                    )
                    (broken ?r2)
                  )
                  (and
                    (and
                      (agent_holds ?ob)
                      (and
                        (in ?c3 ?o3)
                        (in_motion ?b)
                      )
                      (equal_z_position agent ?c6)
                    )
                    (agent_holds ?b8)
                  )
                )
              )
            )
          )
          (game-conserved
            (not
              (agent_holds ?r2)
            )
          )
          (game-conserved
            (not
              (object_orientation ?g sideways)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c - wall ?b8 - (either hexagonal_bin tall_cylindrical_block))
      (and
        (preference throwToBinFromOppositeWall
          (exists (?f - chair ?b - doggie_bed)
            (then
              (once (in_motion ?d) )
              (hold (in_motion ?o) )
              (once (in ?b8 ?l4) )
            )
          )
        )
      )
    )
    (forall (?l1 - game_object)
      (and
        (preference throwFromDoorToBin
          (exists (?b6 - ball)
            (then
              (once (and (and (< 8 (building_size ?b)) (and (not (agent_holds ?b) ) ) (not (and (exists (?l2 - game_object) (agent_holds rug) ) (> (distance_side ?w1 ?l1 agent) (distance desk floor)) (adjacent agent ?b6) (in_motion desk) ) ) (exists (?h ?h ?h - block) (in_motion ?l1) ) ) (in_motion ?l1) ) )
              (once (and (agent_holds ?b6) (faces ?l ?l1) ) )
              (once (not (agent_holds ?l1) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (= (>= 3 (count-once throwToBinFromOppositeWall:book:yellow_cube_block) )
    (count throwFromDoorToBin:wall)
  )
)
(:scoring
  (* (count throwToBinFromOppositeWall:pink:blue_cube_block) (* (external-forall-maximize (count-shortest throwToBinFromOppositeWall:purple:blue_dodgeball) ) (count throwToBinFromOppositeWall:dodgeball) )
  )
)
)



(define (game game-id-787) (:domain medium-objects-room-v1)
(:setup
  (not
    (exists (?b - dodgeball ?s ?d ?c ?t ?c2 ?p - block ?b - hexagonal_bin ?b - (either beachball dodgeball pen))
      (and
        (game-conserved
          (in_motion ?b)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrowAttempt
      (exists (?o - desktop)
        (then
          (hold (faces ?o ?h) )
          (hold (in_motion ?o) )
          (once (on ?o bed) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects ballThrowAttempt:dodgeball) (count ballThrowAttempt:purple) )
)
(:scoring
  (count ballThrowAttempt:blue_pyramid_block)
)
)



(define (game game-id-788) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (agent_holds ?w1)
    )
    (forall (?r - desk_shelf ?c - bridge_block)
      (and
        (game-conserved
          (= 4 4)
        )
        (exists (?b9 - bridge_block)
          (and
            (forall (?o - (either cube_block top_drawer))
              (and
                (exists (?c5 - golfball)
                  (and
                    (game-conserved
                      (and
                        (and
                          (in_motion ?c)
                          (agent_holds ?c)
                          (< 9 10)
                        )
                        (not
                          (in_motion ?b9)
                        )
                      )
                    )
                    (exists (?h - cube_block)
                      (and
                        (game-conserved
                          (agent_holds ?b9)
                        )
                        (forall (?d - ball ?c - hexagonal_bin ?h - teddy_bear)
                          (forall (?b - cube_block)
                            (exists (?d - yellow_pyramid_block)
                              (and
                                (exists (?w1 - hexagonal_bin)
                                  (and
                                    (game-conserved
                                      (and
                                        (not
                                          (in_motion ?h)
                                        )
                                        (in ?b1 ?d)
                                        (exists (?p - (either floor beachball))
                                          (exists (?d - curved_wooden_ramp ?c - pillow ?c - curved_wooden_ramp ?o5 - cylindrical_block)
                                            (agent_holds ?s)
                                          )
                                        )
                                      )
                                    )
                                    (game-optional
                                      (not
                                        (forall (?d - book)
                                          (on ?c5 ?d)
                                        )
                                      )
                                    )
                                    (game-optional
                                      (not
                                        (in ?c5 ?o)
                                      )
                                    )
                                  )
                                )
                                (or
                                  (game-conserved
                                    (rug_color_under ?c brown)
                                  )
                                )
                                (exists (?d - game_object ?l2 - hexagonal_bin)
                                  (and
                                    (exists (?o - ball)
                                      (and
                                        (forall (?h - curved_wooden_ramp)
                                          (exists (?p - triangular_ramp ?s - building)
                                            (not
                                              (and
                                                (game-optional
                                                  (not
                                                    (and
                                                      (forall (?b1 - game_object)
                                                        (agent_holds ?h)
                                                      )
                                                      (broken ?d)
                                                    )
                                                  )
                                                )
                                                (game-optional
                                                  (not
                                                    (adjacent ?o ?s)
                                                  )
                                                )
                                                (forall (?bl - game_object)
                                                  (exists (?w2 - wall ?d - wall)
                                                    (game-conserved
                                                      (agent_holds ?l2)
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                        (exists (?s - dodgeball ?b1 - hexagonal_bin ?h ?o3 - hexagonal_bin)
                                          (game-optional
                                            (and
                                              (and
                                                (and
                                                  (not
                                                    (and
                                                      (on ?s ?d)
                                                      (agent_holds ?d)
                                                    )
                                                  )
                                                  (not
                                                    (adjacent ?d ?c)
                                                  )
                                                  (and
                                                    (exists (?d - block ?r - cylindrical_block)
                                                      (not
                                                        (and
                                                          (agent_holds ?b1)
                                                          (agent_holds ?b)
                                                        )
                                                      )
                                                    )
                                                    (in ?c5 ?b)
                                                  )
                                                )
                                                (not
                                                  (not
                                                    (agent_holds ?p)
                                                  )
                                                )
                                                (adjacent bed ?c5)
                                              )
                                              (and
                                                (in ?b ?d)
                                                (not
                                                  (and
                                                    (and
                                                      (in_motion ?d)
                                                      (in ?l2 ?d)
                                                    )
                                                    (< (distance ?d ?t) (distance ?h ?h))
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                    (and
                      (game-conserved
                        (agent_holds ?c)
                      )
                    )
                  )
                )
              )
            )
          )
        )
        (forall (?l - shelf)
          (game-optional
            (equal_z_position side_table ?c)
          )
        )
        (and
          (forall (?h - cylindrical_block)
            (game-optional
              (same_color ?c ?c)
            )
          )
          (game-conserved
            (adjacent ?c ?o1)
          )
          (game-optional
            (in_motion ?c)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - teddy_bear)
      (and
        (preference throwToRampToBin
          (exists (?x - dodgeball)
            (then
              (once (< (distance ?d ?d) (distance ?x ?b)) )
              (once (and (in_motion ?b) (on ?d ?x) ) )
              (once (in_motion ?b) )
            )
          )
        )
        (preference woodenBlockMovedFromRugToDesk
          (exists (?ob - ball)
            (at-end
              (same_color ?r ?d)
            )
          )
        )
      )
    )
    (preference blockInTowerKnocked
      (exists (?c4 - pyramid_block)
        (at-end
          (and
            (and
              (in_motion ?c4)
              (forall (?l1 - (either bridge_block lamp))
                (exists (?o - hexagonal_bin)
                  (not
                    (adjacent desk ?b2)
                  )
                )
              )
              (and
                (and
                  (not
                    (agent_holds ?c4)
                  )
                  (is_setup_object ?c4)
                )
                (< 3 (x_position ?h))
                (in_motion ?t)
                (and
                  (or
                    (on agent ?w2)
                    (not
                      (not
                        (not
                          (and
                            (in_motion ?c4)
                            (in_motion ?c4)
                          )
                        )
                      )
                    )
                  )
                  (on ?c4 ?h)
                )
              )
            )
            (agent_holds ?c4)
          )
        )
      )
    )
  )
)
(:terminal
  (>= (> (* (count throwToRampToBin:basketball) (+ 5 10 )
      )
      2
    )
    8
  )
)
(:scoring
  (* (* (count woodenBlockMovedFromRugToDesk:book) (* (count-once-per-objects blockInTowerKnocked) (count-increasing-measure throwToRampToBin:pink:dodgeball) )
    )
    (count-longest blockInTowerKnocked:pink)
  )
)
)



(define (game game-id-789) (:domain medium-objects-room-v1)
(:setup
  (exists (?b - wall)
    (exists (?d - cube_block)
      (and
        (and
          (game-conserved
            (in_motion ?b)
          )
          (game-conserved
            (and
              (agent_holds agent)
              (agent_holds ?p1)
              (on ?b ?o)
            )
          )
        )
        (game-conserved
          (on ?d ?b)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockKnockedFromBuildingInBin
      (exists (?o2 - hexagonal_bin ?c1 - triangular_ramp)
        (then
          (once (and (and (on ?c1 ?b2) (agent_holds ?c1) ) (not (< 2 1) ) ) )
          (hold (agent_holds ?b) )
          (hold (and (on ?c1 ?r) (object_orientation ?c3 upside_down) (rug_color_under ?c1 ?c1) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-once-per-objects blockKnockedFromBuildingInBin:beachball) (count blockKnockedFromBuildingInBin:book:hexagonal_bin:purple) )
  )
)
(:scoring
  (count-once-per-objects blockKnockedFromBuildingInBin:red)
)
)



(define (game game-id-790) (:domain few-objects-room-v1)
(:setup
  (exists (?d2 - beachball ?b5 - dodgeball)
    (and
      (and
        (forall (?w1 - ball)
          (and
            (exists (?w2 - flat_block)
              (exists (?p - hexagonal_bin ?l - hexagonal_bin)
                (and
                  (forall (?r2 - game_object ?b - cube_block)
                    (game-conserved
                      (not
                        (not
                          (toggled_on ?b)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
        (exists (?b - (either rug red yellow_cube_block))
          (game-optional
            (exists (?o4 - block)
              (or
                (in_motion ?b)
                (in_motion floor)
              )
            )
          )
        )
        (and
          (forall (?w1 ?d - golfball)
            (exists (?h - hexagonal_bin)
              (game-optional
                (touch ?h ?h)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?t - hexagonal_bin ?c3 - cube_block)
        (then
          (once (touch bed ?c3) )
          (once (not (on ?d ?c) ) )
          (once (or (in ?b ?d) (on ?d desk) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-external-objects throwAttempt:dodgeball) (count throwAttempt:orange) )
)
(:scoring
  (* (count-once throwAttempt:yellow) (count-once-per-external-objects throwAttempt:pink_dodgeball) )
)
)



(define (game game-id-791) (:domain many-objects-room-v1)
(:setup
  (exists (?l2 - teddy_bear ?l1 - chair)
    (game-conserved
      (on ?l1 ?l1)
    )
  )
)
(:constraints
  (and
    (preference castleBuilt
      (exists (?ob - (either tall_cylindrical_block) ?d - doggie_bed)
        (at-end
          (agent_holds ?c)
        )
      )
    )
  )
)
(:terminal
  (and
    (>= 6 10 )
    (< 10 (total-time) )
    (< (count-once-per-objects castleBuilt:pink_dodgeball:side_table:yellow_pyramid_block) 10 )
  )
)
(:scoring
  (count castleBuilt:cube_block:beachball)
)
)



(define (game game-id-792) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (agent_holds rug)
  )
)
(:constraints
  (and
    (preference throwToBin
      (exists (?b8 - green_triangular_ramp)
        (then
          (hold (not (in ?b8 ?b8) ) )
          (once (toggled_on agent) )
          (once (on ?o ?b8) )
        )
      )
    )
    (preference ballKnocksBlockFromRug
      (exists (?b10 - (either pen cellphone))
        (at-end
          (and
            (agent_holds ?b10)
            (in_motion ?b)
          )
        )
      )
    )
    (preference ballThrownFromObjectToBin
      (exists (?o - game_object ?c - cube_block)
        (then
          (once (agent_holds ?c) )
          (once (touch ?c ?d) )
          (hold (not (not (in_motion ?c) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (count ballKnocksBlockFromRug:tan) )
)
(:scoring
  (count-once-per-objects ballThrownFromObjectToBin:top_drawer)
)
)



(define (game game-id-793) (:domain few-objects-room-v1)
(:setup
  (exists (?ob - (either desktop dodgeball teddy_bear mug))
    (game-conserved
      (object_orientation ?b8 upright)
    )
  )
)
(:constraints
  (and
    (forall (?b - (either pen lamp cube_block) ?h - building)
      (and
        (preference itemsHidingScreens
          (then
            (once (in_motion ?h) )
            (hold (in ?b ?h) )
            (once (< (distance agent ?w1) 4) )
            (once (in_motion floor) )
            (once (not (on ?h agent) ) )
            (once (agent_holds ?t) )
          )
        )
      )
    )
    (preference blocksInPlace
      (exists (?c4 ?b - book)
        (at-end
          (agent_holds ?b1)
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) 3 )
)
(:scoring
  (+ 15 (count-total blocksInPlace:basketball:basketball) )
)
)



(define (game game-id-794) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?b8 - (either blue_cube_block golfball))
      (game-conserved
        (and
          (agent_holds ?b)
          (agent_holds ?c)
          (agent_holds ?h)
          (touch ?b8 ?b8)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o - hexagonal_bin ?l - chair)
      (and
        (preference thrownObjectHitsComputer
          (exists (?o2 - shelf)
            (then
              (hold (and (on ?l ?l) (broken ?l) ) )
              (once (not (agent_holds ?l) ) )
              (once (on ?h ?o2) )
            )
          )
        )
        (preference ballNeverThrown
          (exists (?l - drawer ?d - doggie_bed)
            (then
              (once (faces ?l ?l) )
              (once (not (game_start ) ) )
              (hold (in_motion ?d) )
            )
          )
        )
        (preference cubeBlockThrowAttempt
          (exists (?l - game_object)
            (at-end
              (rug_color_under ?l brown)
            )
          )
        )
        (preference laptopAndBookInPlace
          (exists (?c - building)
            (then
              (hold (in_motion ?c) )
              (once (in_motion ?l) )
              (hold-while (in_motion ?d) (and (agent_holds agent) (agent_holds ?b1) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> 9 (count laptopAndBookInPlace:cube_block) )
)
(:scoring
  (count ballNeverThrown)
)
)



(define (game game-id-795) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (forall (?d - ball)
        (game-conserved
          (agent_holds ?d)
        )
      )
      (forall (?d - doggie_bed)
        (or
          (forall (?b - block)
            (exists (?r - dodgeball)
              (forall (?o - teddy_bear)
                (exists (?h - hexagonal_bin ?d - ball ?c1 - (either cylindrical_block bridge_block))
                  (forall (?b - cube_block ?c - hexagonal_bin)
                    (and
                      (and
                        (forall (?d - (either dodgeball laptop))
                          (game-optional
                            (agent_holds ?b)
                          )
                        )
                      )
                      (exists (?b4 - hexagonal_bin)
                        (and
                          (exists (?d - (either blue_cube_block laptop doggie_bed))
                            (game-conserved
                              (and
                                (agent_holds ?b)
                                (and
                                  (and
                                    (toggled_on ?c)
                                    (or
                                      (agent_holds ?c1)
                                      (< (distance ?h ?b4) (distance ?h ?d))
                                    )
                                  )
                                  (and
                                    (in_motion ?h)
                                    (and
                                      (and
                                        (on ?b4 ?b4)
                                        (and
                                          (in ?b4 ?r)
                                          (touch ?d ?d)
                                        )
                                      )
                                      (in_motion ?d)
                                    )
                                  )
                                )
                                (in ?r ?d)
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
          (game-optional
            (in rug ?g)
          )
        )
      )
    )
    (exists (?b6 - (either golfball beachball) ?h - (either dodgeball yellow_cube_block))
      (forall (?h - ball ?g - ball)
        (forall (?h - hexagonal_bin ?l2 - (either golfball dodgeball) ?c1 - yellow_cube_block)
          (and
            (game-conserved
              (on ?h ?c1)
            )
          )
        )
      )
    )
    (forall (?h - blue_pyramid_block)
      (game-conserved
        (and
          (in ?h ?h)
          (on ?h ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference thrownBallReachesEnd
      (exists (?p - cube_block)
        (then
          (once (agent_holds ?b5) )
          (hold-while (in_motion ?p) (agent_holds ?p) )
          (once (is_setup_object ?p) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) 5 )
)
(:scoring
  (count-once-per-objects thrownBallReachesEnd:pink:red)
)
)



(define (game game-id-796) (:domain few-objects-room-v1)
(:setup
  (exists (?l - pyramid_block)
    (and
      (game-conserved
        (in desk ?o)
      )
      (game-optional
        (agent_holds ?b)
      )
      (forall (?p - (either mug chair))
        (forall (?b6 ?w2 - game_object ?d1 - color ?b - ball)
          (not
            (exists (?b - pillow)
              (forall (?c2 - dodgeball)
                (exists (?h - shelf ?b - dodgeball)
                  (exists (?t - hexagonal_bin)
                    (exists (?c - hexagonal_bin)
                      (game-conserved
                        (agent_holds ?o)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c1 - green_triangular_ramp)
      (and
        (preference throwAttempt
          (exists (?w1 - dodgeball)
            (then
              (once (touch ?w1 ?h) )
              (once (not (object_orientation ?d ?c1) ) )
              (once (agent_holds ?c1) )
            )
          )
        )
        (preference dodgeballFromRugToBin
          (exists (?r - (either blue_cube_block cube_block))
            (then
              (once (adjacent agent ?r) )
              (hold (agent_holds ?g) )
              (once (< 2 (distance agent ?c1)) )
            )
          )
        )
      )
    )
    (preference throwToDrawerOrBin
      (exists (?o - doggie_bed)
        (then
          (hold (agent_holds ?o) )
          (hold (not (and (in_motion ?b) (on rug ?o) (agent_holds ?b) ) ) )
          (once (and (not (agent_holds ?o) ) (and (not (and (and (agent_holds ?b) (exists (?b - hexagonal_bin) (not (in_motion ?d) ) ) (not (and (agent_holds ?h) (not (agent_holds ?b) ) (not (agent_holds ?d) ) (agent_holds ?h) (and (adjacent room_center ?o) (in ?o ?o) ) ) ) ) (and (in ?p ?o) (game_over ) ) (in ?o ?o) ) ) (agent_holds ?o2) ) ) )
        )
      )
    )
    (preference dodgeballHitsBin
      (exists (?w2 - flat_block)
        (at-end
          (adjacent agent ?l)
        )
      )
    )
  )
)
(:terminal
  (not
    (> (total-score) (count dodgeballHitsBin:red) )
  )
)
(:scoring
  (count throwAttempt:blue_dodgeball)
)
)



(define (game game-id-797) (:domain few-objects-room-v1)
(:setup
  (forall (?h - doggie_bed ?b1 - hexagonal_bin)
    (exists (?o - ball ?b - ball)
      (game-conserved
        (in_motion ?b1)
      )
    )
  )
)
(:constraints
  (and
    (forall (?c2 - cube_block ?b - (either tall_cylindrical_block ball))
      (and
        (preference ballThrownToBin
          (exists (?o - pillow ?p2 ?d - hexagonal_bin ?b - ball)
            (at-end
              (in_motion ?l)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* (* 3 3 )
        (count ballThrownToBin:hexagonal_bin:dodgeball)
        (count-once ballThrownToBin:green)
      )
      (count ballThrownToBin:orange)
    )
    (>= 6 (total-score) )
    (>= (count-once-per-objects ballThrownToBin:dodgeball) 2 )
  )
)
(:scoring
  (count ballThrownToBin:orange)
)
)



(define (game game-id-798) (:domain many-objects-room-v1)
(:setup
  (forall (?h - block)
    (game-conserved
      (not
        (on ?b ?h)
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballHitsBinBottom
      (exists (?w1 - beachball)
        (then
          (once (in_motion desk) )
          (once (in_motion ?p) )
          (hold-while (and (exists (?l1 - dodgeball ?g - dodgeball) (not (agent_holds ?w1) ) ) (in ?r ?g) (agent_holds ?d) ) (agent_holds ?h) )
        )
      )
    )
    (preference ballThrownFromBehindBlock
      (exists (?bl - block)
        (then
          (once (and (not (not (not (agent_holds ?bl) ) ) ) (and (< (distance ?bl ?bl) (distance desk ?o)) (not (not (not (in_motion ?bl) ) ) ) ) (and (exists (?h - dodgeball) (not (agent_holds ?c2) ) ) (>= (distance ?bl ?b) (distance ?h ?bl)) ) ) )
          (once (and (touch ?bl ?d) (in_motion ?bl) (agent_holds ?d) (and (not (not (and (not (touch ?bl ?bl) ) (equal_z_position ?bl ?bl) (not (in bed ?b) ) (in_motion ?bl) ) ) ) (not (forall (?o1 - teddy_bear ?w2 - red_dodgeball) (same_object ?w2 ?d) ) ) ) ) )
          (hold (on ?bl ?b) )
        )
      )
    )
    (forall (?o - block ?d - beachball ?db ?o4 - triangular_ramp)
      (and
        (preference throwAttempt
          (exists (?c2 - sliding_door)
            (then
              (once (in_motion ?c2) )
              (once (agent_holds ?c3) )
              (once (and (opposite ?b ?l2) (agent_holds ?w2) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< 6 7 )
)
(:scoring
  (+ (+ 6 (external-forall-minimize (count ballThrownFromBehindBlock:tall_cylindrical_block:pink_dodgeball) ) )
    (external-forall-maximize
      (count-overlapping throwAttempt:tall_cylindrical_block)
    )
  )
)
)



(define (game game-id-799) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (touch ?b ?b)
  )
)
(:constraints
  (and
    (preference throwKnocksBlock
      (exists (?h - teddy_bear ?p - ball)
        (then
          (once (and (between ?r ?p ?p) (not (or (in ?p ?p) (in_motion ?p) ) ) (in_motion ?p) ) )
          (once (not (< (distance ?p ?p) 1) ) )
          (once (not (in ?b ?o) ) )
        )
      )
    )
    (forall (?o3 - color ?d - curved_wooden_ramp)
      (and
        (preference throwBallToDoggieBedOffWall
          (exists (?h - block)
            (then
              (once (and (in_motion ?d) (agent_holds ?d) ) )
              (hold-while (on ?o3 ?h) (= 1 (distance agent ?d)) )
              (once (not (not (agent_holds ?b) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (total-score) )
)
(:scoring
  (count-overlapping throwKnocksBlock)
)
)



(define (game game-id-800) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?d - ball ?d - (either doggie_bed) ?h - block ?b ?l - dodgeball)
      (game-conserved
        (agent_holds ?b)
      )
    )
    (exists (?b8 - dodgeball)
      (game-conserved
        (and
          (in_motion ?b8)
          (in_motion ?c)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference castleBuilt
      (exists (?p1 - dodgeball)
        (then
          (once (in_motion ?l2) )
          (once (on desk desk) )
          (once (agent_holds ?l) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 2 10 10 (+ (* 30 5 )
        1
      )
    )
    (external-forall-maximize
      (* (+ (count castleBuilt:golfball) 5 )
        (count-shortest castleBuilt:red)
      )
    )
  )
)
(:scoring
  (count castleBuilt)
)
)



(define (game game-id-801) (:domain medium-objects-room-v1)
(:setup
  (exists (?o - cube_block ?ob - (either top_drawer laptop))
    (or
      (game-conserved
        (agent_holds ?ob)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?l2 - pyramid_block)
        (then
          (once (or (exists (?c5 - game_object) (agent_holds ?c5) ) ) )
          (once (not (in_motion ?l2) ) )
          (once (exists (?b6 - tall_cylindrical_block ?b - block) (in_motion ?r) ) )
        )
      )
    )
    (preference beachballOnRug
      (exists (?b - pyramid_block)
        (at-end
          (in_motion ?o1)
        )
      )
    )
    (preference dodgeballBouncesOnceToDoggieBed
      (exists (?b - (either golfball laptop tall_cylindrical_block))
        (then
          (once (agent_holds ?l2) )
          (hold (and (not (in_motion ?b) ) (and (not (faces ?d ?b) ) (is_setup_object ?l1) (and (not (adjacent_side door ?b ?b) ) (not (in_motion ?b) ) ) ) ) )
          (hold (agent_holds ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 3 (count-once-per-objects ballThrownToBin:brown:golfball) )
    5
  )
)
(:scoring
  (- 10 )
)
)



(define (game game-id-802) (:domain few-objects-room-v1)
(:setup
  (exists (?g - hexagonal_bin)
    (game-conserved
      (in_motion rug)
    )
  )
)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?l1 - dodgeball ?d - shelf)
        (then
          (once (on ?d ?d) )
          (once (exists (?l - (either bridge_block golfball top_drawer)) (in_motion ?l) ) )
          (hold (not (same_object ?o ?d) ) )
        )
      )
    )
    (preference blockPickedUp
      (exists (?g ?f - block)
        (then
          (once (in_motion ?o3) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (* (count throwBallToBin:blue_dodgeball) (count-once-per-objects throwBallToBin:green) )
      (- (+ (count-once-per-objects throwBallToBin:yellow) (- (count-once-per-objects blockPickedUp:dodgeball) (count throwBallToBin:pink_dodgeball) ) )
      )
    )
    (count-shortest blockPickedUp:yellow_pyramid_block:hexagonal_bin)
  )
)
(:scoring
  (+ (external-forall-maximize (count blockPickedUp:beachball) ) 7 )
)
)



(define (game game-id-803) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?h - (either dodgeball dodgeball key_chain) ?b ?b - watch)
      (and
        (game-optional
          (in_motion ?t)
        )
        (game-conserved
          (not
            (object_orientation ?o sideways)
          )
        )
        (game-conserved
          (equal_x_position agent ?d)
        )
      )
    )
    (game-conserved
      (in ?b ?h)
    )
  )
)
(:constraints
  (and
    (preference itemInClosedDrawerAtEnd
      (exists (?b - dodgeball ?h - hexagonal_bin)
        (then
          (once (not (agent_holds ?b) ) )
          (once (agent_holds ?b) )
          (once (< (distance door ?h) 0.5) )
        )
      )
    )
  )
)
(:terminal
  (>= (external-forall-maximize (count-once-per-objects itemInClosedDrawerAtEnd:dodgeball) ) (total-score) )
)
(:scoring
  (external-forall-maximize
    (+ (+ (count itemInClosedDrawerAtEnd:dodgeball:yellow) (* (count-once-per-objects itemInClosedDrawerAtEnd:white:pink) (count itemInClosedDrawerAtEnd:pink_dodgeball) )
      )
      2
      (+ (count itemInClosedDrawerAtEnd:dodgeball) 4 )
      5
    )
  )
)
)



(define (game game-id-804) (:domain few-objects-room-v1)
(:setup
  (forall (?b - block ?c - beachball)
    (and
      (game-conserved
        (and
          (agent_holds ?c)
          (agent_holds ?b)
          (in ?c ?c)
        )
      )
      (game-optional
        (agent_holds ?c)
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - block)
      (and
        (preference ballThrownToBin
          (exists (?b - (either blue_cube_block mug) ?s - (either watch blue_cube_block))
            (at-end
              (and
                (in_motion ?h)
                (in_motion ?h)
                (agent_holds agent)
                (and
                  (touch ?b bed)
                  (in_motion ?h)
                )
              )
            )
          )
        )
      )
    )
    (forall (?t - dodgeball ?c - sliding_door)
      (and
        (preference watchOnShelf
          (exists (?tb - shelf)
            (then
              (once (< 1 0.5) )
              (hold (in_motion ?d1) )
              (hold-while (not (agent_holds ?tb) ) (on ?d ?c) (or (not (not (< (distance ?c ?b) 1) ) ) (in_motion main_light_switch) ) )
            )
          )
        )
        (preference throwMovesBeachballWithoutKnockingTeddy
          (exists (?b - blue_cube_block)
            (then
              (once (agent_holds ?c) )
              (once (in_motion bed) )
              (hold (not (not (adjacent bed ?b) ) ) )
            )
          )
        )
        (preference redDodgeballThrownToBin
          (exists (?d - triangular_ramp)
            (then
              (hold (and (in ?d ?c) (agent_holds ?l2) ) )
              (once (agent_holds ?d) )
              (once (and (agent_holds ?c) (in_motion ?d) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (< (* 2 1 )
        1
      )
      (* 10 (count-once-per-objects ballThrownToBin:green:pink) )
    )
    (>= (total-score) (* 2 10 (count-once-per-objects ballThrownToBin:pink:alarm_clock) 10 (+ (count watchOnShelf:alarm_clock) 15 )
        1
        4
        (+ (count-increasing-measure throwMovesBeachballWithoutKnockingTeddy:doggie_bed) 3 (+ (+ 6 (+ 2 (- 2 )
              )
              30
              2
              (count redDodgeballThrownToBin:dodgeball)
              (count-once-per-objects redDodgeballThrownToBin:doggie_bed)
            )
            (* 1 1 )
          )
        )
        8
      )
    )
    (>= (count-once-per-objects ballThrownToBin:block:basketball) (total-time) )
  )
)
(:scoring
  (- 5 )
)
)



(define (game game-id-805) (:domain few-objects-room-v1)
(:setup
  (forall (?r1 - block)
    (game-optional
      (and
        (not
          (toggled_on ?r1)
        )
        (and
          (in_motion ?r1)
          (< (distance ?h ?o) 2)
        )
        (in_motion ?r1)
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballThrownToBin
      (exists (?b - (either pyramid_block main_light_switch))
        (then
          (once (in_motion ?b) )
          (hold (agent_holds ?r) )
        )
      )
    )
    (forall (?h - dodgeball ?o - hexagonal_bin)
      (and
        (preference throwBallToBin
          (at-end
            (in_motion ?o)
          )
        )
      )
    )
    (forall (?p2 - cube_block)
      (and
        (preference throwToBinFromDistance
          (exists (?h - hexagonal_bin)
            (then
              (once (on ?g bed) )
              (hold (is_setup_object ?b) )
            )
          )
        )
      )
    )
    (preference beachballBouncedOffRamp
      (exists (?h ?c - ball)
        (then
          (once (agent_holds ?c) )
          (once (touch bed ?h) )
          (once (and (in_motion ?b) (in_motion ?b) ) )
        )
      )
    )
    (forall (?c - game_object)
      (and
        (preference ballThrownToWallToAgent
          (exists (?l1 ?d2 - hexagonal_bin)
            (then
              (hold (agent_holds ?d) )
              (once (not (in_motion ?d) ) )
              (once (and (< (distance ?d2 ?c) (distance agent ?o)) (or (not (in_motion ?c) ) (not (in_motion ?c) ) ) ) )
            )
          )
        )
      )
    )
    (preference blockInTowerKnockedByDodgeball
      (exists (?h - pillow)
        (at-end
          (and
            (and
              (or
                (and
                  (in_motion ?h)
                )
                (not
                  (in_motion ?d)
                )
              )
              (adjacent desk ?h)
            )
            (same_color ?h ?h)
            (and
              (game_over )
              (and
                (adjacent_side ?h back ?o2)
                (exists (?h ?b - game_object ?h - cube_block ?o2 - hexagonal_bin)
                  (in_motion ?o2)
                )
                (touch ?h agent)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 0 7 )
)
(:scoring
  (external-forall-maximize
    (+ (count-once-per-objects beachballBouncedOffRamp:book) 2 )
  )
)
)



(define (game game-id-806) (:domain many-objects-room-v1)
(:setup
  (exists (?b10 - building)
    (game-conserved
      (in_motion ?o)
    )
  )
)
(:constraints
  (and
    (forall (?b1 - game_object)
      (and
        (preference laptopAndBookInPlace
          (exists (?c - desktop ?b5 ?o ?c ?b4 ?o1 ?c - hexagonal_bin)
            (at-end
              (not
                (on ?b floor)
              )
            )
          )
        )
        (preference dodgeballsInPlace
          (exists (?d - hexagonal_bin)
            (then
              (once (not (not (in ?b ?h) ) ) )
              (hold (touch ?l ?b1) )
              (hold (agent_holds ?d) )
            )
          )
        )
        (preference blockOnBlockInTowerAtEnd
          (exists (?h - curved_wooden_ramp ?l2 - ball)
            (then
              (once (not (equal_x_position agent ?b1) ) )
              (once (not (in_motion ?c1) ) )
              (once (and (in_motion ?b) (on ?l2 ?o) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (+ (count laptopAndBookInPlace:blue_cube_block) (- (* (- (external-forall-maximize (* (* 10 5 )
                (count blockOnBlockInTowerAtEnd:beachball)
                (count dodgeballsInPlace:dodgeball:cylindrical_block)
                5
                10
                (+ 3 (count laptopAndBookInPlace:basketball:blue_dodgeball) )
              )
            )
          )
          (- (count blockOnBlockInTowerAtEnd:green) )
        )
        (count dodgeballsInPlace:beachball)
      )
    )
    (* -30 (count-total laptopAndBookInPlace:yellow) )
  )
)
(:scoring
  (- 2 )
)
)



(define (game game-id-807) (:domain few-objects-room-v1)
(:setup
  (and
    (game-optional
      (in_motion ?g)
    )
  )
)
(:constraints
  (and
    (forall (?o - hexagonal_bin)
      (and
        (preference throwAttemptKnocksBlock
          (exists (?p2 - red_dodgeball ?x - dodgeball)
            (at-end
              (and
                (or
                  (not
                    (agent_holds ?d)
                  )
                  (not
                    (agent_holds ?x)
                  )
                )
                (and
                  (same_type ?o pillow)
                  (on ?o ?h)
                  (not
                    (not
                      (< 0.5 (distance_side room_center ?o agent))
                    )
                  )
                  (on ?h ?x)
                )
                (on ?b ?o)
              )
            )
          )
        )
      )
    )
    (preference ballThrownFromBehindBlock
      (exists (?h - dodgeball)
        (then
          (once (agent_holds ?b) )
          (once (or (on ?h ?d) (not (and (on ?c ?d) (< 8 1) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (> (count throwAttemptKnocksBlock:dodgeball:hexagonal_bin) (total-time) )
)
(:scoring
  (count throwAttemptKnocksBlock:dodgeball)
)
)



(define (game game-id-808) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (not
      (game_over )
    )
  )
)
(:constraints
  (and
    (preference redDodgeballThrownToBin
      (exists (?c - (either dodgeball game_object book doggie_bed) ?c2 - doggie_bed)
        (then
          (once (agent_holds ?c2) )
          (once (< (distance ?c2 bottom_shelf) 2) )
          (hold (exists (?b8 - building) (adjacent ?w2 ?c2) ) )
          (once (not (not (agent_holds ?d) ) ) )
        )
      )
    )
    (preference throwBallToDoggieBed
      (exists (?d - green_triangular_ramp)
        (then
          (once (= 1 (distance south_wall agent)) )
          (once (agent_holds rug) )
          (hold-while (in_motion ?g) (on ?d ?d) (and (not (not (is_setup_object ?d) ) ) (in_motion ?d) ) (not (and (agent_holds ?d) (not (not (and (on ?o ?d) (in_motion desk) ) ) ) ) ) )
        )
      )
    )
    (forall (?o - hexagonal_bin)
      (and
        (preference rollBallToBin
          (exists (?h - ball)
            (at-end
              (touch ?b ?o)
            )
          )
        )
        (preference dodgeballHitsPillowWithoutTouchingBlock
          (exists (?o - shelf)
            (then
              (once (not (on ?p ?b) ) )
              (once (agent_holds ?o) )
              (once (rug_color_under ?o brown) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= 10 1 )
)
(:scoring
  (* (count-overlapping throwBallToDoggieBed:dodgeball) 9 (count-once-per-objects redDodgeballThrownToBin:red) (* (external-forall-maximize (* (count redDodgeballThrownToBin:pink) 10 )
      )
      (count dodgeballHitsPillowWithoutTouchingBlock:dodgeball:orange)
      (* (count throwBallToDoggieBed:blue_pyramid_block) (* (count redDodgeballThrownToBin:red_pyramid_block) (* (* (count-once redDodgeballThrownToBin:red) 10 )
            (count redDodgeballThrownToBin:basketball)
          )
        )
      )
    )
    (count throwBallToDoggieBed:book)
    (count-once dodgeballHitsPillowWithoutTouchingBlock:red)
  )
)
)



(define (game game-id-809) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?c3 - cube_block)
      (game-conserved
        (in ?b ?l)
      )
    )
  )
)
(:constraints
  (and
    (preference thrownBallHitsBlock
      (exists (?o1 - (either book pen pyramid_block))
        (then
          (hold (on ?o1 agent) )
          (once (on ?o1 ?o1) )
          (once (not (same_type ?o1 ball) ) )
        )
      )
    )
    (preference itemsBroken
      (exists (?d2 - pyramid_block)
        (then
          (once (agent_holds ?d2) )
          (once (in bed ?d2) )
          (hold (in_motion ?l1) )
        )
      )
    )
    (preference pyramidBlockAtopTowerAtEnd
      (exists (?b10 - curved_wooden_ramp ?ob - (either wall hexagonal_bin) ?g - cube_block ?d - (either basketball pink))
        (at-end
          (and
            (not
              (agent_holds ?d)
            )
            (agent_holds ?d)
          )
        )
      )
    )
  )
)
(:terminal
  (> (total-score) (total-time) )
)
(:scoring
  (count thrownBallHitsBlock:orange)
)
)



(define (game game-id-810) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (not
      (not
        (on ?d ?l1)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownIntoTarget
      (exists (?t - building ?h - bridge_block)
        (then
          (once (and (not (adjacent_side agent right ?h) ) (and (< (distance ?c ?l) (distance bed ?h)) (not (exists (?b - ball) (in ?b ?b) ) ) ) ) )
          (once (in_motion ?h) )
          (once (not (on ?h ?d) ) )
        )
      )
    )
    (preference ballThrownMissesEverything
      (exists (?h - tan_cube_block ?o5 - chair)
        (then
          (once (agent_holds ?c) )
          (once (and (and (or (on ?l ?b) (adjacent desk ?o5) ) (on ?w ?o5) ) (touch ?o5 ?h) ) )
          (hold (exists (?p - game_object ?b ?o2 - block ?b ?w ?c1 - (either dodgeball top_drawer)) (in_motion ?b) ) )
        )
      )
    )
    (forall (?o1 - hexagonal_bin ?w - chair)
      (and
        (preference blockFromRugToDesk
          (exists (?b3 ?b6 - dodgeball)
            (then
              (once (agent_holds ?w) )
              (once (game_start ) )
              (hold (and (> 3 1) (agent_holds ?b6) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (total-score) 40 )
    (>= 5 (total-score) )
    (not
      (<= (* 0 (+ 5 (* (count blockFromRugToDesk:beachball) 6 )
            (- 8 )
          )
          (+ (count-once-per-objects blockFromRugToDesk:pink_dodgeball) (count-once-per-objects blockFromRugToDesk:golfball) )
        )
        5
      )
    )
  )
)
(:scoring
  (+ (external-forall-maximize (count-once ballThrownIntoTarget:alarm_clock) ) (* 4 (count-once-per-external-objects ballThrownMissesEverything:green) )
  )
)
)



(define (game game-id-811) (:domain medium-objects-room-v1)
(:setup
  (exists (?w1 - hexagonal_bin)
    (and
      (and
        (exists (?o - ball)
          (game-optional
            (and
              (agent_crouches )
              (and
                (and
                  (agent_holds ?w1)
                  (in_motion ?o1)
                  (adjacent ?o1 ?w1)
                  (and
                    (and
                      (agent_holds ?o)
                      (in_motion ?b)
                    )
                    (on ?h ?h)
                  )
                  (in ?w1 ?l)
                  (not
                    (and
                      (and
                        (not
                          (in_motion ?w1)
                        )
                        (exists (?h - (either book bridge_block tall_cylindrical_block))
                          (and
                            (in_motion agent)
                            (agent_holds ?o)
                            (agent_holds ?w1)
                            (in_motion ?w1)
                          )
                        )
                      )
                      (on floor ?o)
                    )
                  )
                )
                (agent_holds ?l)
                (in_motion ?w1)
                (is_setup_object door)
                (not
                  (between ?b ?o ?o)
                )
                (game_start )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockInTowerKnocked
      (exists (?r - (either golfball blue_cube_block cylindrical_block))
        (then
          (hold-while (on ?r ?r) (agent_holds ?p) (on ?d ?c) )
          (once (agent_holds ?r) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ 15 (* (count blockInTowerKnocked:pink_dodgeball) (* 5 (* (count-once blockInTowerKnocked:basketball) (count blockInTowerKnocked:basketball) (count-once-per-objects blockInTowerKnocked:beachball) (count blockInTowerKnocked:beachball) )
          (count blockInTowerKnocked:pink)
          10
        )
        (count blockInTowerKnocked:golfball:green)
        2
        5
        100
      )
    )
    (* 3 7 )
  )
)
(:scoring
  (external-forall-minimize
    (count-once blockInTowerKnocked:pink:blue_dodgeball)
  )
)
)



(define (game game-id-812) (:domain few-objects-room-v1)
(:setup
  (or
    (exists (?c - building ?o1 - dodgeball)
      (game-conserved
        (in_motion ?o1)
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - chair)
      (and
        (preference redDodgeballThrownToBinWithoutTouchingFloor
          (exists (?r1 - cube_block)
            (then
              (once (not (in_motion ?b) ) )
              (hold (and (in_motion ?r1) (same_color ?r1 ?tb) (not (in ?b ?r1) ) ) )
              (hold (in_motion ?d) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (count redDodgeballThrownToBinWithoutTouchingFloor:basketball) (count-once-per-objects redDodgeballThrownToBinWithoutTouchingFloor:beachball) )
)
(:scoring
  (count-once-per-objects redDodgeballThrownToBinWithoutTouchingFloor:dodgeball:basketball:blue_dodgeball)
)
)



(define (game game-id-813) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (exists (?p - hexagonal_bin)
        (forall (?o - cube_block ?o - pillow)
          (exists (?h - cube_block ?h - curved_wooden_ramp)
            (game-optional
              (and
                (agent_holds ?d)
                (not
                  (faces ?o ?p)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - ball ?h - bridge_block)
      (and
        (preference nonBlockPlacedInBuilding
          (exists (?h - ball ?h ?b - desktop)
            (then
              (once (in_motion ?d) )
              (once (and (in_motion ?b) (and (agent_holds agent) (same_color ?h pink) ) ) )
            )
          )
        )
        (preference ballOnBedAtEnd
          (exists (?r - triangular_ramp ?d - triangular_ramp)
            (then
              (hold (not (and (in ?c ?d) (not (adjacent ?h ?b) ) ) ) )
              (once (< 9 (distance bed ?d)) )
              (hold (same_color ?d ?c) )
            )
          )
        )
      )
    )
    (preference ballThrownMissesEverything
      (exists (?d ?d - cylindrical_block)
        (then
          (once (not (not (agent_holds ?d) ) ) )
          (hold-while (and (not (and (adjacent ?d ?h) (in ?b ?d) ) ) (not (agent_holds ?d) ) ) (not (touch ?d ?b) ) )
          (once (touch ?d ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (* (- (count-once-per-external-objects ballThrownMissesEverything:brown) )
      )
      (count-measure ballOnBedAtEnd:dodgeball)
    )
    (count-once-per-external-objects nonBlockPlacedInBuilding:beachball)
  )
)
(:scoring
  (* (count ballOnBedAtEnd:basketball) 2 )
)
)



(define (game game-id-814) (:domain medium-objects-room-v1)
(:setup
  (forall (?d - cube_block)
    (game-conserved
      (in_motion ?h)
    )
  )
)
(:constraints
  (and
    (preference dodgeballFromDeskToTarget
      (exists (?p3 - chair)
        (then
          (once (same_color ?p3 pink) )
          (once (same_object ?b ?b) )
          (hold (and (agent_holds ?o) (not (equal_z_position door ?d) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (> 3 (count-once-per-external-objects dodgeballFromDeskToTarget:purple:wall) )
    (>= (total-score) 5 )
  )
)
(:scoring
  (count-once-per-objects dodgeballFromDeskToTarget:blue_cube_block)
)
)



(define (game game-id-815) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (game-conserved
        (adjacent ?h ?t)
      )
    )
  )
)
(:constraints
  (and
    (forall (?c ?l2 ?l1 ?o ?h ?d - curved_wooden_ramp)
      (and
        (preference ballThrownFromObjectToBin
          (exists (?h - hexagonal_bin ?o3 - curved_wooden_ramp)
            (then
              (once (not (and (on ?b1 ?l1) (and (in_motion ?d) (on ?l2 ?o) ) ) ) )
              (once (on rug ?d) )
              (once (same_object ?o3 ?c) )
              (hold-while (in_motion ?h) (not (not (in_motion ?b) ) ) (same_type ?d1 ball) )
            )
          )
        )
        (preference throwGolfballToBin
          (then
            (hold (not (same_color ?c ?o) ) )
            (hold (in_motion rug) )
            (once (in_motion ?c) )
          )
        )
        (preference basketMadeFromRug
          (exists (?s - dodgeball)
            (then
              (once (in_motion ?c) )
              (once (exists (?x - hexagonal_bin) (or (exists (?h - golfball ?l2 - book) (and (not (not (or (exists (?b6 - bridge_block) (exists (?c1 - dodgeball ?b4 - (either beachball doggie_bed)) (on ?b ?b4) ) ) (on ?x agent) ) ) ) (in_motion ?d) ) ) (and (in_motion ?b) (agent_holds desk) ) ) ) )
              (once (not (touch ?l1 ?b1) ) )
              (hold (and (in ?s ?l2) (and (and (on ?h ?h) (in_motion ?l1) (agent_holds ?b) ) (not (not (in_motion ?h) ) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (* (* 10 (count-once-per-objects throwGolfballToBin:basketball) (count ballThrownFromObjectToBin:pink_dodgeball) 10 )
        (* 25 (* (count ballThrownFromObjectToBin:cylindrical_block:bed) (count throwGolfballToBin:dodgeball) )
          3
        )
        7
        (count ballThrownFromObjectToBin:pink)
      )
      (+ (* (external-forall-maximize (count ballThrownFromObjectToBin:dodgeball) ) )
        (count throwGolfballToBin:dodgeball)
        (count ballThrownFromObjectToBin:pink)
      )
    )
    (total-time)
  )
)
(:scoring
  (count basketMadeFromRug:beachball)
)
)



(define (game game-id-816) (:domain medium-objects-room-v1)
(:setup
  (forall (?w1 - (either ball alarm_clock))
    (game-conserved
      (not
        (equal_x_position agent ?b)
      )
    )
  )
)
(:constraints
  (and
    (preference ballInOrOnBin
      (exists (?x ?b7 - cube_block ?t - (either bridge_block cube_block bed))
        (then
          (hold (in_motion ?t) )
          (hold (in_motion ?h) )
          (once (opposite ?r ?t) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (count-once ballInOrOnBin:dodgeball) (count-once-per-objects ballInOrOnBin:basketball) )
    (= 5 3 )
  )
)
(:scoring
  (count-once-per-external-objects ballInOrOnBin:dodgeball)
)
)



(define (game game-id-817) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (agent_holds ?d)
  )
)
(:constraints
  (and
    (preference nonBlockPlacedInBuilding
      (exists (?b9 - hexagonal_bin ?h - desk_shelf)
        (then
          (once (in_motion ?c3) )
          (hold (adjacent_side ?h front ?b) )
          (once (equal_z_position room_center ?o5) )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (* (+ 3 (* (count-once-per-objects nonBlockPlacedInBuilding:dodgeball) 1 )
      )
      (+ (count nonBlockPlacedInBuilding:doggie_bed) (count nonBlockPlacedInBuilding:blue_dodgeball) )
    )
  )
)
(:scoring
  (count-once-per-objects nonBlockPlacedInBuilding:basketball)
)
)



(define (game game-id-818) (:domain medium-objects-room-v1)
(:setup
  (exists (?d - dodgeball)
    (and
      (exists (?h - triangular_ramp)
        (game-conserved
          (not
            (and
              (agent_holds ?h)
              (not
                (on ?d ?d)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference gameObjectToBin
      (exists (?db - book)
        (then
          (hold (not (on ?h ?db) ) )
          (hold (not (in_motion ?db) ) )
          (hold (not (in_motion ?c) ) )
        )
      )
    )
    (preference ballThrownToRug
      (exists (?o - wall)
        (then
          (once (object_orientation ?d upright) )
          (once (adjacent ?o ?o) )
        )
      )
    )
    (forall (?b5 - (either dodgeball pyramid_block golfball))
      (and
        (preference ballDroppedInBin
          (exists (?h - ball)
            (then
              (once (and (and (agent_holds ?b5) (in_motion ?h) ) (not (equal_z_position agent ?b5) ) ) )
              (once (toggled_on ?d) )
            )
          )
        )
        (preference teddyBearHitsBall
          (exists (?bl - hexagonal_bin)
            (at-end
              (on ?bl ?bl)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (= (external-forall-maximize (count ballThrownToRug:yellow_cube_block) ) (total-score) )
      (or
        (>= (count ballThrownToRug:blue_dodgeball:hexagonal_bin) (count gameObjectToBin:side_table) )
      )
      (or
        (or
          (> (count gameObjectToBin:alarm_clock) 5 )
        )
        (and
          (>= (count-once-per-objects teddyBearHitsBall:pink_dodgeball:golfball) (total-score) )
        )
        (or
          (or
            (>= (total-time) (total-time) )
            (>= (total-score) (count-once-per-external-objects gameObjectToBin) )
            (or
              (or
                (or
                  (>= (count ballThrownToRug:dodgeball:tan) (count teddyBearHitsBall:purple) )
                )
                (> 3 10 )
              )
              (>= 1 (+ 50 (* (/ 6 (count-same-positions teddyBearHitsBall:green:blue_dodgeball:pink) ) )
                )
              )
            )
          )
          (>= 2 180 )
        )
      )
    )
    (>= (* (* (* 30 (count-same-positions gameObjectToBin:beachball) )
          1
          (* (count teddyBearHitsBall:yellow) (count-once-per-objects gameObjectToBin:golfball) )
        )
        1
      )
      4
    )
    (>= 10 (* (* 3 (count-once-per-external-objects gameObjectToBin:beachball) (count-unique-positions ballDroppedInBin:orange) 100 (count-once-per-objects ballDroppedInBin:hexagonal_bin) (+ (count-increasing-measure ballThrownToRug:dodgeball) (count ballDroppedInBin:dodgeball:basketball) 4 180 (* (external-forall-maximize (* (count teddyBearHitsBall:alarm_clock:blue_cube_block:red) (count-measure gameObjectToBin:dodgeball) )
              )
              (count-once teddyBearHitsBall:pink_dodgeball)
            )
            1
          )
        )
      )
    )
  )
)
(:scoring
  (count ballThrownToRug:brown)
)
)



(define (game game-id-819) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?b - ball)
      (and
        (and
          (exists (?h - (either dodgeball flat_block ball))
            (game-optional
              (in_motion ?d)
            )
          )
          (forall (?o2 - hexagonal_bin)
            (forall (?w1 - beachball ?b7 - teddy_bear)
              (and
                (and
                  (and
                    (exists (?p - hexagonal_bin)
                      (game-conserved
                        (and
                          (= (distance desk ?b7) 1)
                          (agent_holds ?o2)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
          (not
            (game-optional
              (in ?g ?b)
            )
          )
        )
        (game-conserved
          (not
            (agent_holds ?b)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - dodgeball ?h - tan_cube_block)
      (and
        (preference ballThrownToChair
          (exists (?h - hexagonal_bin)
            (then
              (once (agent_holds ?b) )
              (hold-while (touch ?g ?h) (on ?d ?h) (in_motion ?d) )
              (once (in_motion ?d) )
            )
          )
        )
        (preference bigObjectThrownToBed
          (exists (?b8 - curved_wooden_ramp ?r - curved_wooden_ramp ?b - game_object ?t - dodgeball)
            (then
              (once (same_color ?h ?t) )
              (once (and (in_motion ?o) (touch ?h ?b) ) )
              (hold (on ?t ?t) )
              (once (agent_holds ?h) )
            )
          )
        )
      )
    )
    (preference dropAttempt
      (exists (?r - hexagonal_bin ?d - hexagonal_bin)
        (then
          (hold-while (not (exists (?l2 - ball ?ob - game_object ?b - (either teddy_bear pillow lamp alarm_clock bridge_block blue_cube_block dodgeball) ?r - wall) (in_motion ?b) ) ) (not (and (not (is_setup_object ?d) ) (adjacent agent ?g) ) ) (and (agent_holds ?d) (in_motion ?c) (adjacent ?h ?d) ) )
          (once (agent_holds ?d) )
          (once (< (distance ?d ?d) (distance ?o ?d)) )
        )
      )
    )
  )
)
(:terminal
  (or
    (< (+ 30 )
      10
    )
    (>= 3 2 )
  )
)
(:scoring
  (count-increasing-measure dropAttempt:golfball)
)
)



(define (game game-id-820) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?c - wall ?b5 - dodgeball ?c - wall)
      (exists (?h - hexagonal_bin)
        (forall (?t1 - curved_wooden_ramp ?l3 - curved_wooden_ramp ?b - hexagonal_bin)
          (game-conserved
            (and
              (and
                (not
                  (and
                    (and
                      (exists (?ob - hexagonal_bin ?l4 - shelf ?h - game_object)
                        (in_motion ?c)
                      )
                      (open bed)
                    )
                    (not
                      (is_setup_object ?g)
                    )
                  )
                )
                (< (distance door ?c2) (distance ?b ?d))
                (< 3 1)
                (and
                  (adjacent agent ?c)
                  (or
                    (not
                      (and
                        (not
                          (in_motion ?d)
                        )
                        (or
                          (and
                            (not
                              (in ?b ?c)
                            )
                            (in_motion ?c)
                          )
                          (in_motion ?d)
                        )
                      )
                    )
                    (agent_holds ?o)
                  )
                )
                (touch ?b ?b)
                (on ?h ?b)
              )
              (in ?b ?c)
            )
          )
        )
      )
    )
    (game-optional
      (not
        (on ?h ?b)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownFromDoor
      (exists (?b - doggie_bed)
        (then
          (hold-while (and (agent_holds ?d1) (not (adjacent desk ?l1) ) ) (and (not (is_setup_object ?d) ) (on ?b bed) ) (between ?b ?b ?b) (on ?b ?b9) )
          (hold (on ?b2 ?tb) )
          (once (on ?b ?c1) )
        )
      )
    )
  )
)
(:terminal
  (or
    (not
      (> 6 10 )
    )
    (<= 8 5 )
  )
)
(:scoring
  (count ballThrownFromDoor:pyramid_block)
)
)



(define (game game-id-821) (:domain medium-objects-room-v1)
(:setup
  (forall (?b - hexagonal_bin)
    (game-optional
      (broken ?b)
    )
  )
)
(:constraints
  (and
    (forall (?c - dodgeball)
      (and
        (preference throwFromBehindChairsInBin
          (exists (?c ?db - hexagonal_bin)
            (at-end
              (not
                (in_motion ?c)
              )
            )
          )
        )
        (preference ballThrownToBed
          (exists (?o4 - game_object)
            (then
              (hold (and (exists (?h - ball) (agent_holds ?c) ) (and (in_motion ?o4) (in ?c ?o) ) ) )
              (hold-while (not (and (rug_color_under ?c yellow) (on ?o4 ?h) ) ) (in_motion ?l) )
              (once (and (adjacent desk ?o4) (agent_holds ?c) (agent_holds ?c) ) )
            )
          )
        )
      )
    )
    (preference bigObjectThrownToBed
      (exists (?ob - beachball ?o1 - cube_block)
        (then
          (once (agent_holds ?p) )
          (hold (> (distance desk ?o1) 0.5) )
          (once (not (not (in_motion ?d) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 4 2 )
)
(:scoring
  (count throwFromBehindChairsInBin:beachball:pink)
)
)



(define (game game-id-822) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (and
      (not
        (or
          (on ?p ?g)
        )
      )
      (in_motion ?b)
    )
  )
)
(:constraints
  (and
    (preference ballThrownFromRug
      (exists (?d1 - game_object)
        (then
          (once (in_motion ?d1) )
          (once (agent_holds ?s) )
          (once (and (in ?d1 ?d) (agent_holds ?c) ) )
          (once (not (on ?d1 ?d1) ) )
        )
      )
    )
    (preference ballThrownToChair
      (exists (?o - golfball)
        (then
          (hold (in_motion ?o) )
          (once (agent_holds ?o) )
          (once (not (touch ?o ?b) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count ballThrownToChair:yellow:cube_block) 8 )
    16
  )
)
(:scoring
  (> (count-once-per-objects ballThrownFromRug:green) (+ (count ballThrownToChair) (external-forall-maximize (count-once-per-objects ballThrownToChair:doggie_bed:beachball) ) (count-once-per-objects ballThrownFromRug:cube_block) )
  )
)
)



(define (game game-id-823) (:domain medium-objects-room-v1)
(:setup
  (or
    (game-conserved
      (game_over )
    )
    (exists (?d - hexagonal_bin ?o - block)
      (and
        (forall (?c - game_object ?b - curved_wooden_ramp)
          (forall (?p - hexagonal_bin)
            (game-optional
              (game_over )
            )
          )
        )
      )
    )
    (forall (?d1 - game_object)
      (game-optional
        (not
          (agent_holds ?d)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference laptopAndBookInPlace
      (exists (?c - doggie_bed)
        (then
          (once (rug_color_under ?d ?c) )
        )
      )
    )
    (preference ballNeverThrown
      (exists (?o1 - hexagonal_bin)
        (then
          (once (in ?o1 ?o1) )
          (once (same_object ?o1 ?d) )
          (once (touch ?d ?o1) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (+ 3 (count-once-per-objects ballNeverThrown:dodgeball) )
  )
)
(:scoring
  (external-forall-maximize
    (* 4 (count ballNeverThrown:yellow:golfball) )
  )
)
)



(define (game game-id-824) (:domain few-objects-room-v1)
(:setup
  (exists (?s - (either cellphone))
    (game-optional
      (in_motion ?s)
    )
  )
)
(:constraints
  (and
    (forall (?r - block)
      (and
        (preference blockInTowerKnockedByDodgeball
          (exists (?f - hexagonal_bin)
            (at-end
              (in_motion ?d)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 4 5 )
)
(:scoring
  (external-forall-maximize
    (count-longest blockInTowerKnockedByDodgeball:dodgeball)
  )
)
)



(define (game game-id-825) (:domain medium-objects-room-v1)
(:setup
  (exists (?tb - block)
    (game-conserved
      (agent_holds ?t)
    )
  )
)
(:constraints
  (and
    (preference ballThrownFromBehindBlock
      (exists (?d - game_object)
        (then
          (once (forall (?o ?d - ball ?b - (either doggie_bed dodgeball chair) ?h - teddy_bear ?d - game_object) (faces ?c ?t) ) )
          (hold (not (not (in_motion ?d) ) ) )
          (once (in_motion rug) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 5 (count ballThrownFromBehindBlock:yellow_pyramid_block:red_pyramid_block) )
    (= (+ 3 (+ (count-once-per-objects ballThrownFromBehindBlock:green) 3 )
      )
      5
    )
  )
)
(:scoring
  (* 7 (* (* 1 5 )
      (>= (count ballThrownFromBehindBlock:dodgeball) 2 )
    )
  )
)
)



(define (game game-id-826) (:domain many-objects-room-v1)
(:setup
  (and
    (game-optional
      (not
        (game_start )
      )
    )
    (and
      (exists (?s - color)
        (and
          (and
            (game-optional
              (and
                (not
                  (on ?c3 ?r)
                )
                (and
                  (not
                    (and
                      (object_orientation ?s upside_down)
                      (agent_holds ?s)
                    )
                  )
                  (in ?s ?s)
                )
              )
            )
            (and
              (game-conserved
                (not
                  (agent_holds ?o1)
                )
              )
            )
            (forall (?o2 - ball)
              (game-conserved
                (agent_holds ?o5)
              )
            )
          )
          (game-conserved
            (in_motion green_golfball)
          )
        )
      )
    )
    (exists (?b - wall ?c - beachball)
      (exists (?c5 - curved_wooden_ramp)
        (and
          (forall (?t - curved_wooden_ramp ?ob - hexagonal_bin ?f - hexagonal_bin)
            (and
              (game-optional
                (in ?c5 ?c)
              )
            )
          )
          (and
            (game-conserved
              (on ?g ?c)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballFromBlockToBin
      (exists (?s - building)
        (then
          (once (not (and (not (and (on ?s ?s) (and (and (in_motion bed) (and (object_orientation ?r upright) (not (agent_holds ?d) ) (in_motion ?s) ) ) (not (in_motion ?o) ) (not (or (adjacent_side ?t1 ?s ?c) (on ?s ?d) ) ) ) ) ) (and (adjacent desk ?h) (and (agent_holds rug) (on ?t ?s) ) ) ) ) )
          (hold (in_motion ?b2) )
          (once (on ?h ?s) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (total-score) (total-time) )
      (= 2 (count dodgeballFromBlockToBin:pink_dodgeball:yellow:pink) )
    )
    (>= 2 (+ (* 3 3 )
        50
      )
    )
    (>= (total-time) (total-score) )
  )
)
(:scoring
  (count dodgeballFromBlockToBin:blue_dodgeball)
)
)



(define (game game-id-827) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?o4 - (either cellphone pyramid_block) ?b7 - hexagonal_bin)
      (and
        (forall (?s - (either cube_block dodgeball))
          (game-conserved
            (on agent agent)
          )
        )
      )
    )
    (exists (?w1 - (either laptop tall_cylindrical_block laptop))
      (exists (?h - building ?o - building ?t ?s ?p ?o ?o1 ?c2 - yellow_pyramid_block)
        (game-conserved
          (on ?o ?o1)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrowAttempt
      (exists (?l - hexagonal_bin)
        (then
          (once (agent_holds ?b) )
          (once (and (not (in_motion ?l) ) (and (in_motion ?l) (agent_holds ?l) ) ) )
          (once (touch top_drawer ?l) )
        )
      )
    )
    (preference dodgeballThrownToBinFromDesk
      (exists (?r ?c ?p3 ?c2 - building ?h - (either desktop block))
        (at-end
          (agent_holds ?h)
        )
      )
    )
    (preference golfballUnderBridgeWithoutTouchingBlock
      (exists (?t ?p ?c1 - chair)
        (then
          (once (not (and (agent_holds ?d) (on ?t ?d) (in ?p ?t) ) ) )
          (once (adjacent ?t ?c2) )
          (once (agent_holds ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (+ (count-once golfballUnderBridgeWithoutTouchingBlock:doggie_bed:basketball) (* 100 15 (count-overlapping golfballUnderBridgeWithoutTouchingBlock:red:beachball) )
    )
  )
)
(:scoring
  (* (count ballThrowAttempt:beachball:basketball) 20 )
)
)



(define (game game-id-828) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (< 1 8)
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?l - building ?b4 - hexagonal_bin)
        (then
          (once (in ?b4 ?b4) )
          (once (and (exists (?h - ball) (on ?c ?b4) ) (not (and (in_motion ?d) (in ?o ?b4) (> 1 (distance ?b2 rug)) ) ) (in_motion ?b4) (in_motion ?o) (not (agent_holds ?b4) ) (not (and (not (not (not (same_color ?g ?c) ) ) ) (and (or (not (agent_holds ?b4) ) (and (on ?b4 ?b4) (in_motion ?b) (and (exists (?p ?h - ball ?d - block) (adjacent ?b4 ?l) ) (not (= 1 (distance desk ?b4)) ) ) ) ) (not (not (not (in_motion ?b) ) ) ) (exists (?bl - chair) (in_motion ?d) ) ) ) ) (in ?r ?b4) ) )
          (once (on floor ?o2) )
        )
      )
    )
  )
)
(:terminal
  (<= (total-score) 3 )
)
(:scoring
  (count throwAttempt)
)
)



(define (game game-id-829) (:domain few-objects-room-v1)
(:setup
  (exists (?h ?b - building)
    (game-conserved
      (on ?h ?c)
    )
  )
)
(:constraints
  (and
    (preference ballToBinFromBed
      (exists (?ob - pyramid_block)
        (then
          (hold (game_over ) )
          (once (and (in ?s ?ob) (agent_holds ?ob) ) )
          (once (not (not (and (in_motion bed) (and (and (object_orientation ?l upright) (and (not (and (not (and (agent_holds ?ob) (agent_holds ?ob) ) ) (agent_holds ?l2) ) ) (< 1 7) ) ) (agent_holds ?b) ) ) ) ) )
        )
      )
    )
    (preference teddyBearLandsInBin
      (exists (?c - cube_block)
        (then
          (hold (in ?d ?c) )
          (hold (in_motion ?b1) )
          (hold (exists (?d - ball ?f - dodgeball) (not (agent_holds ?d) ) ) )
          (once (not (and (on ?h ?c) (on ?c ?g) ) ) )
        )
      )
    )
  )
)
(:terminal
  (> (= (* (count teddyBearLandsInBin:yellow) 6 )
      (count teddyBearLandsInBin:yellow)
    )
    (total-score)
  )
)
(:scoring
  (count-once-per-objects teddyBearLandsInBin:yellow)
)
)



(define (game game-id-830) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?b ?c1 - block)
      (exists (?c - (either yellow_cube_block desktop pillow))
        (exists (?h - hexagonal_bin)
          (forall (?c2 - (either dodgeball main_light_switch tall_cylindrical_block))
            (and
              (game-conserved
                (< 6 0.5)
              )
              (game-conserved
                (in_motion ?h)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference baseBlockInTowerAtEnd
      (exists (?p2 - cube_block)
        (then
          (once (and (on ?p2 bed) (not (and (not (on ?d ?b) ) ) ) ) )
          (once (on ?p2 ?p2) )
        )
      )
    )
    (preference dodgeballHitsBin
      (exists (?b1 - pyramid_block)
        (at-end
          (exists (?h - chair ?o - dodgeball)
            (in_motion ?b)
          )
        )
      )
    )
    (preference throwAttemptKnocksBlock
      (exists (?o - wall)
        (then
          (once (on ?c ?o) )
          (once (in_motion ?b) )
          (once (touch ?o ?o) )
        )
      )
    )
    (preference throwAttemptFromBehindBlock
      (exists (?d - (either doggie_bed dodgeball block) ?h - chair)
        (then
          (hold (in_motion ?h) )
          (hold (in_motion ?h) )
          (once (< (distance ?h ?t) 1) )
        )
      )
    )
    (preference ballThrowAttempt
      (exists (?d - dodgeball ?r - hexagonal_bin)
        (at-end
          (equal_x_position desk ?r)
        )
      )
    )
  )
)
(:terminal
  (>= 3 (- (- (count-once-per-objects baseBlockInTowerAtEnd:doggie_bed) )
    )
  )
)
(:scoring
  (* (count dodgeballHitsBin:golfball:yellow) 3 300 )
)
)



(define (game game-id-831) (:domain many-objects-room-v1)
(:setup
  (exists (?d - dodgeball)
    (exists (?l2 - green_triangular_ramp)
      (game-conserved
        (or
          (in_motion ?d)
          (and
            (in_motion ?d)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?p2 - hexagonal_bin ?w - dodgeball ?o - ball)
      (and
        (preference beachballBouncedOffRamp
          (exists (?s ?h - cube_block)
            (then
              (once (in_motion ?s) )
              (once (on ?l1 ?h) )
              (hold (agent_holds ?o) )
            )
          )
        )
        (preference blocksInPlace
          (exists (?b - (either cylindrical_block bed pink) ?w - triangular_ramp)
            (then
              (once (not (on ?h ?w) ) )
              (once (< 1 1) )
              (hold (and (not (and (in_motion ?w) (exists (?w - block ?c5 - (either dodgeball basketball)) (> 1 1) ) ) ) (exists (?p3 - block ?b ?d ?w2 - game_object) (in ?c ?c) ) ) )
            )
          )
        )
        (preference blindsOpened
          (exists (?r1 - cube_block)
            (at-end
              (in agent ?r1)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) 5 )
)
(:scoring
  (+ 4 (count-once-per-objects blocksInPlace:hexagonal_bin:blue_dodgeball) )
)
)



(define (game game-id-832) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (not
      (in ?b ?s)
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?h ?c2 - cube_block)
        (then
          (hold (in ?w2 ?b) )
          (once (and (object_orientation ?o2 upright) (game_start ) (touch ?b ?b) ) )
          (hold (in_motion ?h) )
        )
      )
    )
    (preference redDodgeballThrownToBinWithoutTouchingFloor
      (exists (?t2 - beachball)
        (then
          (once (and (and (not (is_setup_object ?t2) ) (and (< (distance_side ?t2 front ?c2) 0.5) (on ?t2 ?d) (and (and (agent_holds ?t2) (and (and (in ?p rug) (and (< (distance ?t2 rug) (distance ?t2 ?b)) (in_motion ?o2) ) ) (and (< 8 1) (not (< (distance_side agent front ?t2) 2) ) ) ) (and (not (and (not (in_motion ?b) ) (in_motion ?t2) ) ) (and (not (not (above ?d ?t2) ) ) (exists (?o3 - drawer ?tb - (either pyramid_block tall_cylindrical_block)) (agent_holds ?tb) ) (and (in_motion ?b) (on ?t2 ?t2) ) (game_over ) ) (on agent ?t2) ) ) (agent_holds ?t2) ) ) (same_type ?b ?t2) ) (not (same_type ?b2 block) ) ) )
          (once (is_setup_object ?t2) )
          (once (agent_holds agent) )
        )
      )
    )
    (forall (?r1 - block)
      (and
        (preference blockCorrectlyPicked
          (exists (?h - dodgeball)
            (then
              (hold (in ?h ?t) )
              (hold (and (= 0.5 0 (x_position ?t)) (< 0.5 2) ) )
              (once (on ?h ?o) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (+ 3 (count-once-per-external-objects blockCorrectlyPicked:beachball) )
      (total-time)
    )
    (and
      (and
        (> (external-forall-maximize (count-once-per-objects throwAttempt:basketball:beachball) ) (* (* (* (count-once redDodgeballThrownToBinWithoutTouchingFloor:beachball:yellow) (count throwAttempt:basketball) )
              (count-measure blockCorrectlyPicked:beachball:pink_dodgeball)
              (+ (* (count-once-per-objects blockCorrectlyPicked:doggie_bed) (* 10 (* (count-once-per-objects redDodgeballThrownToBinWithoutTouchingFloor:golfball:golfball) (count throwAttempt:blue_dodgeball) )
                  )
                )
                (count throwAttempt:triangle_block)
              )
            )
            4
          )
        )
        (>= (* (count-overlapping throwAttempt:dodgeball) (* (count throwAttempt:dodgeball) 3 )
          )
          (* 20 (count throwAttempt:blue_cube_block:pink) 3 )
        )
      )
    )
    (or
      (or
        (>= (total-score) (count throwAttempt:red) )
        (>= 100 (count-once-per-objects blockCorrectlyPicked:doggie_bed) )
      )
      (>= (total-score) 4 )
    )
  )
)
(:scoring
  (count blockCorrectlyPicked:red)
)
)



(define (game game-id-833) (:domain medium-objects-room-v1)
(:setup
  (forall (?bl - hexagonal_bin)
    (game-optional
      (not
        (in_motion ?h)
      )
    )
  )
)
(:constraints
  (and
    (preference objectWithMatchingColor
      (exists (?d - hexagonal_bin)
        (then
          (hold-while (in_motion ?b) (agent_holds ?d) )
          (once (game_start ) )
          (hold (and (in_motion ?d) (touch ?o ?b) ) )
        )
      )
    )
    (preference throwFromBehindChairsInBin
      (exists (?c - block)
        (then
          (hold (and (and (not (same_type ?c ?c) ) (in_motion ?c) ) (on ?c bed) ) )
          (once (agent_holds ?w1) )
          (hold (exists (?b ?c - hexagonal_bin) (not (not (equal_x_position ?w2 ?b) ) ) ) )
        )
      )
    )
    (forall (?o - yellow_cube_block)
      (and
        (preference ballInOrOnBin
          (then
            (once (same_color ?d ?o) )
            (hold (adjacent_side ?c front agent) )
            (once (not (and (agent_holds ?w2) (agent_holds ?o) ) ) )
          )
        )
        (preference dodgeballHitsPillowWithoutTouchingBlock
          (exists (?h - shelf ?b2 - shelf)
            (then
              (once (and (and (not (and (agent_holds ?o) (agent_holds ?b) (not (adjacent room_center ?s) ) ) ) (agent_holds desk) ) (on ?g ?b) (touch ?o ?d) ) )
              (once (and (on rug ?b2) (equal_z_position ?h ?t) ) )
              (once (adjacent_side room_center front ?b back) )
            )
          )
        )
      )
    )
    (forall (?r2 - (either pillow yellow_cube_block) ?f - (either teddy_bear dodgeball))
      (and
        (preference throwAttemptKnocksBlock
          (exists (?c1 - block)
            (then
              (hold-while (not (in_motion ?o2) ) (touch ?h ?c1) (and (not (equal_x_position agent ?c1) ) (adjacent bed ?f) ) (agent_holds ?b) )
              (once (in_motion ?f) )
            )
          )
        )
        (preference redDodgeballThrownToBin
          (then
            (once (not (and (not (touch bed ?b) ) (adjacent ?d ?o) (and (on ?g desk) (not (not (not (in_motion ?d) ) ) ) ) ) ) )
            (once (and (broken ?f) (or (adjacent ?f ?d) (in ?f ?f) ) ) )
            (once (and (agent_holds ?g) (touch ?f ?f) (< 2 0) ) )
          )
        )
      )
    )
    (preference objectInBuilding
      (exists (?b - desk_shelf)
        (then
          (hold (on ?b ?h) )
          (once (is_setup_object ?b) )
          (once (not (not (on ?b5 ?l1) ) ) )
        )
      )
    )
    (forall (?p - dodgeball)
      (and
        (preference throwAttempt
          (then
            (once (and (in_motion ?p) (exists (?b8 ?l2 - triangular_ramp) (adjacent ?l2 ?b) ) ) )
            (hold (not (not (in_motion ?p1) ) ) )
            (hold-while (and (and (not (not (not (in_motion ?h) ) ) ) (in_motion ?t) ) (not (and (in ?p ?p) (and (> (distance agent ?p) (distance ?p agent)) (touch ?o ?b) (< (distance bed floor) (distance door ?p)) ) ) ) ) (not (in_motion ?p) ) )
          )
        )
        (preference blockOnBlockInTowerAtEnd
          (exists (?h - cube_block)
            (at-end
              (not
                (in ?h ?p)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (count redDodgeballThrownToBin:brown:cube_block:beachball) (total-time) )
  )
)
(:scoring
  (= 3 (= (* 0.5 4 )
      (count-once-per-external-objects blockOnBlockInTowerAtEnd:dodgeball)
    )
  )
)
)



(define (game game-id-834) (:domain few-objects-room-v1)
(:setup
  (and
    (game-conserved
      (< 1 5)
    )
  )
)
(:constraints
  (and
    (preference blockPickedUp
      (exists (?p3 - hexagonal_bin)
        (then
          (once (on rug ?p3) )
          (once (and (not (broken ?p3) ) (agent_holds ?p3) ) )
          (once (not (agent_holds ?g) ) )
          (once (not (in_motion ?p3) ) )
        )
      )
    )
  )
)
(:terminal
  (= 100 (count blockPickedUp:dodgeball) )
)
(:scoring
  (count blockPickedUp:green)
)
)



(define (game game-id-835) (:domain few-objects-room-v1)
(:setup
  (forall (?c - green_triangular_ramp)
    (exists (?f - cube_block)
      (game-conserved
        (adjacent ?r ?b)
      )
    )
  )
)
(:constraints
  (and
    (preference bigObjectThrownToBed
      (exists (?w2 - game_object)
        (then
          (hold (forall (?h - (either cylindrical_block wall mug)) (not (and (in ?b2 ?w2) (and (not (on ?d agent) ) (and (exists (?h - dodgeball) (on ?d ?w2) ) (and (in ?w2 ?w2) (not (agent_holds ?w2) ) (in_motion ?g) ) ) ) (and (not (agent_holds ?g) ) (adjacent_side agent ?h ?h) ) (not (>= 4 (x_position ?d)) ) (exists (?o - hexagonal_bin ?c6 - game_object) (and (not (not (and (agent_holds ?h) (in ?b ?w2) ) ) ) (not (and (on ?c ?h) (and (in ?w2 ?d) (is_setup_object ?h) (on ?p2 agent) ) ) ) (agent_holds desktop) (not (and (in_motion ?b) (adjacent ?h ?c6) (not (> (distance_side rug front ?l) 1) ) ) ) ) ) (on agent ?h) ) ) ) )
          (once (and (and (touch ?b ?w2) (not (and (adjacent bed bed) (adjacent_side desk front ?w2 ?w2) ) ) ) (not (not (on ?o1 ?w2) ) ) ) )
          (hold-while (and (not (not (object_orientation ?l1 upright) ) ) (not (in ?w2 ?w2) ) ) (not (not (on ?w2 ?w2) ) ) )
        )
      )
    )
    (forall (?c - wall ?o - hexagonal_bin)
      (and
        (preference blueObjectMovedToRoomCenter
          (exists (?o1 ?b - (either main_light_switch dodgeball) ?c - teddy_bear)
            (then
              (hold (agent_holds ?d) )
              (hold (touch ?o ?o) )
              (hold-while (and (toggled_on ?o) (object_orientation ?l upright) ) (agent_holds ?b) (on bed ?c) )
              (hold (exists (?b6 - building) (agent_holds ?d1) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> 5 2 )
)
(:scoring
  (+ (count bigObjectThrownToBed) (count blueObjectMovedToRoomCenter:beachball:basketball) )
)
)



(define (game game-id-836) (:domain many-objects-room-v1)
(:setup
  (exists (?o2 - hexagonal_bin)
    (exists (?b4 - hexagonal_bin)
      (game-conserved
        (on ?b4 ?b4)
      )
    )
  )
)
(:constraints
  (and
    (preference smallItemsInPlace
      (exists (?t1 - curved_wooden_ramp)
        (then
          (hold (in_motion ?t1) )
          (once (and (not (forall (?bl - pillow) (and (touch ?t1 ?b) (adjacent desk ?h) ) ) ) (toggled_on ?t1) (= 1 1) (not (adjacent agent ?d) ) (in_motion agent) (in_motion ?t1) (in ?t1 ?b) (in_motion ?d) ) )
          (once (agent_holds ?t1) )
        )
      )
    )
  )
)
(:terminal
  (>= (external-forall-maximize (- 2 (count smallItemsInPlace:bed:beachball:purple) ) ) (count-once smallItemsInPlace:beachball:book) )
)
(:scoring
  (+ 10 (* (count smallItemsInPlace:white) 6 )
  )
)
)



(define (game game-id-837) (:domain many-objects-room-v1)
(:setup
  (forall (?h - watch)
    (forall (?b8 - doggie_bed ?b3 - flat_block)
      (and
        (game-conserved
          (on ?h ?b3)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwInBin
      (exists (?o2 - (either side_table dodgeball book))
        (then
          (once (in_motion ?o2) )
          (once (not (not (same_color ?h ?o2) ) ) )
          (once (and (in_motion ?o2) (not (exists (?p - hexagonal_bin ?b - red_dodgeball) (and (< 2 1) (and (and (in_motion ?o2) (and (and (in_motion ?c) (agent_holds floor) ) (above ?b ?d) ) ) (not (or (in_motion ?b) ) ) ) (and (and (in ?b4 west_wall) (on ?p2 ?b) ) (and (equal_z_position door rug) (not (and (on ?b ?o2) (agent_holds ?d) ) ) ) (not (adjacent agent ?b) ) ) ) ) ) (same_type ?o2 ?o2) ) )
        )
      )
    )
    (preference blockInTowerAtEnd
      (exists (?t - teddy_bear)
        (at-end
          (not
            (not
              (not
                (exists (?p2 - wall)
                  (in_motion ?b)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (count blockInTowerAtEnd:hexagonal_bin) )
)
(:scoring
  (- (* 2 1 )
  )
)
)



(define (game game-id-838) (:domain few-objects-room-v1)
(:setup
  (exists (?d - doggie_bed ?b - dodgeball)
    (and
      (game-conserved
        (in_motion ?b)
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - game_object ?c - doggie_bed)
      (and
        (preference ballInOrOnBin
          (exists (?o - (either credit_card dodgeball))
            (then
              (once (and (not (< (distance rug ?c1) 1) ) (= 1 (distance ?h ?o)) ) )
              (hold (in_motion ?c1) )
              (hold (or (not (agent_holds ?d) ) (on ?o ?b) (on ?o ?c1) ) )
            )
          )
        )
        (preference beachballOnRug
          (exists (?c - hexagonal_bin)
            (then
              (hold (not (and (not (not (and (= (distance_side desk ?c ?c) (x_position ?c)) (not (agent_holds ?c) ) ) ) ) (in_motion ?c) ) ) )
              (hold (not (same_color ?c pink) ) )
              (once (in ?c ?d) )
            )
          )
        )
        (preference thrownBallHitsBlock
          (exists (?h - hexagonal_bin)
            (then
              (hold (and (agent_holds ?h) (not (not (adjacent desk ?c) ) ) (open ?d) (in_motion ?c) ) )
              (once (rug_color_under ?d pink) )
              (once (and (not (not (is_setup_object ?d) ) ) (adjacent ?h ?d) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (total-time) 30 )
)
(:scoring
  (count ballInOrOnBin:hexagonal_bin:yellow)
)
)



(define (game game-id-839) (:domain medium-objects-room-v1)
(:setup
  (exists (?d2 - building ?c - triangular_ramp ?w - building)
    (forall (?f - hexagonal_bin)
      (exists (?r - pillow ?tb ?h ?o4 ?c ?o ?w ?b ?b ?l ?b1 - dodgeball)
        (exists (?p - game_object)
          (and
            (exists (?d - block ?r - triangular_ramp ?b1 ?h - game_object ?c3 - cube_block ?l4 - hexagonal_bin)
              (exists (?h - block ?h - game_object ?b - dodgeball)
                (exists (?t1 - hexagonal_bin)
                  (and
                    (exists (?c - dodgeball)
                      (game-optional
                        (on ?o ?g)
                      )
                    )
                    (and
                      (exists (?d - ball)
                        (forall (?b1 - wall)
                          (and
                            (exists (?g - (either dodgeball golfball cd cellphone top_drawer) ?c2 - block)
                              (and
                                (forall (?r2 - wall)
                                  (game-optional
                                    (adjacent ?h ?l)
                                  )
                                )
                              )
                            )
                            (game-optional
                              (not
                                (< (distance ?t1 ?w) (distance ?d floor))
                              )
                            )
                          )
                        )
                      )
                      (exists (?b7 ?l ?r ?d ?c ?d - hexagonal_bin)
                        (game-conserved
                          (< 1 7)
                        )
                      )
                    )
                    (game-optional
                      (not
                        (touch ?l4 ?c1)
                      )
                    )
                    (and
                      (and
                        (forall (?c - hexagonal_bin)
                          (and
                            (forall (?c - dodgeball ?tb - hexagonal_bin)
                              (game-optional
                                (not
                                  (on ?b ?o)
                                )
                              )
                            )
                            (game-optional
                              (in_motion ?b)
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference beachballBouncedOffRamp
      (exists (?b - dodgeball)
        (then
          (once (agent_holds ?h) )
          (once (in_motion ?o3) )
          (once (in_motion ?b) )
        )
      )
    )
  )
)
(:terminal
  (> (total-time) (count-once beachballBouncedOffRamp:dodgeball:white) )
)
(:scoring
  (external-forall-maximize
    (count-once beachballBouncedOffRamp:dodgeball)
  )
)
)



(define (game game-id-840) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?b - hexagonal_bin ?c1 - wall)
      (exists (?o4 ?s - (either key_chain pen golfball) ?p2 - ball ?b - hexagonal_bin)
        (game-conserved
          (not
            (agent_holds ?b)
          )
        )
      )
    )
    (forall (?c - ball ?o - beachball ?c ?t1 - building)
      (exists (?p3 - building)
        (game-optional
          (in_motion ?d)
        )
      )
    )
    (and
      (exists (?b - building)
        (game-optional
          (on ?b ?b)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballHitsBinBottom
      (exists (?p1 - block ?h - game_object ?l - dodgeball)
        (then
          (hold (and (not (in_motion ?l) ) (in_motion ?l) ) )
          (once (in_motion ?l) )
          (once (on ?b ?h) )
        )
      )
    )
  )
)
(:terminal
  (< (* (count dodgeballHitsBinBottom:basketball) (count-once dodgeballHitsBinBottom:beachball) )
    (* (* (count-once-per-objects dodgeballHitsBinBottom:blue) (count-once-per-objects dodgeballHitsBinBottom:hexagonal_bin) )
      300
    )
  )
)
(:scoring
  (* 1 (* (count-once dodgeballHitsBinBottom:dodgeball:beachball) (count dodgeballHitsBinBottom:book:book) )
  )
)
)



(define (game game-id-841) (:domain many-objects-room-v1)
(:setup
  (forall (?b - dodgeball)
    (game-optional
      (not
        (not
          (and
            (not
              (not
                (< (distance desk ?r) 6)
              )
            )
            (on ?b ?b)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference failedThrowAttempt
      (exists (?c ?b ?h - teddy_bear)
        (then
          (once (on ?c ?b) )
          (hold (agent_holds ?h) )
          (once (and (rug_color_under ?c pink) (not (not (not (and (touch ?s ?h) (in_motion ?d) (same_color ?b pink) ) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (> (total-score) (total-score) )
)
(:scoring
  (count failedThrowAttempt:orange)
)
)



(define (game game-id-842) (:domain many-objects-room-v1)
(:setup
  (exists (?b9 ?tb - curved_wooden_ramp ?b - color)
    (and
      (forall (?t - drawer)
        (exists (?l2 - dodgeball)
          (exists (?h - building ?w1 - hexagonal_bin)
            (game-optional
              (< (x_position ?d) 0.5)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToBinFromOppositeWall
      (exists (?p1 - (either triangle_block beachball))
        (then
          (hold (and (or (and (in_motion ?p) (in ?b4 ?d) ) (in ?p1 ?r) ) (in_motion ?b) ) )
          (hold-while (not (< 3 (distance ?c ?l)) ) (and (in ?p1 ?c2) (touch ?l1 rug) (in_motion ?p1) ) (in_motion ?p1) )
          (once (same_color ?b ?p1) )
        )
      )
    )
    (forall (?l2 ?w2 ?c6 - pyramid_block)
      (and
        (preference throwBallToDoggieBed
          (exists (?d - dodgeball)
            (then
              (once (adjacent agent ?l2) )
              (once (touch ?l ?l2) )
              (hold (agent_holds ?d) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects throwBallToDoggieBed) (count throwToBinFromOppositeWall:dodgeball) )
)
(:scoring
  (external-forall-minimize
    (count-once throwToBinFromOppositeWall:purple)
  )
)
)



(define (game game-id-843) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?b ?o1 ?d ?d ?b4 ?o - hexagonal_bin ?d - hexagonal_bin)
      (and
        (forall (?h - hexagonal_bin)
          (game-conserved
            (in_motion ?h)
          )
        )
        (forall (?b - game_object ?o - ball)
          (game-conserved
            (not
              (in_motion ?d)
            )
          )
        )
      )
    )
    (and
      (exists (?p - tan_cube_block ?c - hexagonal_bin)
        (exists (?o - cube_block)
          (and
            (exists (?s - game_object)
              (exists (?l - golfball)
                (exists (?h - doggie_bed)
                  (and
                    (game-optional
                      (not
                        (agent_holds top_drawer)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?s - hexagonal_bin)
      (and
        (preference throwFromBehindChairsInBin
          (exists (?t - doggie_bed)
            (then
              (hold-while (and (in_motion ?d) (on ?l ?t) ) (and (agent_crouches ) (in bed ?s) ) (< 1 (distance agent ?b)) )
              (once (< (distance_side ?h front ?t front) 1) )
              (once (> (distance room_center ?s) 1) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (count throwFromBehindChairsInBin:pink_dodgeball) (count-once-per-objects throwFromBehindChairsInBin:basketball) )
)
(:scoring
  (* (* (* (+ (/ (count-once throwFromBehindChairsInBin:beachball) 4 ) (count-unique-positions throwFromBehindChairsInBin:beachball:dodgeball:yellow) )
        0
      )
      (* 5 8 )
      (+ 1 (+ (- 10 )
          5
          (count-unique-positions throwFromBehindChairsInBin:dodgeball:yellow)
        )
      )
      (- (count throwFromBehindChairsInBin:basketball:block) )
      2
      5
    )
    1
  )
)
)



(define (game game-id-844) (:domain few-objects-room-v1)
(:setup
  (exists (?t - chair ?b1 - dodgeball ?g - yellow_cube_block)
    (exists (?c6 - dodgeball)
      (game-optional
        (in_motion ?b)
      )
    )
  )
)
(:constraints
  (and
    (preference blockCorrectlyPicked
      (exists (?o4 - cube_block ?bl - ball)
        (then
          (hold (or (in ?bl ?d) (and (in_motion ?bl) (agent_holds ?l1) (in_motion rug) (agent_holds ?d) ) ) )
          (hold-while (in_motion ?h) (exists (?o4 - building) (touch ?d1 ?o4) ) (open ?p) )
        )
      )
    )
  )
)
(:terminal
  (or
    (<= 2 (total-time) )
    (>= 1 (count-once-per-objects blockCorrectlyPicked:yellow_cube_block) )
  )
)
(:scoring
  (count blockCorrectlyPicked)
)
)



(define (game game-id-845) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?w2 - red_dodgeball)
      (forall (?c4 - game_object)
        (exists (?b - doggie_bed)
          (forall (?b3 - ball)
            (game-conserved
              (in ?b ?b3)
            )
          )
        )
      )
    )
    (and
      (exists (?w1 - (either pyramid_block book desktop) ?t - dodgeball ?c - hexagonal_bin)
        (and
          (game-conserved
            (on ?c ?c)
          )
        )
      )
    )
    (game-conserved
      (object_orientation ?b3 sideways)
    )
  )
)
(:constraints
  (and
    (preference blockPlacedInBuilding
      (exists (?p - wall)
        (then
          (once (faces ?h ?d) )
          (once (agent_holds ?d) )
          (once (not (agent_holds ?p) ) )
          (once (in_motion ?h) )
        )
      )
    )
  )
)
(:terminal
  (or
    (> 5 5 )
    (not
      (>= 2 (total-score) )
    )
  )
)
(:scoring
  (count blockPlacedInBuilding:doggie_bed)
)
)



(define (game game-id-846) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?o1 - building ?b - (either dodgeball tall_cylindrical_block blue_cube_block) ?h - pyramid_block ?d - hexagonal_bin ?b - doggie_bed)
      (game-conserved
        (on ?b ?b)
      )
    )
    (game-optional
      (adjacent ?d ?h)
    )
  )
)
(:constraints
  (and
    (preference laptopAndBookInPlace
      (exists (?d - desk_shelf ?h - chair)
        (then
          (once (not (and (adjacent south_wall rug) (and (above ?h ?h) (in ?h ?c) ) ) ) )
          (hold (and (and (and (and (and (agent_holds ?h) ) (and (adjacent desk ?h) ) ) (on ?h ?h) (not (touch ?h ?h) ) (adjacent_side ?r front ?c) ) (and (not (= 1 1) ) (not (touch ?d ?c) ) ) (adjacent ?h ?h) ) (in_motion ?h) (and (not (exists (?o2 - ball) (and (and (and (on ?o2 ?h) (on ?o2 ?o2) ) (agent_holds ?o2) (on ?h ?o1) ) (touch ?g ?o2) ) ) ) (and (not (not (exists (?bl - ball) (not (or (or (touch ?t ?h) (not (in_motion desk) ) ) (touch ?b ?d) ) ) ) ) ) (exists (?c3 - ball ?c6 - wall ?b - blue_pyramid_block) (in_motion floor) ) (not (adjacent ?h ?h) ) ) ) (and (and (and (agent_holds ?bl) (not (not (< (distance west_wall ?h) (building_size ?h)) ) ) ) (open ?h) (between ?d ?h ?o) (not (< 9 1) ) ) ) (same_color ?b ?h) (and (not (exists (?d - (either dodgeball dodgeball)) (agent_holds desk) ) ) (not (and (in_motion ?h) (in_motion ?b) ) ) ) ) )
          (hold (game_start ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (or
        (>= (count laptopAndBookInPlace:beachball) (/ (count laptopAndBookInPlace:yellow:beachball) 2 ) )
        (or
          (or
            (> (+ (count-once laptopAndBookInPlace:red:green:red) (count-once-per-objects laptopAndBookInPlace:basketball) )
              (* 2 (count-once-per-objects laptopAndBookInPlace:dodgeball) 2 (count laptopAndBookInPlace:cube_block:blue_pyramid_block) (count laptopAndBookInPlace:blue_pyramid_block) (count laptopAndBookInPlace:red) )
            )
            (>= (total-score) (total-score) )
            (>= (= 12 (count-once-per-objects laptopAndBookInPlace:brown) )
              (total-score)
            )
          )
        )
      )
    )
    (>= 18 (* 0.7 (+ (* (count-same-positions laptopAndBookInPlace:golfball) (* 5 (count-once-per-external-objects laptopAndBookInPlace) )
          )
          (count-once-per-objects laptopAndBookInPlace:red)
        )
        (count-once-per-objects laptopAndBookInPlace:red:dodgeball)
      )
    )
  )
)
(:scoring
  (* (count-increasing-measure laptopAndBookInPlace) 0.5 )
)
)



(define (game game-id-847) (:domain few-objects-room-v1)
(:setup
  (exists (?s - block ?h - (either floor key_chain cylindrical_block curved_wooden_ramp teddy_bear main_light_switch hexagonal_bin))
    (forall (?h - dodgeball)
      (or
        (forall (?l - block)
          (game-optional
            (and
              (and
                (agent_holds ?h)
                (< 1 10)
                (not
                  (not
                    (and
                      (agent_holds ?b)
                      (and
                        (agent_holds ?b)
                      )
                    )
                  )
                )
              )
              (object_orientation west_wall upright)
            )
          )
        )
        (game-conserved
          (same_color ?b blue)
        )
        (and
          (game-conserved
            (exists (?w - wall)
              (not
                (agent_holds ?d)
              )
            )
          )
          (game-optional
            (not
              (and
                (object_orientation ?h ?h)
                (and
                  (< 5 (distance ?c ?c))
                  (touch ?h ?g)
                )
                (not
                  (not
                    (in_motion ?h)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference pillowThrownToDoggieBed
      (exists (?h ?ob - pillow)
        (then
          (once (agent_holds ?c) )
          (hold-while (and (in_motion ?c) (opposite ?h floor) ) (and (touch ?h ?ob) (< (distance ?h ?ob) (distance agent ?ob)) (not (and (>= (distance ?h ?ob) 1) (exists (?o - hexagonal_bin) (and (adjacent_side bed front ?d) (not (game_start ) ) ) ) ) ) ) )
          (hold-while (equal_x_position room_center ?c2) (agent_holds ?l) )
        )
      )
    )
    (preference throwAttemptKnocksBlock
      (exists (?w - shelf)
        (then
          (once (not (and (= 1 7) (not (and (and (not (in_motion ?w) ) (not (on ?w ?w) ) (in_motion ?w) ) (object_orientation ?w sideways) ) ) ) ) )
          (hold (agent_holds ?w) )
          (once (not (on ?d ?d) ) )
        )
      )
    )
  )
)
(:terminal
  (<= (total-time) (count pillowThrownToDoggieBed:purple) )
)
(:scoring
  (count throwAttemptKnocksBlock:pink)
)
)



(define (game game-id-848) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (touch ?r ?w1)
  )
)
(:constraints
  (and
    (preference baseBlockInTowerAtEnd
      (exists (?p1 - game_object)
        (at-end
          (in_motion ?p1)
        )
      )
    )
    (preference throwFromBehindChairsInBin
      (exists (?c - (either key_chain golfball golfball cellphone mug alarm_clock wall))
        (then
          (hold (agent_holds ?c) )
          (once (not (exists (?b1 - (either bridge_block cube_block)) (agent_holds agent) ) ) )
          (hold (not (not (not (touch ?c ?h) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (count baseBlockInTowerAtEnd:hexagonal_bin:dodgeball) 0.5 )
    (or
      (< (count throwFromBehindChairsInBin:blue_cube_block) (* 2 (* (* (count-same-positions throwFromBehindChairsInBin:red:purple) 15 (* 5 (* (count-overlapping throwFromBehindChairsInBin:yellow) (count-once baseBlockInTowerAtEnd) 100 5 5 3 )
                10
                1
              )
              (* (* 9 6 )
                (count-once throwFromBehindChairsInBin:golfball:hexagonal_bin)
              )
              (count throwFromBehindChairsInBin:dodgeball:top_drawer)
              1
            )
            (count-once-per-objects throwFromBehindChairsInBin:golfball)
          )
        )
      )
      (>= (total-time) (total-score) )
    )
  )
)
(:scoring
  (count baseBlockInTowerAtEnd:yellow:yellow)
)
)



(define (game game-id-849) (:domain few-objects-room-v1)
(:setup
  (forall (?b7 - pillow)
    (and
      (exists (?d - hexagonal_bin ?o1 - game_object ?h - shelf)
        (exists (?d - cube_block ?d - hexagonal_bin)
          (exists (?p3 - book)
            (and
              (and
                (exists (?h - building ?tb - hexagonal_bin)
                  (and
                    (game-optional
                      (touch ?b ?d)
                    )
                    (and
                      (game-conserved
                        (not
                          (not
                            (< 1 (distance ?tb ?b7))
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference woodenBlockMovedFromRugToDesk
      (exists (?l4 - chair ?o1 - dodgeball)
        (at-end
          (in ?l west_wall)
        )
      )
    )
  )
)
(:terminal
  (< (count-once woodenBlockMovedFromRugToDesk:beachball) (+ (* (count woodenBlockMovedFromRugToDesk:basketball:yellow_cube_block) (count woodenBlockMovedFromRugToDesk:red:pink_dodgeball) )
      (count-once-per-objects woodenBlockMovedFromRugToDesk:dodgeball)
      (+ (count-once-per-objects woodenBlockMovedFromRugToDesk:pink_dodgeball) 6 )
    )
  )
)
(:scoring
  (+ (count woodenBlockMovedFromRugToDesk:yellow) (count-once-per-objects woodenBlockMovedFromRugToDesk:beachball) 10 (count-once-per-objects woodenBlockMovedFromRugToDesk:beachball) (external-forall-minimize (+ 6 (external-forall-minimize (count woodenBlockMovedFromRugToDesk:dodgeball) ) )
    )
    (* (external-forall-maximize (count-once-per-objects woodenBlockMovedFromRugToDesk:dodgeball) ) (count-once-per-external-objects woodenBlockMovedFromRugToDesk:basketball) )
    (* (count woodenBlockMovedFromRugToDesk:top_drawer) (* (+ (+ 40 (* 1 4 )
            2
            (+ (- 2 )
              (* (* 15 (* (external-forall-minimize (count-overlapping woodenBlockMovedFromRugToDesk:book:red_pyramid_block) ) 9 )
                )
                (+ 3 300 (* (count woodenBlockMovedFromRugToDesk:side_table) (- 6 )
                    (count woodenBlockMovedFromRugToDesk:dodgeball)
                  )
                )
                (count woodenBlockMovedFromRugToDesk:golfball)
                (count woodenBlockMovedFromRugToDesk:orange)
              )
              (count-unique-positions woodenBlockMovedFromRugToDesk:pink)
            )
          )
          (* (* (count-once-per-objects woodenBlockMovedFromRugToDesk:pink) (* (count-once woodenBlockMovedFromRugToDesk:blue_dodgeball:blue_pyramid_block) (count woodenBlockMovedFromRugToDesk:purple) )
            )
            2
          )
        )
        (count woodenBlockMovedFromRugToDesk:basketball)
      )
      (count-once-per-objects woodenBlockMovedFromRugToDesk:dodgeball)
      7
      (* (<= (* (count-total woodenBlockMovedFromRugToDesk:beachball) 2 )
          (* 10 20 )
        )
        4
      )
      3
    )
    (* (count woodenBlockMovedFromRugToDesk:doggie_bed) (* (count woodenBlockMovedFromRugToDesk:pink:doggie_bed) 1 )
    )
    3
  )
)
)



(define (game game-id-850) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?d ?b - (either flat_block book yellow_cube_block))
      (game-conserved
        (in_motion ?l1)
      )
    )
  )
)
(:constraints
  (and
    (preference pyramidBlockAtopTowerAtEnd
      (exists (?b1 - hexagonal_bin)
        (then
          (once (= 2 (distance ?b1 ?b1)) )
          (once (and (not (and (not (not (and (and (in_motion ?d) (and (and (and (not (not (game_start ) ) ) (in_motion ?o1) (adjacent ?b1 ?b1) ) (not (and (on ?d ?b1) (not (not (not (and (= 9) (= 5 (distance ?h ?b1)) ) ) ) ) ) ) ) (agent_holds ?b1) ) ) (and (object_orientation ?b1 upright) (and (not (in_motion ?b1) ) (not (and (not (adjacent desk ?b5) ) (agent_holds ?b1) ) ) (not (in_motion ?c) ) ) ) (not (agent_holds ?d) ) ) ) ) (not (agent_holds ?b1) ) ) ) (in ?h ?b) (in_motion ?b1) ) )
          (hold (game_over ) )
          (once (in ?l ?d) )
          (once (on ?b1 ?b1) )
        )
      )
    )
    (preference blockIncorrectlyPicked
      (exists (?l ?x - wall ?h - hexagonal_bin)
        (at-end
          (in_motion ?h)
        )
      )
    )
  )
)
(:terminal
  (>= (* (count-measure pyramidBlockAtopTowerAtEnd:pink_dodgeball:beachball) 2 )
    1
  )
)
(:scoring
  (* (* (* 10 (* 15 (* 4 (count blockIncorrectlyPicked:side_table) )
        )
        (* (count-once-per-external-objects pyramidBlockAtopTowerAtEnd:purple:green) (- (count-longest blockIncorrectlyPicked:blue_pyramid_block) )
          5
        )
        (* (* (count-once pyramidBlockAtopTowerAtEnd:dodgeball) 1 )
          (count-once-per-objects blockIncorrectlyPicked:beachball)
        )
        (count blockIncorrectlyPicked:red_pyramid_block:dodgeball)
        (count-once-per-objects blockIncorrectlyPicked:doggie_bed:orange)
      )
      5
    )
    (count blockIncorrectlyPicked:blue_pyramid_block)
  )
)
)



(define (game game-id-851) (:domain medium-objects-room-v1)
(:setup
  (exists (?c2 - triangular_ramp ?t - bridge_block)
    (and
      (and
        (and
          (and
            (forall (?d - hexagonal_bin ?b5 - hexagonal_bin)
              (game-conserved
                (and
                  (in ?t ?d)
                  (forall (?b - hexagonal_bin)
                    (< (distance room_center ?b) (distance ?d ?b))
                  )
                )
              )
            )
          )
        )
      )
      (forall (?c - color ?h - hexagonal_bin)
        (game-optional
          (agent_holds ?s)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballsInPlace
      (exists (?r - cube_block)
        (then
          (hold (= (distance west_wall ?r) (distance ?w2 ?l) 6 (distance ?r ?d)) )
          (once (not (agent_holds ?c) ) )
          (once (and (in_motion ?t1) (or (object_orientation rug upright) (not (same_color ?r ?r) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (> (* 15 (count-once-per-objects dodgeballsInPlace:golfball) )
    20
  )
)
(:scoring
  (count dodgeballsInPlace:beachball)
)
)



(define (game game-id-852) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds rug)
  )
)
(:constraints
  (and
    (preference towerFallsWhileBuilding
      (exists (?d - flat_block)
        (at-end
          (exists (?h - block)
            (not
              (between bed ?d ?d)
            )
          )
        )
      )
    )
    (preference dodgeballThrownToBinFromDesk
      (exists (?bl - (either golfball beachball blue_cube_block doggie_bed) ?h - hexagonal_bin)
        (then
          (hold (in ?h ?h) )
          (once (same_color ?d yellow) )
          (once (agent_holds ?h) )
        )
      )
    )
    (preference ballThrownFromDoor
      (exists (?l2 - doggie_bed ?d - color)
        (then
          (once (not (in ?d floor) ) )
          (once (agent_holds ?h) )
          (once (not (> (distance_side ?b2 front ?d) (distance desk ?t)) ) )
        )
      )
    )
    (preference throwAttempt
      (exists (?d - game_object)
        (then
          (once (in ?b ?d) )
          (once (equal_z_position ?d ?b5) )
          (once (agent_holds ?b) )
        )
      )
    )
    (preference ballThrownToRug
      (exists (?b ?d - doggie_bed ?o - hexagonal_bin)
        (then
          (once (not (in_motion agent) ) )
          (hold (and (= 4 1) (adjacent room_center desk) ) )
          (once (between ?o ?o ?o) )
          (once (in_motion ?o) )
          (once-measure (touch ?o ?o) (distance agent ?d) )
          (once (agent_holds ?d) )
        )
      )
    )
  )
)
(:terminal
  (< (* (count ballThrownToRug) (/ 1 6 ) )
    (count dodgeballThrownToBinFromDesk:yellow)
  )
)
(:scoring
  (count dodgeballThrownToBinFromDesk:blue_cube_block)
)
)



(define (game game-id-853) (:domain medium-objects-room-v1)
(:setup
  (not
    (forall (?h - doggie_bed)
      (game-conserved
        (in_motion ?h)
      )
    )
  )
)
(:constraints
  (and
    (forall (?c - (either cube_block top_drawer) ?c ?o - yellow_pyramid_block ?b - cube_block)
      (and
        (preference beachballOnRug
          (exists (?l2 - hexagonal_bin)
            (at-end
              (in_motion ?d)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (and
      (not
        (>= (count beachballOnRug:tall_cylindrical_block) (total-time) )
      )
    )
  )
)
(:scoring
  (- 3 )
)
)



(define (game game-id-854) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (agent_holds ?b)
      )
    )
  )
)
(:constraints
  (and
    (preference matchingBuildingBuilt
      (exists (?h - wall)
        (then
          (once (in_motion ?h) )
          (hold (faces ?h ?c) )
          (once (and (forall (?r - (either alarm_clock pyramid_block book) ?h - triangular_ramp) (faces ?h ?h) ) (in_motion ?g) ) )
        )
      )
    )
    (preference ballThrownThroughRampToBin
      (exists (?c - game_object ?c2 - tall_cylindrical_block)
        (then
          (once (between ?c2 ?c2 ?c) )
          (once (or (in_motion rug) (in_motion ?c2) ) )
          (hold (in_motion ?c2) )
        )
      )
    )
    (preference throwFromDoorToBin
      (exists (?s - book)
        (then
          (hold (adjacent agent ?s) )
          (once (and (in_motion ?d) (in_motion ?s) (on ?h ?b) (agent_holds ?s) ) )
          (once (in_motion ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= 5 30 )
)
(:scoring
  (* (- (* 3 3 1 )
    )
    7
  )
)
)



(define (game game-id-855) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds ?d)
  )
)
(:constraints
  (and
    (preference ballThrownToRug
      (exists (?h - curved_wooden_ramp)
        (then
          (once (> 7 (distance desk ?h)) )
          (once (rug_color_under ?h brown) )
          (hold (in_motion ?c1) )
          (hold (agent_holds ?h) )
          (once (agent_holds ?h) )
          (hold (and (adjacent agent ?h) (< (distance ?c ?bl) (distance agent ?h)) ) )
        )
      )
    )
    (preference blockPickedUp
      (exists (?w2 - dodgeball)
        (then
          (once (<= 1 1) )
          (once (in_motion desk) )
          (once (forall (?l3 - wall) (and (adjacent_side desk front ?h) (in ?w2 ?b) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 4 (- 30 )
  )
)
(:scoring
  (* (count-shortest ballThrownToRug:dodgeball:blue_dodgeball) (+ (count-once blockPickedUp:pyramid_block) (count ballThrownToRug:bed:dodgeball) )
  )
)
)



(define (game game-id-856) (:domain medium-objects-room-v1)
(:setup
  (exists (?b - (either yellow_cube_block cube_block key_chain) ?t - beachball ?o1 - triangular_ramp)
    (exists (?o1 - (either chair cellphone))
      (or
        (game-conserved
          (agent_holds ?t)
        )
        (and
          (and
            (exists (?r - teddy_bear)
              (and
                (and
                  (and
                    (game-optional
                      (on ?o1 ?f)
                    )
                  )
                  (exists (?h - shelf ?bl - hexagonal_bin)
                    (and
                      (and
                        (exists (?g - hexagonal_bin)
                          (and
                            (or
                              (and
                                (game-optional
                                  (agent_holds ?o1)
                                )
                              )
                            )
                            (and
                              (and
                                (exists (?db - ball ?h - (either key_chain laptop pen))
                                  (and
                                    (game-conserved
                                      (and
                                        (and
                                          (not
                                            (and
                                              (agent_holds ?b)
                                              (in ?c3 ?c3)
                                              (not
                                                (adjacent agent ?b)
                                              )
                                            )
                                          )
                                          (agent_holds top_shelf)
                                        )
                                        (touch ?o ?b)
                                        (in_motion ?s)
                                        (and
                                          (and
                                            (on ?r ?h)
                                            (in ?l2 ?c)
                                          )
                                          (in_motion bed)
                                          (not
                                            (adjacent ?g ?c3)
                                          )
                                          (in_motion ?s)
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                      (forall (?b - tall_cylindrical_block ?l - dodgeball)
                        (exists (?l3 - dodgeball)
                          (and
                            (forall (?b - book ?c6 - wall ?bl - (either curved_wooden_ramp laptop) ?b - blue_cube_block)
                              (forall (?d - ball)
                                (game-conserved
                                  (agent_holds ?d)
                                )
                              )
                            )
                            (game-optional
                              (and
                                (not
                                  (adjacent desk ?b)
                                )
                                (agent_holds ?l3)
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
          (and
            (exists (?d - ball)
              (forall (?o - (either pyramid_block cube_block) ?o1 - teddy_bear)
                (game-conserved
                  (and
                    (and
                      (and
                        (in floor ?o1)
                        (game_over )
                        (and
                          (object_orientation ?t upside_down)
                          (exists (?b7 - ball ?b9 ?s - game_object)
                            (open ?d)
                          )
                        )
                        (in_motion ?g)
                      )
                      (and
                        (in ?b ?d)
                        (and
                          (between ?o1 ?d ?o)
                          (agent_holds ?o1)
                          (in_motion ?d)
                        )
                        (forall (?b1 - dodgeball ?h - hexagonal_bin)
                          (in_motion ?c)
                        )
                      )
                      (and
                        (not
                          (forall (?c5 - dodgeball ?d - (either cellphone dodgeball hexagonal_bin))
                            (< (distance room_center ?d) 1)
                          )
                        )
                        (in_motion ?b)
                      )
                    )
                    (in ?d ?l1)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference watchOnShelf
      (exists (?c - block)
        (then
          (once (game_over ) )
          (once (not (not (and (not (adjacent_side ?d front ?b) ) (and (touch ?c floor) (faces ?c ?c) ) (in_motion bed) ) ) ) )
          (hold (and (not (in_motion rug) ) (and (exists (?t - cube_block) (in_motion ?t) ) (and (agent_holds ?c) (rug_color_under ?d pink) (not (agent_holds bed) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (count watchOnShelf:beachball) )
)
(:scoring
  (+ (* (count-increasing-measure watchOnShelf:orange:dodgeball) (count watchOnShelf:dodgeball:beachball) )
    (* (count watchOnShelf:basketball) 2 )
  )
)
)



(define (game game-id-857) (:domain few-objects-room-v1)
(:setup
  (exists (?l2 - dodgeball)
    (game-conserved
      (< (distance_side ?l2 ?l2 ?d) 1)
    )
  )
)
(:constraints
  (and
    (preference blindsOpened
      (exists (?b - ball ?c5 - hexagonal_bin)
        (then
          (hold (and (not (in_motion ?o3) ) (equal_x_position ?w2 ?o) (and (and (agent_holds ?b) (agent_holds bed) ) (and (and (not (and (on ?c5 ?c5) (open ?t) ) ) (same_color ?c5 ?c5) ) (in_motion ?c) (and (agent_holds ?b) (agent_crouches ) ) (on ?d ?d) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects blindsOpened:block) (total-time) )
)
(:scoring
  (count blindsOpened:book)
)
)



(define (game game-id-858) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (game-conserved
        (same_type ?b blinds)
      )
    )
  )
)
(:constraints
  (and
    (preference throwToDrawerOrBin
      (exists (?b1 - color ?l - hexagonal_bin)
        (at-end
          (in ?o ?l)
        )
      )
    )
    (preference dodgeballHitsPillowWithoutTouchingBlock
      (exists (?p2 - dodgeball)
        (then
          (hold-while (on ?d ?d) (touch ?c ?p2) (adjacent room_center ?p2) (and (on ?p2 ?d) (not (in ?o ?p2) ) (on ?p2 ?p2) ) )
          (hold (in ?d ?tb) )
          (hold (agent_holds ?p2) )
        )
      )
    )
    (preference objectToBinOnFirstTry
      (exists (?d - (either mug dodgeball))
        (at-end
          (not
            (= (x_position ?d) 1)
          )
        )
      )
    )
    (preference objectMoved
      (exists (?d1 - (either cube_block dodgeball pyramid_block))
        (at-end
          (and
            (above ?d1 ?b)
            (and
              (or
                (on ?d1 ?d)
              )
              (and
                (above ?g ?d1)
                (touch ?b ?d1)
                (and
                  (on ?d1 ?d1)
                  (and
                    (not
                      (rug_color_under ?b yellow)
                    )
                    (game_over )
                  )
                )
              )
              (agent_holds ?d)
              (and
                (and
                  (and
                    (on ?g ?d)
                    (not
                      (not
                        (< 1 (distance ?d ?d1))
                      )
                    )
                    (same_type ?o blinds)
                  )
                  (and
                    (agent_holds ?d)
                    (in_motion ?l)
                    (adjacent room_center ?d)
                  )
                )
                (touch ?d1 ?d)
              )
            )
          )
        )
      )
    )
    (preference matchingBuildingBuilt
      (exists (?r - hexagonal_bin)
        (then
          (once-measure (= (distance room_center ?r) (distance ?r ?r) (distance ?c rug)) (distance agent ?o) )
          (hold (agent_holds ?c) )
          (once (agent_holds ?t) )
        )
      )
    )
  )
)
(:terminal
  (>= (count objectToBinOnFirstTry:wall) (count-once-per-objects matchingBuildingBuilt:pink) )
)
(:scoring
  (count-once-per-objects dodgeballHitsPillowWithoutTouchingBlock:basketball)
)
)



(define (game game-id-859) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?p - wall)
      (and
        (and
          (forall (?o1 - pyramid_block)
            (and
              (game-conserved
                (same_color ?c brown)
              )
              (game-conserved
                (in ?s ?o1)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToDoggieBed
      (exists (?c - game_object ?b - game_object)
        (at-end
          (agent_holds ?b)
        )
      )
    )
  )
)
(:terminal
  (>= (- (count throwBallToDoggieBed:pink) )
    40
  )
)
(:scoring
  (count throwBallToDoggieBed:blue_dodgeball:red)
)
)



(define (game game-id-860) (:domain many-objects-room-v1)
(:setup
  (forall (?h - ball ?d2 - game_object)
    (forall (?w2 - ball)
      (exists (?d - watch ?s - chair ?c2 - hexagonal_bin ?p3 - chair)
        (and
          (forall (?o2 - building)
            (and
              (and
                (game-conserved
                  (not
                    (in_motion ?d)
                  )
                )
                (game-conserved
                  (exists (?b10 - hexagonal_bin)
                    (in ?p3 ?d2)
                  )
                )
              )
              (game-conserved
                (in_motion ?o2)
              )
            )
          )
          (game-conserved
            (or
              (or
                (same_type agent pillow)
                (agent_holds ?w2)
                (< 2 (distance ?w2 ?d))
              )
              (same_color ?d pink)
            )
          )
          (or
            (and
              (forall (?c - (either cube_block block))
                (game-conserved
                  (exists (?w - building)
                    (in_motion ?w)
                  )
                )
              )
              (game-conserved
                (rug_color_under ?g pink)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?w - ball)
      (and
        (preference objectToBinOnFirstTry
          (exists (?d - hexagonal_bin ?b5 - (either cylindrical_block golfball key_chain))
            (then
              (once (not (and (in_motion ?o) (and (not (in_motion ?b) ) (on ?b ?b5) ) ) ) )
              (once (and (faces ?b5 ?t) (and (adjacent door ?w) ) ) )
              (once (or (< 2 (x_position ?d)) (agent_holds ?o) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* 1 (count objectToBinOnFirstTry:pink) (* (count-once-per-objects objectToBinOnFirstTry:book) (* 6 (count-overlapping objectToBinOnFirstTry:red) )
      )
    )
    (* (external-forall-maximize (* 8 (count objectToBinOnFirstTry:cylindrical_block) )
      )
      (count objectToBinOnFirstTry:book:white)
    )
  )
)
(:scoring
  (* (* (* (* (count objectToBinOnFirstTry:golfball:red) (count-longest objectToBinOnFirstTry:dodgeball) )
        4
      )
      6
    )
    (- 2 )
    (* (* 3 (count objectToBinOnFirstTry:tan) )
      (count objectToBinOnFirstTry:golfball:basketball)
    )
  )
)
)



(define (game game-id-861) (:domain few-objects-room-v1)
(:setup
  (exists (?h - color)
    (game-conserved
      (agent_holds ?h)
    )
  )
)
(:constraints
  (and
    (preference throwToRampToBin
      (exists (?o ?c - color)
        (then
          (hold (in_motion ?c) )
          (hold (adjacent_side room_center ?o ?o front) )
          (once (and (and (agent_holds ?d) (in_motion ?b) (and (adjacent desk ?b) (in ?d ?c) ) ) (and (not (< 2 4) ) (and (adjacent_side ?o back ?c) (agent_holds desk) ) ) ) )
        )
      )
    )
    (preference pinkObjectMovedToRoomCenter
      (exists (?r1 - hexagonal_bin)
        (at-end
          (opposite ?b ?r1)
        )
      )
    )
    (forall (?b8 - cube_block ?b - dodgeball)
      (and
        (preference binKnockedOver
          (exists (?c - curved_wooden_ramp)
            (at-end
              (not
                (and
                  (in ?b ?b)
                  (not
                    (in_motion ?o)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (total-score) 9 )
      (> (total-score) (total-time) )
    )
  )
)
(:scoring
  (count pinkObjectMovedToRoomCenter:yellow)
)
)



(define (game game-id-862) (:domain medium-objects-room-v1)
(:setup
  (forall (?b - hexagonal_bin ?b - wall)
    (and
      (game-conserved
        (on ?b ?o1)
      )
      (game-optional
        (not
          (in_motion ?b)
        )
      )
      (game-optional
        (in_motion ?d)
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - (either dodgeball mug))
      (and
        (preference ballNeverThrown
          (exists (?p ?o - (either top_drawer yellow_cube_block))
            (then
              (once (between ?h agent ?b1) )
              (once (= 10 2) )
              (once (>= (distance room_center ?c) (distance ?h ?o)) )
            )
          )
        )
        (preference ballOnBedAtEnd
          (exists (?db - chair)
            (then
              (hold (and (open ?t) (on ?b ?d1) ) )
              (hold (rug_color_under ?h blue) )
              (once (and (agent_holds ?db) ) )
              (once (agent_holds ?h) )
              (once (touch ?b ?o) )
              (once (in_motion floor) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 2 3 )
)
(:scoring
  (external-forall-maximize
    (+ 3 (count-once-per-objects ballNeverThrown:pink) (count ballOnBedAtEnd:hexagonal_bin) (* 4 (* (count-once-per-objects ballOnBedAtEnd:beachball) (* (external-forall-maximize (external-forall-maximize (count ballNeverThrown:dodgeball:yellow) ) ) (count ballNeverThrown:dodgeball:pink) )
        )
      )
    )
  )
)
)



(define (game game-id-863) (:domain many-objects-room-v1)
(:setup
  (exists (?db - game_object)
    (and
      (and
        (and
          (game-conserved
            (equal_z_position ?db ?db)
          )
        )
      )
      (exists (?d - (either dodgeball laptop dodgeball))
        (game-conserved
          (and
            (and
              (> 0.5 (distance ?db ?d))
              (and
                (and
                  (and
                    (on ?d2 ?db)
                    (same_color ?d ?c)
                  )
                  (and
                    (in ?o ?d)
                    (same_type ?h block)
                  )
                )
                (not
                  (not
                    (not
                      (in_motion ?c4)
                    )
                  )
                )
              )
            )
            (not
              (< 4 (x_position ?o))
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballNeverThrown
      (exists (?d - hexagonal_bin)
        (then
          (once (and (agent_holds ?w) (< (distance bed ?d) 1) (agent_holds ?d) ) )
          (once (not (not (and (and (exists (?tb - game_object) (and (and (< 0.5 6) (not (and (agent_holds ?tb) (in bed agent) (in ?d ?d) ) ) ) (agent_holds ?b) ) ) (not (agent_holds ?d) ) ) (and (and (agent_holds ?b) (agent_holds ?d) ) (not (< (distance room_center rug) (distance ?w1 ?d)) ) (in ?d ?b) ) ) ) ) )
          (once (in_motion ?c2) )
        )
      )
    )
  )
)
(:terminal
  (>= 6 (total-score) )
)
(:scoring
  (* 15 )
)
)



(define (game game-id-864) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (in_motion ?c)
  )
)
(:constraints
  (and
    (forall (?p - (either dodgeball))
      (and
        (preference towerFallsWhileBuilding
          (exists (?c5 - wall ?h - (either game_object tall_cylindrical_block cellphone) ?g ?w2 - dodgeball ?h - hexagonal_bin ?d - wall)
            (then
              (hold (toggled_on ?p) )
              (once (agent_holds ?b1) )
              (hold (touch ?p ?d) )
            )
          )
        )
        (preference greenObjectMovedToRoomCenter
          (exists (?b - teddy_bear ?c3 - chair)
            (at-end
              (touch ?c3 ?w)
            )
          )
        )
        (preference thrownObjectHitsComputer
          (exists (?t - chair)
            (then
              (once (rug_color_under ?t ?t) )
              (hold (in_motion ?t) )
              (once (agent_holds ?p) )
            )
          )
        )
        (preference throwAttempt
          (exists (?h - block)
            (at-end
              (agent_holds ?p)
            )
          )
        )
      )
    )
    (preference baseBlockInTowerAtEnd
      (exists (?d - game_object)
        (then
          (once (and (agent_holds ?p) (or (same_type pink_dodgeball ?d) (not (and (adjacent ?d ?d) (on ?b ?d) ) ) ) ) )
          (hold (in_motion ?d) )
          (once (in ?h ?d) )
        )
      )
    )
  )
)
(:terminal
  (>= (count greenObjectMovedToRoomCenter:golfball:cylindrical_block) (count baseBlockInTowerAtEnd:blue_dodgeball:dodgeball) )
)
(:scoring
  (count baseBlockInTowerAtEnd:beachball)
)
)



(define (game game-id-865) (:domain many-objects-room-v1)
(:setup
  (forall (?o - hexagonal_bin ?o1 - hexagonal_bin)
    (game-conserved
      (touch ?d ?o1)
    )
  )
)
(:constraints
  (and
    (preference gameBlockFound
      (exists (?b - shelf)
        (then
          (once (and (in_motion ?b) (exists (?d - teddy_bear) (and (in_motion ?b) (in ?b ?d) ) ) ) )
          (once (not (not (not (agent_holds bed) ) ) ) )
          (once (> 7 2) )
        )
      )
    )
    (preference golfballInBinFromPillow
      (exists (?b7 - tan_cube_block ?o - doggie_bed)
        (at-end
          (in_motion ?b)
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (>= (* 60 (* (* (count-once-per-external-objects golfballInBinFromPillow:alarm_clock) (count-overlapping gameBlockFound:dodgeball) )
            (count golfballInBinFromPillow:dodgeball:pink)
          )
        )
        (* (* (count gameBlockFound:doggie_bed) (/ 1 4 ) (count-once-per-objects gameBlockFound:golfball:basketball) )
          (count golfballInBinFromPillow:basketball)
        )
      )
    )
    (not
      (>= (count-once-per-objects gameBlockFound:dodgeball) (* (* (+ (/ (count gameBlockFound:red) (+ (count-once-per-objects golfballInBinFromPillow:red) 5 )
              )
              300
              (count-overlapping golfballInBinFromPillow:blue_dodgeball:beachball)
              (count-once-per-objects golfballInBinFromPillow:dodgeball:basketball)
              10
              3
            )
            (* (+ 180 180 )
              (count golfballInBinFromPillow:purple)
              20
              10
              (count-once-per-objects gameBlockFound:basketball)
              7
            )
            2
          )
          (count golfballInBinFromPillow:green:white)
        )
      )
    )
    (>= (+ (count gameBlockFound:cube_block) 5 )
      (total-score)
    )
  )
)
(:scoring
  (count-once-per-objects golfballInBinFromPillow:dodgeball)
)
)



(define (game game-id-866) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (not
      (agent_holds ?l)
    )
  )
)
(:constraints
  (and
    (preference laptopAndBookInPlace
      (exists (?p - game_object)
        (then
          (once (in_motion ?p) )
          (once (in_motion ?b) )
          (once (in ?p ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= 4 (total-score) )
)
(:scoring
  (* 4 (* (count laptopAndBookInPlace:hexagonal_bin) (+ 10 (- 3 )
      )
    )
  )
)
)



(define (game game-id-867) (:domain many-objects-room-v1)
(:setup
  (exists (?c3 - hexagonal_bin ?b - dodgeball)
    (and
      (game-conserved
        (on rug ?d)
      )
      (and
        (exists (?x - game_object ?c3 - hexagonal_bin)
          (exists (?o - curved_wooden_ramp)
            (game-optional
              (and
                (and
                  (on agent floor)
                  (not
                    (not
                      (not
                        (agent_holds ?d)
                      )
                    )
                  )
                )
                (agent_holds ?b)
              )
            )
          )
        )
        (game-conserved
          (on ?b ?bl)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectLandsInBin
      (exists (?b - curved_wooden_ramp)
        (then
          (once (not (touch ?b ?w1) ) )
          (hold (equal_z_position ?b ?b) )
          (hold (in_motion ?c1) )
        )
      )
    )
  )
)
(:terminal
  (< (external-forall-maximize (count-once-per-objects objectLandsInBin:green) ) 9 )
)
(:scoring
  (count-once-per-objects objectLandsInBin:red)
)
)



(define (game game-id-868) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (toggled_on ?o)
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?b2 - game_object ?o1 - hexagonal_bin)
        (then
          (hold (in_motion ?o1) )
          (once (not (in_motion ?b) ) )
          (once (touch ?h ?o1) )
        )
      )
    )
    (preference ballThrownToBin
      (exists (?w - building)
        (then
          (once (game_start ) )
          (once (forall (?h - ball) (not (exists (?w2 - flat_block ?w - beachball) (agent_holds ?c) ) ) ) )
          (hold (in_motion ?w) )
        )
      )
    )
  )
)
(:terminal
  (>= (external-forall-maximize (count-once-per-objects throwAttempt:doggie_bed) ) (total-score) )
)
(:scoring
  (* (count throwAttempt:pink_dodgeball) 10 )
)
)



(define (game game-id-869) (:domain many-objects-room-v1)
(:setup
  (exists (?b - game_object ?b9 - triangular_ramp)
    (exists (?h - block)
      (or
        (game-conserved
          (and
            (and
              (on ?h ?l)
            )
            (not
              (and
                (same_object agent ?c)
                (on ?d ?b9)
                (in ?b9 ?b9)
              )
            )
          )
        )
        (game-conserved
          (agent_holds ?h)
        )
        (forall (?d - red_pyramid_block)
          (game-optional
            (object_orientation ?o upright)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference thrownBallReachesEnd
      (exists (?b - dodgeball ?s - (either cylindrical_block desktop dodgeball))
        (then
          (hold-while (and (and (in_motion desk) (not (in_motion ?s) ) ) (not (not (in_motion ?s) ) ) ) (not (not (same_color agent ?s) ) ) (not (and (in ?s ?s) (agent_holds ?h) (and (and (touch ?b ?t) (and (and (and (and (agent_holds ?d) (equal_x_position room_center ?s) ) (in_motion ?s) (game_over ) ) (adjacent ?h ?s) ) (< 6 (distance bed ?h)) ) (on rug ?s) ) (object_orientation ?t ?s) ) ) ) (adjacent_side ?s front floor) )
          (hold (and (and (agent_holds ?s) (not (and (and (in_motion ?o) (same_object ?s ?d) (not (and (in_motion ?h) (equal_x_position ?s ?o1) ) ) ) (on ?b rug) ) ) ) (agent_holds ?s) ) )
          (hold (and (agent_holds ?w2) (agent_holds ?s) (between bed ?d ?s) (agent_holds ?b) ) )
          (once (is_setup_object ?h) )
        )
      )
    )
  )
)
(:terminal
  (and
    (not
      (>= 10 7 )
    )
  )
)
(:scoring
  (- (count thrownBallReachesEnd:yellow) )
)
)



(define (game game-id-870) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (on ?b5 ?c1)
  )
)
(:constraints
  (and
    (preference blindsOpened
      (exists (?g - hexagonal_bin ?p - beachball)
        (then
          (once (on ?p ?c) )
          (once (in_motion rug) )
          (hold-while (is_setup_object ?p) (agent_holds ?p) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count blindsOpened:doggie_bed) (count-unique-positions blindsOpened:beachball) )
    (>= (- (count-once-per-objects blindsOpened:blue_dodgeball) )
      7
    )
  )
)
(:scoring
  (* 4 16 2 180 3 2 )
)
)



(define (game game-id-871) (:domain medium-objects-room-v1)
(:setup
  (exists (?b9 - curved_wooden_ramp ?c - ball)
    (game-conserved
      (on ?b ?c)
    )
  )
)
(:constraints
  (and
    (forall (?d - hexagonal_bin)
      (and
        (preference throwAttemptFromBehindBlock
          (exists (?s - hexagonal_bin)
            (then
              (once (equal_z_position side_table ?s) )
              (once (agent_holds ?l2) )
              (hold (and (game_start ) (agent_holds ?b) ) )
            )
          )
        )
        (preference throwFromBehindChairsInBin
          (exists (?l - flat_block)
            (then
              (once (= 1) )
              (once (< 1 2) )
              (hold (equal_z_position agent ?l1) )
            )
          )
        )
        (preference throwBallToBinOffObject
          (exists (?c - cube_block)
            (then
              (hold (agent_holds ?g) )
              (hold (exists (?c - teddy_bear) (in_motion ?c) ) )
              (once (and (adjacent bed ?d) (not (not (exists (?l3 - desktop ?o - (either basketball alarm_clock)) (in_motion ?l) ) ) ) (and (and (and (and (> 1 (distance rug ?c)) (and (agent_holds ?c) (faces ?w ?t) ) ) (and (game_start ) (and (agent_holds ?b) (on ?d ?c) ) ) ) (> 1 (distance ?h ?c)) ) (agent_holds bottom_shelf) (not (agent_holds ?o) ) ) ) )
              (once (in_motion ?d) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* 30 15 (- 2 )
      )
      (total-time)
    )
  )
)
(:scoring
  (count throwBallToBinOffObject:block)
)
)



(define (game game-id-872) (:domain few-objects-room-v1)
(:setup
  (exists (?l4 - hexagonal_bin)
    (game-conserved
      (exists (?o - (either ball main_light_switch top_drawer))
        (not
          (agent_holds ?b)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownThroughRampToBin
      (exists (?o - dodgeball)
        (then
          (once (not (not (and (and (or (or (agent_holds ?o) (in_motion ?o) (and (agent_holds ?o) (in_motion ?o) ) ) ) (touch ?o ?o) ) (and (exists (?g - game_object ?c6 - block) (touch ?d ?c5) ) (on ?r ?o) (and (agent_holds ?o) (on ?c ?o) ) ) ) ) ) )
          (once (in_motion ?d) )
          (once (not (in_motion ?o) ) )
        )
      )
    )
  )
)
(:terminal
  (> (total-score) (+ (count ballThrownThroughRampToBin:triangle_block) (external-forall-maximize (count-once-per-objects ballThrownThroughRampToBin:pink) ) )
  )
)
(:scoring
  (count-once-per-objects ballThrownThroughRampToBin:cube_block)
)
)



(define (game game-id-873) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-conserved
      (>= (distance desk ?d) 1)
    )
    (exists (?h - pyramid_block)
      (exists (?c - ball)
        (and
          (game-conserved
            (touch ?c rug)
          )
          (exists (?d - hexagonal_bin)
            (and
              (forall (?l1 - building ?ob - curved_wooden_ramp)
                (game-optional
                  (opposite ?ob rug)
                )
              )
              (forall (?x - building)
                (game-conserved
                  (in_motion ?b7)
                )
              )
              (game-conserved
                (agent_holds ?c)
              )
            )
          )
        )
      )
    )
    (exists (?b3 ?b10 ?h - hexagonal_bin)
      (and
        (exists (?g - block)
          (and
            (forall (?c - game_object)
              (game-optional
                (in_motion ?h)
              )
            )
            (forall (?b2 - (either pyramid_block golfball alarm_clock))
              (game-conserved
                (and
                  (on ?h ?d)
                  (< (building_size ?d) 2)
                )
              )
            )
          )
        )
        (and
          (game-conserved
            (not
              (in_motion ?h)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference cubeBlockThrownToTopShelf
      (exists (?w2 - block ?s - hexagonal_bin)
        (then
          (once (in_motion ?g) )
          (hold-while (and (not (and (adjacent ?w1 ?r) (and (in_motion agent) (in ?l1 agent) ) ) ) (not (agent_holds ?s) ) ) (< 6 (distance_side door front ?b4 front)) )
          (hold (on agent ?s) )
        )
      )
    )
  )
)
(:terminal
  (> (* 4 4 )
    (total-score)
  )
)
(:scoring
  (count cubeBlockThrownToTopShelf:basketball)
)
)



(define (game game-id-874) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (adjacent_side desk front ?d back)
  )
)
(:constraints
  (and
    (preference teddyBearHitsBall
      (exists (?b7 - teddy_bear)
        (at-end
          (same_type ?b7 ?l4)
        )
      )
    )
    (preference blockInTowerKnockedByDodgeball
      (exists (?p - hexagonal_bin)
        (then
          (hold (same_color ?p ?c) )
          (once (not (agent_holds ?p) ) )
          (hold (in_motion ?p) )
          (once (touch ?p ?d) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (count-once-per-objects blockInTowerKnockedByDodgeball:beachball) )
)
(:scoring
  (+ (+ 2 1 )
    5
  )
)
)



(define (game game-id-875) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (in_motion top_shelf)
  )
)
(:constraints
  (and
    (preference pillowThrownToDoggieBed
      (exists (?o - red_dodgeball ?f - game_object)
        (then
          (hold (and (agent_holds ?o4) (and (and (agent_holds ?f) (< 0.5 3) ) (and (>= 6 9) (same_color ?f yellow) ) ) (same_object ?f ?l2) (not (or (adjacent ?h agent) (touch ?f ?f) (and (and (agent_holds floor) (on ?b ?f) ) (and (game_start ) (not (not (agent_holds ?f) ) ) ) ) ) ) (and (in ?f ?l1) (> (distance_side ?f front ?f front) (distance ?d ?c)) ) (in_motion ?f) ) )
          (once (not (in_motion ?f) ) )
        )
      )
    )
    (forall (?r2 - hexagonal_bin)
      (and
        (preference throwMovesBeachballWithoutKnockingTeddy
          (at-end
            (broken ?b)
          )
        )
        (preference blockOnBlockInTowerAtEnd
          (exists (?c5 - hexagonal_bin ?d1 - game_object)
            (then
              (once (and (in ?d1 ?b) (game_start ) ) )
              (once (and (not (in_motion ?o) ) (and (and (not (in_motion ?b5) ) (above ?r ?d1) ) (exists (?h - game_object) (and (in_motion ?d) (adjacent ?r2 ?h) (not (between ?b ?s rug) ) (not (agent_holds ?b) ) ) ) ) (on ?d ?h) ) )
              (once (and (touch bed ?h) (and (in ?r2 ?o) (exists (?d2 - dodgeball) (in ?d ?ob) ) ) (agent_holds ?d1) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (and
      (> 6 7 )
    )
    (>= 2 (total-time) )
    (< 5 (count pillowThrownToDoggieBed:doggie_bed) )
  )
)
(:scoring
  (count throwMovesBeachballWithoutKnockingTeddy:beachball:dodgeball)
)
)



(define (game game-id-876) (:domain few-objects-room-v1)
(:setup
  (or
    (exists (?h - block)
      (game-optional
        (= 1 (distance ?r ?p2) (distance ?h ?d) (distance agent ?h))
      )
    )
    (forall (?c - dodgeball)
      (game-optional
        (in_motion ?d)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToChair
      (exists (?d - hexagonal_bin)
        (then
          (hold (not (in_motion ?c) ) )
          (once (not (< (distance ?h ?h) 1) ) )
          (once (or (on ?c ?d) ) )
        )
      )
    )
    (forall (?d - triangular_ramp ?c - block ?b - dodgeball)
      (and
        (preference throwAttempt
          (exists (?b - color)
            (then
              (once (forall (?c - (either yellow top_drawer golfball) ?o5 ?l3 - hexagonal_bin) (on ?l3 ?r) ) )
              (hold-while (not (in ?o ?g) ) (and (and (agent_holds ?h) (agent_holds ?t) ) (in_motion ?g) ) (exists (?d - ball ?h - game_object ?t - hexagonal_bin ?s - red_dodgeball) (in_motion ?s) ) )
              (hold-while (on ?l1 ?b) (above ?b ?b) (adjacent_side ?b right ?h) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) 4 )
)
(:scoring
  (count-once throwAttempt:golfball:basketball)
)
)



(define (game game-id-877) (:domain many-objects-room-v1)
(:setup
  (exists (?c - dodgeball)
    (game-conserved
      (in ?o4 ?c)
    )
  )
)
(:constraints
  (and
    (preference throwBallToDoggieBedOffWall
      (exists (?t - dodgeball)
        (at-end
          (and
            (agent_holds ?t)
            (on ?t ?t)
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) 18 )
)
(:scoring
  (+ 5 (* 3 (* 5 25 )
      (count throwBallToDoggieBedOffWall:dodgeball)
      (* (count throwBallToDoggieBedOffWall:red:red) (external-forall-minimize (count-once throwBallToDoggieBedOffWall:wall) ) )
      (* (count-once throwBallToDoggieBedOffWall:side_table) (>= 5 1 )
      )
      (* 3 1 (- (count throwBallToDoggieBedOffWall:beachball) )
      )
    )
    5
    (count-once-per-objects throwBallToDoggieBedOffWall:red)
    (-
      (count-once throwBallToDoggieBedOffWall:orange)
      (* 9 10 )
    )
    (* 2 8 )
    (count throwBallToDoggieBedOffWall:red_pyramid_block)
    (* 10 2 )
    8
  )
)
)



(define (game game-id-878) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (in_motion ?b)
  )
)
(:constraints
  (and
    (preference thrownBallHitsBlock
      (exists (?d - ball)
        (at-end
          (in_motion ?b)
        )
      )
    )
    (preference rollBallToBin
      (exists (?b10 - pyramid_block)
        (then
          (once (and (agent_holds ?b10) (same_color rug ?c) ) )
          (hold (adjacent desk ?b10) )
          (once (exists (?s - ball) (on rug ?s) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count-once-per-objects thrownBallHitsBlock:pink) 6 )
    (total-score)
  )
)
(:scoring
  (count thrownBallHitsBlock:golfball:orange)
)
)



(define (game game-id-879) (:domain many-objects-room-v1)
(:setup
  (exists (?g - block ?c - (either pyramid_block hexagonal_bin pencil dodgeball cellphone cube_block cylindrical_block))
    (and
      (and
        (game-conserved
          (in ?d ?c)
        )
        (game-optional
          (agent_holds ?l1)
        )
        (game-conserved
          (agent_holds ?c)
        )
      )
      (forall (?c2 - dodgeball)
        (forall (?p - cube_block ?w2 - hexagonal_bin)
          (forall (?o - building)
            (game-conserved
              (not
                (in_motion ?c)
              )
            )
          )
        )
      )
      (exists (?o3 - (either cylindrical_block rug blue_cube_block))
        (and
          (game-optional
            (not
              (not
                (not
                  (in_motion ?c)
                )
              )
            )
          )
          (game-conserved
            (and
              (exists (?b - cube_block)
                (in_motion ?l)
              )
              (and
                (agent_holds bed)
                (touch ?o3 ?c)
                (touch ?c ?o3)
                (and
                  (in_motion ?c)
                  (in_motion bed)
                )
                (agent_holds ?b2)
                (agent_holds ?b)
              )
              (and
                (and
                  (in ?l desk)
                  (agent_holds ?o)
                )
                (not
                  (not
                    (on ?o3 ?c)
                  )
                )
                (and
                  (in ?d ?o3)
                  (>= (distance ?h ?d) 1)
                )
              )
              (and
                (in_motion ?b)
                (in_motion ?c)
              )
            )
          )
          (game-conserved
            (in_motion ?b)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockInTowerAtEnd
      (at-end
        (in_motion ?b)
      )
    )
  )
)
(:terminal
  (or
    (>= (count-once-per-objects blockInTowerAtEnd:golfball) 8 )
    (or
      (>= (= (count-same-positions blockInTowerAtEnd:beachball) (= 7 (count blockInTowerAtEnd:dodgeball) )
          6
        )
        (count-once-per-objects blockInTowerAtEnd:dodgeball:pink_dodgeball)
      )
      (or
        (or
          (not
            (>= 3 4 )
          )
          (<= (count-once-per-objects blockInTowerAtEnd:beachball:green) (total-time) )
          (>= (= 10 300 )
            (count blockInTowerAtEnd:triangle_block)
          )
        )
      )
      (or
        (or
          (>= (count-once-per-objects blockInTowerAtEnd:dodgeball:beachball:basketball) (* 2 (count-once-per-objects blockInTowerAtEnd:dodgeball) )
          )
          (or
            (>= (total-time) (count blockInTowerAtEnd:dodgeball) )
          )
        )
        (= (count-once-per-objects blockInTowerAtEnd:green) (count-once-per-objects blockInTowerAtEnd:blue_cube_block) )
        (>= (count-same-positions blockInTowerAtEnd:orange:top_drawer) (external-forall-maximize (* (* (- 4 )
                10
                (count blockInTowerAtEnd:yellow)
              )
              (count blockInTowerAtEnd:dodgeball)
            )
          )
        )
      )
    )
  )
)
(:scoring
  (count-overlapping blockInTowerAtEnd:pink)
)
)



(define (game game-id-880) (:domain many-objects-room-v1)
(:setup
  (exists (?b - (either dodgeball cube_block book))
    (exists (?h - hexagonal_bin ?o - hexagonal_bin)
      (forall (?o1 - hexagonal_bin)
        (and
          (game-conserved
            (and
              (agent_holds ?o)
              (not
                (adjacent ?c ?o)
              )
            )
          )
          (game-conserved
            (in ?b ?r)
          )
          (forall (?b - hexagonal_bin ?d - color)
            (game-conserved
              (not
                (not
                  (and
                    (in_motion ?b2)
                    (not
                      (not
                        (on ?t pink_dodgeball)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallFromOtherBallToBin
      (exists (?c5 - building ?h - ball ?o3 - (either dodgeball ball) ?p - dodgeball)
        (at-end
          (agent_holds ?p)
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (< (* (count-once-per-objects throwBallFromOtherBallToBin:yellow) (count-once-per-objects throwBallFromOtherBallToBin:dodgeball) )
        (count throwBallFromOtherBallToBin:beachball)
      )
      (< (* (* (count-once-per-objects throwBallFromOtherBallToBin:hexagonal_bin:dodgeball) (count throwBallFromOtherBallToBin:basketball) )
          (* (count throwBallFromOtherBallToBin:yellow) 2 )
        )
        (count-unique-positions throwBallFromOtherBallToBin:block)
      )
      (>= 3 (/ (* (* 10 (count-once-per-objects throwBallFromOtherBallToBin:golfball) (count-once throwBallFromOtherBallToBin:basketball) (+ (+ (count throwBallFromOtherBallToBin:dodgeball) (count throwBallFromOtherBallToBin:book) (external-forall-maximize (count-once-per-objects throwBallFromOtherBallToBin:yellow) ) )
                20
              )
              (count throwBallFromOtherBallToBin:alarm_clock)
              4
            )
            3
          )
          (count throwBallFromOtherBallToBin:beachball)
        )
      )
    )
    (>= (count throwBallFromOtherBallToBin:dodgeball) (count-overlapping throwBallFromOtherBallToBin:golfball:green) )
  )
)
(:scoring
  (* (count throwBallFromOtherBallToBin:beachball) 1 )
)
)



(define (game game-id-881) (:domain many-objects-room-v1)
(:setup
  (forall (?o5 - ball)
    (game-conserved
      (or
        (on ?o5 ?d)
        (exists (?h - green_triangular_ramp ?b10 - wall)
          (agent_holds ?b)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blueObjectMovedToRoomCenter
      (exists (?o - drawer)
        (then
          (hold-while (< (distance ?c ?o2) 2) (adjacent rug ?o) )
          (once (open ?o) )
          (once (and (and (and (in ?o ?b) ) (and (not (agent_holds ?b) ) (on ?l ?o) ) ) (and (and (in_motion ?o) (in ?d ?d) ) (in_motion ?o) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (> (count blueObjectMovedToRoomCenter:triangle_block) 0.5 )
      (> 5 (total-score) )
    )
  )
)
(:scoring
  (count-once-per-objects blueObjectMovedToRoomCenter:dodgeball:hexagonal_bin)
)
)



(define (game game-id-882) (:domain few-objects-room-v1)
(:setup
  (not
    (exists (?g - dodgeball)
      (forall (?s - cube_block ?c - chair ?bl - (either red cylindrical_block cellphone laptop mug dodgeball key_chain))
        (and
          (exists (?b6 ?r2 - curved_wooden_ramp)
            (exists (?d - ball ?d1 - teddy_bear ?p3 - hexagonal_bin)
              (exists (?w1 - wall ?d - dodgeball ?o4 - dodgeball)
                (game-optional
                  (agent_holds ?g)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - shelf)
      (and
        (preference cubeBlockFromBedToShelf
          (exists (?p3 - (either doggie_bed red rug) ?c3 - pillow)
            (then
              (once (in ?b3 ?c3) )
              (once (not (game_start ) ) )
              (once (= 5) )
            )
          )
        )
        (preference beachballOnRug
          (exists (?f - red_dodgeball ?w - flat_block)
            (then
              (once (between ?h ?h ?d) )
              (once (and (agent_holds ?h) (on ?b ?w) ) )
              (once (in ?w ?t) )
              (hold (in_motion rug) )
            )
          )
        )
        (preference pillowThrownToDoggieBed
          (exists (?b - (either pyramid_block beachball) ?d - teddy_bear)
            (then
              (once (exists (?h - hexagonal_bin ?b - hexagonal_bin ?h - cube_block ?w1 - curved_wooden_ramp) (on ?d ?b2) ) )
              (hold-while (in_motion ?h) (in_motion ?b) )
              (hold (adjacent_side ?d right agent) )
            )
          )
        )
      )
    )
    (preference objectInBuilding
      (exists (?c - dodgeball)
        (then
          (once (and (adjacent ?w2 floor) (agent_holds ?d) (and (agent_holds ?c) (agent_holds ?c) ) (on ?l2 bed) ) )
          (once (and (in_motion ?p) (agent_holds ?b) ) )
          (once (in_motion ?h) )
        )
      )
    )
    (forall (?d - color ?ob - dodgeball)
      (and
        (preference agentLeavesDogbedOrNoMoreBalls
          (exists (?l - hexagonal_bin ?t1 - doggie_bed)
            (then
              (hold (< 1 (building_size ?o)) )
              (once (agent_holds ?b) )
              (once (and (agent_holds ?t1) (agent_holds ?ob) (equal_x_position room_center ?b) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) 4 )
)
(:scoring
  (count-once-per-external-objects beachballOnRug:dodgeball)
)
)



(define (game game-id-883) (:domain medium-objects-room-v1)
(:setup
  (exists (?tb - dodgeball)
    (game-optional
      (and
        (and
          (is_setup_object ?tb)
          (and
            (and
              (rug_color_under ?tb ?tb)
              (not
                (agent_holds ?b)
              )
            )
            (not
              (exists (?tb ?b ?b ?r2 - (either pen curved_wooden_ramp))
                (on ?d ?d)
              )
            )
          )
        )
        (not
          (or
            (and
              (object_orientation ?tb upright)
              (not
                (same_object ?d top_drawer)
              )
            )
            (agent_holds ?tb)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - ball)
      (and
        (preference throwAttempt
          (exists (?p2 - game_object)
            (then
              (once (agent_holds ?p2) )
              (once (adjacent bed ?b) )
              (once (not (and (not (agent_holds ?d) ) (and (not (and (not (adjacent door ?l2) ) (not (exists (?l ?b10 - ball ?b - tall_cylindrical_block ?l2 - hexagonal_bin) (and (or (exists (?b6 - cube_block) (not (agent_holds ?w) ) ) (is_setup_object ?h) ) (agent_holds ?h) ) ) ) (< (distance ?d ?p) 4) (not (and (in_motion ?d) (adjacent_side room_center front ?p2) ) ) ) ) (not (in ?b ?h) ) (same_type ?h pillow) (not (agent_holds ?h) ) ) (in ?b agent) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (total-time) (* (count-total throwAttempt:blue_dodgeball) (+ (count throwAttempt:hexagonal_bin) (* (* 3 2 )
          (count-increasing-measure throwAttempt:dodgeball)
        )
      )
      (* 50 1 )
    )
  )
)
(:scoring
  (count throwAttempt:green)
)
)



(define (game game-id-884) (:domain many-objects-room-v1)
(:setup
  (exists (?b - (either golfball cube_block))
    (and
      (and
        (or
          (game-conserved
            (and
              (not
                (adjacent_side ?b front ?b ?b)
              )
              (< (distance ?b ?p) (distance ?d ?b))
            )
          )
          (game-optional
            (> (distance ?c ?h) (distance ?w ?b))
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - cube_block ?d - cube_block)
      (and
        (preference castleBuilt
          (exists (?d - beachball)
            (then
              (once (not (in_motion ?c) ) )
              (once (adjacent ?h ?o) )
              (once (= 4 10 1) )
            )
          )
        )
        (preference ballThrownOntoTarget
          (exists (?d - (either dodgeball cube_block) ?o2 - dodgeball)
            (then
              (once (on ?d ?o2) )
              (once (agent_holds ?d) )
              (hold (agent_holds ?b1) )
            )
          )
        )
      )
    )
    (forall (?b8 - wall)
      (and
        (preference objectMoved
          (exists (?l4 - doggie_bed)
            (then
              (hold (agent_holds ?b8) )
              (hold (same_color ?l4 ?c) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-overlapping ballThrownOntoTarget:beachball) -10 )
)
(:scoring
  (* (count ballThrownOntoTarget:beachball) (count castleBuilt:beachball:dodgeball) )
)
)



(define (game game-id-885) (:domain medium-objects-room-v1)
(:setup
  (forall (?r - (either watch cylindrical_block dodgeball) ?l2 - (either laptop cube_block triangular_ramp laptop cylindrical_block))
    (exists (?r - red_dodgeball)
      (game-conserved
        (not
          (same_color ?l2 ?r)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockToBinFromRug
      (exists (?d - book ?h - dodgeball ?l3 - dodgeball)
        (then
          (once (agent_holds ?t1) )
          (once (and (not (agent_holds ?b) ) (adjacent_side ?c front top_shelf ?l3) ) )
          (hold (in ?l3 top_shelf) )
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (or
        (> 3 (count blockToBinFromRug:yellow:dodgeball:dodgeball) )
        (= (total-time) 10 )
        (and
          (> (- (count blockToBinFromRug:rug) )
            (total-score)
          )
        )
      )
      (>= 10 (+ 4 (count blockToBinFromRug) )
      )
    )
  )
)
(:scoring
  (* (count blockToBinFromRug:dodgeball:alarm_clock) 7 )
)
)



(define (game game-id-886) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (is_setup_object ?o)
  )
)
(:constraints
  (and
    (forall (?l - dodgeball ?p2 - building)
      (and
        (preference bookOnDeskShelf
          (exists (?h - pyramid_block ?g - hexagonal_bin)
            (then
              (once (and (on ?g ?g) (game_over ) ) )
              (once (or (and (agent_holds agent) (same_color desk yellow) (same_object ?b ?g) (not (in ?d ?b) ) (and (not (in_motion ?d) ) (and (and (in ?d agent) (and (agent_holds ?b) (agent_holds ?b) ) ) (= (distance ?w1 ?b) 1) ) ) (and (or (and (agent_holds agent) (exists (?w2 - building ?w2 - block) (in_motion floor) ) ) (on ?g ?p2) ) (in ?d ?g) ) (in_motion agent) ) (and (in_motion ?g) (not (and (adjacent ?g ?c6) (in ?d ?g) ) ) ) ) )
              (once (< 2 (distance_side east_sliding_door front_left_corner ?g)) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count bookOnDeskShelf:beachball:pink:hexagonal_bin) 2 )
  )
)
(:scoring
  (- 15 )
)
)



(define (game game-id-887) (:domain few-objects-room-v1)
(:setup
  (exists (?s - game_object)
    (exists (?o - block)
      (and
        (game-conserved
          (and
            (touch ?b ?o)
            (same_color ?o ?c)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectLandsInBin
      (exists (?h - hexagonal_bin)
        (at-end
          (and
            (and
              (exists (?g - dodgeball)
                (agent_holds ?g)
              )
              (in ?h ?b)
              (and
                (not
                  (forall (?b7 ?s - game_object)
                    (not
                      (not
                        (in ?h ?b7)
                      )
                    )
                  )
                )
                (and
                  (not
                    (in_motion ?b)
                  )
                  (and
                    (and
                      (in_motion ?b)
                      (in ?o ?h)
                      (opposite ?h ?h)
                    )
                    (agent_holds ?h)
                  )
                )
              )
              (in_motion ?b)
            )
            (in_motion ?h)
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-once-per-objects objectLandsInBin:alarm_clock) (* (count-once-per-external-objects objectLandsInBin:doggie_bed) 2 5 8 (count objectLandsInBin:red_pyramid_block) 6 (count-once-per-objects objectLandsInBin:blue_dodgeball) (external-forall-maximize (count-once objectLandsInBin:golfball:basketball) ) 2 (count-once objectLandsInBin:basketball) (+ (count objectLandsInBin:tan) (* 0 6 (+ 10 18 )
            1
            1
            10
            9
            10
            5
            (count objectLandsInBin:dodgeball:yellow_cube_block)
            (count objectLandsInBin:red)
            (count objectLandsInBin:beachball:dodgeball)
          )
          (count-once-per-objects objectLandsInBin:yellow)
        )
        (count-once objectLandsInBin:dodgeball)
      )
    )
    (and
      (or
        (>= 10 4 )
        (>= (count-overlapping objectLandsInBin:alarm_clock:cube_block) 9 )
      )
    )
  )
)
(:scoring
  (count objectLandsInBin:red:dodgeball)
)
)



(define (game game-id-888) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?d - doggie_bed)
      (game-conserved
        (agent_crouches )
      )
    )
  )
)
(:constraints
  (and
    (preference blockPlacedInBuilding
      (exists (?x - building)
        (then
          (hold (in ?r ?x) )
          (once (touch ?d ?x) )
          (once (and (in_motion ?x) (>= 0.5 (distance ?c ?x)) (adjacent_side ?h back agent) ) )
        )
      )
    )
    (preference throwBallToBin
      (exists (?w - curved_wooden_ramp ?h ?b - dodgeball)
        (then
          (once (agent_holds ?h) )
          (once (and (rug_color_under ?l1 ?h) (not (is_setup_object ?b) ) ) )
          (once (in ?b ?b) )
        )
      )
    )
  )
)
(:terminal
  (> 9 (count throwBallToBin:rug:yellow_pyramid_block) )
)
(:scoring
  (* 30 (* (* (* (count blockPlacedInBuilding:white) (* (* 3 (count throwBallToBin:dodgeball) (* 2 (* (= (count blockPlacedInBuilding:dodgeball) (count-once-per-objects throwBallToBin:basketball) )
                  (count-once blockPlacedInBuilding:pink_dodgeball)
                  (count throwBallToBin:yellow)
                  (+ (count-once-per-external-objects blockPlacedInBuilding) (* 5 10 )
                  )
                  (* 1 2 (count-once-per-objects throwBallToBin:beachball) )
                )
              )
            )
            (count throwBallToBin:book)
          )
        )
        (count-overlapping throwBallToBin:dodgeball)
      )
      10
      (external-forall-minimize
        (* 3 (count-once-per-objects blockPlacedInBuilding:pink:beachball) (* (count-overlapping blockPlacedInBuilding:purple) 1 )
          (count blockPlacedInBuilding:pink_dodgeball)
          1
          2
        )
      )
    )
    (/
      (count-once-per-objects blockPlacedInBuilding:green)
      (* (* (count throwBallToBin:basketball) 3 )
        (count throwBallToBin:dodgeball)
      )
    )
  )
)
)



(define (game game-id-889) (:domain few-objects-room-v1)
(:setup
  (forall (?db - building)
    (and
      (and
        (and
          (game-conserved
            (on ?db ?b)
          )
          (game-optional
            (and
              (and
                (and
                  (agent_holds ?db)
                  (< 6 2)
                )
                (in_motion desk)
              )
              (agent_holds ?b)
            )
          )
          (game-conserved
            (in_motion ?db)
          )
        )
        (exists (?l - dodgeball)
          (game-optional
            (exists (?w2 - (either yellow dodgeball) ?d2 - game_object)
              (game_over )
            )
          )
        )
      )
      (and
        (forall (?b5 - wall)
          (forall (?w2 - hexagonal_bin ?c - (either pyramid_block alarm_clock cellphone))
            (game-conserved
              (> (distance_side ?b5 front ?db front_left_corner) 2)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference agentLeavesDogbedOrNoMoreBalls
      (exists (?bl - hexagonal_bin)
        (at-end
          (and
            (in_motion ?d)
            (in_motion ?b)
            (< 4 (distance ?w2 ?bl))
            (in_motion bed)
            (in ?o2 ?bl)
            (agent_holds ?bl)
          )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (count agentLeavesDogbedOrNoMoreBalls:dodgeball) )
)
(:scoring
  (count-same-positions agentLeavesDogbedOrNoMoreBalls:yellow)
)
)



(define (game game-id-890) (:domain few-objects-room-v1)
(:setup
  (exists (?h - wall ?o1 - building ?o - dodgeball ?b - building)
    (and
      (exists (?t - (either cd doggie_bed))
        (game-conserved
          (not
            (and
              (and
                (or
                  (not
                    (agent_holds ?c)
                  )
                )
                (and
                  (not
                    (agent_holds ?t)
                  )
                  (in_motion ?t)
                  (and
                    (agent_holds ?b)
                    (not
                      (in_motion pink_dodgeball)
                    )
                    (not
                      (not
                        (agent_holds ?d)
                      )
                    )
                    (agent_holds ?b)
                  )
                )
              )
              (agent_holds ?b)
            )
          )
        )
      )
      (game-conserved
        (< (x_position ?c) (building_size ?b))
      )
      (game-optional
        (in_motion ?b)
      )
    )
  )
)
(:constraints
  (and
    (preference blockInTowerKnockedByDodgeball
      (exists (?c - hexagonal_bin)
        (then
          (once (agent_holds ?b1) )
          (once (and (on ?c ?c) (agent_holds ?c) ) )
          (once (or (in ?g ?c) (and (in_motion ?h) (not (opposite ?h ?g) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 3 2 )
    (>= 5 18 )
  )
)
(:scoring
  (count-overlapping blockInTowerKnockedByDodgeball:top_drawer)
)
)



(define (game game-id-891) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (game_start )
  )
)
(:constraints
  (and
    (preference dodgeballThrownToBin
      (at-end
        (and
          (in_motion ?d)
          (not
            (in_motion ?c)
          )
        )
      )
    )
    (preference throwToDrawerOrBin
      (exists (?o - dodgeball)
        (then
          (hold (and (in ?h ?o) (and (not (not (and (and (and (in ?o ?b) (in_motion ?d) ) (not (on ?c ?o) ) ) (< (distance ?h ?o) 1) ) ) ) (not (in ?l1 ?o) ) ) (not (adjacent agent ?o) ) ) )
          (hold (< (x_position ?d) 1) )
          (hold (and (open ?d) (not (in ?o ?d2) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (or
        (< (count throwToDrawerOrBin:blue_dodgeball:red:yellow_pyramid_block) (count throwToDrawerOrBin:yellow:dodgeball) )
        (and
          (or
            (>= (total-time) (* 1 6 )
            )
            (>= (total-time) (* 1 5 )
            )
          )
          (or
            (= 5 (count throwToDrawerOrBin:dodgeball) )
            (> 3 3 )
          )
          (> 2 1 )
        )
      )
      (>= (count throwToDrawerOrBin:blue_dodgeball) (* (+ (= 100 (count dodgeballThrownToBin:blue_dodgeball) )
            (count throwToDrawerOrBin:dodgeball)
          )
          (count-once-per-objects throwToDrawerOrBin:orange)
        )
      )
      (> (* (= 6 5 )
          300
        )
        10
      )
    )
    (>= (+ 6 (count-once dodgeballThrownToBin:cube_block) )
      (count dodgeballThrownToBin:side_table)
    )
  )
)
(:scoring
  (* 3 2 (external-forall-maximize (count-once-per-objects dodgeballThrownToBin:cube_block:cylindrical_block) ) )
)
)



(define (game game-id-892) (:domain medium-objects-room-v1)
(:setup
  (forall (?l4 - dodgeball)
    (and
      (exists (?c ?b ?d - curved_wooden_ramp ?o2 - cylindrical_block ?o2 - dodgeball)
        (game-conserved
          (and
            (in_motion ?l4)
            (not
              (and
                (not
                  (agent_holds ?l4)
                )
                (not
                  (in_motion ?d)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?g - game_object)
      (and
        (preference throwFromBehindChairsInBin
          (exists (?b6 - block)
            (then
              (hold (not (in_motion ?b6) ) )
              (once (on ?o ?d) )
              (once (not (adjacent ?b6 ?b6) ) )
            )
          )
        )
      )
    )
    (forall (?d - cylindrical_block)
      (and
        (preference throwToBinFromOppositeWall
          (exists (?r2 - (either pencil pyramid_block))
            (then
              (once (< (distance ?r2 ?d) (distance ?w1 ?r2)) )
              (hold-while (and (equal_x_position door ?d) (on ?d ?d) ) (touch ?r2 ?ob) )
              (once (same_type ?r2 ?d) )
            )
          )
        )
      )
    )
    (forall (?c5 - dodgeball)
      (and
        (preference pyramidBlockAtopTowerAtEnd
          (then
            (once (in_motion ?d) )
            (hold (agent_holds ?d) )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects pyramidBlockAtopTowerAtEnd:top_drawer:dodgeball) (* (count throwToBinFromOppositeWall:hexagonal_bin) 5 (count pyramidBlockAtopTowerAtEnd:basketball) )
  )
)
(:scoring
  (* (count-once-per-objects pyramidBlockAtopTowerAtEnd:pink) 7 )
)
)



(define (game game-id-893) (:domain many-objects-room-v1)
(:setup
  (and
    (game-optional
      (same_type ?r2 pillow)
    )
  )
)
(:constraints
  (and
    (preference bigObjectThrownToBed
      (exists (?r - chair)
        (at-end
          (on ?r ?r)
        )
      )
    )
  )
)
(:terminal
  (> (total-time) 50 )
)
(:scoring
  (count bigObjectThrownToBed:dodgeball)
)
)



(define (game game-id-894) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (adjacent door ?o)
  )
)
(:constraints
  (and
    (preference itemsHidingScreens
      (exists (?l - teddy_bear)
        (then
          (hold (not (in ?b ?l) ) )
          (once (in_motion ?w2) )
          (once (and (and (not (touch ?d ?l) ) (adjacent ?l ?l) (in_motion ?l) ) (and (agent_holds ?l) (in ?d ?p) (in_motion ?l) ) (and (game_start ) (and (agent_holds ?l) (and (not (adjacent bed ?l) ) (not (agent_holds ?o) ) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (= 1 (* 2 2 (count-once itemsHidingScreens:pink_dodgeball) )
    )
    (>= (count-total itemsHidingScreens:alarm_clock) (+ (/ 6 (count itemsHidingScreens:dodgeball:beachball) ) (- 7 )
        (count itemsHidingScreens:green)
        20
        (* (count-measure itemsHidingScreens:yellow_cube_block:bed) (* 3 0.5 )
        )
        (count itemsHidingScreens:golfball)
        (count itemsHidingScreens:triangle_block)
        10
        3
      )
    )
  )
)
(:scoring
  (count itemsHidingScreens:tall_cylindrical_block)
)
)



(define (game game-id-895) (:domain many-objects-room-v1)
(:setup
  (forall (?o - ball)
    (forall (?h - (either hexagonal_bin))
      (game-conserved
        (agent_holds ?h)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?b - (either doggie_bed curved_wooden_ramp wall))
        (at-end
          (and
            (agent_holds agent)
            (not
              (exists (?f - hexagonal_bin ?o - cube_block ?h ?r - curved_wooden_ramp)
                (agent_holds ?h)
              )
            )
            (< (x_position ?p) 2)
            (open ?r1)
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 6 (count ballThrownToBin:beachball) )
    (or
      (not
        (> (+ (count ballThrownToBin:beachball) (count ballThrownToBin:red_pyramid_block) )
          (* (count ballThrownToBin:blue_cube_block) (* 5 7 )
          )
        )
      )
      (>= 3 (* (* (* (count-once-per-objects ballThrownToBin:dodgeball) 20 )
            (* 3 )
          )
          8
        )
      )
      (or
        (<= (* (count ballThrownToBin:hexagonal_bin:green) (* (* 15 5 )
              (* (count-once ballThrownToBin:pink) 2 )
              (count-once ballThrownToBin:dodgeball)
            )
            (count ballThrownToBin:yellow)
          )
          3
        )
        (or
          (>= 1 (* (+ 5 5 )
              (* (+ 10 (count-once ballThrownToBin:blue_dodgeball:dodgeball:white) )
                (external-forall-maximize
                  (count-overlapping ballThrownToBin:red:pink)
                )
                (+ (count ballThrownToBin:beachball) (count-once-per-objects ballThrownToBin:tall_cylindrical_block) (count ballThrownToBin:doggie_bed) )
              )
            )
          )
          (or
            (>= (* 1 (count-once-per-objects ballThrownToBin:pink) )
              (count ballThrownToBin:beachball)
            )
            (or
              (>= 0 (count ballThrownToBin:dodgeball) )
              (>= 5 (* (count-same-positions ballThrownToBin:yellow) (count-once-per-objects ballThrownToBin:yellow_cube_block) )
              )
            )
          )
        )
      )
    )
  )
)
(:scoring
  (count ballThrownToBin:dodgeball)
)
)



(define (game game-id-896) (:domain many-objects-room-v1)
(:setup
  (forall (?p - triangular_ramp ?b - game_object)
    (game-optional
      (not
        (same_object ?o bed)
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - game_object)
      (and
        (preference throwAttemptFromDoor
          (exists (?d - game_object ?d - dodgeball)
            (then
              (once (not (and (not (not (exists (?d - chair) (agent_holds ?d) ) ) ) (forall (?d - (either laptop desktop) ?b - hexagonal_bin ?b2 - hexagonal_bin) (adjacent_side room_center front ?d) ) ) ) )
              (hold (and (and (and (on ?b ?b) (rug_color_under ?d ?d) ) (not (toggled_on ?d) ) ) (and (in_motion ?b) (in_motion ?c2) ) ) )
              (once (agent_holds ?d) )
            )
          )
        )
        (preference blockFromRugToDesk
          (exists (?h - (either tall_cylindrical_block cube_block))
            (then
              (once (agent_holds ?d) )
              (once (not (agent_holds ?b) ) )
              (once (in_motion ?h) )
              (hold (and (agent_holds ?p) (on ?d ?b) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (count-once-per-external-objects blockFromRugToDesk:yellow:pink) )
)
(:scoring
  (count blockFromRugToDesk:beachball:beachball)
)
)



(define (game game-id-897) (:domain medium-objects-room-v1)
(:setup
  (exists (?w1 - teddy_bear)
    (game-optional
      (and
        (forall (?d - dodgeball ?p - chair)
          (in ?p ?b)
        )
        (< 3 (distance agent ?w1))
      )
    )
  )
)
(:constraints
  (and
    (forall (?p2 - (either alarm_clock) ?b ?s - building ?d1 - dodgeball)
      (and
        (preference ballInOrOnBin
          (exists (?o - game_object)
            (then
              (once (forall (?r1 - shelf) (in_motion ?s) ) )
              (once (or (on agent ?d1) (in_motion ?l2) ) )
              (hold-while (and (and (not (on ?o ?b) ) (agent_holds ?d) ) (and (exists (?w - (either floor dodgeball cube_block)) (in_motion ?d) ) (on ?d1 ?l2) (exists (?r - (either cellphone)) (adjacent ?r ?b) ) ) (and (in ?o3 ?b) (adjacent agent ?b) ) ) (agent_holds ?o) (adjacent_side door back ?d1 front) )
            )
          )
        )
      )
    )
    (preference objectsHidden
      (exists (?d - ball)
        (then
          (once (and (and (and (in_motion ?r) (in_motion ?d) ) (game_over ) (not (toggled_on ?d) ) (and (in_motion ?d) (agent_holds ?d) ) ) (agent_holds ?d) (agent_holds ?t2) ) )
          (once (not (and (and (and (not (and (and (not (and (on ?b ?r) (exists (?t1 - game_object) (in_motion ?d) ) (not (not (and (agent_holds ?d) (in ?b ?r2) (or (not (or (not (is_setup_object ?d) ) (not (touch ?r ?d) ) ) ) (and (same_object ?b ?l2) (adjacent ?d ?o) (agent_holds ?d) (between ?d ?b ?b) ) ) ) ) ) (same_color door blue) ) ) (game_over ) ) (not (agent_holds ?h) ) (in_motion ?d) ) ) (or (opposite ?t ?d) (on ?d ?d) ) ) (in ?d ?d) ) (and (in ?d ?d) (between ?h ?d ?d) ) ) ) )
          (once (agent_holds ?d) )
        )
      )
    )
  )
)
(:terminal
  (> 18 40 )
)
(:scoring
  (count-once-per-objects ballInOrOnBin:yellow_cube_block)
)
)



(define (game game-id-898) (:domain few-objects-room-v1)
(:setup
  (exists (?b - shelf ?w1 - building)
    (exists (?b2 - game_object ?c - game_object ?w2 - cube_block)
      (game-optional
        (on ?r ?w2)
      )
    )
  )
)
(:constraints
  (and
    (preference blindsOpened
      (exists (?g - hexagonal_bin)
        (then
          (once (agent_holds ?c2) )
          (once (broken ?b3) )
          (once (in_motion ?g) )
        )
      )
    )
    (preference failedThrowToBin
      (exists (?w - (either game_object beachball) ?g ?b ?c2 - dodgeball)
        (at-end
          (exists (?o2 - game_object)
            (agent_holds ?b)
          )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (- (external-forall-minimize (count-once-per-objects failedThrowToBin:dodgeball) ) )
  )
)
(:scoring
  (* (+ (+ 3 (= (count blindsOpened:yellow_cube_block) (count-once-per-objects failedThrowToBin:yellow:pyramid_block) )
      )
      (* (* (* (+ 2 15 )
            6
          )
        )
        (count blindsOpened:golfball)
      )
    )
    (count-once-per-objects failedThrowToBin:beachball)
  )
)
)



(define (game game-id-899) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (not
      (not
        (in ?d ?t)
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?b10 - curved_wooden_ramp)
        (then
          (hold (agent_holds ?d) )
          (once (not (not (not (on ?b10 ?b10) ) ) ) )
          (once (and (on ?t ?b10) (in ?d ?h) ) )
        )
      )
    )
    (forall (?h - hexagonal_bin)
      (and
        (preference agentLeavesDogbedOrNoMoreBalls
          (then
            (once (in_motion ?ob) )
            (once (on ?b ?b) )
            (once (and (not (on ?h ?b) ) (not (in_motion ?b) ) (and (on ?h ?h) (touch ?h ?h) ) ) )
          )
        )
      )
    )
  )
)
(:terminal
  (<= 10 (count-once agentLeavesDogbedOrNoMoreBalls:book) )
)
(:scoring
  (+ (count-once-per-objects throwAttempt:alarm_clock) (count-once-per-objects throwAttempt) )
)
)



(define (game game-id-900) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (in_motion ?h)
  )
)
(:constraints
  (and
    (forall (?h - building)
      (and
        (preference pillowThrownToDoggieBed
          (exists (?ob - game_object)
            (at-end
              (exists (?h - pyramid_block)
                (agent_holds ?h)
              )
            )
          )
        )
        (preference bigObjectThrownToBed
          (exists (?b6 - hexagonal_bin)
            (then
              (hold (adjacent_side ?h front ?b ?b6) )
              (hold (and (in_motion ?b6) (on ?b6 ?h) ) )
              (once (adjacent agent ?tb) )
              (once (in ?b6 ?d) )
            )
          )
        )
        (preference throwAttemptKnocksBlock
          (exists (?b - building ?s - dodgeball ?r1 - game_object)
            (at-end
              (equal_z_position agent ?p)
            )
          )
        )
      )
    )
    (forall (?d - chair ?d ?b8 ?s ?l ?b - hexagonal_bin)
      (and
        (preference bookOnDeskShelf
          (exists (?r2 - (either beachball alarm_clock))
            (then
              (once (in_motion ?r2) )
              (hold (and (object_orientation ?d sideways) (touch ?h ?s) ) )
              (hold-while (adjacent desk ?r2) (not (agent_holds ?c) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= 7 (total-score) )
  )
)
(:scoring
  (count bigObjectThrownToBed:pyramid_block:cube_block)
)
)



(define (game game-id-901) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (agent_holds ?d)
    )
  )
)
(:constraints
  (and
    (forall (?l3 - block ?ob - pyramid_block ?l3 - cube_block)
      (and
        (preference pillowThrownToDoggieBed
          (exists (?s ?h - game_object ?g - triangular_ramp ?b - dodgeball)
            (at-end
              (in_motion ?c)
            )
          )
        )
        (preference nonBlockPlacedInBuilding
          (exists (?o1 - teddy_bear)
            (then
              (hold-while (same_type ?c ?l4) (in_motion ?b) )
              (once (in_motion ?l3) )
              (hold (and (in ?l3 floor) (in_motion ?d) (in_motion ?b) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (* 6 (- 3 )
        6
      )
      (+ (count-once-per-objects pillowThrownToDoggieBed:basketball) (= 6 (* 60 (count nonBlockPlacedInBuilding:dodgeball:green) )
          9
        )
      )
    )
    8
  )
)
(:scoring
  (* 8 7 )
)
)



(define (game game-id-902) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (not
      (same_color ?c1 pink)
    )
  )
)
(:constraints
  (and
    (preference tanObjectMovedToRoomCenter
      (exists (?c2 - ball)
        (then
          (hold (adjacent ?w floor) )
          (once (<= (distance ?c2 ?l4) (distance ?c2 ?c2)) )
          (hold (object_orientation ?c3 upright) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ 180 (count tanObjectMovedToRoomCenter:pink) )
    2
  )
)
(:scoring
  (count tanObjectMovedToRoomCenter:orange)
)
)



(define (game game-id-903) (:domain many-objects-room-v1)
(:setup
  (forall (?h - hexagonal_bin)
    (exists (?g - curved_wooden_ramp ?d - (either cd) ?b - dodgeball ?w2 - pyramid_block)
      (exists (?b6 - (either cellphone chair))
        (game-conserved
          (same_color ?b6 pink)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - curved_wooden_ramp)
      (and
        (preference throwAttempt
          (exists (?h - building)
            (then
              (once (in_motion ?h) )
              (once (not (not (agent_holds ?h) ) ) )
              (once (agent_holds ?h) )
            )
          )
        )
        (preference dodgeballsInPlace
          (exists (?c - cube_block)
            (then
              (once (not (and (on ?b ?c) (not (in bed ?d) ) ) ) )
              (once (not (in_motion ?l2) ) )
              (once (in_motion ?b) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (> 3 20 )
  )
)
(:scoring
  (count throwAttempt:pink)
)
)



(define (game game-id-904) (:domain many-objects-room-v1)
(:setup
  (exists (?h - hexagonal_bin ?b5 - cube_block)
    (game-conserved
      (not
        (in ?d ?b5)
      )
    )
  )
)
(:constraints
  (and
    (forall (?o3 - (either bridge_block dodgeball chair) ?d - yellow_cube_block ?d - ball ?b - hexagonal_bin ?b3 - game_object)
      (and
        (preference throwAttemptFromDoor
          (exists (?r - ball ?h - building)
            (then
              (once (open ?b3) )
              (once (above ?l3 ?d) )
              (hold (exists (?h - (either cellphone cellphone pink) ?b - (either triangle_block desktop tall_cylindrical_block)) (agent_holds ?d) ) )
            )
          )
        )
      )
    )
    (preference throwBallToDoggieBed
      (exists (?b2 - (either dodgeball pillow))
        (then
          (once (in_motion ?b2) )
          (hold-while (not (adjacent ?c agent) ) (adjacent desk ?b2) )
          (once (and (and (in ?b2 ?b2) (< 1 2) (agent_holds ?b2) (not (same_color ?b2 brown) ) ) (equal_x_position ?b2 ?d) ) )
        )
      )
    )
    (forall (?b5 - hexagonal_bin ?o4 - dodgeball)
      (and
        (preference ballThrownToRug
          (exists (?r - dodgeball ?g - pillow)
            (then
              (hold (agent_holds ?r) )
              (once (agent_holds ?o) )
              (once (touch ?c ?d) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) 3 )
)
(:scoring
  (count throwBallToDoggieBed:yellow)
)
)



(define (game game-id-905) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (<= (distance room_center ?h) 1)
  )
)
(:constraints
  (and
    (forall (?h - triangular_ramp ?w - doggie_bed)
      (and
        (preference blockPlacedInBuilding
          (exists (?c - color)
            (at-end
              (agent_holds ?c)
            )
          )
        )
        (preference teddyBearLandsInBin
          (exists (?b - hexagonal_bin)
            (at-end
              (< 2 (distance room_center ?b))
            )
          )
        )
        (preference throwGolfballToBin
          (exists (?d - dodgeball)
            (then
              (hold-while (< 0 1) (on top_shelf ?h) (and (not (not (on ?d ?d) ) ) (in_motion ?l1) ) (on ?w ?d) )
              (hold (not (on ?b ?w) ) )
              (once (equal_z_position ?w ?b) )
            )
          )
        )
        (preference laptopAndBookInPlace
          (then
            (once (<= 1 (distance bed ?d)) )
            (once (agent_holds ?l1) )
            (hold-while (agent_holds ?w) (agent_holds bed) (and (not (and (not (on ?w ?w) ) (in_motion ?d) ) ) (not (in_motion ?b) ) ) )
          )
        )
      )
    )
    (forall (?w1 - pillow)
      (and
        (preference watchOnShelf
          (exists (?b4 - building ?t1 - dodgeball)
            (then
              (once (and (in_motion ?h) (agent_holds ?b) ) )
              (once (same_object ?d ?d) )
              (once (<= (distance ?t1 ?w1) (distance bed ?t1)) )
            )
          )
        )
        (preference throwFromEdgeOfRug
          (exists (?tb - dodgeball ?d - curved_wooden_ramp)
            (at-end
              (on ?d ?w1)
            )
          )
        )
        (preference castleBuilt
          (exists (?c4 - (either book doggie_bed cube_block))
            (at-end
              (on ?h ?w1)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (< (count laptopAndBookInPlace:cube_block) (count blockPlacedInBuilding:golfball) )
  )
)
(:scoring
  (count throwGolfballToBin:dodgeball:dodgeball)
)
)



(define (game game-id-906) (:domain medium-objects-room-v1)
(:setup
  (exists (?c2 - hexagonal_bin ?h ?h - game_object)
    (forall (?c - wall)
      (or
        (exists (?t2 - (either pyramid_block yellow))
          (game-conserved
            (or
              (> (distance_side ?h right ?g) (distance room_center ?b))
              (agent_holds ?d)
              (in_motion ?h)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?h - blue_cube_block ?o - pyramid_block)
        (at-end
          (not
            (adjacent bed ?o)
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (count throwBallToBin) )
)
(:scoring
  (count throwBallToBin:pink)
)
)



(define (game game-id-907) (:domain medium-objects-room-v1)
(:setup
  (not
    (exists (?c3 ?o - (either dodgeball doggie_bed alarm_clock lamp dodgeball yellow yellow_cube_block))
      (and
        (forall (?c3 - curved_wooden_ramp ?d - cylindrical_block ?b8 - building ?bl ?b - cube_block)
          (game-optional
            (and
              (and
                (and
                  (and
                    (and
                      (< (distance bed ?b) 1)
                    )
                    (not
                      (adjacent rug ?d)
                    )
                  )
                  (not
                    (and
                      (> (distance room_center ?w1) (distance east_sliding_door ?bl))
                      (on ?d ?c3)
                      (not
                        (forall (?h ?b - game_object)
                          (not
                            (agent_holds ?b)
                          )
                        )
                      )
                      (in_motion ?c3)
                    )
                  )
                )
                (not
                  (not
                    (or
                      (not
                        (rug_color_under ?o brown)
                      )
                      (and
                        (not
                          (and
                            (agent_holds ?o)
                            (touch ?d ?o)
                          )
                        )
                        (and
                          (and
                            (and
                              (equal_z_position agent ?c3)
                              (is_setup_object ?o)
                            )
                            (adjacent ?d ?b)
                          )
                          (forall (?d - triangular_ramp ?h ?w2 - doggie_bed)
                            (and
                              (touch ?d ?d)
                              (< (distance agent ?d) 1)
                              (adjacent agent ?l4)
                              (and
                                (not
                                  (in_motion ?bl)
                                )
                                (not
                                  (in_motion ?d)
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
                (exists (?ob - (either laptop golfball laptop))
                  (in ?b ?o)
                )
              )
              (on ?c ?d)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference redDodgeballThrownToBin
      (exists (?h - (either main_light_switch golfball) ?l - (either cube_block book alarm_clock floor bed))
        (at-end
          (not
            (in_motion ?b)
          )
        )
      )
    )
    (forall (?o5 - cube_block)
      (and
        (preference blockIncorrectlyPicked
          (exists (?h - color)
            (then
              (hold (and (and (touch ?o5 ?t) (in_motion ?b1) ) (exists (?c - golfball) (not (< (distance door ?o5) 9) ) ) ) )
              (once (in_motion ?h) )
              (hold (agent_holds ?o5) )
            )
          )
        )
        (preference binKnockedOver
          (exists (?b3 - (either cellphone triangular_ramp cellphone alarm_clock pillow))
            (then
              (once (adjacent agent ?l1) )
              (hold-while (not (in_motion ?o5) ) (broken ?t) )
              (once (adjacent room_center ?o5) )
            )
          )
        )
        (preference golfballUnderBridgeWithoutTouchingBlock
          (at-end
            (agent_holds ?d)
          )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (count-once-per-objects binKnockedOver:dodgeball) (count-once-per-objects binKnockedOver:blue_dodgeball) )
    (count golfballUnderBridgeWithoutTouchingBlock:dodgeball)
  )
)
(:scoring
  (* (count redDodgeballThrownToBin:tall_cylindrical_block) (count redDodgeballThrownToBin:golfball) )
)
)



(define (game game-id-908) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (not
      (or
        (agent_holds ?r)
        (not
          (forall (?b5 - dodgeball ?d - triangular_ramp)
            (agent_holds ?d)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToBed
      (exists (?c1 - hexagonal_bin)
        (then
          (once (between floor ?c ?w1) )
          (hold (touch ?c1 ?c1) )
          (once (in_motion ?d) )
        )
      )
    )
    (forall (?p - dodgeball ?o - dodgeball)
      (and
        (preference ballThrownToBin
          (exists (?o - dodgeball ?h - hexagonal_bin)
            (then
              (once (adjacent ?h ?o) )
              (hold (rug_color_under ?o blue) )
              (once (< 1 1) )
            )
          )
        )
        (preference throwToRampToBin
          (exists (?c - ball ?l2 - hexagonal_bin)
            (then
              (once (in_motion ?l2) )
              (once (on ?l2 ?l2) )
              (once (in_motion ?l2) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 4 10 )
)
(:scoring
  (count-once-per-objects ballThrownToBed:brown)
)
)



(define (game game-id-909) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (in ?d ?o)
  )
)
(:constraints
  (and
    (preference blockInTowerKnockedByDodgeball
      (exists (?t1 - doggie_bed ?d ?b - block)
        (then
          (once (in_motion ?bl) )
          (once (rug_color_under ?b brown) )
          (once (in_motion ?b) )
        )
      )
    )
  )
)
(:terminal
  (> (count blockInTowerKnockedByDodgeball:pink) (count blockInTowerKnockedByDodgeball:beachball) )
)
(:scoring
  (count-once-per-external-objects blockInTowerKnockedByDodgeball:blue_dodgeball)
)
)



(define (game game-id-910) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?l4 - flat_block)
      (exists (?p - block)
        (game-conserved
          (in_motion desk)
        )
      )
    )
    (and
      (game-conserved
        (not
          (in_motion door)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference failedThrowToBin
      (exists (?h - doggie_bed ?o ?c6 - teddy_bear)
        (then
          (once (agent_holds ?c2) )
          (once (in_motion ?o5) )
          (hold (not (touch ?o ?c6) ) )
        )
      )
    )
    (preference dodgeballFromRugToBin
      (exists (?h - hexagonal_bin ?h - color ?h - dodgeball)
        (then
          (hold (not (in_motion ?h) ) )
          (once (in_motion ?g) )
          (once (in_motion ?b) )
        )
      )
    )
    (preference blockKnockedFromBuildingInBin
      (exists (?b - chair)
        (at-end
          (on ?b ?b)
        )
      )
    )
  )
)
(:terminal
  (and
    (< (* (- -10 )
        (count failedThrowToBin:beachball)
        (- 2 )
      )
      10
    )
    (> (- (count-overlapping dodgeballFromRugToBin:book) )
      (count failedThrowToBin:beachball)
    )
    (or
      (>= (* (count-shortest failedThrowToBin:red_pyramid_block) (* (+ 2 2 )
            (* 2 (count-once dodgeballFromRugToBin:dodgeball) (count blockKnockedFromBuildingInBin:blue_cube_block) 3 (= (external-forall-maximize (count-once failedThrowToBin:book) ) 3 )
              (count failedThrowToBin:blue_dodgeball:basketball)
            )
          )
        )
        (total-score)
      )
      (or
        (or
          (>= (count failedThrowToBin:dodgeball:pink) (+ 5 10 )
          )
          (>= (count-increasing-measure dodgeballFromRugToBin:yellow:beachball) (total-score) )
          (<= 30 (* (/ (count-once-per-external-objects failedThrowToBin:dodgeball) (count-once-per-objects failedThrowToBin:basketball) ) (external-forall-minimize (count-measure blockKnockedFromBuildingInBin:basketball) ) )
          )
        )
        (>= (total-score) (total-score) )
      )
      (> 2 (* (count-once-per-objects dodgeballFromRugToBin:yellow_pyramid_block) 100 )
      )
    )
  )
)
(:scoring
  (* (- (+ 5 (* 0 (- (count-once-per-objects dodgeballFromRugToBin:cylindrical_block) )
        )
        2
      )
      4
    )
    1
  )
)
)



(define (game game-id-911) (:domain many-objects-room-v1)
(:setup
  (exists (?c5 - dodgeball)
    (and
      (exists (?w1 - curved_wooden_ramp ?c - hexagonal_bin)
        (forall (?d - dodgeball ?b - hexagonal_bin)
          (exists (?b - hexagonal_bin)
            (or
              (exists (?b - hexagonal_bin)
                (game-conserved
                  (adjacent ?h agent)
                )
              )
              (game-conserved
                (forall (?d2 - hexagonal_bin)
                  (same_type ?b drawer)
                )
              )
              (and
                (game-conserved
                  (and
                    (in ?c ?r)
                    (agent_holds ?g)
                  )
                )
                (exists (?g - ball)
                  (forall (?b4 - game_object)
                    (forall (?b - curved_wooden_ramp)
                      (and
                        (forall (?o - (either yellow_cube_block doggie_bed) ?d - hexagonal_bin)
                          (game-conserved
                            (not
                              (in_motion ?g)
                            )
                          )
                        )
                      )
                    )
                  )
                )
                (game-optional
                  (and
                    (= 9 (distance ?c ?o))
                    (adjacent_side ?h left ?c back)
                  )
                )
                (game-conserved
                  (on ?t ?c)
                )
              )
            )
          )
        )
      )
      (game-conserved
        (in_motion ?d)
      )
      (and
        (game-conserved
          (not
            (and
              (and
                (and
                  (not
                    (> (distance ?h main_light_switch) 3)
                  )
                  (and
                    (above ?c5 ?b2)
                    (not
                      (in ?b1 ?c5)
                    )
                  )
                )
                (on ?c5 ?c5)
              )
              (and
                (in_motion ?c5)
                (and
                  (and
                    (in_motion ?h)
                    (on ?r ?h)
                  )
                  (not
                    (agent_holds ?c5)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c - bridge_block)
      (and
        (preference ballThrownFromDoor
          (at-end
            (not
              (agent_holds ?d)
            )
          )
        )
        (preference throwFromEdgeOfRug
          (exists (?b8 - pillow ?h - hexagonal_bin)
            (then
              (once (and (and (on ?h ?ob) (same_color ?c ?h) ) (agent_holds ?c) ) )
              (once (and (not (touch ?c ?h) ) (rug_color_under ?g brown) (agent_holds ?h) ) )
            )
          )
        )
        (preference throwObjectToBin
          (exists (?c - (either cellphone cube_block cylindrical_block) ?c4 ?b7 - hexagonal_bin)
            (then
              (once (adjacent ?h agent) )
              (hold (< 8 (distance ?r ?c)) )
              (hold (on ?d ?c) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count ballThrownFromDoor) (count-overlapping ballThrownFromDoor:dodgeball) )
)
(:scoring
  (count-once-per-external-objects throwFromEdgeOfRug:pink_dodgeball)
)
)



(define (game game-id-912) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds ?l1)
  )
)
(:constraints
  (and
    (preference blockOnBlockInTowerAtEnd
      (exists (?c - game_object ?l3 - hexagonal_bin)
        (at-end
          (object_orientation ?c upright)
        )
      )
    )
  )
)
(:terminal
  (<= 50 (total-score) )
)
(:scoring
  (count blockOnBlockInTowerAtEnd:golfball)
)
)



(define (game game-id-913) (:domain medium-objects-room-v1)
(:setup
  (exists (?c - game_object)
    (game-conserved
      (not
        (agent_holds ?c)
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - doggie_bed ?h - chair ?r - hexagonal_bin ?b - book)
      (and
        (preference towerFallsWhileBuilding
          (then
            (hold (same_object ?b ?b) )
            (once (on ?b ?b) )
            (once (in_motion ?d) )
          )
        )
      )
    )
    (forall (?t - teddy_bear)
      (and
        (preference beachballBouncedOffRamp
          (exists (?r - dodgeball)
            (then
              (hold (= 8 3) )
              (once (and (on ?h ?h) (on ?b ?r) ) )
              (hold-while (or (and (and (not (adjacent bed ?g) ) (not (not (not (and (not (not (in ?g ?b) ) ) (touch ?d ?r) ) ) ) ) ) (not (in_motion ?b) ) ) (in_motion ?t) ) (adjacent room_center ?t) (in ?h ?t) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (count towerFallsWhileBuilding:pink) 10 )
    (total-time)
  )
)
(:scoring
  (* 100 10 )
)
)



(define (game game-id-914) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?d - (either pillow book) ?bl - beachball)
      (game-optional
        (agent_crouches )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - ball ?t1 - (either cellphone))
      (and
        (preference throwToDrawerOrBin
          (exists (?c - golfball)
            (then
              (once (in_motion ?t1) )
              (once (not (agent_holds ?d) ) )
            )
          )
        )
      )
    )
    (preference itemsBroken
      (exists (?p ?h - dodgeball)
        (then
          (once (and (on ?h ?h) (and (in_motion green_golfball) (on ?p ?d) (and (agent_holds ?p) (and (< 0.5 (building_size ?o)) (opposite ?o ?h) ) ) (not (in ?d ?d) ) ) (and (and (and (agent_holds ?p) (agent_holds ?h) ) (not (in ?h ?h) ) ) (or (on ?o bed) (and (not (not (not (adjacent desk ?o) ) ) ) (touch floor ?g) (on ?o1 ?h) ) ) ) (on ?p ?h) (not (agent_holds ?h) ) (in ?d ?p) (agent_holds rug) (same_type ?h ?p) (not (in_motion ?o1) ) (exists (?c1 - triangular_ramp) (on ?p ?b) ) ) )
          (once-measure (and (adjacent ?h ?o1) (adjacent ?p desk) ) (distance ?o1 ?h) )
          (once (in_motion floor) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (or
        (>= (count-once-per-objects itemsBroken) (* (* 16 5 )
            (count itemsBroken:yellow:pink)
          )
        )
        (<= (+ (* (* 2 (count-once-per-external-objects itemsBroken:dodgeball:basketball) )
              2
            )
            (count itemsBroken:basketball)
          )
          (count-once-per-objects itemsBroken)
        )
        (not
          (or
            (or
              (> 5 2 )
              (or
                (or
                  (>= 20 (count itemsBroken:side_table) )
                )
                (< 5 (count-once-per-objects throwToDrawerOrBin:yellow:basketball) )
              )
            )
            (>= (+ (= 300 (count throwToDrawerOrBin:red) 4 )
                (count-once-per-objects itemsBroken:dodgeball)
              )
              (count itemsBroken:basketball:book)
            )
            (>= 3 (count-increasing-measure itemsBroken:beachball) )
          )
        )
      )
      (>= 3 (count itemsBroken:dodgeball:dodgeball) )
    )
    (not
      (>= 5 (total-score) )
    )
    (>= (total-score) (count throwToDrawerOrBin:book) )
  )
)
(:scoring
  (- (count-once-per-objects throwToDrawerOrBin:top_drawer) )
)
)



(define (game game-id-915) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?b6 - (either key_chain bridge_block alarm_clock chair tall_cylindrical_block))
      (and
        (exists (?l ?w2 - beachball)
          (forall (?bl - building)
            (and
              (forall (?h - cube_block)
                (game-optional
                  (not
                    (in_motion ?bl)
                  )
                )
              )
            )
          )
        )
      )
    )
    (game-optional
      (and
        (and
          (in_motion ?bl)
          (agent_holds agent)
        )
        (agent_holds ?t1)
      )
    )
  )
)
(:constraints
  (and
    (preference throwObjectToBin
      (exists (?w2 - yellow_cube_block ?l3 - dodgeball)
        (then
          (once (in_motion top_shelf) )
          (once (on ?l3 ?b) )
          (hold (and (same_object ?b2 ?o) (and (adjacent_side ?w1 back ?l3 front) (agent_holds ?b) (and (game_start ) (exists (?r2 - pillow) (and (in_motion ?c) (in_motion ?b) (= 1 (distance ?b2 ?r2)) ) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 3 6 )
    (<= 5 (> 3 3 )
    )
    (or
      (>= (* 2 5 2 (external-forall-maximize (* (+ 3 (+ (count throwObjectToBin:green) 100 (- (count-once-per-objects throwObjectToBin:green:cube_block) )
                )
              )
              (+ 0.7 (count-once-per-objects throwObjectToBin:basketball) )
              (count-once-per-objects throwObjectToBin:beachball)
              (count-once-per-objects throwObjectToBin:hexagonal_bin)
              1
              (count-same-positions throwObjectToBin:cube_block)
              (count-once-per-objects throwObjectToBin:green:blue_pyramid_block)
              3
              (count-once-per-external-objects throwObjectToBin:dodgeball)
              5
              2
              3
            )
          )
          (count throwObjectToBin:pink)
          (count throwObjectToBin)
        )
        (total-time)
      )
      (or
        (= (count throwObjectToBin:beachball) (count-once throwObjectToBin:doggie_bed) )
        (or
          (>= 5 (count throwObjectToBin:dodgeball:beachball) )
          (>= (external-forall-minimize (external-forall-maximize (count-overlapping throwObjectToBin:dodgeball) ) ) (count-once throwObjectToBin:pink_dodgeball:dodgeball) )
        )
        (> (count-once-per-objects throwObjectToBin:basketball:purple) (total-time) )
      )
    )
    (< (total-score) (count-once-per-objects throwObjectToBin:beachball:beachball:beachball) )
  )
)
(:scoring
  (- (count-once-per-objects throwObjectToBin:beachball) )
)
)



(define (game game-id-916) (:domain medium-objects-room-v1)
(:setup
  (or
    (forall (?c - triangular_ramp ?d - cube_block ?c ?h ?b1 ?d2 - wall)
      (exists (?g - dodgeball)
        (game-conserved
          (in_motion ?o)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwMissesBin
      (exists (?o2 - block ?c - hexagonal_bin)
        (at-end
          (or
            (in_motion ?c)
            (not
              (in_motion side_table)
            )
          )
        )
      )
    )
    (preference objectMovedRoomSide
      (exists (?h - (either alarm_clock wall cylindrical_block) ?o1 - curved_wooden_ramp)
        (then
          (hold (and (and (and (and (and (in_motion ?o1) (agent_crouches ) ) (touch ?o1 ?o1) (and (adjacent ?h ?o1) (not (and (and (in_motion agent) (in ?d ?p) ) (in_motion ?b) ) ) ) ) (not (on ?b ?o1) ) ) (and (agent_holds ?o) (on ?b ?o1) ) ) (in_motion ?o1) ) )
          (once (agent_holds ?o1) )
          (hold (and (and (on ?b ?o1) (in_motion ?o1) (agent_holds ?b5) ) (not (agent_holds ?b) ) (or (not (and (on ?o1 ?o1) (not (agent_holds ?r) ) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-measure throwMissesBin:pink_dodgeball) (count throwMissesBin:beachball) )
    (or
      (>= (total-score) 20 )
    )
    (>= (* (count-once-per-objects objectMovedRoomSide:wall) (* 2 (* 5 8 )
        )
      )
      (total-score)
    )
  )
)
(:scoring
  (count objectMovedRoomSide:blue_cube_block)
)
)



(define (game game-id-917) (:domain many-objects-room-v1)
(:setup
  (not
    (exists (?d - ball ?b - teddy_bear)
      (exists (?d - pillow)
        (and
          (forall (?h - red_dodgeball)
            (exists (?w2 - block)
              (game-conserved
                (open ?h)
              )
            )
          )
          (game-conserved
            (< (distance room_center ?o1) 9)
          )
          (game-optional
            (agent_holds ?b)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - hexagonal_bin ?t1 - (either tall_cylindrical_block main_light_switch dodgeball doggie_bed) ?b6 - hexagonal_bin)
      (and
        (preference objectsHidden
          (exists (?b4 - cube_block)
            (then
              (hold (and (agent_holds ?b6) (object_orientation ?d sideways) ) )
              (once (agent_holds ?l1) )
              (once (in_motion ?b) )
              (once (not (on ?b2 ?c) ) )
            )
          )
        )
        (preference objectWithMatchingColor
          (exists (?c4 - desk_shelf)
            (at-end
              (exists (?s - hexagonal_bin ?c4 - hexagonal_bin ?h - hexagonal_bin)
                (and
                  (not
                    (not
                      (in ?o ?h)
                    )
                  )
                  (not
                    (agent_holds ?d)
                  )
                )
              )
            )
          )
        )
      )
    )
    (preference ballThrownToBin
      (exists (?b - triangular_ramp ?g - dodgeball)
        (at-end
          (in ?g agent)
        )
      )
    )
  )
)
(:terminal
  (>= 30 (total-time) )
)
(:scoring
  (count-once-per-objects objectWithMatchingColor:alarm_clock)
)
)



(define (game game-id-918) (:domain medium-objects-room-v1)
(:setup
  (exists (?h - building)
    (game-conserved
      (and
        (is_setup_object agent)
        (adjacent_side ?h right ?h front)
        (and
          (on ?p ?c)
          (agent_holds ?h)
          (and
            (and
              (and
                (and
                  (in ?h ?b)
                  (agent_holds ?h)
                )
                (in ?h ?d)
                (and
                  (not
                    (in_motion ?h)
                  )
                  (agent_holds ?h)
                )
                (not
                  (opposite ?p ?f)
                )
                (touch ?b ?h)
                (in ?h ?c)
                (agent_holds ?d)
              )
              (agent_holds ?h)
            )
            (and
              (agent_holds ?h)
              (in_motion ?h)
              (not
                (and
                  (adjacent agent ?t)
                  (agent_holds ?h)
                  (on ?d ?h)
                )
              )
              (not
                (and
                  (and
                    (object_orientation ?c upside_down)
                    (on ?h ?h)
                  )
                  (in_motion ?h)
                )
              )
              (on ?h ?ob)
              (adjacent ?h ?o)
              (and
                (in_motion ?c)
                (touch ?h ?l)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?h ?h ?d - hexagonal_bin)
        (at-end
          (= 7 (distance door ?b) 1)
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (+ 5 (* (+ (* 180 0.5 (count-once-per-objects throwAttempt:golfball) 4 2 )
            10
          )
          (* 4 (- (* (count-once throwAttempt:purple) 6 (* 100 8 )
                2
              )
            )
          )
        )
      )
      (count-once-per-objects throwAttempt:golfball)
    )
  )
)
(:scoring
  (count throwAttempt:hexagonal_bin)
)
)



(define (game game-id-919) (:domain many-objects-room-v1)
(:setup
  (exists (?p - chair)
    (exists (?b - dodgeball)
      (and
        (and
          (or
            (game-conserved
              (adjacent ?r ?o)
            )
          )
          (game-optional
            (on ?b ?b6)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockCorrectlyPicked
      (exists (?b - block ?o1 - chair)
        (then
          (once (in_motion ?d) )
          (once (and (not (in_motion ?b) ) (not (in_motion ?o1) ) (adjacent_side door front ?o1) ) )
          (once (in_motion ?o1) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (+ (+ (count blockCorrectlyPicked:alarm_clock) 2 )
        (count blockCorrectlyPicked:book)
        (* (count blockCorrectlyPicked:pink_dodgeball) (* (count-once-per-objects blockCorrectlyPicked:hexagonal_bin) (+ (count blockCorrectlyPicked:dodgeball) (count-once blockCorrectlyPicked:green:yellow) )
          )
        )
      )
      (external-forall-maximize
        (= 1 2 )
      )
    )
    (= (count-same-positions blockCorrectlyPicked:basketball) (* 10 (count-once-per-objects blockCorrectlyPicked:basketball) )
    )
    (= (count blockCorrectlyPicked:blue_dodgeball) (total-score) )
  )
)
(:scoring
  (count-total blockCorrectlyPicked:golfball)
)
)



(define (game game-id-920) (:domain few-objects-room-v1)
(:setup
  (and
    (game-conserved
      (adjacent ?c south_wall)
    )
    (forall (?l4 - hexagonal_bin ?w1 - game_object)
      (and
        (and
          (exists (?p - ball)
            (exists (?tb - cube_block)
              (game-conserved
                (or
                  (on ?b ?tb)
                  (and
                    (not
                      (not
                        (exists (?o1 - bridge_block ?p - hexagonal_bin)
                          (agent_holds ?p)
                        )
                      )
                    )
                    (and
                      (or
                        (agent_holds ?w1)
                        (game_over )
                      )
                      (and
                        (adjacent ?w1 ?p)
                        (agent_holds ?tb)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwInBin
      (exists (?h - wall ?t - hexagonal_bin ?db - building)
        (then
          (once (agent_holds agent) )
          (hold-while (agent_holds ?d) (not (not (not (in rug ?db) ) ) ) (in_motion ?b) )
          (once (and (in_motion ?h) (in_motion ?db) ) )
        )
      )
    )
    (preference ballRolledOnRampToRug
      (exists (?l ?r - hexagonal_bin)
        (then
          (hold (is_setup_object ?l) )
          (once (faces ?t ?o) )
          (hold (not (in_motion ?l) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 3 5 )
)
(:scoring
  (+ (count-once-per-objects ballRolledOnRampToRug:dodgeball) (count throwInBin:blue_dodgeball:golfball:blue_dodgeball) 5 (count-once-per-objects ballRolledOnRampToRug:basketball) (count ballRolledOnRampToRug:dodgeball:white) 3 7 )
)
)



(define (game game-id-921) (:domain medium-objects-room-v1)
(:setup
  (forall (?r2 - shelf)
    (game-optional
      (not
        (on ?r2 ?r2)
      )
    )
  )
)
(:constraints
  (and
    (preference objectInBuilding
      (exists (?b - hexagonal_bin ?b - cylindrical_block)
        (then
          (hold (not (< 7 1) ) )
          (once (on ?o5 bed) )
          (once (<= (distance ?c ?b) 1) )
        )
      )
    )
  )
)
(:terminal
  (or
    (< (total-time) (total-score) )
    (= (= (count-once objectInBuilding:pink) (count-once-per-objects objectInBuilding:blue_dodgeball:red_pyramid_block) 3 )
      (count-same-positions objectInBuilding:dodgeball)
    )
  )
)
(:scoring
  (count objectInBuilding)
)
)



(define (game game-id-922) (:domain medium-objects-room-v1)
(:setup
  (forall (?d - ball)
    (game-optional
      (and
        (not
          (agent_holds ?d)
        )
        (on ?p2 ?d)
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttemptFromBehindBlock
      (exists (?h - (either cube_block wall))
        (then
          (once (in ?h agent) )
          (once (agent_holds ?h) )
          (once (< (x_position ?o1) 1) )
        )
      )
    )
  )
)
(:terminal
  (<= (* (+ 100 180 )
    )
    (- (count-once throwAttemptFromBehindBlock:beachball) )
  )
)
(:scoring
  (count-same-positions throwAttemptFromBehindBlock:doggie_bed:red)
)
)



(define (game game-id-923) (:domain few-objects-room-v1)
(:setup
  (exists (?b10 - chair)
    (game-optional
      (or
        (adjacent ?b10 ?d)
        (not
          (in_motion ?o5)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToBinOffObject
      (exists (?o - hexagonal_bin ?b3 - game_object)
        (then
          (once (adjacent ?b3 ?o) )
          (once (agent_holds ?b3) )
          (once (and (in desktop ?b) (on ?b3 ?b) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 6 )
)
(:scoring
  (count throwBallToBinOffObject:blue_pyramid_block)
)
)



(define (game game-id-924) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?l4 - cube_block ?b - shelf ?h - doggie_bed ?h - (either cube_block))
      (and
        (game-conserved
          (not
            (agent_holds ?d)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?w1 - hexagonal_bin)
        (at-end
          (exists (?b - tall_cylindrical_block ?b3 ?o5 - golfball ?c - hexagonal_bin ?d - hexagonal_bin)
            (same_object ?f ?b)
          )
        )
      )
    )
    (preference ballThrownToChair
      (exists (?h - dodgeball ?d - hexagonal_bin)
        (at-end
          (not
            (< (distance ?d agent) (distance ?d desk))
          )
        )
      )
    )
  )
)
(:terminal
  (>= 4 (count-once-per-objects ballThrownToChair:hexagonal_bin:basketball) )
)
(:scoring
  (count ballThrownToChair:beachball:beachball)
)
)



(define (game game-id-925) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?b7 - drawer)
      (exists (?r - game_object ?b - game_object)
        (exists (?o3 ?c1 - (either cylindrical_block book bed))
          (and
            (game-conserved
              (same_color ?h pink)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballAndBasketballInBin
      (exists (?o - (either doggie_bed laptop key_chain golfball golfball pillow tall_cylindrical_block) ?w2 - flat_block)
        (then
          (hold (on ?w2 ?c3) )
          (once (not (and (in_motion pink_dodgeball) (and (in_motion ?w2) (>= (distance ?h ?c) 1) ) ) ) )
          (once (and (and (not (in_motion ?w2) ) (or (not (toggled_on ?l2) ) (and (in_motion ?b1) (in_motion ?w2) ) ) ) (exists (?b1 - shelf) (object_orientation ?w2 sideways) ) (adjacent_side ?r back ?w2) ) )
        )
      )
    )
    (forall (?b6 - pyramid_block ?h - wall)
      (and
        (preference teddyBearHitsBall
          (exists (?b - curved_wooden_ramp ?h - building)
            (then
              (once (object_orientation ?h upright) )
              (once (and (on rug ?d) (and (and (agent_holds ?h) (and (and (between ?b8 ?h ?h) (agent_holds ?d) ) (not (in_motion ?c) ) ) ) (and (and (and (agent_holds ?r) (not (and (on ?o ?h) (not (and (not (and (in_motion ?b) (in_motion ?h) ) ) (on ?l2 ?b) ) ) ) ) ) (not (in_motion ?h) ) ) (agent_holds ?h) (and (agent_holds ?h) (not (above ?p ?h) ) ) ) (and (on ?h ?d) (and (in_motion ?h) (adjacent ?h ?h) ) ) ) ) )
              (once (not (on ?h ?h) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (count teddyBearHitsBall:tan) (* 3 (count-same-positions teddyBearHitsBall:green) (* 3 (count teddyBearHitsBall:hexagonal_bin) )
        (* (count-overlapping teddyBearHitsBall:golfball:golfball) (* (* (* 3 )
              (+ (count teddyBearHitsBall:pink) 7 )
            )
            (- 0 )
          )
        )
      )
    )
  )
)
(:scoring
  (* (count-overlapping dodgeballAndBasketballInBin:dodgeball) 50 (- (count dodgeballAndBasketballInBin:blue_cube_block:green) )
  )
)
)



(define (game game-id-926) (:domain medium-objects-room-v1)
(:setup
  (exists (?h - building)
    (game-optional
      (not
        (in_motion ?h)
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballFromRugToBin
      (exists (?o2 - shelf)
        (at-end
          (and
            (in_motion ?o)
            (in_motion ?o2)
            (in_motion ?o)
            (not
              (rug_color_under ?c1 ?c)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 8 (count-once dodgeballFromRugToBin:orange) )
)
(:scoring
  (+ (count-once-per-objects dodgeballFromRugToBin:beachball:purple) (count dodgeballFromRugToBin:side_table) )
)
)



(define (game game-id-927) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - building)
      (exists (?h - pillow ?b2 ?o4 - building)
        (game-conserved
          (in_motion green_golfball)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToDrawerOrBin
      (exists (?b1 - dodgeball)
        (then
          (once (and (in_motion ?b1) (on ?b1 ?b1) ) )
          (hold (not (and (or (not (not (between ?h ?b1 ?b1) ) ) (not (in_motion ?b1) ) ) (in ?d ?b) ) ) )
          (once (and (not (in_motion ?b1) ) (on ?c1 ?b1) (not (not (on ?d1 ?g) ) ) (exists (?p1 - dodgeball) (and (in_motion ?p1) (exists (?b3 - game_object ?d - blue_pyramid_block) (and (agent_holds ?p1) (not (agent_holds ?d) ) (not (adjacent ?b1 ?p1) ) ) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (- 5 )
      (* 6 5 (count-once-per-external-objects throwToDrawerOrBin:pink_dodgeball) (count throwToDrawerOrBin:wall) )
    )
    (> (total-time) 2 )
  )
)
(:scoring
  (count-once-per-objects throwToDrawerOrBin:alarm_clock)
)
)



(define (game game-id-928) (:domain medium-objects-room-v1)
(:setup
  (forall (?b - (either pyramid_block beachball) ?o - hexagonal_bin)
    (exists (?c5 - hexagonal_bin)
      (exists (?h - shelf ?h - dodgeball)
        (and
          (forall (?h - dodgeball)
            (and
              (game-optional
                (< 8 1)
              )
            )
          )
          (and
            (exists (?s - triangular_ramp ?b5 - hexagonal_bin)
              (and
                (game-conserved
                  (in_motion ?h)
                )
                (game-optional
                  (agent_holds ?o)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectOnBed
      (exists (?h - hexagonal_bin)
        (then
          (once (forall (?t1 - hexagonal_bin) (not (in_motion ?l2) ) ) )
          (once (< 1 4) )
        )
      )
    )
    (preference ballThrownIntoTarget
      (exists (?h - dodgeball)
        (at-end
          (not
            (and
              (adjacent ?h top_shelf)
              (and
                (exists (?b9 ?x - golfball)
                  (in ?x ?x)
                )
                (and
                  (and
                    (is_setup_object ?h)
                    (not
                      (< 3 (distance ?h ?h))
                    )
                    (and
                      (adjacent ?w ?h)
                      (on ?h ?h)
                    )
                  )
                  (in_motion ?h)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< (external-forall-maximize (count-once-per-external-objects objectOnBed:doggie_bed) ) (* 30 (count objectOnBed:pyramid_block) )
  )
)
(:scoring
  (* 5 2 )
)
)



(define (game game-id-929) (:domain many-objects-room-v1)
(:setup
  (exists (?w1 - color)
    (forall (?h - hexagonal_bin ?b4 - (either dodgeball alarm_clock) ?p - building)
      (exists (?t - hexagonal_bin)
        (game-conserved
          (object_orientation ?t sideways)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - dodgeball)
      (and
        (preference throwKnocksOverBear
          (exists (?c - hexagonal_bin)
            (then
              (once-measure (in_motion rug) (distance_side bed front_left_corner ?g) )
              (once (and (agent_holds ?c1) (on ?o ?h) (or (agent_holds ?r) (not (in ?h ?l1) ) ) ) )
              (once (in ?r ?b) )
            )
          )
        )
      )
    )
    (preference ballThrownMissesEverything
      (exists (?h - building)
        (then
          (once (and (not (not (and (on ?h bottom_shelf) (on ?d ?h) ) ) ) (and (in_motion ?l) (in_motion ?h) (not (agent_holds ?h) ) ) ) )
          (hold (not (agent_holds ?b) ) )
          (once (agent_holds ?o) )
        )
      )
    )
    (preference dodgeballHitsBinBottom
      (exists (?p3 - red_dodgeball)
        (then
          (once (agent_holds ?p3) )
          (once (open ?d) )
          (once (not (not (and (agent_holds ?p3) (not (touch ?d1 ?p3) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (not
        (or
          (>= 1 7 )
          (or
            (< (count-once-per-objects throwKnocksOverBear:basketball) (count-overlapping ballThrownMissesEverything:white:beachball) )
            (>= (total-time) (total-time) )
          )
          (> 2 3 )
        )
      )
      (or
        (>= (- (count-once-per-objects ballThrownMissesEverything:pink:yellow) )
          (* (count ballThrownMissesEverything:golfball:pink_dodgeball) 8 )
        )
        (and
          (>= (* (count throwKnocksOverBear:blue_dodgeball) (count-total ballThrownMissesEverything) (+ 10 (count ballThrownMissesEverything) )
            )
            (total-score)
          )
          (>= (+ (* (count throwKnocksOverBear:basketball:pink) (count-once-per-objects dodgeballHitsBinBottom:yellow_cube_block) )
              10
            )
            10
          )
          (>= (+ 10 (* (count-once-per-objects throwKnocksOverBear:hexagonal_bin) (count dodgeballHitsBinBottom:basketball:beachball) )
              6
            )
            (+ (+ (count ballThrownMissesEverything:basketball) (* (* 1 2 )
                  (count-once-per-objects throwKnocksOverBear:basketball:golfball)
                )
              )
              (count dodgeballHitsBinBottom:beachball)
              0
              2
              6
              (count dodgeballHitsBinBottom:beachball:cube_block)
            )
          )
        )
      )
      (>= (count dodgeballHitsBinBottom:yellow) (external-forall-minimize (* (count ballThrownMissesEverything:rug:tall_cylindrical_block) 4 )
        )
      )
    )
    (> (count-once-per-objects ballThrownMissesEverything:dodgeball:pink) (+ 5 (* 3 (* (count dodgeballHitsBinBottom:beachball) (+ 5 (count-once throwKnocksOverBear:golfball:yellow) )
            (count ballThrownMissesEverything:dodgeball)
          )
          (count-once-per-objects throwKnocksOverBear:doggie_bed)
        )
      )
    )
  )
)
(:scoring
  (* 1 (* (count-increasing-measure ballThrownMissesEverything:dodgeball) (* (count ballThrownMissesEverything:blue_dodgeball) 9 )
    )
  )
)
)



(define (game game-id-930) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?c - bridge_block ?h - hexagonal_bin)
      (or
        (exists (?p1 - dodgeball)
          (and
            (game-optional
              (not
                (adjacent agent ?b)
              )
            )
            (exists (?tb - (either laptop dodgeball yellow floor doggie_bed cylindrical_block wall))
              (and
                (and
                  (game-optional
                    (and
                      (faces ?b ?g)
                      (< 3 (distance ?c ?c1))
                    )
                  )
                )
                (and
                  (exists (?d - teddy_bear ?b5 - hexagonal_bin ?b - hexagonal_bin)
                    (game-conserved
                      (and
                        (agent_crouches )
                        (in_motion ?s)
                      )
                    )
                  )
                  (game-conserved
                    (and
                      (agent_holds ?d)
                      (in_motion ?o)
                    )
                  )
                )
              )
            )
            (and
              (and
                (exists (?h - hexagonal_bin)
                  (exists (?r - cube_block)
                    (game-conserved
                      (in_motion ?b)
                    )
                  )
                )
                (and
                  (game-optional
                    (and
                      (adjacent ?h ?h)
                      (agent_holds ?h)
                    )
                  )
                )
              )
            )
          )
        )
        (game-optional
          (not
            (on ?h ?h)
          )
        )
      )
    )
    (and
      (exists (?c - hexagonal_bin)
        (and
          (game-optional
            (and
              (agent_holds ?t)
              (on ?b2 ?c)
            )
          )
        )
      )
      (exists (?tb - (either key_chain beachball))
        (and
          (not
            (exists (?h - hexagonal_bin ?c6 - building ?b - block)
              (game-conserved
                (touch ?tb ?bl)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?l ?h - curved_wooden_ramp)
      (and
        (preference golfballInBinFromPillow
          (exists (?b - drawer ?tb - chair)
            (then
              (once (and (object_orientation ?tb upright) (and (equal_z_position ?tb ?h) (agent_holds ?c) ) ) )
              (once (adjacent agent ?b) )
              (hold (on desk ?o) )
            )
          )
        )
        (preference greenObjectMovedToRoomCenter
          (exists (?h - hexagonal_bin ?t - ball ?c4 - color)
            (then
              (once (same_type ?h ?c4) )
              (once (adjacent room_center ?h) )
              (once (on ?p ?g) )
            )
          )
        )
        (preference throwToBin
          (exists (?t2 - bridge_block)
            (then
              (hold-while (in_motion ?b2) (on ?l ?h) )
              (once (in_motion ?l) )
              (once (in_motion ?b1) )
              (hold-while (agent_holds ?d) (on ?d ?b) (game_over ) )
            )
          )
        )
      )
    )
    (preference baseBlockInTowerAtEnd
      (exists (?r2 - wall)
        (then
          (once (and (on ?r2 bed) (< (distance ?c ?r2) (distance ?r2 ?r2)) ) )
          (once (in_motion ?r2) )
          (once (and (in_motion ?d) (in_motion ?b5) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (- (+ (count golfballInBinFromPillow) 2 )
        (+ 3 (- 300 )
          (count-measure golfballInBinFromPillow:red)
        )
      )
      10
    )
    3
  )
)
(:scoring
  (count throwToBin:yellow:dodgeball:dodgeball)
)
)



(define (game game-id-931) (:domain medium-objects-room-v1)
(:setup
  (or
    (game-conserved
      (on ?d floor)
    )
  )
)
(:constraints
  (and
    (preference dodgeballThrownToBinFromDesk
      (exists (?l1 - hexagonal_bin ?h - ball ?h ?d - (either triangular_ramp golfball))
        (then
          (once (in_motion ?h) )
          (once (agent_holds ?d) )
          (hold-while (in ?d ?h) (exists (?b6 - building) (on ?b6 ?o) ) )
        )
      )
    )
    (forall (?b - building ?b10 ?b ?b ?h ?s ?o - hexagonal_bin)
      (and
        (preference dodgeballHitsPillowWithoutTouchingBlock
          (exists (?b - ball ?d - hexagonal_bin)
            (then
              (once (and (and (agent_holds ?b10) (not (< 2 1) ) (agent_holds ?r) ) (rug_color_under ?h blue) (in_motion ?b10) ) )
              (hold (agent_holds ?b) )
              (once (not (adjacent room_center ?d) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (total-time) (count dodgeballHitsPillowWithoutTouchingBlock:dodgeball:pink) )
      (and
        (>= (total-score) (* (- 5 )
            2
          )
        )
        (>= (* (count dodgeballThrownToBinFromDesk:beachball:basketball) 8 )
          0
        )
        (>= (count dodgeballHitsPillowWithoutTouchingBlock:red_pyramid_block) (count-once-per-objects dodgeballThrownToBinFromDesk:pink) )
      )
      (or
        (or
          (> 6 (total-score) )
          (or
            (<= 10 (count-once-per-external-objects dodgeballThrownToBinFromDesk:yellow) )
            (and
              (and
                (<= (count dodgeballThrownToBinFromDesk:beachball) 7 )
                (>= 6 (total-score) )
              )
            )
          )
          (>= 8 1 )
        )
        (> (count-once dodgeballHitsPillowWithoutTouchingBlock:rug:orange) (count dodgeballThrownToBinFromDesk:book) )
      )
    )
    (or
      (>= (total-time) (external-forall-maximize (count-same-positions dodgeballThrownToBinFromDesk:red_pyramid_block) ) )
      (>= 6 (- 0 )
      )
    )
  )
)
(:scoring
  (count dodgeballThrownToBinFromDesk:blue_cube_block)
)
)



(define (game game-id-932) (:domain many-objects-room-v1)
(:setup
  (forall (?t - hexagonal_bin)
    (forall (?b6 - tan_cube_block)
      (game-conserved
        (and
          (not
            (not
              (>= 8 (distance door ?t))
            )
          )
          (on ?t ?b)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?f - curved_wooden_ramp ?o - sliding_door ?d - chair)
      (and
        (preference throwToBinFromDistance
          (exists (?s - hexagonal_bin)
            (then
              (once (and (not (and (not (agent_holds ?c4) ) (not (and (object_orientation ?h upside_down) (and (agent_holds ?d) (agent_holds ?l1) ) ) ) ) ) (and (not (not (not (game_over ) ) ) ) (in ?g ?c2) ) (and (and (> (distance agent ?c) 1) (in_motion ?h) ) (same_object ?d ?h) (forall (?d - hexagonal_bin) (agent_holds ?s) ) (adjacent door ?d) (equal_x_position bed top_drawer) (and (agent_holds ?d) (broken bed) ) (agent_holds ?r) (not (and (not (on ?d ?s) ) (agent_holds ?o) ) ) ) ) )
              (once (and (in ?b ?h) (or (agent_holds ?d) (not (and (not (agent_holds ?d) ) ) ) (on ?d ?b2) ) ) )
              (once (and (on ?r green_golfball) (not (in ?s ?c1) ) (not (and (and (equal_z_position ?c ?b2) (not (not (in_motion agent) ) ) ) (not (not (and (rug_color_under agent pink) (in_motion ?s) (and (in_motion ?s) (agent_holds ?b) ) (and (adjacent_side agent ?d ?d) (agent_holds bed) ) (and (and (touch ?d ?s) (in ?s ?s) ) (on ?d ?d) (on floor agent) ) (and (and (in_motion ?d) (agent_holds ?b1) (agent_holds ?d) ) (on ?s ?s) ) ) ) ) (agent_holds ?d) (and (and (in_motion ?d) (and (on ?d ?s) (not (agent_holds ?s) ) (rug_color_under ?s ?o2) ) ) (agent_holds ?d) ) (on ?t ?b) (agent_holds ?b) (and (and (agent_holds ?db) (game_start ) (on ?b ?s) ) (on ?s desk) (not (agent_holds ?b) ) ) ) ) (and (not (not (and (in ?d ?b) (on ?s ?b) ) ) ) (and (and (agent_holds green_golfball) (exists (?h ?o1 - teddy_bear ?d - tall_cylindrical_block) (on ?t ?b) ) (agent_holds ?t) ) (not (on ?c ?o) ) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (count throwToBinFromDistance:blue_dodgeball) 6 )
)
(:scoring
  (count throwToBinFromDistance:basketball)
)
)



(define (game game-id-933) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (and
        (exists (?l4 - ball)
          (and
            (exists (?b3 - golfball)
              (exists (?l3 - drawer ?b9 - bridge_block)
                (not
                  (exists (?d - hexagonal_bin)
                    (game-conserved
                      (and
                        (touch ?o ?l4)
                        (not
                          (not
                            (and
                              (in_motion agent)
                              (same_object ?d ?d)
                              (and
                                (above south_wall ?d)
                                (equal_x_position ?c ?d)
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - teddy_bear ?b - teddy_bear ?c - (either doggie_bed yellow))
      (and
        (preference blockPlacedInBuilding
          (exists (?c3 - red_pyramid_block)
            (then
              (once (game_over ) )
              (hold (< (distance bed ?l) 1) )
              (once (in_motion ?b) )
            )
          )
        )
      )
    )
    (forall (?c - hexagonal_bin)
      (and
        (preference blockInTowerAtEnd
          (exists (?d - flat_block ?o2 - dodgeball)
            (then
              (once (not (on ?b ?w1) ) )
              (once-measure (and (in ?o2 ?c) (agent_holds ?b) (in_motion ?o2) (is_setup_object ?c) (or (< 7 (distance agent ?b)) (on ?c ?r) ) (in_motion ?c) ) (distance agent ?o2) )
              (once (agent_holds ?c) )
            )
          )
        )
      )
    )
    (preference beachballBouncedOffRamp
      (exists (?b1 - dodgeball ?b - doggie_bed)
        (then
          (hold (equal_x_position door ?b) )
          (hold (and (not (agent_holds ?b) ) (and (not (agent_holds ?o) ) (agent_holds ?d) ) ) )
          (hold (or (not (adjacent ?b ?b) ) ) )
        )
      )
    )
  )
)
(:terminal
  (> (* (count-once-per-objects blockInTowerAtEnd:golfball) (- 9 )
    )
    (count beachballBouncedOffRamp:pink)
  )
)
(:scoring
  (count blockPlacedInBuilding:doggie_bed)
)
)



(define (game game-id-934) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (in_motion ?b)
  )
)
(:constraints
  (and
    (forall (?c1 - game_object)
      (and
        (preference objectToBinOnFirstTry
          (exists (?b - game_object)
            (at-end
              (and
                (in_motion ?d)
                (in_motion ?c)
                (and
                  (and
                    (adjacent_side ?c1 front ?d)
                    (adjacent desk ?p)
                    (opposite ?c1 ?c1)
                  )
                  (exists (?h - hexagonal_bin)
                    (in ?o ?c)
                  )
                )
              )
            )
          )
        )
        (preference ballThrownFromRug
          (exists (?b1 - hexagonal_bin)
            (then
              (once (on agent ?b) )
              (once (agent_holds ?c1) )
              (once (agent_holds ?b1) )
            )
          )
        )
        (preference ballThrownToRampToBed
          (exists (?h - (either laptop pencil) ?c2 - teddy_bear)
            (at-end
              (object_orientation ?c2 upright)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* 30 4 )
    (count ballThrownFromRug:beachball)
  )
)
(:scoring
  (count-once-per-objects ballThrownFromRug:red:yellow)
)
)



(define (game game-id-935) (:domain many-objects-room-v1)
(:setup
  (exists (?l2 - dodgeball ?p - block)
    (game-conserved
      (on ?o ?p)
    )
  )
)
(:constraints
  (and
    (forall (?c3 - hexagonal_bin ?t - hexagonal_bin ?c - hexagonal_bin)
      (and
        (preference throwToRampToBin
          (exists (?o3 - color ?h - block)
            (then
              (once (on agent ?h) )
              (hold-while (agent_holds ?d) (in_motion ?c) )
              (once (exists (?b3 - game_object ?g - dodgeball) (same_object ?b2 ?l) ) )
            )
          )
        )
        (preference ballThrownIntoTarget
          (at-end
            (forall (?w - wall ?l4 ?t1 - hexagonal_bin)
              (and
                (and
                  (in_motion ?t)
                  (in ?t ?t1)
                )
                (and
                  (agent_holds bed)
                  (not
                    (object_orientation ?o upright)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (count-once-per-objects throwToRampToBin:beachball) 1 )
    (> (count throwToRampToBin:basketball) 2 )
    (> (* (count throwToRampToBin:blue) (+ (* (external-forall-maximize (* (count throwToRampToBin:golfball:dodgeball) (external-forall-maximize (count-once-per-objects throwToRampToBin:blue_dodgeball:yellow) ) )
            )
            2
          )
          (+ (count-once-per-objects ballThrownIntoTarget:pink) (* 6 (count-once ballThrownIntoTarget:block:hexagonal_bin) (count throwToRampToBin:blue_dodgeball) )
          )
        )
      )
      (total-time)
    )
  )
)
(:scoring
  (* (- 2 )
  )
)
)



(define (game game-id-936) (:domain few-objects-room-v1)
(:setup
  (or
    (exists (?w1 - teddy_bear)
      (and
        (game-conserved
          (in_motion ?b)
        )
        (game-conserved
          (not
            (and
              (>= (distance agent ?d) 6)
              (and
                (adjacent room_center agent)
                (agent_crouches )
              )
              (not
                (on ?w1 ?o)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c - (either dodgeball main_light_switch))
      (and
        (preference dodgeballThrownToBin
          (exists (?b6 - cube_block)
            (then
              (once (agent_holds ?b6) )
              (once (not (same_color ?b6 ?c) ) )
              (hold (and (same_color ?o brown) (and (and (and (and (in ?b6 ?b6) (= 0.5 (distance ?h ?c)) ) (not (touch ?d ?o) ) ) (touch ?c ?c) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (> 10 (total-score) )
    (> (total-score) (count dodgeballThrownToBin:orange:doggie_bed) )
  )
)
(:scoring
  (external-forall-maximize
    (* (= 8 10 )
      (* 3 (+ 5 )
        4
        (count dodgeballThrownToBin:beachball)
        (* 10 40 )
        (count-once-per-objects dodgeballThrownToBin:yellow_pyramid_block:hexagonal_bin)
      )
    )
  )
)
)



(define (game game-id-937) (:domain many-objects-room-v1)
(:setup
  (exists (?l2 - dodgeball)
    (and
      (exists (?c - watch)
        (game-conserved
          (agent_holds ?o)
        )
      )
      (game-conserved
        (agent_holds ?d)
      )
      (exists (?db - dodgeball)
        (exists (?h - teddy_bear)
          (and
            (exists (?h - shelf)
              (game-optional
                (and
                  (not
                    (game_over )
                  )
                  (agent_crouches )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference cubeBlockInBuilding
      (exists (?b8 - doggie_bed)
        (then
          (once (on ?b8 ?b8) )
          (once (and (on ?g ?b8) (agent_holds ?b8) ) )
          (once (in_motion ?l2) )
        )
      )
    )
  )
)
(:terminal
  (>= 7 (count cubeBlockInBuilding:yellow_cube_block) )
)
(:scoring
  (count cubeBlockInBuilding:beachball:yellow)
)
)



(define (game game-id-938) (:domain few-objects-room-v1)
(:setup
  (not
    (forall (?c - shelf)
      (and
        (forall (?p1 - ball)
          (forall (?d - pillow)
            (or
              (game-conserved
                (in ?o2 ?p1)
              )
            )
          )
        )
        (forall (?ob - (either hexagonal_bin pyramid_block dodgeball))
          (and
            (and
              (game-conserved
                (exists (?h - triangular_ramp)
                  (in bed ?o)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballThrownToBin
      (exists (?b - ball)
        (then
          (once (not (between ?b ?b ?b) ) )
          (once (on ?b ?b) )
          (hold-while (and (or (and (on ?b ?b) (in_motion ?b) (and (not (touch ?l ?b) ) (agent_holds ?b) (and (not (in_motion ?b) ) (agent_holds ?h) (not (opposite ?b ?d) ) (game_start ) ) ) ) (in ?b ?b) ) (and (< (distance_side agent front_left_corner ?h front) (distance ?c ?b)) (in ?b ?b) ) ) (is_setup_object ?b) )
        )
      )
    )
  )
)
(:terminal
  (= (* 3 2 )
    (total-score)
  )
)
(:scoring
  (+ 2 (count-longest dodgeballThrownToBin:pyramid_block) )
)
)



(define (game game-id-939) (:domain medium-objects-room-v1)
(:setup
  (and
    (or
      (forall (?h - beachball ?c - (either dodgeball cylindrical_block))
        (and
          (forall (?l - curved_wooden_ramp ?l ?db ?p ?o ?l ?w2 ?t1 ?o ?o ?s - chair)
            (or
              (game-optional
                (and
                  (not
                    (not
                      (and
                        (in_motion ?c3)
                      )
                    )
                  )
                  (in ?b ?db)
                )
              )
            )
          )
          (game-conserved
            (not
              (on ?c ?b)
            )
          )
          (and
            (forall (?o - cylindrical_block)
              (forall (?c1 - (either pink blue_cube_block alarm_clock) ?h - dodgeball ?p1 - game_object ?h - curved_wooden_ramp)
                (forall (?w2 - curved_wooden_ramp)
                  (game-conserved
                    (not
                      (and
                        (not
                          (forall (?c - chair)
                            (agent_holds ?c)
                          )
                        )
                        (agent_holds ?c)
                      )
                    )
                  )
                )
              )
            )
          )
          (game-conserved
            (and
              (in_motion ?b)
              (not
                (and
                  (and
                    (on ?c ?c)
                    (or
                      (in ?h ?g)
                      (not
                        (in_motion ?c)
                      )
                    )
                  )
                  (in ?b ?c)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToChair
      (exists (?d1 - chair)
        (then
          (hold (in ?d desk) )
          (once (and (adjacent agent ?t) (in_motion ?g) ) )
          (once (on ?d1 ?d1) )
        )
      )
    )
    (forall (?b - blinds ?h - (either cellphone credit_card tall_cylindrical_block))
      (and
        (preference thrownBallHitsBlock
          (exists (?c3 - (either yellow_cube_block golfball))
            (then
              (hold (agent_holds ?t) )
              (once (or (in_motion ?h) (not (and (on ?d ?c) (and (and (and (not (not (on ?h ?c3) ) ) (in_motion ?c3) (agent_holds ?c3) (in ?h ?o1) ) (in_motion desktop) ) (not (agent_crouches ) ) (not (in ?c3 bed) ) ) ) ) (in_motion ?h) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= (total-time) (* (count ballThrownToChair:dodgeball) (* 20 (count-overlapping thrownBallHitsBlock:blue_cube_block:yellow) )
    )
  )
)
(:scoring
  (* (+ (count-measure ballThrownToChair:doggie_bed:top_drawer) 1 (count ballThrownToChair:yellow) 3 1 (* (* (* (* 10 (count ballThrownToChair:pink_dodgeball:pink:yellow) )
            2
          )
        )
        (count thrownBallHitsBlock:basketball)
        (count-once-per-objects thrownBallHitsBlock)
      )
    )
    1
  )
)
)



(define (game game-id-940) (:domain many-objects-room-v1)
(:setup
  (forall (?b - cube_block)
    (and
      (exists (?p1 - hexagonal_bin)
        (exists (?d - hexagonal_bin ?d - drawer)
          (game-conserved
            (and
              (on ?b ?b)
              (opposite ?d ?d)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?bl - golfball)
      (and
        (preference throwToDrawerOrBin
          (exists (?d - dodgeball)
            (at-end
              (touch ?h top_shelf)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (<= (count throwToDrawerOrBin:dodgeball) 3 )
    (or
      (or
        (or
          (>= (count throwToDrawerOrBin:blue_dodgeball) (total-time) )
          (>= (total-score) (total-score) )
          (> 5 (count-unique-positions throwToDrawerOrBin:blue_dodgeball) )
        )
        (> 15 16 )
      )
      (>= 6 6 )
    )
  )
)
(:scoring
  (count-once-per-external-objects throwToDrawerOrBin:doggie_bed)
)
)



(define (game game-id-941) (:domain medium-objects-room-v1)
(:setup
  (exists (?c2 - ball ?b - game_object)
    (forall (?o - hexagonal_bin)
      (exists (?o3 - chair)
        (exists (?b - chair)
          (game-conserved
            (in rug floor)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - teddy_bear)
      (and
        (preference redDodgeballThrownToBin
          (exists (?s - doggie_bed)
            (at-end
              (not
                (exists (?c4 - hexagonal_bin)
                  (in_motion ?t1)
                )
              )
            )
          )
        )
        (preference throwFromDoorToBin
          (exists (?h - game_object)
            (then
              (once (and (in_motion ?d) (same_type ?b drawer) ) )
              (hold (adjacent desk ?h) )
              (once (not (in_motion ?h) ) )
            )
          )
        )
      )
    )
    (preference blockInTowerAtEnd
      (exists (?b7 - building)
        (then
          (hold (not (not (not (touch ?c ?b7) ) ) ) )
          (once (< (x_position ?d) (distance ?h ?b7)) )
          (once (adjacent agent ?b7) )
        )
      )
    )
  )
)
(:terminal
  (not
    (not
      (or
        (>= (count-once-per-objects redDodgeballThrownToBin:hexagonal_bin:pink:dodgeball) (total-score) )
        (>= (count throwFromDoorToBin:dodgeball:block) 2 )
        (and
          (>= (+ 1 (count-once-per-objects throwFromDoorToBin:pink_dodgeball:dodgeball) )
            10
          )
          (>= (total-score) (- 5 )
          )
        )
        (or
          (or
            (not
              (and
                (not
                  (or
                    (>= (count-once-per-external-objects throwFromDoorToBin:orange:red) (* (+ 4 (- 4 )
                        )
                        4
                      )
                    )
                    (>= (count redDodgeballThrownToBin:yellow:red) 1 )
                  )
                )
              )
            )
            (< 10 (* 15 (count throwFromDoorToBin:cube_block) )
            )
          )
          (and
            (>= 1 10 )
            (>= 5 50 )
            (or
              (not
                (>= (total-time) 5 )
              )
              (>= (total-time) (count throwFromDoorToBin:golfball:golfball:golfball) )
            )
          )
        )
      )
    )
  )
)
(:scoring
  (count-increasing-measure throwFromDoorToBin:blue_pyramid_block)
)
)



(define (game game-id-942) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (in_motion door)
  )
)
(:constraints
  (and
    (preference redDodgeballThrownToBin
      (exists (?c ?h ?o ?d ?o5 - ball)
        (at-end
          (not
            (in ?t ?b)
          )
        )
      )
    )
    (forall (?t2 - hexagonal_bin)
      (and
        (preference throwToBin
          (exists (?x - (either pillow chair dodgeball) ?w - hexagonal_bin)
            (then
              (once (touch ?b ?t2) )
              (once (adjacent ?d ?t2) )
              (once (agent_holds ?g) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (total-score) )
)
(:scoring
  (count-once-per-objects throwToBin:basketball:basketball)
)
)



(define (game game-id-943) (:domain many-objects-room-v1)
(:setup
  (forall (?bl - triangular_ramp ?h - color ?d ?g - block)
    (game-conserved
      (agent_holds ?o)
    )
  )
)
(:constraints
  (and
    (forall (?o - hexagonal_bin)
      (and
        (preference teddyBearLandsInBin
          (exists (?r - blue_pyramid_block ?b2 - dodgeball ?d1 - hexagonal_bin)
            (then
              (once (not (adjacent_side agent front ?d1 front_left_corner) ) )
              (once (< 10 1) )
              (once (in_motion agent) )
            )
          )
        )
        (preference objectOnBed
          (exists (?d - ball)
            (then
              (hold (touch ?d ?w1) )
              (hold (agent_holds ?b) )
              (once (in_motion ?h) )
              (once (and (agent_holds ?o) (not (and (in_motion ?b) (agent_holds ?o) ) ) ) )
              (once (on ?b ?o) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (external-forall-maximize (count teddyBearLandsInBin:dodgeball) ) 3 )
)
(:scoring
  (count-once objectOnBed:block)
)
)



(define (game game-id-944) (:domain few-objects-room-v1)
(:setup
  (forall (?r - doggie_bed ?c2 ?h - curved_wooden_ramp)
    (game-optional
      (and
        (and
          (touch ?c2 ?c2)
          (agent_holds floor)
        )
        (not
          (agent_holds ?l)
        )
        (not
          (and
            (or
              (on ?h ?r)
              (not
                (exists (?h - doggie_bed)
                  (in_motion ?h)
                )
              )
            )
            (in_motion ?d)
          )
        )
        (in_motion bed)
        (touch ?w1 ?c2)
        (on ?h bed)
        (in_motion ?h)
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - (either cellphone alarm_clock bridge_block) ?r - (either cylindrical_block pyramid_block desktop main_light_switch))
      (and
        (preference throwAttempt
          (then
            (once (not (and (in_motion ?l1) (and (in_motion ?r) (in ?r ?r) ) ) ) )
            (once (same_type ?r pillow) )
            (once (not (or (in_motion ?g) (not (agent_holds ?d) ) (exists (?o - doggie_bed) (same_color ?o ?c) ) ) ) )
          )
        )
      )
    )
    (forall (?b - hexagonal_bin)
      (and
        (preference blockThrowAttempt
          (exists (?r - hexagonal_bin ?b4 - cube_block)
            (then
              (hold (above ?b4 ?p) )
              (once (exists (?h - building) (on ?d ?b4) ) )
              (once (and (in_motion ?b) (object_orientation ?b sideways) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (total-score) 3 )
)
(:scoring
  (* 2 (+ 16 (count throwAttempt:block:dodgeball) )
  )
)
)



(define (game game-id-945) (:domain many-objects-room-v1)
(:setup
  (exists (?p - hexagonal_bin ?b - wall ?d - ball ?c ?l - hexagonal_bin ?d - hexagonal_bin)
    (exists (?h - hexagonal_bin)
      (game-optional
        (adjacent ?d ?b)
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - cube_block)
      (and
        (preference smallItemsInPlace
          (exists (?b - (either curved_wooden_ramp pencil) ?o4 ?ob - book)
            (then
              (hold (in_motion ?f) )
              (once (and (and (in ?r ?d) (adjacent agent ?db) ) (and (touch ?h ?h) ) ) )
              (once (same_type ?o4 ?ob) )
            )
          )
        )
      )
    )
    (preference objectInBuilding
      (exists (?b - shelf ?c - (either bridge_block pillow dodgeball))
        (then
          (once (agent_holds ?c) )
          (once (agent_holds ?c) )
          (once (< 5 2) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 1 6 )
    (>= (total-score) (count smallItemsInPlace:basketball:dodgeball) )
  )
)
(:scoring
  (count objectInBuilding:dodgeball)
)
)



(define (game game-id-946) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (in_motion ?d)
  )
)
(:constraints
  (and
    (forall (?b9 - doggie_bed)
      (and
        (preference redDodgeballThrownToBinWithoutTouchingFloor
          (exists (?b - flat_block ?o - (either cd dodgeball dodgeball))
            (then
              (hold (agent_holds ?o) )
            )
          )
        )
        (preference ballThrownFromObjectToBin
          (then
            (once (on ?b9 ?d) )
            (once (agent_holds ?b9) )
            (hold (in ?b9 ?b) )
          )
        )
        (preference objectInBuilding
          (exists (?bl - pillow ?c - cube_block)
            (at-end
              (not
                (in_motion ?c)
              )
            )
          )
        )
      )
    )
    (preference cubeBlockFromBedToShelf
      (exists (?t - hexagonal_bin ?c - red_dodgeball)
        (then
          (once (and (agent_holds ?c) (agent_holds ?b) ) )
          (once (in_motion ?h) )
          (hold-while (in ?g ?b) (exists (?w1 - cube_block) (in ?c ?w1) ) (= (distance room_center ?c)) (agent_holds ?c) )
          (once (in ?c ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (+ (count-once redDodgeballThrownToBinWithoutTouchingFloor:golfball) (external-forall-maximize (* 2 (count redDodgeballThrownToBinWithoutTouchingFloor:dodgeball) )
      )
    )
  )
)
(:scoring
  (count objectInBuilding:yellow)
)
)



(define (game game-id-947) (:domain medium-objects-room-v1)
(:setup
  (forall (?b - ball)
    (not
      (game-conserved
        (in ?b agent)
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballHitsBin
      (exists (?o - shelf)
        (then
          (once (in ?o ?o) )
          (hold (agent_holds ?h) )
          (once (agent_holds ?d) )
        )
      )
    )
    (preference throwBallToBin
      (exists (?c5 - game_object)
        (then
          (hold (agent_holds ?h) )
          (once (agent_holds ?c5) )
          (hold (not (not (and (and (agent_holds ?g) (toggled_on ?o) ) (same_color ?c5 ?c5) ) ) ) )
          (once (agent_holds ?b) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (> (total-score) 3 )
      (>= (total-score) (+ (count throwBallToBin:beachball:dodgeball) (* (- 10 )
            (* 1 (count-once-per-objects dodgeballHitsBin:purple) )
          )
        )
      )
    )
    (>= (total-score) (total-score) )
    (>= (total-score) (count-once-per-objects throwBallToBin:rug) )
  )
)
(:scoring
  (* 3 (count dodgeballHitsBin:book:yellow) )
)
)



(define (game game-id-948) (:domain many-objects-room-v1)
(:setup
  (exists (?o - cylindrical_block)
    (exists (?o - doggie_bed)
      (game-optional
        (object_orientation ?o sideways)
      )
    )
  )
)
(:constraints
  (and
    (forall (?c - desk_shelf ?h - hexagonal_bin ?b - (either blue_cube_block ball book) ?b10 - hexagonal_bin)
      (and
        (preference throwOverRamp
          (exists (?l - hexagonal_bin)
            (then
              (hold-while (on ?l ?b) (on ?g ?b10) )
              (hold (not (between ?l ?c ?o) ) )
              (once (> (distance ?h ?l) 1) )
            )
          )
        )
        (preference ballThrownToChair
          (exists (?r - drawer)
            (then
              (once (in pink_dodgeball ?r) )
              (once (open ?h) )
              (hold (not (touch ?r ?d) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (total-score) (count-increasing-measure throwOverRamp:dodgeball:top_drawer) )
)
(:scoring
  (external-forall-maximize
    (* (count throwOverRamp:dodgeball) (* (external-forall-maximize (* (count-once-per-objects ballThrownToChair:dodgeball) (count-once-per-objects ballThrownToChair:doggie_bed) )
        )
        (count-once-per-objects ballThrownToChair:golfball)
      )
    )
  )
)
)



(define (game game-id-949) (:domain few-objects-room-v1)
(:setup
  (exists (?l - dodgeball)
    (game-conserved
      (agent_holds ?l)
    )
  )
)
(:constraints
  (and
    (preference throwKnocksOverBear
      (exists (?c6 - chair)
        (then
          (once (or (in_motion ?h) (agent_holds ?o) ) )
          (once (on ?g ?b) )
          (hold (adjacent ?h ?b) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (total-score) (* (count throwKnocksOverBear:top_drawer) 15 )
    )
    (< (* 2 (count-once throwKnocksOverBear:pink) )
      1
    )
  )
)
(:scoring
  (count throwKnocksOverBear:orange)
)
)



(define (game game-id-950) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (agent_holds ?t)
  )
)
(:constraints
  (and
    (forall (?b - color ?t - (either alarm_clock book))
      (and
        (preference ballInOrOnBin
          (exists (?b5 - dodgeball ?x - hexagonal_bin)
            (then
              (hold-while (agent_holds ?o) (and (in_motion ?x) (agent_holds ?d1) ) )
              (hold (in ?x ?h) )
              (once (agent_holds ?t) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= 10 3 )
)
(:scoring
  (count-once ballInOrOnBin:golfball)
)
)



(define (game game-id-951) (:domain medium-objects-room-v1)
(:setup
  (forall (?tb - (either flat_block dodgeball dodgeball) ?c - hexagonal_bin)
    (exists (?d - doggie_bed ?h - hexagonal_bin)
      (forall (?f - hexagonal_bin ?w1 - hexagonal_bin)
        (forall (?db - dodgeball)
          (and
            (game-conserved
              (same_type ?b2 ?c)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference thrownBallHitsBlock
      (exists (?b - hexagonal_bin)
        (then
          (once (agent_holds ?h) )
          (hold (and (touch bed ?l) (not (adjacent ?b ?b) ) (not (not (in_motion ?b) ) ) (not (in_motion ?b) ) ) )
          (once (in_motion ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= (count thrownBallHitsBlock:pyramid_block) (+ (* (+ (* 3 (count thrownBallHitsBlock:basketball) )
          0.7
        )
        (count-once-per-objects thrownBallHitsBlock:beachball)
      )
      3
    )
  )
)
(:scoring
  (count thrownBallHitsBlock:basketball)
)
)



(define (game game-id-952) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (game_over )
  )
)
(:constraints
  (and
    (preference pillowMovedToRoomCenter
      (exists (?o - ball)
        (then
          (once (in ?d ?o) )
          (once (and (in_motion ?o) (not (not (on ?o ?b5) ) ) (and (in_motion ?o) (in ?o ?d) (opposite ?d ?o) (not (and (in_motion ?o) (in_motion ?d) ) ) ) (not (agent_holds ?c3) ) ) )
          (once (and (same_color ?d ?c) (adjacent agent ?o) ) )
        )
      )
    )
    (preference throwBallToDoggieBed
      (exists (?b - dodgeball)
        (then
          (once (not (exists (?s - hexagonal_bin ?w2 - book ?t1 - game_object) (in_motion ?b) ) ) )
          (once (on ?r ?b) )
          (once (same_type desk ?b) )
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (or
        (> (total-time) (+ (count-once-per-external-objects pillowMovedToRoomCenter:green:yellow) 10 )
        )
        (>= 15 (* (+ (count-once-per-objects throwBallToDoggieBed:dodgeball) 3 )
            (* 50 0.7 )
          )
        )
      )
      (>= (+ (+ (count-once-per-objects pillowMovedToRoomCenter:basketball) (count pillowMovedToRoomCenter:pink_dodgeball) (count pillowMovedToRoomCenter:dodgeball) 5 (count pillowMovedToRoomCenter:golfball) )
          (count throwBallToDoggieBed:yellow)
        )
        (total-score)
      )
    )
  )
)
(:scoring
  (* (= (= (* (count-once-per-objects pillowMovedToRoomCenter:pink_dodgeball) 10 3 )
        7
      )
      (count throwBallToDoggieBed:hexagonal_bin:blue_pyramid_block)
      (count throwBallToDoggieBed:red)
    )
    100
    (* (+ (* 3 (count-unique-positions throwBallToDoggieBed:side_table:pink_dodgeball) (count-once-per-objects pillowMovedToRoomCenter:dodgeball) )
        3
      )
      10
    )
    10
  )
)
)



(define (game game-id-953) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (in_motion ?p)
  )
)
(:constraints
  (and
    (preference cubeBlockThrowAttempt
      (exists (?r1 - cylindrical_block ?b - (either desktop pyramid_block) ?c1 - cube_block ?b - block ?c - dodgeball)
        (then
          (once (same_type ?h pillow) )
          (hold (not (and (and (on ?o2 ?t) ) (not (agent_holds ?b) ) ) ) )
          (once (on ?b5 ?c) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (count-unique-positions cubeBlockThrowAttempt:alarm_clock) )
)
(:scoring
  (count-once-per-objects cubeBlockThrowAttempt:pyramid_block:wall:pink)
)
)



(define (game game-id-954) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (and
      (and
        (< 6 1)
        (in_motion ?t1)
      )
      (not
        (exists (?s - triangular_ramp ?c2 - building)
          (and
            (not
              (not
                (not
                  (not
                    (and
                      (in_motion ?c2)
                      (and
                        (and
                          (< (distance ?c2 agent) (x_position ?c))
                          (on ?o ?b)
                        )
                        (agent_holds ?c2)
                      )
                      (agent_crouches )
                      (and
                        (in_motion ?c2)
                        (not
                          (not
                            (in_motion ?o)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
            (not
              (in ?c2 ?o4)
            )
            (in ?o ?c2)
            (in_motion ?c2)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference woodenBlockMovedFromRugToDesk
      (exists (?h - block ?d - (either dodgeball golfball))
        (at-end
          (same_color ?d ?d)
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (* 1 10 )
  )
)
(:scoring
  (count woodenBlockMovedFromRugToDesk:side_table)
)
)



(define (game game-id-955) (:domain few-objects-room-v1)
(:setup
  (forall (?o - hexagonal_bin)
    (exists (?d - hexagonal_bin)
      (game-conserved
        (< 1 2)
      )
    )
  )
)
(:constraints
  (and
    (forall (?c - shelf ?l3 - curved_wooden_ramp ?b - building ?t1 - dodgeball)
      (and
        (preference greenObjectMovedToRoomCenter
          (exists (?l - cube_block)
            (then
              (once (adjacent_side room_center ?t1 ?b) )
              (once (in_motion ?h) )
              (once (not (in_motion ?d) ) )
            )
          )
        )
        (preference ballThrownThroughRampAndBlocksToBin
          (exists (?b2 - chair)
            (then
              (once (adjacent agent ?t1) )
              (hold (adjacent ?h ?t1) )
              (hold (and (and (and (in_motion ?b2) (agent_holds agent) ) (< (x_position ?t1) 1) ) (< 10 (distance ?b2 ?t1)) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) 4 )
)
(:scoring
  (* (- 2 (* (= 10 (count-once-per-objects ballThrownThroughRampAndBlocksToBin:bed) )
        (count greenObjectMovedToRoomCenter:top_drawer)
      )
    )
    (* (count greenObjectMovedToRoomCenter:basketball) (count greenObjectMovedToRoomCenter:book) )
    (count greenObjectMovedToRoomCenter:pink)
  )
)
)



(define (game game-id-956) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?p3 - hexagonal_bin)
      (game-conserved
        (and
          (>= 10 (distance ?w2 ?d))
          (faces ?b ?b)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference bounceBallToBin
      (exists (?o5 - doggie_bed)
        (then
          (once (not (and (agent_holds ?o5) (agent_holds ?d) (not (and (in_motion ?t) (not (agent_holds ?h) ) (exists (?r2 - tall_cylindrical_block) (not (and (and (not (agent_holds agent) ) (forall (?o2 - ball) (and (agent_holds ?o5) (agent_holds ?h) ) ) ) (< (distance ?r ?c2) 10) ) ) ) ) ) ) ) )
          (once (on ?b agent) )
          (once (not (agent_holds ?o5) ) )
          (hold-while (agent_holds ?o5) (agent_holds ?o) )
        )
      )
    )
    (preference bookOnDeskShelf
      (exists (?h - beachball)
        (then
          (once (touch ?h ?b) )
          (hold (and (in rug ?o) ) )
          (hold (in_motion ?h) )
        )
      )
    )
    (preference throwTeddyOntoPillow
      (exists (?p2 - (either cylindrical_block dodgeball dodgeball) ?b2 - doggie_bed)
        (then
          (hold (or (in_motion ?b2) (and (agent_holds ?l) (agent_holds bed) ) ) )
          (hold-while (agent_holds ?b2) (>= (distance ?h ?b2) 1) )
          (hold (on ?b2 ?b) )
        )
      )
    )
    (forall (?b2 ?o5 ?b ?b3 - pyramid_block ?d - dodgeball)
      (and
        (preference dodgeballAndBasketballInBin
          (exists (?h - block)
            (at-end
              (exists (?c - cube_block)
                (and
                  (in side_table ?d)
                  (rug_color_under ?d brown)
                  (agent_holds ?d)
                  (and
                    (is_setup_object ?t)
                  )
                )
              )
            )
          )
        )
        (preference blockOnBlockInTowerAtEnd
          (exists (?p1 - wall)
            (at-end
              (in ?s ?d)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (count-measure throwTeddyOntoPillow:yellow_cube_block:yellow:dodgeball) (count blockOnBlockInTowerAtEnd:golfball) )
      (and
        (>= (total-time) (count-once-per-objects bounceBallToBin:pink:golfball:red) )
        (>= (total-time) 3 )
        (>= (total-time) (* (count blockOnBlockInTowerAtEnd:blue_cube_block:dodgeball) 1 )
        )
      )
    )
    (or
      (>= 2 (count-once-per-objects dodgeballAndBasketballInBin:yellow) )
    )
  )
)
(:scoring
  (count-once-per-objects blockOnBlockInTowerAtEnd:dodgeball:basketball)
)
)



(define (game game-id-957) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (on ?bl ?db)
  )
)
(:constraints
  (and
    (preference itemsBroken
      (exists (?c2 - cube_block)
        (at-end
          (same_object ?c2 ?d)
        )
      )
    )
    (forall (?t - chair)
      (and
        (preference ballThrownFromRug
          (exists (?c - tall_cylindrical_block ?o - dodgeball)
            (then
              (once (and (< 1 (x_position ?o)) (in ?r ?o) (adjacent ?h ?t) ) )
              (hold (< 2 2) )
            )
          )
        )
      )
    )
    (preference ballDroppedInBin
      (exists (?p3 - (either golfball golfball) ?h - pillow)
        (then
          (hold-while (agent_holds ?h) (and (not (touch ?h ?h) ) (and (above ?l1 ?d) (agent_holds ?h) ) ) )
          (once (agent_holds desk) )
          (once (on ?c4 ?o1) )
        )
      )
    )
  )
)
(:terminal
  (< (count-once-per-objects ballThrownFromRug:red_pyramid_block) 10 )
)
(:scoring
  (count ballDroppedInBin:purple)
)
)



(define (game game-id-958) (:domain medium-objects-room-v1)
(:setup
  (forall (?c - cube_block ?b4 - dodgeball)
    (game-optional
      (and
        (in_motion ?b4)
        (and
          (not
            (not
              (exists (?c4 - shelf ?c - (either hexagonal_bin cd blue_cube_block) ?p1 - building)
                (same_type ?b4 ?p1)
              )
            )
          )
          (not
            (agent_holds ?l1)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference bounceBallToBin
      (exists (?b5 - beachball)
        (then
          (hold (on ?b5 ?d2) )
          (once (agent_holds ?b5) )
          (once (open ?d) )
        )
      )
    )
    (forall (?h - dodgeball)
      (and
        (preference woodenBlockMovedFromRugToDesk
          (exists (?b2 - hexagonal_bin ?h - (either cylindrical_block side_table))
            (then
              (once (agent_holds ?o) )
              (once (on ?b desk) )
              (once (not (in ?h ?b) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (total-score) (* (count bounceBallToBin:blue_pyramid_block) (count woodenBlockMovedFromRugToDesk:book) )
  )
)
(:scoring
  (count bounceBallToBin:triangle_block)
)
)



(define (game game-id-959) (:domain medium-objects-room-v1)
(:setup
  (forall (?b5 - curved_wooden_ramp ?db - (either flat_block book pyramid_block dodgeball dodgeball))
    (game-conserved
      (equal_z_position desk rug)
    )
  )
)
(:constraints
  (and
    (preference gameObjectToBin
      (exists (?b - chair)
        (then
          (once (open ?b) )
          (once-measure (not (adjacent room_center desk) ) (distance ?b ?b) )
          (hold-while (exists (?b1 - (either basketball alarm_clock pen)) (and (> 6 (distance_side ?h ?b ?b1 ?b)) (not (not (in_motion ?ob) ) ) ) ) (adjacent desk ?b) )
        )
      )
    )
  )
)
(:terminal
  (or
    (and
      (>= (- (* (count-same-positions gameObjectToBin:basketball) (count gameObjectToBin:pink) )
        )
        9
      )
      (>= 5 5 )
      (<= (total-time) (count gameObjectToBin:hexagonal_bin:blue_pyramid_block) )
    )
    (>= (count gameObjectToBin:dodgeball) (count-same-positions gameObjectToBin:pink_dodgeball) )
    (>= (count-increasing-measure gameObjectToBin:pyramid_block) (total-time) )
  )
)
(:scoring
  (count gameObjectToBin:pink)
)
)



(define (game game-id-960) (:domain few-objects-room-v1)
(:setup
  (exists (?b ?l1 - hexagonal_bin)
    (and
      (and
        (game-optional
          (agent_holds ?b)
        )
      )
      (and
        (forall (?c - ball ?d - hexagonal_bin)
          (or
            (and
              (and
                (exists (?c - (either cd dodgeball golfball))
                  (and
                    (and
                      (game-optional
                        (and
                          (not
                            (exists (?h - building)
                              (is_setup_object ?h)
                            )
                          )
                          (and
                            (on ?t1 ?b)
                            (adjacent room_center ?bl)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
            (and
              (forall (?h - hexagonal_bin ?d - cube_block)
                (exists (?f - dodgeball)
                  (game-conserved
                    (and
                      (agent_holds ?l1)
                      (in_motion ?h)
                    )
                  )
                )
              )
            )
            (exists (?h - hexagonal_bin)
              (and
                (not
                  (exists (?c - game_object)
                    (and
                      (game-conserved
                        (in_motion ?d)
                      )
                      (exists (?s - hexagonal_bin)
                        (game-conserved
                          (agent_holds ?c)
                        )
                      )
                      (game-conserved
                        (in_motion ?g)
                      )
                    )
                  )
                )
              )
            )
          )
        )
        (and
          (game-conserved
            (in_motion ?c)
          )
          (exists (?t - hexagonal_bin ?w1 - chair ?s - cube_block)
            (exists (?c - golfball)
              (and
                (exists (?c - (either dodgeball dodgeball triangular_ramp))
                  (game-conserved
                    (exists (?o2 - sliding_door)
                      (agent_holds ?c)
                    )
                  )
                )
                (game-conserved
                  (agent_holds ?d)
                )
                (game-conserved
                  (and
                    (and
                      (in_motion ?s)
                      (and
                        (adjacent ?h ?r)
                        (on ?b ?s)
                        (adjacent desk ?l1)
                      )
                    )
                    (in_motion ?d)
                  )
                )
              )
            )
          )
        )
        (or
          (and
            (and
              (forall (?ob - doggie_bed ?d - dodgeball)
                (and
                  (and
                    (game-conserved
                      (agent_holds ?b)
                    )
                    (exists (?w1 - hexagonal_bin ?d1 - shelf)
                      (and
                        (game-optional
                          (exists (?b5 - shelf)
                            (open ?l1)
                          )
                        )
                        (and
                          (game-conserved
                            (in_motion ?b)
                          )
                          (game-conserved
                            (adjacent ?b ?d1)
                          )
                        )
                        (game-conserved
                          (not
                            (and
                              (in_motion ?b)
                              (not
                                (or
                                  (not
                                    (equal_z_position ?h floor)
                                  )
                                  (adjacent ?w1 ?d)
                                  (exists (?o - ball)
                                    (<= (distance agent ?h) (distance bed ?b))
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                    (game-conserved
                      (agent_holds ?l1)
                    )
                  )
                )
              )
              (exists (?d - ball)
                (or
                  (not
                    (game-conserved
                      (and
                        (in ?h ?t)
                      )
                    )
                  )
                )
              )
              (and
                (game-optional
                  (not
                    (on ?b ?b)
                  )
                )
                (exists (?l - cube_block ?o - doggie_bed)
                  (game-optional
                    (in_motion ?l1)
                  )
                )
                (and
                  (forall (?p1 - dodgeball)
                    (forall (?l - dodgeball)
                      (exists (?h - hexagonal_bin)
                        (game-conserved
                          (not
                            (agent_holds ?p)
                          )
                        )
                      )
                    )
                  )
                  (game-conserved
                    (in_motion ?l1)
                  )
                  (not
                    (game-optional
                      (and
                        (above ?d ?d)
                        (and
                          (not
                            (exists (?d - dodgeball)
                              (on ?d ?b)
                            )
                          )
                          (touch ?l1 ?r)
                          (same_color ?o ?c)
                          (not
                            (not
                              (in_motion ?b)
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
          (not
            (game-optional
              (opposite ?b ?l1)
            )
          )
          (exists (?p2 - dodgeball)
            (exists (?c - dodgeball ?r2 - ball)
              (forall (?c - (either golfball golfball) ?c - hexagonal_bin)
                (and
                  (forall (?b10 - (either doggie_bed cylindrical_block))
                    (exists (?c3 - hexagonal_bin)
                      (exists (?c - hexagonal_bin ?w - dodgeball)
                        (and
                          (forall (?c - dodgeball)
                            (game-conserved
                              (rug_color_under ?l ?c3)
                            )
                          )
                          (exists (?t - dodgeball)
                            (exists (?d - chair)
                              (and
                                (exists (?c5 - ball)
                                  (game-conserved
                                    (and
                                      (on ?o ?b)
                                      (adjacent_side ?h ?l1 ?c)
                                      (and
                                        (in_motion ?d)
                                      )
                                    )
                                  )
                                )
                                (exists (?c4 - shelf ?b - game_object)
                                  (and
                                    (forall (?b - curved_wooden_ramp)
                                      (and
                                        (game-conserved
                                          (and
                                            (on ?t ?r2)
                                            (not
                                              (in_motion agent)
                                            )
                                          )
                                        )
                                        (exists (?tb - building ?t - block)
                                          (game-optional
                                            (on ?t ?o)
                                          )
                                        )
                                        (exists (?b3 - (either golfball cylindrical_block cd))
                                          (and
                                            (game-conserved
                                              (in_motion pink_dodgeball)
                                            )
                                          )
                                        )
                                      )
                                    )
                                    (and
                                      (exists (?h - dodgeball ?l3 - game_object ?r2 - yellow_pyramid_block)
                                        (forall (?d - (either basketball curved_wooden_ramp yellow_cube_block))
                                          (game-conserved
                                            (agent_holds ?b)
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                                (and
                                  (game-optional
                                    (exists (?h - hexagonal_bin ?b - doggie_bed ?l3 - ball ?b ?d - cube_block)
                                      (agent_holds ?t)
                                    )
                                  )
                                  (and
                                    (game-optional
                                      (not
                                        (not
                                          (< 9 1)
                                        )
                                      )
                                    )
                                    (game-conserved
                                      (not
                                        (not
                                          (in ?d ?b)
                                        )
                                      )
                                    )
                                  )
                                  (game-conserved
                                    (exists (?d - cube_block)
                                      (agent_holds ?b10)
                                    )
                                  )
                                )
                              )
                            )
                          )
                          (exists (?d2 - (either cube_block pyramid_block) ?c - sliding_door)
                            (exists (?t - triangular_ramp)
                              (and
                                (forall (?b - game_object ?o - game_object)
                                  (game-conserved
                                    (agent_holds ?b)
                                  )
                                )
                                (game-conserved
                                  (not
                                    (and
                                      (agent_holds ?c3)
                                      (touch ?b ?l4)
                                    )
                                  )
                                )
                              )
                            )
                          )
                          (exists (?d - hexagonal_bin)
                            (game-optional
                              (agent_holds ?o)
                            )
                          )
                        )
                      )
                    )
                  )
                  (and
                    (forall (?w - ball ?d - dodgeball)
                      (game-conserved
                        (on ?l1 ?h)
                      )
                    )
                  )
                  (game-conserved
                    (adjacent ?l1 ?d)
                  )
                )
              )
            )
          )
        )
      )
      (and
        (forall (?h ?c3 - dodgeball)
          (exists (?b1 - flat_block)
            (game-conserved
              (not
                (not
                  (in_motion ?b1)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference redDodgeballThrownToBin
      (exists (?f - doggie_bed)
        (at-end
          (and
            (agent_holds ?f)
            (not
              (exists (?h - wall)
                (opposite ?b ?o)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (+ (* (+ (external-forall-maximize (count redDodgeballThrownToBin:hexagonal_bin:book) ) (count redDodgeballThrownToBin:pink_dodgeball) )
        (count redDodgeballThrownToBin:white)
      )
      (* (count-once-per-objects redDodgeballThrownToBin:dodgeball) (count-increasing-measure redDodgeballThrownToBin:golfball:pink_dodgeball) )
    )
  )
)
(:scoring
  (< 2 (* 60 (count-increasing-measure redDodgeballThrownToBin:yellow) )
  )
)
)



(define (game game-id-961) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (and
      (on ?h ?l1)
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?b ?d ?o - ball ?p2 - color)
        (then
          (once (on ?p2 ?p2) )
          (once (not (and (in_motion ?b) (in_motion ?p2) ) ) )
        )
      )
    )
    (forall (?l4 - dodgeball)
      (and
        (preference teddyBearHitsBall
          (exists (?b - cube_block)
            (then
              (hold-while (or (agent_holds ?d) (and (not (and (in ?l4 ?b) (not (agent_crouches ) ) ) ) (and (on ?l4 ?l4) (not (in ?d ?l4) ) (agent_holds ?l4) ) ) ) (adjacent agent ?l4) )
              (hold (not (not (agent_holds ?g) ) ) )
              (hold (on ?o ?l4) )
            )
          )
        )
        (preference dropAttempt
          (exists (?h - hexagonal_bin)
            (then
              (hold-while (and (touch ?w1 ?h) (exists (?d - beachball) (agent_holds ?d) ) ) (and (in ?l4 ?d) (< 5 (distance agent ?t)) ) )
              (hold (in_motion rug) )
              (once (same_type ?l4 pillow) )
            )
          )
        )
      )
    )
    (forall (?b10 - ball)
      (and
        (preference failedThrowAttempt
          (exists (?p - (either blue_cube_block cellphone))
            (then
              (once (and (in_motion ?b10) (and (agent_holds ?p) (on ?l1 ?b10) (in_motion ?g) (agent_holds ?d) ) (agent_holds ?b10) (not (and (adjacent ?b10 ?b10) (in ?p ?t) ) ) ) )
              (once (in_motion ?b10) )
              (once (not (on ?d ?w2) ) )
            )
          )
        )
        (preference throwBallToBin
          (exists (?d - tall_cylindrical_block)
            (then
              (once (in_motion ?d) )
              (once (in_motion agent) )
              (once (between ?d ?l top_drawer) )
            )
          )
        )
        (preference binKnockedOver
          (exists (?b - (either cylindrical_block dodgeball dodgeball))
            (then
              (once (in_motion ?l) )
              (once (and (in ?b10 ?c) (and (adjacent room_center agent) (agent_holds ?b10) (game_over ) (on ?c ?b) (on floor ?b) (not (and (agent_holds ?d) (agent_holds ?l) ) ) (or (not (and (and (and (agent_holds bed) (on ?d ?d) ) (in ?b10 ?b) ) (in_motion ?b5) (game_start ) ) ) (and (equal_z_position ?b ?b) (not (agent_holds ?b) ) ) ) (adjacent_side ?w2 right ?b) (not (agent_holds ?o) ) (agent_holds ?t) ) ) )
              (hold-while (in_motion ?d) (and (not (in_motion ?b) ) (> (distance ?d ?r) (distance ?c ?b)) (agent_holds ?b) ) )
              (hold-while (adjacent_side desk back ?b) (not (= (distance bed ?l2) (distance ?h ?b10)) ) (and (and (not (and (agent_holds ?b10) (and (agent_holds ?b) (not (and (object_orientation ?b upright) (faces agent ?b10) ) ) ) ) ) (on ?b10 ?b10) ) (agent_holds ?d) ) )
              (once (in_motion ?b) )
              (once-measure (and (and (in_motion ?b10) (in ?b10 ?b10) ) (exists (?w1 ?o - color) (or (forall (?o - shelf) (not (in_motion ?d) ) ) (equal_z_position ?b ?r) ) ) ) (distance ?b ?d) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (+ 4 (external-forall-minimize (+ (count-once-per-external-objects failedThrowAttempt) (count-once failedThrowAttempt:dodgeball) )
      )
    )
    (total-score)
  )
)
(:scoring
  (* 0 (* (= (count-once-per-objects throwAttempt:beachball) (count dropAttempt:dodgeball) 10 )
      5
    )
  )
)
)



(define (game game-id-962) (:domain few-objects-room-v1)
(:setup
  (exists (?r - building ?h - block)
    (game-conserved
      (not
        (on ?h ?h)
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - game_object ?b - building)
      (and
        (preference blocksInPlace
          (at-end
            (in_motion bed)
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (and
      (>= (count blocksInPlace:basketball) (count blocksInPlace:dodgeball:blue_dodgeball:triangle_block) )
      (>= (count-once-per-objects blocksInPlace:red) (total-time) )
    )
    (>= 0.5 (count-once-per-objects blocksInPlace:book:dodgeball) )
  )
)
(:scoring
  (* 5 (count-increasing-measure blocksInPlace:beachball:dodgeball) )
)
)



(define (game game-id-963) (:domain few-objects-room-v1)
(:setup
  (exists (?b1 - curved_wooden_ramp ?c - chair ?t - cube_block)
    (game-optional
      (is_setup_object ?t)
    )
  )
)
(:constraints
  (and
    (preference objectInBuilding
      (exists (?h - triangular_ramp)
        (then
          (once (agent_holds ?p3) )
          (once (agent_holds ?d) )
          (once (and (not (agent_holds ?h) ) (not (and (agent_holds ?t) (adjacent ?h ?o) ) ) (and (and (not (and (< (distance_side ?h left ?b) (distance ?h agent)) (in_motion ?o) ) ) (agent_holds ?h) ) (in_motion ?h) (in_motion ?c) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 100 (* 10 (* 5 (count objectInBuilding:red:green) )
    )
  )
)
(:scoring
  (* (count-once-per-objects objectInBuilding:beachball) (+ 15 (count-once-per-objects objectInBuilding:dodgeball) )
  )
)
)



(define (game game-id-964) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - teddy_bear)
      (game-optional
        (broken ?h)
      )
    )
  )
)
(:constraints
  (and
    (preference throwMissesBin
      (exists (?db ?o5 - chair)
        (then
          (hold (is_setup_object ?db) )
          (once (not (adjacent_side ?o5 front ?c) ) )
          (once (agent_holds ?d) )
        )
      )
    )
    (forall (?c4 ?s - bridge_block ?h - teddy_bear)
      (and
        (preference ballThrownToRug
          (exists (?c - desk_shelf)
            (at-end
              (on ?c ?h)
            )
          )
        )
        (preference dodgeballHitsBinBottom
          (exists (?o - doggie_bed)
            (then
              (once (and (on ?d ?b) (on ?h ?l) (exists (?b9 - building ?b - game_object) (adjacent door ?d) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count ballThrownToRug:red) (total-time) )
)
(:scoring
  (count-once-per-objects throwMissesBin:basketball)
)
)



(define (game game-id-965) (:domain few-objects-room-v1)
(:setup
  (exists (?c4 - dodgeball)
    (game-optional
      (on ?b ?c4)
    )
  )
)
(:constraints
  (and
    (preference smallObjectThrownToBed
      (then
        (once (forall (?o - hexagonal_bin) (in ?o ?o) ) )
        (once (in_motion agent) )
        (once (in_motion ?d) )
      )
    )
  )
)
(:terminal
  (>= 4 (count-once smallObjectThrownToBed:yellow) )
)
(:scoring
  (count smallObjectThrownToBed:beachball)
)
)



(define (game game-id-966) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (and
        (exists (?o2 - hexagonal_bin)
          (exists (?h - hexagonal_bin)
            (exists (?c ?h - desktop)
              (exists (?h ?w ?o ?h - dodgeball ?c - block)
                (game-conserved
                  (not
                    (in_motion ?p)
                  )
                )
              )
            )
          )
        )
        (exists (?c - game_object ?p - hexagonal_bin)
          (game-optional
            (not
              (on ?p ?p)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?t - pillow ?t - dodgeball)
      (and
        (preference thrownBallReachesEnd
          (exists (?c2 - game_object)
            (then
              (once (not (agent_holds ?t) ) )
              (hold (not (game_over ) ) )
              (hold-while (not (agent_holds ?t) ) (and (touch ?c2 ?c2) (agent_holds ?t) ) )
              (once (opposite ?c2 agent) )
              (once (and (and (and (in_motion ?o) (adjacent ?c ?c2) (or (agent_holds ?c2) (in_motion ?t) ) ) (and (not (adjacent_side ?h front ?t) ) (and (forall (?h - ball) (or (agent_holds ?t) (and (exists (?l1 - triangular_ramp) (and (exists (?db - hexagonal_bin ?h - dodgeball ?d - game_object) (not (agent_holds ?h) ) ) (touch ?t ?d) ) ) (in_motion ?b) ) ) ) (in_motion ?t) ) ) (on ?b ?t) ) (and (and (in_motion ?t) (agent_holds ?d) ) (and (agent_holds ?t) (and (and (adjacent ?t ?d) (in ?p ?c2) (adjacent desk ?c2) ) (and (and (and (> 2 1) (between ?p1 ?t ?c2) ) (touch ?b ?b) ) (agent_holds ?t) ) ) (on ?t ?p) (agent_holds ?b) (on ?d ?c2) (in_motion ?c2) ) ) (in ?o ?l) (< (distance agent ?b1) (distance room_center ?t)) ) )
            )
          )
        )
        (preference ballThrownToBin
          (at-end
            (agent_holds ?t)
          )
        )
        (preference throwAttempt
          (exists (?b10 - (either blue_cube_block cd lamp))
            (then
              (once (< (distance agent agent) 1) )
              (hold (agent_holds ?b) )
              (once (in_motion ?t) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (total-score) (total-score) )
)
(:scoring
  (count-once-per-objects thrownBallReachesEnd:golfball)
)
)



(define (game game-id-967) (:domain few-objects-room-v1)
(:setup
  (forall (?p - cube_block)
    (and
      (game-conserved
        (and
          (> (distance ?p ?b) (building_size ?p))
          (forall (?w1 ?w2 - dodgeball ?b3 - hexagonal_bin)
            (and
              (in_motion ?g)
              (on ?w2 ?c4)
            )
          )
          (and
            (agent_holds ?p)
            (and
              (and
                (open ?o)
                (and
                  (and
                    (or
                      (agent_holds ?o)
                      (< 1 1)
                    )
                    (and
                      (in_motion ?t)
                      (and
                        (on ?p ?d)
                        (and
                          (in_motion ?p)
                          (agent_holds ?p)
                        )
                      )
                    )
                  )
                )
              )
              (and
                (open ?b2)
                (in_motion ?p)
                (and
                  (same_color ?p ?p)
                  (in_motion ?c)
                )
                (not
                  (and
                    (in_motion ?p)
                    (in rug ?p)
                  )
                )
                (not
                  (not
                    (agent_holds ?p)
                  )
                )
                (agent_holds ?p)
              )
            )
            (exists (?h - building)
              (< 0.5 (distance ?w2 ?o))
            )
          )
          (agent_holds door)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockInTowerAtEnd
      (exists (?b10 - hexagonal_bin ?h - (either dodgeball game_object))
        (then
          (once (agent_holds ?b9) )
          (once (and (on ?h ?b) (not (not (agent_holds ?h) ) ) (opposite ?h ?h) ) )
          (once (and (in ?d ?h) ) )
        )
      )
    )
    (preference nonBlockPlacedInBuilding
      (exists (?g - hexagonal_bin)
        (then
          (once (forall (?t - hexagonal_bin) (>= 1 1) ) )
          (once (or (in ?b5 ?g) (same_object ?g top_shelf) (equal_x_position agent ?g) ) )
          (once (is_setup_object ?f) )
        )
      )
    )
    (preference blueObjectMovedToRoomCenter
      (exists (?b - building ?h - golfball)
        (then
          (hold (in_motion ?h) )
          (once (and (and (in_motion ?b) (in_motion ?h) (agent_holds ?h) ) (same_type ?h block) (and (on ?h ?t) (adjacent ?h ?h) ) ) )
          (once (> 6 4) )
        )
      )
    )
  )
)
(:terminal
  (= (* (count blockInTowerAtEnd:book) (- (= (external-forall-maximize (- (count nonBlockPlacedInBuilding:yellow:beachball) )
          )
          (* 10 40 )
        )
      )
    )
    (>= 30 6 )
  )
)
(:scoring
  (count-overlapping nonBlockPlacedInBuilding:triangle_block)
)
)



(define (game game-id-968) (:domain many-objects-room-v1)
(:setup
  (exists (?c2 - dodgeball ?l2 - dodgeball)
    (game-optional
      (and
        (in_motion ?l2)
        (adjacent bed ?l2)
      )
    )
  )
)
(:constraints
  (and
    (preference cubeThrownToBin
      (exists (?c - dodgeball)
        (then
          (once (and (not (and (and (object_orientation ?d ?c) (adjacent desk ?c) ) (agent_holds ?d) ) ) (not (and (agent_holds ?c) (on ?g ?c) ) ) ) )
          (hold-while (and (on ?o1 ?t) (and (and (agent_holds ?c) ) (not (and (and (not (and (opposite ?c ?c) ) ) (in ?c ?c) (and (in_motion ?c) (and (in ?c ?d) (agent_holds bed) ) ) ) (and (in_motion ?c) (and (agent_holds ?t1) (and (or (on ?c ?c) (in_motion ?b) ) (same_color ?l1 ?c) (adjacent desk ?d) ) (touch ?c ?d) ) ) ) ) ) ) (and (object_orientation ?c upright) (and (in ?c ?g) (and (not (exists (?d - hexagonal_bin ?h - dodgeball) (on ?g bed) ) ) (in ?c desk) (not (in_motion ?c) ) ) ) ) (>= 2 (distance ?c1 ?g)) )
          (once (same_color desk ?c) )
          (once (not (and (not (on ?c ?b) ) (touch ?t ?o) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (count cubeThrownToBin:pink_dodgeball) )
)
(:scoring
  (+ 1 (count cubeThrownToBin:pink_dodgeball) (count-once-per-objects cubeThrownToBin) 2 (count-once-per-objects cubeThrownToBin:green) (* (external-forall-maximize (+ (* (count-once-per-external-objects cubeThrownToBin:blue:dodgeball) (+ (external-forall-minimize (count-once-per-objects cubeThrownToBin:pink_dodgeball) ) (count cubeThrownToBin:dodgeball:dodgeball) )
          )
          (count-once-per-external-objects cubeThrownToBin:green)
        )
      )
      (count cubeThrownToBin:basketball:dodgeball)
    )
  )
)
)



(define (game game-id-969) (:domain many-objects-room-v1)
(:setup
  (forall (?b - hexagonal_bin)
    (game-conserved
      (in ?b ?d)
    )
  )
)
(:constraints
  (and
    (forall (?h - (either curved_wooden_ramp top_drawer) ?t - dodgeball)
      (and
        (preference pyramidBlockAtopTowerAtEnd
          (exists (?l2 - ball)
            (then
              (once (and (not (adjacent room_center ?b) ) (and (and (not (agent_holds ?c6) ) (on ?l2 ?h) ) (agent_holds ?d) (on ?t ?d) ) ) )
              (once (between ?d ?d1 ?l2) )
              (hold (in ?g ?t) )
              (once (and (between ?l2 ?b ?h) (and (in_motion ?t) (in_motion ?r) (and (same_color ?d ?t) (< (distance ?t ?g) 4) (< 2 (distance rug ?d)) ) ) ) )
            )
          )
        )
        (preference ballThrownFromBehindBlock
          (then
            (once (and (not (and (adjacent_side bed right ?t) (or (or (in_motion ?t) (and (agent_holds ?r) (agent_holds ?t) ) ) (agent_holds ?t) ) ) ) (adjacent room_center ?t) ) )
            (hold (faces ?c ?t) )
            (once (in_motion ?l2) )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (> (+ (+ (= 6 6 )
            (count-once ballThrownFromBehindBlock:dodgeball)
          )
          15
        )
        (total-score)
      )
      (> (total-score) (* (count pyramidBlockAtopTowerAtEnd:hexagonal_bin) (count ballThrownFromBehindBlock:orange:cube_block) )
      )
    )
  )
)
(:scoring
  (* 2 (* (count-once pyramidBlockAtopTowerAtEnd:red:yellow) 5 )
  )
)
)



(define (game game-id-970) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (in_motion ?l)
  )
)
(:constraints
  (and
    (preference blockToBinFromRug
      (exists (?o2 - dodgeball)
        (then
          (hold (in ?o2 ?o2) )
          (hold-while (< 2 3) (open ?d) (not (in_motion ?l) ) (in_motion ?c) )
          (hold (not (and (and (agent_holds ?o2) (on ?o2 ?o2) ) (adjacent ?o2 ?o2) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (external-forall-maximize (+ (count blockToBinFromRug) (count blockToBinFromRug:dodgeball) (* (= 100 7 (+ (count blockToBinFromRug:pink) (count blockToBinFromRug:blue_dodgeball:green) )
          )
          (count-once-per-objects blockToBinFromRug:yellow_cube_block:basketball)
        )
      )
    )
  )
)
(:scoring
  (+ (count-once-per-objects blockToBinFromRug:golfball) (count blockToBinFromRug:yellow) )
)
)



(define (game game-id-971) (:domain many-objects-room-v1)
(:setup
  (exists (?o - dodgeball ?w - red_dodgeball)
    (and
      (and
        (and
          (game-optional
            (not
              (not
                (not
                  (on ?w ?t)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference golfballInBinFromPillow
      (exists (?h ?d - hexagonal_bin)
        (then
          (once (and (agent_holds ?b) (not (on ?d ?d) ) (on ?h ?c) ) )
          (once (in_motion ?d) )
          (once (not (agent_holds ?h) ) )
        )
      )
    )
    (preference thrownObjectHitsComputer
      (exists (?c - blue_pyramid_block)
        (at-end
          (not
            (and
              (in ?c ?g)
              (in ?b ?b)
              (agent_holds ?b)
              (agent_holds ?d)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (/ (* (count golfballInBinFromPillow:cube_block:basketball) (+ 3 5 )
      )
      3
    )
    (* 3 (- (count golfballInBinFromPillow:yellow) )
    )
  )
)
(:scoring
  (count-once-per-objects golfballInBinFromPillow:pink_dodgeball)
)
)



(define (game game-id-972) (:domain many-objects-room-v1)
(:setup
  (exists (?h - ball)
    (and
      (forall (?d - ball ?ob - hexagonal_bin)
        (and
          (exists (?b - doggie_bed)
            (and
              (game-conserved
                (not
                  (agent_holds ?h)
                )
              )
            )
          )
        )
      )
      (game-conserved
        (touch ?h ?ob)
      )
    )
  )
)
(:constraints
  (and
    (preference objectMoved
      (exists (?d - building)
        (at-end
          (and
            (on ?h ?d)
            (not
              (not
                (and
                  (not
                    (in_motion ?h)
                  )
                  (not
                    (not
                      (or
                        (and
                          (in_motion ?p2)
                          (and
                            (in_motion ?d)
                            (in_motion ?o)
                            (adjacent ?d ?d)
                            (not
                              (not
                                (or
                                  (in ?d ?d)
                                  (on ?d ?b)
                                )
                              )
                            )
                          )
                          (game_over )
                        )
                        (in_motion ?d)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
    (forall (?h - game_object)
      (and
        (preference throwGolfballToBin
          (exists (?o3 - beachball)
            (at-end
              (in_motion ?h)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (count objectMoved:beachball) (count-same-positions throwGolfballToBin:doggie_bed) )
)
(:scoring
  (* (= (count-once-per-objects throwGolfballToBin:yellow:hexagonal_bin) (* 3 15 )
    )
    (* (* 4 5 )
      (count throwGolfballToBin:dodgeball)
    )
  )
)
)



(define (game game-id-973) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?b8 - dodgeball ?h - hexagonal_bin)
      (exists (?c - dodgeball)
        (forall (?c2 - color ?b9 - hexagonal_bin)
          (game-conserved
            (same_type ?d ?b9)
          )
        )
      )
    )
    (and
      (forall (?o1 ?b ?w ?t1 ?d ?o1 ?c1 ?h ?g ?d1 - doggie_bed)
        (game-conserved
          (not
            (agent_holds ?t1)
          )
        )
      )
      (exists (?w1 - hexagonal_bin ?p - hexagonal_bin ?r - pyramid_block)
        (game-conserved
          (on ?r ?r)
        )
      )
      (and
        (game-conserved
          (agent_holds agent)
        )
        (forall (?h - color)
          (exists (?b6 ?h - cube_block)
            (exists (?g - (either dodgeball laptop))
              (and
                (game-optional
                  (on floor ?h)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownFromRug
      (exists (?o1 - chair)
        (then
          (once (not (and (not (in_motion ?h) ) (agent_holds ?b) (not (= 1 (distance ?c ?o1) 6) ) (and (agent_holds agent) (not (< (distance ?h ?o1) 0.5) ) ) ) ) )
          (hold (not (and (not (in_motion ?ob) ) (agent_holds ?o1) (not (touch ?o1 ?o1) ) (agent_holds ?o1) (exists (?h - ball ?s - (either side_table wall)) (in_motion ?s) ) (in ?o1 ?o1) (rug_color_under ?o1 ?o1) (and (rug_color_under ?o1 blue) (same_type ?o1 ?o1) ) ) ) )
          (hold (agent_holds ?o) )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (* (count ballThrownFromRug:golfball) 10 )
      (count ballThrownFromRug:red)
    )
    (>= (total-score) (+ (count-once-per-objects ballThrownFromRug:purple) (count-once-per-objects ballThrownFromRug:hexagonal_bin) )
    )
    (or
      (>= (* (* (count-once-per-objects ballThrownFromRug:hexagonal_bin) 5 (* 1 (count-once-per-objects ballThrownFromRug:doggie_bed) )
            (count-once-per-objects ballThrownFromRug:dodgeball)
          )
          3
          (count-once-per-objects ballThrownFromRug:dodgeball)
        )
        (total-score)
      )
      (and
        (>= (+ 10 (count ballThrownFromRug:purple) )
          (total-time)
        )
      )
    )
  )
)
(:scoring
  (< (- (+ (* 1 40 )
        (count-once-per-objects ballThrownFromRug:basketball)
      )
    )
    10
  )
)
)



(define (game game-id-974) (:domain few-objects-room-v1)
(:setup
  (exists (?b - game_object)
    (and
      (forall (?b1 - drawer)
        (forall (?c1 - (either cd alarm_clock))
          (game-conserved
            (not
              (in ?b1 ?b)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?d - red_dodgeball ?b7 - block)
        (then
          (once (not (on ?o1 ?b7) ) )
          (hold (in_motion ?o) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ 3 (count-unique-positions throwAttempt:pink) )
    4
  )
)
(:scoring
  (* (* 2 3 7 (>= (external-forall-minimize (+ (+ (* (count-once throwAttempt) (* 30 (count throwAttempt:beachball) )
                4
              )
              (* 2 10 )
              (* (external-forall-maximize (count throwAttempt:beachball:basketball) ) 100 )
            )
            2
          )
        )
        3
      )
      (+ (external-forall-maximize (* (count-once-per-objects throwAttempt:beachball) 2 )
        )
        (* (count throwAttempt:green) (> (count-once-per-objects throwAttempt:tall_cylindrical_block) (external-forall-maximize (>= 2 100 )
            )
          )
        )
      )
      (count throwAttempt:triangle_block)
      (+ (* (count-total throwAttempt:dodgeball:brown) 3 )
        (external-forall-minimize
          (count-overlapping throwAttempt:basketball:blue_dodgeball)
        )
        (count throwAttempt:dodgeball)
        (* (count throwAttempt:pink_dodgeball) (external-forall-maximize (* (* (count throwAttempt:pink_dodgeball:hexagonal_bin) (count-once-per-objects throwAttempt:blue_dodgeball:hexagonal_bin) 6 (count-once-per-objects throwAttempt:beachball) )
              15
            )
          )
        )
        180
        (count throwAttempt:pink)
      )
      (count-once-per-objects throwAttempt:pink)
      (+ 100 (+ (* 1 5 )
          2
          (count-total throwAttempt:golfball:blue_dodgeball)
        )
      )
    )
  )
)
)



(define (game game-id-975) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (< (distance ?h bed) 0)
  )
)
(:constraints
  (and
    (forall (?h - tall_cylindrical_block)
      (and
        (preference blueObjectMovedToRoomCenter
          (exists (?h - yellow_pyramid_block)
            (then
              (once (not (= 5 1) ) )
              (once (on ?h ?b) )
              (once (agent_holds ?h) )
            )
          )
        )
        (preference blockToBinFromRug
          (exists (?d - (either cylindrical_block triangle_block))
            (then
              (hold-while (in ?d ?d) (not (agent_holds ?h) ) )
              (once (exists (?w1 ?c ?r1 ?b2 - building ?b10 - block) (and (not (object_orientation ?d sideways) ) (agent_holds ?b10) (in_motion main_light_switch) ) ) )
              (once (not (and (agent_holds ?h) (not (and (in_motion ?b) (agent_holds ?c) ) ) (not (> 1 1) ) (adjacent agent ?d) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (count blockToBinFromRug:golfball) (count blueObjectMovedToRoomCenter:golfball) )
  )
)
(:scoring
  (* 2 4 )
)
)



(define (game game-id-976) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (in ?h ?b)
    )
  )
)
(:constraints
  (and
    (preference dodgeballHitsPillowWithoutTouchingBlock
      (exists (?o1 - cube_block ?l3 - chair)
        (then
          (once (object_orientation ?l3 sideways) )
          (once (not (not (in_motion ?l3) ) ) )
          (once (and (and (agent_holds ?l3) ) (touch ?b ?l3) ) )
        )
      )
    )
    (forall (?h - cube_block)
      (and
        (preference ballThrownToBin
          (exists (?r - hexagonal_bin)
            (at-end
              (agent_holds ?o)
            )
          )
        )
      )
    )
    (preference bigObjectThrownToBed
      (exists (?b2 - (either alarm_clock golfball) ?h - hexagonal_bin)
        (then
          (once (not (adjacent ?w2 ?h) ) )
          (once (touch ?d ?b) )
          (hold-while (adjacent desk ?b) (agent_holds ?h) )
        )
      )
    )
  )
)
(:terminal
  (> (total-time) 50 )
)
(:scoring
  (external-forall-maximize
    (count-once-per-objects bigObjectThrownToBed:beachball:green)
  )
)
)



(define (game game-id-977) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (agent_holds ?h)
  )
)
(:constraints
  (and
    (preference objectLandsInBin
      (exists (?s - triangular_ramp ?b - ball)
        (then
          (once (not (on ?b ?g) ) )
          (once (on top_shelf ?d) )
          (hold-while (agent_holds ?c6) (in_motion ?b) )
        )
      )
    )
  )
)
(:terminal
  (< (count objectLandsInBin:basketball:pink:top_drawer) (count objectLandsInBin:blue_pyramid_block) )
)
(:scoring
  (* (* (count objectLandsInBin:dodgeball) (count-same-positions objectLandsInBin:dodgeball) (count objectLandsInBin:rug) )
    (* 6 2 )
  )
)
)



(define (game game-id-978) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds ?b)
  )
)
(:constraints
  (and
    (preference beachballBouncedOffRamp
      (exists (?d - (either dodgeball dodgeball))
        (then
          (once (toggled_on ?b) )
          (hold (in_motion ?g) )
          (once (agent_holds ?d) )
        )
      )
    )
    (preference throwBallToDoggieBedOffWall
      (exists (?b - game_object)
        (then
          (once (same_type floor pillow) )
          (once (not (exists (?p - cube_block ?d - doggie_bed) (not (in ?b1 ?b) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (count beachballBouncedOffRamp:dodgeball:beachball) )
)
(:scoring
  (+ (count throwBallToDoggieBedOffWall:beachball:golfball:hexagonal_bin) (count-once-per-objects throwBallToDoggieBedOffWall:dodgeball) )
)
)



(define (game game-id-979) (:domain medium-objects-room-v1)
(:setup
  (exists (?b - (either dodgeball pyramid_block cube_block))
    (forall (?ob - ball)
      (and
        (game-optional
          (adjacent agent ?d)
        )
        (and
          (game-conserved
            (not
              (and
                (in ?h ?ob)
                (and
                  (on ?b ?l1)
                  (agent_holds ?ob)
                )
              )
            )
          )
          (and
            (and
              (game-conserved
                (and
                  (in ?o ?d)
                  (adjacent bed pink_dodgeball)
                )
              )
            )
            (exists (?d - (either basketball game_object))
              (exists (?b - cube_block ?l4 - red_dodgeball)
                (and
                  (forall (?b - hexagonal_bin)
                    (exists (?b - red_dodgeball)
                      (forall (?b - shelf ?d - curved_wooden_ramp)
                        (or
                          (forall (?o1 - chair)
                            (game-conserved
                              (not
                                (touch ?o1 ?o)
                              )
                            )
                          )
                          (not
                            (and
                              (game-optional
                                (and
                                  (not
                                    (in_motion ?d)
                                  )
                                  (on ?d ?d)
                                )
                              )
                              (game-conserved
                                (agent_holds pink_dodgeball)
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                  (and
                    (game-optional
                      (or
                        (in ?b ?l4)
                        (adjacent ?w desk)
                      )
                    )
                    (exists (?h - game_object)
                      (and
                        (and
                          (game-optional
                            (on ?l1 ?h)
                          )
                        )
                      )
                    )
                    (game-optional
                      (not
                        (agent_holds ?b)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference cubeBlockThrownToTopShelf
      (exists (?h - hexagonal_bin ?d - doggie_bed)
        (at-end
          (not
            (and
              (< (distance ?c ?d) (distance ?h ?d))
              (in_motion ?b)
              (in_motion ?c2)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< (total-time) 4 )
)
(:scoring
  (count-once-per-objects cubeBlockThrownToTopShelf)
)
)



(define (game game-id-980) (:domain many-objects-room-v1)
(:setup
  (exists (?h - hexagonal_bin ?t - cube_block)
    (and
      (game-optional
        (not
          (open ?b)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b2 - beachball)
      (and
        (preference teddyBearLandsInBin
          (then
            (once (agent_holds ?b2) )
            (once (agent_holds rug) )
            (once (touch ?g ?b) )
          )
        )
      )
    )
    (preference ballKnocksTeddy
      (exists (?r - dodgeball)
        (then
          (hold (not (on ?b desk) ) )
          (once (agent_holds ?h) )
          (hold (not (adjacent ?r ?r) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once ballKnocksTeddy:pink) (* (count-once-per-external-objects ballKnocksTeddy:green) 30 (count teddyBearLandsInBin:yellow) )
  )
)
(:scoring
  (* (* (* (+ (* (count teddyBearLandsInBin:pink_dodgeball:purple:blue_dodgeball) (+ 10 (count-increasing-measure teddyBearLandsInBin:bed) )
            10
          )
          (count ballKnocksTeddy:pink:pink_dodgeball)
        )
        5
      )
      5
    )
    3
  )
)
)



(define (game game-id-981) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (adjacent ?w2 ?d)
  )
)
(:constraints
  (and
    (preference throwAttemptFromBehindBlock
      (exists (?r ?b - cube_block ?f - chair)
        (then
          (once (and (not (not (in_motion ?b) ) ) (agent_holds ?f) ) )
          (once (adjacent ?w2 ?b5) )
          (hold (and (agent_holds ?f) (and (agent_holds ?tb) (and (agent_holds ?f) (not (equal_z_position agent ?f) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (* 2 15 )
  )
)
(:scoring
  (= 4 (+ (count-unique-positions throwAttemptFromBehindBlock:golfball:pink) 20 )
    1
  )
)
)



(define (game game-id-982) (:domain medium-objects-room-v1)
(:setup
  (forall (?r - hexagonal_bin)
    (game-optional
      (not
        (exists (?o - dodgeball)
          (agent_holds ?d)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?p1 - hexagonal_bin)
      (and
        (preference throwInBin
          (exists (?o - (either tall_cylindrical_block book bridge_block))
            (then
              (once (in_motion ?o) )
              (hold-while (and (and (and (> (distance ?p1 ?b) (distance desk ?l)) (in_motion ?t) ) (rug_color_under ?o blue) (agent_holds ?p1) ) (touch ?b ?o) ) (not (and (adjacent_side ?o front ?p1) (not (or (same_color ?d yellow) (and (not (in_motion agent) ) (rug_color_under ?b ?p1) ) ) ) ) ) )
              (hold (in door ?p1) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (* 20 8 )
  )
)
(:scoring
  (count-once throwInBin:beachball:green)
)
)



(define (game game-id-983) (:domain many-objects-room-v1)
(:setup
  (exists (?g - desk_shelf)
    (forall (?h - dodgeball ?g - blue_pyramid_block)
      (game-optional
        (and
          (= (distance ?g ?g) 5)
          (and
            (on ?g desk)
            (not
              (in ?d ?o)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference golfballInBinFromPillow
      (exists (?c - dodgeball)
        (then
          (hold (same_object ?c bed) )
          (hold-while (not (touch desk ?c) ) (and (not (not (agent_holds ?c) ) ) (agent_holds ?c) ) )
          (once (agent_holds ?c) )
        )
      )
    )
    (preference gameBlockFound
      (exists (?h - hexagonal_bin ?g - flat_block)
        (then
          (hold (and (and (not (or (agent_holds ?g) (not (in_motion ?b3) ) ) ) (and (in ?h ?h) (and (not (agent_holds ?g) ) (and (< (distance agent ?g) (distance ?h ?b)) (in_motion ?g) ) ) ) ) (agent_holds top_shelf) ) )
          (hold (in_motion ?c) )
          (once (agent_holds ?l) )
        )
      )
    )
  )
)
(:terminal
  (>= (count gameBlockFound:dodgeball) (<= (external-forall-maximize (external-forall-maximize (* (count golfballInBinFromPillow:red) (count-once-per-objects gameBlockFound:yellow:book:pyramid_block) )
        )
      )
      (- 3 )
    )
  )
)
(:scoring
  (+ (* 10 (* 10 (count gameBlockFound:blue_pyramid_block:cube_block) (+ 300 7 )
        20
        6
        4
      )
    )
    3
    (* (* (count-once-per-external-objects golfballInBinFromPillow:red) (count-once-per-objects golfballInBinFromPillow:dodgeball) )
      (-
        1
        (count gameBlockFound:wall)
      )
      (count-overlapping golfballInBinFromPillow:beachball)
    )
  )
)
)



(define (game game-id-984) (:domain few-objects-room-v1)
(:setup
  (exists (?s - dodgeball ?c5 - beachball ?b5 - hexagonal_bin)
    (game-optional
      (in ?b5 ?b5)
    )
  )
)
(:constraints
  (and
    (forall (?h - triangular_ramp)
      (and
        (preference throwToDrawerOrBin
          (then
            (hold (not (not (and (between side_table ?h ?h) (and (and (faces ?h bed) (agent_holds ?h) ) (agent_holds ?h) ) (not (agent_holds ?c) ) ) ) ) )
            (hold-while (not (in ?o ?r) ) (agent_holds ?c1) (and (not (and (not (agent_holds ?c2) ) (in_motion ?d) ) ) (not (agent_holds ?w1) ) ) )
            (hold (not (or (on ?h ?h) (in_motion ?d) ) ) )
          )
        )
      )
    )
    (forall (?b1 - dodgeball)
      (and
        (preference throwBallToBinOffObject
          (exists (?c1 - dodgeball ?d - dodgeball ?h - dodgeball)
            (then
              (once (on ?l ?h) )
              (once (in ?h ?b1) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (> (* (+ (count throwToDrawerOrBin:basketball) 6 )
        (* 6 5 )
      )
      (count-once-per-objects throwBallToBinOffObject:basketball:pink)
    )
  )
)
(:scoring
  (count-overlapping throwBallToBinOffObject:dodgeball:golfball)
)
)



(define (game game-id-985) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?l - (either cube_block pyramid_block) ?d - game_object ?b2 ?d ?b - dodgeball ?c - (either cube_block dodgeball book))
      (forall (?tb - watch)
        (game-conserved
          (not
            (and
              (agent_holds ?tb)
              (in_motion ?c)
              (not
                (on ?b ?c)
              )
              (not
                (toggled_on ?d)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - doggie_bed)
      (and
        (preference beachballBouncedOffRamp
          (exists (?o - (either dodgeball laptop))
            (then
              (hold (agent_holds ?d) )
              (hold (exists (?t - hexagonal_bin) (in_motion ?d) ) )
              (hold (exists (?b - cube_block ?p - hexagonal_bin) (same_type ?o ?l3) ) )
            )
          )
        )
        (preference golfballInBinFromPillow
          (exists (?b9 - triangular_ramp ?w - hexagonal_bin)
            (then
              (hold (touch agent ?w) )
              (once (in_motion ?c3) )
              (once (exists (?b - red_dodgeball) (exists (?b - cube_block) (and (not (not (and (and (agent_holds ?w) (in_motion ?p1) ) (not (and (agent_holds ?r) (on ?bl ?l1) ) ) (touch ?b ?b) ) ) ) (not (adjacent ?w1 ?b) ) (same_color ?d pink) (and (= 1 (distance ?w ?w)) (and (< (distance ?w ?b) 5) (in ?w ?w) (in_motion ?b) ) ) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (>= (- 1 )
        (total-time)
      )
    )
  )
)
(:scoring
  (external-forall-maximize
    (* 2 (* (count-once-per-objects golfballInBinFromPillow:hexagonal_bin) (count golfballInBinFromPillow:hexagonal_bin) (* 7 (= 3 )
          (count beachballBouncedOffRamp:pink:doggie_bed)
          10
          (count beachballBouncedOffRamp:dodgeball)
          (* (count-once-per-objects beachballBouncedOffRamp:book:block:pink_dodgeball) (+ (* 1 (count golfballInBinFromPillow:dodgeball:yellow:dodgeball) )
              (count-measure beachballBouncedOffRamp:pink_dodgeball)
            )
          )
        )
      )
    )
  )
)
)



(define (game game-id-986) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - triangular_ramp ?p2 - hexagonal_bin)
      (and
        (game-optional
          (in ?l ?p2)
        )
        (game-optional
          (agent_holds ?b)
        )
        (forall (?d - cube_block ?l2 - doggie_bed)
          (forall (?t2 - doggie_bed)
            (exists (?o - wall)
              (game-optional
                (equal_z_position ?h ?t2)
              )
            )
          )
        )
      )
    )
    (game-optional
      (not
        (in_motion ?b4)
      )
    )
  )
)
(:constraints
  (and
    (forall (?d ?h ?b4 ?w2 ?w2 - golfball)
      (and
        (preference blockInTowerAtEnd
          (exists (?t ?c - hexagonal_bin)
            (at-end
              (agent_holds ?d)
            )
          )
        )
        (preference throwToRampToBin
          (exists (?d - ball)
            (then
              (once (exists (?b ?d - hexagonal_bin ?b - hexagonal_bin) (in ?w2 ?d) ) )
              (hold (and (on agent ?d) (not (agent_holds ?d) ) ) )
              (hold (not (not (agent_holds ?d) ) ) )
            )
          )
        )
      )
    )
    (preference ballThrownFromObjectToBin
      (exists (?p2 - shelf ?d - hexagonal_bin ?o2 - drawer)
        (then
          (once (and (or (not (not (not (agent_holds ?c) ) ) ) (not (and (and (and (adjacent agent ?o2) (and (and (is_setup_object ?c) (object_orientation ?l sideways) (on ?d ?r) (in ?b ?b) ) (on ?o2 ?d) ) ) (adjacent agent ?b) ) (not (and (in ?o2 rug) (agent_holds ?o) ) ) ) ) ) (agent_holds ?b) ) )
          (once (< 2 (distance desk ?d)) )
          (once (between ?b1 ?o2 ?o2) )
        )
      )
    )
  )
)
(:terminal
  (= 6 2 )
)
(:scoring
  (count throwToRampToBin:dodgeball)
)
)



(define (game game-id-987) (:domain few-objects-room-v1)
(:setup
  (forall (?w2 - triangular_ramp)
    (and
      (game-conserved
        (in_motion ?d)
      )
      (game-conserved
        (agent_holds ?w2)
      )
    )
  )
)
(:constraints
  (and
    (preference blueObjectMovedToRoomCenter
      (exists (?p - drawer)
        (at-end
          (agent_holds ?h)
        )
      )
    )
  )
)
(:terminal
  (or
    (= (count-longest blueObjectMovedToRoomCenter:blue_dodgeball) (- (count blueObjectMovedToRoomCenter:pink:top_drawer:dodgeball) )
    )
    (>= 7 (* (* (count blueObjectMovedToRoomCenter:pink_dodgeball) 6 )
        5
        (external-forall-maximize
          (count blueObjectMovedToRoomCenter:beachball)
        )
      )
    )
  )
)
(:scoring
  (count blueObjectMovedToRoomCenter:beachball)
)
)



(define (game game-id-988) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (same_type ?c ?l4)
  )
)
(:constraints
  (and
    (preference baseBlockInTowerAtEnd
      (exists (?p1 - teddy_bear ?l2 - (either credit_card book))
        (at-end
          (on ?d ?l2)
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (* (* (count baseBlockInTowerAtEnd:blue_cube_block) (count baseBlockInTowerAtEnd:pink:golfball) (+ (count-once baseBlockInTowerAtEnd:yellow) (count baseBlockInTowerAtEnd:golfball) )
        2
        (+ 6 (- 6 )
          10
        )
        40
      )
      15
    )
  )
)
(:scoring
  (count baseBlockInTowerAtEnd:pyramid_block)
)
)



(define (game game-id-989) (:domain few-objects-room-v1)
(:setup
  (forall (?d - hexagonal_bin ?h - game_object)
    (game-conserved
      (adjacent ?h ?o)
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?l - beachball)
        (then
          (hold-while (exists (?h - hexagonal_bin ?c3 - cube_block) (and (in_motion ?c3) (not (touch agent ?t) ) (agent_holds ?d) ) ) (not (adjacent room_center ?l) ) (on ?o ?b1) (agent_holds ?l) )
          (hold (same_color ?o ?l) )
          (once (and (in_motion ?l) ) )
        )
      )
    )
  )
)
(:terminal
  (> (* (count-once-per-objects throwAttempt:dodgeball) (* (+ 2 (count throwAttempt:dodgeball:basketball) )
        (count-once-per-objects throwAttempt:yellow)
      )
      (count-longest throwAttempt:orange)
    )
    (count-once-per-objects throwAttempt:pink_dodgeball)
  )
)
(:scoring
  (count throwAttempt:dodgeball)
)
)



(define (game game-id-990) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?b - cube_block)
      (game-conserved
        (in ?b ?d)
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - (either blue_cube_block tall_cylindrical_block) ?d - game_object)
      (and
        (preference pyramidBlockAtopTowerAtEnd
          (exists (?tb - hexagonal_bin ?r2 - cylindrical_block)
            (then
              (hold-while (agent_holds ?r2) (and (agent_holds ?b) (adjacent ?d ?d) ) (<= 10 (distance desk ?h)) )
              (once (adjacent desk bed) )
              (once (on ?r2 ?r2) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (total-score) 3 )
  )
)
(:scoring
  (- (+ 4 (count-overlapping pyramidBlockAtopTowerAtEnd:dodgeball) )
  )
)
)



(define (game game-id-991) (:domain many-objects-room-v1)
(:setup
  (forall (?h - dodgeball)
    (exists (?h - teddy_bear)
      (game-optional
        (not
          (on ?h ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?b - dodgeball)
        (then
          (once (exists (?d - green_triangular_ramp ?c - golfball) (not (not (and (and (or (in_motion ?c) (in_motion ?t) ) (agent_holds ?c) ) (agent_holds ?b) ) ) ) ) )
          (once (and (>= (distance bed ?b) 1) (< (distance ?b agent) 5) ) )
          (once (on ?r ?b) )
          (once (not (in_motion ?d) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (total-score) )
)
(:scoring
  (count-once-per-objects ballThrownToBin:basketball:dodgeball)
)
)



(define (game game-id-992) (:domain medium-objects-room-v1)
(:setup
  (not
    (forall (?t - dodgeball)
      (game-conserved
        (in_motion ?s)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownMissesEverything
      (exists (?c5 - dodgeball ?o - beachball)
        (at-end
          (and
            (equal_z_position ?o ?o)
            (and
              (agent_holds ?o)
              (on ?o ?o)
              (and
                (and
                  (in ?d ?h)
                  (same_color ?o ?o)
                  (in floor ?o)
                  (agent_holds ?g)
                )
              )
            )
          )
        )
      )
    )
    (preference ballThrownIntoTarget
      (exists (?b - (either yellow pencil mug hexagonal_bin cube_block))
        (then
          (hold (and (toggled_on ?l1) (not (not (and (in ?b ?b) (not (and (in_motion agent) (and (and (not (in_motion ?d) ) (same_type ?d bridge_block) ) (faces ?g ?b) ) ) ) ) ) ) ) )
          (once (< 0 (distance ?h ?b)) )
          (hold (not (and (in_motion ?o) (above ?o ?c) (and (and (not (same_type ?b ?l3) ) (agent_holds ?h) ) (not (toggled_on ?ob) ) (adjacent ?h ?d) ) (in ?d ?b) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 6 (count-once-per-external-objects ballThrownMissesEverything:dodgeball) )
)
(:scoring
  (count ballThrownIntoTarget:red_pyramid_block:book)
)
)



(define (game game-id-993) (:domain many-objects-room-v1)
(:setup
  (forall (?d2 - (either basketball golfball) ?o - hexagonal_bin ?r - hexagonal_bin)
    (game-conserved
      (is_setup_object rug)
    )
  )
)
(:constraints
  (and
    (preference pyramidBlockAtopTowerAtEnd
      (exists (?c - tan_cube_block ?s - pyramid_block)
        (then
          (hold (in ?s ?b) )
          (hold (in_motion ?c) )
          (once (< 1 7) )
        )
      )
    )
    (preference beachballOnRug
      (exists (?o1 - dodgeball ?d - curved_wooden_ramp)
        (then
          (hold (not (in_motion ?b) ) )
          (once (adjacent bed ?d) )
          (once (equal_x_position bed ?c) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (count pyramidBlockAtopTowerAtEnd:dodgeball:pink:red) )
)
(:scoring
  (count-once-per-objects pyramidBlockAtopTowerAtEnd:pink:dodgeball)
)
)



(define (game game-id-994) (:domain medium-objects-room-v1)
(:setup
  (forall (?d - doggie_bed ?h - (either book floor))
    (and
      (game-optional
        (agent_holds ?g)
      )
      (game-conserved
        (exists (?s - ball)
          (< 2 1)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwObjectToBin
      (exists (?b - (either dodgeball doggie_bed golfball yellow_cube_block) ?p2 - building)
        (then
          (once (and (agent_crouches ) (adjacent desk ?p2) (agent_holds ?p2) (and (and (agent_holds ?b) (in_motion ?p2) ) (in_motion ?b) (in_motion ?p2) ) (not (agent_holds ?c) ) (in_motion ?b) ) )
          (once (in_motion ?p2) )
          (once (touch ?b ?o) )
        )
      )
    )
  )
)
(:terminal
  (<= 2 3 )
)
(:scoring
  (count-once-per-objects throwObjectToBin:red)
)
)



(define (game game-id-995) (:domain many-objects-room-v1)
(:setup
  (and
    (game-optional
      (agent_holds ?b)
    )
  )
)
(:constraints
  (and
    (preference gameObjectToBin
      (exists (?l - ball)
        (then
          (hold (not (and (in_motion ?o) (not (agent_holds agent) ) ) ) )
          (once (and (in ?b ?l) (in_motion ?l) (< (distance desk ?b) 1) ) )
          (once (< 1 (distance desk ?h)) )
        )
      )
    )
    (preference throwBallFromOtherBallToBin
      (exists (?c - game_object)
        (then
          (once (not (or (agent_holds ?c) (agent_holds desk) ) ) )
          (once (and (and (adjacent_side agent left ?b) (faces ?c bed) ) (exists (?h - shelf) (in_motion ?h) ) ) )
          (hold (in_motion ?h) )
        )
      )
    )
    (preference throwToDrawerOrBin
      (exists (?ob ?r - game_object ?c - cube_block)
        (then
          (once (not (not (in_motion green_golfball) ) ) )
          (once (agent_holds ?c) )
          (once (agent_holds ?c) )
        )
      )
    )
    (preference bookOnDeskShelf
      (exists (?d - cube_block)
        (then
          (once (and (in_motion ?d) (in_motion ?d) (in ?d ?d) (agent_holds ?c) ) )
          (once (and (in_motion ?d) (and (on ?g ?b) (and (exists (?b4 - hexagonal_bin ?h - curved_wooden_ramp ?h - building) (and (adjacent_side bed front ?b) (agent_holds ?b) ) ) (not (in_motion ?d) ) ) ) ) )
          (once (in ?l1 ?d) )
        )
      )
    )
    (forall (?h - game_object ?c2 - block ?c4 ?p ?c ?d1 - pillow)
      (and
        (preference throwAttempt
          (exists (?ob - hexagonal_bin)
            (then
              (once (and (and (agent_holds ?c) (object_orientation agent ?ob) ) (open ?p) ) )
              (hold (in_motion ?o) )
              (hold-while (on ?d ?ob) (< 1 (building_size ?r)) (agent_holds ?d) )
            )
          )
        )
      )
    )
    (forall (?h - dodgeball)
      (and
        (preference throwFromEdgeOfRug
          (exists (?r1 - cube_block)
            (then
              (once (exists (?c - hexagonal_bin ?c - (either dodgeball cellphone cellphone) ?c - cube_block) (on ?h ?b6) ) )
              (hold (agent_holds ?b) )
              (once (in_motion ?h) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 4 10 )
)
(:scoring
  (count-increasing-measure throwAttempt:purple)
)
)



(define (game game-id-996) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (faces ?d1 ?g)
  )
)
(:constraints
  (and
    (forall (?o4 ?t - bridge_block ?f - chair ?f - game_object)
      (and
        (preference ballThrownFromDoor
          (exists (?b - block ?o3 - hexagonal_bin)
            (at-end
              (not
                (not
                  (not
                    (not
                      (in_motion desk)
                    )
                  )
                )
              )
            )
          )
        )
        (preference objectThrownFromRug
          (exists (?h - (either ball dodgeball cylindrical_block bridge_block laptop golfball pyramid_block))
            (then
              (hold-while (exists (?p3 - (either key_chain laptop)) (not (agent_holds ?f) ) ) (exists (?b6 - game_object) (not (open ?o2) ) ) )
              (once (in ?h ?f) )
              (once (on ?h ?f) )
            )
          )
        )
      )
    )
    (forall (?b - hexagonal_bin)
      (and
        (preference ballKnocksBlockFromRug
          (exists (?l2 - (either flat_block))
            (then
              (once (agent_holds ?h) )
              (hold (in_motion ?b) )
              (once (in_motion ?l2) )
              (once (= (distance ?l2 ?l2) 1) )
              (hold-while (in_motion ?c) (not (and (and (and (agent_holds ?b) (touch ?b ?b) ) (on ?l2 ?d) ) (on ?l2 ?b) ) ) )
            )
          )
        )
      )
    )
    (preference throwAttempt
      (exists (?d1 - (either pyramid_block cd))
        (then
          (once (exists (?l - dodgeball) (and (not (on ?l ?d1) ) (agent_holds ?h) ) ) )
          (once (on ?d1 ?l) )
          (hold-while (exists (?b - building) (agent_holds ?p) ) (on ?d1 agent) )
        )
      )
    )
  )
)
(:terminal
  (> (count throwAttempt:beachball) (total-time) )
)
(:scoring
  (count-overlapping ballKnocksBlockFromRug:white:block)
)
)



(define (game game-id-997) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (open bed)
  )
)
(:constraints
  (and
    (preference throwToBin
      (exists (?c - hexagonal_bin ?h - curved_wooden_ramp ?w2 - doggie_bed ?h - game_object)
        (then
          (once (and (not (on ?h ?h) ) (not (not (in_motion ?l) ) ) ) )
          (once (not (adjacent_side room_center ?h ?h front) ) )
          (hold (agent_holds floor) )
        )
      )
    )
    (preference throwGolfballToBin
      (exists (?h - game_object ?o3 - hexagonal_bin ?p - hexagonal_bin ?c - ball ?h ?h ?d2 ?r2 ?d - dodgeball)
        (then
          (once (in_motion agent) )
          (hold (not (in_motion ?h) ) )
          (once (same_color ?d2 ?c) )
        )
      )
    )
  )
)
(:terminal
  (>= (count throwGolfballToBin:blue:pink) (+ 1 (count-once-per-objects throwGolfballToBin:dodgeball) )
  )
)
(:scoring
  (count throwGolfballToBin:beachball)
)
)



(define (game game-id-998) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (exists (?b - ball)
        (game-conserved
          (adjacent ?b ?b)
        )
      )
      (and
        (and
          (exists (?f - building)
            (and
              (game-conserved
                (agent_holds ?d)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o4 - (either golfball dodgeball))
      (and
        (preference otherObjectsOnDeskShelf
          (exists (?c2 - hexagonal_bin ?o3 - ball)
            (then
              (once (agent_holds ?o) )
              (once (not (adjacent_side desk front ?c) ) )
              (hold (between ?c3 ?o3 ?o3) )
            )
          )
        )
        (preference throwBallToBin
          (exists (?o - doggie_bed ?o - (either golfball beachball dodgeball pyramid_block) ?b - dodgeball)
            (then
              (hold (in_motion ?b) )
              (once (adjacent_side ?o4 back ?d) )
              (once (not (or (and (object_orientation ?o4 upright) (not (on ?b ?d) ) ) (not (agent_holds ?b) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> 3 (total-time) )
)
(:scoring
  (count otherObjectsOnDeskShelf:purple)
)
)



(define (game game-id-999) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (in_motion ?c)
  )
)
(:constraints
  (and
    (forall (?h - tall_cylindrical_block)
      (and
        (preference throwAttemptFromDoor
          (exists (?h - chair)
            (then
              (once (touch rug ?o) )
              (once (agent_holds ?h) )
              (once (not (same_object ?h ?c2) ) )
            )
          )
        )
        (preference throwAttempt
          (exists (?b - (either beachball bridge_block))
            (then
              (once (exists (?b ?b4 - chair ?c - game_object ?t - hexagonal_bin ?d ?p - chair) (not (same_color ?h blue) ) ) )
              (once (agent_holds ?d) )
              (once (in_motion bed) )
            )
          )
        )
        (preference blocksInPlace
          (exists (?g - hexagonal_bin ?h - dodgeball)
            (then
              (once (agent_holds ?h) )
              (hold (agent_crouches ) )
              (once (in ?h ?b) )
              (hold-while (and (agent_holds ?h) (< 3 (distance room_center ?h)) ) (same_type ?h drawer) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* 5 (count throwAttemptFromDoor:orange) )
    30
  )
)
(:scoring
  (count blocksInPlace:doggie_bed)
)
)



(define (game game-id-1000) (:domain medium-objects-room-v1)
(:setup
  (forall (?b1 - curved_wooden_ramp ?d - drawer)
    (exists (?o - dodgeball ?x ?d - block)
      (and
        (and
          (forall (?d - game_object)
            (exists (?p - ball ?t - hexagonal_bin)
              (not
                (game-optional
                  (< (distance_side ?d front ?d front_left_corner) 5)
                )
              )
            )
          )
          (and
            (exists (?l - watch ?b2 - doggie_bed ?ob - block ?h - cube_block)
              (and
                (exists (?c1 - hexagonal_bin)
                  (forall (?d - hexagonal_bin)
                    (exists (?b - block)
                      (and
                        (forall (?tb ?w2 - wall)
                          (and
                            (game-conserved
                              (not
                                (and
                                  (same_color ?tb blue)
                                  (in_motion ?h)
                                )
                              )
                            )
                          )
                        )
                        (game-conserved
                          (agent_holds ?d)
                        )
                      )
                    )
                  )
                )
                (game-optional
                  (on ?d1 ?t)
                )
                (game-conserved
                  (not
                    (in_motion ?x)
                  )
                )
              )
            )
          )
          (forall (?l4 - teddy_bear)
            (exists (?c2 - doggie_bed)
              (exists (?l - dodgeball)
                (exists (?o - ball ?d - dodgeball)
                  (and
                    (game-optional
                      (not
                        (on ?l4 ?l)
                      )
                    )
                    (game-conserved
                      (agent_holds ?l)
                    )
                  )
                )
              )
            )
          )
        )
        (and
          (and
            (game-conserved
              (in_motion ?h)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference bookOnDeskShelf
      (exists (?b10 - hexagonal_bin ?b - pyramid_block)
        (then
          (once (exists (?c5 - dodgeball) (not (agent_holds ?b) ) ) )
          (hold (and (in ?b ?h) (in_motion ?b) ) )
          (hold (not (agent_holds ?d) ) )
        )
      )
    )
    (preference throwToDrawerOrBin
      (exists (?b5 - (either cube_block dodgeball book))
        (at-end
          (not
            (not
              (not
                (not
                  (in_motion ?b5)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (>= (count-once-per-objects throwToDrawerOrBin:red) 50 )
    (count throwToDrawerOrBin:dodgeball)
  )
)
(:scoring
  (count-once-per-objects bookOnDeskShelf:green:beachball)
)
)



(define (game game-id-1001) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (exists (?c5 - (either alarm_clock bridge_block main_light_switch))
      (and
        (not
          (agent_holds ?d)
        )
        (and
          (same_type ?c5 ?l4)
          (= (distance ?c5 ?c5) (distance_side bed front ?c5))
        )
        (and
          (not
            (in_motion ?o)
          )
          (in_motion ?c5)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballsInPlace
      (exists (?o - (either cd beachball) ?bl - curved_wooden_ramp)
        (then
          (once (on ?bl ?l) )
          (once (game_over ) )
          (once (in_motion ?bl) )
        )
      )
    )
    (forall (?p1 - (either pyramid_block desktop))
      (and
        (preference ballNeverThrown
          (exists (?p2 - (either cube_block golfball))
            (then
              (once (and (on ?p1 ?p1) (in_motion ?b) ) )
              (once (and (and (agent_holds ?p2) (agent_holds ?p2) (agent_holds ?o) ) (in_motion ?p2) (agent_holds ?d) ) )
              (once (and (= (distance ?p1 ?t) 1 (distance_side desk left ?p2 left)) (adjacent bed ?d) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (= (total-score) 7 )
)
(:scoring
  (count-once-per-objects ballNeverThrown:white)
)
)



(define (game game-id-1002) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (in_motion ?h)
  )
)
(:constraints
  (and
    (forall (?h - ball)
      (and
        (preference tanObjectMovedToRoomCenter
          (exists (?d - beachball)
            (then
              (once (in_motion ?h) )
              (once (and (not (in_motion ?d) ) (< 1 (distance room_center ?h)) ) )
              (hold (and (adjacent ?d ?d) (and (adjacent room_center ?l2) (agent_holds ?ob) (agent_holds ?d) ) ) )
            )
          )
        )
        (preference teddyBearHitsBall
          (exists (?b2 - dodgeball)
            (then
              (once (not (and (and (agent_holds ?b2) (on ?h ?b2) ) (not (in ?h ?o) ) ) ) )
              (once (not (agent_holds ?h) ) )
              (hold-while (agent_holds ?t) (< 2 2) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> 7 (count-once-per-objects teddyBearHitsBall:pink:pink) )
)
(:scoring
  (count teddyBearHitsBall:dodgeball:dodgeball)
)
)



(define (game game-id-1003) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (not
      (on agent ?o)
    )
  )
)
(:constraints
  (and
    (preference throwInBin
      (exists (?t2 - hexagonal_bin ?x - cube_block)
        (then
          (once (in_motion ?s) )
          (once (> (distance ?h ?h) 1) )
          (once (and (agent_holds ?x) ) )
        )
      )
    )
    (forall (?b - (either golfball book))
      (and
        (preference throwAttempt
          (exists (?c - (either blue_cube_block dodgeball))
            (then
              (once (between ?b ?d ?b) )
              (once (or (object_orientation ?c3 upright) ) )
              (once (agent_holds ?r) )
            )
          )
        )
        (preference throwKnocksBlock
          (exists (?c1 - hexagonal_bin)
            (then
              (once (broken ?c1) )
              (once-measure (adjacent agent ?c) (distance ?b ?b) )
              (once (and (not (agent_holds ?c1) ) (and (and (not (agent_holds ?d) ) (and (touch ?d ?b) (object_orientation ?b upright) ) ) (and (adjacent desk ?c1) (in_motion desk) ) ) (agent_holds ?c1) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (* (count throwAttempt:dodgeball) (+ (count-once throwInBin:yellow) (count-once throwAttempt:hexagonal_bin) )
    )
    (total-score)
  )
)
(:scoring
  (count throwAttempt:green)
)
)



(define (game game-id-1004) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds ?c2)
  )
)
(:constraints
  (and
    (preference dodgeballFromRugToBin
      (exists (?o2 - dodgeball ?c - tan_cube_block)
        (then
          (hold-while (adjacent_side ?r front_left_corner ?h ?c) (and (and (agent_holds ?c) (not (and (toggled_on ?g) (in ?h ?o) ) ) (or (or (and (in ?r rug) (and (= (distance ?s ?h) (distance ?d agent)) (< (distance_side bed front ?c) 1) ) ) (and (and (in ?d ?c) (not (rug_color_under ?c ?c) ) ) (same_type ?d ?l2) ) ) (not (in_motion ?c) ) ) (and (exists (?b4 - hexagonal_bin) (agent_holds ?l2) ) (agent_holds ?c) ) ) (and (touch floor ?c) (in agent ?c) ) ) )
          (once (adjacent_side door back ?d back) )
          (once (and (not (not (rug_color_under floor ?c) ) ) (not (agent_holds ?b1) ) ) )
        )
      )
    )
    (preference throwFromEdgeOfRug
      (exists (?c - (either cylindrical_block cylindrical_block) ?s - dodgeball ?w1 - dodgeball)
        (then
          (hold (and (on ?l ?c) (and (equal_z_position agent ?b) (and (in ?l ?w1) (on ?d ?d) (is_setup_object ?b) (< (distance_side ?w1 left ?r front) 1) ) (in ?b ?w1) ) ) )
          (hold-while (and (in_motion agent) (agent_holds ?t) ) (and (in ?w1 ?w1) (in ?b ?r) ) (game_start ) )
          (once (= 7 (building_size ?d)) )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (total-score) (total-score) )
    (<= 10 (total-time) )
    (> (total-time) 6 )
    (>= (* (- (count-overlapping throwFromEdgeOfRug:blue_dodgeball:basketball) )
        (* 10 9 )
      )
      10
    )
  )
)
(:scoring
  (+ 2 (* (* 1 (* (count-once dodgeballFromRugToBin:red) (+ (count dodgeballFromRugToBin:green) 6 )
        )
        5
      )
      (* 6 (* (- (count dodgeballFromRugToBin:cylindrical_block) )
          300
        )
        3
        (count throwFromEdgeOfRug:basketball)
        5
        (count dodgeballFromRugToBin:rug)
        2
      )
    )
  )
)
)



(define (game game-id-1005) (:domain few-objects-room-v1)
(:setup
  (forall (?bl - hexagonal_bin)
    (game-conserved
      (in_motion ?l)
    )
  )
)
(:constraints
  (and
    (forall (?b10 - dodgeball)
      (and
        (preference dropAttempt
          (exists (?o2 - doggie_bed)
            (then
              (once (same_type ?b10 pillow) )
              (hold (agent_holds bed) )
              (once (and (agent_holds ?b10) (in_motion ?o2) ) )
            )
          )
        )
        (preference ballThrownOntoTarget
          (exists (?o - dodgeball)
            (then
              (once (touch ?b ?d) )
              (once (exists (?c3 - dodgeball) (adjacent door ?b) ) )
              (once (and (on ?o ?d) (and (agent_holds agent) (in ?t ?d) (not (agent_holds ?h) ) (or (touch ?d ?b) (game_over ) ) ) (adjacent desk ?l) (adjacent ?h ?c) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (total-score) 5 )
    (< 5 25 )
  )
)
(:scoring
  (count ballThrownOntoTarget:blue_cube_block)
)
)



(define (game game-id-1006) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (touch ?h ?b)
  )
)
(:constraints
  (and
    (forall (?r1 ?b9 ?g ?b ?p - hexagonal_bin ?bl - doggie_bed)
      (and
        (preference dodgeballHitsPillowWithoutTouchingBlock
          (exists (?h - block)
            (then
              (once (not (same_color ?h ?bl) ) )
              (hold (not (and (agent_holds ?bl) (not (and (in_motion ?b) (adjacent room_center ?bl) ) ) (in_motion ?t) ) ) )
              (hold-while (not (agent_holds ?h) ) (between ?b ?d ?bl) )
            )
          )
        )
      )
    )
    (preference ballThrownToBin
      (exists (?o1 - drawer)
        (then
          (once (and (adjacent ?c ?d) (not (not (agent_holds ?d) ) ) ) )
          (once (in_motion ?o1) )
          (hold (not (and (not (agent_holds ?o1) ) ) ) )
          (once (not (not (not (adjacent desk ?o1) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 0.7 )
)
(:scoring
  (count-once dodgeballHitsPillowWithoutTouchingBlock:brown)
)
)



(define (game game-id-1007) (:domain many-objects-room-v1)
(:setup
  (forall (?b5 - curved_wooden_ramp)
    (forall (?g - wall)
      (game-optional
        (not
          (in ?d ?g)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrowAttempt
      (exists (?h - cube_block)
        (then
          (once (on ?h ?d) )
          (once (in_motion ?b6) )
          (once (not (and (not (and (not (on agent ?l1) ) (is_setup_object agent) ) ) (touch ?h ?w2) ) ) )
          (once (adjacent ?h ?l) )
        )
      )
    )
    (forall (?g - golfball)
      (and
        (preference ballThrownToBin
          (exists (?c4 - cube_block)
            (then
              (once (and (not (exists (?d2 - ball ?b4 - hexagonal_bin) (not (agent_holds ?d) ) ) ) (and (rug_color_under ?c yellow) (not (in_motion ?o) ) ) (or (agent_holds ?b) (above ?w2 ?o) ) ) )
            )
          )
        )
      )
    )
    (preference itemsHidingScreens
      (exists (?b10 - cube_block)
        (at-end
          (and
            (in_motion ?o)
            (agent_holds ?b10)
            (in_motion ?b10)
          )
        )
      )
    )
  )
)
(:terminal
  (> 2 (>= (* (count-shortest itemsHidingScreens:red) 10 )
      (* 4 (count-once itemsHidingScreens:red:dodgeball) )
    )
  )
)
(:scoring
  (* (* (* (count ballThrownToBin:pink_dodgeball) (= (+ (count-once-per-objects ballThrowAttempt:green) 2 )
          4
        )
      )
      (+ (= (count itemsHidingScreens:pink_dodgeball:bed) (count ballThrownToBin:golfball) )
        10
      )
    )
    (+ (count-same-positions ballThrowAttempt:dodgeball) (* 10 )
    )
  )
)
)



(define (game game-id-1008) (:domain few-objects-room-v1)
(:setup
  (forall (?p - building)
    (exists (?p - game_object)
      (forall (?h - blinds ?l3 - hexagonal_bin)
        (forall (?h - game_object)
          (and
            (forall (?h - ball)
              (exists (?t - block)
                (exists (?r - cube_block ?l3 - dodgeball)
                  (and
                    (forall (?c1 - (either laptop wall))
                      (and
                        (forall (?d - block)
                          (game-conserved
                            (same_object ?c1 ?d)
                          )
                        )
                        (and
                          (exists (?h - hexagonal_bin ?b7 - (either hexagonal_bin triangle_block))
                            (game-optional
                              (in ?h ?b)
                            )
                          )
                          (and
                            (game-conserved
                              (in ?l3 ?o)
                            )
                            (game-optional
                              (and
                                (touch agent ?d)
                                (>= 10 6)
                                (and
                                  (equal_z_position ?h ?h)
                                  (game_start )
                                )
                                (agent_holds ?c1)
                                (and
                                  (not
                                    (same_color ?d ?tb)
                                  )
                                  (on pink_dodgeball ?t)
                                )
                                (and
                                  (and
                                    (not
                                      (and
                                        (toggled_on ?b)
                                        (not
                                          (or
                                            (and
                                              (in_motion ?c1)
                                              (not
                                                (in_motion ?t)
                                              )
                                            )
                                            (not
                                              (not
                                                (in ?d ?p)
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                    (between ?p ?b ?b1)
                                  )
                                  (or
                                    (in ?p ?p)
                                    (in_motion ?l3)
                                  )
                                  (and
                                    (and
                                      (not
                                        (and
                                          (adjacent ?t ?o)
                                          (on ?b ?p)
                                        )
                                      )
                                    )
                                    (not
                                      (adjacent ?h ?h)
                                    )
                                  )
                                )
                                (agent_holds ?c1)
                                (on ?d ?d)
                              )
                            )
                            (and
                              (exists (?b - pillow ?o1 - hexagonal_bin)
                                (game-optional
                                  (agent_holds ?l3)
                                )
                              )
                            )
                            (and
                              (exists (?l1 - hexagonal_bin)
                                (forall (?c1 - hexagonal_bin ?f - teddy_bear ?o - triangular_ramp)
                                  (forall (?b3 - ball ?c - hexagonal_bin)
                                    (game-conserved
                                      (< 9 1)
                                    )
                                  )
                                )
                              )
                              (game-optional
                                (and
                                  (not
                                    (and
                                      (and
                                        (adjacent ?r ?b)
                                        (agent_holds bed)
                                      )
                                      (in_motion ?d1)
                                    )
                                  )
                                  (not
                                    (in_motion ?b)
                                  )
                                )
                              )
                            )
                          )
                          (game-conserved
                            (in_motion ?l3)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
            (game-conserved
              (on ?h ?h)
            )
            (and
              (and
                (game-conserved
                  (agent_holds ?b1)
                )
              )
            )
            (game-optional
              (in_motion ?l3)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference pillowThrownToDoggieBed
      (exists (?o3 - chair)
        (then
          (once (exists (?d - hexagonal_bin) (< (distance desk ?d) 2) ) )
          (once (not (and (exists (?db - hexagonal_bin ?c2 - hexagonal_bin) (and (in desk ?d) (and (in_motion ?o3) (not (not (agent_holds ?t) ) ) ) ) ) (and (and (not (on ?o ?t) ) (and (on ?p2 ?b5) (in_motion ?h) ) (on ?o3 ?o3) ) (not (same_color ?o tan) ) (not (and (and (in_motion ?o3) (and (in_motion ?o3) (agent_holds ?b) (on ?h ?o3) ) ) (not (agent_holds ?b) ) ) ) ) ) ) )
          (once (adjacent_side room_center ?o3 ?o3) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) 4 )
)
(:scoring
  (count-once-per-objects pillowThrownToDoggieBed:blue)
)
)



(define (game game-id-1009) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (game-conserved
        (and
          (exists (?r - ball)
            (on ?r ?d)
          )
          (not
            (agent_holds ?p)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttemptFromDoor
      (exists (?s - (either doggie_bed game_object))
        (then
          (once (and (on ?s bed) (and (not (agent_holds ?s) ) (in_motion door) (in_motion ?s) (not (and (not (adjacent ?d ?s) ) (on ?d ?s) (is_setup_object ?s) ) ) ) ) )
          (hold-while (same_type ?r ?s) (< (distance desk ?s) 10) )
          (once (in_motion ?s) )
        )
      )
    )
  )
)
(:terminal
  (> 5 (total-time) )
)
(:scoring
  (count-once-per-objects throwAttemptFromDoor:dodgeball)
)
)



(define (game game-id-1010) (:domain few-objects-room-v1)
(:setup
  (exists (?c2 - dodgeball)
    (and
      (exists (?c1 - shelf)
        (and
          (and
            (exists (?w1 - cylindrical_block ?c - wall)
              (and
                (exists (?b - dodgeball)
                  (game-conserved
                    (not
                      (touch ?c ?c)
                    )
                  )
                )
                (game-conserved
                  (and
                    (not
                      (in_motion ?c)
                    )
                    (not
                      (same_object ?c2 ?tb)
                    )
                  )
                )
                (and
                  (forall (?d - cube_block ?p - dodgeball)
                    (and
                      (and
                        (game-conserved
                          (and
                            (or
                              (exists (?x - dodgeball)
                                (agent_holds ?o)
                              )
                              (on agent ?b)
                            )
                            (agent_holds ?c1)
                          )
                        )
                      )
                    )
                  )
                  (and
                    (game-conserved
                      (and
                        (and
                          (touch ?o ?c)
                          (not
                            (rug_color_under ?p ?c1)
                          )
                        )
                        (agent_holds ?b)
                        (equal_z_position ?c1 ?c1)
                      )
                    )
                    (and
                      (game-conserved
                        (not
                          (in ?g ?h)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
          (and
            (exists (?r ?d - hexagonal_bin)
              (game-conserved
                (above ?o ?c)
              )
            )
            (exists (?d2 - (either alarm_clock cube_block dodgeball) ?b - dodgeball ?t - building)
              (exists (?c4 - shelf)
                (game-conserved
                  (< 6 (distance room_center desk))
                )
              )
            )
            (or
              (game-conserved
                (agent_holds ?w2)
              )
              (and
                (exists (?d1 ?x - dodgeball ?b - hexagonal_bin)
                  (game-conserved
                    (and
                      (and
                        (= (distance ?c1 ?b) 0.5)
                        (not
                          (agent_holds ?c1)
                        )
                      )
                      (adjacent ?c2 ?h)
                    )
                  )
                )
                (forall (?b3 - doggie_bed)
                  (not
                    (exists (?t - ball ?b9 - ball ?t2 - hexagonal_bin)
                      (game-conserved
                        (agent_holds ?t)
                      )
                    )
                  )
                )
                (forall (?o1 - block)
                  (game-optional
                    (exists (?b - ball)
                      (same_type ?c2 block)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - hexagonal_bin)
      (and
        (preference ballDroppedInBin
          (exists (?b - building)
            (then
              (once (in ?b desk) )
              (once (not (agent_holds ?b) ) )
              (hold (not (not (and (and (agent_holds ?b) (between ?p agent ?d) ) (agent_holds ?h) ) ) ) )
            )
          )
        )
        (preference throwBallToBin
          (at-end
            (not
              (not
                (and
                  (forall (?h - cube_block)
                    (< 10 (distance ?d ?h))
                  )
                  (agent_holds ?c)
                )
              )
            )
          )
        )
      )
    )
    (preference throwMovesBeachballWithoutKnockingTeddy
      (exists (?b - hexagonal_bin ?r2 - flat_block)
        (then
          (once (rug_color_under ?r2 ?c) )
          (hold-while (not (not (adjacent door agent) ) ) (not (< 3 (distance ?r2 ?b)) ) )
          (once (and (adjacent desk ?r2) (not (and (in ?r2 ?g) (< (distance ?h ?r2) 1) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects ballDroppedInBin:book) 1 )
)
(:scoring
  (* (count-once-per-objects ballDroppedInBin:red) (count throwMovesBeachballWithoutKnockingTeddy:golfball) )
)
)



(define (game game-id-1011) (:domain many-objects-room-v1)
(:setup
  (and
    (not
      (exists (?o4 - building)
        (game-optional
          (not
            (and
              (same_color green_golfball tan)
              (not
                (and
                  (game_start )
                  (agent_holds ?o4)
                )
              )
              (above ?o ?o4)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference pinkObjectMovedToRoomCenter
      (exists (?t - (either lamp book) ?r2 - chair)
        (then
          (once (agent_holds ?r2) )
          (once (and (and (not (rug_color_under ?r2 ?r2) ) (in ?b ?c1) ) (on ?r2 ?b) (same_type ?r2 ?r2) (in_motion ?r2) ) )
          (hold (on ?r2 ?r2) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (+ 3 (count-overlapping pinkObjectMovedToRoomCenter:block) )
      (- 4 )
    )
    (count pinkObjectMovedToRoomCenter:dodgeball:dodgeball)
  )
)
(:scoring
  (+ (count pinkObjectMovedToRoomCenter:beachball) (- (count pinkObjectMovedToRoomCenter:rug) )
  )
)
)



(define (game game-id-1012) (:domain few-objects-room-v1)
(:setup
  (exists (?t1 - dodgeball ?h - wall)
    (or
      (game-conserved
        (agent_holds ?b)
      )
      (exists (?h - doggie_bed ?c - sliding_door)
        (and
          (game-conserved
            (adjacent_side ?w1 left ?h)
          )
          (and
            (exists (?b - desk_shelf)
              (game-conserved
                (on agent ?b)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?s - game_object ?l2 - hexagonal_bin)
      (and
        (preference throwTeddyOntoPillow
          (exists (?d2 - dodgeball ?o5 - shelf ?g - hexagonal_bin ?h - color)
            (at-end
              (not
                (not
                  (in_motion ?g)
                )
              )
            )
          )
        )
      )
    )
    (forall (?d - building)
      (and
        (preference throwBallToBinOffObject
          (exists (?o - dodgeball)
            (then
              (hold (not (forall (?b - hexagonal_bin ?h - curved_wooden_ramp) (on bed ?g) ) ) )
              (once (not (and (in_motion ?d) (agent_holds ?c) ) ) )
              (once (on bed ?b) )
            )
          )
        )
        (preference cubeBlockThrownToTopShelf
          (exists (?d - (either tall_cylindrical_block pencil))
            (at-end
              (game_start )
            )
          )
        )
        (preference throwFromDoorToBin
          (exists (?h - game_object)
            (then
              (hold (on ?h ?h) )
              (hold-while (or (agent_holds ?d) (adjacent ?d ?h) ) (agent_holds floor) )
              (once (agent_holds ?b) )
            )
          )
        )
      )
    )
    (preference laptopAndBookInPlace
      (exists (?b ?t - building ?h - curved_wooden_ramp)
        (then
          (once (not (open ?h) ) )
          (once (agent_holds ?h) )
          (once (agent_holds ?c) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (or
        (and
          (>= 5 (count-once-per-objects throwTeddyOntoPillow:orange:dodgeball) )
        )
        (>= 5 3 )
        (not
          (<= (< (count laptopAndBookInPlace:yellow) (count-once throwBallToBinOffObject:beachball) )
            (count throwFromDoorToBin:golfball:golfball)
          )
        )
      )
      (>= 3 (total-score) )
    )
    (> (count laptopAndBookInPlace:golfball) 5 )
  )
)
(:scoring
  (* (count laptopAndBookInPlace:hexagonal_bin) (count throwTeddyOntoPillow:golfball) )
)
)



(define (game game-id-1013) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (in_motion side_table)
  )
)
(:constraints
  (and
    (forall (?f - cylindrical_block)
      (and
        (preference itemsTurnedOff
          (exists (?o3 - dodgeball ?h - block)
            (then
              (hold (and (< (distance ?d ?f) (distance ?c ?f)) (exists (?s - hexagonal_bin) (agent_holds ?g) ) (< (distance agent ?h) (distance ?f ?h)) (not (not (and (agent_holds ?h) (equal_z_position ?h ?ob) ) ) ) (same_type ?o ?f) (on desk bed) (not (on ?b3 ?d) ) (in_motion ?f) (in ?s ?b) (in ?f ?h) (in_motion ?t) (not (and (and (in_motion ?r) (in ?f ?h) (not (in_motion ?o) ) (on ?f ?d) (and (in_motion ?b) (and (> 1 1) (in ?h ?l) (not (< (distance room_center ?t) (distance ?f ?h)) ) ) ) (not (adjacent_side ?w1 front ?f) ) ) (not (agent_holds rug) ) (on ?b ?f) (in_motion ?g) ) ) ) )
              (once (and (not (in_motion ?h) ) (and (adjacent room_center ?h) (not (not (and (on ?h ?w) (and (toggled_on ?f) (not (not (object_orientation ?f upright) ) ) ) ) ) ) ) (not (not (on ?h ?l) ) ) ) )
              (once (and (in ?o ?h) (and (agent_holds ?c) (agent_holds ?f) ) ) )
            )
          )
        )
        (preference ballThrownToWallToAgent
          (exists (?o1 - (either cellphone lamp))
            (at-end
              (agent_holds ?f)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (* 30 (* (* (* 10 (count-once-per-external-objects ballThrownToWallToAgent:pink) )
            (* 4 0 )
            (count itemsTurnedOff:pyramid_block:golfball)
            (count ballThrownToWallToAgent:blue_pyramid_block:hexagonal_bin)
            (* (+ (* 50 6 3 3 )
                1
                (* 10 1 )
                12
                (* (+ 3 (external-forall-minimize (- 1 (count ballThrownToWallToAgent:dodgeball) ) ) )
                  (count ballThrownToWallToAgent:golfball)
                )
                2
                20
              )
              -10
            )
            (+ (* (count-once-per-objects ballThrownToWallToAgent:red) 3 5 3 )
              6
              3
            )
            (>= (* 3 (count itemsTurnedOff:purple:orange) )
              (count-once-per-objects itemsTurnedOff:yellow)
            )
            (count ballThrownToWallToAgent:dodgeball)
            10
          )
          (count ballThrownToWallToAgent:blue_dodgeball)
        )
      )
      (total-score)
    )
    (>= (* 10 (- 4 )
      )
      (* (* (count ballThrownToWallToAgent:blue_dodgeball) (< 10 (count-once-per-objects itemsTurnedOff:tan) )
        )
        4
      )
    )
  )
)
(:scoring
  (count-once-per-objects itemsTurnedOff:beachball:beachball)
)
)



(define (game game-id-1014) (:domain many-objects-room-v1)
(:setup
  (forall (?b - cube_block)
    (game-optional
      (in_motion ?b)
    )
  )
)
(:constraints
  (and
    (preference throwToBinFromDistance
      (exists (?b - teddy_bear)
        (then
          (once (= 1 (distance side_table ?b4)) )
          (hold-while (faces ?b ?b) (adjacent ?d ?c1) (agent_holds ?d) )
          (once (exists (?b3 - ball) (and (and (and (and (in_motion ?b3) (and (adjacent_side bed front ?b) (agent_holds ?b) ) (and (not (in_motion ?b3) ) (on ?b3 ?h) ) ) (in_motion ?o) ) (game_over ) (in_motion ?b) ) (agent_holds ?b) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ 5 (* (count throwToBinFromDistance:blue_cube_block) 3 )
    )
    (= (count-once throwToBinFromDistance:pink_dodgeball:beachball) 7 )
  )
)
(:scoring
  (-
    (external-forall-maximize
      (* 10 (count-overlapping throwToBinFromDistance:purple) )
    )
    5
  )
)
)



(define (game game-id-1015) (:domain few-objects-room-v1)
(:setup
  (exists (?b - dodgeball ?o - cube_block)
    (game-optional
      (< 0.5 9)
    )
  )
)
(:constraints
  (and
    (forall (?r - game_object)
      (and
        (preference throwInBin
          (exists (?w2 - hexagonal_bin)
            (then
              (once (in_motion ?w2) )
              (hold (in_motion ?f) )
              (once (and (in_motion ?w2) (agent_holds ?d) (agent_holds ?w2) ) )
            )
          )
        )
      )
    )
    (preference cubeThrownToBin
      (exists (?s - hexagonal_bin)
        (then
          (once (and (in_motion ?t) (not (agent_holds ?s) ) ) )
          (once (above ?d ?c) )
          (once (not (in_motion ?s) ) )
        )
      )
    )
  )
)
(:terminal
  (> 10 (count-once-per-external-objects throwInBin:beachball) )
)
(:scoring
  (count throwInBin:beachball)
)
)



(define (game game-id-1016) (:domain medium-objects-room-v1)
(:setup
  (forall (?bl - hexagonal_bin)
    (game-optional
      (in agent pink_dodgeball)
    )
  )
)
(:constraints
  (and
    (forall (?h - doggie_bed ?h - ball)
      (and
        (preference teddyBearLandsInBin
          (exists (?ob - dodgeball ?o - (either dodgeball pyramid_block blue_cube_block) ?o - (either dodgeball laptop))
            (at-end
              (is_setup_object ?d)
            )
          )
        )
        (preference cubeBlockInBuilding
          (exists (?b10 - dodgeball)
            (at-end
              (and
                (in_motion desk)
                (and
                  (and
                    (not
                      (and
                        (not
                          (is_setup_object ?b10)
                        )
                        (in_motion ?h)
                        (in_motion ?b10)
                      )
                    )
                    (not
                      (in_motion ?b10)
                    )
                    (adjacent ?b10 ?d)
                  )
                  (< (distance ?b10 ?b) (distance ?b10 ?b10))
                )
              )
            )
          )
        )
        (preference ballThrowAttempt
          (exists (?p ?g - hexagonal_bin)
            (then
              (hold (not (agent_holds ?l2) ) )
              (once (agent_holds ?g) )
              (once (agent_holds ?b) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 1 3 )
)
(:scoring
  (= (* 10 (+ 3 18 )
    )
  )
)
)



(define (game game-id-1017) (:domain few-objects-room-v1)
(:setup
  (forall (?d - ball ?b - hexagonal_bin ?h - cube_block)
    (and
      (game-optional
        (same_object ?b top_shelf)
      )
      (exists (?d - game_object ?d - (either cellphone game_object))
        (and
          (game-conserved
            (rug_color_under ?d blue)
          )
        )
      )
      (game-optional
        (on ?b ?r)
      )
      (exists (?r - (either cylindrical_block book ball) ?h - building)
        (game-conserved
          (not
            (agent_holds ?h)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference pillowThrownToDoggieBed
      (exists (?h - flat_block ?h - hexagonal_bin)
        (then
          (once (not (agent_holds ?h) ) )
          (once (in_motion ?h) )
          (once (above ?d ?d) )
          (once (same_object ?d ?h) )
        )
      )
    )
    (preference dodgeballThrownToBinFromDesk
      (exists (?b - cube_block ?p - hexagonal_bin)
        (then
          (hold (in_motion ?b) )
          (once (not (on ?d ?p) ) )
          (once-measure (in_motion ?o) (distance ?h ?c) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (total-time) (* (count-once-per-external-objects pillowThrownToDoggieBed:purple) 3 )
    )
  )
)
(:scoring
  (- (- 3 )
  )
)
)



(define (game game-id-1018) (:domain many-objects-room-v1)
(:setup
  (exists (?b - block ?o - hexagonal_bin)
    (and
      (forall (?o3 - hexagonal_bin)
        (exists (?ob - doggie_bed ?c4 - (either hexagonal_bin cylindrical_block))
          (game-optional
            (and
              (agent_holds ?c4)
              (touch ?c4 ?d)
            )
          )
        )
      )
      (exists (?h - doggie_bed)
        (forall (?d2 - block)
          (game-conserved
            (adjacent ?c floor)
          )
        )
      )
      (game-conserved
        (not
          (not
            (or
              (in_motion agent)
              (adjacent agent ?o)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownFromDoor
      (exists (?t2 - game_object ?c - red_dodgeball)
        (at-end
          (not
            (not
              (on ?c ?b)
            )
          )
        )
      )
    )
    (forall (?d - triangular_ramp ?p - game_object)
      (and
        (preference blindsOpened
          (exists (?h - dodgeball)
            (then
              (hold-while (agent_holds ?p) (in ?b ?d) )
              (once (and (on ?o1 ?h) (in_motion rug) ) )
              (once (touch ?b8 agent) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (* (count ballThrownFromDoor:beachball:purple) (count-once-per-objects ballThrownFromDoor:red:dodgeball:dodgeball) (* 20 (external-forall-maximize (< (count ballThrownFromDoor:blue_pyramid_block:bed) (* 3 (count-once ballThrownFromDoor:red) )
            )
          )
        )
      )
      1
    )
  )
)
(:scoring
  (* 4 10 )
)
)



(define (game game-id-1019) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?o1 - dodgeball ?b - building ?h - cube_block)
      (and
        (forall (?h - shelf)
          (game-optional
            (touch ?h ?h)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttemptFromDoor
      (exists (?o4 - triangular_ramp ?b - building)
        (then
          (hold-while (not (not (not (on ?g pink_dodgeball) ) ) ) (not (in_motion ?b) ) )
          (once (and (not (in_motion ?b) ) (equal_z_position ?b ?c) (or (> 6 1) (and (adjacent ?b ?b) (and (and (in_motion ?g) (< 1 1) ) (and (not (in_motion ?b) ) (and (and (not (and (in_motion ?c) (not (not (in_motion ?b1) ) ) ) ) (= (x_position ?b)) ) (agent_holds ?b) ) (not (and (on ?b ?l) (not (adjacent ?b ?o) ) ) ) (agent_holds ?b) (in_motion ?b) (and (not (not (on ?b ?d) ) ) (in_motion ?b) (in_motion ?b) ) ) ) ) (not (and (not (and (and (in_motion agent) (faces desk ?b) ) (agent_holds ?b) ) ) (same_color ?b blue) ) ) ) ) )
          (once (not (in_motion ?l) ) )
        )
      )
    )
    (forall (?c - cube_block ?l1 - game_object ?d - hexagonal_bin)
      (and
        (preference matchingBuildingBuilt
          (exists (?b - hexagonal_bin ?r - wall)
            (then
              (hold (adjacent ?d ?d) )
              (once (not (= 7 6) ) )
              (once (= (distance room_center ?d) (distance ?h ?c)) )
            )
          )
        )
      )
    )
    (preference throwKnocksOverBear
      (exists (?h - color)
        (at-end
          (not
            (agent_holds ?r)
          )
        )
      )
    )
  )
)
(:terminal
  (> 30 (count throwKnocksOverBear:yellow) )
)
(:scoring
  (count matchingBuildingBuilt:tall_cylindrical_block:dodgeball:yellow_cube_block)
)
)



(define (game game-id-1020) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (= 1)
  )
)
(:constraints
  (and
    (preference blockInTowerKnockedByDodgeball
      (exists (?s - (either cylindrical_block floor wall))
        (then
          (once (and (in_motion ?o) (agent_holds ?b) ) )
          (hold-while (on ?b ?s) (and (and (not (in_motion ?s) ) (< 1 (distance ?s ?s)) (equal_z_position room_center ?s) (in_motion ?c) ) (agent_holds ?d) ) (exists (?o ?d - (either pen dodgeball hexagonal_bin)) (= 1 (distance room_center ?s)) ) )
          (hold (in_motion ?d) )
        )
      )
    )
    (preference throwTeddyOntoPillow
      (exists (?g - dodgeball)
        (at-end
          (and
            (above ?g ?g)
            (and
              (in_motion ?g)
              (agent_holds ?g)
            )
          )
        )
      )
    )
    (preference ballThrownOntoTarget
      (exists (?c - ball ?g - drawer ?w1 - hexagonal_bin)
        (then
          (once (agent_holds ?w1) )
          (once (not (agent_holds ?w1) ) )
          (once-measure (not (> 2 0.5) ) (distance ?t1 ?w1) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 5 (count blockInTowerKnockedByDodgeball:golfball) )
    (and
      (and
        (= (count-once throwTeddyOntoPillow:dodgeball) (* (+ (count-once-per-objects ballThrownOntoTarget:dodgeball) 3 )
            1
            6
            (* (external-forall-maximize (count-total ballThrownOntoTarget:beachball) ) (* (count-once ballThrownOntoTarget:red) (* 3 (* (count throwTeddyOntoPillow:beachball) (count throwTeddyOntoPillow:pink) (- (count blockInTowerKnockedByDodgeball:golfball:dodgeball) )
                    (+ 2 (+ 3 (count-once-per-objects ballThrownOntoTarget:pink) )
                    )
                    (* (= (* 0 (count throwTeddyOntoPillow:basketball:hexagonal_bin) )
                        3
                      )
                      5
                    )
                    (count-once-per-external-objects throwTeddyOntoPillow:pink:golfball)
                  )
                  (* (count-once blockInTowerKnockedByDodgeball:pink_dodgeball) (+ 3 (count-once-per-objects blockInTowerKnockedByDodgeball:alarm_clock) )
                  )
                  1
                  (* 8 (count blockInTowerKnockedByDodgeball:top_drawer) )
                  (external-forall-maximize
                    (* 10 (* (- 6 )
                        (* (count blockInTowerKnockedByDodgeball:dodgeball:golfball:pink) 1 (external-forall-maximize (* (count-once-per-objects throwTeddyOntoPillow:yellow) (count blockInTowerKnockedByDodgeball:blue_dodgeball:dodgeball) )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
            3
            (* 10 10 )
          )
        )
        (>= (+ (* 6 4 )
            9
          )
          (count-once-per-external-objects blockInTowerKnockedByDodgeball:blue_dodgeball:book)
        )
      )
      (> (count-measure ballThrownOntoTarget:blue_pyramid_block) (count-once-per-objects ballThrownOntoTarget:hexagonal_bin) )
    )
  )
)
(:scoring
  (+ 6 (count throwTeddyOntoPillow:beachball:yellow) )
)
)



(define (game game-id-1021) (:domain many-objects-room-v1)
(:setup
  (forall (?r - game_object ?d - dodgeball)
    (exists (?l2 - hexagonal_bin ?r - hexagonal_bin)
      (exists (?h ?b3 ?b ?b ?b ?b2 - (either cd cube_block dodgeball dodgeball alarm_clock hexagonal_bin cellphone))
        (game-optional
          (game_over )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?l2 - dodgeball ?d - building)
      (and
        (preference dodgeballBouncesOnceToDoggieBed
          (exists (?ob - ball ?o2 ?b1 ?b2 ?c4 - game_object)
            (then
              (once (not (on ?h ?o2) ) )
              (once (in_motion ?d) )
              (once (between ?d desk ?c4) )
            )
          )
        )
      )
    )
    (forall (?c - hexagonal_bin ?x ?d - hexagonal_bin)
      (and
        (preference throwFromEdgeOfRug
          (exists (?w2 - chair)
            (then
              (hold-while (adjacent agent ?d) (and (on ?w2 ?b) (in_motion ?x) ) )
              (once (and (agent_holds ?x) (and (rug_color_under ?c ?d) (not (not (< (distance_side room_center front ?r) 1) ) ) (forall (?b - cube_block) (agent_holds main_light_switch) ) ) (not (not (is_setup_object ?f) ) ) (agent_holds ?l) (and (not (not (in_motion ?d) ) ) (in_motion ?d) ) ) )
              (once (agent_holds ?w2) )
            )
          )
        )
        (preference towerFallsWhileBuilding
          (exists (?p1 - hexagonal_bin)
            (at-end
              (not
                (in ?x ?p1)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 1 (* (* (* (- (- 1 )
          )
          (count-increasing-measure dodgeballBouncesOnceToDoggieBed:basketball)
          (count towerFallsWhileBuilding:yellow)
          (count-measure dodgeballBouncesOnceToDoggieBed:dodgeball)
          (count dodgeballBouncesOnceToDoggieBed:orange:book)
          (* (count towerFallsWhileBuilding:basketball) (count throwFromEdgeOfRug:beachball) )
        )
        9
      )
      1
    )
  )
)
(:scoring
  (* 2 )
)
)



(define (game game-id-1022) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds ?b)
  )
)
(:constraints
  (and
    (preference throwAttemptFromDoor
      (exists (?b - pyramid_block ?c - (either beachball doggie_bed))
        (at-end
          (not
            (not
              (same_type ?c ?c)
            )
          )
        )
      )
    )
    (forall (?g - hexagonal_bin)
      (and
        (preference throwBallToDoggieBedOffWall
          (exists (?d - dodgeball ?p - hexagonal_bin)
            (then
              (once (is_setup_object rug) )
              (hold (touch ?g ?d) )
              (once (toggled_on ?o) )
            )
          )
        )
      )
    )
    (preference throwOverRamp
      (exists (?d - (either doggie_bed golfball))
        (then
          (once (not (and (agent_holds ?d) (and (and (not (agent_holds ?h) ) (in_motion ?d) (not (and (not (same_type ?d ?d) ) (not (not (in_motion ?d) ) ) ) ) (agent_holds ?d) (and (in_motion ?d) (and (and (not (or (in_motion ?o) (not (and (and (agent_holds ?d) (= 6) ) (and (on ?d ?d) (in_motion ?o) ) ) ) ) ) (< (distance desk ?d) (distance ?h ?h)) ) (and (> (distance ?d ?h) 1) (not (and (and (exists (?b9 - block) (not (and (not (agent_holds ?r) ) (on ?o ?d) ) ) ) (not (not (agent_holds ?d) ) ) ) (in_motion ?d) ) ) (exists (?p ?h ?b ?t ?b ?b - chair) (>= 1 1) ) (and (agent_holds ?d) (< (distance desk ?d) 1) ) ) (agent_holds agent) ) (and (in ?d ?d) (and (agent_holds ?d) (game_over ) ) ) ) (exists (?b - hexagonal_bin) (not (not (in_motion ?b) ) ) ) (in_motion ?l1) ) (agent_holds ?o) ) ) ) )
          (once (agent_holds ?d) )
          (once (and (not (in ?d ?d) ) (and (not (exists (?b2 - ball ?c - hexagonal_bin) (not (in ?c ?h) ) ) ) (and (not (agent_holds ?c) ) ) ) ) )
          (once (and (and (adjacent desk ?d) (broken ?d) ) (not (exists (?db ?l1 - (either mug dodgeball pyramid_block doggie_bed)) (and (agent_holds ?d) (exists (?d2 - hexagonal_bin ?r - chair ?l4 - building ?r1 - cube_block) (in_motion ?d) ) (agent_holds ?h) (faces ?l1 ?db) ) ) ) ) )
          (hold (and (in_motion ?b) (in_motion ?b) ) )
        )
      )
    )
  )
)
(:terminal
  (= (* (* (count-once throwOverRamp:beachball:golfball) (- (count throwAttemptFromDoor:pink:beachball) )
      )
      (count-once-per-objects throwBallToDoggieBedOffWall:dodgeball)
      (* 10 (count-once-per-objects throwAttemptFromDoor:book) )
    )
    (count-once throwBallToDoggieBedOffWall:pink)
  )
)
(:scoring
  (count throwBallToDoggieBedOffWall:yellow:basketball:pink)
)
)



(define (game game-id-1023) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (in_motion ?b)
  )
)
(:constraints
  (and
    (forall (?c6 - hexagonal_bin)
      (and
        (preference cubeBlockFromBedToShelf
          (exists (?c4 - hexagonal_bin ?d ?b3 - hexagonal_bin)
            (then
              (hold-while (in ?b3 door) (adjacent ?w2 rug) (on ?b3 ?b3) )
              (hold (not (and (agent_holds ?c6) (in_motion ?b3) (adjacent ?r ?d) ) ) )
              (once (adjacent ?c6 ?o) )
            )
          )
        )
        (preference dodgeballAndBasketballInBin
          (exists (?l3 - (either doggie_bed pyramid_block cellphone) ?b - game_object ?d1 - game_object)
            (then
              (hold-while (and (and (< (distance ?c6 ?d) 1) (and (in ?d1 ?d) (in ?c6 ?d) ) ) (rug_color_under ?c2 ?d1) ) (in ?c6 ?d1) )
              (once (not (in ?o ?d1) ) )
            )
          )
        )
        (preference golfballUnderBridgeWithoutTouchingBlock
          (then
            (once (or (in ?c6 agent) (adjacent ?h ?o3) ) )
            (hold (adjacent_side bed front ?c6 front) )
          )
        )
      )
    )
    (preference dodgeballThrownToBin
      (exists (?b9 - hexagonal_bin ?r2 - hexagonal_bin)
        (then
          (hold (on ?h ?c) )
          (hold (in_motion ?b) )
          (hold (on ?r2 ?d) )
        )
      )
    )
  )
)
(:terminal
  (> (total-score) 2 )
)
(:scoring
  (* 10 2 )
)
)
