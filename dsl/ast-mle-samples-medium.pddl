(define (game game-id-0) (:domain medium-objects-room-v1)
(:setup
  (forall (?g - game_object ?u - hexagonal_bin)
    (game-conserved
      (exists (?g - block ?r - chair)
        (and
          (game_over )
          (and
            (agent_holds ?u)
            (not
              (not
                (opposite ?r ?r)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?v - pyramid_block)
      (and
        (preference preference1
          (exists (?g - hexagonal_bin)
            (then
              (once (in_motion agent) )
              (hold (in_motion door) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= 0 (* 2 (* (count preference1:book) )
      )
    )
    (or
      (or
        (>= 5 (count-once-per-objects preference1:beachball:cube_block) )
      )
      (or
        (or
          (or
            (<= 3 (* 5 (and (- (+ (* (count preference1:white:red) 10 )
                      (count preference1:wall)
                    )
                  )
                )
              )
            )
            (>= (* (count-same-positions preference1:beachball) (count preference1:hexagonal_bin) )
              (* (- (+ (- 6 )
                    (count preference1:pink:dodgeball)
                  )
                )
                (count preference1:pink_dodgeball:red)
              )
            )
          )
        )
        (> 5 (* 10 (* 3 (count preference1:beachball) )
          )
        )
      )
      (>= (count-once preference1:alarm_clock) (count-once preference1:green:yellow) )
    )
    (>= 3 (* (count preference1:basketball:yellow) 5 )
    )
  )
)
(:scoring
  (count preference1:blue_cube_block)
)
)(define (game game-id-1) (:domain many-objects-room-v1)
(:setup
  (exists (?j - ball ?e ?f - doggie_bed)
    (and
      (game-optional
        (agent_holds rug)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?s - hexagonal_bin)
        (at-end
          (and
            (in_motion ?s)
            (< (distance agent agent) 8)
          )
        )
      )
    )
    (forall (?j - (either golfball mug) ?y - hexagonal_bin ?e - wall ?k - dodgeball)
      (and
        (preference preference2
          (exists (?i - dodgeball)
            (then
              (once (and (in_motion ?k) (and (and (on ?i ?i) (not (forall (?w - dodgeball) (agent_holds ?k) ) ) ) (touch desk ?k) ) (equal_x_position upright ?k) ) )
              (hold (in_motion ?i) )
              (once (agent_holds ?i) )
            )
          )
        )
      )
    )
    (forall (?i ?e - (either cube_block basketball))
      (and
        (preference preference3
          (exists (?z - watch)
            (then
              (once (exists (?f - curved_wooden_ramp) (in_motion ?i) ) )
              (once (in_motion ?z) )
              (hold (agent_holds ?z) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (not (count-overlapping preference1:yellow) ) (count preference3:book) )
  )
)
(:scoring
  5
)
)(define (game game-id-2) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (not
      (< 7 1)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?v - game_object ?z - game_object ?q - shelf)
        (then
          (forall-sequence (?d - curved_wooden_ramp)
            (then
              (hold (in ?q ?q) )
              (hold (agent_holds sideways) )
              (once (agent_holds ?d) )
            )
          )
          (once-measure (in ?q ?q) (distance ?q ?q) )
          (hold-while (and (not (adjacent ?q drawer) ) (and (not (in_motion ?q) ) (agent_holds ?q) ) ) (and (not (agent_holds ?q) ) (on ?q ?q) ) (agent_holds ?q) )
        )
      )
    )
    (forall (?u - game_object ?q - hexagonal_bin)
      (and
        (preference preference2
          (then
            (hold (on ?q ?q) )
            (once (not (on rug ?q) ) )
            (once (agent_holds ?q) )
          )
        )
        (preference preference3
          (exists (?h - (either basketball triangle_block))
            (then
              (once (in blue agent) )
              (once (not (in_motion ?q) ) )
              (hold (and (forall (?o - red_dodgeball) (and (in ?o desk) (not (adjacent_side ?o ?o ?q ?o) ) ) ) (agent_holds back) ) )
            )
          )
        )
        (preference preference4
          (exists (?p - dodgeball ?f - dodgeball)
            (then
              (once (and (rug_color_under ?f ?q) (and (exists (?c - sliding_door ?i - beachball ?m - hexagonal_bin) (agent_holds front) ) (adjacent ?q ?q) ) (and (agent_holds ?f) (and (and (in_motion ?f) ) (in ?f top_drawer) ) ) ) )
              (once (not (and (and (and (exists (?k - doggie_bed ?a - blue_pyramid_block) (in_motion ?f) ) (not (< (distance ?f ?q) (distance_side ?q ?f ?q)) ) ) (and (in ?f ?f) (touch ?f room_center) (on ?f ?f) (object_orientation ?q ?q) (above right ?f) (on agent ?f) (and (adjacent agent ?f) (on pillow ?f) ) ) ) (adjacent_side ?f ?f desk ?q) ) ) )
              (hold (and (exists (?u - cube_block ?o - hexagonal_bin) (not (object_orientation ?q floor) ) ) (in_motion ?q) ) )
            )
          )
        )
      )
    )
    (preference preference5
      (exists (?e - game_object)
        (then
          (once (on ?e ?e) )
          (once (or (and (agent_holds ?e) (in ?e ?e) (same_color agent room_center) ) (and (in ?e green) (touch ?e ?e) (< 1 9) (< 1 0) (agent_holds ?e) (and (and (not (rug_color_under ?e ?e) ) (or (and (in upright ?e) (touch ?e ?e) ) (on ?e floor) ) ) (game_over ) ) ) ) )
          (once (not (on ?e ?e) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* (- 2 )
        (= (count-once preference3:dodgeball) 6 )
      )
      (total-time)
    )
    (>= 5 3 )
  )
)
(:scoring
  (count preference3:dodgeball:green)
)
)(define (game game-id-3) (:domain medium-objects-room-v1)
(:setup
  (forall (?a - hexagonal_bin)
    (or
      (exists (?b - curved_wooden_ramp)
        (game-optional
          (in_motion room_center)
        )
      )
      (game-optional
        (not
          (agent_holds ?a)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c - game_object)
      (and
        (preference preference1
          (exists (?w - ball)
            (then
              (once (agent_holds ?c) )
              (once (exists (?u ?b - ball) (in_motion ?b) ) )
              (once (exists (?i - (either wall cd)) (not (and (in_motion room_center) (< 2 2) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 6 (count preference1:dodgeball:dodgeball) )
)
(:scoring
  (count preference1:dodgeball:beachball)
)
)(define (game game-id-4) (:domain many-objects-room-v1)
(:setup
  (exists (?d - dodgeball ?o - curved_wooden_ramp)
    (game-optional
      (and
        (in_motion ?o)
        (in_motion ?o)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?q - dodgeball ?c ?a ?x ?f ?u ?q - tall_cylindrical_block)
        (then
          (once (and (and (in_motion ?u) (and (and (on desk agent) (not (in_motion ?q) ) ) (adjacent bed ?a) ) ) (in ?q ?x) ) )
          (once (and (in_motion ?x) (agent_holds ?c) ) )
          (once (agent_holds rug) )
        )
      )
    )
    (forall (?p - dodgeball)
      (and
        (preference preference2
          (exists (?b - teddy_bear ?w - ball)
            (then
              (once (agent_holds ?p) )
              (hold (not (and (agent_holds ?w) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* 15 (* (* (count-once-per-objects preference1:dodgeball) (count-once-per-objects preference2:red) )
        (count preference2:blue)
        (total-time)
      )
    )
    5
  )
)
(:scoring
  (count preference1:yellow)
)
)(define (game game-id-5) (:domain medium-objects-room-v1)
(:setup
  (exists (?e - cube_block ?v - game_object)
    (and
      (game-optional
        (agent_holds ?v)
      )
    )
  )
)
(:constraints
  (and
    (forall (?y - hexagonal_bin)
      (and
        (preference preference1
          (exists (?i - dodgeball)
            (then
              (once (touch ?y ?y) )
              (hold (agent_holds ?i) )
              (once (open room_center) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?n - building)
        (then
          (hold (in_motion ?n) )
          (once (agent_holds ?n) )
        )
      )
    )
  )
)
(:terminal
  (< (* (count-once preference1:blue_dodgeball) 4 (count preference2:rug) 3 10 )
    10
  )
)
(:scoring
  15
)
)(define (game game-id-6) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds door)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?n - (either cube_block tall_cylindrical_block golfball) ?g - dodgeball ?m ?w - game_object)
        (at-end
          (and
            (not
              (and
                (on bed ?w)
                (not
                  (and
                    (adjacent ?m ?w)
                    (and
                      (in desk ?m)
                      (and
                        (agent_holds ?w)
                        (>= 1 1)
                      )
                      (not
                        (adjacent ?w ?w)
                      )
                    )
                    (in_motion agent)
                  )
                )
              )
            )
            (on ?w ?w)
          )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (+ (+ (count preference1:brown:beachball) (* (* 3 (not (= (+ (* 6 (= 1 (count preference1:dodgeball) )
                  )
                  (* 5 (count preference1:yellow) (count preference1:blue_dodgeball) )
                )
                (count-total preference1:dodgeball:golfball)
                (count-once-per-external-objects preference1:dodgeball)
              )
            )
          )
          10
        )
      )
      5
      (count-once-per-objects preference1:blue_dodgeball)
    )
  )
)
(:scoring
  5
)
)(define (game game-id-7) (:domain few-objects-room-v1)
(:setup
  (exists (?t - shelf)
    (game-optional
      (same_color ?t ?t)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?u - block)
        (then
          (once (<= (distance agent ?u) 1) )
        )
      )
    )
    (preference preference2
      (exists (?n - book)
        (then
          (hold (agent_holds ?n) )
          (once (in_motion ?n) )
          (once (on bed ?n) )
        )
      )
    )
    (preference preference3
      (exists (?u - wall)
        (then
          (hold (agent_holds ?u) )
          (hold (and (and (and (touch ?u ?u) (and (adjacent_side ?u ?u ?u ?u) (= 1 7) (not (exists (?m - (either cd lamp tall_cylindrical_block dodgeball cellphone yellow_cube_block doggie_bed) ?a - block) (not (and (in_motion ?u) (is_setup_object ?u) ) ) ) ) ) ) (or (and (agent_holds ?u) (and (in_motion ?u) (agent_holds ?u) ) ) (< (distance agent ?u) (distance ?u ?u)) ) ) (< (distance back ?u) (distance_side ?u ?u ?u)) ) )
          (hold (not (rug_color_under ?u ?u) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 8 6 )
  )
)
(:scoring
  (total-score)
)
)(define (game game-id-8) (:domain many-objects-room-v1)
(:setup
  (forall (?y - hexagonal_bin ?u - cube_block ?n - dodgeball)
    (and
      (game-conserved
        (on ?n ?n)
      )
      (game-conserved
        (not
          (in_motion ?n)
        )
      )
      (and
        (forall (?q - (either dodgeball pyramid_block))
          (and
            (game-optional
              (agent_holds ?n)
            )
            (game-optional
              (adjacent ?n ?q)
            )
          )
        )
      )
      (forall (?f - (either desktop blue_cube_block desktop hexagonal_bin) ?h - triangular_ramp)
        (game-optional
          (object_orientation ?n ?h)
        )
      )
      (exists (?w - building)
        (exists (?x - ball ?b - doggie_bed)
          (and
            (forall (?t - (either alarm_clock wall cd yellow))
              (and
                (game-optional
                  (touch ?t ?t)
                )
              )
            )
            (game-optional
              (agent_holds ?b)
            )
            (exists (?p - hexagonal_bin)
              (forall (?t - hexagonal_bin)
                (exists (?a - doggie_bed ?k - hexagonal_bin)
                  (game-optional
                    (not
                      (agent_holds ?n)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?u - block ?o - block)
        (then
          (any)
          (hold (not (not (is_setup_object ?o) ) ) )
          (once (agent_holds ?o) )
        )
      )
    )
    (preference preference2
      (exists (?e ?y ?g - hexagonal_bin)
        (at-end
          (on desk ?g)
        )
      )
    )
  )
)
(:terminal
  (>= 2 (count-once-per-objects preference2:pink_dodgeball:doggie_bed) )
)
(:scoring
  8
)
)(define (game game-id-9) (:domain many-objects-room-v1)
(:setup
  (exists (?f - doggie_bed)
    (game-conserved
      (not
        (adjacent south_wall ?f)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?k - game_object)
        (at-end
          (agent_holds ?k)
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* (+ 8 (count preference1:basketball) )
        5
        (count preference1:red)
        (total-time)
      )
      (+ (total-time) (count-total preference1:pink_dodgeball) )
    )
  )
)
(:scoring
  (- 3 )
)
)(define (game game-id-10) (:domain many-objects-room-v1)
(:setup
  (forall (?q - chair ?v - ball ?m - (either cylindrical_block cellphone))
    (game-conserved
      (adjacent_side desk ?m ?m ?m)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?s - pillow ?v ?z - (either pencil pyramid_block basketball) ?q - (either pillow cellphone chair) ?h - (either blue_cube_block cellphone flat_block))
        (at-end
          (same_color desk ?h)
        )
      )
    )
  )
)
(:terminal
  (> 4 (count preference1:tan) )
)
(:scoring
  (count preference1:beachball:cylindrical_block)
)
)(define (game game-id-11) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?l - ball)
      (forall (?k - teddy_bear ?s - cube_block)
        (exists (?v - teddy_bear)
          (game-optional
            (touch ?s room_center)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?y - building)
      (and
        (preference preference1
          (exists (?x - dodgeball)
            (then
              (hold (and (and (and (and (not (in ?y ?y) ) (exists (?f - teddy_bear ?r - ball) (faces ?y ?x) ) ) (in_motion ?y) ) (in_motion ?y) ) (same_object ?x bed) ) )
              (hold (not (not (agent_holds ?x) ) ) )
              (once (game_start ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (= 4 (+ (count preference1:red) 5 )
    )
    (not
      (>= (count preference1:golfball) 3 )
    )
  )
)
(:scoring
  (+ (count preference1:dodgeball:dodgeball) (count preference1:dodgeball) )
)
)(define (game game-id-12) (:domain medium-objects-room-v1)
(:setup
  (exists (?t - cube_block)
    (exists (?a - dodgeball ?l - bridge_block ?g - dodgeball)
      (exists (?f - ball ?q - hexagonal_bin)
        (game-conserved
          (game_start )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?s - ball)
      (and
        (preference preference1
          (exists (?b - dodgeball)
            (at-end
              (adjacent ?b bed)
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?h - triangular_ramp ?n - wall)
        (at-end
          (in_motion ?n)
        )
      )
    )
  )
)
(:terminal
  (>= (count preference2:red) (* 0 (* (* 5 10 )
        (count preference2:brown)
        15
        (count-same-positions preference1:red)
      )
    )
  )
)
(:scoring
  (count-once-per-objects preference1:book:beachball)
)
)(define (game game-id-13) (:domain few-objects-room-v1)
(:setup
  (exists (?n - dodgeball ?s - triangular_ramp)
    (game-conserved
      (and
        (agent_holds ?s)
        (and
          (agent_holds desk)
          (adjacent ?s ?s)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?x - game_object ?n - dodgeball)
      (and
        (preference preference1
          (exists (?s - ball)
            (then
              (hold-while (or (and (is_setup_object rug) (not (not (agent_holds room_center) ) ) ) (not (not (and (agent_holds ?s) (and (and (not (in_motion pink) ) (agent_holds ?n) ) (forall (?x - hexagonal_bin) (touch ?n ?n) ) ) ) ) ) ) (on ?n ?s) (in_motion ?n) )
              (any)
              (hold (and (touch ?n ?s) (agent_holds ?s) ) )
            )
          )
        )
        (preference preference2
          (exists (?b - curved_wooden_ramp)
            (then
              (once (adjacent_side bed ?n ?n) )
              (once (in ?n ?n) )
              (hold (adjacent ?b ?b) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?p - (either pyramid_block laptop) ?u ?c ?v ?a ?s - tan_cube_block ?j - building)
        (then
          (once (in ?j ?j) )
          (once (in ?j ?j) )
          (hold-while (not (game_start ) ) (and (not (and (and (agent_crouches ) (not (agent_holds ?j) ) ) (not (agent_holds ?j) ) ) ) ) (not (on agent ?j) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference3:dodgeball:pink_dodgeball:basketball) 30 )
)
(:scoring
  (* (+ (count preference3:pink_dodgeball:dodgeball) 0 )
    (* (* (- 6 )
        (count preference2:blue_pyramid_block)
        30
      )
      60
    )
  )
)
)(define (game game-id-14) (:domain few-objects-room-v1)
(:setup
  (exists (?s - (either teddy_bear golfball doggie_bed))
    (exists (?h - hexagonal_bin ?e - hexagonal_bin ?c - beachball)
      (game-optional
        (in_motion ?s)
      )
    )
  )
)
(:constraints
  (and
    (forall (?y - ball)
      (and
        (preference preference1
          (exists (?v - dodgeball ?i - hexagonal_bin ?l - hexagonal_bin)
            (then
              (hold (same_type ?l ?l) )
              (hold (and (agent_holds ?y) (in ?l room_center) ) )
              (hold-while (agent_holds ?y) (agent_holds ?y) )
            )
          )
        )
        (preference preference2
          (exists (?u ?z - dodgeball)
            (at-end
              (in_motion ?u)
            )
          )
        )
        (preference preference3
          (exists (?x - hexagonal_bin)
            (then
              (once (< (distance ?x ?y) 1) )
              (once (in ?x ?y) )
              (hold (in_motion ?x) )
            )
          )
        )
      )
    )
    (preference preference4
      (exists (?r - block)
        (then
          (hold (and (on floor ?r) (same_color ?r ?r) ) )
          (hold (and (in ?r agent) (touch ?r ?r) ) )
          (once (adjacent ?r ?r) )
        )
      )
    )
  )
)
(:terminal
  (> (* (* (count-once preference2:pink_dodgeball) (* 2 (count preference3:dodgeball:golfball) (+ (* 9 (count preference4:basketball:blue_dodgeball:golfball) )
            (+ (count preference4:blue_dodgeball:dodgeball) 4 )
          )
          3
        )
        (/
          (- (+ (count-once-per-objects preference4:hexagonal_bin) (* 2 (count preference2:beachball) )
            )
          )
          (count-increasing-measure preference4:triangle_block)
        )
        (total-time)
        3
        (* (count-once-per-objects preference2:dodgeball) 10 )
      )
      40
    )
    (count-total preference1:dodgeball)
  )
)
(:scoring
  (and
    2
    (* (count preference3:golfball:dodgeball) (count preference1:pink) )
    (-
      2
      60
    )
  )
)
)(define (game game-id-15) (:domain medium-objects-room-v1)
(:setup
  (exists (?m - ball)
    (game-conserved
      (adjacent_side ?m ?m ?m)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?w - game_object)
        (at-end
          (touch front ?w)
        )
      )
    )
  )
)
(:terminal
  (= (count preference1:dodgeball:pink) (+ (* 9 (* 30 (* (* (* (count-once-per-objects preference1:dodgeball) 10 10 (* (* (count-once-per-objects preference1:red_pyramid_block) (count-once preference1:brown) )
                  (- 30 )
                )
                (* (> (* (* (count preference1:doggie_bed:pink) 6 )
                    )
                    3
                  )
                  (and
                    (count preference1:basketball)
                    2
                    (not
                      3
                    )
                  )
                )
                (count-once-per-external-objects preference1:green:basketball)
                (count-once-per-objects preference1:red:basketball)
                (+ (count-once-per-external-objects preference1:tall_cylindrical_block) (count-once-per-objects preference1:golfball) )
                (+ (count preference1:tall_cylindrical_block) (- (* (* (count preference1:pink:book:block) (+ (* 1 (* (count preference1:red:dodgeball) 5 )
                          )
                          1
                        )
                        1
                        (count-once-per-objects preference1:pink_dodgeball)
                        4
                        3
                      )
                      (/
                        (* (= (* (= (count preference1:pink) 5 )
                              (count-once-per-objects preference1:beachball:basketball)
                            )
                            5
                            (count preference1:beachball)
                          )
                          (count-once-per-external-objects preference1:pink_dodgeball)
                          3
                          (external-forall-maximize
                            (count-unique-positions preference1:blue_dodgeball)
                          )
                        )
                        (count-measure preference1:basketball)
                      )
                    )
                  )
                )
              )
              5
              (* (count preference1) (+ (* (count-overlapping preference1:pink) (* (count preference1:dodgeball) (count-once-per-objects preference1:hexagonal_bin:pink_dodgeball) )
                  )
                  (count preference1:dodgeball)
                )
              )
            )
            (* (+ (external-forall-maximize (or 1 ) ) (+ (count-once-per-objects preference1:basketball:alarm_clock) 3 )
              )
              (count preference1:red)
              2
              (external-forall-maximize
                (* (count preference1:blue_pyramid_block) (+ (count preference1:basketball:dodgeball) (external-forall-maximize 5 ) (external-forall-maximize (not (* (count-once-per-objects preference1:alarm_clock:orange:beachball) 3 )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
      (count-once-per-objects preference1:yellow)
    )
  )
)
(:scoring
  (count preference1:red)
)
)(define (game game-id-16) (:domain many-objects-room-v1)
(:setup
  (exists (?z ?b - blinds ?m - dodgeball)
    (exists (?f - (either laptop dodgeball))
      (forall (?a - doggie_bed ?t - (either wall doggie_bed))
        (and
          (game-optional
            (and
              (in_motion agent)
              (in_motion agent)
            )
          )
          (exists (?s - (either cellphone pyramid_block))
            (forall (?q - (either golfball main_light_switch) ?j - beachball)
              (exists (?x - hexagonal_bin)
                (exists (?u - game_object)
                  (game-conserved
                    (in_motion ?f)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?o - teddy_bear)
        (then
          (hold (agent_holds agent) )
          (hold (and (adjacent ?o ?o) (not (in_motion ?o) ) ) )
          (once (broken ?o) )
        )
      )
    )
    (preference preference2
      (exists (?l - cube_block)
        (then
          (once (not (and (agent_holds ?l) (same_object ?l ?l) ) ) )
          (once (touch ?l ?l) )
          (once (agent_holds ?l) )
        )
      )
    )
  )
)
(:terminal
  (or
    (not
      (>= (count preference2:golfball) (+ (count preference1:pink) 20 (* 2 (count preference2:tall_cylindrical_block) )
          (external-forall-maximize
            (count-once-per-objects preference2)
          )
          (external-forall-maximize
            10
          )
          (= (* (* (count-once-per-objects preference2:dodgeball) (count preference2:blue_cube_block) )
              6
            )
            (count preference1:cube_block:book)
          )
          (count-once preference2:blue_dodgeball)
          1
          (-
            (count-total preference1:doggie_bed)
            (* (* (count-same-positions preference2:beachball) 5 (external-forall-maximize 25 ) )
              2
            )
          )
          (count preference2:blue_dodgeball:book)
          0.7
          30
        )
      )
    )
    (not
      (or
        (or
          (>= 100 (count-once-per-objects preference2:purple) )
          (<= (* (count preference1:beachball) (external-forall-maximize (count preference2:beachball) ) )
            5
          )
        )
      )
    )
  )
)
(:scoring
  (count-unique-positions preference2:hexagonal_bin)
)
)(define (game game-id-17) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (not
      (not
        (exists (?z - triangular_ramp)
          (on ?z ?z)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?y - game_object)
      (and
        (preference preference1
          (exists (?j - dodgeball)
            (then
              (once (same_color ?j ?j) )
              (forall-sequence (?p - cube_block)
                (then
                  (once (agent_holds ?j) )
                  (once (and (not (and (and (< 1 (distance ?y ?p)) (< (distance ?y agent) 1) ) (agent_holds ?j) ) ) (and (adjacent ?p ?p) (on ?y ?p) (and (toggled_on ?y) (in ?y ?p) (adjacent ?y ?y) ) ) ) )
                  (hold (exists (?z - hexagonal_bin) (agent_holds ?p) ) )
                )
              )
              (once (and (in_motion ?y) (agent_holds top_drawer) (in ?y ?j) (adjacent ?j ?y) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 50 (count preference1:dodgeball) )
)
(:scoring
  (count-unique-positions preference1:basketball:book:hexagonal_bin)
)
)(define (game game-id-18) (:domain many-objects-room-v1)
(:setup
  (exists (?o - triangular_ramp ?m - (either book flat_block))
    (and
      (forall (?v - wall)
        (game-conserved
          (and
            (in_motion ?m)
            (<= 1 2)
          )
        )
      )
      (game-optional
        (in ?m ?m)
      )
      (and
        (exists (?j - hexagonal_bin)
          (and
            (and
              (and
                (game-conserved
                  (touch ?j ?m)
                )
              )
            )
            (forall (?x - golfball ?e - building)
              (and
                (game-conserved
                  (adjacent ?e ?j)
                )
                (game-conserved
                  (in ?e west_wall)
                )
                (forall (?l - ball)
                  (exists (?t - wall)
                    (exists (?q - game_object)
                      (exists (?b - wall)
                        (and
                          (exists (?f - hexagonal_bin)
                            (and
                              (game-conserved
                                (and
                                  (not
                                    (in_motion ?t)
                                  )
                                  (in_motion rug)
                                  (and
                                    (and
                                      (in ?e ?f)
                                      (between ?l green_golfball floor)
                                    )
                                    (object_orientation ?e ?q)
                                  )
                                )
                              )
                              (game-optional
                                (exists (?h - green_triangular_ramp)
                                  (not
                                    (< 3 (distance ?h front))
                                  )
                                )
                              )
                              (game-optional
                                (and
                                  (in_motion ?j)
                                  (is_setup_object ?t)
                                  (and
                                    (agent_holds ?b)
                                    (not
                                      (not
                                        (in ?j agent)
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
            (and
              (exists (?z - block)
                (forall (?a - game_object)
                  (game-conserved
                    (and
                      (and
                        (in ?j ?a)
                        (on ?a ?m)
                        (and
                          (in_motion ?j)
                          (in_motion pink)
                        )
                      )
                      (agent_holds ?j)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?r - (either book laptop golfball))
      (and
        (preference preference1
          (exists (?g - hexagonal_bin)
            (then
              (once (and (on agent ?g) (same_type agent ?r) ) )
              (once (adjacent ?r ?r) )
              (once (and (not (not (opposite ?r ?r) ) ) (< 3 (distance pink_dodgeball ?g)) (not (not (on ?g ?g) ) ) ) )
            )
          )
        )
        (preference preference2
          (exists (?w - building)
            (then
              (hold (agent_holds ?r) )
              (hold (or (> (distance ?r ?r) 7) (in ?r agent) ) )
              (once (game_start ) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?r - pillow ?d - cylindrical_block)
        (then
          (once (same_type ?d ?d) )
          (once (not (and (in_motion ?d) (not (and (agent_holds ?d) (adjacent_side desk ?d ?d ?d) ) ) ) ) )
          (hold (not (forall (?m - curved_wooden_ramp) (not (in_motion ?d) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (< (count-once preference2:yellow) 5 )
)
(:scoring
  3
)
)(define (game game-id-19) (:domain few-objects-room-v1)
(:setup
  (exists (?t ?m - (either alarm_clock dodgeball))
    (game-conserved
      (on ?m ?m)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?j ?c ?h ?a - color)
        (then
          (once (agent_holds ?h) )
          (once (or (not (and (and (not (and (in_motion ?c) (in_motion agent) ) ) (above ?h agent) ) (or (not (in_motion ?c) ) (faces room_center ?c) (exists (?k - hexagonal_bin) (< (distance ?a ?k) 1) ) ) (on ?h ?c) ) ) (not (agent_holds ?a) ) ) )
          (once (in ?h ?c) )
        )
      )
    )
  )
)
(:terminal
  (> (external-forall-maximize 5 ) 1 )
)
(:scoring
  5
)
)(define (game game-id-20) (:domain many-objects-room-v1)
(:setup
  (exists (?b - block ?a - curved_wooden_ramp)
    (not
      (forall (?i - (either desktop desktop))
        (exists (?m - hexagonal_bin)
          (forall (?v ?h - cube_block)
            (forall (?y ?n - cylindrical_block)
              (and
                (and
                  (exists (?j - cube_block)
                    (exists (?t ?f - game_object ?b - pillow)
                      (and
                        (exists (?d - cube_block)
                          (exists (?c - chair ?x ?k ?w ?f - ball)
                            (game-optional
                              (agent_holds ?j)
                            )
                          )
                        )
                        (and
                          (exists (?w - hexagonal_bin)
                            (not
                              (exists (?l - chair ?d - (either hexagonal_bin game_object pyramid_block dodgeball))
                                (and
                                  (game-optional
                                    (and
                                      (exists (?k - hexagonal_bin ?k - cube_block)
                                        (in_motion agent)
                                      )
                                      (object_orientation ?m ?j)
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                        (exists (?q ?u - tall_cylindrical_block ?p ?x ?o - (either book desktop))
                          (game-conserved
                            (and
                              (and
                                (or
                                  (and
                                    (or
                                      (on ?y ?n)
                                      (and
                                        (in_motion ?n)
                                        (agent_holds ?a)
                                      )
                                    )
                                    (in_motion rug)
                                  )
                                  (in ?i ?y)
                                  (agent_holds ?y)
                                )
                                (and
                                  (not
                                    (and
                                      (is_setup_object ?x)
                                      (and
                                        (not
                                          (and
                                            (on ?b ?y)
                                            (not
                                              (not
                                                (and
                                                  (agent_holds ?a)
                                                  (not
                                                    (not
                                                      (and
                                                        (on agent ?y)
                                                        (agent_holds ?y)
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                            (adjacent ?x ?n)
                                            (on west_wall bed)
                                          )
                                        )
                                        (not
                                          (and
                                            (adjacent ?m ?v)
                                            (agent_holds ?x)
                                          )
                                        )
                                      )
                                    )
                                  )
                                  (not
                                    (agent_holds ?y)
                                  )
                                )
                              )
                              (not
                                (< (distance ?a ?a) (distance agent ?v))
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?x - hexagonal_bin ?c - block ?b - doggie_bed)
        (then
          (hold (in_motion ?b) )
          (hold (in_motion ?b) )
          (once (on ?b ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= 0 (count preference1:golfball:pink_dodgeball) )
)
(:scoring
  (count preference1:golfball:golfball)
)
)(define (game game-id-21) (:domain medium-objects-room-v1)
(:setup
  (forall (?t ?z ?d ?b ?v ?c ?i ?e ?f ?n - (either alarm_clock book))
    (game-conserved
      (not
        (on ?d agent)
      )
    )
  )
)
(:constraints
  (and
    (forall (?v ?f - hexagonal_bin)
      (and
        (preference preference1
          (exists (?z - ball)
            (then
              (hold (adjacent ?v ?f) )
              (once (agent_holds ?f) )
              (hold-while (and (in_motion ?f) (agent_holds ?v) ) (not (agent_holds ?v) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (- (/ 7 (total-score) ) )
    (= 8 (count preference1:purple) )
  )
)
(:scoring
  3
)
)(define (game game-id-22) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (not
      (agent_holds agent)
    )
  )
)
(:constraints
  (and
    (forall (?g - dodgeball ?y - dodgeball)
      (and
        (preference preference1
          (then
            (hold (in ?y ?y) )
            (once (< 0 (distance agent room_center)) )
            (hold (agent_holds ?y) )
          )
        )
      )
    )
    (preference preference2
      (exists (?n - hexagonal_bin)
        (then
          (once (and (not (agent_holds room_center) ) (rug_color_under ?n ?n) (in_motion bed) ) )
          (once (is_setup_object ?n) )
          (once (and (rug_color_under ?n ?n) (object_orientation bed front) ) )
          (once (and (rug_color_under ?n ?n) (and (and (and (faces ?n ?n) (and (toggled_on bed) (exists (?w - curved_wooden_ramp ?e - dodgeball) (not (< (distance ?e ?n) 0.5) ) ) (not (and (not (in_motion ?n) ) (in rug ?n) (not (exists (?p - dodgeball ?b - cube_block ?r - (either yellow_cube_block golfball)) (< 1 1) ) ) ) ) (in ball ?n) ) ) (agent_holds ?n) ) (agent_holds ?n) (not (not (not (in_motion agent) ) ) ) (touch ?n yellow) (agent_holds ?n) (not (and (not (in_motion ?n) ) (in_motion ?n) (and (on bed west_wall) (agent_holds front) ) (on ?n ?n) (adjacent ?n agent) (is_setup_object ?n) (and (not (faces ?n ?n) ) (and (exists (?s - cube_block ?t - (either dodgeball tall_cylindrical_block)) (and (in_motion room_center) (broken ?t) ) ) (not (in_motion ?n) ) (is_setup_object ?n) ) ) (not (agent_holds ?n) ) ) ) ) (agent_holds ?n) (and (and (adjacent ?n ?n) (in_motion ?n) (and (or (not (not (and (same_color ?n ?n) (not (not (in_motion agent) ) ) (on front ?n) (< (x_position ?n) (distance ?n ?n)) (< 1 (distance ?n ?n)) (same_type ?n ?n) (in_motion ?n) ) ) ) (on ?n ?n) ) (on ?n ?n) (and (not (and (on room_center south_west_corner) (on ?n ?n) ) ) (agent_holds ?n) ) (in ?n bed) (agent_holds ?n) (agent_holds desk) (agent_holds ?n) (exists (?v - ball) (adjacent_side ?n ?v ?n ?v) ) ) ) (in_motion ?n) (touch ?n desk) ) (equal_x_position bed ?n) (agent_holds ?n) (and (and (in ?n ?n) (on ?n ?n) ) ) (in_motion ?n) (agent_holds ?n) (and (in_motion ?n) (and (and (not (in_motion ?n) ) (equal_x_position ?n floor) (and (agent_holds ?n) (agent_holds ?n) ) (in_motion ?n) (not (in_motion ?n) ) (on ?n ?n) (on ?n ?n) ) (exists (?c - hexagonal_bin) (adjacent ?c rug) ) ) ) (in ?n front) (not (in ?n ?n) ) ) )
        )
      )
    )
    (preference preference3
      (exists (?z - doggie_bed)
        (then
          (hold (between ?z ?z ?z) )
          (once (agent_holds ?z) )
          (hold (and (agent_holds ?z) (not (in_motion ?z) ) ) )
          (once (= 1 (distance agent ?z)) )
          (once (adjacent desk ?z) )
        )
      )
    )
    (forall (?o - hexagonal_bin)
      (and
        (preference preference4
          (exists (?t - (either desktop cube_block) ?j - hexagonal_bin ?i - hexagonal_bin ?c - chair)
            (then
              (hold-while (and (or (not (faces ?c ?o) ) ) (and (and (> (distance upright ?o) (distance_side ?c tan ?c ?o)) (not (agent_holds bed) ) ) (in ?o ?c) ) ) (not (agent_holds ?c) ) )
              (hold (agent_holds rug) )
              (once (adjacent ?o ?c) )
            )
          )
        )
        (preference preference5
          (exists (?u ?z ?c ?e - block)
            (then
              (once (and (not (in_motion ?e) ) (in_motion bed) ) )
              (once (and (not (faces ?e ?o) ) (not (not (forall (?f - (either alarm_clock flat_block cellphone)) (not (agent_holds ?f) ) ) ) ) ) )
              (once (on ?e ?c) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> 20 (* (* (* (count-once-per-objects preference1:golfball:book) (count preference2:orange) (count-once-per-objects preference4:dodgeball) 4 (count preference2) 3 )
        (count-once-per-objects preference1:golfball)
      )
    )
  )
)
(:scoring
  (count preference2:yellow_cube_block:hexagonal_bin)
)
)(define (game game-id-23) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds agent)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?s - dodgeball ?h - game_object)
        (then
          (hold (same_color bed ?h) )
          (once (and (on ?h ?h) (in_motion agent) ) )
          (once (in_motion ?h) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count preference1:purple:dodgeball) (count preference1:purple:beachball) (* (* (count-once-per-objects preference1:golfball:purple) (- (* 5 (count preference1:basketball) )
          )
        )
        (* 4 15 (count preference1:blue_pyramid_block) )
      )
    )
    9
  )
)
(:scoring
  (count-once preference1:purple)
)
)(define (game game-id-24) (:domain many-objects-room-v1)
(:setup
  (forall (?z - chair)
    (forall (?m - dodgeball)
      (and
        (and
          (game-optional
            (in_motion agent)
          )
          (not
            (forall (?r - hexagonal_bin)
              (game-conserved
                (in ?z ?z)
              )
            )
          )
          (forall (?h - hexagonal_bin ?p - ball)
            (game-optional
              (agent_holds ?z)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?u ?w - doggie_bed)
      (and
        (preference preference1
          (exists (?z - (either golfball cube_block))
            (at-end
              (in_motion ?u)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count preference1:basketball) (count preference1:doggie_bed) )
    (* (+ (count-once-per-objects preference1:red) (count preference1:yellow_cube_block) )
      (+ 3 (count-once-per-external-objects preference1:dodgeball) )
    )
  )
)
(:scoring
  2
)
)(define (game game-id-25) (:domain medium-objects-room-v1)
(:setup
  (exists (?k - hexagonal_bin ?z - shelf)
    (or
      (game-optional
        (agent_holds ?z)
      )
      (exists (?w - dodgeball)
        (forall (?m - blue_cube_block ?t - ball ?e - ball)
          (game-conserved
            (agent_holds ?z)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?r - curved_wooden_ramp)
        (then
          (once (> (building_size desk) 1) )
          (hold (not (same_type desk ?r) ) )
          (once (adjacent ?r ?r) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count preference1:dodgeball) 3 )
    (= (count preference1:red) (count-same-positions preference1:hexagonal_bin) )
  )
)
(:scoring
  (* (external-forall-maximize (and (count preference1) (count-once-per-objects preference1:pink) (external-forall-maximize (count preference1:dodgeball:dodgeball) ) ) ) 5 )
)
)(define (game game-id-26) (:domain many-objects-room-v1)
(:setup
  (exists (?g - hexagonal_bin)
    (game-conserved
      (in_motion ?g)
    )
  )
)
(:constraints
  (and
    (forall (?a ?m ?y ?j ?o ?k - wall)
      (and
        (preference preference1
          (exists (?t ?f ?z - hexagonal_bin)
            (then
              (once (agent_holds rug) )
              (hold (agent_holds ?f) )
              (once (same_color ?o ?j) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (and
      (> 60 (+ (total-time) (* 6 6 )
        )
      )
    )
  )
)
(:scoring
  (count preference1:blue_pyramid_block)
)
)(define (game game-id-27) (:domain medium-objects-room-v1)
(:setup
  (exists (?x - ball)
    (game-optional
      (not
        (not
          (on ?x ?x)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?v - hexagonal_bin ?m - hexagonal_bin)
      (and
        (preference preference1
          (exists (?y - (either teddy_bear laptop cd yellow basketball basketball wall) ?c - game_object ?r ?j - hexagonal_bin ?z - teddy_bear)
            (at-end
              (or
                (not
                  (not
                    (and
                      (in_motion ?z)
                      (agent_holds bed)
                    )
                  )
                )
                (on ?m agent)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= 2 (count-unique-positions preference1:pink) )
    (or
      (and
        (<= 10 (count preference1:doggie_bed:beachball) )
        (>= (total-time) (count-same-positions preference1) )
      )
      (>= (* 2 (+ 10 (* 3 (count preference1:orange) )
          )
        )
        (<= 2 (/ (* (count preference1:dodgeball) (count-shortest preference1:rug) )
            (external-forall-maximize
              (count-once preference1:beachball)
            )
          )
        )
      )
      (or
        (and
          (> (count-measure preference1:triangle_block:basketball) (count-once-per-objects preference1:basketball:alarm_clock:beachball) )
        )
      )
    )
  )
)
(:scoring
  (count-once preference1:pink_dodgeball)
)
)(define (game game-id-28) (:domain many-objects-room-v1)
(:setup
  (forall (?u - cube_block)
    (game-conserved
      (in_motion ?u)
    )
  )
)
(:constraints
  (and
    (forall (?o - game_object)
      (and
        (preference preference1
          (exists (?i - hexagonal_bin)
            (then
              (hold (agent_holds ?o) )
              (hold (in_motion ?i) )
              (hold-while (and (not (< 3 4) ) (> 10 (distance ?i ?o)) (not (and (in ?i ?o) (same_object ?o ?o) ) ) ) (in_motion rug) (not (is_setup_object ?i) ) )
            )
          )
        )
        (preference preference2
          (exists (?e - hexagonal_bin)
            (at-end
              (and
                (in_motion ?o)
                (same_object ?e agent)
              )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?w ?p ?f ?z ?o ?c - game_object ?w - doggie_bed)
        (then
          (once (and (and (agent_holds ?w) (or (agent_holds ?w) (agent_holds ?w) ) ) (not (and (agent_holds ?w) (on ?w ?w) ) ) ) )
          (hold (agent_holds ?w) )
          (once (in_motion ?w) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:yellow:golfball:basketball) (count preference2:basketball) )
)
(:scoring
  (< 2 (count preference1:pink_dodgeball) )
)
)(define (game game-id-29) (:domain medium-objects-room-v1)
(:setup
  (forall (?l - building)
    (game-conserved
      (on ?l ?l)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?f - hexagonal_bin ?d - dodgeball ?v - dodgeball ?r - shelf)
        (then
          (hold (not (on ?r ?r) ) )
          (once (not (< 5 1) ) )
          (once (and (in_motion door) (in_motion ?r) ) )
        )
      )
    )
    (forall (?q - hexagonal_bin ?w - curved_wooden_ramp)
      (and
        (preference preference2
          (exists (?l - cube_block)
            (then
              (once (exists (?h - hexagonal_bin ?c ?d - hexagonal_bin) (and (in_motion desk) (in_motion agent) ) ) )
              (hold (in rug floor) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 0 (* (+ (+ 10 (count-once preference2) (count-unique-positions preference1:basketball:beachball:dodgeball) )
        (total-time)
      )
      (count-once-per-external-objects preference1:beachball)
    )
  )
)
(:scoring
  5
)
)(define (game game-id-30) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?t - block)
      (game-optional
        (and
          (and
            (same_type ?t ?t)
            (agent_holds ?t)
          )
          (same_color ?t ?t)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?i - game_object ?n - (either pyramid_block))
      (and
        (preference preference1
          (exists (?b - ball)
            (then
              (once (in ?n ?n) )
              (hold (and (and (<= (distance_side rug ?b ?b) (distance agent ?n)) (open front) ) (or (agent_holds ?b) (agent_holds bed) ) ) )
              (once (not (in ?n ?n) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count-measure preference1:green) 20 )
    1
  )
)
(:scoring
  3
)
)(define (game game-id-31) (:domain few-objects-room-v1)
(:setup
  (forall (?u - building)
    (game-optional
      (adjacent_side ?u ?u ?u ?u)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?c - hexagonal_bin)
        (then
          (once (touch ?c side_table) )
          (once (agent_holds ?c) )
          (once (agent_holds ?c) )
        )
      )
    )
    (forall (?j - hexagonal_bin ?v - teddy_bear)
      (and
        (preference preference2
          (exists (?l - ball ?b - dodgeball ?l - game_object)
            (at-end
              (not
                (in_motion ?l)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference2) (count preference1:basketball) )
)
(:scoring
  (count preference2:golfball)
)
)(define (game game-id-32) (:domain many-objects-room-v1)
(:setup
  (and
    (game-optional
      (touch agent back)
    )
  )
)
(:constraints
  (and
    (forall (?d - (either watch book red) ?f - golfball)
      (and
        (preference preference1
          (exists (?z - chair ?v - (either desktop dodgeball))
            (then
              (any)
              (once (>= 0.5 (distance ?f ?f)) )
              (hold (and (= (distance ?f ?f) (distance ?v ?f)) (not (on front_left_corner ?f) ) (not (agent_holds ?v) ) ) )
              (once (not (not (in_motion floor) ) ) )
              (once (on room_center ?v) )
            )
          )
        )
        (preference preference2
          (exists (?i - hexagonal_bin ?g - dodgeball ?s - hexagonal_bin)
            (then
              (hold (agent_holds ?f) )
              (once (on ?s ?s) )
              (hold (and (on ?f ?f) (and (same_color ?f door) (in_motion ?s) (exists (?k ?i ?c ?h ?j ?x - (either pencil cd laptop ball dodgeball)) (not (object_orientation ?c ?j) ) ) (agent_holds desk) (agent_holds ?s) (on ?s ?s) ) (= 1) ) )
              (once (and (not (not (in_motion west_wall) ) ) (in_motion agent) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:yellow) (count preference1:brown) )
)
(:scoring
  4
)
)(define (game game-id-33) (:domain medium-objects-room-v1)
(:setup
  (forall (?n - game_object)
    (game-conserved
      (not
        (in_motion ?n)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?s - ball)
        (then
          (once (not (< (distance ?s ?s) (distance floor ?s)) ) )
          (hold (not (equal_x_position front agent) ) )
          (once (< 3 1) )
        )
      )
    )
  )
)
(:terminal
  (>= (- (count preference1:basketball:orange) )
    (count preference1:yellow)
  )
)
(:scoring
  (>= (* (count-once-per-objects preference1:pink:blue_dodgeball) (+ 5 (* (* (* (count-total preference1:golfball:beachball:purple) 3 )
            10
          )
          (+ 4 (* 3 (count preference1:basketball) )
          )
        )
      )
      2
    )
    (count-once-per-objects preference1:dodgeball:doggie_bed)
  )
)
)(define (game game-id-34) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?t - ball)
      (exists (?z - chair ?r - hexagonal_bin)
        (forall (?p - hexagonal_bin ?o - building ?q - golfball)
          (forall (?n - hexagonal_bin ?s - game_object)
            (game-conserved
              (in_motion ?r)
            )
          )
        )
      )
    )
    (forall (?u - (either cellphone beachball dodgeball pyramid_block) ?h - dodgeball)
      (and
        (and
          (and
            (exists (?x - (either chair) ?i - book ?n - hexagonal_bin)
              (exists (?j - pillow)
                (exists (?k - (either cd pyramid_block side_table game_object))
                  (and
                    (and
                      (forall (?b - teddy_bear)
                        (exists (?c - hexagonal_bin)
                          (and
                            (forall (?s - ball)
                              (and
                                (game-conserved
                                  (object_orientation ?k ?j)
                                )
                                (game-conserved
                                  (adjacent ?c pink_dodgeball)
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
            (and
              (and
                (and
                  (or
                    (forall (?p - cube_block ?k - game_object)
                      (exists (?q - dodgeball ?c - block)
                        (and
                          (game-optional
                            (agent_holds rug)
                          )
                          (and
                            (exists (?n ?x - game_object)
                              (game-conserved
                                (not
                                  (not
                                    (exists (?z - ball)
                                      (adjacent upright ?c)
                                    )
                                  )
                                )
                              )
                            )
                          )
                          (game-conserved
                            (in_motion ?c)
                          )
                        )
                      )
                    )
                    (or
                      (and
                        (exists (?p - sliding_door ?q - hexagonal_bin ?u - (either dodgeball pen basketball))
                          (exists (?c - dodgeball)
                            (exists (?b - (either pyramid_block hexagonal_bin laptop))
                              (exists (?e - (either dodgeball pyramid_block))
                                (and
                                  (game-optional
                                    (and
                                      (and
                                        (above agent ?h)
                                        (agent_holds floor)
                                      )
                                      (or
                                        (agent_holds ?u)
                                        (and
                                          (not
                                            (in_motion ?e)
                                          )
                                          (in bed ?b)
                                        )
                                      )
                                      (adjacent ?c ?h)
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                        (game-optional
                          (and
                            (or
                              (in ?h ?h)
                              (agent_holds ?h)
                              (agent_holds ?h)
                            )
                            (in_motion rug)
                            (agent_holds ?h)
                          )
                        )
                      )
                      (forall (?m - hexagonal_bin)
                        (game-optional
                          (on ?h desk)
                        )
                      )
                    )
                    (exists (?z - ball)
                      (game-conserved
                        (on ?z ?h)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?w - hexagonal_bin)
        (then
          (hold (and (on ?w ?w) (in ?w desk) ) )
          (hold-for 0 (in ?w blue) )
          (once (and (and (object_orientation ?w ?w) (touch bed ?w) (agent_holds ?w) (not (and (agent_holds ?w) (and (in_motion ?w) (in ?w desk) (or (and (agent_holds ?w) (not (in_motion floor) ) ) (and (in_motion ?w) (and (in_motion ?w) (and (agent_holds ?w) (agent_holds ?w) (not (touch ?w ?w) ) ) (exists (?m - pyramid_block ?y - red_pyramid_block) (not (adjacent ?y ?w) ) ) (not (touch ?w ?w) ) ) ) ) (agent_holds ?w) ) ) ) (on ?w ?w) (between bed ?w desk) ) (on ?w ?w) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (external-forall-maximize (count-once-per-objects preference1:dodgeball) ) 7 )
  )
)
(:scoring
  3
)
)(define (game game-id-35) (:domain medium-objects-room-v1)
(:setup
  (forall (?b - wall ?j - curved_wooden_ramp)
    (game-conserved
      (in_motion ?j)
    )
  )
)
(:constraints
  (and
    (forall (?p - building)
      (and
        (preference preference1
          (at-end
            (= (x_position ?p) (building_size ?p))
          )
        )
        (preference preference2
          (then
            (once (and (agent_holds ?p) (not (and (in_motion ?p) (game_over ) ) ) (exists (?u - dodgeball) (in desk pink_dodgeball) ) ) )
            (once (on ?p ?p) )
            (once (in ?p ?p) )
          )
        )
        (preference preference3
          (exists (?s - hexagonal_bin ?s - curved_wooden_ramp ?q - hexagonal_bin ?o - dodgeball)
            (then
              (forall-sequence (?a - (either dodgeball pink))
                (then
                  (any)
                  (once (and (in_motion ?o) (not (not (and (exists (?c - cube_block ?k - hexagonal_bin ?b - wall ?j - cube_block) (in ?j agent) ) (and (on ?p ?p) (not (in_motion ?a) ) ) ) ) ) ) )
                  (once (object_orientation desk door) )
                )
              )
              (once (adjacent ?o ?p) )
              (once (not (agent_holds ?p) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< 50 (count preference1:purple) )
)
(:scoring
  (count preference3:tan)
)
)(define (game game-id-36) (:domain few-objects-room-v1)
(:setup
  (exists (?l - pillow ?c - dodgeball)
    (exists (?t - curved_wooden_ramp)
      (and
        (game-conserved
          (agent_holds bridge_block)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?n - doggie_bed)
      (and
        (preference preference1
          (exists (?c - hexagonal_bin ?k ?y ?a ?w ?j ?u - hexagonal_bin ?a - (either golfball bridge_block))
            (at-end
              (on desk ?a)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (count preference1:dodgeball) (+ (count preference1:dodgeball:beachball:orange) (external-forall-maximize (* 40 15 (external-forall-maximize (not (count preference1:yellow) ) ) (<= 10 (count-total preference1:blue) )
          (* 9 (+ 10 2 )
          )
          (count-once-per-objects preference1:red_pyramid_block)
        )
      )
    )
  )
)
(:scoring
  2
)
)(define (game game-id-37) (:domain medium-objects-room-v1)
(:setup
  (forall (?r - dodgeball)
    (forall (?p - building)
      (and
        (game-conserved
          (game_over )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o - sliding_door)
      (and
        (preference preference1
          (exists (?c - game_object ?e - hexagonal_bin)
            (then
              (hold-while (< 1 (distance ?o ?e)) (not (on ?e ?e) ) (in_motion ?e) )
              (once (and (in ?e ?o) (and (touch ?o agent) (in_motion ?o) (in_motion pink) ) (and (not (< 8 2) ) (< 1 9) ) ) )
              (once (on door agent) )
            )
          )
        )
        (preference preference2
          (exists (?e - (either golfball yellow hexagonal_bin))
            (then
              (hold (adjacent ?e ?e) )
              (once (not (adjacent pink ?e) ) )
              (once (= 0.5 2) )
            )
          )
        )
      )
    )
    (forall (?c ?b ?k ?h ?s - doggie_bed)
      (and
        (preference preference3
          (then
            (once (exists (?o - chair) (in ?h back) ) )
            (hold (in_motion ?s) )
            (once (exists (?t - (either pencil basketball credit_card) ?r - (either key_chain game_object)) (not (above ?s ?s) ) ) )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 6 6 )
)
(:scoring
  (count-same-positions preference1:pink_dodgeball)
)
)(define (game game-id-38) (:domain medium-objects-room-v1)
(:setup
  (forall (?c - hexagonal_bin)
    (and
      (game-optional
        (in_motion ?c)
      )
      (and
        (exists (?t - dodgeball)
          (game-optional
            (agent_holds ?c)
          )
        )
        (or
          (exists (?j - (either dodgeball wall))
            (game-optional
              (and
                (toggled_on ?j)
                (in ?c ?c)
              )
            )
          )
          (game-optional
            (and
              (and
                (game_over )
                (not
                  (not
                    (and
                      (not
                        (and
                          (forall (?q - ball)
                            (on ?q ?c)
                          )
                          (is_setup_object ?c)
                        )
                      )
                      (agent_holds ?c)
                      (not
                        (agent_crouches )
                      )
                    )
                  )
                )
                (in bridge_block ?c)
              )
              (agent_holds ?c)
            )
          )
          (exists (?d - beachball)
            (game-conserved
              (on rug ?d)
            )
          )
        )
      )
      (forall (?y - curved_wooden_ramp ?o - cube_block ?v - (either golfball dodgeball cube_block) ?k - (either cube_block book))
        (game-conserved
          (> (distance ?k pink_dodgeball) (distance ?c ?k))
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?g - building ?k - (either blue_cube_block chair))
        (then
          (once (and (not (not (and (on ?k ?k) (in ?k pink_dodgeball) (and (not (not (in_motion ?k) ) ) (not (and (= (building_size ?k)) (agent_holds bed) ) ) ) ) ) ) (exists (?j - (either bridge_block beachball)) (agent_holds ?k) ) ) )
          (once (< 1 (distance_side ?k ?k floor)) )
          (once (in_motion ?k) )
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (>= 3 (count preference1:blue_pyramid_block:yellow:dodgeball) )
      (>= (count-once preference1:blue_dodgeball) (- 10 )
      )
      (>= (count preference1:red_pyramid_block) (- (count-once-per-external-objects preference1:cube_block:green) )
      )
    )
    (or
      (or
        (>= (count preference1:doggie_bed) (count-once preference1:red) )
        (or
          (or
            (and
              (or
                (>= (* 7 (* 3 (* 3 (count preference1:basketball) )
                    )
                  )
                  (count preference1:beachball:golfball:purple)
                )
                (>= (count-once-per-objects preference1:hexagonal_bin) (count preference1:golfball) )
              )
            )
            (or
              (>= 2 (* (= (* 5 (count-overlapping preference1:dodgeball) )
                    4
                  )
                  10
                )
              )
            )
            (>= (count-once-per-external-objects preference1:red) (<= 5 (* (count preference1:dodgeball) (total-score) )
              )
            )
            (and
              (>= (count-once-per-objects preference1:pyramid_block) (external-forall-maximize (count preference1:golfball) ) )
              (>= 3 2 )
            )
          )
        )
      )
      (>= 2 (count-once-per-objects preference1:tall_cylindrical_block) )
    )
  )
)
(:scoring
  (* 3 (count preference1:basketball:cube_block) )
)
)(define (game game-id-39) (:domain few-objects-room-v1)
(:setup
  (exists (?b - pillow)
    (and
      (and
        (and
          (exists (?p - teddy_bear ?y - sliding_door)
            (exists (?q - doggie_bed)
              (exists (?t - color ?i ?t - building)
                (game-optional
                  (and
                    (not
                      (not
                        (agent_holds ?i)
                      )
                    )
                    (not
                      (not
                        (and
                          (adjacent ?y ?q)
                          (not
                            (same_color ?y ?q)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
          (exists (?h - (either golfball cube_block cube_block))
            (forall (?z - (either dodgeball chair yellow_cube_block))
              (game-conserved
                (not
                  (and
                    (not
                      (not
                        (in ?b ?b)
                      )
                    )
                    (and
                      (agent_holds ?h)
                    )
                    (on ?z ?h)
                  )
                )
              )
            )
          )
          (exists (?c - (either rug pencil watch) ?m - dodgeball)
            (exists (?n - chair)
              (game-conserved
                (agent_holds ?n)
              )
            )
          )
        )
      )
      (forall (?c - hexagonal_bin ?k - game_object)
        (exists (?h - chair)
          (exists (?v - curved_wooden_ramp)
            (game-optional
              (in ?b ?h)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?b - hexagonal_bin ?p - game_object)
        (then
          (hold (not (agent_holds ?p) ) )
          (hold-while (not (agent_holds ?p) ) (in_motion ?p) (not (in ?p ?p) ) )
          (once (in_motion ?p) )
        )
      )
    )
    (preference preference2
      (exists (?t - dodgeball)
        (then
          (once (not (in_motion ?t) ) )
          (hold (in bed ?t) )
          (once (not (and (adjacent ?t ?t) (exists (?k - chair) (agent_holds ?t) ) ) ) )
          (once (agent_crouches ) )
        )
      )
    )
    (preference preference3
      (exists (?f - (either dodgeball desktop) ?i - hexagonal_bin)
        (then
          (hold (in_motion ?i) )
          (once (not (agent_holds top_drawer) ) )
          (once (in_motion agent) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 2 (+ (count preference1:basketball:beachball) (+ (* (* (external-forall-maximize (count-overlapping preference2:yellow) ) (count preference3:green) )
            (total-time)
          )
          (total-time)
        )
      )
    )
    4
  )
)
(:scoring
  (* (count-shortest preference3:blue_dodgeball) (* (count preference2:blue_dodgeball) (external-forall-maximize (external-forall-maximize 8 ) ) (count-once-per-objects preference2:blue_dodgeball) )
    10
    (+ (count-overlapping preference3:book) 8 )
  )
)
)(define (game game-id-40) (:domain few-objects-room-v1)
(:setup
  (exists (?l - game_object)
    (game-conserved
      (in_motion ?l)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?u - hexagonal_bin)
        (at-end
          (in ?u ?u)
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:dodgeball) (* 2 30 )
  )
)
(:scoring
  (count-once-per-objects preference1:dodgeball:basketball)
)
)(define (game game-id-41) (:domain medium-objects-room-v1)
(:setup
  (exists (?z - building ?y - ball)
    (and
      (game-conserved
        (in ?y ?y)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?t - (either desktop cube_block yellow_cube_block))
        (then
          (once (on ?t ?t) )
          (hold (on ?t ?t) )
        )
      )
    )
    (forall (?x - hexagonal_bin)
      (and
        (preference preference2
          (exists (?y - (either beachball doggie_bed))
            (then
              (once (on ?x ?y) )
              (hold (exists (?r - ball) (is_setup_object ?y) ) )
              (once (on ?y ?y) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (* (count-once-per-objects preference2:purple) )
      (* (* (count-once-per-objects preference1:pyramid_block) )
        16
      )
    )
    (count-once-per-objects preference2:dodgeball)
  )
)
(:scoring
  (count preference1:beachball)
)
)(define (game game-id-42) (:domain medium-objects-room-v1)
(:setup
  (exists (?w - ball ?b - curved_wooden_ramp)
    (and
      (forall (?z - tan_cube_block)
        (game-optional
          (adjacent ?b ?b)
        )
      )
      (game-optional
        (in_motion ?b)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?p - block)
        (then
          (once-measure (in_motion ?p) (distance front room_center) )
          (hold (exists (?j ?w ?v - red_dodgeball) (and (open pink) (in_motion yellow) ) ) )
          (hold (in east_sliding_door ?p) )
        )
      )
    )
    (preference preference2
      (exists (?u ?e - bridge_block)
        (then
          (hold (in_motion ?e) )
          (once (same_color pink_dodgeball desk) )
          (once (and (not (in_motion ?e) ) (in_motion ?e) ) )
          (once (is_setup_object ?u) )
        )
      )
    )
  )
)
(:terminal
  (> (count-once-per-external-objects preference1:pink) (count preference1:purple:purple) )
)
(:scoring
  3
)
)(define (game game-id-43) (:domain few-objects-room-v1)
(:setup
  (or
    (exists (?l - cube_block)
      (and
        (game-conserved
          (and
            (equal_z_position ?l ?l)
            (not
              (agent_holds ?l)
            )
            (and
              (agent_holds ?l)
              (not
                (not
                  (agent_holds ?l)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?y - chair)
        (then
          (once (and (not (not (< (distance_side ?y ?y ?y front) 1) ) ) (or (and (in_motion ?y) (< 2 1) ) (agent_holds agent) ) (agent_holds ?y) ) )
          (hold (and (agent_holds ?y) (in ?y ?y) (agent_holds desk) ) )
          (once (agent_holds front) )
        )
      )
    )
    (forall (?n - flat_block ?p ?b - ball)
      (and
        (preference preference2
          (exists (?r - cube_block)
            (then
              (hold (is_setup_object ?b) )
              (once (in ?b ?p) )
              (hold-while (on ?b agent) (agent_holds ?p) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* 2 3 )
      (or
        (+ (+ 2 (count-once preference1:beachball:dodgeball:pink_dodgeball) (and 15 ) (* (count preference2:basketball) (* (+ (count preference1:golfball) (count-once-per-objects preference1) )
                (* 20 2 )
              )
              10
              (count-once-per-objects preference1:hexagonal_bin)
              3
            )
            5
            5
          )
          30
        )
      )
    )
    (or
      (or
        (> (count-increasing-measure preference1:yellow:yellow) (* (count preference2:pink_dodgeball) )
        )
        (>= (* (- 3 )
            (total-score)
            5
            (count-once-per-objects preference1:yellow:basketball)
            2
          )
          (count preference1:dodgeball:yellow)
        )
      )
    )
  )
)
(:scoring
  2
)
)(define (game game-id-44) (:domain medium-objects-room-v1)
(:setup
  (exists (?h - ball)
    (game-conserved
      (>= (distance bed ?h) (distance ?h ?h))
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?e - game_object)
        (then
          (once (in_motion ?e) )
          (hold (and (agent_holds rug) (and (rug_color_under ?e ?e) (on ?e desk) ) ) )
          (hold-for 10 (same_object ?e ?e) )
        )
      )
    )
    (preference preference2
      (exists (?i - hexagonal_bin)
        (then
          (once (forall (?s - game_object ?b - dodgeball) (in_motion ?i) ) )
          (once (agent_holds ?i) )
          (once (agent_holds ?i) )
        )
      )
    )
  )
)
(:terminal
  (or
    (and
      (or
        (>= (count-once-per-external-objects preference1:tan) 7 )
      )
      (not
        (and
          (> (external-forall-maximize (count-once-per-objects preference1:dodgeball) ) (count preference2:dodgeball) )
        )
      )
    )
    (>= (* 4 (+ 5 (external-forall-maximize 1 ) )
        3
        2
        1
        (count-once-per-objects preference1:pyramid_block)
        (+ (+ (count preference1:top_drawer) (= (external-forall-minimize (* (* 10 (- (count preference1:golfball:doggie_bed:hexagonal_bin) )
                  )
                  (count preference1:pink)
                )
              )
              20
            )
            (count-once-per-objects preference2:dodgeball:dodgeball)
          )
          (* (+ (count-once-per-objects preference2:golfball:dodgeball) (* 0.5 (total-time) )
            )
            (total-score)
          )
        )
        (count-once preference2:golfball)
        (count preference1:beachball)
      )
      (count preference2:beachball:green)
    )
  )
)
(:scoring
  7
)
)(define (game game-id-45) (:domain medium-objects-room-v1)
(:setup
  (forall (?i - ball)
    (and
      (and
        (game-optional
          (in_motion ?i)
        )
        (forall (?q - dodgeball)
          (and
            (game-conserved
              (in_motion ?i)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?h - building)
        (then
          (hold (in_motion ?h) )
          (once (not (< 1 (distance ?h ?h)) ) )
          (once (not (on agent ?h) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 100 (count preference1:tan) )
)
(:scoring
  (count preference1:blue)
)
)(define (game game-id-46) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?t ?k - shelf)
      (exists (?u - hexagonal_bin)
        (game-conserved
          (touch ?u ?t)
        )
      )
    )
    (game-conserved
      (not
        (<= 1 2)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?q - (either key_chain laptop))
        (then
          (once (not (is_setup_object ?q) ) )
          (hold-while (in_motion bed) (and (adjacent ?q ?q) (not (in ?q ?q) ) ) )
          (hold (not (and (and (agent_holds ?q) (in_motion ?q) ) ) ) )
        )
      )
    )
    (preference preference2
      (exists (?r - cube_block ?m - building)
        (then
          (once (in ?m ?m) )
          (hold-while (not (not (not (adjacent ?m desk) ) ) ) (touch ?m agent) (in_motion ?m) (in_motion desk) )
          (hold (in_motion ?m) )
        )
      )
    )
    (preference preference3
      (exists (?p - bridge_block)
        (then
          (hold (and (agent_holds ?p) (touch ?p desk) ) )
          (hold (and (open ?p) (not (and (in_motion ?p) (exists (?f - yellow_cube_block ?q - (either teddy_bear blue_cube_block) ?j - hexagonal_bin ?g - game_object) (and (adjacent_side pink ?g rug) (on room_center ?p) ) ) ) ) ) )
          (once (not (and (< 1 10) (not (in_motion ?p) ) (not (in_motion ?p) ) ) ) )
        )
      )
    )
    (preference preference4
      (exists (?x - dodgeball)
        (then
          (hold (not (game_start ) ) )
          (any)
          (once (not (in_motion ?x) ) )
        )
      )
    )
    (preference preference5
      (exists (?l - dodgeball ?a - curved_wooden_ramp)
        (then
          (once (on back ?a) )
          (hold-while (agent_crouches ) (< 1 1) )
          (once-measure (faces ?a desk) (distance ?a ?a) )
        )
      )
    )
  )
)
(:terminal
  (>= (<= 6 (count preference1:golfball) )
    (* (* 5 (* 6 (count preference3:dodgeball) )
      )
      (count-overlapping preference5:green:beachball)
    )
  )
)
(:scoring
  5
)
)(define (game game-id-47) (:domain medium-objects-room-v1)
(:setup
  (exists (?j - (either laptop golfball dodgeball))
    (and
      (not
        (game-optional
          (and
            (or
              (not
                (object_orientation ?j ?j)
              )
            )
            (not
              (above ?j ?j)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?h - book ?b - ball)
        (then
          (hold (in_motion ?b) )
        )
      )
    )
    (preference preference2
      (exists (?v - tan_cube_block)
        (then
          (hold (opposite ?v ?v) )
          (once (in_motion ?v) )
          (once (agent_holds ?v) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference2:bed) (count-once-per-objects preference2:pink:hexagonal_bin) )
)
(:scoring
  (count preference1:blue_cube_block)
)
)(define (game game-id-48) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (and
        (and
          (and
            (forall (?j - hexagonal_bin)
              (and
                (game-conserved
                  (and
                    (and
                      (agent_holds ?j)
                      (in sideways ?j)
                      (not
                        (agent_holds rug)
                      )
                    )
                    (agent_holds ?j)
                  )
                )
              )
            )
            (and
              (game-conserved
                (in_motion upright)
              )
            )
            (forall (?m - game_object)
              (exists (?q - dodgeball ?l - dodgeball)
                (and
                  (and
                    (and
                      (and
                        (exists (?t - dodgeball)
                          (forall (?h - wall)
                            (and
                              (game-conserved
                                (and
                                  (in ?t agent)
                                  (adjacent ?h ?l)
                                )
                              )
                              (and
                                (and
                                  (and
                                    (game-conserved
                                      (exists (?q - chair)
                                        (agent_holds ?l)
                                      )
                                    )
                                    (game-conserved
                                      (not
                                        (touch ?h ?h)
                                      )
                                    )
                                    (game-conserved
                                      (adjacent_side ?m ?m ?h)
                                    )
                                  )
                                  (and
                                    (forall (?z - triangular_ramp ?q - tall_cylindrical_block)
                                      (game-conserved
                                        (not
                                          (not
                                            (not
                                              (object_orientation ?m ?q)
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                    (or
                      (game-optional
                        (< 1 (distance agent ?l))
                      )
                      (exists (?j - game_object)
                        (exists (?f - dodgeball)
                          (forall (?v - color)
                            (exists (?h - dodgeball)
                              (exists (?x - cube_block ?c - hexagonal_bin)
                                (exists (?x - drawer ?g ?y ?k ?u ?o ?p - chair)
                                  (and
                                    (and
                                      (game-conserved
                                        (in_motion agent)
                                      )
                                      (game-conserved
                                        (agent_holds desk)
                                      )
                                      (and
                                        (game-optional
                                          (< 8 (building_size ?u))
                                        )
                                        (game-conserved
                                          (and
                                            (in_motion ?f)
                                            (in_motion ?v)
                                          )
                                        )
                                      )
                                      (game-conserved
                                        (in_motion room_center)
                                      )
                                      (exists (?b - cylindrical_block ?r - (either dodgeball dodgeball))
                                        (game-optional
                                          (and
                                            (in_motion ?p)
                                            (in room_center ?h)
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                  (and
                    (and
                      (exists (?j - curved_wooden_ramp)
                        (exists (?e - dodgeball ?h - ball ?y - block)
                          (and
                            (and
                              (or
                                (or
                                  (and
                                    (game-conserved
                                      (and
                                        (same_object ?j ?y)
                                        (agent_holds ?y)
                                        (touch ?y ?y)
                                        (and
                                          (and
                                            (not
                                              (adjacent bed bed)
                                            )
                                            (not
                                              (agent_holds ?l)
                                            )
                                            (exists (?a - hexagonal_bin)
                                              (in_motion ?j)
                                            )
                                            (and
                                              (not
                                                (in agent ?y)
                                              )
                                              (in_motion ?j)
                                            )
                                            (not
                                              (not
                                                (not
                                                  (above sideways ?m)
                                                )
                                              )
                                            )
                                            (in ?y agent)
                                          )
                                          (and
                                            (adjacent ?y ?m)
                                            (agent_holds ?m)
                                            (not
                                              (and
                                                (rug_color_under ?y ?y)
                                                (in_motion ?m)
                                              )
                                            )
                                            (agent_holds bed)
                                            (game_over )
                                            (= (x_position ?m) (distance floor rug))
                                          )
                                        )
                                        (agent_holds ?m)
                                        (in_motion ?l)
                                      )
                                    )
                                  )
                                  (and
                                    (and
                                      (forall (?k - game_object)
                                        (game-conserved
                                          (agent_holds ?k)
                                        )
                                      )
                                    )
                                  )
                                  (and
                                    (and
                                      (and
                                        (game-conserved
                                          (not
                                            (< (distance ?j desk) 9)
                                          )
                                        )
                                        (and
                                          (exists (?p - (either cd triangular_ramp))
                                            (and
                                              (game-optional
                                                (in ?j bed)
                                              )
                                            )
                                          )
                                        )
                                        (game-conserved
                                          (and
                                            (is_setup_object ?l)
                                            (touch ?l ?j)
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                      (and
                        (game-conserved
                          (in_motion agent)
                        )
                      )
                    )
                    (game-optional
                      (= 1 (distance agent pillow))
                    )
                    (and
                      (game-conserved
                        (same_type ?m ?l)
                      )
                      (exists (?u ?r ?i - ball ?g - triangular_ramp)
                        (and
                          (and
                            (and
                              (game-conserved
                                (and
                                  (in_motion ?l)
                                  (not
                                    (on ?g ?l)
                                  )
                                )
                              )
                            )
                            (game-conserved
                              (on upright ?g)
                            )
                            (and
                              (game-optional
                                (exists (?v - hexagonal_bin ?s - ball)
                                  (= (distance ?m ?s) 1)
                                )
                              )
                            )
                            (or
                              (and
                                (forall (?s - building)
                                  (forall (?c - teddy_bear)
                                    (game-optional
                                      (< 1 (distance_side ?l ?s ?c ?c))
                                    )
                                  )
                                )
                              )
                            )
                            (game-conserved
                              (and
                                (touch bed ?l)
                                (and
                                  (agent_holds ?g)
                                  (and
                                    (rug_color_under desk ?g)
                                    (in_motion ?l)
                                    (< 1 (x_position ?g))
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                  (game-conserved
                    (and
                      (and
                        (not
                          (not
                            (not
                              (toggled_on agent)
                            )
                          )
                        )
                        (and
                          (<= (distance_side ?l ?l ?l) (distance ?m ?m))
                          (not
                            (agent_holds ?l)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
        (exists (?w - (either cylindrical_block mug))
          (not
            (game-optional
              (object_orientation agent ?w)
            )
          )
        )
      )
      (exists (?f - dodgeball)
        (exists (?e - block ?h - hexagonal_bin)
          (game-conserved
            (in ball ?f)
          )
        )
      )
    )
    (exists (?w - game_object)
      (exists (?o - cube_block)
        (and
          (forall (?q - hexagonal_bin ?u - dodgeball)
            (game-conserved
              (agent_holds desk)
            )
          )
          (game-optional
            (adjacent ?w ?w)
          )
          (exists (?l - teddy_bear ?s - block ?z - game_object ?l - dodgeball)
            (game-optional
              (adjacent_side ?l ?w ?l ?l)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?l - game_object ?g - (either yellow))
        (then
          (hold-while (not (not (and (object_orientation ?g ?g) (not (on east_sliding_door ?g) ) ) ) ) (adjacent agent ?g) )
          (hold (agent_holds ?g) )
          (once (agent_holds ?g) )
        )
      )
    )
  )
)
(:terminal
  (= 5 6 )
)
(:scoring
  4
)
)(define (game game-id-49) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (game_start )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?q - dodgeball)
        (then
          (hold (adjacent_side ?q desk ?q) )
          (hold (on agent tan) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 2 (count-once-per-objects preference1:blue_pyramid_block:yellow) )
  )
)
(:scoring
  (count-once-per-objects preference1:basketball)
)
)(define (game game-id-50) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?o - hexagonal_bin ?q - block ?c - pillow ?m - cube_block ?w - (either dodgeball golfball pyramid_block))
      (and
        (exists (?p - hexagonal_bin ?z - ball)
          (game-conserved
            (in_motion ?z)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?i - building ?y - hexagonal_bin)
        (at-end
          (and
            (same_color bridge_block ?y)
            (in_motion ?y)
          )
        )
      )
    )
  )
)
(:terminal
  (< (* (count preference1:dodgeball:block) (total-score) )
    2
  )
)
(:scoring
  (* (count preference1:yellow) (count preference1:green) )
)
)(define (game game-id-51) (:domain few-objects-room-v1)
(:setup
  (forall (?y - (either blue_cube_block doggie_bed cd dodgeball rug) ?t - cube_block)
    (forall (?q - (either golfball basketball))
      (and
        (game-optional
          (and
            (not
              (in_motion agent)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?n - block)
        (at-end
          (in_motion ?n)
        )
      )
    )
  )
)
(:terminal
  (>= (count-overlapping preference1:beachball) (count-once-per-objects preference1:golfball) )
)
(:scoring
  (* (count-once-per-external-objects preference1:basketball:dodgeball) (count-once-per-objects preference1:green) )
)
)(define (game game-id-52) (:domain medium-objects-room-v1)
(:setup
  (forall (?u - beachball ?f - desk_shelf)
    (exists (?w - shelf)
      (game-conserved
        (on ?w ?w)
      )
    )
  )
)
(:constraints
  (and
    (forall (?m ?z ?i ?k - red_dodgeball ?q - (either book) ?o - bridge_block)
      (and
        (preference preference1
          (exists (?a - red_dodgeball)
            (then
              (once (in bed ?a) )
              (hold (not (and (in_motion ?o) (same_object ?o agent) ) ) )
              (once (not (on door ?o) ) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?g - flat_block)
        (then
          (once (and (exists (?n - cylindrical_block) (<= (distance ?n agent) 0) ) (agent_holds ?g) (same_color ?g ?g) ) )
          (once (not (>= 1 8) ) )
          (hold (and (object_orientation desk ?g) (and (object_orientation ?g ?g) (agent_holds ?g) (agent_holds ?g) (not (in_motion ?g) ) ) (on ?g ?g) ) )
          (hold-while (and (and (equal_x_position ?g door) (object_orientation ?g ?g) (in_motion ?g) (not (broken ?g) ) ) (and (not (agent_holds ?g) ) (on ?g ?g) ) ) (and (not (not (and (is_setup_object ?g) (and (< (distance ?g agent) (building_size ?g)) (in_motion ?g) ) (and (and (on agent ?g) (touch ?g ?g) (and (not (not (and (exists (?b - block) (and (in ?b ?b) (in_motion ?b) ) ) (agent_holds ?g) (and (exists (?b - (either yellow_cube_block top_drawer doggie_bed teddy_bear)) (not (on ?b ?g) ) ) (same_color room_center ?g) ) (adjacent ?g ?g) ) ) ) (on ?g ?g) ) ) (agent_holds ?g) ) ) ) ) (is_setup_object ?g) (not (and (on ?g ?g) (and (not (rug_color_under ?g ?g) ) (object_orientation ?g ?g) (agent_holds pink) (agent_holds desk) (not (in ?g ?g) ) (in_motion ?g) ) ) ) (in_motion desk) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (<= (count preference2:orange) 6 )
    )
  )
)
(:scoring
  (* 10 (external-forall-maximize 2 ) (count-once-per-objects preference2:block:block) )
)
)(define (game game-id-53) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (not
      (exists (?a - (either cellphone cylindrical_block teddy_bear) ?j - dodgeball)
        (adjacent ?j desk)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?s - game_object)
        (at-end
          (in ?s ?s)
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:beachball) (* (count-once preference1:blue_dodgeball) (not (- (- 1 )
        )
      )
    )
  )
)
(:scoring
  3
)
)(define (game game-id-54) (:domain few-objects-room-v1)
(:setup
  (forall (?j - (either cube_block tall_cylindrical_block pyramid_block))
    (exists (?n - cube_block)
      (game-conserved
        (not
          (same_color room_center ?j)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?s - doggie_bed)
      (and
        (preference preference1
          (exists (?i - game_object ?d - tall_cylindrical_block ?g - hexagonal_bin)
            (at-end
              (and
                (not
                  (is_setup_object ?s)
                )
                (agent_holds ?g)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= 5 (* (total-time) (count preference1:doggie_bed) )
  )
)
(:scoring
  (external-forall-maximize
    (+ (count-once-per-objects preference1:orange) (* (count-once-per-objects preference1:dodgeball:dodgeball) (* (external-forall-maximize (external-forall-maximize (/ 0.5 (count preference1:yellow_cube_block) ) ) ) (total-score) )
        (count-once-per-objects preference1:yellow)
      )
    )
  )
)
)(define (game game-id-55) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds agent)
  )
)
(:constraints
  (and
    (forall (?y - hexagonal_bin ?t ?x - (either cylindrical_block hexagonal_bin) ?g - (either doggie_bed floor laptop) ?i - curved_wooden_ramp)
      (and
        (preference preference1
          (exists (?h - chair)
            (at-end
              (adjacent ?i bed)
            )
          )
        )
        (preference preference2
          (exists (?d - ball)
            (at-end
              (in_motion ?i)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (+ (or 3 ) (count-once-per-objects preference2:pink_dodgeball:dodgeball:yellow) )
    (count preference2:yellow)
  )
)
(:scoring
  (- (count preference1:beachball) )
)
)(define (game game-id-56) (:domain many-objects-room-v1)
(:setup
  (exists (?w - dodgeball ?r - hexagonal_bin)
    (exists (?e - ball)
      (game-conserved
        (not
          (and
            (agent_holds ?e)
            (in_motion ?e)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?e - (either alarm_clock top_drawer golfball))
        (then
          (once (in_motion ?e) )
          (hold-while (in_motion ?e) (agent_holds door) )
          (any)
        )
      )
    )
  )
)
(:terminal
  (or
    (<= (+ (count preference1:doggie_bed:basketball) (count preference1:alarm_clock) )
      (count preference1:yellow)
    )
    (or
      (> (count preference1) (count-once preference1:basketball:golfball) )
      (or
        (or
          (or
            (>= (+ (count preference1:green) 0 5 (count-increasing-measure preference1:pink_dodgeball) 20 7 (+ (* 3 (or (not (count-once preference1:yellow_cube_block:beachball) ) (count preference1:red) ) )
                  4
                )
                5
                1
                5
                (* 10 (count preference1:dodgeball) )
                (count-once-per-objects preference1:hexagonal_bin)
              )
              6
            )
            (= (count preference1:pink) (+ (count-once-per-objects preference1:alarm_clock) 10 )
            )
          )
          (or
            (and
              (> 2 (* 6 (count preference1:beachball) )
              )
              (>= (count preference1:yellow_cube_block) 15 )
              (>= (count-once-per-objects preference1:yellow) 1 )
            )
            (or
              (not
                (or
                  (>= (+ (count preference1:alarm_clock) 1 )
                    (count preference1:wall)
                  )
                  (>= (+ (+ (count-measure preference1:dodgeball:orange) 3 (* (* (<= (count preference1:basketball) (* (count-unique-positions preference1:red) (* (+ (- (count-once-per-objects preference1:golfball) )
                                    (* (+ 5 (count preference1:beachball:blue_pyramid_block) )
                                      1
                                    )
                                  )
                                  (count-once-per-objects preference1:dodgeball)
                                )
                              )
                            )
                            9
                          )
                          (* (count-once-per-objects preference1:wall:dodgeball) (* (- (count-once-per-objects preference1:dodgeball:dodgeball) )
                              (* (count preference1:book) (count preference1:cube_block) )
                            )
                          )
                        )
                      )
                      (count-once-per-objects preference1:pink)
                    )
                    (total-score)
                  )
                )
              )
            )
            (>= 2 (count preference1:pink_dodgeball) )
          )
          (<= (+ (count-once-per-objects preference1:yellow:beachball) (count-once-per-objects preference1:purple) (count preference1:basketball) )
            (count-once-per-objects preference1:red)
          )
        )
        (> (count-once-per-external-objects preference1:golfball:dodgeball) (count-once-per-objects preference1:red:beachball) )
      )
    )
    (>= (* (external-forall-maximize (* (count preference1:yellow:dodgeball:hexagonal_bin) (+ (* (count preference1) (and (count-once preference1:beachball) 10 20 ) )
              (* (* (count preference1:red) (count preference1:red) 10 (count preference1:pink_dodgeball) (count preference1:top_drawer:pink) (count preference1:orange) )
                6
              )
            )
          )
        )
        3
      )
      8
    )
  )
)
(:scoring
  (count preference1:yellow)
)
)(define (game game-id-57) (:domain many-objects-room-v1)
(:setup
  (exists (?n ?l ?c ?b ?x ?d - hexagonal_bin)
    (exists (?z - hexagonal_bin)
      (exists (?a - dodgeball)
        (game-optional
          (adjacent_side ?z north_wall ?b)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?w - hexagonal_bin)
        (then
          (hold (same_color ?w ?w) )
          (once (agent_holds ?w) )
          (hold (and (in_motion ?w) (agent_holds ?w) ) )
        )
      )
    )
    (preference preference2
      (exists (?x - shelf)
        (then
          (once (not (adjacent ?x ?x) ) )
          (once (in ?x ?x) )
          (once (in_motion ?x) )
        )
      )
    )
  )
)
(:terminal
  (> 6 (total-score) )
)
(:scoring
  (+ (total-score) (+ 3 (* (+ (count-shortest preference2:dodgeball) (count-shortest preference2:yellow) )
        (count-same-positions preference2:dodgeball:dodgeball)
      )
    )
  )
)
)(define (game game-id-58) (:domain medium-objects-room-v1)
(:setup
  (exists (?l - cube_block)
    (game-conserved
      (and
        (on ?l ?l)
        (not
          (not
            (in_motion ?l)
          )
        )
        (and
          (agent_holds ?l)
          (in_motion ?l)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?z - dodgeball)
      (and
        (preference preference1
          (exists (?e - game_object)
            (then
              (hold (adjacent ?z ?e) )
              (hold-while (same_type ?e ?e) (and (object_orientation ?e ?z) (agent_holds ?z) ) (toggled_on ?e) )
              (hold-while (< 2 (distance ?e ?z)) (in_motion ?z) )
              (hold-to-end (in_motion ?z) )
            )
          )
        )
        (preference preference2
          (exists (?r - red_pyramid_block ?p - block)
            (then
              (once (touch ?p agent) )
              (hold (game_over ) )
              (hold-while (= (distance_side ?z ?p ?z) (distance ?p ?p) 10) (faces ?p ?p) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?h - game_object)
        (then
          (hold (agent_holds ?h) )
          (forall-sequence (?g - wall)
            (then
              (once (in_motion ?h) )
              (once (agent_holds upright) )
              (once (not (in_motion ?h) ) )
              (hold (in_motion ?g) )
            )
          )
          (hold (and (adjacent door ?h) (and (not (not (not (and (not (and (agent_holds desk) (> 5 7) (or (and (toggled_on ?h) (same_color ?h ?h) ) (on ?h ?h) (or (not (same_type ?h ?h) ) (agent_holds ?h) (on ?h ?h) ) ) ) ) (not (broken ?h) ) ) ) ) ) (and (adjacent ?h ?h) (and (adjacent_side upright ?h ?h) (and (agent_holds ?h) (not (not (not (not (on ?h agent) ) ) ) ) ) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (= (* (total-score) (* (count preference1:blue_dodgeball:pink_dodgeball) (= (count-once-per-external-objects preference2:dodgeball) 3 )
        )
        2
      )
      (* (- (* 7 (- (count-once-per-objects preference1:dodgeball:cube_block) )
            (count-once-per-objects preference1:red)
            (- (total-time) )
            5
          )
        )
        (* (count preference3:basketball) 2 5 (* (count preference3:golfball) (or 4 ) )
          (count preference3:blue_dodgeball)
          (* 2 (count preference1:dodgeball) )
        )
        (- (count-once-per-objects preference2:blue_dodgeball) )
      )
    )
    (>= (* 3 (+ 50 8 )
        (count-once-per-objects preference2:red:blue_dodgeball)
      )
      (count preference2:beachball)
    )
  )
)
(:scoring
  (* 1 10 )
)
)(define (game game-id-59) (:domain medium-objects-room-v1)
(:setup
  (not
    (and
      (game-optional
        (exists (?h - block ?b - hexagonal_bin)
          (not
            (in_motion ?b)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?o - ball)
        (then
          (hold (in ?o ?o) )
          (hold-while (touch ?o ?o) (not (and (and (is_setup_object agent) (agent_holds ?o) (object_orientation bed ?o) (touch ?o door) ) (on ?o ?o) ) ) )
          (once (not (<= 2 1) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 10 20 (* (count-once-per-external-objects preference1:green) 10 )
      (count-once-per-objects preference1:book)
      (* (count-once-per-objects preference1) (count-once preference1:purple) )
      (external-forall-maximize
        (* (and (count preference1:basketball) ) (+ (* 10 (count preference1:beachball) )
            (count preference1:rug)
          )
        )
      )
    )
    2
  )
)
(:scoring
  (* 10 (count-once-per-objects preference1:hexagonal_bin:doggie_bed) )
)
)(define (game game-id-60) (:domain many-objects-room-v1)
(:setup
  (exists (?q - dodgeball)
    (and
      (forall (?v - dodgeball)
        (or
          (forall (?b ?s ?l ?d - (either ball dodgeball) ?m - dodgeball)
            (and
              (not
                (game-optional
                  (and
                    (above ?m desk)
                    (not
                      (in agent drawer)
                    )
                  )
                )
              )
              (exists (?d - hexagonal_bin)
                (game-conserved
                  (on ?m ?v)
                )
              )
            )
          )
          (forall (?s - teddy_bear ?c - (either basketball golfball))
            (forall (?a - wall)
              (exists (?k - (either bridge_block triangle_block) ?r - cube_block ?p - (either ball hexagonal_bin) ?b - wall)
                (game-conserved
                  (and
                    (on agent ?q)
                    (or
                      (touch desk ?q)
                      (faces ?q ?q)
                      (agent_holds ?a)
                    )
                  )
                )
              )
            )
          )
          (game-conserved
            (in_motion ?q)
          )
        )
      )
      (forall (?h - pillow)
        (game-optional
          (not
            (exists (?l - dodgeball)
              (and
                (and
                  (game_over )
                  (and
                    (on ?q ?h)
                    (agent_holds ?h)
                    (agent_holds ?q)
                    (not
                      (on ?q ?l)
                    )
                  )
                )
                (adjacent ?q ?q)
              )
            )
          )
        )
      )
      (game-conserved
        (on bed agent)
      )
    )
  )
)
(:constraints
  (and
    (forall (?u - block)
      (and
        (preference preference1
          (exists (?r - (either triangular_ramp golfball))
            (then
              (once (and (on ?r ?r) (in_motion floor) ) )
              (hold (and (rug_color_under ?r ?r) ) )
              (hold (forall (?v - cube_block ?l - hexagonal_bin ?e - (either golfball dodgeball)) (and (in ?e ?r) (agent_holds ?r) ) ) )
            )
          )
        )
        (preference preference2
          (exists (?e - hexagonal_bin)
            (then
              (hold (not (and (in_motion ?e) (agent_holds bed) ) ) )
              (once (in ?u ?e) )
              (once (agent_holds ?u) )
              (once (in_motion ?u) )
            )
          )
        )
      )
    )
    (forall (?z - hexagonal_bin ?t - pillow)
      (and
        (preference preference3
          (exists (?y - (either key_chain pillow yellow) ?w - block)
            (then
              (hold (agent_holds ?t) )
              (hold-while (< (distance_side ?w desk bed ?w) 2) (in ?t ?w) (not (and (agent_holds ?t) (<= 1 (distance desk ?t)) (in_motion right) ) ) (same_color ?w ?w) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (or (= (count-once-per-external-objects preference2:purple) 10 )
      (total-time)
    )
    (* 6 (< (* 1 (count-overlapping preference1:tan) )
        (count preference2:beachball:dodgeball)
      )
    )
  )
)
(:scoring
  (count preference2:hexagonal_bin)
)
)(define (game game-id-61) (:domain medium-objects-room-v1)
(:setup
  (exists (?m - dodgeball)
    (exists (?o - wall)
      (game-optional
        (not
          (on rug ?m)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?v - hexagonal_bin ?r - block)
      (and
        (preference preference1
          (exists (?m - hexagonal_bin ?y - color ?n - wall)
            (then
              (hold (on ?r ?n) )
              (hold (not (touch ?r ?n) ) )
              (once (same_type ?n ?r) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?q - building ?l - (either cd cube_block laptop) ?l - hexagonal_bin)
        (then
          (once (and (or (not (and (same_type ?l ?l) (< 5 1) ) ) (not (touch agent ?l) ) ) (not (same_type ?l ?l) ) ) )
          (once (in ?l rug) )
          (once (< 1 (distance ?l ?l)) )
        )
      )
    )
    (preference preference3
      (exists (?o - dodgeball)
        (then
          (once (and (in_motion bed) (agent_holds door) (adjacent ?o room_center) ) )
          (hold (on ?o ?o) )
          (hold (not (in_motion ?o) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (not
      (< (* 10 10 )
        10
      )
    )
    (>= (count preference1:tall_cylindrical_block) (* (- (external-forall-maximize 2 ) )
        2
      )
    )
  )
)
(:scoring
  (* (not (count preference3:blue_dodgeball) ) 3 (* 10 (count preference3:dodgeball:beachball) (>= (* (or (count-total preference2:yellow) (count preference1:pyramid_block) 1 ) (* (count preference1:yellow) (count-once preference1:dodgeball) )
          (total-score)
          (total-time)
          (count preference1:beachball:blue_cube_block)
          (- (count preference3:golfball) )
        )
        (+ (count-once-per-objects preference3:hexagonal_bin) 3 )
      )
    )
    (* (not (count-once-per-objects preference1:triangle_block:dodgeball) ) (* (* (* 5 (* (* (total-score) 5 )
              3
            )
          )
          40
        )
        18
      )
    )
  )
)
)(define (game game-id-62) (:domain few-objects-room-v1)
(:setup
  (forall (?x - building)
    (and
      (exists (?c - building)
        (and
          (and
            (game-conserved
              (and
                (agent_holds ?c)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?i - hexagonal_bin)
        (then
          (hold (in_motion ?i) )
          (once (and (not (> (building_size ?i) (distance ?i ?i)) ) (and (agent_holds ?i) (in_motion ?i) (in ?i ?i) ) ) )
          (once (not (not (in_motion agent) ) ) )
        )
      )
    )
    (preference preference2
      (exists (?i - dodgeball)
        (then
          (once (not (and (agent_holds ?i) (on ?i ?i) ) ) )
          (once (in_motion ?i) )
          (once (same_color pink agent) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference2:golfball) (+ 3 30 2 2 8 8 )
  )
)
(:scoring
  (* (* 30 40 )
    (count preference2:dodgeball:basketball)
    0
  )
)
)(define (game game-id-63) (:domain medium-objects-room-v1)
(:setup
  (forall (?o - dodgeball)
    (exists (?r - chair ?f - (either pencil dodgeball) ?d - watch)
      (or
        (forall (?g - hexagonal_bin)
          (exists (?b - hexagonal_bin)
            (game-conserved
              (not
                (agent_holds agent)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?e - cube_block)
        (then
          (once (and (on ?e ?e) ) )
          (hold (and (< (distance ?e ?e) 1) ) )
          (hold (agent_holds ?e) )
        )
      )
    )
    (preference preference2
      (exists (?s ?f - wall)
        (at-end
          (not
            (agent_holds ?s)
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (* (* 5 3 )
          2
        )
        (count-once-per-objects preference1:doggie_bed:pink)
      )
      (> 3 (* (total-time) (count-longest preference1:tan) (count preference2:dodgeball) (total-score) (count-once-per-objects preference1:book:beachball) (total-time) )
      )
      (not
        (= (* 5 )
          (total-score)
        )
      )
    )
    (or
      (or
        (>= 5 6 )
        (< (* (* 4 (* 3 30 )
              (count-once-per-objects preference1:pink)
            )
            (count preference2:basketball)
            (count preference1:doggie_bed)
          )
          10
        )
        (< 3 10 )
      )
      (and
        (>= (* (* (count preference1:dodgeball:beachball) 10 )
            (* (+ 10 (count preference1:dodgeball) 3 (- (count preference2:brown:beachball) )
                3
                (+ (external-forall-maximize 2 ) (external-forall-maximize (* (>= 3 (count-once-per-objects preference2:pink:red) )
                      (count-once preference2:basketball:pink)
                    )
                  )
                )
              )
              (* (count preference1:dodgeball) (* (count preference1:yellow) (count preference2:dodgeball) )
              )
            )
          )
          (count-total preference1:beachball)
        )
        (not
          (>= (- 10 )
            (total-time)
          )
        )
        (> (* 4 2 2 (count-once-per-external-objects preference1:dodgeball) (count-once-per-objects preference1:hexagonal_bin) (count-same-positions preference1:red) )
          (total-time)
        )
      )
    )
  )
)
(:scoring
  20
)
)(define (game game-id-64) (:domain many-objects-room-v1)
(:setup
  (exists (?z - game_object)
    (and
      (forall (?g - teddy_bear)
        (exists (?o - hexagonal_bin ?k - red_dodgeball ?c - block)
          (exists (?l - game_object)
            (game-conserved
              (in_motion room_center)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?m - hexagonal_bin ?a - teddy_bear ?e - game_object ?t - cube_block)
      (and
        (preference preference1
          (at-end
            (agent_holds ?t)
          )
        )
      )
    )
  )
)
(:terminal
  (< 30 0 )
)
(:scoring
  10
)
)(define (game game-id-65) (:domain medium-objects-room-v1)
(:setup
  (exists (?m - hexagonal_bin)
    (forall (?t - game_object)
      (exists (?g - (either cd pillow flat_block))
        (exists (?n - (either pencil doggie_bed cd))
          (forall (?r - ball)
            (game-conserved
              (broken ?g)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?f - (either key_chain cube_block))
        (then
          (once (in_motion ?f) )
          (hold (in_motion ?f) )
          (once (in_motion right) )
        )
      )
    )
  )
)
(:terminal
  (>= (- (count-once-per-objects preference1:book) )
    (count preference1:basketball)
  )
)
(:scoring
  (count preference1:golfball:cube_block:orange)
)
)(define (game game-id-66) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (forall (?c - hexagonal_bin ?o - building ?o ?p - bridge_block)
        (game-conserved
          (adjacent ?p ?p)
        )
      )
    )
    (forall (?g - game_object)
      (game-conserved
        (not
          (in_motion ?g)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?n - game_object)
        (then
          (once (in ?n ?n) )
          (hold (and (= (distance agent ?n) 8) (toggled_on ?n) ) )
          (once (on ?n ?n) )
        )
      )
    )
    (preference preference2
      (exists (?g ?k ?y ?s - block)
        (then
          (once (not (not (not (agent_holds ?s) ) ) ) )
          (once (not (agent_holds agent) ) )
          (once (agent_holds ?k) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once preference1:blue_dodgeball) (+ (count-once preference1:basketball:dodgeball) (- (count preference2:beachball) )
    )
  )
)
(:scoring
  2
)
)(define (game game-id-67) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (agent_crouches )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?f - cube_block)
        (then
          (once (in_motion ?f) )
          (hold (and (not (exists (?r - (either tall_cylindrical_block teddy_bear chair)) (= 0.5 1) ) ) (and (and (in_motion ?f) (and (open ?f) (and (and (< 9 (distance ?f ?f)) (not (in_motion upright) ) ) (in_motion ?f) ) ) ) (agent_holds ?f) ) ) )
          (once (agent_holds ?f) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once preference1:red_pyramid_block:hexagonal_bin) (+ 2 (count-shortest preference1:brown) )
  )
)
(:scoring
  (count preference1:green)
)
)(define (game game-id-68) (:domain few-objects-room-v1)
(:setup
  (exists (?r ?d - building ?x - shelf ?r - hexagonal_bin)
    (game-optional
      (exists (?l - dodgeball)
        (not
          (not
            (agent_holds pink)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?y - hexagonal_bin ?d - building)
        (then
          (once (not (and (same_type ?d agent) (or (forall (?e - doggie_bed ?c - dodgeball ?i - beachball) (toggled_on ?d) ) (in_motion ?d) ) ) ) )
          (once (not (= (distance ?d agent)) ) )
          (once (exists (?m - block ?m - (either cylindrical_block rug)) (and (agent_holds agent) (exists (?l - building ?u - ball) (on ?m ?u) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference1:hexagonal_bin) (count-once-per-external-objects preference1:alarm_clock) )
)
(:scoring
  (and
    (* (count preference1:book) 4 (count preference1:purple:basketball) (* 4 (count-unique-positions preference1) (* 6 (count-once preference1:pink) )
      )
    )
    4
  )
)
)(define (game game-id-69) (:domain few-objects-room-v1)
(:setup
  (exists (?d - desktop)
    (exists (?t - wall)
      (or
        (and
          (exists (?p - triangular_ramp)
            (game-conserved
              (not
                (agent_holds ?t)
              )
            )
          )
          (forall (?s - block ?u ?s - building ?i - desk_shelf)
            (forall (?z - dodgeball)
              (exists (?v - (either cube_block yellow_cube_block pillow))
                (game-conserved
                  (< 9 (distance ?d ?z))
                )
              )
            )
          )
        )
        (and
          (and
            (forall (?a - block ?m - pillow)
              (and
                (and
                  (exists (?h - dodgeball)
                    (exists (?p - book)
                      (and
                        (game-conserved
                          (not
                            (agent_holds ?d)
                          )
                        )
                      )
                    )
                  )
                  (game-conserved
                    (and
                      (exists (?r - yellow_cube_block)
                        (agent_holds rug)
                      )
                      (adjacent pink_dodgeball ?t)
                      (and
                        (not
                          (on agent ?t)
                        )
                        (open ?m)
                      )
                      (adjacent ?m back)
                    )
                  )
                )
                (exists (?r - chair)
                  (exists (?x - curved_wooden_ramp)
                    (game-conserved
                      (not
                        (toggled_on ?x)
                      )
                    )
                  )
                )
                (game-conserved
                  (and
                    (not
                      (and
                        (on ?t ?d)
                        (in_motion ?m)
                      )
                    )
                    (in_motion ?m)
                  )
                )
              )
            )
          )
          (exists (?i ?z ?x ?s ?j ?g - shelf)
            (game-optional
              (not
                (in bed ?j)
              )
            )
          )
        )
        (game-conserved
          (in_motion ?t)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?g - (either laptop alarm_clock yellow_cube_block) ?q - blinds)
        (then
          (hold (adjacent_side desk ?q ?q) )
          (once (agent_holds ?q) )
          (hold-for 3 (< (distance ?q ?q) (distance ?q ?q)) )
        )
      )
    )
  )
)
(:terminal
  (= (count preference1:pink) (* (count preference1:beachball:golfball) 3 )
  )
)
(:scoring
  (count-once-per-objects preference1:pink)
)
)(define (game game-id-70) (:domain few-objects-room-v1)
(:setup
  (forall (?g - hexagonal_bin)
    (game-conserved
      (not
        (in ?g ?g)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?c - beachball ?h - blue_pyramid_block)
        (then
          (once (not (< (distance floor ?h) (distance ?h block)) ) )
          (once (in_motion ?h) )
          (once (agent_holds bed) )
        )
      )
    )
    (preference preference2
      (exists (?e - (either blue_cube_block cube_block))
        (then
          (once (and (in ?e ?e) (on bed ?e) ) )
          (once (agent_holds green_golfball) )
          (hold-while (agent_holds ?e) (on ?e ?e) )
        )
      )
    )
  )
)
(:terminal
  (>= 4 (= 6 (* (* (+ 1 (+ (+ (count preference1:cube_block:basketball) (+ (+ (+ (total-score) (total-score) 10 )
                    (count preference1:red)
                  )
                  3
                )
                (* 2 (count preference1:blue_cube_block:cylindrical_block) (count preference2:dodgeball:basketball) )
              )
              3
              (* 5 (count preference1:dodgeball:blue_dodgeball) 8 )
            )
          )
          (count-once-per-objects preference2:purple)
          (count-same-positions preference2:dodgeball:doggie_bed)
        )
        (count preference2:pink)
      )
      5
    )
  )
)
(:scoring
  3
)
)(define (game game-id-71) (:domain few-objects-room-v1)
(:setup
  (exists (?k - hexagonal_bin ?p - hexagonal_bin ?z - pillow)
    (and
      (and
        (and
          (forall (?u - hexagonal_bin ?u - teddy_bear)
            (forall (?g - dodgeball ?g ?p - block)
              (game-conserved
                (and
                  (adjacent ?p ?g)
                  (agent_holds ?g)
                )
              )
            )
          )
        )
        (and
          (forall (?t - hexagonal_bin)
            (not
              (game-optional
                (same_type agent agent)
              )
            )
          )
        )
      )
      (exists (?b - cube_block)
        (and
          (game-optional
            (and
              (not
                (and
                  (agent_holds ?z)
                  (and
                    (agent_holds east_sliding_door)
                    (and
                      (not
                        (opposite ?b ?b)
                      )
                      (agent_holds ?b)
                    )
                    (in_motion ?z)
                  )
                )
              )
              (agent_holds ?z)
            )
          )
          (game-optional
            (agent_holds agent)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?v - wall ?g - pyramid_block)
        (then
          (once (and (forall (?h - building) (in_motion ?h) ) (not (in_motion ?g) ) ) )
          (once (and (in_motion ?g) (in_motion ?g) ) )
          (once (not (on ?g ?g) ) )
        )
      )
    )
  )
)
(:terminal
  (> 30 (total-score) )
)
(:scoring
  50
)
)(define (game game-id-72) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?x - hexagonal_bin ?c - (either cellphone golfball pyramid_block))
      (game-conserved
        (between ?c bed ?c)
      )
    )
  )
)
(:constraints
  (and
    (forall (?i - dodgeball)
      (and
        (preference preference1
          (exists (?b - dodgeball)
            (then
              (once (in pink_dodgeball ?i) )
              (once (and (adjacent ?b ?b) (in ?b ?i) ) )
              (once (agent_holds ?i) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 5 3 )
)
(:scoring
  (total-score)
)
)(define (game game-id-73) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (exists (?h - hexagonal_bin ?a - hexagonal_bin)
        (and
          (exists (?h - hexagonal_bin ?s ?w ?h ?d ?n ?z - color)
            (and
              (game-optional
                (adjacent_side ?w ?d ?w)
              )
              (game-conserved
                (in_motion ?h)
              )
              (or
                (exists (?u - dodgeball)
                  (or
                    (and
                      (game-optional
                        (agent_holds ?n)
                      )
                    )
                  )
                )
                (or
                  (game-optional
                    (agent_holds ?s)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?n - hexagonal_bin ?b - ball ?l - dodgeball)
        (then
          (once (agent_holds ?l) )
          (hold (not (not (not (in_motion ?l) ) ) ) )
          (hold-for 7 (same_object ?l ?l) )
        )
      )
    )
    (preference preference2
      (exists (?r - (either flat_block))
        (then
          (hold-while (not (agent_holds agent) ) (and (and (on ?r ?r) (in_motion ?r) ) (and (in_motion bridge_block) (and (and (not (< (distance ?r room_center) 1) ) (and (in_motion ?r) (in_motion ?r) ) ) (in agent ?r) ) ) ) )
          (once (on ?r ?r) )
          (hold (in_motion ?r) )
        )
      )
    )
  )
)
(:terminal
  (= (* (count preference1:pyramid_block) (count preference1:beachball) )
    (= (* (* 5 10 )
        (count preference1:red:dodgeball)
      )
      (count-once-per-objects preference2:red:golfball)
      (count preference2:dodgeball)
    )
  )
)
(:scoring
  (count preference2:yellow_cube_block)
)
)(define (game game-id-74) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (agent_crouches )
  )
)
(:constraints
  (and
    (forall (?w - building ?q - dodgeball)
      (and
        (preference preference1
          (exists (?k - teddy_bear)
            (then
              (hold (> (distance bed ?k) 0) )
              (once (agent_holds ?k) )
              (once (on ?q bed) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count preference1:dodgeball) (+ (* (+ (* (count-shortest preference1:basketball) (external-forall-maximize (count preference1:pink) ) )
            (count preference1:basketball:red_pyramid_block:hexagonal_bin)
          )
          5
        )
        (count-measure preference1:basketball:doggie_bed)
      )
      (* (count preference1:red_pyramid_block:basketball) (count preference1:purple:bed:dodgeball) )
      (+ 4 (* (- (count-longest preference1:dodgeball) (count preference1:red) ) (* (count-increasing-measure preference1:dodgeball) 1 )
        )
      )
    )
    (count-once-per-objects preference1:triangle_block)
  )
)
(:scoring
  (count preference1:dodgeball)
)
)(define (game game-id-75) (:domain many-objects-room-v1)
(:setup
  (exists (?o - (either triangle_block cellphone) ?w - curved_wooden_ramp)
    (exists (?j - hexagonal_bin)
      (game-conserved
        (agent_holds ?j)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?z - (either cylindrical_block cellphone dodgeball))
        (then
          (forall-sequence (?s - game_object)
            (then
              (hold (and (and (not (in_motion ball) ) (on ?s ?s) (equal_x_position ?z ?z) (same_object ?s ?z) (and (and (is_setup_object ?s) (not (< (x_position ?s) 1) ) ) (game_start ) (in_motion ?z) ) (not (not (on block ?z) ) ) ) (and (agent_holds bed) (agent_holds ?z) (in ?s ?s) ) ) )
              (once-measure (> 3 (distance top_drawer agent)) (distance ?s ?z) )
              (once (agent_holds ?z) )
            )
          )
          (once (and (in_motion desk) (agent_holds ?z) ) )
          (hold (or (agent_holds ?z) (same_type ?z ?z) (in ?z rug) (not (exists (?h - hexagonal_bin ?b - building) (in_motion ?z) ) ) ) )
        )
      )
    )
    (preference preference2
      (exists (?c - cylindrical_block ?u ?g - hexagonal_bin)
        (then
          (once (same_color ?u desk) )
          (once (in_motion ?u) )
          (once (in_motion agent) )
        )
      )
    )
  )
)
(:terminal
  (= (count-once-per-objects preference2:basketball) (+ (or (count-measure preference2:pink_dodgeball) (- (count preference2:blue_cube_block) (count preference1:basketball:block) ) ) 1 )
  )
)
(:scoring
  (- (* (count-once-per-objects preference1:dodgeball) (* (* (* 2 3 )
          (count preference2:dodgeball)
        )
        (-
          4
          (* 10 (- 10 )
          )
        )
        (* (count preference2:dodgeball) 7 )
        (count-once-per-external-objects preference2:dodgeball)
        9
        (* 5 (count-once-per-objects preference2:doggie_bed) )
      )
    )
  )
)
)(define (game game-id-76) (:domain few-objects-room-v1)
(:setup
  (exists (?m - doggie_bed)
    (exists (?e - hexagonal_bin)
      (game-optional
        (not
          (not
            (in ?m ?m)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?v - block)
        (then
          (once (not (same_object ?v ?v) ) )
          (hold (rug_color_under ?v floor) )
          (once (object_orientation ?v ?v) )
        )
      )
    )
    (preference preference2
      (exists (?p - ball)
        (then
          (once (agent_holds ?p) )
          (hold (in ?p ?p) )
          (once (in_motion ?p) )
        )
      )
    )
    (forall (?s - building)
      (and
        (preference preference3
          (exists (?b - triangular_ramp)
            (at-end
              (= 0.5 (distance ?s desk))
            )
          )
        )
        (preference preference4
          (then
            (forall-sequence (?i - cube_block)
              (then
                (hold (agent_holds rug) )
                (once (not (in_motion ?i) ) )
                (once (exists (?n - pillow) (on ?s ?s) ) )
              )
            )
            (hold (agent_holds agent) )
            (once (not (and (and (agent_holds ?s) (in_motion ?s) (agent_holds rug) ) (and (in sideways ?s) (agent_holds ?s) ) ) ) )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (+ 3 10 (count preference3:yellow) )
    (+ 5 (- 5 )
    )
  )
)
(:scoring
  2
)
)(define (game game-id-77) (:domain few-objects-room-v1)
(:setup
  (exists (?f - game_object ?x - game_object)
    (game-conserved
      (not
        (not
          (and
            (and
              (agent_holds ?x)
              (on ?x ?x)
            )
            (in_motion ?x)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?t - hexagonal_bin)
        (then
          (once (agent_holds ?t) )
          (once (not (and (in_motion ?t) (faces ?t ?t) ) ) )
          (once (forall (?q ?w - dodgeball) (in ?t ?t) ) )
        )
      )
    )
    (forall (?s ?q ?a ?y - wall ?y - (either key_chain cellphone))
      (and
        (preference preference2
          (exists (?m - cube_block)
            (then
              (once (and (in_motion ?m) (in ?y ?y) (and (in_motion ?y) (adjacent ?m agent) ) ) )
              (once (in_motion ?m) )
              (hold (agent_holds ?y) )
            )
          )
        )
        (preference preference3
          (then
            (hold (and (on ?y bed) (exists (?b - curved_wooden_ramp) (agent_holds ?b) ) ) )
            (hold-while (agent_holds ?y) (in_motion room_center) )
            (once (and (in_motion ?y) ) )
          )
        )
        (preference preference4
          (exists (?n - game_object)
            (then
              (hold (in_motion agent) )
              (hold (agent_holds ?y) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (and
      (>= 2 (count preference2:red) )
      (>= 2 (* (count preference3:triangle_block) (* (count preference2:yellow) 9 )
        )
      )
    )
    (and
      (>= 6 (- (count preference3:yellow_pyramid_block:beachball) (count preference4:triangle_block) ) )
      (>= (* 7 1 )
        (* (* (total-time) (count-unique-positions preference2:red) )
        )
      )
      (not
        (or
          (= (* 100 0 7 (- 100 (count preference1:red:basketball) ) 100 (count preference1:blue_dodgeball) )
            16
          )
          (or
            (and
              (>= (count-once preference3) 5 )
              (>= 6 (count preference4:dodgeball) )
            )
            (> 10 3 )
            (>= 0.5 (count preference1:dodgeball) )
          )
        )
      )
    )
  )
)
(:scoring
  (count preference2:basketball)
)
)(define (game game-id-78) (:domain many-objects-room-v1)
(:setup
  (exists (?y - dodgeball ?n - ball)
    (game-conserved
      (exists (?s ?v ?g ?f - hexagonal_bin)
        (not
          (agent_holds agent)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?t - chair)
        (then
          (once (agent_holds ?t) )
          (once (and (agent_holds brown) (agent_holds ?t) ) )
          (once (and (in_motion agent) (not (in_motion ?t) ) ) )
        )
      )
    )
    (preference preference2
      (exists (?m - hexagonal_bin ?b - (either yellow_cube_block dodgeball))
        (at-end
          (same_type floor ?b)
        )
      )
    )
  )
)
(:terminal
  (and
    (>= 5 5 )
    (> (external-forall-maximize 2 ) (count-once preference2:book) )
  )
)
(:scoring
  (count-once-per-objects preference2:pink)
)
)(define (game game-id-79) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (exists (?m - (either top_drawer pyramid_block) ?b - curved_wooden_ramp)
        (and
          (exists (?x - building)
            (and
              (game-conserved
                (forall (?i - golfball ?d - dodgeball ?f - (either yellow_cube_block golfball))
                  (not
                    (agent_holds ?x)
                  )
                )
              )
            )
          )
          (exists (?j - cube_block ?t - (either dodgeball cd) ?j - hexagonal_bin)
            (and
              (game-conserved
                (same_type ?j agent)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?s - triangular_ramp)
        (then
          (hold (not (and (in_motion ?s) ) ) )
          (once (on ?s ?s) )
          (once (touch ?s ?s) )
        )
      )
    )
  )
)
(:terminal
  (> 3 10 )
)
(:scoring
  (count preference1:yellow:pink)
)
)(define (game game-id-80) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (exists (?y - (either basketball red))
      (not
        (exists (?v - teddy_bear)
          (adjacent ?v agent)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?p - doggie_bed ?h - chair)
      (and
        (preference preference1
          (then
            (once (and (> 1 (distance door bed)) (not (and (agent_holds floor) (same_object desk ?h) ) ) ) )
            (hold (on ?h ?h) )
            (once (agent_holds ?h) )
          )
        )
      )
    )
    (preference preference2
      (exists (?y - (either triangular_ramp mug) ?g - dodgeball)
        (then
          (hold (not (agent_holds ?g) ) )
          (once-measure (in_motion ?g) (x_position ?g) )
          (hold (on ?g agent) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (count preference1:golfball) 10 )
    )
  )
)
(:scoring
  (* (and (external-forall-maximize 1 ) (total-time) (count-once preference1:hexagonal_bin) ) (count preference1:alarm_clock) )
)
)(define (game game-id-81) (:domain medium-objects-room-v1)
(:setup
  (forall (?y - hexagonal_bin)
    (exists (?m - doggie_bed)
      (and
        (or
          (game-optional
            (in_motion ?m)
          )
          (game-optional
            (exists (?z - block ?z - block)
              (agent_holds ?m)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?z - (either wall cylindrical_block))
        (then
          (once (touch right ?z) )
          (once (agent_holds ?z) )
          (once (and (not (exists (?q - curved_wooden_ramp) (and (and (and (and (and (in_motion ?z) (exists (?x - doggie_bed) (exists (?f ?c - cube_block) (agent_holds ?x) ) ) ) (adjacent ?q ?q) ) (forall (?d - teddy_bear ?p - (either watch doggie_bed)) (< 8 (distance front ?q)) ) (and (and (adjacent ?q ?z) (agent_holds desk) ) (in ?z ?q) ) (and (and (in_motion ?z) (and (on ?z ?z) (adjacent_side ?q ?z ?q ?z) ) (and (and (agent_holds ?q) (in_motion ?z) ) (exists (?y - pillow) (in ?z ?z) ) ) ) (not (broken desk) ) (not (same_color ?z ?z) ) ) ) (in_motion ?q) (not (and (< (distance ?q ?z) 9) (agent_holds ?q) ) ) ) (and (not (and (and (and (not (<= 9 (distance ?q ?q)) ) (is_setup_object ?z) (agent_holds ?z) ) (and (adjacent desk ?q) (= 1 (distance agent ?z)) ) ) (not (and (agent_holds ?q) (touch ?z ?z) (and (same_color rug ?q) (object_orientation ?z ?z) ) ) ) (not (on ?q ?q) ) ) ) (and (in_motion ?z) (agent_holds bed) (agent_crouches ) ) ) ) ) ) (on ?z ?z) ) )
        )
      )
    )
    (preference preference2
      (exists (?j - (either golfball pyramid_block))
        (then
          (once (agent_holds ?j) )
          (once (in_motion ?j) )
          (hold (in ?j ?j) )
        )
      )
    )
    (forall (?l - color)
      (and
        (preference preference3
          (exists (?r - golfball)
            (then
              (once (<= (distance ?r ?l) 3) )
              (once (and (in_motion ?r) (on west_wall bridge_block) ) )
              (once (not (agent_holds ?l) ) )
            )
          )
        )
        (preference preference4
          (exists (?a ?r - building)
            (then
              (once (not (and (and (and (not (agent_holds ?r) ) (not (and (exists (?d - flat_block ?i - game_object ?g - hexagonal_bin ?u - ball) (= 1 4) ) (faces agent bed) ) ) ) (on ?a pink) ) (on side_table ?a) ) ) )
              (once (in ?a ?l) )
              (once (and (and (agent_holds ?r) (agent_holds ?l) ) (in_motion agent) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (count preference2:alarm_clock) )
)
(:scoring
  (count-measure preference3:book)
)
)(define (game game-id-82) (:domain medium-objects-room-v1)
(:setup
  (exists (?h - curved_wooden_ramp)
    (exists (?d - game_object)
      (or
        (forall (?t - teddy_bear)
          (exists (?i - hexagonal_bin ?p - block)
            (and
              (forall (?v - hexagonal_bin)
                (game-conserved
                  (not
                    (> 1 (distance bottom_shelf ?d))
                  )
                )
              )
            )
          )
        )
        (exists (?e - building ?v - hexagonal_bin)
          (and
            (and
              (and
                (and
                  (not
                    (game-conserved
                      (and
                        (and
                          (agent_holds ?v)
                          (not
                            (agent_holds ?h)
                          )
                        )
                        (not
                          (in_motion agent)
                        )
                      )
                    )
                  )
                )
              )
            )
            (and
              (game-optional
                (adjacent ?h ?h)
              )
            )
            (game-optional
              (not
                (agent_holds ?d)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?m - (either beachball alarm_clock bridge_block) ?m - block)
      (and
        (preference preference1
          (exists (?p - (either credit_card pink basketball) ?g ?t ?s ?k - game_object)
            (at-end
              (and
                (and
                  (in_motion ?t)
                  (not
                    (not
                      (in_motion ?t)
                    )
                  )
                )
                (equal_z_position ?t ?m)
                (and
                  (and
                    (not
                      (agent_holds desk)
                    )
                    (and
                      (not
                        (touch rug ?g)
                      )
                    )
                  )
                  (not
                    (on ?t ?m)
                  )
                  (on ?m ?m)
                )
              )
            )
          )
        )
        (preference preference2
          (exists (?b - triangular_ramp)
            (at-end
              (agent_holds ?m)
            )
          )
        )
        (preference preference3
          (exists (?d - hexagonal_bin ?f - doggie_bed)
            (at-end
              (= 6 4)
            )
          )
        )
      )
    )
    (preference preference4
      (exists (?g - pyramid_block)
        (then
          (once (exists (?t - game_object) (in_motion ?t) ) )
          (hold (object_orientation ?g agent) )
          (once (same_color desk ?g) )
        )
      )
    )
    (preference preference5
      (exists (?l - curved_wooden_ramp)
        (then
          (once (<= 0.5 (distance ?l agent)) )
          (hold (adjacent ?l ?l) )
          (once (exists (?c - hexagonal_bin) (on agent ?c) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (+ 7 (* 8 )
      )
      (* (* (count preference3:green) 8 )
        8
      )
    )
    (>= (* 4 (* (count-same-positions preference3:bed:basketball) 10 )
        (* 18 (count-unique-positions preference4:green:golfball) )
        (count preference2:beachball)
        (count-total preference2:red_pyramid_block)
        (count-once-per-objects preference5:dodgeball)
      )
      (= (total-score) 3 )
    )
    (and
      (and
        (< (not 3 ) (count preference1:blue) )
        (or
          (>= (count preference4:book) (count-once-per-objects preference5:basketball:blue_pyramid_block:golfball) )
          (> (+ (+ (+ 8 2 )
                5
              )
              (* (count-overlapping preference2:yellow:basketball) (+ (count preference2:blue_pyramid_block) (count preference4:golfball:doggie_bed:dodgeball) (count preference3:dodgeball) )
              )
              (* (count preference1:basketball:dodgeball) 1 )
            )
            (* (+ 10 (count preference4:yellow) )
              (* 5 (- 5 )
              )
            )
          )
        )
      )
      (> (* (count preference5:beachball) (* (* (* 10 3 )
              (count-once-per-objects preference4:beachball)
            )
            (+ (count preference4:dodgeball:dodgeball) 2 (count preference2:dodgeball) (* 8 (* 30 (external-forall-maximize 3 ) )
                (* (count preference3:blue_dodgeball) (/ 3 9 ) 8 )
              )
              2
            )
          )
        )
        (external-forall-maximize
          (count-overlapping preference2:golfball)
        )
      )
    )
  )
)
(:scoring
  (* (count preference3:yellow:purple) (+ 2 (count preference2:basketball) )
  )
)
)(define (game game-id-83) (:domain medium-objects-room-v1)
(:setup
  (forall (?q - wall)
    (game-conserved
      (agent_holds rug)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?t - doggie_bed)
        (at-end
          (in_motion ?t)
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (+ 4 (count-once-per-objects preference1:doggie_bed) )
        (count preference1:dodgeball:top_drawer)
      )
      (and
        (or
          (not
            (>= (+ 1 4 2 )
              (+ 6 (* (* (count preference1:block) 3 )
                  (count-same-positions preference1:white:golfball)
                  (or
                    2
                    (count-once-per-objects preference1:beachball:pink:green)
                    (count-once-per-objects preference1:pink)
                  )
                )
              )
            )
          )
        )
      )
    )
    (and
      (and
        (>= (< 7 5 )
          (+ 10 (* (count-once-per-objects preference1:purple) 3 )
          )
        )
        (>= 1 (count preference1:book:beachball) )
        (>= (count-once preference1:green:tall_cylindrical_block) (>= (count-once-per-objects preference1:beachball) (total-score) )
        )
      )
      (> (external-forall-maximize (>= (external-forall-maximize (+ (- (count preference1:hexagonal_bin) )
                (* (+ (* 4 (count-once-per-objects preference1:yellow:dodgeball) )
                    (count preference1:doggie_bed)
                  )
                  (count preference1:yellow_cube_block:pink)
                )
              )
            )
            (count preference1:dodgeball)
          )
        )
        (+ (* (+ (* (* (+ (count preference1:beachball) )
                  (count-once-per-objects preference1:basketball)
                  (count preference1:dodgeball)
                )
                (* 3 )
              )
              3
            )
            (count-shortest preference1:red)
            (total-score)
            (count-once-per-objects preference1:pink_dodgeball:golfball)
            (count preference1:green)
            (total-score)
            (total-time)
            (count-once-per-objects preference1:doggie_bed)
            (count preference1:blue_dodgeball)
            (* (+ (count-once preference1:beachball:wall) 30 (* 4 (total-time) (count-shortest preference1:basketball:orange) )
              )
              (count preference1:hexagonal_bin)
            )
            3
            (* 6 (count preference1:tall_cylindrical_block) )
          )
          12
        )
      )
      (< (* (+ 3 (count preference1:red:hexagonal_bin) )
          (+ (count preference1:blue:doggie_bed) (* (* (* 20 2 )
                (* (* (* 4 (count-once-per-objects preference1:dodgeball:basketball) (external-forall-maximize (count preference1:pink_dodgeball) ) )
                    8
                  )
                  (+ 10 (* (not 10 ) (* (count-once-per-external-objects preference1:dodgeball:beachball) 30 )
                    )
                  )
                  1
                )
                20
                (count-once preference1:purple:hexagonal_bin)
                (* (count preference1:basketball) 4 )
                (count preference1:red_pyramid_block:beachball:green)
              )
              (count-once-per-objects preference1:dodgeball)
            )
          )
        )
        (* (total-time) 5 )
      )
    )
    (> (count-once-per-objects preference1:golfball) 2 )
  )
)
(:scoring
  (total-time)
)
)(define (game game-id-84) (:domain medium-objects-room-v1)
(:setup
  (exists (?d - pillow ?h ?n - dodgeball)
    (and
      (and
        (game-optional
          (exists (?d - shelf)
            (and
              (agent_holds ?n)
              (< 10 (distance ?d ?n))
            )
          )
        )
        (game-conserved
          (faces agent ?h)
        )
      )
      (and
        (forall (?v - ball)
          (and
            (exists (?y - chair)
              (game-optional
                (not
                  (in ?h desk)
                )
              )
            )
            (exists (?m - building)
              (and
                (game-conserved
                  (agent_holds ?h)
                )
                (forall (?c - hexagonal_bin ?g - teddy_bear)
                  (game-conserved
                    (and
                      (adjacent ?g ?g)
                      (not
                        (equal_z_position ?m ?m)
                      )
                    )
                  )
                )
              )
            )
            (or
              (and
                (not
                  (forall (?r ?e ?y - hexagonal_bin)
                    (exists (?t - hexagonal_bin)
                      (exists (?a - (either golfball bed pencil pen) ?z - wall ?l - shelf)
                        (exists (?x - hexagonal_bin ?p - beachball)
                          (exists (?u - doggie_bed)
                            (forall (?q - wall ?w - (either cd book pyramid_block))
                              (exists (?k - wall)
                                (exists (?i - game_object ?z - desktop)
                                  (game-optional
                                    (exists (?i - cube_block ?c - dodgeball)
                                      (and
                                        (and
                                          (adjacent_side ?n ?l bed ?u)
                                          (in_motion ?p)
                                        )
                                        (object_orientation agent ?r)
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
                (forall (?c - building)
                  (game-conserved
                    (in_motion ?c)
                  )
                )
              )
              (game-conserved
                (and
                  (touch pink ?n)
                  (not
                    (not
                      (agent_holds pink)
                    )
                  )
                )
              )
              (exists (?p - hexagonal_bin)
                (game-conserved
                  (and
                    (not
                      (on desk ?h)
                    )
                    (not
                      (> 7 (distance_side ?v bed ?v ?h))
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?r - ball ?q - chair)
        (then
          (hold (and (in_motion ?q) (in ?q ?q) ) )
          (once (same_color ?q ?q) )
          (once (agent_holds ?q) )
        )
      )
    )
  )
)
(:terminal
  (>= 8 0.7 )
)
(:scoring
  20
)
)(define (game game-id-85) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (exists (?n - triangular_ramp ?u - building)
      (or
        (on ?u ?u)
        (in ?u ?u)
      )
    )
  )
)
(:constraints
  (and
    (forall (?r - block)
      (and
        (preference preference1
          (exists (?m - curved_wooden_ramp)
            (then
              (once (in_motion ?r) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?h - dodgeball)
        (then
          (hold-to-end (agent_holds bed) )
          (hold-to-end (and (on ?h agent) (on ?h ?h) ) )
          (once (agent_holds ?h) )
        )
      )
    )
  )
)
(:terminal
  (> (count-total preference1:golfball) 3 )
)
(:scoring
  (count preference2:brown)
)
)(define (game game-id-86) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (exists (?c - hexagonal_bin ?z - hexagonal_bin)
      (agent_holds ?z)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?w - teddy_bear)
        (then
          (hold (agent_holds ?w) )
          (once (in_motion bed) )
          (once (= 2) )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (or (external-forall-maximize (+ (* (* (count preference1:doggie_bed:beachball) (count-longest preference1:beachball:blue_dodgeball) )
            (count-once-per-objects preference1:yellow)
          )
          (count-once-per-objects preference1:yellow)
        )
      )
    )
  )
)
(:scoring
  (- (total-time) )
)
)(define (game game-id-87) (:domain many-objects-room-v1)
(:setup
  (exists (?x - wall)
    (game-optional
      (in_motion ?x)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?j - curved_wooden_ramp)
        (then
          (hold (in ?j ?j) )
          (once (agent_holds desk) )
          (hold (agent_holds ?j) )
        )
      )
    )
    (preference preference2
      (exists (?f - bridge_block)
        (at-end
          (in_motion ?f)
        )
      )
    )
  )
)
(:terminal
  (< (* 3 (* 15 (* (count-once-per-objects preference1:alarm_clock) (+ (* (* (* 5 (count-once-per-objects preference1:basketball) (+ 3 (count-shortest preference1:golfball) )
                  (* (count preference2:tan:yellow) (count preference1:yellow) )
                )
                10
              )
              (+ 2 50 )
            )
            10
          )
          (or
            (+ (+ (* (* (count-once-per-objects preference2:dodgeball) (/ 5 (count preference2:red:book) ) )
                  100
                )
                (count-once-per-objects preference1:beachball)
                5
                3
              )
              (external-forall-minimize
                (count preference1:beachball)
              )
              (count-unique-positions preference2:purple)
              5
            )
          )
        )
        (count preference2:beachball)
        (+ (+ (* 20 (= (* 4 6 )
                (count-once preference2:yellow:blue_cube_block)
              )
            )
            3
            (* (* (count preference1:yellow) (count preference1:golfball) )
              (count-once-per-objects preference2:beachball)
            )
          )
          (count-longest preference2:book)
          (count preference1:pink_dodgeball)
        )
      )
    )
    (* (* (= (count-once-per-objects preference2:dodgeball:pink) )
        (count preference1:dodgeball)
        (count-once preference1:golfball)
        (count-once-per-objects preference1:dodgeball)
      )
      1
      6
      2
    )
  )
)
(:scoring
  (* (total-score) 3 )
)
)(define (game game-id-88) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-conserved
      (agent_holds agent)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?c - hexagonal_bin)
        (then
          (once (not (agent_holds bed) ) )
          (once (not (or (on ?c ?c) (on ?c ?c) (< (distance ?c ?c) (x_position ?c)) ) ) )
          (once (in room_center ?c) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (not
        (>= (count-once preference1:basketball:purple) 20 )
      )
      (> 3 (* (total-time) (= 10 5 )
        )
      )
    )
  )
)
(:scoring
  (<= 5 (* 30 (count-once-per-external-objects preference1:beachball) )
  )
)
)(define (game game-id-89) (:domain many-objects-room-v1)
(:setup
  (forall (?s - hexagonal_bin)
    (and
      (and
        (forall (?t - wall)
          (exists (?x - dodgeball)
            (exists (?y - game_object)
              (and
                (game-conserved
                  (and
                    (<= 4 1)
                    (and
                      (and
                        (not
                          (between front rug ?s)
                        )
                        (agent_holds rug)
                      )
                    )
                    (not
                      (equal_x_position ?s ?y)
                    )
                    (opposite ?t ?t)
                    (adjacent ?y ?s)
                  )
                )
              )
            )
          )
        )
        (and
          (game-optional
            (agent_holds ?s)
          )
          (and
            (exists (?v - block ?e - game_object ?v - hexagonal_bin)
              (and
                (and
                  (and
                    (game-optional
                      (not
                        (adjacent_side agent ?s ?s)
                      )
                    )
                    (game-optional
                      (in ?s ?v)
                    )
                  )
                )
              )
            )
          )
          (and
            (game-optional
              (adjacent ?s ?s)
            )
            (exists (?e - (either dodgeball blue_cube_block))
              (exists (?a - hexagonal_bin)
                (game-optional
                  (in ?s agent)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?s - hexagonal_bin)
        (then
          (hold (on ?s ?s) )
        )
      )
    )
  )
)
(:terminal
  (<= (count-once-per-objects preference1:dodgeball:dodgeball) (count preference1:dodgeball) )
)
(:scoring
  (* (- 16 )
    15
  )
)
)(define (game game-id-90) (:domain medium-objects-room-v1)
(:setup
  (exists (?k - hexagonal_bin)
    (forall (?x - cube_block ?s - building)
      (exists (?o - (either yellow_cube_block dodgeball))
        (exists (?n - game_object)
          (and
            (exists (?d - (either alarm_clock))
              (game-conserved
                (in_motion ?o)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?b - ball)
        (then
          (once (< 1 (distance agent ?b)) )
          (once (not (same_color ?b agent) ) )
          (any)
        )
      )
    )
  )
)
(:terminal
  (>= 18 (count preference1:beachball) )
)
(:scoring
  (<= (count preference1:basketball) (count preference1:orange) )
)
)(define (game game-id-91) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (forall (?k - ball ?m - block ?e - doggie_bed)
        (and
          (game-optional
            (and
              (or
                (not
                  (on ?e ?e)
                )
                (agent_holds ?e)
                (in_motion ?e)
              )
              (adjacent green_golfball ?e)
            )
          )
        )
      )
    )
    (exists (?c - red_dodgeball)
      (game-optional
        (and
          (above ?c ?c)
          (same_color ?c ?c)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?h) (agent_holds top_drawer) (and (not (in brown ?h) ) (not (agent_holds desk) ) ) (exists (?f ?z ?d ?p ?b - building) (agent_holds ?h) ) ) )
          (once (in_motion pink_dodgeball) )
          (once (in_motion ?h) )
        )
      )
    )
    (preference preference2
      (exists (?p - cylindrical_block ?h ?r ?b - teddy_bear)
        (then
          (hold-while (in_motion block) (not (agent_holds ?h) ) (and (agent_holds ?r) (and (not (agent_holds bed) ) (agent_holds ?h) ) ) (in_motion ?r) )
          (once (equal_z_position bed ?h) )
          (once (and (rug_color_under ?b ?b) (not (not (game_start ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (<= 4 (count-increasing-measure preference1:dodgeball) )
)
(:scoring
  100
)
)(define (game game-id-92) (:domain few-objects-room-v1)
(:setup
  (forall (?x - game_object)
    (game-conserved
      (in_motion ?x)
    )
  )
)
(:constraints
  (and
    (forall (?p - doggie_bed)
      (and
        (preference preference1
          (exists (?v - block)
            (at-end
              (agent_holds upright)
            )
          )
        )
        (preference preference2
          (exists (?j - hexagonal_bin)
            (then
              (hold (in_motion ?p) )
              (hold (in_motion ?j) )
              (once (and (touch ?p desk) (in_motion ?p) ) )
            )
          )
        )
        (preference preference3
          (exists (?j - (either book cd))
            (then
              (hold (and (and (not (in_motion ?p) ) (not (in_motion ?p) ) (agent_holds ?j) (in_motion ?j) ) (in_motion ?j) ) )
              (once (in ?p ?j) )
              (once (in_motion rug) )
            )
          )
        )
      )
    )
    (forall (?k - pillow)
      (and
        (preference preference4
          (exists (?e - hexagonal_bin ?b - curved_wooden_ramp ?f - dodgeball ?i - wall)
            (at-end
              (in ?i door)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 5 (/ (* 6 (count preference1:brown:golfball) )
        (- 3 )
      )
    )
  )
)
(:scoring
  (count-longest preference1:doggie_bed)
)
)(define (game game-id-93) (:domain many-objects-room-v1)
(:setup
  (exists (?c - cube_block)
    (game-optional
      (in ?c ?c)
    )
  )
)
(:constraints
  (and
    (forall (?a - dodgeball)
      (and
        (preference preference1
          (exists (?u - doggie_bed ?t - curved_wooden_ramp ?r - hexagonal_bin)
            (then
              (once (not (agent_holds ?r) ) )
              (once (above ?r ?r) )
              (hold (and (agent_holds ?a) (and (exists (?u - curved_wooden_ramp) (in_motion ?a) ) (not (equal_x_position upside_down ?r) ) ) ) )
            )
          )
        )
        (preference preference2
          (exists (?g - dodgeball ?q - curved_wooden_ramp ?q - dodgeball)
            (at-end
              (and
                (in_motion desk)
                (agent_holds ?q)
              )
            )
          )
        )
        (preference preference3
          (exists (?u ?o ?v - dodgeball)
            (then
              (once (not (agent_holds ?u) ) )
              (once (on desk ?v) )
              (once (in_motion ?o) )
            )
          )
        )
      )
    )
    (forall (?p - dodgeball)
      (and
        (preference preference4
          (exists (?l - chair)
            (then
              (once (and (adjacent ?p ?p) (agent_holds ?l) ) )
              (hold-while (and (in pink_dodgeball ?p) ) (touch ?l agent) )
              (once (in_motion ?l) )
            )
          )
        )
        (preference preference5
          (exists (?o - game_object ?r - (either cube_block pyramid_block cd))
            (then
              (once (in_motion rug) )
              (once (on green_golfball ?p) )
              (once (and (and (and (and (< 2 6) (in_motion room_center) (on ?r ?r) ) (not (or (in ?p door) (same_object ?r ?p) ) ) ) (object_orientation blue ?p) ) (in ?r ?p) ) )
            )
          )
        )
        (preference preference6
          (exists (?a - curved_wooden_ramp)
            (at-end
              (agent_holds ?p)
            )
          )
        )
      )
    )
    (preference preference7
      (exists (?l - (either laptop wall yellow))
        (then
          (once (not (and (adjacent ?l ?l) (in_motion room_center) ) ) )
          (hold (not (and (in_motion ?l) (in ?l room_center) ) ) )
          (hold (and (agent_holds ?l) (exists (?e - curved_wooden_ramp) (exists (?f - game_object) (and (adjacent ?e ?f) (and (in_motion floor) (on ?l ?f) ) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference3:red) (* 2 (+ (count-once-per-objects preference5:beachball) 5 )
      (count preference7:pink)
      (- 5 )
    )
  )
)
(:scoring
  (* (count-once-per-objects preference3:dodgeball) (count preference4:orange) )
)
)(define (game game-id-94) (:domain medium-objects-room-v1)
(:setup
  (exists (?x - teddy_bear ?c - dodgeball)
    (and
      (exists (?j - (either wall wall) ?z ?w - block)
        (and
          (game-conserved
            (adjacent_side ?w bed ?w)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?d - block ?s - game_object)
        (then
          (hold-while (in ?s ?s) (in ?s ?s) )
          (once (forall (?a - (either game_object laptop)) (not (not (agent_holds ?a) ) ) ) )
          (once (same_color ?s ?s) )
        )
      )
    )
    (preference preference2
      (exists (?j - ball ?u - (either key_chain main_light_switch triangular_ramp))
        (then
          (hold (exists (?p - block) (and (in_motion ?u) (in_motion ?p) (and (and (in ?p bed) (in_motion ?p) ) (in room_center ?p) ) ) ) )
          (once (not (agent_holds agent) ) )
          (once (not (in_motion bed) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference2:pink_dodgeball) 1 )
)
(:scoring
  (count-measure preference2:doggie_bed:yellow_cube_block:golfball)
)
)(define (game game-id-95) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (exists (?g - pillow ?u - ball ?z ?r - block)
        (game-conserved
          (not
            (not
              (agent_holds ?z)
            )
          )
        )
      )
      (and
        (exists (?f - hexagonal_bin)
          (game-optional
            (and
              (not
                (on ?f rug)
              )
              (agent_holds ?f)
              (not
                (adjacent_side desk ?f ?f ?f)
              )
            )
          )
        )
        (forall (?p - (either pink alarm_clock dodgeball alarm_clock) ?z - game_object)
          (or
            (exists (?j - ball ?g - (either dodgeball hexagonal_bin))
              (exists (?c - (either triangular_ramp) ?n - ball)
                (game-optional
                  (on ?g ?z)
                )
              )
            )
            (game-conserved
              (not
                (in ?z desk)
              )
            )
          )
        )
      )
    )
    (forall (?z - building)
      (forall (?f - hexagonal_bin)
        (game-optional
          (in_motion ?f)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?q - dodgeball)
        (then
          (hold-while (agent_holds ?q) (exists (?a - cube_block ?e - chair) (not (and (and (agent_holds ?e) (and (in_motion ?e) (and (agent_holds bed) (not (not (or (or (and (in_motion agent) (in ?e ?q) ) (touch ?e ?e) ) (adjacent agent ?e) ) ) ) ) ) ) (and (in_motion ?q) (in_motion ?q) ) ) ) ) (in_motion ?q) )
          (forall-sequence (?e - doggie_bed)
            (then
              (hold (in_motion ?q) )
              (once (agent_holds ?e) )
              (once (not (in ?q ?q) ) )
              (hold (not (and (in ?e desk) (faces ?e ?e) ) ) )
            )
          )
          (hold (agent_holds ?q) )
          (once (agent_holds ?q) )
        )
      )
    )
    (forall (?d - teddy_bear ?f - game_object)
      (and
        (preference preference2
          (exists (?y - hexagonal_bin ?x ?m - doggie_bed)
            (then
              (hold (and (agent_holds ?f) (adjacent ?f ?x) ) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?w - beachball ?l - triangular_ramp)
        (then
          (once (and (opposite ?l ?l) (in ?l ?l) ) )
          (hold-to-end (broken ?l) )
          (once (on ?l ?l) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 18 (* (count preference3:dodgeball) (count preference2:orange:dodgeball) )
      3
    )
    1
  )
)
(:scoring
  (* 5 (count preference1:pyramid_block:doggie_bed) )
)
)(define (game game-id-96) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?k - game_object)
      (and
        (exists (?c - hexagonal_bin ?p - building ?l - hexagonal_bin ?u - teddy_bear)
          (and
            (forall (?l - dodgeball)
              (game-conserved
                (and
                  (in_motion ?k)
                  (same_type ?u ?u)
                )
              )
            )
          )
        )
        (exists (?w - hexagonal_bin)
          (game-conserved
            (agent_holds room_center)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?f ?r ?q ?g ?w ?y - sliding_door ?u - hexagonal_bin ?j - dodgeball)
        (at-end
          (agent_holds desk)
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:basketball) (count-total preference1:tan) )
)
(:scoring
  (+ 4 (* (* (* (* (count preference1:red_pyramid_block:pink) (= 50 4 )
          )
          (count-longest preference1:book)
        )
        (count preference1:doggie_bed)
        (count preference1:basketball)
      )
      (+ (count preference1:pink_dodgeball:red) (count preference1:yellow) )
    )
  )
)
)(define (game game-id-97) (:domain few-objects-room-v1)
(:setup
  (exists (?m - block)
    (exists (?x - chair ?s - dodgeball ?h - (either game_object dodgeball))
      (and
        (game-conserved
          (on ?h ?m)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?v ?m ?f ?j ?a ?p - doggie_bed)
        (then
          (hold (not (in_motion ?a) ) )
          (hold (on ?v bed) )
          (hold (and (in agent agent) (in agent ?v) ) )
        )
      )
    )
  )
)
(:terminal
  (> (count preference1:blue_dodgeball) 5 )
)
(:scoring
  40
)
)(define (game game-id-98) (:domain few-objects-room-v1)
(:setup
  (forall (?i ?f ?w - (either blue_cube_block key_chain) ?x - hexagonal_bin)
    (and
      (forall (?b - cylindrical_block)
        (game-conserved
          (touch ?b ?x)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?l - dodgeball)
      (and
        (preference preference1
          (exists (?v - (either doggie_bed book) ?h ?g - dodgeball ?o - green_triangular_ramp)
            (then
              (hold (not (and (on rug ?l) (and (< (distance_side rug ?l ?o) (building_size ?o)) (touch bed ?o) ) ) ) )
              (once (agent_holds ?l) )
              (once (touch desk ?l) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (= (* (count preference1:basketball) (count preference1:basketball) )
      (* (count preference1:beachball:green) (* 3 (* (count preference1:blue) (count-once-per-objects preference1:golfball) )
        )
        (/
          (count-once preference1:pink)
          (total-score)
        )
        (count-once preference1:doggie_bed)
        (count preference1:beachball)
        (count-once-per-external-objects preference1:alarm_clock)
        (count preference1)
      )
    )
    (> (+ 300 (count-once-per-objects preference1:pyramid_block) 4 )
      6
    )
  )
)
(:scoring
  15
)
)(define (game game-id-99) (:domain few-objects-room-v1)
(:setup
  (exists (?o - ball)
    (game-optional
      (or
        (exists (?t - (either desktop cube_block key_chain))
          (not
            (agent_holds ?o)
          )
        )
        (not
          (agent_holds ?o)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?y - game_object)
        (then
          (once (not (touch ?y agent) ) )
          (hold (and (or (agent_holds ?y) (and (exists (?r - (either doggie_bed pyramid_block)) (not (agent_holds desk) ) ) ) (<= (distance ?y ?y) 2) ) (agent_holds ?y) ) )
          (hold-while (forall (?m - dodgeball ?n - doggie_bed) (touch room_center agent) ) (not (adjacent_side ?y desk ?y) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference1:yellow_pyramid_block) (count preference1:beachball) )
)
(:scoring
  (* (count preference1:orange) )
)
)(define (game game-id-100) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (in_motion agent)
  )
)
(:constraints
  (and
    (forall (?y - hexagonal_bin ?z - hexagonal_bin)
      (and
        (preference preference1
          (exists (?w - curved_wooden_ramp)
            (then
              (once (and (agent_holds rug) ) )
              (hold (exists (?o - (either dodgeball cube_block)) (> (distance rug ?o) (distance ?o ?z)) ) )
              (once (< (distance agent ?z) (distance ?w ?w)) )
            )
          )
        )
        (preference preference2
          (exists (?e - beachball)
            (then
              (once (and (in_motion ?z) (and (and (and (agent_holds ?z) (adjacent rug ?z) (agent_holds ?e) ) (on ?e rug) ) (equal_x_position ?e bed) (touch ?e ?z) ) ) )
              (once (on ?e room_center) )
              (once (not (and (exists (?x ?w ?g ?f ?a ?l ?u ?t ?b ?i - hexagonal_bin) (exists (?n - triangular_ramp) (and (< 1 (distance ?n ?u)) (agent_holds ?g) ) ) ) (adjacent ?e ?z) (and (and (and (agent_holds ?z) (on ?z block) (adjacent ?z ?e) (not (not (and (broken agent) (and (between ?z ?e ?z) (>= (distance ?z ?e) 1) ) ) ) ) ) (and (< (distance ?e agent) 1) (on ?z ?z) ) ) (and (adjacent back ?e) (agent_holds ?z) (not (and (agent_holds upright) (on ?z ?e) ) ) ) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (- (= (- (count-once-per-objects preference1:basketball) )
        (count-once-per-objects preference1:orange)
      )
    )
    (count-once-per-external-objects preference2:pink)
  )
)
(:scoring
  (external-forall-maximize
    (count preference2:rug)
  )
)
)(define (game game-id-101) (:domain medium-objects-room-v1)
(:setup
  (exists (?p - curved_wooden_ramp)
    (game-optional
      (and
        (agent_holds agent)
        (above ?p agent)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?e - game_object ?g - building)
        (then
          (once (in_motion room_center) )
        )
      )
    )
    (preference preference2
      (exists (?d - (either laptop credit_card))
        (then
          (once (agent_holds desk) )
          (hold (adjacent_side agent bed ?d) )
          (once (in_motion ?d) )
        )
      )
    )
    (preference preference3
      (exists (?j - chair)
        (then
          (once (and (and (in_motion ?j) (in_motion ?j) ) (same_object ?j ?j) ) )
          (hold (in_motion ?j) )
          (once (same_color ?j ?j) )
        )
      )
    )
    (preference preference4
      (exists (?f ?o ?m ?z ?s ?q - rug)
        (at-end
          (on door ?o)
        )
      )
    )
  )
)
(:terminal
  (>= (* (count-once preference3:red) (count-once preference2:hexagonal_bin) )
    (* (* 5 (count-once-per-objects preference4:green) )
      (count preference4:dodgeball)
    )
  )
)
(:scoring
  (* 5 (count preference1:alarm_clock) )
)
)(define (game game-id-102) (:domain many-objects-room-v1)
(:setup
  (exists (?h - game_object)
    (forall (?b - (either desktop cellphone))
      (game-conserved
        (same_type ?h ?b)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?w - chair)
        (at-end
          (on ?w ?w)
        )
      )
    )
    (preference preference2
      (exists (?k - hexagonal_bin)
        (then
          (hold (in ?k ?k) )
          (once (in_motion ?k) )
          (once (agent_holds ?k) )
        )
      )
    )
    (preference preference3
      (exists (?y ?q - hexagonal_bin)
        (then
          (once (in_motion ?q) )
          (once (toggled_on ?y) )
          (once (exists (?c - pillow) (same_color ?c ?y) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (count-once-per-objects preference1:dodgeball) )
)
(:scoring
  (count-once-per-objects preference2:block)
)
)(define (game game-id-103) (:domain few-objects-room-v1)
(:setup
  (exists (?o - (either wall cd))
    (game-optional
      (and
        (on ?o agent)
      )
    )
  )
)
(:constraints
  (and
    (forall (?e - chair)
      (and
        (preference preference1
          (exists (?k - dodgeball)
            (at-end
              (and
                (exists (?s - cube_block ?u ?b - blue_cube_block)
                  (in door ?b)
                )
                (same_color agent front)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once preference1:yellow:red) (* (+ (count-same-positions preference1:basketball) 2 )
      1
    )
  )
)
(:scoring
  15
)
)(define (game game-id-104) (:domain few-objects-room-v1)
(:setup
  (exists (?j - blue_pyramid_block)
    (game-conserved
      (agent_holds ?j)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?m - hexagonal_bin)
        (then
          (hold-while (toggled_on ?m) (not (and (touch green_golfball ?m) (agent_holds room_center) ) ) )
          (once (exists (?t - game_object) (and (and (and (agent_holds ?t) (and (and (not (not (in_motion agent) ) ) (on ?t pink_dodgeball) (agent_holds ?t) ) (and (adjacent pink_dodgeball ?m) (adjacent ?t upright) ) ) (not (touch ?m ?m) ) ) (and (not (= (distance ?m ?m) 0.5) ) ) (in ?t ?t) ) (game_start ) ) ) )
          (hold (and (in ?m ?m) (forall (?h - bridge_block ?p - blue_cube_block ?j ?b - chair) (> 8 (distance ?j ?j)) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (count-once preference1:brown) 20 )
      (>= (count-same-positions preference1:blue_cube_block) (+ (* (* 2 4 )
            5
          )
          (+ (count preference1:red) 5 )
        )
      )
      (= 10 (* (count preference1:dodgeball) 6 )
      )
    )
    (or
      (<= (count-once preference1:yellow:dodgeball) (count preference1:beachball:dodgeball) )
      (>= (count-once-per-objects preference1:yellow) 3 )
    )
  )
)
(:scoring
  7
)
)(define (game game-id-105) (:domain few-objects-room-v1)
(:setup
  (exists (?o - dodgeball ?p - hexagonal_bin ?g - block)
    (and
      (game-conserved
        (between room_center ?g desk)
      )
      (exists (?f ?l - ball ?n - hexagonal_bin)
        (forall (?t - teddy_bear)
          (game-conserved
            (in_motion ?g)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?g - hexagonal_bin)
      (and
        (preference preference1
          (exists (?e ?k - dodgeball)
            (then
              (once (agent_holds ?g) )
              (once (not (agent_holds ?k) ) )
              (hold-while (agent_holds ?k) (and (adjacent_side ?k desk ?k) (touch ?e ?g) ) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?i - hexagonal_bin ?f - pillow)
        (then
          (once (not (in_motion ?f) ) )
          (once (touch desk ?f) )
          (once (> 1 (distance rug ?f)) )
        )
      )
    )
    (preference preference3
      (exists (?e - hexagonal_bin ?g - cube_block ?s - hexagonal_bin)
        (then
          (once (agent_holds ?s) )
          (hold-while (and (on ?s desk) (and (not (forall (?r - (either mug chair) ?b - hexagonal_bin) (and (in desk ?b) (in_motion ?b) (agent_holds ?s) ) ) ) (not (< (distance ?s ?s) 1) ) ) (agent_holds ?s) (in_motion ?s) (not (agent_holds ?s) ) (< (distance upside_down ?s) 1) (agent_holds ?s) (and (not (in_motion desk) ) (same_type ?s ?s) ) (not (on ?s ?s) ) (agent_holds ?s) ) (in_motion ?s) (in_motion ?s) (adjacent ?s right) )
          (hold (not (in ?s ?s) ) )
          (once (and (in_motion pink_dodgeball) (in_motion ?s) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 3 40 )
)
(:scoring
  3
)
)(define (game game-id-106) (:domain medium-objects-room-v1)
(:setup
  (not
    (and
      (exists (?y - dodgeball)
        (game-conserved
          (object_orientation ?y ?y)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?r - game_object)
        (then
          (hold (same_type door ?r) )
          (once (agent_holds ?r) )
          (hold-for 3 (on desk ?r) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (or
        (and
          (or
            (>= (* (- (* (count-shortest preference1:dodgeball:basketball) (+ 10 (- (* (* (count-unique-positions preference1) 1 )
                          (* (* (count-overlapping preference1:dodgeball:cube_block) (* (- 2 )
                                (/
                                  (- 10 )
                                  8
                                )
                              )
                            )
                            3
                            (count preference1:doggie_bed)
                            (* 2 (count preference1:yellow) (- 10 )
                            )
                            (count preference1:pink)
                            4
                          )
                          2
                        )
                        (+ 7 (count preference1:blue_pyramid_block) (* (count-once-per-objects preference1:alarm_clock) (count preference1:red) )
                        )
                      )
                    )
                  )
                )
                2
                (count-once-per-objects preference1:beachball:rug)
                (* 1 (count preference1:dodgeball:yellow) )
                (count preference1:basketball)
                2
              )
              (count-once-per-objects preference1:beachball)
            )
            (or
              (>= (count preference1:pink_dodgeball:doggie_bed) (count preference1:pink_dodgeball) )
              (or
                (>= (* (count-shortest preference1:book:basketball) (+ 50 (and (= (count preference1:pink_dodgeball) (+ 10 5 )
                        )
                        (* (count-once-per-objects preference1:pyramid_block) )
                      )
                    )
                  )
                  (* (+ (* (count-once-per-objects preference1:dodgeball) (count-once-per-objects preference1:white) )
                      (count-unique-positions preference1)
                    )
                    (count preference1)
                    (count-once preference1:beachball:yellow)
                    (count preference1:dodgeball)
                    5
                    (+ (count-once-per-objects preference1:red) 10 )
                  )
                )
                (<= (count preference1:pink) 3 )
              )
            )
          )
          (> (count preference1:pink) (* 2 2 )
          )
          (or
            (= 10 (< 100 (* (* (<= (count preference1:purple) 8 )
                    (count preference1:basketball)
                  )
                  3
                )
              )
            )
            (>= 5 (count-once-per-external-objects preference1:alarm_clock) )
            (or
              (>= (count-once-per-objects preference1:basketball) (+ (> (* (count preference1:dodgeball) 10 )
                    (count preference1:yellow:book)
                  )
                )
              )
              (not
                (> (count preference1:beachball:basketball) (not (* (count-once preference1:green) (total-score) 2 )
                  )
                )
              )
            )
          )
        )
        (and
          (> (count preference1:top_drawer) 1 )
        )
        (<= (* (count preference1:yellow:wall) (count-once-per-external-objects preference1:yellow) )
          (count-once-per-objects preference1:blue_dodgeball)
        )
        (>= 15 (= 6 7 (* (* 10 10 )
              (count preference1:yellow)
            )
          )
        )
      )
    )
    (= (count preference1:purple:alarm_clock) (total-time) )
  )
)
(:scoring
  (count-measure preference1:beachball)
)
)(define (game game-id-107) (:domain few-objects-room-v1)
(:setup
  (not
    (exists (?a - ball ?q - block ?i ?s - hexagonal_bin ?u - block)
      (game-conserved
        (on ?u ?u)
      )
    )
  )
)
(:constraints
  (and
    (forall (?l - teddy_bear)
      (and
        (preference preference1
          (exists (?s - hexagonal_bin ?y - ball)
            (then
              (hold (and (or (not (agent_holds ?l) ) (agent_holds ?l) ) (in_motion block) (in ?l ?l) (forall (?x - wall) (agent_holds agent) ) ) )
              (hold (and (same_type agent ?l) (equal_z_position ?y ?l) ) )
              (once-measure (same_object ?l ?y) (distance ?l pink_dodgeball) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= (* (- (count preference1:golfball) )
      6
    )
    (count-once-per-external-objects preference1:golfball)
  )
)
(:scoring
  (+ (+ (count-increasing-measure preference1:book) (* (not (* (count preference1:cylindrical_block) 30 )
        )
        (total-score)
      )
    )
    (count-longest preference1:doggie_bed:pink)
  )
)
)(define (game game-id-108) (:domain many-objects-room-v1)
(:setup
  (exists (?m - game_object)
    (game-conserved
      (agent_holds ?m)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?l - dodgeball)
        (at-end
          (not
            (not
              (not
                (on ?l ?l)
              )
            )
          )
        )
      )
    )
    (forall (?p ?r - pyramid_block ?h - dodgeball)
      (and
        (preference preference2
          (then
            (once (adjacent_side ?h agent ?h) )
            (once (agent_holds yellow) )
            (once (in_motion ?h) )
          )
        )
        (preference preference3
          (then
            (hold-to-end (broken ?h) )
            (once (same_color ?h ?h) )
            (hold (adjacent ?h ?h) )
          )
        )
        (preference preference4
          (then
            (once (in_motion desktop) )
            (hold-while (agent_holds ?h) (not (or (agent_holds ?h) (adjacent ?h ?h) (not (open ?h) ) ) ) (exists (?l - ball ?o - hexagonal_bin ?t - dodgeball) (not (not (not (agent_holds ?t) ) ) ) ) )
            (hold (agent_holds ?h) )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference3:basketball) (* (* 3 7 )
      3
    )
  )
)
(:scoring
  (count preference1:pink:golfball)
)
)(define (game game-id-109) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?t - color)
      (exists (?m - hexagonal_bin)
        (not
          (game-conserved
            (same_color ?m ?t)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?l - ball)
        (then
          (once (or (in_motion desk) (touch desk front) ) )
          (once (in_motion ?l) )
          (hold (on desk rug) )
        )
      )
    )
  )
)
(:terminal
  (not
    (<= (count preference1:hexagonal_bin:yellow) (count preference1:blue_dodgeball) )
  )
)
(:scoring
  8
)
)(define (game game-id-110) (:domain many-objects-room-v1)
(:setup
  (exists (?h - shelf)
    (exists (?r - hexagonal_bin ?s - beachball)
      (exists (?y - pillow)
        (and
          (game-optional
            (above door agent)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?r - (either hexagonal_bin pyramid_block ball) ?c - yellow_pyramid_block)
        (at-end
          (and
            (in_motion agent)
            (agent_holds ?c)
            (on ?c ?c)
            (and
              (and
                (between ?c ?c ?c)
                (and
                  (in agent desk)
                  (agent_holds ?c)
                )
                (not
                  (exists (?h - cube_block)
                    (and
                      (and
                        (equal_z_position ?h ?c)
                        (< 4 (distance ?c ?c))
                      )
                      (and
                        (not
                          (agent_holds ?c)
                        )
                        (and
                          (adjacent ?h ?h)
                          (not
                            (and
                              (< 1 1)
                              (in_motion ?h)
                            )
                          )
                        )
                        (> (distance desk ?c) (distance front ?h))
                      )
                      (and
                        (on ?c ?c)
                        (and
                          (agent_holds ?c)
                          (touch ?c door)
                        )
                      )
                      (and
                        (and
                          (adjacent ?h ?h)
                          (and
                            (in ?h ?h)
                            (agent_crouches )
                          )
                          (is_setup_object ?h)
                          (not
                            (in_motion ?h)
                          )
                          (agent_holds ?c)
                          (in_motion ?h)
                          (and
                            (agent_holds ?h)
                            (on ?c ?c)
                          )
                          (in ?c ?c)
                        )
                        (in_motion ?c)
                      )
                      (in ?h ?c)
                      (agent_holds ?c)
                      (> (distance_side bed ?c ?c) (distance ?h ?c))
                      (faces desk desk)
                    )
                  )
                )
                (and
                  (and
                    (in ?c ?c)
                    (touch agent ?c)
                  )
                  (and
                    (toggled_on agent)
                    (in_motion ?c)
                  )
                )
                (and
                  (agent_holds ?c)
                  (and
                    (same_color ?c ?c)
                    (same_type ?c ?c)
                  )
                )
                (or
                  (agent_holds green_golfball)
                  (not
                    (is_setup_object ?c)
                  )
                )
                (adjacent ?c ?c)
                (agent_holds main_light_switch)
                (in_motion ?c)
                (toggled_on rug)
              )
              (and
                (in_motion pink_dodgeball)
                (in desk ?c)
              )
              (above ?c ?c)
              (not
                (in ?c ?c)
              )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?b - dodgeball)
        (then
          (hold-while (not (not (and (same_color upright side_table) (agent_holds ?b) ) ) ) (not (in_motion bed) ) )
          (hold-while (not (= 3) ) (or (agent_holds ?b) (agent_holds ?b) ) )
          (hold (not (in_motion ?b) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count preference1:beachball) (+ 4 (count-unique-positions preference2:dodgeball) )
    )
    (* (+ 4 (count preference1:rug) )
      3
    )
  )
)
(:scoring
  10
)
)(define (game game-id-111) (:domain medium-objects-room-v1)
(:setup
  (forall (?w - block)
    (and
      (game-conserved
        (agent_holds ?w)
      )
      (exists (?q ?i - building)
        (exists (?g - desk_shelf)
          (forall (?t - wall ?a - hexagonal_bin)
            (exists (?x - sliding_door)
              (and
                (game-optional
                  (in_motion ?i)
                )
                (game-conserved
                  (exists (?l - (either dodgeball top_drawer pillow) ?c - ball)
                    (on ?g ?a)
                  )
                )
              )
            )
          )
        )
      )
      (exists (?v ?g - dodgeball ?p - cube_block)
        (exists (?b - (either pen doggie_bed watch) ?u - (either golfball yellow_cube_block basketball))
          (game-optional
            (agent_holds ?p)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?l - doggie_bed ?p - block)
        (then
          (once (game_over ) )
          (hold-while (in_motion agent) (not (in ?p desk) ) )
          (hold (in_motion ?p) )
        )
      )
    )
  )
)
(:terminal
  (or
    (not
      (or
        (>= (count-longest preference1:blue_cube_block) (* 100 (* 2 (count-once-per-objects preference1:pink:doggie_bed) )
          )
        )
        (>= (count preference1:hexagonal_bin) (count preference1:blue_dodgeball) )
      )
    )
  )
)
(:scoring
  (* 5 (* (and (- (total-score) )
        10
        (count preference1:dodgeball:blue_pyramid_block:hexagonal_bin)
      )
      4
      10
      (count-overlapping preference1:beachball)
    )
  )
)
)(define (game game-id-112) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?k ?g - curved_wooden_ramp)
      (game-optional
        (agent_holds ?k)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?u - triangular_ramp)
        (then
          (once (not (and (not (not (not (< (distance agent ?u) (distance ?u ?u)) ) ) ) (or (on ?u ?u) (and (and (not (adjacent ?u ?u) ) (on ?u ?u) (< 0.5 (distance room_center ?u)) (not (on ?u sideways) ) (in_motion ?u) (and (not (and (in_motion ?u) (exists (?f - building) (not (not (agent_holds ?f) ) ) ) ) ) (on ?u ?u) ) (on ?u ?u) ) (above ?u desk) ) ) ) ) )
          (hold (same_object ?u room_center) )
          (once (or (and (in ?u ?u) (agent_holds ?u) (same_color ?u side_table) (not (and (and (in ?u ?u) (in_motion ?u) (in ?u ?u) (on ?u ?u) ) (agent_holds ?u) ) ) (on top_shelf rug) (not (and (exists (?j - (either curved_wooden_ramp hexagonal_bin golfball wall)) (exists (?z - triangular_ramp) (in_motion ?j) ) ) (in_motion ?u) (agent_holds ?u) (equal_x_position ?u room_center) ) ) ) (on ?u ?u) (agent_holds ?u) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (count-once-per-objects preference1:pink) (count-once preference1:blue_dodgeball:pink_dodgeball) )
      (<= 5 3 )
      (>= (count-once-per-external-objects preference1:pink) (count preference1:pink:white) )
    )
    (or
      (>= 10 (- (count preference1:pink) )
      )
      (>= (count-once preference1:yellow_cube_block) 5 )
    )
    (>= (count preference1:yellow) 2 )
  )
)
(:scoring
  50
)
)(define (game game-id-113) (:domain medium-objects-room-v1)
(:setup
  (exists (?h - color ?m - ball)
    (game-optional
      (and
        (and
          (agent_holds ?m)
          (adjacent ?m ?m)
        )
        (and
          (between ?m ?m ?m)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?p - chair ?o ?y - hexagonal_bin ?m ?k ?t ?q ?r - hexagonal_bin)
        (then
          (once (in_motion ?r) )
          (once (forall (?x - (either game_object tall_cylindrical_block)) (equal_z_position rug ?x) ) )
          (once (on ?r ?k) )
        )
      )
    )
  )
)
(:terminal
  (and
    (> 5 (count-once-per-external-objects preference1:blue:pink) )
    (>= 5 4 )
    (< (count preference1:basketball:yellow) (count preference1:beachball) )
  )
)
(:scoring
  (- (count-once-per-objects preference1:golfball) )
)
)(define (game game-id-114) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (and
      (forall (?z - (either chair alarm_clock))
        (faces room_center ?z)
      )
      (not
        (in_motion bed)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?d - doggie_bed)
        (then
          (once (in_motion ?d) )
          (once (on ?d ?d) )
          (hold (agent_holds ?d) )
        )
      )
    )
    (forall (?n - dodgeball)
      (and
        (preference preference2
          (exists (?z - shelf ?c - (either hexagonal_bin pen))
            (then
              (once-measure (not (and (in_motion ?n) (and (and (adjacent back ?n) (in_motion ?n) ) (on agent front) (in_motion bed) (touch bed ?n) (agent_holds ?n) (above ?c top_shelf) ) ) ) (building_size ?n) )
              (once (and (in_motion ?c) (in_motion ?n) ) )
              (once (on ?c ?n) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (<= (+ (count preference2:orange) (* (* 2 (* (count preference1:beachball) (= (not 30 ) )
            )
          )
          (count-once-per-objects preference2:orange:dodgeball)
        )
        (count preference1:white)
        (count-once-per-objects preference2:cube_block)
        (count-increasing-measure preference1:golfball)
        (count preference2:hexagonal_bin)
      )
      (count-overlapping preference2:blue_pyramid_block:dodgeball:book)
    )
  )
)
(:scoring
  (= 2 2 )
)
)(define (game game-id-115) (:domain many-objects-room-v1)
(:setup
  (forall (?l - building)
    (and
      (forall (?x - block)
        (exists (?r - hexagonal_bin ?a - game_object ?t - (either yellow_cube_block cellphone basketball bridge_block))
          (exists (?n ?b ?k - dodgeball)
            (forall (?f - (either main_light_switch pyramid_block))
              (game-conserved
                (and
                  (or
                    (touch ?b ?f)
                    (on ?t ?l)
                    (in ?k ?k)
                  )
                  (not
                    (agent_holds ?f)
                  )
                  (in_motion ?n)
                )
              )
            )
          )
        )
      )
      (forall (?a - building)
        (game-optional
          (in_motion ?l)
        )
      )
      (and
        (game-conserved
          (not
            (in_motion bed)
          )
        )
        (game-optional
          (not
            (not
              (agent_holds ?l)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?v - (either bridge_block dodgeball) ?i - dodgeball)
        (at-end
          (agent_holds ?i)
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (> 6 (+ (count-increasing-measure preference1:dodgeball) (count preference1:yellow) )
      )
      (or
        (or
          (or
            (> 30 6 )
            (>= (count preference1:green) 3 )
          )
          (> (* (count-once-per-objects preference1:pink) 3 )
            (+ 4 (count-once-per-objects preference1:basketball) )
          )
          (>= (external-forall-maximize (* (* (* (* (- 2 )
                      (+ 3 (external-forall-maximize 2 ) (+ 3 (* (= (count preference1:hexagonal_bin) (count preference1:dodgeball) )
                            3
                            10
                          )
                        )
                      )
                    )
                    (count preference1:golfball)
                  )
                )
                (total-score)
              )
            )
            (count-once-per-objects preference1:golfball)
          )
        )
        (not
          (or
            (or
              (>= (count-once-per-external-objects preference1:orange) (* (count preference1:yellow) (+ 6 (- 1 )
                  )
                )
              )
              (or
                (>= (count-once-per-external-objects preference1:dodgeball) (count-once-per-objects preference1:dodgeball:blue:pink) )
                (> (count-once-per-objects preference1:dodgeball:golfball) 2 )
                (not
                  (or
                    (> 5 (* (* 50 4 )
                        (* 10 (count-longest preference1:tall_cylindrical_block:dodgeball) )
                      )
                    )
                    (>= 2 (* (external-forall-maximize (+ (external-forall-maximize (* 6 (count-once-per-objects preference1:orange) )
                            )
                            (count preference1:hexagonal_bin)
                          )
                        )
                        (count-once-per-objects preference1:yellow)
                      )
                    )
                    (> (count-once-per-objects preference1:pink_dodgeball) 5 )
                  )
                )
              )
              (>= (* (* (+ (count preference1:dodgeball:pyramid_block) (count-once-per-objects preference1:beachball) )
                    (count preference1:beachball)
                  )
                  4
                )
                (* (total-time) (count preference1:yellow:dodgeball) 2 6 5 (count preference1:blue_dodgeball:dodgeball) )
              )
            )
            (= 2 8 )
          )
        )
      )
    )
    (<= (count-once-per-objects preference1:dodgeball) (* (* (count preference1:yellow) (count preference1:orange) )
        5
      )
    )
  )
)
(:scoring
  (count-once-per-objects preference1)
)
)(define (game game-id-116) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?c - building ?a - (either dodgeball triangle_block))
      (forall (?s - dodgeball ?c - doggie_bed)
        (and
          (game-optional
            (equal_z_position ?c agent)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?d - (either bridge_block cube_block book))
        (at-end
          (adjacent ?d back)
        )
      )
    )
    (forall (?b - (either hexagonal_bin rug))
      (and
        (preference preference2
          (exists (?e - hexagonal_bin)
            (at-end
              (same_object ?e agent)
            )
          )
        )
      )
    )
    (forall (?q - ball)
      (and
        (preference preference3
          (exists (?n - block ?r - dodgeball)
            (then
              (once (agent_holds ?r) )
              (once (and (in_motion ?r) (not (agent_holds ?r) ) ) )
              (hold (forall (?h - dodgeball ?z - chair) (not (not (agent_holds ?r) ) ) ) )
            )
          )
        )
      )
    )
    (preference preference4
      (exists (?e - (either side_table lamp))
        (then
          (hold-while (not (not (agent_holds ?e) ) ) (touch agent ?e) )
          (forall-sequence (?r - chair)
            (then
              (once (not (not (not (faces ?r ?r) ) ) ) )
              (once (on ?e ?e) )
              (hold (equal_x_position ?e brown) )
            )
          )
          (once (not (equal_z_position ?e ?e) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-total preference2:book:white) 2 )
    (>= (count-overlapping preference4:dodgeball) (count-once-per-objects preference1:beachball:blue_pyramid_block) )
  )
)
(:scoring
  5
)
)(define (game game-id-117) (:domain many-objects-room-v1)
(:setup
  (forall (?l - curved_wooden_ramp ?k - chair)
    (exists (?m ?d - game_object ?g - building)
      (game-conserved
        (on ?k floor)
      )
    )
  )
)
(:constraints
  (and
    (forall (?u - game_object)
      (and
        (preference preference1
          (exists (?s - chair)
            (then
              (once (and (in_motion ?u) (and (same_color ?s ?s) (and (toggled_on agent) (in_motion ?u) (not (not (in_motion ?u) ) ) (between ?u ?u ?s) (and (on ?s ?s) (not (touch ?s ?u) ) ) (= 1 2) (opposite ?s ?s) ) ) ) )
              (once (and (not (in south_west_corner ?s) ) (in_motion ?s) ) )
              (once (agent_holds ?s) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* 30 (count-longest preference1:cube_block) )
    (count preference1:basketball)
  )
)
(:scoring
  (count preference1:top_drawer:purple)
)
)(define (game game-id-118) (:domain few-objects-room-v1)
(:setup
  (exists (?u - dodgeball)
    (forall (?x - (either basketball yellow red))
      (and
        (exists (?j - beachball)
          (and
            (game-optional
              (not
                (agent_holds desk)
              )
            )
          )
        )
        (game-optional
          (and
            (or
              (< 1 (distance ?x ?x))
              (not
                (agent_holds ?u)
              )
            )
            (agent_holds door)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?u - triangular_ramp ?e - triangular_ramp)
        (then
          (once (agent_holds ?e) )
          (once (and (agent_holds ?e) (not (and (in ?e ?e) ) ) ) )
          (hold (toggled_on ?e) )
        )
      )
    )
    (preference preference2
      (exists (?k - (either doggie_bed basketball))
        (then
          (once (not (and (same_color ?k ?k) (or (same_object ?k ?k) (same_color ?k ?k) ) ) ) )
          (once (on ?k ?k) )
          (once (agent_holds desk) )
        )
      )
    )
  )
)
(:terminal
  (= (* (total-score) (* 10 (>= (count-once-per-objects preference1:purple:red_pyramid_block) (* (+ (total-score) 2 )
            (+ 8 (* 180 (count-once-per-objects preference1:book) )
              (count preference2:alarm_clock)
            )
          )
        )
      )
      (count-once-per-objects preference1:bed)
      (count preference2:dodgeball)
      5
      (count-same-positions preference2:dodgeball)
    )
    18
  )
)
(:scoring
  (* (count-once-per-objects preference2:yellow:basketball) (* (count preference2:dodgeball) (+ 6 (count-same-positions preference2:purple) )
    )
  )
)
)(define (game game-id-119) (:domain many-objects-room-v1)
(:setup
  (exists (?z - hexagonal_bin)
    (forall (?c - dodgeball)
      (game-conserved
        (touch bed ?c)
      )
    )
  )
)
(:constraints
  (and
    (forall (?j - hexagonal_bin)
      (and
        (preference preference1
          (exists (?g - doggie_bed ?g - game_object)
            (at-end
              (not
                (and
                  (not
                    (in_motion ?j)
                  )
                  (agent_holds pink_dodgeball)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:tan:green) (count-once preference1:beachball:basketball) )
)
(:scoring
  (count-once-per-external-objects preference1)
)
)(define (game game-id-120) (:domain medium-objects-room-v1)
(:setup
  (forall (?j - shelf)
    (game-optional
      (agent_holds ?j)
    )
  )
)
(:constraints
  (and
    (forall (?i - desktop)
      (and
        (preference preference1
          (then
            (once (agent_holds ?i) )
            (hold-while (equal_x_position ?i ?i) (touch ?i ?i) )
            (once (and (rug_color_under ?i agent) (on ?i ?i) ) )
          )
        )
      )
    )
  )
)
(:terminal
  (<= (count preference1:dodgeball) (* 6 (count preference1:dodgeball) )
  )
)
(:scoring
  (count-once-per-objects preference1:dodgeball)
)
)(define (game game-id-121) (:domain few-objects-room-v1)
(:setup
  (exists (?r - game_object ?m ?q - dodgeball)
    (and
      (game-conserved
        (on ?q ?m)
      )
      (game-conserved
        (adjacent ?m ?q)
      )
      (and
        (and
          (or
            (and
              (game-conserved
                (and
                  (same_color ?q front)
                  (in_motion ?q)
                )
              )
              (game-conserved
                (touch ?q room_center)
              )
              (game-conserved
                (in ?m ?m)
              )
            )
            (game-conserved
              (not
                (on ?q ?m)
              )
            )
          )
          (exists (?r ?k - hexagonal_bin)
            (forall (?y - (either basketball cellphone))
              (forall (?x - hexagonal_bin)
                (exists (?h - curved_wooden_ramp)
                  (exists (?g - (either doggie_bed beachball pillow teddy_bear pyramid_block dodgeball doggie_bed) ?a - cube_block)
                    (game-conserved
                      (in_motion ?q)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?f - hexagonal_bin ?y - dodgeball)
      (and
        (preference preference1
          (exists (?h - block)
            (then
              (hold (>= (distance_side ?y door ?y ?y) (x_position ?y)) )
              (hold (or (exists (?q - tan_cube_block) (in_motion ?y) ) ) )
              (hold (and (and (exists (?q - (either alarm_clock book pencil golfball) ?w ?q - hexagonal_bin ?a - (either desktop golfball)) (agent_holds ?a) ) (not (and (equal_x_position ?h ?y) ) ) ) (and (and (and (and (agent_crouches ) (< (distance agent ?y) (distance agent ?y)) ) (and (and (and (and (not (and (and (not (and (agent_holds agent) (< (distance bed ?h) 1) ) ) (not (not (and (not (or (in_motion desk) (not (not (and (not (between ?h ?h ?h) ) (= (distance ?y ?y) (distance ?h agent)) ) ) ) (and (agent_holds ?y) (on ?h ?y) ) ) ) (in_motion bed) ) ) ) ) (or (in_motion ?y) (agent_holds ?y) ) ) ) (< (distance_side ?y ?y ?h) (distance ?y ?h)) ) (equal_x_position ?y room_center) ) (or (and (on green upright) (equal_x_position ?y ?y) ) (and (in ?y ?y) (not (and (in_motion rug) (not (agent_holds ?y) ) (in_motion ?y) ) ) ) ) ) (forall (?o - dodgeball ?t - (either cd blue_cube_block)) (not (or (agent_holds ?t) (not (not (not (not (touch ?y ?y) ) ) ) ) ) ) ) ) ) (not (agent_holds ?h) ) (not (and (touch ?h room_center) (is_setup_object ?y) ) ) ) (< (distance ?y ?y) (distance ?h ?h)) ) (not (in pink_dodgeball ?h) ) (on ?y ?h) ) )
            )
          )
        )
        (preference preference2
          (exists (?s - hexagonal_bin)
            (then
              (once (agent_holds ?y) )
              (hold (equal_z_position ?y desk) )
              (once (in_motion ?y) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (= (count-once preference1:dodgeball:orange) (- (count preference1:doggie_bed) )
  )
)
(:scoring
  10
)
)(define (game game-id-122) (:domain few-objects-room-v1)
(:setup
  (and
    (game-optional
      (not
        (agent_holds agent)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?g - ball ?s - golfball)
        (then
          (once (not (on agent ?s) ) )
          (hold (on ?s ?s) )
          (hold (in rug ?s) )
        )
      )
    )
    (forall (?e - dodgeball ?g - cube_block)
      (and
        (preference preference2
          (exists (?z - doggie_bed)
            (then
              (once (and (agent_holds ?g) (< 1 1) (game_start ) ) )
              (once (= 1 (distance ?z ?g)) )
              (hold (in_motion ?z) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (+ 10 (count-increasing-measure preference2) )
  )
)
(:scoring
  (* 6 10 25 )
)
)(define (game game-id-123) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?e - doggie_bed)
      (game-conserved
        (= (distance agent ?e))
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?x - game_object ?n - game_object)
        (then
          (hold-while (in left ?n) (agent_holds desk) (not (not (agent_holds ?n) ) ) (in_motion pink) )
          (forall-sequence (?t - (either pillow dodgeball main_light_switch dodgeball main_light_switch triangle_block tall_cylindrical_block))
            (then
              (hold (on ?t ?t) )
              (hold-while (not (in_motion ?t) ) (agent_holds north_wall) (touch ?t ?n) (and (and (in_motion ?t) (on ?t ?n) ) (and (agent_holds ?n) (and (and (and (and (and (agent_holds ?t) (agent_holds ?t) ) (in_motion floor) ) (agent_holds ?t) ) (and (and (on ?n door) (on ?t upright) (agent_holds ?t) ) (and (not (not (not (game_over ) ) ) ) (< (distance_side tan ?t ?t) (distance ?n ?n)) ) (in_motion ?n) ) ) (and (in room_center ?t) (same_object ?t ?t) ) (and (> (distance ?n ?n) (distance ?n front)) (agent_holds ?n) (or (on ?n ?t) (< (building_size agent) (distance_side rug ?t ?n)) ) (and (exists (?k - hexagonal_bin) (in ?k ?t) ) (not (game_over ) ) ) ) ) ) (agent_holds ?t) ) )
              (once (in_motion ?t) )
            )
          )
          (hold-while (and (or (equal_z_position ?n ?n) (on ?n bed) ) (and (and (< 10 (distance ?n south_west_corner)) (agent_holds floor) ) (agent_holds ?n) (agent_holds ?n) (and (and (in_motion ?n) (not (adjacent ?n ?n) ) ) (and (agent_holds ?n) (above floor ?n) ) ) ) ) (and (agent_holds room_center) (agent_holds agent) ) (in_motion agent) )
        )
      )
    )
    (preference preference2
      (exists (?m - building)
        (then
          (hold (< 1 5) )
          (hold (on ?m ?m) )
          (any)
        )
      )
    )
    (preference preference3
      (exists (?v - desk_shelf)
        (then
          (once (on ?v ?v) )
          (once-measure (in_motion ?v) (distance ?v desk) )
          (once (and (not (agent_holds agent) ) (and (forall (?q - hexagonal_bin ?f - chair) (in_motion ?v) ) (forall (?g - hexagonal_bin ?u - (either cube_block golfball) ?e - hexagonal_bin) (in_motion ?e) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference1:alarm_clock) (- (count-once-per-objects preference2:hexagonal_bin) )
  )
)
(:scoring
  (+ (count-once preference3:golfball:orange:dodgeball) 3 )
)
)(define (game game-id-124) (:domain medium-objects-room-v1)
(:setup
  (exists (?o - dodgeball ?z - teddy_bear ?t - hexagonal_bin ?l - pyramid_block)
    (exists (?t - dodgeball ?o - building)
      (game-conserved
        (= 8 (distance ?o bed))
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?o - block ?t ?c ?z - ball)
        (then
          (hold-while (in ?c ?t) (and (< (distance ?z ?z) (distance_side ?c ?t ?z ?z)) (in_motion ?z) ) )
          (once (agent_holds ?t) )
          (hold (on ?t ?c) )
        )
      )
    )
    (preference preference2
      (exists (?q - hexagonal_bin)
        (then
          (once (not (not (> 3 3) ) ) )
        )
      )
    )
  )
)
(:terminal
  (<= (* (* (count-overlapping preference2:orange) (count preference2:basketball) )
      (+ (external-forall-minimize (* 2 (* 20 (count preference2:hexagonal_bin:dodgeball:hexagonal_bin) )
          )
        )
        50
      )
      (count-once preference2:tall_cylindrical_block)
      (count preference2:yellow:red)
      (count preference2)
      (= (count preference2:purple) (count preference1:hexagonal_bin:dodgeball) (count-once-per-objects preference2:dodgeball) )
    )
    (count-shortest preference1:brown)
  )
)
(:scoring
  2
)
)(define (game game-id-125) (:domain few-objects-room-v1)
(:setup
  (forall (?t - hexagonal_bin)
    (game-conserved
      (not
        (in_motion ?t)
      )
    )
  )
)
(:constraints
  (and
    (forall (?u - (either bed dodgeball) ?y - chair ?x - dodgeball)
      (and
        (preference preference1
          (exists (?e - blue_pyramid_block ?k - ball)
            (then
              (once (and (agent_holds ?k) (not (agent_holds ?k) ) ) )
              (hold (in_motion ?k) )
              (once (same_color room_center ?k) )
            )
          )
        )
        (preference preference2
          (exists (?q - dodgeball)
            (then
              (once (and (same_color ?q upright) (not (and (on desk ?x) (and (agent_holds ?x) (in_motion ?q) ) ) ) ) )
              (hold (agent_holds bed) )
              (once (not (not (and (and (in_motion ?x) (agent_holds desk) ) (in bed ?q) (not (in_motion ?q) ) (on ?x ?q) (not (and (and (and (and (in_motion ?x) (touch ?x ?x) ) (not (is_setup_object ?x) ) (in_motion ?x) ) (not (exists (?u - wall) (and (and (touch agent desk) (agent_holds ?q) (not (agent_holds rug) ) (in ?q ?q) ) (adjacent ?x ?x) ) ) ) ) (touch ?x ?x) ) ) (in_motion ?q) (< 3 (building_size ?q)) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (count-longest preference1:pink:bed:purple) )
)
(:scoring
  6
)
)(define (game game-id-126) (:domain many-objects-room-v1)
(:setup
  (exists (?a - cylindrical_block)
    (game-conserved
      (in_motion ?a)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?y - dodgeball ?b - wall)
        (then
          (once (touch ?b pink_dodgeball) )
          (hold (and (not (in_motion ?b) ) (not (and (and (in ?b ?b) (in_motion ?b) ) (agent_holds floor) ) ) ) )
          (once (forall (?q - hexagonal_bin) (and (not (in_motion ?q) ) (in_motion agent) ) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (and
      (and
        (or
          (not
            (> (count preference1) 16 )
          )
          (> 3 (total-score) )
        )
        (or
          (> (count preference1:beachball:dodgeball:pink_dodgeball) (* (* 6 1 )
              (total-time)
            )
          )
          (>= 10 (+ 100 (/ (* (* (count-same-positions preference1:green:yellow) (or (count preference1:yellow:pyramid_block:yellow) (- (count preference1:pink_dodgeball:dodgeball) )
                      10
                    )
                    10
                    (or
                      (* (count-once-per-objects preference1:yellow) (+ 2 (* (* (* (count-once-per-objects preference1:beachball) (* (- 2 )
                                  3
                                  (>= (+ (external-forall-maximize 3 ) (count-once-per-objects preference1:basketball) )
                                    (- (count-once-per-objects preference1:dodgeball) )
                                  )
                                  (or
                                    (* (+ (* (count preference1:beachball:basketball) 3 )
                                        4
                                      )
                                      7
                                    )
                                    5
                                    (* (- (count-overlapping preference1:alarm_clock:book) )
                                      (* (count preference1:pink) (count preference1:green:blue_dodgeball) )
                                    )
                                  )
                                )
                                (count preference1:side_table:pyramid_block)
                              )
                              5
                            )
                            3
                          )
                        )
                      )
                    )
                  )
                  2
                )
                (count-once-per-objects preference1:yellow)
              )
            )
          )
        )
        (or
          (>= (not (* 5 (count-unique-positions preference1:yellow) )
            )
            (count preference1:book:red)
          )
          (>= (count-once preference1:brown:basketball) (external-forall-minimize 100 ) )
          (>= 2 (count preference1:beachball:golfball) )
          (>= (count preference1:beachball:pyramid_block) (count-once-per-objects preference1:pink_dodgeball) )
        )
      )
    )
  )
)
(:scoring
  (count-once-per-objects preference1:beachball:basketball)
)
)(define (game game-id-127) (:domain many-objects-room-v1)
(:setup
  (forall (?b - (either pillow cellphone) ?i - hexagonal_bin)
    (game-conserved
      (in_motion ?i)
    )
  )
)
(:constraints
  (and
    (forall (?o - hexagonal_bin ?d - cube_block ?v - game_object ?q - chair ?e - hexagonal_bin)
      (and
        (preference preference1
          (exists (?c - hexagonal_bin)
            (at-end
              (not
                (not
                  (equal_z_position ?c ?e)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-longest preference1:beachball) (count-once-per-objects preference1:pink_dodgeball) )
)
(:scoring
  (count-once-per-objects preference1:blue_dodgeball)
)
)(define (game game-id-128) (:domain medium-objects-room-v1)
(:setup
  (forall (?v - building ?n - cube_block)
    (forall (?d - (either dodgeball cd) ?i - building)
      (and
        (game-conserved
          (and
            (on ?n ?n)
            (not
              (not
                (touch ?i pink_dodgeball)
              )
            )
            (agent_holds ?i)
            (on ?i ?i)
          )
        )
        (exists (?w - hexagonal_bin ?q - building ?c - flat_block)
          (exists (?v - chair ?m - color)
            (forall (?q - doggie_bed ?w ?j - hexagonal_bin)
              (exists (?q - dodgeball)
                (exists (?u - block ?p - hexagonal_bin ?o - cylindrical_block)
                  (exists (?b - dodgeball)
                    (game-optional
                      (or
                        (in_motion ?w)
                        (in bed desk)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?g - block)
      (and
        (preference preference1
          (exists (?j - game_object)
            (at-end
              (same_color agent ?g)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference1:blue_dodgeball) (count preference1:dodgeball:doggie_bed) )
)
(:scoring
  20
)
)(define (game game-id-129) (:domain few-objects-room-v1)
(:setup
  (exists (?a ?z - doggie_bed)
    (game-optional
      (not
        (agent_holds ?z)
      )
    )
  )
)
(:constraints
  (and
    (forall (?i - hexagonal_bin ?m ?t ?p ?u - cube_block ?o - hexagonal_bin ?x - teddy_bear)
      (and
        (preference preference1
          (exists (?o - teddy_bear)
            (then
              (once (in_motion desk) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?d - cube_block)
        (then
          (hold (agent_holds ?d) )
          (once (object_orientation ?d room_center) )
          (hold (< 1 8) )
        )
      )
    )
  )
)
(:terminal
  (>= 4 (count-once-per-objects preference2:red:dodgeball) )
)
(:scoring
  (* 2 3 )
)
)(define (game game-id-130) (:domain few-objects-room-v1)
(:setup
  (exists (?f - hexagonal_bin)
    (game-optional
      (open ?f)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?s - ball)
        (then
          (once-measure (forall (?z - cube_block ?h ?t - game_object ?t - chair) (in ?s agent) ) (distance agent ?s) )
          (hold-while (and (agent_holds ?s) (agent_holds ?s) (adjacent_side ?s ?s ?s ?s) (on room_center room_center) ) (rug_color_under bed floor) )
          (hold (rug_color_under ?s ?s) )
        )
      )
    )
  )
)
(:terminal
  (>= 1 (count-once-per-objects preference1:pyramid_block) )
)
(:scoring
  6
)
)(define (game game-id-131) (:domain medium-objects-room-v1)
(:setup
  (forall (?w - wall)
    (game-conserved
      (in ?w ?w)
    )
  )
)
(:constraints
  (and
    (forall (?x - hexagonal_bin ?f - hexagonal_bin)
      (and
        (preference preference1
          (then
            (hold (in_motion ?f) )
            (once (and (not (agent_holds ?f) ) (on ?f ?f) (on ?f ?f) (not (agent_holds ?f) ) ) )
            (once (agent_holds ?f) )
          )
        )
        (preference preference2
          (exists (?d - color)
            (then
              (hold (not (same_object ?d ?f) ) )
              (any)
              (hold-while (and (not (agent_holds ?f) ) (and (on ?f room_center) (in_motion ?d) ) ) (and (in_motion ?d) (adjacent ?d ?f) ) (in_motion desk) (and (adjacent ?f room_center) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (count-once-per-objects preference1:blue_dodgeball) 4 )
)
(:scoring
  (count preference1:basketball)
)
)(define (game game-id-132) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?v - building)
      (exists (?h - sliding_door ?b - (either alarm_clock cube_block pyramid_block))
        (game-conserved
          (and
            (adjacent ?v ?v)
            (< (distance_side ?b ?b ?v) (distance room_center room_center))
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?y - tan_cube_block ?c - red_dodgeball)
      (and
        (preference preference1
          (exists (?s - (either cellphone credit_card))
            (at-end
              (not
                (and
                  (on ?s ?s)
                  (and
                    (not
                      (in_motion ?c)
                    )
                    (agent_holds ?c)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (> (total-score) 30 )
      (>= 4 (total-time) )
    )
    (= (count preference1:beachball) (count-once preference1:red) )
  )
)
(:scoring
  (count preference1:dodgeball)
)
)(define (game game-id-133) (:domain medium-objects-room-v1)
(:setup
  (exists (?l - hexagonal_bin ?g - (either dodgeball dodgeball))
    (forall (?j - wall)
      (game-optional
        (agent_holds ?g)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?h - game_object)
        (then
          (once (not (exists (?b - cube_block) (on ?b ?h) ) ) )
          (hold (< (distance ?h ?h) (distance ?h desk)) )
          (hold (on ?h ?h) )
        )
      )
    )
    (preference preference2
      (exists (?m - teddy_bear)
        (then
          (hold (touch desk ?m) )
          (once (rug_color_under ?m room_center) )
          (hold-while (and (agent_holds agent) (agent_holds ?m) ) (and (on ?m ?m) (not (in_motion ?m) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:cube_block) (* (* 20 15 )
      (total-time)
      (count preference1:pyramid_block)
    )
  )
)
(:scoring
  (count-once-per-objects preference1)
)
)(define (game game-id-134) (:domain many-objects-room-v1)
(:setup
  (forall (?x - ball)
    (forall (?f ?w - ball)
      (or
        (game-conserved
          (< 1 1)
        )
        (game-conserved
          (and
            (agent_holds ?x)
            (and
              (and
                (agent_holds ?x)
                (on ?w ?w)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?c - dodgeball)
        (then
          (once-measure (and (in_motion rug) ) (distance bed ?c) )
          (once (in_motion blue) )
          (hold (in_motion ?c) )
        )
      )
    )
  )
)
(:terminal
  (= (count-once-per-objects preference1:pink) 3 )
)
(:scoring
  5
)
)(define (game game-id-135) (:domain many-objects-room-v1)
(:setup
  (forall (?m - teddy_bear ?n - drawer ?u - curved_wooden_ramp)
    (and
      (exists (?t - cube_block)
        (game-conserved
          (same_type ?t floor)
        )
      )
      (exists (?v - drawer)
        (exists (?t - doggie_bed ?k - doggie_bed ?s - (either tall_cylindrical_block yellow curved_wooden_ramp))
          (game-conserved
            (agent_holds agent)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?n - golfball)
        (then
          (once (and (not (touch pink_dodgeball ?n) ) (rug_color_under tan ?n) ) )
          (once (and (in_motion ?n) (not (agent_holds ?n) ) ) )
        )
      )
    )
    (preference preference2
      (exists (?k - block)
        (then
          (hold-while (and (agent_holds ?k) (agent_holds bed) ) (is_setup_object agent) (in ?k ?k) (agent_holds ?k) )
          (hold (not (on ?k bed) ) )
          (once (rug_color_under back ?k) )
          (hold (agent_holds ?k) )
          (once (in_motion ?k) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-longest preference1:hexagonal_bin:dodgeball) 4 )
    (>= (count-once-per-objects preference2:basketball) (* 20 (* (count preference2:dodgeball:basketball) 10 (* (count-once preference1:dodgeball) (* (- (external-forall-maximize (total-score) ) (total-score) ) 4 )
          )
        )
      )
    )
    (>= 2 (total-time) )
  )
)
(:scoring
  4
)
)(define (game game-id-136) (:domain few-objects-room-v1)
(:setup
  (forall (?c - (either cube_block desktop) ?v - dodgeball)
    (exists (?q - game_object)
      (exists (?u - block ?u - hexagonal_bin)
        (and
          (or
            (game-optional
              (and
                (and
                  (not
                    (and
                      (same_color ?q door)
                      (in_motion ?u)
                      (and
                        (and
                          (and
                            (on ?q agent)
                            (not
                              (in_motion ?u)
                            )
                          )
                          (not
                            (on ?q room_center)
                          )
                        )
                        (on desk ?v)
                      )
                      (agent_holds ?u)
                    )
                  )
                  (< 1 (distance bed bed))
                )
                (in_motion ?q)
              )
            )
            (and
              (and
                (game-conserved
                  (not
                    (exists (?p - triangular_ramp ?n - golfball ?o ?s ?m - game_object ?j - hexagonal_bin)
                      (agent_holds ?v)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?h - cube_block)
        (then
          (once (and (and (agent_holds ?h) (and (= (distance_side ?h ?h ?h ?h) 1) (adjacent desk ?h) (not (faces ?h ?h) ) ) (agent_holds ?h) ) (agent_holds ?h) ) )
          (once (agent_holds ?h) )
          (once (on left ?h) )
        )
      )
    )
    (preference preference2
      (exists (?d - building)
        (then
          (once (not (not (agent_holds ?d) ) ) )
          (hold-while (agent_holds ?d) (agent_holds ?d) )
          (once (not (agent_holds ?d) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (external-forall-maximize 2 ) (count preference2:doggie_bed:basketball) )
)
(:scoring
  (count-once-per-objects preference2:dodgeball)
)
)(define (game game-id-137) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (exists (?v - triangular_ramp)
        (and
          (exists (?h - game_object)
            (game-optional
              (and
                (open ?v)
                (in_motion ?h)
              )
            )
          )
          (game-optional
            (and
              (agent_holds ?v)
              (agent_holds ?v)
              (and
                (adjacent ?v ?v)
                (in_motion ?v)
                (and
                  (touch desk ?v)
                  (agent_holds bed)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?c - triangular_ramp ?u - dodgeball ?o ?f - (either tall_cylindrical_block alarm_clock))
        (at-end
          (in_motion ?o)
        )
      )
    )
  )
)
(:terminal
  (> 10 (* (count preference1:pink) (* (count-once preference1:rug) )
    )
  )
)
(:scoring
  10
)
)(define (game game-id-138) (:domain few-objects-room-v1)
(:setup
  (exists (?b - doggie_bed)
    (game-conserved
      (agent_holds bed)
    )
  )
)
(:constraints
  (and
    (forall (?c - shelf ?t - hexagonal_bin ?v - (either triangle_block lamp dodgeball yellow_cube_block))
      (and
        (preference preference1
          (exists (?g - (either cd alarm_clock blue_cube_block))
            (then
              (once (and (agent_holds agent) (and (and (agent_holds ?g) (< (distance agent ?g) 1) ) (adjacent ?v ?v) (not (game_start ) ) ) ) )
              (once (not (not (in_motion ?g) ) ) )
              (once (< 1 9) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?s - dodgeball)
        (then
          (hold (in_motion desk) )
          (hold (on ?s ?s) )
          (any)
        )
      )
    )
  )
)
(:terminal
  (>= (* (* (count-once-per-objects preference2:golfball:pink_dodgeball) (- (count-once-per-objects preference1:pink) )
      )
      (count-once preference2:yellow)
    )
    (* (count-shortest preference1:beachball) 2 )
  )
)
(:scoring
  (= 1 (count-once preference1:yellow) )
)
)(define (game game-id-139) (:domain few-objects-room-v1)
(:setup
  (forall (?g - shelf)
    (game-conserved
      (and
        (not
          (agent_holds ?g)
        )
        (not
          (and
            (game_over )
            (in blue upright)
          )
        )
        (and
          (not
            (and
              (and
                (agent_holds ?g)
                (not
                  (not
                    (and
                      (agent_holds desk)
                      (in_motion ?g)
                    )
                  )
                )
              )
              (game_start )
            )
          )
          (in agent agent)
        )
        (and
          (not
            (in_motion ?g)
          )
          (in ?g ?g)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?g - dodgeball)
      (and
        (preference preference1
          (exists (?v - cube_block)
            (then
              (hold (not (on ?v ?v) ) )
              (once (< 0.5 (distance ?v floor)) )
              (once (in ?g ?v) )
            )
          )
        )
        (preference preference2
          (then
            (hold (not (and (on ?g ?g) (on room_center ?g) ) ) )
            (once-measure (rug_color_under ?g ?g) (distance ?g ?g) )
            (hold (not (and (on ?g ?g) (agent_holds ?g) (not (in ?g ?g) ) (adjacent ?g ?g) ) ) )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (not
        (= (count-measure preference2:blue_pyramid_block) 4 )
      )
      (>= (>= (count-once-per-objects preference1:beachball:red) (total-score) )
        (count-once-per-objects preference1:golfball)
      )
    )
    (<= 2 (* 3 (* 5 (count preference2:alarm_clock:red) )
      )
    )
    (>= (count-once-per-objects preference1:blue) 1 )
  )
)
(:scoring
  (count preference2:dodgeball)
)
)(define (game game-id-140) (:domain medium-objects-room-v1)
(:setup
  (exists (?k - hexagonal_bin)
    (and
      (exists (?l - hexagonal_bin)
        (game-conserved
          (toggled_on ?k)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?t - color)
        (then
          (once (agent_holds ?t) )
          (once (agent_holds ?t) )
          (hold (and (in ?t ?t) (touch desk ?t) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (- (count preference1:beachball) )
    (* (count-once-per-external-objects preference1:yellow) 3 )
  )
)
(:scoring
  (total-score)
)
)(define (game game-id-141) (:domain medium-objects-room-v1)
(:setup
  (exists (?i - ball)
    (exists (?j - ball ?s - hexagonal_bin)
      (game-conserved
        (in_motion ?i)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?c - wall)
        (then
          (once (and (open ?c) (same_object floor ?c) ) )
          (once (and (object_orientation blue east_sliding_door) (not (not (or (and (touch ?c ?c) (or (in_motion ?c) (adjacent ?c ?c) ) ) (not (agent_holds ?c) ) ) ) ) ) )
          (once (in_motion back) )
        )
      )
    )
  )
)
(:terminal
  (>= (- (count preference1) )
    4
  )
)
(:scoring
  (count preference1:pink)
)
)(define (game game-id-142) (:domain few-objects-room-v1)
(:setup
  (exists (?p - block)
    (and
      (game-optional
        (and
          (not
            (not
              (and
                (not
                  (and
                    (in ?p ?p)
                    (> (distance ?p ?p) (distance_side ?p ?p ?p))
                  )
                )
                (in ?p agent)
              )
            )
          )
          (adjacent rug ?p)
          (< (distance_side ?p ?p agent) 8)
          (in_motion ?p)
        )
      )
      (and
        (game-conserved
          (agent_holds ?p)
        )
      )
      (and
        (forall (?o - block)
          (game-optional
            (in_motion ?o)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?w - dodgeball)
        (then
          (once (not (exists (?r - (either yellow_cube_block cellphone)) (and (in_motion door) (and (and (agent_holds floor) (not (game_over ) ) ) (in_motion ?w) ) ) ) ) )
          (once (not (and (and (in_motion ?w) (on ?w ?w) ) (and (between ?w ?w ?w) (on ?w ?w) ) ) ) )
          (once (and (and (and (in_motion ?w) (not (exists (?e - hexagonal_bin) (in ?e ?w) ) ) ) (touch ?w ?w) ) (not (exists (?r - hexagonal_bin ?t - hexagonal_bin ?t - (either basketball dodgeball)) (and (and (in_motion ?t) (agent_holds ?t) ) (agent_holds ?t) (not (and (agent_holds ?w) (in_motion ?t) (not (agent_holds ?t) ) ) ) ) ) ) (and (not (< (distance floor ?w) (distance ?w ?w)) ) (adjacent ?w ?w) ) ) )
        )
      )
    )
    (forall (?x - bridge_block)
      (and
        (preference preference2
          (exists (?p - building)
            (then
              (once (in_motion ?x) )
              (hold (in_motion ?p) )
              (hold (in_motion ?p) )
            )
          )
        )
        (preference preference3
          (exists (?b - (either yellow pyramid_block))
            (at-end
              (< (distance agent ?b) (distance ?b ?b))
            )
          )
        )
      )
    )
    (preference preference4
      (exists (?y - (either block dodgeball))
        (at-end
          (in_motion ?y)
        )
      )
    )
  )
)
(:terminal
  (>= (* (+ 15 (count-once preference1:pink) 10 )
      (count-once preference4:tall_cylindrical_block)
    )
    10
  )
)
(:scoring
  (* (count-once-per-objects preference4:yellow) (count-increasing-measure preference1:basketball) )
)
)(define (game game-id-143) (:domain few-objects-room-v1)
(:setup
  (exists (?g - (either cylindrical_block golfball))
    (and
      (and
        (and
          (and
            (game-conserved
              (and
                (not
                  (and
                    (not
                      (in_motion ?g)
                    )
                    (and
                      (adjacent_side ?g ?g desk east_sliding_door)
                      (open agent)
                    )
                  )
                )
                (in ?g ?g)
                (not
                  (agent_holds ?g)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?g - dodgeball)
      (and
        (preference preference1
          (exists (?f - block)
            (then
              (hold (adjacent_side ?g ?g ?g) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?h - hexagonal_bin)
        (at-end
          (in_motion desk)
        )
      )
    )
  )
)
(:terminal
  (>= 5 (* (* (* (* (count-once preference1:blue_pyramid_block) 300 (count-once preference2:orange) )
          (not
            (count-overlapping preference2:purple)
          )
        )
        (* (count preference1:yellow) (* 1 (count-once-per-objects preference2:green) (+ 3 (count preference1:dodgeball) )
            (count-once-per-objects preference1:red)
            (count preference1:basketball:beachball:pink)
            (+ (* 2 (- (* (+ 10 3 )
                    (count-same-positions preference2:dodgeball)
                  )
                  (* (count-once-per-objects preference1:purple) (+ (count-once-per-objects preference1:dodgeball) (* (total-score) (* (* (- (count preference2:green) )
                            2
                          )
                          (- 1 )
                          (* (* (* (count preference1:dodgeball) (external-forall-maximize (- (* 1 (count-same-positions preference2:orange:yellow) )
                                    (total-score)
                                  )
                                )
                              )
                              (count preference1:blue_pyramid_block:pink)
                            )
                            10
                          )
                        )
                      )
                    )
                  )
                )
                (+ (or (count preference2:beachball) 7 1 ) 6 )
                (count preference2)
              )
              (* 5 (+ (count preference2:basketball) (count preference1:pyramid_block) )
                5
              )
            )
          )
          2
        )
      )
      (count preference1:pink)
    )
  )
)
(:scoring
  4
)
)(define (game game-id-144) (:domain medium-objects-room-v1)
(:setup
  (exists (?i - shelf ?j - wall ?b - hexagonal_bin)
    (and
      (forall (?f - (either cube_block cd tall_cylindrical_block))
        (game-conserved
          (not
            (and
              (on ?b ?b)
              (exists (?v ?j ?p ?g ?z ?y ?w ?h ?d ?l - hexagonal_bin)
                (= 1 5)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?n - (either book cylindrical_block bridge_block) ?b - green_triangular_ramp)
        (then
          (hold (above ?b ?b) )
          (hold-while (not (not (in_motion ?b) ) ) (or (in_motion ?b) (adjacent ?b door) ) )
          (once (agent_holds ?b) )
        )
      )
    )
  )
)
(:terminal
  (< 4 (count preference1:purple:basketball) )
)
(:scoring
  3
)
)(define (game game-id-145) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?e - dodgeball ?r - cube_block ?u - (either hexagonal_bin wall dodgeball))
      (game-optional
        (and
          (touch ?u ?u)
          (agent_holds ?u)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?j - dodgeball)
        (at-end
          (and
            (> (distance_side green_golfball ?j ?j ?j) 1)
            (agent_holds ?j)
          )
        )
      )
    )
    (preference preference2
      (exists (?k - game_object ?k - game_object)
        (then
          (once (on ?k ?k) )
          (once (and (in ?k ?k) (and (not (open bed) ) (agent_holds ?k) ) (in_motion desk) ) )
          (once (agent_holds ?k) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (= 5 (* 2 3 10 (and (count-once-per-objects preference2:pink_dodgeball:dodgeball) ) (+ (count preference2:basketball) (or (count preference2:blue_dodgeball) 10 ) )
          2
          4
          (* (- 20 )
          )
          (or
            (count-unique-positions preference1:beachball)
            (+ (count preference1:purple) (count-once-per-objects preference1:book) )
            (+ (* 2 (count-longest preference2:red:cylindrical_block) )
              (count-once-per-objects preference1:dodgeball)
            )
          )
        )
      )
      2
    )
  )
)
(:scoring
  (+ (* (total-score) (count preference2:dodgeball) )
    (* (count preference1:red) (or (* (count-once preference2:yellow) (+ (count preference1:yellow) (count preference2:beachball) )
          (count-once-per-external-objects preference1:triangle_block)
        )
      )
    )
    5
  )
)
)(define (game game-id-146) (:domain medium-objects-room-v1)
(:setup
  (exists (?z - game_object)
    (game-conserved
      (adjacent ?z ?z)
    )
  )
)
(:constraints
  (and
    (forall (?k - dodgeball ?x - dodgeball)
      (and
        (preference preference1
          (exists (?l - ball)
            (at-end
              (and
                (not
                  (in ?l ?l)
                )
                (or
                  (not
                    (and
                      (in_motion ?x)
                      (same_color ?x ?l)
                    )
                  )
                  (agent_holds ?x)
                )
              )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?t - game_object ?h - beachball ?d - dodgeball)
        (then
          (once (and (not (agent_holds ?d) ) (on ?d ?d) ) )
          (hold (not (touch ?d ?d) ) )
          (hold (and (in_motion ?d) (same_object ?d ?d) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (external-forall-maximize (count preference1:tall_cylindrical_block:red) ) 4 )
)
(:scoring
  (+ (count preference1:dodgeball) (count preference1:pink_dodgeball) )
)
)(define (game game-id-147) (:domain many-objects-room-v1)
(:setup
  (forall (?j - hexagonal_bin ?d - building ?s - teddy_bear ?e - hexagonal_bin ?a - curved_wooden_ramp)
    (and
      (game-optional
        (agent_holds ?a)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?m - hexagonal_bin)
        (then
          (hold (not (not (agent_holds ?m) ) ) )
          (once (or (equal_z_position agent ?m) (in ?m ?m) ) )
        )
      )
    )
    (preference preference2
      (exists (?m - (either alarm_clock dodgeball))
        (at-end
          (agent_holds ?m)
        )
      )
    )
  )
)
(:terminal
  (>= 4 20 )
)
(:scoring
  (count-once-per-objects preference2:cube_block)
)
)(define (game game-id-148) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (is_setup_object agent)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?s - yellow_pyramid_block ?y - hexagonal_bin)
        (at-end
          (rug_color_under ?y ?y)
        )
      )
    )
    (forall (?m - (either alarm_clock bed))
      (and
        (preference preference2
          (exists (?g - hexagonal_bin)
            (then
              (hold-to-end (touch ?m desk) )
              (once (same_color ?g ?g) )
              (once (not (not (rug_color_under ?m agent) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* 5 (count preference2:side_table) )
    (and
      (+ 30 (* (* 7 (external-forall-minimize (count preference2:book) ) )
          (count-total preference2:dodgeball)
          5
        )
      )
      (count preference2:pink)
      (count preference2:pink)
    )
  )
)
(:scoring
  (count preference2:basketball)
)
)(define (game game-id-149) (:domain many-objects-room-v1)
(:setup
  (exists (?c - block ?c - cube_block)
    (exists (?e - chair ?z - color)
      (and
        (and
          (game-optional
            (object_orientation ?z ?c)
          )
          (game-conserved
            (not
              (not
                (not
                  (in agent ?c)
                )
              )
            )
          )
          (forall (?b - ball)
            (exists (?q - (either desktop cube_block))
              (and
                (game-conserved
                  (in_motion rug)
                )
                (and
                  (and
                    (game-optional
                      (not
                        (not
                          (agent_holds ?q)
                        )
                      )
                    )
                    (and
                      (exists (?e - block ?k - ball ?k - cylindrical_block)
                        (exists (?v - dodgeball)
                          (forall (?n - ball ?j - game_object)
                            (and
                              (exists (?p - cube_block)
                                (game-conserved
                                  (in_motion ?z)
                                )
                              )
                              (not
                                (forall (?r - (either cube_block cube_block) ?p - building)
                                  (forall (?h - teddy_bear)
                                    (exists (?d - hexagonal_bin ?l - ball)
                                      (game-optional
                                        (agent_holds ?z)
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                      (game-conserved
                        (and
                          (and
                            (agent_holds ?q)
                            (and
                              (in ?b ?b)
                              (agent_holds ?z)
                            )
                          )
                          (and
                            (< 9 (distance_side ?q ?c ?b))
                            (on ?z ?z)
                          )
                        )
                      )
                    )
                    (game-conserved
                      (= 1 0)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?q - hexagonal_bin ?k - tall_cylindrical_block)
      (and
        (preference preference1
          (exists (?u - tall_cylindrical_block ?o - curved_wooden_ramp ?p - (either cellphone dodgeball))
            (then
              (once (agent_holds back) )
              (once (not (not (faces ?k ?k) ) ) )
              (hold (exists (?f - curved_wooden_ramp) (and (not (and (and (in_motion ?p) (on ?p ?k) (agent_holds ?k) ) (on ?k ?k) ) ) (agent_holds ?p) ) ) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?j - (either cylindrical_block dodgeball blue_cube_block))
        (then
          (once (not (agent_holds ?j) ) )
          (once (equal_x_position desk ?j) )
          (once (not (not (not (not (on ?j ?j) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count preference2:golfball) (+ (count-shortest preference1:blue_dodgeball) (+ 5 (* (count preference1:doggie_bed:beachball:dodgeball) (* 10 (* 7 (count preference2:basketball) )
            )
          )
        )
      )
    )
    (external-forall-maximize
      (* 4 (count-once-per-external-objects preference1:white) )
    )
  )
)
(:scoring
  6
)
)(define (game game-id-150) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?x - golfball)
      (and
        (game-optional
          (and
            (not
              (in_motion ?x)
            )
            (and
              (same_color floor floor)
              (< 1 (distance ?x top_shelf))
            )
          )
        )
        (exists (?e ?k ?b ?s - block)
          (and
            (game-conserved
              (not
                (agent_holds ?x)
              )
            )
            (game-conserved
              (not
                (and
                  (in_motion ?s)
                  (touch ?k ?b)
                  (and
                    (agent_holds ?k)
                    (in ?k ?e)
                  )
                  (rug_color_under pillow ?b)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?k - hexagonal_bin)
        (then
          (hold-while (not (not (not (agent_holds ?k) ) ) ) (= (distance ?k ?k) 1 (distance ?k ?k) (distance agent east_sliding_door)) (and (agent_holds ?k) ) )
          (once (in ?k ?k) )
          (once (and (adjacent_side ?k ?k top_drawer ?k) (not (<= (distance bed ?k) 1) ) ) )
        )
      )
    )
    (forall (?q - (either yellow_cube_block cellphone))
      (and
        (preference preference2
          (exists (?f - hexagonal_bin)
            (then
              (once (in floor ?f) )
              (once (and (in_motion ?q) (agent_holds room_center) ) )
              (once (rug_color_under upright ?f) )
            )
          )
        )
        (preference preference3
          (exists (?w - cube_block)
            (at-end
              (in_motion ?q)
            )
          )
        )
        (preference preference4
          (at-end
            (not
              (adjacent agent ?q)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (< 2 3 )
    (or
      (>= 2 (count preference1:hexagonal_bin) )
    )
  )
)
(:scoring
  (count preference2:dodgeball:purple:green)
)
)(define (game game-id-151) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - building)
      (and
        (exists (?y - curved_wooden_ramp ?a - hexagonal_bin ?d - yellow_pyramid_block ?p ?j ?b ?f ?d - (either yellow_cube_block pyramid_block) ?i - dodgeball)
          (forall (?c - cube_block)
            (game-conserved
              (agent_holds ?i)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?w - dodgeball)
        (then
          (once (and (and (in_motion agent) (and (in_motion ?w) (agent_holds ?w) ) (in_motion ?w) (not (or (object_orientation ?w ?w) (not (in_motion ?w) ) (same_color ?w ?w) (adjacent room_center ?w) ) ) (and (< 9 (distance ?w desk)) (agent_holds ?w) ) (in_motion ?w) (in ?w ?w) ) (in agent agent) ) )
        )
      )
    )
    (preference preference2
      (exists (?m - hexagonal_bin ?u - ball)
        (then
          (hold (touch agent upside_down) )
          (hold (is_setup_object ?u) )
          (hold (adjacent_side ?u ?u ?u ?u) )
        )
      )
    )
    (forall (?w - cube_block)
      (and
        (preference preference3
          (exists (?s ?b - wall ?h - shelf)
            (then
              (once (and (agent_holds rug) (between ?h desk desk) ) )
              (once (exists (?z - building ?k - cube_block) (not (< (distance_side ?w bed ?k ?w) 2) ) ) )
              (once (object_orientation desk ?w) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= 10 10 )
  )
)
(:scoring
  8
)
)(define (game game-id-152) (:domain medium-objects-room-v1)
(:setup
  (forall (?j - hexagonal_bin)
    (exists (?a - (either triangle_block wall desktop))
      (and
        (and
          (game-conserved
            (agent_holds ?j)
          )
        )
        (and
          (game-conserved
            (in_motion ?j)
          )
          (and
            (forall (?z - curved_wooden_ramp ?c - hexagonal_bin)
              (game-conserved
                (and
                  (agent_holds ?c)
                  (agent_holds agent)
                  (in ?c ?a)
                )
              )
            )
          )
        )
        (exists (?t - green_triangular_ramp)
          (exists (?w ?f ?b ?d - cube_block)
            (exists (?o - hexagonal_bin)
              (game-optional
                (not
                  (and
                    (adjacent ?o ?w)
                    (same_object top_shelf ?t)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?l - teddy_bear)
        (at-end
          (agent_holds ?l)
        )
      )
    )
    (preference preference2
      (exists (?o - hexagonal_bin)
        (then
          (hold (in ?o bed) )
          (once (< (distance room_center ?o) (distance ?o ?o)) )
          (hold (and (same_object ?o ?o) (in_motion ?o) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (not
      (not
        (not
          (or
            (>= (* 4 100 )
              (= (count preference1:yellow:golfball) (count preference1:brown) 5 )
            )
          )
        )
      )
    )
  )
)
(:scoring
  (count-once-per-objects preference2:dodgeball:blue_cube_block)
)
)(define (game game-id-153) (:domain medium-objects-room-v1)
(:setup
  (exists (?q - hexagonal_bin)
    (exists (?p - game_object)
      (game-optional
        (not
          (not
            (not
              (exists (?b ?g - ball)
                (and
                  (not
                    (on bottom_shelf ?p)
                  )
                  (not
                    (equal_z_position ?p desk)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?s - dodgeball)
      (and
        (preference preference1
          (exists (?n - chair)
            (at-end
              (not
                (not
                  (in ?s ?s)
                )
              )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?d - game_object)
        (then
          (once (adjacent ?d pink) )
          (hold-to-end (not (not (agent_holds ?d) ) ) )
          (hold (and (in ?d ?d) (on bed ?d) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 6 (count preference1:pink_dodgeball) )
)
(:scoring
  5
)
)(define (game game-id-154) (:domain few-objects-room-v1)
(:setup
  (exists (?p - ball ?j - hexagonal_bin ?a - hexagonal_bin)
    (and
      (and
        (game-conserved
          (adjacent ?a desk)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?e - block)
        (then
          (hold (on ?e ?e) )
          (once (on ?e agent) )
          (once (in_motion ?e) )
        )
      )
    )
    (preference preference2
      (exists (?p - game_object)
        (then
          (once (in_motion ?p) )
          (once (in_motion ?p) )
          (hold (in bed ?p) )
        )
      )
    )
  )
)
(:terminal
  (> 30 (* (count preference2:basketball) (count preference1:dodgeball) )
  )
)
(:scoring
  2
)
)(define (game game-id-155) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (not
      (> 1 1)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (at-end
        (not
          (in_motion desk)
        )
      )
    )
  )
)
(:terminal
  (>= 3 (* (count preference1:pink) (count preference1:top_drawer) )
  )
)
(:scoring
  8
)
)(define (game game-id-156) (:domain medium-objects-room-v1)
(:setup
  (exists (?g - golfball)
    (game-conserved
      (in_motion upright)
    )
  )
)
(:constraints
  (and
    (forall (?h - desk_shelf)
      (and
        (preference preference1
          (then
            (hold (on ?h agent) )
            (once (and (on ?h ?h) (and (and (agent_holds ?h) (and (in_motion ?h) (not (agent_holds bed) ) ) (in ?h ?h) ) (on ?h room_center) ) (exists (?f - triangular_ramp) (and (= (distance ?h ?f) (distance ?h ?f)) (and (not (agent_holds agent) ) (agent_holds ?h) ) (not (not (on ?h ?f) ) ) (not (not (not (in_motion tan) ) ) ) ) ) (agent_holds side_table) (game_start ) (not (agent_holds ?h) ) ) )
            (once (not (in agent ?h) ) )
          )
        )
      )
    )
    (preference preference2
      (exists (?t - hexagonal_bin ?z - (either watch pyramid_block))
        (then
          (once (and (and (in_motion ?z) (in ?z ?z) ) (in_motion ?z) ) )
          (hold (on ?z ?z) )
          (once (not (open ?z) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:hexagonal_bin) 3 )
)
(:scoring
  (count-once-per-objects preference1:purple)
)
)(define (game game-id-157) (:domain many-objects-room-v1)
(:setup
  (forall (?k - triangular_ramp)
    (game-optional
      (not
        (touch pink ?k)
      )
    )
  )
)
(:constraints
  (and
    (forall (?u - hexagonal_bin)
      (and
        (preference preference1
          (exists (?r - block ?i - doggie_bed ?l - golfball)
            (then
              (once (forall (?f - game_object ?j - hexagonal_bin ?x - hexagonal_bin) (< 5 4) ) )
              (once-measure (agent_holds ?l) (distance ?u ?u) )
              (hold (not (not (in_motion ?u) ) ) )
            )
          )
        )
        (preference preference2
          (exists (?h ?i - hexagonal_bin)
            (then
              (hold (in_motion ?i) )
              (hold (not (in ?u ?u) ) )
              (once (not (in ?i ?h) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (> (count-shortest preference1:dodgeball) (count preference2:yellow) )
  )
)
(:scoring
  (* (count-unique-positions preference1:yellow) (count-overlapping preference2:pink_dodgeball) )
)
)(define (game game-id-158) (:domain few-objects-room-v1)
(:setup
  (exists (?a - hexagonal_bin ?d - (either cylindrical_block dodgeball cube_block))
    (and
      (forall (?l - hexagonal_bin)
        (exists (?i - doggie_bed)
          (game-optional
            (exists (?f - chair ?f - dodgeball)
              (adjacent ?f ?i)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?r - (either beachball cylindrical_block) ?n - (either blue_cube_block hexagonal_bin))
      (and
        (preference preference1
          (exists (?j - hexagonal_bin)
            (at-end
              (or
                (not
                  (not
                    (in ?j back)
                  )
                )
                (on ?j ?j)
              )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?f - wall ?w - cylindrical_block ?a - chair)
        (then
          (once (not (in_motion ?a) ) )
          (hold (in_motion ?a) )
          (once (in ?a agent) )
        )
      )
    )
    (preference preference3
      (exists (?e - ball)
        (at-end
          (adjacent bed desk)
        )
      )
    )
    (preference preference4
      (exists (?x - teddy_bear ?i - (either alarm_clock desktop) ?m - dodgeball)
        (at-end
          (agent_holds front_left_corner)
        )
      )
    )
  )
)
(:terminal
  (or
    (< 3 (count-once-per-objects preference4:dodgeball) )
    (not
      (or
        (>= (total-time) (* 2 (total-score) )
        )
        (> 5 (count-overlapping preference2:golfball) )
        (>= (count-once-per-objects preference3:basketball:alarm_clock) (count-once-per-objects preference3:red_pyramid_block) )
      )
    )
    (or
      (= (count preference1:dodgeball) (* 5 (count-shortest preference3:beachball) )
      )
      (> (count-once-per-objects preference3:blue_dodgeball) 2 )
    )
  )
)
(:scoring
  (count preference3:bed:orange:hexagonal_bin)
)
)(define (game game-id-159) (:domain medium-objects-room-v1)
(:setup
  (exists (?g - wall)
    (game-optional
      (and
        (and
          (not
            (and
              (touch ?g ?g)
              (adjacent_side ?g ?g bed)
              (on ?g ?g)
            )
          )
          (in_motion agent)
        )
        (in ?g ?g)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?e ?p ?r - shelf)
        (then
          (once (and (is_setup_object desk) (same_color agent ?p) (not (in_motion ?p) ) ) )
          (hold (or (and (or (agent_holds ?r) ) (forall (?c - hexagonal_bin) (on ?c bed) ) ) (in_motion upright) ) )
          (once (in_motion ?e) )
        )
      )
    )
  )
)
(:terminal
  (>= (external-forall-maximize (external-forall-maximize 6 ) ) (count preference1:golfball) )
)
(:scoring
  (+ (* (count-once-per-objects preference1:basketball:bed) 12 )
    (= (count preference1:dodgeball:dodgeball:beachball) (and (count-once-per-objects preference1:red) ) 30 )
  )
)
)(define (game game-id-160) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (exists (?g - curved_wooden_ramp ?k - doggie_bed ?y - shelf)
      (not
        (in ?y ?y)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?c - ball ?a - golfball)
        (then
          (once (on ?a ?a) )
          (once (and (not (not (on ?a ?a) ) ) (and (in ?a ?a) (in_motion ?a) ) ) )
          (once (exists (?o - ball) (on ?a desk) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-once-per-objects preference1:dodgeball) (count preference1:basketball:alarm_clock) )
  )
)
(:scoring
  (count-once-per-objects preference1:beachball)
)
)(define (game game-id-161) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?y - curved_wooden_ramp)
      (game-conserved
        (not
          (on side_table room_center)
        )
      )
    )
    (forall (?i ?u ?x ?o ?j ?z - ball)
      (game-optional
        (agent_holds ?u)
      )
    )
  )
)
(:constraints
  (and
    (forall (?f - hexagonal_bin)
      (and
        (preference preference1
          (exists (?r - block ?b - block)
            (then
              (once (and (not (same_type agent ?f) ) (agent_holds ?f) ) )
              (once (and (on ?b ?b) (and (agent_holds bridge_block) (on ?f ?f) ) ) )
              (once (agent_holds ?b) )
            )
          )
        )
        (preference preference2
          (exists (?n - blue_cube_block)
            (then
              (once (and (not (broken ?f) ) (agent_holds ?f) ) )
              (once (and (game_start ) (agent_holds ?f) ) )
              (any)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (+ 10 (count-total preference1:golfball) (* (* (external-forall-maximize 2 ) (total-score) (count-once-per-objects preference1:blue_dodgeball) )
        (* (* (/ (count-once preference2:book) 10 ) (count preference2:beachball) )
          (* (* (* (* (count preference2:golfball) (count preference2:orange) )
                8
              )
              100
            )
            (count preference2:dodgeball:brown)
          )
        )
      )
      (external-forall-maximize
        (= (count preference1) (+ (* (count preference2:yellow) (* (count-unique-positions preference1:blue_dodgeball) (external-forall-maximize (count preference1:book) ) )
            )
            4
            5
            1
            6
            (+ (count-unique-positions preference1:beachball) (count preference1:pink) )
          )
        )
      )
    )
    2
  )
)
(:scoring
  (* 10 5 (* (and (count-once-per-objects preference1:green) ) (* (>= (* (count preference1:bed) (count preference1:doggie_bed) )
          10
        )
        (and
          (count-same-positions preference1:green)
          (- (count-once-per-objects preference2:pink:golfball) )
          (count-once preference1:golfball)
        )
      )
    )
  )
)
)(define (game game-id-162) (:domain medium-objects-room-v1)
(:setup
  (exists (?s ?r - (either golfball cellphone))
    (and
      (and
        (and
          (and
            (and
              (game-conserved
                (not
                  (forall (?i - hexagonal_bin ?o - triangular_ramp ?b - desk_shelf ?o - pillow)
                    (and
                      (touch ?o ?o)
                      (and
                        (agent_holds ?o)
                        (> (distance desk ?r) 1)
                      )
                    )
                  )
                )
              )
              (game-conserved
                (above ?s ?r)
              )
              (forall (?v - (either cube_block side_table pink) ?b - teddy_bear)
                (forall (?o - hexagonal_bin)
                  (game-conserved
                    (in_motion ?b)
                  )
                )
              )
            )
          )
        )
      )
      (exists (?x - (either book bridge_block laptop) ?m - hexagonal_bin ?o - hexagonal_bin)
        (exists (?w - dodgeball ?v - ball)
          (exists (?p - game_object)
            (or
              (forall (?a - game_object ?w - dodgeball)
                (exists (?z - triangular_ramp)
                  (game-optional
                    (not
                      (in_motion ?v)
                    )
                  )
                )
              )
            )
          )
        )
      )
      (game-conserved
        (forall (?l - block)
          (in_motion ?s)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?q ?r - hexagonal_bin)
      (and
        (preference preference1
          (exists (?h - game_object)
            (then
              (hold (not (and (game_start ) (not (and (agent_holds ?q) (above ?r ?q) (< 1 (distance ?h bed)) ) ) ) ) )
              (hold (and (broken ?h) (object_orientation ?q ?h) (not (exists (?c - block ?l - hexagonal_bin) (agent_holds ?q) ) ) ) )
              (once-measure (not (not (on ?q ?q) ) ) (distance ?q ?r) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (external-forall-maximize (> 5 (- 3 )
      )
    )
  )
)
(:scoring
  (and
    5
  )
)
)(define (game game-id-163) (:domain medium-objects-room-v1)
(:setup
  (forall (?x - sliding_door)
    (and
      (game-conserved
        (same_object ?x room_center)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?s - hexagonal_bin)
        (then
          (hold (and (on floor ?s) (< (distance ?s ?s) (distance ?s tan)) ) )
          (once (not (and (exists (?r - (either tall_cylindrical_block cylindrical_block golfball)) (agent_holds pink_dodgeball) ) ) ) )
        )
      )
    )
    (preference preference2
      (exists (?r - cube_block)
        (then
          (once (touch main_light_switch ?r) )
          (once (on ?r ?r) )
          (hold (and (and (and (on ?r desk) (in_motion ?r) ) (in_motion ?r) ) (in_motion ?r) ) )
        )
      )
    )
    (preference preference3
      (exists (?g - hexagonal_bin ?v - dodgeball)
        (at-end
          (agent_holds agent)
        )
      )
    )
    (preference preference4
      (exists (?p - ball ?m - hexagonal_bin)
        (at-end
          (on left front)
        )
      )
    )
    (preference preference5
      (exists (?l ?b ?q ?y ?m - color)
        (at-end
          (in ?m agent)
        )
      )
    )
    (forall (?d - cube_block ?a - flat_block ?o - hexagonal_bin ?k - building)
      (and
        (preference preference6
          (exists (?y - hexagonal_bin ?o - game_object)
            (then
              (hold (and (and (in_motion ?k) (in ?o ?k) (in_motion ?k) ) (and (not (< 1 (distance ?k ?o)) ) ) (in_motion ?o) (on green_golfball ?o) (same_color ?o ?o) (exists (?x - doggie_bed) (and (and (on right ?x) (agent_holds ?o) ) (in_motion agent) ) ) (same_object desk ?k) (agent_holds ?o) ) )
              (once (on ?o ?o) )
              (hold-while (in_motion ?k) (in_motion ?k) (and (not (in_motion room_center) ) (in ?k ?o) (and (in_motion ?k) (= 0 (distance right room_center)) ) (not (not (on ?k ?k) ) ) (< 6 1) (= 1 (distance desk bed) (x_position bed)) (and (not (in_motion ?o) ) (and (and (and (agent_holds desk) (in_motion ?k) ) (and (in_motion ?k) (game_over ) (adjacent floor ?o) ) ) ) ) (= (distance ?o ?k) (distance front ?k) (distance agent ?k) (distance ?o ?o)) (and (agent_holds door) (not (< (distance desk ?o) 6) ) ) (agent_holds ?k) ) )
            )
          )
        )
        (preference preference7
          (exists (?m - hexagonal_bin)
            (at-end
              (same_color ?m ?m)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (external-forall-maximize 5 ) (+ 3 (count preference6:basketball:orange) )
  )
)
(:scoring
  (* (count preference6:dodgeball:top_drawer) 1 )
)
)(define (game game-id-164) (:domain few-objects-room-v1)
(:setup
  (exists (?t - (either basketball cd) ?d - block)
    (and
      (and
        (game-optional
          (= 7 (distance ?d ?d))
        )
      )
      (and
        (and
          (game-conserved
            (agent_holds right)
          )
          (game-conserved
            (not
              (and
                (>= 0.5 (distance ?d rug))
                (< 10 3)
                (not
                  (in rug ?d)
                )
              )
            )
          )
        )
      )
      (game-conserved
        (not
          (in_motion ?d)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o - block)
      (and
        (preference preference1
          (exists (?x - (either laptop book))
            (then
              (once (< (distance ?x ?x) (distance room_center ?x)) )
              (once (and (> 1 1) (not (and (in agent rug) (not (in ?x ?o) ) ) ) ) )
              (once (adjacent ?o top_shelf) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?y - building)
        (then
          (hold (agent_holds ?y) )
          (once (agent_holds ?y) )
          (hold-while (or (agent_holds ?y) (and (not (object_orientation agent ?y) ) (not (on door ?y) ) ) ) (adjacent desk ?y) (and (and (and (on ?y ?y) (game_over ) (and (in_motion ?y) (agent_holds ?y) (same_type ?y bed) ) ) (agent_holds left) ) (not (and (not (agent_holds ?y) ) (agent_holds ?y) ) ) (on ?y ?y) ) (touch agent desktop) )
        )
      )
    )
    (preference preference3
      (exists (?k - pillow)
        (then
          (once (same_type ?k ?k) )
          (once (in_motion ?k) )
          (hold (agent_holds ?k) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 6 6 )
    (>= (external-forall-maximize (+ (* (* 20 (count-same-positions preference3:pink) (count-once-per-objects preference2:dodgeball) (count preference3:pink_dodgeball) (count preference2:beachball:basketball) (and (count preference2:green) (count-increasing-measure preference3:hexagonal_bin) ) )
            (< (+ (* (* (+ 18 20 (* (* (count preference1:pyramid_block) (/ 3 (* (not (count-once-per-objects preference1:yellow) ) (count-once-per-objects preference1:dodgeball) )
                          )
                        )
                        (count preference1:blue_dodgeball:basketball)
                      )
                    )
                    1
                  )
                  (not
                    (count-once-per-objects preference3:green)
                  )
                )
                (total-score)
              )
              (+ (total-time) 0 )
            )
          )
          (* (* (count-once-per-objects preference1) (total-score) )
            (count-once-per-external-objects preference3:pyramid_block)
          )
        )
      )
      6
    )
    (<= (* (count preference1:dodgeball) (count-once-per-objects preference3:hexagonal_bin) )
      (* (count-total preference2:yellow) (* (total-time) )
      )
    )
  )
)
(:scoring
  7
)
)(define (game game-id-165) (:domain few-objects-room-v1)
(:setup
  (forall (?x ?k - green_triangular_ramp)
    (game-conserved
      (and
        (in door ?x)
        (in_motion ?k)
      )
    )
  )
)
(:constraints
  (and
    (forall (?o ?g - hexagonal_bin)
      (and
        (preference preference1
          (then
            (once (agent_holds ?o) )
            (hold-while (in_motion ?o) (object_orientation ?o ?g) )
          )
        )
        (preference preference2
          (exists (?j - building ?n - shelf)
            (then
              (hold (not (on ?n ?n) ) )
              (once (opposite pink_dodgeball ?o) )
              (once (in ?g ?n) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?m - (either doggie_bed desktop) ?x - hexagonal_bin)
        (then
          (once (and (above ?x ?x) (and (and (not (not (adjacent_side ?x ?x ?x) ) ) (agent_holds ?x) ) (in ?x desk) (in_motion ?x) ) ) )
          (any)
          (once (not (or (in_motion ?x) (not (not (and (in_motion desk) (not (on ?x ?x) ) ) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:hexagonal_bin) (count preference1:pink) )
)
(:scoring
  1
)
)(define (game game-id-166) (:domain few-objects-room-v1)
(:setup
  (forall (?g - (either triangular_ramp doggie_bed pencil tall_cylindrical_block) ?g - building ?f - dodgeball)
    (and
      (forall (?j - book)
        (game-conserved
          (in_motion ?f)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?l - (either laptop cube_block) ?r - cube_block)
      (and
        (preference preference1
          (exists (?h - color)
            (then
              (hold-while (agent_holds ?h) (between ?h agent agent) )
              (once (in_motion ?r) )
              (once (not (in_motion ?h) ) )
            )
          )
        )
        (preference preference2
          (exists (?y - dodgeball)
            (then
              (hold (not (agent_holds ?r) ) )
              (hold-while (and (not (rug_color_under ?y ?y) ) (in_motion ?r) ) (same_type door agent) (in ?r ?r) )
              (once (in ?r ?y) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?a - hexagonal_bin ?u ?y - chair)
        (at-end
          (agent_holds desk)
        )
      )
    )
    (preference preference4
      (exists (?a - dodgeball ?a - sliding_door)
        (at-end
          (in ?a desk)
        )
      )
    )
  )
)
(:terminal
  (>= (count-same-positions preference2:yellow) 30 )
)
(:scoring
  15
)
)(define (game game-id-167) (:domain medium-objects-room-v1)
(:setup
  (forall (?i - dodgeball)
    (and
      (game-conserved
        (toggled_on ?i)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?f - block)
        (then
          (once (not (in_motion ?f) ) )
          (once (not (agent_holds ?f) ) )
          (hold (exists (?n - hexagonal_bin) (and (in_motion ?f) (and (and (object_orientation ?f ?f) (and (not (not (and (adjacent ?n ?f) (and (not (and (and (not (not (not (agent_holds ?f) ) ) ) (> (distance ?f agent) 2) ) (in_motion ?f) (in_motion agent) ) ) (not (agent_holds pink_dodgeball) ) ) ) ) ) (< (distance ?n agent) (distance ?f bed)) ) ) (in_motion ?n) (adjacent ?n ?f) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 6 (count preference1:dodgeball:yellow) )
)
(:scoring
  (+ (count preference1:red:pink) (not (count-once preference1:tan:purple) ) )
)
)(define (game game-id-168) (:domain few-objects-room-v1)
(:setup
  (forall (?t - dodgeball)
    (game-conserved
      (in_motion ?t)
    )
  )
)
(:constraints
  (and
    (forall (?o - hexagonal_bin)
      (and
        (preference preference1
          (exists (?v - cylindrical_block ?d - dodgeball ?b - dodgeball)
            (then
              (once (on ?o ?b) )
              (hold (touch agent ?o) )
              (once (object_orientation ?o ?b) )
            )
          )
        )
        (preference preference2
          (exists (?k - curved_wooden_ramp)
            (at-end
              (object_orientation ?k agent)
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?m - chair ?t - cube_block)
        (then
          (hold (agent_holds agent) )
        )
      )
    )
  )
)
(:terminal
  (>= (- 3 )
    3
  )
)
(:scoring
  6
)
)(define (game game-id-169) (:domain few-objects-room-v1)
(:setup
  (exists (?z ?d - (either cellphone dodgeball))
    (game-optional
      (in floor ?z)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?l - wall)
        (then
          (once (game_start ) )
          (hold (in_motion ?l) )
          (hold (on floor ?l) )
        )
      )
    )
    (preference preference2
      (exists (?b - curved_wooden_ramp)
        (then
          (once (adjacent ?b ?b) )
          (once (and (and (not (agent_holds ?b) ) (< 1 1) ) ) )
          (once (> 1 (distance ?b ?b)) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference2:book) (count preference1:golfball) )
)
(:scoring
  (+ (+ (+ 20 (count-once-per-objects preference1:dodgeball) )
      (- (count preference1:dodgeball) )
    )
    (count preference1:block)
  )
)
)(define (game game-id-170) (:domain many-objects-room-v1)
(:setup
  (exists (?j - doggie_bed)
    (game-conserved
      (and
        (in ?j ?j)
        (not
          (in ?j ?j)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?u - block)
        (then
          (once (on ?u desk) )
          (once (not (not (and (in ?u ?u) (not (not (agent_holds agent) ) ) ) ) ) )
          (hold-while (or (exists (?g - hexagonal_bin ?a - dodgeball ?g - dodgeball) (and (and (in_motion ?g) (adjacent ?u ?g) (same_type ?g ?u) (and (forall (?m - game_object) (not (not (faces ?g ?m) ) ) ) (agent_holds ?g) ) ) (on ?g room_center) (in agent ?u) (adjacent ?g ?g) ) ) (same_color ?u ?u) (agent_holds ?u) ) (in_motion ?u) (not (agent_holds ?u) ) )
        )
      )
    )
    (forall (?p - game_object)
      (and
        (preference preference2
          (exists (?k - curved_wooden_ramp ?c ?q - sliding_door)
            (then
              (once (agent_holds ?q) )
              (once (agent_holds ?q) )
              (once (and (and (and (not (agent_holds ?q) ) (open ?q) (same_color ?p ?c) ) (agent_holds ?p) ) (agent_holds ?p) (on room_center ?c) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (and
      (or
        (or
          (<= 20 100 )
        )
        (>= (external-forall-maximize (count preference1:dodgeball) ) (count preference2:yellow:bed) )
      )
      (>= 5 (+ (* 2 8 )
          3
        )
      )
      (or
        (>= (* (count preference1:purple:dodgeball) (+ (total-score) (- (* (count-once-per-objects preference1:brown) 18 )
              )
            )
          )
          0.5
        )
        (= (total-score) 10 )
        (>= (= (* (count-once-per-objects preference2:dodgeball:beachball) 4 )
            50
          )
          (* 2 (* 4 (count-unique-positions preference2:purple:green) )
            25
            (count preference2:pink)
            (+ 1 (total-time) )
            (count-once-per-objects preference2:white:yellow)
          )
        )
      )
    )
    (< (count preference2:beachball) (count-once-per-objects preference2:pink_dodgeball) )
  )
)
(:scoring
  5
)
)(define (game game-id-171) (:domain many-objects-room-v1)
(:setup
  (exists (?m - shelf ?m - curved_wooden_ramp)
    (exists (?a - triangular_ramp ?q - game_object)
      (exists (?h - cube_block)
        (or
          (not
            (forall (?l - hexagonal_bin)
              (and
                (exists (?w - hexagonal_bin ?u - dodgeball)
                  (exists (?o - chair ?r - (either watch dodgeball))
                    (exists (?n - pyramid_block)
                      (game-optional
                        (agent_holds ?l)
                      )
                    )
                  )
                )
                (game-conserved
                  (in ?q ?h)
                )
                (and
                  (exists (?c - curved_wooden_ramp ?z - golfball)
                    (game-optional
                      (in_motion ?l)
                    )
                  )
                  (exists (?i - pillow)
                    (exists (?u - cube_block ?j - game_object)
                      (game-optional
                        (agent_holds ?q)
                      )
                    )
                  )
                )
              )
            )
          )
          (and
            (forall (?n - cube_block)
              (and
                (game-conserved
                  (>= (distance side_table ?n) (distance ?m rug))
                )
              )
            )
            (and
              (game-conserved
                (and
                  (in ?q ?h)
                  (on ?m ?m)
                  (is_setup_object ?h)
                  (agent_holds ?q)
                )
              )
            )
          )
          (and
            (game-conserved
              (agent_holds ?q)
            )
            (and
              (exists (?x - hexagonal_bin)
                (and
                  (game-conserved
                    (not
                      (in ?h ?x)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?n - cube_block ?l - doggie_bed)
        (then
          (once (in_motion ?l) )
          (once (exists (?s - chair) (touch ?s ?s) ) )
          (once-measure (agent_holds ?l) (x_position ?l) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference1:yellow) (count-unique-positions preference1:red:red) )
)
(:scoring
  5
)
)(define (game game-id-172) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (and
      (exists (?h - dodgeball)
        (open ?h)
      )
      (game_start )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?o - tall_cylindrical_block)
        (then
          (once (< 6 1) )
          (once (not (in ?o sideways) ) )
          (hold (agent_holds ?o) )
        )
      )
    )
  )
)
(:terminal
  (or
    (<= (* (* 2 (+ (count-once-per-objects preference1:doggie_bed:basketball) 2 )
        )
        (* 100 (- 2 )
        )
      )
      4
    )
  )
)
(:scoring
  (* (* (count preference1:basketball) (+ (count preference1:yellow:dodgeball) (>= (total-time) (* (count-once-per-objects preference1:purple) (* (- 3 )
              (count-once-per-objects preference1:pink)
              (* (count-once-per-objects preference1:pink) (* (count preference1:beachball:basketball:beachball) (* (* (count preference1:hexagonal_bin:dodgeball) (* (* 2 (count-once preference1:blue) (count-measure preference1) (count-once-per-objects preference1:dodgeball) )
                        (* (count preference1:blue) (count preference1:dodgeball:red) )
                      )
                    )
                  )
                )
              )
              10
            )
            3
            (count preference1:book)
          )
        )
      )
    )
    (count-measure preference1:orange:triangle_block)
  )
)
)(define (game game-id-173) (:domain few-objects-room-v1)
(:setup
  (forall (?q - hexagonal_bin)
    (exists (?x - (either dodgeball dodgeball alarm_clock))
      (exists (?w ?b ?s ?j ?k ?o - hexagonal_bin ?s - cylindrical_block)
        (game-optional
          (same_color ?x ?x)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?k - chair ?m - cube_block)
        (then
          (hold (and (in_motion ?m) (not (touch ?m ?m) ) ) )
          (once (game_over ) )
          (once (in_motion ?m) )
        )
      )
    )
  )
)
(:terminal
  (> 2 7 )
)
(:scoring
  5
)
)(define (game game-id-174) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (exists (?x - dodgeball ?g - hexagonal_bin)
      (not
        (in room_center desk)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?d - ball ?d - chair ?i - dodgeball ?y - dodgeball)
        (then
          (hold (> (distance ?y top_shelf) (distance_side ?y ?y ?y)) )
          (hold (not (= 1 (distance_side ?y ?y ?y)) ) )
          (hold (not (same_type ?y ?y) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (+ 1 (count preference1:beachball) )
  )
)
(:scoring
  6
)
)(define (game game-id-175) (:domain few-objects-room-v1)
(:setup
  (forall (?k ?j ?l - ball)
    (and
      (or
        (and
          (and
            (forall (?b - bridge_block)
              (game-optional
                (on ?k ?j)
              )
            )
          )
          (exists (?s - block)
            (game-conserved
              (not
                (same_color ?l ?l)
              )
            )
          )
          (forall (?z - dodgeball)
            (game-conserved
              (not
                (agent_holds ?k)
              )
            )
          )
        )
        (and
          (and
            (and
              (forall (?c - ball ?e - hexagonal_bin ?x - (either cellphone main_light_switch dodgeball blue_cube_block cylindrical_block))
                (not
                  (game-conserved
                    (and
                      (and
                        (and
                          (and
                            (on ?j ?k)
                            (and
                              (and
                                (exists (?r - beachball)
                                  (in_motion ?k)
                                )
                                (same_type ?x ?k)
                              )
                              (in_motion desk)
                            )
                          )
                          (and
                            (and
                              (or
                                (on ?x agent)
                                (adjacent ?k ?j)
                              )
                              (in_motion room_center)
                              (not
                                (faces ?x ?l)
                              )
                            )
                            (exists (?p - curved_wooden_ramp)
                              (not
                                (adjacent north_wall ?j)
                              )
                            )
                          )
                        )
                        (not
                          (and
                            (exists (?b - building)
                              (exists (?v - chair)
                                (in_motion ?l)
                              )
                            )
                            (not
                              (rug_color_under ?x ?l)
                            )
                          )
                        )
                        (in desk ?l)
                      )
                      (and
                        (is_setup_object ?j)
                        (exists (?f - wall)
                          (same_color ?l ?k)
                        )
                      )
                    )
                  )
                )
              )
              (exists (?a - yellow_cube_block)
                (forall (?q - (either beachball cube_block))
                  (game-conserved
                    (agent_holds ?q)
                  )
                )
              )
              (game-optional
                (not
                  (and
                    (faces room_center ?k)
                    (on ?j bed)
                  )
                )
              )
            )
          )
        )
        (exists (?x - chair ?e - flat_block)
          (and
            (forall (?m - ball ?z - game_object)
              (and
                (exists (?y - cube_block ?h - hexagonal_bin ?n - pillow)
                  (game-optional
                    (or
                      (in room_center ?j)
                      (and
                        (agent_holds ?n)
                        (on ?z ?k)
                      )
                      (not
                        (is_setup_object rug)
                      )
                      (not
                        (in_motion ?j)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
      (game-conserved
        (agent_holds ?j)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?v - hexagonal_bin)
        (then
          (any)
          (once (agent_holds ?v) )
          (once (adjacent ?v ?v) )
        )
      )
    )
  )
)
(:terminal
  (> 3 (count preference1:orange:red) )
)
(:scoring
  (+ (* (* (not 5 ) 2 )
      (count preference1:basketball)
    )
    3
  )
)
)(define (game game-id-176) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?t - cube_block ?l - block)
      (exists (?n - game_object)
        (and
          (and
            (game-conserved
              (not
                (on room_center ?l)
              )
            )
          )
          (and
            (exists (?s - doggie_bed)
              (exists (?g - (either cd ball dodgeball) ?b - game_object ?o - hexagonal_bin)
                (exists (?z - curved_wooden_ramp)
                  (exists (?p - (either alarm_clock basketball))
                    (forall (?c ?u - hexagonal_bin ?x - game_object)
                      (and
                        (exists (?u - teddy_bear)
                          (game-conserved
                            (not
                              (not
                                (not
                                  (in_motion floor)
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?p - chair)
        (at-end
          (agent_holds ?p)
        )
      )
    )
    (preference preference2
      (exists (?v - chair)
        (then
          (once (and (agent_holds agent) (in ?v back) ) )
          (once (in_motion ?v) )
          (once (in agent ?v) )
        )
      )
    )
    (preference preference3
      (exists (?e - hexagonal_bin)
        (then
          (once (on ?e ?e) )
          (once (not (game_over ) ) )
          (hold (and (not (and (not (agent_holds agent) ) (same_color yellow desk) (agent_holds rug) ) ) (not (touch ?e ?e) ) ) )
          (once (not (not (not (agent_holds ?e) ) ) ) )
        )
      )
    )
    (preference preference4
      (exists (?v - hexagonal_bin)
        (then
          (once (agent_holds ?v) )
          (hold (and (and (in_motion agent) (in_motion desktop) ) (and (and (and (toggled_on ?v) (or (or (same_type ?v ?v) ) (forall (?f - (either pyramid_block dodgeball)) (agent_holds ?f) ) ) (agent_holds ?v) ) (in ?v ?v) (on ?v ?v) ) (not (in_motion ?v) ) ) ) )
          (hold (= (distance ?v agent) 9 (distance ?v ?v)) )
        )
      )
    )
    (preference preference5
      (exists (?x - hexagonal_bin ?i - bridge_block ?n - (either top_drawer teddy_bear))
        (then
          (once (open ?n) )
          (hold-while (on ?n ?n) (and (above ?n ?n) (is_setup_object ?n) ) )
          (once (adjacent ?n ?n) )
        )
      )
    )
  )
)
(:terminal
  (= 4 (< (count preference1:golfball) (+ (* (count preference5:blue_pyramid_block:golfball:pink_dodgeball) (count-once-per-objects preference4:blue_dodgeball) )
        (+ (count-overlapping preference1:basketball) (not (count-once preference4:basketball) ) 3 )
      )
    )
  )
)
(:scoring
  7
)
)(define (game game-id-177) (:domain medium-objects-room-v1)
(:setup
  (forall (?i - dodgeball ?i - triangular_ramp)
    (game-conserved
      (not
        (agent_holds ?i)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?g - curved_wooden_ramp)
        (then
          (once (in_motion ?g) )
          (hold (not (not (on ?g pink_dodgeball) ) ) )
          (once (between agent ?g pillow) )
        )
      )
    )
  )
)
(:terminal
  (>= (not (count-total preference1:dodgeball) ) 5 )
)
(:scoring
  (+ 5 (external-forall-maximize 10 ) )
)
)(define (game game-id-178) (:domain many-objects-room-v1)
(:setup
  (forall (?c - teddy_bear ?w ?n - game_object ?k - game_object ?x - ball)
    (exists (?h ?q - hexagonal_bin)
      (game-conserved
        (not
          (not
            (and
              (adjacent floor ?x)
              (agent_holds ?x)
              (and
                (above agent pink)
                (and
                  (agent_holds agent)
                  (and
                    (not
                      (and
                        (rug_color_under ?x ?h)
                        (touch ?q ?q)
                      )
                    )
                    (and
                      (and
                        (and
                          (and
                            (forall (?s - ball)
                              (touch ?s rug)
                            )
                            (agent_holds ?h)
                          )
                          (on ?h ?h)
                        )
                        (not
                          (not
                            (not
                              (agent_holds west_wall)
                            )
                          )
                        )
                      )
                      (agent_holds ?h)
                      (and
                        (game_start )
                        (in ?x ?h)
                        (in_motion bed)
                        (in ?h ?h)
                      )
                    )
                  )
                )
              )
              (rug_color_under ?q ?x)
              (< 1 (distance agent ?x))
              (and
                (or
                  (and
                    (in desk ?h)
                    (and
                      (not
                        (agent_holds ?q)
                      )
                      (and
                        (not
                          (in_motion ?q)
                        )
                        (in_motion bed)
                        (in_motion pillow)
                        (not
                          (and
                            (in_motion ?h)
                            (not
                              (and
                                (and
                                  (not
                                    (and
                                      (not
                                        (and
                                          (and
                                            (not
                                              (< (distance ?h ?h) (distance ?x ?q))
                                            )
                                            (touch ?q ?q)
                                          )
                                          (on ?x ?x)
                                        )
                                      )
                                      (and
                                        (and
                                          (in_motion ?h)
                                          (not
                                            (in_motion ?x)
                                          )
                                          (adjacent ?q ?h)
                                          (adjacent ?h agent)
                                        )
                                        (and
                                          (and
                                            (agent_holds desk)
                                            (and
                                              (in_motion ?h)
                                              (agent_holds ?h)
                                            )
                                          )
                                          (and
                                            (touch ?q ?q)
                                            (not
                                              (agent_holds ?q)
                                            )
                                            (and
                                              (adjacent ?x bed)
                                              (or
                                                (<= 1 (distance_side rug ?x ?x ?h))
                                                (and
                                                  (in_motion ?q)
                                                  (adjacent_side ?h bridge_block ?x)
                                                )
                                              )
                                            )
                                            (on ?q desk)
                                            (agent_holds ?x)
                                            (forall (?e - (either golfball key_chain))
                                              (not
                                                (or
                                                  (in_motion ?x)
                                                  (agent_holds rug)
                                                )
                                              )
                                            )
                                            (not
                                              (in_motion ?h)
                                            )
                                            (not
                                              (agent_holds agent)
                                            )
                                          )
                                        )
                                      )
                                      (not
                                        (in_motion ?x)
                                      )
                                    )
                                  )
                                  (agent_holds ?q)
                                  (and
                                    (agent_holds ?q)
                                    (in_motion ?x)
                                  )
                                )
                                (and
                                  (on ?h ?q)
                                  (and
                                    (not
                                      (not
                                        (exists (?i - dodgeball ?v ?w - game_object)
                                          (in_motion ?x)
                                        )
                                      )
                                    )
                                    (not
                                      (in_motion ?q)
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                    (and
                      (not
                        (and
                          (adjacent_side rug ?h ?q ?q)
                          (not
                            (not
                              (agent_holds ?q)
                            )
                          )
                        )
                      )
                      (< 1 (building_size ?x))
                    )
                  )
                )
                (not
                  (not
                    (not
                      (agent_holds ?q)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?j - hexagonal_bin ?u - pillow)
        (at-end
          (agent_holds ?u)
        )
      )
    )
  )
)
(:terminal
  (>= (* (* (count preference1:dodgeball:basketball) (or (count-increasing-measure preference1:basketball) (* (count-shortest preference1:basketball) (count preference1:red) 2 )
          (+ (* (count preference1:dodgeball:golfball) 3 )
            (* (count preference1:yellow) (+ (+ (+ (count preference1:pink_dodgeball) 5 )
                  (* (/ (count preference1:hexagonal_bin:pink) 10 ) (count preference1:beachball) )
                )
                (count-longest preference1:yellow_cube_block)
              )
              3
              (* 7 (+ (count preference1:blue_pyramid_block) (* (>= (- (+ 5 (count preference1:blue_dodgeball) (total-time) )
                      )
                      6
                    )
                    (count-longest preference1:beachball:beachball)
                  )
                )
              )
              (or
                (count preference1:pink)
              )
              (count-once preference1:basketball)
            )
          )
        )
      )
      (count-once-per-objects preference1:beachball)
    )
    (count preference1:dodgeball:pyramid_block)
  )
)
(:scoring
  (* 8 (count preference1:basketball) )
)
)(define (game game-id-179) (:domain few-objects-room-v1)
(:setup
  (and
    (game-optional
      (exists (?q - cylindrical_block)
        (not
          (in_motion ?q)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?a - game_object)
        (then
          (hold (and (in_motion ?a) (< 8 (distance desk bed)) ) )
          (once (< 1 1) )
          (hold (agent_holds ?a) )
        )
      )
    )
  )
)
(:terminal
  (<= 4 2 )
)
(:scoring
  (* (* (+ (* (* (count preference1:pink) (- 5 (* (count-once-per-objects preference1:basketball) (+ (- (* 0.5 (* (count preference1:yellow) 10 )
                      (and
                        (* (count preference1:purple:beachball:basketball) 4 )
                      )
                    )
                  )
                  15
                )
              )
            )
          )
          (* (* 1 5 )
            (* (* (/ (* 4 2 )
                  10
                )
                (= (count-once-per-objects preference1:golfball:dodgeball) (count preference1:brown) )
              )
              1
            )
          )
          (* (count preference1:dodgeball) (count preference1:cube_block) )
        )
        (count preference1:green)
      )
      (+ 2 10 (total-score) (count preference1:beachball) (* (count-once preference1:basketball:dodgeball) (* 5 (* (count-once-per-external-objects preference1:dodgeball) 10 )
          )
          (count preference1:beachball)
          5
          2
          (count preference1:pink)
          (count-total preference1:red:alarm_clock)
          (count preference1:blue_cube_block)
          60
        )
        10
      )
    )
    (count preference1:dodgeball)
    (count-total preference1:yellow_cube_block)
  )
)
)(define (game game-id-180) (:domain many-objects-room-v1)
(:setup
  (forall (?e ?s ?h - block)
    (game-conserved
      (not
        (not
          (and
            (not
              (in_motion ?h)
            )
            (and
              (agent_holds ?h)
              (adjacent ?e ?h)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?i - building ?a - curved_wooden_ramp)
      (and
        (preference preference1
          (exists (?f ?u - ball ?t - (either cylindrical_block laptop) ?s - pillow)
            (then
              (once (exists (?w - building ?o - (either dodgeball main_light_switch)) (not (agent_holds ?s) ) ) )
              (once (in_motion rug) )
              (once (agent_holds agent) )
            )
          )
        )
        (preference preference2
          (exists (?h - dodgeball)
            (at-end
              (> (distance ?a ?a) (x_position ?h))
            )
          )
        )
        (preference preference3
          (at-end
            (toggled_on blue)
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= 3 3 )
  )
)
(:scoring
  (count-once-per-objects preference3:green)
)
)(define (game game-id-181) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (and
        (exists (?c - (either yellow_cube_block pen) ?y - triangular_ramp)
          (and
            (forall (?s - (either hexagonal_bin))
              (forall (?f - hexagonal_bin)
                (game-optional
                  (not
                    (not
                      (not
                        (not
                          (not
                            (not
                              (in ?s ?y)
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
            (and
              (and
                (and
                  (and
                    (or
                      (and
                        (and
                          (exists (?l - dodgeball)
                            (and
                              (game-optional
                                (in ?l ?l)
                              )
                            )
                          )
                        )
                      )
                      (exists (?v - game_object ?i - red_dodgeball ?e - hexagonal_bin)
                        (and
                          (game-optional
                            (and
                              (opposite ?y ?e)
                              (and
                                (and
                                  (touch agent ?e)
                                  (not
                                    (in_motion ?y)
                                  )
                                )
                                (object_orientation ?e ?e)
                              )
                            )
                          )
                          (game-conserved
                            (exists (?u - (either basketball cellphone chair) ?r - dodgeball)
                              (agent_holds ?y)
                            )
                          )
                        )
                      )
                      (exists (?e - ball)
                        (game-conserved
                          (not
                            (and
                              (in_motion bed)
                            )
                          )
                        )
                      )
                    )
                  )
                )
                (and
                  (and
                    (and
                      (and
                        (and
                          (and
                            (or
                              (exists (?x - dodgeball ?f - drawer)
                                (and
                                  (game-conserved
                                    (in_motion ?y)
                                  )
                                )
                              )
                              (and
                                (game-optional
                                  (in bed ?y)
                                )
                              )
                              (forall (?m - golfball)
                                (and
                                  (game-conserved
                                    (touch ?y ?m)
                                  )
                                )
                              )
                            )
                            (game-optional
                              (and
                                (in_motion ?y)
                                (not
                                  (not
                                    (agent_holds ?y)
                                  )
                                )
                              )
                            )
                            (game-conserved
                              (adjacent ?y ?y)
                            )
                          )
                          (exists (?s - hexagonal_bin ?n - hexagonal_bin ?x - chair)
                            (game-conserved
                              (agent_holds ?x)
                            )
                          )
                          (and
                            (and
                              (exists (?n - (either golfball side_table))
                                (and
                                  (and
                                    (game-conserved
                                      (in_motion ?n)
                                    )
                                    (game-conserved
                                      (< 1 (distance rug ?y))
                                    )
                                    (game-conserved
                                      (and
                                        (rug_color_under ?n ?y)
                                        (in_motion desk)
                                      )
                                    )
                                  )
                                  (forall (?i - drawer)
                                    (and
                                      (and
                                        (and
                                          (and
                                            (exists (?e - hexagonal_bin)
                                              (forall (?r - dodgeball)
                                                (forall (?t - hexagonal_bin)
                                                  (and
                                                    (forall (?o - (either hexagonal_bin hexagonal_bin) ?z - watch)
                                                      (game-conserved
                                                        (agent_holds ?r)
                                                      )
                                                    )
                                                    (forall (?x - hexagonal_bin ?c - hexagonal_bin)
                                                      (game-optional
                                                        (and
                                                          (>= (distance_side ?t desk ?n ?t) 7)
                                                          (on agent ?c)
                                                          (in_motion desk)
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                            (game-conserved
                                              (object_orientation ?y ?n)
                                            )
                                            (exists (?s - hexagonal_bin ?o - cube_block)
                                              (game-conserved
                                                (and
                                                  (and
                                                    (and
                                                      (agent_holds ?y)
                                                      (in_motion ?n)
                                                    )
                                                    (not
                                                      (on ?n ?y)
                                                    )
                                                  )
                                                  (and
                                                    (and
                                                      (in_motion desk)
                                                      (and
                                                        (in_motion ?o)
                                                        (not
                                                          (not
                                                            (in ?o ?o)
                                                          )
                                                        )
                                                      )
                                                    )
                                                    (and
                                                      (in ?o ?y)
                                                      (> 5 (distance_side ?n ?o ?n ?i))
                                                    )
                                                  )
                                                  (agent_holds ?y)
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                              (forall (?v - hexagonal_bin ?t - hexagonal_bin)
                                (game-optional
                                  (not
                                    (or
                                      (on desk ?t)
                                      (on agent ?y)
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                      (exists (?g - hexagonal_bin)
                        (and
                          (game-optional
                            (in_motion ?g)
                          )
                        )
                      )
                    )
                    (and
                      (and
                        (and
                          (and
                            (game-conserved
                              (and
                                (in ?y ?y)
                              )
                            )
                            (and
                              (and
                                (and
                                  (game-optional
                                    (and
                                      (and
                                        (and
                                          (in_motion ?y)
                                          (and
                                            (faces ?y upright)
                                            (agent_holds ?y)
                                          )
                                        )
                                        (not
                                          (<= (x_position ?y) 6)
                                        )
                                      )
                                      (and
                                        (adjacent ?y ?y)
                                        (in_motion ?y)
                                      )
                                      (not
                                        (agent_holds ?y)
                                      )
                                      (equal_x_position agent ?y)
                                    )
                                  )
                                  (forall (?h - ball)
                                    (game-conserved
                                      (not
                                        (on room_center ?h)
                                      )
                                    )
                                  )
                                  (game-conserved
                                    (not
                                      (in_motion rug)
                                    )
                                  )
                                )
                              )
                              (not
                                (and
                                  (game-optional
                                    (not
                                      (agent_holds ?y)
                                    )
                                  )
                                )
                              )
                            )
                          )
                          (and
                            (game-optional
                              (not
                                (not
                                  (on ?y ?y)
                                )
                              )
                            )
                            (and
                              (game-conserved
                                (agent_holds ?y)
                              )
                            )
                          )
                          (game-conserved
                            (agent_holds ?y)
                          )
                        )
                      )
                      (game-conserved
                        (same_type agent ?y)
                      )
                      (game-conserved
                        (adjacent agent ?y)
                      )
                    )
                  )
                )
              )
            )
          )
        )
        (forall (?u - block)
          (game-conserved
            (and
              (not
                (and
                  (in ?u ?u)
                  (in ?u agent)
                )
              )
              (in_motion ?u)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?q - game_object)
      (and
        (preference preference1
          (exists (?h - dodgeball)
            (then
              (hold (and (in ?q ?q) (and (and (on ?h ?q) (in_motion ?h) (not (in_motion ?q) ) ) (on ?h desk) ) ) )
              (once (on ?q ?q) )
              (hold (in_motion ?h) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-overlapping preference1:hexagonal_bin) (* (count-once-per-objects preference1:green) (count-once-per-objects preference1:cube_block) )
  )
)
(:scoring
  (* 15 (count preference1:red:rug:yellow) 5 (+ 2 )
  )
)
)(define (game game-id-182) (:domain few-objects-room-v1)
(:setup
  (exists (?t ?w ?b - hexagonal_bin)
    (game-optional
      (agent_holds floor)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?b - wall ?v - dodgeball)
        (then
          (hold (and (not (on ?v ?v) ) (on ?v ?v) ) )
          (once (and (on ?v agent) (same_object ?v ?v) ) )
          (once (agent_holds ?v) )
        )
      )
    )
    (forall (?n - (either rug golfball))
      (and
        (preference preference2
          (exists (?e - teddy_bear ?j - ball ?b - (either dodgeball cellphone))
            (then
              (once (<= (distance ?n ?b) 8) )
              (hold-while (is_setup_object ?b) (agent_holds ?n) )
              (once (opposite ?n ?b) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (= 1 (- 1 )
      )
    )
  )
)
(:scoring
  2
)
)(define (game game-id-183) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (agent_holds front)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?a - cube_block)
        (then
          (hold-while (< 1 (x_position ?a)) (not (in_motion ?a) ) )
          (once (object_orientation ?a desk) )
          (hold (in_motion ?a) )
        )
      )
    )
    (preference preference2
      (exists (?p - dodgeball)
        (then
          (once (in_motion agent) )
          (hold (> (x_position ?p) 1) )
          (once (agent_holds ?p) )
          (once (rug_color_under ?p ?p) )
        )
      )
    )
  )
)
(:terminal
  (>= 6 (count preference2:top_drawer:golfball) )
)
(:scoring
  10
)
)(define (game game-id-184) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?i - (either cylindrical_block golfball) ?r - dodgeball)
      (forall (?v - hexagonal_bin ?q - hexagonal_bin)
        (game-conserved
          (in ?r ?q)
        )
      )
    )
    (forall (?q - (either key_chain blue_cube_block))
      (and
        (exists (?d - game_object)
          (exists (?z - ball)
            (and
              (game-conserved
                (and
                  (and
                    (not
                      (= 4 0 (distance ?d ?z) 1)
                    )
                    (and
                      (adjacent bed rug)
                      (not
                        (faces floor desk)
                      )
                    )
                  )
                  (in_motion ?d)
                )
              )
              (and
                (game-conserved
                  (and
                    (same_color ?q ?z)
                    (and
                      (or
                        (< (distance ?d ?z) (x_position ?d))
                        (in_motion ?z)
                      )
                      (same_type ?z ?z)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
    (exists (?x - block)
      (exists (?v - building ?b - rug)
        (not
          (game-optional
            (not
              (agent_holds ?x)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?i - hexagonal_bin)
        (then
          (once (agent_holds ?i) )
          (once (and (and (in_motion ?i) (exists (?v - dodgeball ?k - blue_cube_block) (and (in ?i ?k) (agent_holds ?i) ) ) ) (in ?i ?i) (touch ?i ?i) (same_object pink_dodgeball ?i) (not (or (forall (?r - color) (agent_holds ?i) ) (same_color ?i ?i) ) ) (agent_holds ?i) (not (in_motion ?i) ) ) )
          (once (in ?i desk) )
        )
      )
    )
    (preference preference2
      (exists (?q - dodgeball)
        (then
          (hold-while (and (not (and (and (< 6 6) (not (exists (?i - ball) (in_motion ?q) ) ) ) (and (same_object ?q ?q) (in_motion ?q) ) ) ) (and (not (in_motion ?q) ) (not (agent_holds ?q) ) ) ) (and (and (and (in_motion ?q) (agent_holds ?q) ) (or (agent_holds agent) (agent_holds ?q) ) ) (touch ?q ?q) ) )
          (hold-while (not (not (not (on ?q ?q) ) ) ) (agent_holds ?q) )
          (once (on ?q ?q) )
        )
      )
    )
  )
)
(:terminal
  (and
    (<= (+ (external-forall-maximize (+ (count-once-per-objects preference2:yellow:orange) (count preference2:basketball) )
        )
        (count preference2:dodgeball:tall_cylindrical_block)
      )
      1
    )
    (>= (count preference1:orange) (+ (* (count preference1:alarm_clock) (count-once-per-objects preference1) )
        (count-once-per-objects preference1:hexagonal_bin:basketball)
      )
    )
  )
)
(:scoring
  (* (count-once-per-objects preference1:cylindrical_block:beachball) (* (* 10 (count preference2:golfball:cube_block) )
      (- (* 3 5 )
      )
    )
  )
)
)(define (game game-id-185) (:domain many-objects-room-v1)
(:setup
  (exists (?g - cube_block)
    (exists (?a - block ?y - hexagonal_bin)
      (and
        (exists (?m ?t - hexagonal_bin)
          (and
            (game-optional
              (not
                (in ?y ?g)
              )
            )
          )
        )
        (exists (?w - ball ?r - block)
          (game-optional
            (adjacent ?r desk)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?x ?t ?v ?r ?a ?i - hexagonal_bin)
        (then
          (once (agent_holds agent) )
          (once (game_start ) )
          (once (and (agent_holds ?i) (on ?r ?v) (not (agent_holds ?a) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count-once-per-external-objects preference1:yellow) 0 (* (count-same-positions preference1:purple) (count-once-per-external-objects preference1:dodgeball) (count preference1:golfball:red_pyramid_block) )
      (count preference1:pink_dodgeball)
      (count preference1:blue_dodgeball)
      3
    )
    (count-once-per-objects preference1:cylindrical_block)
  )
)
(:scoring
  1
)
)(define (game game-id-186) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (in_motion agent)
  )
)
(:constraints
  (and
    (forall (?e - teddy_bear)
      (and
        (preference preference1
          (exists (?y - dodgeball)
            (then
              (once (agent_holds ?e) )
              (hold-while (is_setup_object desktop) (> 1 2) (and (in_motion ?e) (and (in agent ?y) (agent_holds ?y) ) (touch ?y ?y) ) (in_motion ?e) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 2 5 )
    (<= 0 1 )
    (<= (total-score) (+ 5 10 )
    )
  )
)
(:scoring
  3
)
)(define (game game-id-187) (:domain few-objects-room-v1)
(:setup
  (forall (?r - desktop)
    (game-optional
      (touch ?r ?r)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?g - curved_wooden_ramp)
        (then
          (hold (not (and (not (not (in_motion ?g) ) ) (agent_holds ?g) ) ) )
          (once (adjacent agent floor) )
          (once (on ?g brown) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (count preference1:basketball) (count preference1:block) )
      (>= (= 2 (or (* (count preference1) (external-forall-maximize (or (* (* (+ (= (>= (* 10 (* (* (count preference1:yellow) (count-once-per-objects preference1:yellow) )
                                (* (total-time) 5 60 (count preference1:doggie_bed) (+ (count-once-per-objects preference1:blue_dodgeball) 7 )
                                  (* 6 (count-once-per-objects preference1:dodgeball) )
                                )
                                (external-forall-maximize
                                  (external-forall-maximize
                                    (+ (* (+ (count-once preference1) (+ 2 )
                                        )
                                        7
                                      )
                                      (count preference1:side_table)
                                    )
                                  )
                                )
                                (count-once-per-objects preference1:beachball)
                                10
                                (count preference1:dodgeball)
                                (count preference1:triangle_block)
                              )
                              (* (- 2 )
                                (* 10 (- 4 )
                                )
                                (count-once-per-objects preference1:dodgeball)
                                (* 2 30 5 (* (* (count preference1:dodgeball:golfball) (* (count-once preference1:pink_dodgeball) 100 )
                                    )
                                    (count-once-per-external-objects preference1:yellow_cube_block)
                                  )
                                  (count-once-per-external-objects preference1:red_pyramid_block)
                                  (count-once-per-objects preference1:dodgeball)
                                  6
                                  4
                                  (count-once-per-objects preference1:book)
                                )
                              )
                              0
                              (count-once-per-objects preference1:tall_cylindrical_block:dodgeball)
                              (-
                                (count preference1:green)
                                10
                              )
                              (* (not (* (* (count-once-per-objects preference1:dodgeball) 5 )
                                    (* (+ (* (count-once-per-objects preference1) (external-forall-maximize (- (* (* 5 (* (and (count-same-positions preference1:golfball:dodgeball) ) (count-once-per-external-objects preference1:golfball) (* (count-once-per-objects preference1:blue_dodgeball) (count preference1:yellow) )
                                                  )
                                                  1
                                                )
                                                (= (+ (count preference1:yellow_pyramid_block) 1 )
                                                  (count-once-per-objects preference1:green)
                                                )
                                              )
                                            )
                                          )
                                        )
                                        (* (count-once preference1:pink) (- 6 (count-once-per-objects preference1:hexagonal_bin) ) (count preference1:yellow) (count preference1:pink) (count preference1:pink_dodgeball) (or (count-increasing-measure preference1:yellow) (count-once-per-objects preference1:pink_dodgeball) ) )
                                      )
                                      (count preference1:green:basketball)
                                      3
                                    )
                                  )
                                )
                                (+ (count-longest preference1:beachball:doggie_bed) 3 )
                              )
                              (count-once-per-objects preference1:hexagonal_bin)
                              (count-once preference1:top_drawer)
                              3
                              (+ (count preference1:hexagonal_bin) (- 3 )
                              )
                              (count-once preference1:beachball)
                            )
                            3
                          )
                          (count-increasing-measure preference1:red)
                        )
                        (count-once-per-objects preference1:brown)
                      )
                      (count-once-per-objects preference1:basketball:dodgeball:dodgeball)
                    )
                    (external-forall-maximize
                      (total-score)
                    )
                  )
                  (-
                    (count preference1:triangle_block)
                    (+ 2 )
                  )
                )
              )
            )
          )
        )
        (* (count preference1:golfball) (count-once-per-objects preference1:dodgeball) )
      )
      (or
        (>= (* (- (count-unique-positions preference1:yellow_cube_block) )
            2
            (< (count-once-per-objects preference1:pink) 7 )
          )
          (+ 4 (count preference1:blue_dodgeball) (count preference1:basketball) 3 2 )
        )
        (or
          (or
            (< (<= (count preference1:golfball:dodgeball) (external-forall-maximize (>= (* (+ 4 (count preference1:basketball:orange) )
                      2
                    )
                    10
                  )
                )
              )
              (count-once-per-objects preference1:golfball)
            )
            (> (count preference1:yellow) 50 )
          )
          (>= (and 8 ) (count-once-per-objects preference1:golfball) )
        )
      )
    )
    (not
      (>= (count-increasing-measure preference1:tall_cylindrical_block) 4 )
    )
    (>= 2 20 )
  )
)
(:scoring
  (* (count-once-per-objects preference1:hexagonal_bin:dodgeball) )
)
)(define (game game-id-188) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (and
      (exists (?g - teddy_bear)
        (agent_holds ?g)
      )
      (forall (?a - dodgeball ?l - (either cellphone dodgeball))
        (object_orientation room_center ?l)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?d - (either cd golfball))
        (at-end
          (< 1 9)
        )
      )
    )
  )
)
(:terminal
  (>= (- 5 )
    (+ 3 (= (+ (* (count preference1:blue_cube_block) 3 )
          (* (count preference1) 3 )
        )
        (* (* (* (count preference1:dodgeball) (total-score) (<= (- (* (* 2 2 5 )
                    (count-once-per-external-objects preference1:golfball:dodgeball)
                  )
                )
                (count-once-per-objects preference1:dodgeball)
              )
              (or
                4
                (count-once preference1:dodgeball:hexagonal_bin)
                (count-once-per-objects preference1:basketball)
              )
              4
              (* (count-once-per-objects preference1:dodgeball) (count preference1:cylindrical_block) )
              4
              (count-once-per-objects preference1:hexagonal_bin)
              2
            )
            (+ (+ (count preference1:green) (* 2 10 )
              )
              3
              (count preference1:rug)
              (count preference1:basketball)
              15
              (count preference1:dodgeball)
              20
            )
          )
          (* 2 (* 7 (- (count preference1:blue_pyramid_block) 1 ) )
          )
        )
      )
    )
  )
)
(:scoring
  (count preference1:pink)
)
)(define (game game-id-189) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?p - hexagonal_bin ?o - hexagonal_bin)
      (exists (?a - watch ?e - hexagonal_bin)
        (exists (?g - (either dodgeball golfball game_object))
          (exists (?z - (either pyramid_block bridge_block) ?w - (either golfball blue_cube_block pen golfball) ?u - teddy_bear)
            (exists (?b - hexagonal_bin)
              (exists (?j - building)
                (exists (?s - doggie_bed ?x - hexagonal_bin)
                  (exists (?t - shelf ?s - curved_wooden_ramp)
                    (game-conserved
                      (and
                        (and
                          (in_motion ?o)
                          (not
                            (on ?b ?x)
                          )
                        )
                        (in desk ?s)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?e - hexagonal_bin)
        (then
          (once (not (not (is_setup_object yellow) ) ) )
          (once (and (and (not (and (between ?e agent ?e) (in_motion ?e) ) ) (exists (?s - hexagonal_bin ?z - dodgeball) (agent_holds ?e) ) ) (in_motion ?e) ) )
          (once (and (exists (?i - ball) (on ?e ?i) ) (toggled_on ?e) (and (exists (?a - dodgeball) (agent_holds agent) ) (adjacent ?e ?e) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (= (count-once-per-objects preference1:green:purple) 2 )
    (>= (+ (* (count-once-per-objects preference1:beachball) (* (* 5 (count-same-positions preference1) )
            (+ 8 (total-score) )
          )
        )
        (+ 5 (+ (external-forall-maximize (- (count-once-per-external-objects preference1:blue_cube_block) )
            )
            (count-same-positions preference1:yellow_cube_block)
          )
        )
      )
      5
    )
  )
)
(:scoring
  3
)
)(define (game game-id-190) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (exists (?q ?g - hexagonal_bin ?g - doggie_bed)
        (and
          (forall (?w - dodgeball)
            (exists (?k - dodgeball ?p - pyramid_block ?m - hexagonal_bin)
              (and
                (game-conserved
                  (agent_holds ?g)
                )
              )
            )
          )
          (forall (?n - building)
            (exists (?u - ball ?p - shelf ?k - block)
              (exists (?t ?q ?o - (either cube_block doggie_bed lamp tall_cylindrical_block) ?d - beachball)
                (and
                  (and
                    (and
                      (game-conserved
                        (not
                          (in_motion ?k)
                        )
                      )
                      (and
                        (exists (?j - beachball)
                          (game-optional
                            (object_orientation ?n ?j)
                          )
                        )
                      )
                    )
                    (exists (?x - (either dodgeball mug laptop dodgeball))
                      (exists (?e - dodgeball ?b - hexagonal_bin)
                        (or
                          (game-conserved
                            (on ?k ?g)
                          )
                          (game-conserved
                            (in_motion ?b)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
    (forall (?t - block ?g - teddy_bear ?a - color ?v - block)
      (exists (?h - cube_block)
        (and
          (exists (?x - pyramid_block ?x - building)
            (game-optional
              (and
                (in_motion ?x)
                (and
                  (on ?v ?v)
                  (and
                    (in agent pink)
                    (not
                      (adjacent ?v ?h)
                    )
                  )
                )
              )
            )
          )
          (exists (?t - ball)
            (game-conserved
              (same_object agent ?h)
            )
          )
          (game-optional
            (in_motion rug)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?e ?i ?r - pyramid_block)
        (at-end
          (and
            (not
              (agent_holds ?r)
            )
            (adjacent ?i ?e)
          )
        )
      )
    )
  )
)
(:terminal
  (> (* (/ 10 100 ) (count preference1:blue_dodgeball) )
    (and
      2
    )
  )
)
(:scoring
  (count preference1:dodgeball)
)
)(define (game game-id-191) (:domain many-objects-room-v1)
(:setup
  (exists (?c - triangular_ramp)
    (game-conserved
      (not
        (and
          (< 0.5 1)
          (adjacent_side blue ?c ?c)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?g - wall)
      (and
        (preference preference1
          (exists (?f - hexagonal_bin)
            (then
              (hold (in_motion ?g) )
              (once (touch ?g ?g) )
              (hold-while (in_motion ?g) (on ?g ?f) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?c - hexagonal_bin)
        (then
          (once (and (and (and (adjacent ?c ?c) (and (above ?c ?c) (not (exists (?v - block) (not (and (agent_holds ?c) (not (not (in_motion ?c) ) ) ) ) ) ) (and (agent_holds ?c) ) ) ) (same_type ?c ?c) ) (not (same_color ?c ?c) ) (and (on ?c ?c) (and (is_setup_object ?c) (and (not (adjacent agent ?c) ) (exists (?g - (either bridge_block laptop golfball)) (and (and (< (distance block ?g) (distance ?c ?g)) (and (and (agent_holds ?g) (and (agent_crouches ) (in_motion blinds) ) ) ) ) (not (agent_holds room_center) ) ) ) (not (= (distance upright ?c) (distance ?c ?c)) ) (rug_color_under ?c ?c) (not (on ?c ?c) ) ) ) (on ?c door) (in_motion agent) ) ) )
          (once (in ?c ?c) )
          (once (not (agent_holds ?c) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (or (count-once preference2:blue_dodgeball) (count preference2:yellow) ) (count preference1:doggie_bed:pink) )
    (< (* 15 5 )
      (* 2 4 )
    )
  )
)
(:scoring
  (* (external-forall-maximize 15 ) (> 30 (count-once preference2:golfball) )
    (count preference1:hexagonal_bin)
    25
    3
  )
)
)(define (game game-id-192) (:domain few-objects-room-v1)
(:setup
  (forall (?x - (either triangle_block cellphone) ?x - ball ?w - (either floor yellow_cube_block))
    (and
      (game-conserved
        (and
          (and
            (exists (?f - color)
              (and
                (and
                  (and
                    (touch ?f bed)
                    (agent_holds ?f)
                  )
                )
                (in ?f ?f)
                (agent_holds ?f)
              )
            )
            (and
              (and
                (in_motion room_center)
                (in tan ?w)
              )
              (touch ?w ?w)
              (adjacent_side ?w ?w ?w)
            )
            (agent_holds ?w)
            (agent_holds ?w)
          )
          (in_motion agent)
        )
      )
      (forall (?s - ball)
        (exists (?t - (either cube_block cd chair dodgeball hexagonal_bin hexagonal_bin cylindrical_block))
          (exists (?l - doggie_bed)
            (game-optional
              (and
                (equal_z_position ?w agent)
                (and
                  (not
                    (agent_holds ?s)
                  )
                  (not
                    (same_object pink ?w)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?o - hexagonal_bin)
        (at-end
          (agent_holds ?o)
        )
      )
    )
  )
)
(:terminal
  (not
    (>= 8 (count-once-per-objects preference1:pink_dodgeball) )
  )
)
(:scoring
  10
)
)(define (game game-id-193) (:domain many-objects-room-v1)
(:setup
  (not
    (exists (?l - hexagonal_bin)
      (and
        (and
          (game-conserved
            (in_motion ?l)
          )
          (game-conserved
            (in ?l ?l)
          )
          (game-conserved
            (agent_holds ?l)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?w - game_object)
        (then
          (once (is_setup_object floor) )
          (once (in_motion ?w) )
          (once (in_motion rug) )
        )
      )
    )
    (preference preference2
      (exists (?x - hexagonal_bin)
        (then
          (hold (on rug ?x) )
          (once (not (open bed) ) )
          (once (same_type ?x bed) )
        )
      )
    )
  )
)
(:terminal
  (>= 6 (* (count-once-per-objects preference2:pyramid_block) (count-once-per-objects preference2:yellow) 40 )
  )
)
(:scoring
  (count preference2:dodgeball:red:basketball)
)
)(define (game game-id-194) (:domain few-objects-room-v1)
(:setup
  (exists (?e - (either wall triangular_ramp))
    (and
      (exists (?t - ball)
        (and
          (game-conserved
            (not
              (not
                (object_orientation ?e desk)
              )
            )
          )
          (game-optional
            (and
              (agent_holds ?e)
              (and
                (not
                  (not
                    (in ?t ?t)
                  )
                )
                (in_motion ?e)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?s - (either block pillow tall_cylindrical_block))
        (then
          (once (not (not (adjacent_side ?s ?s ?s ?s) ) ) )
          (hold (and (< (building_size ?s) (distance ?s ?s)) (touch desk ?s) ) )
          (once (not (not (and (not (not (agent_holds desk) ) ) (and (adjacent agent ?s) (and (on ?s ?s) (and (not (forall (?b - pyramid_block ?e - triangular_ramp) (and (on ?e east_sliding_door) ) ) ) (and (not (and (in_motion ?s) (agent_holds ?s) ) ) (in_motion ?s) ) (touch room_center agent) ) ) (on agent upright) (agent_holds ?s) (agent_holds ?s) (not (and (and (not (in ?s ?s) ) (agent_holds ?s) ) (adjacent ?s ?s) ) ) (in_motion ?s) ) ) ) ) )
          (once (touch ?s rug) )
          (once (and (exists (?j - hexagonal_bin ?m - cylindrical_block) (and (on ?s ?m) (in ?m ?s) ) ) (game_over ) ) )
        )
      )
    )
    (preference preference2
      (exists (?l - teddy_bear)
        (then
          (hold (or (and (and (and (and (exists (?n ?a - triangular_ramp) (exists (?c - flat_block ?j - color ?w - (either basketball top_drawer game_object) ?v - (either pink yellow_cube_block cube_block)) (agent_holds ?l) ) ) (in_motion ?l) ) (in_motion bed) ) (agent_holds agent) ) (on ?l top_drawer) ) (agent_holds ?l) ) )
          (once (not (agent_holds ?l) ) )
          (once (in_motion ?l) )
          (once (on agent ?l) )
        )
      )
    )
    (preference preference3
      (exists (?h - pillow ?p - ball)
        (then
          (once (in_motion agent) )
          (hold (and (in_motion agent) (agent_holds bed) (and (in_motion ?p) (in ?p ?p) ) ) )
          (once-measure (and (on agent ?p) (and (not (agent_holds ?p) ) (equal_x_position agent ?p) ) (= (distance block ?p) (distance ?p ?p) (distance ?p ?p)) ) (distance_side ?p ?p agent ?p) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 2 )
)
(:scoring
  (* (- (>= (count-once-per-objects preference1:green) (* (count-total preference2:pink_dodgeball) (count preference1:side_table) )
      )
    )
    2
  )
)
)(define (game game-id-195) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?c - ball)
      (exists (?q ?e - hexagonal_bin)
        (game-optional
          (on ?e ?c)
        )
      )
    )
    (and
      (game-conserved
        (agent_holds room_center)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?m - hexagonal_bin)
        (at-end
          (not
            (agent_holds ?m)
          )
        )
      )
    )
    (preference preference2
      (exists (?b - hexagonal_bin)
        (then
          (hold (> 1 (distance room_center ?b)) )
          (hold-while (= 1 1) (agent_holds ?b) )
          (hold (object_orientation ?b ?b) )
        )
      )
    )
    (preference preference3
      (exists (?e - hexagonal_bin)
        (at-end
          (and
            (not
              (touch ?e green_golfball)
            )
            (adjacent ?e floor)
          )
        )
      )
    )
  )
)
(:terminal
  (>= 7 180 )
)
(:scoring
  6
)
)(define (game game-id-196) (:domain medium-objects-room-v1)
(:setup
  (exists (?s - hexagonal_bin ?u - hexagonal_bin)
    (game-conserved
      (faces agent agent)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?a - (either blue_cube_block golfball desktop key_chain))
        (then
          (once (< (distance ?a ?a) 0.5) )
          (hold (= (distance ?a ?a) 2 2) )
          (once (in_motion ?a) )
        )
      )
    )
  )
)
(:terminal
  (>= 4 (* (* (count preference1:purple) 10 )
      (* (count preference1:yellow) (external-forall-minimize (+ (count-once-per-objects preference1:dodgeball) (* (- (* (external-forall-minimize (count-once-per-external-objects preference1:hexagonal_bin:doggie_bed) ) 20 )
              )
              3
            )
          )
        )
      )
      (count-once-per-external-objects preference1:dodgeball)
      (* (count preference1:doggie_bed) 4 )
    )
  )
)
(:scoring
  1
)
)(define (game game-id-197) (:domain few-objects-room-v1)
(:setup
  (and
    (game-optional
      (not
        (agent_crouches )
      )
    )
    (exists (?a - hexagonal_bin ?y ?w ?u ?q ?g ?p - hexagonal_bin)
      (exists (?e - hexagonal_bin)
        (and
          (exists (?n - game_object ?k - hexagonal_bin)
            (game-conserved
              (agent_holds ?k)
            )
          )
          (game-optional
            (and
              (in agent pink_dodgeball)
              (in_motion ?g)
            )
          )
          (game-optional
            (or
              (forall (?t - wall)
                (not
                  (and
                    (not
                      (< 9 5)
                    )
                    (in ?w desk)
                    (< (distance pink_dodgeball ?w) 0)
                  )
                )
              )
              (not
                (not
                  (adjacent blue ?y)
                )
              )
            )
          )
        )
      )
    )
    (exists (?o ?m - ball)
      (forall (?s - curved_wooden_ramp ?z ?r - teddy_bear)
        (forall (?j - ball ?i - cube_block ?l - (either dodgeball cellphone cube_block) ?q - dodgeball ?v - ball)
          (game-conserved
            (exists (?s - shelf)
              (and
                (on ?o ?z)
                (agent_holds ?s)
                (in_motion ?z)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?t - hexagonal_bin)
        (at-end
          (in_motion ?t)
        )
      )
    )
  )
)
(:terminal
  (< (+ (count-overlapping preference1:beachball:cube_block) (external-forall-maximize (external-forall-minimize (* (count preference1:cube_block:basketball) 1 )
        )
      )
      (count preference1:beachball)
      30
      (count-once-per-objects preference1:dodgeball)
      (* (count-once-per-external-objects preference1:orange) (* 3 (* (count-once-per-objects preference1:dodgeball) (count preference1:pink) )
        )
        (count preference1:dodgeball)
      )
    )
    (* (* (+ (* (* 4 (total-time) (= (count preference1:beachball) (count preference1:beachball:blue_pyramid_block) )
              (count preference1:basketball:red)
              (total-time)
              (+ (count-measure preference1:beachball) (count-once-per-objects preference1:red) )
            )
            3
          )
          (* (* (count-once-per-external-objects preference1:orange) (count-once-per-objects preference1:orange) )
            2
            6
          )
          (count preference1:green)
          (- (count preference1:blue_cube_block) )
        )
        5
      )
      (and
        (count preference1:golfball)
        (count-once preference1:golfball)
      )
    )
  )
)
(:scoring
  (count-once preference1:dodgeball)
)
)(define (game game-id-198) (:domain medium-objects-room-v1)
(:setup
  (not
    (game-optional
      (< 7 1)
    )
  )
)
(:constraints
  (and
    (forall (?i - ball)
      (and
        (preference preference1
          (exists (?v - teddy_bear ?q - game_object ?h - cube_block ?k - hexagonal_bin)
            (then
              (hold-for 9 (in_motion ?i) )
              (once (same_color ?i rug) )
              (hold (not (and (agent_holds ?i) (not (not (= (distance bed door) (distance upright ?k)) ) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 4 10 )
    (>= (total-score) (count-once-per-external-objects preference1:dodgeball) )
    (<= (count preference1:pink) 3 )
  )
)
(:scoring
  (* (* (total-score) (count preference1:red:pink) )
    3
    8
    5
    2
  )
)
)(define (game game-id-199) (:domain many-objects-room-v1)
(:setup
  (exists (?g - game_object)
    (forall (?a - dodgeball)
      (and
        (and
          (forall (?o - cube_block ?v - drawer)
            (game-optional
              (in ?v ?a)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?j - cube_block ?n ?t ?d ?y ?i ?k ?f ?z ?a ?j - chair ?l - book)
        (then
          (hold-while (on bed ?l) (and (and (adjacent ?l ?l) (equal_x_position pink ?l) ) (agent_holds pink_dodgeball) ) )
          (hold-while (in_motion blue) (in agent bed) )
          (hold (in_motion ?l) )
        )
      )
    )
    (preference preference2
      (exists (?j - hexagonal_bin)
        (then
          (once (in_motion bed) )
          (once (toggled_on agent) )
          (hold (agent_holds ?j) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:yellow) (+ 1 (count preference2:beachball) )
  )
)
(:scoring
  (count-once-per-objects preference2:beachball)
)
)(define (game game-id-200) (:domain medium-objects-room-v1)
(:setup
  (forall (?a - hexagonal_bin ?z - dodgeball)
    (exists (?y - teddy_bear)
      (and
        (exists (?v - drawer)
          (exists (?e - game_object ?w - dodgeball)
            (game-conserved
              (in_motion ?w)
            )
          )
        )
        (game-optional
          (adjacent green_golfball ?z)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?q - hexagonal_bin)
        (at-end
          (game_start )
        )
      )
    )
    (forall (?a - beachball ?d - bridge_block)
      (and
        (preference preference2
          (exists (?s - hexagonal_bin)
            (then
              (once (and (< 1 1) (< (distance ?d desk) (distance ?s ?s)) ) )
              (once (and (> (distance ?d ?d) (distance_side room_center bottom_shelf room_center)) (in ?s ?s) ) )
              (hold (and (faces ?d floor) (and (agent_holds desk) (and (in ?d ?d) (and (not (adjacent ?d agent) ) (not (not (agent_holds ?d) ) ) ) ) (agent_crouches ) (in_motion agent) (exists (?l - curved_wooden_ramp) (touch ?d back) ) (agent_holds room_center) (agent_holds agent) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (< (+ (* 3 20 )
          (count-once preference2:dodgeball)
        )
        (total-time)
      )
    )
  )
)
(:scoring
  (-
    (= (count preference2:triangle_block:basketball) (count preference2:doggie_bed:dodgeball) )
    3
  )
)
)(define (game game-id-201) (:domain medium-objects-room-v1)
(:setup
  (forall (?d - cube_block ?k - (either yellow_cube_block chair dodgeball))
    (forall (?q - block)
      (and
        (game-conserved
          (not
            (in_motion ?k)
          )
        )
        (forall (?p - teddy_bear)
          (and
            (game-optional
              (agent_holds rug)
            )
          )
        )
        (and
          (and
            (forall (?a - block ?s - game_object)
              (forall (?c - hexagonal_bin ?w - hexagonal_bin)
                (exists (?z - hexagonal_bin)
                  (game-conserved
                    (not
                      (object_orientation ?s desk)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c ?x - (either alarm_clock cd))
      (and
        (preference preference1
          (exists (?f - game_object ?p - (either cube_block yellow_cube_block) ?f - dodgeball)
            (then
              (hold (agent_holds side_table) )
              (once (not (toggled_on ?x) ) )
              (hold-while (agent_holds ?f) (and (and (agent_holds desk) (on ?x ?c) ) (on ?f ?f) ) )
            )
          )
        )
        (preference preference2
          (exists (?h - pillow)
            (then
              (hold (and (and (and (and (and (and (agent_holds ?c) (not (and (in_motion ?h) (not (and (game_over ) (agent_holds ?h) ) ) (not (agent_holds ?h) ) (in_motion ?c) ) ) ) (agent_holds ?c) ) (and (adjacent_side ?h ?h ?h) (and (in ?c agent) (in_motion ?c) ) ) (agent_holds ?c) (or (not (and (and (in ?x agent) (and (and (and (same_color ?x bed) (not (in_motion ?c) ) (same_color ?c ?x) ) (and (game_over ) (and (and (toggled_on ?x) (in_motion ?h) ) (and (in_motion ?c) (in_motion ?h) ) ) ) ) (> (x_position ?h) 1) ) ) (in_motion pink_dodgeball) (in_motion agent) ) ) (touch ?h ?c) ) ) (in_motion ?c) ) (in_motion ?x) ) (same_type door ?h) (or (and (same_object ?x agent) (not (agent_holds ?x) ) ) (in ?x ?x) ) ) )
              (once (agent_holds ?h) )
              (hold (in rug ?x) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?r - hexagonal_bin ?l - hexagonal_bin ?k - hexagonal_bin ?y - building)
        (then
          (once (not (and (and (agent_holds rug) (in ?y ?y) ) (and (and (and (in ?y ?y) (and (and (< (distance ?y agent) (distance floor ?y)) (in_motion ?y) ) (and (in_motion ?y) (in_motion ?y) ) ) ) (and (not (not (same_type ?y desk) ) ) (and (forall (?i - doggie_bed) (not (adjacent ?y ?i) ) ) (not (and (and (in ?y bed) (same_object ?y right) ) (agent_holds ?y) ) ) ) ) ) (not (not (in_motion ?y) ) ) ) ) ) )
          (hold-while (in_motion ?y) (in_motion rug) )
          (once (not (not (and (and (on ?y ?y) (agent_holds ?y) ) (and (in_motion ?y) (forall (?g - curved_wooden_ramp) (not (in_motion ?y) ) ) (exists (?i - (either golfball pyramid_block desktop dodgeball)) (agent_holds ?i) ) ) (and (> (distance ?y ?y) (distance ?y ?y)) (not (in_motion ?y) ) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (+ (total-time) 40 )
  )
)
(:scoring
  (+ 6 (- (* (external-forall-maximize (- (count-once-per-objects preference1:side_table:pink_dodgeball) )
        )
        (count preference3:pink_dodgeball)
      )
    )
  )
)
)(define (game game-id-202) (:domain medium-objects-room-v1)
(:setup
  (exists (?o - curved_wooden_ramp ?e - cylindrical_block)
    (forall (?l ?g ?v ?x - curved_wooden_ramp ?q - game_object)
      (not
        (game-optional
          (open agent)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?c - doggie_bed ?h - flat_block)
        (then
          (once (on ?h ?h) )
          (hold (in_motion ?h) )
          (hold-while (or (on ?h block) (< 5 (distance agent desk)) ) (agent_holds room_center) )
        )
      )
    )
    (forall (?o - hexagonal_bin)
      (and
        (preference preference2
          (exists (?y - (either mug dodgeball) ?t - ball)
            (then
              (once (and (not (not (in_motion ?t) ) ) (not (adjacent ?t ?o) ) ) )
              (hold (and (in_motion desk) (and (agent_holds ?t) (equal_z_position ?o ?t) ) ) )
              (hold-while (in_motion ?o) (or (< 1 1) (agent_holds ?t) ) )
            )
          )
        )
        (preference preference3
          (exists (?v - book ?r - game_object)
            (at-end
              (in_motion ?r)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> 18 (- (count preference1:blue_dodgeball) )
  )
)
(:scoring
  (total-time)
)
)(define (game game-id-203) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (forall (?f - game_object ?q - curved_wooden_ramp)
      (on desk ?q)
    )
  )
)
(:constraints
  (and
    (forall (?o - color ?b - block)
      (and
        (preference preference1
          (exists (?x - (either cellphone dodgeball))
            (at-end
              (and
                (in_motion ?b)
                (< 9 (distance ?b brown))
                (on ?b ?b)
              )
            )
          )
        )
        (preference preference2
          (exists (?o - chair ?h - curved_wooden_ramp)
            (then
              (once (not (on ?h ?b) ) )
              (once (and (or (adjacent ?b ?h) (= (distance bed west_wall) 1 1 1) ) (in_motion ?h) ) )
              (once (agent_crouches ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* 1 (count preference2:golfball) )
    9
  )
)
(:scoring
  6
)
)(define (game game-id-204) (:domain many-objects-room-v1)
(:setup
  (exists (?m - dodgeball)
    (exists (?d - (either pyramid_block) ?t - ball)
      (game-conserved
        (= (distance_side ?t ?m ?t) (distance_side ?t ?m ?t left))
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?l - hexagonal_bin ?r - wall)
        (then
          (once (and (in_motion ?r) (not (equal_x_position ?r ?r) ) ) )
          (hold-while (adjacent agent ?r) (in_motion ?r) )
          (once (in ?r ?r) )
        )
      )
    )
    (preference preference2
      (exists (?j - (either pyramid_block cellphone))
        (then
          (hold (on agent agent) )
          (once (in ?j ?j) )
          (once (exists (?d - dodgeball) (not (and (agent_holds ?j) (agent_holds ?j) (and (in ?j desk) (not (not (agent_holds ?d) ) ) ) ) ) ) )
        )
      )
    )
    (preference preference3
      (exists (?z - (either cylindrical_block top_drawer laptop) ?i - teddy_bear)
        (then
          (hold-while (agent_holds door) (and (in ?i ?i) (or (in_motion ?i) (and (on ?i ?i) (in upright ?i) ) ) ) (agent_holds ?i) )
          (hold (agent_holds ?i) )
          (once (agent_holds ?i) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 3 300 )
    (* 2 (external-forall-maximize (+ (count preference2:green:green:dodgeball) (count-once preference2:dodgeball) )
      )
    )
  )
)
(:scoring
  (+ (* (count preference1:hexagonal_bin:beachball) (count-once-per-objects preference2:basketball:dodgeball) )
    5
  )
)
)(define (game game-id-205) (:domain medium-objects-room-v1)
(:setup
  (forall (?w - wall)
    (game-conserved
      (and
        (or
          (on ?w ?w)
          (not
            (not
              (not
                (exists (?k - (either dodgeball yellow dodgeball cube_block))
                  (and
                    (agent_holds ?k)
                    (adjacent ?w desk)
                  )
                )
              )
            )
          )
        )
        (and
          (in ?w ?w)
          (and
            (and
              (in_motion ?w)
              (not
                (not
                  (and
                    (in bed ?w)
                    (not
                      (adjacent ?w ?w)
                    )
                  )
                )
              )
            )
            (exists (?j - shelf)
              (agent_crouches )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?v - cube_block)
        (at-end
          (forall (?l - dodgeball)
            (not
              (agent_crouches )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?t - dodgeball)
        (then
          (once (agent_holds ?t) )
          (once (on ?t ?t) )
          (once (not (and (and (in_motion ?t) (not (in_motion green_golfball) ) ) (agent_holds rug) ) ) )
          (hold-while (in_motion ?t) (agent_holds desk) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (* (count preference1:side_table) (+ 3 )
    )
  )
)
(:scoring
  (count-once-per-objects preference2:blue_dodgeball)
)
)(define (game game-id-206) (:domain few-objects-room-v1)
(:setup
  (exists (?p - flat_block)
    (game-conserved
      (not
        (not
          (and
            (in_motion ?p)
            (same_type ?p ?p)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?v - block)
        (then
          (hold (in_motion ?v) )
          (once (object_orientation ?v ?v) )
          (hold-while (in ?v agent) (on ?v bed) (and (not (rug_color_under desk ?v) ) (not (in ?v room_center) ) ) )
        )
      )
    )
    (preference preference2
      (exists (?n - game_object ?m - hexagonal_bin ?j ?w ?d ?t ?i ?s - golfball)
        (then
          (hold (not (on ?t ?i) ) )
          (once (or (and (in_motion ?s) (agent_holds ?s) ) ) )
          (once (agent_holds ?j) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (* 4 (count-once-per-objects preference1:purple) 3 )
  )
)
(:scoring
  8
)
)(define (game game-id-207) (:domain many-objects-room-v1)
(:setup
  (exists (?m - hexagonal_bin)
    (exists (?y - cube_block)
      (game-conserved
        (in_motion ?m)
      )
    )
  )
)
(:constraints
  (and
    (forall (?l - blue_cube_block ?k - chair)
      (and
        (preference preference1
          (then
            (hold (< 10 (distance desk ?k)) )
            (hold (and (on ?k ?k) (and (forall (?l - dodgeball) (on ?k ?k) ) (adjacent ?k ?k) ) (on ?k ?k) (and (not (exists (?r - cube_block) (not (not (and (equal_x_position ?k ?k) (and (in_motion ?k) (not (agent_holds ?k) ) ) ) ) ) ) ) (> 1 (distance ?k ?k)) (in ?k room_center) (and (<= 1 1) (not (adjacent ?k ?k) ) (or (in sideways ?k) (on ?k back) ) (in_motion ?k) ) ) ) )
            (once (and (not (above floor ?k) ) (agent_holds ?k) ) )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (and
      (>= (* (count preference1:purple) 10 (* (= 10 (* (count-unique-positions preference1:pink_dodgeball) (* (= 20 (count-once-per-objects preference1:dodgeball) )
                  (count preference1:pyramid_block)
                )
              )
            )
            (count-once-per-objects preference1:cube_block:basketball)
          )
          (count preference1:pink)
          (* (count preference1:dodgeball) (count preference1:dodgeball) )
        )
        (count preference1:pink)
      )
      (>= (count-once-per-objects preference1:beachball) (count-once preference1:tall_cylindrical_block:pink_dodgeball) )
      (or
        (>= 2 (* (total-time) (* (- (* (* (* (count preference1:beachball:wall) (count preference1:basketball) )
                    6
                    3
                  )
                  (-
                    (* (count-once-per-objects preference1:orange) (count-once-per-objects preference1:dodgeball) )
                    1
                  )
                  (* (count-once preference1:orange) (+ (external-forall-maximize 2 ) (- 15 )
                      3
                    )
                  )
                  (* (* (not (count preference1:alarm_clock) ) (count preference1:dodgeball:white:green) )
                    4
                    5
                    (count preference1:basketball:yellow)
                  )
                  (* 6 (count-same-positions preference1:beachball) )
                  (* (* (* (+ 3 (count-overlapping preference1:golfball) (* (total-time) 2 )
                        )
                        (- (* (count preference1:book) (* (<= (total-time) (> (* (count-once-per-objects preference1:basketball) (count-once-per-objects preference1:yellow_cube_block) )
                                  (* 50 (>= (count preference1:beachball:golfball:golfball) (* 4 (+ 10 (count preference1:hexagonal_bin) )
                                      )
                                    )
                                    (count preference1:doggie_bed)
                                    (count preference1:basketball)
                                    (- 6 )
                                    (+ (count preference1:dodgeball) (count-once-per-objects preference1:rug) )
                                  )
                                )
                              )
                              (external-forall-maximize
                                (count preference1:beachball:golfball)
                              )
                            )
                          )
                        )
                        5
                        (* 10 10 )
                        3
                        (count preference1:golfball)
                      )
                      (total-score)
                    )
                    300
                  )
                )
              )
              (* 3 (count preference1:basketball) )
              (* 20 6 )
              (count preference1:wall)
            )
            (count-longest preference1:dodgeball)
          )
        )
        (< (count-shortest preference1:golfball) (count-once-per-objects preference1:yellow_cube_block) )
      )
    )
    (< (count-overlapping preference1:blue) (count-once-per-objects preference1:brown) )
    (>= (count-same-positions preference1:hexagonal_bin) 5 )
  )
)
(:scoring
  (count-once-per-objects preference1:dodgeball)
)
)(define (game game-id-208) (:domain many-objects-room-v1)
(:setup
  (forall (?j - hexagonal_bin)
    (or
      (exists (?b - (either pencil mug))
        (and
          (game-optional
            (< 2 (distance ?b ?j))
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?q - red_dodgeball)
        (then
          (hold (opposite agent ?q) )
          (hold (is_setup_object bed) )
          (once (and (< (distance ?q ?q) (distance_side ?q ?q ?q ?q)) (and (not (exists (?a - golfball) (not (in_motion ?q) ) ) ) (in_motion ?q) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (count preference1:beachball) (count-once-per-objects preference1:yellow:pink) )
    (- (count-total preference1:golfball) )
  )
)
(:scoring
  10
)
)(define (game game-id-209) (:domain few-objects-room-v1)
(:setup
  (exists (?i - hexagonal_bin)
    (and
      (forall (?l ?h - cube_block)
        (and
          (not
            (game-optional
              (not
                (in ?h desk)
              )
            )
          )
          (and
            (and
              (or
                (and
                  (exists (?p - hexagonal_bin ?v - ball)
                    (and
                      (exists (?y - ball)
                        (forall (?g - red_dodgeball)
                          (and
                            (and
                              (game-conserved
                                (and
                                  (exists (?u - dodgeball ?z - desk_shelf)
                                    (and
                                      (not
                                        (agent_holds ?g)
                                      )
                                      (not
                                        (not
                                          (in_motion ?g)
                                        )
                                      )
                                    )
                                  )
                                  (in_motion ?g)
                                )
                              )
                            )
                            (or
                              (game-conserved
                                (in_motion ?h)
                              )
                              (game-conserved
                                (on bed ?v)
                              )
                            )
                          )
                        )
                      )
                      (forall (?o - dodgeball)
                        (game-conserved
                          (in_motion ?o)
                        )
                      )
                    )
                  )
                )
              )
              (exists (?j - triangular_ramp ?c - ball ?n - triangular_ramp)
                (and
                  (game-conserved
                    (agent_holds ?i)
                  )
                )
              )
              (or
                (exists (?x - golfball)
                  (game-conserved
                    (agent_holds ?h)
                  )
                )
                (and
                  (exists (?c - hexagonal_bin)
                    (and
                      (exists (?n - building ?n - hexagonal_bin)
                        (and
                          (game-conserved
                            (and
                              (< 3 (distance ?h front))
                              (same_color ?l ?i)
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
            (and
              (game-optional
                (< (distance ?h ?h) 1)
              )
            )
          )
          (forall (?y - dodgeball)
            (exists (?u - hexagonal_bin)
              (forall (?a - doggie_bed)
                (game-optional
                  (and
                    (same_object ?l room_center)
                    (in ?i desk)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?o - dodgeball)
        (then
          (hold (forall (?r - teddy_bear ?b - hexagonal_bin ?z ?e - cube_block) (in_motion ?o) ) )
          (once (in agent ?o) )
          (once (on room_center ?o) )
        )
      )
    )
    (preference preference2
      (exists (?t - (either golfball wall) ?s - (either tall_cylindrical_block desktop alarm_clock) ?y - curved_wooden_ramp)
        (at-end
          (agent_holds rug)
        )
      )
    )
  )
)
(:terminal
  (< (total-score) 6 )
)
(:scoring
  (count-once-per-objects preference1:yellow)
)
)(define (game game-id-210) (:domain medium-objects-room-v1)
(:setup
  (exists (?g - dodgeball)
    (game-conserved
      (not
        (in_motion desk)
      )
    )
  )
)
(:constraints
  (and
    (forall (?t - teddy_bear)
      (and
        (preference preference1
          (exists (?v - dodgeball)
            (then
              (once (on ?t ?v) )
              (hold-while (agent_holds ?v) (not (not (above room_center rug) ) ) (agent_holds ?t) (on ?t ?v) )
              (once (not (in_motion desk) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (- (= (* (count-once preference1:yellow) )
        )
      )
      (* 6 (count preference1) )
    )
    30
  )
)
(:scoring
  (* (count-once-per-objects preference1:pink_dodgeball:hexagonal_bin:cube_block) (count preference1:cylindrical_block) )
)
)(define (game game-id-211) (:domain few-objects-room-v1)
(:setup
  (not
    (exists (?a - dodgeball ?o - block)
      (and
        (and
          (exists (?v - dodgeball ?p - game_object)
            (game-conserved
              (in ?o front)
            )
          )
          (forall (?y - hexagonal_bin)
            (or
              (and
                (forall (?t - hexagonal_bin ?h - game_object ?t - hexagonal_bin)
                  (game-optional
                    (in_motion ?o)
                  )
                )
              )
              (and
                (exists (?a - dodgeball ?d - triangular_ramp ?i - (either pillow yellow_cube_block))
                  (and
                    (game-conserved
                      (< (distance_side ?i room_center ?i ?y) 1)
                    )
                    (game-conserved
                      (= 4 (distance ?o ?i))
                    )
                  )
                )
                (game-conserved
                  (and
                    (same_object ?o ?y)
                    (> 10 (distance_side ?o ?y agent))
                  )
                )
              )
            )
          )
        )
        (forall (?b - cylindrical_block)
          (and
            (and
              (exists (?t ?f - hexagonal_bin)
                (exists (?h - curved_wooden_ramp)
                  (exists (?p - triangular_ramp)
                    (and
                      (exists (?c - cylindrical_block)
                        (forall (?j - hexagonal_bin)
                          (game-optional
                            (rug_color_under ?h ?j)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
        (game-conserved
          (in_motion ?o)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?f - (either bridge_block cellphone curved_wooden_ramp laptop dodgeball lamp watch))
        (then
          (once (not (in_motion ?f) ) )
          (hold (agent_holds pink) )
          (once (not (object_orientation ?f rug) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (- 50 )
    (count preference1:basketball)
  )
)
(:scoring
  3
)
)(define (game game-id-212) (:domain few-objects-room-v1)
(:setup
  (forall (?b - dodgeball ?g ?z - hexagonal_bin ?n - dodgeball)
    (game-conserved
      (in_motion ?n)
    )
  )
)
(:constraints
  (and
    (forall (?e - teddy_bear)
      (and
        (preference preference1
          (exists (?y ?c - block)
            (at-end
              (= (distance ?c ?e) (distance agent ?c))
            )
          )
        )
        (preference preference2
          (exists (?g - (either book triangle_block))
            (then
              (hold (exists (?m - hexagonal_bin) (not (and (game_start ) (not (agent_holds ?g) ) ) ) ) )
              (hold (agent_holds ?e) )
              (once (or (in_motion ?g) (touch upright agent) ) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?z - chair)
        (then
          (any)
          (any)
          (once (agent_holds ?z) )
        )
      )
    )
    (preference preference4
      (exists (?e - pillow)
        (at-end
          (or
            (toggled_on ?e)
            (on ?e ?e)
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (external-forall-maximize 2 ) (- (count-once-per-external-objects preference2:dodgeball) )
    )
    10
  )
)
(:scoring
  (external-forall-maximize
    2
  )
)
)(define (game game-id-213) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (in_motion agent)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?q - wall)
        (then
          (hold (in_motion ?q) )
          (once (in_motion ?q) )
          (hold (adjacent desk agent) )
        )
      )
    )
    (preference preference2
      (exists (?y - cube_block)
        (then
          (once (on ?y ?y) )
          (hold (and (< (distance ?y ?y) 5) (in_motion rug) ) )
          (hold-to-end (and (between ?y ?y pink_dodgeball) (agent_holds ?y) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (not
      (>= (count-once-per-objects preference2:cube_block) 10 )
    )
  )
)
(:scoring
  (* 3 1 )
)
)(define (game game-id-214) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-conserved
      (agent_holds pillow)
    )
  )
)
(:constraints
  (and
    (forall (?n ?w - teddy_bear)
      (and
        (preference preference1
          (exists (?r - beachball)
            (then
              (once (same_object ?r desk) )
              (once (agent_holds ?w) )
              (once (on ?r ?w) )
            )
          )
        )
        (preference preference2
          (exists (?m - pyramid_block)
            (at-end
              (in desk ?w)
            )
          )
        )
      )
    )
    (forall (?j - (either desktop pyramid_block))
      (and
        (preference preference3
          (exists (?i - red_dodgeball ?p - dodgeball)
            (at-end
              (and
                (agent_holds ?p)
                (< (distance ?j ?p) 1)
              )
            )
          )
        )
        (preference preference4
          (exists (?h - shelf)
            (then
              (once (and (and (exists (?o - hexagonal_bin ?m - game_object) (adjacent ?h ?m) ) (and (not (or (>= 1 9) (on ?j bed) ) ) (exists (?m - pillow ?i - hexagonal_bin) (not (on ?j rug) ) ) ) ) (adjacent_side ?j ?h ?j) ) )
              (once (game_start ) )
              (hold (in_motion ?j) )
            )
          )
        )
        (preference preference5
          (exists (?p - (either mug cube_block ball))
            (then
              (hold (and (and (and (touch ?p ?p) (in_motion ?p) ) (not (agent_holds ?j) ) ) (in top_drawer ?p) ) )
              (hold-to-end (agent_holds ?j) )
              (once (agent_holds bed) )
              (hold (and (agent_holds ?p) (adjacent desk agent) (agent_holds right) (on ?p pink_dodgeball) (same_object desk ?j) (not (agent_holds floor) ) ) )
            )
          )
        )
      )
    )
    (preference preference6
      (exists (?m - dodgeball)
        (then
          (once (and (in_motion ?m) (and (in ?m ?m) (in_motion desk) (in_motion ?m) ) ) )
          (hold (agent_holds ?m) )
          (once (and (on ?m ?m) (and (same_type agent ?m) (and (and (and (and (and (and (and (not (in_motion ?m) ) (agent_holds ?m) (not (not (in_motion bed) ) ) (in_motion ?m) ) (on ?m desk) (agent_holds ?m) ) (in_motion ?m) (not (in ?m ?m) ) (object_orientation ?m ?m) ) (on floor ?m) ) (in_motion ?m) ) (agent_holds ?m) (in agent ?m) ) (agent_holds ?m) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (count-once-per-objects preference5:purple) )
)
(:scoring
  1
)
)(define (game game-id-215) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (forall (?z ?i - (either cellphone hexagonal_bin cube_block))
        (not
          (forall (?l - pillow)
            (game-conserved
              (in ?l ?i)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?u - hexagonal_bin)
      (and
        (preference preference1
          (exists (?x - (either wall mug dodgeball))
            (then
              (once (equal_z_position ?x ?x) )
              (once (in agent ?u) )
              (once (or (and (not (and (open desk) (on desk ?u) ) ) (agent_holds ?u) ) (on ?u bed) ) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?z - cube_block)
        (then
          (once (object_orientation ?z ?z) )
          (once (in pink_dodgeball floor) )
          (hold (not (in_motion ?z) ) )
        )
      )
    )
    (forall (?d - hexagonal_bin)
      (and
        (preference preference3
          (exists (?q - dodgeball ?j - color ?p - dodgeball)
            (at-end
              (not
                (agent_holds ?d)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-unique-positions preference3:dodgeball) (count preference1:dodgeball) )
    (>= (count-shortest preference3:hexagonal_bin:cube_block) 180 )
  )
)
(:scoring
  (count-once preference2:green)
)
)(define (game game-id-216) (:domain medium-objects-room-v1)
(:setup
  (forall (?q - dodgeball ?j - game_object)
    (game-conserved
      (< (distance green_golfball ?j) (distance ?j ?j))
    )
  )
)
(:constraints
  (and
    (forall (?n - game_object)
      (and
        (preference preference1
          (exists (?k - (either pillow golfball cd))
            (at-end
              (and
                (and
                  (> 7 1)
                  (and
                    (agent_holds ?k)
                    (and
                      (and
                        (not
                          (agent_holds ?k)
                        )
                        (exists (?w - dodgeball)
                          (agent_holds top_shelf)
                        )
                      )
                      (on ?n ?k)
                    )
                  )
                )
                (on ?n ?n)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (count-once-per-external-objects preference1:dodgeball) )
)
(:scoring
  (count-once-per-objects preference1:golfball)
)
)(define (game game-id-217) (:domain few-objects-room-v1)
(:setup
  (exists (?v - hexagonal_bin)
    (game-optional
      (agent_holds ?v)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?v - game_object)
        (then
          (hold (in_motion ?v) )
          (once (and (and (< 1 (distance ?v green)) (broken ?v) ) (not (not (agent_holds ?v) ) ) ) )
          (once (agent_holds ?v) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:dodgeball) (count-once-per-external-objects preference1:hexagonal_bin:red) )
)
(:scoring
  9
)
)(define (game game-id-218) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?d - cube_block ?j - game_object)
      (forall (?i - golfball)
        (game-conserved
          (in ?j ?i)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?w - (either lamp tall_cylindrical_block cellphone) ?e - building)
        (then
          (once (and (and (or (and (< 6 (distance ?e agent)) (rug_color_under room_center ?e) (in ?e ?e) (agent_holds ?e) ) (not (forall (?s - dodgeball ?f - cube_block) (exists (?l - dodgeball ?t - building) (agent_holds ?f) ) ) ) ) (and (in_motion ?e) (not (not (and (and (and (in ?e ?e) (agent_holds ?e) ) (on ?e ?e) (not (not (not (and (and (and (not (not (agent_holds ?e) ) ) (and (not (object_orientation ?e ?e) ) ) ) (toggled_on ?e) ) (and (in ?e ?e) (in_motion ?e) ) ) ) ) ) ) (exists (?l - hexagonal_bin ?z - hexagonal_bin) (agent_holds ?e) ) ) ) ) ) ) (same_object ?e ?e) ) )
          (hold (< (distance upright ?e) 2) )
          (once (adjacent_side back ?e ?e) )
        )
      )
    )
  )
)
(:terminal
  (> 3 4 )
)
(:scoring
  2
)
)(define (game game-id-219) (:domain many-objects-room-v1)
(:setup
  (forall (?a - (either pencil book triangle_block))
    (game-optional
      (not
        (in_motion ?a)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?u - ball ?f - hexagonal_bin ?m - chair)
        (at-end
          (not
            (not
              (in desk ?m)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< 3 (external-forall-maximize 2 ) )
)
(:scoring
  (count-once-per-objects preference1:dodgeball:beachball)
)
)(define (game game-id-220) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?k - hexagonal_bin)
      (forall (?j - hexagonal_bin)
        (game-conserved
          (and
            (not
              (and
                (in rug ?k)
                (and
                  (and
                    (rug_color_under ?j ?k)
                    (not
                      (in_motion rug)
                    )
                    (adjacent_side pink ?k ?k ?k)
                    (on desk ?j)
                  )
                  (agent_holds ?k)
                  (adjacent_side agent main_light_switch ?j ?k)
                  (in ?k ?k)
                )
              )
            )
            (not
              (adjacent floor ?j)
            )
          )
        )
      )
    )
    (or
      (exists (?a - (either chair book side_table cube_block bridge_block triangular_ramp cube_block) ?d - golfball ?s - red_dodgeball)
        (forall (?i - shelf)
          (and
            (forall (?t - hexagonal_bin)
              (and
                (game-optional
                  (on ?t ?i)
                )
              )
            )
            (game-conserved
              (agent_holds ?i)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?n - dodgeball ?k - building)
        (then
          (once (in_motion ?k) )
          (once (agent_holds ?k) )
          (hold-while (not (on upright ?k) ) (adjacent ?k rug) )
        )
      )
    )
  )
)
(:terminal
  (and
    (and
      (>= (total-time) (* (+ (* (* 100 5 )
              (- (* (- 12 )
                  (count-once-per-objects preference1:yellow_cube_block)
                )
              )
            )
            (count-same-positions preference1:red)
          )
          (count preference1:basketball)
          (count preference1:yellow)
          (count-once-per-objects preference1:dodgeball)
        )
      )
      (>= (count preference1:dodgeball) (* 180 5 )
      )
    )
    (>= (count preference1:golfball:triangle_block) (count-overlapping preference1:top_drawer) )
  )
)
(:scoring
  (count-once-per-objects preference1:doggie_bed)
)
)(define (game game-id-221) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?p - curved_wooden_ramp)
      (and
        (and
          (forall (?x - building)
            (and
              (game-conserved
                (agent_holds ?x)
              )
              (forall (?j - block)
                (and
                  (forall (?r - cube_block ?o - hexagonal_bin)
                    (game-conserved
                      (and
                        (and
                          (and
                            (not
                              (adjacent agent ?j)
                            )
                            (and
                              (same_color ?x ?o)
                              (same_object ?x floor)
                            )
                          )
                          (adjacent door ?o)
                        )
                        (agent_holds ?j)
                      )
                    )
                  )
                  (game-conserved
                    (in_motion ?p)
                  )
                )
              )
            )
          )
        )
        (forall (?v - dodgeball)
          (exists (?n - (either curved_wooden_ramp golfball pink dodgeball floor))
            (exists (?x - cube_block)
              (exists (?q - beachball)
                (game-conserved
                  (not
                    (in_motion ?v)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?g ?w ?u ?p ?c ?f - dodgeball)
        (then
          (once (and (is_setup_object ?g) (and (and (and (in ?f ?g) (not (in bed ?f) ) ) (agent_holds ?g) ) (agent_holds ?g) ) ) )
          (hold (in_motion ?w) )
          (hold (agent_holds ?p) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-once-per-objects preference1:beachball) (count preference1:yellow) )
    (>= (count preference1:orange:beachball) (count preference1:white:pyramid_block) )
  )
)
(:scoring
  (* (total-score) 1 (count-same-positions preference1:dodgeball) (+ 3 (- (count preference1:golfball:pink) )
    )
  )
)
)(define (game game-id-222) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?t - teddy_bear)
      (and
        (game-optional
          (in_motion ?t)
        )
        (forall (?a - cube_block ?f - ball)
          (exists (?v - cube_block)
            (game-conserved
              (> 2 2)
            )
          )
        )
        (game-optional
          (and
            (not
              (agent_holds rug)
            )
            (and
              (not
                (and
                  (agent_holds upright)
                  (in ?t rug)
                )
              )
              (agent_holds ?t)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?h - shelf)
        (then
          (once (same_color ?h ?h) )
          (hold (in_motion ?h) )
          (once (not (and (agent_holds ?h) (on ?h ?h) ) ) )
        )
      )
    )
    (forall (?k - cube_block)
      (and
        (preference preference2
          (exists (?i - shelf)
            (at-end
              (and
                (touch ?k ?k)
                (equal_z_position ?i ?i)
                (rug_color_under ?k bed)
              )
            )
          )
        )
        (preference preference3
          (exists (?p - block)
            (then
              (once (open ?p) )
              (once (agent_holds ?p) )
              (hold (in ?p ?k) )
            )
          )
        )
      )
    )
    (forall (?h - ball)
      (and
        (preference preference4
          (at-end
            (not
              (toggled_on ?h)
            )
          )
        )
        (preference preference5
          (exists (?f - bridge_block)
            (then
              (hold (and (agent_holds ?f) (in_motion ?f) ) )
              (once (same_color bed desk) )
              (once (in_motion ?h) )
            )
          )
        )
        (preference preference6
          (exists (?j - (either golfball golfball) ?f - cylindrical_block)
            (then
              (once (agent_holds ?f) )
              (once (touch ?h ?f) )
              (once (touch ?f ?h) )
            )
          )
        )
      )
    )
    (preference preference7
      (exists (?l - hexagonal_bin)
        (then
          (once (and (faces ?l pink_dodgeball) (opposite ?l ?l) ) )
          (hold (in_motion ?l) )
          (once (equal_z_position room_center ?l) )
        )
      )
    )
    (forall (?j - hexagonal_bin)
      (and
        (preference preference8
          (exists (?h - cube_block)
            (then
              (hold (agent_holds ?j) )
              (once (and (and (not (not (not (on ?j ?h) ) ) ) (and (agent_holds agent) (and (and (and (not (not (adjacent ?j ?h) ) ) (on ?j ?h) ) (and (on ?h ?j) (opposite ?h ?j) (not (and (in ?j ?j) (and (not (not (on ?h ?j) ) ) (in door ?h) ) ) ) ) ) (not (exists (?r - game_object) (faces ?h ?j) ) ) (game_start ) ) (adjacent_side floor ?j ?j) (agent_holds ?j) (agent_holds ?h) (in_motion ?j) (on bed ?h) ) ) (in ?h ?h) (in pink rug) (on ?h ?j) (adjacent ?j ?h) (in pink_dodgeball ?j) (in agent ?j) ) )
              (hold (adjacent ?h ?h) )
            )
          )
        )
      )
    )
    (forall (?f - dodgeball)
      (and
        (preference preference9
          (exists (?q ?m ?z - hexagonal_bin)
            (then
              (once-measure (< 7 (distance door ?f)) (distance_side ?z ?q ?f ?f) )
              (hold (< 1 1) )
              (once (on room_center ?z) )
            )
          )
        )
        (preference preference10
          (exists (?e ?s ?o ?u ?t - bridge_block ?j - hexagonal_bin)
            (then
              (once (touch ?j ?f) )
              (hold (or (and (agent_holds ?j) (is_setup_object ?j) (and (not (agent_holds ?j) ) (adjacent front ?j) (and (and (not (agent_holds ?f) ) (< 4 (distance ?j ?f)) ) (and (agent_holds ?f) (not (in_motion bed) ) ) ) ) ) (in_motion ?j) ) )
              (once (and (in ?j ?j) (not (not (or (exists (?b - hexagonal_bin) (agent_holds ?b) ) (on desk ?j) ) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference8:basketball) (count preference8:basketball) )
)
(:scoring
  (count preference8:basketball:pyramid_block)
)
)(define (game game-id-223) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (in tan bed)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?i - triangular_ramp ?h - ball)
        (at-end
          (adjacent ?h ?h)
        )
      )
    )
  )
)
(:terminal
  (< (external-forall-minimize (count-unique-positions preference1:basketball:alarm_clock) ) (count preference1:dodgeball) )
)
(:scoring
  (* 2 4 (count-once-per-objects preference1:red_pyramid_block:alarm_clock) (+ (count preference1:hexagonal_bin) (count preference1:golfball) )
    (count preference1:triangle_block)
    (count preference1:dodgeball:dodgeball)
  )
)
)(define (game game-id-224) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (and
        (not
          (forall (?g ?k - (either bridge_block cd))
            (exists (?c - (either top_drawer pillow))
              (game-optional
                (same_object desk upright)
              )
            )
          )
        )
      )
    )
    (and
      (forall (?m - pyramid_block)
        (game-conserved
          (agent_holds ?m)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?q - hexagonal_bin)
        (then
          (once (not (in_motion bridge_block) ) )
          (once (opposite ?q ?q) )
          (once (< (distance ?q ?q) 2) )
        )
      )
    )
    (forall (?a - game_object)
      (and
        (preference preference2
          (exists (?u ?z - wall ?q - triangular_ramp)
            (then
              (hold (in_motion ?q) )
              (once (and (and (in ?a ?q) (in_motion rug) (= 4 1) ) (on ?a pink) ) )
              (hold (exists (?v - golfball ?t - curved_wooden_ramp) (and (not (in_motion bed) ) (touch ?q ?t) ) ) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?e ?j ?f ?w - triangular_ramp ?x ?q - triangular_ramp)
        (then
          (hold (same_color ?q agent) )
          (hold (agent_holds desk) )
          (once (on ?x ?x) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference1:yellow_cube_block:dodgeball) (* 8 1 )
  )
)
(:scoring
  (count-unique-positions preference3:dodgeball:pink)
)
)(define (game game-id-225) (:domain medium-objects-room-v1)
(:setup
  (forall (?y - red_pyramid_block)
    (exists (?l - tan_cube_block)
      (and
        (game-conserved
          (in_motion agent)
        )
        (exists (?d - block ?n - dodgeball)
          (and
            (exists (?h - building)
              (exists (?w - desktop ?b - dodgeball)
                (game-conserved
                  (not
                    (in_motion ?h)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?l - game_object)
      (and
        (preference preference1
          (exists (?k - curved_wooden_ramp)
            (then
              (once (adjacent agent ?l) )
              (once (in_motion front) )
              (once (in_motion ?l) )
            )
          )
        )
      )
    )
    (forall (?t - (either cylindrical_block yellow_cube_block dodgeball) ?d - red_pyramid_block)
      (and
        (preference preference2
          (exists (?k - dodgeball)
            (then
              (once (not (and (in_motion ?k) (not (adjacent ?k ?d) ) ) ) )
              (hold (agent_holds ?d) )
              (once (not (on floor ?k) ) )
            )
          )
        )
        (preference preference3
          (exists (?x - ball)
            (then
              (once (and (in desk ?x) (agent_holds ?x) ) )
              (hold (agent_holds agent) )
              (hold (open ?x) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 4 (* 2 3 )
  )
)
(:scoring
  (count-once preference1:golfball)
)
)(define (game game-id-226) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (game-optional
        (not
          (not
            (= 4 8)
          )
        )
      )
    )
    (forall (?r - hexagonal_bin)
      (and
        (exists (?a - wall)
          (exists (?c - dodgeball ?z - teddy_bear)
            (forall (?n - block ?h - game_object)
              (game-conserved
                (not
                  (not
                    (< (distance ?a ?z) (distance_side agent ?z ?r))
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?r - teddy_bear)
        (then
          (hold-while (and (object_orientation ?r pillow) (touch ?r ?r) (not (not (exists (?o - hexagonal_bin ?z ?i ?f - cube_block) (agent_holds floor) ) ) ) ) (forall (?f - tall_cylindrical_block ?e ?j - block ?q - chair) (on ?r ?r) ) )
          (once (and (and (not (not (on ?r ?r) ) ) (adjacent_side desk ?r ?r) ) (in_motion ?r) ) )
          (hold (on ?r ?r) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:blue) (count preference1:green) )
)
(:scoring
  6
)
)(define (game game-id-227) (:domain few-objects-room-v1)
(:setup
  (exists (?f - dodgeball)
    (and
      (game-conserved
        (and
          (equal_z_position ?f ?f)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?j - (either laptop alarm_clock) ?g - hexagonal_bin)
        (then
          (hold-while (not (in ?g ?g) ) (not (in_motion desk) ) (adjacent ?g floor) )
          (hold (or (not (adjacent ?g ?g) ) (is_setup_object ?g) ) )
          (hold (agent_holds desk) )
        )
      )
    )
    (forall (?x - doggie_bed)
      (and
        (preference preference2
          (exists (?s - block)
            (then
              (hold-while (in_motion ?x) (< (distance ?x ?s) 8) )
              (hold (in_motion south_west_corner) )
              (once (in_motion ?x) )
            )
          )
        )
        (preference preference3
          (then
            (forall-sequence (?a - cube_block ?i - hexagonal_bin)
              (then
                (once (not (or (not (= (distance ?x ?i) (distance ?i ?x) (distance_side ?x ?i ?i agent)) ) (not (agent_holds ?x) ) ) ) )
                (once (in_motion ?i) )
                (once (on ?x ?x) )
              )
            )
            (once (agent_holds ?x) )
            (once (< 1 1) )
          )
        )
      )
    )
    (forall (?m - hexagonal_bin)
      (and
        (preference preference4
          (exists (?h - hexagonal_bin)
            (then
              (once (= 2 1) )
              (hold-while (not (not (and (not (in bed ?m) ) (on ?h ?m) ) ) ) (object_orientation ?m ?h) )
              (hold (not (exists (?b - hexagonal_bin) (and (agent_holds ?m) (and (in_motion ?m) (agent_holds bed) ) ) ) ) )
            )
          )
        )
        (preference preference5
          (then
            (hold-while (in_motion desk) (< 7 (distance floor ?m)) (above ?m ?m) )
            (once (on ?m ?m) )
            (once (agent_holds ?m) )
          )
        )
      )
    )
  )
)
(:terminal
  (> 100 (= (- (* 5 (count preference2:golfball) )
      )
    )
  )
)
(:scoring
  (* (* (count-shortest preference1:dodgeball) (external-forall-minimize (* 2 (count preference3:hexagonal_bin) )
      )
    )
    (count preference5:pink)
  )
)
)(define (game game-id-228) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (exists (?h - teddy_bear)
      (in_motion ?h)
    )
  )
)
(:constraints
  (and
    (forall (?a - triangular_ramp)
      (and
        (preference preference1
          (exists (?c - ball ?m ?l - hexagonal_bin)
            (then
              (once (in_motion ?a) )
              (once (agent_holds ?l) )
              (once (on ?m ?m) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:basketball:green:golfball) (- (* (count-once-per-objects preference1:green:green) 10 )
      (+ (* (+ 3 (count-once preference1:dodgeball) )
          (total-time)
        )
        (count preference1:yellow)
      )
    )
  )
)
(:scoring
  (- 3 )
)
)(define (game game-id-229) (:domain few-objects-room-v1)
(:setup
  (exists (?a - curved_wooden_ramp)
    (exists (?e - dodgeball ?n - cube_block)
      (game-conserved
        (in_motion ?n)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?f - dodgeball)
        (then
          (once (not (exists (?t - book) (agent_holds ?t) ) ) )
          (once (not (in_motion ?f) ) )
          (once (game_start ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference1:green) (+ (<= (count preference1:yellow:basketball) (* (count preference1:dodgeball) 3 )
      )
      (count-once-per-objects preference1:basketball)
    )
  )
)
(:scoring
  (* (count preference1:golfball:dodgeball) (+ (+ (* 20 (* (= 10 (count preference1:dodgeball) (count-longest preference1:basketball:pink_dodgeball) )
            15
            (count preference1:beachball)
          )
        )
        (count preference1:golfball)
        (count-total preference1:doggie_bed)
      )
      (* (count preference1:dodgeball:red) (count preference1:pink_dodgeball) (- 2 (+ 3 5 )
        )
        (count-once-per-external-objects preference1:purple)
        (count preference1:dodgeball)
        (+ (count-once-per-objects preference1:red) )
      )
    )
  )
)
)(define (game game-id-230) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?s - flat_block ?n - game_object)
      (exists (?w - pyramid_block)
        (exists (?b ?p - cube_block)
          (game-optional
            (same_object agent ?w)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?t ?j - building)
        (then
          (once (in_motion rug) )
          (hold (and (in_motion ?j) (and (same_object ?j ?t) (and (agent_holds ?j) (in_motion ?j) ) ) ) )
          (once (agent_holds ?t) )
        )
      )
    )
    (preference preference2
      (exists (?u - ball)
        (then
          (hold (not (not (and (in ?u yellow) (agent_holds ?u) ) ) ) )
          (once (and (not (same_object ?u ?u) ) (not (agent_holds agent) ) (< 1 (building_size ?u)) ) )
          (once (and (agent_holds ?u) (in_motion ?u) (in_motion ?u) ) )
          (once (on ?u ?u) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-longest preference1:dodgeball:doggie_bed) (= 2 (count preference2:purple) )
  )
)
(:scoring
  (count-shortest preference2:tall_cylindrical_block)
)
)(define (game game-id-231) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (not
      (not
        (and
          (exists (?l - curved_wooden_ramp)
            (and
              (not
                (and
                  (adjacent ?l ?l)
                  (is_setup_object agent)
                )
              )
              (not
                (broken ?l)
              )
            )
          )
          (> 1 2)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?r ?a - ball)
        (at-end
          (rug_color_under desk ?r)
        )
      )
    )
    (preference preference2
      (exists (?q - hexagonal_bin)
        (then
          (once (and (<= (x_position ?q) 7) (in ?q agent) ) )
          (hold (in_motion desk) )
          (hold-while (equal_x_position ?q ?q) (and (and (< (distance_side ?q ?q ?q) 9) (not (in_motion ?q) ) (not (agent_holds agent) ) ) (rug_color_under ?q ?q) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (total-score) )
)
(:scoring
  (count-longest preference1:dodgeball:golfball)
)
)(define (game game-id-232) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - wall)
      (game-conserved
        (agent_holds agent)
      )
    )
  )
)
(:constraints
  (and
    (forall (?t - (either doggie_bed))
      (and
        (preference preference1
          (exists (?h - hexagonal_bin ?w - building)
            (at-end
              (agent_holds bed)
            )
          )
        )
        (preference preference2
          (exists (?c - cube_block ?g - ball ?z - hexagonal_bin)
            (then
              (once (faces ?t ?t) )
              (once (in_motion ?z) )
              (hold (< (distance ?t agent) 8) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?i - (either cube_block tall_cylindrical_block alarm_clock) ?r - chair ?f - wall)
        (then
          (hold-while (agent_holds ?f) (in_motion ?f) )
          (once (and (and (< 7 (distance ?f ?f)) (not (not (not (agent_holds ?f) ) ) ) (in_motion ?f) ) (agent_holds ?f) (>= 10 (distance ?f south_wall)) (exists (?j - (either dodgeball cellphone blue_cube_block)) (agent_holds ?j) ) ) )
          (once (agent_holds ?f) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (* (* (* (count-longest preference1:pink) (total-time) )
            (* (* 10 (count preference2:orange) )
              (count-once-per-objects preference2:blue_dodgeball:beachball)
            )
          )
        )
        (* 8 (+ (* (* 300 6 (count preference3:brown:pink) )
              (count preference1:golfball:basketball)
            )
            1
          )
        )
      )
    )
    (>= (count-total preference2:pyramid_block:dodgeball) (external-forall-minimize (count-once-per-external-objects preference2:blue) ) )
  )
)
(:scoring
  2
)
)(define (game game-id-233) (:domain many-objects-room-v1)
(:setup
  (exists (?t - dodgeball ?h - teddy_bear ?x - hexagonal_bin)
    (exists (?p - dodgeball ?o - blinds ?k - tall_cylindrical_block)
      (exists (?g - block)
        (exists (?e - hexagonal_bin ?h - game_object ?l - hexagonal_bin ?d - (either cd game_object))
          (game-conserved
            (adjacent agent ?g)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?k - block ?w - curved_wooden_ramp)
      (and
        (preference preference1
          (exists (?f - hexagonal_bin ?s - game_object)
            (then
              (hold (not (adjacent ?s ?s) ) )
              (once (not (and (in_motion ?s) (not (agent_holds ?s) ) ) ) )
              (hold (object_orientation ?w ?w) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:golfball) (- (count preference1:golfball) )
  )
)
(:scoring
  (count-once-per-objects preference1:green)
)
)(define (game game-id-234) (:domain medium-objects-room-v1)
(:setup
  (exists (?m - cube_block)
    (game-conserved
      (< 1 (distance drawer ?m))
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?f - block ?g - cube_block)
        (then
          (hold (on bed ?g) )
          (once (agent_holds ?g) )
          (once (in_motion ?g) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 1 (count-once-per-objects preference1:yellow_cube_block) )
    0
  )
)
(:scoring
  (* 10 3 )
)
)(define (game game-id-235) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-conserved
      (agent_holds agent)
    )
    (game-optional
      (forall (?b - (either pink dodgeball cd cube_block key_chain key_chain side_table) ?m - dodgeball ?v - (either yellow golfball) ?u - hexagonal_bin)
        (on pink_dodgeball ?u)
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - wall ?c - ball ?a ?u ?c - block)
      (and
        (preference preference1
          (exists (?r - (either blue_cube_block laptop))
            (then
              (once (not (not (agent_holds ?r) ) ) )
              (once (not (not (agent_holds desk) ) ) )
              (hold (in_motion ?r) )
            )
          )
        )
        (preference preference2
          (exists (?k - hexagonal_bin ?i - bridge_block)
            (then
              (hold (< (distance agent ?i) (x_position desk)) )
              (once (same_color ?c ?c) )
              (once (not (in ?i ?i) ) )
            )
          )
        )
        (preference preference3
          (exists (?t - dodgeball ?z - (either dodgeball cylindrical_block) ?q - (either book cellphone pillow))
            (then
              (once (same_object ?u ?a) )
              (once (not (and (in_motion ?c) (in_motion ?q) ) ) )
              (hold-for 4 (and (and (exists (?z - wall ?v - pillow) (touch ?u ?c) ) (in ?c ?c) ) (and (on ?u ?a) (not (adjacent_side ?q agent ?c) ) ) (agent_holds desk) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> 6 (count preference2:doggie_bed) )
)
(:scoring
  (* (count-once-per-objects preference3:basketball:green) 6 (+ (and (count preference3:beachball) (* 8 (count preference3:yellow) )
        (+ 10 (count-once-per-objects preference2:yellow) )
      )
      (count-once-per-objects preference3:pink)
      (* 1 4 (not (* (count preference2:purple) (count-once-per-objects preference2:triangle_block) )
        )
      )
    )
  )
)
)(define (game game-id-236) (:domain many-objects-room-v1)
(:setup
  (exists (?d - tall_cylindrical_block ?m - block)
    (and
      (game-conserved
        (and
          (< (distance ?m ?m) (distance ?m ?m))
          (same_color ?m ?m)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?p - hexagonal_bin)
        (then
          (once (and (in ?p ?p) (adjacent desktop ?p) ) )
          (hold (not (and (same_color ?p ?p) (and (and (in_motion agent) (not (on ?p ?p) ) ) (< 3 1) ) ) ) )
          (hold-while (not (adjacent_side ?p bed agent) ) (in_motion ?p) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:hexagonal_bin) (+ (* (* (count preference1:dodgeball) (external-forall-maximize (count-once-per-objects preference1:golfball:dodgeball) ) )
        6
        (* (* (* (* (* (* (count preference1:dodgeball:golfball) (* 4 (* (* (> (count preference1:basketball:beachball) (* (* (* (* (count preference1:brown) 20 )
                                  40
                                )
                                (count preference1:pink)
                              )
                              0
                            )
                          )
                          3
                        )
                        5
                        (* (count-once-per-objects preference1:block) (= 5 (count preference1:yellow) (= (+ 2 (* 0 (- (count-same-positions preference1:basketball) )
                                )
                              )
                              (- 6 )
                            )
                          )
                        )
                      )
                    )
                  )
                )
                (count-once-per-objects preference1:basketball:orange)
              )
              10
            )
            5
          )
          3
        )
      )
      (* (* 100 )
        (count-increasing-measure preference1:golfball)
      )
    )
  )
)
(:scoring
  (external-forall-maximize
    1
  )
)
)(define (game game-id-237) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds front_left_corner)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?k - dodgeball ?x - (either chair dodgeball pyramid_block pillow dodgeball tall_cylindrical_block alarm_clock) ?s - cube_block ?l - hexagonal_bin)
        (then
          (once (on ?l ?l) )
          (forall-sequence (?h - hexagonal_bin)
            (then
              (once (>= (distance ?l ?h) (building_size ?h)) )
              (once (equal_z_position ?h ?h) )
              (hold (and (exists (?n ?g - cube_block) (same_color ?h pillow) ) (agent_holds ?l) ) )
              (once (in_motion ?h) )
            )
          )
          (once (in ?l rug) )
        )
      )
    )
    (forall (?n - game_object)
      (and
        (preference preference2
          (at-end
            (same_color ?n ?n)
          )
        )
        (preference preference3
          (exists (?l - hexagonal_bin)
            (then
              (once (on ?n agent) )
              (once (and (on ?n pink) (on ?n rug) (agent_holds ?l) ) )
              (once (is_setup_object ?l) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 3 6 )
    (>= (count-once-per-objects preference3:golfball) (count preference2:basketball:book:tall_cylindrical_block) )
    (or
      (not
        (>= (count-overlapping preference1:beachball) (external-forall-maximize (count preference1:basketball) ) )
      )
    )
  )
)
(:scoring
  2
)
)(define (game game-id-238) (:domain few-objects-room-v1)
(:setup
  (exists (?q - (either block yellow_cube_block))
    (and
      (and
        (game-optional
          (on ?q desk)
        )
        (game-optional
          (agent_holds rug)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?t - dodgeball ?h - hexagonal_bin)
        (then
          (once-measure (is_setup_object side_table) (distance ?h ?h) )
          (hold-to-end (not (not (agent_holds ?h) ) ) )
          (hold-while (and (not (agent_holds agent) ) (agent_holds ?h) (in_motion ?h) ) (object_orientation ?h ?h) (in ?h agent) (not (agent_holds ?h) ) )
          (once (and (adjacent bed ?h) (same_type ?h ?h) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:dodgeball:dodgeball:yellow) (and 3 (- (+ 100 (not (+ (count-once-per-objects preference1:blue_cube_block) (* 1 (count-once-per-objects preference1:yellow) 10 )
            )
          )
        )
      )
      (count preference1:dodgeball:yellow)
    )
  )
)
(:scoring
  100
)
)(define (game game-id-239) (:domain few-objects-room-v1)
(:setup
  (forall (?e - hexagonal_bin)
    (and
      (game-conserved
        (adjacent ?e ?e)
      )
    )
  )
)
(:constraints
  (and
    (forall (?t - dodgeball ?o - chair ?k - dodgeball)
      (and
        (preference preference1
          (exists (?i - (either golfball hexagonal_bin cellphone))
            (at-end
              (in ?i ?k)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= 10 2 )
    (>= 1 (count-once-per-objects preference1:yellow_cube_block:pink) )
    (or
      (>= 5 (* (count-once-per-objects preference1:doggie_bed:dodgeball) (count preference1:beachball) )
      )
    )
  )
)
(:scoring
  1
)
)(define (game game-id-240) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?i - hexagonal_bin)
      (and
        (exists (?l - (either pink bridge_block credit_card) ?e - hexagonal_bin)
          (and
            (game-conserved
              (and
                (equal_x_position ?i ?e)
                (not
                  (agent_holds green_golfball)
                )
              )
            )
            (game-conserved
              (on ?e ?i)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?k - hexagonal_bin ?x ?q ?i - building)
        (then
          (hold (agent_holds ?i) )
          (hold (and (on ?q ?x) (on ?i ?q) ) )
          (hold (< 1 1) )
        )
      )
    )
    (preference preference2
      (exists (?s - hexagonal_bin ?l - ball ?i - cube_block)
        (then
          (once (and (in_motion ?i) (in ?i south_west_corner) ) )
          (hold (object_orientation bed ?i) )
          (once (and (on ?i ?i) (in_motion south_west_corner) ) )
        )
      )
    )
  )
)
(:terminal
  (> 30 3 )
)
(:scoring
  (count preference2:beachball:pink)
)
)(define (game game-id-241) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (forall (?c - (either yellow_cube_block pyramid_block) ?x - drawer)
      (and
        (in_motion ?x)
        (on ?x ?x)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?m - building ?c - hexagonal_bin ?o - game_object)
        (then
          (once (not (in_motion ?o) ) )
          (once (not (and (exists (?i - hexagonal_bin) (and (agent_holds ?o) (= 1 (distance ?i ?i)) (not (< 8 8) ) ) ) (on ?o ?o) ) ) )
          (once (in_motion ?o) )
        )
      )
    )
  )
)
(:terminal
  (= (* 3 5 )
    2
  )
)
(:scoring
  (count-once-per-external-objects preference1:dodgeball)
)
)(define (game game-id-242) (:domain medium-objects-room-v1)
(:setup
  (exists (?p - triangular_ramp ?c - dodgeball)
    (game-optional
      (exists (?q - dodgeball ?u - dodgeball)
        (and
          (same_type ?u agent)
          (not
            (agent_holds ?c)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?l - hexagonal_bin)
        (then
          (once (agent_holds ?l) )
          (once (not (and (and (in_motion ?l) (agent_holds ?l) (in_motion ?l) ) (or (agent_holds ?l) (in_motion pink) (in_motion ?l) ) ) ) )
          (once (adjacent_side ?l ?l ?l) )
        )
      )
    )
    (preference preference2
      (exists (?x - ball ?o - doggie_bed)
        (then
          (once (agent_holds ?o) )
          (hold (agent_holds ?o) )
          (hold (on ?o ?o) )
        )
      )
    )
  )
)
(:terminal
  (< 8 (not (count-same-positions preference1:dodgeball) ) )
)
(:scoring
  (* (* (* (count-once preference2:dodgeball) (* (count preference1:dodgeball) 0 (count preference2:dodgeball) (* 2 (or (+ (count preference2:orange) 4 )
              (count preference1:basketball:beachball)
              (* (* (count-once-per-objects preference2:dodgeball) 7 )
                (count preference1:beachball)
              )
            )
          )
        )
      )
      (external-forall-maximize
        5
      )
      (count-once-per-objects preference1:orange:dodgeball)
    )
    5
    (count preference1:pink)
    (external-forall-maximize
      (* 5 (count preference1:dodgeball:golfball) )
    )
    (count-longest preference1)
    10
  )
)
)(define (game game-id-243) (:domain many-objects-room-v1)
(:setup
  (exists (?z - cube_block)
    (forall (?d - wall)
      (and
        (game-conserved
          (between ?z ?d ?d)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?j - beachball)
        (then
          (hold (not (is_setup_object desk) ) )
          (once (is_setup_object ?j) )
          (hold (adjacent ?j tan) )
        )
      )
    )
  )
)
(:terminal
  (< (count-once preference1:beachball) (= 5 8 )
  )
)
(:scoring
  10
)
)(define (game game-id-244) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (adjacent north_wall agent)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?h ?j - ball ?p - ball)
        (then
          (hold-while (and (and (in_motion ?p) (in_motion door) ) (in_motion ?p) ) (agent_holds ?p) (on agent ?p) )
          (any)
          (hold (agent_holds ?p) )
        )
      )
    )
  )
)
(:terminal
  (< 3 (count-once-per-objects preference1:beachball) )
)
(:scoring
  5
)
)(define (game game-id-245) (:domain medium-objects-room-v1)
(:setup
  (exists (?a - hexagonal_bin ?v - dodgeball)
    (and
      (game-optional
        (and
          (object_orientation side_table ?v)
          (and
            (forall (?o - building)
              (and
                (in_motion ?v)
                (and
                  (in_motion ?o)
                  (and
                    (rug_color_under ?v ?o)
                    (and
                      (in_motion room_center)
                      (in_motion bed)
                      (= (distance agent ?v) 1 1)
                    )
                  )
                )
                (in_motion ?o)
              )
            )
            (on pink ?v)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?l - building ?e - pyramid_block)
        (then
          (once (> 0 0) )
          (once (and (on ?e ?e) ) )
          (hold (agent_holds ?e) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 300 (count preference1:pink_dodgeball:dodgeball) )
    (+ (+ (count-once-per-objects preference1:pink:beachball) 3 (total-time) (count preference1:orange:pink_dodgeball) )
      1
      (* (<= 8 (count preference1:orange) )
        (count-unique-positions preference1:basketball)
      )
      18
    )
  )
)
(:scoring
  (count preference1:basketball:pink)
)
)(define (game game-id-246) (:domain many-objects-room-v1)
(:setup
  (forall (?u - hexagonal_bin)
    (exists (?j - sliding_door ?d - chair ?p - dodgeball)
      (game-conserved
        (game_start )
      )
    )
  )
)
(:constraints
  (and
    (forall (?a - sliding_door ?e - cube_block)
      (and
        (preference preference1
          (at-end
            (agent_holds ?e)
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* 3 5 (+ 20 (count preference1:blue_dodgeball) )
      (count preference1:beachball)
      9
      5
      (count preference1:dodgeball)
      (+ 8 3 )
      (count preference1:beachball)
    )
    (- (* (* 10 (total-score) )
        (- (* (+ (total-time) (or 15 ) )
            (* 50 (count preference1:cube_block) )
          )
        )
      )
    )
  )
)
(:scoring
  (external-forall-maximize
    (count preference1:white)
  )
)
)(define (game game-id-247) (:domain medium-objects-room-v1)
(:setup
  (exists (?h - doggie_bed ?h - tan_cube_block ?n ?t - pillow ?m - hexagonal_bin)
    (forall (?l - (either pyramid_block credit_card alarm_clock beachball yellow_cube_block dodgeball book))
      (and
        (forall (?q - cylindrical_block)
          (and
            (game-optional
              (agent_holds ?q)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?t - dodgeball ?k - cube_block)
        (at-end
          (< (distance ?k ?k) 7)
        )
      )
    )
    (preference preference2
      (exists (?x - wall)
        (then
          (once (in_motion ?x) )
          (once (< 1 5) )
          (hold-for 5 (and (<= 1 7) (and (and (in_motion bottom_shelf) (on ?x ?x) (and (not (not (and (not (and (in_motion ?x) (and (in_motion floor) (in_motion ?x) ) ) ) (and (not (in_motion ?x) ) (on ?x ?x) ) ) ) ) (agent_holds ?x) ) ) (on ?x ?x) ) ) )
        )
      )
    )
  )
)
(:terminal
  (> (- (count preference2:tall_cylindrical_block:blue_dodgeball) )
    (+ 2 (total-time) )
  )
)
(:scoring
  (- 2 )
)
)(define (game game-id-248) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (agent_holds south_wall)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?i - hexagonal_bin ?p - (either book teddy_bear golfball))
        (then
          (once (agent_holds ?p) )
          (once (on ?p ?p) )
          (hold (adjacent ?p ?p) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (count preference1:basketball:dodgeball) (count-once preference1:yellow) )
    (+ (* 3 )
      (count preference1:dodgeball:basketball)
    )
  )
)
(:scoring
  2
)
)(define (game game-id-249) (:domain medium-objects-room-v1)
(:setup
  (exists (?g - game_object ?c - dodgeball)
    (and
      (game-conserved
        (adjacent_side ?c ?c agent)
      )
      (game-conserved
        (and
          (and
            (and
              (not
                (agent_holds ?c)
              )
              (agent_holds agent)
            )
            (agent_holds ?c)
          )
          (exists (?s - hexagonal_bin ?k - (either golfball cd book))
            (not
              (not
                (rug_color_under ?k ?k)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?s - (either dodgeball))
      (and
        (preference preference1
          (exists (?n - hexagonal_bin ?l - hexagonal_bin)
            (then
              (once (between ?l ?s ?l) )
              (hold (in_motion ?s) )
              (hold-while (or (and (in_motion ?l) (touch agent ?l) ) (on ?s ?l) ) (not (< (distance ?s desk) (distance sideways ?s)) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< 3 (and (count-once-per-objects preference1:pink:cube_block) ) )
)
(:scoring
  (* (count-longest preference1:yellow_pyramid_block:beachball) 1 )
)
)(define (game game-id-250) (:domain many-objects-room-v1)
(:setup
  (exists (?b - curved_wooden_ramp ?r - hexagonal_bin ?c - (either basketball))
    (and
      (game-conserved
        (< (distance_side ?c ?c agent) (x_position ?c))
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?d ?s ?f - dodgeball)
        (then
          (once (and (not (and (object_orientation ?s room_center) (and (not (in_motion ?d) ) (and (agent_holds ?d) (not (agent_holds ?s) ) ) ) ) ) (in_motion ?f) ) )
          (once (agent_holds ?d) )
          (once (and (< (building_size agent) 4) (on ?d ?f) ) )
        )
      )
    )
    (preference preference2
      (exists (?p - shelf)
        (at-end
          (in ?p ?p)
        )
      )
    )
  )
)
(:terminal
  (> (count-overlapping preference1:dodgeball) (count-measure preference2:yellow) )
)
(:scoring
  (count preference1:basketball)
)
)(define (game game-id-251) (:domain few-objects-room-v1)
(:setup
  (or
    (and
      (forall (?d - pillow ?q - beachball ?y - hexagonal_bin ?e - cube_block ?n - hexagonal_bin)
        (and
          (game-conserved
            (and
              (and
                (agent_holds ?n)
                (game_start )
              )
              (adjacent_side top_drawer ?n left)
            )
          )
        )
      )
    )
    (forall (?r - dodgeball)
      (exists (?z - dodgeball)
        (game-conserved
          (agent_holds ?r)
        )
      )
    )
    (game-conserved
      (agent_holds bed)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?r - hexagonal_bin)
        (then
          (hold-for 7 (not (in ?r tan) ) )
          (once (in_motion ?r) )
          (once (same_color ?r ?r) )
        )
      )
    )
    (preference preference2
      (exists (?e - cylindrical_block ?s - wall ?s - game_object)
        (at-end
          (and
            (on ?s ?s)
            (in pink ?s)
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:pink) (count-shortest preference2:dodgeball:red) )
)
(:scoring
  (not
    (+ 6 (count preference1:pink_dodgeball:golfball) )
  )
)
)(define (game game-id-252) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (exists (?u - hexagonal_bin ?q - ball)
        (exists (?r - hexagonal_bin)
          (and
            (exists (?k - triangular_ramp ?s - game_object ?c - dodgeball ?b - (either wall cube_block))
              (game-conserved
                (and
                  (in_motion ?r)
                  (and
                    (exists (?s - game_object)
                      (forall (?a - (either mug pencil))
                        (agent_holds ?q)
                      )
                    )
                    (and
                      (on ?r agent)
                      (not
                        (< (distance front_left_corner room_center) 1)
                      )
                    )
                    (and
                      (not
                        (and
                          (on ?b upright)
                          (in_motion ?q)
                        )
                      )
                      (in ?q ?b)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?b - hexagonal_bin)
        (at-end
          (on ?b ?b)
        )
      )
    )
  )
)
(:terminal
  (>= (+ (count-measure preference1:hexagonal_bin) (+ (or 2 ) (* (count-once-per-objects preference1:red:doggie_bed) (count preference1:pink:doggie_bed) )
        (count preference1:alarm_clock)
        (total-time)
      )
    )
    (count-shortest preference1:blue_pyramid_block:blue_dodgeball)
  )
)
(:scoring
  (count-overlapping preference1:beachball)
)
)(define (game game-id-253) (:domain medium-objects-room-v1)
(:setup
  (exists (?m - cube_block)
    (and
      (and
        (game-optional
          (on ?m ?m)
        )
        (and
          (exists (?a - golfball ?i - rug ?o - ball)
            (forall (?h - hexagonal_bin)
              (exists (?j - bridge_block)
                (forall (?l - hexagonal_bin)
                  (game-conserved
                    (in ?j ?l)
                  )
                )
              )
            )
          )
          (game-conserved
            (in ?m ?m)
          )
          (game-optional
            (same_color ?m ?m)
          )
        )
        (game-optional
          (in_motion ?m)
        )
        (game-optional
          (on ?m ?m)
        )
        (forall (?j - doggie_bed)
          (forall (?o - chair ?y - dodgeball)
            (not
              (and
                (forall (?s - doggie_bed)
                  (game-conserved
                    (agent_holds ?y)
                  )
                )
              )
            )
          )
        )
      )
      (and
        (and
          (and
            (or
              (and
                (and
                  (or
                    (forall (?r ?p ?k ?w - curved_wooden_ramp ?k - hexagonal_bin)
                      (exists (?d - hexagonal_bin ?d - game_object ?d - cube_block)
                        (game-conserved
                          (not
                            (not
                              (and
                                (and
                                  (adjacent ?d ?d)
                                  (agent_holds ?k)
                                  (and
                                    (not
                                      (in_motion ?d)
                                    )
                                    (agent_holds ?k)
                                  )
                                )
                                (in ?k ?k)
                              )
                            )
                          )
                        )
                      )
                    )
                    (forall (?q - game_object)
                      (and
                        (forall (?j - drawer)
                          (exists (?u ?k - game_object ?a - dodgeball)
                            (game-optional
                              (toggled_on bed)
                            )
                          )
                        )
                      )
                    )
                  )
                  (game-conserved
                    (in_motion ?m)
                  )
                )
                (or
                  (and
                    (game-conserved
                      (not
                        (>= (distance ?m ?m) 2)
                      )
                    )
                  )
                  (exists (?k - doggie_bed)
                    (not
                      (and
                        (exists (?x - hexagonal_bin)
                          (and
                            (and
                              (exists (?q - ball)
                                (and
                                  (game-conserved
                                    (and
                                      (and
                                        (not
                                          (and
                                            (in pillow bed)
                                            (in ?k ?x)
                                          )
                                        )
                                        (in_motion ?k)
                                        (adjacent ?q ?q)
                                      )
                                      (<= 3 (distance ?x bed))
                                    )
                                  )
                                )
                              )
                            )
                            (forall (?r - ball)
                              (exists (?q - teddy_bear)
                                (and
                                  (game-conserved
                                    (in_motion bed)
                                  )
                                  (game-optional
                                    (agent_holds ?x)
                                  )
                                  (exists (?z - (either laptop wall))
                                    (game-conserved
                                      (in_motion ?q)
                                    )
                                  )
                                )
                              )
                            )
                            (forall (?y - game_object)
                              (and
                                (forall (?v - hexagonal_bin ?n - golfball)
                                  (game-conserved
                                    (agent_holds ?m)
                                  )
                                )
                              )
                            )
                          )
                        )
                        (game-conserved
                          (in_motion ?k)
                        )
                        (game-conserved
                          (not
                            (faces ?m rug)
                          )
                        )
                      )
                    )
                  )
                  (and
                    (exists (?x - cube_block)
                      (exists (?a - block)
                        (exists (?k - color ?h - ball)
                          (game-conserved
                            (not
                              (exists (?f - cylindrical_block)
                                (in_motion ?x)
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
              (forall (?e - game_object ?w - wall)
                (forall (?r - red_dodgeball ?r - triangular_ramp)
                  (or
                    (forall (?x - hexagonal_bin)
                      (game-conserved
                        (agent_holds ?w)
                      )
                    )
                    (game-conserved
                      (on ?r desk)
                    )
                    (and
                      (and
                        (exists (?f - block ?q - sliding_door ?x - dodgeball ?d - building)
                          (forall (?b - (either dodgeball golfball tall_cylindrical_block))
                            (forall (?q - dodgeball ?o - building)
                              (and
                                (game-conserved
                                  (and
                                    (exists (?u - hexagonal_bin)
                                      (and
                                        (and
                                          (on ?r ?d)
                                          (and
                                            (<= (x_position ?r) 6)
                                            (equal_z_position ?o ?r)
                                          )
                                        )
                                        (in_motion ?m)
                                      )
                                    )
                                    (and
                                      (not
                                        (same_color ?m top_shelf)
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
          (and
            (and
              (and
                (game-conserved
                  (in_motion ?m)
                )
              )
            )
          )
        )
      )
      (exists (?o - dodgeball)
        (and
          (exists (?v - building)
            (game-conserved
              (agent_holds agent)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?u - (either cd golfball))
        (then
          (once (above ?u ?u) )
          (once (agent_holds ?u) )
          (once (in bed ?u) )
        )
      )
    )
    (forall (?b - hexagonal_bin)
      (and
        (preference preference2
          (exists (?x - hexagonal_bin ?t ?l ?d - hexagonal_bin)
            (then
              (once (on ?l bed) )
              (once (agent_crouches ) )
              (once (same_object pink_dodgeball ?t) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (= 5 (= (count preference2:red) (count-once-per-objects preference2:pink:basketball) )
      )
      (or
        (or
          (>= (count preference2:doggie_bed:pink_dodgeball) (total-score) )
          (>= 4 (+ (* (+ (count-once-per-external-objects preference2:dodgeball) (count-same-positions preference2:pink_dodgeball) )
                3
              )
              (count-once-per-objects preference2)
              (* (count preference1:basketball) (* (external-forall-maximize 5 ) (- (count preference1:red) )
                )
              )
              (* 2 (* (* (* (count-total preference2:pink:golfball) (* (count preference1:dodgeball) 3 )
                    )
                    (= (* (count-unique-positions preference1:pink_dodgeball) 1 )
                      (count preference1:beachball)
                    )
                  )
                  (count preference2:dodgeball:blue_dodgeball)
                  (* (external-forall-maximize (external-forall-maximize (* (count-unique-positions preference2:golfball) (count-once-per-objects preference1:golfball) (count preference2:beachball:pink) )
                      )
                    )
                    (count-once preference1:blue)
                  )
                  1
                  5
                )
                (total-time)
                (+ (* (+ (+ (total-score) 100 )
                      (count preference1:dodgeball)
                    )
                    (total-time)
                  )
                  (+ 10 (* (- (count-once preference1) )
                      5
                    )
                  )
                )
                (count preference2:yellow_pyramid_block:beachball)
                (count preference2:dodgeball:dodgeball)
                9
              )
              (>= 15 (+ 100 (* (* (* (/ (or (count-same-positions preference2:yellow) 10 ) 2 ) (count-once-per-objects preference2) )
                      9
                    )
                    10
                  )
                )
              )
              (total-time)
              (total-time)
              (count-once-per-objects preference2:tan)
              50
              30
              1
              (* (count preference2:beachball) )
            )
          )
        )
        (not
          (and
            (>= 3 (< (count-once-per-objects preference2:basketball) 2 )
            )
            (or
              (= 2 (* 4 3 )
              )
            )
          )
        )
        (>= (count-once-per-objects preference2:golfball) (count-once-per-external-objects preference1:red) )
      )
      (>= 15 (* (* 10 6 (count preference1:doggie_bed) )
          (+ (total-score) 2 )
        )
      )
    )
    (>= (* 1 (count-total preference1:pink_dodgeball) )
      3
    )
  )
)
(:scoring
  (* (* (+ (count-once-per-objects preference1:beachball:beachball) 4 )
      (count-unique-positions preference1:hexagonal_bin:dodgeball)
    )
    0
    (* (count preference2:dodgeball) (count preference2:green) 5 )
  )
)
)(define (game game-id-254) (:domain many-objects-room-v1)
(:setup
  (forall (?x - dodgeball ?t - chair)
    (game-conserved
      (not
        (not
          (agent_holds ?t)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?f ?y ?x ?i ?l ?c - hexagonal_bin ?f - hexagonal_bin)
        (then
          (hold (agent_holds ?f) )
          (once (not (agent_holds ?f) ) )
          (once (not (agent_holds room_center) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= 3 (count preference1:pink_dodgeball) )
    )
    (>= (count-unique-positions preference1:book) (count preference1:side_table) )
    (>= (* (count preference1:pyramid_block) (count preference1:hexagonal_bin:bed) )
      (- (* 9 (count-once-per-objects preference1:blue_dodgeball) )
      )
    )
  )
)
(:scoring
  (count preference1:beachball)
)
)(define (game game-id-255) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?n - ball)
      (forall (?q - flat_block)
        (game-conserved
          (or
            (< 1 1)
            (and
              (agent_holds ?q)
              (< 3 (distance ?n ?n))
              (in_motion ?q)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?i - doggie_bed)
      (and
        (preference preference1
          (exists (?q - hexagonal_bin)
            (then
              (once (and (on ?q ?i) (on ?q ?i) ) )
              (hold (agent_holds ?q) )
              (once (and (in ?i ?i) (and (not (same_color ?i desk) ) (in_motion pink) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (external-forall-maximize (* 4 3 )
    )
    (count preference1:yellow)
  )
)
(:scoring
  10
)
)(define (game game-id-256) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?e - cube_block)
      (forall (?q - hexagonal_bin)
        (and
          (game-conserved
            (> (x_position ?q) 1)
          )
          (game-conserved
            (agent_holds ?e)
          )
        )
      )
    )
    (and
      (exists (?n - block ?x - (either desktop))
        (game-conserved
          (< 9 (distance back ?x))
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - building ?j - dodgeball)
      (and
        (preference preference1
          (exists (?c - hexagonal_bin)
            (then
              (once (same_type ?c ?j) )
              (once (and (<= 8 (distance ?c ?j)) (in_motion ?c) (and (in_motion ?j) (in_motion door) (on pink ?j) (agent_holds ?j) ) (and (in ?j room_center) (< 2 (distance ?j ?c)) ) ) )
              (once (in_motion ?j) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference1:basketball) 5 )
)
(:scoring
  4
)
)(define (game game-id-257) (:domain medium-objects-room-v1)
(:setup
  (exists (?m - hexagonal_bin)
    (game-conserved
      (agent_holds ?m)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?t - cube_block)
        (then
          (once (in_motion ?t) )
          (hold (in_motion ?t) )
          (hold (or (not (not (agent_holds room_center) ) ) (same_object pink ?t) ) )
        )
      )
    )
    (forall (?t - block ?l - hexagonal_bin)
      (and
        (preference preference2
          (exists (?h - hexagonal_bin ?h - doggie_bed)
            (then
              (hold (not (in_motion ?l) ) )
              (hold (adjacent ?h ?h) )
              (once (agent_holds ?l) )
            )
          )
        )
        (preference preference3
          (at-end
            (agent_holds bed)
          )
        )
        (preference preference4
          (exists (?j - block)
            (then
              (once (agent_holds ?l) )
              (once (on ?l ?l) )
              (hold-while (< (distance ?l ?j) (distance ?j ?l)) (< (distance bed ?l) 0) (and (exists (?e - (either lamp dodgeball) ?e - (either laptop wall) ?u - beachball) (or (in_motion ?j) (and (opposite ?j ?u) (not (and (in_motion ?l) (< (distance ?j ?l) 1) (and (in_motion sideways) (adjacent ?u ?j) ) ) ) ) ) ) (in_motion ?l) ) )
              (once (not (not (agent_holds ?j) ) ) )
            )
          )
        )
      )
    )
    (preference preference5
      (exists (?a - doggie_bed ?z - (either ball side_table))
        (at-end
          (and
            (on ?z west_wall)
            (not
              (in_motion ?z)
            )
            (above agent ?z)
          )
        )
      )
    )
  )
)
(:terminal
  (>= 100 (count-once preference2:purple:pink_dodgeball) )
)
(:scoring
  (total-score)
)
)(define (game game-id-258) (:domain many-objects-room-v1)
(:setup
  (forall (?m - game_object)
    (or
      (forall (?c - red_dodgeball)
        (and
          (game-conserved
            (not
              (on ?m floor)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?j - dodgeball)
        (then
          (once (agent_holds ?j) )
          (once (and (in_motion ?j) (in ?j ?j) (not (and (and (in_motion ?j) (and (and (agent_holds ?j) (in ?j bed) ) (agent_holds ?j) (< 1 1) ) ) (not (and (and (adjacent yellow ?j) (in_motion brown) ) (in_motion ?j) ) ) (in_motion door) ) ) ) )
          (once (on ?j agent) )
        )
      )
    )
  )
)
(:terminal
  (<= 0.7 2 )
)
(:scoring
  (< (+ (count preference1:green:side_table) (count preference1:book) 7 (count-same-positions preference1:basketball) (external-forall-minimize (* 1 (count preference1:pink) )
      )
      4
    )
    (- 0.5 )
  )
)
)(define (game game-id-259) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (in_motion pink)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?l - ball ?q - pillow)
        (then
          (once (on agent ?q) )
        )
      )
    )
    (preference preference2
      (exists (?w - hexagonal_bin)
        (then
          (once (in_motion ?w) )
          (once (object_orientation ?w ?w) )
          (hold-while (not (and (adjacent_side desk rug ?w) (adjacent agent desk) (and (agent_holds ?w) (and (in_motion ?w) (exists (?u - block ?m - triangular_ramp) (and (agent_holds ?w) ) ) ) ) ) ) (in_motion ?w) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:green:dodgeball) (* 2 (- (and 1 (+ (count-once-per-objects preference1:basketball) (* (* 5 (count preference1:book) )
              100
            )
          )
        )
      )
    )
  )
)
(:scoring
  (* (count preference1:yellow_cube_block) 3 )
)
)(define (game game-id-260) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (exists (?e ?k - drawer)
        (exists (?y - ball ?m - blinds)
          (forall (?d - block ?z - curved_wooden_ramp ?a - hexagonal_bin)
            (exists (?q - dodgeball ?s - dodgeball)
              (game-conserved
                (not
                  (adjacent agent ?k)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?t ?g ?r ?y ?q ?c - blinds)
        (then
          (once (same_type agent ?y) )
          (hold-while (in_motion desk) (opposite room_center ?q) (not (not (exists (?k - hexagonal_bin) (and (or (touch ?k ?q) ) (in_motion ?q) ) ) ) ) (on ?t ?c) )
          (once (in_motion ?g) )
        )
      )
    )
    (preference preference2
      (exists (?u - hexagonal_bin)
        (then
          (once (same_object ?u desk) )
          (once (agent_holds ?u) )
          (once (in agent desk) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count-once-per-objects preference1:beachball) (* (count preference2:hexagonal_bin) (count preference2:dodgeball) )
    )
    (total-score)
  )
)
(:scoring
  (count preference1:green)
)
)(define (game game-id-261) (:domain few-objects-room-v1)
(:setup
  (exists (?s - cube_block)
    (forall (?x - block)
      (and
        (game-optional
          (= 1 (distance ?s rug))
        )
        (game-conserved
          (object_orientation ?s bed)
        )
        (game-optional
          (not
            (agent_holds ?s)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?y - building ?p - hexagonal_bin ?p - (either bridge_block book cube_block) ?h - hexagonal_bin)
        (at-end
          (in_motion agent)
        )
      )
    )
    (preference preference2
      (exists (?l - rug)
        (then
          (once (adjacent back ?l) )
          (hold (not (touch ?l ?l) ) )
          (once (adjacent_side ?l ?l ?l) )
        )
      )
    )
    (preference preference3
      (exists (?w - ball ?p - (either golfball))
        (then
          (once (agent_holds bottom_shelf) )
          (once (in ?p ?p) )
          (hold (< (distance ?p ?p) (distance ?p agent)) )
          (once (in_motion ?p) )
        )
      )
    )
  )
)
(:terminal
  (>= 6 8 )
)
(:scoring
  2
)
)(define (game game-id-262) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (exists (?b - hexagonal_bin)
      (not
        (and
          (or
            (and
              (and
                (and
                  (agent_holds ?b)
                  (on ?b ?b)
                  (and
                    (agent_holds ?b)
                    (agent_holds ?b)
                  )
                )
                (broken ?b)
              )
              (> (distance_side ?b rug ?b) (distance ?b ?b))
            )
            (and
              (on ?b ?b)
              (agent_holds ?b)
            )
          )
          (not
            (in_motion ?b)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?y - desk_shelf ?t - hexagonal_bin)
        (then
          (hold (not (on ?t room_center) ) )
          (once (agent_holds ?t) )
          (once (in_motion back) )
        )
      )
    )
  )
)
(:terminal
  (= (* (+ (total-score) (count preference1:purple:alarm_clock) )
      (count-once-per-objects preference1:dodgeball)
    )
    2
  )
)
(:scoring
  (count-overlapping preference1:pink)
)
)(define (game game-id-263) (:domain few-objects-room-v1)
(:setup
  (exists (?c - cube_block)
    (game-conserved
      (in_motion room_center)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?x - curved_wooden_ramp)
        (then
          (hold (agent_holds ?x) )
          (hold (in_motion ?x) )
          (once (is_setup_object ?x) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ 5 (* (* (count-once preference1:pink_dodgeball) (* (count-once-per-objects preference1:yellow_cube_block:green) 3 )
        )
        (- 5 )
      )
    )
    (* (count-once-per-objects preference1:blue_dodgeball:beachball) 7 )
  )
)
(:scoring
  (* (* (- 8 )
      (count preference1:beachball)
    )
    (count preference1:bed)
  )
)
)(define (game game-id-264) (:domain many-objects-room-v1)
(:setup
  (exists (?c - (either bridge_block red beachball) ?p - wall)
    (game-optional
      (is_setup_object front)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?q - cube_block ?o - dodgeball)
        (then
          (once (in_motion ?o) )
          (once (in ?o ?o) )
          (once (not (and (> (distance room_center agent) 2) (same_object ?o ?o) ) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (<= 5 (* (count-once-per-external-objects preference1:golfball) (count-once-per-objects preference1:dodgeball:red) 3 )
    )
    (>= (count preference1:white) (count preference1:dodgeball) )
    (= (+ 4 (count-once-per-objects preference1:green) )
      (+ (* (* (total-score) 10 )
        )
        0
      )
    )
  )
)
(:scoring
  50
)
)(define (game game-id-265) (:domain medium-objects-room-v1)
(:setup
  (exists (?r - hexagonal_bin)
    (game-conserved
      (and
        (and
          (and
            (on ?r ?r)
            (< (distance ?r ?r) (x_position ?r))
            (and
              (and
                (in_motion ?r)
                (in ?r ?r)
              )
              (and
                (agent_holds ?r)
                (is_setup_object ?r)
              )
            )
          )
          (agent_holds ?r)
        )
        (in_motion ?r)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?g - pillow)
        (then
          (once (open ?g) )
          (hold (not (not (and (and (agent_holds ?g) (adjacent ?g ?g) ) (and (not (in ?g sideways) ) (on ?g ?g) ) ) ) ) )
          (hold (agent_holds ?g) )
        )
      )
    )
  )
)
(:terminal
  (<= (count preference1:basketball) (count preference1:pink:blue_dodgeball) )
)
(:scoring
  (count-once preference1:blue_pyramid_block)
)
)(define (game game-id-266) (:domain medium-objects-room-v1)
(:setup
  (exists (?g - hexagonal_bin ?i - hexagonal_bin)
    (game-conserved
      (not
        (agent_holds room_center)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?a ?p - dodgeball)
        (at-end
          (on agent ?p)
        )
      )
    )
  )
)
(:terminal
  (>= (* 20 (- (count-once preference1:orange) )
    )
    (external-forall-maximize
      (count preference1:beachball)
    )
  )
)
(:scoring
  10
)
)(define (game game-id-267) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?d - ball ?y - curved_wooden_ramp)
      (not
        (and
          (game-conserved
            (touch ?y bed)
          )
          (and
            (and
              (game-optional
                (and
                  (in_motion ?y)
                  (in_motion blue)
                )
              )
              (forall (?c - hexagonal_bin)
                (not
                  (game-conserved
                    (adjacent_side ?c ?y front)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?a - ball)
        (at-end
          (not
            (not
              (on ?a bed)
            )
          )
        )
      )
    )
    (forall (?o - cube_block)
      (and
        (preference preference2
          (exists (?u - hexagonal_bin)
            (then
              (hold (> 1 1) )
              (hold (on ?u pink) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?c ?y ?t - building)
        (at-end
          (and
            (rug_color_under ?c green)
            (on ?t ?y)
          )
        )
      )
    )
  )
)
(:terminal
  (>= (>= (* (* (count-once-per-objects preference3:dodgeball) 2 )
        (count-once preference2:dodgeball)
      )
      (count preference3:blue_cube_block:beachball)
    )
    3
  )
)
(:scoring
  (external-forall-maximize
    (* 3 (+ (* (+ (count-once-per-objects preference3:pyramid_block) (count-once-per-objects preference3:beachball:basketball) 3 )
          (* (count-once preference3:cube_block) (total-score) )
        )
        (+ (external-forall-maximize 0.7 ) (count preference2:red) 0 (count preference1:pink_dodgeball:dodgeball) )
      )
    )
  )
)
)(define (game game-id-268) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?f - game_object)
      (exists (?j - building)
        (game-optional
          (not
            (<= (distance ?j agent) 1)
          )
        )
      )
    )
    (exists (?x - building ?l - doggie_bed)
      (forall (?z - (either pink laptop))
        (and
          (game-conserved
            (not
              (on floor ?z)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?e - hexagonal_bin)
      (and
        (preference preference1
          (exists (?g - hexagonal_bin)
            (then
              (hold-while (on ?g ?g) (in_motion ?e) )
              (hold (object_orientation ?e ?e) )
              (once (not (not (in_motion ?g) ) ) )
              (hold (and (in ?e ?e) (on ?e rug) ) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?t - cube_block)
        (then
          (once (agent_holds ?t) )
          (hold (in_motion ?t) )
          (hold (and (agent_holds ?t) (on ?t ?t) ) )
        )
      )
    )
    (preference preference3
      (exists (?c - block)
        (then
          (hold (and (in_motion ?c) (agent_holds desk) (in ?c ?c) (not (in ?c ?c) ) ) )
          (hold (agent_holds ?c) )
          (once (on ?c ?c) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (count preference2:dodgeball) )
)
(:scoring
  5
)
)(define (game game-id-269) (:domain few-objects-room-v1)
(:setup
  (and
    (game-conserved
      (open desk)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?r - game_object)
        (at-end
          (not
            (not
              (and
                (not
                  (not
                    (and
                      (in ?r ?r)
                      (not
                        (in ?r ?r)
                      )
                    )
                  )
                )
                (in ?r ?r)
                (in_motion agent)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1) (count-shortest preference1:red_pyramid_block) )
)
(:scoring
  (external-forall-maximize
    (* (count-once-per-objects preference1) 3 )
  )
)
)(define (game game-id-270) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?x - (either cellphone key_chain cellphone) ?i - (either wall book dodgeball dodgeball))
      (and
        (game-conserved
          (adjacent ?i ?i)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?d ?c - ball ?q - cube_block)
      (and
        (preference preference1
          (exists (?x - game_object)
            (then
              (once (on ?x ?x) )
              (once-measure (agent_holds desk) (distance ?x agent) )
              (hold (agent_holds ?q) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (= (count preference1:blue_dodgeball:yellow_cube_block) (* (count-once-per-objects preference1:yellow) 10 )
    )
  )
)
(:scoring
  (count preference1:dodgeball:red)
)
)(define (game game-id-271) (:domain medium-objects-room-v1)
(:setup
  (exists (?d - (either pyramid_block key_chain floor))
    (game-conserved
      (in_motion ?d)
    )
  )
)
(:constraints
  (and
    (forall (?w ?r - hexagonal_bin)
      (and
        (preference preference1
          (then
            (once (and (not (and (in_motion ?r) (adjacent floor ?r) ) ) (in_motion ?w) (exists (?s - (either dodgeball book) ?b - hexagonal_bin) (not (and (not (faces ?b ?b) ) (open ?r) ) ) ) ) )
            (once (agent_holds ?w) )
            (hold (adjacent ?w desk) )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 1 (count preference1:golfball) )
  )
)
(:scoring
  10
)
)(define (game game-id-272) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (in_motion room_center)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?h ?g ?j - hexagonal_bin ?k - block)
        (then
          (once (not (and (and (> (distance pink_dodgeball ?k) (distance_side ?k room_center ?k)) (in_motion rug) ) (or (not (on ?k ?k) ) (agent_crouches ) (in_motion ?k) ) ) ) )
          (once (= (distance ?k ?k) (distance ?k ?k)) )
          (hold (same_color ?k ?k) )
        )
      )
    )
  )
)
(:terminal
  (> (+ (count preference1:beachball) 3 )
    (* (* (* (count-once-per-objects preference1:top_drawer) (* 3 (* (count preference1:green) (count-once-per-objects preference1:side_table) )
            (* (count-once-per-objects preference1:basketball:red) (count-total preference1:basketball) )
            6
          )
        )
        (count preference1:red)
      )
      0
    )
  )
)
(:scoring
  (* (* (* (count preference1:blue_cube_block) 3 (* 2 (count-increasing-measure preference1:pyramid_block) )
        (count-once preference1:purple:yellow)
        (* (+ (count preference1) (* (* (not (count preference1:beachball) ) (count preference1:cube_block) )
              2
            )
          )
          5
          (count-once-per-objects preference1:blue_cube_block)
          (count preference1:dodgeball)
          8
          8
        )
        (count preference1:beachball)
      )
      (* (count-once-per-objects preference1:orange) (count-once-per-objects preference1) )
      (external-forall-maximize
        (count-once-per-objects preference1:yellow_pyramid_block:pink)
      )
    )
    5
  )
)
)(define (game game-id-273) (:domain few-objects-room-v1)
(:setup
  (forall (?u ?d - (either key_chain dodgeball bridge_block))
    (game-conserved
      (not
        (not
          (and
            (not
              (not
                (agent_holds ?d)
              )
            )
            (agent_holds ?u)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?c - block ?v ?y - ball)
        (then
          (once (adjacent ?y ?y) )
          (once (and (and (agent_holds door) (not (touch ?v ?y) ) ) (in_motion ?y) ) )
          (once (adjacent_side ?v ?v ?y ?v) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (<= 7 (count-once preference1:top_drawer:side_table) )
      (>= (count preference1:blue) (+ 15 (count-once-per-objects preference1:dodgeball) )
      )
    )
    (>= (* (count preference1:hexagonal_bin) (* (+ (+ 15 (* (count preference1:golfball) )
            )
          )
          (+ (count-unique-positions preference1:basketball:book) (count-once-per-objects preference1:dodgeball) )
        )
      )
      4
    )
  )
)
(:scoring
  (- (* 100 (* (count-once-per-objects preference1:basketball) (count preference1:pink_dodgeball:beachball) )
      1
      (+ (count-once-per-objects preference1:pink:dodgeball:dodgeball) (count preference1:dodgeball) )
      (* (* (- (* (total-time) (count preference1:basketball:red) )
          )
          3
        )
        (count-once-per-objects preference1:golfball:red)
        6
      )
      (count-once-per-objects preference1:red:yellow_cube_block)
    )
  )
)
)(define (game game-id-274) (:domain many-objects-room-v1)
(:setup
  (exists (?e - chair ?k - hexagonal_bin)
    (and
      (game-optional
        (agent_holds ?k)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?u - game_object)
        (then
          (once (adjacent_side ?u ?u ?u) )
          (hold-while (object_orientation ?u ?u) (exists (?a - hexagonal_bin) (not (= (distance ?a ?u)) ) ) )
          (hold-while (in ?u bed) (in_motion ?u) )
        )
      )
    )
    (preference preference2
      (exists (?i - triangular_ramp)
        (then
          (hold-while (in ?i ?i) (object_orientation ?i ?i) )
          (once (and (not (not (opposite bottom_shelf ?i) ) ) (agent_holds ?i) ) )
          (once (and (< 7 5) (in_motion ?i) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (* 12 2 (* 4 )
      1
    )
  )
)
(:scoring
  (* (+ (* (count preference1:pink) 3 (* (= (* (count-once-per-objects preference2:golfball) (count preference2:dodgeball) )
            (count-once preference2:golfball)
          )
          5
        )
        (count preference1:purple)
      )
      (count preference2:pink:beachball)
    )
    2
  )
)
)(define (game game-id-275) (:domain medium-objects-room-v1)
(:setup
  (exists (?p - triangular_ramp)
    (and
      (game-optional
        (and
          (not
            (not
              (exists (?w - doggie_bed)
                (not
                  (in_motion ?p)
                )
              )
            )
          )
          (agent_holds ?p)
          (and
            (equal_x_position ?p ?p)
            (< (distance ?p ?p) 2)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?q - pillow)
      (and
        (preference preference1
          (exists (?y - (either ball golfball))
            (then
              (once (in ?q ?y) )
              (hold (in_motion ?y) )
              (once (not (adjacent agent ?q) ) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?c - hexagonal_bin)
        (then
          (once (in_motion door) )
          (once (in_motion ?c) )
          (once (exists (?p - block) (not (agent_holds ?c) ) ) )
        )
      )
    )
  )
)
(:terminal
  (<= (count-once-per-objects preference2:hexagonal_bin) (+ 3 (count-once-per-objects preference1:golfball) )
  )
)
(:scoring
  18
)
)(define (game game-id-276) (:domain few-objects-room-v1)
(:setup
  (exists (?f - ball)
    (and
      (forall (?x - game_object ?m - game_object ?a - hexagonal_bin)
        (and
          (exists (?t - color)
            (game-conserved
              (and
                (adjacent ?a ?a)
                (not
                  (agent_holds ?a)
                )
              )
            )
          )
        )
      )
      (forall (?t ?a ?s ?m - block ?i - ball)
        (game-conserved
          (not
            (agent_holds ?f)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?p - bridge_block)
        (then
          (once-measure (in_motion ?p) (distance ?p ?p) )
          (once (agent_holds ?p) )
          (once (in ?p ?p) )
        )
      )
    )
    (forall (?h - ball)
      (and
        (preference preference2
          (exists (?i - red_dodgeball ?m - triangular_ramp)
            (then
              (once (and (not (and (in ?m ?h) (not (and (in_motion ?m) (not (in ?m ?m) ) ) ) ) ) (and (not (and (not (> 1 (building_size ?m)) ) (in_motion pillow) ) ) (in ?m ?h) ) ) )
              (once (in_motion ?h) )
              (hold-while (and (agent_holds ?m) (and (not (and (agent_holds ?h) (on ?m ?m) ) ) (not (not (equal_z_position ?m ?m) ) ) ) (>= (distance bed bed) 2) ) (agent_holds ?h) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (count preference2:basketball) (* 3 (+ (> (count-once-per-external-objects preference2:dodgeball) (+ 3 (count-once-per-objects preference2:purple) )
          )
        )
      )
    )
  )
)
(:scoring
  (count preference2:bed)
)
)(define (game game-id-277) (:domain few-objects-room-v1)
(:setup
  (forall (?c - hexagonal_bin)
    (forall (?m - color)
      (game-conserved
        (not
          (in_motion ?c)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?z - game_object ?a - red_dodgeball)
        (then
          (once (adjacent ?a ?a) )
          (hold (touch ?a ?a) )
          (once (agent_holds pink) )
        )
      )
    )
    (preference preference2
      (exists (?b - (either alarm_clock triangle_block basketball) ?z ?d - building ?u - curved_wooden_ramp)
        (then
          (hold (not (and (< 1 (distance desk desk)) (not (agent_holds ?u) ) (not (agent_holds ?u) ) (not (adjacent ?u ?u) ) ) ) )
          (once (not (in_motion ?u) ) )
          (hold-for 4 (exists (?g - game_object ?w - ball) (and (game_start ) (in_motion ?u) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference2:pink) (count preference1:pink) )
)
(:scoring
  4
)
)(define (game game-id-278) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds upright)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?b - hexagonal_bin)
        (then
          (once (not (adjacent_side ?b top_shelf bed ?b) ) )
          (hold (in desk ?b) )
          (once (in ?b ?b) )
          (once (and (and (and (in_motion ?b) (and (in_motion ?b) (not (in_motion ?b) ) ) (not (and (object_orientation ?b agent) (agent_holds ?b) ) ) ) (on ?b ?b) (and (or (agent_holds upright) (and (exists (?a - ball) (adjacent ?b block) ) (and (adjacent ?b ?b) (faces ?b ?b) ) (and (in ?b ?b) (touch blue room_center) ) (and (adjacent ?b ?b) (agent_holds bed) ) ) ) (and (and (in ?b agent) (not (not (touch ?b agent) ) ) ) (agent_holds ?b) ) ) ) (or (< 1 0.5) ) ) )
          (once (not (object_orientation agent ?b) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (count preference1:pyramid_block) 5 )
    4
  )
)
(:scoring
  2
)
)(define (game game-id-279) (:domain few-objects-room-v1)
(:setup
  (exists (?v - hexagonal_bin ?t - hexagonal_bin)
    (game-optional
      (not
        (agent_holds agent)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?a - dodgeball)
        (then
          (once (in_motion ?a) )
          (once (<= (distance agent ?a) 1) )
          (forall-sequence (?d - pyramid_block)
            (then
              (hold (on ?a ?d) )
              (once (not (and (not (and (= 1 8) (in_motion ?d) ) ) (on ?a ?a) ) ) )
              (once (agent_holds ?a) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?o - hexagonal_bin ?e ?j - curved_wooden_ramp)
        (then
          (once (and (in_motion agent) (not (in_motion ?e) ) ) )
          (once (adjacent room_center ?e) )
          (once (not (same_type bed rug) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (= (count-once-per-objects preference2:red) 3 (count-once-per-external-objects preference1:yellow:yellow) )
    10
  )
)
(:scoring
  (- (count-overlapping preference1:dodgeball) )
)
)(define (game game-id-280) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?q - (either credit_card) ?j - desk_shelf)
      (game-conserved
        (object_orientation ?j ?j)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?k - hexagonal_bin)
        (at-end
          (and
            (on ?k ?k)
            (not
              (agent_holds room_center)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 6 (external-forall-maximize (count preference1:top_drawer) ) )
)
(:scoring
  (* 5 8 )
)
)(define (game game-id-281) (:domain medium-objects-room-v1)
(:setup
  (forall (?i - game_object)
    (game-conserved
      (in_motion ?i)
    )
  )
)
(:constraints
  (and
    (forall (?g ?z - red_dodgeball)
      (and
        (preference preference1
          (exists (?n - chair)
            (then
              (hold (or (agent_holds ?z) (not (not (< 1 (distance ?z agent)) ) ) ) )
              (once (exists (?a ?f ?p - hexagonal_bin ?r - (either blue_cube_block tall_cylindrical_block book)) (agent_holds ?r) ) )
              (hold (not (in_motion ?g) ) )
            )
          )
        )
        (preference preference2
          (exists (?y - cube_block)
            (at-end
              (and
                (not
                  (= 2)
                )
                (in_motion ?y)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (count preference2:alarm_clock) (count-same-positions preference2:basketball) )
)
(:scoring
  0.7
)
)(define (game game-id-282) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds pink_dodgeball)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?d - dodgeball ?w - dodgeball ?u - building)
        (then
          (once (not (adjacent ?u ?u) ) )
          (hold (not (and (in_motion ?u) (and (and (agent_holds rug) ) (not (same_color ?u top_shelf) ) ) ) ) )
          (once (and (agent_holds ?u) (touch ?u room_center) ) )
        )
      )
    )
    (preference preference2
      (exists (?i - dodgeball)
        (then
          (once (or (equal_x_position ?i ?i) (on ?i ?i) (above ?i ?i) ) )
          (once (touch ?i ?i) )
          (hold (agent_holds ?i) )
        )
      )
    )
    (preference preference3
      (exists (?y - building)
        (then
          (once (< (distance upright door) 1) )
          (once (adjacent_side ?y pink_dodgeball rug) )
          (once (and (and (exists (?d - (either laptop pillow)) (game_over ) ) (not (in_motion ?y) ) ) (and (not (and (and (agent_holds agent) (not (and (in_motion ?y) (not (in_motion ?y) ) ) ) (not (same_color ?y ?y) ) ) (not (= 2 7 1) ) (in ?y rug) (and (exists (?q - color ?d - ball) (and (in_motion ?y) (not (< (building_size ?y) (distance ?y ?d)) ) (not (and (forall (?h - dodgeball) (not (in_motion ?y) ) ) (not (not (and (in_motion blue) (in ?d ?d) (on ?y ?y) (< 1 1) ) ) ) ) ) (agent_holds ?d) (< (distance ?y ?d) 4) (agent_holds ?y) (and (> (distance ?y room_center) 9) (on ?y room_center) ) (game_start ) (opposite ?d desk) (rug_color_under ?y agent) (not (and (on desk ?d) (in ?y ?d) ) ) (on ?y ?y) ) ) (agent_holds ?y) ) ) ) (agent_holds ?y) ) ) )
        )
      )
    )
  )
)
(:terminal
  (< (count-once-per-objects preference3:dodgeball) (+ 15 (count preference2:yellow_cube_block) )
  )
)
(:scoring
  10
)
)(define (game game-id-283) (:domain few-objects-room-v1)
(:setup
  (forall (?l - dodgeball)
    (exists (?f - (either mug cube_block))
      (game-conserved
        (exists (?c - shelf)
          (and
            (in room_center ?l)
            (in ?l pink)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?f - hexagonal_bin)
        (then
          (once (agent_holds ?f) )
          (once (exists (?b - beachball ?w - desktop) (agent_holds ?w) ) )
          (once (or (in ?f ?f) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ 5 5 5 )
    (count-measure preference1:doggie_bed:yellow)
  )
)
(:scoring
  (+ (count-once-per-objects preference1:red_pyramid_block) (* 3 5 (* (count preference1:hexagonal_bin) (count-total preference1:blue_cube_block:blue_dodgeball) (count-once-per-objects preference1:beachball) (count-once-per-objects preference1:yellow) (count preference1:pink) )
    )
  )
)
)(define (game game-id-284) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (exists (?j - cube_block)
        (forall (?l - dodgeball)
          (forall (?v - hexagonal_bin)
            (exists (?k - doggie_bed)
              (exists (?h - (either book lamp ball) ?m - (either red cd cylindrical_block) ?n - hexagonal_bin)
                (game-conserved
                  (on ?l ?j)
                )
              )
            )
          )
        )
      )
    )
    (and
      (forall (?c - golfball ?l - hexagonal_bin ?v - block)
        (and
          (or
            (forall (?t - chair)
              (game-conserved
                (adjacent ?t ?v)
              )
            )
            (forall (?n - hexagonal_bin ?q - dodgeball)
              (forall (?c - cube_block)
                (and
                  (game-conserved
                    (in_motion bed)
                  )
                )
              )
            )
          )
          (and
            (forall (?e - hexagonal_bin)
              (and
                (or
                  (game-conserved
                    (in_motion ?v)
                  )
                )
                (and
                  (and
                    (game-conserved
                      (and
                        (not
                          (in_motion ?e)
                        )
                        (on agent ?e)
                        (not
                          (agent_holds ?v)
                        )
                      )
                    )
                  )
                )
                (exists (?w ?z - chair)
                  (game-conserved
                    (on bed ?z)
                  )
                )
                (exists (?u ?w - dodgeball)
                  (game-optional
                    (not
                      (< (distance ?v ?u) 8)
                    )
                  )
                )
                (and
                  (and
                    (and
                      (forall (?y - shelf)
                        (and
                          (and
                            (exists (?u - hexagonal_bin)
                              (game-optional
                                (agent_holds ?v)
                              )
                            )
                          )
                          (and
                            (exists (?f - building)
                              (and
                                (game-optional
                                  (< (distance agent ?v) (distance bed bed))
                                )
                              )
                            )
                            (game-optional
                              (and
                                (agent_holds ?y)
                                (in_motion ?y)
                              )
                            )
                          )
                          (and
                            (or
                              (game-optional
                                (adjacent ?y top_drawer)
                              )
                              (game-conserved
                                (and
                                  (not
                                    (< 0.5 (distance ?y agent))
                                  )
                                  (agent_holds ?e)
                                  (on ?e ?e)
                                )
                              )
                              (game-optional
                                (exists (?m - dodgeball ?l - (either pyramid_block alarm_clock) ?k - dodgeball)
                                  (and
                                    (in_motion ?y)
                                    (exists (?n - ball)
                                      (touch ?e ?y)
                                    )
                                    (in ?k ?e)
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                      (and
                        (game-conserved
                          (exists (?w ?i ?l ?g - wall ?t - hexagonal_bin)
                            (and
                              (not
                                (not
                                  (adjacent agent bridge_block)
                                )
                              )
                              (in_motion ?v)
                              (on ?t ?t)
                            )
                          )
                        )
                      )
                    )
                  )
                  (game-conserved
                    (agent_holds ?e)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?g - (either golfball blue_cube_block))
        (then
          (any)
          (hold (and (and (not (in ?g ?g) ) (adjacent ?g ?g) ) (and (game_start ) (< 9 1) ) (and (in_motion ?g) (same_color pink_dodgeball ?g) ) ) )
        )
      )
    )
    (forall (?z - game_object)
      (and
        (preference preference2
          (exists (?i - hexagonal_bin ?f - building)
            (then
              (hold-while (is_setup_object front) (not (not (not (and (toggled_on ?z) (on ?f ?f) ) ) ) ) )
              (hold (object_orientation ?f ?f) )
              (hold (or (on ?f ?f) (exists (?t - hexagonal_bin) (game_start ) ) ) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?t - dodgeball ?s - ball ?d - ball)
        (then
          (hold (agent_holds bed) )
          (once (and (not (exists (?b - hexagonal_bin) (agent_holds ?d) ) ) (agent_holds ?d) ) )
          (hold (= (distance ?d ?d) (distance bed ?d)) )
          (hold-while (agent_holds ?d) (not (in_motion ?d) ) (not (in ?d ?d) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 5 10 )
)
(:scoring
  2
)
)(define (game game-id-285) (:domain few-objects-room-v1)
(:setup
  (forall (?j - hexagonal_bin)
    (and
      (game-conserved
        (in_motion ?j)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?s - dodgeball)
        (then
          (once (and (< 0.5 1) (and (and (not (and (not (adjacent ?s ?s) ) (not (not (in_motion ?s) ) ) ) ) (not (and (and (exists (?d - (either cylindrical_block cube_block) ?j - hexagonal_bin) (not (exists (?i - teddy_bear) (on ?j desk) ) ) ) (not (same_color ?s ?s) ) (same_color ?s ?s) ) (and (exists (?q - hexagonal_bin) (in_motion ?q) ) (and (not (in_motion pink_dodgeball) ) (not (and (in_motion ?s) (is_setup_object ?s) ) ) ) ) ) ) ) (agent_holds block) (in_motion floor) (not (in ?s ?s) ) (in_motion ?s) (not (between ?s west_wall ?s) ) (on ?s top_drawer) ) ) )
          (once-measure (not (not (in pink_dodgeball ?s) ) ) (distance ?s ?s) )
          (once (in_motion ?s) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-once-per-objects preference1:beachball:dodgeball) 10 )
    (>= (- (= (* 5 3 )
        )
      )
      (- (total-score) )
    )
  )
)
(:scoring
  (+ (count preference1:dodgeball:dodgeball) (count preference1:basketball) )
)
)(define (game game-id-286) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?p - drawer ?p - desk_shelf ?d - ball)
      (exists (?b - dodgeball)
        (game-optional
          (and
            (in_motion brown)
            (exists (?w - building ?x - hexagonal_bin ?s - wall)
              (adjacent_side ?b ?d ?b)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o - ball ?g - dodgeball ?n - pyramid_block)
      (and
        (preference preference1
          (exists (?o - hexagonal_bin)
            (at-end
              (and
                (in ?n ?o)
                (not
                  (in ?o ?o)
                )
              )
            )
          )
        )
        (preference preference2
          (then
            (hold (on pillow ?n) )
            (once (in_motion ?n) )
            (once (exists (?x - hexagonal_bin) (not (adjacent ?n ?x) ) ) )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (count-measure preference1:book:dodgeball) )
)
(:scoring
  (count-once-per-external-objects preference2:pink)
)
)(define (game game-id-287) (:domain medium-objects-room-v1)
(:setup
  (forall (?w - hexagonal_bin)
    (game-optional
      (agent_holds ?w)
    )
  )
)
(:constraints
  (and
    (forall (?n - (either pyramid_block golfball) ?h ?v ?r - building ?d - pillow ?e - chair)
      (and
        (preference preference1
          (exists (?d - (either pencil golfball bridge_block))
            (then
              (once (= (distance ?d ?e) (distance ?d ?d)) )
              (once (not (not (same_color ?d ?d) ) ) )
              (once (on ?e ?d) )
            )
          )
        )
        (preference preference2
          (exists (?l - hexagonal_bin)
            (then
              (hold (and (in desk ?e) (agent_holds ?e) ) )
              (once (adjacent ?e ?e) )
              (once (agent_holds ball) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= 6 (count-once-per-objects preference2:yellow) )
)
(:scoring
  (* 10 5 )
)
)(define (game game-id-288) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?j - doggie_bed)
      (game-optional
        (not
          (agent_holds ?j)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?v - pyramid_block)
        (then
          (once (agent_holds ?v) )
          (once (in_motion ?v) )
          (once (in_motion bed) )
        )
      )
    )
    (preference preference2
      (exists (?t - hexagonal_bin ?g - (either pen cellphone dodgeball))
        (then
          (once (agent_holds green_golfball) )
          (once (and (> 1 (distance ?g ?g)) (not (and (object_orientation ?g ?g) (not (faces ?g ?g) ) ) ) ) )
          (once (in_motion ?g) )
        )
      )
    )
    (preference preference3
      (exists (?g - hexagonal_bin)
        (then
          (once (in_motion ?g) )
          (once (and (in_motion ?g) (< 3 1) ) )
          (once (in_motion ?g) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= 6 (count-once-per-objects preference2:blue_dodgeball:hexagonal_bin) )
  )
)
(:scoring
  2
)
)(define (game game-id-289) (:domain few-objects-room-v1)
(:setup
  (exists (?r - hexagonal_bin)
    (and
      (game-optional
        (game_over )
      )
      (and
        (game-conserved
          (and
            (adjacent ?r back)
            (agent_holds ?r)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?r - hexagonal_bin)
        (then
          (hold (not (not (and (in_motion ?r) (not (adjacent_side ?r ?r ?r) ) (in_motion ?r) (not (exists (?l - hexagonal_bin) (faces floor ?l) ) ) ) ) ) )
          (hold (in_motion ?r) )
          (once (< 1 8) )
        )
      )
    )
  )
)
(:terminal
  (= (- (count preference1:green) )
    (count-once-per-objects preference1:book)
  )
)
(:scoring
  (count preference1:book)
)
)(define (game game-id-290) (:domain medium-objects-room-v1)
(:setup
  (exists (?n - shelf)
    (game-conserved
      (adjacent ?n ?n)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?n - blinds ?g - dodgeball)
        (then
          (once (and (in ?g ?g) (exists (?z - hexagonal_bin) (not (and (on ?g ?g) (and (agent_holds ?z) (= 1 1) ) ) ) ) ) )
          (once-measure (open ?g) (distance agent ?g) )
          (once (and (in_motion ?g) (and (not (not (and (not (agent_holds ?g) ) (in ?g ?g) ) ) ) (in ?g ?g) ) (not (same_color ?g agent) ) ) )
        )
      )
    )
    (preference preference2
      (exists (?k - (either cellphone) ?w ?x - building)
        (at-end
          (same_color ?w ?x)
        )
      )
    )
  )
)
(:terminal
  (or
    (not
      (> (+ 2 (* 5 (* (* (* (count preference1:dodgeball) 2 )
                (count preference1:blue)
              )
              (count-measure preference1:beachball)
            )
            4
          )
        )
        (count-once-per-external-objects preference2:top_drawer:red)
      )
    )
  )
)
(:scoring
  (count-once-per-external-objects preference1:pyramid_block)
)
)(define (game game-id-291) (:domain many-objects-room-v1)
(:setup
  (forall (?d ?z - doggie_bed ?w - teddy_bear)
    (forall (?p - wall)
      (game-optional
        (in_motion ?p)
      )
    )
  )
)
(:constraints
  (and
    (forall (?y - (either curved_wooden_ramp floor))
      (and
        (preference preference1
          (exists (?o - (either desktop doggie_bed))
            (then
              (once (and (not (in_motion bed) ) (in_motion ?o) ) )
              (once (not (and (in ?y ?o) (exists (?h - color ?r - hexagonal_bin) (>= (building_size sideways) (distance ?r ?y)) ) (not (and (agent_holds agent) (in ?o ?y) ) ) ) ) )
              (hold (not (and (agent_holds ?y) (in_motion ?y) ) ) )
              (once (agent_holds ?y) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (+ 2 10 )
    (+ (+ (* (- (= (* 2 (= (count preference1:block:dodgeball) (count preference1:basketball) (count preference1:yellow) )
              )
              (count-once-per-objects preference1:dodgeball:cylindrical_block)
            )
          )
          (count preference1:green)
        )
        (= 2 )
        (count preference1:dodgeball:dodgeball)
        (count preference1:rug)
        (external-forall-maximize
          (* (count preference1:dodgeball:blue) (* 5 (count-once-per-objects preference1:dodgeball) (* 2 (count-measure preference1:dodgeball) (total-score) (count preference1:dodgeball) )
              (* (count-once-per-external-objects preference1:basketball) (total-time) )
            )
            100
            (- (count-once-per-objects preference1:green) )
            (* (count-once-per-external-objects preference1:beachball:red) (+ (count preference1:pink_dodgeball) (count-overlapping preference1:cube_block) )
            )
            6
          )
        )
        (count-shortest preference1:pink_dodgeball)
      )
      (count preference1:yellow:golfball)
    )
  )
)
(:scoring
  (external-forall-maximize
    3
  )
)
)(define (game game-id-292) (:domain medium-objects-room-v1)
(:setup
  (exists (?p - dodgeball)
    (exists (?z - hexagonal_bin ?k - dodgeball)
      (and
        (game-conserved
          (and
            (not
              (between bed desk door)
            )
            (and
              (and
                (object_orientation ?p ?p)
                (and
                  (on ?p ?p)
                  (agent_holds ?k)
                )
              )
              (not
                (in_motion ?k)
              )
              (in_motion pink_dodgeball)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?l - color)
        (then
          (once (in ?l ?l) )
          (once (< (distance pink_dodgeball ?l) 1) )
          (hold (and (and (and (is_setup_object desk) (equal_z_position desk ?l) ) (not (not (agent_holds ?l) ) ) ) (and (on rug ?l) (and (not (in bed ?l) ) ) ) ) )
        )
      )
    )
    (forall (?j - doggie_bed ?l - cube_block ?o - doggie_bed)
      (and
        (preference preference2
          (exists (?z ?n - dodgeball ?y - game_object ?e - ball)
            (then
              (hold (agent_crouches ) )
              (once (and (agent_holds ?o) (and (and (forall (?s - dodgeball) (rug_color_under ?e ?e) ) (agent_holds ?o) ) (not (agent_holds ?o) ) ) ) )
              (once (in ?o ?o) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (not
      (or
        (> (count preference2:wall:dodgeball:golfball) (external-forall-maximize (* (count preference1:doggie_bed) (* (* 5 (count preference2:beachball) )
                (external-forall-minimize
                  (count preference2:golfball)
                )
              )
            )
          )
        )
        (or
          (or
            (or
              (>= (+ (or 8 (* (= (count preference2:red) 3 )
                      (count-once-per-objects preference2:white)
                      5
                    )
                  )
                  9
                )
                (* (count-overlapping preference1:beachball:pink) 4 )
              )
              (>= (* (count preference1:dodgeball) (* 3 10 (* 7 (count-once-per-objects preference1:pyramid_block) )
                    (count preference1:beachball)
                    (count preference1:dodgeball)
                    (count preference2:dodgeball)
                    3
                    (count-total preference1:tall_cylindrical_block)
                    (count preference1:block)
                  )
                )
                (count-overlapping preference1:basketball)
              )
              (>= (total-score) 4 )
            )
            (>= 5 (count preference1:alarm_clock) )
          )
          (and
            (>= 25 (* 10 8 )
            )
          )
        )
      )
    )
    (< 2 2 )
  )
)
(:scoring
  1
)
)(define (game game-id-293) (:domain medium-objects-room-v1)
(:setup
  (exists (?r - curved_wooden_ramp)
    (exists (?b - book)
      (exists (?e - hexagonal_bin)
        (forall (?i - teddy_bear ?n - hexagonal_bin)
          (game-optional
            (in_motion ?n)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?s - dodgeball)
      (and
        (preference preference1
          (exists (?c - curved_wooden_ramp)
            (then
              (hold (not (not (in desk agent) ) ) )
              (once (in ?s ?c) )
              (hold (in ?s ?s) )
            )
          )
        )
        (preference preference2
          (exists (?u - game_object ?z - ball)
            (then
              (hold-while (agent_holds ?s) (same_object ?z front) )
              (once (and (not (and (not (in_motion agent) ) (agent_holds desk) ) ) (and (agent_holds ?s) (or (object_orientation ?s ?s) (and (not (in ?z ?z) ) (in_motion ?s) (agent_holds ?z) ) ) (not (and (and (agent_holds agent) (and (not (in_motion ?s) ) (in_motion ?s) ) ) (agent_holds ?s) ) ) ) ) )
              (hold-while (in_motion back) (on desk ?s) (>= 0.5 (distance bed ?z)) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-measure preference1:yellow:pink:green) (total-time) )
)
(:scoring
  (count-once-per-objects preference1:blue_dodgeball)
)
)(define (game game-id-294) (:domain many-objects-room-v1)
(:setup
  (exists (?i - teddy_bear)
    (game-conserved
      (and
        (or
          (in_motion agent)
          (and
            (agent_holds ?i)
            (and
              (not
                (and
                  (adjacent ?i ?i)
                  (and
                    (and
                      (in_motion ?i)
                      (not
                        (and
                          (not
                            (not
                              (and
                                (and
                                  (and
                                    (not
                                      (between ?i ?i ?i)
                                    )
                                    (and
                                      (in ?i room_center)
                                      (agent_holds ?i)
                                      (in_motion ?i)
                                    )
                                  )
                                  (in ?i ?i)
                                )
                              )
                            )
                          )
                          (and
                            (and
                              (on ?i ?i)
                              (< (distance_side ?i ?i green_golfball) (distance_side ?i ?i ?i))
                              (< (distance ?i ball) 7)
                            )
                            (or
                              (rug_color_under room_center ?i)
                              (not
                                (in_motion ?i)
                              )
                            )
                          )
                          (adjacent ?i ?i)
                        )
                      )
                    )
                    (in_motion ?i)
                  )
                )
              )
              (exists (?n - cube_block)
                (and
                  (is_setup_object ?n)
                  (not
                    (not
                      (same_type ?i ?n)
                    )
                  )
                )
              )
              (object_orientation ?i ?i)
              (agent_holds ?i)
            )
          )
        )
        (not
          (on ?i ?i)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?f - (either hexagonal_bin))
      (and
        (preference preference1
          (then
            (hold (not (in_motion ?f) ) )
            (once (not (not (agent_holds ?f) ) ) )
            (once (in_motion ?f) )
          )
        )
        (preference preference2
          (exists (?k - triangular_ramp ?a - chair)
            (at-end
              (exists (?d - hexagonal_bin)
                (in_motion front)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference1:golfball) 8 )
)
(:scoring
  (count-once preference2:dodgeball:dodgeball)
)
)(define (game game-id-295) (:domain medium-objects-room-v1)
(:setup
  (forall (?p - pillow)
    (exists (?g - doggie_bed)
      (game-optional
        (agent_holds ?g)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?r ?i - building ?q - hexagonal_bin)
        (then
          (once (= (distance ?q bed) 1) )
          (once (not (agent_holds bed) ) )
          (once (< 7 1) )
        )
      )
    )
    (preference preference2
      (exists (?p ?k - hexagonal_bin)
        (at-end
          (not
            (< (distance agent desk) (distance room_center ?k))
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference2:doggie_bed) 2 )
)
(:scoring
  (external-forall-minimize
    10
  )
)
)(define (game game-id-296) (:domain few-objects-room-v1)
(:setup
  (forall (?e - ball)
    (game-optional
      (equal_x_position ?e ?e)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?n - hexagonal_bin ?s - wall ?g - ball)
        (at-end
          (is_setup_object upside_down)
        )
      )
    )
    (preference preference2
      (exists (?r - hexagonal_bin)
        (then
          (once (touch ?r ?r) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1) (external-forall-minimize 4 ) )
)
(:scoring
  (* (+ 8 (count-once-per-objects preference2:basketball) )
    (count preference2:dodgeball:hexagonal_bin)
  )
)
)(define (game game-id-297) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (game-conserved
        (in_motion bed)
      )
      (exists (?l - doggie_bed)
        (forall (?u - golfball)
          (game-conserved
            (same_type ?l ?l)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?e - dodgeball)
      (and
        (preference preference1
          (exists (?o - cube_block)
            (then
              (once (and (= 9 8) (and (object_orientation ?o ?e) (game_over ) ) ) )
              (once (same_color ?e ?e) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference1:pink_dodgeball) (count preference1:blue_pyramid_block) )
)
(:scoring
  (* (and 4 ) (count preference1:yellow) (count-once-per-objects preference1:green) 10 )
)
)(define (game game-id-298) (:domain medium-objects-room-v1)
(:setup
  (exists (?s - (either yellow_cube_block book))
    (exists (?z - color ?f - (either hexagonal_bin curved_wooden_ramp))
      (game-optional
        (touch bed ?f)
      )
    )
  )
)
(:constraints
  (and
    (forall (?s - drawer)
      (and
        (preference preference1
          (exists (?z - (either laptop hexagonal_bin) ?a - curved_wooden_ramp)
            (then
              (once (not (agent_holds ?a) ) )
              (hold (and (not (and (not (not (and (and (on ?a pink) (and (in_motion ?a) (in drawer ?a) ) (not (in_motion ?a) ) ) (in_motion ?s) ) ) ) (and (= (distance ?a ?a) 1) (not (not (and (> 1 1) (in_motion room_center) (and (not (and (forall (?l - doggie_bed) (and (in_motion ?a) (touch ?s ?s) ) ) (and (in_motion ?s) (above ?s ?s) (touch ?a ?a) ) (agent_holds ?s) ) ) (and (open ?s) (same_color ?a ?s) ) ) (< 1 1) ) ) ) ) (and (game_start ) (agent_holds ?a) ) ) ) (and (and (in_motion ?a) (open ?s) ) (and (< 1 6) (adjacent ?s ?a) (not (adjacent ?s ?s) ) (between rug ?s rug) ) (same_color ?a agent) ) (object_orientation rug ?a) ) )
              (once (above ?s ?s) )
            )
          )
        )
        (preference preference2
          (exists (?e - cube_block)
            (then
              (once (agent_holds desk) )
              (hold (and (and (on rug ?s) (not (adjacent ?e ?s) ) (and (in_motion ?s) (in ?s desk) ) (in_motion agent) ) (and (exists (?o - (either pyramid_block wall triangle_block)) (and (and (adjacent ?s ?s) (agent_holds ?o) (on ?s ?o) ) (and (touch bed ?e) (in ?o ?o) ) ) ) (not (and (rug_color_under ?s ?e) (not (and (agent_holds ?e) (exists (?c - curved_wooden_ramp) (adjacent ?s ?c) ) (rug_color_under ball ?e) ) ) ) ) ) (and (< 1 8) (in ?e pink_dodgeball) ) (not (not (in_motion ?s) ) ) (in_motion ?e) (not (and (in_motion ?e) (not (not (not (< (distance ?e ?e) (distance ?e ?e)) ) ) ) ) ) ) )
              (hold (in ?e ?e) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?e - ball ?n - cube_block)
        (then
          (hold-while (broken ?n) (agent_holds ?n) (rug_color_under ?n ?n) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) 4 )
)
(:scoring
  (* (count-once-per-objects preference3:book) (count-once preference3:beachball) (count-unique-positions preference1:golfball) )
)
)(define (game game-id-299) (:domain medium-objects-room-v1)
(:setup
  (forall (?q - dodgeball)
    (and
      (game-optional
        (not
          (rug_color_under ?q ?q)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?i - (either rug cd) ?a - ball ?q - cube_block)
        (then
          (once (and (same_type ?q ?q) (agent_holds ?q) ) )
          (once (agent_holds ?q) )
          (once (on ?q room_center) )
        )
      )
    )
  )
)
(:terminal
  (>= 1 (count-overlapping preference1:beachball) )
)
(:scoring
  (count-once preference1:book)
)
)(define (game game-id-300) (:domain medium-objects-room-v1)
(:setup
  (exists (?r - (either golfball pen game_object) ?b - red_dodgeball)
    (and
      (and
        (forall (?m - block ?i - (either golfball pyramid_block) ?k - hexagonal_bin)
          (game-conserved
            (touch ?b ?k)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - hexagonal_bin)
      (and
        (preference preference1
          (exists (?l - blue_cube_block ?d - golfball ?n - dodgeball)
            (at-end
              (and
                (adjacent ?h ?h)
                (in_motion desk)
                (and
                  (agent_holds ?n)
                  (not
                    (toggled_on ?n)
                  )
                )
                (in_motion ?h)
              )
            )
          )
        )
        (preference preference2
          (exists (?m - color)
            (then
              (once (not (not (on agent ?m) ) ) )
              (once (on bed ?m) )
              (hold-while (and (on desk ?m) (not (adjacent ?m ?h) ) ) (on ?h ?h) (in_motion ?h) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:blue_pyramid_block) (external-forall-maximize (- (- (count preference2:cube_block:dodgeball) )
      )
    )
  )
)
(:scoring
  (external-forall-maximize
    (- (count-once-per-objects preference1:pink) )
  )
)
)(define (game game-id-301) (:domain medium-objects-room-v1)
(:setup
  (forall (?v - block)
    (exists (?u - (either side_table dodgeball yellow_cube_block dodgeball))
      (game-conserved
        (and
          (in_motion desk)
          (not
            (in ?v green)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?v - (either doggie_bed book golfball beachball laptop book pyramid_block) ?q - shelf)
      (and
        (preference preference1
          (exists (?z ?t - dodgeball)
            (then
              (hold-while (adjacent_side ?z ?t ?t) (on ?t ?q) )
              (once (on agent floor) )
              (once (< 2 (distance ?q ?t)) )
            )
          )
        )
        (preference preference2
          (exists (?e - hexagonal_bin ?n - block)
            (then
              (once (on ?q ?n) )
              (hold (broken door) )
              (once (in_motion ?q) )
            )
          )
        )
        (preference preference3
          (then
            (once (< 3 1) )
            (hold-for 10 (same_color ?q ?q) )
            (hold (and (agent_holds ?q) (and (not (not (agent_holds ?q) ) ) (and (agent_holds block) (adjacent desk ?q) ) ) ) )
          )
        )
      )
    )
  )
)
(:terminal
  (> (count-overlapping preference2:beachball) 6 )
)
(:scoring
  10
)
)(define (game game-id-302) (:domain many-objects-room-v1)
(:setup
  (exists (?r - triangular_ramp ?s - hexagonal_bin ?b - dodgeball ?m - dodgeball)
    (and
      (exists (?s ?l ?q - hexagonal_bin)
        (game-conserved
          (not
            (agent_holds ?s)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?l - game_object)
        (then
          (once (touch ?l ?l) )
          (once (on rug upright) )
          (once (agent_holds ?l) )
        )
      )
    )
  )
)
(:terminal
  (>= 9 (* 20 (count-shortest preference1:basketball) )
  )
)
(:scoring
  10
)
)(define (game game-id-303) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (in_motion desk)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?c - (either key_chain desktop laptop pink bridge_block))
        (then
          (once (and (< (distance ?c ?c) (distance ?c ?c)) (same_type ?c ?c) (and (on ?c sideways) (not (in upright desk) ) ) (same_type ?c ?c) ) )
          (hold (agent_holds ?c) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference1:golfball) (+ (count-once-per-objects preference1:yellow) (- (* (count preference1:pink) (count preference1:hexagonal_bin) (and 18 ) )
      )
    )
  )
)
(:scoring
  (count-overlapping preference1:basketball)
)
)(define (game game-id-304) (:domain many-objects-room-v1)
(:setup
  (exists (?o - block)
    (forall (?a - triangular_ramp)
      (or
        (game-optional
          (not
            (< 1 (distance ?o desk))
          )
        )
        (exists (?x - doggie_bed)
          (exists (?p - ball)
            (and
              (game-optional
                (agent_holds ?p)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?o - hexagonal_bin)
        (then
          (once (is_setup_object ?o) )
          (once (adjacent ?o ?o) )
          (once (and (touch room_center ?o) (in ?o ?o) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (> (total-score) 10 )
  )
)
(:scoring
  (count-overlapping preference1:beachball:pink_dodgeball)
)
)(define (game game-id-305) (:domain many-objects-room-v1)
(:setup
  (exists (?p - ball)
    (game-optional
      (and
        (on rug bed)
        (and
          (not
            (not
              (exists (?o - ball)
                (and
                  (equal_z_position ?o agent)
                  (in_motion agent)
                )
              )
            )
          )
          (< (distance ?p ?p) 8)
          (not
            (and
              (adjacent ?p ?p)
              (not
                (and
                  (in_motion ?p)
                  (agent_holds ?p)
                )
              )
            )
          )
          (and
            (not
              (and
                (and
                  (on ?p ?p)
                  (agent_holds ?p)
                )
                (on ?p ?p)
              )
            )
            (not
              (< 1 (distance ?p ?p))
            )
            (adjacent ?p ?p)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?f - dodgeball)
      (and
        (preference preference1
          (exists (?a ?c ?o - (either cube_block alarm_clock))
            (at-end
              (not
                (not
                  (and
                    (not
                      (agent_holds ?c)
                    )
                    (touch ?o ?f)
                    (and
                      (on ?f front)
                      (in ?c rug)
                    )
                  )
                )
              )
            )
          )
        )
        (preference preference2
          (exists (?t - chair)
            (then
              (once (on ?t ?t) )
              (hold-while (rug_color_under ?f ?f) (not (on ?f ?t) ) (broken ?t) )
              (hold (on ?t ?t) )
            )
          )
        )
        (preference preference3
          (exists (?h ?r ?m ?q ?n ?l - yellow_pyramid_block)
            (then
              (once (and (and (and (exists (?w - (either pyramid_block teddy_bear cellphone hexagonal_bin cube_block) ?k - wall) (adjacent_side upright door ?m) ) (and (and (agent_holds agent) (not (is_setup_object ?f) ) ) (not (not (in_motion ?m) ) ) ) (and (and (and (agent_holds ?m) (and (touch ?n ?q) (and (agent_holds rug) (agent_holds agent) ) (rug_color_under bed desk) ) ) (same_color ?n ?h) ) (agent_holds ?r) (agent_holds ?n) ) ) ) (in_motion agent) ) )
              (once (not (and (>= 6 (distance ?r ?n)) ) ) )
              (forall-sequence (?o ?a - (either dodgeball cube_block yellow) ?c - cube_block ?v - shelf)
                (then
                  (once (on ?m ?l) )
                  (once (on agent ?m) )
                  (once (not (and (equal_z_position ?f ?l) (toggled_on ?h) (open blinds) (same_type ?r ?m) (< 9 6) (not (on ?q ?q) ) ) ) )
                  (hold (not (in ?m ?n) ) )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (+ 5 3 )
      (count-measure preference2:dodgeball:alarm_clock:pink_dodgeball)
    )
    (>= (* (* (count preference1:bed) (count-once-per-objects preference2:basketball) )
        (count preference1:pink:yellow)
        (* (count-once-per-external-objects preference3:basketball) (count-once-per-objects preference1:beachball) )
        (+ (+ 5 5 (* (+ (count-once-per-objects preference3) (count preference1:bed) )
              (+ (+ (total-time) (- (count preference1:cylindrical_block) )
                  3
                  (count-once preference3:blue_cube_block:beachball)
                )
                (count-once-per-objects preference1:dodgeball:hexagonal_bin)
              )
            )
          )
          (* (count-once preference1:side_table) (count preference2:orange:dodgeball) )
        )
        3
        (* (+ (count-once-per-objects preference1:bed) (count-once-per-objects preference2:purple) )
        )
        (* (count-once-per-objects preference2:red_pyramid_block:dodgeball) 5 )
      )
      (external-forall-maximize
        (* (- (- (count-once preference3:golfball) )
          )
          (count-measure preference3:green)
        )
      )
    )
    (> (+ 5 (+ 3 (count-once-per-objects preference2:golfball) (* (count preference2:hexagonal_bin) (count preference3:hexagonal_bin:dodgeball) (* (count preference3:pink_dodgeball) (count-once-per-objects preference3:basketball) )
            (count-once preference2:pink:doggie_bed)
          )
          (* (count-overlapping preference1:pink) (count preference1:yellow) )
          1
          30
        )
      )
      (- 50 )
    )
  )
)
(:scoring
  (count-once-per-objects preference2:green:pink:dodgeball)
)
)(define (game game-id-306) (:domain many-objects-room-v1)
(:setup
  (exists (?c - doggie_bed ?a - hexagonal_bin ?q - curved_wooden_ramp)
    (exists (?f - (either tall_cylindrical_block alarm_clock))
      (exists (?x - cube_block ?z - rug)
        (and
          (and
            (exists (?g - hexagonal_bin)
              (exists (?u - block)
                (exists (?t - curved_wooden_ramp ?r ?l ?n - game_object)
                  (and
                    (forall (?m - (either pyramid_block golfball bridge_block) ?y - hexagonal_bin)
                      (forall (?v - ball)
                        (exists (?s - (either cellphone) ?e - block ?p - block)
                          (and
                            (game-conserved
                              (in_motion ?n)
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?h - game_object)
        (then
          (once (and (not (in_motion ?h) ) (< (distance ?h ?h) 2) ) )
          (once (and (and (agent_holds ?h) (adjacent_side ?h ?h ?h) ) (on ?h room_center) ) )
          (once (forall (?r - game_object ?m - block) (agent_holds ?h) ) )
          (hold (on ?h agent) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= 15 (* (* (- 2 )
          1
        )
        (* (* 40 (* (+ (>= (* 2 2 (count preference1:dodgeball:dodgeball) )
                  (* (* (* (+ (count preference1:cylindrical_block:golfball) (+ 4 (count preference1:orange) )
                        )
                        7
                      )
                      5
                      (* (* 10 )
                        10
                        4
                      )
                      (count preference1:golfball)
                    )
                    3
                  )
                )
                10
              )
              (* (* (count preference1:dodgeball) (count-overlapping preference1:doggie_bed) 10 10 )
                (* (* (count preference1:red) 5 )
                  (count preference1:orange)
                )
              )
            )
          )
          (- 2 )
          (count-once-per-objects preference1:bed)
        )
      )
    )
  )
)
(:scoring
  (not
    (* (count-once-per-objects preference1:hexagonal_bin:beachball) (+ (count-once-per-objects preference1:book) (* (count preference1:blue_pyramid_block) (count preference1:blue_dodgeball) )
      )
    )
  )
)
)(define (game game-id-307) (:domain few-objects-room-v1)
(:setup
  (forall (?q - red_dodgeball)
    (and
      (and
        (game-conserved
          (and
            (on ?q ?q)
            (not
              (< (distance ?q ?q) (building_size ?q))
            )
          )
        )
        (forall (?t - dodgeball)
          (game-optional
            (and
              (not
                (on ?t ?t)
              )
              (< (distance front room_center) 1)
            )
          )
        )
      )
      (game-conserved
        (same_type ?q ?q)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?i - ball)
        (at-end
          (not
            (not
              (adjacent_side ?i bed ?i)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 3 6 )
  )
)
(:scoring
  (count-once-per-objects preference1:blue_dodgeball:basketball)
)
)(define (game game-id-308) (:domain many-objects-room-v1)
(:setup
  (forall (?k - block ?c - block ?o - cube_block)
    (or
      (and
        (forall (?l - cube_block ?q - red_dodgeball)
          (exists (?b - color ?c - doggie_bed)
            (forall (?b - game_object ?k - cube_block)
              (and
                (exists (?w - hexagonal_bin)
                  (game-conserved
                    (in_motion ?o)
                  )
                )
              )
            )
          )
        )
      )
      (exists (?p - (either cellphone cube_block))
        (and
          (and
            (and
              (and
                (exists (?k - hexagonal_bin)
                  (game-conserved
                    (not
                      (agent_holds agent)
                    )
                  )
                )
              )
              (forall (?a - chair ?s - (either golfball golfball))
                (forall (?n - (either pink beachball))
                  (game-conserved
                    (< (distance ?n ?s) (distance ?s ?p))
                  )
                )
              )
              (exists (?b - dodgeball)
                (and
                  (exists (?y - hexagonal_bin)
                    (game-optional
                      (and
                        (agent_holds desk)
                        (not
                          (broken ?o)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
          (game-conserved
            (on agent ?p)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?d - (either main_light_switch pencil floor cellphone) ?h - hexagonal_bin)
        (then
          (hold (and (in_motion ?h) (not (agent_holds ?h) ) (faces ?h ?h) ) )
          (hold (agent_holds ?h) )
          (hold (agent_holds ?h) )
        )
      )
    )
    (preference preference2
      (exists (?v - drawer ?t - block)
        (then
          (hold (on desk ?t) )
          (once (in_motion floor) )
          (once (in_motion ?t) )
        )
      )
    )
  )
)
(:terminal
  (> 3 (* 5 (count-once-per-objects preference2:basketball) )
  )
)
(:scoring
  (count-same-positions preference1:basketball:cylindrical_block)
)
)(define (game game-id-309) (:domain few-objects-room-v1)
(:setup
  (exists (?b - (either golfball))
    (exists (?n - drawer ?k - (either cd cylindrical_block))
      (and
        (game-optional
          (and
            (on ?b front)
            (not
              (not
                (and
                  (and
                    (not
                      (and
                        (agent_holds ?k)
                        (<= (distance_side ?b ?b ?b) 10)
                        (on ?k ?b)
                      )
                    )
                    (touch ?k ?b)
                  )
                  (>= (distance ?b ?k) (distance ?k ?k))
                )
              )
            )
          )
        )
        (game-optional
          (and
            (agent_holds ?k)
            (agent_holds desk)
            (on ?b ?b)
            (rug_color_under ?b ?k)
          )
        )
        (and
          (game-optional
            (touch ?b ?k)
          )
          (game-conserved
            (and
              (and
                (not
                  (and
                    (on ?k tan)
                    (not
                      (on ?k ?b)
                    )
                  )
                )
                (on ?k ?b)
              )
              (agent_holds ?k)
            )
          )
          (exists (?h - (either desktop golfball cylindrical_block))
            (and
              (game-optional
                (in ?k ?b)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?r - color)
        (at-end
          (in ?r ?r)
        )
      )
    )
    (forall (?n - (either cd doggie_bed))
      (and
        (preference preference2
          (exists (?q - hexagonal_bin ?x - (either book cube_block))
            (then
              (once (not (agent_holds ?x) ) )
              (hold-while (touch ?n ?n) (on ?n ?x) (not (and (forall (?b - hexagonal_bin ?z - hexagonal_bin) (and (forall (?q ?k ?l ?c ?f ?y ?i ?r ?h ?d - shelf) (not (touch ?k ?n) ) ) (not (> (distance ?x ?x) 0.5) ) ) ) (adjacent ?n bed) ) ) (or (and (agent_holds ?n) ) (on ?n ?n) ) )
              (hold-to-end (on ?n ?x) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 1 50 )
  )
)
(:scoring
  (* (+ (count preference2:tan) (count preference1:wall) )
    (count preference2:doggie_bed)
  )
)
)(define (game game-id-310) (:domain few-objects-room-v1)
(:setup
  (exists (?o - dodgeball)
    (forall (?s - dodgeball)
      (and
        (exists (?b - teddy_bear)
          (game-conserved
            (not
              (on ?s ?s)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?j - hexagonal_bin)
        (then
          (once (not (on ?j ?j) ) )
          (once (adjacent_side ?j ?j ?j) )
          (once (and (and (not (< (x_position ?j) (x_position agent)) ) (and (in_motion ?j) (and (in_motion ?j) (equal_x_position ?j ?j) (in_motion ?j) ) ) (rug_color_under agent ?j) ) (agent_holds ?j) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:hexagonal_bin) 1 )
)
(:scoring
  (+ (count preference1:golfball:hexagonal_bin) (* 0 (+ (count preference1:beachball:dodgeball) (count-increasing-measure preference1:yellow:basketball) )
    )
  )
)
)(define (game game-id-311) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?x - game_object)
      (game-conserved
        (agent_holds ?x)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?o - (either cube_block cellphone dodgeball yellow_cube_block))
        (then
          (forall-sequence (?b - doggie_bed)
            (then
              (hold (touch ?b ?o) )
              (once (on ?o ?o) )
              (hold-while (not (in_motion ?b) ) (not (in ?b ?o) ) (exists (?p - teddy_bear) (not (on ?p ?p) ) ) )
            )
          )
          (once (adjacent_side ?o ?o agent) )
          (once (in_motion ?o) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:dodgeball) (count-once-per-objects preference1:basketball:yellow:blue_dodgeball) )
)
(:scoring
  (count preference1:yellow:pink:dodgeball)
)
)(define (game game-id-312) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?q - hexagonal_bin ?e - ball)
      (game-conserved
        (on ?e ?e)
      )
    )
    (and
      (forall (?x - ball ?h - dodgeball)
        (game-conserved
          (in_motion ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?c - dodgeball ?z - (either dodgeball tall_cylindrical_block beachball))
        (then
          (hold-while (exists (?c - flat_block) (touch ?z ?c) ) (not (not (in_motion ?z) ) ) )
          (once (not (on ?z ?z) ) )
          (once (not (and (not (not (on ?z ?z) ) ) (not (= (distance ?z ?z) 7) ) (not (exists (?w - curved_wooden_ramp ?s - cube_block) (or (not (on ?z ?z) ) (in agent upright) ) ) ) (in_motion ?z) (agent_holds ?z) (and (and (touch ?z ?z) (opposite ?z ?z) ) (forall (?j - hexagonal_bin) (< (building_size ?j) (distance ?j ?z)) ) ) (not (and (not (not (adjacent bed front) ) ) (in ?z ?z) ) ) (on ?z ?z) (< (distance ?z ?z) 7) (not (agent_holds ?z) ) ) ) )
        )
      )
    )
    (preference preference2
      (exists (?o - hexagonal_bin)
        (then
          (hold (not (agent_holds ?o) ) )
          (once (< (distance ?o ?o) 1) )
          (hold-while (and (not (not (object_orientation ?o pillow) ) ) (not (object_orientation desk ?o) ) ) (and (and (adjacent ?o rug) (not (and (agent_holds ?o) (and (not (not (agent_holds ?o) ) ) (on ?o ?o) ) ) ) ) (agent_holds ?o) (not (rug_color_under ?o ?o) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-measure preference2:tan) (* (count-measure preference1:dodgeball:triangle_block) 1 (total-score) (count-once preference1:green) 1 (count preference1) )
  )
)
(:scoring
  (or
    (count-once preference1:yellow:purple)
  )
)
)(define (game game-id-313) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?e - doggie_bed)
      (game-conserved
        (not
          (is_setup_object room_center)
        )
      )
    )
    (and
      (and
        (forall (?l - chair)
          (forall (?t - curved_wooden_ramp)
            (forall (?a - hexagonal_bin)
              (exists (?y - dodgeball)
                (exists (?e - sliding_door ?n - hexagonal_bin ?m - drawer)
                  (exists (?d - (either cylindrical_block beachball))
                    (and
                      (game-conserved
                        (> 4 (distance ?l ?y))
                      )
                      (and
                        (exists (?x - (either pyramid_block dodgeball))
                          (exists (?r - (either dodgeball flat_block) ?i - cube_block)
                            (game-optional
                              (and
                                (and
                                  (on agent ?x)
                                  (on ?d ?x)
                                  (agent_holds ?m)
                                  (in ?t ?x)
                                )
                                (not
                                  (in_motion ?l)
                                )
                              )
                            )
                          )
                        )
                        (game-conserved
                          (not
                            (or
                              (not
                                (not
                                  (in ?l ?l)
                                )
                              )
                            )
                          )
                        )
                        (game-conserved
                          (exists (?r ?f - teddy_bear)
                            (and
                              (and
                                (in_motion ?a)
                                (adjacent bed ?f)
                              )
                              (not
                                (and
                                  (agent_holds ?m)
                                  (in_motion ?y)
                                )
                              )
                              (exists (?v - dodgeball)
                                (in_motion ?r)
                              )
                              (touch ?y ?r)
                            )
                          )
                        )
                      )
                      (exists (?j - hexagonal_bin ?e - dodgeball)
                        (game-conserved
                          (and
                            (and
                              (agent_holds ?m)
                              (not
                                (in ?l ?d)
                              )
                            )
                            (same_object ?l rug)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
        (exists (?a - block)
          (game-conserved
            (not
              (or
                (agent_holds ?a)
                (and
                  (and
                    (in agent ?a)
                    (in_motion ?a)
                  )
                  (not
                    (agent_holds ?a)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?k - ball)
      (and
        (preference preference1
          (exists (?e - chair)
            (then
              (hold-to-end (not (agent_holds ?k) ) )
              (once-measure (touch ?k ?e) (distance agent ?e) )
              (once (above ?k floor) )
            )
          )
        )
        (preference preference2
          (exists (?q - hexagonal_bin)
            (then
              (once (< 6 1) )
              (hold (adjacent ?q ?q) )
              (hold (same_object sideways ?k) )
            )
          )
        )
      )
    )
    (forall (?s - teddy_bear ?x - hexagonal_bin)
      (and
        (preference preference3
          (then
            (once (< (distance_side agent ?x ?x) (distance_side desk ?x ?x)) )
            (once (and (agent_holds ?x) (or (or (and (agent_holds ?x) (adjacent ?x ?x) (not (same_type ?x ?x) ) (in ?x ?x) ) (in ?x front) (exists (?w - doggie_bed) (same_type ?x desk) ) ) (rug_color_under ?x ?x) ) ) )
          )
        )
      )
    )
  )
)
(:terminal
  (> 8 3 )
)
(:scoring
  (* (* (count-total preference1:basketball:beachball) 2 )
    5
    5
  )
)
)(define (game game-id-314) (:domain many-objects-room-v1)
(:setup
  (exists (?m - ball ?n - hexagonal_bin)
    (forall (?g - hexagonal_bin ?l - wall)
      (or
        (and
          (forall (?p - yellow_cube_block)
            (game-optional
              (in_motion ?n)
            )
          )
          (game-conserved
            (in ?n ?n)
          )
        )
        (exists (?y - block ?g - (either dodgeball alarm_clock credit_card credit_card) ?b - building ?y - hexagonal_bin)
          (exists (?e - dodgeball ?r - dodgeball)
            (forall (?h - wall ?a - (either laptop))
              (and
                (forall (?w - game_object)
                  (game-optional
                    (and
                      (and
                        (not
                          (and
                            (and
                              (exists (?e - hexagonal_bin ?b - hexagonal_bin)
                                (and
                                  (between ?y ?l ?r)
                                  (touch agent ?a)
                                )
                              )
                              (touch ?w ?w)
                            )
                            (on ?n ?l)
                          )
                        )
                        (exists (?m - hexagonal_bin)
                          (and
                            (not
                              (on side_table ?w)
                            )
                            (in_motion desk)
                            (on ?y ?a)
                          )
                        )
                      )
                      (agent_holds right)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?y - wall)
        (then
          (any)
          (once (agent_holds ?y) )
          (once (not (not (and (and (in_motion ?y) (adjacent_side ?y ?y ?y) ) (in_motion ?y) (opposite ?y ?y) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (not
      (>= 4 3 )
    )
    (and
      (and
        (>= 5 2 )
        (<= (* 1 1 )
          3
        )
        (not
          (>= (external-forall-minimize (count-once-per-external-objects preference1:green) ) (+ (* 3 4 (/ (count-longest preference1:red) 30 ) (* 5 (* 4 (- (external-forall-maximize (count preference1:basketball) ) )
                  )
                )
                50
                (count preference1:dodgeball:red)
              )
              (* (count-increasing-measure preference1:red) (count-once-per-objects preference1:alarm_clock) )
              (count-once-per-objects preference1:hexagonal_bin)
              6
              100
              (* (* (count preference1:hexagonal_bin:hexagonal_bin) 100 )
                (count-once-per-objects preference1:pink)
              )
            )
          )
        )
      )
    )
  )
)
(:scoring
  (* 3 (* 10 (* (+ (count preference1:dodgeball:golfball) (count preference1:dodgeball:dodgeball) )
        (+ 1 (* (count-longest preference1:pink) (count preference1:pink) (count preference1:pink:pyramid_block) (count-once-per-objects preference1:blue_dodgeball) )
        )
      )
    )
    (* 6 (* (count-shortest preference1:dodgeball) (* (* 10 (* (count-longest preference1:basketball) 20 )
          )
          180
        )
        3
        5
        (- (count-once-per-objects preference1) )
        (count preference1:tan:dodgeball)
      )
    )
    (total-score)
    (* (count preference1:green) (count-same-positions preference1:yellow:golfball) )
    (count-once-per-objects preference1:dodgeball)
  )
)
)(define (game game-id-315) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?e - curved_wooden_ramp)
      (and
        (forall (?c - dodgeball)
          (not
            (game-optional
              (and
                (in_motion ?c)
                (and
                  (not
                    (in_motion ?e)
                  )
                  (on ?c ?e)
                  (on ?e ?e)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?x - dodgeball ?z - doggie_bed)
        (then
          (once (above ?z ?z) )
          (once-measure (and (not (agent_holds ?z) ) ) (distance ?z ?z) )
        )
      )
    )
  )
)
(:terminal
  (not
    (< (count-once-per-objects preference1:green:golfball) (count preference1:orange) )
  )
)
(:scoring
  (* (count-once-per-external-objects preference1:pink_dodgeball:golfball) (count-same-positions preference1:dodgeball:yellow) )
)
)(define (game game-id-316) (:domain few-objects-room-v1)
(:setup
  (exists (?b - golfball)
    (and
      (exists (?x - (either bridge_block teddy_bear wall watch))
        (exists (?i - ball)
          (exists (?a - dodgeball)
            (exists (?e - ball)
              (game-conserved
                (not
                  (and
                    (and
                      (not
                        (on desk ?i)
                      )
                      (exists (?m - dodgeball ?z - ball)
                        (in ?b ?z)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?o - (either tall_cylindrical_block red key_chain) ?h - curved_wooden_ramp)
        (at-end
          (not
            (and
              (and
                (same_color room_center ?h)
                (on ?h ?h)
                (in_motion ?h)
              )
              (adjacent agent agent)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (> (count preference1:basketball:purple) (total-score) )
  )
)
(:scoring
  20
)
)(define (game game-id-317) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds front_left_corner)
  )
)
(:constraints
  (and
    (forall (?z - game_object)
      (and
        (preference preference1
          (exists (?o - (either mug golfball))
            (then
              (once (in ?z agent) )
              (once (and (= (distance ?o pillow)) (and (agent_holds ?z) (adjacent ?o ?z) ) ) )
              (once (not (in ?o pink) ) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?e - chair)
        (then
          (once (on room_center ?e) )
          (once (not (adjacent ?e ?e) ) )
          (hold (in_motion back) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:basketball:hexagonal_bin) (count-overlapping preference1:doggie_bed) )
)
(:scoring
  (* (count-once-per-objects preference2:cube_block) (+ 3 5 (count-total preference1:tall_cylindrical_block) )
  )
)
)(define (game game-id-318) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (exists (?o - hexagonal_bin)
      (agent_holds ?o)
    )
  )
)
(:constraints
  (and
    (forall (?z - dodgeball)
      (and
        (preference preference1
          (exists (?b - (either golfball pencil yellow))
            (at-end
              (not
                (on agent front)
              )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?f - (either basketball cube_block cellphone))
        (at-end
          (on ?f ?f)
        )
      )
    )
  )
)
(:terminal
  (<= (external-forall-maximize (count preference2:golfball:purple) ) 20 )
)
(:scoring
  2
)
)(define (game game-id-319) (:domain few-objects-room-v1)
(:setup
  (forall (?k - (either mug alarm_clock) ?u ?o - hexagonal_bin)
    (game-conserved
      (and
        (agent_holds ?o)
        (< 4 (distance ?o bed))
      )
    )
  )
)
(:constraints
  (and
    (forall (?z - dodgeball)
      (and
        (preference preference1
          (exists (?o - hexagonal_bin ?x - hexagonal_bin)
            (then
              (once (adjacent ?x ?x) )
              (once (in_motion ?z) )
              (once (agent_holds ?z) )
            )
          )
        )
        (preference preference2
          (then
            (hold (agent_holds ?z) )
            (once (touch ?z ?z) )
            (hold (and (agent_holds ?z) (in_motion ?z) ) )
          )
        )
      )
    )
    (forall (?s - block)
      (and
        (preference preference3
          (exists (?j ?y - (either cd cellphone golfball))
            (then
              (hold (and (and (adjacent ?j ?y) (in_motion ?j) ) (in_motion ?j) ) )
              (hold (not (adjacent bed ?s) ) )
              (once (agent_holds agent) )
            )
          )
        )
        (preference preference4
          (exists (?c - cube_block)
            (then
              (once (adjacent ?s ?c) )
              (once (agent_holds ?c) )
              (once (agent_holds ?s) )
            )
          )
        )
        (preference preference5
          (exists (?d - hexagonal_bin ?e - (either golfball cube_block))
            (then
              (once (> 1 1) )
              (once (in_motion agent) )
              (once (adjacent_side ?s upright ?e) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference4:golfball) 5 )
)
(:scoring
  5
)
)(define (game game-id-320) (:domain medium-objects-room-v1)
(:setup
  (forall (?l - pillow ?g - doggie_bed)
    (exists (?b - hexagonal_bin)
      (exists (?q - block)
        (forall (?v ?d - dodgeball ?k - dodgeball)
          (game-optional
            (agent_crouches )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?w - ball)
        (at-end
          (not
            (and
              (in_motion ?w)
              (agent_holds ?w)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (external-forall-maximize (count-once-per-objects preference1:dodgeball:red) ) (count preference1:golfball) )
)
(:scoring
  (+ (count preference1:dodgeball) (external-forall-minimize (count preference1:basketball:beachball) ) )
)
)(define (game game-id-321) (:domain many-objects-room-v1)
(:setup
  (or
    (exists (?x - ball ?q - chair)
      (game-conserved
        (in_motion ?q)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?j - doggie_bed ?k - hexagonal_bin)
        (then
          (once (not (on ?k ?k) ) )
          (once (adjacent_side ?k ?k rug) )
          (any)
        )
      )
    )
    (forall (?v - hexagonal_bin)
      (and
        (preference preference2
          (exists (?n - block)
            (then
              (once (in_motion ?n) )
              (once (not (= 4 4) ) )
              (once (and (agent_holds ?v) (in_motion ?v) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference2:basketball:purple) (count preference2:basketball) )
)
(:scoring
  5
)
)(define (game game-id-322) (:domain many-objects-room-v1)
(:setup
  (exists (?k - hexagonal_bin)
    (exists (?u - game_object)
      (game-optional
        (not
          (in ?u ?u)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?v ?y ?h - curved_wooden_ramp)
        (then
          (hold (not (in_motion ?v) ) )
          (once (not (forall (?r - flat_block) (and (not (adjacent room_center ?r) ) (and (and (not (or (game_start ) (not (on room_center ?y) ) ) ) (same_color ?v ?v) ) (not (on agent agent) ) ) (not (not (not (in_motion ?y) ) ) ) ) ) ) )
          (once (agent_holds desk) )
        )
      )
    )
  )
)
(:terminal
  (or
    (> 3 (count preference1:red) )
    (>= (count-longest preference1:blue:tall_cylindrical_block) (count-once-per-objects preference1:pink) )
    (or
      (>= 3 (count-once-per-external-objects preference1:red) )
      (>= 2 2 )
    )
  )
)
(:scoring
  (external-forall-maximize
    4
  )
)
)(define (game game-id-323) (:domain medium-objects-room-v1)
(:setup
  (exists (?d - shelf ?l - hexagonal_bin ?s - (either credit_card blue_cube_block yellow_cube_block))
    (game-optional
      (agent_holds ?s)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?l - dodgeball ?g - ball)
        (then
          (hold-while (agent_holds ?g) (in_motion ?g) (and (and (not (agent_holds ?g) ) (or (opposite ?g ?g) (in_motion ?g) ) (not (adjacent ?g ?g) ) ) (not (on ?g ?g) ) ) )
          (once (in ?g ?g) )
          (hold (agent_holds ?g) )
          (hold (< 1 5) )
        )
      )
    )
    (preference preference2
      (exists (?r - doggie_bed)
        (at-end
          (not
            (not
              (agent_holds ?r)
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?m - block)
        (then
          (hold-while (and (same_type ?m ?m) (touch ?m ?m) ) (touch ?m ?m) (in_motion bed) )
          (hold (in_motion desk) )
          (hold (agent_holds ?m) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (* 10 (* (count-same-positions preference2:green) (count preference2:dodgeball) )
      )
      (count preference1:purple)
    )
    (* (/ 3 100 ) 3 )
  )
)
(:scoring
  5
)
)(define (game game-id-324) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?p ?g ?b ?l - ball)
      (exists (?j - shelf ?z - (either hexagonal_bin lamp))
        (forall (?m - ball)
          (exists (?v ?o - block ?a - beachball)
            (and
              (forall (?s - hexagonal_bin ?w - hexagonal_bin ?i - hexagonal_bin ?f ?h - ball ?u - dodgeball)
                (game-conserved
                  (not
                    (faces ?m ?a)
                  )
                )
              )
              (game-conserved
                (in_motion ?z)
              )
              (exists (?r - dodgeball)
                (game-conserved
                  (and
                    (and
                      (in_motion ?z)
                    )
                    (agent_holds desk)
                    (not
                      (agent_holds rug)
                    )
                    (above ?z ?g)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?b - chair ?f - block ?e - (either cellphone pencil laptop))
        (then
          (once (rug_color_under ?e brown) )
          (hold-while (< (distance agent ?e) (distance ?e ?e)) (not (on ?e ?e) ) )
          (hold (or (agent_holds ?e) (on ?e room_center) ) )
          (once (in_motion agent) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:bed:dodgeball) (count-once-per-objects preference1:pink) )
)
(:scoring
  (count preference1:red)
)
)(define (game game-id-325) (:domain many-objects-room-v1)
(:setup
  (exists (?f - hexagonal_bin)
    (and
      (game-optional
        (agent_holds desk)
      )
    )
  )
)
(:constraints
  (and
    (forall (?x - wall)
      (and
        (preference preference1
          (exists (?g - hexagonal_bin)
            (then
              (hold-while (in_motion ?x) (and (game_over ) (and (in ?g ?x) (and (not (object_orientation ?g ?x) ) (in_motion ?x) ) (agent_holds bed) ) ) (and (not (not (and (in ?x ?g) (and (and (and (in_motion desk) (and (= 4 (distance_side ?x east_sliding_door ?g) 1 (distance ?g ?x)) (agent_holds door) ) ) (not (in ?g ?g) ) ) (not (not (not (on agent agent) ) ) ) (adjacent ?x desk) ) ) ) ) (and (on ?g agent) (not (in_motion rug) ) ) ) (in ?x ?x) )
              (once (and (and (not (forall (?w - chair ?z - wall) (not (in ?g ?x) ) ) ) (in_motion ?x) ) (and (and (and (in ?g pink_dodgeball) (and (or (not (and (object_orientation ?x ?g) (and (and (in_motion ?g) (agent_holds ?x) ) ) ) ) (not (exists (?i ?k - red_dodgeball ?d - (either dodgeball pillow)) (not (in ?g ?x) ) ) ) ) (agent_holds ?g) ) ) (and (in_motion rug) (not (not (not (and (in_motion ?g) (and (and (not (or (not (not (is_setup_object floor) ) ) (and (not (not (and (in_motion ?g) (and (on bed ?x) (agent_holds ?g) ) ) ) ) (faces ?g ?g) ) (and (in agent ?g) (in ?g ?g) ) ) ) (touch ?x ?x) ) ) (on front desk) ) ) ) ) ) ) (adjacent_side ?x ?g ?g) ) ) )
              (once (on ?g ?x) )
            )
          )
        )
        (preference preference2
          (exists (?l - hexagonal_bin)
            (then
              (hold (agent_holds ?x) )
              (hold-while (same_type ?l ?l) (agent_holds ?l) (not (agent_holds bed) ) (in_motion ?l) )
              (once (in_motion ?x) )
            )
          )
        )
        (preference preference3
          (exists (?e ?u - (either dodgeball golfball dodgeball doggie_bed))
            (then
              (hold (agent_holds ?e) )
              (once (and (and (agent_holds ?e) (agent_holds pink) (= 1) (above ?x ?x) ) (open ?u) ) )
              (once-measure (on ?u ?u) (distance ?u ?u) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference3:golfball) (* (* 1 5 )
      (count preference2:beachball)
    )
  )
)
(:scoring
  2
)
)(define (game game-id-326) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?w - (either bed chair blue_cube_block))
      (game-optional
        (or
          (on desk ?w)
          (and
            (and
              (in_motion ?w)
              (agent_holds front)
            )
            (not
              (on ?w ?w)
            )
            (between ?w ?w ?w)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?e - beachball ?x - dodgeball)
      (and
        (preference preference1
          (exists (?j - ball)
            (then
              (once (and (same_type ?j rug) (in_motion ?x) ) )
              (hold (not (in_motion ?j) ) )
              (hold (on upright ?j) )
            )
          )
        )
        (preference preference2
          (exists (?k - chair)
            (then
              (once (not (in ?k rug) ) )
              (once (not (and (agent_holds ?k) (not (not (not (< (distance agent ?k) 2) ) ) ) ) ) )
              (hold-while (and (not (and (rug_color_under ?x ?x) (and (and (agent_holds ?x) (on ?k ?x) ) (not (= (distance ?x ?k) 2) ) ) ) ) (in_motion ?x) ) (in_motion ?k) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?a - cube_block ?j - hexagonal_bin)
        (then
          (once (adjacent_side ?j ?j ?j desk) )
          (hold (on floor door) )
          (once (adjacent ?j agent) )
        )
      )
    )
    (forall (?j - doggie_bed ?c - (either tall_cylindrical_block))
      (and
        (preference preference4
          (exists (?l - triangular_ramp)
            (then
              (once (not (same_color ?c top_drawer) ) )
              (once (faces ?l agent) )
              (once (in_motion ?l) )
            )
          )
        )
      )
    )
    (forall (?b - hexagonal_bin ?h - building ?l - golfball)
      (and
        (preference preference5
          (exists (?n - dodgeball)
            (then
              (hold (and (and (not (not (and (in_motion ?n) (rug_color_under ?l blue) ) ) ) (adjacent ?l ?n) ) (and (agent_holds agent) (in agent ?l) ) ) )
              (hold (on ?l rug) )
              (once (and (and (in ?l rug) (in_motion ?n) ) (same_type agent ?l) ) )
            )
          )
        )
        (preference preference6
          (exists (?q - (either triangular_ramp cellphone mug blue_cube_block pen bridge_block tall_cylindrical_block))
            (then
              (once (agent_holds ?q) )
              (once (in ?l ?q) )
              (once (open ?l) )
            )
          )
        )
      )
    )
    (preference preference7
      (exists (?x - hexagonal_bin)
        (then
          (hold (adjacent ?x bed) )
          (once (or (not (in_motion front) ) (not (in_motion pink) ) (on ?x ?x) ) )
          (once (and (> (distance ?x ?x) 1) ) )
        )
      )
    )
    (preference preference8
      (exists (?v - dodgeball)
        (then
          (hold (object_orientation ?v ?v) )
          (once (and (not (not (between ?v bed rug) ) ) (agent_holds desk) ) )
          (hold (not (and (not (not (equal_x_position ?v ?v) ) ) (in ?v ?v) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 10 (- (* (count preference7:yellow) (* (count preference7:dodgeball) 4 )
        )
      )
    )
    (>= (count preference5:blue_dodgeball) 3 )
    (or
      (>= (count-same-positions preference1:basketball) (count-measure preference7:red) )
      (> 3 2 )
      (> 9 2 )
    )
  )
)
(:scoring
  (count-once-per-external-objects preference4:golfball)
)
)(define (game game-id-327) (:domain many-objects-room-v1)
(:setup
  (exists (?r - blinds ?w ?r - game_object ?a - wall ?o - game_object)
    (and
      (game-conserved
        (in agent ?o)
      )
      (game-optional
        (and
          (< (distance ?o ?o) 1)
          (not
            (and
              (not
                (forall (?t - ball)
                  (on ?t ?t)
                )
              )
              (not
                (is_setup_object ?o)
              )
              (agent_holds ?o)
              (and
                (adjacent ?o ?o)
                (in_motion ?o)
              )
              (adjacent ?o ?o)
              (toggled_on ?o)
              (agent_holds ?o)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?f - dodgeball)
        (then
          (once (adjacent ?f agent) )
          (once (in_motion ?f) )
          (once (adjacent_side ?f room_center ?f) )
        )
      )
    )
    (preference preference2
      (exists (?z - ball ?q - cube_block)
        (then
          (once (adjacent_side ?q ?q ?q) )
          (once (and (and (in_motion ?q) (and (equal_x_position ?q ?q) (exists (?j - drawer ?e - golfball) (not (or (agent_holds west_wall) (not (in_motion ?q) ) ) ) ) ) ) (agent_holds ?q) ) )
          (hold (agent_holds ?q) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (/ 2 (count-once-per-objects preference1:beachball:white) ) 20 )
    5
  )
)
(:scoring
  6
)
)(define (game game-id-328) (:domain medium-objects-room-v1)
(:setup
  (exists (?i - dodgeball)
    (game-conserved
      (and
        (in_motion ?i)
        (or
          (not
            (agent_holds ?i)
          )
          (and
            (in_motion upright)
            (touch ?i ?i)
            (in_motion bed)
            (in_motion ?i)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?t - hexagonal_bin)
        (at-end
          (not
            (adjacent_side bed ?t agent ?t)
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (> (* (count preference1) (+ (external-forall-maximize (* (external-forall-maximize (count preference1:basketball:pyramid_block) ) (count-once-per-objects preference1:hexagonal_bin) )
            )
            (count preference1:basketball)
            (count preference1:purple)
            (count-increasing-measure preference1:dodgeball)
            3
            (* 3 3 )
            (+ (count-once-per-objects preference1:pyramid_block) 0 )
            (external-forall-minimize
              (count-once-per-objects preference1:basketball)
            )
            (- (count-once-per-objects preference1:beachball) )
          )
        )
        (not
          (* (* 2 (* (count-measure preference1:basketball:beachball) (count preference1:cube_block) )
              (* (* (count preference1:doggie_bed:beachball:yellow_cube_block) (count preference1:cube_block) (count preference1:tan) )
                (or
                  2
                )
              )
            )
            (+ (* 10 (* (external-forall-maximize (* 10 2 )
                  )
                  (* (+ 2 (total-time) )
                    (* 0 3 )
                  )
                )
              )
              (count preference1:doggie_bed)
            )
            (+ 30 4 )
          )
        )
      )
    )
  )
)
(:scoring
  (- 10 )
)
)(define (game game-id-329) (:domain medium-objects-room-v1)
(:setup
  (or
    (exists (?s - ball)
      (forall (?e - bridge_block)
        (and
          (forall (?r ?c - game_object)
            (exists (?i ?t - (either cube_block game_object cylindrical_block))
              (forall (?w - doggie_bed)
                (exists (?x - cube_block)
                  (exists (?j - wall ?j - triangular_ramp)
                    (exists (?y - color)
                      (game-conserved
                        (agent_holds ?j)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?b - bridge_block ?o - hexagonal_bin)
        (at-end
          (not
            (in_motion ?o)
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (count preference1:yellow_pyramid_block:basketball) )
)
(:scoring
  (total-time)
)
)(define (game game-id-330) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (in green_golfball agent)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?p - (either dodgeball tall_cylindrical_block))
        (then
          (once (in_motion ?p) )
          (once (and (agent_holds bed) (touch ?p ?p) (not (in agent ?p) ) (in_motion agent) (faces desk ?p) (and (in_motion ?p) (not (on ?p desk) ) ) (in_motion ?p) (in_motion ?p) (not (not (exists (?x ?j - beachball ?m - (either book desktop red) ?n - hexagonal_bin ?m - hexagonal_bin) (in ?m ?p) ) ) ) (on ?p bridge_block) ) )
          (hold (or (not (on agent ?p) ) (equal_z_position ?p ?p) ) )
        )
      )
    )
    (preference preference2
      (exists (?e - curved_wooden_ramp)
        (then
          (once (agent_holds ?e) )
          (once (on ?e green_golfball) )
          (once (agent_holds agent) )
        )
      )
    )
    (preference preference3
      (exists (?f - hexagonal_bin)
        (then
          (once (in ?f ?f) )
          (once (same_color ?f ?f) )
          (once (adjacent_side desk ?f ?f) )
        )
      )
    )
  )
)
(:terminal
  (> (+ (count-overlapping preference2:book) (* (+ (and (count-once-per-objects preference3:yellow) 7 ) 2 )
        2
      )
    )
    (count-same-positions preference1:golfball)
  )
)
(:scoring
  2
)
)(define (game game-id-331) (:domain few-objects-room-v1)
(:setup
  (exists (?t - chair)
    (exists (?b - ball)
      (forall (?w - building)
        (game-optional
          (not
            (exists (?m - dodgeball)
              (not
                (not
                  (exists (?n - teddy_bear ?v - hexagonal_bin)
                    (between ?w ?b ?v)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?x - ball)
      (and
        (preference preference1
          (exists (?b ?g ?z - cube_block ?m - game_object)
            (then
              (hold (faces ?x ?m) )
              (hold (in ?x ?m) )
              (hold (or (not (in_motion ?m) ) (in_motion ?m) ) )
            )
          )
        )
        (preference preference2
          (exists (?u - curved_wooden_ramp ?n - teddy_bear)
            (then
              (once (exists (?u - bridge_block ?t - ball) (agent_holds ?t) ) )
              (once (not (and (on ?n ?x) (and (not (agent_holds ?x) ) (faces ?x ?x) (adjacent ?x ?x) ) ) ) )
              (once (on room_center ?n) )
            )
          )
        )
      )
    )
    (forall (?y - hexagonal_bin ?m - hexagonal_bin)
      (and
        (preference preference3
          (then
            (once (not (in_motion pillow) ) )
            (hold (not (in ?m ?m) ) )
            (once (faces agent ?m) )
          )
        )
        (preference preference4
          (exists (?w - hexagonal_bin)
            (then
              (hold-while (on blue ?m) (toggled_on ?w) (agent_holds agent) )
              (once (and (agent_holds ?w) (on ?w brown) ) )
              (once (in_motion ?m) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (count preference4:dodgeball) (* (+ 10 (* (count-increasing-measure preference1:basketball) (* (count-once-per-objects preference3:basketball) 5 )
        )
        40
      )
      (* (+ (* 3 (count-once preference2:orange) )
          (* (* (* (count-once-per-objects preference4:beachball:beachball) 7 (* (count preference1:doggie_bed) (- (* (count preference3:yellow) (count-once preference2:pink_dodgeball:alarm_clock) (< (count preference2:alarm_clock) (count preference2:red) )
                      (* (count-same-positions preference2:doggie_bed) (total-score) )
                      (count preference1:pink)
                      (= 0.7 (total-time) )
                    )
                  )
                )
              )
              3
            )
            (* 3 (count-once-per-objects preference1:dodgeball:green) )
          )
          3
          (count preference3:basketball:dodgeball)
        )
        (* 1 2 )
      )
    )
  )
)
(:scoring
  4
)
)(define (game game-id-332) (:domain few-objects-room-v1)
(:setup
  (exists (?f - curved_wooden_ramp ?m ?z - hexagonal_bin ?n - bridge_block)
    (game-conserved
      (and
        (touch ?n ?n)
        (on agent ?n)
        (not
          (and
            (on ?n bed)
            (adjacent agent ?n)
          )
        )
        (on ?n ?n)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?u - building)
        (then
          (once (in ?u ?u) )
          (hold-for 3 (touch ?u ?u) )
          (hold-while (in_motion agent) (and (same_object ?u ?u) (and (in ?u ?u) (and (and (touch ?u ?u) (agent_holds ?u) ) (adjacent ?u ?u) ) ) ) (touch agent sideways) )
        )
      )
    )
    (preference preference2
      (exists (?d - cube_block)
        (then
          (once (not (in ?d ?d) ) )
          (hold (not (between ?d ?d rug) ) )
          (once (= (distance_side bed ?d ?d) 1) )
        )
      )
    )
  )
)
(:terminal
  (>= 100 (count-once-per-objects preference2:red_pyramid_block) )
)
(:scoring
  (count preference1:blue_cube_block:basketball)
)
)(define (game game-id-333) (:domain few-objects-room-v1)
(:setup
  (exists (?c - game_object)
    (exists (?l - doggie_bed)
      (and
        (exists (?q - hexagonal_bin)
          (game-conserved
            (in ?c pink_dodgeball)
          )
        )
        (exists (?h - block)
          (and
            (game-conserved
              (agent_holds ?c)
            )
          )
        )
        (game-conserved
          (agent_holds green_golfball)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?o - dodgeball)
        (then
          (hold (not (and (and (on ?o ?o) (on ?o ?o) ) (and (agent_holds ?o) (not (faces ?o ?o) ) ) (on block ?o) ) ) )
          (once (agent_holds ?o) )
          (hold (game_over ) )
        )
      )
    )
    (preference preference2
      (exists (?t - hexagonal_bin)
        (at-end
          (not
            (not
              (in_motion ?t)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* 1 (+ (total-time) 4 )
      )
      (* 16 (* (count-increasing-measure preference1:red) (+ (* (+ 7 10 )
              (* (count preference2:cylindrical_block:pink_dodgeball) (* (count-once-per-objects preference2:tall_cylindrical_block:beachball:rug) 5 )
              )
            )
            3
          )
        )
      )
    )
    (> (count preference1:dodgeball:cube_block:basketball) (count preference2:dodgeball) )
    (> (count-once-per-objects preference2:pink:blue) 3 )
  )
)
(:scoring
  (count-once-per-objects preference1:red:tall_cylindrical_block)
)
)(define (game game-id-334) (:domain many-objects-room-v1)
(:setup
  (forall (?d - block)
    (and
      (exists (?o - triangular_ramp ?k - triangular_ramp ?s - curved_wooden_ramp)
        (and
          (game-optional
            (and
              (agent_crouches )
              (not
                (and
                  (and
                    (= 6 (distance top_drawer ?d))
                    (not
                      (in_motion ?d)
                    )
                    (in_motion ?d)
                  )
                  (in_motion ?d)
                )
              )
            )
          )
        )
      )
      (game-conserved
        (in_motion rug)
      )
      (exists (?v - cylindrical_block ?s ?e - hexagonal_bin)
        (exists (?m - (either teddy_bear golfball))
          (forall (?c - curved_wooden_ramp)
            (and
              (forall (?g - block)
                (game-optional
                  (on desk ?g)
                )
              )
              (game-conserved
                (agent_holds ?m)
              )
              (game-conserved
                (in_motion ?c)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?x - curved_wooden_ramp ?x - hexagonal_bin)
        (then
          (once (and (in_motion ?x) (exists (?d - (either basketball laptop)) (adjacent_side ?d front door agent) ) ) )
          (once (and (in_motion ?x) (not (between ?x desk ?x) ) ) )
          (once-measure (< 1 1) (distance ?x ?x) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 2 (count-once-per-external-objects preference1:green) )
    (>= 1 (count preference1:yellow:blue_pyramid_block) )
  )
)
(:scoring
  10
)
)(define (game game-id-335) (:domain many-objects-room-v1)
(:setup
  (exists (?u - block ?r - chair)
    (game-optional
      (on front_left_corner ?r)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?d - curved_wooden_ramp)
        (then
          (hold (on ?d ?d) )
          (hold (not (agent_holds ?d) ) )
          (hold (exists (?i - hexagonal_bin ?r - hexagonal_bin) (< 5 5) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (* (* 2 (* (and (count-once-per-objects preference1:book) 50 ) 3 )
        )
        (* (* 8 (count-once-per-external-objects preference1:blue_dodgeball) )
          (count-increasing-measure preference1:dodgeball:dodgeball:dodgeball)
          10
        )
      )
      2
    )
    (* (count-once-per-external-objects preference1:yellow_cube_block) (- (* (* (count preference1:red) (count preference1:dodgeball:pink_dodgeball:hexagonal_bin) )
          (count-once-per-external-objects preference1:pink)
        )
      )
      (- 8 )
    )
  )
)
(:scoring
  (count-increasing-measure preference1:green:dodgeball:pink)
)
)(define (game game-id-336) (:domain few-objects-room-v1)
(:setup
  (forall (?z ?f ?b - wall ?k - wall)
    (game-optional
      (and
        (< 1 0.5)
        (agent_holds ?k)
        (in_motion rug)
      )
    )
  )
)
(:constraints
  (and
    (forall (?y ?a - (either cd golfball))
      (and
        (preference preference1
          (exists (?u - building)
            (at-end
              (not
                (same_color ?u ?y)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< 5 (count preference1:yellow) )
)
(:scoring
  (count-once-per-objects preference1:yellow)
)
)(define (game game-id-337) (:domain medium-objects-room-v1)
(:setup
  (exists (?g - hexagonal_bin ?k - (either yellow_cube_block desktop))
    (and
      (forall (?x - teddy_bear ?p - chair)
        (game-conserved
          (= (distance ?k ?k) 1)
        )
      )
      (forall (?q - shelf ?z - dodgeball ?j ?o ?b ?v - chair ?q - game_object)
        (game-optional
          (on agent ?k)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?q - drawer ?a - red_dodgeball)
        (then
          (once (on ?a ?a) )
          (once (is_setup_object agent) )
          (hold (equal_z_position rug ?a) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (= (/ (total-score) (count preference1:beachball) ) 1 )
      (count-once-per-objects preference1:dodgeball)
    )
    (+ (* (count-increasing-measure preference1:alarm_clock) 3 )
    )
  )
)
(:scoring
  (or
    10
  )
)
)(define (game game-id-338) (:domain few-objects-room-v1)
(:setup
  (exists (?m - drawer)
    (exists (?x - (either book dodgeball))
      (game-optional
        (agent_holds agent)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?q - curved_wooden_ramp)
        (then
          (hold (on ?q ?q) )
          (once (not (on ?q ?q) ) )
          (once (agent_holds ?q) )
          (hold-while (not (and (not (on ?q ?q) ) (in ?q ?q) ) ) (agent_holds ?q) )
        )
      )
    )
    (preference preference2
      (exists (?w - building)
        (then
          (hold (on ?w ?w) )
          (once (and (and (in_motion ?w) (adjacent_side ?w floor agent) ) (in_motion tan) (not (in_motion ?w) ) (and (in_motion bed) (on ?w ?w) ) (in_motion blue) (in_motion ?w) (not (is_setup_object ?w) ) (and (in_motion ?w) (agent_holds ?w) (same_color ?w ?w) ) ) )
          (once (not (and (agent_holds agent) (agent_holds ?w) ) ) )
        )
      )
    )
    (preference preference3
      (exists (?d - triangular_ramp)
        (then
          (once (and (agent_holds brown) (and (not (in_motion ?d) ) (not (or (in ?d front_left_corner) (agent_holds ?d) (not (above ?d ?d) ) (in_motion ?d) ) ) (agent_holds ?d) (and (and (agent_holds ?d) (exists (?y - book) (adjacent ?d ?d) ) ) (in_motion bed) ) (in_motion ?d) ) (on ?d ?d) ) )
          (hold (agent_holds ?d) )
          (hold (not (not (in_motion ?d) ) ) )
        )
      )
    )
    (forall (?o - shelf ?e - hexagonal_bin)
      (and
        (preference preference4
          (exists (?w - building ?z - curved_wooden_ramp)
            (then
              (once (same_object ?z ?z) )
              (hold (and (not (and (agent_holds ?z) (not (agent_holds ?e) ) ) ) (and (agent_holds ?z) (on ?z ?z) (<= 1 (distance room_center upright)) ) ) )
              (once (adjacent ?e ?z) )
            )
          )
        )
        (preference preference5
          (exists (?k - dodgeball ?b - hexagonal_bin)
            (then
              (hold (>= (distance_side ?b ?b ?b) 1) )
              (hold-while (and (and (agent_holds bed) (< (distance floor ?e) 1) ) (in_motion ?b) ) (not (in_motion ?b) ) )
              (once (not (not (and (on ?b ?b) (and (not (in_motion desk) ) (on agent agent) (not (in_motion ?e) ) (faces agent ?b) ) (not (and (same_type ?e ?e) (in_motion ?e) (on ?b desk) ) ) (agent_holds ?b) ) ) ) )
            )
          )
        )
      )
    )
    (preference preference6
      (exists (?j - hexagonal_bin)
        (then
          (hold (and (not (agent_holds ?j) ) (and (and (in ?j ?j) (and (in_motion ?j) (and (in_motion ?j) (< 3 (distance_side ?j ?j ?j)) ) (on ?j pillow) ) ) (< 2 0) ) ) )
          (hold-while (and (and (game_start ) (not (in_motion ?j) ) ) (not (agent_holds ?j) ) ) (is_setup_object ?j) (not (in_motion agent) ) )
          (once (in ?j ?j) )
          (once (in_motion rug) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (* 5 5 )
  )
)
(:scoring
  3
)
)(define (game game-id-339) (:domain many-objects-room-v1)
(:setup
  (exists (?x - (either book dodgeball) ?b - block)
    (forall (?n - chair)
      (forall (?x - dodgeball)
        (forall (?v - cube_block)
          (game-optional
            (game_over )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?n - dodgeball)
      (and
        (preference preference1
          (then
            (hold (touch ?n ?n) )
            (hold (not (agent_holds ?n) ) )
            (hold (on ?n ?n) )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (+ 4 (count-once preference1:pink) )
      (+ (count preference1:alarm_clock) (+ 50 (+ (count-same-positions preference1:pink) (+ (count preference1) (external-forall-minimize 5 ) )
          )
        )
      )
    )
    (>= (* (or (* (* 5 (<= (* 10 (external-forall-maximize 2 ) )
                (* 1 (* 10 )
                )
              )
            )
            (count-once-per-objects preference1:yellow_cube_block:pink)
            (- (count-once-per-objects preference1:golfball) )
          )
          (+ 3 (count-increasing-measure preference1:alarm_clock:dodgeball) )
        )
        (count preference1:doggie_bed)
      )
      3
    )
  )
)
(:scoring
  40
)
)(define (game game-id-340) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?t ?p - dodgeball)
      (and
        (game-optional
          (in_motion ?p)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?w - hexagonal_bin)
        (then
          (once (in_motion ?w) )
          (hold (on ?w floor) )
          (once (> (distance desk ?w) 5) )
        )
      )
    )
  )
)
(:terminal
  (> 4 (= 30 (+ (total-score) (count-once-per-objects preference1:pink_dodgeball) )
    )
  )
)
(:scoring
  (* 5 5 )
)
)(define (game game-id-341) (:domain medium-objects-room-v1)
(:setup
  (exists (?n - hexagonal_bin ?r - hexagonal_bin)
    (and
      (exists (?q - hexagonal_bin ?y - dodgeball)
        (game-conserved
          (same_color top_drawer ?y)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?l - hexagonal_bin)
      (and
        (preference preference1
          (exists (?m - drawer ?r - dodgeball)
            (then
              (hold-while (and (on ?l ?r) (in_motion upright) ) (adjacent ?l ?r) )
              (hold (and (not (forall (?s - (either dodgeball dodgeball)) (adjacent ?r ?l) ) ) ) )
              (once (agent_holds ?l) )
            )
          )
        )
      )
    )
    (forall (?s - book ?o - dodgeball)
      (and
        (preference preference2
          (exists (?r - rug ?l - triangular_ramp)
            (then
              (once (not (agent_holds ?l) ) )
              (hold (agent_holds desk) )
              (hold (not (not (on ?o room_center) ) ) )
            )
          )
        )
        (preference preference3
          (exists (?w - teddy_bear)
            (then
              (hold (opposite ?w room_center) )
              (hold-while (agent_holds room_center) (adjacent ?w ?w) )
              (once (agent_holds ?o) )
              (once (not (not (on ?o ?o) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (/ (total-score) (* (count-overlapping preference1:tan:purple) 8 )
    )
    (count-unique-positions preference1:beachball:cube_block)
  )
)
(:scoring
  (count preference1:yellow)
)
)(define (game game-id-342) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?g ?k ?b - dodgeball ?c ?i ?u - game_object)
      (game-conserved
        (in_motion ?u)
      )
    )
    (and
      (forall (?r - building)
        (and
          (exists (?u - hexagonal_bin ?t - building)
            (forall (?n - dodgeball ?p - dodgeball)
              (and
                (and
                  (and
                    (game-conserved
                      (exists (?n - cube_block)
                        (in_motion pillow)
                      )
                    )
                  )
                  (exists (?l - (either dodgeball dodgeball) ?x - (either golfball pink teddy_bear))
                    (game-conserved
                      (on ?x ?p)
                    )
                  )
                  (exists (?d - dodgeball)
                    (forall (?e - game_object)
                      (game-optional
                        (agent_holds ?t)
                      )
                    )
                  )
                )
                (and
                  (and
                    (and
                      (exists (?k - building ?b - hexagonal_bin)
                        (game-conserved
                          (not
                            (in_motion ?p)
                          )
                        )
                      )
                    )
                    (forall (?x - teddy_bear)
                      (game-conserved
                        (same_color ?p ?t)
                      )
                    )
                  )
                )
              )
            )
          )
          (game-optional
            (on ?r ?r)
          )
          (and
            (exists (?u - wall)
              (forall (?f - hexagonal_bin)
                (and
                  (forall (?w - hexagonal_bin ?x - hexagonal_bin)
                    (game-optional
                      (not
                        (in_motion ?u)
                      )
                    )
                  )
                )
              )
            )
            (game-conserved
              (on ?r ?r)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?z - cube_block ?h - hexagonal_bin)
        (then
          (once (on ?h ?h) )
          (hold (agent_holds ?h) )
          (once (not (agent_holds ?h) ) )
        )
      )
    )
    (preference preference2
      (exists (?e - building)
        (then
          (hold (agent_crouches ) )
          (once (in pink ?e) )
          (hold (adjacent_side ?e ?e ?e) )
        )
      )
    )
    (forall (?a - ball)
      (and
        (preference preference3
          (exists (?y ?j - tall_cylindrical_block ?n - game_object)
            (at-end
              (not
                (adjacent ?n ?n)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (= 10 40 )
    (< (count preference2:dodgeball:golfball) (- (count-once preference1:yellow_cube_block:basketball) )
    )
  )
)
(:scoring
  2
)
)(define (game game-id-343) (:domain many-objects-room-v1)
(:setup
  (exists (?b - doggie_bed)
    (forall (?h - (either book golfball pyramid_block))
      (forall (?i - wall)
        (game-optional
          (in_motion ?b)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?o - (either cellphone cube_block))
        (then
          (hold (or (and (opposite ?o ?o) (and (on ?o ?o) (and (agent_holds ?o) (and (adjacent ?o ?o) (not (in_motion ?o) ) ) (and (not (and (agent_holds ?o) (on ?o ?o) ) ) (agent_holds ?o) ) (not (same_color bed floor) ) ) ) ) (agent_holds desk) ) )
          (hold-while (not (agent_crouches ) ) (and (not (on ?o rug) ) (on agent ?o) ) )
          (hold (agent_holds rug) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (count preference1:cube_block) )
)
(:scoring
  (- (* (count preference1:golfball:pink_dodgeball) 2 )
  )
)
)(define (game game-id-344) (:domain medium-objects-room-v1)
(:setup
  (exists (?w - dodgeball)
    (exists (?a ?d - triangular_ramp)
      (and
        (game-optional
          (not
            (and
              (and
                (in_motion ?w)
                (> 0 1)
              )
              (in_motion ?w)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?a - (either cellphone pillow) ?h - hexagonal_bin)
        (then
          (once (agent_holds bridge_block) )
          (once (between ?h ?h ?h) )
          (once (same_color ?h ?h) )
        )
      )
    )
    (preference preference2
      (exists (?y - (either alarm_clock chair))
        (then
          (hold-while (not (in_motion ?y) ) (and (in_motion door) (and (on ?y ?y) (in_motion ?y) ) ) (and (agent_holds ?y) (and (equal_z_position ?y desk) (not (and (and (not (not (adjacent west_wall ?y) ) ) (open ?y) (same_color desk ?y) (same_object ?y ?y) ) (< (x_position ?y) (distance ?y ?y)) (and (on ?y ?y) (agent_holds ?y) ) ) ) ) ) )
          (hold (same_type ?y ?y) )
          (once (or (not (agent_holds ?y) ) (in_motion agent) (not (not (> 1 (distance ?y ?y)) ) ) (and (not (in_motion ?y) ) (and (and (in_motion ?y) (and (equal_z_position ?y ?y) (not (in_motion ?y) ) ) (agent_holds ?y) ) (in ?y ?y) (= (distance ?y ?y) (distance ?y ?y) (distance ?y ?y)) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (> (* (external-forall-maximize (count preference2:beachball) ) (+ (+ 3 (count-measure preference1:yellow_cube_block) (* (* 4 (count-once-per-objects preference2:basketball) )
            20
          )
          (- (count-once preference1:yellow) )
          (* (* 4 (* (count-once-per-objects preference2:beachball:dodgeball) (- (= (count-once preference1:green) (+ (count preference2) 5 (count-once-per-objects preference2:pink) )
                  )
                )
              )
            )
            10
          )
          (* (= 20 (count preference2) )
            (count-once-per-objects preference1:pink_dodgeball:orange)
          )
        )
        (* (count-once-per-objects preference1:hexagonal_bin) (total-score) )
      )
      (+ 3 2 )
      (count-once preference2:pink)
    )
    6
  )
)
(:scoring
  3
)
)(define (game game-id-345) (:domain medium-objects-room-v1)
(:setup
  (forall (?h - color ?o - dodgeball ?z - (either bridge_block dodgeball))
    (forall (?v - hexagonal_bin)
      (exists (?u - (either cylindrical_block hexagonal_bin) ?a - (either cellphone) ?o ?k - (either dodgeball cylindrical_block cube_block dodgeball cylindrical_block desktop ball))
        (and
          (and
            (not
              (exists (?g - dodgeball ?b - golfball)
                (forall (?f - hexagonal_bin)
                  (game-optional
                    (agent_holds ?f)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?s - doggie_bed ?e - blue_cube_block ?o - building)
        (then
          (hold (adjacent ?o ?o) )
          (once-measure (agent_holds ?o) (distance desk ?o) )
          (hold (not (agent_holds ?o) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (count-overlapping preference1:red:yellow:golfball) (count preference1:basketball) )
    )
    (<= (count preference1:dodgeball) (+ (count-once-per-objects preference1:dodgeball) 5 (count-unique-positions preference1:green) (count preference1:yellow) 9 (- 6 )
      )
    )
  )
)
(:scoring
  (count preference1:beachball:basketball)
)
)(define (game game-id-346) (:domain many-objects-room-v1)
(:setup
  (forall (?g - dodgeball)
    (game-optional
      (touch agent desk)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?v - building ?u - (either golfball main_light_switch alarm_clock))
        (then
          (hold (touch ?u ?u) )
          (once-measure (opposite ?u ?u) (distance ?u agent) )
          (hold (and (and (on ?u ?u) (object_orientation ?u ?u) (on ?u ?u) ) (agent_holds ?u) ) )
        )
      )
    )
  )
)
(:terminal
  (= (+ (* (or (count-once preference1:pink:book) ) (count-unique-positions preference1:beachball:basketball) )
      (count preference1:purple)
    )
    10
  )
)
(:scoring
  (* 10 (count preference1:dodgeball) )
)
)(define (game game-id-347) (:domain few-objects-room-v1)
(:setup
  (exists (?a ?o - ball)
    (exists (?w - pyramid_block)
      (game-conserved
        (agent_holds ?a)
      )
    )
  )
)
(:constraints
  (and
    (forall (?i - hexagonal_bin ?d - (either doggie_bed doggie_bed))
      (and
        (preference preference1
          (exists (?q - hexagonal_bin)
            (then
              (hold-for 9 (in_motion desk) )
              (once (exists (?p - ball ?l - (either cd blue_cube_block watch floor)) (not (adjacent ?l floor) ) ) )
              (hold (in_motion ?q) )
            )
          )
        )
        (preference preference2
          (exists (?s - green_triangular_ramp)
            (then
              (hold (on floor ?d) )
              (once (and (agent_holds ?d) (not (not (agent_holds ?d) ) ) ) )
              (once (not (not (and (equal_x_position ?d ?d) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (<= (count-once-per-objects preference1) (count-once preference2:tan) )
    (>= (count preference2:red) 5 )
    (= 6 (total-time) )
  )
)
(:scoring
  (count preference1:doggie_bed)
)
)(define (game game-id-348) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?j - beachball ?n - (either yellow pyramid_block pen yellow) ?g - pyramid_block)
      (game-conserved
        (not
          (not
            (in_motion ?g)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?u ?q - chair ?j - beachball)
        (then
          (once (and (not (agent_holds ?j) ) (rug_color_under ?j ?j) ) )
          (hold (in_motion room_center) )
          (hold (not (not (touch ?j ?j) ) ) )
        )
      )
    )
    (preference preference2
      (exists (?x - chair)
        (then
          (once (in_motion ?x) )
          (once (and (in_motion bed) (forall (?l - building ?j - cube_block) (and (or (rug_color_under ?j ?x) ) (adjacent ?x ?x) (in_motion ?j) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count preference1:pink_dodgeball) (+ (+ (* (total-score) (* (count preference1:hexagonal_bin) (* (count-same-positions preference2:yellow) 30 )
            )
          )
          (* 3 10 )
        )
        2
        9
        15
        10
        (count-once preference2:hexagonal_bin:hexagonal_bin:golfball)
      )
    )
    (count-once preference1:pink)
  )
)
(:scoring
  (total-score)
)
)(define (game game-id-349) (:domain medium-objects-room-v1)
(:setup
  (forall (?z - hexagonal_bin)
    (not
      (game-optional
        (exists (?e ?g - tall_cylindrical_block ?w - hexagonal_bin ?g - hexagonal_bin ?o - dodgeball)
          (not
            (adjacent ?o ?o)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?q - dodgeball ?n - hexagonal_bin)
      (and
        (preference preference1
          (exists (?e - dodgeball ?x - hexagonal_bin)
            (at-end
              (in top_shelf pink)
            )
          )
        )
        (preference preference2
          (exists (?s ?e - dodgeball)
            (then
              (hold (and (adjacent ?n agent) (touch ?n agent) ) )
              (once (not (adjacent ?n ?n) ) )
              (hold (not (not (and (in_motion ?n) (not (agent_holds ?e) ) ) ) ) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?b - (either triangular_ramp dodgeball curved_wooden_ramp) ?n - dodgeball)
        (then
          (once (not (in_motion ?n) ) )
          (once (and (on ?n ?n) (and (on ?n pink_dodgeball) (and (in_motion desk) (not (not (agent_holds pink_dodgeball) ) ) ) (adjacent ?n ?n) ) ) )
          (once (touch agent ?n) )
        )
      )
    )
  )
)
(:terminal
  (not
    (< (count-once-per-objects preference2:purple) (count preference3:basketball) )
  )
)
(:scoring
  (count-once-per-external-objects preference1:basketball)
)
)(define (game game-id-350) (:domain many-objects-room-v1)
(:setup
  (exists (?w - wall)
    (exists (?p - dodgeball)
      (game-optional
        (forall (?l - doggie_bed)
          (and
            (and
              (in_motion ?p)
              (< 4 1)
            )
            (not
              (touch north_wall ?w)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?o - (either dodgeball dodgeball))
        (at-end
          (< 1 (distance room_center ?o))
        )
      )
    )
  )
)
(:terminal
  (>= 1 10 )
)
(:scoring
  (* 4 (count-once-per-objects preference1:dodgeball:purple) )
)
)(define (game game-id-351) (:domain medium-objects-room-v1)
(:setup
  (exists (?x - hexagonal_bin)
    (and
      (exists (?b - hexagonal_bin)
        (and
          (game-conserved
            (adjacent ?x ?b)
          )
          (exists (?g - hexagonal_bin)
            (exists (?a - hexagonal_bin)
              (game-conserved
                (agent_holds desk)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?e - (either yellow_cube_block dodgeball))
        (then
          (hold (or (game_over ) ) )
          (once (agent_holds ?e) )
          (hold-while (not (not (in_motion ?e) ) ) (on floor ?e) )
        )
      )
    )
    (forall (?d - chair ?b - chair)
      (and
        (preference preference2
          (exists (?x - teddy_bear)
            (then
              (hold-while (on agent ?b) (and (agent_holds green_golfball) (agent_holds ?b) ) (= 9 8) )
              (once (not (not (in_motion ?b) ) ) )
              (hold (not (game_start ) ) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?j - doggie_bed ?o - (either pyramid_block book golfball basketball))
        (then
          (hold (and (on ?o ?o) (touch ?o ?o) ) )
          (hold (agent_holds ?o) )
          (hold-while (not (toggled_on ?o) ) (in ?o ?o) )
        )
      )
    )
  )
)
(:terminal
  (> 10 (count preference2:dodgeball:blue) )
)
(:scoring
  (+ (external-forall-maximize (count preference3:beachball:hexagonal_bin) ) (* (count-once-per-objects preference1:green) 5 (count preference1:blue:golfball:dodgeball) )
  )
)
)(define (game game-id-352) (:domain medium-objects-room-v1)
(:setup
  (exists (?q - hexagonal_bin)
    (game-optional
      (not
        (in_motion bed)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?u - doggie_bed ?c - hexagonal_bin)
        (then
          (once (above ?c ?c) )
          (once (and (and (not (in_motion ?c) ) (in agent ?c) (agent_holds ?c) ) (on ?c ?c) (and (touch upside_down ?c) (agent_holds main_light_switch) (not (in ?c ?c) ) (not (not (on ?c ?c) ) ) (agent_holds agent) (in_motion bed) (not (on ?c ?c) ) (in_motion ?c) (< (distance ?c ?c) (distance bed ?c)) (and (and (not (= (distance ?c ?c) 9 (distance ?c ?c)) ) (> (distance ?c rug) (distance_side ?c ?c desk)) ) (faces ?c ?c) ) (exists (?p - dodgeball) (not (adjacent ?c floor) ) ) (and (and (and (not (in_motion ?c) ) (and (not (exists (?e - cube_block ?f - hexagonal_bin ?l - cube_block) (and (same_object bed ?l) (exists (?d - hexagonal_bin) (and (not (not (adjacent ?c ?c) ) ) (on ?d ?l) (game_start ) (and (or (rug_color_under agent ?c) (> 1 0) (agent_holds ?d) ) (and (and (and (opposite ?l ?d) (or (in_motion ?c) (not (in_motion ?c) ) ) ) (on ?l ?l) ) (agent_holds ?d) ) ) ) ) ) ) ) (not (and (in_motion ?c) (adjacent ?c ?c) ) ) (touch pink_dodgeball ?c) ) ) (in_motion back) ) (not (and (above bed ?c) (adjacent_side ?c ?c ?c) ) ) ) ) ) )
          (once (in_motion ?c) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (+ (- (count preference1:yellow_cube_block:purple:alarm_clock) )
        (count preference1)
      )
      15
    )
    (count preference1:beachball)
  )
)
(:scoring
  (count preference1:basketball)
)
)(define (game game-id-353) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (agent_holds bed)
    )
    (exists (?o - dodgeball)
      (and
        (game-optional
          (and
            (< (distance ?o ?o) 1)
            (and
              (agent_holds ?o)
              (in ?o ?o)
            )
            (not
              (and
                (and
                  (agent_holds ?o)
                  (between ?o ?o ?o)
                )
                (agent_holds ?o)
                (adjacent ?o ?o)
                (not
                  (not
                    (and
                      (agent_holds ?o)
                      (same_type ?o ?o)
                    )
                  )
                )
              )
            )
          )
        )
        (and
          (forall (?v - hexagonal_bin)
            (and
              (and
                (game-conserved
                  (on ?v ?v)
                )
                (game-conserved
                  (in_motion ?v)
                )
              )
              (game-conserved
                (agent_holds ?v)
              )
            )
          )
          (and
            (and
              (game-conserved
                (< (distance ?o ?o) 1)
              )
              (exists (?r - block)
                (game-optional
                  (in_motion ?o)
                )
              )
              (and
                (exists (?b - hexagonal_bin)
                  (exists (?s - (either blue_cube_block pink))
                    (forall (?d - (either wall golfball))
                      (and
                        (game-optional
                          (not
                            (agent_holds ?b)
                          )
                        )
                        (exists (?q - hexagonal_bin ?f - (either side_table flat_block) ?i - hexagonal_bin)
                          (and
                            (exists (?e - hexagonal_bin ?u - game_object)
                              (exists (?p ?k ?q ?e ?n ?l - flat_block ?f - hexagonal_bin)
                                (and
                                  (exists (?t - game_object)
                                    (game-conserved
                                      (on bed room_center)
                                    )
                                  )
                                  (and
                                    (and
                                      (game-conserved
                                        (agent_holds ?i)
                                      )
                                      (or
                                        (game-conserved
                                          (in_motion ?d)
                                        )
                                      )
                                      (game-conserved
                                        (same_type ?d rug)
                                      )
                                    )
                                    (exists (?p - teddy_bear ?k - hexagonal_bin)
                                      (exists (?e - dodgeball ?y - pillow ?v - hexagonal_bin)
                                        (not
                                          (and
                                            (and
                                              (exists (?r - curved_wooden_ramp ?n - hexagonal_bin)
                                                (game-conserved
                                                  (and
                                                    (agent_holds floor)
                                                    (not
                                                      (agent_holds ?o)
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                            (and
                                              (exists (?q - dodgeball)
                                                (game-optional
                                                  (agent_holds ?u)
                                                )
                                              )
                                              (and
                                                (and
                                                  (forall (?l - hexagonal_bin)
                                                    (game-conserved
                                                      (in ?u ?f)
                                                    )
                                                  )
                                                  (exists (?r - hexagonal_bin)
                                                    (game-optional
                                                      (in_motion ?u)
                                                    )
                                                  )
                                                )
                                              )
                                              (game-conserved
                                                (in_motion ?u)
                                              )
                                            )
                                            (forall (?a - cube_block)
                                              (game-optional
                                                (on ?o ?v)
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                            (and
                              (and
                                (game-optional
                                  (touch ?b ?i)
                                )
                                (exists (?j - hexagonal_bin)
                                  (game-conserved
                                    (in_motion pink_dodgeball)
                                  )
                                )
                              )
                            )
                          )
                        )
                        (and
                          (exists (?p - ball)
                            (game-optional
                              (not
                                (and
                                  (agent_holds room_center)
                                  (and
                                    (faces ?s ?p)
                                    (agent_holds ?p)
                                  )
                                  (not
                                    (and
                                      (not
                                        (agent_holds ?b)
                                      )
                                      (>= (distance ?o ?s) (distance_side ?s ?p ?s))
                                    )
                                  )
                                )
                              )
                            )
                          )
                          (not
                            (game-conserved
                              (in_motion ?b)
                            )
                          )
                          (and
                            (and
                              (game-conserved
                                (in_motion ?s)
                              )
                            )
                            (forall (?p - teddy_bear ?g - hexagonal_bin)
                              (game-optional
                                (above ?o ?o)
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?h - hexagonal_bin)
        (then
          (once (not (on ?h ?h) ) )
          (once (and (agent_holds ?h) (and (agent_holds ?h) (and (< (distance ?h ?h) 1) (agent_holds ?h) ) ) ) )
          (hold-to-end (not (in ?h ?h) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (count-once-per-objects preference1:purple:yellow_cube_block:red) 4 )
  )
)
(:scoring
  (total-time)
)
)(define (game game-id-354) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (exists (?c - dodgeball)
      (agent_holds ?c)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?r - dodgeball)
        (then
          (any)
          (once (in ?r ?r) )
          (hold (on ?r ?r) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (count preference1:yellow:purple) )
)
(:scoring
  (count-once-per-external-objects preference1:pink:dodgeball)
)
)(define (game game-id-355) (:domain many-objects-room-v1)
(:setup
  (forall (?e - shelf)
    (forall (?i - triangular_ramp ?q - game_object)
      (exists (?l - color ?y - curved_wooden_ramp)
        (exists (?c - game_object)
          (exists (?z - ball ?g ?n - hexagonal_bin ?t - hexagonal_bin)
            (and
              (game-conserved
                (and
                  (same_object desk green_golfball)
                  (not
                    (adjacent ?e ?y)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?k - game_object)
        (then
          (hold (same_color ?k ?k) )
          (once (in agent door) )
          (once (on agent ?k) )
          (once (on ?k room_center) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-once-per-external-objects preference1:beachball) 3 )
    (>= (external-forall-maximize (count preference1:basketball) ) (* (* 3 (total-score) )
        (+ (* (* (<= (count preference1:beachball) 4 )
              (not
                (count preference1:blue_dodgeball)
              )
            )
            10
          )
          (+ (* (= 6 (count-once-per-objects preference1:dodgeball) )
              (count preference1:dodgeball)
            )
            (count preference1:dodgeball:yellow_cube_block:cube_block)
          )
        )
        (external-forall-maximize
          5
        )
      )
    )
    (>= (count preference1:rug) (count preference1:dodgeball:pink) )
  )
)
(:scoring
  (count-once-per-objects preference1:hexagonal_bin:blue_pyramid_block)
)
)(define (game game-id-356) (:domain many-objects-room-v1)
(:setup
  (exists (?q - hexagonal_bin)
    (game-optional
      (not
        (adjacent_side bed ?q room_center)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?t - green_triangular_ramp)
        (then
          (once (and (not (and (on ?t ?t) (game_start ) ) ) (same_object ?t ?t) ) )
          (hold (in_motion bridge_block) )
          (hold (agent_holds ?t) )
          (hold-while (agent_holds ?t) (and (agent_holds ?t) (and (not (not (and (and (and (not (rug_color_under door ?t) ) (agent_holds ?t) (adjacent ?t ?t) ) (not (and (in_motion ?t) (on ?t ?t) ) ) ) (adjacent ?t agent) ) ) ) (in_motion ?t) ) ) )
        )
      )
    )
    (preference preference2
      (exists (?y - (either cellphone tall_cylindrical_block cube_block))
        (then
          (once (not (adjacent ?y ?y) ) )
          (once (and (agent_crouches ) (not (on ?y ?y) ) (in desk ?y) (faces ?y ?y) ) )
          (once (on pillow ?y) )
        )
      )
    )
  )
)
(:terminal
  (> (* (+ (* 5 (count preference1:pink_dodgeball) (* (count preference2:pink_dodgeball) (count preference2:pink:dodgeball) )
          (+ 50 3 (+ (+ (count-same-positions preference2) )
              (external-forall-maximize
                (count preference2:beachball)
              )
              (count-once preference1:dodgeball)
              3
              (count preference2:basketball:red_pyramid_block)
              (* 3 2 (total-score) )
            )
          )
        )
        (count-total preference1:blue_pyramid_block:white)
      )
      18
      (* (count-once preference2:beachball:tall_cylindrical_block) (>= (not 5 ) (* (count preference2:dodgeball:book:red) (* 5 5 )
            (total-time)
            (* 5 (count-once-per-objects preference1:beachball:wall) )
          )
        )
      )
    )
    6
  )
)
(:scoring
  (* (count-overlapping preference1:purple) (- (* (count preference1:dodgeball) (count-once preference1:side_table:basketball) )
    )
    (count-once-per-objects preference2:beachball)
  )
)
)(define (game game-id-357) (:domain medium-objects-room-v1)
(:setup
  (forall (?f - hexagonal_bin ?u - hexagonal_bin)
    (and
      (game-optional
        (< (distance agent ?u) (distance ?u bed))
      )
      (and
        (game-conserved
          (on ?u ?u)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?u - bridge_block)
      (and
        (preference preference1
          (exists (?z - doggie_bed)
            (then
              (hold (exists (?k - doggie_bed) (not (and (in_motion ?z) (on ?k ?u) ) ) ) )
              (once (between desk agent agent) )
              (once (on top_shelf agent) )
              (hold (and (in agent ?u) (= 3 9) ) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?j - cube_block ?z - game_object)
        (then
          (once (in_motion room_center) )
          (once (adjacent desk ?z) )
          (hold (on ?z agent) )
        )
      )
    )
    (preference preference3
      (exists (?c - dodgeball ?x - cylindrical_block)
        (at-end
          (in_motion ?x)
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:tall_cylindrical_block) (* (count preference2:dodgeball:beachball) (count preference3:red) )
  )
)
(:scoring
  (count-once-per-objects preference3:pink_dodgeball)
)
)(define (game game-id-358) (:domain few-objects-room-v1)
(:setup
  (exists (?o - curved_wooden_ramp ?y - game_object ?i - yellow_pyramid_block)
    (game-conserved
      (on ?i door)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?h - teddy_bear)
        (at-end
          (not
            (and
              (agent_holds blue)
              (in_motion ?h)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count preference1:hexagonal_bin:orange) 2 )
    (<= (total-score) (count preference1:yellow) )
  )
)
(:scoring
  (count preference1:dodgeball)
)
)(define (game game-id-359) (:domain many-objects-room-v1)
(:setup
  (exists (?n - hexagonal_bin)
    (game-conserved
      (agent_holds bed)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?q - game_object ?w - bridge_block)
        (then
          (hold (on ?w ?w) )
          (once (not (touch ?w ?w) ) )
          (once (and (not (not (and (same_color agent ?w) (not (not (on ?w ?w) ) ) (agent_holds ?w) (in_motion back) ) ) ) (not (forall (?u - curved_wooden_ramp) (exists (?o - hexagonal_bin) (agent_holds ?o) ) ) ) (on rug ?w) (or (not (= 7 1) ) (and (in_motion ?w) (in ?w ?w) ) ) ) )
        )
      )
    )
    (forall (?f - hexagonal_bin ?i - cube_block)
      (and
        (preference preference2
          (exists (?q - (either cylindrical_block mug))
            (at-end
              (on ?i ?q)
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?b - hexagonal_bin ?p - (either cube_block cd))
        (then
          (once (in_motion ?p) )
          (once (not (opposite ?p rug) ) )
          (hold (in_motion ?p) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (not (* (count-once-per-objects preference1:basketball) 3 )
      )
      18
    )
    (count preference1:dodgeball)
  )
)
(:scoring
  (count preference2:dodgeball)
)
)(define (game game-id-360) (:domain few-objects-room-v1)
(:setup
  (forall (?f - hexagonal_bin)
    (game-conserved
      (not
        (> (distance tan agent) 0.5)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?n - doggie_bed)
        (then
          (once (agent_holds ?n) )
          (once (< (distance ?n ?n) 2) )
          (once (in_motion ?n) )
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (>= (* (* (external-forall-maximize (count preference1) ) )
          (+ (count preference1:tan:golfball:beachball) (count preference1:green) )
          (count-once-per-objects preference1:dodgeball)
          (- 30 )
        )
        6
      )
      (= 10 (* (* (+ 15 (count-once-per-external-objects preference1:dodgeball) )
            (* (external-forall-minimize (count preference1:orange) ) (count preference1:beachball:green) )
          )
          (* (* (* 1 (total-time) (+ (count preference1:pink) (count-once-per-objects preference1:dodgeball) )
              )
              (* (* (+ 4 (- 3 )
                  )
                  1
                )
                2
              )
            )
            (count-once-per-objects preference1:side_table)
          )
          (count preference1:dodgeball)
          (count-once-per-objects preference1:yellow_cube_block)
        )
      )
    )
  )
)
(:scoring
  50
)
)(define (game game-id-361) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds agent)
  )
)
(:constraints
  (and
    (forall (?c - chair)
      (and
        (preference preference1
          (exists (?x - shelf ?d - building)
            (then
              (once (and (and (and (agent_holds desk) (not (not (in ?c ?d) ) ) ) (on rug desk) ) (and (in_motion ?d) (agent_holds ?c) ) ) )
              (once (game_over ) )
              (hold-for 10 (and (in_motion ?d) (not (not (not (not (agent_crouches ) ) ) ) ) ) )
            )
          )
        )
        (preference preference2
          (exists (?k - book)
            (then
              (once (touch ?c ?c) )
              (hold (not (and (and (> (distance ?c pink) 1) (on ?k room_center) ) (broken ?c) ) ) )
              (once (and (agent_holds ?k) (and (agent_holds ?c) (< (distance ?c ?c) 1) ) ) )
              (once (opposite ?k ?k) )
              (once (exists (?w ?p - chair) (not (in_motion ?w) ) ) )
            )
          )
        )
        (preference preference3
          (exists (?w - hexagonal_bin)
            (then
              (hold (and (in_motion ?c) (agent_holds ?w) ) )
              (once (agent_holds ?w) )
              (once (not (< 1 (distance ?c agent)) ) )
            )
          )
        )
      )
    )
    (preference preference4
      (exists (?s - curved_wooden_ramp)
        (then
          (once (and (and (not (and (agent_holds bed) (on desk ?s) ) ) ) (and (in_motion ?s) (and (not (agent_holds agent) ) (not (not (same_type bed ?s) ) ) ) (not (in ?s ?s) ) (agent_holds ?s) (and (same_object ?s ?s) (not (and (not (agent_holds ?s) ) (game_start ) ) ) ) (< 1 2) (and (not (faces bed ?s) ) (in ?s ?s) ) ) ) )
          (once (or (rug_color_under ?s ?s) (agent_holds ?s) ) )
        )
      )
    )
  )
)
(:terminal
  (> (* (or (count preference1:yellow:book) ) (* (* (+ 5 5 )
          (external-forall-maximize
            (* (* (* (* 0.7 (count preference2:green) )
                  (+ 30 2 )
                )
                (count preference3:yellow_cube_block)
              )
              (* 7 1 180 (count preference1:pink) )
            )
          )
        )
        (+ 8 (count-measure preference4:dodgeball) )
      )
      (* (count-once-per-objects preference3:hexagonal_bin) (* (count-once-per-objects preference4:dodgeball) (count-once-per-objects preference4:yellow) )
      )
    )
    (count-once-per-objects preference1:beachball:hexagonal_bin)
  )
)
(:scoring
  (count preference1:basketball:dodgeball)
)
)(define (game game-id-362) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - dodgeball ?x - chair)
      (and
        (and
          (game-optional
            (in rug ?x)
          )
        )
        (exists (?e ?j - tall_cylindrical_block)
          (and
            (and
              (game-conserved
                (in_motion agent)
              )
            )
            (and
              (not
                (game-optional
                  (not
                    (on desk ?j)
                  )
                )
              )
              (and
                (and
                  (game-conserved
                    (adjacent_side ?e ?e rug)
                  )
                  (game-conserved
                    (and
                      (same_type ?j ?x)
                      (not
                        (touch ?j ?e)
                      )
                    )
                  )
                )
              )
            )
            (or
              (exists (?g - building ?f - bridge_block)
                (game-conserved
                  (and
                    (agent_holds ?e)
                    (and
                      (in_motion ?f)
                      (>= (distance ?f ?f) (distance ?f ?j))
                    )
                  )
                )
              )
              (forall (?y - hexagonal_bin ?z - dodgeball)
                (game-conserved
                  (on ?j ?z)
                )
              )
              (exists (?m - teddy_bear)
                (exists (?i - hexagonal_bin)
                  (game-optional
                    (exists (?w - hexagonal_bin)
                      (adjacent ?j ?i)
                    )
                  )
                )
              )
            )
            (exists (?s - curved_wooden_ramp)
              (forall (?z - color ?y - ball)
                (and
                  (forall (?r - game_object ?l - ball)
                    (game-optional
                      (faces agent ?j)
                    )
                  )
                )
              )
            )
            (game-conserved
              (same_type ?e ?j)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?a - teddy_bear ?v - wall)
        (then
          (once (agent_holds ?v) )
          (hold (> (distance ?v ?v) (distance_side ?v green agent ?v)) )
          (once (in_motion ?v) )
        )
      )
    )
    (preference preference2
      (exists (?y - (either yellow_cube_block doggie_bed lamp) ?c - hexagonal_bin)
        (then
          (once (and (or (adjacent ?c ?c) (not (same_color ?c desk) ) ) (< (distance ?c desk) (distance bed ?c)) ) )
          (once-measure (in_motion ?c) (distance pink_dodgeball ?c) )
          (once (on ?c ?c) )
        )
      )
    )
    (preference preference3
      (exists (?k - building ?h - hexagonal_bin ?u - hexagonal_bin)
        (then
          (hold (exists (?z - rug ?w - (either blue_cube_block pyramid_block pen pen golfball doggie_bed pencil)) (not (not (not (agent_holds ?w) ) ) ) ) )
          (once-measure (and (and (and (and (in_motion ?u) (< (building_size floor) 8) ) (in_motion agent) (not (touch ?u ?u) ) (and (not (adjacent ?u ?u) ) (adjacent ?u ?u) (not (and (not (in ?u ?u) ) (on room_center front_left_corner) (agent_holds ?u) ) ) ) (and (and (on ?u ?u) (in_motion ?u) ) (or (agent_holds ?u) (and (agent_holds ?u) ) ) ) (not (on ?u door) ) ) (adjacent ?u ?u) ) (on ?u bottom_shelf) ) (distance ?u ?u) )
          (once (on ?u upright) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 3 )
)
(:scoring
  10
)
)(define (game game-id-363) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (not
      (exists (?a - game_object)
        (in_motion ?a)
      )
    )
  )
)
(:constraints
  (and
    (forall (?y - game_object ?m - building ?e - beachball)
      (and
        (preference preference1
          (then
            (once (equal_x_position agent ?e) )
            (hold (not (toggled_on ?e) ) )
            (hold (in ?e ?e) )
          )
        )
      )
    )
  )
)
(:terminal
  (> (count preference1:basketball:red) (count preference1:beachball) )
)
(:scoring
  10
)
)(define (game game-id-364) (:domain medium-objects-room-v1)
(:setup
  (forall (?x - curved_wooden_ramp ?f - pyramid_block)
    (and
      (and
        (game-conserved
          (agent_holds ?f)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?x - (either cellphone alarm_clock) ?s - dodgeball)
      (and
        (preference preference1
          (exists (?l - (either golfball ball cube_block cellphone laptop main_light_switch golfball))
            (then
              (once (agent_holds ?l) )
              (hold (not (on agent ?l) ) )
              (hold (< 5 (distance ?l rug)) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (external-forall-maximize (count preference1:pink) ) (count-overlapping preference1:yellow) )
      (<= 4 3 )
    )
    (<= (+ 4 10 )
      15
    )
  )
)
(:scoring
  (count preference1:yellow_pyramid_block:hexagonal_bin)
)
)(define (game game-id-365) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (and
      (not
        (not
          (exists (?a - dodgeball)
            (not
              (and
                (not
                  (not
                    (not
                      (not
                        (object_orientation ?a ?a)
                      )
                    )
                  )
                )
                (agent_holds ?a)
              )
            )
          )
        )
      )
      (not
        (not
          (exists (?w - hexagonal_bin)
            (and
              (< 1 (distance front ?w))
              (agent_holds ?w)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?t ?q ?i - beachball)
      (and
        (preference preference1
          (exists (?h - block ?v ?c ?p ?j - pyramid_block)
            (at-end
              (and
                (and
                  (< (distance ?c ?v) 2)
                  (adjacent ?v ?i)
                )
                (touch ?p ?t)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 0.5 (* 3 3 5 (- 9 )
      3
      (count-once-per-objects preference1:purple)
      2
    )
  )
)
(:scoring
  (* (count-once-per-objects preference1:beachball) (count preference1) )
)
)(define (game game-id-366) (:domain few-objects-room-v1)
(:setup
  (exists (?v - hexagonal_bin ?h ?f ?z - building)
    (and
      (exists (?n - shelf ?v - cube_block)
        (game-conserved
          (in_motion ?f)
        )
      )
      (forall (?i - pillow ?d - dodgeball)
        (exists (?l - wall)
          (exists (?m - cube_block)
            (and
              (and
                (game-optional
                  (and
                    (touch ?h ?d)
                    (in_motion ?l)
                  )
                )
              )
              (forall (?n - (either alarm_clock cube_block pencil) ?i - color)
                (and
                  (game-conserved
                    (< 1 1)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?w - dodgeball ?h - beachball)
        (then
          (hold (in_motion ?h) )
          (once (not (on ?h ?h) ) )
          (hold-while (on ?h ?h) (not (not (in_motion ?h) ) ) )
        )
      )
    )
    (preference preference2
      (exists (?c - chair)
        (then
          (once (not (agent_holds ?c) ) )
          (once (and (and (not (agent_holds ?c) ) (equal_z_position agent ?c) ) (in_motion ?c) (on ?c ?c) (same_object ?c ?c) ) )
          (once (agent_holds ?c) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 2 3 )
    (>= (* (< (count preference2:dodgeball) (and 6 ) )
        (count preference2)
      )
      (- (count-once-per-objects preference2:golfball) )
    )
    (or
      (not
        (>= (or (* (* 3 (* (not 15 ) (count-unique-positions preference2:purple) )
                (+ (* 2 4 )
                  (count preference1:dodgeball:hexagonal_bin)
                )
                (* 2 (+ 5 )
                )
                3
                (count preference1:blue_pyramid_block)
                (-
                  8
                  (* (count-once-per-objects preference1:triangle_block) 6 )
                )
              )
              (* (* 10 (count-once-per-objects preference1:pink) )
                (count preference2:yellow)
              )
            )
            (>= (count-shortest preference2:dodgeball:tall_cylindrical_block) (* (count preference2:hexagonal_bin) 2 )
            )
          )
          (and
            (* (+ 3 (count preference2:dodgeball) )
              1
              (count preference1:golfball)
            )
            5
            (+ 7 (+ (* (total-time) 10 )
                3
              )
            )
          )
        )
      )
      (> (count preference1:dodgeball) 6 )
    )
  )
)
(:scoring
  (- (count preference2:doggie_bed) )
)
)(define (game game-id-367) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?o - hexagonal_bin)
      (game-optional
        (and
          (on agent floor)
          (same_color ?o ?o)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o - (either cylindrical_block mug) ?o - game_object)
      (and
        (preference preference1
          (exists (?c - chair ?f - dodgeball)
            (then
              (once (agent_holds pillow) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (count-once preference1:beachball) )
)
(:scoring
  (count preference1:basketball)
)
)(define (game game-id-368) (:domain few-objects-room-v1)
(:setup
  (not
    (forall (?m - curved_wooden_ramp)
      (game-optional
        (object_orientation ?m ?m)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?s - building ?a - hexagonal_bin)
        (then
          (hold-while (and (in ?a ?a) (exists (?p - hexagonal_bin) (same_type ?p ?a) ) ) (in_motion ?a) )
          (once (and (in_motion ?a) (adjacent bed bed) ) )
          (once (not (on floor ?a) ) )
        )
      )
    )
    (preference preference2
      (exists (?i - game_object)
        (at-end
          (same_object room_center ?i)
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference2:pink_dodgeball) (+ 3 (* (* 5 (count preference1) (- (count-longest preference2:red_pyramid_block:doggie_bed) )
        )
        (and
          (< (* (count preference2:pyramid_block:hexagonal_bin) (* 5 (count preference2:dodgeball) )
            )
            10
          )
          (count-same-positions preference2:beachball)
        )
      )
      2
      (count-once-per-external-objects preference1:dodgeball:yellow:basketball)
      5
      (count preference2:yellow)
    )
  )
)
(:scoring
  (+ (total-score) 10 )
)
)(define (game game-id-369) (:domain few-objects-room-v1)
(:setup
  (forall (?y - ball)
    (and
      (game-optional
        (not
          (in_motion ?y)
        )
      )
      (and
        (forall (?i - dodgeball)
          (exists (?w - (either triangular_ramp desktop))
            (and
              (game-conserved
                (and
                  (agent_holds ?i)
                  (and
                    (and
                      (same_type ?w agent)
                      (not
                        (and
                          (and
                            (agent_holds ?y)
                          )
                          (and
                            (and
                              (adjacent ?y ?y)
                              (equal_x_position ?w ?y)
                              (and
                                (in_motion ?i)
                                (and
                                  (touch ?w ?i)
                                  (equal_x_position ?i ?y)
                                )
                              )
                              (agent_holds room_center)
                            )
                            (agent_holds ?i)
                          )
                          (adjacent ?y ?y)
                        )
                      )
                    )
                    (agent_holds ?i)
                    (not
                      (and
                        (in_motion ?w)
                        (on ?y agent)
                        (in_motion ?w)
                        (same_color ?y ?y)
                        (and
                          (not
                            (broken ?y)
                          )
                          (in ?y agent)
                        )
                        (game_over )
                        (and
                          (in_motion ?w)
                          (on ?i pink)
                        )
                        (and
                          (and
                            (not
                              (and
                                (toggled_on block)
                                (in_motion ?w)
                              )
                            )
                            (or
                              (agent_holds ?i)
                              (between ?y ?i ?i)
                            )
                          )
                          (and
                            (agent_holds ?i)
                            (in_motion ?i)
                            (in floor ?w)
                          )
                          (is_setup_object ?y)
                        )
                      )
                    )
                  )
                  (in ?i bed)
                )
              )
            )
          )
        )
        (exists (?e - block ?q - hexagonal_bin)
          (exists (?g - doggie_bed)
            (exists (?h - (either cd dodgeball) ?i - game_object)
              (and
                (or
                  (game-optional
                    (and
                      (in_motion ?q)
                      (and
                        (in ?y agent)
                        (not
                          (and
                            (touch ?q ?g)
                            (agent_holds ?y)
                            (agent_holds ?g)
                          )
                        )
                      )
                      (on ?q ?y)
                      (not
                        (not
                          (game_start )
                        )
                      )
                    )
                  )
                )
                (game-conserved
                  (and
                    (agent_holds bed)
                    (and
                      (and
                        (in ?g ?y)
                        (and
                          (and
                            (>= 0.5 1)
                            (not
                              (and
                                (not
                                  (not
                                    (on ?i pink_dodgeball)
                                  )
                                )
                                (not
                                  (not
                                    (not
                                      (agent_holds ?y)
                                    )
                                  )
                                )
                              )
                            )
                          )
                          (<= 1 (distance ?q ?q))
                          (in_motion desk)
                          (not
                            (equal_x_position desk ?i)
                          )
                          (touch ?q ?i)
                          (and
                            (agent_holds ?q)
                            (and
                              (not
                                (and
                                  (touch ?q ?i)
                                  (and
                                    (not
                                      (< 1 2)
                                    )
                                    (adjacent agent ?q)
                                  )
                                  (exists (?b - game_object ?v - (either dodgeball basketball))
                                    (agent_holds ?v)
                                  )
                                )
                              )
                              (in_motion ?y)
                            )
                          )
                          (touch ?g front)
                        )
                        (not
                          (rug_color_under ?y ?i)
                        )
                        (and
                          (agent_holds ?i)
                          (and
                            (not
                              (agent_holds desk)
                            )
                            (in_motion ?q)
                          )
                        )
                      )
                      (and
                        (in_motion green)
                        (agent_holds ?y)
                      )
                    )
                  )
                )
                (and
                  (forall (?h - dodgeball)
                    (game-conserved
                      (agent_holds ?g)
                    )
                  )
                )
              )
            )
          )
        )
      )
      (and
        (game-conserved
          (agent_holds ?y)
        )
        (forall (?v - (either rug game_object side_table) ?k - hexagonal_bin)
          (game-conserved
            (not
              (same_type ?k bed)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?f ?h ?x - (either chair lamp) ?o - teddy_bear ?z - hexagonal_bin ?d - hexagonal_bin)
        (then
          (once (on ?d ?d) )
          (once (<= (distance ?d agent) (distance ?d ?d)) )
          (hold (equal_x_position ?d ?d) )
        )
      )
    )
    (preference preference2
      (exists (?v - hexagonal_bin ?n - building)
        (then
          (once (agent_holds ?n) )
          (hold-while (in_motion agent) (< 1 0) )
          (hold (and (in_motion ?n) (in_motion ?n) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (- (* (count-same-positions preference2:dodgeball) 8 (- 5 4 ) (= (<= 30 (/ (* (count-once-per-objects preference1:dodgeball) 15 )
              (+ 3 18 (count preference2:dodgeball) )
            )
          )
          (count-once-per-external-objects preference1:hexagonal_bin)
        )
        300
        (count preference1:orange)
      )
    )
    (total-score)
  )
)
(:scoring
  (* 1 (total-score) )
)
)(define (game game-id-370) (:domain medium-objects-room-v1)
(:setup
  (not
    (forall (?p - cube_block ?u - game_object ?l - hexagonal_bin)
      (forall (?g - (either dodgeball side_table))
        (game-optional
          (agent_holds ?l)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?v - hexagonal_bin ?p - game_object)
        (then
          (once (in ?p ?p) )
          (once (in bed front) )
          (once (not (not (same_object ?p ?p) ) ) )
          (once (in_motion ?p) )
          (once (same_type ?p ?p) )
        )
      )
    )
    (preference preference2
      (exists (?j - dodgeball ?h - hexagonal_bin)
        (then
          (once (exists (?d - hexagonal_bin) (on ?h upside_down) ) )
          (once (touch agent ?h) )
          (once (in_motion ?h) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference2:dodgeball) (+ 5 )
  )
)
(:scoring
  (count-measure preference2:dodgeball)
)
)(define (game game-id-371) (:domain medium-objects-room-v1)
(:setup
  (exists (?y - teddy_bear)
    (forall (?j - dodgeball)
      (and
        (exists (?d - game_object ?t - dodgeball)
          (and
            (game-optional
              (in_motion ?t)
            )
          )
        )
        (game-conserved
          (not
            (not
              (agent_holds ?y)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?b - pyramid_block ?y - cube_block)
        (then
          (once (not (in_motion ?y) ) )
          (once (in_motion ?y) )
          (once (touch ?y room_center) )
        )
      )
    )
    (preference preference2
      (exists (?o - game_object ?m - chair)
        (then
          (once (and (agent_holds ?m) (not (opposite ?m ?m) ) ) )
          (once (and (and (in_motion ?m) (and (and (in_motion room_center) (<= (distance desk ?m) (distance ?m ?m)) (and (between ?m ?m ?m) (on ?m ?m) ) ) (in_motion upright) (agent_holds ?m) (on room_center agent) (agent_holds desk) (agent_holds ?m) ) (or (agent_holds ?m) (adjacent agent ?m) ) (in_motion ?m) ) (not (rug_color_under ?m ?m) ) ) )
          (once (and (agent_holds ?m) (on ?m ?m) ) )
        )
      )
    )
    (forall (?g - dodgeball ?b - game_object ?f - building)
      (and
        (preference preference3
          (exists (?z - block)
            (then
              (once (not (agent_crouches ) ) )
              (hold-while (and (in ?f ?f) (not (in_motion ?z) ) ) (and (< 1 (distance ?f bed)) (adjacent ?f agent) ) (on rug ?z) )
              (once (on ?f ?z) )
            )
          )
        )
        (preference preference4
          (exists (?i - sliding_door)
            (then
              (hold-while (agent_holds ?f) (< 1 1) )
              (once (agent_holds ?i) )
              (once (not (agent_holds desk) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 20 (count-overlapping preference2) )
)
(:scoring
  (count-once-per-external-objects preference1:pink)
)
)(define (game game-id-372) (:domain many-objects-room-v1)
(:setup
  (forall (?f - building)
    (game-conserved
      (equal_x_position ?f agent)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?b - game_object)
        (at-end
          (> 10 3)
        )
      )
    )
  )
)
(:terminal
  (>= (* (* (+ 5 (count preference1:dodgeball) )
        (total-score)
      )
      (count-once-per-objects preference1:golfball:beachball)
    )
    (>= (count preference1:basketball) (count preference1:dodgeball) )
  )
)
(:scoring
  3
)
)(define (game game-id-373) (:domain few-objects-room-v1)
(:setup
  (exists (?q - hexagonal_bin)
    (exists (?o - hexagonal_bin)
      (or
        (and
          (game-conserved
            (and
              (not
                (in_motion agent)
              )
              (same_type ?o ?o)
            )
          )
          (and
            (and
              (exists (?i ?f - (either cube_block pillow))
                (game-optional
                  (and
                    (in_motion ?i)
                    (in_motion sideways)
                    (not
                      (equal_z_position ?i ?i)
                    )
                  )
                )
              )
              (forall (?t ?j - ball ?m - dodgeball)
                (game-conserved
                  (and
                    (same_color desk ?o)
                    (on ?o upright)
                    (and
                      (not
                        (in_motion ?q)
                      )
                      (and
                        (same_color ?m ?m)
                        (agent_holds ball)
                      )
                      (in ?o ?m)
                    )
                    (on back desk)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?y - hexagonal_bin)
      (and
        (preference preference1
          (exists (?f - block)
            (then
              (once (agent_holds ?f) )
              (once (not (and (adjacent ?f ?y) (in ?y ?y) (and (in ?y ?y) (on ?f ?f) ) (in_motion ?y) ) ) )
              (hold-while (on bed sideways) (in_motion ?y) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference1:dodgeball) (= 10 (count preference1:purple) )
  )
)
(:scoring
  7
)
)(define (game game-id-374) (:domain medium-objects-room-v1)
(:setup
  (forall (?u - desk_shelf ?d - dodgeball)
    (game-conserved
      (and
        (not
          (agent_holds ?d)
        )
        (and
          (equal_x_position ?d ?d)
          (on ?d ?d)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?d - ball ?c - game_object)
        (then
          (once (> 1 (x_position ?c)) )
          (once (not (< (distance desk ?c) 1) ) )
          (once (in_motion ?c) )
        )
      )
    )
    (preference preference2
      (exists (?c - watch ?g ?q - dodgeball ?c ?v - hexagonal_bin)
        (then
          (once (rug_color_under ?v ?v) )
          (hold-while (faces ?v ?c) (and (on ?c ?v) (on bed ?c) ) )
          (once (in ?c block) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (total-time) (* (count preference1:hexagonal_bin) (- 3 )
          (count-once-per-objects preference2:top_drawer)
        )
      )
      (>= (* (count-once preference2:basketball) (count-same-positions preference1:dodgeball) )
        (count-once-per-objects preference2:golfball)
      )
    )
    (>= 10 (count preference1:yellow) )
    (>= (count-once-per-external-objects preference1:dodgeball) (* (count-once-per-objects preference2:yellow) (count preference1:doggie_bed) )
    )
  )
)
(:scoring
  (count-once-per-objects preference2:blue_dodgeball:pink_dodgeball:pink)
)
)(define (game game-id-375) (:domain many-objects-room-v1)
(:setup
  (exists (?s - doggie_bed ?u - block ?e - yellow_pyramid_block ?s - (either dodgeball triangle_block))
    (game-conserved
      (not
        (and
          (on ?s ?s)
          (and
            (agent_holds ?s)
            (agent_holds ?s)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference preference1
          (exists (?y - hexagonal_bin)
            (then
              (hold-to-end (in ?y ?y) )
              (hold (< (distance agent ?b) (distance ?y ?y)) )
              (hold-for 4 (agent_holds ?b) )
              (hold (on ?y ?y) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< (count-once-per-objects preference1:yellow_cube_block:basketball) (count preference1:wall) )
)
(:scoring
  (count-once-per-objects preference1:golfball)
)
)(define (game game-id-376) (:domain few-objects-room-v1)
(:setup
  (forall (?z - ball)
    (exists (?f - cube_block)
      (forall (?h - dodgeball)
        (and
          (and
            (and
              (exists (?o - (either tall_cylindrical_block cd))
                (and
                  (not
                    (exists (?m - dodgeball)
                      (exists (?v - curved_wooden_ramp)
                        (game-conserved
                          (forall (?w - cube_block ?p - dodgeball)
                            (in_motion tan)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
            (exists (?k - building)
              (game-conserved
                (and
                  (on bed ?z)
                  (in_motion bed)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?d - hexagonal_bin)
        (then
          (once (in_motion ?d) )
          (once (agent_holds ?d) )
          (hold-to-end (and (and (agent_holds ?d) (and (in_motion ?d) (agent_holds ?d) ) ) (not (exists (?n - dodgeball ?m - cube_block) (= 1 5) ) ) (or (agent_holds ?d) ) ) )
        )
      )
    )
    (preference preference2
      (exists (?c - doggie_bed)
        (then
          (once (not (not (and (agent_holds ?c) (and (or (in_motion ?c) (in_motion ?c) ) (not (in_motion ?c) ) ) (and (agent_holds upright) (not (in_motion ?c) ) ) (not (on ?c bed) ) ) ) ) )
          (hold (adjacent ?c desk) )
          (once (agent_holds ?c) )
        )
      )
    )
  )
)
(:terminal
  (>= 1 (count-once-per-objects preference1:yellow) )
)
(:scoring
  (count-once-per-objects preference1:wall:dodgeball)
)
)(define (game game-id-377) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (exists (?j - hexagonal_bin)
      (and
        (on ?j tan)
        (agent_holds bed)
      )
    )
  )
)
(:constraints
  (and
    (forall (?e - beachball)
      (and
        (preference preference1
          (exists (?t ?c - shelf ?p - cube_block)
            (then
              (hold (in_motion ?e) )
              (once (faces ?p ?e) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (> (+ 2 (* (count preference1:golfball) (count-once-per-external-objects preference1:dodgeball) )
      )
      (count preference1:doggie_bed)
    )
    (or
      (= (external-forall-maximize (* 4 10 )
        )
        (external-forall-maximize
          20
        )
      )
      (>= (total-time) (* (count-once-per-objects preference1:dodgeball) (* 1 18 )
        )
      )
    )
    (< (+ 1 (- (* (count-once preference1:basketball:book) )
        )
      )
      (* (count-once-per-objects preference1:golfball) (* (count-once-per-external-objects preference1:beachball) (* (- (* (* (+ (* (count-once-per-objects preference1:beachball) (count-once-per-objects preference1:beachball:book) (external-forall-maximize (- (- 1 (count preference1:dodgeball:basketball:red) ) (count-same-positions preference1:dodgeball:blue_dodgeball) ) ) )
                    (count-once-per-objects preference1:dodgeball)
                  )
                  (count preference1:book)
                  (count preference1:golfball)
                  (count-once-per-external-objects preference1:beachball)
                  (+ 3 (* (count-once-per-external-objects preference1:dodgeball) (count preference1:blue_dodgeball:basketball:dodgeball) )
                    10
                    (count preference1:dodgeball)
                    (* (* (+ (+ (count-shortest preference1:beachball:red) (count-once-per-objects preference1:basketball) )
                          (count preference1:pink_dodgeball)
                        )
                        2
                      )
                      (count preference1:yellow:basketball)
                    )
                    (count-shortest preference1:pink:pink_dodgeball)
                  )
                  (count preference1:dodgeball)
                  (count preference1:dodgeball)
                )
                1
              )
            )
            (total-score)
          )
        )
        (- (* 7 10 )
        )
      )
    )
  )
)
(:scoring
  (count-once-per-objects preference1:bed:red)
)
)(define (game game-id-378) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-optional
      (game_start )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?j - hexagonal_bin)
        (then
          (hold (on upright ?j) )
          (once (in_motion ?j) )
          (once (< (distance ?j bed) 2) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-shortest preference1:pink_dodgeball) 5 )
  )
)
(:scoring
  (* (count preference1:blue_dodgeball) (not 10 ) )
)
)(define (game game-id-379) (:domain many-objects-room-v1)
(:setup
  (forall (?o - (either doggie_bed))
    (exists (?w - ball)
      (game-conserved
        (not
          (in_motion door)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?q - shelf)
      (and
        (preference preference1
          (exists (?m - (either bed cylindrical_block) ?z ?b ?i ?h - chair)
            (at-end
              (and
                (and
                  (not
                    (not
                      (in_motion upright)
                    )
                  )
                  (agent_holds desk)
                )
                (equal_z_position desk ?b)
              )
            )
          )
        )
        (preference preference2
          (exists (?n - hexagonal_bin)
            (then
              (once (in_motion ?n) )
              (once (in_motion ?n) )
              (hold (agent_holds upright) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?b - hexagonal_bin)
        (then
          (once (in_motion ?b) )
          (once (in_motion room_center) )
          (once (and (not (agent_holds ?b) ) (on ?b block) (touch ?b ?b) (in_motion ?b) (game_over ) (in agent door) (not (agent_holds ?b) ) (or (not (in_motion ?b) ) (not (in_motion ?b) ) ) (exists (?s - shelf) (not (not (agent_holds floor) ) ) ) (not (< (distance ?b ?b) (distance_side desk ?b ?b south_wall)) ) (is_setup_object floor) (in_motion ?b) ) )
        )
      )
    )
    (preference preference4
      (exists (?x - block ?f - red_dodgeball)
        (then
          (hold (and (on ?f ?f) (not (in desk ?f) ) ) )
          (hold (on ?f ?f) )
          (once (and (not (not (in_motion ?f) ) ) ) )
        )
      )
    )
    (preference preference5
      (exists (?b - chair ?s - shelf)
        (then
          (once (and (adjacent ?s floor) (adjacent_side bed bed ?s ?s) ) )
          (once (is_setup_object ?s) )
          (once (exists (?y - doggie_bed) (on ?s ?y) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference4:dodgeball:yellow) (external-forall-maximize (count preference1:yellow) ) )
)
(:scoring
  (+ (count preference4:pyramid_block:basketball) (count preference3:yellow) (external-forall-minimize (external-forall-maximize 5 ) ) (+ (+ 2 (count preference1:basketball:dodgeball) )
      (total-score)
    )
    (= (count preference2:golfball) (= (count preference3:triangle_block) 20 )
    )
    (count preference3:beachball)
  )
)
)(define (game game-id-380) (:domain few-objects-room-v1)
(:setup
  (exists (?a - hexagonal_bin)
    (game-conserved
      (adjacent ?a ?a)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?v - cube_block)
        (at-end
          (not
            (touch ?v ?v)
          )
        )
      )
    )
    (preference preference2
      (exists (?o - hexagonal_bin)
        (then
          (once (adjacent ?o ?o) )
          (hold-while (equal_z_position ?o ?o) (and (on ?o ?o) (and (equal_z_position ?o ?o) ) ) (in_motion ?o) (and (and (touch agent bed) (not (or (adjacent agent desk) (in desktop agent) (and (on ?o ?o) (game_start ) ) ) ) ) (agent_holds ?o) ) )
          (hold-for 0 (in_motion desk) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 5 )
)
(:scoring
  15
)
)(define (game game-id-381) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-conserved
      (< 1 6)
    )
    (or
      (game-conserved
        (agent_holds blue)
      )
      (exists (?c - drawer)
        (and
          (game-optional
            (or
              (object_orientation ?c desk)
              (on ?c rug)
            )
          )
          (and
            (game-conserved
              (in_motion ?c)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?s - ball)
        (at-end
          (in_motion ?s)
        )
      )
    )
  )
)
(:terminal
  (>= 10 (count-once-per-objects preference1:blue_dodgeball) )
)
(:scoring
  4
)
)(define (game game-id-382) (:domain few-objects-room-v1)
(:setup
  (forall (?e - building)
    (and
      (game-optional
        (not
          (<= (distance bed bed) (distance ?e ?e))
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?l - cube_block ?w - curved_wooden_ramp)
      (and
        (preference preference1
          (exists (?f ?m - block ?o - pillow ?t - golfball)
            (at-end
              (agent_holds ?w)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:blue_dodgeball) (count preference1:pink) )
)
(:scoring
  2
)
)(define (game game-id-383) (:domain many-objects-room-v1)
(:setup
  (exists (?e - (either cd key_chain pencil))
    (game-optional
      (and
        (in_motion ?e)
      )
    )
  )
)
(:constraints
  (and
    (forall (?x - dodgeball)
      (and
        (preference preference1
          (exists (?k - hexagonal_bin)
            (then
              (once (on ?k ?k) )
              (hold (not (in ?x agent) ) )
              (once (and (in_motion ?k) (and (agent_holds ?k) (in_motion floor) ) ) )
            )
          )
        )
        (preference preference2
          (exists (?p - (either alarm_clock cd) ?b ?y ?k - game_object)
            (then
              (hold (and (touch floor ?y) ) )
              (hold-while (in_motion front) (and (in ?k ?k) (not (faces ?b ?b) ) ) (not (and (in_motion ?b) (or (in_motion ?k) (and (agent_holds desk) (or (on ?x ?b) (agent_holds ?b) (in_motion agent) (agent_holds ?y) ) ) ) ) ) (and (on ?x ?k) (adjacent ?k ?b) ) )
              (once (in_motion agent) )
              (once (on floor ?k) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count preference1:hexagonal_bin:yellow) (count-total preference1:beachball) )
  )
)
(:scoring
  (* 2 (count preference1:basketball) )
)
)(define (game game-id-384) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (in_motion agent)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?r - wall)
        (at-end
          (agent_holds ?r)
        )
      )
    )
    (preference preference2
      (exists (?g - pillow)
        (then
          (once (and (in_motion rug) (and (on ?g desk) (in_motion ?g) ) ) )
        )
      )
    )
    (forall (?q - block ?u - cube_block ?t - dodgeball)
      (and
        (preference preference3
          (exists (?c - yellow_pyramid_block)
            (then
              (hold-while (agent_holds ?c) (and (agent_holds ?c) (or (< 2 6) (in_motion ?c) ) ) )
              (once (and (and (game_over ) (< 1 1) (or (agent_holds ?t) (agent_holds ?c) ) ) (and (agent_holds ?c) (and (and (and (not (agent_holds ?t) ) (touch ?t ?c) ) (exists (?k - hexagonal_bin ?z - chair ?s - hexagonal_bin ?a ?m - pyramid_block) (not (agent_holds ?t) ) ) ) (not (forall (?z - teddy_bear) (agent_holds ?c) ) ) ) ) ) )
              (hold-while (and (on ?c ?c) (in_motion ?c) ) (adjacent ?c ?t) (agent_holds ?c) )
            )
          )
        )
      )
    )
    (preference preference4
      (exists (?p - (either mug cylindrical_block) ?g - hexagonal_bin ?q - doggie_bed)
        (then
          (once (in_motion ?q) )
          (once (agent_holds ?q) )
          (once (in ?q ?q) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference1:bed:dodgeball) (count preference2:beachball) )
)
(:scoring
  (* (count preference4:beachball:blue) )
)
)(define (game game-id-385) (:domain medium-objects-room-v1)
(:setup
  (forall (?x - red_dodgeball ?p - hexagonal_bin)
    (forall (?s - wall)
      (and
        (exists (?t - yellow_pyramid_block)
          (forall (?l - (either pillow dodgeball))
            (and
              (game-conserved
                (and
                  (agent_crouches )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?u - cube_block ?m - doggie_bed)
        (then
          (once (not (agent_holds ?m) ) )
          (hold (and (> (distance_side ?m ?m ?m) 6) (in ?m ?m) ) )
          (hold (not (> (distance brown ?m) 1) ) )
        )
      )
    )
  )
)
(:terminal
  (> (+ (total-score) (+ (or (count-once-per-objects preference1) 2 (count preference1:pink_dodgeball) ) 6 (count preference1:beachball) 7 (+ (count-once-per-objects preference1:pink_dodgeball) (* (external-forall-maximize (* 20 (= (* (count preference1:pink) (and 2 4 ) )
                  6
                )
              )
            )
            (count preference1:beachball)
          )
        )
        (count-once-per-objects preference1:yellow_pyramid_block:pink)
      )
      (* (count-once-per-objects preference1:golfball:rug) (count preference1:pink_dodgeball) )
    )
    (- 30 )
  )
)
(:scoring
  (count-once-per-objects preference1:pyramid_block)
)
)(define (game game-id-386) (:domain many-objects-room-v1)
(:setup
  (forall (?w - hexagonal_bin)
    (game-optional
      (not
        (not
          (touch ?w ?w)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?w - pyramid_block ?b - dodgeball)
        (then
          (once (on room_center ?b) )
          (once (in_motion ?b) )
          (hold-while (in_motion ?b) (agent_crouches ) )
        )
      )
    )
    (preference preference2
      (exists (?q - dodgeball)
        (then
          (once (and (in_motion ?q) (not (broken ?q) ) ) )
          (hold-while (on ?q ?q) (and (not (and (not (not (in_motion ?q) ) ) (and (and (not (and (rug_color_under floor room_center) (on ?q floor) ) ) (and (rug_color_under ?q ?q) (agent_holds ?q) ) (exists (?f - (either hexagonal_bin yellow_cube_block)) (agent_holds ?f) ) (not (in_motion ?q) ) (touch ?q ?q) ) (same_color ?q ?q) ) (in_motion ?q) (on ?q bed) ) ) (in_motion bed) ) )
          (once (not (same_color ?q ?q) ) )
        )
      )
    )
    (preference preference3
      (exists (?q - dodgeball)
        (then
          (once (agent_holds ?q) )
          (once (rug_color_under ?q ?q) )
          (once (not (and (and (not (not (on ?q ?q) ) ) (agent_holds ?q) ) (between ?q ?q ?q) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 5 5 )
)
(:scoring
  (= (count-once-per-external-objects preference1:dodgeball:yellow) )
)
)(define (game game-id-387) (:domain medium-objects-room-v1)
(:setup
  (exists (?s ?r - (either dodgeball laptop))
    (exists (?n ?c - game_object ?q - (either pillow pink bridge_block red pillow tall_cylindrical_block desktop) ?t ?i ?v - doggie_bed)
      (game-optional
        (on ?r ?v)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?q - block)
        (then
          (hold (> (distance ?q ?q) 2) )
          (once (agent_holds ?q) )
          (hold (and (faces ?q ?q) (on ?q ?q) ) )
        )
      )
    )
    (preference preference2
      (exists (?v - dodgeball)
        (then
          (once (in_motion ?v) )
          (once (< (distance ?v ?v) 1) )
          (hold-while (and (in ?v ?v) ) (in_motion room_center) )
          (once (and (on ?v ?v) (in_motion ?v) ) )
        )
      )
    )
  )
)
(:terminal
  (= (count-overlapping preference1:yellow:basketball) (< (count preference1:green) (external-forall-maximize 10 ) )
  )
)
(:scoring
  (count preference2:blue_dodgeball)
)
)(define (game game-id-388) (:domain few-objects-room-v1)
(:setup
  (exists (?c - building)
    (and
      (and
        (game-optional
          (on room_center agent)
        )
        (game-conserved
          (in_motion ?c)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?v - hexagonal_bin ?e - (either golfball golfball) ?i - hexagonal_bin ?t - drawer)
        (then
          (hold-while (not (agent_holds ?t) ) (not (agent_holds ?t) ) )
          (once (agent_holds floor) )
          (once (in main_light_switch ?t) )
          (once (agent_holds ?t) )
          (once (same_type ?t desk) )
        )
      )
    )
    (preference preference2
      (exists (?t - hexagonal_bin)
        (then
          (hold (in_motion ?t) )
          (forall-sequence (?f - ball)
            (then
              (hold (not (= (distance agent ?t) 2) ) )
              (once (on desk ?f) )
            )
          )
          (once (same_type ?t agent) )
        )
      )
    )
    (preference preference3
      (exists (?s - game_object ?b - block ?p - doggie_bed)
        (then
          (once (> (distance ?p ?p) (distance ?p ?p)) )
          (once (and (on agent agent) (agent_holds ?p) ) )
          (once (agent_holds ?p) )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (* (count-once-per-objects preference1:golfball) (count-once-per-objects preference3:pyramid_block) (total-score) )
  )
)
(:scoring
  100
)
)(define (game game-id-389) (:domain many-objects-room-v1)
(:setup
  (exists (?e - cube_block)
    (game-conserved
      (in_motion ?e)
    )
  )
)
(:constraints
  (and
    (forall (?x - (either wall pink laptop cd bridge_block pyramid_block alarm_clock) ?k - shelf)
      (and
        (preference preference1
          (exists (?r - ball ?w - pillow)
            (at-end
              (not
                (< 3 (distance ?k floor))
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (count preference1:blue_dodgeball:blue_cube_block) 7 )
)
(:scoring
  (external-forall-maximize
    (external-forall-maximize
      (count preference1)
    )
  )
)
)(define (game game-id-390) (:domain few-objects-room-v1)
(:setup
  (exists (?v - hexagonal_bin)
    (or
      (and
        (and
          (and
            (and
              (and
                (game-optional
                  (in_motion desk)
                )
                (game-conserved
                  (adjacent agent pink)
                )
                (and
                  (and
                    (forall (?n - ball)
                      (exists (?w - chair)
                        (and
                          (exists (?b - shelf ?m - block)
                            (forall (?e - (either rug dodgeball teddy_bear yellow))
                              (game-conserved
                                (agent_holds ?v)
                              )
                            )
                          )
                          (game-optional
                            (agent_holds ?v)
                          )
                        )
                      )
                    )
                  )
                  (game-conserved
                    (agent_holds agent)
                  )
                )
              )
              (game-conserved
                (not
                  (agent_holds ?v)
                )
              )
              (exists (?a - building ?d - cube_block)
                (exists (?g - blinds)
                  (game-optional
                    (in ?v ?v)
                  )
                )
              )
            )
          )
        )
      )
      (game-conserved
        (and
          (and
            (in_motion ?v)
          )
          (in ?v ?v)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?s - dodgeball)
      (and
        (preference preference1
          (then
            (once (adjacent ?s ?s) )
            (once (not (exists (?p - pyramid_block) (agent_holds ?p) ) ) )
            (once (and (and (in ?s ?s) (and (agent_holds ?s) (and (and (not (on ?s ?s) ) (agent_holds ?s) ) (and (in_motion pink_dodgeball) (not (and (not (exists (?t - game_object) (on ?s ?s) ) ) (in_motion ?s) ) ) ) ) ) ) (and (and (and (on ?s ?s) (faces agent ?s) ) (not (< (distance agent ?s) 1) ) ) (and (and (agent_holds front) (equal_x_position ?s ?s) ) (in_motion brown) ) ) ) )
          )
        )
      )
    )
    (preference preference2
      (exists (?g - hexagonal_bin)
        (then
          (once (in ?g ?g) )
          (hold-while (in pink_dodgeball ?g) (not (not (not (agent_holds ?g) ) ) ) )
          (once (or (same_type ?g ?g) (and (on ?g ?g) (in_motion floor) ) ) )
        )
      )
    )
    (preference preference3
      (exists (?o ?f - wall)
        (then
          (once (agent_holds agent) )
          (once (not (adjacent_side floor ?f agent ?f) ) )
          (once (and (in_motion ?o) (agent_holds ?f) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 4 (count-once-per-objects preference2:orange:basketball) )
    (>= (* (+ (count preference3:doggie_bed) (count-total preference3:beachball:green) (+ 3 2 )
        )
        3
      )
      300
    )
  )
)
(:scoring
  10
)
)(define (game game-id-391) (:domain medium-objects-room-v1)
(:setup
  (forall (?s - ball)
    (and
      (exists (?i - dodgeball)
        (game-conserved
          (not
            (agent_holds desk)
          )
        )
      )
      (game-conserved
        (agent_holds ?s)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?n - red_dodgeball)
        (then
          (hold (in ?n ?n) )
          (hold (on ?n ?n) )
          (once (and (opposite ?n ?n) (in_motion ?n) (and (or (agent_holds ?n) (on yellow ?n) ) (adjacent_side ?n ?n ?n) (not (not (and (and (and (on ?n ?n) (agent_holds ?n) ) (in ?n ?n) ) (agent_holds ?n) ) ) ) (agent_holds ?n) ) ) )
        )
      )
    )
    (preference preference2
      (exists (?g - cube_block ?r - cube_block ?a - dodgeball)
        (at-end
          (exists (?z - hexagonal_bin)
            (and
              (object_orientation ?a ?z)
              (agent_holds ?a)
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?k - triangular_ramp)
        (at-end
          (= 2 6 0.5)
        )
      )
    )
  )
)
(:terminal
  (>= (* (* (count-once-per-objects preference3:cylindrical_block) (* 1 (count-once-per-objects preference2:dodgeball:dodgeball) )
        (count preference3:blue_pyramid_block)
      )
      (count-once-per-objects preference1:book)
      3
      (* (not (count-same-positions preference2:basketball:basketball) ) (+ 3 (* (total-time) )
          3
          (count preference3:green)
          (-
            6
            (count preference2:block)
          )
          (count-once-per-objects preference1:pink_dodgeball)
        )
      )
      10
      (* (count-unique-positions preference3:basketball) (* (count-once-per-objects preference1:book) (count preference2:dodgeball) )
      )
    )
    (+ 3 (+ 2 (* 15 (* (+ (count-once-per-objects preference3:hexagonal_bin) (count preference1:blue_dodgeball) )
            (count-once-per-objects preference2:yellow:golfball)
          )
        )
      )
    )
  )
)
(:scoring
  2
)
)(define (game game-id-392) (:domain few-objects-room-v1)
(:setup
  (forall (?k - building)
    (exists (?f - block)
      (exists (?u - hexagonal_bin)
        (exists (?b - ball)
          (and
            (game-optional
              (in rug ?f)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?i ?a - (either cylindrical_block golfball))
        (then
          (once (on ?a ?a) )
          (hold (not (opposite ?a ?a) ) )
          (once (adjacent_side ?a ?i room_center) )
        )
      )
    )
    (preference preference2
      (exists (?j - triangular_ramp)
        (then
          (hold (same_object ?j ?j) )
          (once (on ?j front) )
          (once (object_orientation ?j ?j) )
          (once (in_motion ?j) )
        )
      )
    )
    (forall (?c - (either laptop dodgeball main_light_switch) ?m - ball)
      (and
        (preference preference3
          (exists (?p - hexagonal_bin)
            (then
              (once (on ?p ?m) )
              (once (in_motion ?m) )
              (hold (not (touch ?p bed) ) )
            )
          )
        )
        (preference preference4
          (exists (?x - hexagonal_bin)
            (then
              (once (in_motion ?m) )
              (hold (and (in ?x rug) (and (in_motion agent) (and (and (and (not (adjacent ?x ?m) ) (opposite ?m ?x) ) (and (toggled_on ?x) (and (agent_holds ?x) (same_color pink_dodgeball ?m) (same_type ?m ?m) ) ) (in ?m blue) (broken ?x) ) (agent_holds ?m) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (count-total preference4:pink_dodgeball) )
)
(:scoring
  6
)
)(define (game game-id-393) (:domain few-objects-room-v1)
(:setup
  (forall (?t - hexagonal_bin ?s ?x - hexagonal_bin ?d - dodgeball)
    (and
      (forall (?z - (either book dodgeball))
        (and
          (and
            (and
              (forall (?u - block ?y - hexagonal_bin ?q - pillow)
                (and
                  (game-conserved
                    (not
                      (agent_holds ?q)
                    )
                  )
                  (and
                    (game-conserved
                      (< 7 (distance bed ?d))
                    )
                  )
                )
              )
            )
            (and
              (and
                (exists (?t - rug ?y - building ?v - dodgeball)
                  (and
                    (game-conserved
                      (agent_holds agent)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?d - ball ?u ?e - hexagonal_bin)
        (at-end
          (not
            (above ?u ?u)
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (or
        (>= 3 2 )
        (>= (* (count preference1:basketball) 40 )
          (* (+ (+ (* (count-measure preference1:yellow:beachball) 6 )
                (count preference1:pink)
              )
              (* (count preference1:blue_dodgeball) (+ (count preference1:yellow) 2 (= (* (* (- (count-once preference1:pink_dodgeball:yellow) )
                        5
                        10
                        (- (count preference1:green) )
                        (+ (- (and (count preference1:purple:blue_dodgeball:blue_pyramid_block) (* (* (count-once-per-objects preference1:red) (- (count-once-per-external-objects preference1:red) )
                                  (count-once preference1:yellow:book)
                                )
                                2
                              )
                              (- (count-once-per-objects preference1:dodgeball:blue_dodgeball) )
                            )
                          )
                          (- (+ (+ (count preference1:dodgeball:pink) 4 )
                              (and
                                (+ (count preference1:blue_dodgeball) 4 (+ 50 (count preference1:beachball) )
                                )
                              )
                            )
                          )
                        )
                        (count-once preference1:green)
                        (count-once-per-objects preference1:yellow)
                        (* 6 (* (count-once-per-objects preference1:yellow) (+ 10 (count-once-per-objects preference1:pink) (count preference1:red) (count-once preference1:yellow) (* (count preference1:beachball:dodgeball) )
                              (* (count-once preference1:dodgeball) (total-score) )
                            )
                          )
                        )
                        10
                      )
                      6
                      (= (* (count preference1:beachball) (* 9 (* (count-once-per-objects preference1:pyramid_block) (- (count-once-per-objects preference1:dodgeball) )
                            )
                          )
                        )
                        0
                      )
                    )
                    1
                  )
                )
              )
            )
            (count-once-per-external-objects preference1:doggie_bed)
          )
        )
      )
      (>= (count-once preference1:beachball) (count preference1:golfball:dodgeball) )
      (>= (+ (count preference1:pink) (count preference1:bed:wall) (* 3 3 )
          (+ 3 (- (count-overlapping preference1:basketball:golfball) )
          )
          (* (count preference1:dodgeball) (count preference1:basketball) )
          10
        )
        3
      )
    )
  )
)
(:scoring
  (count-total preference1:basketball)
)
)(define (game game-id-394) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?e - cube_block)
      (and
        (game-conserved
          (in_motion ?e)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?f - game_object)
        (then
          (once (not (agent_holds ?f) ) )
          (hold (in ?f ?f) )
          (hold (in_motion ?f) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-overlapping preference1:dodgeball:blue_dodgeball) (+ 2 (count preference1:beachball) )
  )
)
(:scoring
  (count preference1:dodgeball)
)
)(define (game game-id-395) (:domain few-objects-room-v1)
(:setup
  (exists (?u - (either dodgeball hexagonal_bin golfball) ?w - hexagonal_bin)
    (game-conserved
      (touch ?w ?w)
    )
  )
)
(:constraints
  (and
    (forall (?r - (either floor cd cd))
      (and
        (preference preference1
          (exists (?o - teddy_bear)
            (then
              (once (not (in_motion bed) ) )
              (hold-for 3 (not (not (in ?r bed) ) ) )
              (once (agent_holds ?r) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* 6 )
    (count preference1:red:beachball)
  )
)
(:scoring
  (+ 15 (+ 2 20 )
  )
)
)(define (game game-id-396) (:domain medium-objects-room-v1)
(:setup
  (exists (?z - flat_block ?g - beachball)
    (and
      (game-optional
        (on ?g ?g)
      )
      (game-optional
        (not
          (< (distance ?g ?g) 1)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - ball ?q - ball)
      (and
        (preference preference1
          (exists (?i - game_object)
            (then
              (once (on ?q ?i) )
              (hold (rug_color_under ?i ?q) )
              (once (and (agent_holds ?q) (touch ?i ?i) ) )
              (hold (exists (?v - curved_wooden_ramp) (in_motion agent) ) )
              (once (and (not (agent_holds ?q) ) (in ?i ?q) ) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?u - drawer)
        (at-end
          (not
            (exists (?h - dodgeball ?c ?q ?h ?a ?b ?k - hexagonal_bin ?e - game_object)
              (in ?u bed)
            )
          )
        )
      )
    )
    (forall (?x - dodgeball ?a - hexagonal_bin)
      (and
        (preference preference3
          (exists (?n - game_object)
            (at-end
              (not
                (not
                  (in ?n ?n)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 6 (* (* (* (count-once-per-objects preference1:red:dodgeball) 20 )
        (or
          0
          (* (or (- 3 )
              3
            )
            4
          )
          300
        )
      )
      (count preference1:pink)
    )
  )
)
(:scoring
  6
)
)(define (game game-id-397) (:domain medium-objects-room-v1)
(:setup
  (exists (?b ?q - hexagonal_bin)
    (not
      (game-conserved
        (adjacent ?q ?b)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?n - hexagonal_bin)
        (then
          (once (not (adjacent ?n ?n) ) )
          (hold-to-end (in_motion ?n) )
          (once (and (and (on ?n ?n) (exists (?d - wall) (and (and (opposite ?n ?d) (not (open ?d) ) (agent_holds ?d) ) (forall (?j - building) (and (not (equal_z_position ?n ?d) ) (agent_holds ?j) ) ) (agent_holds ?n) ) ) ) (agent_holds ?n) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (< 10 (+ (* (* (+ (count-once-per-objects preference1:yellow:pink) (count-shortest preference1:pink_dodgeball:cube_block) (count preference1:basketball:dodgeball) )
            (* 5 (count-once preference1:basketball) )
          )
          (total-time)
        )
        5
      )
    )
    (>= (* (* (count-once-per-external-objects preference1:dodgeball:dodgeball) 2 )
        (count preference1:yellow)
      )
      (+ (count preference1:doggie_bed) 1 )
    )
  )
)
(:scoring
  (<= (< 2 3 )
    (external-forall-minimize
      (* (* (+ (count preference1:golfball) (count-once-per-objects preference1:dodgeball) )
          5
        )
        (count-once preference1:dodgeball:basketball)
        (* (not (* 10 2 )
          )
          (* 30 1 (count preference1:blue_pyramid_block) )
        )
        12
        (count preference1:blue_dodgeball)
        (count preference1:basketball:dodgeball:dodgeball)
      )
    )
  )
)
)(define (game game-id-398) (:domain medium-objects-room-v1)
(:setup
  (forall (?s - hexagonal_bin)
    (or
      (exists (?z - (either game_object basketball golfball) ?x ?b ?l ?c ?d ?z ?g ?i ?v ?e - yellow_cube_block)
        (and
          (game-conserved
            (agent_holds agent)
          )
        )
      )
      (and
        (exists (?f ?n - dodgeball)
          (and
            (and
              (game-optional
                (and
                  (adjacent_side ?s ?f agent)
                  (and
                    (and
                      (and
                        (on ?f ?n)
                        (agent_holds ?f)
                        (and
                          (in_motion agent)
                          (or
                            (not
                              (and
                                (not
                                  (not
                                    (forall (?z - doggie_bed)
                                      (not
                                        (agent_holds desk)
                                      )
                                    )
                                  )
                                )
                                (in ?n ?f)
                                (in_motion ?s)
                              )
                            )
                            (in_motion ?n)
                          )
                        )
                        (not
                          (in_motion ?s)
                        )
                      )
                      (exists (?q - game_object ?a ?k - (either golfball pen dodgeball) ?a ?o ?u - hexagonal_bin)
                        (agent_holds ?u)
                      )
                      (on desk ?f)
                    )
                    (not
                      (not
                        (equal_x_position ?f ?f)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?v - dodgeball ?m - dodgeball ?f - teddy_bear)
        (at-end
          (in_motion ?f)
        )
      )
    )
  )
)
(:terminal
  (>= (* (count preference1:pink) (count preference1:beachball) )
    (not
      3
    )
  )
)
(:scoring
  (count-once-per-objects preference1:basketball)
)
)(define (game game-id-399) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (exists (?l ?n - hexagonal_bin)
        (forall (?m - dodgeball)
          (exists (?g ?y ?f - (either yellow_cube_block dodgeball))
            (forall (?u - (either dodgeball basketball))
              (forall (?d - hexagonal_bin)
                (exists (?w - bridge_block)
                  (game-conserved
                    (in ?w ?l)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?y - building ?f - wall)
      (and
        (preference preference1
          (exists (?h - (either cellphone cd pillow))
            (then
              (hold-while (and (in ?f ?f) (not (not (agent_holds ?f) ) ) ) (or (in_motion ?f) (touch desk ?h) ) )
              (once (not (and (touch ?f ?h) (agent_holds ?h) ) ) )
              (once (and (in agent ?h) (agent_holds room_center) ) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?e - curved_wooden_ramp)
        (then
          (once (toggled_on ?e) )
          (once (touch ?e ?e) )
          (hold (in desktop ?e) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 0 15 )
    (= 15 (count preference2:basketball) )
  )
)
(:scoring
  (count preference2)
)
)(define (game game-id-400) (:domain few-objects-room-v1)
(:setup
  (exists (?h - dodgeball ?q - hexagonal_bin)
    (and
      (game-conserved
        (not
          (agent_holds ?q)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?x - golfball)
      (and
        (preference preference1
          (exists (?l - dodgeball ?e - golfball)
            (then
              (once (not (and (not (on side_table pillow) ) (agent_holds ?x) ) ) )
              (once (and (equal_z_position ?e ?x) (opposite agent ?e) ) )
              (once (or (and (agent_holds agent) (agent_holds ?e) (in_motion ?x) ) (in ?e ?x) (faces ?x agent) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-same-positions preference1:dodgeball) (count preference1:golfball) )
)
(:scoring
  6
)
)(define (game game-id-401) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?d - hexagonal_bin)
      (exists (?f - desktop)
        (exists (?t - (either cube_block yellow_cube_block))
          (game-conserved
            (in desk ?d)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?c - hexagonal_bin)
        (then
          (once (touch ?c ?c) )
          (once (not (and (and (< (distance ?c desk) 1) (in_motion ?c) ) (in_motion ?c) (and (not (in_motion ?c) ) (on agent ?c) ) ) ) )
          (once (is_setup_object ?c) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 3 (* 4 (count-once-per-objects preference1:dodgeball:pink) )
    )
    (and
      (>= (not (count-once-per-objects preference1:blue_dodgeball) ) (or 10 2 ) )
      (>= (+ 10 (count-once-per-objects preference1:top_drawer:pink) )
        (count-once-per-objects preference1:dodgeball:dodgeball:orange)
      )
    )
  )
)
(:scoring
  (* (total-time) (count preference1:golfball:dodgeball) (count-shortest preference1:doggie_bed) )
)
)(define (game game-id-402) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?s - (either cd dodgeball) ?m - chair)
      (and
        (and
          (and
            (game-optional
              (agent_holds ?m)
            )
          )
          (game-optional
            (and
              (not
                (not
                  (on ?m ?m)
                )
              )
              (agent_crouches )
            )
          )
        )
        (game-optional
          (on south_west_corner ?m)
        )
        (game-conserved
          (agent_holds ?m)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?j - block)
      (and
        (preference preference1
          (exists (?u - doggie_bed)
            (then
              (once (and (agent_holds ?j) (agent_holds ?j) ) )
              (hold (in_motion ?u) )
              (once (in_motion ?j) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (* (count preference1:beachball) (count preference1:dodgeball:blue_dodgeball:pyramid_block) )
      (external-forall-maximize
        (count preference1)
      )
    )
    (* 5 100 )
  )
)
(:scoring
  (total-time)
)
)(define (game game-id-403) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?y - (either watch dodgeball dodgeball) ?k - (either pillow bridge_block) ?b - cube_block)
      (forall (?p - game_object)
        (not
          (forall (?s - (either dodgeball blue_cube_block))
            (game-conserved
              (and
                (in_motion ?b)
                (and
                  (agent_holds ?s)
                  (and
                    (in_motion ?p)
                    (adjacent ?b ?s)
                  )
                  (agent_holds ?s)
                )
              )
            )
          )
        )
      )
    )
    (and
      (not
        (forall (?z - game_object ?p - ball)
          (forall (?z - (either cellphone doggie_bed golfball desktop beachball golfball cube_block))
            (and
              (and
                (and
                  (game-optional
                    (and
                      (and
                        (not
                          (agent_holds ?z)
                        )
                        (exists (?g - block)
                          (object_orientation ?z ?z)
                        )
                      )
                      (not
                        (or
                          (in ?z ?p)
                          (in_motion ?p)
                        )
                      )
                      (in_motion ?p)
                      (touch ?z ?z)
                      (agent_holds ?p)
                      (rug_color_under ?z ?p)
                      (> (distance desk ?z) (x_position door))
                    )
                  )
                  (and
                    (game-optional
                      (and
                        (not
                          (agent_holds floor)
                        )
                        (same_type ?p ?z)
                      )
                    )
                    (and
                      (not
                        (exists (?l - dodgeball ?w - hexagonal_bin)
                          (exists (?o ?n ?a ?e ?y ?j - hexagonal_bin)
                            (and
                              (and
                                (game-conserved
                                  (not
                                    (not
                                      (and
                                        (same_color ?z ?y)
                                        (agent_holds bed)
                                      )
                                    )
                                  )
                                )
                                (or
                                  (or
                                    (exists (?g - (either cd) ?g - ball)
                                      (game-conserved
                                        (agent_holds ?a)
                                      )
                                    )
                                  )
                                )
                                (forall (?c - hexagonal_bin)
                                  (game-conserved
                                    (in_motion front)
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                  (forall (?j - ball)
                    (and
                      (or
                        (and
                          (and
                            (game-conserved
                              (not
                                (or
                                  (not
                                    (in_motion ?j)
                                  )
                                  (and
                                    (not
                                      (agent_holds green_golfball)
                                    )
                                    (not
                                      (in_motion ?p)
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                        (exists (?s ?v - chair ?i - block ?l - hexagonal_bin)
                          (exists (?w - chair)
                            (game-conserved
                              (exists (?t - dodgeball ?a - hexagonal_bin)
                                (in_motion ?a)
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                  (game-conserved
                    (agent_holds ?p)
                  )
                  (forall (?w - desk_shelf)
                    (game-conserved
                      (agent_holds ?w)
                    )
                  )
                )
                (game-optional
                  (in ?z ?p)
                )
              )
            )
          )
        )
      )
      (forall (?y - hexagonal_bin ?i - ball)
        (game-conserved
          (agent_holds ?i)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?c - cylindrical_block)
        (then
          (once (in_motion ?c) )
          (once (not (not (and (and (on ?c ?c) (not (exists (?w - (either pillow chair ball)) (on ?c ?w) ) ) ) (not (in_motion ?c) ) (in ?c room_center) ) ) ) )
          (once (in_motion ?c) )
        )
      )
    )
    (preference preference2
      (exists (?b - ball)
        (then
          (once (in_motion ?b) )
          (hold-while (agent_holds ?b) (agent_holds agent) )
          (once (same_color ?b ?b) )
        )
      )
    )
    (preference preference3
      (exists (?x - dodgeball)
        (then
          (once (not (object_orientation ?x ?x) ) )
          (hold-while (not (not (exists (?s - hexagonal_bin) (on ?x room_center) ) ) ) (and (not (adjacent ?x ?x) ) (in_motion ?x) ) )
          (hold (agent_holds drawer) )
          (hold-while (in_motion ?x) (and (not (in_motion ?x) ) (same_type ?x ?x) ) (in_motion ?x) (in ?x green_golfball) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-overlapping preference1:pink) (count-once-per-external-objects preference1:yellow) )
)
(:scoring
  2
)
)(define (game game-id-404) (:domain many-objects-room-v1)
(:setup
  (exists (?l - hexagonal_bin)
    (game-conserved
      (not
        (in_motion ?l)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?e - cube_block)
        (at-end
          (agent_holds ?e)
        )
      )
    )
  )
)
(:terminal
  (< (+ (* (count preference1:basketball:hexagonal_bin) (count-once-per-objects preference1:blue_cube_block) )
      (+ 2 5 )
    )
    (count-once preference1:blue_pyramid_block:dodgeball)
  )
)
(:scoring
  1
)
)(define (game game-id-405) (:domain many-objects-room-v1)
(:setup
  (exists (?w - shelf)
    (exists (?c - (either doggie_bed cylindrical_block))
      (game-conserved
        (not
          (in ?w ?c)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?k - hexagonal_bin ?r - drawer)
        (at-end
          (same_object ?r ?r)
        )
      )
    )
  )
)
(:terminal
  (or
    (< 300 6 )
  )
)
(:scoring
  (count preference1:rug)
)
)(define (game game-id-406) (:domain few-objects-room-v1)
(:setup
  (exists (?f - block ?b - golfball)
    (game-optional
      (in ?b ?b)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?f - hexagonal_bin)
        (at-end
          (in_motion bed)
        )
      )
    )
  )
)
(:terminal
  (>= (external-forall-maximize (count-once-per-objects preference1:green) ) (* 2 (* (count preference1:pink:blue_dodgeball) (count-once-per-objects preference1:basketball) )
    )
  )
)
(:scoring
  (count-once preference1:pink)
)
)(define (game game-id-407) (:domain many-objects-room-v1)
(:setup
  (exists (?o ?x ?a - dodgeball ?v - hexagonal_bin)
    (and
      (game-conserved
        (not
          (in ?v desk)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?i - doggie_bed)
      (and
        (preference preference1
          (exists (?j - tall_cylindrical_block)
            (then
              (once (in ?i ?j) )
              (once-measure (> (distance ?i ?j) (distance_side ?j desktop ?i)) (distance ?j ?i) )
              (once (and (and (and (in_motion ?j) (not (touch ?i ?i) ) ) (same_object ?j agent) ) (and (agent_holds ?i) (agent_holds ?i) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (+ (count preference1:triangle_block) 15 )
      (count preference1:golfball)
    )
    (not
      (>= (count-overlapping preference1:golfball:yellow_cube_block) (count preference1:pink_dodgeball:dodgeball) )
    )
  )
)
(:scoring
  10
)
)(define (game game-id-408) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (above agent door)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?e - doggie_bed)
        (then
          (once (on ?e agent) )
          (once-measure (not (in ?e ?e) ) (distance ?e ?e) )
          (hold (agent_holds ?e) )
        )
      )
    )
    (forall (?t - dodgeball ?d - cube_block)
      (and
        (preference preference2
          (exists (?u - hexagonal_bin ?g - hexagonal_bin)
            (then
              (once (< (distance ?g desk) 1) )
              (hold (not (open ?g) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 8 (* 1 (count preference1:brown:doggie_bed) )
  )
)
(:scoring
  (+ (count-once preference2:yellow_cube_block:green) (* (* (+ (count-once-per-objects preference2:cube_block) (count preference1:rug:pink) )
        3
      )
      (+ (count preference2:orange) (count-once-per-objects preference2) )
    )
  )
)
)(define (game game-id-409) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?s - pyramid_block)
      (and
        (exists (?w - color ?q - hexagonal_bin ?r ?t - hexagonal_bin)
          (and
            (exists (?k - cube_block)
              (and
                (forall (?b - wall)
                  (game-conserved
                    (in agent ?r)
                  )
                )
              )
            )
          )
        )
        (exists (?v - game_object)
          (game-conserved
            (touch ?v ?v)
          )
        )
        (game-conserved
          (not
            (exists (?j - ball ?q - hexagonal_bin ?f - dodgeball)
              (and
                (in_motion ?s)
                (agent_holds ?f)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?w - curved_wooden_ramp)
        (then
          (once (in_motion ?w) )
          (once (and (between green_golfball ?w ?w) (agent_holds desk) ) )
          (once-measure (touch ?w ?w) (distance ?w ?w) )
        )
      )
    )
    (preference preference2
      (exists (?r - drawer)
        (then
          (once (on ?r ?r) )
          (once (adjacent ?r ?r) )
          (forall-sequence (?y - cylindrical_block)
            (then
              (hold-while (agent_holds ?r) (on ?r ?r) (and (broken ?r) (on ?r agent) ) )
              (once (same_object ?r ?r) )
              (hold (equal_x_position ?r desk) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (/ (count-once-per-objects preference2:beachball:dodgeball) (+ (* (= 8 4 (- (count preference2:dodgeball) )
            )
            (count preference1:golfball)
          )
          (count-increasing-measure preference1:blue_dodgeball)
        )
      )
      (count preference1:hexagonal_bin)
    )
    (>= (* (* 10 3 (* (count preference2:hexagonal_bin) (count-increasing-measure preference1:hexagonal_bin) )
        )
        (count preference1:dodgeball)
      )
      (external-forall-maximize
        (count-longest preference1:blue_dodgeball:hexagonal_bin)
      )
    )
    (< (count-same-positions preference2:blue_dodgeball) (count preference2:beachball) )
  )
)
(:scoring
  (count preference2:top_drawer)
)
)(define (game game-id-410) (:domain medium-objects-room-v1)
(:setup
  (exists (?m - hexagonal_bin ?j - (either dodgeball bridge_block))
    (exists (?e - (either alarm_clock golfball doggie_bed))
      (exists (?u - cube_block ?i - hexagonal_bin ?l - blue_cube_block ?c ?n - wall ?w - teddy_bear)
        (game-conserved
          (toggled_on ?j)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?s - hexagonal_bin)
        (then
          (once (touch ?s ?s) )
          (hold-to-end (and (and (not (broken bed) ) (agent_holds ?s) ) (= (distance ?s ?s) (distance bed ?s)) ) )
          (once (object_orientation ?s agent) )
        )
      )
    )
    (forall (?j - wall)
      (and
        (preference preference2
          (exists (?m - dodgeball)
            (then
              (once (touch ?j ?m) )
              (once (in ?j front) )
              (once (on ?j ?j) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (* (* (count preference1:dodgeball) (total-time) )
      180
    )
    (count preference1:dodgeball)
  )
)
(:scoring
  (external-forall-maximize
    3
  )
)
)(define (game game-id-411) (:domain medium-objects-room-v1)
(:setup
  (exists (?b - hexagonal_bin)
    (not
      (forall (?m - hexagonal_bin)
        (game-conserved
          (in ?m ?b)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?w - flat_block ?i - (either pink watch) ?z - ball)
        (then
          (once (not (> (distance ?z ?z) 2) ) )
          (once (in_motion ?z) )
          (hold (and (not (not (in_motion ?z) ) ) (agent_holds ?z) ) )
          (once (on ?z ?z) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference1:purple) (* (total-time) (count preference1:dodgeball) )
  )
)
(:scoring
  (count preference1:basketball)
)
)(define (game game-id-412) (:domain few-objects-room-v1)
(:setup
  (forall (?z - doggie_bed ?k - (either yellow_cube_block floor))
    (game-conserved
      (agent_holds ?k)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?f - hexagonal_bin)
        (then
          (hold (adjacent agent ?f) )
          (once (in_motion ?f) )
          (once (not (not (and (touch ?f ?f) (adjacent agent desk) (in ?f ?f) (adjacent_side ?f ?f side_table door) (on agent ?f) (and (equal_z_position ?f ?f) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:pink) (count-once-per-objects preference1:rug) )
)
(:scoring
  (* (count-total preference1:yellow) (count-once preference1:dodgeball) )
)
)(define (game game-id-413) (:domain many-objects-room-v1)
(:setup
  (exists (?x - ball)
    (game-optional
      (not
        (in_motion ?x)
      )
    )
  )
)
(:constraints
  (and
    (forall (?n - game_object)
      (and
        (preference preference1
          (exists (?c - hexagonal_bin)
            (then
              (hold (on ?c ?n) )
              (once (or (game_start ) (not (not (in ?n ?c) ) ) ) )
              (once (on ?n desk) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?f - (either top_drawer beachball))
        (then
          (hold (on ?f ?f) )
          (once (agent_holds ?f) )
          (hold (and (not (not (not (same_object ?f ?f) ) ) ) (adjacent ?f ?f) ) )
        )
      )
    )
    (preference preference3
      (exists (?q - cube_block ?h - shelf)
        (then
          (once (not (agent_holds ?h) ) )
          (once (and (= 1) (not (in_motion ?h) ) ) )
          (once (in_motion ?h) )
        )
      )
    )
  )
)
(:terminal
  (> (count-once-per-objects preference2:basketball:alarm_clock) (count-once-per-objects preference3:basketball:yellow_cube_block) )
)
(:scoring
  (total-score)
)
)(define (game game-id-414) (:domain many-objects-room-v1)
(:setup
  (forall (?q - dodgeball)
    (and
      (game-conserved
        (is_setup_object ?q)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?c - ball ?o ?j - game_object)
        (then
          (hold (touch ?o ?o) )
          (once (not (not (in_motion ?o) ) ) )
          (once (or (is_setup_object ?j) (adjacent ?j ?o) (on ?j ?o) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count-shortest preference1:wall) (* (+ (+ 5 (count preference1:blue_cube_block:pink) )
          (count preference1:green)
        )
        6
        (* 3 (+ (<= 6 (+ 3 5 )
            )
            (count preference1:blue_dodgeball:doggie_bed)
            (count-once-per-objects preference1:dodgeball)
            (* (external-forall-maximize (+ 2 (count-once-per-objects preference1:yellow) )
              )
              50
              (count-once-per-objects preference1:dodgeball)
              10
            )
          )
          (- (count preference1:hexagonal_bin) )
        )
        10
        (count preference1:yellow_pyramid_block:dodgeball)
        (< 3 10 )
        (count-once-per-objects preference1:orange)
        7
        (+ (count preference1:pink_dodgeball) (* (= 6 30 )
            10
          )
        )
      )
    )
    (* (* (count preference1:yellow) (= (total-score) 5 )
      )
      10
    )
  )
)
(:scoring
  (count preference1:doggie_bed)
)
)(define (game game-id-415) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (exists (?v - game_object ?r - block)
      (in_motion ?r)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?c - doggie_bed ?f - ball)
        (then
          (hold (not (and (not (in_motion ?f) ) (in_motion ?f) ) ) )
          (once (and (in_motion room_center) (and (same_object ?f ?f) (forall (?m - (either dodgeball yellow) ?l - cube_block) (not (not (broken ?l) ) ) ) ) ) )
          (once (on rug ?f) )
        )
      )
    )
    (preference preference2
      (exists (?l ?w - dodgeball)
        (then
          (once (in_motion ?l) )
          (hold (<= 1 (distance ?w ?l)) )
          (once (not (adjacent_side ?w ?w ?w) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 5 4 )
)
(:scoring
  (count-once preference2:yellow)
)
)(define (game game-id-416) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?s - dodgeball)
      (game-conserved
        (opposite ?s agent)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?p - ball)
        (then
          (forall-sequence (?g - hexagonal_bin)
            (then
              (once (faces ?p ?p) )
              (once (agent_holds ?g) )
              (once (not (in ?p ?g) ) )
            )
          )
          (hold (and (agent_holds ?p) (< 2 (distance ?p ?p)) ) )
          (once (not (not (and (forall (?r - shelf) (on door ?p) ) (not (not (and (in ?p ?p) (and (exists (?m - wall ?v - hexagonal_bin ?n - cylindrical_block) (on ?p brown) ) (or (in agent ?p) (in_motion ?p) ) ) (agent_holds door) (not (agent_holds ?p) ) ) ) ) ) ) ) )
          (once (in_motion ?p) )
        )
      )
    )
  )
)
(:terminal
  (< (* 1 (count preference1:green) )
    3
  )
)
(:scoring
  (count preference1:cube_block)
)
)(define (game game-id-417) (:domain many-objects-room-v1)
(:setup
  (exists (?k - building)
    (game-optional
      (exists (?m - hexagonal_bin ?h - dodgeball)
        (and
          (agent_holds rug)
          (and
            (in_motion ?h)
            (not
              (in_motion south_wall)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?a - building)
        (then
          (once (on agent ?a) )
          (once (open ?a) )
          (once (in ?a ?a) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:dodgeball) (external-forall-maximize (count preference1:hexagonal_bin) ) )
)
(:scoring
  (count preference1:pink)
)
)(define (game game-id-418) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (not
      (agent_holds door)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?x - hexagonal_bin ?e - pillow)
        (at-end
          (and
            (exists (?u - drawer ?p - hexagonal_bin)
              (not
                (exists (?h - building)
                  (on ?h ?h)
                )
              )
            )
            (above ?e ?e)
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count preference1:basketball) (and (count-once-per-objects preference1:beachball:rug) 2 ) )
    2
  )
)
(:scoring
  (external-forall-maximize
    (total-time)
  )
)
)(define (game game-id-419) (:domain many-objects-room-v1)
(:setup
  (forall (?x - curved_wooden_ramp)
    (game-optional
      (adjacent ?x ?x)
    )
  )
)
(:constraints
  (and
    (forall (?o - ball)
      (and
        (preference preference1
          (exists (?q - hexagonal_bin)
            (then
              (hold-for 7 (agent_holds ?o) )
              (once (on ?q back) )
              (once (on rug ?q) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-once-per-objects preference1:yellow) (count-measure preference1:bed) )
    (> (* 0 (count-once-per-external-objects preference1:yellow) (* (- 5 )
          5
        )
        (count preference1:pink)
        5
        (* (+ (count-total preference1:blue) (- (count-once-per-objects preference1:dodgeball:pink_dodgeball) )
          )
          4
        )
      )
      (count-once-per-objects preference1:yellow:beachball:yellow)
    )
  )
)
(:scoring
  (* (count preference1:red_pyramid_block) (count preference1:red) (count-once-per-objects preference1:dodgeball:basketball) )
)
)(define (game game-id-420) (:domain few-objects-room-v1)
(:setup
  (forall (?j - wall ?u ?a - game_object)
    (exists (?b - dodgeball)
      (and
        (game-optional
          (exists (?q - hexagonal_bin)
            (same_object agent agent)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?v - game_object ?e ?a - hexagonal_bin)
        (then
          (once (adjacent_side ?e ?e rug ?a) )
          (hold (adjacent_side ?a ?e ?e) )
          (hold (agent_holds ?a) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* (count preference1:basketball) 10 5 )
      3
    )
    (or
      (>= (count-unique-positions preference1:pink) (total-time) )
      (< (* (not 2 ) 2 )
        (+ 5 (total-score) )
      )
    )
  )
)
(:scoring
  (count preference1:dodgeball)
)
)(define (game game-id-421) (:domain medium-objects-room-v1)
(:setup
  (forall (?t - hexagonal_bin)
    (exists (?q - hexagonal_bin)
      (and
        (exists (?i - tall_cylindrical_block)
          (game-conserved
            (in_motion ?t)
          )
        )
        (game-optional
          (in_motion agent)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?m - dodgeball ?v ?f ?q ?l - flat_block ?p - sliding_door)
        (then
          (once (forall (?y - hexagonal_bin ?t - bridge_block ?h - ball ?k - red_dodgeball) (rug_color_under ?p ?p) ) )
          (hold (or (and (on ?p ?p) (and (agent_holds floor) ) ) (not (< (distance ?p ?p) 1) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (and (count-once-per-objects preference1:dodgeball:purple) 4 ) 0 )
)
(:scoring
  (count preference1:hexagonal_bin:red)
)
)(define (game game-id-422) (:domain many-objects-room-v1)
(:setup
  (exists (?d - pillow ?j - game_object)
    (and
      (and
        (game-optional
          (on ?j ?j)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?z - ball)
      (and
        (preference preference1
          (exists (?x - color ?y ?t - ball)
            (then
              (once (not (not (in_motion ?z) ) ) )
              (once (not (not (agent_holds ?z) ) ) )
              (once (and (not (adjacent_side desk ?t pink) ) (not (not (in_motion ?t) ) ) ) )
              (once (and (opposite ?t agent) (not (and (in ?y ?z) (same_type agent ?t) ) ) ) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?l - cube_block ?e - (either bridge_block ball))
        (then
          (hold (agent_holds ?e) )
          (once (agent_holds ?e) )
          (once (rug_color_under rug agent) )
        )
      )
    )
  )
)
(:terminal
  (>= (not 10 ) 10 )
)
(:scoring
  (+ (count preference1:golfball:basketball) (* (* (count preference1:red:triangle_block:dodgeball) (count-once-per-objects preference1:block:dodgeball:dodgeball) )
      (* (count preference1:white) (* 5 (* (* 16 (count preference2:beachball) )
            7
            (total-score)
          )
        )
        (* 2 60 )
        (count-once preference2:red:hexagonal_bin:yellow)
      )
    )
  )
)
)(define (game game-id-423) (:domain many-objects-room-v1)
(:setup
  (exists (?i ?o - hexagonal_bin)
    (exists (?v - building)
      (game-conserved
        (in_motion ?o)
      )
    )
  )
)
(:constraints
  (and
    (forall (?a ?f - teddy_bear ?n ?g - cube_block)
      (and
        (preference preference1
          (exists (?s - dodgeball ?q - dodgeball ?r - (either desktop floor))
            (at-end
              (not
                (exists (?z - (either bed blue_cube_block rug))
                  (or
                    (adjacent_side ?g ?z ?g)
                    (and
                      (rug_color_under ?r ?g)
                      (and
                        (in_motion pink)
                        (and
                          (on ?z ?n)
                          (in_motion ?r)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (<= 2 (count preference1:yellow_pyramid_block) )
    (> (count-once-per-objects preference1) (* (* 6 (total-score) (count preference1:beachball) )
        (count preference1:brown)
        10
      )
    )
  )
)
(:scoring
  (* (total-time) 5 (count-same-positions preference1:pink) 3 15 7 )
)
)(define (game game-id-424) (:domain many-objects-room-v1)
(:setup
  (exists (?v - (either doggie_bed cd pink))
    (forall (?r - wall)
      (and
        (game-optional
          (not
            (not
              (in desk ?r)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?p - cylindrical_block ?c - teddy_bear ?t - pyramid_block)
        (then
          (once (adjacent ?t ?t) )
          (once (same_type ?t agent) )
          (hold (same_object agent ?t) )
        )
      )
    )
    (forall (?u ?b - dodgeball)
      (and
        (preference preference2
          (exists (?c - hexagonal_bin)
            (then
              (hold-while (not (broken ?c) ) (not (not (in ?u agent) ) ) )
              (once (and (agent_holds ?c) (and (and (and (touch block ?u) (not (and (not (not (agent_holds ?b) ) ) (agent_holds agent) ) ) ) (in_motion ?c) (in_motion ?c) ) (above ?u ?c) ) ) )
              (once (not (in_motion agent) ) )
            )
          )
        )
      )
    )
    (forall (?w - hexagonal_bin)
      (and
        (preference preference3
          (exists (?m - book)
            (then
              (hold-to-end (not (and (in_motion ?m) (agent_holds ?w) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (count-once-per-objects preference3) (count preference2:basketball) )
  )
)
(:scoring
  5
)
)(define (game game-id-425) (:domain few-objects-room-v1)
(:setup
  (exists (?v - (either dodgeball dodgeball))
    (forall (?m - doggie_bed)
      (game-conserved
        (not
          (agent_holds pink_dodgeball)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?k - color)
        (at-end
          (and
            (not
              (and
                (in ?k ?k)
                (on ?k ?k)
              )
            )
            (and
              (is_setup_object ?k)
            )
            (not
              (in ?k ?k)
            )
            (and
              (and
                (in_motion ?k)
                (above ?k bed)
                (and
                  (in ?k ?k)
                  (not
                    (agent_holds ?k)
                  )
                  (not
                    (touch green_golfball ?k)
                  )
                )
              )
              (agent_holds ?k)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:golfball) (* (= 3 (+ 1 4 )
        20
      )
      10
      (count-once-per-objects preference1:golfball)
    )
  )
)
(:scoring
  (+ (count-overlapping preference1:basketball:golfball) 2 (count preference1:red:beachball) 4 5 )
)
)(define (game game-id-426) (:domain many-objects-room-v1)
(:setup
  (and
    (not
      (exists (?y - wall)
        (game-conserved
          (on ?y ?y)
        )
      )
    )
    (exists (?a - curved_wooden_ramp)
      (exists (?t - dodgeball ?m - hexagonal_bin)
        (and
          (exists (?p ?t ?s ?f - hexagonal_bin ?r - teddy_bear)
            (game-optional
              (agent_holds ?r)
            )
          )
          (game-conserved
            (agent_holds ?a)
          )
          (forall (?t - hexagonal_bin ?t - curved_wooden_ramp ?p - ball)
            (and
              (game-conserved
                (touch ?a ?m)
              )
              (forall (?i - cube_block)
                (forall (?c - cube_block)
                  (forall (?r - flat_block)
                    (forall (?s - pyramid_block ?l - (either cube_block yellow_cube_block blue_cube_block))
                      (game-conserved
                        (and
                          (in ?a agent)
                          (adjacent ?r ?r)
                        )
                      )
                    )
                  )
                )
              )
              (and
                (and
                  (exists (?n - hexagonal_bin ?o - dodgeball)
                    (forall (?e - cube_block)
                      (and
                        (game-conserved
                          (> 0.5 (distance_side ?o ?a bed ?a))
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?e ?o - hexagonal_bin)
        (then
          (once (in_motion ?e) )
          (once (not (touch ?o ?o) ) )
          (once (not (not (agent_holds top_drawer) ) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (< (* (count-once preference1:yellow:dodgeball) 100 )
      2
    )
    (>= (* (count-once preference1:dodgeball) (count-once preference1:basketball:dodgeball) )
      (count preference1:golfball:pyramid_block)
    )
    (>= (* (* (count-increasing-measure preference1:pink) (total-score) )
        3
      )
      6
    )
  )
)
(:scoring
  8
)
)(define (game game-id-427) (:domain few-objects-room-v1)
(:setup
  (forall (?i - (either alarm_clock) ?q - (either basketball hexagonal_bin) ?r - bridge_block)
    (game-conserved
      (not
        (and
          (in_motion ?r)
          (and
            (and
              (and
                (in_motion ?r)
                (not
                  (exists (?d - chair ?n ?l ?f - teddy_bear)
                    (same_color ?l agent)
                  )
                )
              )
              (agent_holds door)
            )
            (not
              (< 1 (distance ?r agent))
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?i - desktop)
        (then
          (hold (agent_holds ?i) )
          (once (and (exists (?v ?b - beachball) (on door ?i) ) ) )
          (once (and (adjacent ?i door) (= 1 (distance ?i ?i)) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (>= (count preference1:dodgeball) 15 )
    (count-measure preference1:blue_dodgeball)
  )
)
(:scoring
  (- (+ 15 10 )
  )
)
)(define (game game-id-428) (:domain medium-objects-room-v1)
(:setup
  (forall (?r - yellow_cube_block ?f - (either cylindrical_block cellphone))
    (game-optional
      (not
        (not
          (in_motion ?f)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?g - teddy_bear ?i - doggie_bed)
      (and
        (preference preference1
          (exists (?k - yellow_pyramid_block)
            (at-end
              (not
                (on ?k ?k)
              )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?m - (either pillow) ?k - cube_block)
        (then
          (hold (not (not (not (agent_holds ?k) ) ) ) )
          (once (and (and (exists (?h - color ?h - hexagonal_bin) (touch agent ?k) ) (in_motion side_table) ) (adjacent ?k agent) ) )
          (hold (> 1 (distance ?k ?k)) )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (* 10 2 )
  )
)
(:scoring
  (count-once-per-objects preference2:beachball)
)
)(define (game game-id-429) (:domain few-objects-room-v1)
(:setup
  (exists (?z - wall)
    (not
      (game-conserved
        (not
          (agent_holds ?z)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?u - building ?v - block)
        (then
          (once (not (object_orientation ?v ?v) ) )
          (hold (in ?v agent) )
          (hold (in_motion agent) )
        )
      )
    )
  )
)
(:terminal
  (> (count preference1:beachball) (count preference1:golfball) )
)
(:scoring
  2
)
)(define (game game-id-430) (:domain many-objects-room-v1)
(:setup
  (exists (?d - ball ?m - building)
    (exists (?n ?v - cube_block)
      (game-optional
        (touch ?m ?v)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?x - triangular_ramp ?p - hexagonal_bin)
        (at-end
          (forall (?g - dodgeball ?l - hexagonal_bin)
            (in ?l ?p)
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (< (- (count-once-per-objects preference1:green) )
      (count-once-per-objects preference1:dodgeball:dodgeball)
    )
  )
)
(:scoring
  (* (count-once-per-objects preference1:dodgeball) 3 )
)
)(define (game game-id-431) (:domain medium-objects-room-v1)
(:setup
  (forall (?t - game_object ?d - red_dodgeball)
    (and
      (and
        (game-conserved
          (in_motion ?d)
        )
        (forall (?o - ball)
          (game-conserved
            (> (distance_side ?d desk ?d agent) (distance pink ?d))
          )
        )
        (and
          (exists (?m - dodgeball)
            (game-conserved
              (agent_holds ?d)
            )
          )
          (game-optional
            (and
              (agent_holds ?d)
              (exists (?o - building)
                (= 0 6 (distance_side ?o front ?o ?o) 1)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?g - (either lamp cube_block) ?l - cube_block)
        (then
          (once (< 1 1) )
          (once (adjacent ?l ?l) )
          (once (in_motion ?l) )
        )
      )
    )
    (forall (?h - (either tall_cylindrical_block tall_cylindrical_block))
      (and
        (preference preference2
          (exists (?n - blinds ?k - block)
            (then
              (hold (agent_holds ?k) )
              (once (toggled_on ?k) )
              (hold-to-end (in_motion ?k) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?c - (either laptop cylindrical_block))
        (at-end
          (in_motion ?c)
        )
      )
    )
  )
)
(:terminal
  (>= (* 100 (- (count preference3:basketball) )
    )
    (count preference3:pink_dodgeball)
  )
)
(:scoring
  (count-once preference2:yellow:pyramid_block:basketball)
)
)(define (game game-id-432) (:domain many-objects-room-v1)
(:setup
  (and
    (or
      (and
        (and
          (game-conserved
            (in_motion bed)
          )
        )
      )
      (and
        (forall (?x - block)
          (game-conserved
            (touch ?x ?x)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?s - ball ?g - dodgeball ?m - hexagonal_bin)
        (then
          (hold-while (not (forall (?x - curved_wooden_ramp ?c - doggie_bed) (not (in_motion ?m) ) ) ) (not (and (agent_holds ?m) (touch ?m ?m) ) ) (adjacent ?m ?m) )
          (hold (is_setup_object ?m) )
          (hold (not (on ?m ?m) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (count-same-positions preference1:doggie_bed:golfball) (count preference1:yellow) )
  )
)
(:scoring
  5
)
)(define (game game-id-433) (:domain few-objects-room-v1)
(:setup
  (exists (?d - doggie_bed)
    (exists (?g - cube_block ?b - curved_wooden_ramp)
      (and
        (or
          (exists (?r - game_object ?z - dodgeball)
            (and
              (game-conserved
                (on agent rug)
              )
              (game-conserved
                (not
                  (and
                    (< 1 (distance agent floor))
                    (and
                      (and
                        (open ?z)
                        (rug_color_under ?z ?b)
                      )
                      (and
                        (same_color ?z ?b)
                        (not
                          (agent_holds ?b)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
          (game-conserved
            (agent_holds ?d)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?q - dodgeball ?l - block)
        (then
          (hold (and (in_motion ?l) (agent_holds agent) ) )
          (once (in_motion agent) )
          (forall-sequence (?e - ball ?i - hexagonal_bin)
            (then
              (once (in_motion agent) )
              (once (in_motion ?l) )
              (forall-sequence (?k - hexagonal_bin)
                (then
                  (hold (in_motion ?l) )
                  (hold (agent_holds ?i) )
                  (hold (on ?k ?i) )
                )
              )
            )
          )
          (hold (in_motion rug) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (external-forall-maximize (count-once-per-objects preference1:basketball) ) (+ (- 100 )
        (count preference1:tall_cylindrical_block)
        10
        8
        (count preference1:cube_block)
        (* (= 6 (count preference1:green) )
          (/
            (- 4 )
            (- 5 )
          )
        )
      )
    )
    (* (external-forall-maximize 2 ) (* (* (total-time) )
        2
      )
      (count preference1:dodgeball:dodgeball:red)
    )
  )
)
(:scoring
  (count-once-per-objects preference1:dodgeball)
)
)(define (game game-id-434) (:domain many-objects-room-v1)
(:setup
  (forall (?b - hexagonal_bin)
    (and
      (and
        (and
          (game-conserved
            (agent_holds ?b)
          )
        )
        (game-conserved
          (not
            (rug_color_under rug ?b)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?x - building)
        (then
          (hold (not (broken ?x) ) )
          (hold (in ?x blue) )
          (hold (not (on ?x ?x) ) )
        )
      )
    )
    (forall (?b - game_object ?q - building)
      (and
        (preference preference2
          (exists (?c - bridge_block)
            (then
              (once (and (not (not (and (not (adjacent ?c ?q) ) (on ?c bed) ) ) ) (on ?c ?c) ) )
              (once (and (and (in ?q agent) (and (and (or (and (not (forall (?b - hexagonal_bin ?o - curved_wooden_ramp) (not (in ?c ?c) ) ) ) (agent_holds ?c) (and (same_type ?q ?q) (and (not (equal_z_position ?q ?q) ) (and (in ?q ?q) (broken ?q) ) ) (not (in_motion ?c) ) ) (agent_holds ?c) ) (agent_holds ?q) (and (agent_holds ?q) (on ?c agent) ) ) (and (and (not (and (agent_holds agent) (same_color sideways ?c) ) ) (and (not (in_motion floor) ) (and (and (same_color ?c green_golfball) (agent_holds desk) (on floor ?q) ) (in_motion ?q) ) ) ) (in_motion ?q) ) ) (and (and (on ?q ?q) (and (in ?q ?c) (in ?q ?q) (and (not (touch desk upright) ) (in ?c ?c) ) ) (not (and (object_orientation ?q ?c) (in ?q ?c) ) ) ) (in_motion ?q) ) ) ) (in_motion ?q) ) )
              (hold (in_motion ?c) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?j - curved_wooden_ramp)
        (then
          (hold (adjacent ?j ?j) )
          (once (in_motion ?j) )
          (once (not (in_motion ?j) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (and
        (>= (count-once preference1:pink:dodgeball) (external-forall-minimize (count-once-per-objects preference3:dodgeball) ) )
        (> 3 (count preference2:beachball:tall_cylindrical_block) )
      )
      (>= 10 (count preference2:dodgeball:dodgeball:dodgeball) )
    )
    (and
      (<= (count preference3:green) (<= 10 (- (count preference2:blue_dodgeball:red) )
        )
      )
    )
  )
)
(:scoring
  (+ (count-once-per-objects preference3:beachball:beachball:blue_dodgeball) (* (count preference1:block:hexagonal_bin) (and (+ 6 (* (count preference3:hexagonal_bin) (+ (external-forall-minimize 3 ) (count-once-per-objects preference1:hexagonal_bin) )
          )
        )
        (* (* 5 (= (count-once-per-external-objects preference1:tan:tan) 4 )
            (total-time)
          )
          (count-once-per-objects preference2:dodgeball)
        )
      )
    )
  )
)
)(define (game game-id-435) (:domain few-objects-room-v1)
(:setup
  (exists (?w - ball)
    (game-optional
      (in ?w desk)
    )
  )
)
(:constraints
  (and
    (forall (?f - hexagonal_bin)
      (and
        (preference preference1
          (exists (?j - (either ball yellow))
            (then
              (hold (same_type ?j ?j) )
              (hold (and (not (and (and (agent_holds ?j) (opposite desk front) ) (and (< 2 10) (same_type ?j ?j) (on agent ?f) ) ) ) (in_motion door) ) )
              (once (agent_holds ?f) )
            )
          )
        )
        (preference preference2
          (exists (?o - dodgeball)
            (at-end
              (not
                (and
                  (in ?o ?f)
                  (not
                    (same_type ?o ?f)
                  )
                )
              )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?l - ball ?s - hexagonal_bin)
        (then
          (hold (exists (?g ?t ?o - game_object ?r - hexagonal_bin ?a - triangular_ramp) (and (in agent ?s) (agent_holds ?a) ) ) )
          (hold (agent_holds room_center) )
          (once (and (in_motion ?s) (in_motion rug) ) )
        )
      )
    )
    (forall (?f - (either block golfball))
      (and
        (preference preference4
          (exists (?b - (either cube_block cylindrical_block basketball) ?l - wall)
            (then
              (once (not (agent_holds ?l) ) )
              (once (touch ?f desk) )
              (once (or (agent_holds south_wall) (adjacent front ?l) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= 0.5 (count-once-per-objects preference1:beachball) )
    (>= 1 (count preference1:cylindrical_block) )
  )
)
(:scoring
  (not
    (count preference4:beachball)
  )
)
)(define (game game-id-436) (:domain medium-objects-room-v1)
(:setup
  (exists (?y - (either floor cube_block doggie_bed) ?u - dodgeball)
    (exists (?d - triangular_ramp)
      (game-conserved
        (<= (distance_side ?d bed desk) (distance ?d rug))
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - (either pyramid_block tall_cylindrical_block))
      (and
        (preference preference1
          (then
            (hold (in_motion ?h) )
            (once (agent_holds desk) )
            (once (and (touch ?h agent) (agent_holds ?h) ) )
          )
        )
      )
    )
    (preference preference2
      (exists (?r - hexagonal_bin ?m - cube_block ?h - (either bridge_block laptop) ?y - building ?k - cube_block)
        (then
          (hold (and (not (on ?k side_table) ) ) )
          (once (in_motion ?k) )
          (hold (not (game_over ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) 5 )
)
(:scoring
  (+ (* 4 (count-once preference1:dodgeball:purple) )
    (count preference1:pyramid_block)
  )
)
)(define (game game-id-437) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (game-conserved
        (in_motion side_table)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?o - building)
        (then
          (hold-for 2 (and (not (opposite ?o ?o) ) (and (< (distance_side agent ?o ?o ?o) (distance ?o ?o)) (on ?o ?o) (on ?o ?o) ) ) )
          (once (in_motion ?o) )
          (hold (in_motion bed) )
        )
      )
    )
    (preference preference2
      (exists (?u ?v - dodgeball)
        (then
          (hold-while (not (is_setup_object ?v) ) (not (and (adjacent_side door ?v ?v) (exists (?p - cube_block) (and (and (agent_holds rug) ) (not (not (on ?u ?u) ) ) ) ) (and (in_motion ?u) (adjacent ?v ?u) (in rug ?v) ) ) ) )
          (hold-while (not (and (agent_holds ?v) (and (touch ?u ?v) (rug_color_under ?v ?u) ) ) ) (and (in_motion ?u) (exists (?e - dodgeball) (and (agent_holds desk) (agent_holds ?v) (exists (?h - ball) (not (and (adjacent ?v ?e) (above back bed) ) ) ) (same_type ?v ?v) (not (on agent ?u) ) (> (building_size ?u) 7) ) ) (same_type ?u ?u) ) )
          (hold (not (object_orientation ?v ?v) ) )
        )
      )
    )
    (preference preference3
      (exists (?e - building ?j - cube_block)
        (then
          (hold-while (in_motion agent) (on agent ?j) )
          (hold-while (not (touch ?j ?j) ) (and (in_motion ?j) (same_object ?j ?j) ) (agent_holds ?j) )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (count-once-per-objects preference3:yellow:beachball) )
)
(:scoring
  (>= 50 10 )
)
)(define (game game-id-438) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-conserved
      (adjacent agent yellow)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?r - pyramid_block)
        (then
          (hold (and (adjacent ?r ?r) (in desk ?r) ) )
          (once (adjacent ?r agent) )
          (once (not (exists (?t - (either laptop cd) ?x - shelf) (exists (?n - red_dodgeball) (and (and (and (in_motion ?r) (not (agent_holds ?n) ) ) ) (< 0 2) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* (count preference1:golfball:dodgeball:basketball) (count preference1:beachball) )
      1
    )
    (not
      (not
        (> (count-once preference1:hexagonal_bin:golfball) (* (total-score) (count preference1:blue_dodgeball) )
        )
      )
    )
  )
)
(:scoring
  (count-once-per-external-objects preference1:dodgeball)
)
)(define (game game-id-439) (:domain few-objects-room-v1)
(:setup
  (and
    (game-conserved
      (open pink)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?i - cube_block)
        (then
          (once (and (agent_holds ?i) (touch ?i ?i) (not (in_motion ?i) ) (and (touch rug ?i) (touch ?i ?i) ) ) )
          (hold (in_motion ?i) )
          (hold (not (in_motion ?i) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 5 (count-once-per-objects preference1:book) )
  )
)
(:scoring
  (count preference1:dodgeball)
)
)(define (game game-id-440) (:domain medium-objects-room-v1)
(:setup
  (or
    (forall (?z - game_object)
      (game-conserved
        (and
          (on ?z ?z)
          (touch ?z ?z)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?i - (either cube_block cube_block triangle_block) ?i ?g - wall)
        (then
          (once (agent_holds ?i) )
          (hold (agent_holds room_center) )
          (hold (agent_holds ?i) )
        )
      )
    )
    (preference preference2
      (exists (?l - curved_wooden_ramp)
        (then
          (hold (agent_holds ?l) )
          (once (adjacent ?l ?l) )
          (hold (between ?l ?l ?l) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (>= 3 (count preference2:pyramid_block) )
      (+ (count preference2:yellow) (count-once preference2:blue_pyramid_block) (- (count-measure preference1:doggie_bed) )
      )
    )
    (and
      (not
        (> 5 (external-forall-minimize 10 ) )
      )
      (> (* 5 (count preference2:beachball) )
        (count preference2:pink)
      )
      (>= (count-once-per-objects preference2:cube_block) (count preference1:golfball:top_drawer) )
    )
  )
)
(:scoring
  50
)
)(define (game game-id-441) (:domain medium-objects-room-v1)
(:setup
  (exists (?e - pillow)
    (exists (?y - game_object)
      (and
        (game-optional
          (not
            (<= (x_position ?e) 1)
          )
        )
        (and
          (or
            (forall (?g - (either cylindrical_block bridge_block) ?t - shelf)
              (exists (?r - building)
                (game-conserved
                  (agent_holds door)
                )
              )
            )
            (game-conserved
              (in ?e agent)
            )
          )
        )
        (and
          (game-optional
            (not
              (in_motion agent)
            )
          )
          (and
            (and
              (game-conserved
                (and
                  (same_color ?y ?e)
                  (in_motion ?y)
                )
              )
              (exists (?f - curved_wooden_ramp ?v - cube_block)
                (game-conserved
                  (< (distance ?e ?y) 1)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?z - shelf ?s - wall)
      (and
        (preference preference1
          (exists (?u - doggie_bed ?l - ball)
            (then
              (hold (= 10) )
              (once (not (exists (?w - curved_wooden_ramp) (and (> 1 (distance ?s ?s)) (in_motion ?l) ) ) ) )
              (hold (and (or (agent_holds ?s) (and (agent_holds ?l) (not (on ?s ?s) ) ) ) (not (agent_holds bed) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= 3 (count-once-per-objects preference1:top_drawer) )
  )
)
(:scoring
  (* (* (>= (* (count preference1:dodgeball:doggie_bed) (* (count-once-per-objects preference1:rug:dodgeball) (+ (* (* (* (count preference1:pink) 30 (count-once preference1:dodgeball:yellow_cube_block) (count preference1:yellow_cube_block) (count-once-per-objects preference1:blue_dodgeball) (count preference1:basketball) )
                  (count-once-per-objects preference1)
                )
                (count-once-per-objects preference1)
                (* (count-once-per-objects preference1:beachball) 1 )
                (count preference1:doggie_bed:blue_pyramid_block:cylindrical_block)
                (* (count-increasing-measure preference1:blue_dodgeball) (+ (count-once-per-objects preference1:bed:book) (count-once-per-external-objects preference1:book) (count preference1:basketball:golfball) (- (and 10 15 ) )
                    (+ (* 10 (count preference1:dodgeball:yellow) )
                      (count preference1:pink:purple)
                    )
                    0
                  )
                )
                (+ (+ (count preference1:yellow) (count preference1:beachball) )
                  (count-once-per-objects preference1:pink_dodgeball:dodgeball:beachball)
                )
                1
                30
                (count-once-per-objects preference1:dodgeball)
              )
              (count preference1:basketball)
            )
          )
        )
        (and
          (* 3 (count preference1:basketball) )
        )
      )
      (count-same-positions preference1:book)
    )
    (count preference1:dodgeball)
    (count preference1:yellow_pyramid_block)
    180
    (count preference1:basketball)
    (count preference1:dodgeball)
  )
)
)(define (game game-id-442) (:domain medium-objects-room-v1)
(:setup
  (exists (?o ?s - dodgeball ?g - hexagonal_bin ?m - dodgeball)
    (forall (?z - block)
      (and
        (forall (?b - hexagonal_bin ?v - hexagonal_bin)
          (and
            (and
              (game-optional
                (on ?z ?v)
              )
            )
            (forall (?g - curved_wooden_ramp ?i - (either golfball flat_block beachball golfball dodgeball golfball dodgeball))
              (exists (?g - ball)
                (not
                  (forall (?o - dodgeball)
                    (exists (?r - hexagonal_bin)
                      (and
                        (game-conserved
                          (in_motion ?r)
                        )
                        (game-conserved
                          (same_color ?g ?v)
                        )
                        (game-conserved
                          (not
                            (not
                              (not
                                (agent_holds ?g)
                              )
                            )
                          )
                        )
                        (game-conserved
                          (open ?m)
                        )
                        (forall (?y - doggie_bed ?a - chair)
                          (game-conserved
                            (in ?v ?a)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?z - (either dodgeball cube_block pyramid_block))
        (then
          (hold (and (not (in ?z ?z) ) (in_motion ?z) (exists (?v - (either bridge_block hexagonal_bin cube_block)) (in_motion ?v) ) (not (on agent floor) ) ) )
        )
      )
    )
    (preference preference2
      (exists (?v - pillow)
        (then
          (once (and (and (not (adjacent ?v ?v) ) (agent_holds ?v) ) (in desk desk) ) )
          (once (agent_holds ?v) )
          (once (in ?v ?v) )
        )
      )
    )
    (forall (?u - ball ?b - pillow)
      (and
        (preference preference3
          (exists (?p - dodgeball)
            (then
              (once (not (in ?b ?b) ) )
              (once (in_motion rug) )
              (once (in ?p ?p) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (* (count preference2:pink) (* (* (count preference2:orange) (- (count preference3:basketball) )
          )
          (* (count-once-per-objects preference3:pink) 6 )
          (count-measure preference1:book)
        )
        5
        (count-once-per-objects preference2:dodgeball)
        (* 6 (count preference3:dodgeball:basketball) 3 10 )
        (/
          1
          (* 5 8 (* 15 (total-time) )
            (/
              3
              2
            )
          )
        )
      )
      (count-once preference3:dodgeball)
    )
  )
)
(:scoring
  (count preference3:dodgeball:cube_block)
)
)(define (game game-id-443) (:domain few-objects-room-v1)
(:setup
  (forall (?l - hexagonal_bin ?y - game_object ?z - doggie_bed ?f - dodgeball ?c - triangular_ramp)
    (and
      (game-conserved
        (on ?c ?c)
      )
      (forall (?d - (either golfball main_light_switch game_object))
        (game-conserved
          (same_type ?c ?d)
        )
      )
      (not
        (or
          (game-conserved
            (in bed ?c)
          )
          (game-conserved
            (agent_holds ?c)
          )
          (game-conserved
            (not
              (and
                (and
                  (and
                    (in_motion ?c)
                    (= (distance room_center ?c) 1)
                  )
                  (exists (?j - dodgeball)
                    (and
                      (is_setup_object ?c)
                      (exists (?p - shelf)
                        (object_orientation ?j ?j)
                      )
                    )
                  )
                )
                (and
                  (not
                    (not
                      (in_motion ?c)
                    )
                  )
                  (between agent room_center ?c)
                )
                (agent_holds ?c)
                (touch ?c ?c)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?g - doggie_bed ?l - hexagonal_bin ?a - hexagonal_bin)
        (then
          (hold-while (in_motion agent) (in agent ?a) )
          (hold-to-end (agent_holds green_golfball) )
          (once (not (not (not (and (not (not (agent_holds ?a) ) ) (in_motion ?a) (agent_holds room_center) (and (in_motion agent) (equal_x_position ?a ?a) (not (on agent ?a) ) ) (in_motion ?a) ) ) ) ) )
        )
      )
    )
    (forall (?x - color)
      (and
        (preference preference2
          (exists (?y - building ?b - shelf)
            (then
              (once (and (touch ?b ?x) (on ?b ?x) ) )
              (hold (touch ?b ?b) )
              (once (and (>= (distance ?x ?x) (building_size ?b)) (agent_holds ?x) ) )
            )
          )
        )
        (preference preference3
          (exists (?q - (either laptop cylindrical_block cylindrical_block) ?a - curved_wooden_ramp)
            (then
              (once (and (and (agent_holds ?x) (and (equal_x_position ?x bed) (rug_color_under ?a agent) ) ) (on ?x ?a) ) )
              (hold (not (in ?a ?a) ) )
              (once (agent_holds ?a) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-once-per-objects preference1:pink) (count-total preference2:hexagonal_bin) )
    (>= (count-once-per-external-objects preference2:basketball) 2 )
  )
)
(:scoring
  (count-once preference2:dodgeball:beachball)
)
)(define (game game-id-444) (:domain medium-objects-room-v1)
(:setup
  (exists (?s - block)
    (and
      (forall (?d - cube_block ?f - teddy_bear)
        (game-conserved
          (adjacent ?f agent)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?g - (either laptop flat_block))
      (and
        (preference preference1
          (exists (?a - hexagonal_bin)
            (then
              (once (on ?g ?g) )
              (hold-while (broken ?g) (not (agent_holds agent) ) )
              (once (not (in ?a ?g) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count-measure preference1:red) 3 )
    2
  )
)
(:scoring
  (+ (* 5 (count-once preference1) (count-once-per-objects preference1:blue_pyramid_block) )
    (-
      5
      (+ 30 1 )
    )
  )
)
)(define (game game-id-445) (:domain many-objects-room-v1)
(:setup
  (exists (?v - hexagonal_bin)
    (and
      (forall (?d - (either dodgeball dodgeball))
        (game-conserved
          (and
            (and
              (in room_center ?d)
              (agent_holds ?v)
            )
            (in_motion ?v)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?s - chair)
        (then
          (hold (not (on ?s ?s) ) )
          (once (agent_holds ?s) )
          (hold (not (on floor ?s) ) )
        )
      )
    )
    (preference preference2
      (exists (?c - cube_block)
        (then
          (hold (and (in ?c ?c) (on ?c ?c) (not (or (on ?c agent) (adjacent ?c ?c) (adjacent rug agent) (adjacent_side ?c ?c ?c) ) ) (and (agent_holds ?c) (and (in_motion ?c) (not (and (and (and (agent_holds ?c) (agent_holds ?c) (on ?c ?c) (on desk pink_dodgeball) (same_color ?c agent) (not (or (>= 1 1) (< 1 (distance door ?c)) ) ) (adjacent ?c ?c) (and (touch ?c agent) (and (and (in_motion ?c) (adjacent ?c ?c) ) (not (not (faces ?c ?c) ) ) ) (and (in_motion ?c) (or (in_motion ?c) (not (not (on ?c ?c) ) ) ) ) ) ) (in_motion desk) ) (not (= 5 1) ) ) ) ) ) ) )
          (once (and (and (and (not (forall (?i - bridge_block ?s - (either lamp laptop)) (agent_holds ?c) ) ) (and (and (broken ?c) (agent_holds ?c) ) (on ?c ?c) (same_color ?c ?c) ) ) (and (opposite ?c ?c) (not (in_motion ?c) ) ) ) (and (in_motion ?c) (not (not (and (and (forall (?i - curved_wooden_ramp) (in ?c ?c) ) ) (equal_x_position ?c ?c) ) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (* (count-longest preference1:cube_block) 300 (>= (* (* (count-same-positions preference1:cylindrical_block) (* (+ (count preference2:pink_dodgeball) (count preference2:red) (count-measure preference2:basketball:basketball) (count preference2:alarm_clock:red) (count preference1:blue_cube_block) (count-once-per-objects preference2:yellow_cube_block:doggie_bed) )
              0
              6
              (count-once preference2:golfball:book)
              5
              (count-once-per-external-objects preference2)
            )
          )
          3
          (+ (count preference1:hexagonal_bin) 30 )
        )
        (* (count-once-per-objects preference2:cube_block) 9 )
      )
    )
  )
)
(:scoring
  (count preference2:red:blue_dodgeball)
)
)(define (game game-id-446) (:domain few-objects-room-v1)
(:setup
  (exists (?r - pillow)
    (and
      (exists (?v - (either dodgeball ball doggie_bed alarm_clock dodgeball triangular_ramp yellow_cube_block))
        (exists (?x ?p ?g ?i ?m - game_object)
          (game-optional
            (agent_holds agent)
          )
        )
      )
      (game-conserved
        (and
          (and
            (same_color ?r ?r)
            (and
              (and
                (in ?r ?r)
                (in_motion ?r)
              )
              (in_motion ?r)
            )
            (and
              (not
                (and
                  (adjacent ?r ?r)
                  (not
                    (in_motion agent)
                  )
                )
              )
              (on ?r ?r)
            )
          )
          (in_motion ?r)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?i - dodgeball ?l - tall_cylindrical_block)
        (then
          (hold-while (on ?l ?l) (agent_holds ?l) )
          (hold (< (distance ?l floor) (distance agent ?l)) )
          (once (in_motion ?l) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* (count-once preference1:blue_cube_block) (count preference1:yellow:blue_pyramid_block) )
      (= (count preference1:bed) (count-once-per-objects preference1:dodgeball) )
    )
  )
)
(:scoring
  (+ (count preference1:basketball) (count-once-per-objects preference1:dodgeball:basketball) )
)
)(define (game game-id-447) (:domain few-objects-room-v1)
(:setup
  (exists (?e - hexagonal_bin)
    (exists (?j - ball ?w - ball)
      (game-optional
        (or
          (adjacent ?e rug)
          (adjacent ?e ?e)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?v - hexagonal_bin)
        (then
          (hold-while (and (is_setup_object ?v) (in ?v upright) ) (and (or (in_motion ?v) (in ?v ?v) ) (on ?v ?v) ) )
          (hold (in_motion ?v) )
          (hold (agent_holds ?v) )
        )
      )
    )
  )
)
(:terminal
  (not
    (and
      (>= (- (- 3 )
        )
        (count-unique-positions preference1:purple:dodgeball)
      )
      (>= (external-forall-maximize (+ (count-same-positions preference1:blue_dodgeball:pink) (+ 20 2 (count preference1:yellow) (external-forall-maximize 0 ) (count-same-positions preference1:golfball) (* (* (+ (count preference1:purple:yellow) 3 )
                  (count preference1:hexagonal_bin)
                )
                (count preference1:yellow:pink_dodgeball)
              )
            )
          )
        )
        10
      )
      (< (count preference1:green) 5 )
    )
  )
)
(:scoring
  (* (count preference1:purple) (* (* (count-total preference1:doggie_bed) (= (+ 3 5 (count preference1:yellow:hexagonal_bin) (* (= (count preference1:basketball) (count-shortest preference1:pink) (- (* (not 3 ) 3 2 (count preference1:beachball) (- (* (count-once-per-objects preference1:basketball) (count-unique-positions preference1:basketball) )
                    )
                    5
                    (count-once-per-objects preference1:yellow)
                    (count-once preference1:dodgeball)
                    (external-forall-maximize
                      (* 5 (count preference1:wall) 10 )
                    )
                    (+ (count-unique-positions preference1:dodgeball) (- (count preference1:dodgeball:pink) )
                      2
                      1
                      (count preference1:beachball)
                      (count preference1:dodgeball)
                      4
                      10
                      (- (external-forall-maximize (count-once-per-objects preference1:beachball) ) )
                      (count preference1:red)
                      (* 10 (total-score) )
                      6
                    )
                    (count preference1:pyramid_block:green)
                    (count-longest preference1:basketball)
                  )
                )
              )
              6
            )
            300
            (count preference1:dodgeball)
          )
          (count preference1:tan:beachball)
        )
        (count preference1:pink)
        4
        (count preference1:basketball)
      )
      (count preference1)
    )
  )
)
)(define (game game-id-448) (:domain medium-objects-room-v1)
(:setup
  (or
    (forall (?p - game_object)
      (game-conserved
        (in ?p ?p)
      )
    )
    (and
      (exists (?i - hexagonal_bin ?f - chair ?a - dodgeball)
        (forall (?z ?n - hexagonal_bin ?k - (either red yellow) ?z - ball)
          (and
            (exists (?h - hexagonal_bin)
              (exists (?k - triangular_ramp)
                (game-optional
                  (and
                    (not
                      (adjacent ?k ?z)
                    )
                    (in ?z bed)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?e ?v - ball ?q - hexagonal_bin)
      (and
        (preference preference1
          (exists (?x - building ?e - hexagonal_bin ?n - cube_block)
            (at-end
              (in ?q ?q)
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?f - chair)
        (then
          (hold (exists (?m - dodgeball) (on ?f agent) ) )
          (once (in_motion ?f) )
          (hold-while (not (not (and (in_motion ?f) (rug_color_under ?f ?f) ) ) ) (exists (?e - dodgeball) (adjacent ?f ?f) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (> 3 (count preference2:beachball) )
  )
)
(:scoring
  2
)
)(define (game game-id-449) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (forall (?k - sliding_door)
        (game-optional
          (is_setup_object ?k)
        )
      )
    )
    (exists (?m - dodgeball ?a - shelf)
      (forall (?g - hexagonal_bin ?p - hexagonal_bin)
        (game-conserved
          (exists (?s - chair)
            (not
              (faces top_drawer ?s)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?u - game_object)
      (and
        (preference preference1
          (exists (?k - dodgeball ?e ?v ?p - red_dodgeball)
            (at-end
              (and
                (exists (?s - (either pyramid_block mug key_chain dodgeball))
                  (object_orientation bed ?e)
                )
                (on ?v room_center)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 5 1 )
)
(:scoring
  (+ 1 7 )
)
)(define (game game-id-450) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?e - drawer)
      (exists (?c - pillow)
        (game-optional
          (< (distance ?e ?c) 3)
        )
      )
    )
    (forall (?y - flat_block)
      (game-conserved
        (not
          (not
            (and
              (not
                (agent_holds ?y)
              )
              (not
                (and
                  (in_motion ?y)
                  (< 8 (distance ?y ?y))
                )
              )
              (agent_holds ?y)
              (= (distance ?y ?y) (distance ?y ?y))
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?a - shelf)
      (and
        (preference preference1
          (then
            (hold (not (not (not (>= 1 (distance ?a agent)) ) ) ) )
            (once (in_motion front) )
            (once (in ?a ?a) )
          )
        )
      )
    )
    (forall (?b - dodgeball)
      (and
        (preference preference2
          (exists (?x - cube_block)
            (at-end
              (and
                (in_motion ?b)
                (and
                  (agent_holds ?b)
                  (and
                    (on ?b ?b)
                    (on room_center ?x)
                  )
                )
                (in_motion ?x)
                (agent_holds ?b)
                (in_motion agent)
                (and
                  (on ?b ?x)
                  (agent_holds ?b)
                )
              )
            )
          )
        )
        (preference preference3
          (exists (?d - hexagonal_bin)
            (then
              (once (agent_holds floor) )
              (once (agent_holds ?d) )
              (once (not (or (between ?d ?d ?d) (not (in_motion ?d) ) ) ) )
            )
          )
        )
      )
    )
    (forall (?j - hexagonal_bin)
      (and
        (preference preference4
          (exists (?k - hexagonal_bin)
            (then
              (hold (agent_holds ?k) )
              (once (and (exists (?a ?z ?q ?y - hexagonal_bin) (not (and (on ?y agent) (and (touch ?j ?a) (and (not (not (adjacent ?k ?k) ) ) (agent_holds ?k) ) ) ) ) ) (adjacent ?k ?j) ) )
              (hold (agent_holds ?j) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 2 (count preference3) )
    (<= 4 (external-forall-maximize 8 ) )
  )
)
(:scoring
  (count preference4:golfball)
)
)(define (game game-id-451) (:domain many-objects-room-v1)
(:setup
  (exists (?i - hexagonal_bin)
    (game-conserved
      (in_motion rug)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?h - hexagonal_bin)
        (then
          (hold (rug_color_under ?h ?h) )
          (once (and (in_motion ?h) (agent_holds ?h) ) )
          (once (and (and (agent_crouches ) (agent_holds ?h) ) (rug_color_under ?h ?h) (not (in ?h ?h) ) (and (agent_holds ?h) (and (in_motion ?h) (on ?h ?h) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (> (count-increasing-measure preference1:dodgeball:hexagonal_bin) (- (- 5 )
      )
    )
    (>= 2 (count-once-per-objects preference1:yellow_cube_block) )
  )
)
(:scoring
  (+ (count preference1:alarm_clock) (+ (count preference1:hexagonal_bin) (+ 2 (* 5 (and (+ (external-forall-maximize 3 ) (count-once-per-external-objects preference1:book:rug) 4 )
            4
          )
        )
      )
      (* (count-once preference1:purple) (* 7 (* (external-forall-minimize (count-once-per-objects preference1) ) 1 )
        )
      )
      2
    )
  )
)
)(define (game game-id-452) (:domain few-objects-room-v1)
(:setup
  (exists (?q - tan_cube_block ?d ?j - (either laptop curved_wooden_ramp yellow_cube_block desktop desktop cylindrical_block cylindrical_block))
    (exists (?l - building ?t - game_object)
      (game-optional
        (and
          (in ?t ?d)
          (agent_holds ?j)
          (and
            (toggled_on bed)
            (agent_holds ?d)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?h - dodgeball)
        (then
          (once (is_setup_object ?h) )
          (hold (not (agent_holds ?h) ) )
          (once (not (in_motion ?h) ) )
        )
      )
    )
    (forall (?k - block)
      (and
        (preference preference2
          (exists (?n - hexagonal_bin)
            (then
              (once (same_color ?k ?k) )
              (hold-for 4 (and (and (in_motion ?k) (touch ?k ?n) (and (in_motion ?n) (in ?n desk) ) (object_orientation ?k ?k) (on ?k ?n) (exists (?h - game_object ?x - game_object) (on agent ?k) ) ) (on ?k ?n) (not (between ?k ?k ?k) ) ) )
              (once (agent_holds ?n) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count preference2:dodgeball) 6 )
    (count-increasing-measure preference1:cube_block)
  )
)
(:scoring
  (count-shortest preference1:doggie_bed)
)
)(define (game game-id-453) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?m - beachball ?g - cube_block)
      (forall (?o - hexagonal_bin)
        (or
          (exists (?y - ball ?s - block ?p - shelf ?a - block)
            (game-conserved
              (not
                (agent_holds ?o)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?e - teddy_bear ?i - game_object)
        (then
          (once (in_motion ?i) )
          (hold (and (and (adjacent ?i ?i) (rug_color_under floor ?i) ) (and (equal_z_position agent ?i) (< 0.5 (distance ?i ?i)) (exists (?c - tall_cylindrical_block) (and (object_orientation ?c ?c) (not (on ?i ?c) ) ) ) (on ?i ?i) (touch ?i ?i) (not (touch ?i ?i) ) ) ) )
          (once (not (not (or (in_motion ?i) (agent_holds ?i) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* (/ (external-forall-minimize 20 ) 5 ) (* (count preference1:white) 30 3 50 (- 2 )
          2
        )
      )
      7
    )
    (and
      (<= (* (count-same-positions preference1:yellow:red) (* 10 (total-time) )
          (* (+ (count-once-per-objects preference1:blue_dodgeball) 300 )
            60
          )
          (external-forall-maximize
            10
          )
        )
        2
      )
    )
    (>= (count preference1:yellow) (count preference1:golfball) )
  )
)
(:scoring
  2
)
)(define (game game-id-454) (:domain medium-objects-room-v1)
(:setup
  (exists (?w - building)
    (forall (?a - block)
      (and
        (forall (?h - game_object ?n - dodgeball ?c - dodgeball)
          (exists (?t - hexagonal_bin)
            (and
              (or
                (forall (?j - ball ?p - ball)
                  (and
                    (game-conserved
                      (not
                        (agent_holds ?p)
                      )
                    )
                    (forall (?v - cube_block)
                      (exists (?r - hexagonal_bin)
                        (forall (?l ?i ?f ?n ?h - ball)
                          (and
                            (forall (?q - dodgeball)
                              (not
                                (or
                                  (and
                                    (or
                                      (game-optional
                                        (agent_holds ?i)
                                      )
                                      (exists (?j - red_dodgeball ?o - (either pencil doggie_bed flat_block) ?k - hexagonal_bin)
                                        (game-conserved
                                          (< (distance ?r agent) 0.5)
                                        )
                                      )
                                    )
                                  )
                                  (and
                                    (forall (?j - doggie_bed ?x - golfball)
                                      (and
                                        (exists (?y - (either cube_block game_object dodgeball))
                                          (game-optional
                                            (same_object ?c desk)
                                          )
                                        )
                                      )
                                    )
                                  )
                                  (and
                                    (game-optional
                                      (< (distance ?v ?i) (distance ?n ?t))
                                    )
                                  )
                                )
                              )
                            )
                            (forall (?u - hexagonal_bin)
                              (and
                                (exists (?z - cube_block)
                                  (game-conserved
                                    (on agent ?a)
                                  )
                                )
                              )
                            )
                            (and
                              (exists (?z - dodgeball)
                                (game-conserved
                                  (and
                                    (adjacent agent ?n)
                                    (agent_holds ?v)
                                    (on ?c ?f)
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                    (and
                      (exists (?f - tall_cylindrical_block)
                        (exists (?g - cube_block ?r - pillow)
                          (forall (?u - (either curved_wooden_ramp desktop cellphone) ?q - (either yellow_cube_block dodgeball) ?j - ball)
                            (game-optional
                              (or
                                (agent_holds room_center)
                                (not
                                  (agent_holds ?a)
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
                (game-conserved
                  (and
                    (forall (?q - hexagonal_bin ?j - chair ?b - dodgeball ?j - building)
                      (or
                        (rug_color_under ?j ?j)
                        (and
                          (not
                            (and
                              (and
                                (not
                                  (agent_holds ?j)
                                )
                                (in ?a ?a)
                                (agent_holds ?j)
                              )
                              (and
                                (agent_holds ?t)
                                (agent_holds ?c)
                              )
                            )
                          )
                          (in_motion ?t)
                        )
                      )
                    )
                    (agent_holds ?w)
                  )
                )
                (and
                  (forall (?n - cube_block)
                    (game-optional
                      (not
                        (in ?a ?a)
                      )
                    )
                  )
                )
              )
            )
          )
        )
        (exists (?y - dodgeball ?b - (either book wall))
          (game-conserved
            (and
              (not
                (and
                  (not
                    (and
                      (and
                        (and
                          (in_motion ?w)
                          (in ?a ?w)
                        )
                        (in_motion pink_dodgeball)
                      )
                      (in ?a bed)
                    )
                  )
                  (agent_holds ?w)
                )
              )
              (same_type ?a ?b)
            )
          )
        )
        (game-conserved
          (not
            (on pillow ?a)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?p - hexagonal_bin)
        (then
          (once (in agent bed) )
          (once (agent_holds ?p) )
          (once (agent_holds ?p) )
          (once (not (in ?p door) ) )
        )
      )
    )
  )
)
(:terminal
  (> (+ (total-score) (* (* 10 (count preference1:dodgeball) )
        1
      )
    )
    20
  )
)
(:scoring
  16
)
)(define (game game-id-455) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (agent_crouches )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?r - dodgeball)
        (then
          (hold-while (on bed ?r) (opposite agent ?r) )
          (once (and (and (on ?r ?r) (not (in_motion ?r) ) ) (not (< (distance ?r agent) (distance ?r ?r)) ) ) )
          (once (agent_holds ?r) )
        )
      )
    )
  )
)
(:terminal
  (>= 6 (* (* 5 (count preference1:basketball:white) (+ (count-overlapping preference1:golfball) (total-time) )
        (* (* 3 (count preference1:dodgeball:green:dodgeball) )
          (* (count-shortest preference1:purple) (count preference1:pink_dodgeball) (* (count preference1:green:yellow) (* 4 (* 3 (count preference1:hexagonal_bin) )
                (count preference1:pink_dodgeball:dodgeball)
                5
                (+ 0 3 )
                (- (* (total-time) 10 )
                )
              )
              (count-once-per-objects preference1:yellow)
            )
          )
        )
        (* 2 5 )
        (count preference1:alarm_clock:golfball:dodgeball)
        2
        (count-same-positions preference1)
        2
      )
      (count-shortest preference1:basketball)
    )
  )
)
(:scoring
  (count-once preference1:dodgeball)
)
)(define (game game-id-456) (:domain few-objects-room-v1)
(:setup
  (and
    (game-optional
      (not
        (< (distance desk room_center) 1)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?z - hexagonal_bin)
        (then
          (once (and (on agent desk) (agent_holds ?z) ) )
          (hold (in_motion ?z) )
          (once (and (adjacent ?z ?z) (not (not (on ?z floor) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (* (count-once preference1:beachball) 2 )
  )
)
(:scoring
  (* (count preference1:tan:book) 8 (count preference1:block) (count-once-per-objects preference1:tall_cylindrical_block:dodgeball) (count preference1:orange) (count-once-per-external-objects preference1:green) )
)
)(define (game game-id-457) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?i - wall ?c - wall ?u - hexagonal_bin)
      (forall (?w - blinds ?s - (either dodgeball pencil credit_card game_object dodgeball cellphone cellphone))
        (exists (?j - block ?x - pillow)
          (or
            (game-conserved
              (agent_holds bridge_block)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?e - hexagonal_bin ?w - (either dodgeball golfball) ?u - dodgeball)
        (at-end
          (adjacent ?u ?u)
        )
      )
    )
  )
)
(:terminal
  (> 4 3 )
)
(:scoring
  10
)
)(define (game game-id-458) (:domain few-objects-room-v1)
(:setup
  (exists (?k - game_object ?k - red_dodgeball)
    (and
      (game-optional
        (is_setup_object ?k)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?p - (either yellow_cube_block flat_block golfball))
        (at-end
          (agent_holds ?p)
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (and
        (>= (total-time) (+ 30 (count preference1:alarm_clock) )
        )
        (and
          (>= (count preference1:basketball) 3 )
        )
        (>= (* (+ (+ 5 (external-forall-minimize (count preference1:blue_cube_block) ) )
              (count-unique-positions preference1:red)
            )
          )
          (count-longest preference1:yellow)
        )
      )
      (>= 6 (count preference1:dodgeball:pink) )
      (and
        (>= 5 9 )
        (or
          (>= 3 (+ 9 16 )
          )
          (>= (* 10 (total-score) )
            30
          )
          (not
            (> 30 (count preference1:blue_pyramid_block:basketball) )
          )
        )
      )
    )
  )
)
(:scoring
  6
)
)(define (game game-id-459) (:domain few-objects-room-v1)
(:setup
  (forall (?c - red_dodgeball)
    (and
      (game-optional
        (in_motion ?c)
      )
    )
  )
)
(:constraints
  (and
    (forall (?o - hexagonal_bin)
      (and
        (preference preference1
          (then
            (hold-while (and (in_motion room_center) (in_motion ?o) (in_motion ?o) ) (is_setup_object ?o) )
            (once (exists (?t ?w ?f ?j ?n ?e - dodgeball) (agent_holds ?o) ) )
            (once (in ?o bed) )
          )
        )
      )
    )
    (preference preference2
      (exists (?x - dodgeball)
        (then
          (once (agent_holds ?x) )
          (hold (agent_holds ?x) )
          (hold (and (and (and (not (on ?x ?x) ) (touch ?x south_wall) ) (not (< (distance ?x ?x) (distance ?x ?x)) ) ) (< (distance ?x ?x) (distance ?x ?x)) ) )
        )
      )
    )
    (preference preference3
      (exists (?a - dodgeball ?h - hexagonal_bin)
        (then
          (once (on ?h ?h) )
          (once (agent_holds agent) )
          (once (in_motion ?h) )
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (or
        (>= (+ 1 (count-once preference1) )
          (count preference3:alarm_clock)
        )
        (>= (count-once-per-objects preference2:golfball:beachball) (total-time) )
        (and
          (>= (count-once-per-objects preference1:bed) (* (count-overlapping preference3:basketball) (* 4 15 )
            )
          )
        )
      )
    )
    (> (count preference2:hexagonal_bin) (total-time) )
  )
)
(:scoring
  (* (count preference2:hexagonal_bin) (+ (* (- (* (count-once-per-objects preference1:golfball) (* 10 (* (count preference3:alarm_clock) (<= (count preference3:pink) (count preference1:dodgeball) )
              )
            )
            5
          )
        )
        5
      )
      (count-once-per-external-objects preference2:hexagonal_bin:golfball)
    )
    (* (count preference1:cube_block:blue_dodgeball) (count-once-per-objects preference2:purple:pink) )
    2
    (* 6 (- (+ (= (count preference3:blue_cube_block) (count-once-per-external-objects preference2:pink_dodgeball:blue_cube_block) )
          8
        )
        1
      )
    )
    5
  )
)
)(define (game game-id-460) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (in_motion room_center)
  )
)
(:constraints
  (and
    (forall (?b - dodgeball)
      (and
        (preference preference1
          (exists (?s - hexagonal_bin)
            (then
              (once (< 1 (distance ?s ?b)) )
              (hold (in_motion ?b) )
              (once (in room_center ?s) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?c - dodgeball ?c ?j - pillow)
        (then
          (hold-while (adjacent_side ?j ?c ?j) (in_motion ?c) )
          (once (on ?j ?j) )
          (once (exists (?y - (either cube_block key_chain)) (and (in_motion ?j) (in_motion ?y) ) ) )
          (once (agent_holds ?j) )
        )
      )
    )
  )
)
(:terminal
  (not
    (and
      (> 1 (count preference2:doggie_bed) )
      (>= (* 10 4 )
        (count-once-per-objects preference2:green)
      )
    )
  )
)
(:scoring
  (* (count preference2:beachball) 6 )
)
)(define (game game-id-461) (:domain many-objects-room-v1)
(:setup
  (exists (?l - desktop)
    (and
      (forall (?d - color ?u - desk_shelf)
        (game-optional
          (above ?l ?l)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?f - teddy_bear)
        (then
          (once (and (not (in_motion ?f) ) ) )
          (once (and (not (and (in_motion ?f) (on ?f ?f) ) ) (agent_holds ?f) ) )
          (hold (not (< 9 (distance ?f ?f)) ) )
        )
      )
    )
    (forall (?o - (either cylindrical_block red cube_block))
      (and
        (preference preference2
          (exists (?m - building ?t - (either dodgeball) ?a - (either teddy_bear yellow doggie_bed))
            (then
              (hold (and (in_motion ?o) (in_motion ?o) ) )
              (once (in_motion front) )
              (once (and (on ?a ?o) (adjacent ?a agent) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= (count-unique-positions preference1:hexagonal_bin) (count-once-per-objects preference1:beachball) )
)
(:scoring
  3
)
)(define (game game-id-462) (:domain medium-objects-room-v1)
(:setup
  (forall (?c - ball ?z - cube_block)
    (exists (?m - (either doggie_bed game_object))
      (forall (?g - game_object)
        (and
          (and
            (exists (?l - hexagonal_bin ?p - hexagonal_bin ?x ?e ?o ?b ?f ?k ?w ?i ?n ?u - cube_block)
              (game-conserved
                (not
                  (touch ?m ?b)
                )
              )
            )
            (exists (?t - pillow)
              (exists (?s - (either bed triangle_block bridge_block) ?c - hexagonal_bin)
                (and
                  (game-conserved
                    (< (distance ?t ?g) (distance ?c ?t))
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - golfball ?t - hexagonal_bin ?q ?d ?o - building)
      (and
        (preference preference1
          (exists (?b - wall)
            (at-end
              (not
                (on ?q ?q)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (= 3 2 )
)
(:scoring
  7
)
)(define (game game-id-463) (:domain medium-objects-room-v1)
(:setup
  (forall (?j - hexagonal_bin ?l - wall)
    (game-conserved
      (and
        (in_motion ?l)
        (and
          (on ?l ?l)
          (broken ?l)
          (adjacent ?l rug)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?t - building)
        (at-end
          (in_motion ?t)
        )
      )
    )
    (preference preference2
      (exists (?k - (either key_chain cd))
        (then
          (once (agent_holds ?k) )
          (once (< 1 2) )
          (once (not (and (agent_holds room_center) (not (and (agent_holds agent) (and (touch ?k floor) (and (in_motion desk) (not (in_motion ?k) ) (in_motion rug) (in_motion ?k) ) ) ) ) ) ) )
        )
      )
    )
    (forall (?x - game_object)
      (and
        (preference preference3
          (exists (?q - game_object ?k - yellow_cube_block ?y - curved_wooden_ramp ?o - chair)
            (then
              (once (rug_color_under ?o ?x) )
              (hold (exists (?e - hexagonal_bin ?r - wall) (agent_holds ?o) ) )
              (once (agent_holds ?x) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 4 (count-once-per-objects preference3:pink) )
)
(:scoring
  1
)
)(define (game game-id-464) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?k - shelf ?k ?c - color ?d - game_object)
      (game-conserved
        (not
          (is_setup_object ?d)
        )
      )
    )
    (and
      (forall (?y - red_dodgeball)
        (and
          (game-conserved
            (< 4 (x_position ?y))
          )
          (and
            (and
              (exists (?k - hexagonal_bin)
                (forall (?z - book)
                  (game-optional
                    (on agent ?y)
                  )
                )
              )
            )
          )
        )
      )
      (forall (?s ?m - block ?j - teddy_bear ?e - building)
        (and
          (game-conserved
            (agent_holds ?e)
          )
          (and
            (and
              (exists (?y - ball)
                (game-optional
                  (not
                    (agent_holds ?y)
                  )
                )
              )
            )
          )
          (forall (?g - triangular_ramp)
            (exists (?r - block)
              (and
                (exists (?o - (either hexagonal_bin blue_cube_block) ?u - cube_block)
                  (and
                    (forall (?j - red_pyramid_block ?h - game_object)
                      (and
                        (game-conserved
                          (in_motion ?u)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?r - triangular_ramp ?i - hexagonal_bin)
        (then
          (once (< 1 (distance ?i ?i)) )
          (once (not (agent_holds rug) ) )
          (hold (forall (?z - game_object) (not (in agent bed) ) ) )
          (once (not (is_setup_object ?i) ) )
        )
      )
    )
    (forall (?c - dodgeball)
      (and
        (preference preference2
          (exists (?m - doggie_bed ?e - (either chair blue_cube_block))
            (at-end
              (touch agent desk)
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?d - hexagonal_bin)
        (then
          (hold-while (game_start ) (not (not (rug_color_under pillow ?d) ) ) (not (not (on agent ?d) ) ) )
          (once (agent_holds rug) )
          (once (and (not (is_setup_object ?d) ) (agent_holds ?d) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference2) (count-shortest preference1:yellow) )
)
(:scoring
  5
)
)(define (game game-id-465) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (in_motion rug)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?y - block)
        (then
          (once (in_motion ?y) )
          (hold (not (in ?y ?y) ) )
          (once (and (in ?y ?y) (adjacent ?y ?y) ) )
        )
      )
    )
    (preference preference2
      (exists (?h ?c - ball ?b - (either desktop cube_block pillow bed yellow golfball ball) ?a - chair)
        (then
          (hold (adjacent door ?a) )
          (once (in_motion ?a) )
          (once (in ?a ?a) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 2 (* 2 4 )
    )
    2
  )
)
(:scoring
  (* (count preference2:hexagonal_bin) (total-score) )
)
)(define (game game-id-466) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?f - hexagonal_bin)
      (exists (?g - cube_block ?b - curved_wooden_ramp)
        (and
          (and
            (and
              (game-conserved
                (in_motion rug)
              )
            )
          )
        )
      )
    )
    (forall (?h - game_object ?a - block ?c - (either cellphone))
      (and
        (game-optional
          (and
            (in_motion ?c)
            (< 1 (distance ?c door))
            (or
              (not
                (toggled_on ?c)
              )
              (agent_holds ?c)
            )
          )
        )
        (and
          (exists (?j - game_object ?h - game_object ?r - hexagonal_bin)
            (game-conserved
              (and
                (in_motion ?c)
                (adjacent bed ?r)
              )
            )
          )
          (exists (?v - hexagonal_bin)
            (game-optional
              (not
                (agent_holds ?v)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?u - hexagonal_bin)
        (then
          (hold (and (and (not (in ?u ?u) ) (agent_crouches ) ) (in_motion ?u) ) )
        )
      )
    )
    (preference preference2
      (exists (?p - (either cylindrical_block game_object dodgeball) ?c - pillow)
        (then
          (hold (not (same_type ?c ?c) ) )
          (once (and (in_motion ?c) (and (in_motion ?c) (on ?c ?c) (exists (?d - wall) (adjacent bed ?d) ) ) ) )
          (once (or (and (agent_holds ?c) (< 1 (distance_side agent ?c ?c)) (adjacent ?c ?c) (not (in_motion ?c) ) (touch ?c ?c) (in_motion ?c) ) (and (on room_center ?c) (agent_holds ?c) (game_over ) (on ?c ?c) (and (or (not (and (on ?c ?c) (same_color ?c ?c) ) ) (on ?c ?c) ) (agent_holds desk) ) (equal_z_position desk ?c) (on ?c ?c) (and (not (and (>= 4 2) (not (and (in_motion ?c) (agent_holds agent) (and (not (open ?c) ) (in_motion desk) ) (in_motion ?c) (= (distance blue ?c) (distance ?c ?c)) (not (not (on ?c ?c) ) ) (< 10 9) ) ) ) ) (and (agent_holds ?c) (agent_holds ?c) (not (and (in_motion ?c) (agent_holds ?c) (in ?c ?c) (< (distance ?c ?c) (distance ?c ?c)) ) ) ) (and (in_motion ?c) (and (exists (?k - block) (on ?k bed) ) (not (adjacent ?c ?c) ) ) ) ) (and (not (rug_color_under desk ?c) ) (on floor door) ) (not (exists (?p - game_object) (and (on ?p bed) (adjacent_side ?c ?p ?c ?p) (not (in_motion ?p) ) ) ) ) (and (in_motion agent) (on ?c ?c) ) (<= (distance ?c ?c) 3) ) (agent_holds ?c) ) )
        )
      )
    )
    (preference preference3
      (exists (?j - game_object ?t - (either top_drawer))
        (then
          (once (on ?t front_left_corner) )
          (hold-while (and (in_motion ?t) (and (not (and (not (same_object ?t ?t) ) (agent_holds pink_dodgeball) (in_motion ?t) (agent_holds ?t) ) ) (in_motion ?t) ) (agent_holds ?t) ) (on room_center ?t) (forall (?w - chair) (same_color ?t ?w) ) (not (not (agent_holds ?t) ) ) )
          (once (and (in_motion ?t) (not (exists (?j - hexagonal_bin) (agent_holds ?j) ) ) (and (> (distance ?t ?t) 1) (and (not (on ?t ?t) ) (and (and (agent_holds ?t) (not (forall (?r - game_object ?a - building) (on agent ?a) ) ) ) (agent_holds ?t) (or (in_motion ?t) (on ?t bed) ) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-external-objects preference3:yellow:pink_dodgeball) (- (+ 10 (* (* (- (* (+ (count preference3:green:blue_cube_block) 5 )
                1
              )
            )
            6
          )
          (count preference1:blue_pyramid_block)
        )
      )
    )
  )
)
(:scoring
  (* 50 (<= (count preference3:beachball) (+ (and (count-unique-positions preference1:hexagonal_bin) (count preference3:beachball) ) (count preference3:beachball:pink) )
    )
  )
)
)(define (game game-id-467) (:domain few-objects-room-v1)
(:setup
  (forall (?b - (either alarm_clock cd laptop) ?h - game_object)
    (forall (?b - hexagonal_bin)
      (game-optional
        (not
          (on ?b ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?x - curved_wooden_ramp)
        (then
          (once (in_motion ?x) )
          (once (and (adjacent ?x ?x) (on bed desk) (rug_color_under agent desk) ) )
          (hold-while (and (< (distance_side ?x ?x ?x) 1) (same_object rug ?x) ) (in ?x ?x) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-overlapping preference1:block) (count preference1) )
)
(:scoring
  (count-once-per-objects preference1:blue_dodgeball)
)
)(define (game game-id-468) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?p - hexagonal_bin)
      (forall (?s - building)
        (game-conserved
          (not
            (agent_holds ?p)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?o - hexagonal_bin)
        (then
          (once (touch bed bed) )
          (once (not (not (in_motion ?o) ) ) )
          (hold (adjacent ?o desk) )
        )
      )
    )
    (preference preference2
      (exists (?b - (either dodgeball doggie_bed))
        (then
          (once (not (in_motion back) ) )
          (once (and (or (not (not (adjacent ?b brown) ) ) (equal_z_position ?b ?b) ) (and (agent_holds ?b) (in_motion ?b) (and (and (in_motion ?b) (and (in_motion floor) (not (on ?b ?b) ) ) ) (agent_holds ?b) ) (on desk ?b) ) ) )
          (once-measure (in_motion ?b) (distance rug ?b) )
        )
      )
    )
  )
)
(:terminal
  (< 10 (* (count-once preference1:beachball) (* (* (- 5 )
          (count-once-per-external-objects preference2:red)
        )
        10
      )
    )
  )
)
(:scoring
  15
)
)(define (game game-id-469) (:domain few-objects-room-v1)
(:setup
  (forall (?l - hexagonal_bin)
    (game-conserved
      (not
        (not
          (not
            (on ?l ?l)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o - dodgeball)
      (and
        (preference preference1
          (exists (?i - dodgeball)
            (then
              (once (in_motion ?o) )
              (once (agent_holds room_center) )
              (hold-while (>= 1 (distance ?o ?o)) (not (in_motion ?i) ) (and (and (not (not (on bed rug) ) ) (not (game_start ) ) ) ) )
            )
          )
        )
        (preference preference2
          (exists (?e ?z - (either golfball basketball))
            (then
              (once (in_motion ?o) )
              (hold (in_motion ?z) )
              (once (exists (?i - teddy_bear ?m - game_object ?a - wall) (not (and (in_motion desk) (in ?e yellow) ) ) ) )
            )
          )
        )
        (preference preference3
          (exists (?f - hexagonal_bin)
            (at-end
              (and
                (in ?f ?o)
                (agent_holds ?f)
              )
            )
          )
        )
      )
    )
    (forall (?y - (either laptop))
      (and
        (preference preference4
          (exists (?s - (either dodgeball lamp) ?v ?f - building)
            (then
              (once (not (game_over ) ) )
              (once (> (distance desk ?y) (distance ?v ?y)) )
              (once-measure (and (and (< 1 2) (game_over ) ) (same_type ?y ?f) (agent_holds ?y) (agent_holds ?y) (same_type ?f ?f) (not (and (is_setup_object bed) (not (agent_holds ?v) ) ) ) (on ?f ?y) (agent_holds ?v) ) (x_position ?y) )
            )
          )
        )
        (preference preference5
          (exists (?l - tan_cube_block ?k - cube_block)
            (then
              (once (adjacent ?k ?y) )
              (once (not (equal_z_position ?k upright) ) )
              (hold (and (or (in_motion ?y) (adjacent_side ?k ?y ?k) ) (agent_holds ?y) ) )
            )
          )
        )
        (preference preference6
          (exists (?x - book ?t - cube_block)
            (at-end
              (and
                (and
                  (adjacent_side ?t ?t ?y ?t)
                  (not
                    (in_motion ?y)
                  )
                )
                (on ?t ?y)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (- (external-forall-maximize (- (* 1 )
        )
      )
    )
    (count-shortest preference5:pink_dodgeball:hexagonal_bin)
  )
)
(:scoring
  (total-score)
)
)(define (game game-id-470) (:domain medium-objects-room-v1)
(:setup
  (exists (?r - hexagonal_bin)
    (game-conserved
      (in agent agent)
    )
  )
)
(:constraints
  (and
    (forall (?t - curved_wooden_ramp ?p - (either yellow_cube_block golfball))
      (and
        (preference preference1
          (exists (?a - hexagonal_bin)
            (then
              (once (and (and (and (agent_holds ?a) (rug_color_under ?a ?a) ) (exists (?b - desk_shelf) (and (and (on front ?p) (and (not (not (< (distance ?p ?a) 1) ) ) ) ) (not (agent_holds ?p) ) ) ) (< 8 1) ) (in_motion ?a) ) )
              (once (and (in_motion door) (and (touch ?a ?p) (on ?a ?a) ) (and (and (agent_holds ?p) (not (on ?p ?a) ) ) (and (not (in_motion ?p) ) (adjacent ?p ?a) ) ) ) )
              (hold-while (in bed ?p) (and (and (not (and (agent_holds ?p) (agent_holds ?p) ) ) (in_motion ?a) ) (and (agent_holds ?a) (not (agent_holds ?a) ) ) ) (>= 7 0.5) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?v - (either bridge_block cd))
        (then
          (once (in_motion agent) )
          (hold (same_color ?v ?v) )
          (once (< 1 1) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference2:yellow_cube_block) 2 )
)
(:scoring
  (count-once-per-objects preference2:yellow)
)
)(define (game game-id-471) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?e - (either golfball key_chain) ?t - cube_block)
      (game-conserved
        (not
          (< 5 1)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?k - building)
      (and
        (preference preference1
          (exists (?p - dodgeball)
            (at-end
              (not
                (in_motion desk)
              )
            )
          )
        )
        (preference preference2
          (exists (?w - hexagonal_bin)
            (then
              (hold (agent_holds ?k) )
              (hold (not (not (agent_holds pink) ) ) )
              (once (and (not (in ?k ?k) ) (in_motion ?w) ) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?d - color)
        (then
          (hold (agent_holds rug) )
          (once (on top_shelf ?d) )
          (once (and (and (and (in_motion ?d) (forall (?l - (either rug teddy_bear blue_cube_block) ?e - color) (in_motion ?e) ) ) (in_motion ?d) ) (in ?d ?d) ) )
        )
      )
    )
    (preference preference4
      (exists (?y - hexagonal_bin ?b - (either dodgeball golfball alarm_clock))
        (then
          (once-measure (faces ?b ?b) (distance ?b ?b) )
          (once (adjacent ?b ?b) )
          (once (in_motion ?b) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* 1 (* (count preference1:pyramid_block) 5 )
      )
      (* 2 (count preference2:beachball:beachball) )
    )
    (>= (count preference4:dodgeball) (external-forall-minimize (count preference2:doggie_bed) ) )
    (or
      (> (count preference2:yellow) (count preference2:red) )
      (not
        (>= 10 (* (count-once preference1:purple:basketball) 3 )
        )
      )
      (>= (* (not (count preference2:blue_dodgeball) ) (+ (* (count-once-per-objects preference3:doggie_bed) (count preference3:cube_block) )
            (* (count preference2:blue_dodgeball) (+ (+ 5 (* 1 (count preference4:triangle_block:doggie_bed:dodgeball) )
                )
                (- (+ (count-once-per-objects preference3:pink) (+ 5 10 )
                  )
                )
              )
            )
          )
        )
        (external-forall-minimize
          (external-forall-maximize
            30
          )
        )
      )
    )
    (>= 3 (count preference3:dodgeball) )
  )
)
(:scoring
  3
)
)(define (game game-id-472) (:domain medium-objects-room-v1)
(:setup
  (exists (?f - game_object ?v - chair ?g - golfball ?c - (either cellphone))
    (forall (?k - dodgeball ?m - (either teddy_bear pen cube_block golfball book bridge_block yellow_cube_block) ?r - hexagonal_bin ?y - (either key_chain golfball dodgeball))
      (exists (?t - (either dodgeball doggie_bed wall))
        (and
          (and
            (game-conserved
              (< 1 (distance ?c ?y))
            )
            (game-conserved
              (in ?c ?c)
            )
            (forall (?r - hexagonal_bin ?g - (either laptop blue_cube_block yellow))
              (and
                (game-conserved
                  (or
                    (between front ?c desk)
                    (not
                      (not
                        (agent_holds ?y)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?l - triangular_ramp)
      (and
        (preference preference1
          (exists (?z - hexagonal_bin ?s - chair)
            (at-end
              (and
                (and
                  (agent_holds ?s)
                  (in_motion desk)
                )
                (on ?l ?s)
                (agent_holds blue)
                (on ?l ?s)
              )
            )
          )
        )
        (preference preference2
          (exists (?f - dodgeball ?o - pyramid_block ?o - (either cylindrical_block yellow bridge_block))
            (then
              (once (and (< (distance desk ?o) 5) (in ?o ?l) ) )
              (hold (not (and (on ?l ?l) (adjacent_side ?o ?o ?o) (in_motion ?o) (same_type ?o ?l) (agent_holds ?o) (and (and (and (not (not (not (agent_holds bed) ) ) ) (not (agent_holds ?o) ) ) (and (not (not (not (agent_holds agent) ) ) ) (opposite ?o ?o) (not (on ?l ?o) ) (in_motion ?o) ) ) (< (distance ?o desk) 1) (and (in_motion ?l) (exists (?z - block) (= (distance ?l ?o) 0 1) ) ) ) (toggled_on ?l) (agent_holds ?o) ) ) )
              (once (agent_holds ?l) )
            )
          )
        )
        (preference preference3
          (exists (?w - ball ?g - (either ball doggie_bed golfball laptop))
            (at-end
              (and
                (in bed ?l)
                (in_motion ?g)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (count-unique-positions preference2:yellow:pink) (count preference3:pink) )
)
(:scoring
  (* 100 (not (external-forall-maximize (count-once-per-objects preference1:doggie_bed) ) ) )
)
)(define (game game-id-473) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds agent)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?q - flat_block)
        (then
          (hold (not (not (in_motion ?q) ) ) )
          (once (on ?q ?q) )
          (once (and (same_type ?q ?q) (on ?q ?q) ) )
        )
      )
    )
  )
)
(:terminal
  (< 1 (+ (count preference1:dodgeball) (* (count-once-per-objects preference1:pink:dodgeball:pink) 30 10 (* (count-once preference1:dodgeball:golfball:dodgeball) (count preference1:basketball) )
        (count preference1:dodgeball)
        (count preference1:pink_dodgeball:yellow_cube_block)
      )
    )
  )
)
(:scoring
  4
)
)(define (game game-id-474) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (exists (?z - red_dodgeball ?z - chair ?u - ball ?f ?u - (either yellow_cube_block yellow_cube_block flat_block))
        (game-optional
          (and
            (on ?f ?u)
            (in ?f ?u)
          )
        )
      )
    )
    (exists (?n ?i - (either cube_block top_drawer cd alarm_clock hexagonal_bin alarm_clock game_object))
      (game-conserved
        (on ?n ?i)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?s ?c - game_object)
        (at-end
          (agent_holds drawer)
        )
      )
    )
    (preference preference2
      (exists (?e - block ?r - doggie_bed)
        (then
          (once (and (in_motion ?r) (not (in_motion ?r) ) ) )
          (once (or (in_motion ?r) (in_motion top_drawer) ) )
          (once (exists (?s - (either cube_block doggie_bed)) (agent_holds bed) ) )
          (once (in_motion ?r) )
          (hold (not (agent_holds ?r) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:blue_dodgeball) (* (external-forall-maximize 10 ) 5 )
  )
)
(:scoring
  2
)
)(define (game game-id-475) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (agent_holds top_shelf)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?m - color ?l - dodgeball)
        (then
          (once (not (in_motion ?l) ) )
          (once (and (not (> (distance ?l ?l) 7) ) (and (in_motion ?l) (in_motion floor) (on ?l ?l) ) ) )
          (hold (exists (?w - curved_wooden_ramp) (in_motion ?l) ) )
        )
      )
    )
    (preference preference2
      (exists (?y - hexagonal_bin)
        (at-end
          (and
            (on ?y ?y)
          )
        )
      )
    )
  )
)
(:terminal
  (>= 10 10 )
)
(:scoring
  (count-unique-positions preference1:golfball)
)
)(define (game game-id-476) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?q - (either laptop laptop yellow_cube_block golfball ball cube_block alarm_clock) ?m - hexagonal_bin)
      (game-conserved
        (not
          (agent_holds agent)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?k - hexagonal_bin ?p - block ?k - game_object ?g - (either pyramid_block cube_block))
        (then
          (once (and (and (and (not (and (and (and (in floor ?g) (not (adjacent ?g ?g) ) ) (and (equal_z_position ?g green_golfball) (agent_holds ?g) ) ) (touch desk rug) ) ) (adjacent ?g ?g) (agent_holds ?g) ) (not (touch ?g ?g) ) (and (adjacent ?g floor) (agent_holds ?g) ) ) (not (not (between ?g rug ?g) ) ) (and (adjacent_side ?g ?g ?g) (and (not (and (same_color ?g block) (and (adjacent rug agent) (not (object_orientation ?g ?g) ) ) (not (in_motion ?g) ) ) ) (and (open ?g) (in_motion ?g) ) ) (and (and (exists (?y - dodgeball) (agent_holds ?y) ) ) (in_motion ?g) (game_over ) (touch ?g ?g) ) ) ) )
          (once (and (agent_holds ?g) (in_motion ?g) ) )
          (hold-to-end (not (not (exists (?w - curved_wooden_ramp) (not (not (agent_holds ?w) ) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (/ (or (and (+ (total-score) (* 1 (count preference1:blue_dodgeball) )
            )
          )
        )
        (* (* 3 (* 7 (count preference1:basketball) )
          )
          (count preference1:basketball)
        )
      )
      300
    )
    (>= (not (count preference1:blue_dodgeball:purple) ) 6 )
    (or
      (or
        (> (count preference1:red) (- (total-time) (count preference1:blue_pyramid_block) ) )
        (or
          (>= (+ (count-once preference1:pink) 10 )
            (count preference1:yellow_cube_block)
          )
          (and
            (>= (count-once-per-objects preference1:beachball) 7 )
            (>= 50 (count preference1:yellow) )
            (> (count preference1:blue_cube_block) (total-score) )
          )
          (>= (* 15 2 )
            (count-total preference1:pink)
          )
        )
      )
    )
  )
)
(:scoring
  (* (count-once-per-external-objects preference1:beachball) (count preference1:dodgeball) )
)
)(define (game game-id-477) (:domain many-objects-room-v1)
(:setup
  (exists (?y - ball ?w - bridge_block)
    (game-conserved
      (and
        (agent_holds ?w)
        (in_motion ?w)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?y - color)
        (then
          (once (in ?y ?y) )
          (once-measure (agent_holds ?y) (distance ?y ?y) )
          (once (and (agent_holds door) (not (adjacent_side ?y ?y ?y ?y) ) (and (not (agent_holds ?y) ) (on ?y ?y) ) ) )
        )
      )
    )
    (preference preference2
      (exists (?m - hexagonal_bin ?r - hexagonal_bin)
        (then
          (once (and (adjacent desk ?r) (on ?r ?r) ) )
          (once (and (touch ?r ?r) (agent_holds rug) ) )
          (hold (in ?r ?r) )
        )
      )
    )
    (preference preference3
      (exists (?a - teddy_bear)
        (at-end
          (on ?a agent)
        )
      )
    )
  )
)
(:terminal
  (>= 1 (* 10 (count-increasing-measure preference1:dodgeball) )
  )
)
(:scoring
  15
)
)(define (game game-id-478) (:domain medium-objects-room-v1)
(:setup
  (forall (?r ?x ?k ?v ?z ?p - curved_wooden_ramp)
    (and
      (exists (?c - pillow ?a - cylindrical_block ?m - curved_wooden_ramp ?l - shelf)
        (or
          (game-optional
            (not
              (and
                (agent_holds ?k)
                (not
                  (equal_z_position ?l ?k)
                )
              )
            )
          )
          (exists (?g - game_object)
            (and
              (game-conserved
                (not
                  (on ?x ?l)
                )
              )
            )
          )
          (game-optional
            (in ?r ?x)
          )
        )
      )
      (game-conserved
        (adjacent_side ?k room_center ?v)
      )
      (and
        (exists (?s - hexagonal_bin)
          (forall (?b ?w - hexagonal_bin ?f ?m - triangular_ramp ?d - hexagonal_bin)
            (game-conserved
              (opposite ?z ?s)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?y - cylindrical_block)
      (and
        (preference preference1
          (exists (?i - cube_block)
            (at-end
              (on ?y ?y)
            )
          )
        )
      )
    )
    (forall (?l - game_object)
      (and
        (preference preference2
          (exists (?f - dodgeball)
            (then
              (hold (in ?l ?l) )
              (once (faces agent ?l) )
              (once (in front_left_corner ?f) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> 3 (* (- (* (external-forall-minimize 6 ) 10 )
      )
      (+ (total-score) 10 )
    )
  )
)
(:scoring
  (count-once-per-objects preference1:dodgeball)
)
)(define (game game-id-479) (:domain few-objects-room-v1)
(:setup
  (exists (?n ?z ?c ?m ?e ?t ?p ?b ?v ?d - block ?j - cube_block)
    (game-conserved
      (and
        (rug_color_under ?j ?j)
        (not
          (is_setup_object ?j)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?m - cube_block ?z - hexagonal_bin)
        (then
          (hold (agent_holds ?z) )
          (any)
          (once (adjacent ?z block) )
        )
      )
    )
  )
)
(:terminal
  (> (count-once preference1:purple) (count-once-per-objects preference1:brown) )
)
(:scoring
  5
)
)(define (game game-id-480) (:domain many-objects-room-v1)
(:setup
  (forall (?x - dodgeball)
    (game-conserved
      (not
        (on ?x ?x)
      )
    )
  )
)
(:constraints
  (and
    (forall (?x ?n ?l ?w ?b ?o - triangular_ramp)
      (and
        (preference preference1
          (exists (?m - desk_shelf)
            (then
              (hold (same_object ?l ?b) )
              (once (in_motion ?b) )
              (once (forall (?t - color) (not (in_motion ?l) ) ) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?d - ball ?d - building)
        (then
          (hold (agent_holds bridge_block) )
          (once (not (in_motion agent) ) )
          (hold-while (and (on ?d agent) ) (in ?d ?d) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (+ (* (external-forall-maximize 2 ) 3 )
      (* (count preference2:red_pyramid_block) 40 )
    )
  )
)
(:scoring
  2
)
)(define (game game-id-481) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (< 3 3)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?w - dodgeball)
        (at-end
          (and
            (equal_z_position blue ?w)
            (= 4 1 (distance ?w ?w))
          )
        )
      )
    )
  )
)
(:terminal
  (= (count preference1:dodgeball) (count preference1:basketball:dodgeball) )
)
(:scoring
  (count-shortest preference1:pink)
)
)(define (game game-id-482) (:domain few-objects-room-v1)
(:setup
  (forall (?q - hexagonal_bin)
    (and
      (game-conserved
        (agent_holds floor)
      )
      (game-conserved
        (and
          (and
            (and
              (and
                (touch ?q ?q)
                (in_motion pink)
              )
              (same_color top_drawer desk)
            )
            (and
              (adjacent_side ?q ?q desk ?q)
              (not
                (adjacent ?q door)
              )
              (not
                (adjacent bed ?q)
              )
            )
            (or
              (in ?q ?q)
              (and
                (in_motion ?q)
                (not
                  (same_type ?q ?q)
                )
              )
            )
          )
          (in_motion ?q)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?u - dodgeball)
        (then
          (hold (> 1 (distance ?u ?u)) )
          (once (object_orientation rug ?u) )
          (hold (in_motion ?u) )
        )
      )
    )
    (forall (?p - chair)
      (and
        (preference preference2
          (exists (?y - hexagonal_bin ?z - hexagonal_bin)
            (then
              (once (not (touch ?z ?z) ) )
              (once (and (touch ?p ?z) (not (not (between agent ?z ?z) ) ) ) )
            )
          )
        )
      )
    )
    (forall (?t - pillow)
      (and
        (preference preference3
          (exists (?c - teddy_bear ?o - cube_block)
            (then
              (once (agent_holds ?o) )
              (once (same_object ?t agent) )
              (hold-while (same_color agent ?o) (in_motion ?o) (agent_holds ?o) )
              (hold (and (on ?o ?o) (in_motion ?o) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (count-once-per-objects preference1:hexagonal_bin) (count-same-positions preference2:yellow) )
    4
  )
)
(:scoring
  (external-forall-maximize
    5
  )
)
)(define (game game-id-483) (:domain many-objects-room-v1)
(:setup
  (exists (?r - game_object ?o - (either dodgeball tall_cylindrical_block) ?k ?l - golfball)
    (forall (?r - hexagonal_bin)
      (and
        (exists (?z - (either flat_block cube_block))
          (exists (?t - dodgeball ?w - dodgeball)
            (game-conserved
              (< (distance ?z ?r) 1)
            )
          )
        )
        (and
          (exists (?c - teddy_bear)
            (and
              (exists (?s - wall)
                (game-optional
                  (in_motion ?l)
                )
              )
            )
          )
          (game-conserved
            (not
              (touch ?r ?r)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?j ?q - game_object)
        (then
          (once (agent_holds agent) )
          (once (in ?j ?j) )
          (once (not (agent_holds ?j) ) )
          (once (adjacent ?q ?q) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (count preference1:pink) )
)
(:scoring
  (* 30 (* (count preference1:golfball:dodgeball) (= 5 (+ (* 4 (* (count-once-per-objects preference1:yellow) (count preference1:golfball) )
          )
          (+ (total-score) 9 )
        )
        (count-unique-positions preference1:brown)
      )
    )
  )
)
)(define (game game-id-484) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (in_motion agent)
  )
)
(:constraints
  (and
    (forall (?c ?h ?m - wall)
      (and
        (preference preference1
          (then
            (once (and (not (on ?c ?m) ) (not (not (agent_holds ?c) ) ) ) )
            (once (on ?c ?c) )
            (once (in_motion ?h) )
          )
        )
        (preference preference2
          (exists (?g ?r - drawer)
            (then
              (once (on ?g bed) )
              (hold (in_motion desk) )
              (once-measure (and (in ?r ?r) (not (or (agent_holds ?h) (in ?r agent) ) ) ) (distance pillow agent) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 10 20 )
)
(:scoring
  6
)
)(define (game game-id-485) (:domain medium-objects-room-v1)
(:setup
  (forall (?g - dodgeball)
    (forall (?s - dodgeball)
      (exists (?o - dodgeball)
        (forall (?j - hexagonal_bin)
          (exists (?v - hexagonal_bin ?w - (either dodgeball dodgeball) ?r - hexagonal_bin ?y - dodgeball)
            (game-conserved
              (above ?g ?y)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?v - hexagonal_bin)
      (and
        (preference preference1
          (exists (?p - hexagonal_bin)
            (then
              (once (on ?v desk) )
              (hold (not (in_motion ?v) ) )
              (once (and (in room_center ?v) (not (= 5) ) (not (in door ?p) ) ) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?w ?m ?b ?l ?g ?k - dodgeball)
        (then
          (once (and (in_motion ?b) ) )
          (once (< 4 1) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (* (- (- 3 )
        )
        3
      )
    )
    (external-forall-minimize
      (* (* 2 (* (+ (* (< (* (total-score) 8 )
                  7
                )
                (* 6 5 )
              )
              3
            )
            (external-forall-minimize
              (count-measure preference2:pyramid_block:basketball)
            )
          )
        )
        (count preference2:yellow)
      )
    )
  )
)
(:scoring
  (count-once preference1:beachball)
)
)(define (game game-id-486) (:domain medium-objects-room-v1)
(:setup
  (exists (?l - game_object)
    (and
      (game-optional
        (in_motion ?l)
      )
      (game-conserved
        (not
          (agent_holds ?l)
        )
      )
      (forall (?u - shelf)
        (game-optional
          (not
            (in_motion ?l)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?g - building)
        (then
          (once (in ?g rug) )
          (once (in_motion ?g) )
          (once (and (not (not (in ?g ?g) ) ) (not (and (adjacent agent ?g) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 50 (count-unique-positions preference1:yellow:basketball:blue) )
)
(:scoring
  (* (count preference1:basketball) (total-time) )
)
)(define (game game-id-487) (:domain medium-objects-room-v1)
(:setup
  (exists (?y - (either wall dodgeball book laptop pen bridge_block cylindrical_block) ?y ?e - hexagonal_bin)
    (game-conserved
      (in_motion ?e)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?y - building)
        (at-end
          (and
            (agent_holds ?y)
            (or
              (on rug bed)
              (and
                (in ?y room_center)
                (in room_center ?y)
              )
              (adjacent desk ?y)
              (not
                (agent_holds agent)
              )
            )
          )
        )
      )
    )
    (forall (?b - beachball ?t - cube_block ?q - hexagonal_bin)
      (and
        (preference preference2
          (exists (?e - block ?k - shelf)
            (at-end
              (and
                (and
                  (not
                    (in_motion ?q)
                  )
                  (agent_holds ?q)
                  (not
                    (in ?k ?k)
                  )
                )
                (in_motion ?q)
              )
            )
          )
        )
      )
    )
    (forall (?t - game_object ?d - (either laptop golfball laptop golfball))
      (and
        (preference preference3
          (exists (?g ?w - hexagonal_bin)
            (then
              (once (in ?d ?g) )
              (once (< 1 1) )
              (hold (not (agent_holds room_center) ) )
            )
          )
        )
        (preference preference4
          (exists (?b - (either tall_cylindrical_block yellow))
            (then
              (once (agent_holds ?b) )
              (once (not (in ?d ?d) ) )
              (once (agent_holds ?b) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (* 5 3 )
    5
  )
)
(:scoring
  (count-once-per-objects preference1:basketball)
)
)(define (game game-id-488) (:domain many-objects-room-v1)
(:setup
  (exists (?r - hexagonal_bin)
    (exists (?a - game_object ?q - shelf ?d - wall ?o - game_object)
      (exists (?e - chair)
        (and
          (forall (?g - game_object ?t - hexagonal_bin)
            (and
              (forall (?u ?l - block ?h - hexagonal_bin)
                (game-optional
                  (and
                    (in_motion ?r)
                    (not
                      (in_motion ?o)
                    )
                  )
                )
              )
            )
          )
          (and
            (forall (?b - ball)
              (forall (?v ?u - cube_block ?n - cube_block)
                (exists (?p - curved_wooden_ramp ?w - hexagonal_bin)
                  (exists (?v - hexagonal_bin)
                    (game-conserved
                      (on ?o ?o)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?u - curved_wooden_ramp ?d - (either main_light_switch))
        (at-end
          (on ?d agent)
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (count preference1:beachball) (* (count preference1:basketball) (< 5 (count-once-per-objects preference1:pink) )
      )
    )
  )
)
(:scoring
  (* 1 (count preference1:beachball:golfball) )
)
)(define (game game-id-489) (:domain many-objects-room-v1)
(:setup
  (exists (?h - hexagonal_bin ?o - building)
    (and
      (exists (?i - hexagonal_bin)
        (and
          (exists (?y - (either key_chain wall wall) ?s - watch)
            (and
              (and
                (game-conserved
                  (and
                    (not
                      (adjacent ?i ?i)
                    )
                    (in_motion ?o)
                  )
                )
              )
              (and
                (exists (?a - block)
                  (exists (?k - ball ?n - dodgeball)
                    (forall (?h - triangular_ramp ?p - dodgeball)
                      (game-conserved
                        (and
                          (and
                            (not
                              (toggled_on ?s)
                            )
                            (exists (?d - (either wall golfball))
                              (in_motion agent)
                            )
                          )
                          (agent_holds ?i)
                        )
                      )
                    )
                  )
                )
                (game-optional
                  (agent_holds agent)
                )
                (game-optional
                  (in_motion ?o)
                )
              )
              (exists (?x - dodgeball)
                (game-optional
                  (not
                    (not
                      (or
                        (not
                          (in ?i ?x)
                        )
                        (in_motion ?o)
                      )
                    )
                  )
                )
              )
            )
          )
          (exists (?b - dodgeball)
            (and
              (and
                (game-optional
                  (and
                    (adjacent ?b ?b)
                    (in_motion bed)
                  )
                )
                (exists (?g - hexagonal_bin)
                  (game-optional
                    (not
                      (and
                        (in_motion ?o)
                        (equal_x_position ?i ?b)
                        (in bed ?b)
                      )
                    )
                  )
                )
              )
              (and
                (forall (?d ?z ?a - game_object)
                  (forall (?q - doggie_bed)
                    (game-optional
                      (on agent ?b)
                    )
                  )
                )
                (and
                  (exists (?k - hexagonal_bin)
                    (and
                      (exists (?f - doggie_bed)
                        (and
                          (game-conserved
                            (in_motion desk)
                          )
                        )
                      )
                    )
                  )
                )
              )
              (and
                (and
                  (exists (?d - game_object)
                    (game-optional
                      (agent_holds ?b)
                    )
                  )
                )
                (and
                  (exists (?x - hexagonal_bin ?a - block)
                    (game-conserved
                      (on floor door)
                    )
                  )
                  (game-conserved
                    (agent_holds ?i)
                  )
                  (game-conserved
                    (equal_z_position ?b ?i)
                  )
                )
              )
            )
          )
          (exists (?u - hexagonal_bin)
            (game-conserved
              (agent_holds ?i)
            )
          )
        )
      )
      (game-optional
        (and
          (not
            (< 1 1)
          )
          (in_motion agent)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?k - watch)
      (and
        (preference preference1
          (exists (?c - hexagonal_bin)
            (at-end
              (not
                (in_motion ?c)
              )
            )
          )
        )
      )
    )
    (forall (?c - cube_block)
      (and
        (preference preference2
          (then
            (once (in_motion ?c) )
            (once (and (not (in_motion pillow) ) (equal_z_position ?c ?c) ) )
            (once (not (and (in_motion agent) (between ?c ?c agent) ) ) )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (= 50 (count-measure preference1:dodgeball) )
    (or
      (or
        (>= 10 (* (+ (count preference2:green) 1 (total-time) )
            (external-forall-minimize
              0.5
            )
            (count-once-per-objects preference2:dodgeball:green)
          )
        )
        (>= 4 (* (count-once-per-objects preference1:hexagonal_bin) (count preference1:basketball) )
        )
        (>= (count preference2:dodgeball) (count preference2) )
      )
      (or
        (or
          (>= 6 (+ (count preference2:cube_block:red) (* (total-score) (count preference2:yellow:basketball) )
            )
          )
          (not
            (or
              (>= (count-once preference1:dodgeball) (total-time) )
              (or
                (or
                  (>= (* (* (count preference1:side_table) (count preference1:dodgeball) )
                      6
                    )
                    (- (count preference2:basketball:blue_dodgeball) )
                  )
                )
                (>= (total-score) (count preference1:beachball) )
              )
            )
          )
        )
        (< (count-once-per-objects preference1:pink) 2 )
      )
    )
  )
)
(:scoring
  10
)
)(define (game game-id-490) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (exists (?r - hexagonal_bin ?u - curved_wooden_ramp)
      (not
        (not
          (agent_holds ?u)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?b - ball)
        (then
          (hold (agent_holds ?b) )
          (hold (and (agent_holds ?b) (in_motion ?b) (agent_holds ?b) ) )
          (once (on ?b ?b) )
        )
      )
    )
    (preference preference2
      (exists (?p - pillow ?j - hexagonal_bin)
        (then
          (once (agent_holds ?j) )
          (hold-while (and (in ?j ?j) (in_motion desk) ) (< (distance ?j ?j) 9) )
          (forall-sequence (?h - (either cd bridge_block triangle_block cube_block cellphone desktop cellphone))
            (then
              (hold-while (and (agent_holds ?j) (broken ?j) (and (< 1 (distance ?h ?h)) (agent_holds ?j) ) ) (<= (distance ?h ?j) 8) (in_motion pink) )
              (hold (on ?j ?h) )
              (once (is_setup_object ?h) )
              (once (not (and (agent_holds ?h) (touch ?h ?j) ) ) )
              (once (agent_holds ?h) )
              (once (same_color ?j rug) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 2 6 )
)
(:scoring
  (count preference2:dodgeball:green:hexagonal_bin)
)
)(define (game game-id-491) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds pink)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?m - hexagonal_bin)
        (then
          (once (and (in_motion ?m) (in_motion agent) ) )
          (hold-to-end (not (in ?m ?m) ) )
          (hold (on ?m ?m) )
        )
      )
    )
  )
)
(:terminal
  (> (count preference1:yellow_pyramid_block) 50 )
)
(:scoring
  5
)
)(define (game game-id-492) (:domain many-objects-room-v1)
(:setup
  (forall (?c - game_object)
    (game-conserved
      (and
        (in agent ?c)
        (and
          (not
            (forall (?y - hexagonal_bin ?w - dodgeball ?g - hexagonal_bin)
              (not
                (game_start )
              )
            )
          )
          (equal_z_position ?c ?c)
        )
        (and
          (not
            (not
              (in_motion ?c)
            )
          )
          (not
            (game_over )
          )
        )
        (agent_holds ?c)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?u ?n - ball ?z - hexagonal_bin)
        (then
          (hold-for 4 (< 1 1) )
          (once (< (distance agent ?z) (distance agent ?z)) )
          (once (object_orientation ?z ?z) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference1:tall_cylindrical_block) (+ (/ (count-once-per-objects preference1:pink:doggie_bed) (+ 2 2 )
      )
      2
    )
  )
)
(:scoring
  (count preference1:basketball)
)
)(define (game game-id-493) (:domain few-objects-room-v1)
(:setup
  (exists (?x - ball ?s - cube_block ?t - (either doggie_bed cylindrical_block))
    (game-optional
      (not
        (and
          (not
            (and
              (and
                (agent_holds ?t)
                (opposite ?t ?t)
              )
              (on agent ?t)
            )
          )
          (= 6 1)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - hexagonal_bin ?t - blinds)
      (and
        (preference preference1
          (exists (?i - hexagonal_bin)
            (then
              (once (> (x_position ?t) 5) )
              (hold-while (not (exists (?c - dodgeball) (adjacent front rug) ) ) (and (not (not (and (in_motion ?i) (not (in_motion ?t) ) ) ) ) (is_setup_object green) (in_motion ?i) ) )
              (once (in_motion agent) )
            )
          )
        )
        (preference preference2
          (exists (?k - (either cylindrical_block desktop))
            (then
              (once (in_motion ?t) )
              (once (not (same_type ?k ?t) ) )
              (hold (in_motion ?t) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (> (count preference1:dodgeball) 5 )
      (< (* (* 10 (count preference1:tall_cylindrical_block) )
          (* (<= (+ 3 2 1 )
              (* 8 (* 6 (* (* (count preference2:beachball) 0 )
                    (- 5 )
                  )
                )
              )
            )
            30
          )
          (external-forall-maximize
            (<= (total-score) 2 )
          )
        )
        (total-score)
      )
    )
  )
)
(:scoring
  5
)
)(define (game game-id-494) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (and
        (forall (?v - ball)
          (exists (?k - hexagonal_bin ?b - dodgeball)
            (exists (?g - hexagonal_bin)
              (game-conserved
                (and
                  (not
                    (on ?v ?b)
                  )
                  (not
                    (> 8 1)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?f - pillow)
      (and
        (preference preference1
          (exists (?r - chair)
            (then
              (once-measure (and (not (not (agent_holds ?r) ) ) (not (on ?r ?r) ) ) (distance ?f agent) )
              (once (not (not (not (and (< (distance ?f ?r) (distance ?f ?f)) (exists (?u - cube_block ?j - shelf ?p - hexagonal_bin ?p - golfball) (agent_holds ?p) ) ) ) ) ) )
              (once (< (distance ?f ?f) 1) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (> 2 (count preference1:basketball) )
    (< (count-once-per-objects preference1:hexagonal_bin) (count-once-per-objects preference1:beachball) )
  )
)
(:scoring
  (* (* (count-once-per-objects preference1:dodgeball:red) (count-once-per-objects preference1:purple) )
    18
    2
  )
)
)(define (game game-id-495) (:domain few-objects-room-v1)
(:setup
  (forall (?w - building)
    (game-conserved
      (agent_holds ?w)
    )
  )
)
(:constraints
  (and
    (forall (?o - flat_block)
      (and
        (preference preference1
          (exists (?h - dodgeball)
            (then
              (once (not (and (broken room_center) (agent_holds ?o) ) ) )
              (once (in_motion ?h) )
              (hold-while (not (not (agent_holds desk) ) ) (in ?o ?o) )
            )
          )
        )
        (preference preference2
          (exists (?l - hexagonal_bin)
            (then
              (once (< (distance desk ?l) 10) )
              (once (in_motion ?o) )
              (hold (= 1 (distance ?o upright)) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?o - block)
        (then
          (once (not (touch desk ?o) ) )
          (hold (and (and (in ?o room_center) (not (and (in_motion ?o) (agent_holds ?o) (= 1 1) ) ) ) (not (on ?o ?o) ) ) )
          (once (agent_holds ?o) )
        )
      )
    )
    (forall (?i - ball)
      (and
        (preference preference4
          (exists (?u - cube_block ?h - hexagonal_bin)
            (then
              (once (in_motion ?h) )
              (once (and (not (agent_holds agent) ) (agent_holds ?h) ) )
              (hold-while (> 0.5 (distance ?h ?i)) (touch pink_dodgeball ?h) (agent_holds ?i) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (not (count-once-per-objects preference2:pink) ) )
)
(:scoring
  (count-once preference3:red:pink_dodgeball)
)
)(define (game game-id-496) (:domain medium-objects-room-v1)
(:setup
  (forall (?g - building)
    (game-conserved
      (adjacent ?g ?g)
    )
  )
)
(:constraints
  (and
    (forall (?d - cube_block ?s - hexagonal_bin)
      (and
        (preference preference1
          (exists (?b - hexagonal_bin ?k - doggie_bed)
            (then
              (once (agent_holds ?k) )
              (once (agent_holds ?k) )
              (once (exists (?p - shelf ?v - teddy_bear) (< (distance bed ?s) 6) ) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?l - ball ?x - hexagonal_bin)
        (then
          (hold-for 6 (on ?x ?x) )
          (once (and (and (and (>= (distance ?x agent) 0) (not (and (agent_holds floor) (and (not (and (not (not (and (not (not (and (and (in_motion ?x) (touch rug ?x) ) (agent_crouches ) ) ) ) (not (not (> 2 (distance bed ?x)) ) ) (not (adjacent ?x desk) ) (in_motion ?x) (in_motion ?x) (on ?x ?x) ) ) ) (in_motion desk) ) ) (and (and (< (distance ?x pillow) 1) (agent_holds ?x) ) (is_setup_object ?x) ) ) ) ) ) (not (and (touch ?x bed) (not (exists (?c - hexagonal_bin ?w - (either dodgeball ball) ?b - (either dodgeball alarm_clock hexagonal_bin)) (in ?b ?b) ) ) ) ) ) (in_motion ?x) (in_motion ?x) (not (adjacent desk bed) ) ) )
          (once (in_motion ?x) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count-once-per-objects preference1:dodgeball) (* (* (- (* 15 (count preference1:dodgeball:doggie_bed) )
          )
          15
          (* (+ 5 (count preference2) )
            (* 3 (* 9 (count-once-per-objects preference2:pink) )
            )
          )
          (- 4 )
        )
        (<= (count preference2:book) (+ (+ 5 (- 10 )
            )
            50
            (count-once-per-objects preference1:blue_cube_block)
          )
        )
      )
    )
    (count preference2:yellow)
  )
)
(:scoring
  (* 2 1 10 )
)
)(define (game game-id-497) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?e ?g - hexagonal_bin)
      (exists (?m - hexagonal_bin)
        (exists (?q - game_object ?v - cube_block)
          (and
            (game-optional
              (or
                (agent_holds ?e)
                (rug_color_under ?g ?g)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?o - building)
        (then
          (once (adjacent ?o block) )
          (once (not (and (in_motion ?o) (not (agent_holds ?o) ) (not (agent_holds ?o) ) ) ) )
          (once (in_motion door) )
        )
      )
    )
    (preference preference2
      (exists (?h - shelf)
        (at-end
          (not
            (and
              (agent_holds room_center)
              (same_type ?h ?h)
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?y - dodgeball ?z - teddy_bear)
        (then
          (hold (exists (?x - (either alarm_clock key_chain)) (and (on ?x ?z) (in_motion ?x) (touch ?x agent) ) ) )
          (once (>= (distance ?z ?z) 2) )
          (hold (above ?z ?z) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference1:dodgeball:dodgeball) 1 )
)
(:scoring
  1
)
)(define (game game-id-498) (:domain medium-objects-room-v1)
(:setup
  (exists (?i - ball)
    (exists (?n - blue_cube_block)
      (game-conserved
        (between ?n ?i bed)
      )
    )
  )
)
(:constraints
  (and
    (forall (?x - game_object ?x - dodgeball)
      (and
        (preference preference1
          (exists (?p - dodgeball)
            (at-end
              (not
                (agent_holds ?p)
              )
            )
          )
        )
      )
    )
    (forall (?o ?n ?z - cube_block)
      (and
        (preference preference2
          (exists (?h - block)
            (at-end
              (touch floor ?n)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= (* (/ (+ (count preference2:yellow) (count-same-positions preference1:yellow_cube_block:hexagonal_bin:basketball) (+ (count preference1:yellow) (count-once-per-objects preference2:yellow) )
          (+ (count-once preference1:beachball) (* (> (< (count preference1:pink) 10 )
                (* (count-once-per-objects preference1:cube_block) 2 )
              )
              (* (count-overlapping preference2:green) (count-once-per-external-objects preference2:yellow) )
            )
            (total-time)
          )
          3
          (count-shortest preference1:dodgeball)
        )
        (+ 0 10 )
      )
      (count preference1:golfball)
      (count preference2)
      2
      (count-once-per-objects preference1:hexagonal_bin)
      2
      (count-once preference1:basketball)
      5
      (count-once-per-objects preference1:beachball:blue_dodgeball)
    )
    (- (count preference2:dodgeball:golfball:dodgeball) )
  )
)
(:scoring
  (count preference1:dodgeball:pink)
)
)(define (game game-id-499) (:domain few-objects-room-v1)
(:setup
  (forall (?f - hexagonal_bin)
    (game-conserved
      (and
        (agent_holds ?f)
        (and
          (in_motion agent)
          (and
            (not
              (not
                (and
                  (touch ?f ?f)
                  (agent_holds room_center)
                )
              )
            )
            (or
              (same_type front ?f)
              (same_color floor ?f)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c - block)
      (and
        (preference preference1
          (then
            (once (and (in_motion floor) (and (agent_crouches ) (not (> 10 (x_position ?c)) ) (agent_holds ?c) ) ) )
            (once (not (adjacent ?c ?c) ) )
            (once (agent_holds ?c) )
          )
        )
        (preference preference2
          (exists (?q - dodgeball)
            (then
              (hold (object_orientation ?q ?q) )
              (hold (agent_holds ?c) )
              (hold-while (and (> 7 4) (and (and (and (not (in ?c pillow) ) (not (same_color ?c ?c) ) (and (in_motion door) (adjacent rug ?q) ) ) (agent_holds bottom_shelf) ) (on ?c ?c) ) ) (on desk ?q) )
            )
          )
        )
        (preference preference3
          (exists (?x - hexagonal_bin)
            (then
              (once (not (not (and (not (agent_holds ?x) ) (and (agent_holds ?c) ) (and (rug_color_under ?c ?c) (in_motion north_wall) ) ) ) ) )
              (hold-while (agent_holds room_center) (in_motion ?c) )
              (once (and (adjacent_side top_shelf agent ?x) (on front ?x) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (count-once-per-objects preference1:beachball:pink) (count-once-per-objects preference2:dodgeball) )
    (or
      (not
        (>= (count preference1:green) (* (count-once-per-external-objects preference1:golfball) (* (external-forall-minimize (count-once-per-external-objects preference1:golfball) ) 5 (- (count preference1:pink_dodgeball) )
            )
          )
        )
      )
      (> (external-forall-maximize (external-forall-maximize (* 100 (* 5 (+ (count-longest preference2:red_pyramid_block:dodgeball) (* (count-once preference3:blue_dodgeball) (- (count-once-per-objects preference3:basketball) (count preference1:basketball) ) (- 0 )
                  )
                )
              )
            )
          )
        )
        (+ 10 (count preference1:dodgeball) )
      )
    )
  )
)
(:scoring
  1
)
)(define (game game-id-500) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (forall (?f - teddy_bear ?m - desktop ?s - curved_wooden_ramp)
        (and
          (agent_holds bed)
          (and
            (agent_holds ?s)
            (= (distance ?s ?s) (distance ?s ?s))
          )
          (touch ?s ?s)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?n - (either hexagonal_bin dodgeball))
        (then
          (forall-sequence (?d - color)
            (then
              (once (agent_holds ?n) )
              (once (and (not (on ?n ?n) ) (not (in ?d ?d) ) ) )
              (once (not (not (not (not (not (agent_holds ?d) ) ) ) ) ) )
            )
          )
          (once (and (not (same_color ?n room_center) ) (exists (?k - triangular_ramp) (on ?k ?n) ) ) )
          (once (and (adjacent ?n ?n) (broken ?n) (and (not (not (or (in_motion ?n) (not (> 6 (distance ?n ?n)) ) ) ) ) (in_motion ?n) (in_motion ?n) ) (in_motion ?n) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count preference1:yellow) 0 )
    (= 5 (+ 100 (external-forall-maximize 4 ) )
    )
  )
)
(:scoring
  (* (* 20 (* (count preference1:golfball) )
    )
    (count preference1:hexagonal_bin:yellow)
  )
)
)(define (game game-id-501) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?s - beachball ?r - cube_block ?t - (either blue_cube_block tall_cylindrical_block))
      (game-conserved
        (on ?t ?t)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?x - (either floor cd dodgeball))
        (then
          (hold (< (distance ?x floor) 3) )
          (hold (>= 1 3) )
          (once (> 7 7) )
        )
      )
    )
    (forall (?x - (either golfball golfball key_chain bridge_block dodgeball doggie_bed cube_block))
      (and
        (preference preference2
          (exists (?w - cube_block ?e - hexagonal_bin)
            (at-end
              (on desk agent)
            )
          )
        )
        (preference preference3
          (exists (?c - (either key_chain main_light_switch))
            (then
              (once (touch ?c door) )
              (once (agent_holds ?x) )
              (hold-while (and (in_motion ?c) (same_color ?x ?x) ) (game_over ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* 3 (external-forall-maximize 10 ) )
      3
    )
    (>= (count preference3:beachball) (count preference3:yellow:basketball) )
  )
)
(:scoring
  (count preference2:dodgeball)
)
)(define (game game-id-502) (:domain few-objects-room-v1)
(:setup
  (exists (?i - hexagonal_bin)
    (and
      (forall (?t - ball ?a - ball ?t - hexagonal_bin)
        (game-optional
          (and
            (in_motion ?t)
            (not
              (agent_holds ?t)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?u - tan_cube_block ?m - ball)
      (and
        (preference preference1
          (exists (?c - (either beachball basketball) ?h - hexagonal_bin)
            (then
              (hold-while (and (in_motion agent) (not (and (and (in ?m ?h) (in_motion ?m) ) (and (agent_holds ?m) (or (adjacent ?m ?h) (on drawer ?h) (not (on door ?h) ) ) ) ) ) ) (and (and (not (agent_crouches ) ) (not (not (object_orientation ?m desk) ) ) ) (not (in_motion ?h) ) (game_over ) ) )
              (hold (in_motion desk) )
              (once (and (not (not (and (not (< 4 (distance brown room_center)) ) (in_motion ?h) ) ) ) (and (not (in_motion ?m) ) (not (agent_holds blue) ) ) ) )
            )
          )
        )
        (preference preference2
          (exists (?j - game_object)
            (then
              (forall-sequence (?i ?v - hexagonal_bin)
                (then
                  (once (not (agent_holds ?v) ) )
                  (once (agent_crouches ) )
                  (once (touch ?m ?v) )
                )
              )
              (once (and (in ?j desk) ) )
              (once (touch ?j desktop) )
            )
          )
        )
      )
    )
    (forall (?z - hexagonal_bin ?x - curved_wooden_ramp)
      (and
        (preference preference3
          (exists (?u - (either blue_cube_block lamp book triangular_ramp pink pink golfball))
            (then
              (hold-while (and (and (and (adjacent ?x ?x) (and (on ?u agent) (not (and (exists (?c - dodgeball ?s - building) (not (exists (?q - ball) (exists (?a - teddy_bear) (and (not (on ?a ?s) ) (and (in_motion ?x) (same_object agent ?a) (exists (?n - ball ?j - hexagonal_bin) (in_motion ?q) ) (adjacent_side desk ?x agent) (on ?x ?a) (in ?q ?a) (open ?u) ) ) ) ) ) ) (not (agent_holds ?x) ) ) ) ) ) (in_motion desk) ) (broken ?u) ) (touch ?x ?u) (in_motion ?u) (not (touch ?u ?u) ) )
              (once (in_motion ?u) )
              (hold (agent_holds ?u) )
            )
          )
        )
        (preference preference4
          (exists (?k - building ?v ?u - block)
            (then
              (once (in_motion ?u) )
              (hold (in_motion ?u) )
              (once (in_motion bed) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count preference1:hexagonal_bin) (* 10 (count preference1:dodgeball) )
      (count preference3)
    )
    20
  )
)
(:scoring
  (+ (count-once-per-objects preference4:pink) 50 )
)
)(define (game game-id-503) (:domain few-objects-room-v1)
(:setup
  (exists (?u - block)
    (exists (?o - hexagonal_bin)
      (forall (?c - hexagonal_bin ?c - dodgeball)
        (exists (?j - triangular_ramp)
          (forall (?g - (either hexagonal_bin laptop) ?r - block)
            (forall (?l - dodgeball)
              (game-conserved
                (agent_holds ?j)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?u - game_object)
        (then
          (once (not (adjacent_side ?u bed ?u ?u) ) )
          (hold-while (adjacent ?u pink_dodgeball) (in_motion ?u) )
          (once (same_color desk ?u) )
          (once (adjacent ?u agent) )
        )
      )
    )
    (preference preference2
      (exists (?d - (either wall book))
        (then
          (once (agent_holds ?d) )
          (once (agent_holds ?d) )
          (hold (and (agent_holds ?d) (in ?d ?d) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (count preference2:block) )
)
(:scoring
  (/
    (* 4 1 )
    (total-score)
  )
)
)(define (game game-id-504) (:domain many-objects-room-v1)
(:setup
  (forall (?a ?l - game_object ?x - shelf)
    (and
      (and
        (game-conserved
          (agent_holds ?x)
        )
        (and
          (exists (?i - dodgeball ?b - (either pen tall_cylindrical_block))
            (exists (?n - hexagonal_bin)
              (forall (?w - (either cube_block pyramid_block) ?d - teddy_bear ?l - dodgeball)
                (exists (?y - hexagonal_bin)
                  (and
                    (and
                      (and
                        (exists (?t - teddy_bear ?g - teddy_bear)
                          (game-conserved
                            (in_motion ?l)
                          )
                        )
                        (exists (?h - curved_wooden_ramp ?i - hexagonal_bin)
                          (and
                            (forall (?e - building)
                              (game-optional
                                (in ?n ?l)
                              )
                            )
                            (game-conserved
                              (and
                                (and
                                  (not
                                    (and
                                      (on ?i ?i)
                                      (agent_holds ?x)
                                    )
                                  )
                                  (and
                                    (not
                                      (or
                                        (not
                                          (not
                                            (adjacent ?i agent)
                                          )
                                        )
                                      )
                                    )
                                    (not
                                      (= 1)
                                    )
                                  )
                                )
                                (adjacent agent floor)
                              )
                            )
                            (and
                              (and
                                (game-conserved
                                  (in ?y room_center)
                                )
                              )
                            )
                          )
                        )
                        (and
                          (not
                            (exists (?a - dodgeball ?f - hexagonal_bin)
                              (game-conserved
                                (same_color ?f desk)
                              )
                            )
                          )
                          (game-conserved
                            (< (distance ?b ?x) (building_size ?y))
                          )
                        )
                      )
                      (forall (?w - hexagonal_bin)
                        (forall (?v - triangular_ramp)
                          (game-conserved
                            (not
                              (on upside_down main_light_switch)
                            )
                          )
                        )
                      )
                      (and
                        (game-optional
                          (adjacent ?y ?n)
                        )
                        (forall (?z - hexagonal_bin)
                          (forall (?q - ball)
                            (and
                              (forall (?g - shelf ?w ?r - block)
                                (game-optional
                                  (in ?n ?y)
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                    (and
                      (exists (?p - ball ?a - ball)
                        (not
                          (game-conserved
                            (not
                              (exists (?o - (either game_object beachball) ?u - doggie_bed)
                                (open desk)
                              )
                            )
                          )
                        )
                      )
                      (exists (?e - (either golfball cd))
                        (game-conserved
                          (in_motion ?y)
                        )
                      )
                      (exists (?s - doggie_bed)
                        (exists (?k - flat_block ?w - hexagonal_bin ?w - ball)
                          (or
                            (and
                              (exists (?m - dodgeball)
                                (game-conserved
                                  (or
                                    (not
                                      (not
                                        (and
                                          (adjacent ?y ?w)
                                          (not
                                            (and
                                              (agent_holds ?x)
                                              (on ?n ?y)
                                            )
                                          )
                                          (agent_holds bed)
                                        )
                                      )
                                    )
                                    (exists (?o - cube_block)
                                      (in_motion ?l)
                                    )
                                  )
                                )
                              )
                              (game-conserved
                                (on ?n ?y)
                              )
                            )
                            (forall (?k - hexagonal_bin ?z - hexagonal_bin)
                              (and
                                (game-conserved
                                  (and
                                    (agent_holds door)
                                    (and
                                      (not
                                        (and
                                          (not
                                            (in_motion ?n)
                                          )
                                          (in_motion ?z)
                                          (and
                                            (and
                                              (on ?b pink)
                                              (on ?w ?w)
                                              (in_motion room_center)
                                              (in desk floor)
                                            )
                                            (touch ?b ?n)
                                          )
                                        )
                                      )
                                      (in_motion ?b)
                                      (not
                                        (agent_holds ?s)
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
        (and
          (and
            (exists (?y - game_object ?l - hexagonal_bin)
              (game-conserved
                (not
                  (in rug green_golfball)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?t - block)
        (then
          (hold (touch ?t ?t) )
          (hold (in_motion ?t) )
          (hold (not (and (same_type ?t ?t) (on agent ?t) (in ?t ?t) ) ) )
        )
      )
    )
  )
)
(:terminal
  (> (+ (count preference1:purple) (count-once-per-objects preference1:orange:green) )
    5
  )
)
(:scoring
  (* (count preference1:red:red) (count preference1:red) )
)
)(define (game game-id-505) (:domain few-objects-room-v1)
(:setup
  (exists (?v - triangular_ramp)
    (and
      (game-optional
        (in_motion ?v)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?s - ball)
        (at-end
          (= 2 1 7)
        )
      )
    )
  )
)
(:terminal
  (> 1 (+ 10 (count preference1:blue_dodgeball:hexagonal_bin) (count-once-per-external-objects preference1:dodgeball) )
  )
)
(:scoring
  (count preference1:basketball)
)
)(define (game game-id-506) (:domain few-objects-room-v1)
(:setup
  (forall (?n - hexagonal_bin ?l - chair)
    (and
      (forall (?v - dodgeball)
        (and
          (game-optional
            (touch desk ?l)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?d - triangular_ramp)
        (then
          (once (in ?d ?d) )
          (hold (or (in_motion agent) (on ?d ?d) ) )
          (hold (and (agent_holds desk) (exists (?g - cube_block ?m - doggie_bed) (on ?m ?d) ) ) )
        )
      )
    )
  )
)
(:terminal
  (> 8 (< 6 (* (+ (count-total preference1:pink:hexagonal_bin) (count preference1:purple:red) )
        10
      )
    )
  )
)
(:scoring
  (+ (count preference1:hexagonal_bin) (count-once-per-objects preference1:dodgeball:brown) (count preference1) (total-time) 1 )
)
)(define (game game-id-507) (:domain medium-objects-room-v1)
(:setup
  (exists (?a - red_pyramid_block ?x - building)
    (game-conserved
      (on ?x ?x)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?a - yellow_pyramid_block)
        (then
          (hold (on ?a ?a) )
          (once (in_motion ?a) )
          (once (in_motion ?a) )
        )
      )
    )
  )
)
(:terminal
  (>= 10 10 )
)
(:scoring
  (count-once-per-objects preference1:blue_dodgeball)
)
)(define (game game-id-508) (:domain medium-objects-room-v1)
(:setup
  (forall (?m - building ?k - chair)
    (and
      (exists (?z - wall)
        (forall (?h - (either blue_cube_block curved_wooden_ramp))
          (and
            (and
              (exists (?t - dodgeball)
                (game-conserved
                  (and
                    (in_motion ?z)
                    (not
                      (touch ?z ?t)
                    )
                    (and
                      (agent_holds ?z)
                      (not
                        (touch room_center ?h)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?k - doggie_bed ?g - bridge_block ?c ?s - doggie_bed)
        (then
          (hold (not (not (in_motion ?s) ) ) )
          (once (and (not (adjacent ?s ?c) ) (between ?c pink_dodgeball ?s) (in green_golfball ?c) ) )
          (hold (in ?s ?s) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (+ (+ 3 (* 100 5 )
        )
        5
      )
      (count-once preference1:block)
    )
    (>= 3 15 )
  )
)
(:scoring
  (* (+ (count preference1:purple) (count preference1:blue_dodgeball) 20 (count-shortest preference1:basketball) (+ (count preference1:basketball) (+ (* (* 10 (count preference1:beachball) )
            (count preference1:book)
            (* (count preference1:dodgeball:pink) 5 )
            2
            (+ (* 5 (* (count preference1:dodgeball) (total-time) )
              )
              4
            )
            (- (count-once preference1:basketball:dodgeball) )
          )
          5
        )
      )
      5
      40
      (* (* (+ 2 (* (count-once preference1:basketball) (* (+ (count preference1:dodgeball:blue_pyramid_block) 10 )
                (count preference1:pink:beachball)
              )
            )
          )
          (count-once-per-objects preference1:pink)
        )
        (count preference1:beachball)
      )
      (external-forall-maximize
        (< 10 (- 5 )
        )
      )
    )
    3
    (/
      (>= (+ 5 (* (count-once-per-objects preference1:red) (>= 5 (count preference1:dodgeball) )
          )
        )
        3
      )
      (-
        (count-once-per-objects preference1:basketball)
        (* (count-same-positions preference1:green) (count-once-per-objects preference1:basketball:cube_block) )
      )
    )
    (count-overlapping preference1:dodgeball)
  )
)
)(define (game game-id-509) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?b - hexagonal_bin)
      (forall (?g - teddy_bear)
        (not
          (forall (?x - dodgeball ?o - (either alarm_clock laptop))
            (forall (?y - hexagonal_bin ?m - block)
              (exists (?i - hexagonal_bin ?q - ball ?y - hexagonal_bin)
                (exists (?q - cube_block ?n - dodgeball)
                  (game-conserved
                    (in_motion ?n)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?b - shelf)
        (then
          (hold (on pink_dodgeball ?b) )
          (hold (not (agent_holds ?b) ) )
          (once (agent_holds ?b) )
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (< (+ (count-once preference1:golfball) (not (external-forall-minimize (* (count-once-per-external-objects preference1:dodgeball) 3 18 4 )
            )
          )
        )
        (* (* 3 (count-once-per-objects preference1:dodgeball) )
          (count preference1:tan)
        )
      )
      (or
        (or
          (< (count-once-per-external-objects preference1:pink) (+ (count preference1:dodgeball) (count preference1:golfball) )
          )
          (and
            (or
              (and
                (or
                  (and
                    (>= 5 12 )
                    (or
                      (or
                        (>= (* (count preference1:basketball) (* (count preference1:cube_block) 5 )
                            (count preference1:white)
                          )
                          (- 100 )
                        )
                        (> (count-once preference1:dodgeball:blue) 3 )
                        (>= 10 (count preference1:dodgeball) )
                      )
                      (>= (> (count preference1:pink) (count-once-per-objects preference1:basketball) )
                        (count preference1:purple:green)
                      )
                      (= (count preference1:golfball) 3 )
                    )
                    (>= 3 (- (count-once-per-objects preference1:orange) )
                    )
                  )
                  (or
                    (>= (< (count-once-per-objects preference1:dodgeball) (- (* (count-same-positions preference1:golfball) (count preference1:dodgeball) )
                        )
                      )
                      (count preference1:blue_dodgeball)
                    )
                    (not
                      (>= 8 (* 2 (* (* (count preference1:dodgeball) 3 (count preference1:golfball) 3 (count preference1:golfball) )
                            (count-once-per-objects preference1:tan)
                            2
                            (+ 12 3 )
                            (* (count-once-per-objects preference1:basketball) (* (- (* (count preference1:tan) (* 6 (+ (+ (count-once preference1:blue_dodgeball) (count-once-per-objects preference1:blue_pyramid_block) )
                                        (count preference1:green)
                                      )
                                    )
                                  )
                                )
                                (- 3 )
                              )
                            )
                            (= (count-once-per-objects preference1:dodgeball:beachball) 3 (* 8 (count-once preference1:beachball) )
                            )
                          )
                        )
                      )
                    )
                    (>= (count-shortest preference1:white:beachball) (* (+ (count-once-per-objects preference1:yellow) (count preference1:dodgeball:yellow_cube_block) )
                        (* (count preference1:red) (+ (total-score) (* 1 10 4 )
                            (* (count preference1:yellow) (* 20 (count preference1:dodgeball:yellow_cube_block) )
                            )
                          )
                          7
                          4
                          40
                          (count preference1:orange)
                          (count preference1:beachball)
                          (count-once-per-objects preference1:beachball)
                          (count preference1:dodgeball:red)
                          9
                          (count-once preference1:beachball)
                          30
                        )
                      )
                    )
                  )
                )
                (>= 2 (* (* (count-once-per-external-objects preference1:dodgeball) 3 )
                    (total-score)
                    (count preference1:beachball:beachball)
                    (count-once-per-objects preference1:basketball:beachball)
                  )
                )
              )
              (>= (count-once-per-external-objects preference1:doggie_bed) (total-score) )
            )
            (not
              (or
                (>= (= 3 (* 10 8 100 )
                  )
                  (count-once-per-objects preference1:red)
                )
                (or
                  (>= (external-forall-maximize (* (count-once-per-external-objects preference1:blue_dodgeball) (count-once-per-objects preference1:white) )
                    )
                    (not
                      3
                    )
                  )
                  (not
                    (or
                      (= (and (* (count-once preference1:yellow:yellow) (* (external-forall-maximize 4 ) 9 )
                          )
                          (+ (* (count preference1:golfball:beachball) (* 5 (count-once-per-objects preference1:golfball) )
                            )
                            (- (count-shortest preference1:basketball) )
                            (* (- 0 )
                              (- (count preference1:beachball) )
                            )
                          )
                          (count preference1:dodgeball:golfball:dodgeball)
                        )
                        (+ (+ (count-once-per-objects preference1:pink:book) (count preference1:yellow:dodgeball) )
                          10
                        )
                      )
                      (> 15 (count-once-per-objects preference1:bed) )
                    )
                  )
                  (>= (count preference1:basketball:purple) (total-time) )
                )
                (>= (<= 10 (count preference1:blue_dodgeball) )
                  (count preference1:blue)
                )
              )
            )
            (>= (+ (count preference1:dodgeball) 2 )
              (count-once-per-objects preference1:dodgeball)
            )
          )
        )
        (>= (count preference1:rug) (count preference1:pink:book) )
        (not
          (> (count-unique-positions preference1:beachball:pink:golfball) (total-time) )
        )
      )
    )
  )
)
(:scoring
  4
)
)(define (game game-id-510) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (not
      (in_motion desk)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?e ?x - curved_wooden_ramp)
        (then
          (hold (agent_holds ?e) )
          (once (object_orientation front ?x) )
          (once (in ?e ?e) )
        )
      )
    )
    (forall (?s ?l ?a ?j - yellow_cube_block)
      (and
        (preference preference2
          (exists (?t - block)
            (at-end
              (on ?j ?a)
            )
          )
        )
        (preference preference3
          (exists (?g - hexagonal_bin)
            (then
              (once (agent_holds ?j) )
              (hold (broken drawer) )
              (once (and (in_motion ?a) (in_motion ?a) ) )
            )
          )
        )
        (preference preference4
          (exists (?p - doggie_bed)
            (then
              (hold (rug_color_under ?l ?s) )
              (once (< 0 1) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (external-forall-maximize (- (* (count-once-per-objects preference1:pink) 0 )
      )
    )
    (* (- 7 )
      (* (* (* (* 2 20 )
            5
          )
        )
        (* 2 (- (+ (+ (< (* (count preference2:hexagonal_bin) (count preference2:pink) (external-forall-maximize 180 ) (count preference2:golfball) (count preference3:dodgeball) (count-once preference2:beachball) )
                  6
                )
                (count preference4:purple)
              )
              (count-same-positions preference2:doggie_bed)
              (count-once-per-objects preference4:pyramid_block:green)
              (count-same-positions preference1:rug:book)
              (- (count preference4:yellow) )
              (* (count preference2:blue_dodgeball:tall_cylindrical_block) (* (or 30 (and (* (count-overlapping preference1:pink) (- (not (* (count preference1:wall:alarm_clock) (* (count-once preference1:beachball) (total-time) 50 (count preference1:cube_block:blue_dodgeball) (count preference3:doggie_bed) (+ (count-once-per-external-objects preference3:rug) (count-once preference3:basketball) (count preference4:pink_dodgeball) (count preference2:pink:beachball) (count-once preference4:golfball:golfball:yellow) )
                              )
                              2
                              (+ (count-increasing-measure preference2:orange:pink_dodgeball:basketball) (- (* (count preference2:basketball) (* 6 (and (external-forall-maximize (external-forall-maximize 10 ) ) (or 5 ) ) )
                                  )
                                )
                                10
                                (+ (count-unique-positions preference2:hexagonal_bin) (- (external-forall-minimize (- (count-once-per-objects preference4:red:basketball) 2 ) ) )
                                )
                              )
                            )
                          )
                        )
                      )
                      (count preference2:pink:tall_cylindrical_block:blue_dodgeball)
                      4
                    )
                    (count-once-per-objects preference2:dodgeball:red:tan)
                  )
                  4
                )
              )
            )
          )
          2
          5
        )
      )
    )
  )
)
(:scoring
  (count-once-per-objects preference1:dodgeball:pink)
)
)(define (game game-id-511) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds agent)
  )
)
(:constraints
  (and
    (forall (?s - building ?d - curved_wooden_ramp ?j - cube_block ?a - hexagonal_bin)
      (and
        (preference preference1
          (exists (?c - hexagonal_bin)
            (then
              (once (not (is_setup_object ?a) ) )
              (hold (on ?a ?a) )
              (once (and (and (and (and (not (in_motion pink_dodgeball) ) (in_motion ?c) ) (and (in ?c floor) (faces room_center ?a) ) ) (not (and (not (above ?a rug) ) (agent_holds ?a) ) ) (agent_holds agent) (not (in_motion bed) ) (not (in_motion ?a) ) (and (in_motion ?a) (and (in_motion ?c) (in_motion ?c) ) (in_motion ?c) (on ?a ?a) ) (and (adjacent_side ?a floor ?a ?c) (< 9 (distance floor rug)) ) ) (touch ?a ?a) ) )
            )
          )
        )
        (preference preference2
          (exists (?b - teddy_bear)
            (then
              (once (not (and (on ?a ?a) (or (in_motion ?b) (agent_holds ?a) ) ) ) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?i - ball)
        (then
          (hold (agent_holds ?i) )
          (once (in ?i ?i) )
          (once (agent_holds ?i) )
        )
      )
    )
    (forall (?g ?p - book)
      (and
        (preference preference4
          (exists (?h - dodgeball ?f - (either desktop))
            (then
              (once (not (forall (?s - (either pillow)) (agent_holds ?g) ) ) )
              (once (and (object_orientation ?g ?f) ) )
              (once-measure (agent_holds desk) (x_position bed) )
            )
          )
        )
        (preference preference5
          (exists (?r - pillow ?q - hexagonal_bin ?a - dodgeball)
            (then
              (once (and (in_motion ?g) (forall (?h - chair) (agent_holds ?g) ) (in_motion ?a) ) )
              (once (and (and (and (in_motion ?g) ) (agent_holds ?a) ) (faces ?a floor) ) )
              (once (toggled_on ?g) )
              (once (on ?a agent) )
            )
          )
        )
        (preference preference6
          (exists (?o - (either blue_cube_block chair basketball) ?i - dodgeball)
            (at-end
              (adjacent ?p ?g)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference3:pink_dodgeball:doggie_bed) (* (* (count-once-per-objects preference5:tall_cylindrical_block) )
      (count preference6:orange)
    )
  )
)
(:scoring
  50
)
)(define (game game-id-512) (:domain medium-objects-room-v1)
(:setup
  (exists (?k - flat_block ?d - chair)
    (and
      (and
        (and
          (exists (?n - cube_block)
            (and
              (game-conserved
                (agent_holds desk)
              )
            )
          )
        )
        (game-conserved
          (adjacent ?d ?d)
        )
      )
      (exists (?z - hexagonal_bin ?j - block)
        (exists (?a - curved_wooden_ramp ?f - dodgeball)
          (and
            (game-conserved
              (in_motion ?f)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?h - shelf ?z - hexagonal_bin)
        (then
          (hold (agent_holds agent) )
          (hold (and (toggled_on ?z) (adjacent ?z ?z) ) )
          (hold (and (adjacent_side ?z ?z bed) (agent_holds ?z) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (* 10 (total-score) (count preference1:beachball) )
      10
    )
    18
  )
)
(:scoring
  10
)
)(define (game game-id-513) (:domain few-objects-room-v1)
(:setup
  (exists (?d - dodgeball)
    (and
      (game-optional
        (on ?d ?d)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?g - dodgeball)
        (then
          (once (not (agent_holds ?g) ) )
          (once (and (not (adjacent ?g ?g) ) (<= (distance ?g ?g) 10) ) )
          (once (and (in_motion ?g) (not (in_motion ?g) ) ) )
        )
      )
    )
    (forall (?f - hexagonal_bin ?u - dodgeball ?i - (either doggie_bed cylindrical_block) ?e - hexagonal_bin ?m - game_object)
      (and
        (preference preference2
          (exists (?v - hexagonal_bin)
            (then
              (once (same_type ?m ?m) )
              (once (and (exists (?k - ball) (not (and (in_motion agent) (not (not (forall (?x - hexagonal_bin) (not (not (not (and (exists (?i - golfball ?g - hexagonal_bin) (and (rug_color_under ?k ?m) (and (touch agent agent) (not (adjacent ?x agent) ) ) ) ) (same_type ?x ?v) ) ) ) ) ) ) ) (not (<= 1 5) ) (or (agent_holds bed) (agent_holds ?k) ) (on ?v ?m) (is_setup_object ?m) (game_over ) ) ) ) (> 1 (x_position ?v)) ) )
              (once (< 5 4) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (+ (* (count-once-per-objects preference2:dodgeball) 2 )
        (* (and (count-unique-positions preference1:purple:dodgeball:dodgeball) 5 ) (count preference1:pink) (count preference2:green:red:cylindrical_block) (- (count preference1:pink) )
          50
          3
        )
      )
      15
    )
  )
)
(:scoring
  (count-once preference1:hexagonal_bin)
)
)(define (game game-id-514) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?w - ball ?k - yellow_cube_block ?y - wall)
      (game-conserved
        (agent_holds ?y)
      )
    )
    (forall (?p - dodgeball)
      (game-optional
        (faces ?p bed)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?h - curved_wooden_ramp ?a - pyramid_block)
        (at-end
          (< 0.5 (distance ?a ?a))
        )
      )
    )
  )
)
(:terminal
  (= (total-score) (count preference1:pink_dodgeball) )
)
(:scoring
  (+ (* 1 15 )
    (* 10 (+ (* 1 (count-once-per-objects preference1:basketball) )
        2
      )
    )
  )
)
)(define (game game-id-515) (:domain few-objects-room-v1)
(:setup
  (exists (?m - curved_wooden_ramp ?i - cube_block)
    (game-conserved
      (not
        (in_motion ?i)
      )
    )
  )
)
(:constraints
  (and
    (forall (?q - flat_block)
      (and
        (preference preference1
          (exists (?o - hexagonal_bin ?j - dodgeball)
            (then
              (once (and (in_motion ?j) (= (distance ?j ?j) (distance ?j ?j)) ) )
              (once (agent_holds ?q) )
              (once (between ?q ?q bed) )
            )
          )
        )
        (preference preference2
          (exists (?m - hexagonal_bin)
            (then
              (once (and (not (agent_holds ?m) ) (agent_holds ?q) ) )
              (once (not (agent_holds ?q) ) )
              (hold (not (same_color ?m ?m) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (count preference1:block) (count preference2:tan) )
)
(:scoring
  (* 10 (count preference1:pink:hexagonal_bin) )
)
)(define (game game-id-516) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (in_motion agent)
  )
)
(:constraints
  (and
    (forall (?b - (either basketball cylindrical_block) ?z - red_dodgeball)
      (and
        (preference preference1
          (exists (?n - game_object ?k ?i - tall_cylindrical_block)
            (then
              (hold (< (distance upright ?z) 9) )
              (once (in ?i rug) )
              (hold (in_motion ?i) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?f - ball)
        (then
          (once (and (not (touch ?f ?f) ) (agent_holds ?f) ) )
          (hold (in_motion ?f) )
          (once (not (exists (?u - golfball ?s - drawer) (and (agent_holds top_drawer) (not (in_motion ?s) ) (not (in agent ?s) ) ) ) ) )
        )
      )
    )
    (preference preference3
      (exists (?f - pyramid_block)
        (then
          (once-measure (on rug ?f) (distance ?f ?f) )
          (once (exists (?z - (either pyramid_block golfball hexagonal_bin)) (not (faces ?z ?f) ) ) )
          (once (< 1 (distance upright ?f)) )
        )
      )
    )
  )
)
(:terminal
  (>= (external-forall-minimize 8 ) (count-once-per-external-objects preference2:dodgeball) )
)
(:scoring
  0
)
)(define (game game-id-517) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?w - curved_wooden_ramp)
      (game-optional
        (in_motion ?w)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?m - curved_wooden_ramp)
        (then
          (hold (agent_holds brown) )
          (once (not (toggled_on ?m) ) )
          (hold-while (agent_holds door) (equal_z_position ?m ?m) )
          (once (in_motion rug) )
          (once (on bed ?m) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 6 (count preference1:blue_cube_block) )
  )
)
(:scoring
  (* (* (count-once-per-objects preference1:basketball:white) 5 )
    6
  )
)
)(define (game game-id-518) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?w - hexagonal_bin)
      (game-conserved
        (in_motion ?w)
      )
    )
  )
)
(:constraints
  (and
    (forall (?v - (either key_chain rug) ?m - dodgeball)
      (and
        (preference preference1
          (exists (?h ?e - hexagonal_bin)
            (then
              (once (in agent ?m) )
              (once (in_motion ?e) )
              (hold (exists (?u - hexagonal_bin) (in_motion room_center) ) )
            )
          )
        )
      )
    )
    (forall (?m - cube_block)
      (and
        (preference preference2
          (exists (?q ?a - block)
            (then
              (once (in_motion rug) )
              (once (and (game_over ) (and (= (distance_side ?m agent ?m) (distance ?a pink_dodgeball)) (and (agent_holds ?a) (or (agent_holds ?m) (in desk bed) ) (agent_holds ?m) ) ) ) )
              (once (in_motion door) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?o - doggie_bed)
        (at-end
          (in_motion ?o)
        )
      )
    )
  )
)
(:terminal
  (or
    (and
      (>= 6 (count preference2:red:red) )
      (or
        (or
          (>= (count preference1:dodgeball) 2 )
          (or
            (> 2 10 )
            (>= 2 (count-total preference3:dodgeball) )
          )
        )
        (> (- (count-once-per-objects preference2:pink:golfball) )
          (= (total-score) (total-time) )
        )
      )
      (not
        (or
          (>= 3 (count preference2:basketball:dodgeball) )
          (< (count preference1:pyramid_block) (count preference2:pink_dodgeball) )
        )
      )
    )
  )
)
(:scoring
  (- (count-longest preference2:pink_dodgeball) )
)
)(define (game game-id-519) (:domain many-objects-room-v1)
(:setup
  (exists (?q - doggie_bed)
    (game-optional
      (on ?q ?q)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?h - doggie_bed)
        (then
          (once (is_setup_object pink_dodgeball) )
          (once (not (not (not (not (and (or (in_motion ?h) (agent_holds ?h) ) (on ?h ?h) ) ) ) ) ) )
          (hold (same_color ?h ?h) )
        )
      )
    )
    (preference preference2
      (exists (?w - hexagonal_bin ?r - ball ?o - green_triangular_ramp)
        (then
          (once (not (and (in_motion bed) (not (and (agent_holds ?o) (and (in ?o ?o) (is_setup_object ?o) (in ?o ?o) ) (in_motion ?o) ) ) (in agent rug) ) ) )
          (hold (and (and (not (and (agent_holds ?o) (object_orientation ?o agent) (< (distance rug ?o) 1) ) ) (not (and (agent_holds ?o) (< (distance ?o ?o) 2) (in_motion ?o) ) ) ) (and (not (agent_holds ?o) ) (in_motion agent) ) ) )
          (hold-for 4 (not (not (and (in_motion ?o) (and (not (agent_holds agent) ) (< (distance agent ?o) 1) (agent_holds ?o) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count preference1:golfball) (* (+ 5 2 )
        (count-once-per-external-objects preference2:basketball)
      )
    )
    (or
      (>= 15 (* (count preference2:pink) 2 )
      )
      (or
        (and
          (or
            (>= (count preference1:beachball) (- 50 )
            )
          )
          (or
            (or
              (or
                (or
                  (>= 3 (external-forall-maximize (external-forall-maximize 3 ) ) )
                  (>= (* 5 (* 3 (count preference2) )
                    )
                    (count preference1:golfball)
                  )
                )
                (or
                  (<= (not 10 ) (count-once preference1:dodgeball) )
                  (or
                    (>= (count preference1:yellow) (+ (count preference1:pyramid_block:doggie_bed:rug) (count-once-per-objects preference1:pink_dodgeball:beachball) )
                    )
                    (>= 5 (count preference2:dodgeball:basketball:hexagonal_bin) )
                  )
                )
                (not
                  (>= (count-once preference2) 3 )
                )
              )
              (>= (= 1 3 (* (count preference1:beachball) 5 1 )
                )
                (total-score)
              )
            )
            (<= 4 (count-measure preference2:cylindrical_block) )
          )
          (>= (count preference1:golfball) (count-once-per-external-objects preference2:golfball) )
        )
        (and
          (or
            (> 30 (count preference1:cube_block:basketball:dodgeball) )
            (> (count-once-per-objects preference2:beachball:yellow_cube_block) (* (- 3 )
                (* 4 (+ 2 2 )
                  3
                  (external-forall-maximize
                    (* (+ (total-score) (* (count-once preference2:basketball) (- 5 )
                        )
                        (external-forall-maximize
                          (- (count preference2:blue_dodgeball) )
                        )
                      )
                      (count-once-per-objects preference2:green)
                    )
                  )
                  2
                  (count preference2:green)
                )
              )
            )
          )
          (>= (count-unique-positions preference2:red_pyramid_block) (count preference2:pyramid_block) )
          (or
            (>= (count-once-per-objects preference1:pink) (count-once-per-objects preference1:basketball) )
          )
        )
        (<= (count preference1:doggie_bed) (count-once-per-objects preference2:red) )
      )
      (>= (count-once-per-objects preference2:blue_dodgeball) (count preference2:red) )
    )
  )
)
(:scoring
  (count preference2:blue_dodgeball)
)
)(define (game game-id-520) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?c - building ?c - (either blue_cube_block red))
      (forall (?t - (either book alarm_clock))
        (and
          (game-conserved
            (same_type ?t ?c)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?v ?e - dodgeball)
        (then
          (hold-while (and (in_motion ?e) (and (between ?v ?e ?e) (and (not (not (agent_crouches ) ) ) (> (distance green_golfball ?v) (distance ?e ?v)) (in_motion ?e) ) ) (not (and (not (and (in_motion ?v) (in_motion ?v) ) ) (and (in_motion ?v) (and (and (adjacent agent ?v) (and (and (not (adjacent_side bed ?v ?v) ) (and (not (on ?v ?v) ) (in_motion ?e) ) (not (adjacent ?v agent) ) ) (in_motion agent) ) (and (in_motion ?v) (agent_holds ?e) (< (distance ?v sideways) 1) (> (distance ?v agent) 1) ) ) (agent_holds ?e) ) (in ?v ?e) (exists (?k - hexagonal_bin) (broken ?v) ) (not (adjacent ?e rug) ) (agent_holds ?e) ) ) ) (not (and (not (in_motion ?v) ) (and (in pink desk) (in_motion ?e) ) ) ) ) (not (not (agent_holds ?e) ) ) )
          (once (agent_holds room_center) )
          (hold (in_motion ?e) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (> (count preference1:blue_dodgeball:green) (+ (* 8 (= 3 2 )
          )
          (external-forall-minimize
            (total-score)
          )
        )
      )
      (>= (* (count-longest preference1:golfball) 2 )
        (total-score)
      )
    )
    (or
      (> (* (count-overlapping preference1:white:dodgeball) (- (+ (* (count preference1:hexagonal_bin) 5 )
              (count preference1:dodgeball)
            )
            1
          )
        )
        9
      )
    )
  )
)
(:scoring
  (count-once-per-objects preference1:yellow)
)
)(define (game game-id-521) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?y - game_object)
      (game-conserved
        (in ?y ?y)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?y - (either beachball key_chain))
        (then
          (once (in_motion ?y) )
          (once (in ?y ?y) )
          (once (not (above ?y desk) ) )
          (once (agent_holds ?y) )
        )
      )
    )
    (preference preference2
      (exists (?d - (either yellow_cube_block game_object))
        (at-end
          (in ?d ?d)
        )
      )
    )
  )
)
(:terminal
  (= (count-once-per-objects preference1:purple:orange:pink) (count preference2:beachball) )
)
(:scoring
  3
)
)(define (game game-id-522) (:domain medium-objects-room-v1)
(:setup
  (exists (?l - building ?g - teddy_bear)
    (and
      (forall (?z - hexagonal_bin)
        (game-conserved
          (on ?z ?z)
        )
      )
      (game-conserved
        (in ?g ?g)
      )
    )
  )
)
(:constraints
  (and
    (forall (?l - hexagonal_bin)
      (and
        (preference preference1
          (exists (?o ?z - sliding_door)
            (then
              (once (agent_holds ?l) )
              (once (same_type ?z ?z) )
              (hold (in ?o door) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 8 (count preference1:doggie_bed) )
    (= (count preference1:hexagonal_bin) 7 )
  )
)
(:scoring
  (count-once-per-objects preference1:basketball)
)
)(define (game game-id-523) (:domain medium-objects-room-v1)
(:setup
  (exists (?f - beachball)
    (and
      (and
        (and
          (and
            (game-optional
              (not
                (and
                  (in ?f ?f)
                  (same_color ?f ?f)
                )
              )
            )
          )
        )
        (game-conserved
          (in_motion ?f)
        )
      )
      (and
        (exists (?r - chair)
          (and
            (exists (?t - hexagonal_bin)
              (and
                (game-optional
                  (touch ?r ?f)
                )
              )
            )
          )
        )
        (game-optional
          (in_motion desk)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?n - building)
        (then
          (once (touch ?n ?n) )
          (hold (and (and (agent_holds ?n) (game_over ) ) (not (on ?n ?n) ) ) )
          (hold (<= 3 (distance_side desk desk ?n)) )
        )
      )
    )
    (preference preference2
      (exists (?w - game_object)
        (then
          (hold-while (agent_holds ?w) (in_motion ?w) )
          (once (in ?w ?w) )
          (once (and (in_motion ?w) (and (not (not (in_motion ?w) ) ) (in_motion ?w) ) ) )
        )
      )
    )
    (preference preference3
      (exists (?v - hexagonal_bin ?y - ball)
        (at-end
          (not
            (in_motion side_table)
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (and
      (> (count preference2:blue_pyramid_block:cylindrical_block) 3 )
      (>= 2 5 )
    )
    (or
      (>= 8 (count-once-per-objects preference3:white) )
      (>= 1 (not 1 ) )
    )
  )
)
(:scoring
  10
)
)(define (game game-id-524) (:domain few-objects-room-v1)
(:setup
  (forall (?w - dodgeball ?o - block)
    (game-optional
      (adjacent ?o bed)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?t - cube_block ?m - block)
        (at-end
          (on ?m ?m)
        )
      )
    )
  )
)
(:terminal
  (= 5 (< 2 (+ (count-once-per-objects preference1:green) 1 )
    )
  )
)
(:scoring
  (/
    (count preference1:basketball)
    (total-score)
  )
)
)(define (game game-id-525) (:domain few-objects-room-v1)
(:setup
  (exists (?r - hexagonal_bin)
    (and
      (exists (?l - dodgeball ?o - wall)
        (exists (?d - pyramid_block)
          (game-optional
            (in_motion agent)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?b - book ?u - block ?t - hexagonal_bin)
        (then
          (once (not (same_type ?t ?t) ) )
          (once (in_motion ?t) )
          (once (= (distance ?t ?t) (distance room_center ?t) 1) )
        )
      )
    )
    (preference preference2
      (exists (?a - triangular_ramp)
        (then
          (once (on ?a ?a) )
          (hold-while (on ?a ?a) (agent_holds agent) )
          (once (not (object_orientation ?a ?a) ) )
        )
      )
    )
    (preference preference3
      (exists (?p - dodgeball)
        (then
          (once (not (in_motion bed) ) )
          (once (in ?p ?p) )
          (once (touch ?p ?p) )
          (once (and (agent_holds ?p) (in ?p ?p) ) )
        )
      )
    )
  )
)
(:terminal
  (< (count preference3:top_drawer) (total-score) )
)
(:scoring
  (+ (and 20 (<= 10 (* 20 (count-overlapping preference3:blue_cube_block) (* 5 (* (+ 4 6 )
              (total-score)
            )
            2
            (count preference2:yellow)
          )
          (count preference2:basketball)
          (* (or (count preference2:dodgeball) 6 ) 10 )
          (count-once-per-objects preference2:yellow)
          (count preference3:tan)
          (+ (* 9 (count preference3:beachball) (count preference3:cylindrical_block) )
            (count preference3:alarm_clock)
          )
          (count preference3:golfball)
        )
      )
    )
    (count-once-per-objects preference3:brown:pink:green)
  )
)
)(define (game game-id-526) (:domain medium-objects-room-v1)
(:setup
  (exists (?x - dodgeball)
    (or
      (and
        (exists (?y - beachball ?a - golfball ?s - hexagonal_bin ?t ?f ?c ?m ?k ?v - hexagonal_bin)
          (and
            (game-conserved
              (and
                (in ?m ?c)
                (in ?v north_wall)
              )
            )
            (and
              (game-optional
                (and
                  (on ?f upright)
                  (not
                    (not
                      (in_motion ?c)
                    )
                  )
                )
              )
            )
            (exists (?p - dodgeball)
              (forall (?o - dodgeball)
                (game-optional
                  (and
                    (and
                      (and
                        (in_motion ?o)
                        (same_object ?o ?x)
                        (in_motion ?v)
                      )
                      (in_motion ?f)
                      (in_motion ?m)
                    )
                    (agent_holds ?p)
                  )
                )
              )
            )
          )
        )
        (and
          (forall (?e - hexagonal_bin)
            (and
              (not
                (exists (?z - ball)
                  (game-conserved
                    (or
                      (agent_crouches )
                      (exists (?g - block ?u - hexagonal_bin)
                        (and
                          (and
                            (< (distance ?z ?x) 1)
                            (and
                              (agent_holds pink_dodgeball)
                              (and
                                (and
                                  (in_motion ?u)
                                  (touch ?z ?z)
                                )
                                (in_motion ?u)
                              )
                            )
                          )
                          (in_motion ?x)
                        )
                      )
                      (and
                        (agent_holds ?e)
                        (in_motion ?e)
                      )
                    )
                  )
                )
              )
              (forall (?p - game_object ?k ?y - ball)
                (forall (?q - dodgeball)
                  (game-conserved
                    (agent_holds bed)
                  )
                )
              )
            )
          )
          (and
            (and
              (game-optional
                (not
                  (in ?x ?x)
                )
              )
              (and
                (and
                  (exists (?l - dodgeball ?a - dodgeball ?d - dodgeball)
                    (exists (?h - sliding_door)
                      (game-conserved
                        (in_motion ?d)
                      )
                    )
                  )
                  (exists (?k - dodgeball ?l - drawer)
                    (exists (?m - chair)
                      (game-conserved
                        (adjacent ?x ?x)
                      )
                    )
                  )
                  (exists (?n - building)
                    (not
                      (game-optional
                        (exists (?y - (either book doggie_bed laptop) ?s - bridge_block ?d - bridge_block)
                          (and
                            (agent_holds ?x)
                            (not
                              (adjacent_side ?x ?x ?n)
                            )
                          )
                        )
                      )
                    )
                  )
                  (and
                    (exists (?h - ball)
                      (game-conserved
                        (and
                          (not
                            (in ?h ?x)
                          )
                          (and
                            (not
                              (in_motion ?x)
                            )
                            (on ?x ?h)
                          )
                        )
                      )
                    )
                  )
                  (exists (?a - cube_block)
                    (and
                      (exists (?b - hexagonal_bin)
                        (and
                          (forall (?f - (either pen dodgeball) ?k - shelf)
                            (forall (?r - hexagonal_bin)
                              (game-conserved
                                (not
                                  (= (distance ?k ?k) (distance ?r ?a))
                                )
                              )
                            )
                          )
                        )
                      )
                      (or
                        (and
                          (game-optional
                            (and
                              (in_motion ?a)
                              (on ?a ?a)
                            )
                          )
                          (exists (?y - hexagonal_bin ?l - (either dodgeball bridge_block) ?k - shelf)
                            (game-conserved
                              (on ?k ?x)
                            )
                          )
                        )
                        (or
                          (game-conserved
                            (and
                              (toggled_on ?x)
                              (not
                                (not
                                  (and
                                    (agent_holds room_center)
                                    (in_motion ?x)
                                  )
                                )
                              )
                              (faces ?x ?x)
                              (and
                                (and
                                  (agent_holds ?a)
                                  (in_motion ?x)
                                )
                              )
                            )
                          )
                          (and
                            (game-conserved
                              (and
                                (in_motion ?x)
                                (in_motion ?a)
                              )
                            )
                            (game-conserved
                              (in_motion door)
                            )
                            (exists (?r - hexagonal_bin ?w - golfball)
                              (game-conserved
                                (agent_holds ?x)
                              )
                            )
                          )
                        )
                        (game-optional
                          (in_motion ?a)
                        )
                      )
                      (game-optional
                        (agent_holds ?x)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
      (exists (?h - dodgeball)
        (exists (?e - cube_block)
          (or
            (exists (?g - curved_wooden_ramp ?c - hexagonal_bin ?g - wall)
              (exists (?q - dodgeball ?o ?v ?c - cube_block)
                (game-optional
                  (< (building_size ?v) (distance right ?o))
                )
              )
            )
            (exists (?r - triangular_ramp)
              (exists (?l - dodgeball)
                (exists (?j - hexagonal_bin ?o - dodgeball)
                  (and
                    (exists (?w - building)
                      (and
                        (and
                          (game-conserved
                            (in_motion ?x)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
            (forall (?i - ball)
              (exists (?g - ball)
                (and
                  (and
                    (and
                      (and
                        (forall (?k - color ?w ?v ?o - (either dodgeball doggie_bed golfball laptop))
                          (forall (?l - (either pillow bridge_block))
                            (forall (?r - ball ?r - doggie_bed)
                              (game-conserved
                                (not
                                  (and
                                    (in ?h ?v)
                                    (agent_holds ?i)
                                  )
                                )
                              )
                            )
                          )
                        )
                        (or
                          (game-optional
                            (= 10 (distance ?i ?x))
                          )
                          (exists (?b - doggie_bed ?k - ball)
                            (game-optional
                              (in ?x ?h)
                            )
                          )
                        )
                        (exists (?m - cube_block)
                          (exists (?u - game_object)
                            (exists (?o - (either doggie_bed cube_block top_drawer))
                              (and
                                (forall (?z - hexagonal_bin ?t - hexagonal_bin)
                                  (exists (?q - dodgeball)
                                    (game-optional
                                      (forall (?y - hexagonal_bin)
                                        (exists (?k ?z - (either pyramid_block wall))
                                          (not
                                            (forall (?v - pyramid_block)
                                              (< (distance agent ?m) (distance ?h ?v))
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                      (forall (?t - building)
                        (game-conserved
                          (equal_x_position ?i ?g)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
      (game-optional
        (agent_holds pink_dodgeball)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?n - (either laptop pencil))
        (at-end
          (in ?n ?n)
        )
      )
    )
  )
)
(:terminal
  (> (* 8 (external-forall-maximize (count preference1:beachball) ) )
    (+ 2 )
  )
)
(:scoring
  (count preference1:dodgeball)
)
)(define (game game-id-527) (:domain medium-objects-room-v1)
(:setup
  (exists (?e - chair ?l - dodgeball)
    (exists (?z - dodgeball)
      (game-optional
        (not
          (> 1 (distance_side agent ?l desk ?l))
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?x - curved_wooden_ramp ?j - (either tall_cylindrical_block))
        (then
          (hold (not (and (above ?j ?j) (broken ?j) ) ) )
          (once (equal_x_position ?j ?j) )
          (hold (touch ?j ?j) )
        )
      )
    )
    (preference preference2
      (exists (?u - game_object)
        (then
          (once (in_motion ?u) )
          (hold (and (and (< (distance ?u ?u) (distance ?u ?u)) (and (in_motion ?u) (agent_holds ?u) (in_motion ?u) ) ) (agent_holds ?u) ) )
          (hold (not (not (not (on upside_down ?u) ) ) ) )
        )
      )
    )
    (forall (?x - cube_block ?o - hexagonal_bin)
      (and
        (preference preference3
          (exists (?f - ball)
            (at-end
              (exists (?n - dodgeball)
                (and
                  (not
                    (or
                      (on agent ?f)
                      (and
                        (not
                          (and
                            (adjacent_side ?n door bed)
                            (and
                              (not
                                (not
                                  (and
                                    (not
                                      (adjacent_side ?f ?o ?f)
                                    )
                                    (between bed ?o ?o)
                                  )
                                )
                              )
                              (not
                                (in_motion ?o)
                              )
                            )
                          )
                        )
                        (in agent ?o)
                      )
                    )
                  )
                  (not
                    (and
                      (< (distance ?o desktop) 1)
                      (agent_holds ?o)
                      (= 1)
                      (and
                        (on blue ?f)
                        (agent_holds ?n)
                      )
                    )
                  )
                  (in_motion ?f)
                  (agent_holds agent)
                )
              )
            )
          )
        )
      )
    )
    (preference preference4
      (exists (?d - game_object)
        (then
          (once (and (on ?d bed) (adjacent blue ?d) ) )
          (hold (adjacent ?d ?d) )
          (hold (agent_holds bed) )
        )
      )
    )
    (preference preference5
      (exists (?y - dodgeball)
        (then
          (hold (in ?y rug) )
          (hold-while (in_motion ?y) (agent_holds ?y) (in_motion bed) )
          (hold (on side_table bridge_block) )
          (hold (game_start ) )
        )
      )
    )
    (forall (?f - cube_block ?l - (either golfball cylindrical_block) ?s ?m ?b - (either cellphone cellphone flat_block yellow pyramid_block book bed))
      (and
        (preference preference6
          (exists (?t - blue_pyramid_block)
            (then
              (hold (opposite ?b ?t) )
              (once (agent_holds agent) )
              (hold-while (broken ?m) (touch ?m front) )
            )
          )
        )
        (preference preference7
          (exists (?w - (either dodgeball key_chain cellphone yellow_cube_block dodgeball))
            (then
              (once (on desk ?s) )
              (hold (equal_x_position desk ?w) )
              (once (not (not (in agent bridge_block) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (> 3 (= (count preference1:purple) (count preference7:book) )
    )
  )
)
(:scoring
  (* (* 4 (count preference6:pink) (count-unique-positions preference1:beachball:cube_block) )
    5
  )
)
)(define (game game-id-528) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?l - blue_cube_block ?e - wall ?z - block)
      (forall (?q - game_object)
        (game-conserved
          (and
            (and
              (in_motion ?z)
              (and
                (< 1 (distance ?q ?z))
                (in_motion ?z)
              )
              (exists (?b - hexagonal_bin ?m - (either pillow cellphone teddy_bear))
                (in_motion agent)
              )
            )
            (same_type bed ?q)
            (in_motion ?q)
          )
        )
      )
    )
    (game-conserved
      (= 10 1)
    )
    (exists (?o - chair ?u - (either basketball pillow mug))
      (exists (?c - hexagonal_bin ?y - (either desktop top_drawer alarm_clock))
        (exists (?x - (either hexagonal_bin alarm_clock blue_cube_block))
          (and
            (exists (?a - hexagonal_bin)
              (game-conserved
                (and
                  (on ?a bed)
                  (opposite ?u desk)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?n - game_object ?d ?j ?t ?v - (either pencil alarm_clock))
        (then
          (hold (< (distance ?t ?t) (distance ?j ?t)) )
          (once (not (not (in_motion ?t) ) ) )
          (hold (< (distance ?j ?v) 1) )
        )
      )
    )
  )
)
(:terminal
  (>= 60 (count preference1:dodgeball:dodgeball:hexagonal_bin) )
)
(:scoring
  5
)
)(define (game game-id-529) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?v - hexagonal_bin ?p - curved_wooden_ramp)
      (and
        (game-optional
          (= (distance_side ?p ?p ?p) 1)
        )
      )
    )
    (exists (?o - cube_block)
      (exists (?i - building ?w - (either dodgeball triangle_block))
        (and
          (and
            (exists (?q - dodgeball)
              (game-optional
                (< (distance ?q desk) 1)
              )
            )
            (and
              (game-optional
                (on ?w ?w)
              )
              (game-conserved
                (agent_holds ?w)
              )
            )
          )
          (and
            (exists (?t - beachball ?r - chair)
              (game-conserved
                (in ?o ?o)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?w - hexagonal_bin)
        (then
          (once (and (and (on ?w agent) (in_motion ?w) ) (in_motion ?w) ) )
          (once (and (agent_holds ?w) (in ?w ?w) ) )
          (hold (not (< (distance_side ?w ?w ?w) (distance ?w ?w)) ) )
        )
      )
    )
    (forall (?w - dodgeball)
      (and
        (preference preference2
          (exists (?c - dodgeball ?y - hexagonal_bin)
            (then
              (once (< (distance ?w ?w) (distance ?w ?y)) )
              (once (agent_holds ?y) )
              (once (same_type agent ?w) )
              (once (adjacent ?w floor) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?v - hexagonal_bin)
        (then
          (once (and (agent_holds ?v) (not (on rug ?v) ) ) )
          (hold (and (not (not (not (and (on ?v ?v) (< 1 1) (and (= 5) (not (not (and (not (in_motion ?v) ) (and (not (on ?v ?v) ) (in ?v ?v) ) ) ) ) ) ) ) ) ) (and (and (not (and (agent_holds ?v) (and (forall (?t - dodgeball ?c - ball) (or (agent_holds ?v) (agent_holds ?c) (or (and (agent_holds ?v) (agent_holds ?v) ) (in bed floor) (and (agent_holds pink) (agent_holds ?v) ) ) ) ) (same_color room_center bottom_shelf) ) (in ?v ?v) ) ) (in ?v ?v) ) (agent_holds ?v) ) (and (in_motion ?v) (and (on ?v ?v) (in ?v ?v) (and (and (in ?v ?v) (and (agent_holds agent) (in_motion ?v) ) ) (not (adjacent ?v desk) ) ) ) ) ) )
          (hold (not (agent_holds agent) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (count preference1:cube_block) (+ (+ 0.7 (* 2 2 5 (count preference1:beachball) (* 10 (count preference3:dodgeball) )
            (count-once preference3:red)
          )
        )
        (count preference2:green)
        (* (* 3 3 (count preference3:red) (<= 5 (* (- (count-increasing-measure preference3:white) )
                (count preference1:dodgeball)
              )
            )
          )
        )
        (count preference3:bed)
        (count preference3:beachball:book)
        2
        18
        (count-once preference2:pink_dodgeball:basketball)
        (count preference2:pink_dodgeball)
      )
    )
    (>= (count preference3:golfball) 3 )
  )
)
(:scoring
  (count preference2:pink)
)
)(define (game game-id-530) (:domain few-objects-room-v1)
(:setup
  (exists (?i ?s - beachball ?y - flat_block)
    (game-conserved
      (agent_crouches )
    )
  )
)
(:constraints
  (and
    (forall (?p ?z - block)
      (and
        (preference preference1
          (exists (?q - hexagonal_bin ?t ?r ?c - hexagonal_bin ?k - golfball)
            (at-end
              (and
                (and
                  (touch ?k ?k)
                  (in_motion ?k)
                )
                (not
                  (adjacent ?z agent)
                )
                (not
                  (exists (?t ?g - game_object)
                    (forall (?v - ball ?f - block)
                      (and
                        (agent_holds ?g)
                        (in_motion ?p)
                      )
                    )
                  )
                )
                (adjacent_side ?z ?k ?k)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* (* (count preference1:beachball) (- 3 )
        )
        5
        2
        50
      )
      (* 3 0 (count preference1:beachball) )
    )
  )
)
(:scoring
  (total-time)
)
)(define (game game-id-531) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (toggled_on agent)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?o - curved_wooden_ramp)
        (then
          (once (not (touch ?o ?o) ) )
          (hold (exists (?h - hexagonal_bin) (agent_holds ?h) ) )
          (hold (in_motion ?o) )
        )
      )
    )
    (preference preference2
      (exists (?e - pyramid_block)
        (at-end
          (in_motion ?e)
        )
      )
    )
    (preference preference3
      (exists (?m - (either golfball laptop bed) ?d - cube_block)
        (at-end
          (and
            (and
              (exists (?v - curved_wooden_ramp)
                (same_object ?v ?v)
              )
              (or
                (not
                  (and
                    (object_orientation ?d ?d)
                    (agent_holds bed)
                  )
                )
                (or
                  (and
                    (exists (?r - dodgeball)
                      (agent_holds ?r)
                    )
                    (rug_color_under floor ?d)
                  )
                  (not
                    (on desk ?d)
                  )
                )
              )
            )
            (and
              (agent_holds ?d)
              (and
                (not
                  (forall (?r - triangular_ramp)
                    (not
                      (agent_holds ?d)
                    )
                  )
                )
                (>= 1 (distance ?d brown))
                (adjacent desk ?d)
              )
            )
            (on green_golfball ?d)
          )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (- (+ (* (or (count preference1:top_drawer) (count-once-per-objects preference2:block:triangle_block) (>= (count preference2:cube_block) 3 )
          )
          (count-once-per-objects preference2:dodgeball)
        )
        (count-once-per-objects preference3:yellow:white)
        10
        5
      )
      50
    )
  )
)
(:scoring
  (count-once preference3:purple)
)
)(define (game game-id-532) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?r - (either dodgeball book) ?k - hexagonal_bin ?q - ball ?o - sliding_door)
      (not
        (exists (?g - hexagonal_bin ?h - triangular_ramp ?j - (either block cd book))
          (or
            (exists (?q - flat_block)
              (game-optional
                (not
                  (agent_holds ?q)
                )
              )
            )
          )
        )
      )
    )
    (exists (?j - hexagonal_bin ?c - dodgeball ?j - triangular_ramp ?m - (either dodgeball bridge_block))
      (game-conserved
        (in_motion ?m)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?p - dodgeball)
        (then
          (once (exists (?u - dodgeball ?e - dodgeball ?n - doggie_bed) (above ?n bed) ) )
          (once (not (and (adjacent ?p ?p) (in_motion rug) (agent_holds ?p) ) ) )
          (once (not (on agent west_wall) ) )
        )
      )
    )
    (forall (?l - hexagonal_bin)
      (and
        (preference preference2
          (exists (?t - dodgeball)
            (then
              (once (and (adjacent ?l ?t) (on ?l ?t) ) )
              (hold-to-end (in_motion ?l) )
              (hold-while (agent_holds ?l) (exists (?p - cube_block) (in ?l ?t) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= 10 3 )
    (>= (count preference2:dodgeball:basketball) (> 2 8 )
    )
  )
)
(:scoring
  0.7
)
)(define (game game-id-533) (:domain medium-objects-room-v1)
(:setup
  (forall (?w - (either floor cylindrical_block golfball))
    (and
      (and
        (forall (?s - bridge_block)
          (forall (?n - block)
            (game-conserved
              (adjacent ?w ?n)
            )
          )
        )
        (game-conserved
          (not
            (on south_west_corner room_center)
          )
        )
        (forall (?u - ball)
          (exists (?x - hexagonal_bin)
            (or
              (forall (?y - triangular_ramp)
                (game-conserved
                  (agent_holds ?u)
                )
              )
              (exists (?d - ball ?t - hexagonal_bin)
                (and
                  (game-conserved
                    (adjacent desk ?u)
                  )
                )
              )
              (or
                (and
                  (game-conserved
                    (in ?x ?u)
                  )
                )
                (and
                  (game-conserved
                    (exists (?a - golfball)
                      (not
                        (not
                          (on ?x agent)
                        )
                      )
                    )
                  )
                  (and
                    (exists (?l - curved_wooden_ramp ?i - game_object ?d ?b ?a - doggie_bed)
                      (game-conserved
                        (not
                          (not
                            (agent_holds bed)
                          )
                        )
                      )
                    )
                    (exists (?r - hexagonal_bin)
                      (game-optional
                        (agent_holds ?w)
                      )
                    )
                  )
                )
                (and
                  (game-conserved
                    (in_motion ?w)
                  )
                  (and
                    (and
                      (and
                        (game-conserved
                          (agent_holds bed)
                        )
                      )
                    )
                  )
                  (game-optional
                    (in_motion ?u)
                  )
                )
              )
            )
          )
        )
        (forall (?i - hexagonal_bin ?n - hexagonal_bin)
          (and
            (forall (?h - wall ?x - dodgeball ?u - (either pillow desktop))
              (forall (?p - ball)
                (and
                  (game-optional
                    (not
                      (opposite ?u ?p)
                    )
                  )
                )
              )
            )
          )
        )
        (forall (?j - cube_block)
          (exists (?v - game_object)
            (and
              (exists (?u - (either book pen cylindrical_block alarm_clock))
                (and
                  (and
                    (game-optional
                      (agent_holds ?u)
                    )
                  )
                  (game-conserved
                    (in ?u floor)
                  )
                  (and
                    (exists (?f - building ?z - dodgeball)
                      (game-optional
                        (exists (?p - hexagonal_bin ?n - ball)
                          (not
                            (and
                              (on ?j ?j)
                              (exists (?h ?p ?s ?c - hexagonal_bin ?i - (either side_table key_chain golfball))
                                (or
                                  (not
                                    (agent_holds ?z)
                                  )
                                  (adjacent ?v ?i)
                                )
                              )
                              (above agent bed)
                              (and
                                (on ?v ?n)
                                (agent_holds ?w)
                              )
                              (< 1 2)
                              (not
                                (and
                                  (rug_color_under ?z ?w)
                                  (agent_holds block)
                                  (not
                                    (same_color ?j pink)
                                  )
                                )
                              )
                              (and
                                (in right agent)
                                (on ?n ?v)
                              )
                              (and
                                (in_motion ?z)
                                (agent_holds ?j)
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
              (and
                (exists (?a ?e ?x - (either golfball))
                  (game-optional
                    (and
                      (exists (?z - dodgeball)
                        (in_motion ?v)
                      )
                      (and
                        (exists (?l - hexagonal_bin ?q - hexagonal_bin ?s - (either cellphone mug))
                          (and
                            (agent_holds agent)
                            (exists (?n - hexagonal_bin)
                              (in room_center ?w)
                            )
                          )
                        )
                        (touch agent ?w)
                        (adjacent_side ?e ?v ?w)
                      )
                    )
                  )
                )
                (game-conserved
                  (agent_holds desk)
                )
              )
              (and
                (and
                  (game-conserved
                    (open ?v)
                  )
                  (game-optional
                    (on back bed)
                  )
                  (game-optional
                    (and
                      (same_object ?w room_center)
                      (and
                        (exists (?o - curved_wooden_ramp)
                          (in_motion ?v)
                        )
                        (in_motion ?w)
                      )
                    )
                  )
                )
                (and
                  (game-optional
                    (same_color ?w ?v)
                  )
                )
              )
              (and
                (and
                  (and
                    (and
                      (game-conserved
                        (in_motion ?v)
                      )
                      (exists (?d - flat_block ?p - chair)
                        (game-conserved
                          (not
                            (in ?j ?w)
                          )
                        )
                      )
                    )
                  )
                  (and
                    (not
                      (game-conserved
                        (in_motion ?w)
                      )
                    )
                  )
                )
                (exists (?g - (either golfball book desktop))
                  (and
                    (game-optional
                      (in agent ?g)
                    )
                  )
                )
              )
              (and
                (and
                  (game-conserved
                    (in_motion ?v)
                  )
                  (game-optional
                    (in_motion ?w)
                  )
                  (and
                    (and
                      (game-conserved
                        (in_motion desk)
                      )
                      (exists (?y - hexagonal_bin)
                        (exists (?e - (either pyramid_block pyramid_block) ?c - ball ?z - cube_block ?c - dodgeball)
                          (exists (?n - curved_wooden_ramp)
                            (forall (?h - hexagonal_bin ?r - block ?z - game_object)
                              (game-conserved
                                (agent_holds ?j)
                              )
                            )
                          )
                        )
                      )
                      (exists (?f - beachball)
                        (exists (?u - pillow ?d - block ?u - triangular_ramp ?h - color)
                          (game-conserved
                            (agent_holds room_center)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?k - ball ?k - hexagonal_bin)
        (at-end
          (not
            (not
              (not
                (not
                  (adjacent ?k ?k)
                )
              )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?m - building)
        (at-end
          (agent_holds ?m)
        )
      )
    )
    (preference preference3
      (exists (?z - drawer)
        (at-end
          (not
            (and
              (same_object ?z ?z)
              (agent_holds ?z)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (external-forall-maximize (+ (* (count-once-per-objects preference1:purple) (not (count preference2:pink) ) )
        7
      )
    )
    (count preference3:beachball)
  )
)
(:scoring
  5
)
)(define (game game-id-534) (:domain medium-objects-room-v1)
(:setup
  (exists (?c - dodgeball ?g - dodgeball)
    (game-optional
      (or
        (not
          (and
            (above ?g front)
            (and
              (in_motion ?g)
              (and
                (not
                  (exists (?w - curved_wooden_ramp)
                    (and
                      (agent_holds ?w)
                      (or
                        (> (distance ?w ?w) (distance ?g ?w))
                      )
                      (agent_holds ?g)
                    )
                  )
                )
                (agent_holds ?g)
                (and
                  (not
                    (in_motion desk)
                  )
                  (not
                    (agent_holds ?g)
                  )
                )
              )
            )
          )
        )
        (and
          (not
            (forall (?l - hexagonal_bin ?i - (either laptop beachball dodgeball) ?v - teddy_bear)
              (not
                (adjacent ?g room_center)
              )
            )
          )
          (not
            (and
              (and
                (not
                  (and
                    (and
                      (same_object ?g top_drawer)
                      (on ?g ?g)
                    )
                    (on ?g agent)
                  )
                )
                (on desk ?g)
                (agent_holds ?g)
              )
              (in_motion ?g)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?a - pillow ?v - (either floor yellow) ?o - triangular_ramp)
      (and
        (preference preference1
          (exists (?v ?k - hexagonal_bin)
            (then
              (once (and (agent_holds ?k) (not (in ?k agent) ) ) )
              (once (and (and (same_color ?v ?k) (not (on ?o ?o) ) ) (and (not (and (adjacent agent ?o) (not (adjacent ?v ?o) ) ) ) (and (and (not (not (and (on ?k ?k) (in ?o ?k) ) ) ) (touch ?v ?v) ) (not (on ?k bed) ) ) (agent_holds ?k) (not (adjacent ?v pillow) ) ) ) )
              (once (and (touch ?v ?k) (not (and (or (not (and (<= 1 10) (< 9 0) ) ) (and (and (in_motion ?o) (adjacent_side ?k room_center ?k ?o) (and (on south_west_corner room_center) (not (on ?o ?o) ) (not (not (in ?o ?o) ) ) ) (<= (building_size agent) (distance floor green)) ) (and (faces bed sideways) (agent_holds ?o) ) ) ) (on agent ?v) ) ) ) )
              (hold (agent_holds ?o) )
              (once (not (and (and (between floor ?k ?k) (on left ?k) ) (in_motion ?v) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (count-once preference1:beachball) (count-overlapping preference1:beachball:blue_dodgeball) )
  )
)
(:scoring
  (total-score)
)
)(define (game game-id-535) (:domain few-objects-room-v1)
(:setup
  (forall (?c - block)
    (forall (?e - chair)
      (or
        (exists (?z - cube_block ?v - (either dodgeball golfball) ?q - hexagonal_bin)
          (game-conserved
            (and
              (agent_holds agent)
            )
          )
        )
        (game-optional
          (= 5 (distance ?c agent))
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?r - ball ?x - doggie_bed)
        (then
          (hold (and (agent_holds ?x) (in_motion ?x) ) )
          (once (in ?x ?x) )
          (once (agent_holds door) )
        )
      )
    )
  )
)
(:terminal
  (>= (>= (count preference1:dodgeball) (+ (* 10 (count-overlapping preference1:pink) )
        (* (total-score) (count-once-per-objects preference1:red) )
      )
    )
    2
  )
)
(:scoring
  (count preference1:blue_cube_block)
)
)(define (game game-id-536) (:domain medium-objects-room-v1)
(:setup
  (exists (?m - drawer)
    (game-conserved
      (in ?m ?m)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?e - ball ?p - hexagonal_bin ?o ?g ?z ?x ?m ?p - hexagonal_bin)
        (then
          (once (or (agent_holds ?z) (and (not (not (not (adjacent ?x ?g) ) ) ) (and (adjacent_side ?z desk ?z) (< 1 (distance room_center ?o)) (on ?x ?m) ) (not (forall (?s - (either pyramid_block hexagonal_bin)) (adjacent rug agent) ) ) (touch ?z ?m) ) ) )
          (once (object_orientation ?g agent) )
          (once (not (and (agent_holds ?p) (not (not (agent_holds ?g) ) ) ) ) )
        )
      )
    )
    (forall (?i - (either yellow basketball))
      (and
        (preference preference2
          (exists (?l - cube_block)
            (then
              (hold (and (forall (?e ?d ?b - shelf) (in_motion pink_dodgeball) ) (in_motion ?l) (in_motion ?l) (agent_holds ?l) ) )
              (hold (not (exists (?d - shelf ?h - doggie_bed) (> 4 4) ) ) )
              (hold (agent_holds ?i) )
            )
          )
        )
        (preference preference3
          (then
            (hold (not (adjacent ?i ?i) ) )
            (once (on ?i ?i) )
            (once (and (and (on ?i ?i) (not (or (not (touch ?i ?i) ) ) ) ) (not (agent_holds ?i) ) ) )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (+ (count-once preference2:green:yellow) 1 )
      (count-once-per-objects preference3:red)
    )
    10
  )
)
(:scoring
  (* 3 9 )
)
)(define (game game-id-537) (:domain few-objects-room-v1)
(:setup
  (forall (?s - chair)
    (game-conserved
      (and
        (agent_holds ?s)
      )
    )
  )
)
(:constraints
  (and
    (forall (?y - building)
      (and
        (preference preference1
          (exists (?o - chair ?r - hexagonal_bin)
            (at-end
              (not
                (and
                  (in ?y ?r)
                  (not
                    (< (distance ?y ?y) (distance ?y ?y))
                  )
                  (and
                    (and
                      (and
                        (in_motion ?r)
                        (and
                          (< 2 (distance ?r ?r))
                          (equal_z_position ?r floor)
                        )
                        (not
                          (is_setup_object ?r)
                        )
                      )
                      (agent_holds ?y)
                    )
                    (in_motion ?r)
                  )
                )
              )
            )
          )
        )
        (preference preference2
          (exists (?g - block ?a - curved_wooden_ramp)
            (then
              (once (not (agent_holds ?a) ) )
              (once (exists (?k - (either triangle_block beachball)) (and (not (not (and (in_motion floor) (agent_holds ?a) ) ) ) (equal_x_position ?k ?a) ) ) )
              (once (not (is_setup_object ?y) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (and
      (> (count preference2:golfball) (count preference1:alarm_clock:pink_dodgeball) )
      (or
        (>= (* (total-score) 100 )
          (count-once-per-objects preference1:tall_cylindrical_block:dodgeball)
        )
        (>= 7 (count-once-per-objects preference2:dodgeball:dodgeball) )
      )
    )
    (and
      (> (- 3 )
        (- (count-once-per-objects preference1:dodgeball) )
      )
    )
  )
)
(:scoring
  6
)
)(define (game game-id-538) (:domain medium-objects-room-v1)
(:setup
  (exists (?r - building)
    (and
      (exists (?n - hexagonal_bin)
        (game-conserved
          (on agent ?r)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?w - game_object ?y - hexagonal_bin ?i - pillow ?q - hexagonal_bin)
        (then
          (hold (on ?q ?q) )
          (once (opposite ?q ?q) )
        )
      )
    )
  )
)
(:terminal
  (<= 12 3 )
)
(:scoring
  6
)
)(define (game game-id-539) (:domain medium-objects-room-v1)
(:setup
  (exists (?t - hexagonal_bin ?h - wall ?d - beachball)
    (game-conserved
      (on bed ?d)
    )
  )
)
(:constraints
  (and
    (forall (?t - beachball)
      (and
        (preference preference1
          (exists (?a - ball ?y - hexagonal_bin ?c - hexagonal_bin)
            (then
              (any)
              (once (not (adjacent agent ?c) ) )
              (once (not (not (forall (?f - hexagonal_bin) (not (and (in ?t ?c) (in_motion agent) (adjacent rug agent) ) ) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 4 3 )
)
(:scoring
  3
)
)(define (game game-id-540) (:domain few-objects-room-v1)
(:setup
  (exists (?i - (either golfball book) ?e - blinds)
    (and
      (exists (?q - (either cd cylindrical_block))
        (game-conserved
          (< 8 (distance ?e agent))
        )
      )
      (game-conserved
        (and
          (same_type ?e ?e)
          (or
            (not
              (and
                (and
                  (touch ?e agent)
                  (in_motion ?e)
                )
                (adjacent ?e ?e)
              )
            )
            (exists (?k ?j - game_object ?j - (either golfball mug cd yellow_cube_block))
              (< (distance ?e ?e) 4)
            )
          )
          (agent_holds ?e)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?t - ball ?k - (either bridge_block doggie_bed))
      (and
        (preference preference1
          (exists (?o - ball ?r - (either dodgeball cellphone book))
            (then
              (hold (touch ?r ?k) )
              (once (not (and (= 3 (distance ?k yellow)) (adjacent_side bed ?r front ?k) ) ) )
              (once (adjacent ?k ?k) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?x - wall)
        (then
          (once (agent_holds bottom_shelf) )
          (once (agent_holds ?x) )
          (once (rug_color_under ?x ?x) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= 0.5 (count preference2:golfball) )
    )
  )
)
(:scoring
  7
)
)(define (game game-id-541) (:domain few-objects-room-v1)
(:setup
  (forall (?t - dodgeball ?l - dodgeball)
    (forall (?m - block)
      (exists (?h - chair)
        (exists (?p - (either golfball red wall))
          (forall (?c - ball)
            (game-optional
              (and
                (exists (?f ?b ?d ?e ?a ?s - hexagonal_bin)
                  (same_type rug agent)
                )
                (and
                  (and
                    (object_orientation agent ?l)
                    (and
                      (forall (?i - block)
                        (in_motion ?c)
                      )
                      (in_motion ?c)
                    )
                    (agent_holds ?l)
                  )
                  (on ?m ?l)
                )
                (exists (?x - (either cube_block hexagonal_bin))
                  (on ?h ?m)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?c ?j ?m - hexagonal_bin)
        (at-end
          (on ?c ?m)
        )
      )
    )
  )
)
(:terminal
  (> (count preference1:golfball:pink) (* (count preference1:yellow) 5 )
  )
)
(:scoring
  (external-forall-maximize
    (+ (* (count preference1:yellow) (count preference1:pyramid_block:pink) )
      (- (count-once preference1:rug) )
    )
  )
)
)(define (game game-id-542) (:domain medium-objects-room-v1)
(:setup
  (not
    (and
      (exists (?g - cube_block)
        (forall (?h - game_object ?z ?p - hexagonal_bin ?n - dodgeball)
          (and
            (forall (?m - hexagonal_bin)
              (and
                (and
                  (game-conserved
                    (not
                      (in_motion ?m)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?u - cube_block)
        (then
          (once (in_motion ?u) )
          (hold (and (touch ?u ?u) (or (in ?u room_center) (exists (?x - hexagonal_bin ?y - hexagonal_bin ?z - dodgeball) (>= 6 2) ) ) ) )
          (once (and (not (agent_holds left) ) (and (on ?u ?u) (= (distance ?u agent) 1) (and (agent_holds ?u) (not (not (not (and (< 9 1) (in ?u ?u) ) ) ) ) ) ) ) )
        )
      )
    )
    (forall (?h - cube_block)
      (and
        (preference preference2
          (exists (?p - color ?t - wall)
            (then
              (once (on ?h ?t) )
              (once (agent_holds ?t) )
              (hold (not (in_motion ?t) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-once-per-objects preference2:dodgeball) 3 )
    (>= (* (count preference2:doggie_bed) (count preference2:bed) (+ (count preference1:orange:yellow) (count-once-per-external-objects preference2:tall_cylindrical_block:tan) )
      )
      (count preference1:pink:red)
    )
    (>= (+ (and (count preference1:dodgeball:golfball:basketball) 3 (count preference1:hexagonal_bin) ) (count-once-per-objects preference1:pyramid_block:dodgeball) )
      (* (or (* 0 )
        )
        300
      )
    )
  )
)
(:scoring
  (count-once-per-objects preference2:basketball)
)
)(define (game game-id-543) (:domain medium-objects-room-v1)
(:setup
  (exists (?f - teddy_bear ?v - beachball)
    (game-optional
      (on ?v ?v)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?y - hexagonal_bin)
        (at-end
          (in floor ?y)
        )
      )
    )
  )
)
(:terminal
  (>= (= 2 )
    (* (- (count preference1:orange) )
      (count preference1:dodgeball:dodgeball)
    )
  )
)
(:scoring
  (+ (* (and (count preference1:dodgeball) (< (count preference1:golfball) 8 )
        (count preference1:doggie_bed)
      )
      4
      (count-once-per-objects preference1:tall_cylindrical_block)
    )
    (- (count preference1:pyramid_block:block:alarm_clock) )
  )
)
)(define (game game-id-544) (:domain many-objects-room-v1)
(:setup
  (exists (?y - chair ?d - ball)
    (exists (?q ?j ?n - (either pillow dodgeball triangle_block))
      (and
        (and
          (and
            (exists (?a ?w - beachball ?k - triangular_ramp ?h - cube_block)
              (game-conserved
                (not
                  (not
                    (on rug ?j)
                  )
                )
              )
            )
          )
          (exists (?b - hexagonal_bin ?y - hexagonal_bin ?p - cube_block)
            (forall (?r ?i - (either cd wall))
              (exists (?k - ball ?y - hexagonal_bin)
                (forall (?g - cube_block ?z - ball)
                  (exists (?k - color ?o - cube_block ?t - hexagonal_bin)
                    (game-conserved
                      (game_start )
                    )
                  )
                )
              )
            )
          )
          (exists (?e - color)
            (and
              (exists (?t ?k - beachball)
                (forall (?r - cube_block ?r - blinds)
                  (game-optional
                    (and
                      (not
                        (adjacent ?n ?k)
                      )
                      (in_motion ?r)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?p - game_object)
      (and
        (preference preference1
          (then
            (once (adjacent ?p bed) )
            (once (= 1 0) )
            (once (and (not (not (game_start ) ) ) (in_motion west_wall) ) )
          )
        )
        (preference preference2
          (exists (?t ?x - color)
            (at-end
              (and
                (in_motion ?x)
                (not
                  (not
                    (and
                      (in ?x agent)
                      (is_setup_object ?x)
                    )
                  )
                )
                (and
                  (or
                    (< (distance ?p ?t) 1)
                    (not
                      (agent_holds ?t)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?l - game_object)
        (at-end
          (and
            (and
              (and
                (agent_holds ?l)
                (and
                  (not
                    (and
                      (in_motion ?l)
                      (not
                        (and
                          (is_setup_object ?l)
                          (not
                            (not
                              (adjacent agent bed)
                            )
                          )
                        )
                      )
                    )
                  )
                  (in_motion ?l)
                )
                (in_motion ?l)
              )
              (and
                (in_motion ?l)
                (not
                  (and
                    (forall (?s - cube_block)
                      (is_setup_object ?s)
                    )
                    (and
                      (not
                        (and
                          (not
                            (and
                              (and
                                (is_setup_object ?l)
                                (and
                                  (agent_holds agent)
                                  (< (distance door ?l) 1)
                                  (and
                                    (agent_holds ?l)
                                    (in_motion ?l)
                                  )
                                )
                              )
                              (in_motion ?l)
                            )
                          )
                          (adjacent agent ?l)
                        )
                      )
                      (above ?l ?l)
                    )
                  )
                )
                (< (distance_side ?l ?l ?l) (distance upright ?l))
                (agent_holds pink)
              )
            )
            (in_motion ?l)
            (and
              (in_motion ?l)
              (and
                (agent_holds ?l)
                (not
                  (in_motion ?l)
                )
              )
              (in desk ?l)
            )
          )
        )
      )
    )
    (forall (?i ?b - game_object)
      (and
        (preference preference4
          (exists (?s - block ?r - ball)
            (then
              (once (on ?r ?b) )
              (once (same_object ?r ?r) )
              (once (and (agent_holds rug) (in_motion ?r) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= (count-once preference2:beachball) (* 40 )
  )
)
(:scoring
  6
)
)(define (game game-id-545) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?t - wall)
      (game-optional
        (and
          (on ?t ?t)
          (and
            (same_color ?t agent)
            (and
              (and
                (on ?t ?t)
                (same_color ?t ?t)
              )
              (agent_holds ?t)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?i - doggie_bed ?w - (either doggie_bed cd))
        (then
          (hold (and (not (exists (?s - pillow) (adjacent agent ?w) ) ) (adjacent ?w ?w) ) )
          (hold-while (agent_holds ?w) (same_type ?w ?w) )
          (hold (not (not (not (agent_holds ?w) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 15 (- 3 )
  )
)
(:scoring
  (- (count preference1:dodgeball) )
)
)(define (game game-id-546) (:domain few-objects-room-v1)
(:setup
  (forall (?e - hexagonal_bin)
    (and
      (game-conserved
        (in_motion ?e)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?p - cube_block)
        (then
          (once (>= (distance ?p ?p) 1) )
          (hold (in_motion ?p) )
          (once (and (touch ?p ?p) (on ?p ?p) (in_motion ?p) (is_setup_object bed) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ 3 (count-once preference1:pink:basketball) )
    (count-once preference1:pink:red_pyramid_block)
  )
)
(:scoring
  (count preference1:yellow)
)
)(define (game game-id-547) (:domain many-objects-room-v1)
(:setup
  (forall (?k ?p ?o ?u ?s - building)
    (game-conserved
      (not
        (agent_holds back)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?z - cube_block ?i - (either wall))
        (then
          (hold (on ?i ?i) )
          (once (in_motion ?i) )
          (once (not (agent_holds ?i) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 9 (* (count-measure preference1:hexagonal_bin) 2 )
  )
)
(:scoring
  5
)
)(define (game game-id-548) (:domain medium-objects-room-v1)
(:setup
  (forall (?h - block)
    (exists (?e - game_object)
      (game-conserved
        (rug_color_under ?h ?e)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?j - dodgeball)
        (then
          (once (agent_holds ?j) )
          (hold-while (in ?j ?j) (in_motion ?j) (on ?j ?j) )
          (once (= (distance ?j ?j) 3) )
        )
      )
    )
  )
)
(:terminal
  (> 0.7 (+ (* (not 2 ) (* (count preference1:yellow) (count-once-per-objects preference1:hexagonal_bin:basketball) )
      )
      3
    )
  )
)
(:scoring
  (count preference1:dodgeball)
)
)(define (game game-id-549) (:domain few-objects-room-v1)
(:setup
  (exists (?c - game_object)
    (or
      (game-conserved
        (and
          (not
            (not
              (agent_holds ?c)
            )
          )
          (in_motion ?c)
        )
      )
      (exists (?r - hexagonal_bin ?t - teddy_bear)
        (and
          (exists (?z - (either cellphone wall))
            (and
              (or
                (exists (?x ?s - ball)
                  (and
                    (exists (?v - hexagonal_bin ?w - pillow)
                      (exists (?f - hexagonal_bin ?k - curved_wooden_ramp)
                        (game-conserved
                          (and
                            (in ?k ?w)
                            (in_motion ?c)
                            (and
                              (not
                                (and
                                  (in_motion ?w)
                                  (adjacent ?c ?k)
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                    (game-conserved
                      (on ?c ?s)
                    )
                  )
                )
                (game-conserved
                  (not
                    (= 5 1)
                  )
                )
              )
            )
          )
          (game-conserved
            (in_motion ?c)
          )
        )
      )
      (game-conserved
        (and
          (same_object ?c ?c)
          (not
            (agent_holds ?c)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?w - wall)
        (then
          (hold-to-end (not (exists (?v - dodgeball ?p - dodgeball) (game_start ) ) ) )
          (hold (between ?w ?w ?w) )
          (hold (rug_color_under ?w ?w) )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (+ (count-once-per-objects preference1:basketball) (total-score) )
  )
)
(:scoring
  (* (total-time) (count-once-per-objects preference1:brown) )
)
)(define (game game-id-550) (:domain many-objects-room-v1)
(:setup
  (forall (?w - hexagonal_bin)
    (game-conserved
      (and
        (not
          (not
            (on ?w ?w)
          )
        )
        (exists (?s - hexagonal_bin ?k - wall ?p ?u - hexagonal_bin)
          (in_motion ?w)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?e - bridge_block ?b - game_object)
        (then
          (hold-while (in_motion ?b) (and (same_type floor ?b) (on blue ?b) (and (and (agent_holds ?b) (agent_holds ?b) (not (on agent agent) ) (and (agent_holds ?b) (touch rug ?b) (not (in ?b ?b) ) ) (agent_holds ?b) (in_motion ?b) (in ?b upright) (and (not (agent_holds ?b) ) (agent_holds ?b) ) (in_motion ?b) (and (= 1 (distance_side ?b rug ?b ?b)) (or (agent_holds agent) (not (in ?b ?b) ) (not (and (in_motion ?b) (agent_holds ?b) ) ) ) ) (touch ?b ?b) (agent_holds ?b) ) (not (in room_center ?b) ) ) (agent_holds ?b) ) (in_motion ?b) )
          (hold (and (same_type door ?b) (agent_holds ?b) ) )
          (once (and (agent_holds ?b) (agent_holds desk) (on ?b ?b) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (count-once-per-objects preference1:beachball) )
)
(:scoring
  10
)
)(define (game game-id-551) (:domain medium-objects-room-v1)
(:setup
  (exists (?y - game_object ?p ?x ?q ?a - hexagonal_bin)
    (or
      (exists (?h - ball)
        (game-conserved
          (agent_holds ?h)
        )
      )
      (forall (?o - building ?r - building)
        (game-optional
          (above agent upright)
        )
      )
      (and
        (game-optional
          (on ?p ?q)
        )
        (and
          (or
            (exists (?m - (either dodgeball cube_block) ?g - hexagonal_bin)
              (game-conserved
                (not
                  (agent_holds ?p)
                )
              )
            )
            (and
              (and
                (and
                  (exists (?e - block)
                    (game-conserved
                      (same_color ?p ?p)
                    )
                  )
                )
              )
              (not
                (and
                  (and
                    (game-conserved
                      (equal_z_position ?p ?a)
                    )
                    (game-conserved
                      (and
                        (and
                          (in_motion agent)
                          (and
                            (same_type ?a desk)
                            (and
                              (on desk ?q)
                              (same_color agent agent)
                            )
                            (not
                              (exists (?f - chair)
                                (is_setup_object ?p)
                              )
                            )
                          )
                        )
                        (not
                          (not
                            (and
                              (agent_crouches )
                              (and
                                (agent_holds ?x)
                                (and
                                  (agent_holds ?p)
                                  (and
                                    (faces ?x ?p)
                                    (not
                                      (not
                                        (not
                                          (on bed ?a)
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                              (equal_x_position ?q bed)
                            )
                          )
                        )
                      )
                    )
                    (game-conserved
                      (is_setup_object ?a)
                    )
                  )
                )
              )
              (game-conserved
                (adjacent desk ?x)
              )
            )
          )
          (exists (?l - (either cube_block bed) ?s ?t ?j ?i - block)
            (exists (?e - game_object ?y - hexagonal_bin)
              (and
                (game-conserved
                  (> 1 1)
                )
                (game-conserved
                  (agent_holds ?j)
                )
                (and
                  (exists (?c ?m - (either cylindrical_block cellphone pyramid_block))
                    (exists (?z - teddy_bear)
                      (forall (?o - ball)
                        (not
                          (game-optional
                            (agent_holds ?a)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
          (exists (?d - (either basketball teddy_bear book))
            (game-optional
              (in ?q room_center)
            )
          )
        )
        (and
          (exists (?y - ball)
            (and
              (exists (?m - game_object ?k - dodgeball)
                (game-conserved
                  (not
                    (agent_holds ?q)
                  )
                )
              )
              (and
                (and
                  (exists (?r - doggie_bed)
                    (game-conserved
                      (not
                        (agent_holds ?x)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?m - hexagonal_bin)
        (at-end
          (in_motion ?m)
        )
      )
    )
    (preference preference2
      (exists (?p - dodgeball)
        (then
          (hold (agent_holds ?p) )
          (once (agent_holds agent) )
          (once (agent_holds ?p) )
        )
      )
    )
    (forall (?p - (either main_light_switch teddy_bear))
      (and
        (preference preference3
          (exists (?l - cube_block)
            (then
              (hold (not (agent_holds desk) ) )
              (hold-while (in_motion green) (exists (?o - block) (on ?l ?p) ) )
              (once (game_over ) )
            )
          )
        )
        (preference preference4
          (exists (?w - (either golfball basketball pyramid_block) ?s - (either dodgeball cd rug))
            (at-end
              (not
                (same_type ?s pink)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (count-shortest preference2:basketball) (+ (count-total preference1:alarm_clock) 4 10 8 )
  )
)
(:scoring
  (* (count preference2:pink:dodgeball) (count preference3:golfball) )
)
)(define (game game-id-552) (:domain many-objects-room-v1)
(:setup
  (forall (?x - hexagonal_bin)
    (exists (?d ?c ?f ?p ?l ?o ?h ?e ?n ?u - (either basketball cd golfball))
      (and
        (and
          (game-conserved
            (equal_x_position bed ?o)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?t - triangular_ramp ?t - hexagonal_bin ?u ?y - block)
        (then
          (once (not (is_setup_object ?u) ) )
          (once (and (exists (?k - hexagonal_bin ?r - cube_block) (touch ?u ?u) ) (in_motion ?y) ) )
          (any)
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (>= 8 100 )
    )
    (>= (* (- (+ (external-forall-maximize 2 ) 2 )
        )
        (* (count-longest preference1:pink) 1 )
      )
      (count preference1:pink)
    )
    (>= 5 (* (count-once-per-objects preference1:cylindrical_block) (total-score) )
    )
  )
)
(:scoring
  (> (count preference1:dodgeball:beachball) (count-once preference1:golfball:purple) )
)
)(define (game game-id-553) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-optional
      (is_setup_object bed)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?q - chair)
        (then
          (hold-while (< (distance desk back) 0.5) (or (agent_holds ?q) (or (agent_holds ?q) (open agent) ) ) (in_motion ?q) )
          (once (adjacent ?q ?q) )
          (forall-sequence (?f - cube_block ?s - block)
            (then
              (once (and (agent_holds front) (agent_holds ?q) ) )
              (hold-for 10 (in_motion front) )
              (once (agent_holds ?s) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (= (count-once preference1:alarm_clock:alarm_clock:green) 2 )
    (not
      (>= (+ (* (count preference1:dodgeball:dodgeball) (* (not (* (count-once-per-objects preference1:yellow_cube_block) 0 15 )
              )
              (* 2 (count preference1:dodgeball) )
            )
          )
          (count preference1:orange)
        )
        5
      )
    )
    (or
      (and
        (not
          (>= 15 (+ (count preference1) 1 )
          )
        )
      )
      (and
        (>= (- (count-longest preference1:pink) )
          15
        )
        (>= 4 (count-once-per-objects preference1:dodgeball) )
        (or
          (>= (* (+ 3 5 )
              (count preference1:golfball:bed)
            )
            (count preference1:beachball)
          )
        )
      )
    )
  )
)
(:scoring
  (-
    (count preference1:golfball:dodgeball)
    (+ (* 6 2 )
      (* 7 (count preference1:golfball:dodgeball:blue_dodgeball) 4 )
      10
    )
  )
)
)(define (game game-id-554) (:domain medium-objects-room-v1)
(:setup
  (forall (?z - doggie_bed)
    (exists (?i - hexagonal_bin ?l - hexagonal_bin)
      (forall (?x - pillow ?g ?v - building)
        (game-conserved
          (same_color agent agent)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?t - hexagonal_bin ?l ?d - wall)
      (and
        (preference preference1
          (exists (?k - cube_block)
            (at-end
              (touch floor ?k)
            )
          )
        )
        (preference preference2
          (exists (?b - building)
            (then
              (once (and (exists (?o ?q - dodgeball ?f ?s - curved_wooden_ramp) (adjacent ?b ?d) ) (agent_holds agent) (in drawer ?d) ) )
              (hold (on ?b agent) )
              (once (not (agent_holds agent) ) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?r - pyramid_block ?r ?a - chair ?z - flat_block)
        (then
          (hold (not (or (in_motion rug) (and (agent_holds ?z) (in_motion ?z) ) ) ) )
          (once (in_motion ?z) )
          (once (and (agent_holds ?z) (not (and (not (not (< (distance ?z room_center) 1) ) ) (in ?z ?z) ) ) (on ?z ?z) ) )
        )
      )
    )
    (preference preference4
      (exists (?c - book ?k - (either game_object cube_block desktop basketball hexagonal_bin golfball cellphone) ?i - block)
        (then
          (once (agent_holds ?i) )
          (hold (exists (?a - cube_block) (and (and (adjacent ?i floor) (and (and (exists (?m - dodgeball ?v - game_object ?c - (either tall_cylindrical_block dodgeball)) (not (on ?i ?i) ) ) (and (and (and (on ?a ?i) (not (agent_holds desk) ) ) (in ?a ?a) (and (agent_holds agent) (agent_holds ?i) (forall (?e ?q - ball) (forall (?o - (either golfball dodgeball dodgeball)) (agent_holds ?a) ) ) ) (and (agent_crouches ) (in_motion ?i) ) ) (in_motion ?a) ) ) (touch brown ?a) ) (in rug ?i) ) (touch ?i rug) ) ) )
          (once (agent_holds ?i) )
        )
      )
    )
  )
)
(:terminal
  (> 100 10 )
)
(:scoring
  (+ 3 (count-once preference4:green) (* (count preference4:dodgeball) (count-longest preference1:hexagonal_bin) )
  )
)
)(define (game game-id-555) (:domain few-objects-room-v1)
(:setup
  (exists (?j - curved_wooden_ramp)
    (exists (?s - dodgeball ?p - hexagonal_bin)
      (game-optional
        (on desk ?j)
      )
    )
  )
)
(:constraints
  (and
    (forall (?u - hexagonal_bin ?s - (either cube_block cellphone key_chain))
      (and
        (preference preference1
          (exists (?k - triangular_ramp ?d - hexagonal_bin ?g - shelf)
            (then
              (hold-while (on ?s ?s) (agent_holds ?s) (agent_holds ?g) )
              (once (touch ?s pink_dodgeball) )
              (once (in_motion rug) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (- 10 (* (external-forall-maximize 5 ) 7 )
    )
    (= 2 )
  )
)
(:scoring
  (count-once-per-objects preference1:dodgeball)
)
)(define (game game-id-556) (:domain medium-objects-room-v1)
(:setup
  (exists (?r - cube_block)
    (exists (?o ?b - dodgeball)
      (game-optional
        (same_color ?b ?b)
      )
    )
  )
)
(:constraints
  (and
    (forall (?z - game_object)
      (and
        (preference preference1
          (exists (?o - (either dodgeball) ?c - dodgeball)
            (at-end
              (not
                (in ?z ?c)
              )
            )
          )
        )
        (preference preference2
          (exists (?c - hexagonal_bin ?h - hexagonal_bin ?y - hexagonal_bin)
            (then
              (once (in ?z ?y) )
              (hold (not (on desk ?z) ) )
              (once (not (and (= 6 (distance agent ?y)) (not (> (x_position ?z) (distance ?z ?y)) ) (in_motion agent) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= (count preference1:dodgeball:red) (+ 1 (* 30 (count-total preference1:hexagonal_bin:beachball) )
      (- (count preference1:hexagonal_bin:red_pyramid_block) )
    )
  )
)
(:scoring
  (or
    (count-once-per-objects preference1:pink_dodgeball)
    15
    (= (* 3 (count preference2:dodgeball) )
      3
    )
  )
)
)(define (game game-id-557) (:domain medium-objects-room-v1)
(:setup
  (exists (?z - hexagonal_bin)
    (forall (?o - hexagonal_bin)
      (game-conserved
        (in ?o ?z)
      )
    )
  )
)
(:constraints
  (and
    (forall (?x - doggie_bed)
      (and
        (preference preference1
          (exists (?c - (either pink golfball))
            (then
              (once (and (and (and (adjacent ?x agent) (in_motion ?x) ) (adjacent ?x ?c) ) (not (and (and (not (agent_holds ?x) ) (not (same_object ?x ?c) ) (on ?x ?x) (agent_holds ?x) (not (agent_holds ?c) ) (on ?c room_center) (in ?x ?c) (< (distance ?x agent) 9) (in_motion ?x) (in_motion ?c) (agent_holds ?c) (agent_holds ?x) ) (adjacent_side ?x ?c ?x) (and (not (agent_holds ?c) ) (not (on ?c ?c) ) ) ) ) ) )
              (hold (in_motion ?c) )
            )
          )
        )
        (preference preference2
          (exists (?o - color)
            (then
              (hold (not (and (in_motion ?o) (agent_holds ?o) ) ) )
              (once (not (on ?o ?o) ) )
              (once (and (in_motion ?o) (and (not (not (in_motion bed) ) ) (and (in bed ?x) (on ?x ?o) ) (and (and (and (not (on ?o ?o) ) (in ?x ?x) ) (in ?x ?o) ) (in ?x ?o) ) (on rug top_drawer) ) ) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?q - dodgeball)
        (then
          (hold-to-end (and (not (and (and (on side_table ?q) (on ?q agent) ) (on rug ?q) ) ) (agent_holds ?q) ) )
          (once (> 4 9) )
          (hold-while (and (game_start ) ) (agent_holds ?q) (rug_color_under ?q ?q) )
        )
      )
    )
    (preference preference4
      (exists (?z - (either cd blue_cube_block))
        (then
          (once (and (in_motion ?z) (not (not (toggled_on ?z) ) ) (and (on ?z ?z) (equal_z_position ?z ?z) (equal_x_position ?z ?z) (in_motion ?z) (not (in_motion ?z) ) (in_motion ?z) ) ) )
          (once (agent_holds ?z) )
          (once (and (and (is_setup_object ?z) (in_motion ?z) ) (not (adjacent ?z ?z) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (* (and (* (* (+ (count-once-per-objects preference2:beachball) (* (count-once-per-external-objects preference4:pyramid_block) 5 )
              )
              (count-once-per-external-objects preference1:pink_dodgeball)
            )
            (count preference4:hexagonal_bin:red)
          )
          (count-once-per-objects preference3:basketball)
        )
        (total-time)
        (total-score)
      )
      2
    )
    (count-once-per-objects preference1:alarm_clock)
  )
)
(:scoring
  (count preference1:yellow:dodgeball)
)
)(define (game game-id-558) (:domain few-objects-room-v1)
(:setup
  (forall (?a - dodgeball ?w - (either laptop mug mug) ?x - (either cube_block doggie_bed) ?f - chair)
    (exists (?p - book)
      (game-optional
        (touch agent ?f)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?g - hexagonal_bin)
        (then
          (hold (in_motion ?g) )
          (hold-while (not (in_motion agent) ) (not (agent_holds ?g) ) )
          (once (and (in_motion ?g) (in_motion ?g) ) )
          (hold (in_motion brown) )
        )
      )
    )
    (preference preference2
      (exists (?j - game_object)
        (then
          (once (on agent ?j) )
          (hold (agent_holds blue) )
          (forall-sequence (?p - ball ?i - building ?x - wall)
            (then
              (once-measure (and (in_motion ?x) (and (not (and (> (distance bed ?j) (distance_side door ?j desk tan)) (in_motion ?x) ) ) (in_motion ?j) ) ) (distance ?x ?j) )
              (once (not (adjacent_side ?x floor ?j) ) )
              (hold (not (forall (?k - block) (is_setup_object ?x) ) ) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?k - bridge_block)
        (then
          (hold (and (and (agent_holds green) (exists (?b ?o - hexagonal_bin) (not (not (same_object ?o bed) ) ) ) ) (agent_holds ?k) (> 3 6) ) )
          (hold (and (agent_holds ?k) (not (agent_holds ?k) ) ) )
          (hold (broken west_wall) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-same-positions preference2:green) 18 )
)
(:scoring
  (+ (* 3 (- 30 )
    )
    (external-forall-maximize
      20
    )
  )
)
)(define (game game-id-559) (:domain few-objects-room-v1)
(:setup
  (exists (?v - dodgeball ?u - (either key_chain ball))
    (exists (?y - hexagonal_bin)
      (forall (?b ?m - hexagonal_bin ?k - ball)
        (game-optional
          (not
            (and
              (agent_holds ?u)
              (and
                (agent_holds ?k)
                (and
                  (and
                    (on ?k block)
                    (same_type bottom_shelf agent)
                  )
                  (not
                    (agent_holds room_center)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?x - drawer)
      (and
        (preference preference1
          (exists (?o - ball ?y - hexagonal_bin)
            (then
              (hold (in_motion rug) )
              (hold (exists (?d - (either dodgeball desktop) ?f - ball ?h - ball) (in_motion ?y) ) )
              (once (agent_holds ?x) )
            )
          )
        )
        (preference preference2
          (exists (?y - (either pillow hexagonal_bin cylindrical_block))
            (then
              (once (agent_holds ?x) )
              (once (in_motion desk) )
              (hold-while (and (in_motion ?y) (agent_holds green) ) (agent_holds ?x) (and (and (and (adjacent ?y ?y) (not (on agent ?y) ) ) (not (agent_holds ?x) ) ) (agent_holds ?x) ) (agent_holds ?y) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> 5 10 )
)
(:scoring
  (* (total-score) (= (+ (+ (+ (* (+ (count preference1:pink) 2 )
              (count preference1:pink)
            )
            (* 10 (* 100 (+ (* 15 (count preference2:basketball:yellow:dodgeball) )
                  (count preference2:orange)
                )
              )
              3
            )
            (= (count preference1:blue_pyramid_block) (count-once-per-objects preference2:basketball) )
          )
          (count preference1:beachball)
        )
        (+ (* (* (count preference2:golfball) (count preference2:yellow) )
            (count-once preference1:dodgeball)
          )
          4
        )
      )
      (count preference1:golfball)
    )
  )
)
)(define (game game-id-560) (:domain many-objects-room-v1)
(:setup
  (forall (?x - cube_block)
    (exists (?q - dodgeball)
      (forall (?m - cylindrical_block)
        (forall (?n - block)
          (and
            (game-conserved
              (not
                (on ?x ?n)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?x - hexagonal_bin)
      (and
        (preference preference1
          (exists (?p - dodgeball ?o - dodgeball)
            (then
              (hold-to-end (and (adjacent ?o ?o) (or (in_motion floor) (and (agent_holds ?x) (and (agent_holds floor) (and (touch ?o green_golfball) (forall (?w - red_dodgeball ?l - sliding_door) (on ?o ?x) ) (in_motion ?x) ) ) ) ) (on ?o agent) ) )
              (once (agent_holds agent) )
              (once (not (not (not (in_motion floor) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-external-objects preference1:basketball) (count-once preference1:doggie_bed) )
)
(:scoring
  (count-increasing-measure preference1:blue_dodgeball:pink)
)
)(define (game game-id-561) (:domain many-objects-room-v1)
(:setup
  (exists (?m ?q - (either desktop cylindrical_block))
    (or
      (game-conserved
        (not
          (not
            (or
              (agent_holds ?m)
              (on ?m ?q)
            )
          )
        )
      )
      (exists (?b - (either chair chair))
        (game-conserved
          (touch pink_dodgeball desk)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?e - building)
      (and
        (preference preference1
          (exists (?a - pillow)
            (at-end
              (and
                (and
                  (agent_holds agent)
                )
                (agent_holds ?e)
              )
            )
          )
        )
        (preference preference2
          (exists (?x - (either tall_cylindrical_block cd) ?g ?u - shelf ?f - building)
            (then
              (forall-sequence (?k - (either cd laptop dodgeball key_chain bed) ?g - hexagonal_bin)
                (then
                  (hold-while (in_motion ?e) (agent_holds ?f) (and (agent_holds ?e) (equal_x_position ?g ?e) ) )
                  (hold-while (and (on bed ?f) (adjacent blue ?e) (above ?f bed) ) (on top_drawer ?f) (not (exists (?q - teddy_bear) (and (equal_x_position ?f ?f) (not (not (and (rug_color_under ?e ?q) (on bed ?f) ) ) ) ) ) ) (agent_holds floor) )
                  (once (and (and (on ?e agent) (agent_holds ?g) (in_motion agent) ) (not (in ?e ?g) ) ) )
                )
              )
              (hold-while (adjacent ?e ?f) (not (and (in ?f bed) (and (agent_holds ?e) (adjacent ?e ?e) (adjacent ?f ?f) ) (and (exists (?h ?k ?m - ball) (in ?k agent) ) (and (agent_holds ?f) (not (in_motion ?f) ) ) ) ) ) (agent_holds ?f) )
              (once (in_motion ?e) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (and
      (>= (count-longest preference1:dodgeball) (count preference2) )
      (or
        (>= (count-once-per-objects preference1:beachball) (count-once preference2:basketball) )
        (> 100 (+ (+ (total-time) (* (+ (count-total preference2:hexagonal_bin:book) (count-once-per-objects preference2:dodgeball) )
                (count preference2:doggie_bed)
                (* (+ (+ (total-score) (* (count-once-per-objects preference2:beachball) (* (count preference2) (count-overlapping preference1:green) )
                      )
                    )
                    (* 3 (* (count preference1:pink:red) (count-once-per-objects preference2:hexagonal_bin) )
                    )
                    (* (count preference2:blue_dodgeball) 9 5 2 (count-once-per-objects preference1:brown) 12 10 (* (+ (count-once-per-objects preference1:hexagonal_bin) (total-score) (* (count-overlapping preference1:beachball:dodgeball) (count-once-per-objects preference2:blue_pyramid_block) (total-score) )
                        )
                        (+ (+ (count preference2:doggie_bed) (count-once-per-objects preference2:blue_pyramid_block:beachball) )
                          9
                        )
                      )
                      1
                    )
                  )
                  (count preference2:dodgeball:red)
                )
                (count preference2:basketball)
                (* 6 (count-unique-positions preference1:dodgeball:dodgeball) )
                (external-forall-maximize
                  (count preference1:orange)
                )
              )
            )
            (count-unique-positions preference1:green:pyramid_block)
          )
        )
        (or
          (or
            (>= 3 1 )
            (not
              (>= (count preference1:dodgeball) 50 )
            )
          )
          (> (count-once-per-objects preference1:beachball:basketball) 10 )
        )
      )
    )
  )
)
(:scoring
  7
)
)(define (game game-id-562) (:domain medium-objects-room-v1)
(:setup
  (forall (?w - game_object)
    (exists (?o - hexagonal_bin)
      (exists (?h - hexagonal_bin)
        (forall (?s - wall)
          (forall (?r - hexagonal_bin)
            (and
              (game-conserved
                (and
                  (not
                    (in ?h bed)
                  )
                  (adjacent ?o desk)
                  (in_motion ?r)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?d - hexagonal_bin ?g - game_object ?s - ball)
        (at-end
          (< 10 0)
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= 3 (count-unique-positions preference1:basketball:doggie_bed) )
    )
    (> (count-once-per-objects preference1:dodgeball) (count-once-per-objects preference1:dodgeball:wall) )
    (or
      (>= (count preference1:doggie_bed) (* 3 5 )
      )
    )
  )
)
(:scoring
  (count-increasing-measure preference1:basketball)
)
)(define (game game-id-563) (:domain few-objects-room-v1)
(:setup
  (exists (?o - bridge_block)
    (game-optional
      (and
        (in_motion ?o)
        (in_motion ?o)
        (game_start )
        (in_motion ?o)
        (in_motion pink_dodgeball)
        (agent_holds ?o)
        (and
          (adjacent ?o agent)
          (and
            (above ?o ?o)
            (and
              (and
                (not
                  (agent_holds ?o)
                )
                (and
                  (agent_holds ?o)
                  (> (distance agent ?o) (distance_side ?o desk ?o ?o))
                )
              )
              (same_color ?o ?o)
              (on upright room_center)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?w - (either dodgeball bridge_block) ?s - cube_block)
        (then
          (once (and (and (not (broken ?s) ) (agent_holds ?s) ) (agent_holds ?s) ) )
          (once (not (in_motion agent) ) )
          (once (adjacent green_golfball ?s) )
        )
      )
    )
  )
)
(:terminal
  (or
    (not
      (>= (* (* (count-once-per-objects preference1:yellow) (* (count preference1:yellow:yellow:side_table) (count preference1:dodgeball) )
          )
          (+ (count-once-per-objects preference1:dodgeball) (count preference1:yellow_cube_block) )
        )
        (- (* 2 (count preference1:basketball) )
        )
      )
    )
    (> (* (* (total-score) (- (- (count preference1:hexagonal_bin:yellow) )
          )
        )
        (count-once-per-objects preference1:golfball)
      )
      (count-overlapping preference1:golfball)
    )
    (>= (count preference1:red:purple) (* (count preference1:dodgeball:golfball) 10 )
    )
  )
)
(:scoring
  (count-unique-positions preference1)
)
)(define (game game-id-564) (:domain few-objects-room-v1)
(:setup
  (forall (?y - curved_wooden_ramp)
    (exists (?z - ball)
      (game-conserved
        (not
          (same_type ?y ?y)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?a - pillow)
        (then
          (hold (forall (?z - (either dodgeball cylindrical_block)) (agent_holds ?z) ) )
          (once (agent_holds ?a) )
          (once (and (and (not (and (in_motion ?a) (agent_holds ?a) ) ) (and (agent_holds ?a) (in_motion ?a) (and (exists (?i - (either dodgeball golfball)) (agent_holds ?i) ) (agent_holds room_center) ) ) (in_motion ?a) (and (< 9 3) (same_color ?a ?a) ) ) (agent_holds ?a) (not (adjacent ?a ?a) ) ) )
        )
      )
    )
    (preference preference2
      (exists (?t - (either dodgeball chair cellphone))
        (then
          (once (same_type ?t ?t) )
          (once (<= 1 (x_position desk)) )
          (once (and (not (not (<= 0.5 (distance ?t ?t)) ) ) (agent_holds ?t) ) )
        )
      )
    )
    (preference preference3
      (exists (?l - (either cd wall golfball))
        (then
          (hold (< 0.5 6) )
          (once (in_motion ?l) )
          (hold (object_orientation ?l floor) )
        )
      )
    )
    (preference preference4
      (exists (?i - hexagonal_bin)
        (at-end
          (and
            (not
              (not
                (agent_holds ?i)
              )
            )
            (adjacent ?i ?i)
            (not
              (not
                (on green_golfball ?i)
              )
            )
          )
        )
      )
    )
    (preference preference5
      (exists (?i - dodgeball)
        (at-end
          (agent_holds ?i)
        )
      )
    )
  )
)
(:terminal
  (>= (count preference4:green) (* (count-once preference4:yellow_cube_block:dodgeball) (* (count-once-per-objects preference4:dodgeball) (count-once-per-objects preference3:blue_dodgeball:purple) (total-time) (+ 5 4 )
        (external-forall-maximize
          (* 6 (+ 3 (count preference4:dodgeball:dodgeball) )
          )
        )
        (count-once-per-objects preference4:red:yellow)
        (= (count-once preference4:yellow) (external-forall-maximize (count preference2:hexagonal_bin) ) (count-once-per-objects preference5:golfball) )
        3
        5
      )
    )
  )
)
(:scoring
  5
)
)(define (game game-id-565) (:domain many-objects-room-v1)
(:setup
  (exists (?c - dodgeball)
    (and
      (and
        (and
          (exists (?x - hexagonal_bin ?z - game_object)
            (and
              (game-optional
                (touch ?z ?z)
              )
            )
          )
        )
      )
      (and
        (exists (?t - yellow_cube_block)
          (exists (?m - ball ?n - building)
            (forall (?m - (either bridge_block game_object))
              (game-optional
                (in_motion ?m)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?w - teddy_bear ?k - ball)
        (then
          (once (open ?k) )
          (hold (and (and (on ?k ?k) (agent_holds ?k) ) (exists (?f - bridge_block) (not (not (agent_holds ?f) ) ) ) (not (or (or (and (not (touch ?k upright) ) (in ?k ?k) ) (in_motion ?k) ) (and (adjacent ?k ?k) (in_motion ?k) ) ) ) ) )
          (once (exists (?w - hexagonal_bin ?a - game_object) (in bed yellow) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (= 10 (* 9 (* (count preference1:golfball:alarm_clock:blue_dodgeball) (* (count-once-per-objects preference1:beachball) (* (count-once-per-objects preference1:golfball) (+ (= (count-longest preference1:yellow) (count preference1:yellow_cube_block) )
                3
              )
            )
          )
        )
        (external-forall-maximize
          (total-time)
        )
      )
    )
    (>= (* 4 (count preference1:wall) )
      (count-same-positions preference1:doggie_bed:green)
    )
  )
)
(:scoring
  3
)
)(define (game game-id-566) (:domain few-objects-room-v1)
(:setup
  (exists (?y - dodgeball)
    (forall (?i - (either wall key_chain) ?i - hexagonal_bin)
      (and
        (game-conserved
          (agent_holds ?i)
        )
        (and
          (and
            (exists (?d - hexagonal_bin)
              (and
                (or
                  (exists (?n ?u ?t - dodgeball)
                    (game-optional
                      (on ?y ?d)
                    )
                  )
                  (and
                    (exists (?z - (either golfball golfball))
                      (game-conserved
                        (not
                          (not
                            (agent_holds ?z)
                          )
                        )
                      )
                    )
                    (game-conserved
                      (same_color ?y ?y)
                    )
                    (and
                      (exists (?a - chair)
                        (game-conserved
                          (in ?a ?y)
                        )
                      )
                    )
                  )
                )
              )
            )
            (forall (?j - hexagonal_bin)
              (exists (?x - building ?p ?c ?z ?r - hexagonal_bin)
                (exists (?a - building ?m - doggie_bed)
                  (and
                    (forall (?b - dodgeball)
                      (game-optional
                        (> (distance ?b ?r) (x_position ?j))
                      )
                    )
                    (exists (?t - ball)
                      (exists (?s - (either game_object))
                        (game-optional
                          (in_motion pink_dodgeball)
                        )
                      )
                    )
                  )
                )
              )
            )
            (game-optional
              (agent_crouches )
            )
          )
        )
        (forall (?b - hexagonal_bin)
          (game-optional
            (and
              (not
                (< 3 3)
              )
              (and
                (touch bed ?y)
                (not
                  (not
                    (in_motion ?b)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - curved_wooden_ramp)
      (and
        (preference preference1
          (exists (?t - triangular_ramp)
            (then
              (hold (not (in_motion ?t) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (<= (count-once-per-objects preference1:yellow_cube_block) 3 )
    (>= (<= 8 (* (* 3 (count-once-per-objects preference1:basketball) )
          (* 3 (count preference1:blue_cube_block:basketball) (count preference1:blue_cube_block:book) )
        )
      )
      (count-once preference1)
    )
  )
)
(:scoring
  (+ (external-forall-maximize (count preference1:dodgeball) ) (+ 2 (* (count preference1:tall_cylindrical_block) (* (+ (count preference1:dodgeball:tan) 3 1 )
          (count-once-per-objects preference1:yellow)
        )
        (+ (count-once-per-external-objects preference1:basketball) 0 )
        4
        (- (count-once-per-objects preference1:pink) )
        (* (+ (count-increasing-measure preference1) 5 (count-once-per-objects preference1:doggie_bed) )
          (* 18 15 (* (/ (* (count-same-positions preference1:golfball) (* (count preference1:blue_pyramid_block) (count preference1:hexagonal_bin) )
                  (count preference1:pink_dodgeball)
                  (count-shortest preference1:yellow)
                  (count-once preference1:bed)
                  (count preference1:golfball)
                )
                (count-once-per-objects preference1:basketball)
              )
              (+ 10 (count preference1:blue_pyramid_block) )
            )
          )
        )
        (count preference1:alarm_clock)
        10
        (external-forall-maximize
          (* (count preference1:yellow) (- (* (count preference1:block) 4 )
            )
          )
        )
      )
    )
    7
  )
)
)(define (game game-id-567) (:domain few-objects-room-v1)
(:setup
  (exists (?t - ball)
    (forall (?m - hexagonal_bin)
      (forall (?d - block)
        (and
          (forall (?e - hexagonal_bin)
            (and
              (exists (?g - cube_block ?z - hexagonal_bin)
                (exists (?v ?y - ball ?x - ball ?x - ball)
                  (and
                    (exists (?h - dodgeball ?g - (either blue_cube_block cube_block cube_block basketball))
                      (exists (?r - (either pillow floor watch))
                        (game-optional
                          (and
                            (not
                              (not
                                (not
                                  (and
                                    (on ?z ?t)
                                    (in_motion ?r)
                                    (agent_holds agent)
                                  )
                                )
                              )
                            )
                            (in_motion ?t)
                          )
                        )
                      )
                    )
                    (forall (?w - dodgeball ?g - dodgeball)
                      (game-conserved
                        (not
                          (in_motion top_drawer)
                        )
                      )
                    )
                  )
                )
              )
              (and
                (game-conserved
                  (not
                    (= 3 1)
                  )
                )
              )
            )
          )
          (game-optional
            (and
              (adjacent_side ?t ?t ?d)
              (not
                (agent_holds ?m)
              )
            )
          )
          (game-conserved
            (object_orientation ?d ?d)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?f - (either laptop tall_cylindrical_block block) ?s - hexagonal_bin)
        (then
          (once (in_motion ?s) )
          (once (equal_z_position ?s desk) )
          (hold-while (not (faces ?s ?s) ) (not (agent_holds ?s) ) (on ?s ?s) (not (exists (?l - hexagonal_bin) (in ?l upside_down) ) ) )
        )
      )
    )
    (preference preference2
      (exists (?p - dodgeball ?g - hexagonal_bin ?s - ball)
        (then
          (once (and (not (not (in_motion ?s) ) ) (and (not (above ?s top_drawer) ) (in ?s ?s) ) ) )
          (once (and (in_motion ?s) (agent_holds block) ) )
          (once (and (and (object_orientation ?s ?s) (and (agent_holds ?s) (in_motion ?s) ) ) (in_motion ?s) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= 20 (count preference2:hexagonal_bin:wall) )
    )
    (>= (count-total preference2:yellow_cube_block) (external-forall-maximize (count preference1:beachball:pink_dodgeball) ) )
  )
)
(:scoring
  7
)
)(define (game game-id-568) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (agent_holds floor)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?f - dodgeball)
        (then
          (once (agent_holds ?f) )
          (hold-while (not (agent_holds ?f) ) (not (not (not (not (and (and (exists (?o - cube_block) (not (on ?o ?f) ) ) (on ?f ?f) ) (agent_holds ?f) ) ) ) ) ) )
          (hold (and (in_motion ?f) (and (object_orientation ?f ?f) (forall (?d - tan_cube_block ?j - building) (adjacent ?j ?j) ) ) (and (agent_holds ?f) (and (and (and (agent_holds ?f) (on ?f ?f) ) (in_motion ?f) ) (adjacent_side ?f ?f ?f) ) ) (and (agent_holds main_light_switch) (and (in_motion ?f) (> (distance_side ?f bed ?f) (distance ?f ?f)) (same_object desk ?f) ) ) ) )
        )
      )
    )
    (preference preference2
      (exists (?q - bridge_block)
        (then
          (hold (not (in ?q ?q) ) )
          (hold (agent_holds ?q) )
          (once (and (not (on ?q ?q) ) (same_type pillow ?q) (not (on ?q ?q) ) (agent_holds ?q) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (+ (* (count-once-per-objects preference2:yellow) (count-once-per-objects preference2:yellow) )
        5
      )
      3
    )
    (<= (count preference2:rug:dodgeball) (count-same-positions preference1:pink:yellow_cube_block) )
    (>= (count-once-per-objects preference2:dodgeball:hexagonal_bin) (- (= (+ (* 5 (count preference2:side_table:blue_pyramid_block) )
            (count-once-per-objects preference2:dodgeball:beachball:pink)
          )
          (* 8 (/ (count-once-per-objects preference1:hexagonal_bin:dodgeball) (count preference1:golfball) ) )
        )
      )
    )
  )
)
(:scoring
  (count preference1:pink_dodgeball)
)
)(define (game game-id-569) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (game_start )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?u - building)
        (then
          (hold (agent_holds ?u) )
          (hold (agent_holds ?u) )
          (hold (and (on ?u ?u) (on ?u ?u) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:basketball:doggie_bed) (count preference1:dodgeball:yellow) )
)
(:scoring
  (count preference1:red)
)
)(define (game game-id-570) (:domain many-objects-room-v1)
(:setup
  (forall (?q - cube_block)
    (and
      (and
        (forall (?m - game_object ?d - block)
          (exists (?c - hexagonal_bin)
            (game-conserved
              (and
                (in_motion ?q)
              )
            )
          )
        )
      )
      (exists (?z - (either golfball cellphone dodgeball golfball))
        (and
          (and
            (not
              (and
                (and
                  (forall (?r - teddy_bear ?w ?x - dodgeball)
                    (forall (?u - hexagonal_bin)
                      (and
                        (game-conserved
                          (not
                            (not
                              (on ?q ?z)
                            )
                          )
                        )
                        (game-conserved
                          (in_motion ?z)
                        )
                        (game-optional
                          (or
                            (not
                              (same_object ?x ?u)
                            )
                          )
                        )
                      )
                    )
                  )
                  (exists (?n - desk_shelf ?o - triangular_ramp)
                    (exists (?n - dodgeball)
                      (exists (?k - dodgeball)
                        (game-conserved
                          (in_motion ?k)
                        )
                      )
                    )
                  )
                )
                (not
                  (game-conserved
                    (not
                      (on ?q ?q)
                    )
                  )
                )
              )
            )
            (game-optional
              (and
                (agent_holds ?z)
                (and
                  (not
                    (adjacent_side ?z ?z ?q)
                  )
                  (forall (?s - pyramid_block)
                    (not
                      (on ?s ?q)
                    )
                  )
                  (game_over )
                  (in ?q ?q)
                  (not
                    (agent_holds desk)
                  )
                  (in room_center ?q)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?f - hexagonal_bin)
      (and
        (preference preference1
          (exists (?l - dodgeball)
            (at-end
              (agent_holds ?l)
            )
          )
        )
        (preference preference2
          (exists (?w - (either floor cd) ?x - (either top_drawer pyramid_block) ?q - hexagonal_bin ?k - cube_block)
            (then
              (once (not (and (game_over ) (and (not (and (in ?k ?k) (agent_holds west_wall) ) ) (and (in bed upright) (game_over ) ) (and (and (and (equal_z_position ?k ?k) (and (not (on ?f ?k) ) (agent_holds ?f) (on ?k ?f) (exists (?z - beachball ?o - beachball) (agent_holds ?f) ) (in ?k bed) (not (and (in_motion ?k) (same_type ?k agent) ) ) (in door ?f) (not (= (distance ?k ?k) (distance ?k ?k)) ) (and (agent_holds ?k) (and (in_motion ?f) (and (not (not (in_motion agent) ) ) (and (equal_z_position ?f ?f) (open ?k) ) (and (not (= 2 (distance pink_dodgeball floor)) ) (and (and (in_motion desk) (in_motion ?k) ) (in_motion agent) ) ) (not (agent_holds ?f) ) ) ) ) (on ?k south_west_corner) ) ) (same_color ?k ?k) (and (agent_holds ?k) (agent_holds ?k) ) ) (not (and (on ?f bed) (and (agent_holds ?f) (agent_holds ?f) ) ) ) (rug_color_under ?f ?f) ) ) ) ) )
              (hold (and (in_motion upright) (on ?f ?f) ) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?x - ball)
        (then
          (hold (< (distance ?x ?x) 2) )
          (once (and (and (agent_holds ?x) (and (agent_holds ?x) (forall (?l - hexagonal_bin) (and (in_motion ?l) (same_color ?l ?l) ) ) ) ) (in agent ?x) ) )
          (hold (and (not (on ?x ?x) ) (not (in ?x ?x) ) ) )
        )
      )
    )
    (preference preference4
      (exists (?p - triangular_ramp)
        (then
          (hold-while (agent_holds front) (on ?p ?p) (< (distance_side ?p ?p agent) (building_size ?p)) (< (distance ?p ?p) 1) )
          (once (and (in ?p ?p) (on ?p ?p) ) )
          (once (on ?p ?p) )
        )
      )
    )
  )
)
(:terminal
  (= (* (count preference3:dodgeball) (count-once preference4:white) (* (count-once-per-objects preference3:golfball:pyramid_block) (* 5 3 )
      )
    )
    3
  )
)
(:scoring
  (< (* 5 (count preference1:brown) )
    (* (count preference2:doggie_bed) )
  )
)
)(define (game game-id-571) (:domain many-objects-room-v1)
(:setup
  (exists (?k - game_object)
    (game-conserved
      (agent_holds ?k)
    )
  )
)
(:constraints
  (and
    (forall (?m - bridge_block)
      (and
        (preference preference1
          (exists (?s - (either cd) ?l - red_dodgeball)
            (then
              (once (in_motion ?l) )
              (once (on ?m door) )
              (once (and (touch ?m ?l) (forall (?w - hexagonal_bin) (not (agent_holds ?w) ) ) ) )
            )
          )
        )
        (preference preference2
          (exists (?e - hexagonal_bin ?k - (either golfball key_chain) ?g ?o - hexagonal_bin)
            (then
              (hold-to-end (and (not (not (exists (?t - bridge_block) (not (in_motion ?o) ) ) ) ) (not (in ?m ?g) ) ) )
              (once (and (equal_z_position ?o ?m) (in_motion desk) (in ?o ?m) ) )
              (once (not (above desk ?g) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference2:basketball) (* (count-once-per-external-objects preference1:hexagonal_bin) 10 )
  )
)
(:scoring
  300
)
)(define (game game-id-572) (:domain many-objects-room-v1)
(:setup
  (exists (?g - ball)
    (not
      (and
        (game-optional
          (and
            (object_orientation ?g ?g)
            (touch ?g ?g)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?f - ball)
      (and
        (preference preference1
          (exists (?w - hexagonal_bin)
            (then
              (hold (is_setup_object ?w) )
              (once (and (not (in_motion desk) ) (on ?w ?f) ) )
              (once (and (touch ?w ?f) (exists (?b - (either golfball cellphone)) (not (on agent ?b) ) ) ) )
            )
          )
        )
        (preference preference2
          (exists (?o - hexagonal_bin)
            (at-end
              (in ?f ?o)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (= (count preference1:dodgeball) )
    2
  )
)
(:scoring
  (+ (count preference1:golfball:blue_cube_block) (count-once-per-external-objects preference1:doggie_bed:golfball:yellow) )
)
)(define (game game-id-573) (:domain many-objects-room-v1)
(:setup
  (exists (?p - dodgeball)
    (game-conserved
      (and
        (and
          (or
            (and
              (and
                (and
                  (not
                    (and
                      (in ?p pink_dodgeball)
                      (and
                        (not
                          (not
                            (in_motion ?p)
                          )
                        )
                        (touch desk ?p)
                      )
                    )
                  )
                  (not
                    (and
                      (and
                        (touch ?p ?p)
                        (not
                          (< 10 2)
                        )
                        (not
                          (and
                            (touch upright ?p)
                            (or
                              (agent_holds ?p)
                              (>= (distance ?p back) 3)
                              (same_object ?p ?p)
                              (in_motion ?p)
                            )
                          )
                        )
                      )
                      (and
                        (on north_wall ?p)
                        (touch ?p ?p)
                      )
                    )
                  )
                )
                (adjacent ?p floor)
              )
              (and
                (game_start )
                (< (distance ?p ?p) 6)
              )
            )
            (agent_holds ?p)
          )
          (on ?p floor)
        )
        (faces ?p ?p)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?d - game_object)
        (then
          (hold (not (in_motion ?d) ) )
          (hold (agent_holds ?d) )
          (hold (adjacent agent ?d) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 3 )
)
(:scoring
  (count-once preference1:yellow:basketball)
)
)(define (game game-id-574) (:domain few-objects-room-v1)
(:setup
  (exists (?b - cube_block)
    (forall (?i - hexagonal_bin)
      (exists (?e - dodgeball)
        (exists (?x - game_object)
          (exists (?z - hexagonal_bin)
            (exists (?h - beachball)
              (and
                (forall (?q - hexagonal_bin ?c - building)
                  (forall (?y - dodgeball)
                    (and
                      (and
                        (exists (?f - hexagonal_bin)
                          (forall (?s - dodgeball)
                            (game-conserved
                              (on ?y pink_dodgeball)
                            )
                          )
                        )
                      )
                      (and
                        (forall (?l - pyramid_block)
                          (game-conserved
                            (in room_center ?z)
                          )
                        )
                      )
                    )
                  )
                )
                (forall (?p - dodgeball)
                  (game-conserved
                    (agent_holds ?h)
                  )
                )
                (forall (?n - hexagonal_bin)
                  (game-conserved
                    (agent_holds ?h)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?i - dodgeball ?a - building)
        (then
          (once (not (in ?a ?a) ) )
          (once (agent_holds ?a) )
          (once (not (in_motion ?a) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (external-forall-maximize (count preference1) ) )
)
(:scoring
  (count preference1:yellow:cube_block)
)
)(define (game game-id-575) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (exists (?i - hexagonal_bin ?a - cylindrical_block)
      (and
        (and
          (not
            (forall (?j - cube_block ?r - dodgeball)
              (agent_holds ?r)
            )
          )
          (exists (?z ?d ?g - block)
            (touch ?a ?z)
          )
        )
        (= 1 1)
        (not
          (agent_holds upright)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - teddy_bear ?l - pillow ?i - teddy_bear)
      (and
        (preference preference1
          (exists (?m - hexagonal_bin)
            (then
              (once (and (not (< 0 1) ) (not (and (and (agent_holds ?m) (or (agent_holds ?m) (< (distance pink pink) (distance pink_dodgeball agent)) ) ) (not (in agent ?m) ) ) ) ) )
            )
          )
        )
        (preference preference2
          (exists (?j - (either hexagonal_bin wall cylindrical_block))
            (then
              (hold (touch bed ?i) )
              (once (not (and (agent_holds ?i) (in door ?i) (same_color ?i ?j) ) ) )
              (forall-sequence (?v - curved_wooden_ramp ?y ?z - game_object)
                (then
                  (once (touch ?j ?y) )
                  (hold (not (game_start ) ) )
                  (once (agent_holds ?j) )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once preference1:top_drawer) (count preference2:dodgeball) )
)
(:scoring
  (count-overlapping preference1:yellow:book)
)
)(define (game game-id-576) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (and
        (not
          (and
            (game-conserved
              (< 1 1)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?t - block)
      (and
        (preference preference1
          (exists (?i - chair ?x - game_object)
            (then
              (once (adjacent rug ?x) )
              (once (not (in front left) ) )
              (once (not (agent_holds ?x) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 15 (count preference1:yellow) )
)
(:scoring
  5
)
)(define (game game-id-577) (:domain many-objects-room-v1)
(:setup
  (exists (?d - building)
    (exists (?r ?e ?w ?f ?m ?h - hexagonal_bin)
      (exists (?s - tall_cylindrical_block ?t - hexagonal_bin)
        (game-conserved
          (object_orientation ?r ?t)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?v - curved_wooden_ramp)
        (then
          (once (in_motion ?v) )
          (hold-while (on ?v side_table) (not (in ?v ?v) ) )
          (once (agent_holds ?v) )
        )
      )
    )
    (preference preference2
      (exists (?d - hexagonal_bin)
        (then
          (once (forall (?n - chair ?t - doggie_bed) (touch ?d top_drawer) ) )
          (once (and (rug_color_under ?d ?d) (is_setup_object ?d) ) )
          (once (and (not (in_motion ?d) ) (agent_holds ?d) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (- (* (count preference2:dodgeball:golfball) 3 )
    )
    5
  )
)
(:scoring
  (+ (count-once preference2:basketball:alarm_clock) (count preference1:beachball:pyramid_block:white) )
)
)(define (game game-id-578) (:domain few-objects-room-v1)
(:setup
  (exists (?m - hexagonal_bin)
    (forall (?w - game_object ?q - red_pyramid_block)
      (and
        (exists (?a - hexagonal_bin)
          (forall (?h - (either ball pyramid_block) ?d ?b - (either rug dodgeball) ?y - ball)
            (game-optional
              (object_orientation ?m ?q)
            )
          )
        )
        (and
          (exists (?w - block)
            (exists (?b - (either triangle_block doggie_bed dodgeball dodgeball triangular_ramp hexagonal_bin ball))
              (game-optional
                (same_color ?q rug)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?h - (either cellphone alarm_clock basketball basketball dodgeball teddy_bear dodgeball))
        (then
          (hold (and (and (not (not (in_motion ?h) ) ) (and (agent_holds ?h) (adjacent ?h ?h) ) ) (and (and (between ?h ?h agent) (and (and (agent_holds ?h) (not (= (building_size ?h) 10) ) ) (not (not (and (in ?h door) ) ) ) ) ) (in_motion rug) ) ) )
          (once (in_motion ?h) )
          (once (same_color ?h floor) )
        )
      )
    )
    (forall (?r - (either main_light_switch cellphone) ?c - dodgeball)
      (and
        (preference preference2
          (exists (?a - game_object)
            (then
              (once (agent_holds ?c) )
              (hold (agent_holds ?a) )
              (hold (in_motion ?c) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (+ (count-once preference2:dodgeball) (count-total preference1:blue_pyramid_block) )
    (* 3 (- (count-once-per-objects preference1:red) )
    )
  )
)
(:scoring
  4
)
)(define (game game-id-579) (:domain many-objects-room-v1)
(:setup
  (exists (?w - block ?q - yellow_cube_block ?n - (either cylindrical_block cellphone))
    (game-conserved
      (in_motion ?n)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?t ?u ?j ?p ?c ?m - teddy_bear)
        (then
          (once (and (in ?t ?u) (< 0 4) ) )
          (once (in ?u agent) )
          (once (<= 0.5 6) )
          (once (not (exists (?f - (either red bridge_block) ?k - hexagonal_bin) (agent_holds ?t) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:beachball) (+ 7 (count preference1:beachball:beachball) )
  )
)
(:scoring
  (external-forall-maximize
    2
  )
)
)(define (game game-id-580) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?u - block)
      (game-conserved
        (and
          (and
            (> (distance ?u ?u) 8)
            (touch bed ?u)
          )
          (and
            (in_motion ?u)
            (agent_holds ?u)
          )
        )
      )
    )
    (exists (?p - dodgeball ?s - ball ?w ?a - wall)
      (exists (?d ?c - game_object)
        (game-conserved
          (agent_holds ?c)
        )
      )
    )
    (exists (?e - dodgeball)
      (and
        (and
          (exists (?b - chair)
            (exists (?c - teddy_bear ?v - ball)
              (game-conserved
                (same_type ?e ?v)
              )
            )
          )
        )
        (game-conserved
          (and
            (not
              (exists (?n - doggie_bed)
                (in_motion ?e)
              )
            )
            (forall (?b - (either credit_card block floor) ?b - ball)
              (on ?b ?e)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?m - game_object ?k - hexagonal_bin)
      (and
        (preference preference1
          (exists (?m - (either book laptop) ?i - hexagonal_bin ?q - dodgeball)
            (then
              (once (and (and (not (between ?k ?k ?q) ) (same_color ?k ?q) ) (and (not (in_motion back) ) (faces ?k ?k) ) (in ?q ?k) ) )
              (once (not (on ?q ?k) ) )
              (once (adjacent ?k ?q) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* 4 (* 5 (* 30 (count preference1:block) )
      )
    )
    (count preference1:golfball:pink)
  )
)
(:scoring
  (external-forall-minimize
    50
  )
)
)(define (game game-id-581) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?z - (either pillow cd tall_cylindrical_block))
      (exists (?y - curved_wooden_ramp)
        (game-optional
          (not
            (in_motion ?y)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?z - (either cylindrical_block doggie_bed golfball laptop) ?l - (either cylindrical_block key_chain))
        (then
          (once (on ?l ?l) )
          (hold (in_motion ?l) )
          (once (on ?l ?l) )
        )
      )
    )
    (preference preference2
      (exists (?k - (either pen cube_block))
        (then
          (hold (exists (?j - cube_block) (and (not (and (same_color ?j ?k) (adjacent_side ?j ?k ?k) ) ) (not (in_motion ?k) ) ) ) )
          (once (not (is_setup_object agent) ) )
          (once (and (in_motion ?k) (not (and (same_type ?k ?k) (>= 5 6) (in_motion ?k) (not (agent_holds ?k) ) ) ) (toggled_on ?k) (or (and (<= (building_size ?k) 1) (not (= (distance ?k ?k) (x_position ?k) 0.5) ) ) (and (on ?k floor) (agent_holds ?k) ) ) (not (in main_light_switch ?k) ) (open ?k) (and (< 1 8) (toggled_on ?k) ) ) )
        )
      )
    )
  )
)
(:terminal
  (> 2 3 )
)
(:scoring
  (- (* 4 (* 3 (count-once preference2:orange:pink) )
    )
  )
)
)(define (game game-id-582) (:domain few-objects-room-v1)
(:setup
  (exists (?t - dodgeball ?b - ball)
    (and
      (game-conserved
        (in_motion ?b)
      )
      (game-conserved
        (exists (?c - teddy_bear)
          (adjacent ?c ?b)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?n - hexagonal_bin ?d - (either bridge_block yellow) ?a - curved_wooden_ramp)
        (then
          (hold (adjacent ?a ?a) )
          (once (in_motion upright) )
          (hold-while (not (game_start ) ) (in ?a ?a) (adjacent pillow ?a) )
        )
      )
    )
    (forall (?f - triangular_ramp)
      (and
        (preference preference2
          (exists (?r - hexagonal_bin ?w - building)
            (then
              (once (not (touch ?w ?w) ) )
              (once (not (and (and (exists (?h - wall) (in ?h ?f) ) (not (on ?w ?w) ) ) (and (and (= (distance ?f room_center) (distance ?w ?w)) (same_object ?f ?w) ) (and (< (distance door ?w) 7) (= 1 1) ) ) ) ) )
              (once (object_orientation green_golfball ?f) )
              (once (agent_holds bed) )
            )
          )
        )
        (preference preference3
          (exists (?j - cube_block)
            (then
              (once (and (in_motion ?j) (in_motion ?j) ) )
              (once (and (in_motion ?j) (in ?j ?f) ) )
              (hold (not (in_motion ?j) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once preference2:pink:red) (* 50 (count-once preference1:blue_dodgeball) (* (count preference2:green:alarm_clock) (+ (+ 5 3 (+ (* (count preference1:pink) (* (count-once-per-objects preference1:basketball:pink) (count-once-per-objects preference3:yellow_cube_block:purple:basketball) )
              )
              (count-measure preference3:beachball)
            )
            12
            (count preference2:dodgeball)
            (count preference2:red_pyramid_block:pink_dodgeball)
            10
            (count preference3)
            (count-once preference3:pyramid_block)
          )
          (count preference3:beachball)
        )
      )
      (* (* (count-overlapping preference1:basketball:hexagonal_bin) (count preference3:dodgeball) )
        (count preference3:hexagonal_bin)
        (* (count-once-per-objects preference3:pink:hexagonal_bin) 1 (count-once-per-objects preference2:golfball) )
        (* (* (total-time) 1 )
          (* (count preference3:pyramid_block) (* (count preference1:green) 2 )
          )
        )
        2
        (- (* (count preference2:beachball) (* 4 (count preference2:yellow) )
          )
        )
      )
    )
  )
)
(:scoring
  10
)
)(define (game game-id-583) (:domain medium-objects-room-v1)
(:setup
  (exists (?v - hexagonal_bin)
    (exists (?m - (either teddy_bear cube_block yellow_cube_block))
      (and
        (and
          (game-optional
            (in_motion desk)
          )
          (and
            (exists (?c - ball)
              (game-optional
                (in_motion ?c)
              )
            )
          )
        )
        (exists (?e ?k - cube_block ?u - (either hexagonal_bin dodgeball mug) ?g - drawer)
          (and
            (forall (?d - game_object ?q - teddy_bear)
              (and
                (and
                  (exists (?w - shelf)
                    (game-conserved
                      (> 9 8)
                    )
                  )
                )
                (and
                  (exists (?c - (either doggie_bed triangular_ramp) ?t - tall_cylindrical_block)
                    (and
                      (and
                        (game-optional
                          (and
                            (agent_holds ?t)
                            (and
                              (and
                                (adjacent top_drawer desk)
                                (and
                                  (and
                                    (not
                                      (and
                                        (not
                                          (in_motion ?m)
                                        )
                                        (agent_holds ?g)
                                      )
                                    )
                                    (< 1 (distance ?m ?q))
                                    (= 1 0.5)
                                    (same_color ?v ?v)
                                  )
                                  (in_motion ?v)
                                  (on ?t ?t)
                                  (and
                                    (not
                                      (not
                                        (faces ?g ?g)
                                      )
                                    )
                                    (in ?q ?m)
                                  )
                                  (and
                                    (touch ?t ?t)
                                    (not
                                      (and
                                        (not
                                          (adjacent ?v ?t)
                                        )
                                        (in_motion ?g)
                                      )
                                    )
                                  )
                                  (rug_color_under ?m ?g)
                                  (on ?q ?g)
                                  (equal_x_position ?t ?m)
                                )
                                (on bed ?q)
                              )
                              (in_motion ?g)
                            )
                          )
                        )
                      )
                      (forall (?h - chair)
                        (exists (?d - curved_wooden_ramp)
                          (game-conserved
                            (in_motion ?d)
                          )
                        )
                      )
                    )
                  )
                )
                (exists (?y - dodgeball)
                  (game-optional
                    (and
                      (and
                        (not
                          (not
                            (on ?y ?q)
                          )
                        )
                        (or
                          (not
                            (not
                              (not
                                (not
                                  (in rug ?m)
                                )
                              )
                            )
                          )
                          (on ?m ?v)
                        )
                      )
                      (agent_holds ?v)
                    )
                  )
                )
              )
            )
            (and
              (exists (?p - (either key_chain bridge_block flat_block))
                (game-conserved
                  (not
                    (and
                      (and
                        (<= 1 2)
                        (and
                          (in_motion agent)
                          (not
                            (or
                              (on ?g ?v)
                              (and
                                (< (distance pink_dodgeball ?v) (distance ?v ?v))
                                (in ?v ?v)
                              )
                            )
                          )
                        )
                        (on ?v ?p)
                        (< 1 1)
                        (>= 0.5 (x_position ?g))
                        (not
                          (in ?v ?v)
                        )
                        (agent_holds west_wall)
                        (and
                          (and
                            (equal_x_position ?v bed)
                            (not
                              (in_motion ?g)
                            )
                          )
                          (and
                            (in_motion ?p)
                            (not
                              (and
                                (adjacent_side ?g ?g ?v)
                                (or
                                  (and
                                    (on ?p ?v)
                                    (> 1 1)
                                    (and
                                      (not
                                        (not
                                          (< (distance agent ?p) 6)
                                        )
                                      )
                                    )
                                    (or
                                      (in_motion bed)
                                      (agent_holds ?v)
                                    )
                                  )
                                  (not
                                    (touch blue ?g)
                                  )
                                  (in_motion bed)
                                )
                              )
                            )
                          )
                        )
                        (on ?p ?v)
                        (< 1 1)
                      )
                      (on ?p ?m)
                    )
                  )
                )
              )
              (and
                (and
                  (game-optional
                    (in ?m ?v)
                  )
                  (game-conserved
                    (adjacent ?v ?g)
                  )
                  (game-optional
                    (in_motion ?m)
                  )
                )
              )
              (exists (?p - cube_block ?b - cube_block)
                (game-conserved
                  (not
                    (touch ?m ?v)
                  )
                )
              )
            )
          )
        )
        (exists (?e ?s ?d ?l - ball)
          (and
            (and
              (game-optional
                (agent_holds ?s)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?i - (either hexagonal_bin blue_cube_block tall_cylindrical_block triangle_block))
        (then
          (hold-while (on ?i ?i) (in_motion ?i) )
          (once (in_motion ?i) )
          (once (agent_holds ?i) )
        )
      )
    )
    (preference preference2
      (exists (?f - (either mug pillow))
        (then
          (hold-while (adjacent ?f rug) (on ?f ?f) )
          (hold-while (agent_holds ?f) (forall (?j - cube_block) (same_type ?j ?f) ) )
          (hold (and (agent_holds ?f) (in_motion agent) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (and
        (> 8 (+ 3 (- (count preference2:book) )
          )
        )
        (not
          (> 5 3 )
        )
        (or
          (>= (count preference2:pink) (count-once-per-objects preference1:beachball) )
          (>= (* 9 5 )
            (+ (count-overlapping preference1:dodgeball) 4 (+ (count-once-per-external-objects preference2:orange) 3 0 (count-once-per-objects preference2:yellow) )
            )
          )
        )
      )
      (>= 8 2 )
    )
    (<= (count-once-per-objects preference2:basketball:purple) (count preference1:pink_dodgeball) )
  )
)
(:scoring
  (count preference2:golfball)
)
)(define (game game-id-584) (:domain few-objects-room-v1)
(:setup
  (exists (?k - dodgeball)
    (game-conserved
      (and
        (agent_holds ?k)
        (rug_color_under ?k bed)
      )
    )
  )
)
(:constraints
  (and
    (forall (?z - curved_wooden_ramp)
      (and
        (preference preference1
          (exists (?u - (either laptop flat_block doggie_bed) ?h - chair)
            (then
              (hold (> (distance ?z ?h) 1) )
              (once (exists (?x - dodgeball) (not (in_motion side_table) ) ) )
              (once (not (in_motion east_sliding_door) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:golfball) (count-once-per-objects preference1:golfball:purple:pink) )
)
(:scoring
  (count preference1:pink_dodgeball)
)
)(define (game game-id-585) (:domain many-objects-room-v1)
(:setup
  (not
    (not
      (and
        (forall (?s - hexagonal_bin ?v - (either cylindrical_block alarm_clock wall triangle_block))
          (game-optional
            (exists (?j - teddy_bear)
              (and
                (and
                  (agent_holds bed)
                  (in_motion ?j)
                )
                (and
                  (is_setup_object ?v)
                  (or
                    (not
                      (not
                        (not
                          (on ?j ?j)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
        (exists (?h - golfball ?d - chair)
          (forall (?e ?c - teddy_bear)
            (and
              (and
                (exists (?i - (either cd triangle_block dodgeball yellow cube_block) ?q - dodgeball)
                  (exists (?h - rug)
                    (and
                      (exists (?t - ball ?g - block ?m - cube_block)
                        (and
                          (exists (?r - game_object)
                            (exists (?g - cube_block)
                              (game-conserved
                                (equal_z_position ?r ?h)
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
              (exists (?r - wall)
                (game-optional
                  (agent_holds ?r)
                )
              )
              (game-optional
                (and
                  (agent_holds ?c)
                  (in_motion ?e)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?q - (either ball pink))
        (then
          (hold (agent_holds ?q) )
          (once (not (on agent ?q) ) )
          (any)
        )
      )
    )
    (preference preference2
      (exists (?x - red_dodgeball)
        (then
          (once (agent_holds ?x) )
          (once (and (and (and (touch ?x ?x) (rug_color_under ?x ?x) ) (agent_holds ?x) (in_motion ?x) ) (exists (?k - ball ?u - (either triangle_block mug)) (adjacent_side desk room_center desk ?u) ) ) )
          (once (between ?x ?x ?x) )
        )
      )
    )
  )
)
(:terminal
  (or
    (= (- 15 (count preference2:cube_block) ) (count preference1:beachball) )
    (>= (count preference1:basketball:yellow) 5 )
  )
)
(:scoring
  (or
    (count preference2:pink)
    5
  )
)
)(define (game game-id-586) (:domain medium-objects-room-v1)
(:setup
  (exists (?f - block ?e - dodgeball)
    (or
      (and
        (exists (?c - (either wall main_light_switch credit_card cube_block))
          (exists (?p - wall)
            (game-conserved
              (and
                (agent_holds ?p)
                (agent_holds ?c)
              )
            )
          )
        )
        (game-conserved
          (touch ?e ?e)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?y - drawer ?d - ball)
        (then
          (hold-while (touch ?d ?d) (in_motion ?d) )
          (once (touch ?d bed) )
          (hold (not (agent_holds desk) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-once-per-objects preference1:blue_dodgeball) 8 )
    (or
      (or
        (> 30 (* (count preference1:blue_dodgeball) (count preference1:purple) (count preference1:purple) (count preference1:yellow:golfball:book) (count-once-per-objects preference1:yellow) (total-time) )
        )
        (<= 5 (+ (count preference1:pink) (* (+ 1 5 )
              (not
                (count preference1:basketball)
              )
            )
          )
        )
      )
      (or
        (or
          (>= 2 (count preference1:book) )
          (and
            (>= (count-once preference1:doggie_bed) (count-longest preference1:dodgeball) )
            (or
              (or
                (not
                  (or
                    (or
                      (or
                        (>= (count preference1:pink_dodgeball:beachball) (count-once-per-objects preference1:brown:pink_dodgeball) )
                        (and
                          (> 15 (- 30 )
                          )
                          (> 4 (count preference1:yellow) )
                        )
                        (> (+ (* (- (count-once-per-objects preference1:hexagonal_bin:beachball) )
                              7
                              (count-once-per-objects preference1:dodgeball:purple)
                              (count preference1:dodgeball)
                              2
                              (+ (>= 10 (total-time) )
                                10
                              )
                            )
                            (count preference1:dodgeball)
                            3
                          )
                          3
                        )
                      )
                      (> (* (* (count-shortest preference1:blue_dodgeball:purple) 3 )
                          (count preference1:beachball)
                        )
                        (count-once preference1:yellow)
                      )
                    )
                    (>= (count preference1:pink_dodgeball) (count preference1:pink:pink:purple) )
                    (>= (count preference1:dodgeball:beachball) (count-once-per-objects preference1:bed) )
                  )
                )
                (>= 100 (count-once preference1:red) )
                (> (count preference1:yellow:red) (* (count preference1:yellow_pyramid_block) (/ (* (* (<= (/ (- (count-longest preference1:dodgeball:dodgeball) )
                              (count-once preference1:blue_pyramid_block)
                            )
                            (<= 3 180 )
                          )
                          (count preference1:block)
                        )
                        2
                      )
                      (count preference1:book:golfball)
                    )
                  )
                )
              )
              (= 2 (* (- (= (total-time) (= (- 0 )
                      )
                    )
                  )
                  4
                  (= (count-once-per-objects preference1:beachball) 10 )
                  (* (* (+ 6 (or (count preference1:book) (or 6 5 (count-once preference1:red) ) ) )
                      (and
                        (* (total-score) (count-once-per-objects preference1:yellow) )
                        5
                      )
                      (count preference1:dodgeball)
                      (count-once-per-objects preference1:blue_dodgeball)
                    )
                    (count preference1:beachball)
                  )
                  5
                  1
                )
              )
            )
          )
          (or
            (> 4 (count preference1:beachball) )
            (and
              (or
                (or
                  (>= 5 (or (* (count preference1:book) 180 )
                      (count-once-per-objects preference1:dodgeball)
                      (count preference1:dodgeball)
                    )
                  )
                  (and
                    (>= (count-overlapping preference1:cube_block) 3 )
                  )
                )
                (and
                  (or
                    (<= (* (- (not 50 ) )
                        4
                      )
                      6
                    )
                    (>= (count-once-per-objects preference1:basketball:beachball) (not (+ (count-once-per-objects preference1:doggie_bed) (count preference1:yellow) )
                      )
                    )
                  )
                )
              )
            )
            (>= (* 5 (count-once-per-objects preference1:yellow) )
              (* (* (count preference1:purple) (* (count preference1:dodgeball:beachball) (count-longest preference1:yellow) )
                  (* 5 (+ 2 15 1 (= (total-time) 10 )
                      (count-once-per-objects preference1:orange)
                      (* (* (count-measure preference1:green) (+ 2 (count preference1:pink_dodgeball) )
                        )
                        (count-once-per-objects preference1:dodgeball:yellow_cube_block)
                      )
                      2
                      (* 10 )
                      2
                      7
                      (or
                        (count-once preference1:red)
                      )
                      40
                    )
                    (count-once-per-objects preference1:green:purple)
                  )
                  (+ (count preference1:dodgeball) (count-once preference1:beachball:alarm_clock) )
                )
              )
            )
            (and
              (or
                (and
                  (or
                    (>= (count-shortest preference1:yellow:green) 7 )
                  )
                  (>= (count-overlapping preference1:blue_pyramid_block) 15 )
                )
                (< (external-forall-maximize 10 ) (* (count-once-per-objects preference1:pink) (count-once-per-objects preference1:pink) 5 (+ (/ (count preference1:basketball) 2 ) (count-once-per-objects preference1:green) 5 (count preference1:dodgeball:basketball) )
                  )
                )
              )
              (<= (+ (+ (count preference1:green) (+ 20 2 )
                  )
                  (count preference1:blue_dodgeball:wall)
                )
                (count preference1:top_drawer)
              )
              (or
                (> (count preference1:dodgeball:beachball) (count preference1:dodgeball:orange) )
                (>= (not 1 ) (+ (count-once-per-external-objects preference1:golfball) (count-increasing-measure preference1:pink) )
                )
              )
            )
          )
        )
        (< (total-score) 6 )
        (>= 10 9 )
      )
      (>= (count-once preference1:blue_cube_block) (* 5 (* (* (total-time) (not (+ (count-once-per-objects preference1:golfball) (* (or (* (count-unique-positions preference1:green:doggie_bed) (count-once preference1:blue_dodgeball:dodgeball) )
                      10
                      10
                    )
                    3
                  )
                )
              )
            )
            (count preference1:pink_dodgeball:pyramid_block)
          )
        )
      )
    )
    (= (count-once-per-objects preference1:red) 5 )
    (and
      (>= (count preference1:wall:pink) (* (count preference1:beachball) (count-once-per-objects preference1:red) )
      )
      (>= (and (count preference1:basketball:orange) (* 100 10 )
        )
        (count-once-per-objects preference1:alarm_clock)
      )
    )
  )
)
(:scoring
  (* (= (count preference1:dodgeball) (external-forall-minimize (* 4 (* (count-once-per-external-objects preference1:golfball) (+ (count preference1:cube_block) 10 )
          )
        )
      )
    )
    (count preference1:pink_dodgeball:hexagonal_bin)
  )
)
)(define (game game-id-587) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (in_motion desk)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?a - dodgeball)
        (then
          (once (not (touch ?a bed) ) )
          (hold (not (and (not (not (agent_holds ?a) ) ) (in_motion ?a) ) ) )
          (once (or (and (in_motion ?a) (and (not (equal_z_position ?a ?a) ) (in ?a room_center) ) ) (forall (?e - game_object ?e - dodgeball) (in_motion ?a) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count preference1:top_drawer:golfball) (count preference1:green) )
    4
  )
)
(:scoring
  (* (- (* (* (count preference1:dodgeball) 2 )
        (- (* 3 (count preference1:basketball:purple:red) )
        )
      )
    )
    2
    (count-once-per-objects preference1:alarm_clock)
    10
  )
)
)(define (game game-id-588) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?v - hexagonal_bin ?f - dodgeball ?c - cube_block)
      (game-conserved
        (in_motion ?c)
      )
    )
    (game-conserved
      (in_motion desk)
    )
    (exists (?r - pyramid_block ?b - tan_cube_block)
      (exists (?i - cube_block ?c - chair)
        (forall (?v - hexagonal_bin ?x - red_pyramid_block)
          (exists (?g - hexagonal_bin)
            (game-conserved
              (touch ?c ?b)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?l - doggie_bed)
        (then
          (hold-to-end (not (agent_holds ?l) ) )
          (hold (rug_color_under room_center ?l) )
          (once (not (agent_holds ?l) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (count preference1:doggie_bed) 0 )
    (>= (count preference1:alarm_clock) (+ (and (count preference1:pyramid_block) ) 9 )
    )
  )
)
(:scoring
  5
)
)(define (game game-id-589) (:domain many-objects-room-v1)
(:setup
  (forall (?l - block)
    (and
      (game-conserved
        (and
          (exists (?x - color)
            (in_motion ?x)
          )
          (agent_holds agent)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?j - hexagonal_bin ?s - teddy_bear)
        (then
          (once (on ?s ?s) )
          (once-measure (in_motion ?s) (x_position ?s) )
          (once (or (and (and (and (agent_holds ?s) (and (faces ?s ?s) (and (in_motion ?s) (adjacent ?s ?s) ) ) ) (agent_holds ?s) ) (not (in_motion ?s) ) ) (and (and (and (and (agent_holds ?s) (faces agent ?s) ) (in_motion desk) ) (not (broken top_shelf) ) ) (and (adjacent ?s room_center) (not (in_motion ?s) ) (on ?s ?s) ) ) ) )
        )
      )
    )
    (forall (?t - dodgeball ?v - teddy_bear)
      (and
        (preference preference2
          (exists (?i - color)
            (then
              (once-measure (not (in_motion front) ) (distance ?i ?i) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once preference2:golfball:pink_dodgeball) (count preference1:purple) )
)
(:scoring
  (count preference2:dodgeball)
)
)(define (game game-id-590) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?o - ball)
      (or
        (game-conserved
          (in_motion ?o)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?y - dodgeball ?n - drawer ?y - (either golfball beachball) ?c - hexagonal_bin)
        (then
          (hold (> (distance ?c ?c) 6) )
          (once (and (not (on desk ?c) ) (and (in_motion ?c) (or (in ?c ?c) (in_motion ?c) (and (on ?c ?c) (adjacent ?c ?c) ) ) ) ) )
          (once (in ?c ?c) )
        )
      )
    )
  )
)
(:terminal
  (or
    (> 5 (count preference1:orange) )
    (or
      (> (count preference1:green) (count-once-per-objects preference1:yellow_cube_block) )
      (>= (total-time) (count-once-per-objects preference1:pink_dodgeball) )
    )
  )
)
(:scoring
  (count-once-per-objects preference1:golfball:yellow)
)
)(define (game game-id-591) (:domain few-objects-room-v1)
(:setup
  (exists (?m - teddy_bear ?h - dodgeball)
    (and
      (and
        (forall (?p - teddy_bear)
          (and
            (forall (?s - (either pillow cd) ?q - triangular_ramp)
              (game-optional
                (in ?p ?h)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?z - color ?b - pillow)
        (then
          (once (in_motion ?b) )
          (once (not (broken ?b) ) )
          (once (on ?b ?b) )
          (once (in_motion ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ 5 3 )
    (count-once-per-objects preference1)
  )
)
(:scoring
  (count-once-per-objects preference1:yellow)
)
)(define (game game-id-592) (:domain few-objects-room-v1)
(:setup
  (forall (?e - dodgeball ?w - hexagonal_bin ?i - (either doggie_bed tall_cylindrical_block credit_card))
    (exists (?d - pyramid_block ?f - game_object)
      (and
        (game-optional
          (not
            (adjacent_side agent ?i ?i)
          )
        )
        (and
          (and
            (game-conserved
              (>= 1 (distance ?i ?i))
            )
            (game-optional
              (and
                (= 1 (building_size ?i))
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?t - block ?v - (either dodgeball cube_block floor mug) ?c ?u ?z - dodgeball ?o - hexagonal_bin)
        (then
          (once (not (not (not (same_type ?o ?o) ) ) ) )
          (hold-while (agent_holds ?o) (and (in ?o rug) (and (< 1 (distance ?o ?o)) (and (not (and (exists (?t - game_object ?e - ball ?k - (either wall bed dodgeball teddy_bear pyramid_block dodgeball basketball)) (agent_holds ?o) ) (not (on ?o agent) ) (not (on ?o ?o) ) ) ) (and (touch room_center ?o) (agent_holds ?o) ) ) ) ) (or (and (agent_holds ?o) (exists (?x - hexagonal_bin) (and (on ?o ?o) (in_motion blue) (< 1 1) ) ) (on ?o ?o) ) (adjacent ?o ?o) ) (on desk ?o) )
          (once (same_object ?o ?o) )
        )
      )
    )
    (preference preference2
      (exists (?b - chair ?q - blue_cube_block)
        (then
          (hold-for 2 (toggled_on ?q) )
          (forall-sequence (?i - doggie_bed)
            (then
              (once (in_motion ?q) )
              (hold-while (and (and (and (and (and (above ?q agent) (on ?i agent) ) (on ?i ?q) ) (rug_color_under agent ?q) ) (in_motion ?q) ) (game_start ) ) (adjacent_side ?i door ?q) (not (adjacent ?i ?q) ) )
              (once (and (and (not (not (on ?q ?i) ) ) (exists (?v - (either yellow_cube_block laptop) ?g - curved_wooden_ramp) (same_type ?g ?g) ) (agent_holds ?i) (and (and (< 1 1) (and (in pink ?i) (and (same_type desk ?i) (rug_color_under ?i pink_dodgeball) (in_motion ?i) ) ) ) (< (distance_side ?i ?i ?q rug) 6) ) ) (same_object ?q ?q) ) )
            )
          )
          (once (adjacent ?q desk) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (and 2 (count preference1:purple) (count-once-per-objects preference2:purple:doggie_bed) ) (count-once preference2:basketball:hexagonal_bin) )
      (or
        (>= 5 18 )
        (>= 3 2 )
        (or
          (>= (total-score) 2 )
          (and
            (>= 10 (total-time) )
            (= (+ (* (count-overlapping preference1:basketball) (count-once-per-objects preference2:dodgeball) )
                (count-once-per-objects preference1:pink_dodgeball)
              )
              (* (* (count-once-per-objects preference1:basketball) 3 )
                (* (* 6 (not (* (* (* (* 1 (count-once-per-objects preference1:yellow) )
                            (count preference2:yellow_cube_block)
                          )
                          (* 1 (count preference2:basketball) )
                        )
                        3
                      )
                    )
                  )
                  (* (* (and (count preference2:doggie_bed) (* (count-once-per-objects preference1:yellow) (+ (- (+ 6 (count-once-per-external-objects preference2:hexagonal_bin) )
                              (count preference1:yellow:pink)
                            )
                            7
                          )
                        )
                        (count-once-per-objects preference2:basketball)
                      )
                      (count-once-per-objects preference1:blue_dodgeball)
                    )
                    10
                  )
                )
              )
            )
            (or
              (>= (count preference2:beachball) (count-once-per-objects preference1:yellow_cube_block:pyramid_block) )
              (>= (count-once preference2:purple:beachball) 30 )
            )
          )
          (>= (count-once-per-external-objects preference2:blue_cube_block:hexagonal_bin) 5 )
          (>= (count preference1) (count-total preference1) )
        )
      )
    )
    (<= (count-once-per-objects preference2:pink) 5 )
  )
)
(:scoring
  (count-once-per-objects preference2:pink_dodgeball)
)
)(define (game game-id-593) (:domain many-objects-room-v1)
(:setup
  (and
    (game-optional
      (in_motion pink_dodgeball)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?p - bridge_block ?e - beachball)
        (then
          (hold (not (rug_color_under ?e ?e) ) )
          (once (or (< (distance ?e ?e) 2) (on ?e ?e) ) )
          (hold (in_motion ?e) )
        )
      )
    )
  )
)
(:terminal
  (>= 5 10 )
)
(:scoring
  (* (* (external-forall-maximize (* (* (or (+ (count preference1:block) 10 )
              100
              (count-once-per-objects preference1:pink_dodgeball:beachball)
            )
            2
          )
          (* (* (count preference1:dodgeball) (count-increasing-measure preference1:blue_dodgeball) )
            (count-increasing-measure preference1:golfball)
          )
        )
      )
      (* 5 (* (or 3 ) (count preference1:dodgeball) (* (and 1 7 ) (count preference1:dodgeball) )
        )
      )
    )
  )
)
)(define (game game-id-594) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-optional
      (< 8 1)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?m ?x - dodgeball)
        (then
          (once (object_orientation ?x ?x) )
          (once (on ?m ?x) )
          (hold (and (in_motion bridge_block) (< 10 (building_size front)) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count-once-per-objects preference1:basketball) 15 )
    (count-shortest preference1:yellow)
  )
)
(:scoring
  (count preference1:basketball)
)
)(define (game game-id-595) (:domain medium-objects-room-v1)
(:setup
  (exists (?c - book ?y - drawer)
    (and
      (and
        (game-conserved
          (not
            (exists (?h - hexagonal_bin ?p - doggie_bed)
              (in_motion ?y)
            )
          )
        )
        (and
          (and
            (forall (?k - building ?l - building ?m - block ?r - (either mug golfball))
              (exists (?i - ball ?h - cube_block)
                (exists (?o - (either cube_block cd))
                  (exists (?q - block)
                    (exists (?k - ball)
                      (game-conserved
                        (not
                          (agent_holds desk)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
        (and
          (game-optional
            (agent_holds floor)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?v - building ?r - dodgeball)
        (then
          (once (and (on ?r ?r) (on front bed) ) )
          (hold (on south_west_corner ?r) )
          (once (in_motion ?r) )
        )
      )
    )
  )
)
(:terminal
  (>= 6 (count-once preference1:blue_pyramid_block:red) )
)
(:scoring
  5
)
)(define (game game-id-596) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (agent_holds agent)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?h - hexagonal_bin)
        (then
          (once (or (forall (?n - red_dodgeball) (not (not (same_type ?n ?n) ) ) ) ) )
          (hold-for 2 (and (exists (?i ?q - game_object ?m - cube_block) (not (exists (?e - wall ?j - (either alarm_clock book) ?a - teddy_bear) (in_motion ?a) ) ) ) (forall (?u - doggie_bed) (touch ?u ?u) ) ) )
          (once (and (or (on ?h ?h) (agent_holds ?h) ) (in_motion ?h) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 5 (+ (/ (count preference1:yellow_pyramid_block) 3 ) (* 5 (count-once-per-objects preference1:rug) )
      )
    )
    (>= 10 10 )
    (>= (- (* 20 (count preference1:yellow) )
      )
      (count preference1:basketball:beachball)
    )
  )
)
(:scoring
  (count-once-per-objects preference1:bed:beachball)
)
)(define (game game-id-597) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (exists (?y - wall)
      (agent_holds ?y)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?x - hexagonal_bin)
        (then
          (once (not (not (on ?x ?x) ) ) )
          (once (and (in ?x south_west_corner) (on ?x ?x) ) )
          (hold (agent_holds ?x) )
        )
      )
    )
    (preference preference2
      (exists (?n ?d ?j ?o ?a ?g ?p ?f ?e ?u - hexagonal_bin ?x - red_dodgeball)
        (then
          (once (not (same_type ?x ?x) ) )
          (once (not (agent_holds rug) ) )
          (once (on ?x ?x) )
        )
      )
    )
  )
)
(:terminal
  (>= 4 (* (count preference1:yellow_pyramid_block:hexagonal_bin:dodgeball) 3 )
  )
)
(:scoring
  (+ (count preference2:dodgeball:pink) 4 )
)
)(define (game game-id-598) (:domain many-objects-room-v1)
(:setup
  (exists (?t - (either desktop wall pencil))
    (game-conserved
      (and
        (and
          (< 10 1)
          (not
            (agent_holds floor)
          )
        )
        (equal_x_position ?t ?t)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?l ?z - hexagonal_bin ?t - hexagonal_bin)
        (then
          (once (adjacent ?t ?t) )
          (hold (adjacent ?t ?t) )
          (once (not (exists (?b - teddy_bear ?z - red_dodgeball) (in_motion ?z) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:top_drawer) (* (count preference1:golfball:golfball) (+ (count preference1:dodgeball) (* 2 (count-measure preference1:beachball) )
      )
    )
  )
)
(:scoring
  20
)
)(define (game game-id-599) (:domain medium-objects-room-v1)
(:setup
  (exists (?y - dodgeball)
    (exists (?b - ball)
      (and
        (forall (?i - dodgeball)
          (game-conserved
            (and
              (agent_holds ?i)
              (in_motion ?i)
              (in_motion ?b)
              (adjacent ?i ?y)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?c - doggie_bed)
        (then
          (once (not (and (faces ?c ?c) (exists (?k - (either flat_block lamp mug)) (and (and (> 0.5 1) (= (distance room_center ?c)) ) (agent_holds bed) ) ) ) ) )
          (once-measure (on room_center left) (distance_side ?c rug ?c) )
          (once (and (adjacent ?c desk) (agent_holds ?c) ) )
        )
      )
    )
    (preference preference2
      (exists (?h - (either alarm_clock) ?j - dodgeball ?g - chair)
        (then
          (once (touch ?g ?g) )
          (once (on ?g ?g) )
          (hold-while (in ?g ?g) (agent_holds ?g) )
        )
      )
    )
  )
)
(:terminal
  (< (* (* 10 (count preference1:beachball:pink_dodgeball) )
      2
    )
    (* (count preference1:pink_dodgeball) (= (external-forall-maximize (count-once-per-external-objects preference1:dodgeball) ) 7 )
      (count-overlapping preference1:pink_dodgeball)
      (total-score)
    )
  )
)
(:scoring
  (total-score)
)
)(define (game game-id-600) (:domain medium-objects-room-v1)
(:setup
  (exists (?u - (either dodgeball))
    (game-conserved
      (in ?u ?u)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?m - blinds ?r - block)
        (then
          (once (in_motion rug) )
          (hold-while (in_motion ?r) (and (and (= (distance_side ?r ball ?r)) (and (rug_color_under ?r ?r) (agent_holds ?r) ) ) (in_motion agent) ) (adjacent ?r ?r) )
          (hold (and (not (agent_holds ?r) ) (exists (?g - hexagonal_bin ?o - dodgeball) (adjacent_side front ?o ?o ?r) ) (in_motion ?r) ) )
        )
      )
    )
    (forall (?g - game_object)
      (and
        (preference preference2
          (then
            (once (agent_holds ?g) )
            (hold (on ?g ?g) )
            (hold-while (in_motion ?g) (in ?g ?g) (agent_holds ?g) )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count preference1:dodgeball) 3 )
    (+ (* (+ (external-forall-minimize (external-forall-maximize 6 ) ) (count preference1:yellow_pyramid_block:dodgeball) )
        25
      )
      (* (count-once-per-external-objects preference1:dodgeball) (+ (* 10 (count-same-positions preference2:yellow_cube_block) )
          1
        )
      )
    )
  )
)
(:scoring
  5
)
)(define (game game-id-601) (:domain medium-objects-room-v1)
(:setup
  (exists (?w - building)
    (and
      (exists (?e - dodgeball)
        (and
          (and
            (exists (?z - dodgeball)
              (exists (?c ?g - game_object)
                (or
                  (exists (?x - wall)
                    (and
                      (game-conserved
                        (not
                          (and
                            (or
                              (not
                                (in_motion ?x)
                              )
                              (or
                                (and
                                  (not
                                    (agent_holds main_light_switch)
                                  )
                                  (< 2 (distance ?g ?g))
                                )
                                (agent_holds ?w)
                              )
                            )
                            (agent_holds room_center)
                            (in_motion ?x)
                          )
                        )
                      )
                    )
                  )
                  (game-conserved
                    (adjacent_side desk ?g ?g)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?h - dodgeball)
        (then
          (once (in_motion ?h) )
          (hold-while (exists (?o - wall ?c - red_dodgeball) (not (agent_holds ?c) ) ) (on rug ?h) )
          (once (and (agent_holds ?h) (and (touch ?h ?h) (exists (?z - curved_wooden_ramp) (agent_holds ?h) ) ) ) )
        )
      )
    )
    (preference preference2
      (exists (?s - blinds ?x - hexagonal_bin ?d - hexagonal_bin)
        (then
          (hold (and (adjacent ?d ?d) (agent_holds ?d) ) )
          (hold (in_motion ?d) )
          (hold (in ?d ?d) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 3 6 )
  )
)
(:scoring
  (count preference1:blue_dodgeball:yellow_cube_block)
)
)(define (game game-id-602) (:domain medium-objects-room-v1)
(:setup
  (forall (?y - curved_wooden_ramp)
    (game-optional
      (game_over )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?d - hexagonal_bin ?u - (either blue_cube_block basketball))
        (then
          (once (adjacent ?u ?u) )
          (once (in_motion ?u) )
          (hold (or (and (< (distance ?u ?u) 1) (not (not (not (on door ?u) ) ) ) ) (< (distance_side green_golfball ?u ?u) (distance ?u rug)) ) )
        )
      )
    )
    (forall (?m - cube_block)
      (and
        (preference preference2
          (exists (?o ?n - triangular_ramp ?p - cylindrical_block)
            (then
              (once (exists (?e - (either doggie_bed mug)) (= (distance ?m desk) 1) ) )
              (once (and (not (on ?p ?p) ) (and (in_motion ?p) (in_motion agent) ) ) )
              (once (and (and (adjacent ?m room_center) (not (touch ?m ?m) ) ) (in ?p ?p) (on blue ?p) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (<= (count-once-per-objects preference2:basketball:yellow) (total-score) )
      (count-once-per-objects preference1:hexagonal_bin:dodgeball)
    )
    4
  )
)
(:scoring
  (count-once-per-objects preference2:red:doggie_bed)
)
)(define (game game-id-603) (:domain many-objects-room-v1)
(:setup
  (not
    (forall (?m - hexagonal_bin)
      (exists (?t - cube_block ?i ?a - block)
        (game-optional
          (in_motion upright)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?v - (either teddy_bear pyramid_block game_object triangular_ramp flat_block dodgeball cube_block))
      (and
        (preference preference1
          (exists (?l - game_object)
            (then
              (once (in_motion ?v) )
              (hold (not (and (not (< 1 2) ) (adjacent rug ?l) ) ) )
              (hold (not (agent_holds ?l) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (= (+ 18 (count preference1:pink) (count preference1:basketball) )
    (+ (external-forall-maximize 5 ) (count-total preference1:golfball) )
  )
)
(:scoring
  (+ (count preference1:doggie_bed:purple) 20 )
)
)(define (game game-id-604) (:domain many-objects-room-v1)
(:setup
  (exists (?v - dodgeball)
    (game-optional
      (not
        (not
          (touch ?v ?v)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?g - chair ?v - cube_block)
      (and
        (preference preference1
          (exists (?o - hexagonal_bin)
            (at-end
              (exists (?d - cube_block ?l ?k - (either flat_block golfball))
                (not
                  (on agent ?k)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:dodgeball) 5 )
)
(:scoring
  10
)
)(define (game game-id-605) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?m - dodgeball)
      (exists (?i - flat_block)
        (exists (?e - (either doggie_bed curved_wooden_ramp desktop))
          (game-conserved
            (adjacent ?i front)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?a - hexagonal_bin ?t - dodgeball)
        (at-end
          (not
            (not
              (not
                (and
                  (agent_holds ?t)
                )
              )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?i - hexagonal_bin ?z - doggie_bed)
        (then
          (once (not (not (not (and (equal_z_position ?z ?z) (in ?z rug) (not (not (not (object_orientation front bed) ) ) ) ) ) ) ) )
          (once (on ?z rug) )
          (once (not (touch ?z agent) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ 3 1 )
    1
  )
)
(:scoring
  (total-time)
)
)(define (game game-id-606) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (toggled_on desk)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?b - hexagonal_bin)
        (at-end
          (not
            (agent_holds ?b)
          )
        )
      )
    )
    (forall (?j - doggie_bed)
      (and
        (preference preference2
          (exists (?s ?o - tan_cube_block)
            (then
              (forall-sequence (?n - (either beachball))
                (then
                  (hold (on ?o ?o) )
                  (once (in_motion ?j) )
                  (once (agent_holds agent) )
                )
              )
              (once (and (adjacent_side ?s ?o ?j) (not (equal_x_position ?s ?s) ) ) )
            )
          )
        )
        (preference preference3
          (then
            (once (not (not (agent_holds rug) ) ) )
            (hold (and (on ?j ?j) (and (in_motion ?j) (not (in_motion bed) ) ) ) )
            (hold-while (and (in_motion ?j) (and (and (agent_holds ?j) (on ?j floor) ) (is_setup_object ?j) (in_motion ?j) (and (not (not (not (or (and (touch blue room_center) (and (agent_holds agent) (not (and (opposite ?j ?j) (agent_holds north_wall) ) ) ) ) (and (and (not (touch rug ?j) ) (< (distance ?j ?j) (distance_side ?j ?j ?j)) ) (adjacent ?j bed) ) ) ) ) ) (in_motion ?j) (and (or (not (on ?j ?j) ) (and (and (and (exists (?y - game_object ?n - ball) (not (in ?j ?n) ) ) (in_motion ?j) ) (not (not (adjacent_side ?j ?j ?j) ) ) ) (agent_holds ?j) ) ) (in_motion ?j) (not (and (in_motion ?j) (in top_drawer ?j) (agent_crouches ) ) ) ) ) (in_motion ?j) (agent_holds ?j) ) ) (not (in_motion ?j) ) )
          )
        )
        (preference preference4
          (then
            (hold-for 2 (in_motion ?j) )
            (hold (= (x_position ?j)) )
            (once (on ?j ?j) )
          )
        )
      )
    )
  )
)
(:terminal
  (> (count preference2:beachball) (+ (count-once preference4:pyramid_block) (* (external-forall-maximize 2 ) (* (count preference2:dodgeball) 5 )
      )
    )
  )
)
(:scoring
  (count preference3:block)
)
)(define (game game-id-607) (:domain medium-objects-room-v1)
(:setup
  (forall (?d - wall)
    (game-conserved
      (on ?d ?d)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?h - doggie_bed ?k - book)
        (at-end
          (same_type agent ?k)
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-once-per-objects preference1:blue_pyramid_block) (count preference1:pink_dodgeball) )
    (or
      (or
        (or
          (>= (* (and (* (count-once-per-objects preference1:doggie_bed:golfball) (count-once preference1:basketball) )
                10
              )
              0.5
            )
            (count preference1:purple)
          )
          (< 8 (* 1 (external-forall-maximize (count-increasing-measure preference1:basketball) ) (<= (external-forall-maximize (+ (count-once-per-objects preference1:basketball) (= 2 4 )
                    (- (- (external-forall-minimize (count-once-per-external-objects preference1:blue_dodgeball) ) (+ (- (total-time) )
                          (count preference1)
                        )
                      )
                    )
                  )
                )
                (* (- 5 )
                  (* (= 10 (* 6 )
                    )
                    (- 3 )
                  )
                )
              )
            )
          )
        )
        (<= 5 5 )
      )
      (not
        (<= (total-time) (* 5 (count-total preference1) )
        )
      )
      (>= (>= (total-score) 50 )
        (- (count preference1:dodgeball) )
      )
    )
  )
)
(:scoring
  (> (count-once-per-objects preference1:pink_dodgeball) (count preference1:beachball) )
)
)(define (game game-id-608) (:domain medium-objects-room-v1)
(:setup
  (forall (?v - curved_wooden_ramp)
    (forall (?h ?a ?w ?q ?s ?d ?x ?l ?r ?g - (either doggie_bed yellow_cube_block) ?n - hexagonal_bin)
      (game-conserved
        (adjacent ?v ?n)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?u - chair ?b - (either wall cube_block))
        (at-end
          (in_motion ?b)
        )
      )
    )
  )
)
(:terminal
  (or
    (> (+ (* (count preference1:top_drawer) )
        (count-once-per-objects preference1:basketball:basketball)
      )
      (* (- (count preference1) )
        (* (external-forall-maximize 2 ) (external-forall-minimize (count-overlapping preference1:dodgeball:blue_dodgeball) ) )
      )
    )
    (< (count-measure preference1:red_pyramid_block:alarm_clock) (count-once-per-objects preference1:red) )
    (>= (count preference1:pink_dodgeball) 0.7 )
  )
)
(:scoring
  10
)
)(define (game game-id-609) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (exists (?q - block)
        (and
          (game-optional
            (in_motion agent)
          )
        )
      )
      (exists (?w - dodgeball ?n - (either key_chain cellphone alarm_clock))
        (exists (?h - hexagonal_bin ?l - doggie_bed)
          (exists (?a - hexagonal_bin)
            (and
              (and
                (forall (?i - (either credit_card alarm_clock pyramid_block))
                  (game-conserved
                    (in_motion ?a)
                  )
                )
                (forall (?s - (either cd pyramid_block))
                  (game-optional
                    (not
                      (in_motion ?s)
                    )
                  )
                )
                (and
                  (game-conserved
                    (and
                      (in ?n desk)
                      (agent_holds ?l)
                    )
                  )
                )
                (game-conserved
                  (not
                    (not
                      (and
                        (in_motion ?n)
                        (on desk bed)
                      )
                    )
                  )
                )
                (exists (?t ?j ?z - hexagonal_bin)
                  (and
                    (game-conserved
                      (< 1 (distance bed bed))
                    )
                    (game-conserved
                      (not
                        (agent_holds ?n)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
    (exists (?n - chair ?a - game_object)
      (game-optional
        (in_motion ?a)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?w - blue_pyramid_block)
        (then
          (once (on agent ?w) )
          (hold (on desk ?w) )
          (once (not (and (agent_holds ?w) (in_motion ?w) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 2 (+ (count-unique-positions preference1:pink) (count-total preference1:pink) )
    )
    (count-once-per-objects preference1:beachball)
  )
)
(:scoring
  3
)
)(define (game game-id-610) (:domain many-objects-room-v1)
(:setup
  (forall (?c ?p - dodgeball ?c - ball)
    (game-conserved
      (agent_holds agent)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?s - flat_block)
        (then
          (once (on ?s ?s) )
          (once (on ?s ?s) )
          (once (not (between ?s room_center ?s) ) )
        )
      )
    )
    (forall (?z - game_object)
      (and
        (preference preference2
          (exists (?x - (either cd rug) ?s - (either triangle_block key_chain) ?p - hexagonal_bin)
            (then
              (once (same_color ?p ?p) )
              (once (< 1 (distance ?p ?p)) )
              (once (and (agent_holds pink) (not (agent_holds bed) ) (or (exists (?a - curved_wooden_ramp) (agent_holds desk) ) (not (and (in ?p floor) (and (touch agent bed) (not (in_motion ?p) ) ) ) ) ) (and (above ?p ?p) (in ?p ?p) ) ) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?p - building ?j - color)
        (then
          (once (adjacent agent ?j) )
          (hold (agent_holds ?j) )
          (hold (not (in_motion ?j) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference2:pink:red) (external-forall-maximize (= 1 15 )
    )
  )
)
(:scoring
  100
)
)(define (game game-id-611) (:domain medium-objects-room-v1)
(:setup
  (not
    (game-optional
      (broken pink_dodgeball)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?b - game_object ?n - game_object)
        (then
          (hold (same_color ?n ?n) )
          (hold (agent_holds pink_dodgeball) )
          (once (and (agent_holds ?n) (and (agent_holds ?n) (adjacent ?n ?n) (agent_holds ?n) ) ) )
        )
      )
    )
    (preference preference2
      (exists (?p - hexagonal_bin)
        (then
          (once (not (adjacent ?p ?p) ) )
          (once (not (forall (?s - (either basketball cube_block cd)) (on ?s ?p) ) ) )
          (hold (in_motion top_drawer) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (external-forall-minimize (* 5 10 )
      )
      (count-once-per-external-objects preference1:beachball)
    )
    (or
      (> (count preference1:golfball) (external-forall-maximize (* (* (count preference1:book) (count-once-per-external-objects preference1:dodgeball:golfball) )
            (* (count-once preference1:blue_pyramid_block) (count-once-per-objects preference2:pink) 4 )
          )
        )
      )
      (or
        (>= (count-once-per-objects preference1:dodgeball) (count-once-per-external-objects preference2:yellow) )
        (or
          (or
            (> (+ (count-longest preference1:blue_pyramid_block:alarm_clock) (count preference1:dodgeball) )
              (+ (count preference2:basketball) (count preference1:beachball) )
            )
            (not
              (<= 10 (count-increasing-measure preference2:golfball) )
            )
          )
          (> 18 (count preference2) )
        )
      )
    )
  )
)
(:scoring
  1
)
)(define (game game-id-612) (:domain medium-objects-room-v1)
(:setup
  (forall (?b - hexagonal_bin)
    (exists (?d ?h - cube_block)
      (game-conserved
        (same_type ?h ?b)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?v - curved_wooden_ramp)
        (then
          (once (on ?v ?v) )
          (once (not (not (not (in_motion desk) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 4 (* (count-once preference1:yellow) (count-once preference1:green:dodgeball) )
  )
)
(:scoring
  (* (* (count preference1:bed:basketball:blue_dodgeball) (count preference1:cube_block) )
    5
  )
)
)(define (game game-id-613) (:domain medium-objects-room-v1)
(:setup
  (forall (?o - building)
    (forall (?c ?b ?y ?g ?f ?p - (either pen pen))
      (exists (?n - dodgeball)
        (and
          (game-optional
            (in ?c ?f)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?e - (either hexagonal_bin tall_cylindrical_block) ?g - tall_cylindrical_block)
        (then
          (once (not (in ?g desk) ) )
          (once (on bottom_shelf ?g) )
          (once (and (rug_color_under ?g ?g) (not (exists (?u - game_object ?s - flat_block) (and (not (in_motion ?g) ) (and (and (agent_holds ?g) (= 1 (distance ?g ?g) (distance ?s ?g)) ) (and (in ?g ?s) (<= 5 (distance agent bed)) ) ) ) ) ) ) )
          (once (in_motion ?g) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:golfball) (* (* 9 (count preference1:pyramid_block) )
      (count-once-per-objects preference1:pink)
    )
  )
)
(:scoring
  (* 1 12 )
)
)(define (game game-id-614) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?f - wall ?k - ball)
      (exists (?j - hexagonal_bin ?j - dodgeball)
        (and
          (and
            (or
              (game-conserved
                (not
                  (exists (?v - game_object)
                    (and
                      (= 1 (distance agent agent) 1)
                      (and
                        (in ?k ?j)
                        (not
                          (and
                            (game_over )
                            (not
                              (in_motion room_center)
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
              (exists (?w - block)
                (game-conserved
                  (and
                    (agent_holds ?k)
                    (and
                      (not
                        (game_start )
                      )
                      (<= 1 3)
                    )
                  )
                )
              )
            )
            (game-optional
              (agent_holds ?j)
            )
            (exists (?w - block)
              (forall (?f - hexagonal_bin ?i - shelf)
                (and
                  (and
                    (exists (?x - (either cube_block yellow_cube_block))
                      (exists (?b - cube_block)
                        (exists (?z - dodgeball ?l ?a ?g - (either golfball yellow triangle_block))
                          (game-conserved
                            (not
                              (in_motion ?g)
                            )
                          )
                        )
                      )
                    )
                  )
                  (game-conserved
                    (agent_holds ?w)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?v - hexagonal_bin ?j ?o - (either golfball dodgeball))
        (then
          (hold-to-end (exists (?l - chair ?t ?n - cube_block) (not (and (adjacent front ?o) (> 1 (distance ?o ?j)) (on ?t ?t) (not (between ?t ?j ?t) ) ) ) ) )
          (hold (on ?o agent) )
          (hold (agent_holds ?j) )
        )
      )
    )
  )
)
(:terminal
  (>= 3 7 )
)
(:scoring
  (count preference1:red_pyramid_block)
)
)(define (game game-id-615) (:domain many-objects-room-v1)
(:setup
  (exists (?y - cube_block)
    (game-conserved
      (not
        (same_color ?y ?y)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?z - (either cellphone dodgeball) ?b - hexagonal_bin)
        (then
          (hold (and (on ?b ?b) (in bed ?b) ) )
          (forall-sequence (?l ?p ?m - triangular_ramp)
            (then
              (hold (in_motion ?m) )
              (once (agent_holds ?m) )
              (once (not (and (not (or (in_motion ?l) (same_object bed ?b) ) ) (in desk sideways) ) ) )
            )
          )
          (once (agent_holds ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (* (count preference1:basketball) (count-once-per-external-objects preference1:golfball:book:dodgeball) (count-once-per-objects preference1:tall_cylindrical_block) (+ 4 (* (+ (* 0 (* (* (count preference1:golfball:blue_dodgeball:pink) (* 3 (+ 4 (+ (* (count preference1:dodgeball) (count preference1:beachball) )
                          (count-shortest preference1:dodgeball)
                        )
                      )
                    )
                  )
                  (count preference1:dodgeball)
                  2
                )
                (count preference1:dodgeball:book)
                (count-once-per-objects preference1:pink)
              )
              (count preference1:golfball:beachball)
            )
            (external-forall-maximize
              (+ (total-time) (* (+ (count preference1:wall) (+ (count-once-per-objects preference1:basketball:blue_dodgeball) 3 )
                  )
                  3
                )
              )
            )
            (* (+ 3 2 )
              (* (count-once-per-objects preference1:golfball:pink) 1 )
            )
          )
        )
      )
      (count preference1:hexagonal_bin)
      (count-once preference1:dodgeball:pink_dodgeball)
      (* 6 )
      (+ (* (count preference1:dodgeball:purple) (count-once-per-objects preference1:dodgeball) )
        (count-overlapping preference1:pink)
        (and
          (count preference1:orange)
        )
        (count-once-per-objects preference1:beachball:yellow_cube_block)
      )
    )
    (count-unique-positions preference1:basketball)
  )
)
(:scoring
  (count preference1:beachball:pink)
)
)(define (game game-id-616) (:domain many-objects-room-v1)
(:setup
  (forall (?z - cube_block)
    (and
      (game-conserved
        (in ?z ?z)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?q ?w ?n - hexagonal_bin ?o ?u - dodgeball)
        (then
          (hold (and (agent_holds ?o) (agent_holds ?o) (in ?u blue) (< 0 (distance_side ?o ?u rug)) (not (agent_holds ?u) ) (agent_holds ?o) (not (on ?u ?u) ) ) )
          (hold-while (< 8 (distance ?o desktop)) (not (in_motion ?u) ) )
          (hold-while (and (and (same_object ?o ?u) (on ?o desk) ) (not (and (in_motion ?u) (in sideways ?u) (object_orientation pink_dodgeball pink_dodgeball) ) ) ) (agent_holds ?u) )
        )
      )
    )
    (preference preference2
      (exists (?f - ball)
        (then
          (hold (agent_holds ?f) )
          (once (adjacent ?f ?f) )
          (once (and (agent_holds door) (exists (?x - ball) (not (and (in_motion ?x) (and (and (adjacent_side ?x ?x ?x) (opposite ?f room_center) (agent_holds ?f) (in_motion ?f) ) (not (or (in_motion ?x) (not (not (touch ?f ?f) ) ) ) ) (not (adjacent ?x ?f) ) (agent_holds ?f) ) ) ) ) ) )
        )
      )
    )
    (preference preference3
      (exists (?e - game_object)
        (then
          (once (and (touch bed ?e) (and (on ?e door) (and (in ?e ?e) ) ) ) )
          (once (not (and (> 9 (distance ?e ?e)) (and (on ?e ?e) (and (adjacent ?e pink) (not (not (on pink_dodgeball ?e) ) ) (and (< (distance ?e agent) 9) (in ?e ?e) (agent_holds ?e) (and (same_color ?e ?e) (not (and (and (and (< 0.5 3) (and (in_motion ?e) (not (not (agent_holds room_center) ) ) ) ) (touch ?e ?e) ) (agent_holds ?e) (agent_holds ?e) ) ) ) (not (on ?e ?e) ) (exists (?f - ball) (and (adjacent agent ?e) (agent_holds ?f) (and (in_motion desk) (game_start ) (not (in ?e ?e) ) (toggled_on agent) (on ?e ?e) (not (= 7 6 (distance ?f desk)) ) (and (in ?e ?e) (> 8 (distance ?f tan)) ) (not (and (on bed ?e) (on ?f ?e) (in ?f ?f) ) ) (and (on rug ?e) (and (in ?e ?e) (on ?e ?e) ) (touch ?f ?f) (on bed ?e) ) (adjacent ?f ?f) ) ) ) (> (distance ?e room_center) (distance ?e bed)) (not (above agent ?e) ) (in ?e ?e) (touch ?e ?e) ) ) ) ) ) )
          (once (in_motion ?e) )
        )
      )
    )
    (preference preference4
      (exists (?b - (either tall_cylindrical_block basketball))
        (at-end
          (in_motion blue)
        )
      )
    )
    (preference preference5
      (exists (?f - (either cube_block floor golfball))
        (then
          (hold (on ?f ?f) )
          (hold (agent_holds ?f) )
          (hold-while (> (x_position floor) (distance ?f ?f)) (not (in ?f ?f) ) )
        )
      )
    )
    (preference preference6
      (exists (?s - dodgeball)
        (then
          (once (in_motion ?s) )
          (hold-while (equal_x_position ?s ?s) (agent_holds ?s) (in_motion ?s) )
          (hold (in_motion ?s) )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (count-once preference1:golfball) )
)
(:scoring
  (+ 50 (= (* (* (count preference3:dodgeball) (count preference6:purple) )
        (+ (external-forall-maximize 3 ) (count-overlapping preference1:basketball:basketball) )
        (count preference2:hexagonal_bin)
      )
      (count preference2:block)
    )
  )
)
)(define (game game-id-617) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (exists (?t - block)
        (exists (?a - hexagonal_bin ?m - game_object)
          (exists (?h - ball)
            (forall (?l - hexagonal_bin ?w - hexagonal_bin)
              (exists (?k - cube_block)
                (exists (?f - ball)
                  (game-conserved
                    (not
                      (on ?t ?t)
                    )
                  )
                )
              )
            )
          )
        )
      )
      (forall (?o - drawer)
        (game-optional
          (not
            (and
              (exists (?m - ball)
                (in_motion ?m)
              )
              (agent_holds ?o)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?v ?c ?i - beachball ?o - building)
        (then
          (once (is_setup_object ?o) )
          (once (in_motion agent) )
          (once (agent_holds ?o) )
        )
      )
    )
    (preference preference2
      (exists (?q - chair ?f ?r ?k ?v - hexagonal_bin)
        (at-end
          (is_setup_object ?f)
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1) (+ (count preference2:orange) (count preference2:beachball:hexagonal_bin) )
  )
)
(:scoring
  (external-forall-maximize
    (>= (count-shortest preference2:doggie_bed:yellow) (count preference2:basketball) )
  )
)
)(define (game game-id-618) (:domain many-objects-room-v1)
(:setup
  (exists (?j - (either cube_block yellow_cube_block curved_wooden_ramp))
    (and
      (and
        (or
          (game-optional
            (same_type ?j desk)
          )
          (forall (?w - (either wall basketball) ?q - ball)
            (and
              (game-conserved
                (equal_z_position ?j ?q)
              )
            )
          )
          (game-conserved
            (< (distance ?j ?j) 1)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - golfball ?i ?h - hexagonal_bin)
      (and
        (preference preference1
          (exists (?e - desk_shelf)
            (then
              (hold-while (same_type ?e ?i) (in_motion ?h) )
              (hold (not (in_motion ?e) ) )
              (once (< 1 1) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (/ (* 3 (count-once-per-objects preference1:basketball) )
        (external-forall-maximize
          (count-once-per-external-objects preference1:hexagonal_bin)
        )
      )
      4
    )
  )
)
(:scoring
  (count-once-per-objects preference1:pink_dodgeball)
)
)(define (game game-id-619) (:domain medium-objects-room-v1)
(:setup
  (forall (?k - yellow_pyramid_block)
    (and
      (and
        (game-optional
          (agent_holds ?k)
        )
      )
      (forall (?c - (either dodgeball mug blue_cube_block) ?m - hexagonal_bin)
        (exists (?a - golfball)
          (game-conserved
            (adjacent ?k ?k)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?u - teddy_bear)
        (then
          (once (in_motion ?u) )
          (once (on east_sliding_door agent) )
          (once (in_motion ?u) )
        )
      )
    )
  )
)
(:terminal
  (or
    (> 9 (* (+ (count-once-per-objects preference1:hexagonal_bin) 1 (* (count-once-per-objects preference1:blue_dodgeball:golfball) 5 6 )
        )
        (or
          (* (* (* (* (count preference1:dodgeball) (count preference1:blue_dodgeball) (* 5 (* (count-same-positions preference1) (* (* (count-overlapping preference1:golfball) (* (* 3 (* 10 (count-total preference1:yellow) (count-overlapping preference1:triangle_block) (count preference1:purple) )
                              (external-forall-maximize
                                (>= (+ (* 4 0 )
                                    (* (count preference1:golfball:yellow) (count preference1:basketball) )
                                  )
                                  (- (* (+ (count-once-per-external-objects preference1:pyramid_block) (* 10 (external-forall-minimize 3 ) )
                                        10
                                      )
                                      (+ (count-once-per-objects preference1:dodgeball) (count preference1) 9 )
                                    )
                                  )
                                )
                              )
                              (* (count-once-per-objects preference1:golfball) (count preference1:orange) )
                            )
                            (count preference1:red)
                          )
                        )
                        3
                        (count-once preference1:bed)
                      )
                    )
                  )
                  (count preference1:basketball:book)
                  3
                  (count-once-per-objects preference1:dodgeball)
                )
                (* (+ 7 (count preference1:red) )
                  (+ (not (count preference1:hexagonal_bin) ) (external-forall-maximize 1 ) )
                )
              )
              10
              (+ (count-once preference1:top_drawer) (* 10 (* 5 2 )
                )
              )
            )
            (count-once-per-objects preference1:pyramid_block)
            (count-once-per-objects preference1:pyramid_block)
            (count-once preference1:dodgeball)
            3
            (+ 10 5 )
            (/
              (* (* (count preference1:bed) 5 8 (and (count preference1:yellow) (* (count preference1:tan:basketball) (count preference1:hexagonal_bin:red) )
                    (count-measure preference1:dodgeball)
                  )
                )
                10
              )
              (count preference1:pink_dodgeball:golfball)
            )
          )
          10
        )
      )
    )
    (>= 5 3 )
  )
)
(:scoring
  1
)
)(define (game game-id-620) (:domain few-objects-room-v1)
(:setup
  (exists (?q - ball)
    (game-conserved
      (not
        (or
          (in_motion pillow)
          (on desk ?q)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?a - (either book cylindrical_block))
        (then
          (hold (agent_holds ?a) )
          (once (on ?a ?a) )
          (once (same_type ?a ?a) )
        )
      )
    )
    (preference preference2
      (exists (?p ?s - chair ?j - (either dodgeball wall cd doggie_bed))
        (then
          (once (in ?j ?j) )
          (once (in ?j ?j) )
          (once (in_motion agent) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= 10 180 )
  )
)
(:scoring
  (total-time)
)
)(define (game game-id-621) (:domain many-objects-room-v1)
(:setup
  (or
    (exists (?f - ball)
      (and
        (forall (?l - hexagonal_bin)
          (game-optional
            (above agent ?f)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?z - game_object)
        (then
          (once (agent_holds ?z) )
          (once (agent_holds ?z) )
          (hold (in_motion ?z) )
        )
      )
    )
    (preference preference2
      (exists (?a - doggie_bed ?m - (either key_chain key_chain cylindrical_block))
        (then
          (once (faces green_golfball ?m) )
          (once (and (> (distance_side ?m ?m ?m ?m) (distance ?m agent)) (in_motion ?m) ) )
          (hold (on bed agent) )
        )
      )
    )
  )
)
(:terminal
  (<= (count preference1:rug) (+ (count-total preference2:dodgeball) (count-once preference1:dodgeball) 10 (* (* (+ (- (external-forall-maximize (- (not 2 ) )
              )
              (- 10 )
            )
            (count preference1:dodgeball:purple)
          )
          (* (* (external-forall-minimize (* (count-once-per-objects preference2:cylindrical_block) 2 (count preference1:pink_dodgeball) )
              )
              (* (+ (count-once-per-objects preference2:block) (count preference2:hexagonal_bin) )
                (count-once-per-objects preference1:purple)
              )
            )
            10
          )
        )
        15
        (count-once-per-objects preference1:golfball)
      )
      (+ (count preference1:dodgeball) 10 )
      6
    )
  )
)
(:scoring
  (count preference2:purple)
)
)(define (game game-id-622) (:domain few-objects-room-v1)
(:setup
  (exists (?i - dodgeball ?m - (either golfball golfball))
    (forall (?s - bridge_block)
      (game-conserved
        (>= 8 (distance ?s ?s))
      )
    )
  )
)
(:constraints
  (and
    (forall (?n - ball ?u - (either basketball cylindrical_block) ?h - building)
      (and
        (preference preference1
          (exists (?e - golfball)
            (then
              (hold-while (in_motion ?e) (and (and (not (in ?e ?e) ) (and (in_motion ?e) (same_color ?e ?e) ) ) (agent_holds ?e) ) )
              (hold (agent_holds ?h) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once preference1:dodgeball:red) (count preference1:dodgeball:cylindrical_block) )
)
(:scoring
  (count-overlapping preference1:yellow)
)
)(define (game game-id-623) (:domain medium-objects-room-v1)
(:setup
  (exists (?v - doggie_bed)
    (exists (?p - game_object)
      (exists (?o - dodgeball ?i - (either tall_cylindrical_block doggie_bed))
        (or
          (game-conserved
            (not
              (in desk ?v)
            )
          )
          (forall (?l - hexagonal_bin)
            (exists (?d - cube_block)
              (game-conserved
                (not
                  (not
                    (on ?i ?v)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?z - hexagonal_bin)
      (and
        (preference preference1
          (exists (?h - triangular_ramp)
            (then
              (hold-for 5 (equal_x_position ?z ?z) )
              (hold (in_motion bed) )
              (once (exists (?e - wall) (adjacent ?e back) ) )
            )
          )
        )
        (preference preference2
          (at-end
            (adjacent ?z ?z)
          )
        )
      )
    )
  )
)
(:terminal
  (> 9 (- (count-once-per-objects preference2:golfball) )
  )
)
(:scoring
  12
)
)(define (game game-id-624) (:domain few-objects-room-v1)
(:setup
  (exists (?m ?s - dodgeball)
    (exists (?o - red_dodgeball ?x - (either laptop flat_block))
      (forall (?d - dodgeball ?c - game_object)
        (exists (?p - (either yellow doggie_bed teddy_bear) ?q - doggie_bed)
          (exists (?f - dodgeball)
            (exists (?y - curved_wooden_ramp)
              (game-conserved
                (agent_holds ?m)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?j - game_object ?x - (either blue_cube_block golfball desktop))
      (and
        (preference preference1
          (exists (?r - dodgeball ?s ?h ?b ?v - teddy_bear ?f - shelf ?d - hexagonal_bin)
            (then
              (once (= 1 10) )
              (hold (on floor ?x) )
              (once (adjacent ?x ?d) )
            )
          )
        )
        (preference preference2
          (exists (?g - drawer)
            (then
              (once (< 7 2) )
              (once (and (not (not (on desk ?g) ) ) (on ?x ?g) ) )
              (once (on ?x agent) )
            )
          )
        )
      )
    )
    (forall (?d - (either main_light_switch cube_block dodgeball dodgeball) ?s ?j ?v ?g - cube_block ?i - ball)
      (and
        (preference preference3
          (exists (?o - wall)
            (then
              (once (on ?o ?i) )
              (hold-while (agent_holds agent) (not (< 1 (distance ?i ?i)) ) (agent_holds desk) )
            )
          )
        )
      )
    )
    (preference preference4
      (exists (?z - hexagonal_bin)
        (then
          (once (in_motion ?z) )
          (once (not (and (agent_holds ?z) (adjacent ?z desk) ) ) )
          (hold (not (and (in_motion ?z) (on ?z ?z) (in_motion ?z) (agent_holds agent) ) ) )
        )
      )
    )
  )
)
(:terminal
  (= (count-once-per-objects preference1:dodgeball) (count-once-per-external-objects preference3:green) )
)
(:scoring
  (count-once-per-objects preference3:hexagonal_bin)
)
)(define (game game-id-625) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - dodgeball ?a - game_object)
      (exists (?m - drawer ?y - (either pencil golfball dodgeball))
        (and
          (exists (?p - hexagonal_bin ?m ?u ?k - hexagonal_bin ?g - chair)
            (and
              (not
                (exists (?w - chair)
                  (not
                    (exists (?k - flat_block)
                      (exists (?o - shelf)
                        (game-conserved
                          (in_motion ?g)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?i - hexagonal_bin)
      (and
        (preference preference1
          (exists (?m - chair)
            (then
              (once (and (on ?i ?m) (agent_holds ?m) ) )
              (once (not (and (touch ?m ?i) (agent_holds ?m) ) ) )
            )
          )
        )
        (preference preference2
          (exists (?e - pyramid_block ?w - game_object)
            (at-end
              (not
                (and
                  (adjacent_side ?i ?w ?i)
                  (not
                    (between ?w bed ?i)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (external-forall-maximize (not (count preference2:yellow) ) ) (count preference2:basketball) )
)
(:scoring
  (* (count preference1) 15 )
)
)(define (game game-id-626) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?z - block)
      (and
        (not
          (and
            (game-optional
              (forall (?k - dodgeball)
                (agent_holds ?k)
              )
            )
            (exists (?f - hexagonal_bin)
              (exists (?g - building)
                (or
                  (exists (?d - curved_wooden_ramp)
                    (and
                      (game-optional
                        (exists (?y - cylindrical_block)
                          (agent_holds right)
                        )
                      )
                      (game-optional
                        (in_motion ?f)
                      )
                      (or
                        (and
                          (forall (?r - dodgeball ?e - drawer)
                            (and
                              (and
                                (and
                                  (forall (?i - dodgeball)
                                    (game-optional
                                      (and
                                        (and
                                          (same_type ?g bed)
                                          (or
                                            (agent_holds ?e)
                                            (on ?e ?d)
                                          )
                                        )
                                        (not
                                          (and
                                            (agent_holds ?i)
                                            (not
                                              (in_motion desk)
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                              (exists (?x - beachball)
                                (game-conserved
                                  (on ?f ?d)
                                )
                              )
                            )
                          )
                        )
                        (and
                          (forall (?o - drawer)
                            (game-conserved
                              (in ?d agent)
                            )
                          )
                          (game-conserved
                            (on ?g ?d)
                          )
                          (exists (?j - dodgeball ?t ?o - building ?e - hexagonal_bin ?v - cube_block)
                            (exists (?y - building ?r - ball ?e - teddy_bear)
                              (game-optional
                                (and
                                  (same_type ?f ?g)
                                  (adjacent_side ?f ?g ?g block)
                                  (agent_holds ?v)
                                  (agent_holds ?v)
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
    (and
      (forall (?l - hexagonal_bin)
        (and
          (game-conserved
            (on pink_dodgeball ?l)
          )
        )
      )
      (exists (?n - shelf)
        (forall (?m - ball ?o ?y ?u ?h - hexagonal_bin)
          (exists (?m - block)
            (game-conserved
              (in ?n ?u)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?x - block)
      (and
        (preference preference1
          (exists (?d - dodgeball)
            (then
              (once-measure (agent_holds ?d) (distance_side ?d ?x ?d ?x) )
              (once (not (agent_holds ?d) ) )
              (once (game_start ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (external-forall-maximize (count preference1:basketball) ) )
)
(:scoring
  (* (count preference1) 300 )
)
)(define (game game-id-627) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-optional
      (in_motion front_left_corner)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?e - hexagonal_bin)
        (then
          (once (not (and (in ?e ?e) (on ?e ?e) ) ) )
          (once (between ?e ?e green_golfball) )
          (once (in east_sliding_door room_center) )
        )
      )
    )
    (forall (?l - tall_cylindrical_block)
      (and
        (preference preference2
          (exists (?q - dodgeball)
            (then
              (once (agent_holds ?l) )
              (once (not (not (forall (?a - hexagonal_bin ?b - teddy_bear) (and (and (not (> 1 2) ) (not (not (on ?q ?q) ) ) ) (and (not (= 2 (distance_side ?b ?l brown)) ) (not (agent_holds upright) ) ) ) ) ) ) )
              (hold (in_motion ?q) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count-total preference1:green) (total-score) )
    (* 10 (- 10 (+ (count-once-per-objects preference2:beachball) 4 )
      )
    )
  )
)
(:scoring
  5
)
)(define (game game-id-628) (:domain few-objects-room-v1)
(:setup
  (exists (?q - (either lamp golfball cylindrical_block key_chain))
    (exists (?l - hexagonal_bin)
      (exists (?o - ball ?h - (either blue_cube_block cellphone))
        (and
          (forall (?m - hexagonal_bin)
            (game-conserved
              (< (distance bed agent) (distance desk floor))
            )
          )
          (and
            (game-optional
              (between upright ?q desk)
            )
          )
          (forall (?b - (either laptop cellphone))
            (game-conserved
              (agent_holds ?b)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?i - building ?n ?c ?b ?e - hexagonal_bin)
        (then
          (once (faces ?b ?b) )
          (once (and (< 9 6) (not (not (not (not (and (and (agent_holds room_center) (and (in_motion ?n) (not (touch ?e ?e) ) ) (not (agent_holds ?c) ) (not (and (not (in_motion ?c) ) (and (and (and (agent_holds ?e) (opposite side_table ?n) ) (agent_holds ?e) ) (touch ?n ?n) ) ) ) (on ?c ?e) (agent_holds room_center) (agent_holds ?b) ) (and (equal_z_position ?c ?c) (or (agent_holds agent) (in_motion agent) ) (in_motion ?b) ) ) ) ) ) ) ) )
          (once (in_motion ?c) )
        )
      )
    )
    (forall (?y - hexagonal_bin)
      (and
        (preference preference2
          (exists (?a - shelf)
            (then
              (hold (in_motion ?y) )
              (hold (exists (?p ?e - hexagonal_bin) (in_motion ?p) ) )
              (hold (on ?a ?a) )
              (hold (and (< 1 (distance ?y ?y)) (not (< (x_position ?a) (distance_side ?y ?a ?a)) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 10 300 )
)
(:scoring
  1
)
)(define (game game-id-629) (:domain few-objects-room-v1)
(:setup
  (exists (?n - hexagonal_bin ?w - ball)
    (and
      (forall (?a - doggie_bed)
        (game-optional
          (in_motion ?w)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?v ?b - hexagonal_bin ?g - pillow ?k - cube_block)
        (then
          (hold (<= 1 1) )
          (once (exists (?j - building ?e - cube_block) (same_color ?k ?k) ) )
          (hold (and (agent_holds bed) (exists (?d - block) (in_motion ?d) ) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (count-longest preference1:beachball) (count preference1:blue_dodgeball) )
  )
)
(:scoring
  (count preference1:doggie_bed)
)
)(define (game game-id-630) (:domain medium-objects-room-v1)
(:setup
  (not
    (forall (?r - hexagonal_bin ?l ?b - wall)
      (game-conserved
        (in_motion ?l)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?x - (either dodgeball ball) ?w ?g - dodgeball ?l - ball)
        (then
          (once (in_motion agent) )
          (hold (adjacent ?l ?l) )
          (hold (agent_holds ?l) )
        )
      )
    )
    (preference preference2
      (exists (?t - (either pink tall_cylindrical_block pink))
        (then
          (hold (in_motion ?t) )
          (once (and (and (rug_color_under ?t ?t) (on ?t ?t) (exists (?u - curved_wooden_ramp) (same_color room_center ?t) ) ) (object_orientation ?t ?t) ) )
          (hold (adjacent ?t rug) )
        )
      )
    )
    (preference preference3
      (exists (?y - hexagonal_bin ?k - chair)
        (then
          (hold-to-end (agent_holds ?k) )
          (once (in_motion room_center) )
          (hold (not (and (< (distance_side agent ?k bed room_center) (distance agent ?k)) (agent_holds ?k) ) ) )
        )
      )
    )
    (preference preference4
      (exists (?v - wall)
        (then
          (once-measure (on ?v ?v) (distance ?v ?v) )
          (hold-while (in_motion ?v) (on ?v desk) )
          (any)
        )
      )
    )
    (preference preference5
      (exists (?n - tall_cylindrical_block)
        (then
          (once (< 2 (distance ?n floor)) )
          (hold-while (in_motion ?n) (and (and (in_motion ?n) (or (not (and (not (touch ?n ?n) ) (and (not (not (and (agent_holds ?n) (same_object ?n ?n) ) ) ) (exists (?g - ball ?j ?f ?v - building ?g - hexagonal_bin ?j - chair) (rug_color_under ?j ?n) ) (and (in ?n ?n) (in_motion ?n) ) (and (not (agent_holds pink) ) (agent_holds desk) ) ) ) ) (not (not (and (agent_holds ?n) (not (not (in_motion ?n) ) ) (agent_holds ?n) ) ) ) ) ) (and (not (touch ?n top_drawer) ) (not (in_motion rug) ) (in_motion ?n) ) ) )
          (hold-while (agent_holds agent) (and (adjacent_side pink_dodgeball ?n ?n) (on door ?n) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ 5 4 5 )
    (total-score)
  )
)
(:scoring
  (count-once-per-objects preference4)
)
)(define (game game-id-631) (:domain medium-objects-room-v1)
(:setup
  (not
    (exists (?y - ball)
      (and
        (exists (?h - beachball ?p ?u - (either pink pillow))
          (exists (?k - game_object)
            (exists (?w - hexagonal_bin)
              (game-optional
                (or
                  (and
                    (and
                      (and
                        (not
                          (not
                            (forall (?r - ball ?v - ball ?n - dodgeball ?o - curved_wooden_ramp ?h - (either blue_cube_block dodgeball laptop))
                              (in ?p ?w)
                            )
                          )
                        )
                        (exists (?z - dodgeball ?m - (either cellphone pink))
                          (not
                            (not
                              (in_motion blue)
                            )
                          )
                        )
                      )
                      (and
                        (agent_holds ?p)
                        (and
                          (< 10 2)
                          (same_type desk ?p)
                        )
                      )
                    )
                    (not
                      (not
                        (and
                          (on agent ?u)
                          (not
                            (and
                              (agent_holds ?k)
                              (not
                                (touch ?k ?u)
                              )
                              (agent_crouches )
                            )
                          )
                        )
                      )
                    )
                    (in_motion ?k)
                  )
                  (and
                    (open ?y)
                    (not
                      (and
                        (in_motion ?w)
                        (in_motion ?u)
                      )
                    )
                  )
                )
              )
            )
          )
        )
        (and
          (game-conserved
            (not
              (rug_color_under ?y ?y)
            )
          )
          (game-conserved
            (agent_holds ?y)
          )
        )
        (forall (?o - hexagonal_bin)
          (exists (?b - dodgeball)
            (or
              (and
                (exists (?j - (either hexagonal_bin cube_block) ?n - color ?i ?l - (either golfball key_chain basketball) ?g - hexagonal_bin)
                  (exists (?e - (either golfball pyramid_block) ?l - hexagonal_bin)
                    (exists (?i - (either blue_cube_block flat_block lamp yellow_cube_block golfball chair yellow) ?j - hexagonal_bin)
                      (and
                        (game-optional
                          (in ?y upright)
                        )
                        (exists (?c - (either doggie_bed triangular_ramp cellphone))
                          (game-conserved
                            (agent_holds desk)
                          )
                        )
                      )
                    )
                  )
                )
                (forall (?w - hexagonal_bin)
                  (exists (?l - dodgeball)
                    (game-conserved
                      (not
                        (not
                          (in_motion bed)
                        )
                      )
                    )
                  )
                )
                (game-conserved
                  (in_motion ?b)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?x - building)
        (then
          (once (in_motion ?x) )
          (once (agent_holds ?x) )
          (hold-while (adjacent ?x ?x) (in_motion door) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* 25 (- (+ (count-once-per-objects preference1:pyramid_block:orange) (count preference1:doggie_bed:basketball) )
        )
      )
      (* (count-once-per-external-objects preference1:hexagonal_bin) (+ (count preference1:purple:basketball) (or 1 5 20 ) )
      )
    )
    (< (external-forall-minimize (count-once preference1:yellow_cube_block:pink) ) (count preference1:basketball) )
  )
)
(:scoring
  (+ (total-time) (* 12 3 )
  )
)
)(define (game game-id-632) (:domain few-objects-room-v1)
(:setup
  (and
    (game-conserved
      (exists (?d - hexagonal_bin ?o - hexagonal_bin)
        (and
          (adjacent ?o ?o)
          (and
            (and
              (in_motion ?o)
              (adjacent ?o agent)
            )
            (in_motion ?o)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?w - dodgeball)
      (and
        (preference preference1
          (then
            (once (< (distance agent ?w) 1) )
            (once (on ?w ?w) )
            (once (and (and (in_motion ?w) (agent_holds ?w) ) (and (not (forall (?h - hexagonal_bin ?e ?r ?g - pyramid_block) (not (and (in_motion ?e) (on ?r ?e) ) ) ) ) (agent_holds rug) ) (and (< 4 7) (adjacent ?w ?w) ) ) )
          )
        )
      )
    )
    (preference preference2
      (exists (?j - dodgeball ?t - hexagonal_bin)
        (at-end
          (open ?t)
        )
      )
    )
  )
)
(:terminal
  (>= 50 (count preference1:doggie_bed) )
)
(:scoring
  (* (total-score) (and 20 (count-once-per-objects preference1:cylindrical_block) (count preference2:basketball:dodgeball) ) )
)
)(define (game game-id-633) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?k - game_object)
      (exists (?l - ball)
        (exists (?f - (either dodgeball game_object book))
          (game-optional
            (= (distance room_center ?l) 3 1)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?s - (either cellphone golfball))
      (and
        (preference preference1
          (exists (?b - color ?q - (either golfball dodgeball))
            (then
              (once (touch ?q ?q) )
              (hold (agent_holds agent) )
              (hold (in_motion front) )
            )
          )
        )
        (preference preference2
          (then
            (hold (and (in ?s ?s) (equal_z_position ?s ?s) ) )
            (hold-while (and (not (agent_holds south_west_corner) ) (agent_holds ?s) ) (and (not (on pink_dodgeball ?s) ) (above ?s ?s) ) (and (on ?s desk) (same_color ?s ?s) ) (and (in_motion ?s) (in_motion rug) ) )
            (hold (not (not (and (not (> 1 5) ) (and (agent_holds ?s) (and (not (agent_holds ?s) ) (in ?s ?s) (in_motion ?s) ) ) ) ) ) )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference2:dodgeball) (+ 5 (- 2 )
    )
  )
)
(:scoring
  0
)
)(define (game game-id-634) (:domain few-objects-room-v1)
(:setup
  (forall (?e - wall)
    (exists (?y - dodgeball ?p - cube_block)
      (game-conserved
        (in ?e floor)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?c - pillow ?r - dodgeball ?u - hexagonal_bin)
        (then
          (once (not (in_motion ?u) ) )
          (once (game_over ) )
          (once (object_orientation ?u ?u) )
        )
      )
    )
    (preference preference2
      (exists (?t - dodgeball)
        (then
          (once (and (on agent ?t) (same_color ?t ?t) ) )
          (hold (in ?t ?t) )
          (hold (agent_holds room_center) )
        )
      )
    )
    (forall (?p - building)
      (and
        (preference preference3
          (exists (?j - game_object)
            (then
              (once (in_motion ?p) )
              (forall-sequence (?q - ball ?m - curved_wooden_ramp)
                (then
                  (hold (above ?j ?p) )
                  (once (and (not (not (not (not (and (and (and (and (on back agent) (and (agent_holds ?m) (not (and (not (adjacent ?m ?p) ) ) ) ) ) (agent_holds agent) ) (adjacent_side upright bed ?p ?m) ) (on ?j ?j) ) ) ) ) ) (and (adjacent ?m ?p) (and (in_motion top_shelf) (<= (distance ?m ?j) 0.5) ) ) (in ?m ?j) ) )
                  (once (not (not (in ?p door) ) ) )
                )
              )
              (hold (and (< (distance agent ?p) 0.5) (agent_holds ?j) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* 2 40 )
    (total-time)
  )
)
(:scoring
  5
)
)(define (game game-id-635) (:domain many-objects-room-v1)
(:setup
  (exists (?l - hexagonal_bin)
    (game-conserved
      (adjacent ?l ?l)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?d - (either golfball blue_cube_block teddy_bear))
        (then
          (hold (agent_holds ?d) )
          (once (adjacent_side ?d bed ?d ?d) )
          (once (on ?d floor) )
        )
      )
    )
    (forall (?t ?d - ball)
      (and
        (preference preference2
          (exists (?p - teddy_bear ?v - triangular_ramp)
            (then
              (once (toggled_on ?d) )
              (once (in_motion agent) )
              (once (agent_holds ?v) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference1:yellow_pyramid_block:hexagonal_bin:dodgeball) (external-forall-maximize (count preference1) ) )
)
(:scoring
  8
)
)(define (game game-id-636) (:domain many-objects-room-v1)
(:setup
  (forall (?i - building)
    (exists (?h - ball)
      (game-conserved
        (agent_holds ?h)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?k - hexagonal_bin)
        (at-end
          (and
            (not
              (in_motion agent)
            )
            (and
              (and
                (in_motion room_center)
                (not
                  (and
                    (in_motion ?k)
                    (and
                      (rug_color_under ?k ?k)
                    )
                  )
                )
              )
              (in_motion door)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* (total-score) 10 )
      (count-once-per-objects preference1:beachball:dodgeball)
    )
    (< (count-once preference1:orange) (count-once-per-objects preference1:golfball) )
  )
)
(:scoring
  (= 18 (* 300 (* 4 (count-once-per-objects preference1:dodgeball) )
    )
  )
)
)(define (game game-id-637) (:domain few-objects-room-v1)
(:setup
  (forall (?f - block ?d - drawer)
    (forall (?a - doggie_bed ?i - hexagonal_bin)
      (game-conserved
        (on ?d ?d)
      )
    )
  )
)
(:constraints
  (and
    (forall (?j - game_object ?m - hexagonal_bin)
      (and
        (preference preference1
          (exists (?v - dodgeball ?y ?f ?t ?l ?z ?v ?o ?p ?h ?q - building)
            (then
              (once (on north_wall ?m) )
              (once (agent_holds ?l) )
              (once (in_motion agent) )
              (once (in ?m ?v) )
            )
          )
        )
        (preference preference2
          (exists (?q - (either tall_cylindrical_block) ?g - watch)
            (at-end
              (in agent agent)
            )
          )
        )
        (preference preference3
          (exists (?r - dodgeball)
            (then
              (once (on ?m ?r) )
              (hold-while (and (game_start ) (agent_holds ?m) ) (exists (?y - game_object ?c - teddy_bear ?f - ball ?e - hexagonal_bin) (and (between ?m door ?e) (agent_holds ?e) ) ) )
              (once (adjacent_side ?r ?m ?r ?r) )
            )
          )
        )
      )
    )
    (preference preference4
      (exists (?e - doggie_bed)
        (at-end
          (not
            (> (distance_side ?e pink_dodgeball ?e agent) (distance ?e ?e))
          )
        )
      )
    )
    (forall (?u - (either pyramid_block pyramid_block))
      (and
        (preference preference5
          (exists (?d - hexagonal_bin)
            (then
              (hold (and (and (= (distance ?d ?d) (distance pink_dodgeball ?d)) (exists (?w - teddy_bear ?s - hexagonal_bin) (or (in ?s desk) (in ?s ?s) ) ) ) (not (on agent ?u) ) ) )
              (hold (and (< 1 1) ) )
              (once (exists (?c ?s - game_object) (on ?u rug) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (* 8 5 (external-forall-maximize (+ (+ (* (count-once-per-objects preference1:cylindrical_block) (+ (- (* (count-once-per-objects preference5:basketball) (* (* (count-unique-positions preference4:blue_pyramid_block:white) (count preference3:green) )
                        10
                      )
                    )
                  )
                  (count-once-per-external-objects preference1:basketball)
                )
              )
              (count preference4:yellow_cube_block:golfball)
            )
            (<= 8 (count preference5:pink:cube_block) )
          )
        )
        (total-score)
        (total-time)
        (count preference2)
      )
      (+ (* (* (* (count-once-per-objects preference5:blue_cube_block) (* (count preference2) 3 )
            )
            (count-once-per-objects preference1:red_pyramid_block:brown)
          )
          (* (count-once-per-objects preference1:green) (* (* (count-once preference1:dodgeball) (count preference1:hexagonal_bin:hexagonal_bin) )
              (or
                3
              )
            )
            (count-longest preference1:green)
          )
        )
        (count-once-per-objects preference3:doggie_bed)
        (+ (count preference1:red) (count-once-per-objects preference1:pink) )
        (* (* 3 (* 1 (count preference1:pink_dodgeball) )
          )
          5
        )
        (count-once-per-objects preference1:beachball:beachball)
        (+ 15 30 )
        (= (* (count preference3:basketball) )
          (- 2 )
        )
        (count preference2:blue_dodgeball)
        (count-once preference5:pink:pink_dodgeball)
      )
    )
  )
)
(:scoring
  5
)
)(define (game game-id-638) (:domain medium-objects-room-v1)
(:setup
  (exists (?a - chair)
    (and
      (game-conserved
        (not
          (exists (?b - (either basketball bridge_block) ?v - (either dodgeball tall_cylindrical_block) ?m - (either golfball dodgeball golfball))
            (< (distance ?m ?m) 8)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?p - hexagonal_bin)
        (then
          (hold (in_motion ?p) )
          (once (on ?p ?p) )
          (hold (touch ?p agent) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-shortest preference1:doggie_bed:yellow:beachball) 15 )
)
(:scoring
  6
)
)(define (game game-id-639) (:domain medium-objects-room-v1)
(:setup
  (forall (?a - ball)
    (game-conserved
      (faces ?a ?a)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?d - hexagonal_bin ?z - teddy_bear ?f - (either dodgeball desktop) ?k - hexagonal_bin)
        (then
          (once (in_motion left) )
          (once (agent_holds ?k) )
          (once (in_motion ?k) )
        )
      )
    )
    (preference preference2
      (exists (?e - doggie_bed ?g - game_object ?i ?l - dodgeball)
        (then
          (once (in ?l ?i) )
          (once (game_over ) )
          (once (not (and (not (agent_holds ?i) ) (not (and (on ?l ?i) (and (or (not (forall (?u - cube_block) (and (not (<= (distance ?i ?u) (distance room_center agent)) ) (and (> (distance_side ?u west_wall agent) 10) (or (< (distance rug ?l) (distance ?i ?i)) (in_motion ?u) ) (not (agent_holds ?i) ) (same_type desk ?l) ) ) ) ) ) (not (on ?i ?l) ) ) ) ) (and (agent_holds ?l) (and (adjacent ?l ?l) (in_motion ?l) ) (is_setup_object ?l) ) (and (in_motion ?i) (not (agent_holds ?i) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference1:beachball) (* (+ 10 (count preference2:beachball) )
      (total-score)
    )
  )
)
(:scoring
  (* (> 5 (count preference2:top_drawer:golfball) )
    (count-same-positions preference1:pyramid_block)
  )
)
)(define (game game-id-640) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?i ?s - hexagonal_bin)
      (game-conserved
        (touch ?s ?i)
      )
    )
  )
)
(:constraints
  (and
    (forall (?p ?k - game_object)
      (and
        (preference preference1
          (exists (?a - dodgeball)
            (at-end
              (and
                (in_motion desk)
                (not
                  (exists (?i - tall_cylindrical_block)
                    (in bed ?a)
                  )
                )
              )
            )
          )
        )
        (preference preference2
          (exists (?v - color)
            (then
              (once (and (forall (?g - doggie_bed ?u - dodgeball ?w ?z - hexagonal_bin) (agent_holds ?v) ) (not (exists (?q - (either golfball beachball wall)) (and (and (in_motion ?v) (not (broken ?p) ) ) (not (broken ?v) ) ) ) ) (opposite ?p ?k) ) )
              (hold-to-end (exists (?l - shelf ?n - (either cylindrical_block desktop) ?e - dodgeball ?e - book) (open ?e) ) )
              (hold (in sideways rug) )
            )
          )
        )
        (preference preference3
          (exists (?x - pillow)
            (then
              (hold-while (not (not (in ?p ?x) ) ) (and (on ?k ?k) (not (in_motion ?x) ) ) )
              (hold (and (< 1 (distance ?p ?x)) (and (not (same_color ?x ?k) ) (and (and (in back ?p) (on front ?p) ) (not (faces ?k desk) ) ) (and (in ?k ?x) (agent_holds upright) ) ) ) )
              (hold (and (and (on side_table ?p) (in_motion ?k) ) ) )
            )
          )
        )
      )
    )
    (preference preference4
      (exists (?u - hexagonal_bin)
        (then
          (hold (in_motion ?u) )
          (once (same_type ?u desk) )
          (once (adjacent ?u ?u) )
        )
      )
    )
    (forall (?h - game_object ?d ?o ?f - golfball)
      (and
        (preference preference5
          (exists (?h - dodgeball)
            (at-end
              (agent_holds ?o)
            )
          )
        )
      )
    )
    (preference preference6
      (exists (?e - (either curved_wooden_ramp cellphone wall blue_cube_block))
        (then
          (once (agent_crouches ) )
          (once (and (and (in_motion ?e) (and (and (in ?e ?e) (not (agent_holds ?e) ) ) (on ?e ?e) ) (equal_z_position pink_dodgeball ?e) ) (on ?e ?e) ) )
          (once (in ?e pink) )
        )
      )
    )
    (preference preference7
      (exists (?h - hexagonal_bin ?o - cube_block)
        (at-end
          (in_motion ?o)
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count preference6:alarm_clock:alarm_clock) 3 )
    (>= (* (external-forall-maximize 3 ) 4 )
      (- (* 5 3 )
      )
    )
    (= (count-measure preference2:hexagonal_bin) (count-once-per-objects preference1:beachball:basketball) )
  )
)
(:scoring
  (count-once-per-objects preference1:yellow:orange)
)
)(define (game game-id-641) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (< 0.5 1)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?u - teddy_bear)
        (then
          (once (agent_holds desk) )
          (hold (is_setup_object ?u) )
          (hold (not (in ?u ?u) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:doggie_bed:dodgeball) (count-once-per-objects preference1:basketball:basketball) )
)
(:scoring
  (* (count-once-per-objects preference1:cylindrical_block) (count-once-per-objects preference1) (* (* 4 (count preference1:brown:hexagonal_bin) )
      (count-shortest preference1:golfball)
      (+ (* 3 10 )
        5
        (count preference1:doggie_bed)
      )
    )
  )
)
)(define (game game-id-642) (:domain few-objects-room-v1)
(:setup
  (and
    (game-optional
      (in_motion agent)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?v ?s - flat_block)
        (then
          (once (agent_holds ?s) )
          (hold (same_type ?v ?v) )
          (hold (in_motion ?v) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 2 (count preference1:triangle_block) )
    (not
      (< (- 5 )
        (count-once-per-objects preference1:tan:purple)
      )
    )
    (> (* (* (* (count preference1:cube_block:green) (total-score) )
          (* (count preference1:golfball:dodgeball) (count preference1:green:tan) )
        )
        (count preference1:yellow)
      )
      (- (count-once-per-objects preference1:purple) )
    )
  )
)
(:scoring
  (count-measure preference1:beachball)
)
)(define (game game-id-643) (:domain medium-objects-room-v1)
(:setup
  (forall (?l - dodgeball)
    (and
      (game-optional
        (in_motion agent)
      )
      (and
        (and
          (game-optional
            (adjacent_side ?l ?l ?l ?l)
          )
          (forall (?c - block ?j - chair)
            (exists (?k - building)
              (forall (?h - hexagonal_bin ?m - hexagonal_bin)
                (game-conserved
                  (in_motion ?l)
                )
              )
            )
          )
        )
        (and
          (forall (?q - dodgeball ?p - cube_block)
            (exists (?t ?s - doggie_bed)
              (game-conserved
                (agent_holds ?l)
              )
            )
          )
        )
        (forall (?u - golfball)
          (exists (?y - (either flat_block key_chain))
            (exists (?v - cube_block ?t - building)
              (exists (?g - game_object)
                (game-conserved
                  (and
                    (and
                      (and
                        (adjacent ?l ?t)
                        (in_motion ?u)
                      )
                      (in_motion ?u)
                    )
                    (in_motion agent)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - cylindrical_block)
      (and
        (preference preference1
          (exists (?m - doggie_bed ?p - pyramid_block)
            (then
              (once (same_color ?p desk) )
              (once (adjacent ?p ?b) )
            )
          )
        )
        (preference preference2
          (exists (?f ?g - chair ?c - curved_wooden_ramp)
            (then
              (once (same_type ?b ?b) )
              (once (and (in_motion ?c) (in_motion ?b) ) )
              (hold-while (in_motion ?b) (touch pink ?c) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?v - curved_wooden_ramp)
        (at-end
          (not
            (and
              (and
                (agent_holds ?v)
                (in_motion ?v)
              )
              (and
                (not
                  (on ?v ?v)
                )
                (not
                  (agent_holds ?v)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 7 (count preference3:dodgeball) )
)
(:scoring
  30
)
)(define (game game-id-644) (:domain many-objects-room-v1)
(:setup
  (exists (?g - (either book triangle_block) ?o - dodgeball)
    (not
      (game-conserved
        (not
          (in ?o ?o)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?k - (either cellphone alarm_clock pyramid_block))
        (at-end
          (not
            (game_over )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (count preference1:green) )
)
(:scoring
  (<= (count preference1:pink:doggie_bed) (* (count-measure preference1:alarm_clock) 3 (count preference1:basketball) )
  )
)
)(define (game game-id-645) (:domain few-objects-room-v1)
(:setup
  (or
    (forall (?k - dodgeball)
      (game-conserved
        (in_motion ?k)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?e - ball)
        (then
          (once (and (in_motion ?e) (in_motion ?e) (<= 0.5 (distance ?e ?e)) ) )
          (hold (same_type ?e ?e) )
          (once (in_motion pink) )
        )
      )
    )
    (preference preference2
      (exists (?q - game_object ?d - dodgeball ?w - rug)
        (then
          (hold (not (exists (?h ?l - game_object) (< (distance ?w ?w) (distance ?w rug)) ) ) )
          (once (on ?w room_center) )
          (hold (in_motion ?w) )
        )
      )
    )
    (preference preference3
      (exists (?e - curved_wooden_ramp)
        (then
          (once (agent_holds ?e) )
        )
      )
    )
  )
)
(:terminal
  (or
    (< (count preference1:hexagonal_bin) (external-forall-maximize (* (count preference1:beachball) 40 )
      )
    )
    (> (- 4 )
      (count preference3:orange:basketball)
    )
  )
)
(:scoring
  (* 7 5 )
)
)(define (game game-id-646) (:domain medium-objects-room-v1)
(:setup
  (exists (?k - golfball)
    (forall (?i ?q ?t ?a - building ?l - dodgeball ?a - shelf ?x - (either basketball blue_cube_block))
      (forall (?y ?f ?t ?i ?u ?g - dodgeball ?c ?o ?g - (either rug) ?q - curved_wooden_ramp)
        (and
          (game-conserved
            (exists (?b ?m ?r ?d - game_object ?i - ball)
              (rug_color_under ?q ?k)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?i - game_object ?z - hexagonal_bin)
        (at-end
          (in ?z ?z)
        )
      )
    )
    (preference preference2
      (exists (?e - (either tall_cylindrical_block cube_block) ?z - dodgeball)
        (then
          (hold (and (or (and (not (not (agent_holds ?z) ) ) (in_motion ?z) (not (and (not (in_motion ?z) ) (not (and (and (in_motion ?z) (faces ?z ?z) ) (and (not (in_motion ?z) ) (on ?z ?z) ) ) ) ) ) ) (not (in_motion ?z) ) ) (and (in_motion ?z) (and (and (and (on ?z ?z) (on ?z ?z) (in_motion ?z) ) ) (on ?z ?z) (in_motion ?z) (adjacent ?z bed) (and (adjacent ?z ?z) (rug_color_under ?z ?z) (in ?z brown) ) (game_start ) (touch ?z ?z) (in_motion ?z) ) ) ) )
          (hold (agent_holds ?z) )
          (once (<= 9 (distance ?z ?z)) )
        )
      )
    )
    (preference preference3
      (exists (?q - doggie_bed ?q - block)
        (then
          (hold (not (toggled_on ?q) ) )
          (once (in_motion ?q) )
          (once (in desk ?q) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 5 40 )
    (- (count-once preference2:alarm_clock) )
  )
)
(:scoring
  2
)
)(define (game game-id-647) (:domain few-objects-room-v1)
(:setup
  (exists (?d ?j - (either dodgeball cellphone))
    (forall (?h - building ?e - game_object)
      (game-conserved
        (and
          (in_motion ?j)
          (in_motion ?j)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?l - wall)
      (and
        (preference preference1
          (exists (?f - dodgeball)
            (then
              (hold (in_motion left) )
              (hold (in ?l ?f) )
              (once (in_motion ?f) )
            )
          )
        )
        (preference preference2
          (then
            (once (and (on floor ?l) (not (touch ?l ?l) ) ) )
          )
        )
        (preference preference3
          (exists (?w - yellow_cube_block ?q - dodgeball)
            (at-end
              (not
                (on agent bed)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:dodgeball) (count preference2:alarm_clock:pink) )
)
(:scoring
  (* (+ (* (count preference3:hexagonal_bin) 9 )
      1
    )
    30
    10
    (* (count preference2:alarm_clock) 3 (count preference1:pink_dodgeball) )
  )
)
)(define (game game-id-648) (:domain few-objects-room-v1)
(:setup
  (and
    (game-conserved
      (not
        (in_motion desk)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?y ?w - bridge_block)
        (then
          (once (not (and (and (and (and (or (not (on ?y ?y) ) (agent_holds ?w) ) (exists (?o - hexagonal_bin) (not (adjacent ?y ?w) ) ) ) (in door pink_dodgeball) ) ) (in_motion ?w) ) ) )
          (once (in_motion agent) )
          (once (exists (?f - hexagonal_bin ?c - (either tall_cylindrical_block desktop) ?i - golfball) (and (< (distance ?w desk) 0) (on ?i ?i) (adjacent_side ?i ?i ?w) (agent_holds ?w) ) ) )
        )
      )
    )
    (forall (?y - hexagonal_bin)
      (and
        (preference preference2
          (exists (?a ?z - dodgeball)
            (then
              (hold (and (and (and (and (not (not (same_object ?a ?z) ) ) (> 6 1) ) (in_motion ?a) (in_motion ?a) (and (in_motion agent) (and (not (agent_holds ?y) ) (in_motion ?y) (in ?z agent) (in_motion ?z) ) ) (not (object_orientation bed ?a) ) (on ?a ?y) ) (is_setup_object ?a) ) (not (agent_holds ?z) ) (not (game_start ) ) ) )
              (once (on ?y ?y) )
              (once (touch rug ?a) )
              (once (adjacent desk ?a) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?j - hexagonal_bin ?u - hexagonal_bin)
        (then
          (hold (in_motion ?u) )
          (once (exists (?v - hexagonal_bin) (equal_z_position ?u upright) ) )
          (hold-while (not (not (agent_holds door) ) ) (agent_holds ?u) )
        )
      )
    )
  )
)
(:terminal
  (>= 6 2 )
)
(:scoring
  6
)
)(define (game game-id-649) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?v - hexagonal_bin ?g - teddy_bear)
      (game-conserved
        (on front desk)
      )
    )
  )
)
(:constraints
  (and
    (forall (?k - hexagonal_bin ?v - yellow_cube_block ?v - (either basketball))
      (and
        (preference preference1
          (exists (?d - dodgeball)
            (then
              (once (agent_holds ?v) )
              (once (exists (?x - (either doggie_bed bed book) ?c - shelf) (rug_color_under ?c block) ) )
              (hold (on ?v ?v) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 7 (count-once-per-objects preference1:basketball) )
)
(:scoring
  (* 5 (+ (count-once-per-objects preference1:red_pyramid_block) (count preference1:basketball) )
  )
)
)(define (game game-id-650) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (not
      (touch agent floor)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?t - block)
        (then
          (once-measure (and (in_motion ?t) (not (and (in bed ?t) (or (in ?t green_golfball) (and (not (in_motion ?t) ) (exists (?k - hexagonal_bin) (in ?k ?k) ) ) ) ) ) ) (distance ?t ?t) )
          (hold (not (> 5 1) ) )
          (hold-for 3 (agent_holds ?t) )
        )
      )
    )
    (preference preference2
      (exists (?h - doggie_bed)
        (at-end
          (not
            (and
              (not
                (in_motion agent)
              )
              (not
                (not
                  (and
                    (< (building_size ?h) 2)
                    (in green_golfball desk)
                    (agent_holds ?h)
                  )
                )
              )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?f - chair)
        (then
          (once (agent_holds ?f) )
          (once (and (not (and (exists (?l - ball) (not (in_motion ?l) ) ) (on ?f agent) (game_start ) ) ) (>= 1 3) ) )
          (hold (agent_holds agent) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (+ (count preference3:book) (count preference2:beachball) )
      (+ 15 8 )
      5
    )
    (* (count-once-per-objects preference3:beachball) (count preference1:pink:dodgeball:beachball) )
  )
)
(:scoring
  30
)
)(define (game game-id-651) (:domain few-objects-room-v1)
(:setup
  (not
    (exists (?n - hexagonal_bin)
      (game-conserved
        (not
          (object_orientation agent ?n)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?r - beachball)
        (then
          (once (not (and (agent_holds ?r) (agent_holds ?r) (not (> (distance ?r rug) (distance ?r ?r)) ) ) ) )
          (once (and (not (not (faces ?r ?r) ) ) (toggled_on ?r) (in_motion ?r) (>= (distance ?r ?r) 1) ) )
          (hold (broken ?r) )
        )
      )
    )
    (preference preference2
      (exists (?v - cube_block)
        (at-end
          (agent_holds ?v)
        )
      )
    )
  )
)
(:terminal
  (>= 6 2 )
)
(:scoring
  (count-increasing-measure preference1:basketball:rug)
)
)(define (game game-id-652) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-conserved
      (agent_holds top_shelf)
    )
  )
)
(:constraints
  (and
    (forall (?v - (either golfball))
      (and
        (preference preference1
          (exists (?k - (either alarm_clock pencil book) ?i - block)
            (then
              (hold (on ?v ?i) )
              (once (rug_color_under ?i ?v) )
              (once (agent_holds agent) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?c - (either pink watch pink))
        (then
          (hold (on ?c ?c) )
          (once (and (not (on ?c room_center) ) (in_motion agent) ) )
          (once (and (adjacent_side ?c desk ?c ?c) (= (distance ?c ?c) (distance ?c agent)) (touch ?c ?c) ) )
          (hold (agent_holds ?c) )
        )
      )
    )
    (forall (?i - hexagonal_bin)
      (and
        (preference preference3
          (exists (?z - yellow_cube_block)
            (then
              (hold (and (agent_holds ?i) (not (agent_holds rug) ) ) )
              (hold (and (on ?z ?i) (on ?z rug) ) )
              (once (agent_holds ?i) )
            )
          )
        )
        (preference preference4
          (exists (?s - hexagonal_bin ?q - building)
            (then
              (hold (forall (?z - hexagonal_bin) (adjacent_side ?q ?z ?q ?i) ) )
              (once (equal_x_position ?i ?q) )
              (hold (in ?i ?i) )
            )
          )
        )
        (preference preference5
          (then
            (once (not (agent_holds ?i) ) )
            (once (equal_z_position ?i ?i) )
            (once (and (and (< (distance room_center ?i) (distance bed ?i)) (in ?i ?i) ) (on ?i agent) (= (distance agent room_center) (distance_side ?i ?i ?i)) (agent_crouches ) (broken ?i) (not (on ?i ?i) ) (and (not (in desk ?i) ) (on blue ?i) ) ) )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (<= (external-forall-maximize (> 3 (>= 5 (- (+ 5 (count preference2:triangle_block) (count preference5:top_drawer) )
            )
          )
        )
      )
      1
    )
    (> (count-once-per-objects preference2:dodgeball:yellow) 2 )
  )
)
(:scoring
  (count-unique-positions preference1)
)
)(define (game game-id-653) (:domain medium-objects-room-v1)
(:setup
  (exists (?o - hexagonal_bin)
    (forall (?u - building ?i - dodgeball)
      (game-conserved
        (and
          (agent_holds ?o)
          (< 0.5 1)
          (and
            (is_setup_object ?o)
            (adjacent ?o ?i)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?r - triangular_ramp ?j - hexagonal_bin ?x - triangular_ramp)
        (then
          (once (between ?x ?x ?x) )
          (once (same_type ?x floor) )
          (hold (forall (?w - ball ?f - (either dodgeball)) (adjacent_side ?f floor ?f) ) )
        )
      )
    )
    (preference preference2
      (exists (?u - wall)
        (at-end
          (<= 1 1)
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 6 2 )
    (> (+ (count-once-per-external-objects preference1:top_drawer) (total-score) )
      (count preference1:tall_cylindrical_block)
    )
    (>= (* (count-unique-positions preference1:yellow_pyramid_block:red:pink) (+ (+ 2 (* (+ (count-once-per-objects preference2:blue_cube_block) )
              (-
                (count preference1:golfball)
                (count-once-per-objects preference2:pink)
              )
              (* 3 (+ (count preference2:blue_dodgeball) (* 2 (- (count preference1:green) )
                  )
                )
              )
            )
          )
          (* (count-total preference1:pink) 3 )
        )
      )
      (count preference1:green:blue_dodgeball)
    )
  )
)
(:scoring
  (external-forall-maximize
    (* (count-overlapping preference2:red) 2 (* 30 (count-once-per-objects preference2:golfball:pink_dodgeball) 5 (* (count preference1:green:dodgeball) (- (count-once-per-objects preference1:golfball) )
        )
      )
    )
  )
)
)(define (game game-id-654) (:domain medium-objects-room-v1)
(:setup
  (forall (?x ?f - ball ?c - game_object ?d - ball ?q - teddy_bear)
    (and
      (game-optional
        (is_setup_object ?q)
      )
    )
  )
)
(:constraints
  (and
    (forall (?o - ball)
      (and
        (preference preference1
          (exists (?w - dodgeball)
            (then
              (hold (adjacent ?o ?w) )
              (once (not (is_setup_object ?o) ) )
              (hold (in_motion ?o) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (+ 4 (+ 2 10 )
    )
  )
)
(:scoring
  7
)
)(define (game game-id-655) (:domain medium-objects-room-v1)
(:setup
  (forall (?p - game_object)
    (game-optional
      (in ?p ?p)
    )
  )
)
(:constraints
  (and
    (forall (?d - pyramid_block)
      (and
        (preference preference1
          (exists (?b - cube_block)
            (then
              (once (in_motion ?d) )
              (hold-to-end (agent_holds pink_dodgeball) )
              (once (and (in_motion ?b) (same_type ?d ?d) (not (not (adjacent_side ?b ?d ?d ?d) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (+ (count preference1:pink) (- 6 )
        (+ 5 (= (* (count-once-per-objects preference1:yellow_pyramid_block) (count-once preference1:hexagonal_bin) )
            (count-once preference1:dodgeball)
          )
        )
        (/
          (count-once-per-objects preference1:tan:pink)
          (count-shortest preference1:hexagonal_bin)
        )
      )
      4
      (count-once-per-external-objects preference1:golfball)
      (count preference1)
      (count preference1:dodgeball:hexagonal_bin)
    )
    4
  )
)
(:scoring
  (* 7 (count preference1:blue_dodgeball) )
)
)(define (game game-id-656) (:domain few-objects-room-v1)
(:setup
  (and
    (game-optional
      (in_motion rug)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?g - ball)
        (then
          (once (and (agent_holds ?g) (agent_holds ?g) (in ?g ?g) (equal_z_position ?g ?g) ) )
          (hold (in_motion ?g) )
          (hold (in_motion agent) )
        )
      )
    )
    (forall (?r - (either pyramid_block game_object laptop))
      (and
        (preference preference2
          (exists (?p - cube_block)
            (then
              (once (not (or (in_motion block) (and (and (equal_z_position ?r desk) (in_motion west_wall) (agent_holds ?p) (touch ?r ?p) (agent_holds ?p) (= (distance ?p ?p) 1 1) (agent_holds ?r) ) (exists (?e - hexagonal_bin ?n - dodgeball) (on ?p ?n) ) ) ) ) )
              (hold-to-end (on agent ?r) )
              (once (or (and (not (not (= 9 9) ) ) (adjacent ?p desk) (in rug desk) (agent_holds ?r) (in_motion ?p) (adjacent_side ?r ?p ?p) ) (agent_holds ?r) (not (on ?r ?p) ) ) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?g - dodgeball)
        (then
          (once (on ?g ?g) )
          (once (not (in agent ?g) ) )
          (once (not (not (on ?g ?g) ) ) )
          (once (not (in ?g ?g) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 3 (count preference2:yellow:dodgeball) )
    (or
      (>= (count-once-per-objects preference2:cylindrical_block:book) (count-once-per-objects preference1:yellow_cube_block) )
      (>= (* 4 (+ (* 3 (count preference1:basketball) (count-once-per-objects preference3:beachball) )
            (* (* (* 5 9 (<= 2 1 )
                  5
                  (count-once-per-external-objects preference1:golfball)
                  (count preference1:purple:basketball:pink_dodgeball)
                )
                (count preference1:basketball)
              )
              4
              (count-once-per-objects preference2:yellow:pink)
            )
            4
          )
          (count preference2:basketball:purple)
        )
        30
      )
    )
    (and
      (>= (external-forall-maximize (count-once preference2:pink) ) (count-once preference1:dodgeball) )
      (>= (* (+ (count preference2:pink) 10 (and (count-once-per-objects preference1:green) (count preference3:yellow_pyramid_block) ) )
          (> 0 (* 4 (* (count-once-per-objects preference3:beachball) (count preference1:red:golfball:beachball) )
            )
          )
        )
        (count preference1:doggie_bed)
      )
    )
  )
)
(:scoring
  (count-increasing-measure preference1:basketball)
)
)(define (game game-id-657) (:domain medium-objects-room-v1)
(:setup
  (exists (?x - teddy_bear ?r - (either golfball dodgeball doggie_bed red pen doggie_bed bridge_block))
    (and
      (game-conserved
        (and
          (not
            (and
              (game_start )
              (in_motion ?r)
            )
          )
          (in_motion ?r)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?c - building)
        (then
          (hold (or (and (not (and (and (agent_holds ?c) (agent_holds ?c) ) (not (not (adjacent ?c ?c) ) ) ) ) (adjacent ?c floor) ) ) )
          (once (not (same_color ?c bed) ) )
          (once (in_motion ?c) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (* (count preference1:dodgeball) (* (count-total preference1:basketball) 5 )
      )
      (count preference1:purple:dodgeball)
    )
    10
  )
)
(:scoring
  5
)
)(define (game game-id-658) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?g - hexagonal_bin)
      (game-optional
        (on ?g ?g)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?b - hexagonal_bin)
        (at-end
          (exists (?p ?q ?l ?s ?y ?t - hexagonal_bin ?a - ball)
            (= 1 (distance bed ?a))
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-once-per-objects preference1:bed) (count-shortest preference1:dodgeball) )
    (>= (or (total-time) 30 (count preference1:dodgeball) ) (* (* (count preference1:golfball) (count preference1:pink:dodgeball) )
        (count-once-per-objects preference1:hexagonal_bin)
      )
    )
  )
)
(:scoring
  (count preference1:doggie_bed)
)
)(define (game game-id-659) (:domain few-objects-room-v1)
(:setup
  (exists (?q ?h - triangular_ramp)
    (and
      (exists (?s - dodgeball ?o - hexagonal_bin)
        (game-optional
          (in_motion ?o)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?e - hexagonal_bin)
        (then
          (once (in_motion agent) )
          (once (and (agent_holds ?e) (in_motion ?e) (agent_holds ?e) (> (distance room_center ?e) (distance ?e ?e)) (agent_holds agent) (agent_holds front) (>= 4 1) (in_motion ?e) ) )
        )
      )
    )
  )
)
(:terminal
  (= (count-once-per-objects preference1:beachball) (total-score) )
)
(:scoring
  (+ (* (+ (* 6 (count-unique-positions preference1:dodgeball:beachball) )
        (count preference1)
        3
        (external-forall-maximize
          (+ (total-time) (count preference1:blue_cube_block) )
        )
      )
      5
      (* 4 (count-once-per-objects preference1:red) )
    )
    (* 10 (count preference1:doggie_bed) 40 )
  )
)
)(define (game game-id-660) (:domain medium-objects-room-v1)
(:setup
  (forall (?w - cube_block ?s - building ?i - ball)
    (exists (?f - hexagonal_bin)
      (exists (?c - curved_wooden_ramp)
        (not
          (and
            (and
              (and
                (game-conserved
                  (touch ?c ?i)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?u - pillow)
        (then
          (once (equal_x_position upside_down ?u) )
          (hold (and (on back ?u) ) )
          (once (and (and (not (and (not (in_motion ?u) ) ) ) (in_motion ?u) (adjacent ?u ?u) ) ) )
        )
      )
    )
    (forall (?u ?i - block)
      (and
        (preference preference2
          (exists (?q - (either wall cylindrical_block dodgeball) ?e - hexagonal_bin)
            (then
              (hold (on ?e desk) )
              (hold (in_motion ?u) )
              (once (on ?e ?u) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?k - shelf)
        (then
          (once (not (< 7 (distance ?k ?k)) ) )
          (hold (>= 0 1) )
          (once (not (agent_holds ?k) ) )
        )
      )
    )
    (forall (?n ?e ?m ?q ?v ?o - hexagonal_bin)
      (and
        (preference preference4
          (exists (?d - (either book cube_block golfball))
            (then
              (once (in_motion ?n) )
              (hold (< (distance ?o back) (distance ?v ?d)) )
              (once (and (on bed ?n) (not (in ?v ?v) ) ) )
            )
          )
        )
      )
    )
    (forall (?n - curved_wooden_ramp)
      (and
        (preference preference5
          (exists (?w - building)
            (then
              (once (not (not (adjacent agent ?n) ) ) )
              (once (on agent ?w) )
              (once (toggled_on ?w) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (<= (count-once-per-objects preference2:golfball) (count-once preference5:dodgeball:pink_dodgeball) )
    (>= (* (count-once-per-external-objects preference3:basketball) (* (count preference2:green) (count preference1:dodgeball:pink) )
      )
      0
    )
    (< 4 5 )
    (<= 4 (external-forall-maximize 50 ) )
  )
)
(:scoring
  (count preference2:basketball)
)
)(define (game game-id-661) (:domain many-objects-room-v1)
(:setup
  (exists (?y - beachball)
    (exists (?p - wall ?u - hexagonal_bin)
      (game-conserved
        (not
          (not
            (and
              (agent_holds ?y)
              (agent_holds blue)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?f - block ?l - hexagonal_bin ?c - (either desktop yellow_cube_block) ?s - watch ?e - book)
      (and
        (preference preference1
          (at-end
            (agent_holds ?e)
          )
        )
      )
    )
    (preference preference2
      (exists (?g - dodgeball ?o - cube_block ?u - (either doggie_bed desktop))
        (then
          (hold-while (not (not (not (adjacent ?u ?u) ) ) ) (agent_holds ?u) )
          (once (not (equal_x_position ?u ?u) ) )
          (once (not (and (in_motion floor) (and (and (in_motion top_drawer) (and (agent_holds ?u) (adjacent ?u ?u) ) ) (= (distance ?u blue) (distance bed ?u)) ) ) ) )
        )
      )
    )
    (preference preference3
      (exists (?p - hexagonal_bin)
        (then
          (once (on ?p room_center) )
          (once (in_motion ?p) )
          (hold (game_start ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (> 10 (- (count preference2:pink_dodgeball) )
    )
  )
)
(:scoring
  (+ (+ (count preference2:blue_cube_block:dodgeball) (count preference1:dodgeball) )
  )
)
)(define (game game-id-662) (:domain medium-objects-room-v1)
(:setup
  (and
    (or
      (exists (?o - dodgeball ?d - dodgeball)
        (exists (?k - (either lamp watch cd))
          (forall (?c - sliding_door)
            (exists (?h - dodgeball)
              (forall (?a - game_object)
                (exists (?m - ball)
                  (exists (?f - block ?f - red_dodgeball)
                    (game-conserved
                      (and
                        (and
                          (in ?a ?d)
                          (< (distance agent ?f) 2)
                          (not
                            (in_motion ?f)
                          )
                        )
                        (and
                          (and
                            (not
                              (and
                                (agent_holds agent)
                                (adjacent sideways ?a)
                              )
                            )
                            (in ?c ?c)
                            (same_object ?a ?a)
                            (not
                              (not
                                (on ?d ?m)
                              )
                            )
                            (not
                              (and
                                (not
                                  (on ?m ?h)
                                )
                                (in_motion agent)
                              )
                            )
                            (not
                              (in_motion ?m)
                            )
                          )
                          (< 0.5 1)
                          (on ?c room_center)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
      (exists (?p - hexagonal_bin)
        (or
          (exists (?z - chair)
            (and
              (game-conserved
                (and
                  (in_motion ?p)
                  (adjacent_side agent ?p ?z)
                )
              )
            )
          )
          (and
            (forall (?v - block)
              (game-conserved
                (in_motion door)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?j - hexagonal_bin ?g - bridge_block ?d - (either side_table doggie_bed))
        (then
          (once (agent_holds ?d) )
          (hold (and (agent_holds ?d) (not (= 1 0) ) ) )
          (once (and (and (= (x_position ?d) (building_size ?d)) ) (agent_holds ?d) ) )
        )
      )
    )
  )
)
(:terminal
  (<= (= 300 (= 7 (external-forall-maximize 3 ) )
    )
    (count-once-per-objects preference1:pink:green)
  )
)
(:scoring
  2
)
)(define (game game-id-663) (:domain medium-objects-room-v1)
(:setup
  (exists (?c - dodgeball)
    (game-optional
      (not
        (agent_holds ?c)
      )
    )
  )
)
(:constraints
  (and
    (forall (?x - (either laptop cylindrical_block))
      (and
        (preference preference1
          (then
            (once (in ?x ?x) )
            (once (and (adjacent ?x ?x) (not (not (and (in_motion ?x) (in_motion ?x) ) ) ) ) )
            (once (in ?x ?x) )
          )
        )
        (preference preference2
          (exists (?w - hexagonal_bin ?j - ball)
            (at-end
              (not
                (not
                  (not
                    (agent_holds ?x)
                  )
                )
              )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?f - wall)
        (then
          (hold (toggled_on ?f) )
          (once-measure (in_motion ?f) (distance_side ?f ?f ?f) )
          (once (not (and (forall (?t ?e - hexagonal_bin) (and (agent_holds ?e) (not (and (faces agent ?f) (and (same_object ?e ?t) (agent_holds ?e) ) ) ) ) ) (on ?f agent) (or (in ?f ?f) (opposite ?f ?f) (agent_holds agent) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (and
      (or
        (>= (* 5 (count-once-per-objects preference2:golfball) )
          (count-once-per-external-objects preference2:blue_dodgeball:beachball)
        )
        (> (count-shortest preference1:green) 3 )
        (>= (- (count preference2:beachball) )
          10
        )
      )
      (< 15 (count-once-per-external-objects preference3:pink) )
    )
  )
)
(:scoring
  (count preference1:yellow)
)
)(define (game game-id-664) (:domain many-objects-room-v1)
(:setup
  (and
    (game-optional
      (agent_holds bed)
    )
  )
)
(:constraints
  (and
    (forall (?k - hexagonal_bin)
      (and
        (preference preference1
          (exists (?s - drawer ?b - triangular_ramp)
            (then
              (hold (not (not (touch ?k room_center) ) ) )
              (once (exists (?i - hexagonal_bin ?j - hexagonal_bin) (agent_holds room_center) ) )
              (hold (in_motion ?b) )
            )
          )
        )
        (preference preference2
          (exists (?y - dodgeball)
            (then
              (once (is_setup_object floor) )
              (once (agent_holds ?k) )
              (once (on ?y bed) )
            )
          )
        )
        (preference preference3
          (exists (?x - (either ball hexagonal_bin) ?h - (either golfball cd main_light_switch))
            (then
              (hold-while (agent_holds ?h) (on ?h ?k) )
              (hold (in ?k ?h) )
              (once (agent_holds ?h) )
            )
          )
        )
      )
    )
    (preference preference4
      (exists (?c - dodgeball ?l - hexagonal_bin ?o ?s - hexagonal_bin)
        (at-end
          (and
            (object_orientation ?s ?o)
            (rug_color_under ?o ?s)
          )
        )
      )
    )
    (preference preference5
      (exists (?a - hexagonal_bin)
        (then
          (hold (not (same_object ?a ?a) ) )
          (hold (not (in_motion ?a) ) )
        )
      )
    )
  )
)
(:terminal
  (> 5 (count-once-per-external-objects preference2:golfball) )
)
(:scoring
  3
)
)(define (game game-id-665) (:domain medium-objects-room-v1)
(:setup
  (exists (?b - dodgeball)
    (exists (?z - dodgeball)
      (exists (?m - hexagonal_bin)
        (game-optional
          (or
            (adjacent_side south_west_corner ?z ?z)
            (agent_holds ?z)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?i - building ?q ?e - hexagonal_bin ?m - game_object ?a - game_object ?v - chair)
        (then
          (once (not (< (distance ?v ?v) 1) ) )
          (once (agent_holds ?v) )
          (once (not (not (in_motion ?v) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once preference1:golfball) 15 )
)
(:scoring
  (count-once preference1:book)
)
)(define (game game-id-666) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?h - (either laptop triangle_block cd cube_block doggie_bed dodgeball dodgeball))
      (game-conserved
        (in_motion ?h)
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - hexagonal_bin)
      (and
        (preference preference1
          (exists (?n - red_dodgeball)
            (then
              (once (not (and (agent_holds pink_dodgeball) (not (between ?b room_center ?b) ) ) ) )
              (hold (in ?b bed) )
              (once (on ?n south_wall) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (external-forall-maximize (* (count-once-per-objects preference1:beachball) 2 )
      )
      (count-once-per-external-objects preference1:side_table:beachball)
    )
    (= (count preference1:bed:pink) (total-time) )
  )
)
(:scoring
  3
)
)(define (game game-id-667) (:domain few-objects-room-v1)
(:setup
  (forall (?x - game_object)
    (game-conserved
      (rug_color_under ?x ?x)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?h - ball)
        (then
          (once (> 0 (distance ?h ?h)) )
          (once (not (in_motion ?h) ) )
          (once (agent_holds ?h) )
        )
      )
    )
    (forall (?a - game_object)
      (and
        (preference preference2
          (exists (?u - pillow)
            (then
              (once (< 3 6) )
              (hold (adjacent ?a ?u) )
              (once (on desk ?u) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (not
      (or
        (>= (* (* (count-shortest preference1:rug) (* (* (count preference1:green:red_pyramid_block) 6 )
                (count preference2:red)
                (count-once-per-objects preference2:pink)
              )
            )
            10
          )
          3
        )
        (>= (count-once-per-objects preference2:dodgeball) (* (+ 2 (count-once-per-objects preference2:dodgeball) )
            (* (count preference1:pink) (* (count preference2:block:yellow) (= (* (count-once-per-objects preference1:beachball) (count preference1:basketball) (* 5 (>= (* (count-longest preference1:book:purple) (+ (or (count preference1:beachball:dodgeball) (* (count-overlapping preference1) (count preference2:yellow_cube_block:yellow) (count-once preference2:pink:orange) (and 15 ) 4 3 )
                              (external-forall-maximize
                                (* 2 (count-measure preference2:golfball) )
                              )
                            )
                            (count preference2:pink)
                          )
                        )
                        (count preference1:golfball)
                      )
                    )
                    (count preference1:dodgeball:blue_dodgeball)
                  )
                  10
                )
              )
              5
            )
          )
        )
      )
    )
    (>= 10 (* 180 300 )
    )
  )
)
(:scoring
  2
)
)(define (game game-id-668) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?d - yellow_pyramid_block ?w - doggie_bed ?x - dodgeball)
      (game-conserved
        (touch ?x ?x)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?h - hexagonal_bin ?g - hexagonal_bin ?d - dodgeball)
        (then
          (once (not (not (and (in_motion ?d) (not (in_motion bed) ) ) ) ) )
          (hold (agent_holds ?d) )
          (once (agent_holds green) )
        )
      )
    )
    (preference preference2
      (exists (?j - chair)
        (then
          (hold (not (and (not (adjacent ?j ?j) ) (in_motion ?j) ) ) )
          (forall-sequence (?s - (either pen tall_cylindrical_block cube_block))
            (then
              (hold (= (building_size ?s) (distance ?s ?j)) )
              (once (adjacent_side ?s desk ?s) )
              (once (agent_holds ?s) )
            )
          )
          (once (and (agent_holds ?j) (rug_color_under ?j ?j) ) )
        )
      )
    )
    (preference preference3
      (exists (?x - wall)
        (then
          (once (and (and (agent_holds desktop) (agent_holds ?x) (adjacent side_table agent) (not (and (in_motion ?x) (= (distance ?x ?x) 1) (not (and (adjacent agent ?x) (not (in_motion ?x) ) (on ?x ?x) (same_object ?x desk) ) ) ) ) (agent_holds ?x) (agent_holds ?x) ) (< (building_size ?x) (distance_side ?x ?x desk ?x)) (and (agent_holds top_drawer) (on ?x agent) (in ?x ?x) ) (on ?x ?x) (touch room_center ?x) (agent_holds bed) ) )
          (hold (agent_holds ?x) )
          (hold (< (distance ?x ?x) (distance ?x ?x)) )
          (hold (= 3 1) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (count preference2:pink:side_table) )
)
(:scoring
  (total-score)
)
)(define (game game-id-669) (:domain medium-objects-room-v1)
(:setup
  (exists (?k ?q - beachball)
    (forall (?n - red_dodgeball)
      (exists (?j - ball ?h - dodgeball)
        (and
          (game-optional
            (on ?q ?n)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?s - dodgeball)
      (and
        (preference preference1
          (exists (?t - dodgeball)
            (then
              (once (not (and (in ?t ?t) (on ?t ?t) ) ) )
              (once (in bed room_center) )
              (hold (in_motion ?s) )
            )
          )
        )
        (preference preference2
          (then
            (hold (not (adjacent ?s agent) ) )
            (hold (in_motion ?s) )
            (once (on rug ?s) )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) 4 )
)
(:scoring
  3
)
)(define (game game-id-670) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (not
      (game_over )
    )
  )
)
(:constraints
  (and
    (forall (?t - dodgeball)
      (and
        (preference preference1
          (exists (?r - cube_block ?b - (either cd pyramid_block) ?v - hexagonal_bin)
            (then
              (hold-while (touch ?v ?t) (rug_color_under ?v ?t) (not (game_over ) ) )
              (hold-while (agent_holds ?v) (not (not (< (distance ?v ?v) 9) ) ) (adjacent ?v ?t) (or (not (agent_holds ?v) ) (opposite ?v ?t) ) )
              (hold-while (agent_holds ?t) (on ?t ?v) )
            )
          )
        )
        (preference preference2
          (exists (?e - hexagonal_bin)
            (then
              (once (adjacent_side ?t desk rug) )
              (hold (in_motion ?t) )
              (once (not (forall (?z - hexagonal_bin) (in_motion door) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (< (count preference1:pink_dodgeball:pink) (count-measure preference2:golfball:blue_dodgeball) )
    (> (count-once-per-external-objects preference1:yellow:pink) (count preference1:pyramid_block) )
    (>= 1 (count-shortest preference2:blue_pyramid_block) )
  )
)
(:scoring
  (- 8 )
)
)(define (game game-id-671) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (not
      (in_motion bed)
    )
  )
)
(:constraints
  (and
    (forall (?y - triangular_ramp)
      (and
        (preference preference1
          (exists (?j - ball)
            (then
              (once (same_color ?y agent) )
              (once (and (and (and (agent_holds ?y) (not (agent_holds ?y) ) (and (not (not (not (and (in_motion ?y) (not (not (in ?y ?j) ) ) (not (or (not (in ?y agent) ) (agent_holds ?y) ) ) (in_motion sideways) (agent_holds ?y) (agent_holds ?j) ) ) ) ) (not (not (and (> (distance desk ?j) 1) (and (same_object ?y ?j) (in_motion ?j) ) ) ) ) ) ) (or (agent_holds ?y) (agent_holds ?j) ) (and (agent_holds ?y) (in_motion agent) ) ) (agent_holds ?j) ) )
              (once (and (in ?j ?j) (and (not (in_motion ?y) ) (and (agent_holds room_center) (in_motion ?y) ) (not (is_setup_object desk) ) (< (x_position ?y) (distance ?j desk)) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (count preference1:red_pyramid_block) 5 )
      (or
        (or
          (>= (* 20 (count preference1:beachball:dodgeball) )
            (+ (count preference1:beachball) (count-once preference1:hexagonal_bin:beachball) )
          )
          (or
            (>= 1 (count-once-per-objects preference1) )
            (< 15 (count-once-per-objects preference1:golfball) )
            (>= (count preference1:pink) (+ 4 (count preference1:pink) 0.5 (total-time) (count-once-per-objects preference1:basketball) (+ 5 10 )
                (count preference1:hexagonal_bin)
              )
            )
          )
        )
        (>= (= (* (* (* 5 (+ (count preference1:dodgeball:blue_cube_block) (count preference1:dodgeball) )
                )
                10
              )
              (count-once-per-objects preference1:hexagonal_bin)
            )
            (+ 5 )
          )
          (count-once-per-external-objects preference1:purple)
        )
        (or
          (and
            (>= (= (count preference1:yellow_cube_block:red) 5 )
              0
            )
            (>= (* (total-time) (* (count preference1:beachball:basketball) (/ (count preference1:dodgeball:orange) (- (* (count preference1:blue:pink) (* (count preference1:yellow) (count-once preference1:golfball) )
                      )
                      (count preference1:white)
                    )
                  )
                  (count-once-per-objects preference1:pink)
                  (count-overlapping preference1:golfball:yellow)
                )
              )
              4
            )
          )
          (not
            (or
              (>= (* 10 (+ (count preference1:yellow_cube_block) 3 (count preference1:dodgeball) 4 (+ 50 (* 1 (* (count-longest preference1:pink_dodgeball) (count preference1:beachball) )
                      )
                      (count-once-per-objects preference1:doggie_bed:basketball)
                    )
                    3
                    (count preference1:yellow_pyramid_block)
                    30
                    (count-once-per-objects preference1:basketball)
                  )
                  (count preference1:golfball:pink)
                )
                2
              )
              (>= 3 6 )
            )
          )
        )
      )
    )
    (= 8 (* (- (count preference1:red) )
        (count preference1:dodgeball)
      )
    )
    (>= 5 (* 5 (count preference1:book) )
    )
  )
)
(:scoring
  30
)
)(define (game game-id-672) (:domain many-objects-room-v1)
(:setup
  (exists (?p - dodgeball ?g - dodgeball)
    (game-optional
      (agent_holds ?g)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?t - (either triangle_block alarm_clock))
        (then
          (hold (on desk ?t) )
          (once (agent_holds ?t) )
          (hold-while (adjacent ?t ?t) (not (agent_holds bed) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:green) (count preference1:dodgeball) )
)
(:scoring
  (count preference1:basketball:alarm_clock)
)
)(define (game game-id-673) (:domain many-objects-room-v1)
(:setup
  (forall (?q - (either cd tall_cylindrical_block))
    (game-optional
      (agent_holds rug)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?k - hexagonal_bin)
        (then
          (once (in_motion ?k) )
          (once (and (agent_holds ?k) (in_motion agent) ) )
          (hold-to-end (and (on ?k desk) (adjacent ?k ?k) ) )
        )
      )
    )
    (preference preference2
      (exists (?x - blue_cube_block)
        (at-end
          (in_motion ?x)
        )
      )
    )
    (preference preference3
      (exists (?z - shelf)
        (at-end
          (adjacent ?z upright)
        )
      )
    )
  )
)
(:terminal
  (>= 6 (* 1 2 )
  )
)
(:scoring
  (count-longest preference2:green)
)
)(define (game game-id-674) (:domain medium-objects-room-v1)
(:setup
  (exists (?k - cylindrical_block)
    (exists (?y - cube_block)
      (exists (?m - hexagonal_bin)
        (game-optional
          (exists (?g ?t - hexagonal_bin)
            (and
              (not
                (not
                  (in_motion ?k)
                )
              )
              (and
                (on ?m bed)
                (agent_holds ?g)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?s - game_object)
        (then
          (once (on ?s ?s) )
          (once (agent_holds ?s) )
          (once (in ?s ?s) )
        )
      )
    )
    (preference preference2
      (exists (?p - tan_cube_block)
        (at-end
          (agent_holds ?p)
        )
      )
    )
    (preference preference3
      (exists (?w - bridge_block)
        (at-end
          (adjacent ?w ?w)
        )
      )
    )
  )
)
(:terminal
  (<= 4 (* (* 4 2 )
      (* 10 (* 5 10 )
      )
    )
  )
)
(:scoring
  (* 7 (count-once-per-objects preference2:pink) )
)
)(define (game game-id-675) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (exists (?e - pillow ?q - hexagonal_bin)
        (and
          (or
            (forall (?e - dodgeball ?d - golfball)
              (exists (?e - cube_block)
                (forall (?t - doggie_bed)
                  (and
                    (game-conserved
                      (agent_holds ?d)
                    )
                    (not
                      (game-conserved
                        (adjacent_side desk ?t agent)
                      )
                    )
                    (game-conserved
                      (equal_z_position ?d ?d)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?b - chair)
        (then
          (once (agent_holds desk) )
          (hold (agent_holds ?b) )
          (once (not (not (agent_holds ?b) ) ) )
        )
      )
    )
    (forall (?i - hexagonal_bin ?h - block)
      (and
        (preference preference2
          (then
            (once (agent_holds ?h) )
            (hold-while (exists (?p - hexagonal_bin ?q - hexagonal_bin ?f - dodgeball) (not (and (< 5 (distance ?h ?f)) (on agent ?h) ) ) ) (object_orientation ?h ?h) )
            (hold (not (in_motion ?h) ) )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (= (* (total-score) (+ (* 10 (count preference2:golfball) )
          (count preference2:dodgeball)
          (* (count-once-per-objects preference2:beachball) (total-time) )
        )
        5
      )
      (* (external-forall-maximize (+ (count preference1:dodgeball) (* (/ (- 0 )
                30
              )
              (not
                (count preference2:basketball)
              )
            )
          )
        )
        (* (* (count-once-per-objects preference1:dodgeball:yellow:dodgeball) (* (count preference1:golfball:blue_pyramid_block) (count-once-per-external-objects preference1:golfball:side_table) )
          )
          (count-once preference2:doggie_bed)
        )
      )
    )
    (or
      (<= (* (= (+ (count preference1:blue_dodgeball:book) (count-total preference2:hexagonal_bin:cube_block) )
            (count preference1:pyramid_block)
          )
          2
          (* (- (* (count preference2:basketball) 4 )
            )
            (* (+ (* (- (>= (count-measure preference2:red) (* (+ (* (* (* (< (+ (* (count preference1:basketball) 10 )
                                    (- (count preference2:basketball) )
                                  )
                                  3
                                )
                                (>= (count preference2:yellow) (* (count preference1:red:doggie_bed) )
                                )
                              )
                              10
                            )
                            (-
                              (count-once-per-objects preference1:red)
                              (* 4 3 )
                            )
                          )
                          10
                        )
                        (count preference2:basketball)
                      )
                    )
                  )
                  180
                )
                (count preference1)
              )
              10
            )
          )
          8
          (count preference2:blue_cube_block)
          (count-once preference2:pink)
          (count preference2:red)
        )
        (* 1 (+ (* (* (external-forall-minimize (count-once-per-objects preference2:golfball) ) (* (+ (count preference2:alarm_clock:hexagonal_bin) (* 3 (* 3 (count preference2:beachball) (count preference1:doggie_bed) )
                    )
                  )
                  (count-overlapping preference2:pyramid_block)
                )
              )
              (external-forall-maximize
                5
              )
            )
            (count preference1:beachball)
          )
        )
      )
      (or
        (> (* (* (/ (count-once-per-external-objects preference2:pink) 4 ) (* (count-unique-positions preference1:beachball:beachball) 100 )
            )
            (count-once-per-objects preference1:basketball:golfball)
          )
          15
        )
        (>= 1 7 )
      )
    )
  )
)
(:scoring
  (-
    (count-once-per-objects preference1:dodgeball)
    10
  )
)
)(define (game game-id-676) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (agent_crouches )
  )
)
(:constraints
  (and
    (forall (?f - cube_block)
      (and
        (preference preference1
          (exists (?u - dodgeball)
            (then
              (once (above back ?f) )
              (hold-while (touch agent ?u) (on left agent) )
              (once (on ?u ?f) )
              (once (agent_holds room_center) )
            )
          )
        )
      )
    )
    (forall (?e - hexagonal_bin ?z - game_object)
      (and
        (preference preference2
          (exists (?l - teddy_bear ?v ?m ?c - (either bridge_block))
            (then
              (hold (agent_holds ?m) )
              (hold (in_motion ?z) )
              (once (in ?z ?m) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?y - (either tall_cylindrical_block flat_block dodgeball))
        (then
          (hold (and (and (not (object_orientation ?y ?y) ) (not (and (in_motion ?y) (< (distance_side ?y ?y ?y ?y) (distance ?y ?y)) (agent_holds south_wall) (not (not (and (on ?y ?y) (touch ?y ?y) ) ) ) (agent_crouches ) ) ) ) (not (not (agent_holds room_center) ) ) ) )
          (once (in_motion upright) )
          (hold (not (not (and (adjacent ?y ?y) (> (distance ?y ?y) (distance_side ?y desk ?y agent)) (in_motion ?y) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1) 5 )
)
(:scoring
  (count-once-per-objects preference2:yellow:dodgeball)
)
)(define (game game-id-677) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds desk)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?l - ball ?p - hexagonal_bin)
        (at-end
          (not
            (in_motion ?p)
          )
        )
      )
    )
    (preference preference2
      (exists (?x - hexagonal_bin)
        (then
          (hold (in ?x ?x) )
          (hold (in_motion ?x) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ 20 (count preference1:blue_cube_block:yellow) )
    (+ (* 2 (* (count-once preference1) 5 )
      )
      (count-once-per-objects preference2:cylindrical_block)
    )
  )
)
(:scoring
  5
)
)(define (game game-id-678) (:domain medium-objects-room-v1)
(:setup
  (exists (?p - (either pillow laptop) ?v - yellow_cube_block)
    (and
      (forall (?p ?u - chair)
        (exists (?j - dodgeball ?j - dodgeball)
          (and
            (exists (?y - ball)
              (game-conserved
                (in_motion ?u)
              )
            )
            (game-conserved
              (not
                (faces ?j ?v)
              )
            )
            (game-conserved
              (not
                (and
                  (on ?v agent)
                  (agent_holds ?u)
                )
              )
            )
          )
        )
      )
      (game-optional
        (in ?v ?v)
      )
      (game-optional
        (same_type pink_dodgeball desk)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?e - (either lamp wall))
        (then
          (hold (on ?e agent) )
          (once (agent_holds ?e) )
          (hold (adjacent ?e ?e) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (or
        (> (count-once-per-objects preference1:tall_cylindrical_block) 3 )
        (>= 4 5 )
      )
      (>= 2 (or (>= (* (count preference1:yellow) 7 )
            (total-score)
          )
          7
          (count-once-per-objects preference1:basketball)
        )
      )
      (or
        (>= (* 8 (* 7 50 )
          )
          (+ (- 3 )
            1
          )
        )
        (> (external-forall-maximize 15 ) (= (count-once preference1:golfball) (count-once preference1:basketball) (and 10 ) )
        )
        (>= (count-once-per-objects preference1:purple) (count preference1:yellow_pyramid_block) )
      )
    )
    (>= (* (count preference1:red) (* (* (count preference1:green) (count-once preference1:dodgeball) (count preference1:basketball) )
          (total-score)
        )
        (count-once-per-external-objects preference1:cylindrical_block)
      )
      (* (<= (- (+ (count-shortest preference1:hexagonal_bin) (external-forall-maximize (count preference1:block) ) )
            (+ (count-once-per-external-objects preference1:pink) (* (count preference1:basketball) 5 )
            )
          )
          (count preference1:beachball)
        )
        (* (* 5 (count-same-positions preference1:yellow) )
          (count preference1:pink_dodgeball)
        )
      )
    )
  )
)
(:scoring
  2
)
)(define (game game-id-679) (:domain medium-objects-room-v1)
(:setup
  (exists (?i - wall)
    (game-conserved
      (in ?i ?i)
    )
  )
)
(:constraints
  (and
    (forall (?d - ball ?f - hexagonal_bin)
      (and
        (preference preference1
          (exists (?p - triangular_ramp)
            (then
              (once (in_motion ?f) )
              (hold (forall (?x - wall) (not (and (exists (?u - golfball) (agent_holds ?u) ) (in_motion ?x) ) ) ) )
              (once (agent_holds ?p) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (> (count preference1:dodgeball:dodgeball) (count-once-per-objects preference1:dodgeball:pink) )
    (> (count preference1:doggie_bed) 2 )
    (>= (+ 5 (< (count-once-per-objects preference1:pink:yellow) (total-score) )
      )
      (+ (* (count-once-per-objects preference1:dodgeball) (* (* (count-once-per-external-objects preference1:tan) (count-once-per-objects preference1:dodgeball) )
            3
          )
        )
        2
        2
      )
    )
  )
)
(:scoring
  10
)
)(define (game game-id-680) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (not
      (in_motion bed)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?j - dodgeball ?x - building)
        (then
          (hold (on ?x ?x) )
          (hold (not (adjacent ?x ?x) ) )
          (hold (< 4 4) )
        )
      )
    )
    (preference preference2
      (exists (?c - (either side_table cellphone))
        (then
          (once (not (not (in agent ?c) ) ) )
          (once (and (in_motion ?c) (exists (?n - (either golfball pyramid_block) ?d - dodgeball) (and (forall (?o - game_object ?b - (either alarm_clock yellow)) (in_motion ?d) ) (not (in ?c ?d) ) ) ) ) )
          (once (in ?c ?c) )
        )
      )
    )
    (preference preference3
      (exists (?a - pillow ?x - dodgeball)
        (then
          (once (adjacent sideways blue) )
        )
      )
    )
    (forall (?o - beachball)
      (and
        (preference preference4
          (exists (?y - hexagonal_bin ?d - cube_block)
            (then
              (hold (on side_table ?o) )
              (hold (and (and (agent_holds rug) (rug_color_under rug ?d) ) (not (in_motion ?d) ) ) )
              (once (< (distance room_center ?o) 1) )
            )
          )
        )
      )
    )
    (forall (?e - hexagonal_bin)
      (and
        (preference preference5
          (then
            (once (and (agent_holds ?e) (forall (?f - beachball) (agent_holds ?e) ) (agent_holds ?e) ) )
            (hold (agent_holds agent) )
            (hold (in_motion ?e) )
          )
        )
        (preference preference6
          (exists (?z - teddy_bear ?a - doggie_bed ?u - drawer)
            (then
              (hold (equal_z_position ?u ?u) )
              (once (and (and (and (and (agent_holds ?u) (and (in ?e ?e) (broken room_center) (in_motion ?u) ) ) (exists (?r - pillow) (in_motion ?u) ) (on bed ?u) ) (and (< (distance ?u ?e) (x_position ?e)) (not (faces ?e ?e) ) ) ) (and (in_motion ?e) (on ?u ?e) ) ) )
              (once (not (adjacent ?e ?u) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 3 2 )
)
(:scoring
  (count-unique-positions preference5:blue_dodgeball)
)
)(define (game game-id-681) (:domain many-objects-room-v1)
(:setup
  (forall (?b - triangular_ramp ?l - (either laptop cellphone))
    (game-conserved
      (exists (?x - curved_wooden_ramp)
        (forall (?z - doggie_bed ?q ?d - building)
          (and
            (not
              (agent_holds ?q)
            )
            (agent_holds bed)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?k - (either bridge_block))
      (and
        (preference preference1
          (exists (?x - (either blue_cube_block pillow hexagonal_bin floor) ?e - dodgeball ?r - dodgeball ?t - dodgeball ?q - (either golfball tall_cylindrical_block))
            (then
              (once (and (and (and (adjacent_side ?q upside_down ?q) (not (touch ?k bed) ) ) (agent_crouches ) ) (not (not (and (in ?q ?q) (in_motion ?k) ) ) ) ) )
              (once (not (not (agent_holds ?q) ) ) )
              (hold (not (exists (?y - beachball ?l - wall) (not (in_motion ?k) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 40 3 )
    (>= 7 3 )
  )
)
(:scoring
  (total-score)
)
)(define (game game-id-682) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?x - hexagonal_bin)
      (exists (?e - (either golfball dodgeball))
        (game-conserved
          (agent_holds ?e)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?j - doggie_bed)
        (then
          (once (not (exists (?d - cube_block) (and (in ?d ?d) (exists (?q - ball ?c - dodgeball ?h ?l - color) (adjacent_side ?j bed ?j desk) ) ) ) ) )
          (once (in ?j ?j) )
          (once (broken ?j) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (or
        (>= (* (count-once-per-objects preference1:hexagonal_bin) (* 5 (count preference1) )
          )
          (/
            (external-forall-maximize
              20
            )
            (count preference1:hexagonal_bin)
          )
        )
        (>= (+ (count preference1:dodgeball:basketball) 6 )
          30
        )
      )
      (>= (count preference1:block) (* (count preference1:yellow) (count preference1:red) )
      )
    )
    (>= 60 (count preference1:dodgeball) )
    (>= 25 (count-once-per-objects preference1:orange) )
    (or
      (>= (* 3 2 )
        (count-once-per-external-objects preference1:yellow:cylindrical_block:hexagonal_bin)
      )
      (>= 5 (* (- (count preference1:brown) )
          (+ 3 (count preference1:dodgeball) )
        )
      )
      (>= (total-score) 6 )
    )
  )
)
(:scoring
  (count-once-per-external-objects preference1:hexagonal_bin)
)
)(define (game game-id-683) (:domain few-objects-room-v1)
(:setup
  (exists (?k - game_object ?t - (either tall_cylindrical_block hexagonal_bin))
    (and
      (and
        (game-optional
          (not
            (agent_holds room_center)
          )
        )
        (exists (?v - hexagonal_bin)
          (exists (?p - triangular_ramp ?f - ball)
            (game-conserved
              (and
                (agent_holds ?f)
                (agent_holds ?t)
              )
            )
          )
        )
        (game-conserved
          (in_motion ?t)
        )
        (exists (?h - hexagonal_bin)
          (game-conserved
            (not
              (in ?h agent)
            )
          )
        )
        (and
          (and
            (game-conserved
              (not
                (not
                  (adjacent upright ?t)
                )
              )
            )
            (game-conserved
              (in_motion ?t)
            )
          )
          (exists (?p - game_object)
            (exists (?o ?a - hexagonal_bin)
              (game-conserved
                (adjacent ?a desk)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (at-end
        (agent_holds room_center)
      )
    )
    (preference preference2
      (exists (?b - flat_block)
        (then
          (hold (and (not (agent_holds rug) ) (on ?b ?b) ) )
          (once (equal_x_position ?b bed) )
          (once (forall (?n - game_object) (< 1 (x_position ?b)) ) )
        )
      )
    )
    (forall (?m - green_triangular_ramp)
      (and
        (preference preference3
          (exists (?j - dodgeball)
            (then
              (once (< (distance ?j ?m) 5) )
              (once (= 10 (distance ?m rug)) )
              (once (or (not (< (x_position door) 1) ) (and (in_motion ?j) (adjacent_side ?j rug ?j) ) (< 1 (distance ?j ?m)) ) )
            )
          )
        )
      )
    )
    (preference preference4
      (exists (?x - hexagonal_bin)
        (at-end
          (< 6 (distance_side ?x ?x ?x ?x))
        )
      )
    )
    (forall (?m - red_dodgeball)
      (and
        (preference preference5
          (exists (?i - ball ?b - hexagonal_bin)
            (then
              (once (touch ?b ?m) )
              (once (not (and (and (and (not (in_motion ?b) ) (not (on agent ?b) ) ) (same_color ?m ?m) ) (and (and (adjacent ?m ?m) (agent_holds ?m) ) (in ?m ?b) (on agent ?b) ) ) ) )
              (hold-while (above ?m ?m) (exists (?i - dodgeball) (and (not (in_motion ?m) ) (in ?i ?m) ) ) (not (not (and (not (agent_holds ?b) ) (is_setup_object ?m) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (count-once-per-objects preference4) (* (count-once-per-objects preference3:red) (count preference3:tan) )
    )
    (>= 8 (count preference3:beachball) )
    (= (+ (+ (- (* 50 10 )
            8
          )
          3
        )
        (external-forall-minimize
          4
        )
      )
      6
    )
  )
)
(:scoring
  (count preference3:dodgeball)
)
)(define (game game-id-684) (:domain many-objects-room-v1)
(:setup
  (exists (?t - flat_block)
    (or
      (game-optional
        (in_motion ?t)
      )
    )
  )
)
(:constraints
  (and
    (forall (?q - dodgeball)
      (and
        (preference preference1
          (exists (?h - (either cellphone key_chain))
            (at-end
              (in_motion ?h)
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?p - (either golfball cellphone))
        (then
          (hold (forall (?g - drawer ?g - game_object ?r ?u - hexagonal_bin) (adjacent ?u front_left_corner) ) )
          (once (in_motion agent) )
          (hold (in_motion ?p) )
        )
      )
    )
  )
)
(:terminal
  (= (count-shortest preference2:yellow:yellow) 5 )
)
(:scoring
  (* (count preference2:hexagonal_bin) (* (total-time) (total-score) )
  )
)
)(define (game game-id-685) (:domain medium-objects-room-v1)
(:setup
  (not
    (exists (?y - hexagonal_bin)
      (and
        (or
          (exists (?z - (either cube_block pen) ?w - (either cellphone blue_cube_block yellow_cube_block main_light_switch watch desktop dodgeball) ?i - flat_block)
            (game-conserved
              (not
                (or
                  (on ?i ?y)
                  (and
                    (agent_holds ?i)
                    (not
                      (in_motion ?y)
                    )
                    (agent_holds ?y)
                  )
                )
              )
            )
          )
          (and
            (exists (?o - chair)
              (exists (?r - dodgeball ?i - dodgeball)
                (forall (?z - ball ?s ?x ?n ?b ?r ?t - teddy_bear ?f - sliding_door)
                  (game-conserved
                    (agent_holds ?f)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?r - hexagonal_bin)
        (then
          (once (< (distance_side ?r ?r ?r ?r) 1) )
          (hold-while (not (on ?r agent) ) (and (not (on ?r ?r) ) (opposite ?r ?r) (is_setup_object brown) ) )
          (hold (not (agent_holds ?r) ) )
        )
      )
    )
    (forall (?u - ball)
      (and
        (preference preference2
          (exists (?o - cylindrical_block ?f - dodgeball)
            (then
              (hold (not (not (not (not (and (< 1 5) (on ?u ?u) ) ) ) ) ) )
            )
          )
        )
      )
    )
    (forall (?d - doggie_bed)
      (and
        (preference preference3
          (then
            (once (on ?d ?d) )
            (once (and (and (and (in_motion right) ) (adjacent floor ?d) ) (agent_holds ?d) ) )
            (hold (agent_holds pink) )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-once-per-objects preference3:yellow) (+ (count preference2:pink) (* (count-once-per-objects preference3:dodgeball) (count preference1:green) )
      )
    )
    (>= (+ (count preference1:doggie_bed) (* 10 (+ (* (count-once-per-objects preference1:purple:blue_dodgeball) 1 )
            (count-once-per-objects preference1:brown)
          )
        )
      )
      (<= 10 (count-once preference3:basketball:green) )
    )
  )
)
(:scoring
  (* (- 3 )
    (count-once-per-objects preference1:dodgeball)
  )
)
)(define (game game-id-686) (:domain medium-objects-room-v1)
(:setup
  (exists (?n ?d - bridge_block ?u - bridge_block)
    (game-conserved
      (not
        (agent_holds ?u)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?y - watch)
        (then
          (hold (and (in_motion bed) (or (on agent ?y) (not (and (agent_holds ?y) (agent_holds ?y) ) ) (and (exists (?n - (either chair golfball dodgeball) ?w - cube_block) (in_motion ?y) ) (and (and (on ?y ?y) (not (not (and (on agent agent) ) ) ) ) (not (and (in_motion ?y) (and (in_motion ?y) (< 6 0.5) ) ) ) (and (agent_holds room_center) (in_motion ?y) (and (adjacent ?y ?y) (in_motion ?y) (in_motion ?y) ) ) ) (agent_holds side_table) ) ) ) )
          (once (in_motion ?y) )
          (hold (and (adjacent ?y ?y) (agent_holds desk) ) )
        )
      )
    )
    (forall (?i - (either dodgeball alarm_clock))
      (and
        (preference preference2
          (exists (?n - hexagonal_bin)
            (at-end
              (same_color ?i ?n)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (- (count-once-per-objects preference1:triangle_block) )
  )
)
(:scoring
  (* 2 (count preference1:doggie_bed) )
)
)(define (game game-id-687) (:domain many-objects-room-v1)
(:setup
  (exists (?n - teddy_bear)
    (exists (?h - green_triangular_ramp)
      (exists (?m - doggie_bed)
        (game-conserved
          (and
            (in_motion ?n)
            (< (distance_side ?n ?n ?h ?m) 1)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?u - chair)
      (and
        (preference preference1
          (exists (?a - block)
            (then
              (once (not (agent_holds ?a) ) )
              (once (in ?u ?a) )
              (once (object_orientation ?u room_center) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (count-once-per-objects preference1:basketball) )
)
(:scoring
  10
)
)(define (game game-id-688) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?n ?h - block)
      (or
        (forall (?x - ball)
          (game-conserved
            (not
              (agent_holds ?x)
            )
          )
        )
        (and
          (and
            (exists (?b - flat_block ?y - dodgeball)
              (forall (?x - cylindrical_block)
                (and
                  (game-conserved
                    (and
                      (> (distance ?x ?x) (distance desk floor))
                      (not
                        (not
                          (faces ?x ?y)
                        )
                      )
                    )
                  )
                  (game-conserved
                    (in_motion ?n)
                  )
                )
              )
            )
          )
          (exists (?x ?t - hexagonal_bin)
            (game-optional
              (in_motion ?n)
            )
          )
          (exists (?w - triangular_ramp ?t - hexagonal_bin ?q - dodgeball)
            (and
              (and
                (game-conserved
                  (and
                    (and
                      (or
                        (in_motion ?n)
                        (adjacent ?h bed)
                        (agent_holds ?h)
                      )
                    )
                    (touch ?n ?q)
                  )
                )
                (game-optional
                  (and
                    (exists (?d - wall)
                      (rug_color_under ?n ?h)
                    )
                    (adjacent_side ?h ?n ?h ?n)
                  )
                )
              )
              (and
                (game-optional
                  (and
                    (adjacent ?h ?h)
                    (agent_holds ?h)
                    (agent_holds ?q)
                    (in_motion ?n)
                  )
                )
                (not
                  (game-conserved
                    (touch ?h ?h)
                  )
                )
                (forall (?f - block ?a - (either doggie_bed watch) ?p - hexagonal_bin)
                  (game-conserved
                    (< (x_position ?p) 2)
                  )
                )
              )
              (exists (?w - dodgeball ?v - hexagonal_bin)
                (game-conserved
                  (and
                    (agent_holds ?v)
                    (not
                      (not
                        (adjacent ?n ?v)
                      )
                    )
                    (adjacent bed ?v)
                    (agent_holds ?v)
                    (and
                      (not
                        (agent_holds ?n)
                      )
                      (and
                        (not
                          (in_motion ?h)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
        (exists (?f ?j - cube_block)
          (exists (?y - (either cellphone pyramid_block) ?k - hexagonal_bin ?b - chair ?l ?r - (either book main_light_switch yellow golfball))
            (game-conserved
              (not
                (touch ?n rug)
              )
            )
          )
        )
      )
    )
    (exists (?d - color)
      (game-conserved
        (agent_holds ?d)
      )
    )
  )
)
(:constraints
  (and
    (forall (?v - dodgeball ?d - (either cellphone pillow hexagonal_bin))
      (and
        (preference preference1
          (exists (?w - game_object ?c - ball ?k - (either cube_block golfball) ?g - cube_block)
            (then
              (once (on room_center ?g) )
              (hold (agent_holds agent) )
              (once (in ?d ?d) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?v - ball)
        (then
          (once (and (and (< (distance ?v rug) (distance ?v bed)) (not (and (not (game_start ) ) (not (not (on ?v agent) ) ) (on ?v ?v) ) ) ) (agent_holds ?v) ) )
          (once (rug_color_under ?v ?v) )
          (once (adjacent desk ?v) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:dodgeball:blue_dodgeball) (count preference1:dodgeball) )
)
(:scoring
  (count-overlapping preference2:beachball)
)
)(define (game game-id-689) (:domain few-objects-room-v1)
(:setup
  (exists (?b - cube_block)
    (game-conserved
      (adjacent_side ?b ?b ?b)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?l - hexagonal_bin)
        (then
          (once (in_motion ?l) )
          (once (game_over ) )
          (hold (touch ?l ?l) )
        )
      )
    )
  )
)
(:terminal
  (<= (total-score) 2 )
)
(:scoring
  2
)
)(define (game game-id-690) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds door)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?s - building)
        (then
          (once (and (agent_holds blue) (not (agent_holds ?s) ) ) )
          (hold-while (same_type ?s ?s) (in_motion ?s) (and (and (agent_holds ?s) (in_motion ?s) (in ?s ?s) (not (and (and (on agent rug) (agent_holds ?s) ) (and (and (or (forall (?c - (either alarm_clock dodgeball dodgeball) ?g - triangular_ramp) (not (and (not (forall (?x - (either blue_cube_block dodgeball laptop)) (adjacent ?g ?s) ) ) (and (and (in_motion ?g) (not (or (on ?s ?g) ) ) ) (< 1 0.5) ) ) ) ) (and (in_motion ?s) (not (< 1 1) ) ) ) (in_motion ?s) ) (or (adjacent ?s ?s) (agent_holds door) (and (in_motion ?s) (agent_holds ?s) ) ) ) (not (agent_holds ?s) ) (agent_holds ?s) ) ) ) (agent_holds front) ) )
          (once (agent_holds ?s) )
        )
      )
    )
    (forall (?n - (either key_chain) ?l - ball)
      (and
        (preference preference2
          (exists (?p - hexagonal_bin)
            (at-end
              (< 10 1)
            )
          )
        )
      )
    )
    (forall (?x - dodgeball ?s ?m - (either basketball golfball) ?l - chair)
      (and
        (preference preference3
          (exists (?k - hexagonal_bin ?f - cube_block)
            (then
              (once (touch ?f ?l) )
              (once (and (not (not (in_motion ?f) ) ) (agent_holds ?l) (on ?f ?f) ) )
              (hold (on ?f upside_down) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference3:pink) (count preference2:dodgeball) )
)
(:scoring
  (* 6 (count-once preference3:pyramid_block) (/ (external-forall-maximize (* (+ (* 3 (count preference3:dodgeball) )
            (count preference2:blue_dodgeball:orange)
          )
          (* (* 9 6 )
            (count preference3:yellow:hexagonal_bin)
          )
        )
      )
      6
    )
    (+ (count preference3:blue_dodgeball) 2 (external-forall-maximize (+ (count preference3:green) (* (count-once-per-objects preference3:pink) (* (external-forall-maximize 3 ) (count preference1:blue_dodgeball:beachball) )
          )
        )
      )
      10
      4
      (count preference1:cube_block)
      (count-once-per-objects preference2:green)
      2
      (count-once preference1)
      5
      (+ (count-same-positions preference1:pink) 10 (count-overlapping preference1:pyramid_block:purple) )
      (count-shortest preference3:yellow_pyramid_block)
    )
    (external-forall-maximize
      3
    )
    (* (count preference3:wall) (- (external-forall-maximize (* (= 5 (count preference2:dodgeball:yellow) )
            (+ (* 3 (external-forall-minimize (/ 0 (* 20 4 10 )
                  )
                )
                5
              )
              (count-once-per-objects preference1:bed:red_pyramid_block)
            )
          )
        )
        (* (count preference2:yellow:purple:beachball) )
      )
      (* (= 100 (count-once-per-objects preference2:beachball) )
        (count-measure preference2:basketball)
      )
      (+ (count preference1:pink_dodgeball) (count preference1:yellow) (+ 5 (+ 10 (>= 6 (count-once-per-objects preference3:dodgeball) )
          )
        )
      )
      (* (* (* (count preference3:orange) (count-once-per-objects preference2:blue_dodgeball:green) )
          (count preference2:beachball:yellow_cube_block)
        )
        (external-forall-maximize
          15
        )
      )
      (external-forall-maximize
        (count-once-per-objects preference1:yellow)
      )
      50
    )
  )
)
)(define (game game-id-691) (:domain few-objects-room-v1)
(:setup
  (forall (?y - curved_wooden_ramp ?d - cube_block)
    (exists (?y - curved_wooden_ramp ?u - triangular_ramp ?h ?v - wall)
      (game-optional
        (and
          (agent_holds bed)
          (agent_holds upright)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?g - (either pyramid_block chair))
        (then
          (once (not (same_type rug ?g) ) )
          (once (and (not (and (not (touch ?g brown) ) (touch ?g ?g) ) ) (in_motion ?g) ) )
          (hold (not (exists (?v - ball) (in_motion ?g) ) ) )
        )
      )
    )
  )
)
(:terminal
  (= (count-once-per-objects preference1:hexagonal_bin:dodgeball) (- (total-score) 3 ) )
)
(:scoring
  (or
    (count preference1:beachball)
    (- (* 2 (= (count preference1:book:top_drawer) (external-forall-maximize (count-once-per-external-objects preference1:red_pyramid_block) ) (* (* (* (count preference1:beachball) (count preference1:pink) )
              (count preference1:blue_cube_block)
            )
            (+ (count-once preference1:beachball) 2 )
          )
        )
      )
    )
  )
)
)(define (game game-id-692) (:domain many-objects-room-v1)
(:setup
  (forall (?x - hexagonal_bin)
    (and
      (exists (?z - triangular_ramp)
        (game-optional
          (exists (?t - (either golfball mug))
            (touch ?t rug)
          )
        )
      )
      (exists (?h - hexagonal_bin ?v - red_dodgeball)
        (or
          (exists (?t - hexagonal_bin ?p - (either alarm_clock cylindrical_block))
            (and
              (game-conserved
                (in_motion ?x)
              )
              (and
                (game-optional
                  (exists (?k - hexagonal_bin)
                    (and
                      (not
                        (not
                          (< 1 (distance ?p ?p))
                        )
                      )
                      (not
                        (in ?k room_center)
                      )
                    )
                  )
                )
                (game-conserved
                  (= (distance ?v ?p) 6)
                )
                (and
                  (game-optional
                    (exists (?t - cube_block)
                      (is_setup_object bed)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?w - pyramid_block ?b - dodgeball)
      (and
        (preference preference1
          (exists (?j - hexagonal_bin ?e - block)
            (then
              (once (and (not (on room_center blue) ) (adjacent ?b ?b) ) )
              (any)
              (once (and (exists (?t - cube_block ?h - pillow) (and (exists (?q - hexagonal_bin) (and (and (on bed ?e) (agent_holds ?q) (not (and (>= (distance_side ?b agent ?q) 1) (and (above ?e ?h) (and (not (adjacent ?h upright) ) (not (not (on ?h ?q) ) ) (on rug desk) (on ?h rug) (in_motion ?h) (forall (?z - pillow) (in_motion room_center) ) ) ) ) ) ) (same_color ?b ?h) (and (agent_holds ?e) (on ?e ?q) (in_motion desk) ) ) ) (agent_holds ?h) ) ) (in ?e ?b) ) )
              (hold (on ?e ?e) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?a - hexagonal_bin)
        (then
          (once (and (and (< 2 (distance ?a ?a)) (and (on ?a ?a) (in_motion back) ) ) (or (and (and (and (exists (?p - (either yellow blue_cube_block pink) ?n - hexagonal_bin) (in ?a ?a) ) (and (in_motion desk) (adjacent ?a bed) (not (and (in_motion ?a) (exists (?v - hexagonal_bin) (adjacent ?v ?a) ) ) ) ) ) ) ) (and (agent_holds bed) (not (touch ?a ?a) ) ) ) (in ?a ?a) ) )
          (once (in_motion ?a) )
          (hold-while (not (on ?a bottom_shelf) ) (agent_crouches ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (>= (external-forall-maximize (* (count preference1:beachball:golfball) (count preference2:basketball) (* (count-shortest preference1:cube_block:basketball) 20 )
            5
          )
        )
        4
      )
      (not
        (>= (* (count-once preference2:dodgeball) (count-once-per-objects preference2:dodgeball) )
          (+ (* (* 10 (* 3 (count-once-per-objects preference1:side_table) )
              )
              (* (* (/ (count-once preference1:beachball) 5 ) (count preference2:pink) (- (count-once-per-objects preference2:book:dodgeball) )
                  3
                )
                (count-shortest preference2:dodgeball:golfball)
                (count preference1:dodgeball:alarm_clock)
              )
            )
            (- (count-once-per-objects preference1:beachball) )
          )
        )
      )
    )
  )
)
(:scoring
  (+ 2 (count preference2:dodgeball) )
)
)(define (game game-id-693) (:domain few-objects-room-v1)
(:setup
  (exists (?g ?p ?q - chair)
    (game-conserved
      (< (distance ?q ?p) (distance ?g ?q))
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?g - teddy_bear)
        (at-end
          (exists (?j - building ?q - pyramid_block ?v - block)
            (and
              (in_motion ?g)
              (and
                (toggled_on front)
                (not
                  (not
                    (and
                      (agent_holds ?g)
                      (exists (?t - doggie_bed ?t - ball)
                        (and
                          (in ?g ?g)
                          (adjacent ?g ?v)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
    (forall (?x - ball)
      (and
        (preference preference2
          (exists (?h - (either golfball cube_block book))
            (then
              (once (or (or (and (not (agent_holds room_center) ) (and (agent_holds ?x) (= (distance_side ?h ?x ?h) (distance ?x floor)) ) ) (on ?x ?x) ) (and (not (exists (?a - hexagonal_bin ?u - dodgeball) (object_orientation ?x ?u) ) ) (opposite ?h ?x) (object_orientation pink desk) ) ) )
              (once (adjacent_side ?h ?h ?h ?x) )
              (once (and (exists (?j - shelf) (on ?j ?j) ) (forall (?b - cube_block) (not (exists (?l - building ?v - game_object) (agent_holds desk) ) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (count-once-per-objects preference1:basketball:purple) (= (total-score) (count preference2:book) )
  )
)
(:scoring
  10
)
)(define (game game-id-694) (:domain medium-objects-room-v1)
(:setup
  (forall (?e - (either key_chain laptop laptop))
    (forall (?n - yellow_pyramid_block)
      (exists (?y - game_object ?x - teddy_bear)
        (exists (?w ?q - hexagonal_bin ?g - (either alarm_clock dodgeball))
          (exists (?f - color)
            (game-conserved
              (on desk ?e)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?r ?v - (either cd dodgeball) ?e - beachball ?i - doggie_bed ?c - dodgeball)
      (and
        (preference preference1
          (at-end
            (in_motion ?c)
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (+ 20 (count-once-per-objects preference1:yellow) )
      (count preference1:pink_dodgeball)
    )
    3
  )
)
(:scoring
  (count preference1:blue_cube_block)
)
)(define (game game-id-695) (:domain many-objects-room-v1)
(:setup
  (forall (?k - cube_block)
    (game-conserved
      (on ?k ?k)
    )
  )
)
(:constraints
  (and
    (forall (?x - block ?j - chair ?k - hexagonal_bin ?i - block)
      (and
        (preference preference1
          (exists (?g - chair ?h - hexagonal_bin)
            (at-end
              (in_motion ?h)
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?m - hexagonal_bin)
        (then
          (once (exists (?n - wall ?y - curved_wooden_ramp) (< (distance ?y ?y) (distance ?m ?y)) ) )
          (once (and (and (and (and (and (not (and (not (and (in ?m ?m) (touch ?m ?m) ) ) (in_motion ?m) ) ) (not (in_motion ?m) ) (not (and (adjacent agent ?m) (not (in_motion ?m) ) (on ?m green_golfball) ) ) ) (agent_holds ?m) ) (on ?m ?m) ) (touch ?m ?m) ) (agent_holds desk) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= 10 5 )
      (>= (count-once preference1:yellow) 2 )
    )
    (>= 2 (count-measure preference2:dodgeball:dodgeball:purple) )
  )
)
(:scoring
  100
)
)(define (game game-id-696) (:domain medium-objects-room-v1)
(:setup
  (exists (?c - shelf)
    (forall (?u - hexagonal_bin ?k - (either bridge_block bridge_block blue_cube_block))
      (game-conserved
        (<= (distance ?k ?c) 1)
      )
    )
  )
)
(:constraints
  (and
    (forall (?p - dodgeball ?x - yellow_cube_block ?t - ball)
      (and
        (preference preference1
          (exists (?e ?u - doggie_bed ?z - ball)
            (then
              (once (adjacent ?z ?z) )
              (hold (open floor) )
            )
          )
        )
      )
    )
    (forall (?m - pyramid_block)
      (and
        (preference preference2
          (exists (?i - (either golfball basketball key_chain dodgeball beachball golfball book))
            (then
              (hold (on ?i bed) )
              (once (and (agent_holds ?i) (in_motion front) (and (agent_holds ?m) (and (agent_holds ?i) (in_motion ?i) (agent_holds ?i) ) ) (not (agent_holds ?m) ) ) )
              (once (in_motion room_center) )
              (hold-to-end (agent_holds ?m) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (> (count-once preference2:blue_dodgeball) 5 )
  )
)
(:scoring
  (count preference1:top_drawer)
)
)(define (game game-id-697) (:domain few-objects-room-v1)
(:setup
  (exists (?x - golfball ?v - desk_shelf ?h - doggie_bed)
    (forall (?b - triangular_ramp)
      (exists (?u - (either pyramid_block dodgeball))
        (game-conserved
          (and
            (agent_holds ?h)
            (not
              (not
                (agent_holds desk)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?z - hexagonal_bin)
        (then
          (hold (equal_x_position ?z ?z) )
          (hold (and (on ?z ?z) (not (and (in_motion ?z) (and (agent_holds ?z) (agent_holds top_shelf) (agent_holds ?z) ) ) ) ) )
          (once (on ?z green_golfball) )
          (once (exists (?k - hexagonal_bin ?k ?o - building) (agent_holds ?o) ) )
          (once (not (in ?z ?z) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (/ (count-once-per-objects preference1:yellow) 1 ) 3 )
)
(:scoring
  (- (total-time) )
)
)(define (game game-id-698) (:domain few-objects-room-v1)
(:setup
  (forall (?m - teddy_bear ?m - ball)
    (not
      (exists (?a - curved_wooden_ramp)
        (forall (?k - shelf ?v - building)
          (game-conserved
            (in agent ?v)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h ?w ?f - building)
      (and
        (preference preference1
          (exists (?p - ball ?j ?n ?p - cube_block)
            (then
              (once (and (on ?h pink_dodgeball) (agent_holds ?n) ) )
              (hold-to-end (toggled_on ?w) )
              (hold (not (not (not (same_color ?n ?h) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once preference1:green) (* (count-once-per-objects preference1:yellow:dodgeball) (* 5 (* (count-total preference1:red_pyramid_block) (count-once-per-objects preference1:book) (count preference1:beachball) (count preference1:blue_pyramid_block) 5 (external-forall-maximize (* (* (count preference1:dodgeball:beachball) 0 )
              (count preference1:red_pyramid_block)
            )
          )
          (count preference1:alarm_clock)
          180
          (count preference1:beachball)
        )
      )
      (>= (count-once-per-objects preference1) (* (count-once-per-objects preference1:yellow_pyramid_block) (count preference1:basketball) )
      )
      (count preference1:yellow)
    )
  )
)
(:scoring
  (+ (* (* (total-time) 180 )
      6
    )
    4
  )
)
)(define (game game-id-699) (:domain medium-objects-room-v1)
(:setup
  (exists (?z - ball ?t - beachball)
    (game-conserved
      (and
        (adjacent ?t ?t)
        (in_motion ?t)
        (is_setup_object bed)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?b - dodgeball ?f - building ?n ?f ?e - hexagonal_bin)
        (then
          (once (agent_holds ?n) )
          (hold (and (agent_holds ?e) (agent_holds ?e) (in_motion ?e) ) )
          (hold-while (same_object agent ?f) (and (agent_crouches ) (<= (distance ?e ?e) (building_size ?n)) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (- (count preference1:red) )
      50
    )
    (>= (count-once preference1:dodgeball) 10 )
  )
)
(:scoring
  (count-once-per-objects preference1:blue_dodgeball)
)
)(define (game game-id-700) (:domain many-objects-room-v1)
(:setup
  (exists (?x - (either cellphone wall) ?h - cube_block)
    (and
      (game-optional
        (on blinds front)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?s - block)
        (then
          (hold (in_motion ?s) )
          (once (and (same_color door ?s) (in_motion desk) ) )
          (once (in_motion ?s) )
        )
      )
    )
    (forall (?x - building)
      (and
        (preference preference2
          (then
            (hold (same_color ?x floor) )
            (once (agent_holds ?x) )
            (once (on ?x ?x) )
          )
        )
        (preference preference3
          (exists (?z - block)
            (then
              (once (and (forall (?g - pillow ?g - hexagonal_bin ?s - cylindrical_block) (= 3 2) ) (touch ?x ?x) ) )
              (hold (not (in_motion ?z) ) )
              (once (and (and (and (adjacent_side ?z ?x ?x) (and (between agent desk ?z) (not (and (= 5 1) (exists (?i - (either pen) ?r - game_object) (in_motion ?z) ) ) ) ) ) (and (agent_holds green_golfball) (in_motion agent) ) (and (in ?z ?z) (< (distance agent pink_dodgeball) 8) ) ) (and (adjacent ?x ?z) (agent_holds ?x) (agent_holds desk) ) ) )
            )
          )
        )
      )
    )
    (preference preference4
      (exists (?k - hexagonal_bin)
        (then
          (once (faces ?k room_center) )
          (hold (in_motion ?k) )
          (once (in_motion ?k) )
        )
      )
    )
    (preference preference5
      (exists (?x - wall)
        (then
          (once (in_motion ?x) )
        )
      )
    )
    (preference preference6
      (exists (?h ?x - hexagonal_bin)
        (then
          (once (and (in_motion agent) (same_type ?h ?x) ) )
          (hold-while (and (agent_holds ?x) (on ?h desk) (on ?h green_golfball) ) (or (> (distance ?h ?x) (distance bed ?h)) (and (and (agent_holds ?h) (and (adjacent ?x ?h) (in ?x ?x) (< (distance ?x ?x) (distance ?x room_center)) ) (is_setup_object desk) ) (and (exists (?v - block) (agent_holds ?v) ) (in_motion ?x) ) (in ?x agent) (and (in ?x ?h) ) ) (agent_holds ?h) ) )
        )
      )
    )
    (preference preference7
      (exists (?m - hexagonal_bin)
        (at-end
          (on door ?m)
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count preference6:blue_dodgeball) (total-time) )
    (>= (* (count preference2:hexagonal_bin) (* 180 1 )
        (* (count preference1:beachball) 10 )
      )
      (count preference2:pink)
    )
    (>= (count-same-positions preference6:red) (count preference4:red) )
  )
)
(:scoring
  (count-longest preference2:hexagonal_bin:purple)
)
)(define (game game-id-701) (:domain many-objects-room-v1)
(:setup
  (exists (?j - building ?k - hexagonal_bin ?u - hexagonal_bin)
    (exists (?c - blue_cube_block ?c - shelf)
      (game-conserved
        (or
          (on green_golfball ?u)
          (touch ?u floor)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?k - dodgeball ?w - hexagonal_bin)
        (then
          (hold (faces ?w ?w) )
          (once (not (not (on ?w ?w) ) ) )
          (once (exists (?l - pillow ?k ?s - red_dodgeball) (and (same_type ?s ?k) (and (on ?w ?w) (and (agent_holds bed) (forall (?q - dodgeball) (in ?w room_center) ) ) ) ) ) )
        )
      )
    )
    (preference preference2
      (exists (?g - cube_block)
        (then
          (once (agent_holds ?g) )
          (once (in ?g ?g) )
          (hold (and (and (not (not (not (agent_holds ?g) ) ) ) (in_motion ?g) ) (agent_holds ?g) ) )
        )
      )
    )
    (preference preference3
      (exists (?f - ball ?n - dodgeball ?v - game_object ?e - hexagonal_bin)
        (then
          (once (in_motion bed) )
          (once (not (agent_holds ?e) ) )
          (hold (in_motion ?e) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ 3 5 )
    (count preference1:rug)
  )
)
(:scoring
  3
)
)(define (game game-id-702) (:domain many-objects-room-v1)
(:setup
  (exists (?u - dodgeball ?g - block)
    (and
      (exists (?i - doggie_bed ?q ?f - building)
        (forall (?l - dodgeball)
          (game-conserved
            (and
              (same_color desk ?g)
              (agent_holds ?g)
            )
          )
        )
      )
      (game-conserved
        (not
          (touch room_center ?g)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?x - hexagonal_bin ?t - cube_block)
      (and
        (preference preference1
          (exists (?u - hexagonal_bin)
            (at-end
              (not
                (or
                  (agent_holds ?u)
                  (not
                    (in_motion ?u)
                  )
                  (not
                    (not
                      (on agent ?u)
                    )
                  )
                )
              )
            )
          )
        )
        (preference preference2
          (exists (?q - dodgeball)
            (then
              (hold (agent_holds ?t) )
              (once (< (distance pink_dodgeball ?q) 1) )
              (once (same_color ?q ?q) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (< (* (count preference2:golfball:dodgeball) (- 4 )
      )
      (* (* (external-forall-maximize (* 6 9 )
          )
          (external-forall-minimize
            (count preference1:dodgeball)
          )
        )
        25
        (count preference2:yellow)
      )
    )
    (<= (count preference2:golfball) (count-once-per-objects preference1:basketball) )
    (>= (count preference1:basketball:green) 2 )
  )
)
(:scoring
  (count-once-per-objects preference2:wall:yellow)
)
)(define (game game-id-703) (:domain many-objects-room-v1)
(:setup
  (forall (?r - game_object)
    (and
      (and
        (or
          (game-conserved
            (adjacent ?r green_golfball)
          )
        )
        (forall (?z - hexagonal_bin)
          (game-optional
            (equal_z_position ?z ?z)
          )
        )
        (and
          (game-conserved
            (and
              (not
                (in_motion ?r)
              )
              (and
                (agent_holds back)
                (adjacent_side ?r door ?r ?r)
              )
            )
          )
          (game-conserved
            (in_motion ?r)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?o - golfball ?g - hexagonal_bin)
        (then
          (once (and (touch ?g ?g) (not (equal_z_position ?g ?g) ) ) )
          (once (agent_holds ?g) )
          (once (not (not (object_orientation ?g ?g) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (+ (+ (external-forall-maximize (count-once-per-objects preference1:cube_block:block) ) (count preference1) 2 (count-once-per-objects preference1:beachball) )
        8
      )
      (* (count-once-per-objects preference1:top_drawer) (and (count-once-per-objects preference1:basketball:pyramid_block) ) )
      (count preference1:red)
      (count preference1:doggie_bed)
    )
    (count-once-per-objects preference1:pink_dodgeball:blue_pyramid_block)
  )
)
(:scoring
  (* (external-forall-maximize 3 ) (count-once-per-external-objects preference1:dodgeball:blue_cube_block) )
)
)(define (game game-id-704) (:domain many-objects-room-v1)
(:setup
  (exists (?e - cube_block)
    (game-conserved
      (on ?e ?e)
    )
  )
)
(:constraints
  (and
    (forall (?l - dodgeball)
      (and
        (preference preference1
          (exists (?u - dodgeball ?o - triangular_ramp)
            (then
              (once (not (< (distance ?l ?o) 4) ) )
              (once (or (in agent ?l) (above ?l ?l) (in ?o pink_dodgeball) ) )
              (hold-while (toggled_on ?l) (on ?l ?l) (and (broken ?o) (equal_z_position ?o ?o) ) (and (not (exists (?a - hexagonal_bin) (agent_holds ?a) ) ) (object_orientation ?o ?o) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (+ (count preference1:red_pyramid_block) (count-once-per-objects preference1:dodgeball) )
  )
)
(:scoring
  (* (count preference1:pink) (count-once-per-objects preference1:beachball) (count-once-per-objects preference1:pink) (not (count preference1:blue_dodgeball) ) (- (* (count preference1:basketball) (count preference1:book:triangle_block) )
    )
    2
  )
)
)(define (game game-id-705) (:domain many-objects-room-v1)
(:setup
  (exists (?t - doggie_bed)
    (exists (?s - cube_block)
      (and
        (forall (?l - dodgeball)
          (game-conserved
            (agent_holds ?s)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?q - (either cd pencil))
        (then
          (once (in_motion ?q) )
          (hold (agent_holds ?q) )
          (hold (and (not (in_motion ?q) ) (and (agent_holds ?q) (not (not (agent_holds ?q) ) ) ) ) )
          (once (exists (?u - ball) (not (same_color ?u desk) ) ) )
          (hold (not (faces rug desk) ) )
          (once (or (on ?q ?q) ) )
        )
      )
    )
    (preference preference2
      (exists (?i - hexagonal_bin ?o - cube_block)
        (then
          (hold-while (not (or (not (in_motion ?o) ) (not (and (agent_holds desk) (agent_holds desk) ) ) (not (agent_holds ?o) ) ) ) (not (agent_crouches ) ) )
          (once (and (in ?o ?o) (game_start ) ) )
          (once (in_motion ?o) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference1:beachball:pink_dodgeball) 5 )
)
(:scoring
  (+ (count preference1:alarm_clock) (count preference1:green) )
)
)(define (game game-id-706) (:domain many-objects-room-v1)
(:setup
  (exists (?o - (either floor key_chain teddy_bear pillow) ?w - dodgeball)
    (game-conserved
      (< 1 (distance_side ?w ?w bed ?w))
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?b - block)
        (at-end
          (or
            (object_orientation ?b desk)
            (adjacent ?b ?b)
          )
        )
      )
    )
    (preference preference2
      (exists (?i - game_object)
        (then
          (once (not (in_motion ?i) ) )
          (hold (and (and (forall (?t - game_object ?f - dodgeball) (not (and (not (in_motion ?i) ) (exists (?g - hexagonal_bin) (on bed ?f) ) ) ) ) (and (in ?i ?i) (agent_holds ?i) ) (on ?i ?i) ) (agent_holds ?i) ) )
          (once (same_object ?i ?i) )
        )
      )
    )
    (preference preference3
      (exists (?a - wall ?a - doggie_bed ?e - doggie_bed)
        (then
          (once (agent_holds ?e) )
          (once (and (and (exists (?n - block ?f - blue_pyramid_block) (touch ?e ?e) ) (not (in_motion ?e) ) ) (touch ?e ?e) ) )
          (once (and (and (< (x_position ?e) 9) (agent_holds ?e) ) (agent_holds upright) ) )
          (hold (not (not (open agent) ) ) )
          (once (and (above ?e ?e) (in ?e ?e) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference1:blue_dodgeball) (* (count-overlapping preference1:red:beachball) 3 )
  )
)
(:scoring
  (external-forall-maximize
    (count preference1:orange:yellow)
  )
)
)(define (game game-id-707) (:domain few-objects-room-v1)
(:setup
  (exists (?j - dodgeball)
    (game-optional
      (agent_holds ?j)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (at-end
        (and
          (toggled_on room_center)
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (< (count-once-per-objects preference1:brown) (count-once-per-objects preference1:top_drawer:dodgeball) )
      (>= (* (count preference1:purple) 10 )
        (* (* (count preference1:dodgeball:yellow_cube_block) 3 )
          (count-once-per-objects preference1:beachball:dodgeball)
        )
      )
    )
    (< (count-total preference1:yellow:beachball) (total-time) )
  )
)
(:scoring
  50
)
)(define (game game-id-708) (:domain many-objects-room-v1)
(:setup
  (not
    (game-conserved
      (in_motion room_center)
    )
  )
)
(:constraints
  (and
    (forall (?s - teddy_bear)
      (and
        (preference preference1
          (exists (?j - game_object)
            (then
              (hold (and (or (and (on desk ?j) (not (and (same_color ?s rug) (is_setup_object ?s) (and (not (agent_holds ?s) ) (on ?s ?s) ) ) ) ) (and (exists (?q - pyramid_block ?h - doggie_bed) (< 0 (distance ?h ?j)) ) (in_motion top_shelf) ) ) (touch ?j agent) ) )
              (once-measure (in_motion ?j) (distance room_center rug) )
              (hold (in ?j bed) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:red) 5 )
)
(:scoring
  (count preference1:pink_dodgeball:side_table)
)
)(define (game game-id-709) (:domain medium-objects-room-v1)
(:setup
  (forall (?g - (either dodgeball bridge_block flat_block) ?v - (either dodgeball doggie_bed))
    (game-conserved
      (in_motion ?v)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?y - ball)
        (at-end
          (not
            (in ?y ?y)
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (* 2 (count preference1:blue_dodgeball) )
      (* (count-once-per-objects preference1:green) 5 )
    )
  )
)
(:scoring
  (count preference1:pink)
)
)(define (game game-id-710) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-optional
      (in_motion bed)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?v - chair)
        (then
          (once (agent_holds ?v) )
          (once (not (in ?v ?v) ) )
          (hold (broken ?v) )
        )
      )
    )
  )
)
(:terminal
  (> (external-forall-maximize (* (and (* (count-once-per-objects preference1:dodgeball) 180 )
        )
        (count-unique-positions preference1:purple)
        10
        2
        (count preference1:yellow)
        (count-once-per-external-objects preference1:green)
      )
    )
    (count preference1:golfball:basketball:dodgeball)
  )
)
(:scoring
  (> (count-once-per-objects preference1:pink_dodgeball) (count preference1:basketball) )
)
)(define (game game-id-711) (:domain medium-objects-room-v1)
(:setup
  (forall (?t - hexagonal_bin)
    (game-conserved
      (agent_holds ?t)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?s - blue_cube_block ?f - building)
        (then
          (once (and (agent_holds ?f) (and (agent_holds ?f) (above ?f ?f) ) (in_motion ?f) ) )
          (once (in_motion ?f) )
          (hold (not (agent_holds ?f) ) )
        )
      )
    )
    (preference preference2
      (exists (?n - doggie_bed)
        (then
          (once (on ?n ?n) )
          (once (same_color pink_dodgeball ?n) )
          (once (not (not (and (not (in ?n ?n) ) (not (in_motion ?n) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (* (* 5 (* (* (and (+ (count preference2:blue_pyramid_block) (count-once-per-objects preference1:blue_dodgeball) )
                (count preference2:blue:pink_dodgeball)
              )
              (+ (and 3 (* (count preference1) 8 5 )
                )
                (count-once preference1:beachball)
              )
              (count-once-per-external-objects preference2:side_table)
            )
            (* (external-forall-maximize 3 ) 15 )
          )
          (count preference1:beachball)
          6
        )
        (count preference1:orange)
      )
      (* (count-once-per-objects preference2:golfball) (count-once preference2:blue_cube_block) )
    )
  )
)
(:scoring
  (count preference1:dodgeball)
)
)(define (game game-id-712) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?s - game_object)
      (game-conserved
        (adjacent ?s ?s)
      )
    )
  )
)
(:constraints
  (and
    (forall (?z - dodgeball)
      (and
        (preference preference1
          (at-end
            (not
              (agent_holds ?z)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= (count-once-per-objects preference1:red) 3 )
)
(:scoring
  (count preference1:dodgeball)
)
)(define (game game-id-713) (:domain medium-objects-room-v1)
(:setup
  (forall (?h - game_object)
    (game-conserved
      (agent_holds ?h)
    )
  )
)
(:constraints
  (and
    (forall (?b - (either dodgeball dodgeball dodgeball))
      (and
        (preference preference1
          (exists (?u - chair ?m - dodgeball)
            (then
              (once (in_motion ?m) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?k - curved_wooden_ramp)
        (then
          (hold (on ?k ?k) )
          (once (not (in ?k ?k) ) )
          (once (adjacent ?k ?k) )
        )
      )
    )
    (forall (?y - watch ?z ?t - dodgeball)
      (and
        (preference preference3
          (exists (?d - block ?w - cube_block)
            (then
              (forall-sequence (?x ?o - hexagonal_bin)
                (then
                  (once (adjacent ?x ?x) )
                  (once (agent_holds side_table) )
                  (hold-while (in_motion ?w) (in agent ?w) )
                )
              )
              (once (not (and (and (on ?t ?t) (and (and (and (rug_color_under ?z ?w) ) (not (and (not (in_motion ?z) ) (adjacent ?z ?z) ) ) ) (not (in_motion ?z) ) (agent_holds ?t) ) ) (not (in pink_dodgeball ?w) ) ) ) )
              (once (adjacent_side bed ?w ?z door) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 9 (count preference2:book:pink) )
    (>= (+ (* (count-once-per-objects preference3:hexagonal_bin) (+ 3 (count-once-per-objects preference3:pink) )
        )
        8
      )
      (count-once-per-objects preference1:basketball)
    )
  )
)
(:scoring
  (+ (- (- (+ 2 9 )
      )
    )
    2
  )
)
)(define (game game-id-714) (:domain few-objects-room-v1)
(:setup
  (exists (?l - dodgeball)
    (game-conserved
      (and
        (in_motion ?l)
        (agent_holds ?l)
        (in_motion ?l)
      )
    )
  )
)
(:constraints
  (and
    (forall (?f - hexagonal_bin ?t - beachball)
      (and
        (preference preference1
          (exists (?j - shelf ?y ?x - hexagonal_bin)
            (then
              (hold-while (on ?y ?t) (< 1 1) )
              (hold (and (on ?x ?y) (in_motion desk) ) )
              (once (agent_holds ?y) )
            )
          )
        )
        (preference preference2
          (exists (?m - hexagonal_bin)
            (then
              (any)
              (once (in_motion ?t) )
              (hold (in_motion top_shelf) )
            )
          )
        )
        (preference preference3
          (exists (?a - chair)
            (at-end
              (and
                (exists (?k - building)
                  (and
                    (agent_holds agent)
                    (in_motion ?t)
                  )
                )
                (on ?a ?a)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* 7 (count-overlapping preference1) )
    100
  )
)
(:scoring
  (* 10 )
)
)(define (game game-id-715) (:domain many-objects-room-v1)
(:setup
  (exists (?q - shelf ?u - wall ?s ?t ?g ?n - hexagonal_bin)
    (exists (?o - pyramid_block ?r - (either golfball cube_block cube_block))
      (forall (?z - golfball)
        (game-conserved
          (not
            (rug_color_under ?n ?g)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?n - hexagonal_bin)
        (then
          (once (and (on desk ?n) (in ?n ?n) (rug_color_under floor agent) (not (is_setup_object back) ) ) )
          (once (adjacent ?n ?n) )
          (any)
        )
      )
    )
    (preference preference2
      (exists (?n - (either golfball book))
        (then
          (hold (above ?n ?n) )
          (once (in_motion ?n) )
          (once (< (distance upside_down ?n) (distance agent top_shelf)) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once preference2:dodgeball:yellow_cube_block) (* (+ 10 2 )
      (count-same-positions preference1:dodgeball)
    )
  )
)
(:scoring
  (count-once-per-external-objects preference2:basketball)
)
)(define (game game-id-716) (:domain few-objects-room-v1)
(:setup
  (exists (?g ?c ?v ?b ?u - curved_wooden_ramp ?e - block)
    (and
      (and
        (game-conserved
          (and
            (in_motion ?e)
          )
        )
        (game-conserved
          (game_start )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?x - dodgeball)
        (then
          (once (and (adjacent ?x ?x) (on ?x agent) ) )
          (hold-while (agent_holds ?x) (in_motion blue) (in_motion ?x) (in_motion ?x) )
          (hold-for 2 (not (not (not (and (not (in_motion ?x) ) (and (not (agent_holds ?x) ) (agent_holds ?x) (not (in_motion ?x) ) ) ) ) ) ) )
        )
      )
    )
    (forall (?h - (either teddy_bear golfball))
      (and
        (preference preference2
          (exists (?d - block ?a - curved_wooden_ramp)
            (then
              (hold-while (in_motion ?a) (on ?h ?h) (in_motion ?h) )
              (hold (in_motion rug) )
              (hold (agent_holds ?a) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (= (* (* (count preference1:doggie_bed) (count preference2:yellow_pyramid_block) )
          (count-once-per-objects preference1:orange)
        )
        (count-once preference2:basketball)
      )
      (and
        (>= 30 2 )
        (>= (count-unique-positions preference2:dodgeball) 5 )
      )
    )
  )
)
(:scoring
  (total-score)
)
)(define (game game-id-717) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?n - golfball ?n - (either alarm_clock dodgeball curved_wooden_ramp))
      (exists (?y - (either flat_block cylindrical_block) ?d - hexagonal_bin)
        (exists (?m - dodgeball ?r - teddy_bear)
          (and
            (and
              (exists (?f - hexagonal_bin ?j - wall ?q - dodgeball ?f - dodgeball)
                (game-conserved
                  (and
                    (and
                      (not
                        (agent_holds ?d)
                      )
                      (in_motion ?d)
                      (and
                        (and
                          (not
                            (adjacent ?r ?r)
                          )
                          (above ?r bed)
                        )
                        (adjacent ?f ?f)
                        (on ?f ?n)
                      )
                      (on ?d floor)
                    )
                    (in ?n pink)
                    (exists (?g ?b - game_object)
                      (not
                        (in ?f ?d)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?c - dodgeball)
        (then
          (once (and (< 1 1) (on ?c top_shelf) ) )
          (once (on room_center ?c) )
          (once (agent_holds ?c) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (total-score) 1 )
    (* 4 (or (and (* (not (* (count preference1:basketball) (count-once preference1:basketball:red) )
            )
            (* (count-once-per-objects preference1:yellow_cube_block) )
            (total-score)
            40
            0
            7
          )
        )
      )
    )
  )
)
(:scoring
  (count preference1)
)
)(define (game game-id-718) (:domain medium-objects-room-v1)
(:setup
  (forall (?t - hexagonal_bin)
    (and
      (forall (?n - drawer)
        (exists (?o - doggie_bed)
          (game-optional
            (in_motion ?t)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?i - pillow)
      (and
        (preference preference1
          (exists (?y - hexagonal_bin)
            (then
              (hold (not (adjacent ?y ?i) ) )
              (hold (not (and (in ?y agent) (agent_holds agent) ) ) )
              (once (not (and (in rug ?y) (same_type ?i ?y) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (< (* (external-forall-maximize (* (external-forall-maximize (- (> 30 (* (- (- (* 6 8 (* (count-once-per-objects preference1:yellow:dodgeball) 2 )
                        )
                      )
                    )
                    (count-once-per-objects preference1:blue_cube_block:dodgeball:beachball)
                  )
                )
              )
            )
            (+ (count preference1:green) (not (* (+ (count preference1:triangle_block:yellow) (* 4 3 )
                  )
                  (* 2 (+ (count-once-per-objects preference1:side_table) 5 3 )
                  )
                )
              )
            )
          )
        )
        (count-longest preference1:blue)
      )
      (count preference1:blue_dodgeball:purple)
    )
    (>= 0.5 (/ (count-once preference1:pink_dodgeball) (count-once preference1:purple) ) )
  )
)
(:scoring
  (total-time)
)
)(define (game game-id-719) (:domain many-objects-room-v1)
(:setup
  (forall (?m - dodgeball ?s - ball)
    (exists (?k - ball)
      (not
        (exists (?r - wall ?l - color ?c - hexagonal_bin)
          (exists (?y - chair)
            (and
              (exists (?q - game_object ?x - curved_wooden_ramp)
                (game-conserved
                  (and
                    (< 1 1)
                    (agent_crouches )
                    (not
                      (faces ?k ?s)
                    )
                    (and
                      (adjacent ?c ?k)
                      (not
                        (< (distance ?k green_golfball) 6)
                      )
                    )
                    (not
                      (and
                        (in_motion ?y)
                        (and
                          (touch ?k ?x)
                          (rug_color_under ?c ?y)
                        )
                      )
                    )
                    (agent_holds ?c)
                    (object_orientation ?x ?c)
                    (on ?c bed)
                    (not
                      (and
                        (and
                          (agent_holds pink_dodgeball)
                          (same_object door ?s)
                        )
                        (in_motion ?y)
                      )
                    )
                    (on agent rug)
                    (adjacent agent ?y)
                    (touch ?s green)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?b ?n ?t - cube_block)
        (then
          (once (and (in_motion rug) (agent_holds ?b) ) )
          (once (in_motion ?t) )
          (hold-while (in agent ?n) (not (and (exists (?g - hexagonal_bin) (agent_holds ?g) ) (and (agent_holds ?t) (agent_holds ?t) ) ) ) (and (not (rug_color_under ?b ?b) ) ) (not (and (and (faces desk ?t) (not (adjacent ?b ?b) ) (or (not (in ?t ?t) ) (agent_holds ?t) (in ?t ?n) ) (< 3 9) (in_motion ?t) (agent_holds ?n) (in_motion ?b) (not (in ?n ?n) ) (in_motion ?t) (and (and (not (on ?n ?t) ) (adjacent top_shelf ?b) ) (agent_holds ?b) ) (and (and (and (and (and (in_motion south_west_corner) (in_motion ?t) ) (= 4 0) ) (in_motion ?b) ) (in door ?b) ) ) (in ?t ?b) ) (and (not (in_motion ?n) ) (on block side_table) (not (in ?b room_center) ) (adjacent ?b ?n) ) ) ) )
          (once (not (agent_holds ?t) ) )
        )
      )
    )
    (forall (?a - hexagonal_bin)
      (and
        (preference preference2
          (exists (?l - dodgeball)
            (then
              (once (exists (?p - building) (not (touch ?p room_center) ) ) )
              (once (and (same_type ?a ?l) (rug_color_under ?l ?l) ) )
              (once (in_motion ?a) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?d - hexagonal_bin)
        (at-end
          (< (distance ?d agent) (distance ?d ?d))
        )
      )
    )
  )
)
(:terminal
  (> 10 7 )
)
(:scoring
  100
)
)(define (game game-id-720) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (= (distance room_center pink) 2)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?o - triangular_ramp)
        (then
          (hold (agent_holds ?o) )
          (once (adjacent ?o ?o) )
          (once (on upright ?o) )
        )
      )
    )
    (preference preference2
      (exists (?i ?n - hexagonal_bin ?w - doggie_bed)
        (then
          (hold (touch ?w ?w) )
          (once (not (on front ?w) ) )
        )
      )
    )
    (preference preference3
      (exists (?k - cube_block ?c - pyramid_block ?w - game_object ?v - shelf)
        (then
          (once (in_motion ?v) )
          (hold (not (and (and (and (agent_holds ?v) (in_motion ?v) ) (and (and (not (and (in_motion ?v) (in_motion ?v) (not (and (and (or (not (not (not (same_color ?v ?v) ) ) ) (in_motion ?v) ) (and (not (not (not (agent_holds ?v) ) ) ) (and (opposite ?v agent) (touch ?v floor) ) ) ) (toggled_on ?v) (and (adjacent ?v ?v) (and (not (exists (?e - blinds ?e - golfball) (broken ?v) ) ) (not (in_motion desk) ) ) (agent_holds top_shelf) (same_color agent agent) (same_type ?v bed) (adjacent ?v ?v) (< 0 4) (on ?v ?v) (touch ?v ?v) (in ?v ?v) (< 10 4) (on ?v ?v) ) ) ) ) ) (in_motion ?v) ) (and (opposite agent ?v) (exists (?g - (either laptop wall) ?o - block) (in_motion brown) ) ) ) ) (not (and (in_motion ?v) (rug_color_under ?v ?v) ) ) ) ) )
          (once (not (and (adjacent ?v ?v) (adjacent_side ?v agent ?v ?v) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-overlapping preference3:dodgeball:pink) 1 )
)
(:scoring
  6
)
)(define (game game-id-721) (:domain medium-objects-room-v1)
(:setup
  (exists (?b - (either pencil dodgeball) ?m - game_object)
    (game-optional
      (agent_holds ?m)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?s - block)
        (then
          (once-measure (in_motion ?s) (distance agent ?s) )
          (once (on ?s ?s) )
          (once (and (and (not (not (on ?s ?s) ) ) (exists (?k - curved_wooden_ramp) (agent_holds ?k) ) ) (and (and (faces ?s ?s) (in_motion ?s) ) (not (on top_shelf ?s) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference1:dodgeball:red:golfball) (- 6 )
  )
)
(:scoring
  (+ (external-forall-maximize 2 ) (count preference1:yellow_pyramid_block) 2 )
)
)(define (game game-id-722) (:domain medium-objects-room-v1)
(:setup
  (or
    (exists (?x - (either basketball))
      (game-conserved
        (in_motion agent)
      )
    )
  )
)
(:constraints
  (and
    (forall (?r - hexagonal_bin)
      (and
        (preference preference1
          (exists (?x - (either tall_cylindrical_block cd))
            (at-end
              (agent_holds pink_dodgeball)
            )
          )
        )
        (preference preference2
          (exists (?u - (either hexagonal_bin cube_block))
            (then
              (hold (touch ?u ?u) )
              (hold-while (adjacent ?u ?u) (= 1 1) )
              (once (and (in_motion ?u) (agent_crouches ) ) )
            )
          )
        )
      )
    )
    (forall (?p ?t - ball ?e - (either cube_block doggie_bed dodgeball laptop))
      (and
        (preference preference3
          (exists (?i - (either pen laptop))
            (then
              (once (on ?e ?i) )
              (once (not (agent_holds ?i) ) )
            )
          )
        )
      )
    )
    (forall (?l ?a - block ?q - doggie_bed)
      (and
        (preference preference4
          (exists (?h - pillow ?z - triangular_ramp ?p - building ?x - hexagonal_bin)
            (then
              (once (agent_holds ?x) )
              (once (agent_holds ?x) )
              (once-measure (and (not (not (in_motion agent) ) ) (not (in_motion ?q) ) ) (distance ?x ?q) )
            )
          )
        )
        (preference preference5
          (exists (?b - ball)
            (then
              (hold (agent_holds ?q) )
              (hold-while (and (or (on rug ?b) (in_motion ?q) ) (and (on ?q ?q) (touch ?q floor) ) ) (and (not (agent_holds ?q) ) (not (and (exists (?x - shelf ?f - triangular_ramp ?y - sliding_door) (not (not (exists (?m - hexagonal_bin) (agent_holds ?b) ) ) ) ) (not (touch ?q ?q) ) ) ) (or (and (in_motion ?q) (not (agent_holds ?b) ) ) (on ?q ?b) ) ) )
              (once (not (agent_holds ?q) ) )
              (once (object_orientation ?q ?q) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (count preference2:basketball) )
)
(:scoring
  3
)
)(define (game game-id-723) (:domain many-objects-room-v1)
(:setup
  (exists (?e - cylindrical_block)
    (game-conserved
      (in_motion ?e)
    )
  )
)
(:constraints
  (and
    (forall (?u - hexagonal_bin)
      (and
        (preference preference1
          (exists (?z - triangular_ramp)
            (then
              (once (adjacent ?u ?u) )
              (hold-while (not (on ?z ?u) ) (and (not (and (same_color ?u ?u) (touch ?u floor) (in ?u ?u) ) ) (= (distance ?z ?u) (distance ?u ?u)) ) )
              (once (on ?z ?z) )
            )
          )
        )
        (preference preference2
          (exists (?x - hexagonal_bin)
            (then
              (hold-while (agent_holds ?x) (in_motion ?u) )
              (once (and (agent_holds ?u) (adjacent ?x ?u) ) )
              (once (on ?x ?u) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (* (count-overlapping preference2:yellow_cube_block:cylindrical_block) 2 (- 2 )
      5
      0
      (* (count preference2:golfball) 4 )
      (count preference2:golfball)
    )
    10
  )
)
(:scoring
  2
)
)(define (game game-id-724) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (exists (?f - block ?z - dodgeball ?e - curved_wooden_ramp ?b - hexagonal_bin ?p - (either cube_block blue_cube_block beachball))
        (game-conserved
          (not
            (or
              (and
                (in_motion ?p)
              )
              (same_type ?p side_table)
            )
          )
        )
      )
    )
    (exists (?k - hexagonal_bin ?x - dodgeball ?t - hexagonal_bin)
      (and
        (forall (?k - rug)
          (exists (?d - ball)
            (exists (?s - chair ?o - dodgeball)
              (game-conserved
                (not
                  (rug_color_under ?t ?t)
                )
              )
            )
          )
        )
      )
    )
    (forall (?e - golfball)
      (exists (?w - teddy_bear ?f - dodgeball)
        (and
          (forall (?o - game_object ?q - doggie_bed)
            (or
              (forall (?n - hexagonal_bin ?r - hexagonal_bin)
                (and
                  (and
                    (exists (?n - hexagonal_bin)
                      (game-conserved
                        (open ?n)
                      )
                    )
                    (exists (?v - hexagonal_bin ?a - dodgeball)
                      (exists (?u - hexagonal_bin)
                        (exists (?m - hexagonal_bin)
                          (exists (?g - color)
                            (exists (?c - (either book) ?z - (either book yellow_cube_block))
                              (forall (?w - game_object ?j - building ?t - bridge_block)
                                (and
                                  (game-optional
                                    (agent_holds ?f)
                                  )
                                  (exists (?s - (either book pillow) ?n - curved_wooden_ramp)
                                    (and
                                      (or
                                        (exists (?s ?v - (either flat_block mug cd))
                                          (game-optional
                                            (not
                                              (in_motion ?g)
                                            )
                                          )
                                        )
                                        (game-conserved
                                          (and
                                            (not
                                              (not
                                                (exists (?k - dodgeball ?i - dodgeball)
                                                  (not
                                                    (in_motion blinds)
                                                  )
                                                )
                                              )
                                            )
                                            (in agent ?f)
                                          )
                                        )
                                      )
                                      (forall (?w - dodgeball)
                                        (game-conserved
                                          (exists (?x - red_pyramid_block)
                                            (in_motion rug)
                                          )
                                        )
                                      )
                                      (game-optional
                                        (and
                                          (adjacent ?r ?z)
                                          (on ?t room_center)
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                    (and
                      (exists (?y - beachball)
                        (game-conserved
                          (not
                            (adjacent_side ?f north_wall ?e)
                          )
                        )
                      )
                    )
                  )
                )
              )
              (exists (?h - building)
                (game-conserved
                  (and
                    (agent_crouches )
                    (not
                      (< 1 (distance ?f ?e))
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?g - dodgeball)
        (then
          (hold (same_type ?g ?g) )
          (hold (agent_holds ?g) )
          (once-measure (agent_holds ?g) (distance ?g floor) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 4 (count preference1:dodgeball) )
  )
)
(:scoring
  10
)
)(define (game game-id-725) (:domain many-objects-room-v1)
(:setup
  (and
    (game-optional
      (in_motion back)
    )
    (exists (?i ?y - cube_block)
      (game-conserved
        (and
          (in_motion ?y)
          (not
            (agent_holds ?y)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?u ?s ?b ?w ?o ?c ?p ?d ?j ?h - ball)
        (then
          (once (not (not (not (in_motion ?p) ) ) ) )
          (hold (agent_holds ?b) )
          (hold (not (not (not (adjacent ?p ?b) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (> (count-same-positions preference1:beachball) (+ (count preference1:golfball:purple) (count preference1:beachball) )
    )
  )
)
(:scoring
  (count preference1:pink)
)
)(define (game game-id-726) (:domain medium-objects-room-v1)
(:setup
  (forall (?g - desk_shelf)
    (or
      (exists (?s - red_dodgeball)
        (forall (?r ?d ?f ?w - wall)
          (or
            (and
              (exists (?h - dodgeball ?e - (either blue_cube_block))
                (game-conserved
                  (adjacent_side rug ?w ?e)
                )
              )
            )
            (game-conserved
              (forall (?v - pillow)
                (in_motion ?g)
              )
            )
            (exists (?u - building)
              (not
                (exists (?a ?l - red_dodgeball)
                  (and
                    (game-conserved
                      (not
                        (> (distance ?d ?a) 9)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
      (forall (?l - tall_cylindrical_block)
        (and
          (and
            (game-optional
              (= 1 (distance ?l ?g))
            )
            (forall (?m - doggie_bed ?s - green_triangular_ramp)
              (and
                (and
                  (and
                    (forall (?r - block ?t - hexagonal_bin)
                      (and
                        (game-optional
                          (game_start )
                        )
                      )
                    )
                    (exists (?j - pillow ?d - building)
                      (game-conserved
                        (and
                          (on ?l ?s)
                          (and
                            (and
                              (on ?d agent)
                              (in_motion ?l)
                            )
                            (in ?g ?d)
                          )
                        )
                      )
                    )
                    (exists (?c - cube_block ?u - game_object)
                      (forall (?z - hexagonal_bin)
                        (and
                          (game-conserved
                            (and
                              (in_motion ?z)
                              (not
                                (and
                                  (adjacent ?g ?u)
                                  (not
                                    (in ?s ?u)
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                  (and
                    (forall (?x - game_object)
                      (exists (?d - game_object)
                        (forall (?p - (either golfball) ?t - hexagonal_bin)
                          (and
                            (exists (?c - cube_block)
                              (and
                                (game-conserved
                                  (touch block desk)
                                )
                                (forall (?r - building ?w - hexagonal_bin)
                                  (game-optional
                                    (in_motion ?x)
                                  )
                                )
                                (game-conserved
                                  (not
                                    (in_motion ?x)
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                    (exists (?p - hexagonal_bin)
                      (exists (?f - dodgeball)
                        (and
                          (game-conserved
                            (and
                              (and
                                (in ?f ?f)
                              )
                              (not
                                (in_motion ?p)
                              )
                              (and
                                (in_motion ?f)
                                (adjacent_side ?f ?g ?f)
                              )
                            )
                          )
                          (exists (?v - hexagonal_bin)
                            (and
                              (forall (?r - hexagonal_bin)
                                (exists (?w - (either golfball beachball))
                                  (or
                                    (not
                                      (not
                                        (game-conserved
                                          (not
                                            (and
                                              (agent_holds pink)
                                              (in ?l ?v)
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                              (game-conserved
                                (not
                                  (in_motion ?l)
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
          (game-optional
            (and
              (agent_holds ?g)
              (in ?l ?l)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?v - dodgeball)
      (and
        (preference preference1
          (exists (?b - dodgeball ?i ?p - game_object)
            (then
              (once (agent_holds ?i) )
              (hold (agent_holds ?v) )
              (once (in bed ?v) )
            )
          )
        )
        (preference preference2
          (exists (?h - building)
            (then
              (once (< (distance ?h front) (distance ?v ?h)) )
              (once (agent_holds ?h) )
              (once (on blue ?h) )
            )
          )
        )
        (preference preference3
          (exists (?s - ball ?s - chair)
            (then
              (once (in ?s ?v) )
              (hold (agent_holds ?v) )
              (once (in_motion ?v) )
            )
          )
        )
      )
    )
    (preference preference4
      (exists (?z - hexagonal_bin)
        (then
          (once (on ?z room_center) )
          (once (adjacent ?z ?z) )
          (once (not (agent_holds ?z) ) )
        )
      )
    )
    (preference preference5
      (exists (?p - block)
        (at-end
          (adjacent ?p ?p)
        )
      )
    )
    (forall (?a - red_dodgeball)
      (and
        (preference preference6
          (exists (?x - hexagonal_bin ?p - doggie_bed)
            (then
              (once (agent_holds ?p) )
              (hold (exists (?c - (either pyramid_block cube_block) ?e - shelf ?d - ball) (game_start ) ) )
              (once (and (and (not (and (in_motion ?p) (game_over ) ) ) (agent_holds ?a) (< 1 1) ) (or (same_color ?a ?p) (same_color agent ?a) ) ) )
              (once (in_motion ?a) )
              (hold (and (in_motion ?a) (agent_holds ?a) (not (not (in_motion ?p) ) ) (not (agent_holds ?a) ) (and (in_motion ?a) (above ?p ?p) (in_motion agent) (not (open block) ) ) (and (in ?p ?p) (not (and (and (exists (?v - game_object) (same_type ?v ?v) ) (toggled_on ?p) ) (on ?p ?p) ) ) ) ) )
            )
          )
        )
        (preference preference7
          (exists (?i - ball)
            (at-end
              (in_motion ?a)
            )
          )
        )
        (preference preference8
          (exists (?h - dodgeball)
            (then
              (hold (not (not (touch ?h ?h) ) ) )
              (once (and (forall (?f - building) (not (in_motion ?a) ) ) (not (agent_holds desk) ) ) )
              (hold (not (in ?h agent) ) )
            )
          )
        )
      )
    )
    (preference preference9
      (exists (?w - hexagonal_bin ?e - book ?b - hexagonal_bin)
        (then
          (hold (not (in_motion ?b) ) )
          (once (and (and (in ?b back) (<= (distance ?b ?b) 1) ) (< (distance ?b ?b) 1) ) )
          (hold (in_motion ?b) )
        )
      )
    )
    (forall (?e - triangular_ramp)
      (and
        (preference preference10
          (exists (?a - (either alarm_clock cylindrical_block) ?v - desktop)
            (at-end
              (on ?e ?e)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 5 7 )
)
(:scoring
  (count preference3:dodgeball)
)
)(define (game game-id-727) (:domain few-objects-room-v1)
(:setup
  (forall (?j - (either key_chain bed dodgeball))
    (forall (?m - shelf)
      (or
        (forall (?a - dodgeball)
          (exists (?w - (either dodgeball pyramid_block cellphone))
            (exists (?f - doggie_bed)
              (forall (?i - (either alarm_clock game_object triangular_ramp))
                (forall (?v - drawer)
                  (game-conserved
                    (in ?v agent)
                  )
                )
              )
            )
          )
        )
        (and
          (exists (?q - (either tall_cylindrical_block curved_wooden_ramp))
            (exists (?n - cube_block)
              (and
                (game-conserved
                  (not
                    (same_color ?m ?n)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?u - ball)
      (and
        (preference preference1
          (exists (?s - hexagonal_bin)
            (then
              (once (rug_color_under ?u brown) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (= (count preference1:dodgeball) 10 )
)
(:scoring
  3
)
)(define (game game-id-728) (:domain many-objects-room-v1)
(:setup
  (or
    (exists (?a - dodgeball)
      (game-conserved
        (exists (?w ?j - game_object)
          (on room_center ?j)
        )
      )
    )
    (exists (?k - curved_wooden_ramp ?y - (either desktop))
      (exists (?t ?h ?o ?x - hexagonal_bin)
        (forall (?e - dodgeball ?n - (either tall_cylindrical_block alarm_clock))
          (game-conserved
            (< 1 (x_position ?y))
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?f - hexagonal_bin)
        (then
          (once (not (agent_holds ?f) ) )
          (once (in_motion ?f) )
          (once (is_setup_object ?f) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-once-per-objects preference1:green) 3 )
    (>= (<= (* (* (count-once-per-objects preference1:yellow) (count preference1:cube_block:tan) )
          (* 8 (* 50 (+ (* 3 (* (+ 2 (+ (* 5 (* (count preference1:doggie_bed:pyramid_block:pink) 2 )
                        )
                        (count-overlapping preference1)
                      )
                    )
                    (count preference1:basketball)
                  )
                )
                (count-once preference1:basketball)
              )
              (+ (- (= (* 9 (+ (count-once-per-objects preference1:dodgeball) (count preference1:yellow) )
                    )
                    (* 18 3 (+ (count preference1:purple:pyramid_block) (count-once-per-objects preference1:blue) )
                    )
                  )
                )
                9
              )
            )
          )
        )
        (count-once-per-objects preference1:block)
      )
      (* (count-once-per-objects preference1:green) (count-once-per-objects preference1:pyramid_block) )
    )
  )
)
(:scoring
  (* (* (count preference1:hexagonal_bin) 1 )
  )
)
)(define (game game-id-729) (:domain medium-objects-room-v1)
(:setup
  (forall (?i - curved_wooden_ramp ?d - building ?q - hexagonal_bin)
    (exists (?d ?c ?g - doggie_bed)
      (game-optional
        (not
          (agent_holds ?d)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?u - (either bed dodgeball dodgeball))
      (and
        (preference preference1
          (exists (?k - (either pencil wall) ?b - ball)
            (then
              (hold (in ?u ?b) )
              (once (opposite ?b rug) )
            )
          )
        )
        (preference preference2
          (exists (?i - ball)
            (then
              (once (and (on ?i desk) (and (and (on ?i ?i) (same_color ?u ?i) ) (and (and (agent_holds ?u) (in ?u desk) (exists (?y - hexagonal_bin) (not (= 1 (distance rug ?y)) ) ) (in_motion sideways) ) (= 2 (distance agent ?i)) ) ) ) )
              (once (on ?u ?u) )
              (hold (not (on agent ?u) ) )
            )
          )
        )
        (preference preference3
          (exists (?p ?x ?y - building ?b - chair)
            (then
              (once (agent_holds ?u) )
              (once (not (in_motion ?b) ) )
              (once (same_type ?u ?u) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* (count preference3) (total-score) )
      (count-once-per-objects preference1:pink)
    )
    (>= (* (count preference1:basketball) (* (count preference1:red_pyramid_block) (count preference2:pink_dodgeball) )
      )
      (external-forall-minimize
        (+ 10 2 )
      )
    )
    (>= 2 4 )
  )
)
(:scoring
  (count preference3:pink)
)
)(define (game game-id-730) (:domain medium-objects-room-v1)
(:setup
  (exists (?g - (either desktop top_drawer) ?a - hexagonal_bin)
    (game-conserved
      (in_motion ?a)
    )
  )
)
(:constraints
  (and
    (forall (?r - hexagonal_bin)
      (and
        (preference preference1
          (exists (?n - dodgeball ?m - shelf)
            (then
              (once (agent_holds ?m) )
              (hold-while (in_motion desk) (in ?m ?m) )
              (hold (on ?r ?r) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:pink) (count preference1:dodgeball:beachball) )
)
(:scoring
  (total-time)
)
)(define (game game-id-731) (:domain medium-objects-room-v1)
(:setup
  (exists (?l - hexagonal_bin ?h - block)
    (game-optional
      (in_motion agent)
    )
  )
)
(:constraints
  (and
    (forall (?l - curved_wooden_ramp)
      (and
        (preference preference1
          (exists (?u ?f - flat_block)
            (then
              (hold-to-end (adjacent ?f ?f) )
              (once (not (in_motion ?l) ) )
              (hold (or (not (and (agent_holds ?l) (on ?l door) ) ) ) )
            )
          )
        )
        (preference preference2
          (exists (?w - ball)
            (then
              (once (adjacent bed ?w) )
              (once (not (touch ?l desk) ) )
              (hold (not (in_motion ?w) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> 30 (count-once-per-external-objects preference2:beachball:top_drawer) )
)
(:scoring
  (count-overlapping preference2:dodgeball:golfball:green)
)
)(define (game game-id-732) (:domain medium-objects-room-v1)
(:setup
  (exists (?b - (either game_object cd) ?s - (either cd blue_cube_block))
    (not
      (exists (?o - (either golfball golfball))
        (exists (?a - (either yellow_cube_block pyramid_block))
          (game-optional
            (< 1 (distance ?s ?a))
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?k - (either cellphone desktop dodgeball) ?l - hexagonal_bin)
        (then
          (once (adjacent ?l ?l) )
          (once (not (same_color door ?l) ) )
          (forall-sequence (?j - (either cylindrical_block cube_block))
            (then
              (once (adjacent ?l agent) )
              (once (not (agent_holds ?j) ) )
              (once (and (and (exists (?i - curved_wooden_ramp) (agent_holds ?l) ) (not (agent_holds ?j) ) ) (adjacent agent ?j) (not (agent_holds brown) ) (and (not (in_motion pink_dodgeball) ) ) ) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?n - red_dodgeball)
        (then
          (once (on ?n ?n) )
          (hold (and (in_motion ?n) (not (agent_holds ?n) ) ) )
          (once (touch bed side_table) )
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (or
        (or
          (or
            (> (< (count-once preference1:pink_dodgeball) (total-time) )
              (count preference2:dodgeball)
            )
            (>= (count-once-per-objects preference2:cube_block) 3 )
          )
          (>= (* (count-increasing-measure preference2:dodgeball:dodgeball) (count-once preference2:beachball) )
            (* 2 (count-overlapping preference1:yellow_cube_block:doggie_bed) )
          )
        )
        (<= (count preference2:hexagonal_bin:pink_dodgeball) (count-same-positions preference1) )
      )
      (>= (+ (count-once preference1:dodgeball) (+ (count-once preference2:blue_pyramid_block) (count preference2:white) )
        )
        (count preference2:basketball)
      )
    )
  )
)
(:scoring
  25
)
)(define (game game-id-733) (:domain many-objects-room-v1)
(:setup
  (forall (?f - ball)
    (game-optional
      (in ?f ?f)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?r - teddy_bear)
        (then
          (once (in ?r ?r) )
          (hold (and (in_motion ?r) (not (opposite ?r ?r) ) ) )
          (once (not (agent_holds ?r) ) )
        )
      )
    )
  )
)
(:terminal
  (> (+ (+ (> (>= 50 180 )
          (* 100 (* (count-same-positions preference1) )
            2
            (- (count-once-per-external-objects preference1:white:hexagonal_bin) )
          )
        )
        (count preference1:green)
      )
      (count-once-per-objects preference1:beachball:pink)
    )
    (or
      2
      (count-once-per-objects preference1:dodgeball)
      (+ 18 1 (count preference1:beachball) (count-once-per-objects preference1:pyramid_block) 5 (count preference1:yellow) (or (count preference1:beachball) (+ (* (* (count-same-positions preference1:hexagonal_bin) (count-once-per-objects preference1:green:purple) (* (count preference1:basketball:pink_dodgeball) (* (count preference1:dodgeball) (total-score) (count-once-per-objects preference1:yellow) 30 (* (count preference1:doggie_bed:dodgeball:beachball) )
                    (* (count-unique-positions preference1:dodgeball:alarm_clock:basketball) (= (count preference1:golfball) (count-once-per-objects preference1:doggie_bed:pink_dodgeball) )
                    )
                  )
                )
                (* 3 3 )
                (* 2 (count-once-per-objects preference1:alarm_clock) )
                (* (count preference1:rug) (count-same-positions preference1) )
              )
              5
            )
            2
          )
          (count-once-per-objects preference1:yellow)
        )
        (* 5 (* (- (count-once-per-objects preference1:yellow) )
            (+ (count preference1:beachball) 20 )
          )
        )
        (* 3 (count preference1:purple:golfball) (* 2 (+ (count preference1:beachball:dodgeball) 3 )
          )
          (count preference1:yellow)
        )
      )
    )
  )
)
(:scoring
  4
)
)(define (game game-id-734) (:domain few-objects-room-v1)
(:setup
  (exists (?p - cube_block)
    (game-optional
      (agent_holds ?p)
    )
  )
)
(:constraints
  (and
    (forall (?z - color)
      (and
        (preference preference1
          (exists (?x - (either pencil pyramid_block dodgeball desktop ball dodgeball bridge_block) ?v - chair)
            (then
              (once (in ?v ?v) )
              (once (faces ?z ?z) )
              (once (in ?v ?z) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?j - ball)
        (then
          (once (in_motion ?j) )
          (hold (not (above ?j ?j) ) )
          (once (and (and (in blue ?j) (and (exists (?f - wall ?r - (either golfball curved_wooden_ramp cylindrical_block cellphone golfball basketball watch)) (not (not (> 6 1) ) ) ) (not (not (object_orientation ?j ?j) ) ) (in_motion ?j) (not (game_over ) ) (rug_color_under ?j ?j) (agent_holds agent) (and (and (not (agent_holds ?j) ) (agent_holds east_sliding_door) ) (and (in_motion bed) (exists (?i - building) (not (on bed ?i) ) ) ) ) ) (agent_holds bed) ) (and (in_motion ?j) (same_color floor ?j) ) ) )
        )
      )
    )
    (forall (?f - teddy_bear)
      (and
        (preference preference3
          (exists (?l - color ?o - cylindrical_block ?j - (either dodgeball dodgeball golfball book blue_cube_block pen pen))
            (then
              (once (and (agent_holds ?f) (and (in_motion ?f) (on ?f ?j) (not (object_orientation door ?j) ) ) (not (game_over ) ) ) )
              (hold (adjacent ?f front) )
              (once (in_motion ?j) )
            )
          )
        )
        (preference preference4
          (exists (?q - ball)
            (then
              (once (in_motion front) )
              (hold (not (and (not (not (agent_holds ?q) ) ) (in_motion ?f) ) ) )
              (hold (agent_holds ?q) )
            )
          )
        )
        (preference preference5
          (exists (?r ?b - hexagonal_bin)
            (then
              (once (and (touch ?f ?b) (on ?r agent) ) )
              (once (agent_holds ?f) )
              (once (in_motion desk) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (and
      (>= (count-once-per-objects preference2:yellow_pyramid_block) 1 )
    )
  )
)
(:scoring
  3
)
)(define (game game-id-735) (:domain few-objects-room-v1)
(:setup
  (exists (?r - hexagonal_bin)
    (and
      (game-optional
        (and
          (and
            (or
              (in_motion ?r)
              (< (distance ?r ?r) 1)
            )
            (in_motion rug)
          )
          (not
            (in_motion ?r)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?e ?g ?i ?d - hexagonal_bin)
        (then
          (hold (and (and (same_type ?e bed) (< 1 (distance ?e ?d)) ) (adjacent ?d ?d) ) )
          (hold (agent_crouches ) )
          (once (between ?g ?d ?i) )
        )
      )
    )
    (preference preference2
      (exists (?s - game_object)
        (at-end
          (and
            (and
              (in_motion ?s)
              (< (distance upright drawer) (distance_side blue ?s ?s ?s))
            )
            (not
              (agent_holds ?s)
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?w - beachball ?g - game_object ?q ?h ?e ?r - (either golfball dodgeball dodgeball) ?l - curved_wooden_ramp)
        (then
          (once (exists (?g - doggie_bed) (not (and (in ?l ?l) (agent_holds ?g) ) ) ) )
          (once (and (and (on ?l ?l) (or (exists (?j - doggie_bed) (not (in ?j agent) ) ) (and (and (on ?l ?l) (touch bed agent) ) (< (distance ?l ?l) (distance_side desk ?l ?l)) ) ) ) (forall (?y - wall) (not (not (agent_holds ?y) ) ) ) ) )
          (once (game_over ) )
        )
      )
    )
    (preference preference4
      (exists (?k - building)
        (then
          (once (agent_holds ?k) )
          (hold (not (not (agent_holds ?k) ) ) )
          (once (not (not (touch rug ?k) ) ) )
          (once (broken ?k) )
        )
      )
    )
    (preference preference5
      (exists (?m - building)
        (then
          (hold (not (agent_holds floor) ) )
          (once (on ?m ?m) )
          (hold (in_motion upright) )
        )
      )
    )
    (preference preference6
      (exists (?q - block ?y - block)
        (then
          (once (opposite ?y ?y) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference6:bed) 8 )
)
(:scoring
  4
)
)(define (game game-id-736) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (in_motion front)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?z - (either dodgeball dodgeball))
        (at-end
          (agent_holds agent)
        )
      )
    )
    (preference preference2
      (exists (?m - game_object ?t - teddy_bear)
        (then
          (hold (agent_holds agent) )
          (once (in ?t ?t) )
          (hold (in_motion rug) )
        )
      )
    )
  )
)
(:terminal
  (> 3 3 )
)
(:scoring
  2
)
)(define (game game-id-737) (:domain many-objects-room-v1)
(:setup
  (forall (?q - hexagonal_bin ?r - doggie_bed)
    (game-conserved
      (on ?r ?r)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?a - curved_wooden_ramp)
        (then
          (once (not (not (not (not (on front_left_corner ?a) ) ) ) ) )
          (hold (agent_holds ?a) )
          (hold (and (and (in_motion pillow) (agent_holds ?a) ) (in_motion ?a) (and (and (object_orientation ?a upright) (adjacent ?a ?a) ) (adjacent ?a ?a) ) ) )
          (hold (in_motion front) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (count-increasing-measure preference1:tall_cylindrical_block) )
)
(:scoring
  (count-once-per-objects preference1:pink)
)
)(define (game game-id-738) (:domain medium-objects-room-v1)
(:setup
  (forall (?h - teddy_bear ?p - dodgeball)
    (game-conserved
      (not
        (= (distance ?p ?p) (distance_side ?p floor ?p))
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?u - dodgeball)
        (then
          (once (agent_holds agent) )
          (hold (not (same_color ?u ?u) ) )
          (hold (agent_holds ?u) )
        )
      )
    )
    (preference preference2
      (exists (?q - pyramid_block)
        (then
          (hold (> 2 5) )
          (once (agent_holds ?q) )
          (once (not (not (and (in_motion ?q) (same_type floor ?q) (open floor) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (and
        (>= 2 (* 6 )
        )
        (or
          (>= 300 (count-longest preference2:dodgeball) )
          (or
            (< 3 2 )
          )
          (> (* 1 (count-increasing-measure preference2:green) (* (+ (count-total preference2:beachball) (* (count-once-per-objects preference1:red_pyramid_block) (count preference1:bed) )
                  300
                )
                3
              )
            )
            2
          )
        )
      )
    )
  )
)
(:scoring
  (count-once-per-objects preference1:yellow:dodgeball)
)
)(define (game game-id-739) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (forall (?u - teddy_bear ?o - game_object)
      (exists (?r - flat_block)
        (in_motion ?o)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?a - (either cellphone floor))
        (at-end
          (on ?a ?a)
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (count-once-per-objects preference1:hexagonal_bin) (* 1 (count-once preference1:purple) (count preference1:dodgeball) )
      )
      (or
        (>= 8 10 )
        (>= (* (= (count preference1:basketball:dodgeball) (count-once-per-objects preference1:doggie_bed) )
          )
          25
        )
      )
    )
  )
)
(:scoring
  (* (< 1 (count preference1) )
    (+ (count preference1:alarm_clock) (count-once-per-objects preference1:dodgeball:pink) )
  )
)
)(define (game game-id-740) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?j - game_object)
      (game-conserved
        (and
          (not
            (not
              (in_motion agent)
            )
          )
          (above ?j ?j)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - hexagonal_bin)
      (and
        (preference preference1
          (exists (?j - dodgeball ?u - (either golfball chair))
            (then
              (once (in_motion ?d) )
              (hold-while (not (agent_holds ?u) ) (between ?d ?u ?u) )
              (once (not (and (< 2 1) (not (agent_holds ?u) ) (on ?u ?d) (and (and (on bed ?u) (not (not (not (< 1 3) ) ) ) ) (adjacent agent ?u) ) ) ) )
            )
          )
        )
        (preference preference2
          (exists (?m - ball)
            (then
              (once (> (distance ?m ?m) 9) )
              (once (exists (?q - hexagonal_bin ?j - hexagonal_bin ?x - dodgeball) (on ?x ?m) ) )
              (hold-while (exists (?j - chair) (same_type ?d ?m) ) (touch top_shelf ?m) (on ?d bed) )
            )
          )
        )
      )
    )
    (forall (?p - doggie_bed)
      (and
        (preference preference3
          (exists (?x - (either cellphone book))
            (then
              (once (same_color pink_dodgeball ?x) )
              (hold-while (on ?p ?p) (> 1 (distance ?x ?p)) )
              (once (in_motion ?p) )
            )
          )
        )
        (preference preference4
          (exists (?w - dodgeball)
            (then
              (hold (on ?w ?w) )
              (hold (opposite ?w room_center) )
              (hold (< 1 (distance ?p ?p)) )
            )
          )
        )
      )
    )
    (forall (?t - (either golfball basketball cd blue_cube_block dodgeball dodgeball cube_block))
      (and
        (preference preference5
          (exists (?v - hexagonal_bin)
            (then
              (once (and (and (not (and (faces desk ?t) (adjacent ?v agent) (and (not (agent_holds ?t) ) (adjacent desk ?v) ) ) ) (not (and (not (in_motion top_drawer) ) (in_motion ?v) ) ) ) (not (adjacent ?v ?v) ) (on desk ?t) ) )
              (hold-while (and (agent_holds ?v) (agent_holds ?t) (in_motion agent) ) (exists (?h - hexagonal_bin ?p - beachball ?g - dodgeball) (and (< 9 (distance door ?t)) (game_start ) (and (in_motion ?v) (in ?g ?t) ) ) ) )
              (hold (not (and (on pink_dodgeball desktop) (in_motion ?t) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* (* (count preference2:yellow:dodgeball) )
        (count preference2:golfball)
        5
      )
      10
    )
    (or
      (>= (count preference5:basketball:beachball) (* 10 )
      )
      (>= (count preference5:bed) (count preference5:dodgeball) )
    )
    (>= (* (- (* (* 1 (* (* (external-forall-maximize (count preference4:pink) ) (count preference2:blue_pyramid_block) )
                (total-time)
              )
            )
            (count preference3:beachball)
          )
        )
        9
      )
      (count-once-per-objects preference2:beachball)
    )
  )
)
(:scoring
  (* (count-once-per-objects preference5:red) (count preference1:dodgeball) )
)
)(define (game game-id-741) (:domain medium-objects-room-v1)
(:setup
  (exists (?x - (either desktop key_chain))
    (forall (?z - hexagonal_bin)
      (game-conserved
        (in agent ?z)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?y - dodgeball)
        (then
          (once (not (agent_holds agent) ) )
          (once (agent_holds ?y) )
        )
      )
    )
    (preference preference2
      (exists (?w - bridge_block)
        (then
          (once (in_motion ?w) )
          (once (in_motion ?w) )
          (once (faces ?w ?w) )
        )
      )
    )
    (forall (?y - wall ?l - wall)
      (and
        (preference preference3
          (exists (?j - dodgeball)
            (then
              (once (and (not (in_motion ?j) ) (> (building_size ?j) (distance ?j agent)) ) )
              (hold-for 7 (and (agent_holds ?l) (and (in room_center ?j) (and (agent_holds ?j) (not (in_motion pillow) ) (between agent ?l ?j) (exists (?b - hexagonal_bin ?i - building ?s - block ?q - green_triangular_ramp ?o ?t ?u - triangular_ramp) (in_motion ?o) ) ) ) ) )
              (once (and (not (not (not (not (= (distance ?l ?l) (distance ?l ?j)) ) ) ) ) (exists (?x - sliding_door) (not (not (not (and (on ?j ?x) (in_motion rug) ) ) ) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 0 (count-shortest preference1:dodgeball:pink) )
)
(:scoring
  (total-score)
)
)(define (game game-id-742) (:domain many-objects-room-v1)
(:setup
  (forall (?x ?c - hexagonal_bin ?y - (either laptop key_chain))
    (game-optional
      (touch ?y ?y)
    )
  )
)
(:constraints
  (and
    (forall (?f - hexagonal_bin)
      (and
        (preference preference1
          (exists (?a - hexagonal_bin ?j - dodgeball)
            (then
              (once (agent_holds ?j) )
              (hold-while (in_motion floor) (in east_sliding_door ?f) )
              (once (and (not (equal_z_position ?f side_table) ) (in_motion ?f) ) )
            )
          )
        )
      )
    )
    (forall (?v - block)
      (and
        (preference preference2
          (exists (?a - dodgeball ?o - pillow)
            (then
              (hold (not (not (forall (?f - hexagonal_bin ?n - triangular_ramp ?s - hexagonal_bin ?u - pyramid_block) (< (distance ?o ?u) 7) ) ) ) )
              (hold (and (and (and (in_motion ?o) (in_motion ?o) ) (agent_holds ?o) ) (not (in_motion ?o) ) ) )
              (forall-sequence (?z - (either pencil key_chain))
                (then
                  (hold-while (and (agent_holds bed) (in_motion ?v) (and (and (in ?z desk) (not (in_motion ?o) ) ) (not (agent_crouches ) ) ) ) (or (and (not (and (agent_holds ?z) (same_color ?o ?v) ) ) (not (agent_holds ?o) ) ) (not (in_motion agent) ) ) )
                  (once-measure (adjacent ?v ?z) (distance_side ?v ?v ?z) )
                  (once (< 1 1) )
                  (once (exists (?a - (either desktop)) (and (= 2 (distance ?v ?z)) (in_motion ?a) ) ) )
                )
              )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?n - dodgeball)
        (then
          (hold-while (agent_holds ?n) (adjacent ?n ?n) )
          (once (agent_holds ?n) )
          (hold-while (<= 1 (distance ?n bed)) (in_motion ?n) )
        )
      )
    )
    (preference preference4
      (exists (?d - hexagonal_bin)
        (then
          (once (in_motion ?d) )
          (hold (> 6 9) )
          (hold (adjacent agent ?d) )
        )
      )
    )
    (forall (?b ?z ?s ?h ?u ?q - teddy_bear ?w - hexagonal_bin)
      (and
        (preference preference5
          (exists (?d - chair ?i - (either pyramid_block tall_cylindrical_block) ?a - hexagonal_bin)
            (then
              (hold (in_motion ?w) )
              (once (in_motion floor) )
              (once (not (broken agent) ) )
            )
          )
        )
      )
    )
    (preference preference6
      (exists (?n - dodgeball)
        (then
          (once (and (not (and (in ?n bed) (agent_holds ?n) (or (and (in_motion ?n) (not (agent_holds ?n) ) (>= 1 (distance agent ?n)) (exists (?w - block) (and (and (faces ?n ?n) (and (on ?n ?w) (not (and (in_motion ?w) (in_motion ?n) ) ) ) (on desk ?n) ) (not (in_motion ?w) ) ) ) (exists (?z - chair ?r - hexagonal_bin ?s - chair) (not (and (in_motion ?s) (not (not (not (not (and (agent_holds ?s) ) ) ) ) ) (in_motion ?n) ) ) ) (is_setup_object ?n) ) (in_motion ?n) ) ) ) (exists (?p - hexagonal_bin) (in ?n ?p) ) ) )
          (once (in_motion ?n) )
          (once (exists (?y - hexagonal_bin ?i - dodgeball) (agent_holds ?n) ) )
          (once (on ?n ?n) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference4:hexagonal_bin:beachball) (* 15 7 )
  )
)
(:scoring
  (* (and 10 (* (+ (count-overlapping preference2:doggie_bed) (count-increasing-measure preference5:block) )
        (count-once preference2:basketball:purple)
      )
      2
    )
    (* (* (count-once-per-external-objects preference2:dodgeball) 10 )
      (total-score)
    )
    (* (count-overlapping preference1:blue_dodgeball) (- (<= (count preference1:basketball:pink) (* 6 (count preference1:orange) )
        )
      )
    )
    (count-once preference6:yellow:dodgeball:blue_dodgeball)
    (count preference6:red)
    (count preference4:green)
  )
)
)(define (game game-id-743) (:domain few-objects-room-v1)
(:setup
  (not
    (and
      (and
        (and
          (exists (?n - beachball ?b - doggie_bed ?x - dodgeball)
            (exists (?n - drawer ?o - dodgeball ?p - hexagonal_bin ?w - (either alarm_clock curved_wooden_ramp floor))
              (exists (?d - cylindrical_block ?v - dodgeball ?v - building)
                (game-conserved
                  (not
                    (in ?x ?v)
                  )
                )
              )
            )
          )
          (and
            (game-conserved
              (not
                (opposite floor agent)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - chair ?s - block)
      (and
        (preference preference1
          (exists (?z - cube_block ?n - building)
            (then
              (once (and (on ?n upright) (in_motion ?s) ) )
              (once (touch agent ?s) )
              (hold (not (touch ?s ?s) ) )
            )
          )
        )
        (preference preference2
          (exists (?g - hexagonal_bin)
            (then
              (once (agent_holds ?s) )
              (once (agent_holds ?g) )
              (hold (agent_holds desk) )
              (hold (on room_center rug) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> 3 (count preference1:golfball) )
)
(:scoring
  (count-same-positions preference1:yellow)
)
)(define (game game-id-744) (:domain few-objects-room-v1)
(:setup
  (exists (?y - (either rug))
    (and
      (exists (?r - ball ?h - ball)
        (exists (?b - cylindrical_block)
          (and
            (forall (?f - cube_block ?q - cube_block)
              (game-conserved
                (in_motion ?q)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?p - ball ?y - hexagonal_bin)
      (and
        (preference preference1
          (exists (?m - hexagonal_bin ?a - hexagonal_bin)
            (at-end
              (on ?y ?a)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (external-forall-maximize (count-shortest preference1:pink_dodgeball:red) ) (count preference1:green:green) )
)
(:scoring
  (* 1 2 )
)
)(define (game game-id-745) (:domain few-objects-room-v1)
(:setup
  (exists (?f - game_object)
    (or
      (or
        (forall (?z - game_object ?t - block ?b - hexagonal_bin)
          (and
            (exists (?p - game_object)
              (and
                (exists (?m - ball ?i - dodgeball ?s - pyramid_block)
                  (game-conserved
                    (not
                      (agent_holds agent)
                    )
                  )
                )
              )
            )
          )
        )
        (game-conserved
          (adjacent ?f ?f)
        )
      )
      (game-conserved
        (on ?f agent)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?f - game_object)
        (then
          (once (in_motion ?f) )
          (hold-while (and (adjacent ?f ?f) (in_motion ?f) ) (in_motion ?f) )
          (once (and (and (or (and (and (or (agent_holds ?f) (touch ?f ?f) ) (not (in_motion ?f) ) ) (and (object_orientation ?f back) (is_setup_object floor) ) (= (distance agent ?f) (distance ?f ?f)) ) (and (< (distance green_golfball ?f) (distance ?f ?f)) (in_motion ?f) ) ) (and (above agent ?f) (agent_holds ?f) ) (above ?f ?f) (and (in_motion ?f) (agent_holds ?f) ) ) (on bed ?f) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (* 5 (count preference1:pink_dodgeball) )
      (and
        (+ (count preference1:golfball) (* (= (* (count-same-positions preference1:golfball) (count-once preference1:yellow) )
              (external-forall-maximize
                (count preference1:beachball)
              )
              (count preference1:golfball)
            )
            (+ (count-once-per-objects preference1:red) 0 )
          )
        )
        3
      )
    )
  )
)
(:scoring
  2
)
)(define (game game-id-746) (:domain many-objects-room-v1)
(:setup
  (forall (?z - hexagonal_bin)
    (game-conserved
      (and
        (and
          (not
            (agent_holds ?z)
          )
          (above ?z ?z)
        )
        (and
          (agent_holds top_shelf)
          (exists (?e - ball)
            (on rug ?e)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?m - block ?x - hexagonal_bin ?g - hexagonal_bin)
        (then
          (once (adjacent ?g ?g) )
          (once (< 1 1) )
        )
      )
    )
    (preference preference2
      (exists (?v - dodgeball ?c - cylindrical_block)
        (at-end
          (and
            (not
              (agent_holds ?c)
            )
            (in_motion ?c)
          )
        )
      )
    )
  )
)
(:terminal
  (>= (- (count preference2:red:purple) )
    2
  )
)
(:scoring
  10
)
)(define (game game-id-747) (:domain few-objects-room-v1)
(:setup
  (exists (?f - building)
    (game-conserved
      (agent_holds ?f)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?m - cube_block ?b - cylindrical_block)
        (then
          (once (and (adjacent_side ?b rug ?b rug) (and (not (touch ?b rug) ) (not (not (not (in_motion ?b) ) ) ) ) (not (and (on desk pink) (not (and (>= 1 1) (on ?b ?b) ) ) (in ?b ?b) ) ) ) )
          (once (same_color ?b ?b) )
          (once (in_motion ?b) )
        )
      )
    )
    (preference preference2
      (exists (?d - teddy_bear ?f - (either doggie_bed teddy_bear) ?q - hexagonal_bin)
        (at-end
          (and
            (and
              (not
                (agent_holds ?q)
              )
            )
            (rug_color_under ?q ?q)
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference2:beachball:purple) 2 )
)
(:scoring
  5
)
)(define (game game-id-748) (:domain medium-objects-room-v1)
(:setup
  (forall (?i - hexagonal_bin ?n - desktop ?z - hexagonal_bin)
    (forall (?v - drawer)
      (or
        (and
          (and
            (game-conserved
              (and
                (not
                  (< (distance ?z bed) (distance ?z ?z))
                )
                (exists (?i - block ?j - building)
                  (and
                    (not
                      (not
                        (agent_holds pink)
                      )
                    )
                    (not
                      (object_orientation ?j ?v)
                    )
                  )
                )
              )
            )
            (game-conserved
              (and
                (exists (?a - pillow)
                  (in ?v ?v)
                )
                (in_motion ?v)
              )
            )
            (exists (?m - ball ?w - game_object)
              (exists (?f - bridge_block)
                (game-conserved
                  (in_motion ?w)
                )
              )
            )
          )
          (game-conserved
            (and
              (not
                (not
                  (agent_holds ?z)
                )
              )
              (or
                (in_motion ?v)
                (in_motion ?z)
              )
            )
          )
          (exists (?i - cube_block ?k ?w - (either cellphone book))
            (or
              (exists (?s - dodgeball)
                (and
                  (game-conserved
                    (and
                      (faces ?v ?k)
                      (and
                        (agent_holds room_center)
                        (in_motion ?v)
                      )
                    )
                  )
                )
              )
              (forall (?e - tall_cylindrical_block ?s - hexagonal_bin)
                (game-conserved
                  (not
                    (in_motion ?w)
                  )
                )
              )
            )
          )
        )
        (exists (?e - (either pencil pencil))
          (game-conserved
            (is_setup_object ?z)
          )
        )
        (exists (?f - game_object ?i ?p - ball)
          (and
            (forall (?j - block ?a - doggie_bed)
              (and
                (exists (?f - hexagonal_bin)
                  (game-conserved
                    (adjacent ?v ?z)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?q - dodgeball)
      (and
        (preference preference1
          (exists (?x - curved_wooden_ramp ?n - hexagonal_bin)
            (then
              (once (not (agent_holds ?q) ) )
              (once (same_object ?n ?n) )
              (hold-while (same_object ?q ?n) (in_motion ?q) )
            )
          )
        )
        (preference preference2
          (exists (?y - hexagonal_bin)
            (then
              (once (and (not (on ?q ?q) ) (on ?y ?y) (in ?q ?q) ) )
              (hold (= (distance agent room_center) (distance_side ?y ?q ?q bed) (distance_side pillow ?y ?q) (distance agent ?q)) )
              (hold (and (on ?q ?y) (not (agent_holds ?q) ) (agent_holds ?q) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 2 4 )
)
(:scoring
  (count-same-positions preference2:book)
)
)(define (game game-id-749) (:domain medium-objects-room-v1)
(:setup
  (forall (?l - dodgeball)
    (and
      (game-conserved
        (not
          (agent_holds ?l)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?o - doggie_bed)
        (then
          (hold (in ?o ?o) )
          (once (agent_holds ?o) )
          (once (in_motion ?o) )
        )
      )
    )
  )
)
(:terminal
  (>= 5 40 )
)
(:scoring
  (* 3 (+ 30 (count preference1:basketball) )
  )
)
)(define (game game-id-750) (:domain medium-objects-room-v1)
(:setup
  (exists (?b - hexagonal_bin)
    (forall (?g - curved_wooden_ramp ?u - ball)
      (and
        (and
          (game-optional
            (agent_holds ?b)
          )
          (game-conserved
            (not
              (object_orientation ?u ?b)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?s - (either credit_card laptop) ?q - beachball)
        (then
          (hold-while (faces ?q ?q) (in_motion ?q) (agent_holds ?q) )
          (once (and (on front bed) (adjacent ?q ?q) (agent_holds ?q) ) )
          (hold-while (in ?q ?q) (on ?q ?q) )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (* (* (* 0 (count-measure preference1:green) )
        (<= (+ 2 (* (count-once-per-external-objects preference1:dodgeball) 5 )
          )
          3
        )
        (count preference1)
        (count-once-per-objects preference1:tall_cylindrical_block:dodgeball)
      )
      (count preference1:green)
    )
  )
)
(:scoring
  (count preference1:golfball)
)
)(define (game game-id-751) (:domain few-objects-room-v1)
(:setup
  (forall (?t - dodgeball ?u - game_object)
    (exists (?g - triangular_ramp ?f - building ?v - ball)
      (forall (?b - hexagonal_bin ?n - teddy_bear ?b - hexagonal_bin)
        (game-conserved
          (not
            (on ?v ?b)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?v - ball ?t - hexagonal_bin)
        (at-end
          (in_motion bed)
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-once-per-objects preference1:blue_dodgeball) (count preference1:pink_dodgeball) )
    (or
      (>= 2 (count-once-per-objects preference1:golfball) )
    )
  )
)
(:scoring
  (count-measure preference1:side_table)
)
)(define (game game-id-752) (:domain medium-objects-room-v1)
(:setup
  (forall (?v - hexagonal_bin)
    (and
      (exists (?e - hexagonal_bin)
        (game-conserved
          (on ?e ?e)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c - dodgeball ?f - color)
      (and
        (preference preference1
          (exists (?t - (either tall_cylindrical_block cellphone))
            (at-end
              (agent_holds agent)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (count preference1) )
)
(:scoring
  (external-forall-minimize
    3
  )
)
)(define (game game-id-753) (:domain few-objects-room-v1)
(:setup
  (forall (?o - hexagonal_bin)
    (game-conserved
      (in_motion ?o)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?c - block ?f - pillow)
        (at-end
          (on ?f ?f)
        )
      )
    )
    (preference preference2
      (exists (?b - hexagonal_bin ?n - triangular_ramp)
        (then
          (hold-to-end (agent_holds ?n) )
          (once (not (adjacent ?n ?n) ) )
          (once (agent_holds ?n) )
        )
      )
    )
  )
)
(:terminal
  (>= (and (count-once-per-external-objects preference1:book) 10 (count-once preference1:orange) ) 7 )
)
(:scoring
  1
)
)(define (game game-id-754) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?j - hexagonal_bin)
      (exists (?n - hexagonal_bin ?r ?g ?a ?u ?v ?i ?k ?z ?c ?p - curved_wooden_ramp)
        (exists (?t - triangular_ramp)
          (exists (?e - hexagonal_bin)
            (and
              (forall (?x ?h - (either blue_cube_block ball floor dodgeball))
                (exists (?l - ball ?w - dodgeball)
                  (exists (?d - building)
                    (and
                      (game-conserved
                        (touch sideways ?c)
                      )
                    )
                  )
                )
              )
              (exists (?n - yellow_pyramid_block)
                (and
                  (exists (?y - shelf)
                    (not
                      (game-optional
                        (and
                          (and
                            (or
                              (and
                                (same_color ?v ?n)
                                (agent_holds ?y)
                              )
                              (and
                                (agent_holds ?p)
                                (in ?n ?g)
                              )
                              (and
                                (adjacent ?j ?p)
                                (in brown ?y)
                              )
                            )
                            (in ?n ?y)
                            (and
                              (not
                                (and
                                  (on ?i ?z)
                                  (and
                                    (not
                                      (agent_holds ?i)
                                    )
                                    (and
                                      (not
                                        (not
                                          (and
                                            (rug_color_under ?g ?j)
                                            (not
                                              (agent_holds ?n)
                                            )
                                          )
                                        )
                                      )
                                      (agent_holds agent)
                                    )
                                  )
                                )
                              )
                              (not
                                (on ?j ?v)
                              )
                            )
                            (< 2 1)
                          )
                          (< 3 (distance ?n ?p))
                          (and
                            (broken ?v)
                            (and
                              (on ?e ?z)
                              (forall (?q - game_object)
                                (agent_holds room_center)
                              )
                              (between ?i ?g desk)
                            )
                          )
                        )
                      )
                    )
                  )
                  (exists (?o - cube_block)
                    (forall (?d - game_object)
                      (exists (?x - building ?w - shelf)
                        (exists (?s - hexagonal_bin)
                          (game-optional
                            (agent_holds ?j)
                          )
                        )
                      )
                    )
                  )
                  (forall (?y - hexagonal_bin ?s - building)
                    (game-conserved
                      (same_type ?c ?i)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?k - hexagonal_bin)
        (at-end
          (and
            (faces ?k rug)
            (in_motion ?k)
          )
        )
      )
    )
    (preference preference2
      (exists (?n - (either desktop desktop hexagonal_bin))
        (then
          (once (agent_holds ?n) )
          (once-measure (and (exists (?p - hexagonal_bin) (not (not (agent_holds ?n) ) ) ) (not (< 7 0.5) ) (not (not (not (and (and (and (in_motion ?n) (and (and (on ?n ?n) (not (not (not (not (and (and (agent_holds ?n) (not (not (agent_holds ?n) ) ) ) (agent_holds ?n) (in_motion agent) (not (agent_holds ?n) ) (same_color back pink_dodgeball) (on ?n ?n) ) ) ) ) ) ) (agent_holds ?n) ) ) (in ?n ?n) ) (in ?n ?n) ) ) ) ) ) (distance desk ?n) )
          (hold-while (in_motion ?n) (on agent ?n) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (and (count-once-per-objects preference1:golfball) (count preference1:pink) ) 3 )
    (and
      (and
        (>= (+ 15 (count preference2) )
          (count-once preference1:basketball)
        )
        (< (count-unique-positions preference1:pyramid_block) (count-shortest preference2:beachball:pink_dodgeball) )
      )
    )
  )
)
(:scoring
  (external-forall-minimize
    2
  )
)
)(define (game game-id-755) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (exists (?z - building ?q - (either pillow laptop dodgeball))
      (exists (?t - game_object)
        (broken ?q)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?y - hexagonal_bin)
        (then
          (once (and (in_motion ?y) (in_motion bed) ) )
          (hold-while (and (or (rug_color_under ?y ?y) (touch ?y ?y) ) (and (and (and (not (and (between ?y desk ?y) (not (agent_holds ?y) ) ) ) (same_color agent desk) ) (agent_holds ?y) ) (not (and (agent_holds ?y) (same_color desk room_center) ) ) ) ) (not (exists (?d - (either pen bridge_block teddy_bear) ?n - (either yellow_cube_block cube_block)) (agent_holds desk) ) ) )
          (hold (agent_holds ?y) )
        )
      )
    )
    (preference preference2
      (exists (?t - chair)
        (then
          (once (and (in_motion ?t) (agent_holds ?t) ) )
          (hold (in_motion ?t) )
          (hold (not (<= (distance_side agent ?t ?t) 6) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 5 9 )
)
(:scoring
  1
)
)(define (game game-id-756) (:domain medium-objects-room-v1)
(:setup
  (exists (?w - dodgeball ?y - hexagonal_bin)
    (and
      (game-conserved
        (agent_holds ?y)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?v - building)
        (then
          (once (not (not (agent_holds ?v) ) ) )
          (once (and (in_motion ?v) (in_motion ?v) ) )
          (hold (adjacent_side ?v ?v ?v) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (count preference1:dodgeball:dodgeball) (count-once-per-objects preference1:dodgeball:dodgeball) )
    2
  )
)
(:scoring
  (- (count preference1:hexagonal_bin:basketball) )
)
)(define (game game-id-757) (:domain many-objects-room-v1)
(:setup
  (exists (?e - hexagonal_bin)
    (exists (?b ?m - teddy_bear)
      (and
        (exists (?w - bridge_block)
          (game-conserved
            (not
              (or
                (adjacent desk ?m)
                (exists (?f - building)
                  (in ?m ?m)
                )
                (or
                  (or
                    (in_motion agent)
                    (agent_holds bed)
                  )
                  (in_motion front)
                )
                (<= (building_size ?w) 1)
              )
            )
          )
        )
        (exists (?s - hexagonal_bin)
          (game-optional
            (and
              (in_motion ?e)
              (exists (?p - (either cylindrical_block pyramid_block))
                (on ?e ?m)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?x - wall)
        (at-end
          (agent_holds back)
        )
      )
    )
    (preference preference2
      (exists (?n - ball ?x - cube_block)
        (then
          (once (agent_holds yellow) )
          (once (agent_holds ?x) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-once preference1:orange) 15 )
  )
)
(:scoring
  180
)
)(define (game game-id-758) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds left)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?v - dodgeball)
        (at-end
          (not
            (and
              (on agent ?v)
              (agent_holds desk)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 1 (count preference1:hexagonal_bin) )
)
(:scoring
  (* (* 9 3 )
    8
  )
)
)(define (game game-id-759) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (game_over )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?d - block)
        (then
          (once (on ?d ?d) )
          (once (in ?d ?d) )
          (once (not (in_motion ?d) ) )
        )
      )
    )
    (forall (?z - beachball)
      (and
        (preference preference2
          (exists (?l - hexagonal_bin)
            (then
              (hold (is_setup_object ?z) )
              (once (and (on ?z ?l) (in_motion ?z) (not (same_color ?l ?l) ) ) )
              (hold (is_setup_object ?l) )
            )
          )
        )
      )
    )
    (forall (?l - hexagonal_bin)
      (and
        (preference preference3
          (then
            (hold (in ?l ?l) )
            (once (agent_holds ?l) )
          )
        )
        (preference preference4
          (exists (?w - hexagonal_bin ?r ?d ?w ?j ?q ?e - (either cube_block pyramid_block))
            (at-end
              (on room_center ?d)
            )
          )
        )
      )
    )
    (forall (?d - teddy_bear ?i - game_object)
      (and
        (preference preference5
          (exists (?z - drawer ?g - tan_cube_block ?c - bridge_block ?m ?y - curved_wooden_ramp)
            (then
              (once (= 1 3) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (count preference2:hexagonal_bin:dodgeball:yellow) 1 )
)
(:scoring
  (count preference2:hexagonal_bin)
)
)(define (game game-id-760) (:domain medium-objects-room-v1)
(:setup
  (forall (?i ?x ?m - flat_block)
    (game-conserved
      (= 1 (distance ?m ?i))
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?n - hexagonal_bin ?u - dodgeball)
        (then
          (once (in_motion ?u) )
          (once (and (touch ?u ?u) (forall (?p - hexagonal_bin) (not (adjacent_side ?u ?u room_center) ) ) (and (and (in_motion ?u) (game_start ) ) (and (in_motion ?u) (not (not (agent_holds ?u) ) ) ) ) ) )
          (hold (exists (?j - teddy_bear) (same_type ?j ?u) ) )
        )
      )
    )
    (preference preference2
      (exists (?i - teddy_bear)
        (then
          (once (= (distance ?i agent) 7 1) )
          (once (and (in_motion ?i) (and (not (game_over ) ) (adjacent ?i ?i) ) ) )
          (once (and (is_setup_object ?i) (not (touch ?i ?i) ) ) )
          (hold (and (not (and (on ?i ?i) (agent_holds agent) ) ) (> 1 2) ) )
        )
      )
    )
  )
)
(:terminal
  (<= (count preference2:pink) (* (count-once-per-objects preference1:blue_dodgeball) (* (* (count-once-per-objects preference1:basketball) (total-score) )
        (+ (total-score) (count-once-per-objects preference1:dodgeball) )
        15
      )
    )
  )
)
(:scoring
  (external-forall-minimize
    (count preference2:beachball)
  )
)
)(define (game game-id-761) (:domain few-objects-room-v1)
(:setup
  (exists (?b - hexagonal_bin)
    (game-conserved
      (or
        (forall (?x - (either golfball dodgeball dodgeball doggie_bed book) ?p - (either dodgeball cube_block blue_cube_block))
          (< (distance desk ?p) (x_position rug))
        )
        (touch ?b ?b)
      )
    )
  )
)
(:constraints
  (and
    (forall (?s - hexagonal_bin ?n - flat_block)
      (and
        (preference preference1
          (exists (?j - dodgeball ?d - (either wall golfball))
            (at-end
              (same_type ?d agent)
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?v - shelf)
        (at-end
          (not
            (agent_holds agent)
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (+ (total-score) 10 (+ (* (* (or 2 4 (count preference2:beachball) ) (* (count preference1:yellow) 2 )
              )
              (count-once-per-objects preference2:blue_dodgeball:beachball)
              (* (* 3 (> (- (count-once-per-objects preference1:blue_pyramid_block:golfball) )
                    5
                  )
                )
                5
              )
            )
            5
          )
          10
          (* (* (count-once-per-objects preference2) (* 5 (+ 2 (count-once-per-objects preference1:basketball) )
              )
            )
            8
          )
          (count preference1:alarm_clock)
        )
        2
      )
      (>= (external-forall-maximize (count-once-per-objects preference2:wall:dodgeball) ) 3 )
    )
    (>= 3 (count preference1:yellow_cube_block:beachball) )
  )
)
(:scoring
  4
)
)(define (game game-id-762) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (exists (?n - block)
      (and
        (agent_holds ?n)
        (in ?n ?n)
      )
    )
  )
)
(:constraints
  (and
    (forall (?v - chair)
      (and
        (preference preference1
          (exists (?i - color ?o ?u ?l - ball)
            (then
              (once (and (agent_holds ?l) (in_motion ?u) ) )
              (hold-while (and (on desk bed) (in_motion ?v) (adjacent_side agent ?u ?l) ) (agent_holds ?u) (not (in ?v ?v) ) )
              (hold-while (in_motion agent) (not (not (not (and (not (on ?u ?l) ) (and (not (in_motion ?u) ) (in_motion rug) (agent_holds ?u) ) ) ) ) ) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?y - cube_block ?y - hexagonal_bin)
        (then
          (once (and (and (exists (?s - bridge_block) (not (on ?s ?y) ) ) (and (adjacent ?y ?y) ) (not (and (not (in ?y ?y) ) (in back ?y) ) ) (in_motion ?y) ) (exists (?d - cylindrical_block ?w - dodgeball ?p - doggie_bed ?m - dodgeball) (agent_holds ?y) ) ) )
          (hold-while (not (adjacent ?y ?y) ) (on ?y ?y) )
          (once (not (exists (?i ?l ?b - game_object) (and (object_orientation ?y ?l) (and (same_color ?l ?b) (in_motion ?i) (and (not (and (toggled_on floor) (not (exists (?p - color) (in_motion ?b) ) ) ) ) (not (exists (?v - doggie_bed ?f - curved_wooden_ramp) (not (and (not (not (in_motion ?i) ) ) (rug_color_under top_shelf room_center) (agent_holds ?i) ) ) ) ) ) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 4 20 )
)
(:scoring
  (* 0 (* (* 4 (count preference1:basketball) (count-once-per-objects preference1:yellow_cube_block) )
      3
    )
  )
)
)(define (game game-id-763) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (game-conserved
        (in_motion bed)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?r - doggie_bed ?n - hexagonal_bin)
        (then
          (once (not (> (distance ?n ?n) 1) ) )
          (once (broken ?n) )
          (hold-to-end (agent_holds door) )
        )
      )
    )
    (preference preference2
      (exists (?f ?y ?e ?p - hexagonal_bin)
        (then
          (hold-for 4 (and (< 1 (distance ?f ?f)) (on ?f ?f) ) )
          (hold-while (not (not (same_type ?y ?p) ) ) (not (and (not (not (not (and (agent_holds ?e) (and (agent_holds ?y) (adjacent ?e ?e) ) ) ) ) ) (and (agent_holds ?f) (in_motion ?y) ) ) ) )
          (once (exists (?n - (either pink bridge_block bed) ?z - hexagonal_bin) (on ?e ?y) ) )
        )
      )
    )
  )
)
(:terminal
  (< 5 10 )
)
(:scoring
  2
)
)(define (game game-id-764) (:domain few-objects-room-v1)
(:setup
  (forall (?x - yellow_cube_block ?p - dodgeball ?v - hexagonal_bin ?p - wall)
    (exists (?f - red_dodgeball)
      (exists (?k - drawer)
        (game-conserved
          (forall (?l - hexagonal_bin ?q - dodgeball)
            (not
              (not
                (on desk ?k)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?v - hexagonal_bin)
        (at-end
          (in_motion ?v)
        )
      )
    )
  )
)
(:terminal
  (>= 1 5 )
)
(:scoring
  (count preference1:book)
)
)(define (game game-id-765) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (in_motion front_left_corner)
  )
)
(:constraints
  (and
    (forall (?y - shelf)
      (and
        (preference preference1
          (then
            (any)
            (once (agent_holds ?y) )
            (hold (not (in_motion ?y) ) )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count preference1:pink:cube_block) (* (* (- (count-once-per-objects preference1:blue_pyramid_block) )
          5
        )
        (count-total preference1:hexagonal_bin:red)
      )
    )
  )
)
(:scoring
  (* (count preference1:pink_dodgeball) (* (+ (* (count preference1:tall_cylindrical_block) 5 )
        (= (count preference1:green:hexagonal_bin) (* (count-once preference1:beachball) (total-score) )
        )
      )
      (count preference1:dodgeball)
    )
    3
    10
    (count preference1:basketball:yellow)
  )
)
)(define (game game-id-766) (:domain medium-objects-room-v1)
(:setup
  (exists (?n - dodgeball)
    (exists (?b - chair ?v - dodgeball)
      (game-conserved
        (in_motion ?v)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?w - teddy_bear)
        (then
          (hold-while (in_motion ?w) (agent_holds ?w) )
          (hold (and (in_motion ?w) (not (agent_holds ?w) ) ) )
          (once (in ?w ?w) )
        )
      )
    )
    (preference preference2
      (exists (?e - wall ?e - (either cd dodgeball))
        (then
          (once (agent_holds ?e) )
          (hold (not (not (not (and (and (not (and (not (and (adjacent ?e ?e) (and (exists (?w - (either key_chain hexagonal_bin cube_block) ?a - chair) (toggled_on ?e) ) (and (exists (?t - triangular_ramp ?o - hexagonal_bin) (and (not (not (on ?o ?e) ) ) (< (distance desk room_center) (distance ?o ?e)) ) ) (same_type ?e ?e) (not (and (in ?e ?e) (in_motion ?e) (and (faces ?e ?e) (same_object ?e ?e) ) ) ) ) ) ) ) (agent_holds ?e) ) ) (and (and (not (< 6 (distance ?e ?e)) ) (and (and (in ?e room_center) (not (not (and (in_motion ?e) (not (agent_holds agent) ) ) ) ) ) (in ?e desk) ) ) (in ?e ?e) ) ) (in_motion ?e) (in_motion ?e) ) ) ) ) )
          (once (agent_holds bed) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (* 10 5 )
      5
    )
  )
)
(:scoring
  (+ 10 (count preference1:orange) )
)
)(define (game game-id-767) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (agent_holds desk)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?t - building)
        (then
          (hold-for 4 (agent_holds ?t) )
          (hold (in_motion ?t) )
          (once (exists (?l ?y - dodgeball) (and (and (in_motion ?t) (forall (?x - shelf ?q - (either curved_wooden_ramp pyramid_block hexagonal_bin)) (< 1 (distance sideways ?l)) ) ) (agent_holds ?l) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:hexagonal_bin) (count-once-per-objects preference1:cube_block) )
)
(:scoring
  (count preference1:hexagonal_bin)
)
)(define (game game-id-768) (:domain medium-objects-room-v1)
(:setup
  (exists (?t - color ?v - (either dodgeball watch))
    (game-conserved
      (in block ?v)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?i - building ?g - ball)
        (then
          (once (between ?g ?g ?g) )
          (once (not (adjacent bed ?g) ) )
          (once (agent_holds ?g) )
        )
      )
    )
    (preference preference2
      (exists (?y - hexagonal_bin)
        (then
          (hold (in_motion ?y) )
          (once (same_object ?y ?y) )
          (once (in ?y ?y) )
        )
      )
    )
    (preference preference3
      (exists (?r - game_object)
        (at-end
          (in_motion desk)
        )
      )
    )
  )
)
(:terminal
  (>= 2 1 )
)
(:scoring
  0
)
)(define (game game-id-769) (:domain medium-objects-room-v1)
(:setup
  (exists (?u - building)
    (game-conserved
      (or
        (and
          (forall (?j - dodgeball)
            (adjacent_side ?u ?j ?j)
          )
          (> (distance ?u ?u) (distance agent agent))
        )
        (and
          (open ?u)
          (not
            (not
              (and
                (open ?u)
                (not
                  (not
                    (not
                      (in_motion ?u)
                    )
                  )
                )
              )
            )
          )
        )
        (opposite ?u ?u)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?x - hexagonal_bin)
        (at-end
          (and
            (in_motion ?x)
            (agent_holds ?x)
            (not
              (on ?x desk)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count-once preference1:pink) 3 )
    (+ 5 5 (total-time) )
  )
)
(:scoring
  (< (* (count-once-per-objects preference1) (count preference1:yellow_pyramid_block) )
    (count preference1:red)
  )
)
)(define (game game-id-770) (:domain few-objects-room-v1)
(:setup
  (exists (?x - dodgeball ?h - hexagonal_bin)
    (and
      (game-conserved
        (and
          (not
            (agent_holds agent)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?n - teddy_bear)
        (then
          (once (and (and (not (is_setup_object ?n) ) (and (exists (?g - red_pyramid_block ?y - doggie_bed) (faces ?y ?n) ) (agent_holds ?n) (in_motion ?n) ) ) (not (on ?n ?n) ) ) )
          (hold (agent_holds desk) )
          (once (not (adjacent_side ?n bed pink_dodgeball) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (>= (count preference1:bed) 4 )
      (>= 3 (>= (count preference1:pink) (count-once-per-objects preference1:yellow_cube_block) )
      )
      (>= 7 6 )
    )
  )
)
(:scoring
  (* 3 (- (* (* (total-score) 2 )
        (* (* (* (count-shortest preference1:dodgeball) (count-same-positions preference1:dodgeball) )
            (* 5 6 )
            (count-once-per-external-objects preference1:pink)
            3
            18
            1
          )
          (+ (count-measure preference1:pink_dodgeball) (* (* (* 5 30 )
                (count preference1:dodgeball)
              )
              (count preference1:red_pyramid_block)
              10
            )
          )
        )
      )
    )
  )
)
)(define (game game-id-771) (:domain medium-objects-room-v1)
(:setup
  (exists (?f - ball ?w - dodgeball)
    (exists (?o - ball)
      (game-conserved
        (in_motion ?o)
      )
    )
  )
)
(:constraints
  (and
    (forall (?f - dodgeball)
      (and
        (preference preference1
          (exists (?b ?u ?p - cylindrical_block)
            (at-end
              (agent_holds ?u)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (= 15 1 )
      (count preference1:alarm_clock)
    )
    (>= 50 (count-measure preference1:purple) )
  )
)
(:scoring
  (+ (count preference1:dodgeball) 3 (* (* 1 (count-once preference1:yellow) )
      (count-once preference1:dodgeball)
      (* 10 (count-once-per-objects preference1:doggie_bed) )
    )
    (count preference1:green:dodgeball)
  )
)
)(define (game game-id-772) (:domain many-objects-room-v1)
(:setup
  (exists (?t - wall)
    (forall (?s - hexagonal_bin)
      (game-optional
        (exists (?j - hexagonal_bin)
          (adjacent ?s ?j)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?o - hexagonal_bin)
        (then
          (once (on upright ?o) )
          (once (in_motion ?o) )
          (hold-while (in_motion ?o) (not (same_type ?o top_shelf) ) )
          (once (and (in_motion ?o) (not (agent_holds ?o) ) (not (on green_golfball ?o) ) ) )
          (once (in_motion ?o) )
        )
      )
    )
    (preference preference2
      (exists (?l ?p - hexagonal_bin)
        (then
          (hold (and (touch ?p ?l) (on ?l ?l) (in_motion ?p) ) )
          (hold (on ?p ?p) )
          (once (and (and (in_motion front_left_corner) (<= 2 (distance ?l bed)) ) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (> 3 (count preference1:hexagonal_bin) )
      (or
        (or
          (or
            (>= 2 (count-once-per-objects preference1:hexagonal_bin) )
            (not
              (not
                (< 5 7 )
              )
            )
          )
          (>= 1 (* (* 6 )
              (count preference2:blue_pyramid_block)
            )
          )
        )
        (>= (+ (count preference2:pink) (count preference2:hexagonal_bin:beachball:basketball) )
          (total-score)
        )
        (>= (count-once-per-objects preference1:hexagonal_bin) 20 )
      )
      (or
        (>= (* (count-once-per-external-objects preference2:hexagonal_bin) )
          (count preference1:blue)
        )
      )
    )
  )
)
(:scoring
  (count preference1:basketball)
)
)(define (game game-id-773) (:domain few-objects-room-v1)
(:setup
  (forall (?z - (either chair))
    (and
      (exists (?b - game_object)
        (exists (?d - hexagonal_bin ?a - (either laptop laptop))
          (exists (?r - hexagonal_bin ?o - ball)
            (forall (?s - block ?m ?w ?r ?y ?c ?e - red_dodgeball)
              (game-conserved
                (agent_holds ?a)
              )
            )
          )
        )
      )
      (forall (?m - shelf)
        (forall (?p - game_object)
          (game-optional
            (not
              (in_motion desk)
            )
          )
        )
      )
      (or
        (exists (?y - hexagonal_bin)
          (exists (?h ?v ?k ?m - ball)
            (game-conserved
              (above ?y ?y)
            )
          )
        )
        (game-optional
          (in_motion ?z)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?n - ball ?i - (either cube_block triangle_block))
        (then
          (hold (agent_holds blinds) )
          (once (and (agent_holds ?i) (in_motion ?i) (not (in_motion ?i) ) (and (on top_shelf agent) (in_motion ?i) ) ) )
          (hold (in ?i ?i) )
          (once (and (and (adjacent ?i upright) (on upright floor) (agent_holds ?i) ) (not (in ?i ?i) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:pink) (count preference1:book) )
)
(:scoring
  (count-same-positions preference1:basketball)
)
)(define (game game-id-774) (:domain medium-objects-room-v1)
(:setup
  (not
    (forall (?x - game_object)
      (game-conserved
        (on ?x east_sliding_door)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?j - hexagonal_bin ?v - (either cylindrical_block doggie_bed))
        (then
          (hold (< 1 (distance_side ?v ?v ?v)) )
          (hold (agent_holds ?v) )
          (hold (agent_holds ?v) )
        )
      )
    )
    (forall (?i - hexagonal_bin)
      (and
        (preference preference2
          (exists (?r ?m - (either dodgeball pillow dodgeball))
            (then
              (hold (not (not (object_orientation ?r ?m) ) ) )
              (once (between ?r ?m rug) )
              (once (in ?r ?r) )
            )
          )
        )
        (preference preference3
          (exists (?r - (either pyramid_block game_object) ?n - doggie_bed)
            (then
              (hold-while (and (agent_holds bed) (in_motion agent) (same_color ?i ?n) ) (not (<= (distance pink ?n) (distance bed ?n)) ) )
              (once (in_motion ?n) )
              (once (agent_holds ?i) )
            )
          )
        )
      )
    )
    (forall (?w - block)
      (and
        (preference preference4
          (exists (?y - block)
            (then
              (once (agent_holds ?y) )
              (once (< 0.5 1) )
              (hold (not (and (and (and (and (< (x_position ?w) (distance ?y ?w)) (not (agent_holds ?y) ) (adjacent floor ?y) (>= 3 1) (agent_holds ?y) ) (in ?y ?y) ) (in right ?w) ) (and (not (in_motion ?w) ) (not (in_motion bed) ) (exists (?o - hexagonal_bin) (agent_holds upright) ) ) ) ) )
            )
          )
        )
        (preference preference5
          (exists (?j - color ?n - hexagonal_bin)
            (then
              (hold (on ?n ?n) )
              (once (not (in_motion ?n) ) )
              (hold (not (not (in_motion ?n) ) ) )
            )
          )
        )
        (preference preference6
          (at-end
            (and
              (in ?w ?w)
              (game_over )
              (agent_holds ?w)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= (count preference6:hexagonal_bin) (* (+ (count-once-per-external-objects preference4:pink) (* (count-once-per-objects preference6:golfball) 10 )
      )
      (* (count-once preference5:pink_dodgeball) (+ (* (+ (count preference3:basketball) 6 (* (- 30 )
                (count preference6:pink_dodgeball:pink)
              )
            )
            2
          )
          (count-once preference3:golfball:beachball)
        )
      )
    )
  )
)
(:scoring
  (count preference1:green)
)
)(define (game game-id-775) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (not
      (game_start )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?s - color ?b - wall)
        (then
          (hold (on ?b ?b) )
          (once (not (equal_z_position ?b ?b) ) )
          (once (not (adjacent ?b ?b) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count preference1:red) (* 5 (/ 30 (count-once-per-objects preference1:beachball) ) )
    )
    (count preference1)
  )
)
(:scoring
  5
)
)(define (game game-id-776) (:domain many-objects-room-v1)
(:setup
  (exists (?n - hexagonal_bin)
    (and
      (forall (?b - ball)
        (and
          (and
            (and
              (game-conserved
                (in ?b ?b)
              )
              (game-conserved
                (not
                  (not
                    (and
                      (touch ?b ?n)
                      (not
                        (forall (?f - hexagonal_bin)
                          (agent_holds ?n)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?j - desktop ?n - (either pyramid_block main_light_switch doggie_bed))
        (then
          (hold (and (not (not (> (distance ?n bed) 1) ) ) (and (not (in_motion ?n) ) (agent_holds ?n) ) (agent_holds ?n) (not (not (or (in bed ?n) (on ?n ?n) ) ) ) (and (not (in_motion ?n) ) (and (in ?n ?n) (same_color ?n ?n) ) ) (not (or (agent_holds ?n) (adjacent ?n ?n) ) ) ) )
          (once (and (agent_holds ?n) (in_motion desk) (not (and (adjacent ?n front) (in desk ?n) ) ) ) )
          (once (agent_holds ?n) )
        )
      )
    )
  )
)
(:terminal
  (> 2 (count preference1:blue_dodgeball) )
)
(:scoring
  (>= (* (count preference1:hexagonal_bin) (+ 3 6 )
    )
    8
  )
)
)(define (game game-id-777) (:domain few-objects-room-v1)
(:setup
  (forall (?f - hexagonal_bin)
    (and
      (or
        (and
          (game-conserved
            (agent_holds ?f)
          )
          (exists (?m - curved_wooden_ramp ?d - hexagonal_bin)
            (forall (?x - sliding_door)
              (game-optional
                (agent_holds ?x)
              )
            )
          )
        )
        (game-conserved
          (on ?f ?f)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?n - hexagonal_bin)
      (and
        (preference preference1
          (then
            (hold (in_motion ?n) )
            (hold (not (and (not (agent_holds ?n) ) (on desk yellow) ) ) )
            (once (on ?n ?n) )
          )
        )
      )
    )
    (forall (?x - color)
      (and
        (preference preference2
          (exists (?y ?w - hexagonal_bin)
            (then
              (once (not (and (agent_holds ?w) (adjacent pink_dodgeball ?y) ) ) )
              (once (not (agent_holds ?y) ) )
              (once (not (in ?w ?x) ) )
              (hold-while (and (not (< (distance ?w ?w) 1) ) ) (same_color ?y left) )
              (hold-while (agent_holds ?x) (touch ?y ?x) )
            )
          )
        )
      )
    )
    (forall (?e - chair)
      (and
        (preference preference3
          (exists (?k - dodgeball)
            (then
              (once (not (touch ?k desk) ) )
              (hold (in_motion ?e) )
              (once (same_color ?e ?k) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (* (count preference3:tall_cylindrical_block) (* (count preference3:pink) (total-time) )
      )
      0
    )
    (external-forall-maximize
      10
    )
  )
)
(:scoring
  (count-once-per-objects preference2:orange)
)
)(define (game game-id-778) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (exists (?p - game_object ?e - hexagonal_bin)
        (on desk ?e)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?a - wall)
        (then
          (hold-while (and (not (forall (?w - block) (in_motion agent) ) ) (equal_x_position ?a ?a) ) (exists (?f - triangular_ramp) (agent_holds agent) ) )
          (hold (not (not (in ?a ?a) ) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= 8 (external-forall-maximize 25 ) )
  )
)
(:scoring
  (count preference1:yellow_cube_block)
)
)(define (game game-id-779) (:domain many-objects-room-v1)
(:setup
  (exists (?h - cube_block ?c - hexagonal_bin)
    (game-optional
      (agent_holds upright)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?d - red_pyramid_block ?b ?e - golfball ?g - dodgeball)
        (then
          (hold (not (on ?g ?g) ) )
          (hold-while (and (agent_holds ?g) (not (same_type ?g ?g) ) ) (object_orientation ?g ?g) (game_over ) (not (in_motion ?g) ) )
          (hold (adjacent_side ?g ?g bed) )
          (once (equal_x_position ?g ?g) )
          (once (on tan ?g) )
        )
      )
    )
  )
)
(:terminal
  (>= (external-forall-maximize 10 ) (count preference1:red) )
)
(:scoring
  (count-once-per-objects preference1:pink_dodgeball)
)
)(define (game game-id-780) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (exists (?j - teddy_bear)
      (same_object ?j ?j)
    )
  )
)
(:constraints
  (and
    (forall (?m - hexagonal_bin)
      (and
        (preference preference1
          (exists (?z - chair ?y - shelf ?h - doggie_bed ?o - (either golfball golfball))
            (then
              (once (on agent ?o) )
              (once (and (object_orientation ?o ?o) (in ?o ?o) ) )
              (once (and (not (agent_holds ?m) ) (in_motion ?o) ) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?h - curved_wooden_ramp ?i - dodgeball)
        (at-end
          (and
            (between ?i pink_dodgeball ?i)
            (< (distance ?i ?i) (distance ?i ?i))
          )
        )
      )
    )
  )
)
(:terminal
  (>= 10 5 )
)
(:scoring
  (count-once-per-objects preference2:purple)
)
)(define (game game-id-781) (:domain many-objects-room-v1)
(:setup
  (exists (?r - dodgeball)
    (exists (?l - hexagonal_bin)
      (exists (?p ?w - shelf ?e - dodgeball)
        (exists (?p - game_object)
          (not
            (or
              (exists (?z - chair ?u - color)
                (game-optional
                  (rug_color_under ?p ?e)
                )
              )
              (game-conserved
                (agent_holds rug)
              )
              (forall (?x ?o - curved_wooden_ramp)
                (game-optional
                  (and
                    (opposite ?l agent)
                    (not
                      (not
                        (not
                          (agent_holds agent)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?q - shelf)
        (at-end
          (not
            (not
              (agent_holds ?q)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count preference1:pink_dodgeball:basketball) 1 )
    (* (count preference1:basketball) 5 )
  )
)
(:scoring
  (count preference1:red_pyramid_block)
)
)(define (game game-id-782) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (exists (?x - triangular_ramp)
      (and
        (agent_holds ?x)
        (in ?x ?x)
      )
    )
  )
)
(:constraints
  (and
    (forall (?u - game_object)
      (and
        (preference preference1
          (at-end
            (in_motion ?u)
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:pink_dodgeball) 1 )
)
(:scoring
  4
)
)(define (game game-id-783) (:domain medium-objects-room-v1)
(:setup
  (forall (?d - hexagonal_bin)
    (forall (?s ?a - hexagonal_bin)
      (exists (?e - dodgeball)
        (and
          (game-optional
            (in ?d side_table)
          )
          (exists (?w - hexagonal_bin)
            (game-conserved
              (forall (?x - game_object ?h - beachball)
                (not
                  (object_orientation agent ?d)
                )
              )
            )
          )
          (exists (?w - (either mug book))
            (game-conserved
              (< (distance ?e ?e) (distance agent desk))
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?e - tan_cube_block)
        (then
          (once (< 9 1) )
          (once (adjacent bridge_block ?e) )
          (hold (and (or (not (in_motion room_center) ) (not (on ?e ?e) ) ) (not (in bed ?e) ) ) )
        )
      )
    )
    (forall (?s - curved_wooden_ramp)
      (and
        (preference preference2
          (exists (?u - cube_block)
            (then
              (once (in ?u agent) )
              (hold-while (adjacent_side ?u ?s ?u top_drawer) (and (< 9 6) (and (in_motion ?u) (and (agent_holds ?u) (agent_holds pink_dodgeball) ) ) ) )
              (once (and (exists (?z - curved_wooden_ramp) (not (touch ?z ?s) ) ) (not (agent_holds ?u) ) ) )
            )
          )
        )
        (preference preference3
          (exists (?i - building)
            (then
              (once (on ?s ?i) )
              (once (and (not (in_motion ?s) ) (agent_holds ?i) ) )
              (once (agent_holds rug) )
              (once (in_motion ?s) )
            )
          )
        )
      )
    )
    (preference preference4
      (exists (?d - wall ?g - (either book pyramid_block alarm_clock dodgeball golfball pyramid_block wall))
        (then
          (once (and (agent_holds brown) (in_motion ?g) ) )
          (once (and (not (in ?g ?g) ) (and (not (in_motion ?g) ) (and (in_motion ?g) (and (is_setup_object ?g) (same_type ?g ?g) ) ) (broken ?g) ) ) )
          (once (not (or (and (on ?g floor) (in_motion agent) (agent_holds ?g) (adjacent desktop ?g) (adjacent ?g ?g) (or (same_color agent ?g) (rug_color_under ?g brown) (on ?g ?g) ) ) (in floor ?g) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (- (external-forall-maximize (external-forall-maximize (count preference2:green) ) ) )
    (* (* 3 (* (* 6 (count preference4:green:rug) )
          (count-once-per-objects preference4:basketball)
          (count-once-per-objects preference1:golfball)
        )
      )
      (+ 1 2 )
    )
  )
)
(:scoring
  (- (count-same-positions preference3:doggie_bed) )
)
)(define (game game-id-784) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (forall (?g ?l - (either blue_cube_block bridge_block dodgeball) ?g ?b ?p - hexagonal_bin)
      (not
        (agent_holds ?p)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?y - teddy_bear)
        (at-end
          (agent_holds ?y)
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:blue_cube_block) (* (count preference1:beachball) )
  )
)
(:scoring
  (not
    20
  )
)
)(define (game game-id-785) (:domain few-objects-room-v1)
(:setup
  (exists (?l - teddy_bear ?v - hexagonal_bin)
    (game-optional
      (not
        (agent_holds bed)
      )
    )
  )
)
(:constraints
  (and
    (forall (?t - ball ?x - ball)
      (and
        (preference preference1
          (exists (?w - (either basketball key_chain red))
            (at-end
              (on ?x ?x)
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?m - teddy_bear ?c - dodgeball)
        (then
          (hold (and (and (in ?c ?c) (< (building_size pink) 1) (in pink_dodgeball ?c) ) (not (agent_holds ?c) ) (in_motion door) ) )
          (once (not (and (agent_holds ?c) (on rug ?c) ) ) )
          (once (in_motion ?c) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count preference1:golfball) 15 )
    (>= (count-once-per-objects preference1:doggie_bed:pink_dodgeball) (+ (external-forall-maximize (count preference2:pink:basketball) ) (+ (external-forall-maximize (count-once preference1:green:basketball) ) 15 )
      )
    )
  )
)
(:scoring
  (count preference2:purple)
)
)(define (game game-id-786) (:domain few-objects-room-v1)
(:setup
  (exists (?n - cube_block ?y - bridge_block)
    (and
      (forall (?v - hexagonal_bin ?z - ball)
        (forall (?l - hexagonal_bin)
          (exists (?k - ball ?k - curved_wooden_ramp ?c ?s - dodgeball)
            (and
              (or
                (game-conserved
                  (in_motion ?z)
                )
                (game-conserved
                  (not
                    (or
                      (on ?z ?z)
                    )
                  )
                )
              )
            )
          )
        )
      )
      (game-conserved
        (adjacent ?y ?y)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?b ?j ?k - curved_wooden_ramp ?x ?r - pillow)
        (then
          (hold (and (not (= 7 (distance ?r ?r)) ) (not (game_start ) ) (and (and (and (and (agent_holds ?x) (not (in ?r ?r) ) ) (agent_holds ?r) (in_motion ?x) ) (> (building_size ?x) 1) ) (agent_holds ?r) (not (and (game_start ) (< (distance ?x ?x) (distance ?x agent)) ) ) ) ) )
          (hold-while (in ?x ?r) (= (x_position ?r) (distance ?x ?x)) )
          (hold-while (in_motion ?x) (not (game_over ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:basketball) (- 1 )
  )
)
(:scoring
  (count preference1:pyramid_block)
)
)(define (game game-id-787) (:domain medium-objects-room-v1)
(:setup
  (forall (?g - pillow)
    (exists (?e - dodgeball ?t - hexagonal_bin ?h - triangular_ramp)
      (forall (?q - hexagonal_bin ?d - ball)
        (game-conserved
          (adjacent room_center ?d)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?f - (either book))
        (then
          (once (and (and (in_motion ?f) ) (in ?f ?f) (in_motion ?f) ) )
          (hold (and (in_motion ?f) (in top_shelf ?f) ) )
          (once (not (on ?f agent) ) )
          (once (same_object ?f ?f) )
        )
      )
    )
    (preference preference2
      (exists (?n - red_pyramid_block ?t - (either dodgeball book))
        (at-end
          (in_motion ?t)
        )
      )
    )
    (forall (?l - (either blue_cube_block laptop))
      (and
        (preference preference3
          (exists (?h - hexagonal_bin)
            (then
              (once (not (agent_holds ?l) ) )
              (hold (adjacent ?l ?h) )
              (once (and (and (in_motion ?h) (adjacent ?h ?h) (and (and (in_motion agent) (in_motion ?l) ) (same_object ?h ?h) ) ) (agent_holds ?l) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference3:pink) (total-time) )
)
(:scoring
  (- (count preference3:red:blue_dodgeball) )
)
)(define (game game-id-788) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (game_start )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?t - cube_block)
        (then
          (once (not (between floor ?t ?t) ) )
          (once (and (not (in_motion ?t) ) (not (in_motion desk) ) ) )
          (once-measure (and (and (above ?t ?t) (not (on agent back) ) ) (and (is_setup_object ?t) (not (not (on pink ?t) ) ) ) ) (distance ?t ?t) )
          (hold (not (broken ?t) ) )
        )
      )
    )
    (forall (?s - hexagonal_bin)
      (and
        (preference preference2
          (exists (?k - doggie_bed)
            (then
              (hold (on pink_dodgeball ?s) )
              (hold-while (on ?k ?s) (adjacent ?s ?s) (adjacent ?k ?s) )
              (hold (adjacent ?k desk) )
            )
          )
        )
      )
    )
    (forall (?d - dodgeball ?x - building)
      (and
        (preference preference3
          (exists (?t - dodgeball ?s - hexagonal_bin)
            (at-end
              (in ?x ?s)
            )
          )
        )
        (preference preference4
          (exists (?y - green_triangular_ramp ?o - bridge_block ?p - (either tall_cylindrical_block dodgeball yellow))
            (then
              (once (not (not (in ?x ?x) ) ) )
              (once (and (and (agent_holds ?p) (on ?p agent) ) (in bridge_block ?p) ) )
              (hold-for 8 (not (on ?x bed) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-once preference3:beachball) (count preference1:green) )
    (>= 5 12 )
  )
)
(:scoring
  (* (* (count preference4:doggie_bed) (* (+ (count preference4:blue) 3 )
        9
        (count preference1:green)
      )
      (* 2 3 )
    )
    (* (+ (+ (count-once preference2:beachball) 3 )
        (+ 2 7 3 10 (count preference4:green:dodgeball:blue_dodgeball) (count-once-per-objects preference1:doggie_bed) )
        (* (or (* 2 (- 50 3 ) 5 )
            (count preference2:dodgeball:top_drawer)
            5
          )
          10
        )
        (* (* (* 5 2 (- (count preference1:pink_dodgeball:yellow:pink) )
              (count preference3:beachball)
              (+ (count preference3:beachball:orange) (count-once-per-external-objects preference3:pyramid_block) )
              (* (total-time) (count preference3:dodgeball) )
            )
            0.7
            3
            (count preference4:basketball)
            1
            (count preference2)
          )
          (count-once-per-objects preference4:beachball)
          (* 4 (count-measure preference4:yellow) 3 )
          (external-forall-maximize
            (* (count preference4:dodgeball:basketball:pink) 2 )
          )
          60
          (count preference2:purple)
          10
        )
      )
      (count-shortest preference3:dodgeball)
    )
  )
)
)(define (game game-id-789) (:domain medium-objects-room-v1)
(:setup
  (forall (?i - red_pyramid_block ?s ?r - hexagonal_bin)
    (forall (?k - hexagonal_bin)
      (exists (?z - cube_block ?n - dodgeball)
        (exists (?e - red_dodgeball ?a - (either ball dodgeball))
          (or
            (exists (?c - hexagonal_bin)
              (game-optional
                (not
                  (agent_holds pillow)
                )
              )
            )
            (game-conserved
              (in rug sideways)
            )
            (exists (?p - hexagonal_bin)
              (game-optional
                (forall (?m - ball ?e - chair)
                  (agent_holds ?p)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?z - hexagonal_bin)
        (then
          (once (not (agent_holds upright) ) )
          (hold (and (in ?z bed) (not (and (and (in_motion ?z) (and (not (and (and (adjacent_side rug agent rug bed) (in_motion ?z) ) (not (< 1 9) ) ) ) (is_setup_object ?z) ) (and (and (and (not (and (on ?z ?z) (in_motion agent) ) ) (not (same_object ?z floor) ) ) (agent_holds ?z) ) (and (agent_holds ?z) ) ) ) (and (in_motion ?z) (in ?z ?z) (> 1 (distance ?z ?z)) ) ) ) ) )
          (hold (rug_color_under ?z agent) )
        )
      )
    )
    (preference preference2
      (exists (?i - hexagonal_bin ?u - shelf)
        (then
          (once (object_orientation ?u ?u) )
          (once (not (not (agent_holds ?u) ) ) )
          (once (in ?u ?u) )
        )
      )
    )
    (preference preference3
      (exists (?o - chair ?f ?v - chair ?v - (either golfball key_chain cellphone) ?j ?d - block ?u - game_object)
        (then
          (once (in_motion ?u) )
          (once (not (not (in_motion agent) ) ) )
          (once (agent_holds ?u) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference2:dodgeball) 5 )
)
(:scoring
  (total-time)
)
)(define (game game-id-790) (:domain few-objects-room-v1)
(:setup
  (exists (?w - wall)
    (game-conserved
      (on ?w agent)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?z - yellow_cube_block ?j - (either cellphone pillow pyramid_block golfball))
        (then
          (hold (on ?j ?j) )
          (once (agent_holds door) )
          (once (adjacent bed ?j) )
        )
      )
    )
  )
)
(:terminal
  (<= 30 (total-score) )
)
(:scoring
  (count-once-per-objects preference1:dodgeball)
)
)(define (game game-id-791) (:domain medium-objects-room-v1)
(:setup
  (forall (?p - ball)
    (and
      (and
        (forall (?h - ball ?k - hexagonal_bin)
          (exists (?j - (either golfball lamp yellow_cube_block cylindrical_block))
            (and
              (game-conserved
                (in green_golfball ?k)
              )
              (game-conserved
                (agent_holds bed)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?s - cube_block)
        (then
          (hold (in ?s ?s) )
          (hold (in_motion ?s) )
          (hold (exists (?o - game_object ?l - rug) (agent_holds ?s) ) )
          (hold-while (< (distance ?s ?s) 1) (on ?s agent) (adjacent ?s ?s) (and (and (not (and (in ?s ?s) (open ?s) ) ) (not (toggled_on ?s) ) ) (and (in_motion ?s) (and (in ?s ?s) (in pink ?s) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (> (count-once-per-objects preference1:dodgeball:dodgeball) (* 1 (count preference1:red) 3 3 5 (count preference1:dodgeball:pink_dodgeball:yellow_pyramid_block) )
  )
)
(:scoring
  (* 1 (count preference1:dodgeball) )
)
)(define (game game-id-792) (:domain medium-objects-room-v1)
(:setup
  (exists (?m - hexagonal_bin ?e - cube_block)
    (and
      (exists (?z - dodgeball ?x - hexagonal_bin ?f - blue_pyramid_block)
        (exists (?z - hexagonal_bin ?r - flat_block)
          (exists (?v - chair ?d - hexagonal_bin)
            (game-optional
              (in_motion ?f)
            )
          )
        )
      )
      (forall (?y - curved_wooden_ramp ?w - desk_shelf ?s - building)
        (game-conserved
          (in ?s ?e)
        )
      )
      (exists (?x - hexagonal_bin ?u ?n - (either cd pink cube_block) ?n - (either key_chain key_chain dodgeball golfball pen))
        (exists (?x - cube_block ?r - hexagonal_bin)
          (game-conserved
            (exists (?p - ball)
              (same_color ?n ?n)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?y - chair)
        (then
          (once (and (not (agent_holds ?y) ) (not (on ?y ?y) ) ) )
          (once (not (in_motion ?y) ) )
          (hold (in ?y room_center) )
        )
      )
    )
    (forall (?v - ball ?b - drawer)
      (and
        (preference preference2
          (exists (?i - doggie_bed)
            (then
              (once (on ?b ?i) )
              (once (on ?i ?b) )
              (once (in_motion ?b) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (count-once-per-external-objects preference1:red:doggie_bed) (+ 10 (total-score) )
  )
)
(:scoring
  100
)
)(define (game game-id-793) (:domain many-objects-room-v1)
(:setup
  (forall (?g - dodgeball)
    (exists (?k ?p ?x - block ?k - (either beachball golfball))
      (game-optional
        (and
          (not
            (touch ?k ?k)
          )
          (agent_holds ?k)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?d - hexagonal_bin)
        (then
          (once (and (in_motion ?d) (adjacent ?d desk) ) )
          (hold (agent_holds ?d) )
          (once (and (agent_holds ?d) (in_motion rug) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count-overlapping preference1) 3 )
    10
  )
)
(:scoring
  0
)
)(define (game game-id-794) (:domain few-objects-room-v1)
(:setup
  (exists (?r - hexagonal_bin)
    (forall (?e - (either pyramid_block key_chain key_chain) ?k - dodgeball)
      (game-conserved
        (and
          (opposite room_center ?r)
          (object_orientation ?k ?k)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?v - ball ?t - doggie_bed)
        (then
          (once (agent_holds ?t) )
          (hold (on room_center ?t) )
          (hold-while (on ?t ?t) (and (adjacent ?t ?t) (agent_holds ?t) (in_motion ?t) ) (in_motion ?t) )
        )
      )
    )
    (preference preference2
      (exists (?g - game_object)
        (then
          (once (agent_holds ?g) )
          (hold-while (adjacent ?g ?g) (or (in_motion ?g) (not (on ?g ?g) ) ) (and (same_color pink ?g) (on ?g ?g) ) )
          (once (and (and (agent_holds ?g) (in_motion ?g) ) (in_motion ?g) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* 10 (+ 5 (* (- 5 )
            (total-score)
          )
          (* (* 2 (count preference2:dodgeball) )
            15
          )
        )
      )
      (count preference2:basketball:dodgeball)
    )
    (and
      (and
        (and
          (>= (total-score) (count preference1:basketball) )
          (>= 10 20 )
        )
        (= (+ (count-once-per-objects preference2:beachball) (count-once preference2:yellow) (* (< (* (+ 5 (- (total-time) )
                  )
                  (count preference1:dodgeball)
                )
                (* (- (* (* (count preference2:dodgeball) (count preference2:blue_dodgeball) )
                      1
                    )
                  )
                  16
                )
              )
              (count-once-per-objects preference1:cylindrical_block)
            )
            30
            (+ 10 (count-once-per-objects preference1:rug) (+ 5 4 )
            )
            (* (- (count preference2:dodgeball) )
              (count-once-per-objects preference2)
            )
            4
            (* (+ 10 1 )
              3
            )
            (count-once-per-objects preference1:pink_dodgeball)
          )
          (count preference1:yellow_cube_block:beachball)
        )
      )
    )
    (> (count preference2:block:pink) 7 )
  )
)
(:scoring
  (count preference2:yellow)
)
)(define (game game-id-795) (:domain few-objects-room-v1)
(:setup
  (exists (?s - cube_block)
    (exists (?e - block ?g ?j - hexagonal_bin ?g - wall)
      (and
        (and
          (and
            (game-conserved
              (and
                (agent_holds ?g)
                (between ?s ?s ?s)
              )
            )
          )
          (and
            (game-conserved
              (and
                (in_motion ?g)
                (and
                  (adjacent_side ?g ?g ?s ?g)
                  (in_motion ?g)
                )
              )
            )
            (and
              (exists (?h ?x ?l - dodgeball)
                (game-conserved
                  (in_motion ?g)
                )
              )
            )
            (and
              (game-conserved
                (and
                  (and
                    (and
                      (agent_holds ?s)
                      (not
                        (not
                          (and
                            (adjacent ?g ?s)
                            (in_motion ?g)
                          )
                        )
                      )
                    )
                    (agent_crouches )
                    (above ?s ?s)
                  )
                  (and
                    (and
                      (agent_holds ?s)
                      (and
                        (agent_holds ?g)
                        (and
                          (faces ?s ?s)
                          (not
                            (agent_holds ?g)
                          )
                        )
                      )
                      (in desk ?s)
                    )
                    (and
                      (exists (?w - (either key_chain dodgeball))
                        (agent_holds ?s)
                      )
                      (in_motion rug)
                    )
                  )
                  (is_setup_object ?s)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?n - hexagonal_bin ?j - ball)
        (then
          (hold (and (not (is_setup_object ?j) ) (> 5 (distance agent ?j)) ) )
          (once (faces upright ?j) )
          (once (agent_holds rug) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference1:pink) 6 )
)
(:scoring
  (+ 5 10 )
)
)(define (game game-id-796) (:domain medium-objects-room-v1)
(:setup
  (forall (?w - (either pyramid_block book book))
    (and
      (exists (?c - building)
        (game-conserved
          (agent_holds ?c)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?v - hexagonal_bin)
        (then
          (hold (in ?v desk) )
          (once (exists (?p - ball ?z - doggie_bed) (and (opposite ?z desk) (not (and (not (touch ?z ?z) ) (agent_holds ?z) ) ) ) ) )
          (once (and (and (on ?v blue) (not (agent_holds ?v) ) ) (and (in_motion ?v) (not (on ?v ?v) ) ) ) )
          (once (agent_holds pink_dodgeball) )
          (hold-while (agent_holds ?v) (and (adjacent bed agent) (in ?v door) ) (< (distance_side ?v ?v ?v agent) 1) (and (exists (?o - curved_wooden_ramp ?e - pillow) (not (and (agent_holds rug) (not (and (agent_holds ?e) ) ) ) ) ) (< 4 (distance_side ?v ?v agent pink)) ) )
        )
      )
    )
    (preference preference2
      (exists (?u - curved_wooden_ramp)
        (then
          (any)
          (once (agent_holds ?u) )
          (once (not (in_motion ?u) ) )
        )
      )
    )
  )
)
(:terminal
  (> (total-time) (count preference2:golfball) )
)
(:scoring
  (count preference1:dodgeball)
)
)(define (game game-id-797) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?c - cube_block ?s - dodgeball)
      (exists (?y - dodgeball)
        (game-conserved
          (not
            (not
              (agent_holds ?s)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?r - ball)
        (then
          (hold (in ?r ?r) )
        )
      )
    )
  )
)
(:terminal
  (or
    (<= (total-score) (+ (count preference1:dodgeball:cube_block) (count-once-per-objects preference1:hexagonal_bin) )
    )
  )
)
(:scoring
  (* 10 (and (count-measure preference1:dodgeball:golfball) (> (count-once-per-objects preference1:alarm_clock) 15 )
    )
  )
)
)(define (game game-id-798) (:domain few-objects-room-v1)
(:setup
  (forall (?c - hexagonal_bin ?k - color)
    (game-conserved
      (agent_holds ?k)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?l - shelf)
        (at-end
          (in_motion ?l)
        )
      )
    )
    (forall (?r - building)
      (and
        (preference preference2
          (exists (?z - doggie_bed)
            (at-end
              (agent_holds ?r)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 60 (count-once-per-objects preference1:golfball) )
)
(:scoring
  (+ 2 (+ 7 (count preference2:triangle_block) )
  )
)
)(define (game game-id-799) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (in_motion bed)
  )
)
(:constraints
  (and
    (forall (?q - (either cellphone desktop))
      (and
        (preference preference1
          (exists (?v - hexagonal_bin)
            (then
              (once (and (agent_holds ?v) (on ?q ?v) ) )
              (once (exists (?g - teddy_bear) (on ?q ?q) ) )
              (hold (not (in_motion ?q) ) )
              (once (not (touch ?q ?q) ) )
              (once (agent_holds ?v) )
              (forall-sequence (?u - hexagonal_bin)
                (then
                  (hold (and (in_motion ?v) (in ?v ?q) ) )
                  (once (agent_holds ?v) )
                  (once (and (and (forall (?a - hexagonal_bin) (agent_holds agent) ) (not (not (agent_holds ?u) ) ) ) (not (in_motion ?v) ) ) )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (* 180 (* (and 30 (not (count preference1:dodgeball) ) ) (+ (count-shortest preference1:red) (count-once-per-objects preference1:bed:green) )
      )
    )
    (+ (+ (count-overlapping preference1:dodgeball) (and (total-time) 2 ) )
      (+ (count-once-per-objects preference1:pyramid_block) (+ (external-forall-maximize 2 ) (count-once-per-objects preference1:basketball) )
      )
    )
  )
)
(:scoring
  (count-total preference1:book:beachball)
)
)(define (game game-id-800) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?g - hexagonal_bin)
      (exists (?r - game_object)
        (forall (?p ?b - hexagonal_bin)
          (exists (?d - hexagonal_bin)
            (exists (?e - game_object)
              (exists (?w - curved_wooden_ramp)
                (game-conserved
                  (agent_holds ?e)
                )
              )
            )
          )
        )
      )
    )
    (exists (?r - hexagonal_bin)
      (game-conserved
        (and
          (agent_holds ?r)
          (not
            (on ?r room_center)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?a - hexagonal_bin ?x - game_object)
        (at-end
          (on ?x ?x)
        )
      )
    )
    (preference preference2
      (exists (?x - hexagonal_bin ?o - hexagonal_bin)
        (then
          (once (in_motion agent) )
          (hold (in_motion desk) )
          (once (not (is_setup_object ?o) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once preference2:pink) 6 )
)
(:scoring
  10
)
)(define (game game-id-801) (:domain many-objects-room-v1)
(:setup
  (exists (?l - dodgeball)
    (exists (?i - hexagonal_bin)
      (and
        (game-optional
          (and
            (and
              (exists (?y - (either dodgeball hexagonal_bin))
                (on ?l ?i)
              )
              (not
                (agent_holds sideways)
              )
              (on ?i ?l)
            )
            (on ?i desk)
            (and
              (object_orientation ?i ?l)
              (in ?i ?i)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?m - ball ?d - hexagonal_bin)
        (then
          (hold (not (and (not (object_orientation ?d ?d) ) (agent_holds bed) ) ) )
          (once (adjacent room_center ?d) )
          (hold (agent_holds ?d) )
        )
      )
    )
  )
)
(:terminal
  (> (total-score) (count preference1:dodgeball:book:basketball) )
)
(:scoring
  (count-once preference1:dodgeball:dodgeball)
)
)(define (game game-id-802) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (exists (?b - wall)
      (in_motion agent)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?v - (either ball beachball))
        (then
          (once (not (not (and (and (and (agent_holds ?v) (= 1) (on ?v ?v) (exists (?h - beachball) (exists (?x - hexagonal_bin ?c - hexagonal_bin) (and (object_orientation ?v agent) (agent_holds ?c) ) ) ) ) (or (or (adjacent_side ?v ?v ?v) (in ?v ?v) ) (agent_holds desk) ) ) (not (adjacent_side ?v ?v ?v ?v) ) ) ) ) )
          (forall-sequence (?j - hexagonal_bin)
            (then
              (hold (in ?j ?j) )
              (hold (rug_color_under drawer ?j) )
              (hold-to-end (agent_holds ?v) )
            )
          )
          (once (on ?v ?v) )
        )
      )
    )
  )
)
(:terminal
  (<= (= (* 3 1 )
      (< (count-total preference1:pink_dodgeball) (+ (count-increasing-measure preference1:green) (count-once-per-external-objects preference1:pink) )
      )
    )
    (* (count preference1:red) (count-once-per-objects preference1:yellow) )
  )
)
(:scoring
  (count-unique-positions preference1:dodgeball:hexagonal_bin)
)
)(define (game game-id-803) (:domain medium-objects-room-v1)
(:setup
  (exists (?z - flat_block ?k - chair)
    (game-optional
      (not
        (not
          (adjacent ?k ?k)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?i - hexagonal_bin ?x - hexagonal_bin ?i - hexagonal_bin)
        (at-end
          (in_motion ?i)
        )
      )
    )
  )
)
(:terminal
  (or
    (<= 7 5 )
    (or
      (> (count preference1:blue) 3 )
      (>= (* (count-once preference1:basketball) 1 )
        (count-once-per-external-objects preference1:brown)
      )
    )
  )
)
(:scoring
  (* 5 (count preference1:block) )
)
)(define (game game-id-804) (:domain few-objects-room-v1)
(:setup
  (exists (?v - ball)
    (game-optional
      (and
        (in_motion ?v)
        (in_motion pink_dodgeball)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?i - (either laptop hexagonal_bin))
        (then
          (hold (= (distance ?i ?i) 1) )
          (hold (in_motion ?i) )
          (once (and (and (adjacent ?i ?i) (agent_holds ?i) ) (in bed ?i) (in_motion ?i) (and (agent_holds ?i) (in_motion ?i) ) ) )
        )
      )
    )
    (preference preference2
      (exists (?a - block ?l - dodgeball)
        (then
          (once (or (not (in ?l ?l) ) (touch ?l ?l) ) )
          (hold (and (<= 1 (x_position ?l)) (= (distance ?l ?l) (distance ?l ?l) (distance ?l ?l)) ) )
          (hold-while (and (exists (?j - (either cylindrical_block blue_cube_block)) (agent_holds ?l) ) (and (agent_holds ?l) (not (agent_holds ?l) ) (not (agent_holds ?l) ) ) ) (touch ?l ?l) )
        )
      )
    )
    (preference preference3
      (exists (?q - ball)
        (then
          (once (not (agent_holds top_drawer) ) )
          (hold (and (and (not (equal_x_position ?q desk) ) (and (touch ?q upright) (agent_holds ?q) ) ) (not (in ?q ?q) ) (< 6 4) (and (touch ?q desk) (rug_color_under ?q ?q) ) (in_motion ?q) (and (object_orientation agent ?q) (and (on desk ?q) ) ) (agent_holds ?q) (and (agent_holds desk) (and (in_motion desk) (in ?q ?q) ) (object_orientation ?q ?q) ) (and (agent_holds ?q) (agent_holds ?q) ) (agent_holds ?q) (not (not (on ?q ?q) ) ) (on ?q ?q) ) )
          (once-measure (and (and (not (not (agent_holds ?q) ) ) (not (and (adjacent ?q ?q) (and (not (on ?q bed) ) (in_motion ?q) ) (above ?q ?q) (and (not (on pink_dodgeball ?q) ) (> (distance_side ?q ?q ?q ?q) (distance ?q ?q)) ) (agent_holds ?q) (< (distance ?q ?q) (distance ?q ?q)) (forall (?j - wall) (on bed ?q) ) (and (same_type ?q agent) (and (forall (?i - pillow) (agent_holds bridge_block) ) ) ) ) ) (not (is_setup_object ?q) ) ) (agent_holds agent) ) (distance front room_center) )
        )
      )
    )
    (preference preference4
      (exists (?n - dodgeball)
        (then
          (hold-for 9 (and (in ?n ?n) (and (opposite ?n ?n) (not (and (and (not (and (not (and (touch ?n ?n) (and (on ?n ?n) (not (in_motion ?n) ) (not (= 1 (distance ?n ?n)) ) (same_color ?n desk) ) (equal_z_position desk bed) (opposite ?n ?n) ) ) (not (on ?n ?n) ) (in_motion room_center) ) ) (exists (?q - hexagonal_bin) (not (not (in_motion ?q) ) ) ) (not (in ?n ?n) ) ) (same_color ?n ?n) ) ) ) ) )
          (hold (and (and (not (in_motion ?n) ) (in ?n ?n) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once preference4:brown) (count-longest preference4:beachball) )
)
(:scoring
  180
)
)(define (game game-id-805) (:domain medium-objects-room-v1)
(:setup
  (forall (?q - hexagonal_bin)
    (and
      (game-optional
        (game_over )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?g - hexagonal_bin ?p - ball)
        (then
          (hold (adjacent ?p ?p) )
          (hold-while (in_motion ?p) (and (and (not (< (distance ?p agent) 6) ) (on ?p ?p) ) (exists (?r - cube_block ?u - (either curved_wooden_ramp bed)) (touch ?p ?u) ) ) (adjacent ?p ?p) (not (in ?p ?p) ) )
          (hold (agent_holds ?p) )
        )
      )
    )
    (preference preference2
      (exists (?u - (either pyramid_block mug pen golfball pyramid_block alarm_clock dodgeball) ?y - building)
        (then
          (once (equal_z_position ?y ?y) )
          (hold (and (and (in_motion ?y) (not (in ?y ?y) ) ) ) )
          (hold-for 6 (agent_holds ?y) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference1:green) (count-once-per-objects preference2:pink:yellow) )
)
(:scoring
  1
)
)(define (game game-id-806) (:domain medium-objects-room-v1)
(:setup
  (forall (?h - triangular_ramp ?f - (either side_table golfball))
    (game-conserved
      (object_orientation ?f ?f)
    )
  )
)
(:constraints
  (and
    (forall (?r - (either cylindrical_block yellow_cube_block) ?s - sliding_door)
      (and
        (preference preference1
          (exists (?x - hexagonal_bin ?i - doggie_bed)
            (then
              (hold-while (on ?s ?s) (< (distance ?s ?s) (distance ?s ?i)) (in_motion ?i) (in ?i ?i) )
              (any)
              (once (opposite ?i ?s) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-overlapping preference1:beachball) (+ (not (- (count-once preference1:blue:yellow) )
      )
      (count-overlapping preference1:golfball:pink_dodgeball)
      (total-score)
      (* (external-forall-maximize 5 ) (count preference1:dodgeball) )
      (* (- (* (count-once-per-external-objects preference1:hexagonal_bin) 4 (external-forall-maximize (total-score) ) )
        )
        1
      )
    )
  )
)
(:scoring
  (count-once-per-objects preference1:doggie_bed)
)
)(define (game game-id-807) (:domain few-objects-room-v1)
(:setup
  (exists (?o - curved_wooden_ramp ?p - dodgeball)
    (game-conserved
      (in ?p ?p)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?y - hexagonal_bin ?e - dodgeball)
        (then
          (hold (not (agent_holds floor) ) )
          (hold-to-end (game_over ) )
          (hold-while (on ?e ?e) (and (agent_holds ?e) (agent_holds ?e) ) (not (not (agent_holds agent) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count preference1:basketball:beachball) (count-increasing-measure preference1:bed) )
    (count-once-per-objects preference1:red)
  )
)
(:scoring
  (total-time)
)
)(define (game game-id-808) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?p - (either cube_block))
      (exists (?k - (either credit_card triangular_ramp golfball))
        (and
          (exists (?r - curved_wooden_ramp)
            (and
              (game-conserved
                (in bed ?k)
              )
            )
          )
          (exists (?w - wall)
            (and
              (and
                (and
                  (game-conserved
                    (in_motion ?w)
                  )
                )
                (game-optional
                  (in_motion ?k)
                )
                (and
                  (game-optional
                    (in_motion bed)
                  )
                  (game-conserved
                    (and
                      (in_motion ?w)
                      (agent_holds ?k)
                    )
                  )
                )
              )
              (game-conserved
                (and
                  (in_motion ?k)
                  (not
                    (in ?p ?p)
                  )
                  (< 1 (distance room_center desk))
                )
              )
              (exists (?t - dodgeball)
                (game-conserved
                  (and
                    (agent_holds ?p)
                    (< 2 (distance ?p ?k))
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?s - ball)
        (then
          (once (< (distance agent ?s) 6) )
          (once (agent_holds floor) )
          (once (and (exists (?h - hexagonal_bin) (not (not (agent_holds ?s) ) ) ) (and (< (distance ?s ?s) 4) (on ?s agent) (< (distance south_wall ?s) 6) (agent_holds ?s) (not (agent_holds ?s) ) (not (and (not (< (distance_side ?s ?s agent ?s) (distance ?s ?s)) ) (same_object ?s ?s) ) ) (not (in ?s ?s) ) ) ) )
        )
      )
    )
    (forall (?i - (either pillow cylindrical_block) ?e - desk_shelf)
      (and
        (preference preference2
          (exists (?d - teddy_bear)
            (at-end
              (touch ?e ?d)
            )
          )
        )
        (preference preference3
          (exists (?k - teddy_bear)
            (then
              (hold (not (in_motion ?k) ) )
              (hold (agent_holds ?k) )
              (hold (forall (?p - wall ?y ?w - shelf ?h - block ?p ?t - hexagonal_bin) (agent_holds ?p) ) )
              (once (agent_holds ?e) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (= 4 (count-shortest preference3:golfball) )
)
(:scoring
  (external-forall-minimize
    (count preference3:blue_dodgeball)
  )
)
)(define (game game-id-809) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?i - (either book key_chain))
      (game-optional
        (not
          (not
            (exists (?j - doggie_bed)
              (adjacent ?i ?i)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?i - game_object)
        (then
          (hold (touch ?i ?i) )
          (once (on floor ?i) )
          (hold-while (on ?i bed) (and (open ?i) (in back ?i) ) (above back ?i) )
        )
      )
    )
    (preference preference2
      (exists (?u - hexagonal_bin ?m - cube_block ?f - dodgeball ?e - game_object ?a - (either wall wall))
        (then
          (once (agent_holds ?a) )
          (hold-while (touch ?a agent) (in_motion ?a) (in_motion floor) )
          (hold (not (same_color floor ?a) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count preference1:basketball:basketball) (external-forall-maximize (count-once-per-objects preference1:dodgeball:yellow) ) )
    18
  )
)
(:scoring
  (count preference2:dodgeball)
)
)(define (game game-id-810) (:domain medium-objects-room-v1)
(:setup
  (forall (?k - curved_wooden_ramp ?j - dodgeball)
    (game-optional
      (not
        (opposite ?j ?j)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?v - dodgeball)
        (at-end
          (in_motion top_drawer)
        )
      )
    )
  )
)
(:terminal
  (>= 2 5 )
)
(:scoring
  (* (count preference1:basketball:blue_dodgeball) (count preference1:beachball) (count-once-per-objects preference1:basketball) (* (and (count preference1:doggie_bed:dodgeball) (count-once-per-objects preference1:hexagonal_bin) (count-same-positions preference1:hexagonal_bin:red:dodgeball) ) 5 )
  )
)
)(define (game game-id-811) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (not
      (forall (?u - cube_block)
        (in_motion ?u)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?m - block)
        (then
          (once (not (in_motion ?m) ) )
          (hold-while (not (and (and (on desk ?m) (and (exists (?a - game_object ?u - dodgeball) (in_motion ?m) ) (agent_holds ?m) ) ) (in_motion room_center) ) ) (in_motion agent) )
          (hold (not (and (in_motion ?m) (touch ?m ?m) (on agent ?m) (< 1 (distance ?m ?m)) (agent_holds north_wall) (on ?m agent) ) ) )
        )
      )
    )
    (preference preference2
      (exists (?x - hexagonal_bin ?x - (either alarm_clock dodgeball))
        (then
          (hold (in_motion ?x) )
          (once (in_motion agent) )
          (once (and (adjacent_side ?x door ?x agent) (not (and (in_motion ?x) (agent_holds ?x) ) ) (and (and (adjacent door ?x) (in_motion ?x) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 2 3 )
    (= (- 300 )
      (count-shortest preference1:dodgeball:green)
    )
    (>= (count-once-per-objects preference1:golfball) (count preference2:pink) )
  )
)
(:scoring
  (count-total preference1:blue_dodgeball)
)
)(define (game game-id-812) (:domain medium-objects-room-v1)
(:setup
  (exists (?w - curved_wooden_ramp)
    (game-optional
      (and
        (touch ?w ?w)
        (agent_holds bed)
      )
    )
  )
)
(:constraints
  (and
    (forall (?t - game_object)
      (and
        (preference preference1
          (exists (?c - dodgeball ?u ?s - teddy_bear)
            (at-end
              (on ?t ?u)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= (count-once-per-external-objects preference1:blue_pyramid_block) (count-once-per-objects preference1:dodgeball) )
)
(:scoring
  (count-once preference1:pink)
)
)(define (game game-id-813) (:domain medium-objects-room-v1)
(:setup
  (forall (?r - (either tall_cylindrical_block pen yellow_cube_block))
    (game-conserved
      (not
        (touch ?r ?r)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?d - hexagonal_bin)
        (then
          (once (agent_holds ?d) )
          (hold (agent_holds bed) )
          (once (agent_holds ?d) )
        )
      )
    )
    (preference preference2
      (exists (?i - dodgeball ?p - game_object ?u - pillow)
        (then
          (once (not (same_object agent desk) ) )
          (once (< 1 8) )
          (hold (and (broken rug) (in bed door) (and (< (distance ?u ?u) 6) (open bed) (>= 1 7) (not (adjacent_side agent ?u ?u) ) ) ) )
        )
      )
    )
    (preference preference3
      (exists (?n - wall)
        (then
          (hold (in_motion ?n) )
          (once (in ?n ?n) )
          (once (and (not (and (agent_holds ?n) (in_motion ?n) ) ) (in_motion ?n) ) )
        )
      )
    )
    (preference preference4
      (exists (?l - cube_block ?m - ball ?r - ball)
        (at-end
          (not
            (on ?r ?r)
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference3:alarm_clock) (* (* 10 18 )
      300
    )
  )
)
(:scoring
  (count preference3:yellow:golfball)
)
)(define (game game-id-814) (:domain few-objects-room-v1)
(:setup
  (exists (?x - dodgeball ?k ?h - golfball)
    (exists (?y - dodgeball ?x - shelf ?g - ball)
      (game-optional
        (not
          (in_motion ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?t - hexagonal_bin ?r - chair)
        (then
          (hold (agent_holds ?r) )
          (once-measure (agent_holds ?r) (distance ?r ?r) )
          (once (toggled_on room_center) )
        )
      )
    )
    (preference preference2
      (exists (?w - ball)
        (then
          (hold (exists (?t - hexagonal_bin ?q - cube_block) (exists (?k - block) (in_motion ?q) ) ) )
          (hold (agent_holds ?w) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (* 2 6 4 (count preference2:dodgeball:orange) 6 (* 1 (+ 3 (count preference2:basketball) )
        )
      )
      (* 3 (count preference2:basketball) )
    )
  )
)
(:scoring
  (count preference2:dodgeball)
)
)(define (game game-id-815) (:domain few-objects-room-v1)
(:setup
  (exists (?i - dodgeball ?c - hexagonal_bin ?e - golfball)
    (forall (?o - cube_block ?v - wall ?p - dodgeball)
      (and
        (game-optional
          (and
            (on ?e ?e)
            (not
              (and
                (agent_holds agent)
                (agent_holds ?e)
              )
            )
            (or
              (in ?e ?p)
              (in_motion ?p)
            )
            (in_motion agent)
            (agent_holds ?e)
            (and
              (adjacent_side ?e ?p ?e)
              (same_type ?p ?e)
            )
            (equal_x_position ?p ?p)
            (agent_holds brown)
            (agent_holds room_center)
            (agent_crouches )
            (not
              (not
                (exists (?i - hexagonal_bin ?g - pillow)
                  (not
                    (not
                      (and
                        (and
                          (not
                            (in_motion ?g)
                          )
                          (same_color ?e ?g)
                          (exists (?n ?k - flat_block)
                            (object_orientation ?n ?k)
                          )
                        )
                        (not
                          (not
                            (agent_holds ?g)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
            (not
              (agent_holds agent)
            )
          )
        )
        (and
          (forall (?q - hexagonal_bin ?l - flat_block)
            (and
              (forall (?n ?y ?v ?q ?u ?j - ball ?v - game_object ?r - game_object)
                (exists (?z - ball)
                  (exists (?f - hexagonal_bin ?t - hexagonal_bin ?q - curved_wooden_ramp)
                    (exists (?b - game_object)
                      (forall (?o - (either golfball bridge_block))
                        (and
                          (exists (?c - (either cellphone key_chain))
                            (and
                              (and
                                (exists (?k ?f - block)
                                  (game-conserved
                                    (in_motion ?q)
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
        (forall (?o - dodgeball ?q - hexagonal_bin)
          (exists (?k - teddy_bear)
            (forall (?j - color)
              (exists (?v - block)
                (game-optional
                  (on ?e ?v)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?j - dodgeball)
        (then
          (once (in_motion ?j) )
          (once (in_motion ?j) )
          (once (and (agent_holds ?j) (touch ?j ?j) (in_motion ?j) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (= (+ (* (count-measure preference1:beachball) (count preference1:yellow:cube_block) )
        10
      )
      10
    )
  )
)
(:scoring
  (total-score)
)
)(define (game game-id-816) (:domain medium-objects-room-v1)
(:setup
  (exists (?k - desk_shelf ?r - hexagonal_bin ?u ?v - (either dodgeball cube_block))
    (exists (?b - color ?a ?t - wall)
      (and
        (forall (?g - curved_wooden_ramp)
          (exists (?s - chair)
            (game-conserved
              (exists (?h - hexagonal_bin)
                (agent_holds front)
              )
            )
          )
        )
        (or
          (exists (?f - dodgeball)
            (game-conserved
              (not
                (in_motion ?a)
              )
            )
          )
        )
        (exists (?m - (either blue_cube_block))
          (and
            (game-conserved
              (in ?v ?t)
            )
            (game-optional
              (and
                (not
                  (agent_holds ?v)
                )
                (and
                  (in_motion ?m)
                  (and
                    (on ?t ?m)
                    (and
                      (in_motion ?m)
                      (and
                        (< 1 (distance ?a ?v))
                        (not
                          (exists (?z - ball)
                            (< (distance ?m ?a) 1)
                          )
                        )
                      )
                    )
                  )
                )
                (is_setup_object ?t)
                (on ?m room_center)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?i - dodgeball ?w - dodgeball)
      (and
        (preference preference1
          (exists (?y - pyramid_block ?g - wall)
            (at-end
              (in_motion agent)
            )
          )
        )
        (preference preference2
          (exists (?c - hexagonal_bin)
            (then
              (once (< (distance ?c ?w) 10) )
              (once (adjacent ?w ?c) )
              (hold (same_color ?w ?c) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (and
      (or
        (< (* (* (count-once-per-objects preference1:pink_dodgeball) (+ (+ (+ 3 5 3 )
                  (external-forall-maximize
                    (count preference2:basketball:beachball)
                  )
                )
                1
              )
            )
            2
          )
          (count-once-per-objects preference1:red_pyramid_block)
        )
        (>= 18 (* (external-forall-maximize 2 ) 10 )
        )
      )
    )
  )
)
(:scoring
  (count-unique-positions preference2:brown:pink_dodgeball)
)
)(define (game game-id-817) (:domain medium-objects-room-v1)
(:setup
  (exists (?o - hexagonal_bin ?l - hexagonal_bin)
    (game-conserved
      (not
        (in_motion ?l)
      )
    )
  )
)
(:constraints
  (and
    (forall (?f - doggie_bed)
      (and
        (preference preference1
          (exists (?v - dodgeball)
            (then
              (hold (not (and (>= 2 0.5) (not (in ?f ?f) ) ) ) )
              (hold (in_motion ?f) )
              (hold (> (distance ?v ?f) 1) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (+ 3 (count preference1:dodgeball) (count-once preference1:golfball:golfball:alarm_clock) )
    10
  )
)
(:scoring
  (* (count preference1:hexagonal_bin) (- (count preference1:purple) )
  )
)
)(define (game game-id-818) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?x - building ?p - (either bed cylindrical_block))
      (forall (?g - game_object)
        (and
          (exists (?t - block)
            (and
              (exists (?e - (either bridge_block block))
                (exists (?s - (either golfball cellphone) ?x - ball)
                  (forall (?q ?k - building)
                    (game-conserved
                      (not
                        (equal_z_position ?q door)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?j - (either golfball cube_block) ?t - hexagonal_bin)
      (and
        (preference preference1
          (exists (?r - block)
            (at-end
              (not
                (not
                  (game_start )
                )
              )
            )
          )
        )
      )
    )
    (forall (?v - (either pen blue_cube_block) ?l - block ?o - (either pyramid_block desktop laptop golfball floor))
      (and
        (preference preference2
          (exists (?i - building ?i - game_object)
            (then
              (once (adjacent agent desk) )
              (once (not (and (exists (?w - (either desktop laptop) ?j - hexagonal_bin) (on agent ?i) ) (and (rug_color_under ?i ?o) (< 1 9) ) ) ) )
              (once (agent_holds ?i) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference2:red) 5 )
)
(:scoring
  (* (count-once-per-objects preference2:cylindrical_block) (count preference2:dodgeball) )
)
)(define (game game-id-819) (:domain few-objects-room-v1)
(:setup
  (exists (?w - hexagonal_bin ?q - wall ?w - ball)
    (exists (?k - hexagonal_bin)
      (and
        (forall (?e - hexagonal_bin)
          (exists (?v - wall)
            (game-optional
              (touch ?e pink_dodgeball)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?x - doggie_bed)
        (then
          (hold (or (= 1 (distance ?x ?x)) (and (>= (distance ?x desk) 1) (touch ?x ?x) (agent_holds front) ) (on ?x floor) ) )
          (hold-while (not (and (not (not (adjacent ?x ?x) ) ) (not (not (and (in_motion ?x) (and (not (on ?x sideways) ) (is_setup_object ?x) (and (object_orientation ?x ?x) (not (exists (?r - hexagonal_bin) (agent_holds ?r) ) ) ) ) (in ?x rug) ) ) ) ) ) (in_motion ?x) )
          (hold (in_motion ?x) )
          (once (and (agent_holds ?x) (on ?x desk) (not (and (adjacent_side ?x ?x ?x) (and (in_motion ?x) (and (and (and (on ?x ?x) (agent_holds ?x) ) (not (agent_holds ?x) ) ) (in ?x ?x) ) ) ) ) ) )
        )
      )
    )
    (preference preference2
      (exists (?u - dodgeball)
        (then
          (once (in ?u ?u) )
          (once (and (in_motion ?u) (on ?u ?u) ) )
          (hold-while (and (on ?u ?u) (agent_holds ?u) ) (toggled_on ?u) (not (and (= (distance ?u ?u) (distance ?u brown) 6 (distance ?u ?u)) (or (not (not (not (adjacent floor ?u) ) ) ) (not (and (in_motion ?u) (agent_holds ?u) ) ) (same_color ?u ?u) ) ) ) )
        )
      )
    )
    (forall (?n ?o ?d - hexagonal_bin)
      (and
        (preference preference3
          (exists (?v - hexagonal_bin)
            (then
              (hold (agent_holds ?n) )
              (hold (< (distance ?v ?o) 9) )
            )
          )
        )
        (preference preference4
          (exists (?r - (either laptop cylindrical_block cube_block))
            (then
              (once (< (distance ?r ?n) 2) )
              (hold (and (between ?d floor bed) (and (and (agent_holds door) (in_motion ?d) ) (and (not (not (agent_holds room_center) ) ) (or (not (not (adjacent ?r ?o) ) ) (opposite ?n room_center) ) ) (and (not (same_object agent ?d) ) (and (in_motion ?o) (on room_center ?r) (not (agent_holds ?r) ) ) ) (in_motion bottom_shelf) (and (not (adjacent bed ?d) ) (toggled_on ?d) ) (on ?o ?o) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (count-increasing-measure preference4:beachball) 100 )
)
(:scoring
  (= 6 1 2 )
)
)(define (game game-id-820) (:domain few-objects-room-v1)
(:setup
  (exists (?q - ball ?w - (either cube_block desktop triangle_block) ?l - dodgeball)
    (forall (?j - teddy_bear ?n ?q - (either laptop doggie_bed))
      (forall (?e ?m - pyramid_block)
        (exists (?a - cube_block)
          (and
            (game-conserved
              (in ?m ?q)
            )
            (game-optional
              (in_motion ?a)
            )
            (exists (?c - ball)
              (forall (?y - hexagonal_bin)
                (exists (?t - ball ?o - hexagonal_bin)
                  (and
                    (game-conserved
                      (in_motion desk)
                    )
                    (exists (?u - ball)
                      (forall (?b - red_dodgeball)
                        (game-optional
                          (and
                            (agent_holds ?u)
                            (or
                              (and
                                (in_motion desk)
                                (not
                                  (agent_holds ?y)
                                )
                              )
                              (agent_holds ?q)
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?m - hexagonal_bin)
        (then
          (hold-while (broken ?m) (in_motion ?m) )
          (once (> (distance ?m ?m) 2) )
          (once (in_motion ?m) )
        )
      )
    )
    (preference preference2
      (exists (?o - dodgeball)
        (then
          (once (or (in desk ?o) (and (not (in_motion ?o) ) (< (distance ?o ?o) (distance ?o ?o)) ) ) )
          (hold (on ?o ?o) )
          (once (not (and (agent_holds ?o) (in_motion ?o) ) ) )
        )
      )
    )
    (preference preference3
      (exists (?f - color)
        (then
          (once (adjacent_side front ?f ?f) )
          (once (in_motion ?f) )
          (once (not (not (in_motion ?f) ) ) )
        )
      )
    )
  )
)
(:terminal
  (< (count-once-per-objects preference1:beachball) (* (count-once-per-objects preference2:wall) 7 10 )
  )
)
(:scoring
  (count preference2:basketball:basketball)
)
)(define (game game-id-821) (:domain few-objects-room-v1)
(:setup
  (exists (?y - (either book book) ?w ?p - game_object)
    (forall (?x - chair)
      (forall (?u - game_object ?z - (either bridge_block yellow_cube_block) ?r - blue_cube_block ?t - hexagonal_bin ?z - hexagonal_bin)
        (and
          (and
            (game-optional
              (in_motion ?x)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?j - ball)
        (then
          (once (forall (?p - doggie_bed) (agent_holds ?j) ) )
          (hold (agent_holds ?j) )
          (once (not (agent_holds ?j) ) )
        )
      )
    )
    (preference preference2
      (exists (?q - chair)
        (then
          (once (in_motion ?q) )
          (once (and (and (<= (distance ?q ?q) (distance ?q ?q)) (not (agent_holds ?q) ) ) (in ?q desk) ) )
          (hold (and (and (not (not (between ?q ?q bed) ) ) (in_motion ?q) ) (and (in_motion upright) (agent_holds ?q) (in_motion ?q) (rug_color_under front top_drawer) (in top_drawer ?q) (agent_holds ?q) (between ?q ?q ?q) (< 6 (distance upside_down agent)) (on desk ?q) (in ?q ?q) (toggled_on ?q) (not (in ?q desk) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count-unique-positions preference2:pink) 20 )
    (* (count-once-per-objects preference1:dodgeball:dodgeball) (count preference1:pink) )
  )
)
(:scoring
  18
)
)(define (game game-id-822) (:domain many-objects-room-v1)
(:setup
  (exists (?g - ball)
    (exists (?r - (either hexagonal_bin mug) ?x - cube_block)
      (and
        (game-conserved
          (agent_holds ?x)
        )
        (and
          (exists (?e - ball ?c - (either blue_cube_block top_drawer))
            (exists (?h - dodgeball)
              (game-conserved
                (in_motion ?c)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?e - dodgeball)
        (then
          (once (exists (?q ?j ?u ?i ?k - cube_block) (> 4 3) ) )
          (once (on ?e ?e) )
          (once (in_motion ?e) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (count preference1:golfball) )
)
(:scoring
  (count preference1:green:yellow:doggie_bed)
)
)(define (game game-id-823) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (and
      (game_start )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?g - hexagonal_bin)
        (at-end
          (in_motion ?g)
        )
      )
    )
  )
)
(:terminal
  (< 9 (count preference1:beachball:yellow) )
)
(:scoring
  2
)
)(define (game game-id-824) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (exists (?a - game_object)
        (exists (?i - ball)
          (not
            (and
              (and
                (game-conserved
                  (touch ?a ?a)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?n - chair)
        (then
          (hold (on agent floor) )
          (once (< 1 1) )
          (once (and (and (in ?n ?n) (< 0.5 (distance ?n ?n)) (in ?n ?n) (adjacent ?n ?n) ) (on ?n ?n) (in_motion ?n) ) )
        )
      )
    )
    (preference preference2
      (exists (?n ?w ?a ?y - building)
        (then
          (once (game_start ) )
          (once (in_motion ?n) )
          (hold (forall (?f - ball ?s - (either cube_block tall_cylindrical_block)) (not (agent_holds ?n) ) ) )
        )
      )
    )
    (preference preference3
      (exists (?r - curved_wooden_ramp ?w - dodgeball ?z - ball)
        (then
          (once (not (not (agent_holds ?z) ) ) )
          (once (in ?z rug) )
          (once (not (agent_holds ?z) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (count preference1:beachball) )
)
(:scoring
  (count preference1:beachball:pink)
)
)(define (game game-id-825) (:domain many-objects-room-v1)
(:setup
  (exists (?p - dodgeball)
    (game-optional
      (and
        (not
          (and
            (not
              (on ?p ?p)
            )
            (and
              (not
                (agent_holds ?p)
              )
              (not
                (agent_holds ?p)
              )
            )
          )
        )
        (not
          (and
            (and
              (game_start )
            )
            (not
              (not
                (<= (distance agent ?p) (distance ?p agent))
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?m - pyramid_block ?w - building ?j - ball)
        (then
          (hold-while (same_color ?j ?j) (not (on agent ?j) ) (not (not (and (and (in ?j ?j) (and (not (not (between ?j ?j floor) ) ) (and (not (in ?j ?j) ) (agent_holds ?j) ) (not (agent_holds desk) ) (in_motion ?j) ) (not (not (agent_holds pink) ) ) ) (and (on ?j bed) (and (on pink_dodgeball bed) (and (is_setup_object ?j) (in_motion ?j) ) ) ) (not (and (in_motion room_center) (not (agent_holds bridge_block) ) ) ) ) ) ) )
          (hold-while (in_motion ?j) (and (open ?j) (in agent ?j) (and (adjacent_side ?j ?j ?j) (>= (distance ?j ?j) (distance ?j desk)) (on ?j ?j) ) (and (< 1 (distance ?j ?j)) (in ?j ?j) (in_motion ?j) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 3 4 )
)
(:scoring
  1
)
)(define (game game-id-826) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?c - dodgeball)
      (and
        (game-conserved
          (adjacent ?c ?c)
        )
        (and
          (game-conserved
            (not
              (game_start )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?h - cylindrical_block)
        (at-end
          (in_motion bed)
        )
      )
    )
    (forall (?b - red_dodgeball)
      (and
        (preference preference2
          (exists (?d - hexagonal_bin)
            (then
              (hold (agent_holds ?d) )
              (hold (agent_holds ?b) )
              (hold-to-end (and (on ?d ?b) (not (not (exists (?c - ball ?r - doggie_bed) (and (not (agent_holds ?b) ) (not (adjacent_side ?d ?d ?d ?r) ) (not (not (in ?b ?b) ) ) (agent_holds ?b) ) ) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (+ (count preference1:basketball:red) (count preference2:book:golfball) )
      (count-once-per-objects preference1:blue_dodgeball)
      (* (count-once-per-objects preference2:dodgeball) (count-once-per-external-objects preference2:blue_cube_block:beachball) )
    )
    (count-once-per-objects preference1:golfball)
  )
)
(:scoring
  (count-once preference2:dodgeball)
)
)(define (game game-id-827) (:domain few-objects-room-v1)
(:setup
  (exists (?u - block)
    (game-conserved
      (and
        (< 1 (distance ?u ?u))
        (forall (?x - cube_block)
          (adjacent ?x bed)
        )
        (= 1 1)
      )
    )
  )
)
(:constraints
  (and
    (forall (?v - tan_cube_block)
      (and
        (preference preference1
          (exists (?f - chair)
            (then
              (once (rug_color_under ?v ?f) )
              (hold (object_orientation room_center bed) )
            )
          )
        )
        (preference preference2
          (exists (?a - dodgeball)
            (then
              (once (on ?a ?a) )
            )
          )
        )
        (preference preference3
          (exists (?b - chair ?j - dodgeball)
            (then
              (once (not (and (forall (?r - dodgeball ?h - dodgeball ?f - game_object) (agent_holds rug) ) (broken ?j) (agent_holds ?v) ) ) )
              (once (in_motion ?j) )
              (once (and (in_motion bed) (on agent ?v) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (and
      (>= (* (* (external-forall-maximize 3 ) (count-total preference2:blue_dodgeball) )
          0
        )
        (total-score)
      )
      (> 2 (- (- (* (count-once-per-objects preference2:green:purple) (count preference1) )
          )
        )
      )
    )
    (> (* (> (+ (count preference3:yellow) (count preference3:golfball) (* (count preference3:blue_dodgeball:dodgeball) (count preference3:doggie_bed) )
            2
            8
            7
          )
          1
        )
        (count preference1:dodgeball:dodgeball)
      )
      (+ (count preference2:orange:golfball) (count preference2:basketball:basketball) (count preference2:beachball:golfball) (count preference2:red) (count preference1:beachball) (* 10 15 )
      )
    )
  )
)
(:scoring
  (count preference3)
)
)(define (game game-id-828) (:domain medium-objects-room-v1)
(:setup
  (forall (?q - dodgeball ?y - teddy_bear)
    (game-conserved
      (< 1 8)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?f - pillow)
        (then
          (hold-while (in_motion ?f) (adjacent ?f ?f) )
          (hold (not (and (adjacent_side ?f ?f ?f) (and (= 9 (distance ?f ?f)) (and (and (and (in_motion ?f) (and (not (exists (?d - dodgeball) (and (on ?d ?f) (in ?d ?d) ) ) ) (adjacent ?f ?f) ) (same_type ?f floor) (agent_holds ?f) ) (not (touch bed ?f) ) (in_motion ?f) ) (not (not (agent_holds ?f) ) ) ) ) ) ) )
          (any)
        )
      )
    )
    (preference preference2
      (exists (?k - hexagonal_bin ?m - ball ?u - ball)
        (then
          (hold (not (not (in_motion ?u) ) ) )
          (once (< 1 1) )
          (hold (open ?u) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= 1 5 )
      (>= 4 15 )
      (and
        (>= (total-time) (+ (* (+ (and (+ (count preference2:yellow_cube_block) (external-forall-maximize (* 5 (count preference2:basketball) )
                    )
                    (* 100 (* 20 5 )
                    )
                  )
                  (* (count preference1:basketball) (* 5 10 )
                    2
                  )
                )
                2
                (/
                  (external-forall-maximize
                    (count preference1:yellow:blue_dodgeball)
                  )
                  20
                )
              )
              10
            )
            8
          )
        )
      )
    )
    (>= (count preference2:book) (external-forall-minimize 2 ) )
  )
)
(:scoring
  (count preference2:alarm_clock)
)
)(define (game game-id-829) (:domain many-objects-room-v1)
(:setup
  (forall (?l - (either doggie_bed golfball dodgeball) ?n - cylindrical_block ?e ?v ?d - building)
    (and
      (game-conserved
        (on pink ?v)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?x - block)
        (then
          (once (and (in_motion bed) (in_motion ?x) ) )
          (once (same_type ?x ?x) )
          (once (agent_holds ?x) )
        )
      )
    )
  )
)
(:terminal
  (> (not 5 ) (+ 60 (count preference1:beachball) )
  )
)
(:scoring
  (count preference1:hexagonal_bin)
)
)(define (game game-id-830) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?n - hexagonal_bin)
      (and
        (and
          (exists (?o - ball)
            (forall (?u ?g ?s - hexagonal_bin)
              (exists (?c - (either floor pyramid_block))
                (not
                  (game-conserved
                    (adjacent ?s ?c)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?n - ball)
        (then
          (once (in_motion ?n) )
        )
      )
    )
  )
)
(:terminal
  (> 5 (or 10 (count-once-per-external-objects preference1) (* (* (* 3 (count-once preference1:dodgeball) )
          4
          10
          (* (>= (count preference1:dodgeball) 60 )
            (* (count preference1:blue_cube_block:cylindrical_block) 15 )
          )
          (count-once preference1:pink_dodgeball)
          (count preference1:beachball:golfball)
        )
        (* 1 10 )
      )
    )
  )
)
(:scoring
  (count-increasing-measure preference1:pink_dodgeball)
)
)(define (game game-id-831) (:domain medium-objects-room-v1)
(:setup
  (exists (?a - (either cube_block bridge_block blue_cube_block) ?a - game_object)
    (and
      (forall (?h - cube_block ?m - hexagonal_bin ?r - block)
        (game-conserved
          (agent_holds rug)
        )
      )
      (exists (?u - hexagonal_bin)
        (exists (?q - game_object)
          (exists (?p - hexagonal_bin ?m - dodgeball)
            (game-optional
              (agent_holds ?m)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?b - (either ball book beachball))
        (then
          (once (in_motion ?b) )
          (forall-sequence (?q - ball)
            (then
              (once (agent_holds desk) )
              (once (not (not (in_motion ?b) ) ) )
              (hold-while (agent_holds ?q) (on ?b ?q) )
            )
          )
          (once (in_motion ?b) )
        )
      )
    )
  )
)
(:terminal
  (> 3 10 )
)
(:scoring
  6
)
)(define (game game-id-832) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?g - (either cd main_light_switch) ?x - cube_block)
      (exists (?e - hexagonal_bin)
        (game-conserved
          (touch ?x ?e)
        )
      )
    )
    (exists (?d - shelf ?u - cube_block)
      (game-optional
        (adjacent pink_dodgeball ?u)
      )
    )
    (forall (?z - cube_block ?u - blinds)
      (game-optional
        (not
          (exists (?q - (either dodgeball cylindrical_block))
            (agent_holds ?u)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?z - doggie_bed)
        (then
          (once (and (< (distance ?z ?z) (distance_side pink_dodgeball ?z ?z)) (adjacent ?z ?z) ) )
          (hold (and (<= 1 1) (not (and (adjacent_side floor ?z ?z) (and (not (not (exists (?e - dodgeball) (adjacent_side ?z ?z ?e) ) ) ) (not (not (not (and (in ?z ?z) (above ?z ?z) ) ) ) ) ) ) ) ) )
          (once (agent_holds ?z) )
        )
      )
    )
    (preference preference2
      (exists (?r - block)
        (then
          (once (not (in_motion ?r) ) )
          (hold (not (or (not (> (distance ?r ?r) 0) ) ) ) )
          (once (in_motion ?r) )
        )
      )
    )
    (preference preference3
      (exists (?o - shelf ?y - golfball)
        (then
          (once (in_motion ?y) )
          (hold (same_color ?y ?y) )
          (once (and (not (and (or (in_motion agent) (in_motion ?y) (on ?y ?y) ) (not (not (in ?y agent) ) ) ) ) (in_motion agent) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (count preference3:dodgeball) (count preference2:block:basketball) )
    (/
      (count preference3:blue)
      10
    )
  )
)
(:scoring
  (* (count preference2:rug) 5 )
)
)(define (game game-id-833) (:domain many-objects-room-v1)
(:setup
  (exists (?v - hexagonal_bin ?x - hexagonal_bin ?i - curved_wooden_ramp)
    (and
      (and
        (or
          (game-conserved
            (exists (?y - (either golfball book))
              (and
                (agent_holds ?i)
                (not
                  (and
                    (and
                      (in_motion ?y)
                      (on ?i ?y)
                      (adjacent ?i rug)
                    )
                    (not
                      (not
                        (or
                          (rug_color_under ?y ?i)
                          (in_motion agent)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?f - (either bridge_block curved_wooden_ramp) ?b - building)
        (then
          (hold (in_motion ?b) )
          (hold (exists (?k - hexagonal_bin ?m - game_object ?x - hexagonal_bin) (and (adjacent bed ?x) (in_motion ?x) ) ) )
          (hold (and (on ?b ?b) (agent_holds ?b) ) )
        )
      )
    )
    (forall (?r - block)
      (and
        (preference preference2
          (then
            (once (on ?r ?r) )
            (once (in_motion ?r) )
            (once (or (in ?r ?r) (in_motion ?r) ) )
          )
        )
      )
    )
    (forall (?m - drawer ?j ?h - desktop)
      (and
        (preference preference3
          (exists (?g - hexagonal_bin ?y - hexagonal_bin)
            (then
              (hold-for 1 (not (agent_holds ?j) ) )
            )
          )
        )
        (preference preference4
          (exists (?u - pyramid_block ?f - cube_block ?y - pillow)
            (then
              (hold (toggled_on ?j) )
              (once (adjacent floor desk) )
              (once (not (adjacent ?y ?y) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:book) (count preference1:hexagonal_bin) )
)
(:scoring
  7
)
)(define (game game-id-834) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?s - game_object ?v - block)
      (or
        (and
          (forall (?a - pyramid_block)
            (exists (?q - hexagonal_bin)
              (and
                (game-optional
                  (in_motion ?q)
                )
                (exists (?l - game_object)
                  (game-conserved
                    (in_motion ?v)
                  )
                )
                (game-optional
                  (not
                    (< (distance ?q door) 1)
                  )
                )
              )
            )
          )
        )
        (game-conserved
          (not
            (not
              (is_setup_object ?v)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?j - ball)
        (then
          (once (and (adjacent ?j ?j) (not (not (exists (?i - desktop ?v - hexagonal_bin) (in_motion ?v) ) ) ) (adjacent_side ?j upright ?j) ) )
          (once (agent_holds ?j) )
          (hold (and (exists (?d - (either bridge_block beachball dodgeball)) (in ?j ?j) ) (and (and (adjacent ?j ?j) (or (agent_holds ?j) (on ?j ?j) ) ) (in_motion ?j) ) ) )
        )
      )
    )
    (preference preference2
      (exists (?m - hexagonal_bin)
        (then
          (hold (not (and (on rug ?m) (not (and (on ?m ?m) (< 2 (distance ?m ?m)) ) ) ) ) )
          (once (same_color ?m ?m) )
          (once (and (object_orientation north_wall ?m) (agent_holds ?m) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (- (- 5 (* (count preference1:dodgeball:blue_dodgeball) 5 )
        )
      )
      (count-once-per-objects preference2:dodgeball:red)
    )
    (+ (count preference2:wall:wall) (* 5 (count-measure preference2:dodgeball) )
    )
  )
)
(:scoring
  (count preference1:basketball:pink)
)
)(define (game game-id-835) (:domain many-objects-room-v1)
(:setup
  (forall (?a - block)
    (game-optional
      (on ?a ?a)
    )
  )
)
(:constraints
  (and
    (forall (?k - flat_block)
      (and
        (preference preference1
          (exists (?y ?b - cube_block ?u - wall)
            (then
              (once (or (in desk ?k) (rug_color_under agent desk) ) )
              (hold (and (faces ?k ?k) (on ?k ?k) ) )
              (once (not (and (and (> 2 1) (not (not (not (in_motion ?k) ) ) ) ) (agent_holds ?u) ) ) )
            )
          )
        )
        (preference preference2
          (exists (?u - hexagonal_bin)
            (at-end
              (on ?k ?k)
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?o - ball)
        (then
          (once (and (not (not (and (and (agent_holds ?o) (in_motion ?o) (in_motion ?o) (in_motion ?o) (and (agent_holds ?o) (not (agent_holds room_center) ) ) (< (distance_side ?o desk ?o ?o) 1) ) (adjacent ?o ?o) ) ) ) (in_motion ?o) ) )
          (hold (and (and (in_motion floor) (in_motion ?o) ) (and (and (open ?o) (not (same_color ?o agent) ) ) (agent_holds ?o) ) ) )
          (hold (not (agent_holds ?o) ) )
        )
      )
    )
  )
)
(:terminal
  (< 9 (count preference3:pink) )
)
(:scoring
  (- (count-unique-positions preference1:blue_cube_block) )
)
)(define (game game-id-836) (:domain medium-objects-room-v1)
(:setup
  (exists (?i - dodgeball)
    (game-optional
      (agent_holds ?i)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?i - (either dodgeball basketball))
        (at-end
          (on top_shelf ?i)
        )
      )
    )
  )
)
(:terminal
  (>= (* 8 (total-score) (count-longest preference1:green) )
    20
  )
)
(:scoring
  (+ (count-once-per-objects preference1:dodgeball) (total-score) (count-total preference1:pink) )
)
)(define (game game-id-837) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?o - ball ?f - golfball)
      (exists (?j - hexagonal_bin ?g - dodgeball)
        (game-conserved
          (agent_holds ?g)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?n - hexagonal_bin ?s - curved_wooden_ramp)
      (and
        (preference preference1
          (exists (?h - dodgeball)
            (at-end
              (touch agent ?s)
            )
          )
        )
        (preference preference2
          (exists (?p - dodgeball ?e - chair ?x - wall)
            (then
              (once (not (agent_holds ?s) ) )
              (once (toggled_on ?x) )
              (hold (on ?x ?x) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?z - curved_wooden_ramp)
        (at-end
          (in ?z ?z)
        )
      )
    )
    (preference preference4
      (exists (?y ?x - hexagonal_bin)
        (then
          (any)
          (once (between ?y ?x ?x) )
          (once (open ?x) )
        )
      )
    )
  )
)
(:terminal
  (>= (not 10 ) 50 )
)
(:scoring
  (count-once preference3:golfball)
)
)(define (game game-id-838) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?e - tall_cylindrical_block ?u - hexagonal_bin)
      (game-conserved
        (not
          (touch ?u pink_dodgeball)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?k - building ?u - hexagonal_bin ?d - cube_block)
        (then
          (once (toggled_on ?d) )
          (once (and (not (>= (distance ?d upright) (distance ?d ?d)) ) (in_motion ?d) ) )
          (once (agent_holds left) )
        )
      )
    )
    (preference preference2
      (exists (?s - hexagonal_bin ?f - block)
        (then
          (once (agent_holds ?f) )
          (once (not (in_motion ?f) ) )
          (hold-while (adjacent ?f ?f) (not (agent_holds ?f) ) (in_motion rug) (and (adjacent ?f ?f) (and (on ?f ?f) (not (touch agent ?f) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (< (count-increasing-measure preference1:pink_dodgeball:pink_dodgeball:blue_dodgeball) (* 15 5 (count preference1:pyramid_block) )
  )
)
(:scoring
  (= 2 (count preference1:orange) )
)
)(define (game game-id-839) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?v - ball)
      (forall (?h - hexagonal_bin)
        (game-optional
          (in_motion bed)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?a - (either curved_wooden_ramp wall))
      (and
        (preference preference1
          (exists (?o - curved_wooden_ramp)
            (then
              (once (adjacent ?a ?a) )
              (once (and (> 3 (distance room_center agent)) (agent_holds ?o) ) )
              (hold (in_motion ?o) )
            )
          )
        )
        (preference preference2
          (exists (?d - (either doggie_bed alarm_clock))
            (then
              (hold-while (adjacent ?d agent) (not (exists (?x - doggie_bed ?n - doggie_bed) (not (and (agent_holds front) (agent_holds north_wall) ) ) ) ) )
              (once (in_motion ?a) )
              (once (agent_holds rug) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?p - hexagonal_bin)
        (then
          (once (adjacent ?p ?p) )
          (once (not (and (= 1 (distance ?p ?p) (distance ?p ?p) (distance floor ?p)) (in_motion ?p) (and (same_color ?p ?p) (not (not (or (and (on ?p front) (in_motion ?p) (agent_holds ?p) (agent_holds ?p) (or (adjacent_side ?p ?p ?p) (and (in_motion front) (agent_holds ?p) ) ) (agent_holds ?p) ) (not (> (distance door ?p) 1) ) ) ) ) ) ) ) )
          (hold-while (in_motion ?p) (in_motion ?p) )
        )
      )
    )
    (preference preference4
      (exists (?b - hexagonal_bin ?z - hexagonal_bin)
        (at-end
          (and
            (and
              (agent_holds ?z)
              (agent_holds ?z)
              (and
                (exists (?g - (either hexagonal_bin dodgeball) ?q - (either cube_block bridge_block pencil desktop))
                  (and
                    (and
                      (in ?q ?z)
                      (and
                        (in ?z pillow)
                      )
                    )
                    (on ?z ?z)
                  )
                )
                (adjacent desk ?z)
              )
            )
            (< (distance ?z ?z) 1)
          )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (/ (= 18 (count-once-per-objects preference1:pink) )
      (count preference4:basketball)
    )
  )
)
(:scoring
  (* 300 (count-once-per-objects preference2:hexagonal_bin:pink) )
)
)(define (game game-id-840) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?l - drawer ?g - dodgeball)
      (game-conserved
        (in_motion ?g)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?z ?l ?c ?d ?k ?g - curved_wooden_ramp ?l - (either pink tall_cylindrical_block floor))
        (then
          (once (and (not (in_motion ?l) ) (not (not (and (adjacent room_center ?l) ) ) ) ) )
          (once (in_motion front_left_corner) )
          (hold-while (not (and (not (on ?l ?l) ) (not (> (distance ?l ?l) 1) ) ) ) (and (between bed ?l front_left_corner) (= (distance ?l ?l) 9) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= 10 (+ (not (* 5 (not (* 2 8 )
            )
          )
        )
        (* (+ (total-score) )
          (count preference1:orange:pink_dodgeball)
        )
      )
    )
    (or
      (or
        (or
          (>= (* (count preference1:beachball:pyramid_block) 1 (count preference1:dodgeball) )
            5
          )
        )
        (<= 10 (total-time) )
      )
      (not
        (>= (count-once-per-objects preference1:basketball) 6 )
      )
    )
    (>= (* 100 (count preference1:blue) )
      (* 5 5 )
    )
  )
)
(:scoring
  (count preference1:beachball:blue_dodgeball)
)
)(define (game game-id-841) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?j - pillow ?x - flat_block ?r - wall)
      (game-optional
        (and
          (not
            (agent_crouches )
          )
          (= 1 (distance ?r ?r))
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?s - yellow_pyramid_block ?d - dodgeball)
        (then
          (hold (and (< (building_size ?d) (distance ?d ?d)) (and (in_motion ?d) (in ?d room_center) (agent_holds ?d) ) ) )
          (once (broken ?d) )
          (once (agent_holds ?d) )
        )
      )
    )
  )
)
(:terminal
  (> 2 (+ (count-once-per-objects preference1:cylindrical_block) (* (count preference1:yellow) (/ (* 10 (count-once-per-external-objects preference1:doggie_bed:dodgeball) )
          4
        )
      )
    )
  )
)
(:scoring
  (total-score)
)
)(define (game game-id-842) (:domain medium-objects-room-v1)
(:setup
  (forall (?a - hexagonal_bin)
    (exists (?q - building)
      (game-optional
        (in_motion ?q)
      )
    )
  )
)
(:constraints
  (and
    (forall (?g - ball)
      (and
        (preference preference1
          (exists (?y - hexagonal_bin ?w - curved_wooden_ramp ?p - hexagonal_bin)
            (then
              (hold (and (and (forall (?m - hexagonal_bin) (and (in_motion ?g) (agent_holds bed) ) ) (adjacent ?g upright) (in_motion ?p) (and (in ?p ?p) (object_orientation agent ?p) ) ) (and (not (adjacent ?p ?g) ) (and (on bed pink_dodgeball) (not (same_object ?g ?p) ) ) ) ) )
              (once (agent_holds ?g) )
              (once (agent_holds ?p) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?m - drawer)
        (then
          (once (in ?m ?m) )
          (once (touch ?m green_golfball) )
          (hold (not (in_motion ?m) ) )
        )
      )
    )
    (preference preference3
      (exists (?j - cube_block)
        (then
          (hold (in ?j ?j) )
          (once (on ?j ?j) )
          (hold (in ?j ?j) )
        )
      )
    )
  )
)
(:terminal
  (>= 3 3 )
)
(:scoring
  3
)
)(define (game game-id-843) (:domain many-objects-room-v1)
(:setup
  (forall (?z - dodgeball)
    (exists (?p ?j ?q - teddy_bear)
      (and
        (exists (?b - dodgeball)
          (and
            (game-conserved
              (and
                (not
                  (in_motion ?z)
                )
                (same_object ?b bed)
              )
            )
            (game-optional
              (in_motion ?j)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?x - doggie_bed)
        (at-end
          (adjacent ?x bed)
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (and (count-shortest preference1:book) (count-overlapping preference1:pink) ) (count-increasing-measure preference1:basketball) )
  )
)
(:scoring
  2
)
)(define (game game-id-844) (:domain few-objects-room-v1)
(:setup
  (exists (?y - (either dodgeball pink laptop))
    (exists (?h - cube_block ?j - sliding_door)
      (game-optional
        (not
          (agent_holds brown)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?q - (either yellow_cube_block cube_block) ?v - ball)
        (at-end
          (touch ?v ?v)
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference1:blue_dodgeball:dodgeball) (count-once preference1:beachball) )
)
(:scoring
  3
)
)(define (game game-id-845) (:domain medium-objects-room-v1)
(:setup
  (exists (?h - block)
    (exists (?b - ball)
      (forall (?a ?w - (either dodgeball cd))
        (game-conserved
          (= 1 (distance pink_dodgeball ?h))
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?c ?v - ball ?n - ball)
        (then
          (once (= 6 1) )
          (hold-while (and (not (in_motion ?n) ) (exists (?b - hexagonal_bin) (agent_holds ?n) ) ) (agent_holds ?n) (not (on ?n ?n) ) )
          (once (not (forall (?y - shelf ?z - hexagonal_bin) (agent_holds ?z) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count preference1:dodgeball:basketball) 5 )
    (>= (- (count-once-per-objects preference1:blue_pyramid_block) )
      (count preference1:dodgeball)
    )
  )
)
(:scoring
  (< 2 (count-longest preference1:dodgeball:basketball) )
)
)(define (game game-id-846) (:domain many-objects-room-v1)
(:setup
  (exists (?u - (either dodgeball golfball) ?f - dodgeball)
    (exists (?l - hexagonal_bin)
      (game-conserved
        (and
          (< (distance ?f ?l) 6)
          (in ?l bed)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - cube_block)
      (and
        (preference preference1
          (exists (?b ?c ?p ?l ?a ?r - game_object)
            (then
              (once (in_motion ?a) )
              (once (and (and (adjacent ?a main_light_switch) (not (same_color ?d ?b) ) ) (in_motion rug) ) )
              (once (in_motion ?c) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (+ 1 4 )
      1
    )
    3
  )
)
(:scoring
  8
)
)(define (game game-id-847) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?n - (either hexagonal_bin book))
      (game-optional
        (in_motion ?n)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?x - shelf)
        (then
          (once (in_motion ?x) )
          (once (adjacent ?x ?x) )
          (hold (agent_holds ?x) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (- (* (count-once-per-objects preference1:blue_pyramid_block) 1 )
      )
      (* (- 20 )
        4
      )
    )
    (count-once preference1:red_pyramid_block)
  )
)
(:scoring
  (count preference1:golfball)
)
)(define (game game-id-848) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?s - ball ?w - dodgeball)
      (exists (?j - chair)
        (and
          (game-conserved
            (in_motion ?w)
          )
          (game-conserved
            (> (distance_side ?j ?j ?w ?w) 4)
          )
          (game-conserved
            (exists (?t - (either laptop triangle_block chair) ?r - (either bed golfball))
              (and
                (and
                  (agent_holds ?r)
                  (agent_holds ?j)
                )
                (or
                  (touch ?j ?j)
                  (and
                    (adjacent ?j ?w)
                    (not
                      (not
                        (and
                          (or
                            (in pink_dodgeball ?w)
                            (equal_x_position ?r desk)
                          )
                          (in_motion agent)
                        )
                      )
                    )
                    (not
                      (not
                        (agent_holds ?r)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
    (and
      (game-conserved
        (agent_holds upside_down)
      )
    )
  )
)
(:constraints
  (and
    (forall (?l - ball ?q - wall)
      (and
        (preference preference1
          (exists (?s - ball ?g - (either key_chain block))
            (then
              (forall-sequence (?c - wall ?f - red_dodgeball)
                (then
                  (once (same_color ?q ?q) )
                  (hold (on ?f ?q) )
                )
              )
              (hold (not (adjacent_side ?q desk rug) ) )
              (once (and (in ?g ?q) (agent_holds ?g) (equal_x_position ?g ?q) (touch ?q ?q) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (= (count preference1:hexagonal_bin) 0.7 )
)
(:scoring
  3
)
)(define (game game-id-849) (:domain few-objects-room-v1)
(:setup
  (exists (?j - (either cylindrical_block floor cd))
    (game-conserved
      (in_motion ?j)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?r - (either book cd cylindrical_block))
        (then
          (forall-sequence (?h - blue_cube_block ?n - dodgeball)
            (then
              (once (agent_holds ?r) )
              (once (in_motion ?n) )
              (once (on ?n ?r) )
            )
          )
          (once (and (and (adjacent_side front ?r floor) (not (in ?r ?r) ) ) (agent_holds ?r) ) )
          (once (not (agent_holds ?r) ) )
        )
      )
    )
  )
)
(:terminal
  (<= 1 (count-once-per-external-objects preference1:beachball) )
)
(:scoring
  (count preference1:red_pyramid_block)
)
)(define (game game-id-850) (:domain medium-objects-room-v1)
(:setup
  (exists (?k ?l - teddy_bear ?j - (either pencil doggie_bed ball) ?r - (either floor golfball golfball))
    (and
      (exists (?u - building)
        (and
          (forall (?o - curved_wooden_ramp ?c - game_object ?m - game_object)
            (forall (?i - block)
              (game-optional
                (in_motion ?u)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?a - chair)
        (at-end
          (and
            (and
              (not
                (not
                  (in agent ?a)
                )
              )
              (not
                (and
                  (and
                    (and
                      (on ?a pillow)
                      (and
                        (in_motion ?a)
                        (and
                          (not
                            (not
                              (not
                                (not
                                  (agent_holds desk)
                                )
                              )
                            )
                          )
                          (and
                            (and
                              (and
                                (and
                                  (and
                                    (adjacent ?a ?a)
                                    (not
                                      (not
                                        (and
                                          (faces ?a ?a)
                                          (in ?a ?a)
                                        )
                                      )
                                    )
                                    (>= 1 0)
                                  )
                                  (and
                                    (agent_holds room_center)
                                    (not
                                      (or
                                        (touch agent ?a)
                                        (and
                                          (agent_holds agent)
                                          (agent_holds ?a)
                                        )
                                      )
                                    )
                                  )
                                )
                                (agent_holds ?a)
                                (and
                                  (on ?a ?a)
                                  (in_motion agent)
                                )
                              )
                              (and
                                (exists (?j ?w - (either blue_cube_block cd hexagonal_bin) ?b - ball)
                                  (not
                                    (toggled_on ?a)
                                  )
                                )
                                (on ?a ?a)
                                (in_motion ?a)
                              )
                            )
                            (exists (?q - (either dodgeball pillow))
                              (and
                                (> 1 (distance ?q ?q))
                                (agent_holds ?a)
                              )
                            )
                          )
                        )
                      )
                    )
                    (object_orientation ?a ?a)
                  )
                  (on ?a ?a)
                )
              )
            )
            (and
              (> 9 (x_position ?a))
              (in_motion ?a)
            )
            (adjacent ?a ?a)
            (adjacent ?a ?a)
          )
        )
      )
    )
  )
)
(:terminal
  (> 2 3 )
)
(:scoring
  (* (- 6 )
    (* (count-once-per-objects preference1:hexagonal_bin) (* (count-once-per-objects preference1:pink) 4 )
      3
      (count preference1:yellow_cube_block)
    )
  )
)
)(define (game game-id-851) (:domain few-objects-room-v1)
(:setup
  (exists (?w - cube_block)
    (and
      (and
        (forall (?h - hexagonal_bin)
          (and
            (exists (?g - bridge_block ?x - (either pink beachball) ?c - block)
              (exists (?k - building ?l - wall)
                (game-conserved
                  (same_object right ?w)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - drawer ?j - blue_cube_block ?l - flat_block ?j - (either book hexagonal_bin))
      (and
        (preference preference1
          (exists (?m ?a - game_object)
            (at-end
              (not
                (agent_holds ?j)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (* (count-once-per-objects preference1:dodgeball) (- (count-once-per-objects preference1:pink) )
        6
        2
      )
      (count-once-per-external-objects preference1:orange)
    )
  )
)
(:scoring
  (* (count-once-per-objects preference1:pink) (- (count-once-per-objects preference1:golfball) )
  )
)
)(define (game game-id-852) (:domain few-objects-room-v1)
(:setup
  (forall (?e - cube_block)
    (exists (?o - color)
      (and
        (forall (?z - dodgeball ?f - hexagonal_bin)
          (forall (?n - building ?b - hexagonal_bin)
            (game-conserved
              (agent_holds ?b)
            )
          )
        )
        (game-conserved
          (adjacent_side rug ?e ?e)
        )
        (exists (?h ?d - hexagonal_bin)
          (game-conserved
            (not
              (same_color door ?d)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?t - dodgeball)
        (at-end
          (in_motion ?t)
        )
      )
    )
  )
)
(:terminal
  (> (* 1 (count-once-per-external-objects preference1:yellow:top_drawer) )
    2
  )
)
(:scoring
  (count preference1:red)
)
)(define (game game-id-853) (:domain few-objects-room-v1)
(:setup
  (forall (?g - ball)
    (game-conserved
      (and
        (not
          (in_motion ?g)
        )
        (and
          (and
            (in ?g upside_down)
            (and
              (agent_holds desk)
              (agent_holds door)
            )
          )
          (= (distance ?g bed) 1)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?v - (either book book dodgeball))
        (then
          (once (not (not (agent_holds ?v) ) ) )
          (once (above ?v ?v) )
          (hold (not (and (on ?v ?v) (agent_holds ?v) ) ) )
        )
      )
    )
  )
)
(:terminal
  (> (* (* 2 (count preference1:beachball) )
      15
    )
    (= (count-overlapping preference1:beachball) (count-once-per-objects preference1:pink) )
  )
)
(:scoring
  5
)
)(define (game game-id-854) (:domain medium-objects-room-v1)
(:setup
  (exists (?q - hexagonal_bin ?t - block ?w - (either cube_block bridge_block))
    (exists (?z - dodgeball ?f - hexagonal_bin)
      (game-conserved
        (agent_holds ?w)
      )
    )
  )
)
(:constraints
  (and
    (forall (?e - pyramid_block ?i - hexagonal_bin ?m - beachball)
      (and
        (preference preference1
          (exists (?u - (either wall pyramid_block))
            (then
              (hold (on ?m ?m) )
              (once (and (and (is_setup_object ?m) (exists (?k - wall ?l - game_object ?t ?c - dodgeball) (touch ?c ?t) ) ) (in_motion ?m) ) )
              (once (in ?m ?m) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?i - ball)
        (then
          (hold (and (faces pink ?i) (and (and (agent_holds ?i) (and (agent_holds ?i) (in_motion agent) ) (and (not (agent_holds ?i) ) (not (agent_holds south_west_corner) ) ) ) (and (in_motion ?i) (on ?i ?i) ) ) (not (in_motion ?i) ) ) )
          (once (< (distance ?i ?i) (distance ?i ?i)) )
          (hold (not (agent_holds desk) ) )
        )
      )
    )
    (preference preference3
      (exists (?v - hexagonal_bin ?l - (either golfball desktop dodgeball cd golfball))
        (then
          (hold-for 1 (in_motion ?l) )
          (once (in ?l ?l) )
          (hold (toggled_on room_center) )
          (once (not (and (in_motion ?l) (agent_holds ?l) (in_motion ?l) (in_motion ?l) ) ) )
        )
      )
    )
  )
)
(:terminal
  (> 2 (count-once-per-objects preference3:basketball) )
)
(:scoring
  (external-forall-maximize
    5
  )
)
)(define (game game-id-855) (:domain medium-objects-room-v1)
(:setup
  (exists (?f - yellow_pyramid_block)
    (and
      (exists (?x - (either cellphone) ?x - hexagonal_bin ?s - ball)
        (game-conserved
          (in_motion ?f)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?i - dodgeball)
      (and
        (preference preference1
          (exists (?w - hexagonal_bin ?a - dodgeball)
            (then
              (once (not (and (above ?a agent) (touch ?i pink_dodgeball) ) ) )
              (once (on ?i ?i) )
            )
          )
        )
        (preference preference2
          (then
            (hold (not (not (agent_holds bed) ) ) )
            (once (agent_holds ?i) )
            (once (or (not (< 2 (distance ?i ?i)) ) (in_motion ?i) ) )
          )
        )
        (preference preference3
          (exists (?u - hexagonal_bin)
            (then
              (hold (not (in_motion ?i) ) )
              (hold (in_motion ?i) )
              (once (game_start ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (or
        (< 50 10 )
        (and
          (not
            (< (count-once-per-objects preference2:golfball) (- (count preference1:basketball) )
            )
          )
        )
        (>= (count-once-per-objects preference1:dodgeball) (count preference2:beachball:triangle_block) )
      )
      (not
        (> (= (count-overlapping preference2:book) 2 )
          (count-once-per-objects preference1:beachball)
        )
      )
      (>= (and 5 (* (* (- (+ (count preference2:dodgeball) )
              )
              6
            )
            (and
              4
            )
          )
          (* (count-unique-positions preference2:dodgeball:beachball) (+ (external-forall-maximize (count-once-per-objects preference1:pink_dodgeball:golfball) ) 50 (not 15 ) )
          )
        )
        10
      )
    )
    (not
      (>= (count-once-per-objects preference1:golfball) (count-once preference1:basketball) )
    )
  )
)
(:scoring
  100
)
)(define (game game-id-856) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (agent_holds bed)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?p - hexagonal_bin)
        (at-end
          (in ?p ?p)
        )
      )
    )
  )
)
(:terminal
  (>= (not (count-increasing-measure preference1:red) ) (- 2 )
  )
)
(:scoring
  (* (count-once preference1:blue_dodgeball) (- (count preference1:tall_cylindrical_block) )
  )
)
)(define (game game-id-857) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?f - teddy_bear)
      (game-conserved
        (not
          (and
            (in_motion ?f)
            (and
              (and
                (and
                  (agent_holds ?f)
                  (not
                    (and
                      (agent_holds ?f)
                      (and
                        (and
                          (or
                            (or
                              (and
                                (not
                                  (and
                                    (not
                                      (agent_holds ?f)
                                    )
                                    (agent_holds desk)
                                    (not
                                      (in_motion ?f)
                                    )
                                  )
                                )
                                (in_motion ?f)
                              )
                              (forall (?b - ball)
                                (object_orientation blue ?f)
                              )
                            )
                          )
                          (agent_holds ?f)
                        )
                        (and
                          (in upright ?f)
                          (in_motion ?f)
                          (and
                            (in_motion ?f)
                          )
                        )
                      )
                    )
                  )
                  (in_motion ?f)
                )
                (rug_color_under ?f agent)
                (in_motion ?f)
              )
              (not
                (open ?f)
              )
            )
            (< 4 1)
          )
        )
      )
    )
    (forall (?m ?g - curved_wooden_ramp ?q - desk_shelf)
      (game-optional
        (not
          (and
            (adjacent ?q ?q)
            (agent_holds ?q)
            (agent_holds ?q)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?z - doggie_bed ?u - hexagonal_bin ?a - dodgeball)
        (then
          (once (on south_west_corner ?a) )
          (hold (and (> 4 (x_position floor)) (and (in_motion ?a) (and (on ?a ?a) (on ?a ?a) ) ) ) )
          (hold (in ?a ?a) )
        )
      )
    )
  )
)
(:terminal
  (< 5 (+ (* (count-once-per-objects preference1:golfball:pink_dodgeball) 10 )
      (* 10 1 )
    )
  )
)
(:scoring
  (count-once-per-objects preference1:yellow)
)
)(define (game game-id-858) (:domain many-objects-room-v1)
(:setup
  (exists (?i - beachball ?m - block ?m ?v ?c - hexagonal_bin)
    (game-conserved
      (not
        (in_motion rug)
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - chair ?r ?f - beachball ?v - chair)
      (and
        (preference preference1
          (exists (?d - (either cylindrical_block doggie_bed) ?z - pillow)
            (then
              (once (on ?v ?v) )
              (once (< (distance ?v brown) (distance ?z ?v)) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (* 10 (count preference1:green) )
        1
      )
      (> (count-once-per-objects preference1:red) 5 )
      (or
        (or
          (>= (count-once-per-objects preference1:green) (count preference1:basketball) )
        )
        (or
          (or
            (= (* (external-forall-maximize (count preference1:yellow) ) (count-longest preference1:rug:green) )
              (+ 3 10 )
            )
            (or
              (>= 1 2 )
              (>= (total-score) (count preference1:brown:red) )
            )
          )
          (not
            (>= (count preference1) (* (count-once-per-objects preference1:pink:yellow:dodgeball) (or (total-score) ) )
            )
          )
          (>= (count preference1:purple) (count preference1:beachball) )
        )
        (or
          (> (count preference1:blue) (external-forall-maximize (count preference1:red:golfball:dodgeball) ) )
          (> 5 6 )
          (>= (count preference1:yellow_cube_block) (+ 100 (* 5 (* (count preference1:dodgeball) (* (count-once-per-objects preference1:golfball) (external-forall-maximize (external-forall-maximize 0 ) ) )
                )
              )
            )
          )
        )
      )
      (<= (* 5 (count-once-per-objects preference1:side_table) )
        (+ (* (count preference1:green:blue_pyramid_block) (count preference1:red) )
          (total-time)
        )
      )
    )
    (or
      (or
        (or
          (>= (count-once preference1:beachball) (* (* (- (count preference1:blue_dodgeball) )
                (count-total preference1:dodgeball)
              )
              30
            )
          )
          (>= (count preference1:yellow) 10 )
          (>= (count-once preference1:side_table:dodgeball) (* (or (<= (count preference1:dodgeball:dodgeball) (+ (count-once-per-objects preference1:beachball) (count-longest preference1:dodgeball) )
                )
                (< 3 (count preference1:golfball) )
              )
              15
            )
          )
          (>= 10 3 )
        )
        (not
          (>= (total-score) (external-forall-maximize (total-time) ) )
        )
      )
      (> (and (= (+ (* (count-same-positions preference1:green:dodgeball) 10 )
              2
            )
          )
          (count preference1:alarm_clock)
          (count-once-per-objects preference1:blue_cube_block)
        )
        1
      )
    )
    (> (count preference1:dodgeball:basketball) (count preference1:doggie_bed) )
  )
)
(:scoring
  (count preference1)
)
)(define (game game-id-859) (:domain few-objects-room-v1)
(:setup
  (forall (?l - dodgeball)
    (game-optional
      (and
        (on ?l ?l)
        (in_motion ?l)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?d - ball)
        (at-end
          (in_motion ?d)
        )
      )
    )
  )
)
(:terminal
  (>= (/ 3 (count-once-per-objects preference1:beachball:beachball:basketball) ) (+ 1 3 )
  )
)
(:scoring
  (count-unique-positions preference1:yellow:beachball)
)
)(define (game game-id-860) (:domain medium-objects-room-v1)
(:setup
  (forall (?m - curved_wooden_ramp)
    (game-optional
      (agent_holds ?m)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?p - hexagonal_bin)
        (then
          (once (in desktop rug) )
          (once (and (not (same_color ?p ?p) ) (agent_holds rug) ) )
          (once (exists (?c - doggie_bed ?t - (either dodgeball dodgeball dodgeball) ?y - teddy_bear) (not (touch ?p ?p) ) ) )
        )
      )
    )
    (forall (?h - doggie_bed)
      (and
        (preference preference2
          (exists (?a - (either book mug cube_block))
            (then
              (hold (agent_holds ?a) )
              (hold-while (faces ?a rug) (agent_holds ?h) (= 4 (distance rug ?h)) (exists (?j - cube_block) (same_object agent ?h) ) )
              (hold-while (opposite ?h ?h) (in_motion agent) (in_motion ?h) )
            )
          )
        )
        (preference preference3
          (exists (?n - hexagonal_bin)
            (then
              (once (adjacent agent floor) )
              (once (agent_holds ?h) )
              (once (exists (?r - hexagonal_bin) (not (adjacent_side ?h ?r ?h) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* 2 0.7 )
    (* (external-forall-maximize 9 ) (count preference1:yellow_cube_block) )
  )
)
(:scoring
  (count-once-per-objects preference2:cube_block)
)
)(define (game game-id-861) (:domain medium-objects-room-v1)
(:setup
  (exists (?l - hexagonal_bin ?g - teddy_bear ?t - ball)
    (exists (?f - building)
      (and
        (forall (?g - hexagonal_bin ?d - dodgeball)
          (and
            (exists (?q - game_object ?u ?z ?q - rug)
              (exists (?e - teddy_bear)
                (and
                  (game-conserved
                    (agent_holds ?d)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?p - hexagonal_bin ?q - hexagonal_bin)
        (at-end
          (not
            (agent_holds ?q)
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference1:dodgeball) (* (count-once-per-objects preference1:block) (external-forall-maximize (* (* (+ 6 (* 2 (count-once-per-objects preference1:dodgeball) 1 300 )
              (* 0 (count preference1:yellow) )
            )
            (count-total preference1:beachball)
          )
          3
        )
      )
    )
  )
)
(:scoring
  10
)
)(define (game game-id-862) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (exists (?z - triangular_ramp)
      (not
        (< 2 10)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?v - building ?e - (either dodgeball top_drawer))
        (then
          (once-measure (adjacent_side rug ?e desk top_drawer) (building_size ?e) )
          (once (in blue ?e) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (* (count preference1:blue_dodgeball) 40 )
  )
)
(:scoring
  (<= (* (count preference1:pink:beachball) (* 4 (+ (count preference1:purple) (/ 5 (count preference1:basketball:book) ) )
      )
      (count-once preference1:pink:basketball)
      (count preference1:red)
    )
    1
  )
)
)(define (game game-id-863) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?i ?t ?c ?x - (either cellphone top_drawer desktop))
      (game-conserved
        (not
          (> 1 (distance ?i ?t))
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?m - desk_shelf ?h - curved_wooden_ramp)
        (at-end
          (exists (?s - block ?s ?a - (either pillow alarm_clock))
            (and
              (agent_holds ?a)
              (agent_holds ?a)
              (and
                (agent_holds ?a)
                (and
                  (and
                    (adjacent bed ?a)
                    (agent_holds ?a)
                  )
                  (and
                    (on desk agent)
                    (exists (?p - game_object)
                      (in_motion ?h)
                    )
                    (in ?h ?h)
                    (in_motion ?h)
                  )
                  (exists (?q - hexagonal_bin ?c - cube_block)
                    (not
                      (is_setup_object ?s)
                    )
                  )
                  (not
                    (touch agent ?h)
                  )
                  (in_motion ?s)
                  (and
                    (agent_holds ?s)
                    (and
                      (and
                        (touch ?h ?h)
                        (not
                          (and
                            (same_color pillow ?s)
                            (game_over )
                          )
                        )
                        (not
                          (agent_holds front)
                        )
                      )
                      (in_motion ?h)
                    )
                    (and
                      (not
                        (agent_holds ?h)
                      )
                      (in_motion ?s)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= (= 30 )
    (* 10 (count preference1:dodgeball) )
  )
)
(:scoring
  2
)
)(define (game game-id-864) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (agent_holds rug)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?c - cube_block)
        (then
          (once (in_motion ?c) )
          (once (and (< 6 1) ) )
          (once (adjacent bed ?c) )
        )
      )
    )
    (preference preference2
      (exists (?r - game_object ?r - (either golfball alarm_clock))
        (then
          (hold-for 7 (not (and (and (agent_holds ?r) (in_motion ?r) ) (not (in ?r ?r) ) (not (and (and (and (agent_holds ?r) (not (not (and (in ?r ?r) (and (on ?r ?r) (same_color ?r ?r) ) ) ) ) ) (adjacent_side agent ?r ?r ?r) ) (in_motion ?r) ) ) ) ) )
          (hold-while (and (not (not (and (not (toggled_on ?r) ) (in_motion upright) ) ) ) (adjacent ?r agent) ) (rug_color_under ?r side_table) )
          (once (not (touch ?r ?r) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (count-once-per-objects preference2:cube_block) )
)
(:scoring
  (count-increasing-measure preference2:pink)
)
)(define (game game-id-865) (:domain many-objects-room-v1)
(:setup
  (exists (?u - hexagonal_bin)
    (game-conserved
      (in_motion bridge_block)
    )
  )
)
(:constraints
  (and
    (forall (?a - hexagonal_bin ?z - hexagonal_bin ?f ?u ?a ?x ?t ?l - (either golfball triangular_ramp tall_cylindrical_block))
      (and
        (preference preference1
          (exists (?s - hexagonal_bin)
            (then
              (once (in_motion ?a) )
              (once (in_motion ?l) )
              (once (not (on ?t ?l) ) )
            )
          )
        )
        (preference preference2
          (exists (?n - (either cd desktop) ?b - chair ?v - (either key_chain yellow_cube_block))
            (then
              (hold (in_motion ?x) )
              (hold (in_motion ?t) )
              (once (not (not (equal_x_position ?v desk) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference2:dodgeball:pink) (- (count preference2:cube_block) )
  )
)
(:scoring
  4
)
)(define (game game-id-866) (:domain medium-objects-room-v1)
(:setup
  (exists (?l ?p - ball)
    (game-optional
      (not
        (>= 2 0.5)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?m - (either dodgeball pyramid_block))
        (then
          (hold (not (on ?m ?m) ) )
          (once (in_motion bed) )
          (once (on ?m ?m) )
        )
      )
    )
  )
)
(:terminal
  (or
    (> 30 (count-unique-positions preference1:pink:golfball) )
    (or
      (>= (count-once-per-objects preference1:pink_dodgeball) (+ (external-forall-minimize 1 ) (external-forall-maximize (count preference1:dodgeball) ) )
      )
      (>= (* (* (count preference1:basketball:yellow) (count-once-per-objects preference1:blue_cube_block:green) )
          (+ (+ (count preference1:beachball:blue_pyramid_block) (* (* (count preference1:blue_dodgeball) 8 )
                (* (count-once-per-objects preference1:book:beachball) (count preference1:red) )
              )
            )
            (count preference1:dodgeball)
          )
          10
          (* (external-forall-minimize 2 ) (- (+ (total-score) (* 9 5 )
              )
            )
          )
          (count preference1:book)
        )
        (count-once-per-objects preference1:doggie_bed:doggie_bed)
      )
      (= (count preference1:dodgeball) (count-unique-positions preference1:doggie_bed) )
    )
    (>= (count preference1:tall_cylindrical_block:red) 5 )
  )
)
(:scoring
  (count-increasing-measure preference1:dodgeball)
)
)(define (game game-id-867) (:domain medium-objects-room-v1)
(:setup
  (exists (?x - building ?l ?n ?t ?y - hexagonal_bin ?s - building)
    (game-conserved
      (not
        (and
          (adjacent ?s ?s)
          (not
            (agent_crouches )
          )
          (same_color ?s ?s)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?z ?f ?n - cube_block)
      (and
        (preference preference1
          (exists (?e - dodgeball)
            (at-end
              (not
                (on ?f ?n)
              )
            )
          )
        )
        (preference preference2
          (exists (?m - ball ?e - golfball)
            (then
              (hold (on desk ?n) )
              (once (and (not (not (and (not (and (in_motion ?f) (not (is_setup_object rug) ) ) ) (and (and (not (in_motion ?z) ) (agent_holds ?e) ) (< (distance upright ?e) (distance ?z ?e)) ) ) ) ) (agent_holds ?e) ) )
              (once (on ?z ?n) )
            )
          )
        )
        (preference preference3
          (exists (?u ?c - (either cylindrical_block golfball cd) ?u - chair)
            (then
              (once (not (on ?z ?z) ) )
              (once (in_motion upright) )
              (hold-while (in_motion ?n) (and (in_motion desk) (and (touch ?n ?z) (not (not (on ?f ?f) ) ) (not (not (and (and (and (between ?z ?n south_west_corner) (= 1 1) ) (in_motion ?f) (and (in ?z ?z) (same_type ?u ?n) (in_motion agent) ) ) (in_motion ?u) (and (agent_crouches ) (game_start ) ) (agent_holds ?n) (and (adjacent_side ?n ?f ?z ?f) (agent_holds ?f) ) (not (and (in ?z agent) (not (< (x_position agent) (distance ?f ?u)) ) ) ) ) ) ) (in_motion ?u) ) (exists (?x - wall) (in_motion desk) ) ) (toggled_on ?f) )
            )
          )
        )
      )
    )
    (preference preference4
      (exists (?v - hexagonal_bin ?e - (either flat_block mug) ?j - building)
        (then
          (any)
          (once (touch ?j agent) )
          (once (not (and (< (x_position ?j) 1) (agent_holds ?j) ) ) )
        )
      )
    )
    (preference preference5
      (exists (?s - block ?c - block)
        (then
          (hold (< (distance ?c ?c) 1) )
          (once (and (not (adjacent ?c bed) ) (and (touch ?c ?c) (on ?c ?c) ) ) )
          (once (agent_holds ?c) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference3:beachball:dodgeball:dodgeball) (* (count-longest preference1:orange) (count-once-per-objects preference5:red_pyramid_block:basketball) )
  )
)
(:scoring
  (> (or (* 6 (count preference4:blue_dodgeball) )
      9
    )
    (+ 50 5 )
  )
)
)(define (game game-id-868) (:domain few-objects-room-v1)
(:setup
  (exists (?y - hexagonal_bin ?q - (either watch))
    (game-conserved
      (agent_holds ?q)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?i - triangular_ramp ?p - golfball)
        (at-end
          (agent_holds ?p)
        )
      )
    )
  )
)
(:terminal
  (>= 5 (* (= 5 (count-once preference1:green) )
      (count-once-per-external-objects preference1:beachball)
      (* (count preference1:blue_pyramid_block) 10 )
      20
      (count-once preference1:doggie_bed:dodgeball)
      (count-same-positions preference1:doggie_bed)
    )
  )
)
(:scoring
  4
)
)(define (game game-id-869) (:domain many-objects-room-v1)
(:setup
  (exists (?k - (either cube_block dodgeball) ?n - doggie_bed)
    (game-optional
      (< (distance ?n ?n) 10)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?q - ball)
        (then
          (hold (open ?q) )
          (once (agent_holds ?q) )
          (hold (not (in_motion ?q) ) )
        )
      )
    )
  )
)
(:terminal
  (> 1 10 )
)
(:scoring
  (count-once-per-objects preference1:blue_dodgeball)
)
)(define (game game-id-870) (:domain few-objects-room-v1)
(:setup
  (forall (?u - dodgeball ?n ?i - block ?x - hexagonal_bin)
    (game-optional
      (agent_holds ?x)
    )
  )
)
(:constraints
  (and
    (forall (?o - ball)
      (and
        (preference preference1
          (exists (?s - (either cellphone key_chain) ?y - (either yellow book wall))
            (then
              (once (not (in_motion floor) ) )
              (hold (< (distance pink_dodgeball ?y) (distance ?y desk)) )
              (hold (and (on ?y ?y) (in ?y ?o) (in ?o agent) (not (in_motion ?y) ) (and (and (and (exists (?l - golfball) (agent_holds ?l) ) (not (not (not (exists (?v - yellow_cube_block) (in agent ?o) ) ) ) ) ) (in floor ?o) ) (in_motion ?o) ) (in_motion ?y) (adjacent_side upright ?o ?y) (adjacent ?o desk) ) )
              (hold (not (and (agent_holds ?y) (in_motion ?y) (not (not (agent_holds agent) ) ) ) ) )
            )
          )
        )
        (preference preference2
          (exists (?q - hexagonal_bin)
            (then
              (once (and (not (agent_holds ?q) ) (and (and (adjacent rug ?o) (and (not (and (not (on ?o ?q) ) (agent_holds ?q) ) ) (on ?o ?q) ) ) (not (in_motion ?q) ) ) ) )
              (hold (agent_holds room_center) )
              (once (in_motion ?o) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?b - game_object)
        (then
          (once (not (not (and (same_object ?b ?b) (exists (?u - block ?j - cube_block ?f - flat_block) (in_motion ?b) ) ) ) ) )
          (once (adjacent ?b ?b) )
          (hold (on ?b ?b) )
        )
      )
    )
    (preference preference4
      (exists (?t - cube_block)
        (then
          (hold (same_type rug bed) )
          (once (on ?t bed) )
          (once (agent_holds ?t) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (and (external-forall-maximize 3 ) ) (/ 6 (count-once-per-objects preference4:yellow_pyramid_block) ) )
    (or
      (= (external-forall-maximize (count preference2:golfball:beachball) ) (count preference1:dodgeball) )
      (> (count preference3:dodgeball) (count-once-per-objects preference3:beachball) )
    )
  )
)
(:scoring
  (* (count-once-per-objects preference3:dodgeball) (count-once preference4:green:blue_dodgeball) )
)
)(define (game game-id-871) (:domain many-objects-room-v1)
(:setup
  (forall (?b - teddy_bear)
    (forall (?v - hexagonal_bin)
      (game-conserved
        (and
          (adjacent_side ?b ?b ?v ?b)
          (in ?v ?v)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?l - bridge_block)
        (then
          (hold (not (in_motion ?l) ) )
          (once (exists (?u - dodgeball) (above ?l agent) ) )
          (hold (and (agent_holds agent) (and (in_motion ?l) (in ?l ?l) ) (agent_holds ?l) (on ?l ?l) (not (not (not (not (not (< 1 5) ) ) ) ) ) (touch ?l ?l) ) )
        )
      )
    )
    (preference preference2
      (exists (?r - game_object ?m - hexagonal_bin ?z - teddy_bear)
        (then
          (once (and (and (in_motion ?z) (and (and (and (not (and (agent_holds ?z) (toggled_on ?z) ) ) (in_motion ?z) ) (and (and (equal_z_position ?z ?z) (is_setup_object ?z) ) (and (in_motion ?z) (forall (?o - wall ?w - dodgeball) (adjacent_side ?z ?z ?z ?w) ) (adjacent_side ?z ?z ?z ?z) ) ) ) (not (on ?z ?z) ) ) ) (not (not (in_motion ?z) ) ) ) )
          (once (agent_holds room_center) )
          (once (not (and (and (same_object ?z upright) (and (in_motion ?z) (not (on ?z ?z) ) (and (and (in agent ?z) (not (and (in_motion ?z) (in_motion ?z) ) ) ) (on ?z ?z) ) ) ) (not (agent_holds ?z) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= 10 3 )
    (< (count preference2:basketball) 5 )
    (> (- (count-once-per-objects preference1:red_pyramid_block:dodgeball) )
      (* (count preference2:dodgeball) (count-once-per-objects preference1:brown:dodgeball) )
    )
  )
)
(:scoring
  5
)
)(define (game game-id-872) (:domain many-objects-room-v1)
(:setup
  (exists (?c - hexagonal_bin ?g - (either book triangular_ramp book alarm_clock hexagonal_bin))
    (game-conserved
      (not
        (adjacent_side ?g ?g ?g)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?c - hexagonal_bin)
        (then
          (once (not (and (and (on bed ?c) (on ?c ?c) ) (in ?c ?c) ) ) )
          (once (not (not (agent_holds agent) ) ) )
          (once (or (in_motion ?c) (> 1 6) (in_motion ?c) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 1 (+ 10 (* (external-forall-maximize (* (+ (count-once-per-objects preference1:cube_block) 5 )
            (count preference1:yellow_cube_block)
          )
        )
        5
      )
      (count preference1:purple)
    )
  )
)
(:scoring
  (count-once-per-objects preference1:beachball:dodgeball)
)
)(define (game game-id-873) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (exists (?d - beachball ?i - (either blue_cube_block game_object cd alarm_clock side_table ball basketball) ?o - golfball ?k - hexagonal_bin ?k - hexagonal_bin)
        (game-conserved
          (in ?k ?k)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?y - cube_block)
        (then
          (once (agent_holds ?y) )
          (once (in ?y bed) )
          (once (in_motion ?y) )
        )
      )
    )
    (preference preference2
      (exists (?a - hexagonal_bin ?u - hexagonal_bin ?k - cube_block)
        (then
          (once (on ?k ?k) )
          (once (touch ?k ?k) )
          (once (and (agent_crouches ) (not (touch right ?k) ) ) )
        )
      )
    )
  )
)
(:terminal
  (> (total-score) (+ (count preference2:hexagonal_bin:red) (total-score) )
  )
)
(:scoring
  (count preference1:basketball:red_pyramid_block)
)
)(define (game game-id-874) (:domain few-objects-room-v1)
(:setup
  (exists (?b - game_object ?m - tall_cylindrical_block)
    (exists (?y - game_object ?j - dodgeball)
      (game-optional
        (agent_holds rug)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?l ?t - cube_block ?o - curved_wooden_ramp ?b - teddy_bear)
        (then
          (once (adjacent ?b front) )
          (once (in_motion ?b) )
          (hold (same_type ?b ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 3 (count preference1:hexagonal_bin) )
    100
  )
)
(:scoring
  (+ 10 (= (+ (* 10 (total-score) )
      )
      (count-once preference1:dodgeball)
    )
  )
)
)(define (game game-id-875) (:domain medium-objects-room-v1)
(:setup
  (not
    (and
      (exists (?o - building)
        (game-optional
          (not
            (touch ?o ?o)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?j - hexagonal_bin)
        (then
          (once (above agent ?j) )
          (once (in_motion bed) )
          (hold-while (not (in_motion ?j) ) (in_motion ?j) (adjacent_side ?j ?j room_center) (and (game_over ) (between ?j ?j ?j) ) )
        )
      )
    )
    (preference preference2
      (exists (?f - hexagonal_bin)
        (then
          (forall-sequence (?k - dodgeball)
            (then
              (hold (in ?k ?k) )
              (once (in ?f ?f) )
              (once (not (and (in ?k ?k) (and (in ?k pink_dodgeball) (in agent front) (not (in ?f ?k) ) ) ) ) )
            )
          )
          (hold-while (or (in_motion ?f) (in_motion ?f) (in_motion ?f) ) (not (and (in ?f ?f) (agent_holds ?f) ) ) )
          (once (and (in_motion ?f) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:beachball) 0.5 )
)
(:scoring
  3
)
)(define (game game-id-876) (:domain few-objects-room-v1)
(:setup
  (exists (?w - building)
    (and
      (game-optional
        (on ?w ?w)
      )
      (and
        (forall (?k - (either golfball doggie_bed))
          (and
            (game-conserved
              (agent_holds ?k)
            )
            (game-conserved
              (agent_holds ?w)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?l - block ?u - block)
        (then
          (once (agent_holds ?u) )
          (hold-to-end (and (and (not (agent_holds ?u) ) (not (in ?u ?u) ) (agent_holds ?u) (not (in ?u ?u) ) ) (open ?u) (agent_holds ?u) ) )
          (once (adjacent ?u ?u) )
        )
      )
    )
    (forall (?o - curved_wooden_ramp)
      (and
        (preference preference2
          (exists (?m - chair)
            (at-end
              (agent_holds ?m)
            )
          )
        )
        (preference preference3
          (exists (?n - hexagonal_bin ?s - (either cd desktop tall_cylindrical_block beachball) ?m - red_dodgeball)
            (at-end
              (on upright agent)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-unique-positions preference2:dodgeball:yellow) (* 5 (count-once preference3:dodgeball:yellow) )
  )
)
(:scoring
  (* (count-once-per-external-objects preference1:beachball) 300 )
)
)(define (game game-id-877) (:domain many-objects-room-v1)
(:setup
  (forall (?k - building)
    (and
      (forall (?z - building)
        (game-optional
          (in ?k ?k)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?g - game_object)
        (then
          (hold-while (agent_holds blue) (agent_holds bridge_block) )
          (once (on ?g ?g) )
          (hold-for 1 (agent_holds ?g) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count preference1:golfball:pink) (count preference1:pink) )
    (< (count preference1:block) 3 )
  )
)
(:scoring
  (count-once-per-objects preference1:dodgeball:dodgeball)
)
)(define (game game-id-878) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?h - color ?r - block ?x - game_object)
      (forall (?o - curved_wooden_ramp)
        (and
          (forall (?m - hexagonal_bin ?z - wall)
            (exists (?m - building ?g - curved_wooden_ramp ?q - (either mug cellphone book) ?d - red_dodgeball)
              (and
                (game-optional
                  (not
                    (object_orientation ?o ?x)
                  )
                )
                (game-optional
                  (and
                    (on pink_dodgeball ?x)
                    (in ?z agent)
                  )
                )
              )
            )
          )
        )
      )
    )
    (forall (?n - ball ?l - (either game_object dodgeball))
      (exists (?k - (either block golfball) ?a - ball ?y - block)
        (game-conserved
          (not
            (and
              (in_motion right)
              (on ?l ?l)
            )
          )
        )
      )
    )
    (exists (?c ?g - curved_wooden_ramp ?w - triangular_ramp)
      (and
        (game-optional
          (adjacent floor ?w)
        )
        (forall (?g - wall ?n - dodgeball)
          (and
            (exists (?b - ball ?c - hexagonal_bin)
              (game-conserved
                (in_motion ?w)
              )
            )
            (forall (?f - (either teddy_bear alarm_clock dodgeball) ?g - block)
              (exists (?q ?m ?j - game_object ?i - dodgeball)
                (forall (?z - cube_block)
                  (game-conserved
                    (in_motion ?z)
                  )
                )
              )
            )
            (and
              (and
                (or
                  (game-conserved
                    (on ?w ?n)
                  )
                  (exists (?e - ball ?v - doggie_bed)
                    (game-conserved
                      (agent_holds ?n)
                    )
                  )
                )
                (game-conserved
                  (and
                    (and
                      (in_motion ?n)
                      (in_motion ?n)
                      (or
                        (in_motion ?w)
                        (and
                          (< (distance ?w ?n) (distance ?n east_sliding_door))
                          (adjacent_side ?n ?n ?n ?w)
                          (touch ?w ?w)
                        )
                      )
                    )
                    (and
                      (and
                        (in_motion ?n)
                        (not
                          (on ?w ?n)
                        )
                      )
                      (not
                        (not
                          (and
                            (agent_holds agent)
                            (and
                              (= (distance door ?n))
                              (< (distance ?w ?n) (distance ?w ?n))
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
              (exists (?p - teddy_bear)
                (game-conserved
                  (in ?p ?w)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?t - teddy_bear ?s - cube_block ?c - game_object ?z - dodgeball)
      (and
        (preference preference1
          (exists (?w - hexagonal_bin)
            (then
              (any)
              (hold (and (and (agent_holds ?w) ) (not (and (>= (distance ?z door) 3) (in_motion ?z) ) ) ) )
              (hold (not (in_motion ?w) ) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?w - dodgeball)
        (then
          (once (agent_holds ?w) )
          (once (agent_holds ?w) )
          (once (and (and (in_motion ?w) (not (agent_holds ?w) ) ) (in_motion rug) (not (in_motion bed) ) ) )
          (hold (and (not (on ?w ?w) ) (or (touch ?w ?w) (and (and (agent_holds rug) (in_motion ?w) (touch ?w floor) (in_motion ?w) ) (on ?w ?w) ) ) (agent_holds ?w) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count-overlapping preference1:golfball) (+ (total-time) (+ (count preference1:golfball) 0 10 )
      )
      (* (count preference2:beachball:dodgeball) 7 1 )
      (count preference2:dodgeball)
      (count preference2:dodgeball)
      (* (total-score) 2 )
    )
    (- (* (- (count-once-per-objects preference1:top_drawer:golfball:beachball) )
        (total-time)
      )
    )
  )
)
(:scoring
  (count-once-per-objects preference2:rug)
)
)(define (game game-id-879) (:domain few-objects-room-v1)
(:setup
  (forall (?x - hexagonal_bin)
    (exists (?g - (either cube_block tall_cylindrical_block key_chain))
      (exists (?m - game_object ?b - blue_cube_block)
        (forall (?m - hexagonal_bin ?a - (either pyramid_block alarm_clock) ?s - (either laptop game_object dodgeball beachball))
          (game-conserved
            (not
              (agent_holds ?s)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?y - cube_block ?c - (either teddy_bear cylindrical_block))
      (and
        (preference preference1
          (exists (?q - (either cellphone))
            (then
              (hold (not (and (in_motion ?q) (and (on floor ?c) (and (agent_holds ?q) (agent_holds rug) ) ) (and (on ?q ?c) (and (in_motion ?q) (on ?c front) ) ) (in_motion ?q) ) ) )
              (hold (agent_holds ?c) )
              (hold (not (and (agent_holds ?q) (touch ?c ?q) ) ) )
            )
          )
        )
        (preference preference2
          (exists (?k - block)
            (then
              (once (exists (?a - (either book dodgeball pyramid_block yellow_cube_block)) (in_motion agent) ) )
              (once (in_motion ?k) )
              (once (on ?k ?c) )
            )
          )
        )
      )
    )
    (forall (?b ?z - cube_block ?t - (either cd) ?w - doggie_bed)
      (and
        (preference preference3
          (exists (?o - beachball)
            (then
              (once (exists (?z - pillow ?f - hexagonal_bin) (in_motion ?f) ) )
              (once (in_motion ?o) )
              (once (not (exists (?d - (either desktop top_drawer)) (in_motion ?o) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference1:dodgeball:dodgeball) (count-once-per-objects preference2:basketball) )
)
(:scoring
  (count-once-per-objects preference1:basketball:doggie_bed)
)
)(define (game game-id-880) (:domain many-objects-room-v1)
(:setup
  (exists (?e - (either wall))
    (or
      (game-optional
        (agent_holds room_center)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?f - cube_block)
        (then
          (once (not (not (< (distance ?f ?f) (distance ?f ?f)) ) ) )
          (hold (agent_holds ?f) )
          (once (not (in_motion ?f) ) )
        )
      )
    )
    (preference preference2
      (exists (?t - shelf ?g - dodgeball)
        (at-end
          (in_motion ?g)
        )
      )
    )
    (preference preference3
      (exists (?d - dodgeball)
        (at-end
          (and
            (in ?d agent)
            (in_motion ?d)
          )
        )
      )
    )
    (forall (?r - (either ball pencil))
      (and
        (preference preference4
          (exists (?j - blue_cube_block)
            (then
              (hold (game_over ) )
              (hold (not (not (in_motion agent) ) ) )
              (once (in_motion ?r) )
              (once (and (and (adjacent_side ?j desk ?r) (not (> (distance ?r floor) (distance ?r ?r)) ) ) (in_motion ?r) ) )
            )
          )
        )
        (preference preference5
          (exists (?x - pyramid_block ?o - hexagonal_bin ?m - hexagonal_bin)
            (then
              (once (object_orientation ?m ?m) )
              (once (and (not (and (not (and (touch ?m floor) (on ?r ?r) ) ) (in_motion ?m) ) ) (and (not (not (adjacent_side room_center rug ?r) ) ) (on ?m floor) ) ) )
              (once (or (< 1 6) (not (and (agent_holds ?r) (not (and (in_motion ?r) (agent_holds rug) ) ) ) ) ) )
            )
          )
        )
      )
    )
    (preference preference6
      (exists (?v - hexagonal_bin)
        (then
          (once (not (< 8 7) ) )
          (hold (in_motion ?v) )
          (once (is_setup_object ?v) )
        )
      )
    )
    (preference preference7
      (exists (?d - curved_wooden_ramp ?s - dodgeball ?f - cube_block)
        (then
          (hold (and (and (and (and (agent_holds south_west_corner) (and (above ?f ?f) (in_motion ?f) ) ) (in_motion desk) (= 1 (distance ?f ?f)) (in_motion ?f) (and (exists (?v - (either golfball desktop laptop)) (not (on ?v ?f) ) ) (not (in ?f ?f) ) (and (and (agent_holds brown) (in_motion ?f) ) (in_motion ?f) ) (not (not (same_color ?f bed) ) ) ) (touch ?f ?f) ) (on brown ?f) ) (not (not (< 4 (distance agent ?f)) ) ) (not (on ?f ?f) ) ) )
          (once (in_motion ?f) )
          (once (above ?f ?f) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 1 300 )
    (or
      (>= (total-score) (count-once-per-external-objects preference7:pink_dodgeball:rug:dodgeball) )
      (and
        (>= 3 (count-once-per-objects preference6:dodgeball) )
      )
    )
  )
)
(:scoring
  10
)
)(define (game game-id-881) (:domain few-objects-room-v1)
(:setup
  (exists (?g - building ?h - triangular_ramp ?q - red_pyramid_block)
    (game-optional
      (in_motion ?q)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?o - hexagonal_bin)
        (then
          (hold (agent_holds ?o) )
          (once (<= (distance ?o ?o) 1) )
          (hold (on ?o ?o) )
        )
      )
    )
    (forall (?o - golfball ?c - ball)
      (and
        (preference preference2
          (exists (?k - color)
            (at-end
              (adjacent_side ?k ?k ?k)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 8 (* (count-once-per-objects preference2:golfball:basketball) (count-once preference2:dodgeball) (total-time) )
    )
    (< (+ (- (= (- 3 )
            (count-once-per-objects preference1:beachball)
          )
        )
        (* (* (* 2 25 )
            (= (or (* (> 6 10 )
                  (- 2 )
                )
                (external-forall-maximize
                  (* (count-once preference2:blue_dodgeball) 10 )
                )
              )
              (count-once-per-objects preference2)
            )
          )
          5
          6
          (* (count-once-per-objects preference2:pink:dodgeball) 6 )
        )
      )
      (* 1 8 )
    )
  )
)
(:scoring
  (count-once-per-objects preference2:basketball:dodgeball)
)
)(define (game game-id-882) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (in_motion agent)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?h - (either golfball dodgeball dodgeball))
        (then
          (once (agent_holds ?h) )
          (hold (and (and (agent_holds ?h) ) (agent_holds ?h) ) )
          (hold (on bed ?h) )
        )
      )
    )
    (preference preference2
      (exists (?n - cube_block)
        (then
          (once (and (and (and (adjacent ?n ?n) (and (on ?n room_center) (and (in_motion ?n) (same_color brown ?n) ) ) ) ) (in_motion ?n) ) )
          (hold-to-end (and (agent_holds ?n) (not (above ?n ?n) ) ) )
          (once (not (not (agent_holds rug) ) ) )
        )
      )
    )
    (forall (?f - game_object)
      (and
        (preference preference3
          (exists (?u - desk_shelf)
            (then
              (once (agent_holds ?u) )
              (hold (and (not (same_object ?u ?f) ) (not (on ?f upright) ) ) )
              (once (in_motion ?f) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* 5 (<= (external-forall-minimize (total-score) ) (+ (* (* 0 (count preference1:tan) (count preference2:dodgeball:golfball) )
            (total-score)
          )
          (count preference1:basketball)
        )
      )
    )
    (* 2 (count-once preference1:yellow) )
  )
)
(:scoring
  (count preference1:dodgeball:dodgeball)
)
)(define (game game-id-883) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (not
      (in_motion desk)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?q - hexagonal_bin)
        (then
          (once (and (not (in_motion ?q) ) (and (and (in_motion agent) (in_motion bed) ) (on ?q top_drawer) ) ) )
          (once (not (agent_holds ?q) ) )
          (hold-while (exists (?g - doggie_bed ?v - ball ?u - ball) (not (and (or (game_over ) (agent_holds ?u) ) (and (agent_holds ?q) (not (or (< (distance ?u ?q) 1) (in_motion main_light_switch) (< 1 (distance ?u ?u)) ) ) ) ) ) ) (not (not (not (in ?q ?q) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (> (count-once-per-external-objects preference1:red:dodgeball) (total-score) )
)
(:scoring
  10
)
)(define (game game-id-884) (:domain medium-objects-room-v1)
(:setup
  (forall (?y - cube_block)
    (exists (?g - shelf ?g - hexagonal_bin)
      (and
        (exists (?z - (either bridge_block cd) ?k - blue_cube_block ?k - rug)
          (exists (?u - dodgeball ?d - color)
            (game-optional
              (and
                (agent_holds ?d)
                (in_motion ?d)
                (forall (?u ?s - dodgeball)
                  (in_motion ?d)
                )
                (in_motion ?d)
                (and
                  (not
                    (and
                      (and
                        (> (distance ?y agent) 2)
                      )
                    )
                  )
                  (agent_holds ?g)
                )
                (in_motion ?k)
                (not
                  (and
                    (exists (?r - block)
                      (not
                        (not
                          (and
                            (touch pink ?y)
                            (and
                              (in ?r agent)
                              (not
                                (agent_holds ?k)
                              )
                            )
                          )
                        )
                      )
                    )
                    (and
                      (not
                        (agent_holds agent)
                      )
                      (agent_holds ?k)
                      (adjacent ?d ?y)
                    )
                    (not
                      (not
                        (not
                          (same_color pink brown)
                        )
                      )
                    )
                    (on ?d agent)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?p ?w - curved_wooden_ramp)
        (then
          (hold-while (and (and (in_motion ?p) (and (in_motion ?p) (not (agent_holds ?p) ) ) ) (on ?w ?p) (and (and (adjacent desk ?w) (and (adjacent_side ?w ?w desk) (agent_holds desk) ) ) (agent_holds ?w) ) ) (agent_holds ?w) )
          (once (agent_holds ?w) )
          (once (on ?p ?w) )
        )
      )
    )
  )
)
(:terminal
  (>= 15 (- (total-time) )
  )
)
(:scoring
  3
)
)(define (game game-id-885) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?r - hexagonal_bin)
      (game-conserved
        (and
          (adjacent_side floor ?r room_center)
          (and
            (in ?r ?r)
            (and
              (adjacent brown ?r)
              (not
                (in ?r desk)
              )
              (and
                (not
                  (not
                    (adjacent ?r ?r)
                  )
                )
                (agent_holds ?r)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?z ?p - dodgeball)
      (and
        (preference preference1
          (exists (?t - hexagonal_bin)
            (then
              (hold-to-end (and (on ?p ?p) (and (not (in_motion ?z) ) (and (on ?t desk) (not (agent_holds ?t) ) ) ) ) )
              (once (and (not (and (not (and (and (and (on ?z ?p) (and (agent_holds ?p) (agent_crouches ) ) ) (exists (?m ?a - dodgeball ?h - triangular_ramp) (or (< 1 (distance rug ?t)) ) ) ) (agent_holds ?z) ) ) (not (exists (?a - (either pyramid_block desktop)) (adjacent ?t ?z) ) ) (agent_holds ?t) (not (< (distance front pink_dodgeball) (distance bed ?p)) ) ) ) (in_motion ?t) ) )
              (once (in_motion ?p) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:blue_dodgeball:dodgeball) (* (+ (* 10 (+ (external-forall-maximize (count-shortest preference1:yellow) ) (count preference1:beachball) (+ (* (* (= 2 (count-increasing-measure preference1:tan) )
                  (- (count-once-per-objects preference1:basketball) )
                )
                (count preference1:book)
              )
            )
            (count-once preference1:basketball)
            10
            (/
              (* (count-once-per-objects preference1:golfball:yellow:pink_dodgeball) (+ (count preference1:golfball:red) 3 )
              )
              (count preference1:dodgeball)
            )
          )
        )
        (* (total-score) (count-once-per-objects preference1:dodgeball) )
      )
      (* (- (count preference1:yellow) )
        5
      )
      (/
        (count-once-per-objects preference1:yellow:brown)
        (>= (/ 5 (count-once-per-external-objects preference1:basketball:purple) ) (* (count-once-per-objects preference1:beachball) (external-forall-maximize 5 ) )
        )
      )
      (* 3 (* (+ (count-once-per-objects preference1:yellow) (* (count preference1:golfball) (count-once-per-objects preference1:pink_dodgeball) )
            (total-time)
          )
          2
        )
      )
      20
      (count-shortest preference1:beachball:pink)
    )
  )
)
(:scoring
  (count preference1:dodgeball)
)
)(define (game game-id-886) (:domain few-objects-room-v1)
(:setup
  (exists (?k - block)
    (exists (?s - block ?g - beachball)
      (game-conserved
        (in_motion ?k)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?n - game_object)
        (then
          (once (adjacent ?n agent) )
          (once (faces side_table ?n) )
          (hold (not (in_motion ?n) ) )
        )
      )
    )
    (preference preference2
      (exists (?o - ball)
        (at-end
          (in_motion ?o)
        )
      )
    )
  )
)
(:terminal
  (or
    (and
      (or
        (>= (* (count-once-per-objects preference1:beachball) (* (+ (* 1 (count-once preference1:pink) (count preference1:pink) )
                (total-score)
              )
              6
            )
          )
          1
        )
        (or
          (> (count-once-per-external-objects preference2:red) 2 )
          (>= 5 12 )
        )
      )
      (or
        (or
          (>= (external-forall-maximize (count-once-per-objects preference2:hexagonal_bin:blue_cube_block:beachball) ) (count preference2:golfball) )
        )
        (>= 30 2 )
      )
      (>= (* 4 5 )
        (count preference2:dodgeball)
      )
    )
    (>= 25 (count preference2:dodgeball) )
  )
)
(:scoring
  2
)
)(define (game game-id-887) (:domain medium-objects-room-v1)
(:setup
  (exists (?x - hexagonal_bin)
    (game-optional
      (not
        (on ?x room_center)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?c - flat_block)
        (then
          (once (not (exists (?q - ball) (= 1 (distance floor ?c)) ) ) )
          (hold (agent_holds side_table) )
          (hold (not (agent_holds ?c) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (or
        (>= 2 (count-once-per-objects preference1:basketball) )
      )
      (or
        (>= 7 10 )
      )
    )
    (>= (- 4 )
      (- (count-shortest preference1:yellow) )
    )
  )
)
(:scoring
  (count-once-per-objects preference1:pink:blue_dodgeball)
)
)(define (game game-id-888) (:domain medium-objects-room-v1)
(:setup
  (exists (?c - wall ?f - dodgeball ?p - chair)
    (game-optional
      (or
        (adjacent ?p ?p)
        (not
          (in_motion ?p)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?j - (either cylindrical_block blue_cube_block) ?s - dodgeball)
        (then
          (once (and (in ?s ?s) (in_motion ?s) (and (in ?s agent) (on ?s agent) ) ) )
          (once (adjacent ?s ?s) )
          (once (agent_holds floor) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:pink) (* (+ 4 5 )
      3
    )
  )
)
(:scoring
  (/
    (count-once-per-objects preference1:red_pyramid_block)
    (count preference1)
  )
)
)(define (game game-id-889) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?d - block ?j - ball ?d - ball)
      (forall (?r - game_object ?r - hexagonal_bin)
        (or
          (game-optional
            (in_motion ?d)
          )
          (and
            (exists (?s - ball ?f - teddy_bear ?s - (either dodgeball dodgeball dodgeball))
              (forall (?p - dodgeball)
                (exists (?k - hexagonal_bin)
                  (forall (?o - pillow ?z - triangular_ramp ?w - (either yellow_cube_block pyramid_block))
                    (forall (?y - pillow ?b - dodgeball)
                      (exists (?i - shelf)
                        (and
                          (game-conserved
                            (and
                              (not
                                (agent_holds ?r)
                              )
                              (and
                                (< (distance rug ?r) (x_position agent))
                                (and
                                  (in_motion floor)
                                  (exists (?y - hexagonal_bin)
                                    (agent_crouches )
                                  )
                                )
                                (< (x_position ?b) (distance ?i ?b))
                                (adjacent ?p pink)
                              )
                            )
                          )
                          (exists (?f - shelf)
                            (and
                              (game-conserved
                                (in_motion ?i)
                              )
                              (and
                                (exists (?u - dodgeball ?q - beachball ?o - dodgeball)
                                  (and
                                    (game-conserved
                                      (in ?k desk)
                                    )
                                    (exists (?y - (either golfball teddy_bear))
                                      (game-conserved
                                        (in ?o ?f)
                                      )
                                    )
                                    (and
                                      (exists (?j ?x ?u ?n ?e ?c - desktop ?y - dodgeball)
                                        (forall (?h - dodgeball ?z - dodgeball)
                                          (game-conserved
                                            (on ?s ?z)
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                              (game-conserved
                                (not
                                  (game_over )
                                )
                              )
                            )
                          )
                          (game-conserved
                            (not
                              (agent_holds ?k)
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
            (and
              (game-optional
                (> 10 1)
              )
              (game-conserved
                (not
                  (and
                    (adjacent_side ?r ?d ?d ?r)
                    (agent_holds ?r)
                  )
                )
              )
              (game-optional
                (and
                  (or
                    (on ?r ?r)
                    (agent_holds ?d)
                  )
                  (on ?d ?r)
                )
              )
              (exists (?m - game_object)
                (exists (?o - hexagonal_bin ?b - chair)
                  (game-optional
                    (open rug)
                  )
                )
              )
              (exists (?z - (either alarm_clock desktop))
                (forall (?t - wall)
                  (exists (?o - (either cylindrical_block) ?f - hexagonal_bin)
                    (forall (?k - (either alarm_clock book))
                      (exists (?o - game_object)
                        (game-conserved
                          (and
                            (and
                              (and
                                (in_motion agent)
                                (and
                                  (not
                                    (game_over )
                                  )
                                  (on ?f ?k)
                                  (in ?d ?o)
                                )
                              )
                              (in_motion ?d)
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
            (game-conserved
              (on ?r ?r)
            )
          )
          (game-conserved
            (in_motion desk)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?p - game_object)
      (and
        (preference preference1
          (exists (?u - block)
            (then
              (hold (not (adjacent ?u ?p) ) )
              (once (agent_holds ?u) )
              (once (game_over ) )
            )
          )
        )
      )
    )
    (forall (?u - (either cd dodgeball yellow beachball tall_cylindrical_block triangle_block dodgeball))
      (and
        (preference preference2
          (then
            (once (and (or (in agent upside_down) (touch agent ?u) ) (is_setup_object ?u) ) )
          )
        )
      )
    )
    (preference preference3
      (exists (?p - ball)
        (then
          (once (adjacent ?p ?p) )
          (once (and (on ?p room_center) (> 1 (distance ?p ?p)) (and (< (distance ?p ?p) 0.5) (>= (distance ?p ?p) (distance desk ?p)) (and (on ?p ?p) (on ?p ?p) ) (not (not (in_motion ?p) ) ) ) ) )
          (once (in_motion ?p) )
        )
      )
    )
  )
)
(:terminal
  (>= (- 1 )
    (count preference3:red:golfball)
  )
)
(:scoring
  5
)
)(define (game game-id-890) (:domain many-objects-room-v1)
(:setup
  (exists (?t - blinds ?g - doggie_bed)
    (game-conserved
      (agent_holds ?g)
    )
  )
)
(:constraints
  (and
    (forall (?n - (either cd golfball alarm_clock))
      (and
        (preference preference1
          (then
            (once (not (not (not (and (toggled_on ?n) (broken ?n) ) ) ) ) )
            (once (above ?n agent) )
            (once (not (agent_holds ?n) ) )
          )
        )
        (preference preference2
          (exists (?p - (either lamp dodgeball golfball))
            (then
              (once (and (not (not (agent_holds ?n) ) ) (agent_holds ?n) (and (agent_holds ?p) (< 1 1) ) ) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?h - hexagonal_bin)
        (then
          (once (touch ?h ?h) )
          (hold-while (agent_holds ?h) (exists (?k - building) (>= (distance ?k ?h) (distance ?h ?k)) ) )
          (hold (and (touch ?h ?h) (touch ?h ?h) ) )
        )
      )
    )
    (preference preference4
      (exists (?y - (either key_chain teddy_bear))
        (then
          (hold (on agent ?y) )
          (hold (not (in_motion ?y) ) )
          (hold (agent_holds ?y) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 10 2 )
    (count preference2:basketball:dodgeball)
  )
)
(:scoring
  10
)
)(define (game game-id-891) (:domain few-objects-room-v1)
(:setup
  (exists (?m - triangular_ramp)
    (game-conserved
      (in_motion ?m)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?z - ball)
        (then
          (once (same_color ?z ?z) )
          (once (and (in_motion desk) (agent_holds agent) ) )
          (hold (not (and (agent_holds ?z) (and (and (in_motion ?z) (above ?z desk) ) (touch ?z ?z) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 30 4 )
)
(:scoring
  (+ (count-overlapping preference1:dodgeball) (+ (count preference1:dodgeball) (count preference1:tall_cylindrical_block) )
  )
)
)(define (game game-id-892) (:domain few-objects-room-v1)
(:setup
  (exists (?i - block ?w - curved_wooden_ramp ?f - hexagonal_bin)
    (game-conserved
      (in_motion ?f)
    )
  )
)
(:constraints
  (and
    (forall (?s - hexagonal_bin)
      (and
        (preference preference1
          (exists (?j - yellow_pyramid_block ?h ?n - dodgeball)
            (at-end
              (and
                (same_color room_center ?h)
                (in_motion room_center)
              )
            )
          )
        )
        (preference preference2
          (exists (?x - dodgeball)
            (at-end
              (not
                (and
                  (and
                    (adjacent ?x ?s)
                    (and
                      (in ?x ?x)
                      (on ?s ?x)
                      (toggled_on ?s)
                    )
                  )
                  (in_motion ?x)
                )
              )
            )
          )
        )
        (preference preference3
          (at-end
            (opposite ?s ?s)
          )
        )
      )
    )
  )
)
(:terminal
  (>= (- 5 )
    (count-total preference1:red:dodgeball)
  )
)
(:scoring
  4
)
)(define (game game-id-893) (:domain many-objects-room-v1)
(:setup
  (exists (?t - (either tall_cylindrical_block pyramid_block))
    (game-optional
      (or
        (same_type ?t bed)
        (equal_z_position ?t bed)
        (and
          (on door agent)
          (and
            (<= (distance room_center ?t) 1)
            (in ?t ?t)
          )
          (and
            (equal_x_position ?t ?t)
            (on ?t ?t)
          )
          (and
            (agent_holds ?t)
            (on ?t ?t)
            (in ?t ?t)
          )
        )
        (between ?t ?t ?t)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?z - dodgeball ?s - hexagonal_bin)
        (then
          (once (not (in_motion agent) ) )
          (hold (= (distance ?s ?s) 1) )
          (once (= 0 (distance ?s block)) )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (count preference1:dodgeball) )
)
(:scoring
  0.7
)
)(define (game game-id-894) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?c - hexagonal_bin)
      (and
        (and
          (game-conserved
            (not
              (not
                (agent_holds ?c)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - color)
      (and
        (preference preference1
          (exists (?a - shelf)
            (at-end
              (same_color ?b desk)
            )
          )
        )
        (preference preference2
          (exists (?a - building)
            (then
              (once (not (exists (?h - hexagonal_bin) (not (not (and (in ?b ?h) (not (same_color ?a ?h) ) (not (or (and (object_orientation ?h ?h) (in_motion door) ) (and (not (and (not (same_type ?b ?h) ) (touch ?a ?h) ) ) (not (and (in_motion ?a) (and (touch ?b agent) (in ?a ?b) (object_orientation ?a ?a) (in_motion ?h) ) ) ) ) ) ) ) ) ) ) ) )
              (once (< (distance ?a ?b) 3) )
              (once (agent_holds ?a) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (>= 5 (count-once-per-objects preference2:orange:hexagonal_bin) )
      (>= (count-longest preference1:basketball) (+ (+ (count-once-per-objects preference2:beachball) (count preference2:pink_dodgeball) )
          18
          100
        )
      )
    )
    (> 6 (count preference2:hexagonal_bin) )
  )
)
(:scoring
  (external-forall-maximize
    (count-same-positions preference2:blue_pyramid_block)
  )
)
)(define (game game-id-895) (:domain many-objects-room-v1)
(:setup
  (exists (?b - hexagonal_bin)
    (forall (?i - hexagonal_bin ?k - (either blue_cube_block flat_block game_object))
      (exists (?g - hexagonal_bin)
        (not
          (exists (?w - dodgeball)
            (game-optional
              (on ?g rug)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?f - block ?k ?v - doggie_bed ?x - dodgeball)
        (then
          (hold (in ?x ?x) )
          (once (not (agent_holds ?x) ) )
          (once (not (agent_holds ?x) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (> (* (+ (count-once-per-objects preference1:red:yellow) (+ (* 6 (+ (* 5 (* 10 (* 20 50 )
                    )
                  )
                  (count preference1:yellow_pyramid_block)
                )
                1
                (count preference1:dodgeball)
              )
              (count preference1:golfball)
            )
          )
          3
        )
        (count preference1:pink:hexagonal_bin)
      )
    )
  )
)
(:scoring
  (count preference1:beachball)
)
)(define (game game-id-896) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?l - wall ?g - hexagonal_bin)
      (game-optional
        (in_motion ?g)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?k - hexagonal_bin)
        (then
          (once (not (and (adjacent_side ?k floor ?k) (and (and (not (agent_holds ?k) ) (in_motion ?k) (not (in_motion ?k) ) ) (is_setup_object ?k) ) ) ) )
          (once (in_motion rug) )
          (once (and (on ?k agent) (not (toggled_on agent) ) (touch ?k ?k) ) )
        )
      )
    )
    (forall (?h - hexagonal_bin)
      (and
        (preference preference2
          (exists (?f - hexagonal_bin ?c - hexagonal_bin)
            (then
              (hold (not (in_motion upright) ) )
              (once (in green ?h) )
              (hold (not (and (and (on ?c rug) (agent_holds ?c) ) (equal_z_position desk ?c) ) ) )
            )
          )
        )
      )
    )
    (forall (?b - hexagonal_bin)
      (and
        (preference preference3
          (exists (?p - dodgeball)
            (at-end
              (adjacent_side ?p ?b ?b)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference3:red) 2 )
)
(:scoring
  (not
    (count-overlapping preference2:red:orange)
  )
)
)(define (game game-id-897) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (forall (?q - cube_block)
        (and
          (and
            (and
              (exists (?o - (either floor golfball))
                (game-conserved
                  (and
                    (not
                      (and
                        (adjacent door room_center)
                        (not
                          (agent_holds ?q)
                        )
                        (< (distance desk ?q) 1)
                        (adjacent ?q ?q)
                      )
                    )
                    (opposite ?o ?o)
                  )
                )
              )
            )
          )
        )
      )
      (exists (?y - curved_wooden_ramp ?b - (either game_object))
        (game-conserved
          (in_motion ?b)
        )
      )
    )
    (forall (?g - hexagonal_bin ?t - pyramid_block)
      (exists (?p - dodgeball ?y ?s - dodgeball)
        (and
          (game-optional
            (and
              (and
                (game_over )
                (agent_holds ?s)
              )
            )
          )
          (game-conserved
            (not
              (< (distance ?t desk) 1)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?z - cube_block)
        (then
          (once (touch ?z ?z) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:pink) 2 )
)
(:scoring
  5
)
)(define (game game-id-898) (:domain medium-objects-room-v1)
(:setup
  (exists (?a - hexagonal_bin)
    (forall (?p ?o - wall)
      (and
        (game-conserved
          (not
            (agent_holds ?a)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?i - game_object ?f - building ?o ?j - hexagonal_bin)
        (then
          (once (agent_holds ?j) )
          (hold-while (in ?j ?j) (in ?j ?o) )
        )
      )
    )
    (preference preference2
      (exists (?i - pyramid_block)
        (then
          (once (on ?i ?i) )
          (once (agent_holds ?i) )
          (hold-while (agent_holds desk) (on ?i ?i) (touch ?i agent) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 15 15 )
    (count preference1:yellow:book)
  )
)
(:scoring
  (count-once-per-objects preference2:red_pyramid_block)
)
)(define (game game-id-899) (:domain many-objects-room-v1)
(:setup
  (exists (?o - hexagonal_bin ?s - (either cellphone desktop alarm_clock))
    (game-optional
      (and
        (and
          (agent_holds ?s)
          (and
            (not
              (and
                (adjacent ?s agent)
                (same_type ?s ?s)
              )
            )
            (and
              (adjacent room_center room_center)
              (not
                (not
                  (not
                    (agent_holds room_center)
                  )
                )
              )
              (in_motion desk)
            )
            (not
              (and
                (not
                  (on ?s agent)
                )
                (in ?s ?s)
              )
            )
          )
        )
        (and
          (not
            (agent_holds ?s)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?s ?y ?c ?r - hexagonal_bin)
      (and
        (preference preference1
          (exists (?z - wall ?f - hexagonal_bin)
            (then
              (any)
              (once (in_motion ?y) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 1 (count preference1:hexagonal_bin) )
)
(:scoring
  (* (- (count-once-per-objects preference1:dodgeball) )
    (* 9 (count-once-per-objects preference1:dodgeball) )
  )
)
)(define (game game-id-900) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?b - building)
      (exists (?p - dodgeball)
        (game-optional
          (and
            (not
              (in_motion agent)
            )
            (not
              (not
                (and
                  (and
                    (in_motion ?p)
                    (in ?p ?p)
                  )
                  (and
                    (adjacent ?b ?p)
                    (agent_holds ?p)
                    (in_motion ?b)
                    (= (distance ?b ?b) (distance ?b ?b))
                    (and
                      (not
                        (not
                          (and
                            (agent_crouches )
                            (not
                              (and
                                (same_color agent ?p)
                                (not
                                  (< (distance ?b desk) (distance_side ?b agent ?p))
                                )
                                (and
                                  (not
                                    (agent_holds agent)
                                  )
                                  (and
                                    (exists (?a - (either curved_wooden_ramp))
                                      (on agent ?b)
                                    )
                                    (in_motion ?p)
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                      (in_motion ?p)
                    )
                    (= (distance ?p ?p) (distance ?b room_center) 4)
                    (in rug ?b)
                    (not
                      (not
                        (in_motion ?b)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?p - ball ?g - hexagonal_bin)
        (at-end
          (agent_holds agent)
        )
      )
    )
    (preference preference2
      (exists (?f ?i - (either chair))
        (at-end
          (not
            (agent_holds block)
          )
        )
      )
    )
    (preference preference3
      (exists (?j - dodgeball ?i - chair)
        (then
          (hold (same_color ?i ?i) )
          (once (not (same_color ?i ?i) ) )
          (hold (not (not (on ?i ?i) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (count-once-per-objects preference2:golfball) )
)
(:scoring
  (+ (total-score) (count-once-per-objects preference1:pink) )
)
)(define (game game-id-901) (:domain few-objects-room-v1)
(:setup
  (exists (?d - (either cd cd) ?n - hexagonal_bin)
    (game-conserved
      (and
        (in ?n ?n)
        (not
          (not
            (and
              (on agent ?n)
              (agent_holds ?n)
              (in ?n ?n)
              (agent_holds ?n)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?p - hexagonal_bin)
        (then
          (once (in_motion floor) )
          (once (and (not (not (agent_crouches ) ) ) (not (touch ?p ?p) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (+ (* (not 8 ) 50 )
      (count preference1:yellow)
    )
  )
)
(:scoring
  9
)
)(define (game game-id-902) (:domain medium-objects-room-v1)
(:setup
  (forall (?q - block)
    (game-conserved
      (and
        (not
          (not
            (<= (distance ?q ?q) (distance agent ?q))
          )
        )
        (in_motion ?q)
        (not
          (and
            (< (building_size brown) (distance ?q ?q))
            (on agent ?q)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?p - building)
        (then
          (hold-while (and (in_motion desk) (not (in_motion ?p) ) ) (in room_center ?p) (on ?p sideways) )
          (hold (agent_holds ?p) )
          (hold (and (in ?p ?p) (and (in_motion ?p) (and (not (not (not (in_motion ?p) ) ) ) (and (< (distance ?p agent) (distance bed ?p)) (not (and (in_motion bed) (not (not (and (in_motion agent) (and (and (agent_holds ?p) (and (equal_z_position ?p ?p) (in_motion ?p) ) (on door ?p) (agent_holds ?p) ) (not (and (agent_holds ?p) (agent_holds ?p) (and (not (in ?p ?p) ) (and (adjacent_side ?p ?p ?p) (touch ?p bed) ) ) ) ) ) ) ) ) ) ) ) ) (and (agent_holds ?p) (and (and (and (and (on ?p agent) (in_motion ?p) ) (and (or (in_motion ?p) (not (on pillow ?p) ) ) (agent_holds ?p) ) ) (< (distance_side ?p room_center ?p) (distance bed ?p)) (agent_holds agent) ) (not (and (and (agent_holds ?p) (toggled_on ?p) (between back ?p agent) ) (and (agent_holds ?p) (adjacent agent ?p) (on room_center rug) ) (adjacent ?p ?p) ) ) ) (on ?p ?p) (or (adjacent bed sideways) (in_motion ?p) (not (not (> 1 (distance pink ?p)) ) ) ) (on ?p ?p) (not (on ?p ?p) ) (in_motion ?p) ) ) (and (and (adjacent_side ?p ?p ?p) (adjacent ?p ?p) (opposite ?p ?p) ) (not (not (and (exists (?m - game_object) (touch agent agent) ) (not (and (and (agent_holds ?p) (toggled_on ?p) (in ?p ?p) ) (in_motion ?p) ) ) ) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:dodgeball:dodgeball) (total-score) )
)
(:scoring
  (* (* 5 (count-shortest preference1:blue_pyramid_block:dodgeball) )
    (count-total preference1:yellow:pink_dodgeball)
  )
)
)(define (game game-id-903) (:domain many-objects-room-v1)
(:setup
  (exists (?d - hexagonal_bin)
    (game-conserved
      (in_motion ?d)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?u - ball ?z - (either side_table floor))
        (then
          (once (in_motion agent) )
          (once (adjacent_side bed ?z ?z) )
          (hold-while (agent_holds bed) (agent_holds ?z) (on rug ?z) (on ?z ?z) )
        )
      )
    )
    (preference preference2
      (exists (?w - cube_block ?w - triangular_ramp)
        (then
          (hold (adjacent ?w ?w) )
          (once (in upright ?w) )
          (hold (object_orientation ?w ?w) )
        )
      )
    )
  )
)
(:terminal
  (and
    (and
      (>= (external-forall-maximize (count preference1:basketball) ) 3 )
    )
    (or
      (>= 15 (count-once-per-objects preference1:pink_dodgeball:dodgeball) )
    )
    (<= (count-once-per-objects preference2:hexagonal_bin) (* 3 (count-once-per-objects preference2:basketball) )
    )
  )
)
(:scoring
  (count-once-per-objects preference1:red)
)
)(define (game game-id-904) (:domain medium-objects-room-v1)
(:setup
  (forall (?l - beachball)
    (game-optional
      (faces ?l ?l)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?s - game_object)
        (at-end
          (not
            (and
              (agent_holds agent)
              (and
                (on ?s ?s)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (* (count-once-per-objects preference1:yellow) (count preference1:orange:beachball) )
      (count preference1:basketball)
    )
    (+ 3 5 )
  )
)
(:scoring
  (count preference1:book)
)
)(define (game game-id-905) (:domain many-objects-room-v1)
(:setup
  (exists (?s - drawer ?f - (either wall key_chain) ?j - dodgeball)
    (game-conserved
      (in ?j ?j)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?a ?v - hexagonal_bin)
        (then
          (hold (agent_holds ?v) )
          (once (agent_holds ?v) )
          (once (and (agent_holds ?v) (and (adjacent_side ?a ?a ?a) (not (not (on room_center ?v) ) ) ) (adjacent_side ?v ?v ?v) ) )
        )
      )
    )
    (preference preference2
      (exists (?r - desk_shelf ?t - hexagonal_bin)
        (at-end
          (in rug front_left_corner)
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (total-score) 5 )
    (>= (count-overlapping preference2:dodgeball) (count-once-per-objects preference1:red) )
  )
)
(:scoring
  (* (* (count preference1:pink_dodgeball) (count-once preference2:dodgeball) )
    (count preference2:orange)
  )
)
)(define (game game-id-906) (:domain few-objects-room-v1)
(:setup
  (exists (?r - (either key_chain golfball))
    (forall (?a - (either book dodgeball golfball) ?o - watch)
      (game-conserved
        (agent_holds ?r)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?o - dodgeball ?p - dodgeball)
        (then
          (once (adjacent ?p floor) )
          (once (agent_holds agent) )
          (hold-while (same_type agent ?p) (game_over ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (- (count preference1:dodgeball) )
      (count preference1:dodgeball)
    )
  )
)
(:scoring
  (+ 2 (count preference1:dodgeball) )
)
)(define (game game-id-907) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?j - cube_block)
      (forall (?s - (either pyramid_block blue_cube_block basketball) ?e - dodgeball ?g - hexagonal_bin)
        (and
          (game-conserved
            (in ?g ?j)
          )
        )
      )
    )
    (and
      (and
        (forall (?r - doggie_bed)
          (exists (?m - hexagonal_bin)
            (game-conserved
              (and
                (< 6 1)
                (not
                  (and
                    (in_motion ?m)
                    (adjacent_side agent ?r ?r ?r)
                    (same_color room_center ?r)
                    (not
                      (exists (?w - cube_block)
                        (on ?m ?r)
                      )
                    )
                  )
                )
              )
            )
          )
        )
        (exists (?m - hexagonal_bin)
          (and
            (game-conserved
              (agent_crouches )
            )
          )
        )
      )
      (exists (?c - hexagonal_bin)
        (forall (?t - ball)
          (exists (?a - (either pyramid_block ball dodgeball) ?k - building)
            (and
              (and
                (exists (?m - doggie_bed)
                  (game-conserved
                    (in ?m ?c)
                  )
                )
                (forall (?q - color)
                  (forall (?b - doggie_bed)
                    (game-conserved
                      (agent_holds rug)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?t - hexagonal_bin)
        (then
          (once (< 1 (distance_side ?t ?t ?t)) )
          (hold-while (agent_holds ?t) (< 8 1) )
          (once (agent_holds ?t) )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (+ (count preference1:dodgeball) (+ (- (count-once-per-objects preference1:hexagonal_bin) )
        (count preference1:dodgeball)
      )
    )
  )
)
(:scoring
  (+ 10 3 )
)
)(define (game game-id-908) (:domain many-objects-room-v1)
(:setup
  (exists (?g - (either dodgeball cylindrical_block) ?y - block)
    (forall (?c - building ?d - ball ?x - hexagonal_bin)
      (forall (?v - (either dodgeball side_table))
        (exists (?m - hexagonal_bin)
          (and
            (game-conserved
              (= (building_size ?m) 1)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?m ?d - hexagonal_bin)
      (and
        (preference preference1
          (exists (?i - game_object)
            (then
              (once (in_motion ?i) )
              (hold (and (in ?i ?m) (adjacent ?d ?i) ) )
              (hold (agent_holds ?i) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?b - wall)
        (then
          (once-measure (on floor ?b) (distance ?b ?b) )
          (hold (agent_holds ?b) )
          (once (agent_holds front) )
        )
      )
    )
    (preference preference3
      (exists (?z ?e ?v - teddy_bear ?i - desktop ?q - color ?c - hexagonal_bin)
        (then
          (once (in bed ?c) )
          (hold-while (in_motion ?c) (in_motion door) (is_setup_object ?c) )
          (once (in_motion ?c) )
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (> (count preference1:beachball) (* (count preference1:pink_dodgeball) (* 8 2 )
        )
      )
      (>= (count-once-per-objects preference2:purple) (< 3 (* (* 1 (* (* (* (total-time) 0 )
                  (count-once preference1:hexagonal_bin:green)
                )
                9
                (- 2 )
                (count-once-per-objects preference2:side_table)
              )
              10
            )
            (count preference1:pink_dodgeball)
          )
        )
      )
    )
    (>= 4 1 )
  )
)
(:scoring
  (count-once preference1:cube_block)
)
)(define (game game-id-909) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (exists (?l - teddy_bear ?d - hexagonal_bin)
      (on agent ?d)
    )
  )
)
(:constraints
  (and
    (forall (?l - dodgeball)
      (and
        (preference preference1
          (then
            (once (on ?l ?l) )
            (once (< 3 (distance ?l ?l)) )
            (once (not (not (adjacent ?l agent) ) ) )
          )
        )
      )
    )
    (preference preference2
      (exists (?e - hexagonal_bin)
        (then
          (forall-sequence (?m - teddy_bear)
            (then
              (once (agent_holds ?e) )
              (hold (in_motion rug) )
              (once (in_motion ?m) )
              (hold (not (same_color ?e ?e) ) )
            )
          )
          (once (not (and (not (in ?e ?e) ) (exists (?r - hexagonal_bin ?a - curved_wooden_ramp ?y - beachball) (not (and (not (agent_holds ?y) ) (touch front agent) ) ) ) ) ) )
          (once (in ?e ?e) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:yellow) (* (count-once preference2:orange) (* (- (count preference1:orange) )
        (total-time)
      )
    )
  )
)
(:scoring
  2
)
)(define (game game-id-910) (:domain medium-objects-room-v1)
(:setup
  (exists (?m - hexagonal_bin ?u - dodgeball)
    (exists (?w - wall)
      (and
        (exists (?l - hexagonal_bin)
          (game-optional
            (agent_holds ?l)
          )
        )
        (game-conserved
          (not
            (toggled_on ?u)
          )
        )
        (game-conserved
          (agent_holds bed)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?u - (either book floor floor))
      (and
        (preference preference1
          (exists (?r - teddy_bear)
            (at-end
              (in_motion ?r)
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?f - block)
        (then
          (once (and (and (and (not (on ?f ?f) ) (> 1 5) ) (in_motion ?f) ) (in_motion ?f) ) )
          (hold (< 1 1) )
          (hold (agent_holds ?f) )
        )
      )
    )
    (preference preference3
      (exists (?u - block)
        (then
          (once (and (not (agent_holds agent) ) (not (not (= 6 1 (distance_side ?u ?u ?u)) ) ) ) )
          (once (not (adjacent bed ?u) ) )
          (once (not (on ?u ?u) ) )
        )
      )
    )
    (forall (?h - hexagonal_bin)
      (and
        (preference preference4
          (exists (?j - hexagonal_bin)
            (then
              (hold (in_motion ?j) )
              (once (not (= (distance ?h ?j) (distance_side agent ?j ?j) 1) ) )
              (once (exists (?k - building ?r - curved_wooden_ramp) (in ?h ?h) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (* 1 (count preference2:golfball) )
        (count-once-per-objects preference2:pink_dodgeball:dodgeball)
      )
      (>= 3 (count-once preference1:pink_dodgeball:blue:pink) )
    )
    (not
      (and
        (not
          (or
            (>= (* (* (count preference4:dodgeball) 10 )
                (<= (total-time) (+ 50 300 )
                )
              )
              4
            )
            (>= 2 (count-once-per-objects preference1:cube_block) )
          )
        )
      )
    )
    (>= (* (* 100 (count-once-per-objects preference1:dodgeball) )
        1
      )
      (* 10 (count preference1:green:yellow) 1 )
    )
  )
)
(:scoring
  (total-time)
)
)(define (game game-id-911) (:domain many-objects-room-v1)
(:setup
  (exists (?a - game_object)
    (game-optional
      (and
        (not
          (exists (?j - hexagonal_bin)
            (not
              (and
                (in_motion ?a)
                (not
                  (in_motion ?a)
                )
              )
            )
          )
        )
        (in_motion agent)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?s - wall)
        (then
          (once (not (exists (?p - (either laptop cube_block) ?e - teddy_bear ?m ?n - bridge_block ?p - ball) (not (and (agent_holds agent) (<= (distance_side ?p ?p ?s) (distance ?s ?p)) ) ) ) ) )
          (once (same_color agent agent) )
          (hold (not (adjacent_side ?s rug ?s) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:pink) (* (+ (count-once-per-objects preference1:red:book) (+ (+ (count-once-per-objects preference1:purple) (+ (* (count preference1:blue_pyramid_block) (count preference1:basketball:book) )
              (* 2 (* (* (count preference1:pyramid_block) 2 (count-once-per-objects preference1:dodgeball) 5 5 (* (* (<= (* 6 (count preference1:alarm_clock) 5 )
                          (- 5 )
                        )
                        (count preference1:dodgeball)
                      )
                      (count preference1:dodgeball)
                    )
                  )
                  3
                  (count preference1:pink:pyramid_block)
                  (count preference1:hexagonal_bin)
                )
              )
            )
          )
          4
        )
        (* (+ (count preference1:beachball) (count-once-per-objects preference1:beachball) )
          10
          (- (- 20 )
          )
          (count-overlapping preference1:dodgeball)
          (count-once-per-objects preference1:pink_dodgeball:dodgeball)
          (count preference1:basketball:basketball:white)
        )
        (count preference1:purple)
      )
      16
    )
  )
)
(:scoring
  (count preference1:dodgeball)
)
)(define (game game-id-912) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?w - cube_block)
      (game-optional
        (not
          (open ?w)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?v - (either ball cellphone))
      (and
        (preference preference1
          (exists (?g - ball)
            (at-end
              (and
                (and
                  (and
                    (in_motion ?g)
                    (in_motion ?v)
                  )
                  (touch bridge_block ?v)
                )
                (not
                  (not
                    (agent_holds blue)
                  )
                )
              )
            )
          )
        )
        (preference preference2
          (exists (?c - ball ?t ?e - dodgeball)
            (then
              (hold (in_motion ?v) )
              (once (and (in agent ?v) (agent_holds ?t) ) )
              (once (and (= 1 8) (in_motion ?v) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference1:beachball) (* (count-once-per-objects preference2:beachball) 4 )
  )
)
(:scoring
  (count preference2:pink_dodgeball)
)
)(define (game game-id-913) (:domain many-objects-room-v1)
(:setup
  (forall (?j - teddy_bear ?h ?z - doggie_bed ?o - teddy_bear)
    (forall (?i - pyramid_block)
      (exists (?g - ball ?d - game_object)
        (and
          (and
            (forall (?g - cube_block ?x - game_object)
              (exists (?z - hexagonal_bin ?n - dodgeball)
                (and
                  (forall (?g - game_object ?c - block)
                    (game-conserved
                      (< 6 (distance ?n ?o))
                    )
                  )
                )
              )
            )
            (game-optional
              (agent_holds ?i)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?m - building)
      (and
        (preference preference1
          (exists (?o - shelf)
            (then
              (once (and (not (object_orientation ?o ?m) ) (not (agent_holds ?m) ) ) )
              (hold (and (not (in_motion room_center) ) (forall (?d - drawer) (in_motion drawer) ) (and (agent_holds ?o) (not (and (in ?o ?m) ) ) ) ) )
              (once (and (agent_holds ?o) (same_color ?m ?m) (and (and (same_color ?m ?o) (and (not (agent_holds ?o) ) (adjacent ?m ?o) ) (agent_holds ?o) (between ?m agent ?o) ) (< 1 (distance bed ?m)) (and (not (and (agent_holds desk) (exists (?b - red_dodgeball) (not (adjacent_side ?m ?m ?o) ) ) ) ) (and (not (not (in floor top_shelf) ) ) (and (on pink_dodgeball ?o) (on ?o ?o) ) (in_motion ?o) ) ) (in_motion bed) (between ?m ?m sideways) (opposite ?o agent) ) (in_motion ?m) (in_motion ?m) (touch ?o ?m) (and (agent_holds ?o) (agent_holds agent) (on ?m ?m) ) (and (or (not (in_motion ?m) ) (in ?o ?m) (equal_z_position ?o ?m) ) (not (in agent ?m) ) ) (same_color ?m agent) (in_motion ?m) ) )
            )
          )
        )
        (preference preference2
          (then
            (once (in ?m ?m) )
            (hold (is_setup_object pink_dodgeball) )
            (hold (on ?m ?m) )
            (once (exists (?s - (either cd yellow_cube_block)) (not (in_motion ?m) ) ) )
            (hold-while (and (and (= (distance bed agent) (distance ?m ?m) 0.5) (not (rug_color_under ?m blue) ) ) (on ?m ?m) ) (> 1 9) )
          )
        )
      )
    )
    (preference preference3
      (exists (?w - (either cube_block laptop))
        (then
          (once (object_orientation ?w agent) )
          (hold-while (and (and (not (in_motion ?w) ) (and (in ?w ?w) (touch ?w bed) (in_motion ?w) ) ) (equal_x_position ?w ?w) ) (agent_holds ?w) (is_setup_object ?w) )
          (once (in rug ?w) )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (count-once-per-objects preference3:purple) )
)
(:scoring
  (count-once preference3:blue_dodgeball:basketball)
)
)(define (game game-id-914) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (agent_holds pink_dodgeball)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?v - cube_block ?m - (either alarm_clock pink))
        (then
          (once (agent_holds brown) )
        )
      )
    )
  )
)
(:terminal
  (= (count preference1:dodgeball) (* (* (external-forall-maximize 2 ) 3 )
      100
      (count-shortest preference1:dodgeball)
      3
    )
  )
)
(:scoring
  (count-increasing-measure preference1:basketball)
)
)(define (game game-id-915) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?w - beachball)
      (exists (?m - game_object)
        (game-optional
          (in ?m ?w)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?a - shelf ?t - wall ?m - hexagonal_bin)
      (and
        (preference preference1
          (exists (?i - game_object)
            (then
              (hold (agent_holds ?i) )
              (hold (touch ?i ?m) )
              (once (same_object ?m ?m) )
            )
          )
        )
      )
    )
    (forall (?k - curved_wooden_ramp)
      (and
        (preference preference2
          (then
            (once (agent_holds ?k) )
            (once (in_motion ?k) )
            (hold-while (and (not (in ?k ?k) ) (adjacent ?k room_center) (not (and (forall (?e - teddy_bear ?f - yellow_pyramid_block) (not (not (agent_holds agent) ) ) ) (in_motion desk) ) ) ) (in_motion ?k) )
          )
        )
      )
    )
  )
)
(:terminal
  (< (* 1 (count preference1:purple) )
    3
  )
)
(:scoring
  (+ (- (count preference1:pink) )
    3
    (count-once-per-objects preference2:pink)
    (count preference2:blue:basketball)
  )
)
)(define (game game-id-916) (:domain many-objects-room-v1)
(:setup
  (forall (?x - bridge_block ?y - (either pillow golfball) ?x - triangular_ramp)
    (and
      (forall (?q - (either dodgeball) ?n - shelf ?a - dodgeball)
        (and
          (forall (?m - (either cellphone pyramid_block))
            (and
              (game-conserved
                (not
                  (same_object ?x ?m)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?c - (either hexagonal_bin dodgeball desktop))
        (then
          (once (not (< 3 (building_size ?c)) ) )
          (once (and (in bed ?c) (or (in_motion floor) (agent_holds ?c) ) (not (on ?c bed) ) ) )
          (hold (adjacent door agent) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-once-per-objects preference1:orange:doggie_bed) (+ 6 (count-once preference1:golfball) 3 3 )
    )
    (>= 1 (+ (count preference1:orange) (* (* (count preference1:basketball) (* (count preference1:golfball) 2 )
            3
            15
            7
            (+ 3 (- (+ (count-once-per-external-objects preference1:purple) (count preference1:white) )
              )
            )
          )
          2
        )
        (-
          (external-forall-maximize
            (count-once preference1:basketball:dodgeball)
          )
          (+ (* (count-once-per-objects preference1:pink) 3 )
          )
        )
      )
    )
  )
)
(:scoring
  (+ 10 (count-once-per-objects preference1:dodgeball:yellow) 2 (count-once-per-objects preference1:tan) (count preference1:golfball) 2 )
)
)(define (game game-id-917) (:domain medium-objects-room-v1)
(:setup
  (forall (?l - game_object ?i - ball ?k - cube_block)
    (and
      (exists (?l - hexagonal_bin)
        (forall (?t - ball)
          (game-conserved
            (in_motion ?k)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?i - dodgeball ?w - teddy_bear)
        (at-end
          (and
            (not
              (and
                (in_motion ?w)
                (in bed ?w)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:dodgeball) 100 )
)
(:scoring
  (count-once preference1:blue_pyramid_block)
)
)(define (game game-id-918) (:domain medium-objects-room-v1)
(:setup
  (exists (?w - desk_shelf)
    (forall (?a - wall)
      (and
        (not
          (and
            (and
              (and
                (game-conserved
                  (in_motion ?a)
                )
              )
            )
          )
        )
        (game-optional
          (and
            (not
              (agent_holds ?w)
            )
            (and
              (< 4 1)
              (not
                (in ?a back)
              )
            )
          )
        )
        (forall (?i - shelf ?q - cube_block)
          (forall (?e - (either doggie_bed tall_cylindrical_block))
            (game-conserved
              (and
                (in_motion ?a)
                (agent_holds ?e)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?c - blue_pyramid_block ?m - dodgeball)
        (then
          (hold (in_motion ?m) )
          (once (in_motion ?m) )
          (once (and (< 1 2) (< (distance ?m ?m) (distance rug ?m)) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count-once preference1:beachball) (* (- 8 )
        (count-overlapping preference1:blue_pyramid_block)
      )
    )
    6
  )
)
(:scoring
  (+ 2 (count-once-per-objects preference1:dodgeball:orange) )
)
)(define (game game-id-919) (:domain many-objects-room-v1)
(:setup
  (exists (?o ?q ?m - chair)
    (forall (?a - hexagonal_bin ?h - hexagonal_bin)
      (game-conserved
        (agent_holds ?o)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?c - hexagonal_bin ?k - hexagonal_bin)
        (at-end
          (or
            (in_motion ?k)
            (in_motion ?k)
          )
        )
      )
    )
    (forall (?a - triangular_ramp)
      (and
        (preference preference2
          (exists (?o ?c - dodgeball ?y - pyramid_block)
            (then
              (once (and (same_color ?y ?y) (in_motion ?a) ) )
              (once (and (not (agent_holds rug) ) (on ?a ?y) ) )
              (once (touch ?y ?a) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?p - doggie_bed ?q - ball)
        (then
          (hold (in_motion ?q) )
          (hold (and (in_motion ?q) (and (< (distance desk ?q) 1) (toggled_on ?q) ) ) )
          (hold (exists (?z - ball) (in_motion desk) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (<= (* (* (count-once-per-objects preference2:pink_dodgeball:blue_cube_block) (total-score) )
          (count preference3:green)
          (count preference2:dodgeball)
        )
        (count preference3:yellow)
      )
      (and
        (>= (count-total preference1:pink:yellow_cube_block) (count-once-per-objects preference3:blue_dodgeball) )
      )
      (and
        (>= (count-once preference2:dodgeball) 3 )
      )
    )
  )
)
(:scoring
  15
)
)(define (game game-id-920) (:domain medium-objects-room-v1)
(:setup
  (forall (?m - game_object)
    (forall (?v - hexagonal_bin ?o - game_object ?j - hexagonal_bin)
      (game-conserved
        (< (distance_side ?j ?j ?m) (distance floor ?m))
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?a - game_object ?a - shelf ?i - curved_wooden_ramp ?e - chair)
        (then
          (hold-for 3 (in_motion ?e) )
          (once (agent_holds ?e) )
          (once (in ?e ?e) )
        )
      )
    )
    (preference preference2
      (exists (?u - (either yellow_cube_block main_light_switch) ?a - building)
        (at-end
          (and
            (touch pink_dodgeball ?a)
            (adjacent ?a ?a)
            (and
              (on ?a ball)
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?i - red_dodgeball)
        (then
          (once (and (and (and (same_color pink ?i) (agent_holds ?i) (on ?i ?i) (in_motion ?i) (agent_holds agent) (<= 1 0) ) (agent_holds ?i) (same_color ?i desktop) ) (in ?i ?i) ) )
          (hold-while (in_motion ?i) (equal_x_position ?i ?i) (agent_holds ?i) )
          (once (not (and (in_motion ?i) (and (and (< (distance ?i rug) (x_position ?i)) (on ?i agent) ) (agent_holds ?i) ) (agent_holds door) (and (in ?i ?i) (or (= (distance_side ?i ?i ?i ?i) 1) (or (agent_holds ?i) (faces ?i ?i) (not (and (on ?i ?i) (and (on ?i ?i) (exists (?b - hexagonal_bin) (not (on ?i ?b) ) ) (and (not (and (< (distance ?i ?i) (distance ?i ?i)) (not (in_motion ?i) ) ) ) (not (adjacent ?i ?i) ) (and (equal_x_position ?i ?i) (= 2 (distance ?i agent)) (agent_holds ?i) (in ?i ?i) (in_motion ?i) (and (in_motion room_center) (not (not (in_motion ?i) ) ) ) ) ) ) ) ) ) ) (in_motion ?i) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count preference3:yellow) 15 )
    (or
      (or
        (< (total-time) (* (* (count-once-per-objects preference2:blue_dodgeball) 100 )
            2
          )
        )
        (not
          (or
            (>= 30 (external-forall-maximize (count preference3:cube_block) ) )
          )
        )
      )
      (< (count preference2:pyramid_block) (- 10 )
      )
    )
  )
)
(:scoring
  2
)
)(define (game game-id-921) (:domain few-objects-room-v1)
(:setup
  (exists (?l - dodgeball)
    (forall (?u - ball)
      (and
        (and
          (and
            (forall (?t - teddy_bear)
              (exists (?h - dodgeball)
                (forall (?n - hexagonal_bin)
                  (exists (?r - game_object ?q - hexagonal_bin ?r - (either doggie_bed bridge_block))
                    (and
                      (exists (?w - triangular_ramp ?c - block)
                        (forall (?d - ball)
                          (exists (?k - (either pyramid_block yellow_cube_block book))
                            (exists (?f - dodgeball)
                              (exists (?a - dodgeball)
                                (exists (?p - dodgeball)
                                  (game-optional
                                    (on agent ?t)
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
            (not
              (and
                (and
                  (not
                    (and
                      (and
                        (game-conserved
                          (and
                            (not
                              (agent_holds rug)
                            )
                            (forall (?r - ball)
                              (and
                                (agent_holds ?u)
                                (or
                                  (< 1 1)
                                  (adjacent_side ?r ?u ?l ?l)
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                  (exists (?t - wall)
                    (game-conserved
                      (in_motion ?t)
                    )
                  )
                  (game-optional
                    (exists (?q - cube_block ?m - dodgeball ?s - block)
                      (and
                        (and
                          (agent_holds bed)
                          (not
                            (not
                              (and
                                (on ?u ?s)
                                (touch ?u ?s)
                              )
                            )
                          )
                        )
                        (and
                          (in_motion agent)
                          (not
                            (game_start )
                          )
                        )
                      )
                    )
                  )
                )
                (game-conserved
                  (not
                    (in ?l rug)
                  )
                )
                (exists (?w - game_object)
                  (and
                    (forall (?s - (either bridge_block alarm_clock) ?d - dodgeball)
                      (game-conserved
                        (and
                          (agent_holds ?w)
                          (not
                            (agent_holds ?u)
                          )
                        )
                      )
                    )
                    (and
                      (game-optional
                        (and
                          (in_motion ?u)
                          (agent_holds ?l)
                        )
                      )
                      (exists (?s ?b - flat_block)
                        (game-conserved
                          (game_start )
                        )
                      )
                      (exists (?o - ball)
                        (exists (?y - (either blue_cube_block pillow cube_block) ?t - red_dodgeball ?c - doggie_bed)
                          (and
                            (forall (?n - hexagonal_bin)
                              (and
                                (game-optional
                                  (opposite ?c ?w)
                                )
                              )
                            )
                            (and
                              (game-optional
                                (on ?u ?o)
                              )
                              (or
                                (game-conserved
                                  (not
                                    (agent_holds ?w)
                                  )
                                )
                                (forall (?s - doggie_bed ?t - dodgeball)
                                  (and
                                    (exists (?i - block)
                                      (game-conserved
                                        (same_object ?i ?c)
                                      )
                                    )
                                    (game-conserved
                                      (and
                                        (not
                                          (and
                                            (game_start )
                                            (between ?u ?u ?o)
                                          )
                                        )
                                        (broken ?u)
                                        (agent_holds agent)
                                      )
                                    )
                                  )
                                )
                              )
                              (game-optional
                                (in desk ?w)
                              )
                            )
                            (game-conserved
                              (agent_holds ?l)
                            )
                          )
                        )
                      )
                    )
                    (and
                      (game-optional
                        (on ?l ?u)
                      )
                      (game-optional
                        (touch ?u ?w)
                      )
                    )
                  )
                )
              )
            )
            (game-optional
              (on ?l ?u)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?e - hexagonal_bin ?j - golfball)
        (then
          (once (agent_holds ?j) )
          (hold (not (not (not (in_motion ?j) ) ) ) )
          (once (and (< 5 (distance ?j ?j)) (same_color ?j room_center) (agent_holds ?j) (agent_holds pink) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (total-score) )
)
(:scoring
  (- (count preference1:dodgeball) )
)
)(define (game game-id-922) (:domain medium-objects-room-v1)
(:setup
  (exists (?r - dodgeball)
    (and
      (exists (?t ?z ?d ?y ?m - green_triangular_ramp ?z - hexagonal_bin)
        (and
          (and
            (exists (?m ?e ?h ?v - dodgeball)
              (and
                (forall (?n - hexagonal_bin)
                  (and
                    (exists (?c - hexagonal_bin)
                      (exists (?p - blue_cube_block ?t ?s - cube_block)
                        (and
                          (game-conserved
                            (on ?h ?z)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
            (exists (?u - ball ?w - doggie_bed)
              (game-conserved
                (agent_holds ?r)
              )
            )
          )
          (forall (?s ?c - curved_wooden_ramp)
            (game-conserved
              (not
                (and
                  (in_motion ?z)
                  (< (distance ?c ?c) (distance_side ?s ?r ?z ?c))
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?x - hexagonal_bin ?k - hexagonal_bin)
        (at-end
          (on ?k ?k)
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 2 20 )
    (>= (external-forall-minimize (count-once-per-objects preference1:yellow_pyramid_block) ) 7 )
  )
)
(:scoring
  (- 2 )
)
)(define (game game-id-923) (:domain medium-objects-room-v1)
(:setup
  (exists (?u - hexagonal_bin)
    (or
      (game-conserved
        (and
          (agent_holds ?u)
          (in_motion ?u)
          (and
            (not
              (and
                (agent_holds ?u)
                (in_motion front)
              )
            )
            (not
              (agent_holds ?u)
            )
            (and
              (= 1 1 0)
              (and
                (in_motion ?u)
                (and
                  (and
                    (in_motion ?u)
                    (and
                      (not
                        (in_motion ?u)
                      )
                      (agent_holds ?u)
                    )
                  )
                  (in_motion ?u)
                )
              )
            )
            (not
              (agent_holds ?u)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?i - (either triangle_block cylindrical_block) ?r - hexagonal_bin)
      (and
        (preference preference1
          (exists (?x - (either dodgeball blue_cube_block book))
            (then
              (once (not (on ?x ?r) ) )
              (once (broken ?r) )
              (once (not (not (not (and (in_motion ?r) (and (open ?r) (and (agent_holds ?x) (on ?r ?r) ) ) ) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (* (- (count-same-positions preference1:pink_dodgeball) )
      3
    )
  )
)
(:scoring
  10
)
)(define (game game-id-924) (:domain few-objects-room-v1)
(:setup
  (forall (?a - pillow)
    (and
      (game-conserved
        (same_type side_table ?a)
      )
    )
  )
)
(:constraints
  (and
    (forall (?w - beachball ?g - building)
      (and
        (preference preference1
          (exists (?o - ball)
            (then
              (hold (in ?o floor) )
              (hold (agent_holds ?o) )
              (once (agent_holds ?o) )
            )
          )
        )
        (preference preference2
          (exists (?r - hexagonal_bin)
            (then
              (any)
              (once (< (distance west_wall ?r) 0) )
              (once (or (in_motion room_center) (on ?g ?g) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once preference1:green) (count-once-per-objects preference1:yellow_cube_block) )
)
(:scoring
  (count preference1:purple)
)
)(define (game game-id-925) (:domain medium-objects-room-v1)
(:setup
  (exists (?u - (either bridge_block))
    (forall (?x - dodgeball ?r - building)
      (and
        (and
          (game-conserved
            (agent_holds ?r)
          )
        )
        (forall (?t - curved_wooden_ramp)
          (and
            (game-conserved
              (and
                (on top_shelf ?u)
                (not
                  (in_motion right)
                )
              )
            )
            (exists (?x - building ?v - ball)
              (game-conserved
                (agent_holds bed)
              )
            )
            (game-conserved
              (in agent ?r)
            )
          )
        )
        (exists (?g - hexagonal_bin ?l - dodgeball)
          (forall (?o - sliding_door ?q - dodgeball)
            (forall (?e - yellow_cube_block)
              (game-optional
                (agent_holds ?q)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?l ?d ?g - hexagonal_bin ?p - doggie_bed)
      (and
        (preference preference1
          (exists (?r - hexagonal_bin ?h - doggie_bed)
            (then
              (once (touch room_center desk) )
              (once-measure (and (agent_holds rug) (in ?p ?h) (>= 1 (x_position ?p)) ) (distance room_center ?h) )
              (once (agent_holds ?h) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 5 5 )
    (>= (count preference1:dodgeball) 3 )
  )
)
(:scoring
  (or
    (- (* (count preference1:golfball) )
    )
  )
)
)(define (game game-id-926) (:domain medium-objects-room-v1)
(:setup
  (exists (?t ?p ?b - (either cd ball hexagonal_bin) ?w - doggie_bed)
    (game-conserved
      (agent_holds ?w)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?v - (either cylindrical_block desktop))
        (then
          (once (not (not (in_motion ?v) ) ) )
          (once (not (not (on desk ?v) ) ) )
          (once (game_start ) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (- 2 )
  )
)
(:scoring
  8
)
)(define (game game-id-927) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?c ?s - cube_block)
      (forall (?m - building)
        (game-conserved
          (not
            (agent_holds desk)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?u - curved_wooden_ramp)
        (then
          (hold (agent_holds ?u) )
          (once (and (in ?u ?u) (in_motion ?u) (between ?u ?u ?u) ) )
          (once (same_object agent bed) )
        )
      )
    )
    (preference preference2
      (exists (?c - ball ?k - block)
        (then
          (once (agent_crouches ) )
          (once (in_motion upright) )
          (hold (and (or (< 1 4) ) (exists (?d - hexagonal_bin) (adjacent ?k ?k) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (count preference1:dodgeball) (external-forall-maximize (not 6 ) ) (<= (= (count preference2:orange) (= 2 )
        )
        2
      )
      (* (count-longest preference1:red:yellow) 15 )
    )
    (count-once preference2:beachball)
  )
)
(:scoring
  8
)
)(define (game game-id-928) (:domain few-objects-room-v1)
(:setup
  (forall (?i - dodgeball)
    (and
      (exists (?p - (either basketball dodgeball pyramid_block) ?u ?j - color)
        (game-optional
          (and
            (and
              (agent_holds ?j)
              (and
                (agent_holds ?i)
                (agent_holds ?u)
              )
            )
            (adjacent ?u top_drawer)
            (agent_holds ?i)
            (>= 9 6)
            (agent_holds ?j)
            (between side_table ?u ?j)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?w - (either dodgeball desktop) ?t - cube_block)
        (then
          (once (in ?t room_center) )
          (once (game_start ) )
          (hold (on agent agent) )
        )
      )
    )
  )
)
(:terminal
  (<= (count preference1:beachball) 1 )
)
(:scoring
  3
)
)(define (game game-id-929) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?c - dodgeball)
      (and
        (and
          (and
            (and
              (forall (?i - cube_block)
                (game-conserved
                  (>= 9 1)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?d - hexagonal_bin)
        (then
          (once (not (agent_holds pink) ) )
          (once (in_motion ?d) )
          (once (in ?d desk) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:beachball) (count-total preference1:dodgeball) )
)
(:scoring
  (count preference1:beachball)
)
)(define (game game-id-930) (:domain few-objects-room-v1)
(:setup
  (forall (?k - cylindrical_block ?y - book ?w - hexagonal_bin)
    (exists (?f - (either wall pyramid_block))
      (forall (?g - (either cd doggie_bed) ?m - dodgeball ?j - ball)
        (game-conserved
          (agent_holds ?j)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?s - ball)
      (and
        (preference preference1
          (exists (?z - ball)
            (then
              (once (not (and (not (not (adjacent room_center agent) ) ) (and (and (not (and (agent_holds ?s) (and (and (in_motion ?z) (rug_color_under ?z ?z) ) (on desk ?s) ) ) ) (not (in_motion desk) ) ) (and (agent_holds ?z) (same_type ?z ?s) ) ) ) ) )
              (hold (agent_holds west_wall) )
              (once (in_motion ?s) )
            )
          )
        )
        (preference preference2
          (exists (?u - red_dodgeball ?p - color)
            (then
              (once (< (distance ?s rug) 1) )
              (once (in_motion agent) )
              (once (and (adjacent ?s agent) (not (in_motion desk) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (>= 1 (count-once-per-objects preference1:pink_dodgeball) )
      (>= (* (external-forall-minimize 30 ) )
        (count-once-per-objects preference1:yellow)
      )
      (or
        (= 10 3 )
      )
    )
    (or
      (>= (* 2 (count preference2:yellow) )
        (* 0.7 (* (+ 6 (count-once-per-objects preference1:pink_dodgeball) )
            3
          )
        )
      )
      (and
        (> 2 (count preference2:alarm_clock) )
      )
    )
    (>= (* (count-once-per-objects preference1:pink_dodgeball) (and (count-once-per-objects preference1:red:pink) 5 (* 16 (count-once-per-objects preference2:purple) )
        )
      )
      (+ 1 4 )
    )
  )
)
(:scoring
  (and
    (= (* (- 5 (count preference1:doggie_bed) ) (- (* (+ (count preference2:blue_dodgeball) (count-once-per-objects preference2:blue_dodgeball) )
            (/
              3
              6
            )
          )
        )
      )
      (not
        5
      )
    )
  )
)
)(define (game game-id-931) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?x - wall)
      (and
        (exists (?s ?q ?z ?p - (either cellphone basketball) ?w - dodgeball)
          (game-conserved
            (in_motion ?x)
          )
        )
        (game-optional
          (> (distance_side ?x ?x ?x) 0)
        )
      )
    )
    (forall (?l - tall_cylindrical_block)
      (and
        (game-conserved
          (agent_holds ?l)
        )
        (game-optional
          (agent_holds ?l)
        )
        (exists (?n ?z - ball)
          (exists (?k - hexagonal_bin ?p ?j - cube_block)
            (not
              (game-conserved
                (adjacent_side green_golfball ?n ?p ?j)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - hexagonal_bin)
      (and
        (preference preference1
          (exists (?k - ball ?p ?g ?x ?b - block ?c - dodgeball ?a - teddy_bear ?y - doggie_bed)
            (then
              (once (and (agent_holds ?y) ) )
              (once (agent_holds ?d) )
              (hold (< (distance ?d ?d) 0) )
            )
          )
        )
        (preference preference2
          (exists (?t - ball ?l - teddy_bear)
            (at-end
              (and
                (in_motion floor)
                (same_color ?l ?d)
              )
            )
          )
        )
        (preference preference3
          (exists (?v - hexagonal_bin)
            (at-end
              (not
                (and
                  (in_motion ?d)
                  (in_motion ?d)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 2 3 )
)
(:scoring
  (not
    3
  )
)
)(define (game game-id-932) (:domain many-objects-room-v1)
(:setup
  (exists (?w - red_dodgeball)
    (or
      (game-conserved
        (and
          (and
            (not
              (agent_holds bed)
            )
            (not
              (< (distance agent ?w) 2)
            )
          )
          (adjacent ?w ?w)
        )
      )
      (game-optional
        (in_motion ?w)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?t - dodgeball ?q - beachball)
        (then
          (once (adjacent floor ?q) )
          (hold-while (in_motion ?q) (not (on ?q ?q) ) (adjacent ?q ?q) (in_motion ?q) )
          (once (in_motion ?q) )
        )
      )
    )
    (preference preference2
      (exists (?m - hexagonal_bin)
        (at-end
          (in_motion tan)
        )
      )
    )
  )
)
(:terminal
  (>= 2 (/ (count preference1:blue_pyramid_block:basketball) (* (total-score) (count preference2:dodgeball) (count-once preference2:dodgeball) (total-time) (* 6 12 )
        5
      )
    )
  )
)
(:scoring
  (* (count preference2:beachball) (+ (* (* (count-once-per-objects preference1:golfball) 10 )
        (* 0 (* (count preference2:blue_dodgeball) (* (+ 8 (count-once-per-objects preference1:yellow) )
              (count-once-per-external-objects preference1:blue_dodgeball:basketball:hexagonal_bin)
            )
          )
        )
        (+ (* (- (* (* (count preference2:doggie_bed:brown) 4 )
                (* (count-once preference2:blue_pyramid_block:blue_dodgeball) 10 1 (+ (count-once-per-objects preference2:dodgeball:basketball) (* (count preference2:blue_cube_block:red) (count-overlapping preference2:hexagonal_bin) )
                  )
                  3
                  (count-once-per-objects preference1:dodgeball:blue_dodgeball)
                )
              )
            )
            3
          )
          (count preference2:white)
          (count preference2:golfball)
          (count preference1:green)
          (<= 0 (count-measure preference2:yellow_cube_block:beachball) )
          (count preference2:pink_dodgeball:beachball)
          5
          (count preference1:golfball)
          (external-forall-maximize
            (* 50 (count-unique-positions preference1:hexagonal_bin) )
          )
          (external-forall-minimize
            (* (+ (+ (count preference2:dodgeball) (total-score) 18 )
                (total-time)
              )
              (<= (count preference2:red:pink) 18 )
            )
          )
          1
          (* (count preference2:dodgeball:cube_block) (= (* (+ 3 2 )
                (count-increasing-measure preference1:orange)
              )
              (* (* 10 (* 0 (+ (count preference1:beachball:pyramid_block) (count preference2:blue) )
                  )
                )
                0
              )
              20
            )
          )
        )
        (- 2 )
      )
      3
    )
  )
)
)(define (game game-id-933) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (forall (?w - tall_cylindrical_block)
      (in_motion ?w)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?e - (either desktop yellow_cube_block) ?p - hexagonal_bin)
        (then
          (hold (in brown ?p) )
          (once (not (on ?p ?p) ) )
          (hold (agent_holds ?p) )
        )
      )
    )
    (preference preference2
      (exists (?v - (either bridge_block cube_block dodgeball))
        (then
          (once (not (and (in_motion ?v) (in ?v ?v) ) ) )
          (once (not (agent_holds ?v) ) )
          (once (and (not (and (in_motion front_left_corner) (agent_holds ?v) (and (< 6 4) (and (not (not (and (not (in_motion ?v) ) (and (adjacent ?v ?v) (agent_holds ?v) ) (and (adjacent ?v ?v) (and (on ?v ?v) (not (game_over ) ) ) ) ) ) ) (not (in_motion agent) ) (in ?v ?v) ) ) ) ) (touch ?v ?v) ) )
        )
      )
    )
    (forall (?c - ball ?o - ball)
      (and
        (preference preference3
          (exists (?s - doggie_bed)
            (at-end
              (equal_x_position door ?s)
            )
          )
        )
      )
    )
    (preference preference4
      (exists (?m - game_object ?p - pillow ?t - doggie_bed)
        (at-end
          (and
            (and
              (same_color ?t front)
              (< 1 6)
            )
            (not
              (on ?t ?t)
            )
          )
        )
      )
    )
    (preference preference5
      (exists (?v - hexagonal_bin ?x - shelf)
        (then
          (once (in ?x ?x) )
          (once (and (on ?x side_table) (adjacent agent ?x) ) )
          (once (> 6 4) )
        )
      )
    )
    (preference preference6
      (exists (?u ?m ?b - building ?j - (either yellow_cube_block triangular_ramp))
        (at-end
          (toggled_on agent)
        )
      )
    )
  )
)
(:terminal
  (>= (count preference4:yellow:beachball) 2 )
)
(:scoring
  (+ (count-unique-positions preference6:golfball) (total-time) )
)
)(define (game game-id-934) (:domain few-objects-room-v1)
(:setup
  (not
    (forall (?k - desk_shelf)
      (and
        (game-optional
          (agent_holds ?k)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?m ?s ?u ?p ?j ?q - hexagonal_bin ?m - shelf)
      (and
        (preference preference1
          (exists (?o - hexagonal_bin)
            (then
              (once (> 1 (distance ?o desk)) )
              (once (in_motion ?o) )
            )
          )
        )
        (preference preference2
          (exists (?p - dodgeball)
            (at-end
              (adjacent ?p ?m)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (count preference2:yellow_cube_block) )
)
(:scoring
  8
)
)(define (game game-id-935) (:domain medium-objects-room-v1)
(:setup
  (exists (?n - hexagonal_bin)
    (and
      (game-conserved
        (in desk ?n)
      )
    )
  )
)
(:constraints
  (and
    (forall (?q - cube_block)
      (and
        (preference preference1
          (exists (?w - hexagonal_bin)
            (then
              (once (< (distance bed pink) 1) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?e - beachball ?v - (either pencil tall_cylindrical_block cube_block))
        (then
          (hold (agent_holds ?v) )
          (once (between ?v ?v ?v) )
          (hold-to-end (and (agent_holds ?v) (and (or (on ?v ?v) (in_motion bed) ) (same_color ?v ?v) (adjacent ?v ?v) ) (touch ?v ?v) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference2:yellow:pink_dodgeball) (+ (count preference2:brown) 100 2 (count-once-per-objects preference1:dodgeball) (total-time) 3 )
  )
)
(:scoring
  (+ (count-once-per-objects preference1:pink) (count-once preference1:yellow_cube_block) (* 6 (* 10 (count-once-per-objects preference2:pink:blue_dodgeball) )
    )
  )
)
)(define (game game-id-936) (:domain medium-objects-room-v1)
(:setup
  (exists (?o - building)
    (exists (?x - color)
      (and
        (exists (?k - (either pink golfball cylindrical_block))
          (and
            (and
              (exists (?t - hexagonal_bin)
                (forall (?j - (either pyramid_block triangle_block pyramid_block))
                  (game-conserved
                    (exists (?r - game_object)
                      (same_object ?o ?x)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?u - wall)
        (then
          (once (not (agent_holds ?u) ) )
          (once (in_motion agent) )
          (hold (not (adjacent_side ?u ?u ?u) ) )
        )
      )
    )
  )
)
(:terminal
  (= 3 (* 7 (not (count-once-per-external-objects preference1:pink_dodgeball) ) 30 )
  )
)
(:scoring
  (count preference1:dodgeball)
)
)(define (game game-id-937) (:domain medium-objects-room-v1)
(:setup
  (forall (?q - triangular_ramp)
    (game-conserved
      (in ?q ?q)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?p - hexagonal_bin ?l - dodgeball)
        (then
          (hold (agent_holds ?l) )
          (once (in_motion agent) )
          (once (in_motion ?l) )
        )
      )
    )
  )
)
(:terminal
  (>= (= (/ (count-once-per-objects preference1:tan) (external-forall-maximize 6 ) ) 3 )
    6
  )
)
(:scoring
  (count-once preference1:golfball)
)
)(define (game game-id-938) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?t - desk_shelf)
      (game-conserved
        (in_motion ?t)
      )
    )
    (forall (?v - (either cube_block dodgeball cd))
      (and
        (and
          (forall (?s - hexagonal_bin)
            (and
              (forall (?o - hexagonal_bin ?p - doggie_bed)
                (and
                  (and
                    (forall (?y - cube_block ?i - (either hexagonal_bin pen))
                      (and
                        (and
                          (game-optional
                            (adjacent ?v ?i)
                          )
                          (exists (?b - sliding_door)
                            (game-optional
                              (agent_holds ?s)
                            )
                          )
                          (game-optional
                            (adjacent door ?s)
                          )
                        )
                      )
                    )
                    (game-conserved
                      (forall (?w - block)
                        (in ?s ?v)
                      )
                    )
                    (game-conserved
                      (and
                        (and
                          (on ?p front)
                          (in_motion ?s)
                        )
                        (agent_holds ?p)
                        (object_orientation brown ?s)
                      )
                    )
                  )
                )
              )
            )
          )
          (and
            (and
              (exists (?r - doggie_bed)
                (exists (?i - building)
                  (game-optional
                    (in ?r rug)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?p - ball)
      (and
        (preference preference1
          (exists (?b - block ?w ?z - triangular_ramp)
            (then
              (hold (in ?w ?p) )
              (once (and (exists (?c - dodgeball ?a - hexagonal_bin ?i - (either laptop dodgeball)) (on door ?z) ) (not (not (exists (?j - (either tall_cylindrical_block golfball lamp)) (toggled_on ?w) ) ) ) ) )
              (once (< 2 (distance brown ?w)) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?a - dodgeball)
        (then
          (once (adjacent ?a ?a) )
          (once (in ?a ?a) )
          (once (and (in_motion ?a) (game_start ) (between agent ?a ?a) (<= (distance ?a ?a) (distance ?a ?a)) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (- (* (count preference1:dodgeball) 60 )
    )
    (count-once-per-objects preference1:rug)
  )
)
(:scoring
  (count preference2:dodgeball:beachball)
)
)(define (game game-id-939) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (in_motion desk)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?i - dodgeball)
        (then
          (once (agent_holds ?i) )
          (hold (and (and (and (and (not (in_motion ?i) ) (in_motion ?i) (not (rug_color_under ?i ?i) ) (in ?i ?i) (and (exists (?p - hexagonal_bin) (in_motion ?p) ) (agent_holds ?i) ) (in_motion ?i) (and (exists (?b - hexagonal_bin ?w - red_dodgeball) (same_object agent front) ) (not (in_motion pink_dodgeball) ) ) (and (in ?i ?i) (not (and (in_motion ?i) (on ?i desk) ) ) ) (adjacent ?i ?i) (in_motion floor) ) (and (not (and (in_motion ?i) (in_motion ?i) ) ) (in_motion ?i) ) ) (not (in ?i ?i) ) (not (not (> 1 1) ) ) (and (> 1 (distance ?i desk)) (not (and (in_motion ?i) (>= 1 10) ) ) ) ) (not (agent_holds ?i) ) ) )
          (hold (not (on ?i ?i) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (or
        (>= (count-once-per-objects preference1:triangle_block) (count-overlapping preference1:basketball:blue_dodgeball) )
        (>= 6 (- (count-once-per-objects preference1:beachball:beachball) 5 ) )
      )
      (<= (count-once preference1:basketball) 3 )
    )
  )
)
(:scoring
  (- (count preference1:golfball:beachball) )
)
)(define (game game-id-940) (:domain few-objects-room-v1)
(:setup
  (or
    (exists (?n ?b - cube_block ?t - cube_block)
      (not
        (forall (?r - dodgeball)
          (game-conserved
            (in desk bed)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?d - building ?c - flat_block ?k - ball ?o - cylindrical_block)
        (then
          (once (agent_holds ?o) )
          (once (and (equal_z_position top_drawer ?o) (not (in_motion ?o) ) (agent_holds ?o) (agent_holds ?o) ) )
          (once (adjacent ?o ?o) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-unique-positions preference1:pink:green) (count-once-per-objects preference1:pink:white) )
)
(:scoring
  (total-score)
)
)(define (game game-id-941) (:domain medium-objects-room-v1)
(:setup
  (forall (?x - doggie_bed)
    (game-conserved
      (not
        (agent_holds ?x)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?t - wall)
        (then
          (once (in_motion ?t) )
          (once (agent_holds ?t) )
        )
      )
    )
  )
)
(:terminal
  (or
    (= (+ 10 3 )
      (+ 10 (count-once preference1:hexagonal_bin) )
    )
    (>= 15 (count-once-per-objects preference1:red) )
    (> (count preference1:golfball) 10 )
  )
)
(:scoring
  (* (* (* (* (* 3 (* (total-score) (count-once-per-objects preference1:brown) )
          )
          (+ 2 (count preference1:green) )
          (-
            15
            (* (* (external-forall-maximize (+ (count preference1:basketball) (count preference1:basketball) )
                )
                (count preference1:red_pyramid_block)
              )
              4
              (count preference1:book)
              (count-once preference1:pink_dodgeball)
            )
          )
        )
        20
      )
      6
    )
    10
  )
)
)(define (game game-id-942) (:domain many-objects-room-v1)
(:setup
  (exists (?f - hexagonal_bin)
    (and
      (and
        (exists (?n - hexagonal_bin)
          (game-optional
            (not
              (touch ?f door)
            )
          )
        )
        (game-conserved
          (is_setup_object floor)
        )
        (exists (?j - (either dodgeball laptop) ?e - desktop ?w - (either golfball curved_wooden_ramp))
          (exists (?j - game_object)
            (forall (?l - cube_block)
              (and
                (forall (?h - wall ?x - block)
                  (game-conserved
                    (in_motion ?j)
                  )
                )
                (and
                  (forall (?c - hexagonal_bin ?q - hexagonal_bin)
                    (forall (?e - hexagonal_bin)
                      (exists (?t - hexagonal_bin)
                        (forall (?r - wall)
                          (game-optional
                            (is_setup_object pink_dodgeball)
                          )
                        )
                      )
                    )
                  )
                  (and
                    (game-conserved
                      (agent_holds ?w)
                    )
                    (forall (?u - hexagonal_bin ?a - ball)
                      (exists (?z - hexagonal_bin)
                        (exists (?m ?c - building)
                          (and
                            (and
                              (game-optional
                                (and
                                  (in_motion ?a)
                                  (in_motion ?w)
                                )
                              )
                              (exists (?h - hexagonal_bin)
                                (and
                                  (and
                                    (game-optional
                                      (and
                                        (on ?c ?a)
                                        (in_motion ?l)
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
                (forall (?n - block)
                  (game-optional
                    (in_motion ?j)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?p - game_object)
        (then
          (hold (not (agent_holds bed) ) )
          (once (between ?p agent ?p) )
        )
      )
    )
    (forall (?h - hexagonal_bin)
      (and
        (preference preference2
          (exists (?f - curved_wooden_ramp)
            (then
              (hold (not (adjacent bed ?f) ) )
              (once (adjacent_side ?h ?h ?f agent) )
              (once (exists (?b - hexagonal_bin) (not (and (in_motion ?h) ) ) ) )
            )
          )
        )
        (preference preference3
          (exists (?n - building ?m - teddy_bear)
            (then
              (once (and (exists (?i - hexagonal_bin) (not (not (on ?i ?m) ) ) ) (agent_holds agent) (exists (?l - wall ?r - pillow) (not (and (agent_holds ?r) (not (> (distance door ?r) (distance_side ?r ?m ?h blue)) ) ) ) ) (not (not (agent_holds agent) ) ) (not (object_orientation blue ?h) ) (agent_holds ?h) (touch front pink) (in_motion ?h) ) )
              (hold (agent_holds ?m) )
              (once (not (touch ?m ?h) ) )
            )
          )
        )
        (preference preference4
          (exists (?r - cube_block)
            (then
              (once (and (on ?h ?h) (agent_holds ?r) ) )
              (once (and (opposite ?r ?h) (exists (?i - curved_wooden_ramp) (agent_holds ?i) ) ) )
              (once (< (x_position ?h) (distance ?r ?r)) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (+ 5 (count-once-per-objects preference3:blue) (count-once-per-objects preference1:white:dodgeball) (* 10 2 )
      (- (count-once-per-objects preference3:basketball) )
      (* (= (* 8 300 )
          (count preference2:beachball)
        )
        5
      )
      2
    )
    5
  )
)
(:scoring
  5
)
)(define (game game-id-943) (:domain few-objects-room-v1)
(:setup
  (exists (?i - dodgeball ?l - game_object ?d - ball)
    (exists (?p - game_object)
      (game-conserved
        (agent_holds ?d)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?y - hexagonal_bin)
        (then
          (hold (and (in_motion desk) (not (in_motion ?y) ) ) )
          (once (or (not (exists (?q - shelf ?q - building) (in_motion ?y) ) ) (in bed rug) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:white) (count-once preference1:beachball:dodgeball) )
)
(:scoring
  (* (count preference1:basketball) 1 )
)
)(define (game game-id-944) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?x - pillow)
      (and
        (game-conserved
          (not
            (not
              (agent_holds agent)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?t - cube_block ?m - curved_wooden_ramp ?f - cube_block)
      (and
        (preference preference1
          (exists (?o - dodgeball ?l - hexagonal_bin)
            (then
              (once (not (not (not (agent_holds ?f) ) ) ) )
              (once (and (rug_color_under ?f ?l) (or (and (agent_holds ?l) (and (in_motion ?l) (in_motion ?l) ) ) (not (not (touch ?f ?f) ) ) ) ) )
              (once (and (same_color upright ?l) (not (in_motion ?l) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (and
        (>= 10 (count preference1:blue_pyramid_block) )
        (<= 10 8 )
        (>= (count preference1:hexagonal_bin) (external-forall-maximize 2 ) )
      )
      (and
        (> (count-once-per-objects preference1:beachball) 3 )
      )
    )
  )
)
(:scoring
  2
)
)(define (game game-id-945) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (exists (?q - drawer ?l - (either cd dodgeball book) ?t - game_object)
        (game-conserved
          (forall (?g - doggie_bed ?f - game_object)
            (and
              (on ?t ?t)
              (in_motion right)
            )
          )
        )
      )
    )
    (or
      (game-conserved
        (in_motion front)
      )
    )
    (game-conserved
      (agent_holds bed)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?s - ball)
        (then
          (once (exists (?z - wall ?m - dodgeball) (agent_holds pink) ) )
          (hold-while (= 1) (agent_holds ?s) (object_orientation ?s ?s) )
          (once (agent_holds ?s) )
        )
      )
    )
  )
)
(:terminal
  (<= 3 (count-once preference1:hexagonal_bin) )
)
(:scoring
  (count-once-per-objects preference1:doggie_bed)
)
)(define (game game-id-946) (:domain few-objects-room-v1)
(:setup
  (exists (?x - green_triangular_ramp)
    (or
      (game-optional
        (not
          (not
            (in_motion ?x)
          )
        )
      )
      (and
        (game-conserved
          (< 0.5 1)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?i - shelf ?w - wall)
      (and
        (preference preference1
          (exists (?l - cube_block)
            (then
              (once (adjacent agent ?l) )
              (hold (and (and (agent_holds ?l) (on ?w ?w) ) (in_motion ?l) ) )
              (once (object_orientation ?l sideways) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?r - triangular_ramp)
        (at-end
          (or
            (<= 2 (distance_side ?r ?r door))
            (and
              (on ?r desk)
              (not
                (same_color ?r ?r)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 2 (+ (total-score) (total-score) )
    )
  )
)
(:scoring
  (count preference1:yellow)
)
)(define (game game-id-947) (:domain many-objects-room-v1)
(:setup
  (exists (?m - cube_block)
    (and
      (game-conserved
        (not
          (in ?m ?m)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?g - doggie_bed)
      (and
        (preference preference1
          (exists (?u - sliding_door)
            (then
              (once (on ?g ?u) )
              (once (not (broken ?u) ) )
              (once (agent_holds ?g) )
            )
          )
        )
        (preference preference2
          (exists (?n - hexagonal_bin)
            (then
              (once (in ?n ?n) )
              (once (agent_holds ?n) )
              (once (adjacent ?g ?g) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?k - chair ?r - hexagonal_bin)
        (then
          (hold (not (in_motion ?r) ) )
          (forall-sequence (?v - tall_cylindrical_block ?g - cube_block)
            (then
              (once (agent_holds ?r) )
              (once (and (in ?g ?g) (and (in_motion ?r) (faces ?r ?r) ) (not (agent_holds ?r) ) ) )
              (hold (not (in_motion ?g) ) )
            )
          )
          (once (and (not (not (touch ?r ?r) ) ) (>= 7 (x_position ?r)) (exists (?j - teddy_bear) (and (is_setup_object ?j) (agent_holds ?j) ) ) ) )
        )
      )
    )
    (preference preference4
      (exists (?y - game_object)
        (then
          (once (not (and (not (on top_drawer ?y) ) (not (toggled_on ?y) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* 100 (- (count-overlapping preference3:basketball) )
        (count preference1:beachball:dodgeball)
      )
      (- 5 )
    )
    (<= (> 9 (count-shortest preference4:basketball) )
      (* (count-once preference4:pink_dodgeball) (- 6 )
      )
    )
  )
)
(:scoring
  6
)
)(define (game game-id-948) (:domain many-objects-room-v1)
(:setup
  (forall (?e - curved_wooden_ramp)
    (and
      (and
        (game-conserved
          (agent_holds ?e)
        )
      )
      (exists (?p ?y ?i - (either cellphone yellow_cube_block blue_cube_block))
        (and
          (forall (?j - cylindrical_block)
            (forall (?t - dodgeball)
              (game-conserved
                (and
                  (in_motion ?y)
                  (agent_holds ?i)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?s - (either yellow golfball) ?h - cube_block ?c - golfball)
        (at-end
          (in_motion room_center)
        )
      )
    )
  )
)
(:terminal
  (>= 3 (count-once-per-objects preference1:blue_cube_block) )
)
(:scoring
  (external-forall-maximize
    20
  )
)
)(define (game game-id-949) (:domain few-objects-room-v1)
(:setup
  (forall (?b ?i ?g ?j ?u ?p - doggie_bed)
    (exists (?e - game_object)
      (and
        (and
          (or
            (game-conserved
              (adjacent_side desk ?b front room_center)
            )
            (game-conserved
              (in_motion ?u)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o ?q ?d - ball)
      (and
        (preference preference1
          (exists (?v - curved_wooden_ramp)
            (then
              (hold (on ?q desk) )
              (hold (and (< 1 (distance ?o agent)) (on ?o back) ) )
              (hold (in_motion ?o) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:orange:blue_dodgeball) 0 )
)
(:scoring
  (* (count preference1:hexagonal_bin) 15 )
)
)(define (game game-id-950) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?v - (either dodgeball golfball book))
      (exists (?s - teddy_bear ?c - teddy_bear)
        (forall (?o - sliding_door)
          (exists (?r - dodgeball ?u - ball)
            (exists (?y - cube_block)
              (game-optional
                (not
                  (and
                    (equal_x_position bed ?o)
                    (same_color ?y ?u)
                    (< 5 4)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?s - dodgeball)
        (at-end
          (in_motion top_shelf)
        )
      )
    )
    (preference preference2
      (exists (?y - ball ?g - color)
        (then
          (hold (agent_holds ?g) )
          (once (is_setup_object brown) )
          (once (= 4) )
        )
      )
    )
    (preference preference3
      (exists (?e - game_object)
        (then
          (once (not (and (in_motion ?e) (on ?e ?e) ) ) )
          (hold-while (on room_center rug) (in_motion ?e) )
          (once (agent_holds ?e) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference1:dodgeball) (count preference3:golfball) )
)
(:scoring
  (+ (* (count preference1:basketball:dodgeball) (count preference1:basketball) )
    (count-once-per-external-objects preference1:pink_dodgeball:pink)
  )
)
)(define (game game-id-951) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?s - hexagonal_bin)
      (game-optional
        (agent_holds ?s)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?p - pyramid_block)
        (then
          (hold (= 2 1) )
          (once (and (agent_holds ?p) (in_motion ?p) ) )
          (once (in_motion ?p) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* (count preference1:beachball) 3 )
      (count-measure preference1:brown)
    )
    (or
      (>= (* (external-forall-maximize (count-once-per-objects preference1:red:yellow) ) (count preference1:beachball) )
        (count preference1:basketball)
      )
      (= (count preference1:red) (total-time) )
    )
    (and
      (<= (+ (+ 12 1 9 (count-once-per-objects preference1:pyramid_block) (count preference1:golfball) 3 (* (external-forall-minimize 2 ) 50 (+ 10 5 )
            )
            (* 2 2 (+ (* 6 (< (* (+ (* (count-once-per-objects preference1:beachball) (count-once-per-objects preference1:dodgeball) )
                        (total-score)
                      )
                      (count preference1:beachball)
                    )
                    (not
                      (count-once-per-objects preference1:yellow:dodgeball)
                    )
                  )
                )
                (- (* 0 (count-measure preference1:dodgeball) )
                )
              )
              (count-shortest preference1:beachball)
              (* 9 2 )
              (count-once-per-objects preference1:dodgeball)
              (count preference1:pink_dodgeball)
              (* (+ (count-once preference1:yellow) (count-increasing-measure preference1:block) )
                (count preference1:blue_pyramid_block)
              )
              (+ (* 1 (total-time) )
                100
              )
            )
            (* 4 (count-once-per-objects preference1:pink:dodgeball) )
            (+ (count preference1:yellow_pyramid_block) 10 )
            4
            (* (or (count preference1:block) (count preference1:green) ) 5 )
          )
          (* (count-once preference1:dodgeball:doggie_bed) 5 )
          (count-same-positions preference1:dodgeball:dodgeball:orange)
        )
        (* (* (- 5 (external-forall-maximize (count preference1:dodgeball) ) ) 4 )
        )
      )
      (>= 20 (count-once-per-objects preference1:yellow) )
    )
  )
)
(:scoring
  (count-once-per-objects preference1:tan)
)
)(define (game game-id-952) (:domain few-objects-room-v1)
(:setup
  (forall (?e - hexagonal_bin)
    (game-optional
      (in ?e ?e)
    )
  )
)
(:constraints
  (and
    (forall (?b - dodgeball)
      (and
        (preference preference1
          (exists (?j - hexagonal_bin)
            (then
              (once (same_object rug ?j) )
              (once (and (and (exists (?k - teddy_bear ?h - dodgeball) (in_motion ?b) ) (agent_holds ?b) ) (not (and (and (on ?b ?j) ) (agent_holds ?j) ) ) ) )
              (hold-while (and (and (and (on ?b ?j) (in_motion ?j) (and (not (not (in_motion ?j) ) ) (touch ?b ?b) ) (and (and (agent_holds ?j) (and (in ?b ?j) (in_motion ?j) ) (not (in_motion ?j) ) ) (= 10 (distance ?b ?j)) ) (agent_holds ?j) (and (in block ?j) (not (in ?b ?b) ) ) (and (adjacent ?j rug) (< 1 1) ) (exists (?p - (either pillow dodgeball)) (agent_holds ?j) ) ) (in_motion desk) ) (and (not (and (object_orientation pink ?j) (and (exists (?y - chair ?k - (either alarm_clock floor)) (in ?k ?j) ) (not (and (agent_holds ?j) (and (forall (?g ?o - hexagonal_bin) (not (not (on agent ?j) ) ) ) (exists (?i - hexagonal_bin) (rug_color_under ?i ?j) ) (rug_color_under ?b agent) ) ) ) ) ) ) ) (agent_holds ?j) ) (not (and (in ?j bed) (on bed ?j) ) ) (in_motion ?b) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?i - (either tall_cylindrical_block))
        (then
          (once (and (not (in_motion ?i) ) (and (on ?i agent) (agent_holds bed) ) ) )
          (once (and (in_motion agent) (in_motion ?i) ) )
          (hold (and (agent_holds ?i) (on ?i ?i) (between bed ?i ?i) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (count-once-per-external-objects preference2:green) (* (- 5 )
          5
        )
      )
    )
    (>= (* (* 4 (count preference2:basketball:pink_dodgeball) )
        (count preference2:doggie_bed)
      )
      3
    )
  )
)
(:scoring
  (count-total preference2:dodgeball:basketball)
)
)(define (game game-id-953) (:domain medium-objects-room-v1)
(:setup
  (exists (?s - hexagonal_bin)
    (and
      (game-conserved
        (on ?s rug)
      )
      (forall (?e - ball)
        (forall (?n - hexagonal_bin)
          (and
            (game-conserved
              (agent_holds ?e)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?j - wall ?o - ball ?d - wall)
      (and
        (preference preference1
          (exists (?t - doggie_bed ?q - wall ?h - hexagonal_bin ?r - game_object ?t - (either cylindrical_block golfball yellow_cube_block))
            (then
              (once (not (adjacent_side top_shelf ?t bottom_shelf ?d) ) )
              (any)
              (hold (on front ?d) )
            )
          )
        )
        (preference preference2
          (exists (?e - doggie_bed)
            (then
              (once (and (agent_holds ?e) (agent_holds ?e) ) )
            )
          )
        )
        (preference preference3
          (exists (?m - cube_block ?i - building)
            (then
              (once (in_motion ?i) )
              (hold (touch floor ?i) )
              (hold (in_motion drawer) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (= 1 3 )
)
(:scoring
  (+ (count preference2:tan:dodgeball) )
)
)(define (game game-id-954) (:domain few-objects-room-v1)
(:setup
  (exists (?q ?s - dodgeball)
    (exists (?y - building)
      (game-conserved
        (adjacent ?q ?q)
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - dodgeball)
      (and
        (preference preference1
          (exists (?s - dodgeball ?p - hexagonal_bin)
            (at-end
              (on ?p agent)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< (count preference1:yellow) (count-overlapping preference1:beachball:red) )
)
(:scoring
  2
)
)(define (game game-id-955) (:domain medium-objects-room-v1)
(:setup
  (exists (?o - hexagonal_bin)
    (forall (?n - chair)
      (game-conserved
        (on agent ?n)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?u - drawer)
        (then
          (forall-sequence (?m - flat_block ?y - dodgeball)
            (then
              (hold-while (adjacent_side ?y ?u ?y) (in_motion ?y) (game_over ) (and (agent_holds brown) (not (not (and (agent_holds ?y) (and (in_motion east_sliding_door) (exists (?i ?p - curved_wooden_ramp ?s - curved_wooden_ramp) (same_type ?s agent) ) ) ) ) ) (not (in_motion ?u) ) (>= (distance ?y floor) 3) ) )
              (once (and (< (distance ?y ?u) (x_position ?y)) (> 6 5) ) )
              (once (on ?u ?u) )
            )
          )
          (once (< (distance ?u ?u) (distance ?u ?u)) )
          (once (and (on ?u rug) (and (and (same_object ?u ?u) (not (on ?u upright) ) ) (adjacent ?u ?u) ) ) )
        )
      )
    )
    (forall (?v - building)
      (and
        (preference preference2
          (exists (?f - hexagonal_bin)
            (then
              (once (between agent bed ?f) )
              (hold (between ?v ?v ?f) )
              (once (exists (?r - tall_cylindrical_block ?x - red_dodgeball) (in_motion agent) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= 2 (external-forall-maximize 5 ) )
)
(:scoring
  10
)
)(define (game game-id-956) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (in_motion agent)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?f - hexagonal_bin)
        (then
          (hold (not (agent_holds ?f) ) )
          (once (is_setup_object ?f) )
          (once-measure (and (and (agent_holds ?f) (game_over ) ) (exists (?g ?m - triangular_ramp) (in_motion bed) ) ) (distance ?f ?f) )
        )
      )
    )
    (forall (?l - teddy_bear)
      (and
        (preference preference2
          (exists (?f - dodgeball)
            (then
              (hold (broken ?f) )
              (once (agent_holds ?f) )
              (once (agent_holds desk) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?h - hexagonal_bin)
        (then
          (once (adjacent ?h ?h) )
          (once (agent_holds ?h) )
          (once (or (exists (?w - (either rug key_chain)) (not (not (in floor ?w) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (total-score) )
)
(:scoring
  2
)
)(define (game game-id-957) (:domain many-objects-room-v1)
(:setup
  (forall (?r - hexagonal_bin ?h - (either cellphone pen))
    (not
      (game-conserved
        (and
          (not
            (adjacent ?h ?h)
          )
          (and
            (adjacent ?h ?h)
            (in_motion ?h)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?u - hexagonal_bin)
        (then
          (once (not (and (and (agent_holds ?u) (on ?u ?u) (and (not (or (in_motion ?u) ) ) (< 1 0.5) ) ) (and (and (and (agent_holds ?u) (exists (?b - shelf ?r - (either golfball cellphone hexagonal_bin dodgeball)) (agent_holds ?u) ) ) (= (distance door ?u) (distance room_center ?u) 6 (distance ?u ?u)) ) (in ?u ?u) ) (and (in_motion ?u) (not (not (agent_holds ?u) ) ) ) ) ) )
          (hold (or (same_type ?u bed) (and (adjacent_side ?u ?u ?u) (agent_holds ?u) (and (and (agent_holds ?u) (in_motion ?u) ) (in desk rug) (not (adjacent_side ?u ?u ?u) ) (and (object_orientation ?u ?u) (and (on ?u ?u) (not (agent_holds ?u) ) ) ) ) (in_motion ?u) ) ) )
          (hold (on ?u ?u) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:blue_dodgeball) 5 )
)
(:scoring
  2
)
)(define (game game-id-958) (:domain many-objects-room-v1)
(:setup
  (exists (?k - dodgeball)
    (game-conserved
      (agent_holds ?k)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?v - game_object)
        (then
          (once (in_motion ?v) )
          (hold (adjacent ?v ?v) )
          (once (not (touch ?v ?v) ) )
        )
      )
    )
    (preference preference2
      (exists (?w - cube_block ?j - (either blue_cube_block book pyramid_block))
        (then
          (hold (agent_holds room_center) )
          (hold (and (touch ?j rug) (not (in ?j ?j) ) ) )
          (once (agent_holds room_center) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (not (+ (* (* (- (* 50 (count preference1:golfball) )
              )
              2
              5
              (external-forall-maximize
                5
              )
              10
            )
            (+ (* (/ 10 1 ) (* 5 (* (count-once-per-objects preference2:top_drawer) (count-once-per-objects preference2:pink_dodgeball) )
                )
                (total-score)
              )
              10
            )
          )
          5
          (count preference2:doggie_bed)
          (count preference2:beachball)
        )
      )
      (- 6 )
    )
    (not
      10
    )
  )
)
(:scoring
  (total-time)
)
)(define (game game-id-959) (:domain few-objects-room-v1)
(:setup
  (exists (?c - wall)
    (game-conserved
      (adjacent ?c desk)
    )
  )
)
(:constraints
  (and
    (forall (?x - sliding_door ?d - doggie_bed)
      (and
        (preference preference1
          (then
            (once (< (distance ?d ?d) 10) )
            (once (and (and (and (same_type ?d ?d) (in_motion ?d) ) (in_motion ?d) (on ?d ?d) (and (not (same_type ?d ?d) ) (same_color ?d ?d) ) (< 0.5 (building_size ?d)) (not (and (opposite ?d pink_dodgeball) (not (agent_holds ?d) ) ) ) (in ?d ?d) ) (in ?d ?d) ) )
            (once (in_motion ?d) )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (count preference1:golfball) )
)
(:scoring
  18
)
)(define (game game-id-960) (:domain many-objects-room-v1)
(:setup
  (forall (?z ?m - pyramid_block)
    (and
      (game-conserved
        (agent_holds desk)
      )
      (game-conserved
        (not
          (in ?z rug)
        )
      )
      (game-optional
        (and
          (object_orientation agent brown)
          (< (distance ?z ?m) (distance ?z ?m))
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?t - tall_cylindrical_block ?p - hexagonal_bin)
      (and
        (preference preference1
          (then
            (once (agent_holds ?p) )
            (once (in ?p ?p) )
            (once (and (not (not (in_motion ?p) ) ) (not (on ?p ?p) ) ) )
          )
        )
        (preference preference2
          (exists (?w - dodgeball)
            (then
              (hold (not (on ?w ?p) ) )
              (once (in_motion ?p) )
              (once (not (and (not (agent_holds ?w) ) (not (agent_holds ?p) ) (same_color ?w ?w) ) ) )
            )
          )
        )
        (preference preference3
          (exists (?j - dodgeball)
            (then
              (hold (agent_holds agent) )
              (once (equal_z_position agent ?j) )
              (hold (and (not (agent_holds room_center) ) (exists (?t - hexagonal_bin) (equal_x_position ?j ?p) ) (and (in_motion ?j) (in ?j ?j) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (- (* 3 )
    )
    5
  )
)
(:scoring
  (count preference3:red)
)
)(define (game game-id-961) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (exists (?n - chair ?q - (either mug basketball))
      (on ?q ?q)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?x - block ?u - dodgeball)
        (then
          (hold (exists (?o - doggie_bed ?n - cylindrical_block) (in_motion ?n) ) )
          (once (not (in_motion ?u) ) )
          (once (and (on ?u ?u) (agent_holds ?u) (not (on ?u desk) ) ) )
        )
      )
    )
    (preference preference2
      (exists (?b - building)
        (then
          (hold (same_type ?b ?b) )
          (once (and (not (and (= (distance ?b pink_dodgeball) 1 (distance_side ?b ?b ?b ?b)) (adjacent bed top_shelf) ) ) (in_motion ?b) ) )
          (hold (and (in ?b ?b) (in_motion agent) ) )
          (once (opposite desk ?b) )
        )
      )
    )
  )
)
(:terminal
  (< (count-same-positions preference2:purple) 5 )
)
(:scoring
  (count preference1:pink)
)
)(define (game game-id-962) (:domain many-objects-room-v1)
(:setup
  (forall (?k - cube_block)
    (exists (?s - hexagonal_bin)
      (game-conserved
        (in ?s agent)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?r - ball)
        (then
          (once (and (not (in_motion ?r) ) (and (not (not (< 1 1) ) ) (< (distance ?r ?r) (distance ?r ?r)) ) (agent_holds ?r) ) )
          (once (agent_holds ?r) )
          (once (exists (?m - block ?b - color) (and (< 2 (distance ?r ?r)) (in_motion ?b) ) ) )
        )
      )
    )
    (forall (?r - ball ?i - ball)
      (and
        (preference preference2
          (exists (?m - hexagonal_bin ?k - hexagonal_bin)
            (at-end
              (not
                (in_motion ?k)
              )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?c ?t ?i ?f ?o ?d ?v ?n ?z ?j - hexagonal_bin)
        (at-end
          (not
            (= (distance ?i ?f) (distance ?i ?z))
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (or
        (<= (count-once-per-objects preference2:red) (* 8 (* (count preference3:dodgeball) (= (count preference1:basketball) (external-forall-maximize (* (* (* (* (+ (count preference2:beachball) (count preference1:basketball:pink_dodgeball) 6 2 (+ (count-once-per-objects preference2:dodgeball) (* 4 (* 3 10 (* (* 4 (count-once-per-objects preference2:pink) )
                                    (* (* (total-time) 6 )
                                    )
                                  )
                                )
                              )
                            )
                            2
                            (count preference1:cube_block)
                            (count preference2:basketball)
                            9
                          )
                          (count-once-per-external-objects preference2:pink)
                          (count-longest preference2:white)
                          3
                          (count preference1:yellow:purple)
                          (* (count preference3:beachball) )
                          (* (count preference2:beachball) (* (and 1 (count preference1:orange:pink) 5 ) (count-measure preference2:alarm_clock) )
                          )
                        )
                        10
                      )
                      (* 5 (total-score) )
                    )
                    (- (* 3 5 2 10 (* 3 (* (external-forall-maximize (- (count preference3:yellow) )
                            )
                            (count preference1:dodgeball:alarm_clock)
                            2
                            (count preference3:dodgeball)
                          )
                        )
                        (count preference1:beachball)
                        (count-measure preference1:blue_dodgeball:dodgeball)
                        (count-once-per-objects preference3:basketball)
                        10
                        (+ 5 (* 15 (count preference3:yellow_cube_block) (* (+ (- (count preference1:orange:basketball:pink) )
                                5
                              )
                              1
                            )
                          )
                        )
                        (count preference2:yellow:golfball)
                        10
                      )
                    )
                  )
                )
              )
              (count preference2:pyramid_block)
            )
          )
        )
      )
      (= (+ (count preference3:blue_dodgeball:dodgeball) (+ 3 (* 2 (count preference1:basketball) 4 )
          )
          (count-once preference1:dodgeball)
          (count-measure preference2:beachball:red:red)
        )
        (count-once preference2:green)
      )
    )
    (>= 10 3 )
    (= 1 (total-time) )
  )
)
(:scoring
  5
)
)(define (game game-id-963) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (on sideways sideways)
  )
)
(:constraints
  (and
    (forall (?m - block)
      (and
        (preference preference1
          (exists (?d ?n - game_object ?g - hexagonal_bin)
            (then
              (once (agent_holds ?m) )
              (hold-while (in ?m ?m) (agent_holds ?m) )
              (once (< 0 (distance ?g ?m)) )
            )
          )
        )
      )
    )
    (forall (?k - hexagonal_bin ?r - (either cylindrical_block yellow_cube_block))
      (and
        (preference preference2
          (then
            (hold (on agent ?r) )
            (hold-while (on ?r ?r) (agent_holds sideways) (in_motion ?r) (agent_holds ?r) )
            (once (in ?r ?r) )
          )
        )
      )
    )
  )
)
(:terminal
  (> 60 6 )
)
(:scoring
  (* (+ (+ (count preference1:dodgeball) (count-once-per-external-objects preference1:golfball:pink) (= 3 )
      )
      25
    )
    3
  )
)
)(define (game game-id-964) (:domain few-objects-room-v1)
(:setup
  (exists (?v ?z - ball)
    (exists (?a - watch)
      (game-optional
        (agent_holds ?v)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?j - ball)
        (then
          (hold-while (agent_holds ?j) (broken ?j) (adjacent_side ?j drawer ?j) )
          (hold (forall (?z ?x - hexagonal_bin ?f - cylindrical_block ?h - wall) (and (on ?j ?j) (in_motion ?j) ) ) )
          (once (in_motion ?j) )
        )
      )
    )
    (preference preference2
      (exists (?s - hexagonal_bin ?s - building ?h - dodgeball)
        (then
          (once (exists (?v - tan_cube_block) (agent_crouches ) ) )
          (hold (agent_holds ?h) )
          (hold (or (agent_holds room_center) (not (on ?h ?h) ) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (and
      (or
        (or
          (<= (total-time) 2 )
          (>= (* (> (count-once-per-external-objects preference2:pink) (count preference2:beachball) )
              16
              10
            )
            (count-once-per-objects preference1:beachball)
          )
          (>= (* 100 (count preference1:yellow) )
            (count-once-per-external-objects preference1:golfball)
          )
        )
        (> (count preference1:basketball) (or 10 (count preference1:golfball) ) )
        (>= 5 (and (count preference1:blue_pyramid_block) (* (* (count-once-per-objects preference2:beachball) (<= (count-once-per-objects preference1:hexagonal_bin) 2 )
              )
              7
            )
          )
        )
      )
    )
  )
)
(:scoring
  50
)
)(define (game game-id-965) (:domain few-objects-room-v1)
(:setup
  (exists (?b - ball ?r - block)
    (and
      (game-conserved
        (and
          (agent_holds ?r)
          (and
            (and
              (in_motion agent)
              (adjacent ?r ?r)
            )
            (in_motion green_golfball)
          )
          (agent_holds ?r)
        )
      )
      (and
        (forall (?o - wall ?m - teddy_bear)
          (and
            (game-conserved
              (toggled_on ?r)
            )
          )
        )
      )
      (and
        (and
          (exists (?y - wall)
            (forall (?u - ball)
              (forall (?d - dodgeball)
                (forall (?p - ball)
                  (and
                    (exists (?f - building)
                      (forall (?k - (either pyramid_block golfball cd))
                        (exists (?s ?l - ball)
                          (game-optional
                            (and
                              (not
                                (and
                                  (and
                                    (agent_holds ?d)
                                    (on top_shelf ?f)
                                    (not
                                      (in ?d side_table)
                                    )
                                    (on ?s ?k)
                                    (adjacent ?u ?p)
                                    (agent_holds ?u)
                                    (on ?k desk)
                                    (in ?d ?p)
                                    (not
                                      (not
                                        (and
                                          (and
                                            (< 5 1)
                                            (agent_holds ?s)
                                          )
                                          (< 5 (distance left ?s))
                                        )
                                      )
                                    )
                                    (in_motion tan)
                                    (not
                                      (agent_holds ?r)
                                    )
                                    (not
                                      (> 1 (distance ?r back))
                                    )
                                  )
                                  (and
                                    (same_object ?f ?p)
                                    (and
                                      (agent_holds ?l)
                                    )
                                  )
                                  (in ?s ?u)
                                  (not
                                    (in_motion upside_down)
                                  )
                                )
                              )
                              (not
                                (agent_holds ?r)
                              )
                            )
                          )
                        )
                      )
                    )
                    (and
                      (game-optional
                        (not
                          (not
                            (not
                              (in_motion ?u)
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?o - (either dodgeball book))
        (then
          (once (agent_holds ?o) )
          (once (agent_holds ?o) )
          (once (not (and (and (in_motion ?o) (touch room_center ?o) ) (and (not (in_motion ?o) ) (object_orientation ?o ?o) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (external-forall-maximize (* (count-once-per-objects preference1:book) (count preference1:green) )
    )
    3
  )
)
(:scoring
  (count preference1:dodgeball)
)
)(define (game game-id-966) (:domain medium-objects-room-v1)
(:setup
  (exists (?e - hexagonal_bin)
    (or
      (and
        (and
          (and
            (game-conserved
              (not
                (not
                  (not
                    (on ?e ?e)
                  )
                )
              )
            )
            (game-conserved
              (and
                (in_motion ?e)
                (not
                  (and
                    (in_motion ?e)
                    (touch ?e ?e)
                  )
                )
              )
            )
            (forall (?i - cube_block)
              (forall (?g - game_object ?k - building)
                (exists (?s - ball ?s - hexagonal_bin ?f - curved_wooden_ramp ?l - building ?v - chair)
                  (and
                    (and
                      (game-conserved
                        (agent_holds ?e)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?b - teddy_bear ?t - hexagonal_bin ?g - ball)
        (at-end
          (between ?g ?g ?g)
        )
      )
    )
    (forall (?w - dodgeball ?n - (either wall cube_block book))
      (and
        (preference preference2
          (exists (?k - curved_wooden_ramp ?u - bridge_block)
            (then
              (once (touch ?u ?u) )
              (hold (< (distance pink_dodgeball ?u) 3) )
              (once (agent_holds ?n) )
            )
          )
        )
      )
    )
    (forall (?e - hexagonal_bin ?o - hexagonal_bin)
      (and
        (preference preference3
          (exists (?l - drawer)
            (then
              (once (= 1 (distance ?o ?o)) )
              (once (and (in ?o ?l) (or (agent_holds ?l) (agent_holds ?l) ) ) )
              (once (and (agent_holds ?o) (exists (?k - hexagonal_bin ?d - building ?a - (either block blue_cube_block)) (agent_holds ?o) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (- (total-score) )
    (/
      (count-once-per-objects preference1:green)
      20
    )
  )
)
(:scoring
  (* (count preference3:pink) 7 10 )
)
)(define (game game-id-967) (:domain many-objects-room-v1)
(:setup
  (forall (?v - dodgeball)
    (game-conserved
      (and
        (toggled_on bed)
        (not
          (or
            (and
              (in_motion ?v)
              (and
                (in_motion ?v)
                (not
                  (not
                    (in ?v ?v)
                  )
                )
              )
            )
            (agent_holds ?v)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?d - doggie_bed)
        (then
          (hold (in ?d ?d) )
          (once (not (and (adjacent ?d ?d) (same_color ?d side_table) ) ) )
        )
      )
    )
  )
)
(:terminal
  (< 3 10 )
)
(:scoring
  1
)
)(define (game game-id-968) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (game_over )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?a - cube_block)
        (then
          (once (and (agent_holds ?a) (opposite ?a pink_dodgeball) ) )
        )
      )
    )
    (preference preference2
      (exists (?w - (either alarm_clock blue_cube_block alarm_clock) ?k - doggie_bed)
        (then
          (once (and (and (in_motion agent) (> (distance ?k ?k) (distance ?k ?k)) ) (object_orientation ?k ?k) (and (and (agent_holds ?k) (not (adjacent_side ?k ?k ?k) ) ) (in_motion ?k) ) ) )
          (hold-while (agent_crouches ) (in_motion ?k) )
          (hold-while (not (not (on ?k ?k) ) ) (and (and (adjacent ?k ?k) (on agent ?k) ) ) )
        )
      )
    )
  )
)
(:terminal
  (> (/ 6 (count-once-per-objects preference1:pink:doggie_bed) ) (+ (* (- (count-once-per-objects preference2:pink:dodgeball) )
        5
        (+ (count-once-per-objects preference2:dodgeball:yellow_cube_block) 1 )
      )
      (count-once-per-objects preference2:pink:red)
    )
  )
)
(:scoring
  (count preference2:hexagonal_bin)
)
)(define (game game-id-969) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (forall (?s - dodgeball)
      (in_motion floor)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?g - shelf ?q - game_object ?g - (either alarm_clock cube_block))
        (then
          (hold (< (distance_side ?g right agent ?g) (distance ?g ?g)) )
          (once (not (adjacent ?g pink_dodgeball) ) )
          (hold (touch ?g ?g) )
        )
      )
    )
  )
)
(:terminal
  (and
    (= (* 3 (count-once-per-objects preference1:yellow) )
      (count-unique-positions preference1:purple:pink)
    )
  )
)
(:scoring
  (count preference1:pink_dodgeball)
)
)(define (game game-id-970) (:domain few-objects-room-v1)
(:setup
  (exists (?j ?f ?s - (either beachball wall chair))
    (exists (?x - (either pen dodgeball) ?l - hexagonal_bin)
      (forall (?h - pillow)
        (game-optional
          (and
            (adjacent ?l right)
            (not
              (in_motion ?l)
            )
            (and
              (on ?l ?s)
              (in_motion ?f)
            )
            (touch bed rug)
            (touch ?s ?f)
            (not
              (and
                (agent_holds ?j)
                (on ?s ?s)
                (not
                  (adjacent ?j ?h)
                )
              )
            )
            (same_type ?s ?l)
            (agent_holds ?h)
            (agent_holds ?h)
            (adjacent_side ?f ?s ?s)
            (between ?l front ?f)
            (touch bed agent)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?r - game_object)
        (then
          (once (not (and (agent_holds ?r) (agent_holds rug) (game_start ) ) ) )
          (once (faces agent ?r) )
          (hold-for 0 (< (x_position ?r) 1) )
          (once (agent_holds agent) )
        )
      )
    )
  )
)
(:terminal
  (or
    (<= (total-time) 2 )
  )
)
(:scoring
  10
)
)(define (game game-id-971) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (in_motion bed)
  )
)
(:constraints
  (and
    (forall (?d - beachball)
      (and
        (preference preference1
          (then
            (once (and (same_color ?d ?d) (and (and (adjacent_side desk ?d ?d) (on ?d ?d) ) (in rug ?d) ) ) )
            (hold (and (on ?d pink_dodgeball) (rug_color_under ?d bed) (agent_holds ?d) ) )
            (once (object_orientation ?d ?d) )
          )
        )
      )
    )
    (forall (?v - triangular_ramp ?j - building ?e - wall)
      (and
        (preference preference2
          (exists (?u - ball)
            (then
              (once (agent_holds ?e) )
              (once (agent_holds front) )
              (hold (in_motion ?e) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (not
      (>= 15 (count preference2:hexagonal_bin) )
    )
  )
)
(:scoring
  (count-unique-positions preference2:yellow:dodgeball)
)
)(define (game game-id-972) (:domain few-objects-room-v1)
(:setup
  (exists (?f - (either cellphone dodgeball pink))
    (game-conserved
      (exists (?d - curved_wooden_ramp ?x - hexagonal_bin ?l - cube_block)
        (not
          (and
            (on ?l ?f)
            (or
              (agent_holds ?f)
              (= 2 (distance ?f ?l))
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?m - hexagonal_bin ?n - (either dodgeball golfball golfball cd))
        (then
          (once (exists (?o - sliding_door) (agent_holds ?o) ) )
        )
      )
    )
    (preference preference2
      (exists (?k - hexagonal_bin)
        (then
          (hold-while (agent_holds ?k) (in_motion desk) (in_motion ?k) )
          (once-measure (not (equal_z_position desk ?k) ) (distance_side agent agent ?k) )
          (once (agent_holds ?k) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (+ (+ 7 (count-once-per-objects preference2:basketball) )
        6
      )
      (count preference2:beachball)
    )
    (+ (+ (total-time) (* (count preference2:dodgeball) (count preference1:dodgeball) )
      )
      (count-once-per-external-objects preference1:pink)
      (count preference1:golfball)
    )
  )
)
(:scoring
  (count preference1:dodgeball)
)
)(define (game game-id-973) (:domain medium-objects-room-v1)
(:setup
  (forall (?h - hexagonal_bin)
    (game-conserved
      (agent_holds ?h)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?m - block)
        (then
          (once (and (agent_holds ?m) (agent_holds ?m) ) )
          (hold-for 3 (in_motion ?m) )
          (hold-while (in_motion ?m) (is_setup_object right) (or (not (on ?m ?m) ) (in_motion ?m) ) (agent_holds ?m) )
        )
      )
    )
    (forall (?s - desktop)
      (and
        (preference preference2
          (exists (?y - hexagonal_bin)
            (then
              (once (in_motion south_wall) )
              (once (not (not (and (agent_holds ?s) (agent_holds ?y) ) ) ) )
              (once (in_motion ?y) )
            )
          )
        )
        (preference preference3
          (then
            (any)
            (once (in_motion ?s) )
            (once (< (distance ?s ?s) 4) )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference2:basketball:basketball:blue_cube_block) (- (count-once-per-objects preference2:beachball:dodgeball) )
  )
)
(:scoring
  50
)
)(define (game game-id-974) (:domain few-objects-room-v1)
(:setup
  (forall (?t - hexagonal_bin)
    (not
      (and
        (and
          (forall (?d - ball ?a - hexagonal_bin ?j - building)
            (and
              (and
                (game-conserved
                  (not
                    (in_motion ?t)
                  )
                )
                (exists (?n - (either red curved_wooden_ramp book floor tall_cylindrical_block tall_cylindrical_block game_object))
                  (game-conserved
                    (agent_holds ?j)
                  )
                )
                (and
                  (forall (?g - hexagonal_bin)
                    (exists (?o - chair)
                      (and
                        (and
                          (exists (?e - dodgeball)
                            (exists (?y - curved_wooden_ramp ?a - hexagonal_bin)
                              (game-optional
                                (on ?o ?e)
                              )
                            )
                          )
                          (and
                            (game-conserved
                              (touch ?g ?j)
                            )
                            (game-conserved
                              (< (distance floor ?j) 1)
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
              (and
                (exists (?l - shelf)
                  (and
                    (exists (?d - doggie_bed)
                      (exists (?b - ball)
                        (game-optional
                          (adjacent ?b ?j)
                        )
                      )
                    )
                  )
                )
              )
              (exists (?p - golfball ?a - drawer ?y - dodgeball)
                (game-conserved
                  (same_type ?t ?t)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?g - drawer)
        (then
          (once (not (adjacent_side ?g ?g ?g ?g) ) )
          (hold (exists (?m - block) (same_object floor bed) ) )
          (hold (in_motion ?g) )
        )
      )
    )
  )
)
(:terminal
  (> (count preference1) (+ (count preference1:pink_dodgeball:pink) (- (count-once preference1:yellow_cube_block) (count preference1:yellow) ) )
  )
)
(:scoring
  (<= (+ 3 (* (+ 8 (count-same-positions preference1:book) )
        7
      )
    )
    (<= (= (count-once-per-objects preference1:dodgeball) (total-time) )
      (* (* (- (count preference1:dodgeball) )
          (count preference1:pink_dodgeball)
        )
        7
      )
    )
  )
)
)(define (game game-id-975) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (in_motion door)
  )
)
(:constraints
  (and
    (forall (?r - shelf ?l - cube_block)
      (and
        (preference preference1
          (exists (?q ?a ?v - (either flat_block cd))
            (then
              (once (> (distance ?a ?q) (distance ?v upright)) )
              (once (on ?l ?a) )
              (once (in_motion ?q) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?t - hexagonal_bin)
        (then
          (once (and (in_motion ?t) (adjacent ?t ?t) (not (touch ?t upside_down) ) ) )
          (hold (and (in sideways ?t) ) )
          (once (not (on ?t ?t) ) )
        )
      )
    )
    (forall (?m - dodgeball)
      (and
        (preference preference3
          (exists (?y - ball)
            (then
              (once (in_motion ?y) )
              (once (exists (?c - dodgeball) (touch ?y rug) ) )
              (hold (agent_holds agent) )
            )
          )
        )
        (preference preference4
          (exists (?v - dodgeball ?y - (either yellow_cube_block wall))
            (then
              (hold (not (on ?m ?m) ) )
              (once (in_motion ?m) )
              (once (< (distance_side ?y ?y ?m ?m) (distance ?m ?m)) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference2:purple) 5 )
)
(:scoring
  10
)
)(define (game game-id-976) (:domain many-objects-room-v1)
(:setup
  (exists (?a - pillow)
    (exists (?t - dodgeball)
      (game-conserved
        (agent_holds floor)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?r - hexagonal_bin ?y - shelf)
        (then
          (once (and (in_motion ?y) (not (in_motion ?y) ) (exists (?t - hexagonal_bin ?d - blue_pyramid_block) (and (not (between ?d ?d ?y) ) ) ) (in_motion ?y) ) )
          (once (and (on ?y ?y) (agent_holds ?y) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-measure preference1:pink) 10 )
)
(:scoring
  (+ (* (count-once-per-objects preference1:basketball) 2 )
    (+ 7 (count-measure preference1:golfball) )
  )
)
)(define (game game-id-977) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?m - block)
      (game-optional
        (in_motion ?m)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?o - hexagonal_bin)
        (then
          (once (and (> 1 (distance_side agent ?o ?o)) ) )
          (hold (agent_holds ?o) )
          (once (not (not (on ?o ?o) ) ) )
        )
      )
    )
  )
)
(:terminal
  (= 3 (* (+ (count preference1:golfball:beachball) (* 1 (* 2 (count-shortest preference1:golfball) )
        )
      )
      (count-once preference1:top_drawer)
    )
  )
)
(:scoring
  (= (total-time) (count-overlapping preference1:purple:basketball) )
)
)(define (game game-id-978) (:domain medium-objects-room-v1)
(:setup
  (exists (?f - hexagonal_bin ?r - building)
    (forall (?d - dodgeball)
      (exists (?j - dodgeball)
        (game-optional
          (not
            (agent_holds ?r)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o - block ?e - dodgeball ?d - (either dodgeball basketball))
      (and
        (preference preference1
          (exists (?u - dodgeball ?r - bridge_block)
            (then
              (hold (not (<= (building_size ?r) (distance rug ?d)) ) )
              (once (in desk ?r) )
              (once (agent_holds bed) )
            )
          )
        )
      )
    )
    (forall (?r - dodgeball)
      (and
        (preference preference2
          (exists (?c - dodgeball ?z - shelf)
            (then
              (once (not (in_motion ?r) ) )
              (once (and (> 1 (distance ?z bed)) (and (and (not (> (distance_side bed ?r ?r ?z) 1) ) (agent_holds ?z) (touch ?z agent) (exists (?s - block ?w - wall) (on ?r ?r) ) ) (and (and (agent_holds ?z) (= 1 (distance ?r ?z)) ) (not (not (in_motion ?r) ) ) ) ) ) )
              (hold (and (in_motion ?r) (not (and (in_motion ?r) (forall (?g - shelf) (object_orientation ?z ?g) ) ) ) ) )
            )
          )
        )
        (preference preference3
          (exists (?t - hexagonal_bin)
            (at-end
              (and
                (and
                  (not
                    (not
                      (not
                        (and
                          (in_motion north_wall)
                          (not
                            (= 1 1)
                          )
                        )
                      )
                    )
                  )
                  (on ?r ?r)
                )
                (and
                  (adjacent ?r ?t)
                  (and
                    (and
                      (and
                        (and
                          (< 2 1)
                          (same_type ?r ?r)
                        )
                        (agent_holds ?t)
                        (in side_table ?t)
                        (and
                          (exists (?u - cube_block)
                            (in_motion ?u)
                          )
                          (agent_holds ?r)
                          (not
                            (not
                              (adjacent rug ?r)
                            )
                          )
                          (same_object ?t room_center)
                        )
                      )
                      (not
                        (< (distance bed agent) 1)
                      )
                      (touch ?r ?r)
                    )
                    (and
                      (> 2 (distance_side ?t ?r desk))
                      (agent_holds ?t)
                    )
                  )
                  (in_motion ?r)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (count-once-per-objects preference2:beachball) )
)
(:scoring
  (count preference3:blue_cube_block)
)
)(define (game game-id-979) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (exists (?l - doggie_bed ?e ?l ?q ?t - dodgeball)
        (game-conserved
          (in_motion ?l)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?r - game_object)
        (at-end
          (and
            (not
              (agent_holds ?r)
            )
            (in_motion rug)
          )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (count preference1:beachball) 10 )
    (count preference1:dodgeball)
  )
)
(:scoring
  7
)
)(define (game game-id-980) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?y - hexagonal_bin)
      (game-conserved
        (forall (?u - curved_wooden_ramp ?q - color)
          (not
            (or
              (or
                (in_motion ?y)
              )
              (and
                (agent_holds ?y)
                (or
                  (in_motion ?y)
                  (not
                    (not
                      (is_setup_object ?y)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?e ?d - hexagonal_bin)
      (and
        (preference preference1
          (exists (?h - dodgeball)
            (then
              (hold (in_motion ?e) )
              (hold-while (in_motion ?d) (or (agent_holds ?d) (in_motion ?h) ) )
              (once (or (not (not (< 1 (distance_side ?d ?e ?d)) ) ) (game_start ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (count preference1:beachball) (count preference1:yellow_pyramid_block) )
    (* 5 (count preference1:beachball) )
  )
)
(:scoring
  (count-once-per-external-objects preference1:yellow_cube_block)
)
)(define (game game-id-981) (:domain medium-objects-room-v1)
(:setup
  (exists (?h - wall)
    (game-optional
      (in_motion ?h)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?f - chair)
        (then
          (once (on desk ?f) )
          (once (touch ?f green_golfball) )
          (once (agent_holds ?f) )
        )
      )
    )
  )
)
(:terminal
  (not
    (and
      (< (* 6 (count-once-per-objects preference1:basketball) )
        (external-forall-minimize
          (+ 5 (count preference1:dodgeball) )
        )
      )
      (>= (count-longest preference1:tall_cylindrical_block:book:orange) 3 )
      (or
        (and
          (> 1 (count preference1:wall) )
          (<= (count-total preference1:basketball:basketball) (count preference1:yellow:hexagonal_bin) )
          (and
            (= (count preference1:beachball:blue_pyramid_block:blue_cube_block) (<= (- (* (+ 2 (+ (* 5 (count preference1:purple) )
                        (count-once-per-objects preference1:beachball)
                      )
                      (count-once preference1:dodgeball)
                    )
                    (count-once-per-objects preference1:pink:beachball)
                  )
                )
                10
              )
            )
            (> (count preference1:hexagonal_bin:orange:cube_block) (count-unique-positions preference1:beachball) )
          )
        )
        (>= (* (+ (count-overlapping preference1:red:basketball) (total-time) )
            (count preference1:pink_dodgeball)
          )
          (count-once-per-objects preference1:orange)
        )
        (>= (count preference1:dodgeball) 20 )
      )
    )
  )
)
(:scoring
  (count-increasing-measure preference1:pink)
)
)(define (game game-id-982) (:domain many-objects-room-v1)
(:setup
  (exists (?x - ball ?g - ball)
    (not
      (forall (?q - shelf)
        (exists (?v - game_object)
          (forall (?c - ball)
            (and
              (exists (?e - cube_block ?z - game_object)
                (game-optional
                  (in_motion ?z)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?o - hexagonal_bin)
        (then
          (hold (in_motion ?o) )
          (hold-while (agent_holds ?o) (on agent bed) (agent_holds ?o) )
          (once (or (in ?o desk) (not (agent_holds ?o) ) ) )
          (hold (and (and (object_orientation ?o ?o) (> (x_position ?o) 1) ) (agent_holds ?o) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 3 (count-total preference1:pink) )
    (>= (* (+ (+ (= (count preference1:basketball) (- (count-once-per-objects preference1:dodgeball:red) )
            )
            30
          )
          (count-once-per-objects preference1:dodgeball:yellow)
        )
      )
      (count-once-per-objects preference1:tall_cylindrical_block:pink)
    )
  )
)
(:scoring
  (not
    (- (count-overlapping preference1:orange) )
  )
)
)(define (game game-id-983) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (exists (?v - game_object)
      (not
        (in_motion ?v)
      )
    )
  )
)
(:constraints
  (and
    (forall (?k - (either blue_cube_block hexagonal_bin alarm_clock) ?s - (either pyramid_block))
      (and
        (preference preference1
          (then
            (once (and (and (on ?s front) (agent_holds front) ) (on pillow ?s) ) )
            (hold (adjacent_side ?s ?s ?s ?s) )
            (once (game_start ) )
          )
        )
        (preference preference2
          (exists (?o - chair)
            (then
              (once (not (or (in_motion desktop) (adjacent blue ?s) ) ) )
              (once (same_color ?s rug) )
              (once (on ?o ?s) )
            )
          )
        )
        (preference preference3
          (exists (?i ?v - wall)
            (at-end
              (on ?s ?i)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (- 10 )
  )
)
(:scoring
  5
)
)(define (game game-id-984) (:domain few-objects-room-v1)
(:setup
  (forall (?o - hexagonal_bin)
    (and
      (game-conserved
        (and
          (on ?o ?o)
          (in_motion ?o)
        )
      )
      (and
        (and
          (forall (?f - curved_wooden_ramp)
            (and
              (game-optional
                (< 1 (distance ?f ?o))
              )
            )
          )
          (game-conserved
            (< (distance ?o ?o) 1)
          )
          (exists (?y - red_pyramid_block)
            (and
              (and
                (game-conserved
                  (touch ?y ?o)
                )
                (or
                  (game-conserved
                    (in_motion ?y)
                  )
                  (and
                    (exists (?b - cube_block ?u - (either laptop beachball blue_cube_block pyramid_block main_light_switch hexagonal_bin cd))
                      (and
                        (exists (?e - ball)
                          (forall (?g - shelf)
                            (game-optional
                              (touch ?e ?o)
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
              (and
                (and
                  (game-conserved
                    (on ?y ?y)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?y - hexagonal_bin)
        (then
          (hold (not (agent_holds ?y) ) )
          (once (and (and (and (and (on ?y ?y) (and (same_color ?y ?y) (not (adjacent ?y ?y) ) ) (agent_holds ?y) ) (and (or (above ?y ?y) (on ?y front_left_corner) ) (> 1 1) ) ) (and (and (not (and (in_motion ?y) (not (not (in_motion ?y) ) ) ) ) (= (x_position ?y)) ) (agent_holds ?y) ) (not (and (on bed yellow) (not (adjacent ?y ?y) ) ) ) (agent_holds ?y) ) (in_motion ?y) ) )
          (once (agent_holds ?y) )
        )
      )
    )
  )
)
(:terminal
  (> (= (+ 2 (count-overlapping preference1:golfball) )
      (count preference1:hexagonal_bin)
    )
    (* 3 2 )
  )
)
(:scoring
  (count preference1:golfball:pink_dodgeball)
)
)(define (game game-id-985) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?e - game_object ?f - hexagonal_bin)
      (game-conserved
        (< (distance ?f ?f) 6)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?f - dodgeball ?t - (either dodgeball dodgeball) ?x - yellow_cube_block)
        (then
          (once (< 0 (distance_side ?x ?x ?x ?x)) )
          (once (and (on ?x ?x) (and (and (on ?x desk) (not (and (opposite ?x ?x) (in_motion ?x) (in_motion bed) (game_start ) ) ) (adjacent ?x ?x) ) (not (in ?x rug) ) (exists (?f - (either dodgeball doggie_bed) ?n ?r - doggie_bed ?n ?f - doggie_bed) (in_motion ?n) ) ) (agent_holds ?x) ) )
          (once (not (in ?x ?x) ) )
        )
      )
    )
  )
)
(:terminal
  (> (* (count-once-per-objects preference1:golfball) (total-time) )
    (external-forall-maximize
      (* (or (total-time) (* (- 10 )
            2
            1
          )
        )
        (not
          6
        )
      )
    )
  )
)
(:scoring
  30
)
)(define (game game-id-986) (:domain medium-objects-room-v1)
(:setup
  (forall (?s - ball ?m - book)
    (game-conserved
      (on ?m ?m)
    )
  )
)
(:constraints
  (and
    (forall (?j - dodgeball ?m - dodgeball)
      (and
        (preference preference1
          (exists (?c - hexagonal_bin)
            (then
              (once (or (not (and (in_motion room_center) (and (agent_holds ?c) (and (in_motion ?m) (on upright ?c) (and (same_type desk ?c) (and (in_motion ?c) (and (and (exists (?t - (either basketball cube_block blue_cube_block) ?x - dodgeball) (not (on ?x ?c) ) ) (and (in_motion ?c) (not (and (< 1 1) (agent_holds ?m) ) ) ) ) (same_type ?c ?m) ) ) ) ) ) ) ) ) )
              (hold-while (in_motion ?c) (not (agent_holds ?c) ) )
            )
          )
        )
      )
    )
    (forall (?u - hexagonal_bin ?z - block)
      (and
        (preference preference2
          (exists (?h ?x - color)
            (then
              (hold (and (agent_holds ?x) (agent_holds rug) ) )
              (hold (in floor ?z) )
              (once (not (in_motion ?x) ) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?o - cylindrical_block)
        (then
          (once (> (distance ?o ?o) 1) )
          (any)
          (hold (agent_holds ?o) )
        )
      )
    )
  )
)
(:terminal
  (> (* 6 )
    5
  )
)
(:scoring
  0.7
)
)(define (game game-id-987) (:domain many-objects-room-v1)
(:setup
  (forall (?a - ball)
    (and
      (exists (?h - building)
        (game-optional
          (forall (?s - book ?q ?j - hexagonal_bin)
            (and
              (on ?h ?q)
              (in_motion ?h)
              (agent_holds ?q)
              (not
                (and
                  (agent_holds ?j)
                  (and
                    (adjacent ?h ?q)
                    (and
                      (< (distance ?h ?a) 1)
                      (agent_holds ?a)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?r - hexagonal_bin)
        (then
          (once (rug_color_under ?r ?r) )
          (once (same_color ?r room_center) )
          (once (not (same_object ?r ?r) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (external-forall-maximize 2 ) (total-time) 0 (count preference1:golfball:book) (count-once-per-objects preference1:yellow:basketball) (count preference1:purple:dodgeball) )
    (* (count preference1:yellow:blue_pyramid_block) (count preference1:beachball) 3 5 (- 10 )
      (* (count-once-per-objects preference1:blue_dodgeball) (* 50 (= (+ (/ 4 (count preference1:doggie_bed) ) 5 )
          )
        )
        (* (+ 2 2 )
          (+ (count preference1:dodgeball) (* (/ 10 4 ) 30 )
          )
        )
      )
      (count preference1:blue_dodgeball:pyramid_block)
      (count preference1:basketball)
      5
      4
      (count-total preference1:doggie_bed)
      2
    )
  )
)
(:scoring
  9
)
)(define (game game-id-988) (:domain many-objects-room-v1)
(:setup
  (forall (?z - (either cube_block pink))
    (game-conserved
      (in_motion ?z)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?u - green_triangular_ramp)
        (then
          (once (not (and (on ?u ?u) (in_motion ?u) ) ) )
          (once (in_motion ?u) )
          (once (in_motion ?u) )
          (once (and (agent_holds ?u) (not (agent_holds desk) ) ) )
        )
      )
    )
    (preference preference2
      (exists (?w - wall)
        (then
          (once (agent_crouches ) )
          (once (and (not (agent_holds agent) ) (on ?w ?w) ) )
          (once (not (agent_holds ?w) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:yellow) (count-once preference2:dodgeball) )
)
(:scoring
  (count-same-positions preference2:green)
)
)(define (game game-id-989) (:domain medium-objects-room-v1)
(:setup
  (exists (?d - dodgeball)
    (game-conserved
      (in ?d ?d)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?e - ball)
        (then
          (once (in_motion ?e) )
          (hold-while (in_motion ?e) (open ?e) )
          (once (in_motion ?e) )
          (hold (and (agent_holds ?e) (and (in_motion front) (and (exists (?p - ball ?b - dodgeball) (in ?e ?b) ) (and (and (same_object ?e ?e) ) (agent_holds ?e) ) ) ) ) )
        )
      )
    )
    (preference preference2
      (exists (?p - building)
        (at-end
          (and
            (game_start )
            (same_type ?p ?p)
          )
        )
      )
    )
  )
)
(:terminal
  (<= (+ (count preference2:beachball) 3 (count-once-per-objects preference2:beachball) 5 (+ (count-once-per-objects preference2:dodgeball:blue_dodgeball) (+ 30 10 )
        (* (* 2 (count-total preference1:golfball) )
          5
        )
      )
      (* 3 (* (- (* (- (not 5 ) )
              (+ (count preference1:hexagonal_bin) (count preference2:hexagonal_bin) )
            )
            (count preference2:dodgeball)
          )
          (* (count-once-per-objects preference2:golfball) (* 3 3 )
          )
        )
        (* (+ (count-measure preference2:beachball) (* (count-increasing-measure preference2:beachball) )
          )
          10
        )
      )
    )
    (external-forall-maximize
      (external-forall-minimize
        (count-longest preference2:dodgeball)
      )
    )
  )
)
(:scoring
  5
)
)(define (game game-id-990) (:domain few-objects-room-v1)
(:setup
  (forall (?b ?i - (either doggie_bed key_chain))
    (game-optional
      (not
        (adjacent ?i agent)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?z - cube_block ?d - hexagonal_bin)
        (then
          (hold (or (not (agent_holds ?d) ) (and (same_type ?d ?d) (and (same_color floor bed) (adjacent_side ?d desk ?d ?d) ) ) ) )
          (any)
          (once (agent_holds ?d) )
        )
      )
    )
  )
)
(:terminal
  (>= 4 5 )
)
(:scoring
  (* (* (count-shortest preference1:yellow:green) (count preference1:beachball) )
    (count preference1:dodgeball)
  )
)
)(define (game game-id-991) (:domain many-objects-room-v1)
(:setup
  (exists (?z - building ?n - block)
    (exists (?h - ball)
      (and
        (and
          (exists (?m - wall)
            (and
              (and
                (game-conserved
                  (agent_holds desk)
                )
              )
            )
          )
          (exists (?v - block)
            (game-conserved
              (in front upright)
            )
          )
        )
        (game-conserved
          (and
            (in ?h ?h)
            (not
              (same_type ?n ?h)
            )
            (in_motion ?h)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?s - (either key_chain red))
        (then
          (once (forall (?e - (either curved_wooden_ramp cellphone cd pyramid_block)) (not (in_motion agent) ) ) )
          (hold (on ?s desk) )
        )
      )
    )
    (preference preference2
      (exists (?u - hexagonal_bin)
        (then
          (once (in ?u ?u) )
          (once (not (forall (?f - (either basketball tall_cylindrical_block) ?y - (either cylindrical_block laptop)) (same_object block ?u) ) ) )
          (hold (agent_holds ?u) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* 2 (count preference1:basketball) )
      (count-once-per-external-objects preference2:dodgeball:basketball)
    )
    (<= 180 (count-once preference2:orange) )
    (or
      (>= (external-forall-maximize (total-score) ) (count preference1:red) )
      (>= (count preference1:yellow) (* 7 (* (external-forall-maximize (+ (= (- (count preference1:red) )
                  (* (count-once-per-objects preference1:book) 3 )
                )
                (- (count preference1:dodgeball) )
              )
            )
            (count-once-per-objects preference1:dodgeball)
          )
          1
        )
      )
    )
    (or
      (> (count-once preference2:triangle_block) (+ (count preference2:yellow:dodgeball) 4 40 )
      )
      (>= (count preference1:beachball:blue_pyramid_block) 5 )
    )
  )
)
(:scoring
  (count preference1:dodgeball)
)
)(define (game game-id-992) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?m - hexagonal_bin ?y - dodgeball)
      (game-conserved
        (not
          (adjacent ?y ?y)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?a - hexagonal_bin)
        (then
          (hold (and (not (agent_holds agent) ) (and (object_orientation ?a ?a) (agent_holds ?a) ) ) )
          (hold (adjacent ?a ?a) )
          (once (in_motion ?a) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* (/ (count-once-per-objects preference1:cube_block) (- (+ (* (count preference1:red) (< (* 10 (or 4 (= (* (count-once-per-objects preference1:basketball) (count-increasing-measure preference1:orange) )
                        (+ (* (* 5 (count-once-per-objects preference1:wall:hexagonal_bin) (count preference1:dodgeball) )
                            (* (* (+ 2 (count-once-per-objects preference1:hexagonal_bin) (count-once preference1:dodgeball) (count-once preference1:green) 1 (* (* 7 )
                                    3
                                  )
                                )
                                (* (+ (* 1 5 )
                                    180
                                  )
                                  2
                                )
                              )
                              (* (not (* (count preference1:blue_dodgeball) (count preference1:yellow) )
                                )
                                (count-once-per-external-objects preference1:dodgeball)
                              )
                            )
                          )
                          (count preference1:dodgeball:dodgeball)
                        )
                      )
                    )
                  )
                  (* (total-score) (count preference1:pink_dodgeball) )
                )
                (+ (* (count preference1:beachball:yellow) (count-once-per-objects preference1:pink_dodgeball) )
                  2
                  2
                )
                (count preference1:top_drawer)
                (count-total preference1)
                (count preference1:blue_dodgeball)
              )
              (count-once preference1)
              15
              (count-total preference1:orange:dodgeball)
            )
          )
        )
        (count-once-per-objects preference1:orange)
      )
      3
    )
    (or
      (>= (count-once preference1:red) 3 )
    )
    (not
      (>= 3 (external-forall-maximize 3 ) )
    )
  )
)
(:scoring
  4
)
)(define (game game-id-993) (:domain medium-objects-room-v1)
(:setup
  (exists (?u - doggie_bed ?p - dodgeball)
    (forall (?h - dodgeball ?l - hexagonal_bin)
      (exists (?b - dodgeball)
        (and
          (and
            (forall (?x - hexagonal_bin)
              (game-optional
                (not
                  (toggled_on ?l)
                )
              )
            )
            (exists (?i - (either dodgeball dodgeball main_light_switch) ?o ?c - hexagonal_bin ?m ?g ?j - dodgeball)
              (exists (?y - hexagonal_bin ?r - flat_block)
                (exists (?k - ball)
                  (game-conserved
                    (on ?p ?p)
                  )
                )
              )
            )
          )
          (and
            (game-conserved
              (adjacent ?b bed)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?c - teddy_bear ?x - wall)
        (then
          (once (not (in_motion ?x) ) )
          (once (on rug agent) )
          (once (in ?x room_center) )
        )
      )
    )
    (forall (?q ?d - wall)
      (and
        (preference preference2
          (exists (?a - (either bridge_block cube_block) ?f - cube_block ?n - ball)
            (then
              (hold-while (open ?d) (in ?d desk) (not (adjacent ?d agent) ) (equal_z_position ?q ?d) )
              (once (in_motion ?q) )
              (once (in_motion ?d) )
              (forall-sequence (?f - dodgeball)
                (then
                  (once-measure (and (and (in agent ?q) (and (in ?d ?n) (and (in_motion ?q) (in ?q ?f) (agent_holds ?n) (not (not (and (not (and (not (not (agent_crouches ) ) ) (in_motion ?n) ) ) (not (not (agent_holds ?n) ) ) ) ) ) ) ) ) (same_object ?d ?d) ) (distance ?n ?f) )
                  (hold (equal_z_position ?f ?f) )
                  (once (and (adjacent ?d ?f) (in_motion ?q) ) )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (= 5 (count preference1:basketball:basketball:golfball) )
)
(:scoring
  (count-once preference2:blue_dodgeball)
)
)(define (game game-id-994) (:domain many-objects-room-v1)
(:setup
  (exists (?b - (either wall dodgeball))
    (forall (?w - shelf)
      (exists (?x - (either dodgeball credit_card alarm_clock))
        (and
          (game-optional
            (not
              (not
                (on ?b ?w)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?v - hexagonal_bin ?e - (either laptop hexagonal_bin bridge_block))
        (then
          (hold (and (exists (?h - hexagonal_bin) (object_orientation ?h ?e) ) (on ?e ?e) ) )
          (once (agent_holds desk) )
          (once (same_type ?e ?e) )
        )
      )
    )
    (preference preference2
      (exists (?u - green_triangular_ramp)
        (then
          (once (= 1 7) )
          (hold (exists (?y - wall) (and (on ?y ?y) (and (in ?y ?y) (in_motion agent) ) (not (and (agent_holds agent) (or (touch rug rug) (on ?u ?y) (in_motion bridge_block) (and (agent_holds ?y) (agent_holds ?y) (and (on ?y ?y) ) (and (agent_holds ?u) (in_motion ?u) ) ) ) ) ) ) ) )
          (once (not (broken ?u) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (count-once-per-objects preference1:basketball:blue_dodgeball) 60 )
  )
)
(:scoring
  (count-once preference2:pink)
)
)(define (game game-id-995) (:domain medium-objects-room-v1)
(:setup
  (forall (?j - game_object)
    (and
      (and
        (exists (?c - (either dodgeball wall))
          (exists (?x - game_object)
            (forall (?a - (either ball pen flat_block) ?f - dodgeball ?f - triangular_ramp)
              (forall (?q - wall ?a - hexagonal_bin)
                (and
                  (and
                    (game-optional
                      (not
                        (opposite ?j ?c)
                      )
                    )
                    (game-conserved
                      (and
                        (agent_holds pink_dodgeball)
                        (not
                          (agent_holds ?x)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?v - game_object)
        (then
          (hold (not (in_motion ?v) ) )
          (once (in_motion ?v) )
          (once (and (and (in bed ?v) (and (and (and (not (agent_holds ?v) ) (in desk ?v) (not (and (faces ?v ?v) (and (not (in ?v ?v) ) (and (on ?v floor) (and (agent_holds ?v) (in_motion agent) ) ) ) (on east_sliding_door ?v) (in_motion ?v) (in_motion ?v) ) ) (in_motion ?v) (adjacent ?v pink_dodgeball) (on desk ?v) (and (in desk pink_dodgeball) (not (exists (?q - color) (in ?q ?v) ) ) ) (above ?v ?v) (same_object bed ?v) (agent_holds ?v) ) (< 1 0.5) ) (not (< 1 1) ) ) ) (adjacent ?v ?v) ) )
        )
      )
    )
    (forall (?b - curved_wooden_ramp ?l - dodgeball)
      (and
        (preference preference2
          (exists (?q - hexagonal_bin ?g - hexagonal_bin)
            (then
              (hold (on ?l rug) )
              (hold (not (not (or (< 0 9) (and (and (not (touch ?g ?l) ) (and (in_motion ?l) (not (same_color pink_dodgeball ?g) ) (in ?l ?g) ) ) (toggled_on ?l) ) ) ) ) )
              (once (and (in ?g floor) (agent_holds ?g) ) )
            )
          )
        )
      )
    )
    (forall (?q - curved_wooden_ramp)
      (and
        (preference preference3
          (exists (?h - teddy_bear ?i - dodgeball)
            (then
              (hold (not (not (or (< 1 (distance ?i ?i)) (and (exists (?x - cube_block) (in ?x ?i) ) (adjacent ?q ?q) ) ) ) ) )
              (hold (not (and (in_motion ?q) (in_motion ?q) ) ) )
              (once (same_type ?i ?q) )
            )
          )
        )
      )
    )
    (preference preference4
      (exists (?n - (either chair yellow_cube_block))
        (then
          (hold (in_motion ?n) )
          (hold-while (touch ?n ?n) (< 0 6) )
          (once (in_motion rug) )
        )
      )
    )
    (preference preference5
      (exists (?a ?h - pillow)
        (then
          (once (not (in_motion ?h) ) )
        )
      )
    )
  )
)
(:terminal
  (< (* 2 (* (- (count-once preference5:purple) )
        4
        (* 3 (count-once-per-objects preference5:pink_dodgeball) )
      )
    )
    (total-time)
  )
)
(:scoring
  (* (count-total preference5:beachball) (* 10 (* (external-forall-minimize 5 ) (count-once-per-objects preference3:basketball) )
    )
  )
)
)(define (game game-id-996) (:domain medium-objects-room-v1)
(:setup
  (exists (?n - blinds)
    (game-optional
      (game_over )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?a - chair ?h - doggie_bed ?i - (either pencil cd) ?c - hexagonal_bin)
        (then
          (once (same_color desk ?c) )
          (once (on ?c ?c) )
          (hold (in_motion ?c) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference1:dodgeball) (* 2 (* (* (* (* (count-measure preference1:blue_cube_block) (+ (count preference1:pink_dodgeball:yellow) (* (count-once-per-objects preference1:dodgeball:side_table) 100 )
              )
              10
            )
            (= (count-once-per-external-objects preference1:brown) (* (not 2 ) (count-once-per-objects preference1:red) (* (count preference1:blue_pyramid_block) (* (* (* (count-once-per-objects preference1:pink) 0.7 )
                      (or
                        (* (* 6 3 )
                          10
                        )
                        (* (<= (* 6 (* 5 3 )
                            )
                            (* (count-shortest preference1:green) (+ 30 (* (count preference1:dodgeball:triangle_block:yellow_cube_block) (count-once-per-objects preference1:beachball:yellow) )
                              )
                            )
                          )
                          3
                        )
                      )
                    )
                    (* (+ (count-once-per-objects preference1:blue_dodgeball) (count-once-per-objects preference1:yellow) )
                      (count-once preference1:dodgeball)
                    )
                  )
                )
              )
            )
            (external-forall-maximize
              9
            )
            (count preference1:red)
            3
          )
          (+ (count-once-per-objects preference1:dodgeball) (count-once preference1:bed) )
        )
        (count-shortest preference1:orange:pyramid_block)
        (count preference1:pink)
      )
      2
      (count preference1:block)
    )
  )
)
(:scoring
  (= 1 3 )
)
)(define (game game-id-997) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?y - shelf ?v - hexagonal_bin)
      (and
        (game-conserved
          (and
            (in ?v agent)
            (in_motion ?v)
          )
        )
        (and
          (forall (?a - curved_wooden_ramp)
            (and
              (game-optional
                (in_motion agent)
              )
            )
          )
          (game-optional
            (and
              (exists (?u - (either dodgeball dodgeball) ?a - color)
                (not
                  (and
                    (not
                      (not
                        (game_start )
                      )
                    )
                    (and
                      (game_start )
                      (not
                        (not
                          (in ?a ?a)
                        )
                      )
                    )
                  )
                )
              )
              (in_motion ?v)
            )
          )
        )
      )
    )
    (and
      (exists (?x - dodgeball)
        (game-conserved
          (and
            (not
              (not
                (in_motion ?x)
              )
            )
            (exists (?y - (either doggie_bed pink))
              (agent_holds ?x)
            )
            (in_motion ?x)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?y - cylindrical_block)
      (and
        (preference preference1
          (exists (?i - hexagonal_bin)
            (then
              (once (not (< (building_size ?y) (distance ?i ?i)) ) )
              (hold (not (in_motion rug) ) )
              (hold-while (game_start ) (in ?y ?i) )
            )
          )
        )
      )
    )
    (forall (?x - dodgeball ?i - (either hexagonal_bin dodgeball) ?j - drawer)
      (and
        (preference preference2
          (then
            (once (same_type ?j bed) )
            (once (not (not (agent_holds bed) ) ) )
            (once (agent_holds ?j) )
          )
        )
        (preference preference3
          (exists (?s - hexagonal_bin)
            (at-end
              (and
                (in_motion ?j)
                (and
                  (agent_holds ?s)
                  (agent_holds ?s)
                )
              )
            )
          )
        )
      )
    )
    (forall (?w - game_object)
      (and
        (preference preference4
          (exists (?m - game_object ?r ?k - hexagonal_bin ?z - doggie_bed ?j - (either credit_card hexagonal_bin))
            (then
              (once (adjacent ?w ?w) )
              (once (not (= 4 2) ) )
              (hold-while (forall (?t - sliding_door ?g - dodgeball) (= 8 2) ) (not (in_motion ?j) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (count preference2:pink_dodgeball) )
)
(:scoring
  (+ 1 (* (+ (and (* (> (+ 5 10 )
              (count-overlapping preference2:blue_cube_block:hexagonal_bin:dodgeball)
            )
            (>= 10 10 )
          )
        )
        (- (count-once-per-objects preference4:blue_dodgeball) )
      )
      5
    )
  )
)
)(define (game game-id-998) (:domain few-objects-room-v1)
(:setup
  (forall (?g - hexagonal_bin ?x - ball ?a - (either dodgeball chair floor))
    (forall (?x - hexagonal_bin)
      (forall (?o - dodgeball ?o - (either cd dodgeball))
        (exists (?k - block)
          (game-optional
            (agent_holds ?k)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?e - building)
        (then
          (once (on block agent) )
          (hold (not (on ?e ?e) ) )
          (hold (not (and (and (game_start ) (not (in_motion ?e) ) (on ?e ?e) (and (agent_holds ?e) (not (agent_holds bed) ) ) (agent_holds ?e) (same_type ?e ?e) (above ?e ?e) (agent_holds ?e) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (external-forall-maximize (* 40 5 )
    )
    (count-once-per-objects preference1:hexagonal_bin)
  )
)
(:scoring
  (total-score)
)
)(define (game game-id-999) (:domain few-objects-room-v1)
(:setup
  (forall (?y - hexagonal_bin ?g - hexagonal_bin)
    (exists (?r ?v ?q ?d ?k - cube_block ?z - wall)
      (exists (?u - dodgeball)
        (or
          (and
            (game-optional
              (< 0 1)
            )
            (game-conserved
              (and
                (agent_holds bed)
                (not
                  (< (x_position ?z) 8)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?a - yellow_cube_block)
        (then
          (once (and (agent_holds rug) (agent_holds ?a) (not (not (agent_holds ?a) ) ) ) )
          (once (between floor ?a ?a) )
          (once (and (not (on ?a ?a) ) (adjacent ?a ?a) (and (is_setup_object ?a) (agent_holds ?a) ) (game_start ) (game_start ) (and (not (exists (?k - ball) (agent_holds ?k) ) ) ) (in_motion ?a) ) )
        )
      )
    )
    (forall (?c - cube_block)
      (and
        (preference preference2
          (exists (?f - pyramid_block)
            (then
              (hold (in_motion room_center) )
              (forall-sequence (?o - game_object)
                (then
                  (once (adjacent bed ?o) )
                  (hold (not (above ?f ?c) ) )
                  (hold (not (in ?c bed) ) )
                )
              )
              (hold (or (and (agent_holds ?c) ) (touch ?c ?f) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* 1 (+ 5 (count-measure preference2:brown:pink) )
      (* 3 (count-longest preference1:bed) )
    )
    25
  )
)
(:scoring
  (count-once-per-objects preference2)
)
)(define (game game-id-1000) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (not
      (game_over )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?u - curved_wooden_ramp ?b - game_object)
        (then
          (hold-while (in pink_dodgeball ?b) (agent_holds ?b) (toggled_on floor) )
          (once-measure (forall (?u ?j - triangular_ramp) (not (and (in ?u ?b) (not (and (agent_holds ?b) (agent_holds ?u) ) ) (not (in agent ?j) ) ) ) ) (distance ?b ?b) )
          (once (in ?b agent) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-external-objects preference1:pink_dodgeball:hexagonal_bin) 3 )
)
(:scoring
  (count preference1:beachball)
)
)(define (game game-id-1001) (:domain many-objects-room-v1)
(:setup
  (exists (?d ?m - (either yellow_cube_block alarm_clock) ?r ?j - dodgeball)
    (game-optional
      (not
        (not
          (adjacent ?r ?j)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?m - dodgeball)
        (then
          (forall-sequence (?u - game_object)
            (then
              (once (not (and (and (not (in_motion ?u) ) (adjacent ?u ?m) ) (and (not (and (on front bed) (in_motion desk) ) ) (on desk bridge_block) (on ?u ?m) ) ) ) )
              (once (in_motion ?m) )
              (hold (in_motion ?m) )
            )
          )
          (once (in_motion desk) )
          (hold-while (agent_holds north_wall) (not (adjacent_side pink_dodgeball agent ?m pink_dodgeball) ) )
        )
      )
    )
    (preference preference2
      (exists (?p - hexagonal_bin)
        (then
          (hold (and (not (not (and (agent_holds ?p) (and (and (exists (?u - (either cd doggie_bed top_drawer)) (or (agent_holds ?p) (in_motion ?u) ) ) (not (agent_holds ?p) ) ) (agent_holds ?p) (not (on ?p desk) ) (not (and (open ?p) (adjacent ?p ?p) ) ) ) ) ) ) (not (is_setup_object ?p) ) ) )
          (hold (on ?p ?p) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once preference1) 2 )
)
(:scoring
  (* (not (count preference1:yellow) ) 3 (count preference2:book:green) (count-once-per-objects preference1:purple) (* 0.7 (count-once-per-objects preference1:beachball) )
    (count preference2:dodgeball)
  )
)
)(define (game game-id-1002) (:domain few-objects-room-v1)
(:setup
  (forall (?g - game_object)
    (or
      (and
        (and
          (game-optional
            (and
              (same_color ?g agent)
              (agent_holds ?g)
            )
          )
          (forall (?t - dodgeball)
            (game-conserved
              (and
                (not
                  (equal_x_position rug ?g)
                )
                (rug_color_under ?g ?t)
              )
            )
          )
          (forall (?i - golfball ?h ?e - ball ?e - golfball ?f - triangular_ramp)
            (game-conserved
              (agent_holds ?f)
            )
          )
        )
        (game-optional
          (not
            (and
              (same_object ?g ?g)
              (not
                (not
                  (not
                    (and
                      (not
                        (same_color ?g ?g)
                      )
                      (in_motion floor)
                    )
                  )
                )
              )
            )
          )
        )
        (not
          (and
            (exists (?j - chair)
              (exists (?r - hexagonal_bin)
                (and
                  (forall (?x - pyramid_block ?o ?m - ball ?w ?q - doggie_bed)
                    (exists (?b - pillow)
                      (and
                        (game-conserved
                          (and
                            (> (distance ?g ?b) (distance desk ?b))
                            (in_motion ?j)
                          )
                        )
                      )
                    )
                  )
                  (game-conserved
                    (on ?r ?j)
                  )
                  (forall (?n - hexagonal_bin)
                    (or
                      (game-optional
                        (in_motion ?g)
                      )
                      (exists (?o - (either main_light_switch blue_cube_block triangle_block))
                        (exists (?z - beachball)
                          (game-conserved
                            (exists (?f - (either golfball doggie_bed))
                              (in_motion ?r)
                            )
                          )
                        )
                      )
                      (exists (?c - (either hexagonal_bin teddy_bear cylindrical_block) ?a - dodgeball)
                        (exists (?l ?d ?u - building)
                          (game-conserved
                            (on ?l ?n)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
            (and
              (and
                (game-optional
                  (and
                    (on ?g ?g)
                    (on ?g ?g)
                  )
                )
                (exists (?j - block)
                  (or
                    (game-optional
                      (agent_holds ?j)
                    )
                  )
                )
                (forall (?p - doggie_bed)
                  (exists (?l - wall)
                    (game-optional
                      (in_motion ?p)
                    )
                  )
                )
              )
            )
          )
        )
      )
      (game-conserved
        (and
          (not
            (agent_holds ?g)
          )
          (agent_holds bed)
        )
      )
      (forall (?r - hexagonal_bin)
        (game-optional
          (on ?g agent)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?v ?a - chair)
        (at-end
          (opposite front_left_corner ?a)
        )
      )
    )
    (preference preference2
      (exists (?w - cube_block)
        (then
          (once (agent_holds ?w) )
          (hold (adjacent ?w bed) )
          (once (in ?w ?w) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) 6 )
)
(:scoring
  (count preference1:doggie_bed:golfball)
)
)(define (game game-id-1003) (:domain many-objects-room-v1)
(:setup
  (exists (?d - teddy_bear ?k - hexagonal_bin ?f - ball)
    (and
      (exists (?x - (either cylindrical_block dodgeball beachball beachball) ?d - wall ?z - dodgeball ?j - flat_block)
        (and
          (exists (?l - dodgeball)
            (exists (?o - doggie_bed ?o - dodgeball ?r - (either laptop pillow cylindrical_block))
              (exists (?z - cube_block)
                (and
                  (forall (?g - (either dodgeball wall wall))
                    (forall (?i ?k - cube_block)
                      (exists (?q ?c - hexagonal_bin ?h - doggie_bed)
                        (forall (?n - game_object)
                          (exists (?m ?b - ball ?e - red_dodgeball)
                            (game-optional
                              (agent_holds brown)
                            )
                          )
                        )
                      )
                    )
                  )
                  (exists (?g - doggie_bed)
                    (and
                      (game-conserved
                        (> 1 (distance ?g room_center))
                      )
                    )
                  )
                  (game-conserved
                    (in_motion ?f)
                  )
                  (game-optional
                    (agent_holds room_center)
                  )
                  (game-conserved
                    (< (distance ?l ?l) (distance ?j ?l))
                  )
                )
              )
            )
          )
        )
      )
      (forall (?q - cube_block ?h - cube_block)
        (and
          (game-conserved
            (touch ?f ?h)
          )
          (forall (?l - hexagonal_bin)
            (exists (?v - building)
              (game-conserved
                (agent_holds ?v)
              )
            )
          )
        )
      )
      (forall (?g - hexagonal_bin)
        (game-conserved
          (and
            (in_motion ?f)
            (and
              (not
                (agent_holds ?g)
              )
              (in_motion ?g)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?j - (either cube_block golfball))
        (at-end
          (faces ?j bed)
        )
      )
    )
    (forall (?c - shelf)
      (and
        (preference preference2
          (exists (?m - hexagonal_bin ?e - hexagonal_bin)
            (at-end
              (agent_holds ?e)
            )
          )
        )
        (preference preference3
          (exists (?b - (either mug red) ?f - cube_block)
            (then
              (once (not (agent_holds ?c) ) )
              (hold (not (adjacent ?c ?f) ) )
              (once (in ?f ?f) )
            )
          )
        )
      )
    )
    (preference preference4
      (exists (?a - building)
        (at-end
          (agent_holds ?a)
        )
      )
    )
  )
)
(:terminal
  (>= (* (count-once-per-objects preference1:blue_dodgeball) (* (external-forall-minimize 100 ) (* 2 (count-overlapping preference4:blue_dodgeball) )
      )
    )
    (or
      4
      5
    )
  )
)
(:scoring
  (count preference1:beachball)
)
)(define (game game-id-1004) (:domain medium-objects-room-v1)
(:setup
  (forall (?x - dodgeball ?m - curved_wooden_ramp)
    (game-conserved
      (and
        (not
          (agent_holds ?m)
        )
        (in_motion ?m)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?k ?c - (either laptop key_chain))
        (then
          (once (and (agent_holds ?c) (and (rug_color_under ?k bridge_block) (in_motion rug) (above ?c ?k) (and (same_type ?c ?k) (not (same_color ?c ?k) ) (and (in_motion ?c) (not (in ?c ?k) ) ) (on rug ?k) (and (agent_holds ?k) (in_motion ?c) ) ) (agent_holds agent) (agent_holds ?k) ) ) )
          (once (agent_holds agent) )
          (hold (in_motion ?c) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 3 (count-once-per-external-objects preference1:dodgeball:blue) )
    0.7
  )
)
(:scoring
  (* 3 (* (/ (count preference1:golfball:dodgeball) 3 ) 2 )
  )
)
)(define (game game-id-1005) (:domain few-objects-room-v1)
(:setup
  (exists (?k - doggie_bed ?m - building)
    (and
      (game-optional
        (and
          (forall (?z - (either key_chain tall_cylindrical_block alarm_clock hexagonal_bin golfball blue_cube_block block))
            (not
              (not
                (agent_holds ?m)
              )
            )
          )
          (same_color ?m agent)
          (on ?m ?m)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?l - (either cellphone dodgeball) ?x - hexagonal_bin ?q - cube_block)
        (at-end
          (and
            (object_orientation ?q ?q)
            (not
              (not
                (not
                  (agent_crouches )
                )
              )
            )
            (not
              (and
                (in_motion ?q)
                (equal_x_position ?q ?q)
              )
            )
            (= (distance agent ?q) 1)
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (< 5 (count preference1:beachball) )
    (or
      (= (* (count preference1:golfball:green) (>= (* (count-once-per-external-objects preference1:golfball) (* (count-once preference1:green) 5 (count-once-per-objects preference1:dodgeball) )
            )
            (* 10 (count-shortest preference1:beachball) (count-once-per-objects preference1:dodgeball) )
          )
        )
        (* (* (+ (count preference1:pink) 3 )
            (count preference1:dodgeball)
          )
          (count preference1:golfball)
          10
          (total-time)
          (count-once preference1:pink:yellow)
          10
          3
          (count preference1:dodgeball)
          (* (= 1 (* 5 2 (count preference1:purple) )
            )
            (+ (count preference1:side_table) (count preference1:dodgeball) )
            (+ 6 )
            3
            (* 10 4 )
            (count-shortest preference1:red)
          )
        )
      )
      (> (count-once-per-external-objects preference1:beachball:dodgeball) (* (* (* (count-once preference1:basketball) 8 )
            (total-time)
          )
          (count preference1:green)
          (count-longest preference1:basketball:alarm_clock)
          (count preference1:basketball:yellow)
          3
          (count preference1:dodgeball)
        )
      )
    )
    (or
      (= (- (count-once-per-external-objects preference1:blue_dodgeball) )
        (external-forall-maximize
          (* 3 (- (count preference1:pink_dodgeball) )
          )
        )
      )
      (> (- (count-once-per-external-objects preference1:basketball) )
        4
      )
    )
  )
)
(:scoring
  (total-score)
)
)(define (game game-id-1006) (:domain medium-objects-room-v1)
(:setup
  (forall (?r - drawer)
    (exists (?s - chair ?k - hexagonal_bin ?m - dodgeball)
      (exists (?p - (either golfball alarm_clock))
        (game-conserved
          (same_object ?r ?p)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?i - game_object)
      (and
        (preference preference1
          (exists (?z - drawer)
            (then
              (once (in_motion floor) )
              (once (exists (?g - hexagonal_bin ?h - building) (not (in_motion agent) ) ) )
            )
          )
        )
        (preference preference2
          (exists (?m - dodgeball)
            (then
              (hold (rug_color_under ?m ?i) )
              (once (agent_holds ?i) )
              (hold (and (in_motion ?m) (is_setup_object ?i) ) )
            )
          )
        )
        (preference preference3
          (exists (?w - dodgeball ?s - (either tall_cylindrical_block tall_cylindrical_block cylindrical_block))
            (at-end
              (and
                (agent_holds pink)
                (in_motion ?i)
              )
            )
          )
        )
      )
    )
    (preference preference4
      (exists (?k - dodgeball)
        (then
          (hold (not (<= 7 1) ) )
          (once (on ?k ?k) )
          (once (on ?k ?k) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count preference2:pink_dodgeball) (count preference2:wall) )
    (>= (count-once-per-external-objects preference2:dodgeball:yellow) (count-once preference4:dodgeball) )
    (or
      (>= 10 (count preference3:golfball) )
      (= 3 5 )
    )
  )
)
(:scoring
  5
)
)(define (game game-id-1007) (:domain many-objects-room-v1)
(:setup
  (exists (?e - cube_block ?z - hexagonal_bin)
    (and
      (not
        (game-optional
          (and
            (touch ?z ?z)
            (adjacent ?z agent)
          )
        )
      )
      (exists (?f - (either dodgeball doggie_bed))
        (and
          (and
            (forall (?r - dodgeball)
              (exists (?p ?s - cube_block)
                (exists (?h - color)
                  (forall (?n - (either cd mug book laptop block bridge_block cylindrical_block) ?v - game_object ?w - (either teddy_bear wall ball))
                    (and
                      (forall (?k - building ?i - ball)
                        (exists (?y - hexagonal_bin ?c - golfball)
                          (game-conserved
                            (not
                              (and
                                (same_type ?c ?i)
                                (in ?r ?r)
                              )
                            )
                          )
                        )
                      )
                      (forall (?c - hexagonal_bin)
                        (and
                          (game-optional
                            (in_motion ?h)
                          )
                        )
                      )
                      (and
                        (exists (?u ?m - pyramid_block)
                          (or
                            (and
                              (game-conserved
                                (in room_center bed)
                              )
                              (and
                                (game-conserved
                                  (exists (?q - ball ?y - building)
                                    (agent_holds ?p)
                                  )
                                )
                              )
                              (exists (?d - hexagonal_bin ?y ?l ?q - block)
                                (and
                                  (not
                                    (game-conserved
                                      (and
                                        (not
                                          (not
                                            (touch top_shelf ?u)
                                          )
                                        )
                                        (not
                                          (agent_holds ?f)
                                        )
                                        (in_motion ?z)
                                      )
                                    )
                                  )
                                )
                              )
                            )
                            (exists (?b - wall)
                              (exists (?x - hexagonal_bin ?i - dodgeball ?q - block)
                                (game-conserved
                                  (touch ?b ?z)
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
            (game-conserved
              (and
                (agent_holds desk)
                (= 8)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c - block)
      (and
        (preference preference1
          (exists (?g - game_object)
            (then
              (hold (and (and (agent_holds ?g) (in_motion ?g) ) (same_color ?c ?c) ) )
              (once (and (and (touch ?g ?c) (touch bed ?g) ) (and (or (>= 1 (distance floor ?g)) (same_type agent ?c) (and (and (not (on ?c ?c) ) (same_type ?g ?c) ) (in ?g ?c) ) ) (agent_holds ?c) ) ) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?u - doggie_bed)
        (then
          (hold (above ?u ?u) )
          (once (on ?u ?u) )
          (hold (adjacent_side ?u ?u bed ?u) )
        )
      )
    )
    (forall (?k - beachball)
      (and
        (preference preference3
          (then
            (hold (and (not (not (agent_holds desk) ) ) (agent_holds ?k) ) )
            (once (in_motion ?k) )
            (hold (in_motion ?k) )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (<= (count-once-per-objects preference2:blue) 40 )
  )
)
(:scoring
  (count preference2:dodgeball:yellow:golfball)
)
)(define (game game-id-1008) (:domain medium-objects-room-v1)
(:setup
  (forall (?b - (either tall_cylindrical_block flat_block) ?s - (either pyramid_block triangle_block) ?y - dodgeball)
    (forall (?q ?o - curved_wooden_ramp)
      (and
        (and
          (and
            (and
              (game-conserved
                (and
                  (agent_holds ?o)
                  (not
                    (agent_holds room_center)
                  )
                )
              )
              (and
                (and
                  (forall (?u - chair)
                    (exists (?v - hexagonal_bin)
                      (exists (?l - wall)
                        (and
                          (forall (?h - color)
                            (and
                              (game-optional
                                (and
                                  (forall (?e ?p ?x ?n - doggie_bed ?k - hexagonal_bin)
                                    (not
                                      (in_motion desk)
                                    )
                                  )
                                  (rug_color_under ?o agent)
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
                (exists (?l - blue_cube_block)
                  (game-optional
                    (agent_holds ?o)
                  )
                )
              )
              (game-conserved
                (not
                  (touch ?o ?o)
                )
              )
            )
          )
          (and
            (forall (?u - building)
              (game-conserved
                (agent_holds ?u)
              )
            )
            (forall (?z - (either cd) ?k - yellow_pyramid_block)
              (game-optional
                (on ?q ?o)
              )
            )
          )
          (game-optional
            (agent_holds ?q)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?r - color)
        (then
          (once (agent_holds ?r) )
          (hold (same_object ?r ?r) )
          (once (not (and (< 1 0.5) (and (in ?r ?r) (exists (?m - (either desktop dodgeball)) (in ?m pink_dodgeball) ) ) (forall (?t - dodgeball) (in rug bed) ) ) ) )
        )
      )
    )
    (preference preference2
      (exists (?o - cube_block ?z - (either golfball dodgeball))
        (then
          (once (on ?z ?z) )
          (once (not (agent_holds ?z) ) )
          (once (and (broken ?z) (on ?z ?z) (and (agent_holds ?z) (not (on ?z ?z) ) ) ) )
        )
      )
    )
    (preference preference3
      (exists (?l - pyramid_block ?k - drawer)
        (then
          (once (exists (?f - curved_wooden_ramp) (faces upright ?f) ) )
          (once (adjacent ?k ?k) )
          (hold-while (and (same_object ?k ?k) (agent_holds ?k) ) (agent_holds ?k) )
        )
      )
    )
  )
)
(:terminal
  (or
    (< (total-time) (* 9 4 (external-forall-maximize (count preference1:wall) ) (* (+ 5 (+ (count preference3) 2 )
          )
          (-
            (total-score)
            (not
              9
            )
          )
        )
        (count preference3:golfball)
        (external-forall-maximize
          (+ (count preference2:orange) (count preference2:blue_dodgeball) )
        )
      )
    )
    (<= (* (* (count-once-per-objects preference1:dodgeball) (- (count-once-per-objects preference3:yellow) )
        )
        (count-overlapping preference2:alarm_clock)
      )
      (count-once-per-external-objects preference3:pink_dodgeball)
    )
    (>= (- (* (* (* (count preference1:yellow:alarm_clock:dodgeball) )
          )
          (count-same-positions preference2:golfball)
        )
      )
      (count-longest preference3:red)
    )
  )
)
(:scoring
  2
)
)(define (game game-id-1009) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?f - hexagonal_bin)
      (game-conserved
        (in_motion ?f)
      )
    )
  )
)
(:constraints
  (and
    (forall (?k - dodgeball)
      (and
        (preference preference1
          (exists (?t - doggie_bed)
            (then
              (once (and (>= (distance ?t ?t) 1) (= 7 1) ) )
              (hold (and (in ?k ?t) (and (in right agent) (in_motion ?t) ) (agent_holds ?t) ) )
              (hold (agent_crouches ) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?s - (either cylindrical_block basketball))
        (then
          (hold-while (and (and (and (object_orientation ?s agent) (on agent ?s) ) (in_motion ?s) ) (adjacent ?s ?s) ) (and (agent_holds ?s) (on ?s door) (not (> (distance ?s ?s) 1) ) (not (and (is_setup_object ?s) (on ?s ?s) (same_type ?s ?s) (not (in_motion ?s) ) (object_orientation ?s ?s) (in ?s ?s) (agent_holds ?s) ) ) ) )
          (hold (exists (?o ?j ?z ?e - hexagonal_bin ?u - dodgeball ?f ?z ?h ?k ?x - dodgeball) (adjacent green_golfball ?f) ) )
          (once (in_motion ?s) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 5 (external-forall-minimize (* (count-once-per-objects preference1:purple) (count-once-per-objects preference1:dodgeball:beachball) )
      )
    )
    (>= (count-once-per-external-objects preference2:cube_block) (- (count-once preference1:golfball:basketball) )
    )
  )
)
(:scoring
  (count preference1:beachball)
)
)(define (game game-id-1010) (:domain many-objects-room-v1)
(:setup
  (exists (?r - ball)
    (exists (?i - wall)
      (forall (?b - cube_block)
        (forall (?p ?a - cube_block)
          (and
            (game-conserved
              (on ?p ?p)
            )
            (game-optional
              (in_motion ?p)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?m - dodgeball)
      (and
        (preference preference1
          (then
            (once (in_motion ?m) )
            (hold (on agent front) )
            (once (touch ?m ?m) )
          )
        )
      )
    )
  )
)
(:terminal
  (> (count-once preference1:golfball) (* 5 4 (+ 1 1 )
    )
  )
)
(:scoring
  (count-once-per-objects preference1:dodgeball:dodgeball)
)
)(define (game game-id-1011) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (agent_holds bed)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?d - hexagonal_bin ?q - teddy_bear)
        (then
          (once (not (= 1 1) ) )
          (hold (in_motion ?q) )
          (once (and (agent_holds ?q) (and (in_motion ?q) (not (= (distance ?q ?q) (distance ?q ?q)) ) (on ?q ?q) ) ) )
        )
      )
    )
    (forall (?e - golfball)
      (and
        (preference preference2
          (exists (?f - hexagonal_bin)
            (then
              (hold (in_motion ?e) )
              (once-measure (on floor ?f) (distance ?f ?e) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (and
        (>= (count-overlapping preference1:brown) (count preference2:blue_dodgeball) )
        (or
          (> (count preference2:red) (total-time) )
          (or
            (> 4 (count preference2:book) )
          )
        )
        (> (* (count preference2) 6 )
          60
        )
      )
      (> 2 10 )
      (or
        (or
          (not
            (not
              (>= (count preference2:pink:yellow) (count preference1:basketball) )
            )
          )
          (> (external-forall-maximize (count-once-per-objects preference1:dodgeball) ) (count preference1:green) )
          (and
            (>= (- (count preference2:hexagonal_bin) )
              6
            )
            (and
              (or
                (>= (+ (* (* (* (external-forall-minimize (>= (count-total preference1:dodgeball) (total-time) )
                          )
                          (+ (count-once-per-objects preference2:dodgeball) (* (count preference1:golfball:beachball) (* (count-once-per-objects preference2:dodgeball) 3 )
                            )
                          )
                          3
                          (count-once-per-objects preference1:beachball)
                          (+ (- 5 )
                            (external-forall-maximize
                              5
                            )
                          )
                          (count-once-per-objects preference2:brown:golfball)
                        )
                        (count-measure preference1:golfball)
                      )
                      (count preference1:dodgeball)
                    )
                    30
                  )
                  3
                )
                (>= (count preference2:basketball:basketball) (count preference2:pink_dodgeball) )
              )
              (>= (count preference2:purple) (count-longest preference2:dodgeball) )
            )
          )
        )
        (and
          (or
            (or
              (<= 2 3 )
              (> (count-once-per-objects preference1:beachball) (- (count-once-per-objects preference2:book) )
              )
            )
            (or
              (>= (count preference1:beachball) (* 3 3 )
              )
              (>= (count-total preference2:dodgeball:dodgeball) (count preference1:white:pink_dodgeball:beachball) )
              (>= (and (count-shortest preference1:dodgeball:purple) ) (count preference2:basketball) )
            )
          )
          (>= 5 (count-once-per-objects preference1:white) )
          (or
            (>= 10 1 )
            (<= (external-forall-maximize (count preference1:blue_dodgeball) ) (external-forall-maximize (+ (count-unique-positions preference2:red:basketball) (- 10 )
                )
              )
            )
          )
        )
      )
    )
    (not
      (>= 2 (count-once preference1:tan) )
    )
    (>= 3 (+ (count-longest preference1:dodgeball:pink) (external-forall-maximize (count-once-per-external-objects preference2:orange) ) )
    )
  )
)
(:scoring
  (* (count-once-per-external-objects preference1:tall_cylindrical_block:dodgeball) 7 )
)
)(define (game game-id-1012) (:domain few-objects-room-v1)
(:setup
  (exists (?l - beachball)
    (and
      (game-optional
        (adjacent_side ?l ?l ?l blue)
      )
    )
  )
)
(:constraints
  (and
    (forall (?k - doggie_bed ?c - color)
      (and
        (preference preference1
          (exists (?u - cube_block ?m - ball ?z - color)
            (then
              (hold (and (on ?z ?z) (not (on back rug) ) ) )
              (once (and (not (in_motion ?z) ) (exists (?l - flat_block ?r - block) (in_motion agent) ) ) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?r - curved_wooden_ramp)
        (then
          (once (and (in_motion rug) (and (and (on ?r ?r) (and (not (same_type ?r ?r) ) (on ?r ?r) ) ) (not (on ?r ?r) ) (and (not (not (on ?r ?r) ) ) (not (agent_holds ?r) ) ) (adjacent ?r ?r) ) ) )
          (once (> 1 1) )
          (once (adjacent ?r ?r) )
        )
      )
    )
    (preference preference3
      (exists (?j - desk_shelf)
        (then
          (hold (not (not (not (not (and (or (above ?j main_light_switch) (in_motion ?j) (in ?j ?j) (and (and (agent_holds ?j) (touch ?j ?j) ) (in_motion ?j) ) ) (is_setup_object ?j) ) ) ) ) ) )
          (hold (above bed ?j) )
          (once (and (on ?j ?j) (on ?j bridge_block) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) 7 )
)
(:scoring
  (count preference1:dodgeball)
)
)(define (game game-id-1013) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?p - dodgeball)
      (and
        (and
          (game-conserved
            (in_motion ?p)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?k ?f - hexagonal_bin)
        (then
          (once (not (in bed desk) ) )
          (once (adjacent ?k desk) )
          (hold (and (in ?f back) (and (or (and (in_motion door) (and (game_start ) (and (and (is_setup_object ?k) (not (agent_holds bed) ) ) (in_motion ?k) (< 5 8) ) ) ) (on bed ?f) ) (not (not (game_start ) ) ) (opposite green ?f) ) (not (agent_holds ?k) ) ) )
        )
      )
    )
    (preference preference2
      (exists (?f - (either dodgeball bridge_block) ?n ?x ?j ?b ?c ?p ?i ?m ?t ?u - teddy_bear)
        (then
          (once (agent_crouches ) )
          (hold-while (> (distance ?j ?u) (distance ?j ?i)) (game_over ) (between pink_dodgeball ?b ?p) (and (not (not (and (not (in_motion agent) ) (touch ?x ?x) (in_motion ?x) ) ) ) (exists (?d ?a ?o - wall) (and (touch ?d ?c) (and (in ?n ?o) (>= (distance bed ?o) (distance ?o ?m)) ) ) ) ) )
          (once (in_motion ?n) )
          (hold-while (and (agent_holds desk) (touch ?i ?n) ) (adjacent_side ?j ?p ?m) )
        )
      )
    )
    (preference preference3
      (exists (?p - (either book dodgeball) ?u - hexagonal_bin)
        (then
          (once (and (agent_holds ?u) (not (faces ?u ?u) ) ) )
          (hold-while (and (and (on ?u ?u) (faces ?u rug) ) (on ?u ?u) ) (agent_holds ?u) (agent_holds ?u) )
          (once (not (agent_holds ?u) ) )
        )
      )
    )
    (preference preference4
      (exists (?w - shelf ?b - block)
        (then
          (hold (exists (?p - block ?f - dodgeball ?j - game_object) (and (touch ?j ?b) (not (same_color ?j ?b) ) (and (touch ?j ?b) (and (agent_holds ?j) (> (distance ?j ?b) 8) ) ) (agent_holds ?j) ) ) )
          (hold (on desk ?b) )
          (once (and (agent_holds ?b) (not (< 8 (distance ?b ?b)) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* (count preference3:pink) (count preference3:pink) )
      10
    )
    (>= 10 (* (count preference1:dodgeball:beachball) (count preference2:dodgeball:dodgeball) )
    )
    (>= (* (+ 5 10 2 )
        (count preference3:dodgeball)
      )
      (count-once-per-objects preference3:alarm_clock)
    )
  )
)
(:scoring
  (* 5 3 )
)
)(define (game game-id-1014) (:domain medium-objects-room-v1)
(:setup
  (forall (?y - chair ?s ?u - teddy_bear)
    (and
      (game-conserved
        (not
          (not
            (in agent ?s)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?d ?y - hexagonal_bin ?o - hexagonal_bin ?t - curved_wooden_ramp)
      (and
        (preference preference1
          (exists (?a - cylindrical_block)
            (then
              (hold (agent_holds bridge_block) )
              (once (and (in ?t ?t) (adjacent ?t ?a) ) )
              (once (agent_holds desk) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?e - cube_block)
        (then
          (once-measure (not (on agent ?e) ) (distance ?e ?e) )
          (hold (in ?e rug) )
          (hold (in_motion ?e) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-unique-positions preference1:dodgeball) 10 )
)
(:scoring
  (count-once-per-objects preference1:orange)
)
)(define (game game-id-1015) (:domain many-objects-room-v1)
(:setup
  (exists (?z - hexagonal_bin)
    (and
      (and
        (and
          (exists (?p - (either doggie_bed golfball))
            (exists (?k - rug)
              (game-conserved
                (in_motion rug)
              )
            )
          )
        )
      )
      (and
        (forall (?j - color)
          (or
            (game-conserved
              (in_motion pink)
            )
            (game-conserved
              (exists (?m - hexagonal_bin ?n - dodgeball ?s - cube_block)
                (in_motion ?s)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?b - (either pink desktop))
        (then
          (hold (and (not (not (agent_holds bed) ) ) (same_object ?b ?b) ) )
          (hold (broken ?b) )
          (hold (adjacent ?b ?b) )
        )
      )
    )
    (preference preference2
      (exists (?n - (either dodgeball cube_block))
        (then
          (once (in ?n ?n) )
          (hold (not (adjacent agent ?n) ) )
          (hold (not (above ?n ?n) ) )
        )
      )
    )
    (preference preference3
      (exists (?s - wall ?m - ball)
        (then
          (once (equal_x_position ?m door) )
          (once (agent_holds room_center) )
          (once (on ?m ?m) )
        )
      )
    )
    (preference preference4
      (exists (?b - ball ?d - ball)
        (then
          (hold (in ?d ?d) )
          (hold-to-end (in_motion desk) )
          (once (and (agent_holds ?d) (agent_holds ?d) (agent_holds ?d) (not (touch desk ?d) ) ) )
        )
      )
    )
    (forall (?f - block ?g - hexagonal_bin)
      (and
        (preference preference5
          (then
            (hold (touch ?g ?g) )
            (hold-while (on ?g ?g) (not (in_motion ?g) ) (agent_holds brown) (same_color ?g room_center) )
            (once (not (on ?g ?g) ) )
          )
        )
        (preference preference6
          (exists (?j - cube_block)
            (at-end
              (not
                (on agent bed)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (= (* 2 (count preference6:top_drawer:pink_dodgeball) )
    )
    9
  )
)
(:scoring
  (count preference6:brown)
)
)(define (game game-id-1016) (:domain few-objects-room-v1)
(:setup
  (forall (?s - cube_block ?o - chair)
    (and
      (game-conserved
        (and
          (in_motion ?o)
          (<= 7 0)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?i ?a ?b - hexagonal_bin)
      (and
        (preference preference1
          (exists (?g - cube_block)
            (then
              (once (is_setup_object agent) )
              (hold-while (in ?b door) (in ?a ?b) (and (rug_color_under ?i ?g) (agent_holds ?b) ) (not (broken ?b) ) )
              (hold (in agent ?i) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= (* 4 (count preference1:basketball:orange) )
    (+ (* (total-time) (count preference1:basketball) )
      (count-once-per-objects preference1:yellow)
    )
  )
)
(:scoring
  (count-once-per-objects preference1)
)
)(define (game game-id-1017) (:domain medium-objects-room-v1)
(:setup
  (exists (?q - (either pyramid_block pillow teddy_bear))
    (exists (?r - hexagonal_bin)
      (and
        (game-optional
          (and
            (and
              (same_type ?r desk)
              (adjacent ?q room_center)
            )
            (on ?r ?r)
          )
        )
        (and
          (game-optional
            (same_type agent ?r)
          )
        )
        (and
          (exists (?u - shelf)
            (forall (?w - cube_block ?c - hexagonal_bin)
              (forall (?j - (either key_chain flat_block))
                (and
                  (exists (?k - block ?l - (either golfball key_chain) ?w ?i ?e - sliding_door)
                    (not
                      (and
                        (game-conserved
                          (adjacent rug desk)
                        )
                        (and
                          (exists (?t - cylindrical_block)
                            (forall (?b - dodgeball)
                              (exists (?k - hexagonal_bin)
                                (forall (?n - hexagonal_bin)
                                  (exists (?f - cube_block)
                                    (game-optional
                                      (agent_holds ?c)
                                    )
                                  )
                                )
                              )
                            )
                          )
                          (game-conserved
                            (game_over )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
          (and
            (game-conserved
              (in ?q ?r)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?y - hexagonal_bin ?i - dodgeball)
        (then
          (hold (in_motion ?i) )
          (once-measure (in ?i ?i) (distance ?i ?i) )
          (hold-while (adjacent ?i ?i) (equal_x_position ?i ?i) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (total-time) 10 )
    (>= 2 (+ (= 4 (count preference1:alarm_clock) )
        (count preference1:block)
      )
    )
    (or
      (>= (total-time) (total-score) )
      (or
        (not
          (>= (count preference1:pyramid_block:red) (+ 5 5 )
          )
        )
        (>= (count preference1:green:golfball) (count-once-per-external-objects preference1:pink) )
      )
    )
  )
)
(:scoring
  3
)
)(define (game game-id-1018) (:domain few-objects-room-v1)
(:setup
  (forall (?g - ball ?s - golfball)
    (forall (?c - ball)
      (game-conserved
        (game_start )
      )
    )
  )
)
(:constraints
  (and
    (forall (?u - hexagonal_bin)
      (and
        (preference preference1
          (exists (?y - (either triangular_ramp bed golfball))
            (then
              (once (not (agent_holds ?y) ) )
              (once (adjacent ?u ?y) )
              (hold-for 10 (on room_center upside_down) )
            )
          )
        )
        (preference preference2
          (at-end
            (touch ?u ?u)
          )
        )
      )
    )
  )
)
(:terminal
  (< (* (+ (count-once-per-objects preference1:golfball) 4 )
      (* (count-unique-positions preference2) 2 (count preference1:basketball:yellow) (count-once-per-objects preference1:beachball) )
    )
    8
  )
)
(:scoring
  (* 15 4 5 )
)
)(define (game game-id-1019) (:domain few-objects-room-v1)
(:setup
  (exists (?c - ball ?r - hexagonal_bin ?k - hexagonal_bin)
    (game-conserved
      (on ?k ?k)
    )
  )
)
(:constraints
  (and
    (forall (?h - hexagonal_bin ?n - hexagonal_bin)
      (and
        (preference preference1
          (exists (?z - curved_wooden_ramp)
            (then
              (once (not (not (and (not (in agent ?z) ) (in bed right) (and (and (touch ?z ?z) (in ?z ?z) ) (same_type ?n agent) (agent_holds upright) ) (rug_color_under ?n ?n) (agent_holds ?z) (or (not (in_motion brown) ) (agent_holds ?z) ) (in ?z ?z) (not (in_motion ?z) ) ) ) ) )
              (hold (on top_drawer bed) )
              (hold (adjacent ?z agent) )
              (once (forall (?o - (either dodgeball teddy_bear pyramid_block dodgeball) ?v - game_object) (open ?n) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (= (* (count-once-per-objects preference1:doggie_bed) (count preference1:pink) )
    (count preference1:pyramid_block)
  )
)
(:scoring
  (count-once-per-objects preference1:beachball)
)
)(define (game game-id-1020) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (exists (?j - building)
      (in rug ?j)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?w - building ?k - flat_block)
        (then
          (hold (agent_holds ?k) )
          (once (in ?k ?k) )
          (hold (and (not (not (and (in ?k ?k) (agent_holds ?k) ) ) ) (agent_holds ?k) ) )
        )
      )
    )
  )
)
(:terminal
  (< (count preference1:dodgeball:red) (count preference1:green) )
)
(:scoring
  100
)
)(define (game game-id-1021) (:domain medium-objects-room-v1)
(:setup
  (exists (?h - chair ?j - ball)
    (and
      (and
        (exists (?p - teddy_bear)
          (not
            (game-optional
              (and
                (agent_holds ?j)
                (and
                  (in_motion ?j)
                  (on ?j agent)
                  (not
                    (in_motion ?j)
                  )
                  (not
                    (and
                      (agent_holds ?j)
                      (not
                        (agent_holds ?p)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
      (game-conserved
        (and
          (in ?j ?j)
          (on ?j ?j)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?r - game_object)
        (at-end
          (in ?r ?r)
        )
      )
    )
    (preference preference2
      (exists (?j - cube_block ?f - game_object)
        (then
          (hold (agent_holds ?f) )
          (once (or (agent_holds desk) ) )
          (once (on rug agent) )
        )
      )
    )
  )
)
(:terminal
  (= (* (count-once-per-objects preference1:hexagonal_bin) 10 (count preference1:yellow) )
    (= (* (count preference2:yellow) (= (count preference1:white:pink_dodgeball) 10 (count preference1:dodgeball:dodgeball) )
      )
      (count preference1:hexagonal_bin)
    )
  )
)
(:scoring
  (count preference2:red)
)
)(define (game game-id-1022) (:domain few-objects-room-v1)
(:setup
  (forall (?w - hexagonal_bin ?r - drawer)
    (game-conserved
      (on desk ?r)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?s - ball ?m - hexagonal_bin ?b - block ?o - wall)
        (then
          (once-measure (touch upright ?o) (x_position ?o) )
          (once (and (in_motion ?o) (agent_holds ?o) ) )
          (once (and (>= 6 1) (in_motion ?o) ) )
        )
      )
    )
    (preference preference2
      (exists (?d ?w - (either tall_cylindrical_block cube_block))
        (then
          (once (agent_holds ?w) )
          (hold (and (and (in_motion ?d) (< (distance agent ?d) (distance room_center ?d)) ) (opposite ?d ?d) (not (agent_holds ?w) ) ) )
          (hold (not (same_object ?w ?w) ) )
        )
      )
    )
  )
)
(:terminal
  (< (count preference1:golfball) (count preference1:yellow) )
)
(:scoring
  20
)
)(define (game game-id-1023) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?m - game_object)
      (exists (?q - hexagonal_bin)
        (game-conserved
          (equal_z_position ?m ?m)
        )
      )
    )
    (game-optional
      (not
        (agent_holds agent)
      )
    )
  )
)
(:constraints
  (and
    (forall (?x - golfball ?i - (either triangle_block yellow_cube_block))
      (and
        (preference preference1
          (exists (?c - dodgeball)
            (then
              (once (in_motion ?i) )
              (once (agent_holds ?i) )
              (once (in_motion bed) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (= (+ (count preference1:blue_dodgeball) (* 15 10 )
      4
      (total-time)
    )
    (count-once-per-external-objects preference1:dodgeball)
  )
)
(:scoring
  (= (count preference1:beachball:white) (count-once preference1:green) )
)
)