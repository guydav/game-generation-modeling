(define (game game-id-0) (:domain medium-objects-room-v1)
(:setup
  (forall (?o4 - game_object ?c - cube_block)
    (exists (?r - hexagonal_bin ?c - hexagonal_bin)
      (game-optional
        (adjacent rug floor)
      )
    )
  )
)
(:constraints
  (and
    (preference itemInClosedDrawerAtEnd
      (exists (?d - wall)
        (at-end
          (> 5 8)
        )
      )
    )
  )
)
(:terminal
  (> (count itemInClosedDrawerAtEnd:book) 2 )
)
(:scoring
  (count-increasing-measure itemInClosedDrawerAtEnd:blue_dodgeball)
)
)

(define (game game-id-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?w - dodgeball)
      (exists (?db - hexagonal_bin)
        (game-conserved
          (not
            (in_motion ?w)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o4 - (either cube_block hexagonal_bin))
      (and
        (preference agentLeavesDogbedOrNoMoreBalls
          (exists (?l - doggie_bed)
            (then
              (once (and (in ?l ?l) (in_motion ?l) ) )
              (once (in_motion ?o4) )
              (hold (in ?l ?l) )
            )
          )
        )
      )
    )
    (preference thrownBallReachesEnd
      (exists (?o3 ?d - hexagonal_bin)
        (then
          (once (adjacent_side ?d ?d north_wall) )
          (once (in_motion rug) )
          (once (not (broken ?o3) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* (* (* (count-once agentLeavesDogbedOrNoMoreBalls:yellow) (+ (+ 10 (external-forall-maximize (count thrownBallReachesEnd:tall_cylindrical_block) ) (count thrownBallReachesEnd:pink) )
              (count thrownBallReachesEnd:yellow:pink_dodgeball)
            )
            (* (count thrownBallReachesEnd:doggie_bed) (* (count thrownBallReachesEnd:beachball) (count-once-per-objects agentLeavesDogbedOrNoMoreBalls:golfball) )
              (>= (+ (* (* (total-score) (+ (+ (* (- (count agentLeavesDogbedOrNoMoreBalls:hexagonal_bin) )
                            (count-once-per-objects thrownBallReachesEnd:tall_cylindrical_block)
                          )
                          (* 5 (count-total agentLeavesDogbedOrNoMoreBalls:blue_dodgeball) (- (count agentLeavesDogbedOrNoMoreBalls:basketball:tall_cylindrical_block) )
                            8
                          )
                          (* (* (count agentLeavesDogbedOrNoMoreBalls) 2 )
                            2
                          )
                          (count thrownBallReachesEnd:yellow_cube_block)
                          6
                          (count thrownBallReachesEnd:cube_block)
                          10
                        )
                        (count-once-per-objects agentLeavesDogbedOrNoMoreBalls:pink_dodgeball)
                      )
                    )
                    (total-score)
                  )
                  7
                )
                (count agentLeavesDogbedOrNoMoreBalls:white)
              )
              (count-increasing-measure thrownBallReachesEnd:green:red)
            )
            (not
              (- (count-once-per-objects agentLeavesDogbedOrNoMoreBalls:pink_dodgeball) )
            )
            (count agentLeavesDogbedOrNoMoreBalls:hexagonal_bin)
          )
          4
        )
        (* (count-measure agentLeavesDogbedOrNoMoreBalls:basketball) (count-once-per-objects thrownBallReachesEnd:hexagonal_bin) 10 )
        (count thrownBallReachesEnd:yellow)
      )
      (count thrownBallReachesEnd:basketball)
    )
    (not
      (> 1 (count agentLeavesDogbedOrNoMoreBalls:red) )
    )
    (not
      (>= 3 (count agentLeavesDogbedOrNoMoreBalls:yellow_pyramid_block) )
    )
  )
)
(:scoring
  (* (+ (+ 7 (- 10 )
      )
      0.5
    )
    (count agentLeavesDogbedOrNoMoreBalls:rug:blue_dodgeball)
  )
)
)

(define (game game-id-2) (:domain medium-objects-room-v1)
(:setup
  (forall (?b4 - dodgeball)
    (exists (?w1 - (either pyramid_block lamp key_chain))
      (exists (?h ?c6 ?b ?b - (either mug lamp book) ?b3 - (either dodgeball dodgeball))
        (exists (?f - (either laptop laptop pencil laptop dodgeball cube_block cylindrical_block))
          (or
            (game-conserved
              (in_motion ?w1)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballOnBedAtEnd
      (exists (?d - cube_block ?t ?o1 - hexagonal_bin)
        (then
          (hold-for 8 (agent_holds rug) )
        )
      )
    )
    (forall (?c - (either yellow pink yellow_cube_block))
      (and
        (preference bookOnDeskShelf
          (exists (?d2 - hexagonal_bin)
            (then
              (once (< (x_position ?d2) (distance ?d2 ?c)) )
              (once (and (not (game_start ) ) (or (and (same_object ?d2 ?d2) (in_motion ?c) ) (or (and (is_setup_object room_center) (agent_holds ?c) ) ) ) ) )
              (once (and (and (on ?c ?c) (> (distance ?d2 desk) (building_size ?d2)) ) (on ?d2 ?d2) ) )
            )
          )
        )
      )
    )
    (preference throwMovesBeachballWithoutKnockingTeddy
      (exists (?d - hexagonal_bin)
        (then
          (any)
          (once (adjacent ?d ?d) )
          (once (same_color ?d ?d) )
        )
      )
    )
    (forall (?r - (either dodgeball alarm_clock))
      (and
        (preference throwBallToBin
          (exists (?h - dodgeball)
            (then
              (once (and (in_motion room_center) (on ?h ?r) ) )
              (once (on ?r ?h) )
              (once (and (in_motion ?h) (and (and (and (not (broken ?h) ) (agent_holds ?r) (in_motion ?r) ) (and (and (object_orientation pink_dodgeball ?h) (object_orientation ?r agent) (open ?h) ) (agent_holds ?h) ) ) (agent_holds green) ) (and (same_color ?h ?h) (not (adjacent_side ?r ?h ?r) ) ) ) )
            )
          )
        )
      )
    )
    (preference throwBallToDoggieBed
      (exists (?h - dodgeball)
        (then
          (once (agent_holds ?h) )
          (hold (touch ?h ?h) )
        )
      )
    )
  )
)
(:terminal
  (>= (external-forall-minimize (* (count ballOnBedAtEnd:blue_dodgeball:alarm_clock:yellow) (count-once-per-external-objects throwBallToBin:basketball:tall_cylindrical_block) )
    )
    50
  )
)
(:scoring
  2
)
)

(define (game game-id-3) (:domain few-objects-room-v1)
(:setup
  (or
    (game-optional
      (game_over )
    )
  )
)
(:constraints
  (and
    (preference itemInClosedDrawerAtEnd
      (exists (?b4 - curved_wooden_ramp ?b4 - hexagonal_bin ?h - game_object)
        (at-end
          (not
            (on ?h floor)
          )
        )
      )
    )
    (forall (?b6 - shelf)
      (and
        (preference blockInTowerKnockedByDodgeball
          (exists (?o - hexagonal_bin)
            (then
              (hold (and (forall (?c4 - teddy_bear) (not (in ?b6 desk) ) ) (not (adjacent_side ?b6 ?b6 ?b6 ?b6) ) ) )
              (hold (agent_holds ?b6) )
              (once (agent_holds agent) )
            )
          )
        )
        (preference cubeThrownToBin
          (exists (?w2 - hexagonal_bin)
            (then
              (once (in_motion ?w2) )
              (hold (exists (?h - red_dodgeball ?ob - hexagonal_bin ?p1 - (either basketball pen)) (agent_holds ?b6) ) )
              (hold-to-end (< 1 (distance ?b6 green_golfball)) )
            )
          )
        )
      )
    )
    (forall (?f - (either ball key_chain) ?h - hexagonal_bin ?o2 - game_object ?b - (either book basketball) ?d - doggie_bed)
      (and
        (preference blockToBinFromRug
          (exists (?h - game_object ?d - ball)
            (then
              (once (game_start ) )
              (once (and (not (and (in_motion ?d) (agent_holds floor) ) ) (and (in ?d ?d) (in_motion ?d) (or (same_color ?d agent) (not (agent_holds ?d) ) ) (adjacent ?d bed) ) ) )
              (once (and (in ?d ?d) (and (and (in_motion top_drawer) (agent_holds ?d) ) (and (and (exists (?b - teddy_bear ?h ?h ?h - ball) (in_motion west_wall) ) (agent_holds ?d) ) (and (object_orientation ?d ?d) (not (same_color ?d ?d) ) ) ) ) ) )
            )
          )
        )
        (preference otherObjectsOnDeskShelf
          (exists (?l3 ?h ?b1 - hexagonal_bin)
            (at-end
              (touch rug ?b1)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> 3 (* (* (external-forall-maximize (count blockInTowerKnockedByDodgeball:pink_dodgeball) ) (count blockInTowerKnockedByDodgeball:pink) )
      (* (count blockInTowerKnockedByDodgeball:beachball:basketball) 2 )
    )
  )
)
(:scoring
  (* (+ (count cubeThrownToBin:red:dodgeball:orange) (* (count itemInClosedDrawerAtEnd:red) (* 20 (* (* (count-once-per-objects cubeThrownToBin:blue_pyramid_block) 6 )
            (* (count blockInTowerKnockedByDodgeball:red) 16 )
          )
          (count otherObjectsOnDeskShelf:pyramid_block:pink)
        )
      )
    )
  )
)
)

(define (game game-id-4) (:domain medium-objects-room-v1)
(:setup
  (forall (?t - desk_shelf)
    (forall (?g - doggie_bed)
      (game-conserved
        (not
          (adjacent ?t ?g)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwKnocksOverBear
      (exists (?b - (either cylindrical_block rug) ?l ?b10 - yellow_cube_block)
        (at-end
          (and
            (adjacent drawer ?b10)
            (between ?b10 ?l ?b10)
            (on ?b10 ?b10)
          )
        )
      )
    )
    (forall (?d ?c ?r ?b ?x - hexagonal_bin ?h - hexagonal_bin ?o4 - (either cylindrical_block pillow))
      (and
        (preference blockOnBlockInTowerAtEnd
          (exists (?d - hexagonal_bin)
            (then
              (hold (in ?d ?o4) )
              (once (and (agent_holds desk) (and (and (not (forall (?b9 - ball) (and (equal_z_position ?o4 ?d) (agent_holds desk) ) ) ) (forall (?x - cylindrical_block) (and (in ?o4 bridge_block) (agent_holds ?x) ) ) ) (in_motion ?o4) ) ) )
              (hold-while (agent_holds ?o4) (rug_color_under ?o4 ?o4) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-increasing-measure throwKnocksOverBear:basketball) (* 0 5 )
  )
)
(:scoring
  (external-forall-maximize
    (count throwKnocksOverBear:hexagonal_bin:golfball)
  )
)
)

(define (game game-id-5) (:domain medium-objects-room-v1)
(:setup
  (forall (?b - ball)
    (and
      (game-conserved
        (on ?b ?b)
      )
    )
  )
)
(:constraints
  (and
    (preference throwMovesBeachballWithoutKnockingTeddy
      (exists (?d - curved_wooden_ramp)
        (then
          (once (in_motion ?d) )
          (hold-while (agent_holds ?d) (object_orientation ?d ?d) )
          (hold (faces ?d ?d) )
        )
      )
    )
    (preference thrownBallReachesEnd
      (exists (?b - block ?h - golfball)
        (then
          (once (and (not (not (and (and (adjacent ?h ?h) (adjacent rug ?h) ) (in_motion ?h) (and (adjacent ?h bed) (and (not (agent_holds ?h) ) ) (and (agent_holds ?h) (in ?h ?h) ) ) (and (not (and (exists (?p - hexagonal_bin) (faces ?p ?h) ) (adjacent ?h ?h) ) ) (and (in_motion ?h) (< 1 (distance ?h door)) (exists (?h - teddy_bear ?b4 - (either alarm_clock dodgeball desktop)) (touch ?b4 ?b4) ) ) (and (in_motion ?h) (adjacent ?h ?h) (and (and (in_motion ?h) ) (agent_holds ?h) (and (faces ?h room_center) (not (opposite ?h ?h) ) (exists (?b - color) (adjacent ?b ?h) ) (not (and (not (agent_holds ?h) ) (touch ?h ?h) ) ) ) ) (in_motion ?h) (in_motion ?h) (and (on ?h ?h) (and (not (and (adjacent ?h room_center) (in ?h ?h) ) ) (< 1 (distance ?h ?h)) ) ) ) (in floor agent) (rug_color_under ?h ?h) (rug_color_under ?h ?h) (agent_holds desk) ) (and (not (and (and (object_orientation ?h ?h) (in ?h ?h) ) ) ) (above ?h bed) ) (and (forall (?o2 - doggie_bed ?h ?b4 ?c ?l4 - curved_wooden_ramp ?d2 ?c1 ?d - wall) (same_color ?d ?c1) ) (and (and (on ?h ?h) (not (same_type ?h ?h) ) ) (not (in_motion ?h) ) ) (on bed ?h) ) ) ) ) ) )
          (hold-while (adjacent_side ?h ?h ?h) (not (not (exists (?d - (either cd lamp tall_cylindrical_block golfball cellphone yellow_cube_block yellow) ?d2 - hexagonal_bin) (in_motion ?h) ) ) ) )
          (once-measure (between ?h agent ?h) (distance ?h ?h) )
        )
      )
    )
    (forall (?w - building)
      (and
        (preference itemsHidingScreens
          (exists (?d - dodgeball)
            (then
              (once (adjacent_side ?w ?d agent ?w) )
              (once (not (< 1 (distance ?d ?w)) ) )
              (once (and (not (agent_holds room_center) ) (in_motion ?d) ) )
              (once (not (touch ?w ?w) ) )
            )
          )
        )
        (preference blockOnBlockInTowerAtEnd
          (exists (?b - doggie_bed ?d - golfball ?h - hexagonal_bin)
            (at-end
              (and
                (in_motion ?h)
                (and
                  (in_motion ?h)
                  (not
                    (agent_holds rug)
                  )
                  (adjacent_side ?h front ?w)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects blockOnBlockInTowerAtEnd:purple) (* (count itemsHidingScreens:basketball:dodgeball) 100 )
  )
)
(:scoring
  (count thrownBallReachesEnd:blue_dodgeball)
)
)

(define (game game-id-6) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds right)
  )
)
(:constraints
  (and
    (preference cubeBlockThrowAttempt
      (exists (?f - hexagonal_bin)
        (then
          (hold (agent_holds ?f) )
          (hold (agent_crouches ) )
          (once (in_motion ?f) )
        )
      )
    )
    (preference ballThrownFromBehindBlock
      (exists (?h ?ob - ball)
        (then
          (hold (not (not (adjacent ?h ?ob) ) ) )
          (once (forall (?db - (either pyramid_block flat_block)) (object_orientation ?db agent) ) )
          (hold (on ?ob ?ob) )
        )
      )
    )
  )
)
(:terminal
  (>= (external-forall-minimize (+ (- (count ballThrownFromBehindBlock:doggie_bed) )
        (total-score)
        (count ballThrownFromBehindBlock:cylindrical_block)
      )
    )
    (total-score)
  )
)
(:scoring
  (* (count-once-per-objects ballThrownFromBehindBlock:dodgeball) (count cubeBlockThrowAttempt:tan:basketball) )
)
)

(define (game game-id-7) (:domain medium-objects-room-v1)
(:setup
  (exists (?b - shelf)
    (exists (?c3 - cube_block ?d - hexagonal_bin)
      (and
        (exists (?d - cube_block)
          (game-optional
            (and
              (not
                (and
                  (in ?b pink)
                  (not
                    (and
                      (agent_holds agent)
                      (not
                        (adjacent west_wall ?d)
                      )
                    )
                  )
                )
              )
              (exists (?h - (either desktop hexagonal_bin) ?o - (either laptop golfball))
                (in_motion ?b)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockInTowerAtEnd
      (exists (?l4 ?c4 - hexagonal_bin)
        (then
          (hold (between ?l4 ?l4 ?c4) )
          (hold (and (in_motion ?c4) (object_orientation rug ?l4) ) )
          (hold (on ?l4 ?l4) )
          (once (adjacent ?c4 upright) )
        )
      )
    )
    (preference throwAttemptFromDoor
      (exists (?w2 - hexagonal_bin ?b ?c - doggie_bed)
        (then
          (once (agent_holds south_west_corner) )
          (once (not (adjacent_side ?b ?c bed) ) )
          (once (not (agent_holds agent) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= 300 (count blockInTowerAtEnd:blue_pyramid_block) )
    (>= (external-forall-maximize (count throwAttemptFromDoor:purple) ) 3 )
  )
)
(:scoring
  (external-forall-minimize
    (* (* (count-longest blockInTowerAtEnd:yellow) 4 )
      (count blockInTowerAtEnd:blue_dodgeball)
    )
  )
)
)

(define (game game-id-8) (:domain medium-objects-room-v1)
(:setup
  (exists (?b10 - teddy_bear)
    (game-optional
      (touch ?b10 room_center)
    )
  )
)
(:constraints
  (and
    (forall (?o - building)
      (and
        (preference towerFallsWhileBuilding
          (exists (?d1 - hexagonal_bin)
            (then
              (once (and (not (and (on ?o ?o) (> (distance ?o ?o) (distance ?o ?d1)) ) ) (same_object ?d1 ?o) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (* (+ (total-score) 5 )
      (* (* (* (* (count towerFallsWhileBuilding:dodgeball) (+ (- 1 )
                (* (* 4 (count towerFallsWhileBuilding:yellow) )
                  (< 6 (+ 3 (* (* (count towerFallsWhileBuilding:basketball) 5 )
                        (count towerFallsWhileBuilding:red)
                      )
                    )
                  )
                )
              )
            )
            (count towerFallsWhileBuilding:pink)
          )
          (= (count-once-per-objects towerFallsWhileBuilding:golfball) 10 )
        )
        3
      )
    )
    (count-once-per-objects towerFallsWhileBuilding:yellow)
  )
)
(:scoring
  (count towerFallsWhileBuilding)
)
)

(define (game game-id-9) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (<= 8 7)
  )
)
(:constraints
  (and
    (preference dodgeballThrownToBinFromDesk
      (exists (?b7 - ball)
        (then
          (once-measure (not (in ?b7 ?b7) ) (distance desk ?b7) )
          (once (not (agent_holds ?b7) ) )
          (once (agent_holds ?b7) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= 3 2 )
      (>= 2 20 )
      (= 3 (+ (total-time) (count dodgeballThrownToBinFromDesk:hexagonal_bin) )
      )
      (>= 5 (- (+ (count-increasing-measure dodgeballThrownToBinFromDesk:dodgeball) (count-once-per-objects dodgeballThrownToBinFromDesk:red_pyramid_block) )
        )
      )
    )
    (>= (count dodgeballThrownToBinFromDesk:dodgeball) (count dodgeballThrownToBinFromDesk:yellow) )
  )
)
(:scoring
  (* (count dodgeballThrownToBinFromDesk:dodgeball:rug) 4 )
)
)

(define (game game-id-10) (:domain medium-objects-room-v1)
(:setup
  (exists (?o1 - cube_block)
    (exists (?w2 - hexagonal_bin ?c5 - game_object)
      (game-conserved
        (and
          (in_motion ?c5)
          (in_motion ?o1)
          (in agent ?c5)
          (not
            (agent_holds ?o1)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference brownObjectMovedToRoomCenter
      (at-end
        (agent_holds bed)
      )
    )
    (preference itemsHidingScreens
      (exists (?l1 ?d ?d2 ?b ?b ?o ?h ?b2 ?h ?d - hexagonal_bin ?l3 - teddy_bear ?h - wall ?h ?g - hexagonal_bin)
        (then
          (hold (same_type pink_dodgeball ?g) )
          (hold (and (not (agent_holds ?g) ) (not (not (in_motion ?h) ) ) ) )
          (once (agent_holds ?g) )
        )
      )
    )
    (preference blockThrowAttempt
      (exists (?d - ball)
        (then
          (hold (is_setup_object rug) )
          (once (not (agent_holds room_center) ) )
          (once (not (and (agent_holds ?d) (equal_x_position desk ?d) ) ) )
        )
      )
    )
  )
)
(:terminal
  (> (+ (+ (* 8 (count-measure blockThrowAttempt:cylindrical_block) )
        (count blockThrowAttempt:side_table:green)
      )
      (* (* (count blockThrowAttempt:pink_dodgeball) 5 )
        50
      )
    )
    (+ (* (* 6 (* (count brownObjectMovedToRoomCenter:book:dodgeball) 3 )
        )
        3
      )
      (- 1 )
    )
  )
)
(:scoring
  (count brownObjectMovedToRoomCenter:yellow)
)
)

(define (game game-id-11) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - shelf ?b6 - golfball ?h - wall)
      (exists (?r - ball ?c2 - pillow ?o4 - color)
        (exists (?h - game_object)
          (game-conserved
            (adjacent_side ?o4 ?o4 ?o4 ?h)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownFromBehindBlock
      (exists (?c - hexagonal_bin)
        (then
          (once (in_motion ?c) )
          (once (exists (?b - dodgeball ?h - doggie_bed) (in_motion ?h) ) )
          (once (agent_holds ?c) )
          (once (not (and (exists (?b3 - color) (same_type ?b3 brown) ) (agent_holds ?c) (not (in desk ?c) ) (in_motion ?c) ) ) )
        )
      )
    )
    (preference failedThrowToBin
      (exists (?o2 ?b2 - hexagonal_bin)
        (at-end
          (and
            (not
              (in_motion agent)
            )
            (and
              (and
                (in ?o2 ?b2)
                (touch ?b2 ?b2)
              )
              (on ?b2 ?b2)
            )
          )
        )
      )
    )
    (forall (?f - hexagonal_bin)
      (and
        (preference beachballOnRug
          (exists (?h - hexagonal_bin)
            (then
              (once (and (is_setup_object ?f) (and (and (agent_holds ?h) (agent_holds ?h) ) (and (same_color ?f ?h) (agent_holds ?f) (same_object ?f ?f) ) ) (in_motion ?f) ) )
              (hold (in_motion ?f) )
              (once (and (not (in_motion ?h) ) (and (and (and (> (distance agent ?f) (x_position ?f)) (and (in ?f ?h) (and (agent_holds ?f) (in_motion room_center) ) ) (not (adjacent ?h ?h) ) (in_motion ?f) ) (rug_color_under ?f ?f) ) (< 3 (distance ?h ?f)) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= (* 5 (+ (count beachballOnRug:golfball) (count-longest beachballOnRug:block) 2 (count failedThrowToBin:dodgeball:golfball) (+ (* 9 (count ballThrownFromBehindBlock:basketball:blue_dodgeball:golfball) )
          (external-forall-minimize
            (total-time)
          )
        )
        5
        (count-total beachballOnRug:beachball:red)
      )
    )
    (- 2 )
  )
)
(:scoring
  10
)
)

(define (game game-id-12) (:domain few-objects-room-v1)
(:setup
  (forall (?b - triangular_ramp)
    (and
      (exists (?w2 - shelf ?d - game_object)
        (and
          (game-conserved
            (< 1 (distance upright ?d))
          )
        )
      )
      (forall (?d - ball)
        (and
          (exists (?d - cube_block ?d - (either golfball blue_cube_block dodgeball))
            (game-conserved
              (agent_holds ?b)
            )
          )
          (game-optional
            (touch front ?d)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?t - building ?d - (either dodgeball dodgeball cube_block))
      (and
        (preference throwBallFromOtherBallToBin
          (exists (?c3 - ball ?b - chair)
            (then
              (hold-while (in_motion ?d) (same_color ?d ?b) (and (< 10 5) (on ?d ?d) ) )
              (forall-sequence (?db - (either alarm_clock cd laptop))
                (then
                  (once (and (not (and (not (not (and (agent_holds ?b) (< (distance door ?d) (distance ?db ?d)) ) ) ) (> (distance ?db agent) 7) ) ) (faces ?b door) ) )
                  (hold-while (and (adjacent ?d ?db) (and (adjacent_side ?b room_center ?db ?db) (not (not (agent_holds ball) ) ) ) ) (same_type ?b ?db) )
                  (hold (adjacent ?d ?d) )
                  (once (not (game_over ) ) )
                  (hold (and (above ?db ?db) (>= 1 1) ) )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* 10 (not (* 6 4 (= (count throwBallFromOtherBallToBin:pink) 5 )
        )
      )
    )
    (count throwBallFromOtherBallToBin:blue_dodgeball)
  )
)
(:scoring
  2
)
)

(define (game game-id-13) (:domain medium-objects-room-v1)
(:setup
  (forall (?f - game_object)
    (and
      (game-conserved
        (opposite ?f ?f)
      )
      (forall (?c - hexagonal_bin ?w1 - building)
        (and
          (game-conserved
            (agent_holds ?w1)
          )
          (exists (?h - chair)
            (forall (?o - hexagonal_bin)
              (exists (?ob - building)
                (and
                  (game-optional
                    (and
                      (on ?f ?o)
                      (not
                        (not
                          (agent_holds ?o)
                        )
                      )
                    )
                  )
                  (game-conserved
                    (agent_holds rug)
                  )
                )
              )
            )
          )
        )
      )
      (forall (?l - cube_block ?h - ball)
        (game-optional
          (not
            (in_motion ?f)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownFromDoor
      (exists (?o5 - shelf)
        (then
          (hold (adjacent ?o5 ?o5) )
          (once (and (not (agent_holds ?o5) ) (not (in_motion ?o5) ) ) )
          (once (not (>= 1 1) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count ballThrownFromDoor:red) 0 )
)
(:scoring
  50
)
)

(define (game game-id-14) (:domain medium-objects-room-v1)
(:setup
  (exists (?b3 - curved_wooden_ramp)
    (exists (?b ?o2 - hexagonal_bin ?d1 - hexagonal_bin)
      (and
        (forall (?d - doggie_bed)
          (game-optional
            (< 3 (distance ?b3 bed))
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference baseBlockInTowerAtEnd
      (exists (?l1 - triangular_ramp)
        (then
          (any)
          (hold (and (adjacent ?l1 ?l1) (not (in_motion ?l1) ) ) )
          (once (broken ?l1) )
        )
      )
    )
  )
)
(:terminal
  (>= 1 (* 100 10 )
  )
)
(:scoring
  (* (count baseBlockInTowerAtEnd:cube_block) 3 15 5 (external-forall-maximize (count-once-per-objects baseBlockInTowerAtEnd:blue_dodgeball) ) (count baseBlockInTowerAtEnd:dodgeball:basketball) 2 )
)
)

(define (game game-id-15) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (and
        (forall (?h - cube_block)
          (game-conserved
            (on ?h agent)
          )
        )
      )
      (forall (?b8 - game_object)
        (exists (?w1 - block)
          (game-conserved
            (and
              (agent_holds ?b8)
              (and
                (agent_holds ?b8)
                (exists (?d2 - block)
                  (and
                    (and
                      (object_orientation ?b8 ?w1)
                      (in ?d2 ?d2)
                      (in ?d2 ?b8)
                      (not
                        (agent_holds ?w1)
                      )
                      (and
                        (adjacent ?b8 top_shelf)
                        (agent_holds ?d2)
                      )
                    )
                    (on ?b8 ?w1)
                    (in_motion ?b8)
                  )
                )
              )
              (not
                (on ?w1 ?w1)
              )
            )
          )
        )
      )
    )
    (forall (?b6 - hexagonal_bin)
      (forall (?d1 - golfball)
        (exists (?c - chair)
          (game-conserved
            (in_motion ?d1)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference beachballBouncedOffRamp
      (exists (?c1 - chair)
        (then
          (once (not (same_object floor ?c1) ) )
          (once (in_motion ?c1) )
          (hold-while (agent_holds ?c1) (not (adjacent_side ?c1 floor ?c1 ?c1) ) )
        )
      )
    )
    (preference throwBallToDoggieBed
      (exists (?c4 - cube_block)
        (then
          (hold (not (adjacent ?c4 ?c4) ) )
          (once (and (game_start ) (and (not (agent_holds ?c4) ) (in_motion ?c4) ) ) )
          (once (in_motion ?c4) )
        )
      )
    )
  )
)
(:terminal
  (> (count-once throwBallToDoggieBed:side_table) (* 3 (+ 6 (* (* (count-once-per-objects beachballBouncedOffRamp:basketball) (count beachballBouncedOffRamp:blue_pyramid_block) )
          (+ (* (+ (count-once-per-objects throwBallToDoggieBed:blue_dodgeball) 6 )
              1
            )
            1
          )
          10
        )
      )
    )
  )
)
(:scoring
  (count throwBallToDoggieBed:tall_cylindrical_block)
)
)

(define (game game-id-16) (:domain few-objects-room-v1)
(:setup
  (forall (?b7 - cube_block ?b3 ?d - hexagonal_bin)
    (forall (?b4 - chair)
      (game-conserved
        (exists (?tb - hexagonal_bin)
          (on ?tb ?tb)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToWallToAgent
      (exists (?d - shelf)
        (then
          (once (and (in_motion left) (< 0.5 0) (in_motion rug) (and (and (in ?d ?d) (in_motion ?d) ) (on ?d ?d) ) ) )
          (hold-while (and (not (same_type upright ?d) ) (and (and (in_motion agent) (not (not (agent_holds ?d) ) ) ) (in room_center ?d) ) ) (adjacent ?d ?d) )
          (hold (and (opposite ?d ?d) (in_motion desk) (and (agent_holds ?d) (agent_holds ?d) (and (agent_holds ?d) (in_motion ?d) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (= (count ballThrownToWallToAgent:dodgeball) (external-forall-maximize (count-increasing-measure ballThrownToWallToAgent:hexagonal_bin:dodgeball) ) )
)
(:scoring
  (* (count ballThrownToWallToAgent:dodgeball) (= (= (not (* 3 8 )
        )
        (total-time)
      )
      (count ballThrownToWallToAgent:dodgeball)
    )
  )
)
)

(define (game game-id-17) (:domain medium-objects-room-v1)
(:setup
  (exists (?o - cube_block ?h - (either beachball cylindrical_block pillow))
    (game-conserved
      (above ?h ?h)
    )
  )
)
(:constraints
  (and
    (preference blockIncorrectlyPicked
      (exists (?b - curved_wooden_ramp ?t - hexagonal_bin)
        (then
          (hold (and (not (on ?t ?t) ) (adjacent_side front ?t ?t desk) ) )
          (once (not (and (on ?t ?t) (and (agent_holds ?t) (agent_holds ?t) ) (not (agent_holds bed) ) (in_motion agent) (same_color agent brown) (and (and (and (forall (?c - game_object ?o3 - pyramid_block) (not (not (and (in_motion ?t) (<= 2 1) ) ) ) ) (not (and (and (and (forall (?l - (either dodgeball tall_cylindrical_block)) (and (agent_holds ?t) (in_motion ?l) (same_color ?t ?l) (and (in ?l ?t) (not (and (same_color pink_dodgeball ?t) (agent_holds ?t) ) ) ) ) ) (agent_holds ?t) ) (is_setup_object ?t) ) (< (x_position ?t) 0.5) ) ) ) (in_motion ?t) ) (and (in ?t ?t) (and (not (in ?t desk) ) (and (in_motion ?t) (in ?t bed) (opposite ?t ?t) ) ) ) ) (not (agent_holds ?t) ) (>= 4 1) ) ) )
          (once (or (not (and (and (not (and (in_motion ?t) (in_motion bed) ) ) (not (on ?t ?t) ) ) (agent_holds ?t) (in_motion ?t) ) ) (on ?t ?t) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count blockIncorrectlyPicked:green) (count blockIncorrectlyPicked:hexagonal_bin) )
)
(:scoring
  (count blockIncorrectlyPicked:bed:beachball)
)
)

(define (game game-id-18) (:domain many-objects-room-v1)
(:setup
  (exists (?tb ?b7 ?b - block ?h - dodgeball)
    (exists (?f - doggie_bed)
      (and
        (game-conserved
          (not
            (in_motion ?f)
          )
        )
        (exists (?db - block)
          (forall (?w2 - hexagonal_bin)
            (and
              (exists (?l1 - hexagonal_bin)
                (game-conserved
                  (on ?h ?w2)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballHitsPillowWithoutTouchingBlock
      (exists (?p3 - block)
        (then
          (once (in ?p3 ?p3) )
          (once (not (exists (?ob - hexagonal_bin) (in ?p3 ?p3) ) ) )
          (once (equal_z_position ?p3 west_wall) )
        )
      )
    )
    (preference laptopAndBookInPlace
      (exists (?b8 ?d ?o5 - dodgeball)
        (at-end
          (and
            (exists (?d - hexagonal_bin)
              (not
                (agent_holds ?o5)
              )
            )
            (on ?d agent)
          )
        )
      )
    )
    (preference itemInClosedDrawerAtEnd
      (exists (?c5 - doggie_bed)
        (then
          (once (on ?c5 ?c5) )
          (once (agent_holds bed) )
          (once (in_motion ?c5) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 2 (external-forall-maximize (count laptopAndBookInPlace:dodgeball:beachball) ) )
    (> (external-forall-minimize (external-forall-minimize 5 ) ) (count itemInClosedDrawerAtEnd:brown) )
    (= (count itemInClosedDrawerAtEnd:dodgeball:dodgeball) (* (total-time) (count laptopAndBookInPlace:purple) )
    )
  )
)
(:scoring
  (external-forall-maximize
    (count dodgeballHitsPillowWithoutTouchingBlock:block)
  )
)
)

(define (game game-id-19) (:domain medium-objects-room-v1)
(:setup
  (forall (?t - color ?c5 - dodgeball)
    (and
      (not
        (and
          (game-conserved
            (in_motion ?c5)
          )
        )
      )
      (and
        (and
          (and
            (exists (?c3 - hexagonal_bin ?bl - hexagonal_bin ?t2 - (either dodgeball yellow))
              (and
                (forall (?h - game_object)
                  (and
                    (exists (?r1 - teddy_bear)
                      (game-conserved
                        (and
                          (not
                            (and
                              (not
                                (not
                                  (same_object ?r1 ?t2)
                                )
                              )
                              (same_type ?h room_center)
                              (adjacent ?r1 ?t2)
                            )
                          )
                          (on ?c5 ?t2)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
          (forall (?ob - teddy_bear)
            (game-conserved
              (agent_holds agent)
            )
          )
          (exists (?b - hexagonal_bin)
            (exists (?g - hexagonal_bin ?p1 - chair)
              (game-conserved
                (on ?b ?b)
              )
            )
          )
        )
      )
      (forall (?w2 - dodgeball)
        (exists (?h - dodgeball)
          (exists (?b10 - beachball)
            (and
              (and
                (exists (?h - game_object)
                  (or
                    (game-conserved
                      (agent_holds desk)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballAndBasketballInBin
      (exists (?c - hexagonal_bin)
        (then
          (once (and (forall (?h - ball) (and (not (and (and (not (agent_holds ?h) ) (not (in ?c ?c) ) ) (agent_holds ?c) ) ) (< 1 (building_size ?c)) ) ) (not (agent_holds sideways) ) ) )
          (hold-while (not (agent_holds ?c) ) (and (in rug ?c) (< 1 (distance ?c ?c)) ) (agent_holds ?c) )
          (hold (adjacent ?c ?c) )
        )
      )
    )
    (preference throwFromDoorToBin
      (exists (?t - building ?c3 - wall)
        (then
          (once (touch ?c3 ?c3) )
          (once (agent_holds ?c3) )
          (hold (in ?c3 ?c3) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (* (+ (total-time) 1 )
        15
      )
      (* (count dodgeballAndBasketballInBin:blue_dodgeball) (>= (* (> (* (or (* (* 10 10 )
                    (count-once-per-objects throwFromDoorToBin:pink:beachball)
                  )
                  (+ 3 (* (* (count throwFromDoorToBin:orange:pink) (+ (* (* (count dodgeballAndBasketballInBin:beachball) (count throwFromDoorToBin:blue_dodgeball:doggie_bed) )
                            (+ (count-once-per-objects dodgeballAndBasketballInBin:dodgeball) 4 )
                          )
                          (count throwFromDoorToBin:dodgeball:beachball)
                          (+ (count throwFromDoorToBin:dodgeball) (count dodgeballAndBasketballInBin:pink_dodgeball) 7 )
                        )
                      )
                      (count throwFromDoorToBin:red)
                    )
                    (count dodgeballAndBasketballInBin:pink)
                  )
                  1
                )
                (* (count dodgeballAndBasketballInBin:dodgeball) (* (external-forall-minimize 10 ) 2 )
                )
              )
              (count dodgeballAndBasketballInBin:alarm_clock:dodgeball)
            )
            (count-overlapping throwFromDoorToBin:doggie_bed)
          )
          5
        )
      )
    )
    1
  )
)
(:scoring
  5
)
)

(define (game game-id-20) (:domain many-objects-room-v1)
(:setup
  (exists (?db - cylindrical_block ?s - (either desktop pillow))
    (exists (?d - (either book dodgeball pen) ?b - cube_block)
      (exists (?b3 - curved_wooden_ramp)
        (game-conserved
          (on ?s ?b3)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference woodenBlockMovedFromRugToDesk
      (exists (?p3 - hexagonal_bin ?c - hexagonal_bin)
        (then
          (hold (on ?c ?c) )
          (once (in_motion ?c) )
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (>= 4 2 )
      (or
        (>= 6 (count woodenBlockMovedFromRugToDesk:yellow_cube_block) )
        (>= (- (count woodenBlockMovedFromRugToDesk:red) )
          (- 10 )
        )
      )
    )
    (>= 5 (count woodenBlockMovedFromRugToDesk:beachball) )
    (< (count woodenBlockMovedFromRugToDesk:side_table) 40 )
  )
)
(:scoring
  1
)
)

(define (game game-id-21) (:domain many-objects-room-v1)
(:setup
  (forall (?d - dodgeball)
    (and
      (exists (?b4 - ball)
        (game-conserved
          (on ?d ?b4)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownFromBehindBlock
      (exists (?b8 - (either bridge_block triangle_block))
        (at-end
          (or
            (exists (?r - wall)
              (<= (distance_side ?b8 bed ?r ?b8) 1)
            )
            (in_motion ?b8)
          )
        )
      )
    )
  )
)
(:terminal
  (>= 3 10 )
)
(:scoring
  (count-once ballThrownFromBehindBlock:hexagonal_bin)
)
)

(define (game game-id-22) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (in_motion agent)
  )
)
(:constraints
  (and
    (preference blockOnBlockInTowerAtEnd
      (exists (?c5 - tall_cylindrical_block)
        (then
          (once (agent_holds ?c5) )
          (hold (agent_holds ?c5) )
          (once (same_type ?c5 desk) )
        )
      )
    )
    (forall (?w2 - hexagonal_bin ?b10 - cube_block)
      (and
        (preference beachballOnRug
          (exists (?b - wall)
            (then
              (any)
              (hold (rug_color_under desk ?b10) )
              (once (on ?b10 ?b) )
            )
          )
        )
      )
    )
    (preference throwAttempt
      (exists (?b - hexagonal_bin)
        (then
          (once (and (in_motion ?b) (in_motion ?b) (agent_holds ?b) (not (and (on bridge_block ?b) (in_motion ?b) ) ) ) )
          (once (in_motion front_left_corner) )
          (hold (in_motion ?b) )
          (hold (not (not (adjacent ?b bed) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-once-per-objects beachballOnRug:pink) 10 )
    (< (count-once-per-objects blockOnBlockInTowerAtEnd:basketball) (- (count blockOnBlockInTowerAtEnd:red) )
    )
  )
)
(:scoring
  (+ (count-once-per-objects blockOnBlockInTowerAtEnd:dodgeball:red:beachball) 2 2 )
)
)

(define (game game-id-23) (:domain many-objects-room-v1)
(:setup
  (forall (?l2 - doggie_bed)
    (exists (?h - (either pyramid_block))
      (forall (?bl - hexagonal_bin ?b - hexagonal_bin)
        (and
          (forall (?l - hexagonal_bin ?l3 - drawer ?h - dodgeball)
            (forall (?o2 - pyramid_block ?c - hexagonal_bin)
              (not
                (exists (?c2 - triangular_ramp)
                  (forall (?c - ball ?b - game_object ?c - chair)
                    (game-optional
                      (in_motion ?c2)
                    )
                  )
                )
              )
            )
          )
          (exists (?s - drawer)
            (exists (?w2 - (either cylindrical_block dodgeball))
              (game-conserved
                (and
                  (not
                    (agent_holds ?l2)
                  )
                  (not
                    (agent_holds upside_down)
                  )
                )
              )
            )
          )
          (game-conserved
            (forall (?o4 - game_object)
              (in ?l2 ?o4)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockInTowerAtEnd
      (exists (?c1 - chair)
        (then
          (once (not (not (and (and (agent_holds ?c1) (faces ?c1 ?c1) ) (agent_holds green) ) ) ) )
          (once (in_motion ?c1) )
          (hold-for 2 (not (open ?c1) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (+ (* (count-once-per-objects blockInTowerAtEnd:dodgeball) (/ 5 (* 6 (count blockInTowerAtEnd:blue_dodgeball:green) )
          )
        )
        15
      )
      (+ (count-increasing-measure blockInTowerAtEnd:green) (total-time) )
    )
    (>= (* (count-once-per-objects blockInTowerAtEnd:dodgeball:pink_dodgeball) (* (count blockInTowerAtEnd:beachball) (or (* (count blockInTowerAtEnd:beachball) (external-forall-maximize (* (count-once-per-objects blockInTowerAtEnd:beachball) (* 2 (count blockInTowerAtEnd) )
                )
              )
            )
            5
            5
          )
        )
      )
      (count blockInTowerAtEnd:blue)
    )
  )
)
(:scoring
  (count-measure blockInTowerAtEnd:blue_dodgeball)
)
)

(define (game game-id-24) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (in_motion floor)
  )
)
(:constraints
  (and
    (preference dodgeballFromBlockToBin
      (exists (?d - block ?d - (either cd cd cd))
        (then
          (hold (on ?d ?d) )
          (once (and (on pillow ?d) (in_motion block) ) )
          (once (or (>= (distance desk ?d) (distance desk ?d)) (in ?d ?d) (and (and (on ?d desk) (on ?d bed) ) (not (in_motion ?d) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (> (* (count dodgeballFromBlockToBin:golfball) (* (count dodgeballFromBlockToBin:yellow_cube_block) (count-once-per-objects dodgeballFromBlockToBin:golfball:pink_dodgeball) )
    )
    6
  )
)
(:scoring
  (* (count-once dodgeballFromBlockToBin:beachball:yellow) (- (* (/ (count-once-per-objects dodgeballFromBlockToBin:yellow) (* 2 (= (count-once-per-objects dodgeballFromBlockToBin:green) 3 )
          )
        )
      )
    )
  )
)
)

(define (game game-id-25) (:domain medium-objects-room-v1)
(:setup
  (forall (?tb - game_object)
    (exists (?d - block)
      (game-optional
        (agent_holds ?tb)
      )
    )
  )
)
(:constraints
  (and
    (preference objectToBinOnFirstTry
      (exists (?t - building ?w - hexagonal_bin)
        (then
          (hold (on ?w ?w) )
          (once (exists (?r2 - dodgeball) (in ?r2 ?w) ) )
          (once (not (opposite ?w ?w) ) )
        )
      )
    )
    (preference objectMoved
      (exists (?h - hexagonal_bin)
        (then
          (once (agent_holds agent) )
          (once (in_motion ?h) )
          (hold (adjacent ?h ?h) )
          (once (agent_holds ?h) )
        )
      )
    )
  )
)
(:terminal
  (= (* (count-once-per-external-objects objectMoved:dodgeball:blue_pyramid_block) (external-forall-minimize (not (count-once-per-external-objects objectToBinOnFirstTry:doggie_bed:dodgeball) ) ) 4 )
    (* 3 (count-once-per-objects objectMoved:yellow) )
  )
)
(:scoring
  7
)
)

(define (game game-id-26) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?s - ball ?t1 - (either alarm_clock pen wall))
      (exists (?ob - building)
        (and
          (game-conserved
            (not
              (on pillow ?ob)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectThrownFromRug
      (exists (?b6 - game_object ?d - hexagonal_bin)
        (then
          (hold (and (and (same_type ?d ?d) (and (not (agent_holds ?d) ) (on ?d ?d) (agent_holds ?d) ) ) (in_motion ?d) ) )
          (hold (on agent door) )
          (once (agent_holds ?d) )
        )
      )
    )
    (preference redDodgeballThrownToBinWithoutTouchingFloor
      (exists (?db - cube_block ?d - bridge_block)
        (at-end
          (and
            (and
              (< (distance_side ?d ?d ?d) (distance ?d ?d))
              (not
                (and
                  (in_motion ?d)
                  (equal_z_position ?d ?d)
                )
              )
            )
            (in ?d pink_dodgeball)
          )
        )
      )
    )
    (preference itemsBroken
      (exists (?h - (either dodgeball cellphone) ?w2 - dodgeball)
        (then
          (once (agent_holds ?w2) )
          (once (above ?w2 side_table) )
          (once (not (touch desk ?w2) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 6 (* (* (count-once-per-objects itemsBroken:beachball:dodgeball) 3 (* (and (count-once-per-objects objectThrownFromRug:block) (count objectThrownFromRug:yellow) ) 1 (count-once redDodgeballThrownToBinWithoutTouchingFloor:dodgeball:red) (* (* (count-measure redDodgeballThrownToBinWithoutTouchingFloor:beachball) (total-score) )
              (count redDodgeballThrownToBinWithoutTouchingFloor:blue_dodgeball:cube_block:beachball)
            )
            (count objectThrownFromRug:red)
            (count-same-positions objectThrownFromRug:red)
            (- (external-forall-maximize (and (count redDodgeballThrownToBinWithoutTouchingFloor) (count-once-per-objects redDodgeballThrownToBinWithoutTouchingFloor:yellow:dodgeball) 6 ) ) )
            (count-unique-positions objectThrownFromRug:purple)
            10
            3
            (* (count itemsBroken:red:golfball) 3 )
            2
          )
        )
        10
      )
    )
    (>= (* (total-time) 3 )
      5
    )
    (not
      (or
        (= (not (count-once-per-objects objectThrownFromRug:dodgeball:blue_dodgeball) ) 2 )
      )
    )
  )
)
(:scoring
  (count redDodgeballThrownToBinWithoutTouchingFloor:beachball)
)
)

(define (game game-id-27) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?b - shelf)
      (game-optional
        (in_motion ?b)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownFromRug
      (exists (?g - teddy_bear ?r2 - teddy_bear)
        (then
          (hold-while (agent_holds agent) (toggled_on ?r2) (in_motion ?r2) )
          (hold (and (adjacent ?r2 ?r2) (< (distance ?r2 ?r2) 1) ) )
          (hold-while (not (and (>= 1 (distance ?r2 ?r2)) (in_motion desk) ) ) (agent_holds ?r2) (agent_holds ?r2) )
        )
      )
    )
    (preference throwObjectToBin
      (exists (?h - dodgeball)
        (then
          (hold (and (in_motion ?h) (= 0 (distance floor ?h)) ) )
          (hold (is_setup_object ?h) )
          (once (agent_holds ?h) )
        )
      )
    )
    (preference golfballInBinFromPillow
      (exists (?b - dodgeball ?bl - hexagonal_bin)
        (then
          (hold (agent_holds ?bl) )
          (once (and (> (distance ?bl desk) 1) ) )
          (hold (touch ?bl ?bl) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count-once-per-objects throwObjectToBin:green:top_drawer) 5 )
    5
  )
)
(:scoring
  50
)
)

(define (game game-id-28) (:domain many-objects-room-v1)
(:setup
  (forall (?h - hexagonal_bin ?o5 - hexagonal_bin)
    (game-conserved
      (not
        (exists (?b - cube_block)
          (in ?b ?b)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwKnocksOverBear
      (exists (?b - block)
        (then
          (hold (exists (?p1 - cube_block) (in ?p1 ?b) ) )
          (once (agent_holds ?b) )
          (once (same_color ?b ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= 10 0 )
)
(:scoring
  5
)
)

(define (game game-id-29) (:domain many-objects-room-v1)
(:setup
  (forall (?h - curved_wooden_ramp)
    (game-optional
      (on ?h green)
    )
  )
)
(:constraints
  (and
    (forall (?o - hexagonal_bin)
      (and
        (preference ballKnocksTeddy
          (exists (?h - pyramid_block)
            (then
              (once (adjacent ?h ?o) )
              (once (agent_holds ?o) )
              (once (on ?o ?o) )
            )
          )
        )
        (preference throwKnocksOverBear
          (exists (?t2 - shelf)
            (at-end
              (and
                (not
                  (and
                    (in_motion ?t2)
                  )
                )
                (< 8 (distance_side ?t2 ?o tan ?t2))
                (exists (?h - game_object)
                  (in_motion room_center)
                )
                (adjacent ?o ?t2)
              )
            )
          )
        )
        (preference objectLandsInBin
          (exists (?w2 - (either laptop cellphone book))
            (at-end
              (agent_holds pink_dodgeball)
            )
          )
        )
      )
    )
    (preference itemsHidingScreens
      (exists (?w1 - building)
        (then
          (once (agent_holds ?w1) )
          (hold-while (agent_holds ?w1) (on ?w1 floor) (< (distance rug desk) 3) )
          (hold (agent_holds ?w1) )
        )
      )
    )
    (preference throwAttemptKnocksBlock
      (exists (?c - color ?b - hexagonal_bin)
        (then
          (once (not (on ?b ?b) ) )
          (hold-while (in rug ?b) (exists (?d - cube_block) (or (agent_holds ?b) (agent_holds ?d) ) ) )
          (once (opposite ?b ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= 1 (* 5 (* (count-once-per-objects itemsHidingScreens:dodgeball) 15 )
    )
  )
)
(:scoring
  2
)
)

(define (game game-id-30) (:domain few-objects-room-v1)
(:setup
  (forall (?l4 - curved_wooden_ramp ?h - teddy_bear)
    (game-conserved
      (= 8 1)
    )
  )
)
(:constraints
  (and
    (preference gameBlockFound
      (exists (?b - golfball)
        (then
          (once (in ?b desk) )
          (hold-for 2 (and (not (in bed ?b) ) (and (and (touch ?b ?b) (not (< 1 1) ) ) (not (rug_color_under ?b ?b) ) (and (on ?b ?b) (on ?b ?b) ) (not (in ?b ?b) ) (rug_color_under ?b ?b) ) ) )
          (once (agent_holds ?b) )
        )
      )
    )
  )
)
(:terminal
  (> (count gameBlockFound:pyramid_block) (+ (* (count-once gameBlockFound:doggie_bed) (count-once-per-objects gameBlockFound:red:pink_dodgeball) )
      (total-time)
      (total-score)
    )
  )
)
(:scoring
  (count-once-per-objects gameBlockFound:doggie_bed)
)
)

(define (game game-id-31) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (forall (?o5 - (either book laptop) ?o1 - red_dodgeball ?d2 - block)
      (between ?d2 ?d2 ?d2)
    )
  )
)
(:constraints
  (and
    (preference objectsHidden
      (exists (?w1 - doggie_bed)
        (at-end
          (or
            (agent_holds ?w1)
            (agent_holds ?w1)
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count-same-positions objectsHidden:purple) (+ (* (- 15 )
          40
        )
        (count objectsHidden:basketball:red)
        (count-once-per-external-objects objectsHidden:pink)
      )
    )
    1
  )
)
(:scoring
  2
)
)

(define (game game-id-32) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?b4 - (either cellphone alarm_clock) ?d - (either key_chain flat_block))
      (and
        (game-conserved
          (exists (?d - (either yellow_cube_block bridge_block) ?t - (either beachball dodgeball pencil alarm_clock credit_card wall curved_wooden_ramp))
            (and
              (not
                (agent_holds ?t)
              )
              (in_motion ?d)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference towerFallsWhileBuilding
      (exists (?l - (either laptop yellow_cube_block tall_cylindrical_block) ?bl - color)
        (then
          (once (exists (?o - blue_cube_block) (and (and (in_motion door) (is_setup_object ?o) ) (in_motion ?bl) ) ) )
          (hold (and (< (distance ?bl ?bl) (distance ?bl desk)) (on ?bl ?bl) ) )
          (hold-while (in ?bl ?bl) (in_motion ?bl) )
        )
      )
    )
    (preference blockKnockedFromBuildingInBin
      (exists (?h - red_pyramid_block)
        (then
          (hold-while (game_over ) (and (not (on door ?h) ) (agent_holds ?h) ) )
          (forall-sequence (?t2 - cube_block)
            (then
              (once (and (not (not (not (rug_color_under ?h ?h) ) ) ) (adjacent ?t2 ?t2) ) )
              (once (agent_holds desk) )
              (once (or (faces floor ?t2) ) )
            )
          )
          (once (and (same_type ?h ?h) (agent_holds ?h) ) )
        )
      )
    )
  )
)
(:terminal
  (> (or (* 50 (>= (total-time) 180 )
        (external-forall-maximize
          2
        )
        1
        (count-once-per-external-objects towerFallsWhileBuilding:green)
        (count-shortest blockKnockedFromBuildingInBin:doggie_bed)
        (count-unique-positions towerFallsWhileBuilding:basketball)
        (count blockKnockedFromBuildingInBin:golfball)
        (external-forall-maximize
          2
        )
      )
      4
    )
    50
  )
)
(:scoring
  5
)
)

(define (game game-id-33) (:domain many-objects-room-v1)
(:setup
  (exists (?o - ball)
    (game-conserved
      (in_motion ?o)
    )
  )
)
(:constraints
  (and
    (preference ballNeverThrown
      (exists (?b8 ?c ?s ?tb - hexagonal_bin)
        (at-end
          (touch ?s ?s)
        )
      )
    )
  )
)
(:terminal
  (>= (count ballNeverThrown:red:yellow) (count-once-per-objects ballNeverThrown:pink) )
)
(:scoring
  2
)
)

(define (game game-id-34) (:domain many-objects-room-v1)
(:setup
  (exists (?tb ?w ?d ?o2 ?b6 ?h - chair)
    (exists (?b4 - golfball ?d - (either alarm_clock chair))
      (game-conserved
        (not
          (not
            (in_motion agent)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference towerFallsWhileBuilding
      (exists (?h - game_object)
        (then
          (hold (is_setup_object ?h) )
          (hold (not (in_motion ?h) ) )
          (hold (agent_holds ?h) )
        )
      )
    )
  )
)
(:terminal
  (<= 2 (+ 10 (count-once-per-objects towerFallsWhileBuilding:dodgeball) )
  )
)
(:scoring
  2
)
)

(define (game game-id-35) (:domain few-objects-room-v1)
(:setup
  (forall (?s ?db - hexagonal_bin)
    (or
      (and
        (exists (?c - block ?b - dodgeball)
          (exists (?w1 - shelf)
            (and
              (forall (?h - triangular_ramp)
                (and
                  (game-conserved
                    (and
                      (and
                        (in_motion ?h)
                        (in_motion ?b)
                      )
                      (in_motion ?db)
                      (agent_crouches )
                    )
                  )
                  (and
                    (forall (?w - (either pillow pyramid_block) ?t2 - chair)
                      (game-conserved
                        (agent_holds ?s)
                      )
                    )
                    (or
                      (game-optional
                        (and
                          (not
                            (adjacent ?db ?b)
                          )
                          (and
                            (adjacent ?s ?w1)
                            (and
                              (not
                                (and
                                  (on ?db ?w1)
                                  (agent_holds ?w1)
                                )
                              )
                              (not
                                (not
                                  (in_motion ?db)
                                )
                              )
                            )
                          )
                          (in agent ?b)
                        )
                      )
                    )
                    (game-conserved
                      (and
                        (and
                          (agent_holds ?s)
                          (in_motion ?s)
                        )
                        (equal_z_position rug ?w1)
                      )
                    )
                  )
                )
              )
            )
          )
        )
        (and
          (exists (?p - cube_block ?o4 - cylindrical_block)
            (game-optional
              (agent_holds ?o4)
            )
          )
          (exists (?b - curved_wooden_ramp)
            (game-conserved
              (on ?b ?db)
            )
          )
        )
        (exists (?w - chair)
          (game-conserved
            (game_start )
          )
        )
      )
      (game-conserved
        (in_motion ?s)
      )
      (exists (?b - triangular_ramp ?b6 - (either cellphone golfball))
        (exists (?d - dodgeball)
          (game-optional
            (agent_holds tan)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectMoved
      (exists (?l1 - (either alarm_clock golfball) ?b - dodgeball)
        (then
          (hold (and (in_motion ?b) (and (and (in_motion ?b) (not (not (not (and (adjacent ?b ?b) (and (in agent upright) ) ) ) ) ) ) (not (< 6 4) ) ) ) )
          (once (agent_holds ?b) )
          (hold (and (or (in pink_dodgeball ?b) (and (and (on ?b ?b) (adjacent_side ?b ?b ?b ?b) (and (exists (?p - hexagonal_bin) (agent_holds ?b) ) (and (and (and (in_motion ?b) (agent_holds ?b) ) (adjacent ?b ?b) ) (not (on agent ?b) ) ) ) ) (not (touch ?b ?b) ) ) ) (in bed agent) (same_color ?b ?b) (adjacent ?b desk) ) )
        )
      )
    )
    (preference dodgeballBouncesOnceToDoggieBed
      (exists (?t - doggie_bed)
        (then
          (forall-sequence (?t - wall ?b9 ?r - hexagonal_bin)
            (then
              (once (agent_holds green_golfball) )
              (once (on ?t ?r) )
              (once (agent_holds agent) )
            )
          )
          (hold (not (on ?t ?t) ) )
          (once (in ?t ?t) )
        )
      )
    )
  )
)
(:terminal
  (> 30 (or (count-once-per-objects dodgeballBouncesOnceToDoggieBed:dodgeball) (* 20 (count dodgeballBouncesOnceToDoggieBed:basketball) )
    )
  )
)
(:scoring
  3
)
)

(define (game game-id-36) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (in_motion agent)
  )
)
(:constraints
  (and
    (preference blindsOpened
      (exists (?p - cube_block)
        (then
          (once (in_motion ?p) )
          (once (in ?p ?p) )
          (once (not (in_motion pillow) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 20 (count-increasing-measure blindsOpened:pink) )
)
(:scoring
  15
)
)

(define (game game-id-37) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds desk)
  )
)
(:constraints
  (and
    (preference throwBallToDoggieBed
      (exists (?s - dodgeball ?h - hexagonal_bin)
        (at-end
          (not
            (in ?h ?h)
          )
        )
      )
    )
    (preference ballInOrOnBin
      (exists (?p2 - dodgeball)
        (then
          (once (agent_holds pink_dodgeball) )
          (once (not (not (not (not (in_motion floor) ) ) ) ) )
          (once (= (distance ?p2 ?p2) (distance ?p2 ?p2)) )
        )
      )
    )
  )
)
(:terminal
  (or
    (and
      (or
        (<= 8 (count-once-per-objects ballInOrOnBin:wall) )
        (or
          (>= (+ (count-once-per-objects throwBallToDoggieBed:pink:dodgeball) (* (count throwBallToDoggieBed:green) (count-once-per-objects ballInOrOnBin:dodgeball) (count throwBallToDoggieBed:beachball) (+ 2 (total-score) )
                (count throwBallToDoggieBed:basketball)
                (* 2 (* 7 (count ballInOrOnBin:blue_cube_block) )
                )
              )
            )
            (count ballInOrOnBin:dodgeball)
          )
          (>= (* 6 (= (external-forall-minimize (count-unique-positions throwBallToDoggieBed:alarm_clock) ) (* 2 (total-score) 3 (count throwBallToDoggieBed:pink:golfball:tan) (+ (not (count throwBallToDoggieBed:doggie_bed) ) (count throwBallToDoggieBed:blue_pyramid_block) )
                  (count throwBallToDoggieBed:pink_dodgeball)
                )
              )
            )
            (count-once-per-objects throwBallToDoggieBed:pink)
          )
          (< (count-overlapping ballInOrOnBin:red:dodgeball) (count-once-per-objects throwBallToDoggieBed:green) )
        )
        (or
          (>= (not 2 ) (count throwBallToDoggieBed:alarm_clock) )
        )
      )
      (>= (count ballInOrOnBin:beachball) 1 )
      (>= (count ballInOrOnBin:blue_dodgeball) (count-once-per-objects ballInOrOnBin:basketball) )
    )
    (and
      (<= (- (count ballInOrOnBin:top_drawer) )
        9
      )
      (>= 4 3 )
    )
  )
)
(:scoring
  (<= (count-once-per-objects throwBallToDoggieBed:basketball:hexagonal_bin) (count throwBallToDoggieBed:basketball:golfball:pink_dodgeball) )
)
)

(define (game game-id-38) (:domain few-objects-room-v1)
(:setup
  (exists (?c - dodgeball)
    (game-optional
      (not
        (not
          (not
            (exists (?c1 - (either pillow bridge_block))
              (on ?c1 ?c)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?r - (either game_object cylindrical_block))
      (and
        (preference throwAttempt
          (exists (?o - cube_block ?r - hexagonal_bin)
            (then
              (once (in ?r ?r) )
              (once (and (game_start ) (not (and (agent_holds ?r) (in_motion desk) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 9 4 )
)
(:scoring
  (< (count throwAttempt:doggie_bed) 4 )
)
)

(define (game game-id-39) (:domain many-objects-room-v1)
(:setup
  (forall (?c - block)
    (and
      (forall (?b9 - teddy_bear)
        (and
          (and
            (game-conserved
              (not
                (not
                  (in_motion ?c)
                )
              )
            )
            (exists (?h - beachball)
              (exists (?l2 - curved_wooden_ramp ?c1 - chair)
                (game-conserved
                  (same_type ?c1 ?c1)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference thrownBallReachesEnd
      (exists (?x - ball ?c - dodgeball)
        (then
          (once (not (> 1 (distance ?c ?c)) ) )
          (once (in_motion ?c) )
          (hold (and (adjacent desk ?c) (agent_holds ?c) (same_color ?c ?c) (between floor ?c ?c) ) )
        )
      )
    )
    (preference throwMovesBeachballWithoutKnockingTeddy
      (exists (?b8 - wall ?c2 - cube_block)
        (then
          (once (not (not (not (in_motion ?c2) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= 20 10 )
  )
)
(:scoring
  (count thrownBallReachesEnd:green)
)
)

(define (game game-id-40) (:domain few-objects-room-v1)
(:setup
  (forall (?ob - game_object)
    (and
      (and
        (and
          (and
            (game-optional
              (exists (?d - teddy_bear ?l ?p ?d2 - hexagonal_bin)
                (in_motion ?d2)
              )
            )
          )
          (game-conserved
            (in_motion ?ob)
          )
        )
        (exists (?d - hexagonal_bin ?d1 - hexagonal_bin ?o5 - chair ?l4 - curved_wooden_ramp)
          (and
            (and
              (and
                (exists (?o4 - pyramid_block)
                  (forall (?c1 - yellow_cube_block)
                    (forall (?b - hexagonal_bin ?l3 - building ?o1 ?d ?o - block ?s - ball)
                      (exists (?o2 - hexagonal_bin ?r1 ?b9 ?h - dodgeball)
                        (forall (?l - hexagonal_bin)
                          (game-optional
                            (not
                              (on room_center ?l4)
                            )
                          )
                        )
                      )
                    )
                  )
                )
                (exists (?h - drawer)
                  (exists (?o - sliding_door ?g - dodgeball ?b - doggie_bed ?d - building ?c3 - pyramid_block)
                    (forall (?bl - block ?g - hexagonal_bin)
                      (forall (?c5 - hexagonal_bin)
                        (game-conserved
                          (and
                            (touch ?c3 ?c5)
                            (and
                              (same_color ?c3 desk)
                              (agent_holds ?c5)
                            )
                            (< 1 (distance_side agent right agent))
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
            (game-conserved
              (on ?l4 ?ob)
            )
            (and
              (game-conserved
                (on ?l4 ?l4)
              )
            )
          )
        )
        (and
          (or
            (game-optional
              (in_motion ?ob)
            )
          )
          (game-conserved
            (and
              (agent_holds ?ob)
              (not
                (broken ?ob)
              )
            )
          )
          (game-conserved
            (or
              (agent_holds ?ob)
              (< 1 3)
            )
          )
        )
      )
      (game-optional
        (adjacent ?ob ?ob)
      )
      (and
        (forall (?d - dodgeball)
          (game-conserved
            (in_motion ?d)
          )
        )
        (and
          (game-conserved
            (agent_holds ?ob)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?b4 - pyramid_block)
        (then
          (once (in ?b4 ?b4) )
          (hold-while (and (and (is_setup_object ?b4) (not (in_motion ?b4) ) ) (in_motion ?b4) ) (on ?b4 ?b4) (agent_holds ?b4) (not (not (on yellow ?b4) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* (external-forall-minimize 10 ) 4 )
      (count-once ballThrownToBin:blue_pyramid_block)
    )
  )
)
(:scoring
  10
)
)

(define (game game-id-41) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (< 6 10)
  )
)
(:constraints
  (and
    (preference objectToBinOnFirstTry
      (exists (?d - curved_wooden_ramp ?o2 - block)
        (then
          (once (or (and (adjacent_side ?o2 ?o2 ?o2) (exists (?b - (either doggie_bed)) (in_motion bed) ) ) (in_motion ?o2) ) )
          (once (and (in_motion ?o2) (not (agent_holds ?o2) ) ) )
          (hold (and (not (on ?o2 ?o2) ) (not (in_motion agent) ) (not (in ?o2 ?o2) ) (not (not (in_motion ?o2) ) ) ) )
        )
      )
    )
    (preference dodgeballFromBlockToBin
      (exists (?o2 - ball ?h - tall_cylindrical_block)
        (then
          (once (equal_z_position ?h ?h) )
          (hold (agent_holds ?h) )
          (hold-while (agent_holds ?h) (not (adjacent ?h ?h) ) )
        )
      )
    )
  )
)
(:terminal
  (< 5 3 )
)
(:scoring
  3
)
)

(define (game game-id-42) (:domain few-objects-room-v1)
(:setup
  (exists (?c1 - hexagonal_bin ?ob - hexagonal_bin ?f - (either pyramid_block doggie_bed))
    (and
      (and
        (exists (?o - game_object)
          (forall (?o - block)
            (and
              (forall (?c - red_dodgeball)
                (and
                  (and
                    (forall (?l1 - ball)
                      (or
                        (and
                          (game-conserved
                            (in_motion ?c)
                          )
                          (exists (?o - pillow ?w - dodgeball ?b6 - curved_wooden_ramp)
                            (exists (?l1 - hexagonal_bin)
                              (and
                                (and
                                  (exists (?r - hexagonal_bin)
                                    (not
                                      (exists (?o - hexagonal_bin)
                                        (exists (?d - dodgeball)
                                          (game-conserved
                                            (not
                                              (or
                                                (agent_holds ?c)
                                                (agent_holds ?r)
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                  (exists (?c - color ?b - hexagonal_bin ?c - hexagonal_bin)
                                    (exists (?b1 ?b ?b ?c2 ?s - hexagonal_bin)
                                      (game-conserved
                                        (equal_x_position floor ?o)
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                          (game-conserved
                            (and
                              (and
                                (in_motion ?f)
                                (in ?c rug)
                              )
                              (not
                                (agent_holds rug)
                              )
                            )
                          )
                        )
                        (game-conserved
                          (< (distance_side ?f ?o ?o) 7)
                        )
                      )
                    )
                  )
                )
              )
              (and
                (and
                  (forall (?h - ball)
                    (exists (?h - hexagonal_bin)
                      (game-conserved
                        (in_motion agent)
                      )
                    )
                  )
                  (and
                    (game-conserved
                      (broken ?o)
                    )
                    (forall (?o4 - curved_wooden_ramp)
                      (exists (?p - cube_block ?c - dodgeball)
                        (exists (?o2 ?s - hexagonal_bin ?l - dodgeball ?o - triangular_ramp)
                          (exists (?b - dodgeball)
                            (game-conserved
                              (on ?f ?b)
                            )
                          )
                        )
                      )
                    )
                  )
                  (and
                    (forall (?h - cube_block ?h - hexagonal_bin)
                      (and
                        (forall (?b ?g - cube_block ?d - hexagonal_bin)
                          (game-conserved
                            (agent_holds ?h)
                          )
                        )
                        (forall (?o - (either pyramid_block blue_cube_block rug))
                          (and
                            (forall (?h - (either dodgeball golfball))
                              (game-optional
                                (broken ?o)
                              )
                            )
                          )
                        )
                        (forall (?bl - pyramid_block)
                          (game-conserved
                            (exists (?l2 - book)
                              (in_motion ?bl)
                            )
                          )
                        )
                      )
                    )
                    (or
                      (game-conserved
                        (not
                          (on ?o ?o)
                        )
                      )
                      (or
                        (exists (?c1 - block)
                          (and
                            (game-conserved
                              (not
                                (not
                                  (on ?o ?o)
                                )
                              )
                            )
                            (exists (?b9 - ball ?l4 - dodgeball)
                              (and
                                (game-optional
                                  (agent_holds ?l4)
                                )
                                (exists (?o - chair)
                                  (and
                                    (game-conserved
                                      (adjacent ?o ?l4)
                                    )
                                  )
                                )
                                (game-conserved
                                  (agent_holds rug)
                                )
                              )
                            )
                            (game-conserved
                              (adjacent_side agent ?f ?f)
                            )
                          )
                        )
                      )
                    )
                    (game-optional
                      (or
                        (or
                          (not
                            (agent_holds ?o)
                          )
                          (agent_holds ?o)
                          (not
                            (same_object ?o ?o)
                          )
                        )
                        (agent_crouches )
                      )
                    )
                  )
                )
                (forall (?b2 - ball)
                  (and
                    (and
                      (forall (?h - block ?c - pillow)
                        (and
                          (and
                            (and
                              (exists (?c - ball ?h - ball)
                                (game-conserved
                                  (in_motion ?h)
                                )
                              )
                              (game-optional
                                (not
                                  (open ?c)
                                )
                              )
                              (and
                                (forall (?b - ball)
                                  (and
                                    (and
                                      (exists (?h ?h ?h ?b ?h ?l2 ?b7 ?h ?b ?b3 - game_object)
                                        (game-conserved
                                          (and
                                            (and
                                              (equal_x_position rug ?h)
                                              (in ?b3 ?b2)
                                            )
                                            (in_motion ?o)
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                                (and
                                  (and
                                    (and
                                      (game-conserved
                                        (in ?c ?b2)
                                      )
                                      (and
                                        (game-conserved
                                          (in_motion ?o)
                                        )
                                      )
                                    )
                                    (game-optional
                                      (in ?o ?c)
                                    )
                                  )
                                )
                                (and
                                  (game-conserved
                                    (agent_holds ?f)
                                  )
                                  (exists (?c1 - building)
                                    (exists (?o - pyramid_block)
                                      (game-optional
                                        (or
                                          (and
                                            (not
                                              (same_type ?b2 room_center)
                                            )
                                            (same_color ?b2 ?o)
                                          )
                                        )
                                      )
                                    )
                                  )
                                  (game-conserved
                                    (not
                                      (same_type ?o ?o)
                                    )
                                  )
                                )
                              )
                            )
                          )
                          (game-optional
                            (and
                              (not
                                (touch ?b2 ?c)
                              )
                              (in_motion ?b2)
                            )
                          )
                        )
                      )
                      (game-optional
                        (exists (?p3 - teddy_bear)
                          (and
                            (and
                              (in_motion ?o)
                              (agent_holds ?b2)
                            )
                            (not
                              (not
                                (in_motion ?p3)
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
                (game-conserved
                  (and
                    (and
                      (not
                        (between ?o ?f desk)
                      )
                      (in ?f ?o)
                      (in bed ?o)
                    )
                    (agent_holds ?f)
                  )
                )
              )
              (game-optional
                (touch ?o ?f)
              )
            )
          )
        )
      )
      (and
        (exists (?d - dodgeball ?c - hexagonal_bin)
          (game-conserved
            (and
              (adjacent_side ?c bed ?f)
              (not
                (in_motion ?c)
              )
            )
          )
        )
      )
      (game-optional
        (on ?f bed)
      )
    )
  )
)
(:constraints
  (and
    (preference greenObjectMovedToRoomCenter
      (exists (?h - doggie_bed)
        (then
          (once (in ?h desk) )
          (once (not (and (not (< (distance ?h agent) (distance ?h ?h)) ) (and (exists (?b3 - (either dodgeball beachball cellphone)) (not (agent_holds ?b3) ) ) (on ?h pink_dodgeball) ) ) ) )
          (once (on ?h ?h) )
        )
      )
    )
  )
)
(:terminal
  (< (external-forall-maximize (external-forall-maximize 8 ) ) (count greenObjectMovedToRoomCenter:dodgeball) )
)
(:scoring
  10
)
)

(define (game game-id-43) (:domain many-objects-room-v1)
(:setup
  (exists (?c ?b - pillow ?b3 - ball ?d - doggie_bed ?d - (either teddy_bear book))
    (game-conserved
      (agent_holds ?d)
    )
  )
)
(:constraints
  (and
    (forall (?h - hexagonal_bin)
      (and
        (preference blockPlacedInBuilding
          (exists (?l - ball ?c - curved_wooden_ramp)
            (then
              (once (not (exists (?d - teddy_bear) (on ?d ?d) ) ) )
              (once (>= (distance agent ?h) (distance brown ?c)) )
              (hold (in_motion ?c) )
            )
          )
        )
      )
    )
    (preference blockInTowerKnockedByDodgeball
      (exists (?c - cube_block)
        (then
          (hold (in ?c ?c) )
          (once (on ?c agent) )
          (once (on ?c ?c) )
        )
      )
    )
  )
)
(:terminal
  (<= (count blockPlacedInBuilding:blue) (* (count blockPlacedInBuilding:bed) 2 )
  )
)
(:scoring
  (* (count-once-per-objects blockInTowerKnockedByDodgeball:yellow) (count blockInTowerKnockedByDodgeball:cube_block) )
)
)

(define (game game-id-44) (:domain many-objects-room-v1)
(:setup
  (exists (?w1 - hexagonal_bin ?b5 - (either alarm_clock pillow dodgeball))
    (game-optional
      (< (distance ?b5 pink_dodgeball) 0)
    )
  )
)
(:constraints
  (and
    (preference ballThrownIntoTarget
      (exists (?h - teddy_bear)
        (then
          (once (in_motion agent) )
          (hold (and (exists (?c - curved_wooden_ramp ?b - book) (and (toggled_on agent) ) ) (in_motion ?h) ) )
          (once (agent_holds ?h) )
        )
      )
    )
    (forall (?o - cube_block ?p - cube_block)
      (and
        (preference ballToBinFromBed
          (exists (?s - cube_block ?t2 - hexagonal_bin ?w2 ?d - dodgeball)
            (at-end
              (agent_holds ?d)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 8 9 )
)
(:scoring
  1
)
)

(define (game game-id-45) (:domain few-objects-room-v1)
(:setup
  (forall (?h - bridge_block ?h - pillow)
    (and
      (and
        (forall (?h - ball ?g - ball ?p1 ?r - (either laptop cube_block triangle_block))
          (game-conserved
            (toggled_on ?h)
          )
        )
        (and
          (game-optional
            (in_motion ?h)
          )
        )
        (exists (?tb - hexagonal_bin)
          (and
            (exists (?b - dodgeball ?o2 - red_pyramid_block)
              (game-optional
                (in ?h desk)
              )
            )
            (exists (?c - teddy_bear ?w2 - wall)
              (exists (?h - hexagonal_bin)
                (forall (?t2 - curved_wooden_ramp)
                  (exists (?o3 - (either cylindrical_block pen))
                    (game-conserved
                      (on ?h ?h)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference bookOnDeskShelf
      (exists (?x - (either pen alarm_clock))
        (at-end
          (adjacent_side ?x ?x pink_dodgeball)
        )
      )
    )
    (preference beachballOnRug
      (exists (?b - curved_wooden_ramp)
        (then
          (forall-sequence (?w2 - hexagonal_bin ?h - cube_block)
            (then
              (hold (not (in ?h ?h) ) )
              (once (not (and (touch ?h floor) (not (in_motion ?b) ) ) ) )
              (once (forall (?c2 - (either bridge_block blue_cube_block)) (object_orientation bed ?c2) ) )
            )
          )
          (once (in rug ?b) )
          (once (not (and (agent_holds ?b) (in ?b ?b) ) ) )
        )
      )
    )
  )
)
(:terminal
  (<= (- (count-once-per-objects bookOnDeskShelf:block) )
    (* (* 15 15 )
      (* 3 (count-overlapping beachballOnRug:dodgeball:red) )
    )
  )
)
(:scoring
  60
)
)

(define (game game-id-46) (:domain medium-objects-room-v1)
(:setup
  (exists (?d - bridge_block)
    (and
      (forall (?d - (either dodgeball cylindrical_block))
        (game-conserved
          (on ?d ?d)
        )
      )
      (exists (?b - ball)
        (and
          (game-conserved
            (in_motion ?d)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c5 - dodgeball)
      (and
        (preference pinkObjectMovedToRoomCenter
          (exists (?o2 - hexagonal_bin ?ob - building)
            (then
              (once (< (distance ?ob ?ob) (distance ?c5 ?ob)) )
              (hold-while (not (in_motion desk) ) (< (distance ?c5 desk) (x_position ?c5)) (same_object door ?ob) (touch room_center ?ob) )
              (once (exists (?b4 - hexagonal_bin) (and (in ?b4 ?ob) (and (not (in_motion ?b4) ) (agent_holds agent) ) ) ) )
            )
          )
        )
        (preference throwMissesBin
          (exists (?c ?t1 - golfball)
            (at-end
              (and
                (agent_holds ?t1)
                (and
                  (and
                    (and
                      (agent_holds ?c)
                      (not
                        (is_setup_object ?c5)
                      )
                    )
                  )
                  (is_setup_object ?c)
                )
              )
            )
          )
        )
      )
    )
    (preference ballThrownToRug
      (exists (?h - dodgeball)
        (then
          (hold (not (not (agent_holds ?h) ) ) )
          (once (< (distance ?h ?h) (distance ?h ?h)) )
          (once (not (not (< 2 1) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (> 9 (count-total ballThrownToRug:basketball) )
      (= (* (count ballThrownToRug) (count ballThrownToRug:hexagonal_bin) )
        (external-forall-maximize
          15
        )
      )
    )
    (> 2 (external-forall-minimize (count pinkObjectMovedToRoomCenter:beachball:beachball) ) )
  )
)
(:scoring
  (+ (not (- 10 )
    )
    (- (count-shortest pinkObjectMovedToRoomCenter:golfball) )
  )
)
)

(define (game game-id-47) (:domain few-objects-room-v1)
(:setup
  (exists (?o2 - hexagonal_bin)
    (game-conserved
      (not
        (and
          (in_motion agent)
          (adjacent ?o2 ?o2)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b9 - ball ?h - ball)
      (and
        (preference objectInBuilding
          (exists (?w1 - hexagonal_bin)
            (then
              (once (in rug ?w1) )
              (hold-to-end (and (not (not (agent_holds top_drawer) ) ) (adjacent ?h ?h) ) )
              (once (or (< 1 1) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (= (+ (count objectInBuilding:top_drawer) (= (external-forall-minimize (* (* 10 (- (count objectInBuilding:blue_dodgeball:pink_dodgeball) )
            )
            (external-forall-maximize
              (count-once-per-objects objectInBuilding:yellow)
            )
          )
        )
        (<= 1 6 )
      )
      10
    )
    (+ (count-overlapping objectInBuilding:golfball) 6 )
  )
)
(:scoring
  15
)
)

(define (game game-id-48) (:domain few-objects-room-v1)
(:setup
  (exists (?r - game_object)
    (and
      (exists (?c6 - drawer)
        (forall (?l1 - hexagonal_bin)
          (game-optional
            (exists (?t1 - pillow ?ob ?o1 ?r ?w2 - dodgeball)
              (agent_holds ?r)
            )
          )
        )
      )
      (and
        (exists (?o5 - chair ?h - teddy_bear)
          (exists (?t2 - (either chair pink))
            (forall (?r - beachball ?f - hexagonal_bin)
              (and
                (game-conserved
                  (agent_holds ?r)
                )
              )
            )
          )
        )
      )
      (exists (?h ?d ?w - hexagonal_bin)
        (exists (?d - hexagonal_bin)
          (exists (?c6 - game_object)
            (game-optional
              (in ?d ?w)
            )
          )
        )
      )
      (exists (?h - shelf)
        (and
          (game-optional
            (and
              (adjacent_side pink ?h rug)
              (on room_center ?r)
              (agent_holds ?h)
            )
          )
          (and
            (and
              (game-conserved
                (agent_holds ?h)
              )
            )
          )
          (game-optional
            (not
              (in_motion ?h)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToRampToBed
      (exists (?b - flat_block ?d ?c ?b1 ?p2 ?b5 ?h - ball)
        (then
          (once (in_motion ?c) )
          (hold (agent_holds ?b1) )
          (once (and (on ?d ?d) (not (< (distance_side ?p2 ?d floor) 1) ) (< (distance ?b1 desk) (distance ?c agent)) ) )
        )
      )
    )
    (forall (?db - teddy_bear ?r ?b - hexagonal_bin ?b - game_object ?b - game_object ?b5 - pyramid_block)
      (and
        (preference throwToBinFromOppositeWall
          (exists (?b4 - dodgeball)
            (then
              (hold (in_motion ?b5) )
              (once (in ?b5 ?b4) )
              (once (agent_holds ?b5) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count-overlapping throwToBinFromOppositeWall:book) 8 )
    (* (> 9 (- (count ballThrownToRampToBed:blue_dodgeball:basketball) )
      )
      2
    )
  )
)
(:scoring
  2
)
)

(define (game game-id-49) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?w - hexagonal_bin)
      (game-optional
        (in ?w ?w)
      )
    )
  )
)
(:constraints
  (and
    (preference redDodgeballThrownToBin
      (exists (?b - cube_block ?o - cube_block ?c ?d - (either pillow cylindrical_block))
        (then
          (once (agent_holds ?c) )
          (once (not (in_motion ?c) ) )
        )
      )
    )
    (forall (?d - building ?w1 - hexagonal_bin)
      (and
        (preference throwFromBehindChairsInBin
          (exists (?w1 - chair ?c - cube_block)
            (then
              (hold (< 0 1) )
              (once (and (in desk ?c) (in tan ?c) (in_motion ?w1) (same_object ?c ?w1) (in_motion ?c) (in_motion ?c) (not (and (not (exists (?o2 - hexagonal_bin) (object_orientation ?o2 desk) ) ) (in_motion ?w1) (in_motion ?w1) ) ) ) )
              (hold (< 1 1) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count throwFromBehindChairsInBin:basketball:tall_cylindrical_block) (* 1 (count redDodgeballThrownToBin:doggie_bed) )
  )
)
(:scoring
  5
)
)

(define (game game-id-50) (:domain many-objects-room-v1)
(:setup
  (exists (?c - tan_cube_block ?h - hexagonal_bin)
    (game-conserved
      (not
        (or
          (and
            (and
              (and
                (agent_holds ?h)
                (touch ?h back)
              )
              (not
                (and
                  (not
                    (not
                      (and
                        (touch ?h ?h)
                        (and
                          (not
                            (and
                              (not
                                (adjacent bed bed)
                              )
                              (not
                                (agent_holds ?h)
                              )
                              (exists (?d - hexagonal_bin)
                                (in_motion ?h)
                              )
                              (touch ?h ?h)
                              (and
                                (agent_holds ?h)
                                (not
                                  (not
                                    (not
                                      (not
                                        (above sideways ?h)
                                      )
                                    )
                                  )
                                )
                              )
                              (and
                                (broken agent)
                                (and
                                  (adjacent ?h rug)
                                  (in_motion ?h)
                                  (not
                                    (adjacent_side ?h bed ?h)
                                  )
                                  (not
                                    (in_motion ?h)
                                  )
                                  (agent_holds bed)
                                  (game_over )
                                )
                                (= (x_position ?h) 0)
                              )
                            )
                          )
                          (in_motion ?h)
                        )
                      )
                    )
                  )
                  (agent_holds ?h)
                )
              )
              (in_motion ?h)
              (above ?h ?h)
            )
            (adjacent ?h ?h)
          )
          (in_motion ?h)
          (forall (?tb ?b - ball ?b5 - golfball)
            (not
              (not
                (in_motion ?h)
              )
            )
          )
          (not
            (and
              (agent_crouches )
              (<= (building_size ?h) 3)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference greenObjectMovedToRoomCenter
      (exists (?l - doggie_bed)
        (then
          (once (in_motion ?l) )
          (once (and (in_motion ?l) (not (agent_holds ?l) ) (and (and (in ?l ?l) (and (game_over ) (in_motion ?l) ) ) (same_type bed ?l) ) (and (not (in ?l ?l) ) (not (or (< (distance ?l ?l) 10) (on ?l desk) ) ) ) ) )
          (hold (in bed ?l) )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (count greenObjectMovedToRoomCenter:blue:red_pyramid_block) )
)
(:scoring
  4
)
)

(define (game game-id-51) (:domain many-objects-room-v1)
(:setup
  (forall (?d - hexagonal_bin)
    (not
      (exists (?o - dodgeball)
        (game-conserved
          (touch floor ?o)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockInTowerKnockedByDodgeball
      (exists (?d - building)
        (then
          (once (not (in ?d ?d) ) )
          (once (not (and (not (in_motion ?d) ) (and (and (adjacent_side ?d agent ?d ?d) (and (adjacent ?d ?d) (not (or (on ?d top_drawer) (in_motion ?d) ) ) ) ) (agent_holds ?d) ) ) ) )
          (hold (and (touch ?d ?d) (object_orientation ?d ?d) (not (not (in door agent) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (not
        (>= 2 3 )
      )
      (or
        (> (count blockInTowerKnockedByDodgeball:blue_dodgeball) (* 5 (* (* (count blockInTowerKnockedByDodgeball:beachball:basketball) 10 )
              (count-once blockInTowerKnockedByDodgeball:golfball)
            )
          )
        )
        (>= 3 (= (* (= 2 (* (count-increasing-measure blockInTowerKnockedByDodgeball:golfball:beachball) (count-same-positions blockInTowerKnockedByDodgeball) )
              )
              (count blockInTowerKnockedByDodgeball:wall)
              30
            )
            (count-once-per-objects blockInTowerKnockedByDodgeball:side_table:golfball)
          )
        )
      )
    )
    (< (count-once-per-objects blockInTowerKnockedByDodgeball:blue_pyramid_block) (count-once-per-objects blockInTowerKnockedByDodgeball:dodgeball) )
  )
)
(:scoring
  (* (external-forall-maximize (count-once blockInTowerKnockedByDodgeball:tall_cylindrical_block:blue_dodgeball) ) 2 )
)
)

(define (game game-id-52) (:domain medium-objects-room-v1)
(:setup
  (forall (?b - dodgeball)
    (exists (?c6 - hexagonal_bin)
      (exists (?db - game_object)
        (and
          (exists (?l2 - building ?f - game_object)
            (game-optional
              (agent_holds green)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - doggie_bed)
      (and
        (preference itemsTurnedOff
          (exists (?l - building ?b2 - hexagonal_bin ?p - cube_block)
            (then
              (once (not (same_type ?p desk) ) )
              (once (and (in_motion agent) (and (in ?p ?p) (agent_holds ?p) ) ) )
              (hold (on agent green) )
            )
          )
        )
        (preference ballThrownToRug
          (exists (?o5 - hexagonal_bin)
            (then
              (once (faces ?o5 ?o5) )
              (hold (agent_holds ?b) )
              (once (not (or (and (= 0 (distance ?o5 ?o5) 1) (< (distance ?o5 ?o5) (distance ?o5 ?o5)) (or (not (and (and (agent_holds ?b) (equal_x_position ?b ?o5) ) (agent_holds rug) ) ) (agent_holds ?b) ) (not (agent_holds ?b) ) (agent_holds ?o5) ) (in_motion room_center) ) ) )
            )
          )
        )
      )
    )
    (forall (?b3 - dodgeball ?p2 - dodgeball)
      (and
        (preference golfballUnderBridgeWithoutTouchingBlock
          (exists (?o - hexagonal_bin)
            (then
              (hold (not (exists (?l - hexagonal_bin) (agent_holds ?p2) ) ) )
              (hold (not (not (exists (?h - teddy_bear) (in_motion brown) ) ) ) )
              (once-measure (not (rug_color_under ?p2 bed) ) (distance_side ?o ?p2 ?o) )
            )
          )
        )
      )
    )
    (preference throwAttempt
      (exists (?g - dodgeball ?h - hexagonal_bin)
        (then
          (once (in_motion agent) )
          (once (is_setup_object ?h) )
          (hold (in ?h ?h) )
        )
      )
    )
  )
)
(:terminal
  (> (count-once-per-external-objects throwAttempt:basketball:brown) (count-once-per-objects ballThrownToRug:golfball) )
)
(:scoring
  (count-once-per-objects throwAttempt:doggie_bed:basketball)
)
)

(define (game game-id-53) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (exists (?r - (either dodgeball dodgeball))
        (and
          (game-optional
            (and
              (not
                (in_motion ?r)
              )
              (and
                (not
                  (and
                    (agent_holds ?r)
                    (and
                      (not
                        (and
                          (adjacent ?r ?r)
                          (in_motion ?r)
                        )
                      )
                      (not
                        (not
                          (and
                            (agent_holds ?r)
                            (not
                              (agent_holds ?r)
                            )
                          )
                        )
                      )
                    )
                  )
                )
                (on ?r ?r)
                (on rug ?r)
              )
              (object_orientation agent ?r)
            )
          )
        )
      )
      (exists (?r - doggie_bed)
        (game-conserved
          (in_motion ?r)
        )
      )
      (forall (?h - dodgeball)
        (not
          (or
            (game-optional
              (agent_holds ?h)
            )
            (and
              (game-conserved
                (not
                  (agent_holds ?h)
                )
              )
              (game-conserved
                (not
                  (not
                    (in ?h ?h)
                  )
                )
              )
              (exists (?p - ball ?db - hexagonal_bin)
                (and
                  (exists (?d - cylindrical_block)
                    (exists (?b - building ?b - (either tall_cylindrical_block top_drawer pyramid_block))
                      (forall (?ob - ball)
                        (exists (?h - pyramid_block)
                          (and
                            (game-conserved
                              (in_motion ?b)
                            )
                            (and
                              (game-optional
                                (and
                                  (on ?ob ?b)
                                  (< 7 1)
                                )
                              )
                              (exists (?o - hexagonal_bin)
                                (game-optional
                                  (in pink ?d)
                                )
                              )
                              (game-conserved
                                (not
                                  (in_motion ?b)
                                )
                              )
                            )
                            (game-optional
                              (not
                                (in_motion bed)
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                  (exists (?b - hexagonal_bin)
                    (game-conserved
                      (in_motion ?b)
                    )
                  )
                  (game-conserved
                    (not
                      (not
                        (or
                          (between ?h back ?h)
                          (agent_holds bed)
                        )
                      )
                    )
                  )
                )
              )
            )
            (forall (?g - hexagonal_bin)
              (game-conserved
                (adjacent ?g ?h)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownFromObjectToBin
      (exists (?s - hexagonal_bin ?d - golfball ?c - cube_block)
        (then
          (once (not (and (exists (?b - block) (and (in ?c ?c) (in_motion ?c) ) ) (agent_holds ?c) (and (exists (?h - (either yellow_cube_block hexagonal_bin yellow doggie_bed)) (not (on ?c ?h) ) ) (same_color room_center ?c) ) (adjacent ?c ?c) ) ) )
          (hold (in_motion ?c) )
        )
      )
    )
    (forall (?t - green_triangular_ramp)
      (and
        (preference cubeBlockThrowAttempt
          (exists (?o3 - hexagonal_bin ?b9 - building)
            (at-end
              (in_motion ?t)
            )
          )
        )
        (preference ballInOrOnBin
          (exists (?b4 - cube_block ?b - block)
            (then
              (once (in ?t ?t) )
              (once (agent_holds ?t) )
              (once (above ?b ?b) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (- (count-once-per-objects cubeBlockThrowAttempt:purple) )
    (count ballInOrOnBin:green)
  )
)
(:scoring
  (count ballThrownFromObjectToBin:blue_pyramid_block)
)
)

(define (game game-id-54) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (forall (?o5 - pillow)
      (and
        (not
          (and
            (on ?o5 ?o5)
            (is_setup_object ?o5)
          )
        )
        (agent_holds ?o5)
      )
    )
  )
)
(:constraints
  (and
    (preference thrownObjectHitsComputer
      (exists (?tb - building)
        (then
          (hold (adjacent ?tb agent) )
          (once (in ?tb ?tb) )
          (hold (is_setup_object ?tb) )
        )
      )
    )
  )
)
(:terminal
  (>= (count thrownObjectHitsComputer:doggie_bed) (count thrownObjectHitsComputer:dodgeball:dodgeball) )
)
(:scoring
  (count-once-per-objects thrownObjectHitsComputer:tall_cylindrical_block:pink)
)
)

(define (game game-id-55) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (agent_crouches )
    )
  )
)
(:constraints
  (and
    (forall (?b6 - red_dodgeball)
      (and
        (preference throwAttempt
          (exists (?b - hexagonal_bin)
            (then
              (hold (in_motion ?b) )
              (once (agent_holds pink) )
              (once (> 7 3) )
            )
          )
        )
      )
    )
    (preference itemsTurnedOff
      (exists (?d - doggie_bed)
        (then
          (once (and (in_motion ?d) (in_motion ?d) (and (or (agent_holds ?d) (in_motion ?d) ) (in_motion ?d) ) ) )
          (once (agent_holds ?d) )
          (once (not (on ?d ?d) ) )
          (hold (< 1 1) )
        )
      )
    )
    (preference otherObjectsOnDeskShelf
      (exists (?b - ball)
        (then
          (once (in_motion ?b) )
          (hold (in_motion ?b) )
          (once (agent_holds ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= 6 (* (count itemsTurnedOff:beachball:beachball) (* (count otherObjectsOnDeskShelf:dodgeball) (count itemsTurnedOff:beachball) )
    )
  )
)
(:scoring
  (* 10 8 )
)
)

(define (game game-id-56) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - curved_wooden_ramp)
      (and
        (game-conserved
          (adjacent_side ?c ?c desk)
        )
        (forall (?c4 - hexagonal_bin)
          (game-conserved
            (and
              (and
                (and
                  (< 2 (distance ?c4 ?c))
                )
                (and
                  (agent_holds ?c4)
                )
              )
              (agent_holds desk)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference baseBlockInTowerAtEnd
      (exists (?h - watch ?b - block)
        (then
          (hold (and (on ?b ?b) (or (in_motion ?b) (same_color ?b ?b) ) ) )
          (once (in_motion room_center) )
          (hold-for 9 (object_orientation ?b ?b) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count baseBlockInTowerAtEnd:dodgeball) (count baseBlockInTowerAtEnd:blue_dodgeball) )
    (>= 10 3 )
    (>= (+ (count-once-per-objects baseBlockInTowerAtEnd:alarm_clock) 10 )
      8
    )
  )
)
(:scoring
  (count-once-per-objects baseBlockInTowerAtEnd:dodgeball)
)
)

(define (game game-id-57) (:domain medium-objects-room-v1)
(:setup
  (exists (?d - game_object)
    (game-optional
      (not
        (exists (?c2 - dodgeball ?l4 - doggie_bed)
          (agent_holds pillow)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - triangular_ramp)
      (and
        (preference itemsTurnedOff
          (exists (?b - block ?h - dodgeball)
            (then
              (once (and (faces desk pink_dodgeball) (on ?h ?b) ) )
              (once (< 1 1) )
              (hold (forall (?b - hexagonal_bin) (not (on ?h brown) ) ) )
            )
          )
        )
        (preference watchOnShelf
          (exists (?o - dodgeball)
            (then
              (hold (adjacent desk ?b) )
              (once (and (and (in ?o ?b) (not (object_orientation room_center ?o) ) ) (and (exists (?c - beachball ?d2 - dodgeball) (< 1 3) ) (object_orientation ?b ?o) ) (not (agent_holds ?o) ) ) )
              (once (and (equal_z_position upright ?o) (open ?o) (on ?b ?o) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count itemsTurnedOff:green:brown) 3 )
)
(:scoring
  (count-shortest itemsTurnedOff:red)
)
)

(define (game game-id-58) (:domain medium-objects-room-v1)
(:setup
  (forall (?d - ball)
    (game-conserved
      (in_motion ?d)
    )
  )
)
(:constraints
  (and
    (preference dodgeballHitsPillowWithoutTouchingBlock
      (exists (?c - book ?c - hexagonal_bin)
        (at-end
          (and
            (not
              (agent_holds ?c)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* (external-forall-maximize 6 ) (/ (* (* (count-once dodgeballHitsPillowWithoutTouchingBlock:beachball) 10 30 (* (* (count dodgeballHitsPillowWithoutTouchingBlock:red) (count dodgeballHitsPillowWithoutTouchingBlock:red) 10 (count dodgeballHitsPillowWithoutTouchingBlock:pink_dodgeball) (count dodgeballHitsPillowWithoutTouchingBlock:top_drawer:pink) (count dodgeballHitsPillowWithoutTouchingBlock:orange) )
                6
              )
            )
            3
          )
          (count-once-per-objects dodgeballHitsPillowWithoutTouchingBlock:beachball)
        )
        (count dodgeballHitsPillowWithoutTouchingBlock:yellow)
      )
      15
    )
    (>= 8 10 )
    (>= 1 8 )
  )
)
(:scoring
  (count-once-per-objects dodgeballHitsPillowWithoutTouchingBlock:doggie_bed)
)
)

(define (game game-id-59) (:domain medium-objects-room-v1)
(:setup
  (forall (?b6 - dodgeball)
    (game-conserved
      (game_over )
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?b4 - hexagonal_bin ?o1 - cube_block)
        (then
          (hold-while (and (on ?o1 ?o1) (in door ?o1) (and (not (< (distance green_golfball ?o1) (distance ?o1 ?o1)) ) (agent_holds ?o1) ) (agent_holds ?o1) (in_motion ?o1) (and (adjacent_side ?o1 ?o1 ?o1 ?o1) (and (on ?o1 back) ) ) ) (and (opposite ?o1 ?o1) (in_motion ?o1) ) )
          (once (in_motion ?o1) )
        )
      )
    )
    (preference binKnockedOver
      (exists (?b - cube_block ?g ?p3 ?o1 - block ?c1 - (either pink basketball))
        (at-end
          (and
            (not
              (in_motion ?c1)
            )
            (and
              (on ?c1 ?c1)
              (adjacent ?c1 desk)
              (in_motion ?c1)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 4 (count-once-per-objects binKnockedOver:beachball) )
)
(:scoring
  (* (* (count binKnockedOver:pink_dodgeball) (count-once-per-objects binKnockedOver:cylindrical_block:pink_dodgeball) )
    (* (* 5 -10 (count-once-per-objects throwAttempt:basketball) )
      (* 5 (count-once-per-objects throwAttempt:blue_dodgeball:yellow_pyramid_block) )
    )
  )
)
)

(define (game game-id-60) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?o2 - hexagonal_bin ?c6 - (either tall_cylindrical_block key_chain))
      (game-optional
        (agent_holds ?c6)
      )
    )
  )
)
(:constraints
  (and
    (preference throwToBin
      (exists (?c6 - hexagonal_bin ?r2 - building)
        (then
          (once (rug_color_under ?r2 ?r2) )
          (once (in ?r2 ?r2) )
          (hold (and (in_motion ?r2) (adjacent ?r2 ?r2) ) )
        )
      )
    )
    (preference baseBlockInTowerAtEnd
      (exists (?o2 - game_object)
        (at-end
          (agent_holds ?o2)
        )
      )
    )
    (preference teddyBearLandsInBin
      (exists (?h - drawer)
        (then
          (once (agent_holds ?h) )
          (once (in_motion ?h) )
          (once (adjacent ?h ?h) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once baseBlockInTowerAtEnd) (- (count throwToBin:yellow:pink:basketball) )
  )
)
(:scoring
  (= 4 15 )
)
)

(define (game game-id-61) (:domain many-objects-room-v1)
(:setup
  (forall (?b2 - doggie_bed)
    (game-optional
      (in ?b2 agent)
    )
  )
)
(:constraints
  (and
    (preference throwBallToBinOffObject
      (exists (?d - hexagonal_bin)
        (then
          (hold (and (object_orientation ?d ?d) (on ?d desk) ) )
          (hold-while (broken ?d) (touch agent ?d) )
          (once (and (opposite ?d green_golfball) (in_motion ?d) ) )
        )
      )
    )
    (preference throwToBinFromDistance
      (exists (?d - red_pyramid_block ?c - game_object)
        (then
          (hold (not (< 9 (distance_side ?c ?c ?c ?c)) ) )
          (once (not (and (in_motion ?c) (and (not (in_motion ?c) ) (in_motion ?c) ) ) ) )
          (once (adjacent ?c ?c) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (or
        (>= (/ (* 15 (count-once throwToBinFromDistance:purple:dodgeball) (count-once throwToBinFromDistance:rug) )
            (* 3 3 )
          )
          (count throwToBinFromDistance:blue_pyramid_block:blue)
        )
        (and
          (and
            (not
              (= (/ (external-forall-maximize (> (+ (count throwToBinFromDistance:beachball) (< (* (+ (count-once-per-external-objects throwToBinFromDistance:blue) (* 8 12 10 )
                            )
                            2
                          )
                          (count-once-per-objects throwToBinFromDistance:tan)
                        )
                      )
                      (count-once-per-objects throwBallToBinOffObject:red)
                    )
                  )
                  (count throwToBinFromDistance:beachball)
                )
                (= 5 3 )
              )
            )
            (>= 2 (count throwToBinFromDistance:golfball) )
          )
          (>= 10 3 )
        )
        (> (* 5 (count-once-per-objects throwBallToBinOffObject:alarm_clock) )
          (* (* 7 2 )
            (count-once-per-objects throwBallToBinOffObject:dodgeball)
          )
        )
      )
      (>= (count throwBallToBinOffObject:cube_block:dodgeball) 10 )
    )
    (>= 5 10 )
  )
)
(:scoring
  30
)
)

(define (game game-id-62) (:domain few-objects-room-v1)
(:setup
  (forall (?c ?h ?b4 ?b4 ?c ?h - cylindrical_block ?c1 - hexagonal_bin ?p - block ?bl - dodgeball)
    (exists (?o - building)
      (and
        (game-optional
          (not
            (in_motion desk)
          )
        )
        (game-conserved
          (in_motion agent)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference bounceBallToBin
      (exists (?b - color)
        (then
          (hold-while (is_setup_object ?b) (not (exists (?s - cube_block ?d - ball) (agent_holds ?b) ) ) )
          (once (in_motion ?b) )
          (once (and (in_motion ?b) (exists (?c - dodgeball ?s - beachball ?o2 - (either dodgeball pillow)) (on ?o2 ?o2) ) ) )
        )
      )
    )
    (preference objectsHidden
      (exists (?r1 - cube_block)
        (then
          (once (not (and (and (> (distance ?r1 ?r1) (distance_side ?r1 ?r1 ?r1)) (in ?r1 ?r1) ) (and (agent_holds ?r1) (and (not (and (object_orientation bed ?r1) (touch ?r1 top_drawer) (on ?r1 ?r1) (same_color ?r1 ?r1) (not (in_motion ?r1) ) (or (touch ?r1 ?r1) ) ) ) (on ?r1 ?r1) ) ) ) ) )
          (hold (and (not (touch ?r1 bed) ) (in_motion door) (not (in_motion ?r1) ) ) )
          (once (and (not (not (and (and (agent_holds ?r1) (not (in_motion ?r1) ) ) (agent_holds ?r1) ) ) ) (in_motion ?r1) ) )
        )
      )
    )
    (preference throwBallToDoggieBed
      (exists (?l2 - curved_wooden_ramp)
        (then
          (once (in_motion ?l2) )
          (once (object_orientation ?l2 desk) )
          (hold (and (or (agent_holds ?l2) (in_motion floor) (> (distance_side bed south_west_corner ?l2 ?l2) (distance ?l2 desk)) ) (forall (?l4 - curved_wooden_ramp ?c2 - hexagonal_bin ?o3 - (either golfball cd cd pillow credit_card)) (or (and (same_type ?o3 ?o3) (in ?o3 drawer) (on floor rug) ) (not (not (agent_holds ?o3) ) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 4 (total-time) )
)
(:scoring
  3
)
)

(define (game game-id-63) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - wall)
      (forall (?t - watch)
        (game-conserved
          (game_over )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockKnockedFromBuildingInBin
      (exists (?b - pillow ?db - cube_block)
        (then
          (once (not (agent_holds ?db) ) )
          (once (on ?db ?db) )
          (hold (agent_holds desk) )
          (hold-while (on floor rug) (not (not (not (adjacent ?db ?db) ) ) ) )
          (hold (agent_holds back) )
          (once (agent_holds ?db) )
        )
      )
    )
    (preference blockInTowerAtEnd
      (exists (?w - curved_wooden_ramp ?d - shelf)
        (then
          (once (on bed agent) )
          (once (adjacent ?d agent) )
          (once (on ?d ?d) )
        )
      )
    )
    (preference throwAttemptFromDoor
      (exists (?h - dodgeball)
        (then
          (hold (agent_holds ?h) )
          (hold (on bed ?h) )
          (once (in_motion ?h) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (- (count-once-per-objects blockInTowerAtEnd:beachball) )
  )
)
(:scoring
  (= (* (count-measure throwAttemptFromDoor:pink) 2 )
    (* (- (* (count blockKnockedFromBuildingInBin:pink) (count blockKnockedFromBuildingInBin:yellow) (count throwAttemptFromDoor:dodgeball) (* (- (count throwAttemptFromDoor:pyramid_block) )
            (+ 3 (= 5 4 )
            )
          )
          15
          (+ 2 40 )
        )
      )
      (* (count blockInTowerAtEnd:cylindrical_block) 5 )
    )
  )
)
)

(define (game game-id-64) (:domain few-objects-room-v1)
(:setup
  (exists (?l3 - wall)
    (exists (?o - building ?bl ?b - hexagonal_bin)
      (game-optional
        (touch ?l3 floor)
      )
    )
  )
)
(:constraints
  (and
    (preference blockThrowAttempt
      (exists (?w2 ?c ?l - block ?l2 - hexagonal_bin)
        (then
          (once (in_motion blue) )
          (once (in_motion ?l2) )
          (once (agent_holds ?l2) )
        )
      )
    )
    (preference throwAttemptKnocksBlock
      (exists (?p2 - beachball)
        (then
          (hold-to-end (and (in_motion ?p2) (in_motion ?p2) ) )
          (once (and (in rug ?p2) (in_motion ?p2) ) )
          (hold (equal_z_position desk ?p2) )
        )
      )
    )
    (preference cubeThrownToBin
      (exists (?c3 - (either blue_cube_block dodgeball) ?h - dodgeball)
        (then
          (once (not (agent_holds ?h) ) )
          (hold (and (not (on ?h ?h) ) (agent_holds ?h) ) )
          (once (not (game_over ) ) )
        )
      )
    )
    (preference matchingBuildingBuilt
      (exists (?o - game_object)
        (then
          (hold (agent_holds ?o) )
          (once (adjacent_side ?o ?o ?o) )
          (once (exists (?b6 - game_object) (and (not (in_motion ?b6) ) (and (in_motion ?b6) (on front_left_corner ?o) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (<= 3 (count-total matchingBuildingBuilt:hexagonal_bin) )
    (>= (count matchingBuildingBuilt:dodgeball:beachball) (* (count-once-per-objects cubeThrownToBin:dodgeball) (* (count-shortest matchingBuildingBuilt:pink_dodgeball) 40 )
      )
    )
    (>= 3 (total-score) )
    (>= (- (+ 180 (count throwAttemptKnocksBlock:pyramid_block) (count-once-per-objects cubeThrownToBin:blue_dodgeball) (count cubeThrownToBin:dodgeball) 15 (+ (count throwAttemptKnocksBlock:dodgeball) (count-once blockThrowAttempt:basketball) )
          1
          (* 18 8 (* 3 2 )
          )
          (* (count matchingBuildingBuilt:blue_pyramid_block:beachball) (external-forall-maximize (* 0 )
            )
            (count-once cubeThrownToBin:blue_dodgeball)
          )
        )
      )
      3
    )
  )
)
(:scoring
  (* (count cubeThrownToBin:side_table) 5 )
)
)

(define (game game-id-65) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (game_over )
  )
)
(:constraints
  (and
    (forall (?p3 - green_triangular_ramp ?f - tall_cylindrical_block)
      (and
        (preference throwToBinFromDistance
          (exists (?d - cube_block)
            (then
              (once (not (on ?d ?f) ) )
              (hold (not (adjacent ?f west_wall) ) )
              (once (and (agent_holds ?d) (on ?d ?f) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 3 30 )
    (>= (count-once-per-objects throwToBinFromDistance:dodgeball) (count-once throwToBinFromDistance) )
  )
)
(:scoring
  (external-forall-minimize
    3
  )
)
)

(define (game game-id-66) (:domain medium-objects-room-v1)
(:setup
  (exists (?r2 - (either doggie_bed rug watch) ?b7 - hexagonal_bin)
    (game-optional
      (adjacent ?b7 ?b7)
    )
  )
)
(:constraints
  (and
    (preference dodgeballThrownToBinFromDesk
      (exists (?o ?b - game_object)
        (then
          (hold (touch ?o ?b) )
        )
      )
    )
    (preference pillowThrownToDoggieBed
      (exists (?c - watch)
        (then
          (hold (or (and (not (not (adjacent ?c ?c) ) ) (not (not (not (agent_holds ?c) ) ) ) ) (agent_holds ?c) ) )
          (hold (not (agent_holds ?c) ) )
          (once (agent_holds ?c) )
        )
      )
    )
  )
)
(:terminal
  (> 3 (* (count dodgeballThrownToBinFromDesk:basketball) (count-once-per-objects dodgeballThrownToBinFromDesk:basketball) )
  )
)
(:scoring
  (* (not (total-score) ) (+ (* (count pillowThrownToDoggieBed:dodgeball) (count dodgeballThrownToBinFromDesk:yellow:blue_cube_block) (count-overlapping dodgeballThrownToBinFromDesk:red) (* (count pillowThrownToDoggieBed:book) (count-once-per-objects dodgeballThrownToBinFromDesk:cylindrical_block) )
        (* (+ (count-once-per-objects dodgeballThrownToBinFromDesk:pink:tan) (count dodgeballThrownToBinFromDesk:orange) )
          (count pillowThrownToDoggieBed:orange)
        )
      )
      (count dodgeballThrownToBinFromDesk:doggie_bed:dodgeball)
      (count-once-per-external-objects dodgeballThrownToBinFromDesk)
      5
    )
  )
)
)

(define (game game-id-67) (:domain few-objects-room-v1)
(:setup
  (forall (?b - teddy_bear)
    (game-optional
      (in_motion ?b)
    )
  )
)
(:constraints
  (and
    (forall (?c - curved_wooden_ramp)
      (and
        (preference objectInBuilding
          (exists (?c - ball)
            (then
              (hold (on ?c ?c) )
              (once (not (not (and (agent_holds ?c) (same_type ?c ?c) ) ) ) )
              (once (agent_holds left) )
            )
          )
        )
        (preference blueObjectMovedToRoomCenter
          (then
            (once (or (agent_holds ?c) (and (not (agent_holds ?c) ) (not (exists (?c - teddy_bear) (same_color ?c ?c) ) ) ) ) )
            (hold-while (not (not (and (agent_holds ?c) (and (>= (distance desk bed) 1) (not (agent_holds ?c) ) ) (> (distance ?c ?c) 2) ) ) ) (agent_holds rug) )
          )
        )
      )
    )
    (forall (?h - pillow ?t2 - curved_wooden_ramp)
      (and
        (preference teddyBearHitsBall
          (exists (?o3 - hexagonal_bin ?p3 - doggie_bed)
            (then
              (once (agent_holds ?t2) )
              (hold-while (not (agent_holds ?t2) ) (on ?t2 ?t2) (agent_holds ?t2) )
              (once (and (not (agent_holds ?p3) ) (> 1 4) ) )
              (once (adjacent ?t2 desk) )
            )
          )
        )
      )
    )
    (forall (?c5 - teddy_bear ?b2 - game_object)
      (and
        (preference itemsTurnedOff
          (exists (?h - pillow)
            (at-end
              (in ?b2 ?h)
            )
          )
        )
        (preference throwBallToBinOffObject
          (exists (?h - hexagonal_bin)
            (at-end
              (and
                (in ?b2 agent)
                (agent_holds rug)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects objectInBuilding:yellow:dodgeball) 3 )
)
(:scoring
  (+ (* 10 (count itemsTurnedOff:tall_cylindrical_block) )
    (count itemsTurnedOff:dodgeball)
  )
)
)

(define (game game-id-68) (:domain many-objects-room-v1)
(:setup
  (forall (?w1 - hexagonal_bin)
    (game-optional
      (agent_holds agent)
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?d - dodgeball)
        (at-end
          (exists (?db - (either golfball pen))
            (not
              (in_motion top_shelf)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (= 1 12 )
)
(:scoring
  (count-once-per-external-objects throwAttempt:beachball)
)
)

(define (game game-id-69) (:domain many-objects-room-v1)
(:setup
  (forall (?t - dodgeball)
    (exists (?h - wall)
      (and
        (and
          (game-optional
            (not
              (agent_holds ?t)
            )
          )
        )
        (exists (?p1 - game_object)
          (exists (?c - (either lamp dodgeball dodgeball) ?o - (either triangle_block chair key_chain) ?r - ball)
            (and
              (forall (?w2 - hexagonal_bin)
                (exists (?d ?c ?o2 ?g ?p3 - (either lamp golfball laptop))
                  (game-conserved
                    (not
                      (agent_holds ?r)
                    )
                  )
                )
              )
              (exists (?b1 - dodgeball ?b5 - color ?d - cube_block)
                (forall (?b - pyramid_block)
                  (game-conserved
                    (not
                      (in_motion ?r)
                    )
                  )
                )
              )
              (or
                (game-optional
                  (and
                    (in_motion rug)
                    (in_motion ?p1)
                  )
                )
                (game-optional
                  (in floor ?t)
                )
              )
            )
          )
        )
        (exists (?h - building)
          (exists (?r ?b - chair)
            (game-conserved
              (not
                (or
                  (and
                    (not
                      (between ?b ?r ?r)
                    )
                    (agent_holds ?h)
                  )
                  (agent_holds ?h)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToDrawerOrBin
      (exists (?s - dodgeball)
        (then
          (hold (not (in_motion ?s) ) )
          (once (not (on ?s ?s) ) )
          (once (in_motion ?s) )
        )
      )
    )
    (preference ballThrownOntoTarget
      (exists (?o2 - dodgeball ?t - hexagonal_bin)
        (then
          (hold (in ?t bed) )
          (once (on ?t desk) )
          (once (in_motion ?t) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects throwToDrawerOrBin:pink_dodgeball) 6 )
)
(:scoring
  (count-shortest throwToDrawerOrBin:dodgeball:brown)
)
)

(define (game game-id-70) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (in_motion upright)
  )
)
(:constraints
  (and
    (preference blockPickedUp
      (exists (?d - curved_wooden_ramp ?c - building ?b5 - ball)
        (then
          (hold-to-end (and (and (in ?b5 ?b5) (and (and (touch ?b5 ?b5) (not (and (in ?b5 ?b5) (or (forall (?g - cube_block) (exists (?h - (either cellphone laptop)) (on ?g green_golfball) ) ) ) ) ) ) (and (in ?b5 desk) (in_motion desk) ) (touch desk ?b5) ) ) (in_motion ?b5) ) )
          (once (in ?b5 ?b5) )
          (once (in_motion ?b5) )
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (<= (* (count blockPickedUp:yellow) 20 )
        (+ (* (+ (total-score) (count-once blockPickedUp:top_drawer:hexagonal_bin) )
            (not
              (/
                8
                (* (count blockPickedUp:triangle_block) (count blockPickedUp:dodgeball:basketball) )
              )
            )
          )
          3
        )
      )
      (>= (>= 2 (* (/ (and 3 ) (count blockPickedUp:pink_dodgeball) ) (count blockPickedUp:golfball) )
        )
        (count blockPickedUp:beachball:green)
      )
    )
  )
)
(:scoring
  (count blockPickedUp:beachball)
)
)

(define (game game-id-71) (:domain medium-objects-room-v1)
(:setup
  (exists (?r - dodgeball)
    (exists (?ob - hexagonal_bin)
      (exists (?o - (either wall pyramid_block) ?w2 - triangular_ramp)
        (exists (?d1 - hexagonal_bin ?c3 - wall)
          (game-conserved
            (and
              (and
                (not
                  (and
                    (not
                      (adjacent_side ?w2 ?c3 ?w2 ?w2)
                    )
                    (not
                      (exists (?c4 - dodgeball)
                        (and
                          (and
                            (same_color ?r ?w2)
                            (not
                              (in ?c4 ?w2)
                            )
                          )
                          (on ?w2 brown)
                          (between ?w2 ?c3 ?c3)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectsHidden
      (exists (?c6 - pyramid_block)
        (then
          (hold (not (> (distance ?c6 ?c6) 7) ) )
          (hold (adjacent ?c6 ?c6) )
          (once (not (touch ?c6 ?c6) ) )
        )
      )
    )
    (preference dodgeballAndBasketballInBin
      (exists (?r - dodgeball ?d - color)
        (then
          (hold-for 7 (not (not (is_setup_object ?d) ) ) )
          (once (not (agent_holds ?d) ) )
          (once (agent_holds ?d) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects dodgeballAndBasketballInBin:brown:dodgeball) (+ (count-increasing-measure dodgeballAndBasketballInBin:blue_pyramid_block) (count-total dodgeballAndBasketballInBin:pink) )
  )
)
(:scoring
  (- (count dodgeballAndBasketballInBin:pink_dodgeball:golfball) )
)
)

(define (game game-id-72) (:domain few-objects-room-v1)
(:setup
  (forall (?h - building ?b - hexagonal_bin)
    (exists (?c - chair ?b ?o5 - (either cube_block cellphone))
      (game-conserved
        (agent_holds agent)
      )
    )
  )
)
(:constraints
  (and
    (forall (?o2 - bridge_block)
      (and
        (preference objectToBinOnFirstTry
          (exists (?w ?w - hexagonal_bin)
            (then
              (once (adjacent_side ?w ?o2 agent) )
            )
          )
        )
      )
    )
    (preference throwAttempt
      (exists (?h - hexagonal_bin)
        (then
          (hold-to-end (and (agent_holds rug) (adjacent pink_dodgeball ?h) (and (not (on agent ?h) ) (in_motion ?h) ) (not (agent_holds ?h) ) (and (not (in ?h floor) ) (in_motion ?h) ) (touch ?h ?h) (on ?h pink_dodgeball) (and (not (and (on ?h ?h) (and (in_motion ?h) (agent_holds ?h) ) ) ) (and (agent_holds desk) (agent_holds ?h) ) ) (on ?h west_wall) (and (in ?h ?h) (not (and (exists (?c - (either key_chain desktop cube_block) ?o - dodgeball) (not (in agent rug) ) ) (not (adjacent_side ?h upright ?h ?h) ) (exists (?c - color) (on ?h ?c) ) ) ) ) ) )
          (any)
          (once (not (not (not (object_orientation ?h ?h) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count throwAttempt:dodgeball) (* (count-shortest objectToBinOnFirstTry:alarm_clock) (* 3 (count-once-per-objects throwAttempt) (count-once-per-objects throwAttempt:yellow) )
    )
  )
)
(:scoring
  (+ 5 (+ (+ (= (* (* (count-once-per-objects objectToBinOnFirstTry:red:doggie_bed) 2 )
            6
            (= (+ (count-once-per-objects objectToBinOnFirstTry:dodgeball) (count objectToBinOnFirstTry:golfball) )
              (+ 8 7 )
              (count-once-per-objects objectToBinOnFirstTry:red)
            )
          )
          (count throwAttempt:golfball)
        )
        (<= (count-once-per-objects objectToBinOnFirstTry:hexagonal_bin) (count throwAttempt:tan:beachball) )
        (- 100 )
      )
      (+ 20 (count throwAttempt) 5 )
    )
  )
)
)

(define (game game-id-73) (:domain medium-objects-room-v1)
(:setup
  (exists (?o1 ?d2 - ball)
    (game-conserved
      (and
        (opposite ?d2 side_table)
        (and
          (not
            (agent_holds bed)
          )
          (exists (?l1 - wall ?o2 - ball)
            (not
              (in_motion door)
            )
          )
          (and
            (not
              (on ?d2 ?d2)
            )
            (agent_holds ?o1)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballsInPlace
      (exists (?w1 - game_object)
        (then
          (once (in_motion ?w1) )
          (once (or (adjacent_side ?w1 ?w1 ?w1 blue) ) )
          (once (in ?w1 ?w1) )
        )
      )
    )
  )
)
(:terminal
  (and
    (<= (* (* (+ 1 (+ (+ (count dodgeballsInPlace:dodgeball:cube_block:golfball) (count-once-per-objects dodgeballsInPlace:dodgeball) 8 )
              4
              0.5
            )
          )
          (- 10 )
          10
        )
        (* (+ 5 (* 8 (count dodgeballsInPlace:pink:dodgeball:blue_cube_block) (* (count dodgeballsInPlace:purple) 2 )
            )
          )
          (count dodgeballsInPlace:green:book)
        )
      )
      (count-once-per-objects dodgeballsInPlace:purple)
    )
    (> (count dodgeballsInPlace:beachball) 0 )
  )
)
(:scoring
  (count dodgeballsInPlace:dodgeball:dodgeball)
)
)

(define (game game-id-74) (:domain few-objects-room-v1)
(:setup
  (exists (?h - (either beachball cylindrical_block) ?l4 - block ?ob - dodgeball)
    (game-conserved
      (in_motion ?ob)
    )
  )
)
(:constraints
  (and
    (forall (?r - teddy_bear)
      (and
        (preference throwOverRamp
          (exists (?c - hexagonal_bin)
            (then
              (once (and (in_motion ?c) (on ?r ?c) ) )
              (hold (and (in_motion ?r) (not (faces bridge_block floor) ) ) )
              (once (in floor ?c) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (>= (* 100 (- (+ (+ (* 1 (+ (count-once-per-objects throwOverRamp:basketball) 1 )
              )
              9
            )
            10
          )
        )
      )
      (count-once-per-objects throwOverRamp:orange:yellow)
    )
  )
)
(:scoring
  (count-once-per-objects throwOverRamp:dodgeball:blue_dodgeball:doggie_bed)
)
)

(define (game game-id-75) (:domain few-objects-room-v1)
(:setup
  (forall (?b - hexagonal_bin ?p - game_object)
    (exists (?r - cube_block)
      (and
        (exists (?d - hexagonal_bin ?g - pyramid_block)
          (forall (?d - cube_block ?d - game_object)
            (and
              (game-optional
                (not
                  (> 8 3)
                )
              )
              (and
                (and
                  (forall (?c6 - shelf ?d - hexagonal_bin)
                    (exists (?r ?c4 ?c6 - shelf ?h - game_object)
                      (and
                        (game-conserved
                          (not
                            (in ?g ?d)
                          )
                        )
                      )
                    )
                  )
                )
              )
              (game-optional
                (agent_holds ?g)
              )
            )
          )
        )
        (forall (?d - hexagonal_bin)
          (and
            (exists (?w2 - bridge_block)
              (exists (?h - hexagonal_bin ?b9 - building)
                (forall (?s - dodgeball)
                  (forall (?h - beachball)
                    (game-conserved
                      (in_motion front)
                    )
                  )
                )
              )
            )
          )
        )
        (game-conserved
          (= 1 1)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference gameBlockFound
      (exists (?db - (either blue_cube_block laptop wall) ?o - (either alarm_clock dodgeball) ?g - dodgeball)
        (then
          (once (in pink_dodgeball ?g) )
          (once (and (adjacent ?g ?g) (not (agent_holds ?g) ) ) )
          (once (toggled_on ?g) )
        )
      )
    )
    (preference golfballInBinFromPillow
      (exists (?p2 ?d2 ?l1 - chair ?d - hexagonal_bin ?h - red_dodgeball)
        (then
          (once (not (adjacent ?h ?h) ) )
          (once (agent_holds ?h) )
          (hold (and (not (in_motion ?h) ) (agent_holds blue) ) )
        )
      )
    )
    (preference blockCorrectlyPicked
      (exists (?c6 - red_dodgeball ?s - hexagonal_bin)
        (then
          (hold (touch ?s ?s) )
          (once (not (in rug ?s) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (external-forall-minimize (- (external-forall-maximize (count-once-per-objects blockCorrectlyPicked:alarm_clock:dodgeball) ) )
    )
  )
)
(:scoring
  3
)
)

(define (game game-id-76) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (game-conserved
        (same_color pink_dodgeball room_center)
      )
    )
    (forall (?g - tan_cube_block)
      (and
        (and
          (game-optional
            (in ?g agent)
          )
          (game-conserved
            (on front ?g)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockInTowerAtEnd
      (exists (?d - color)
        (then
          (once (in_motion ?d) )
          (once (in ?d ?d) )
          (hold (on ?d ?d) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (count blockInTowerAtEnd:doggie_bed) (total-time) )
  )
)
(:scoring
  (total-time)
)
)

(define (game game-id-77) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (and
        (adjacent agent desk)
        (in floor room_center)
      )
    )
    (exists (?ob - ball ?r - (either wall pillow cylindrical_block))
      (and
        (forall (?h - curved_wooden_ramp)
          (game-optional
            (and
              (not
                (<= 1 2)
              )
              (not
                (same_color ?r ?h)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference itemsHidingScreens
      (exists (?c - hexagonal_bin)
        (then
          (once (agent_holds pink_dodgeball) )
          (once (agent_holds bed) )
          (hold (in_motion ?c) )
        )
      )
    )
    (preference throwAttempt
      (exists (?b7 ?b ?b5 - (either watch))
        (then
          (hold-while (not (not (on agent ?b7) ) ) (agent_holds ?b5) (not (adjacent ?b7 ?b5) ) (agent_holds pink) )
          (once (touch ?b yellow) )
          (once (touch ?b5 ?b) )
        )
      )
    )
    (preference bigObjectThrownToBed
      (exists (?o2 - golfball)
        (then
          (once (not (in_motion ?o2) ) )
          (hold (in_motion ?o2) )
          (once (agent_holds ?o2) )
        )
      )
    )
  )
)
(:terminal
  (not
    (> 2 (count throwAttempt:purple:beachball) )
  )
)
(:scoring
  (count throwAttempt:blue_pyramid_block)
)
)

(define (game game-id-78) (:domain few-objects-room-v1)
(:setup
  (forall (?c5 - dodgeball)
    (game-optional
      (agent_holds ?c5)
    )
  )
)
(:constraints
  (and
    (preference bookOnDeskShelf
      (exists (?h - hexagonal_bin)
        (then
          (any)
          (once (and (and (not (and (and (in_motion ?h) (in ?h ?h) ) (on ?h agent) (not (agent_holds ?h) ) ) ) (= (distance ?h ?h) 3) ) (and (and (or (adjacent ?h ?h) ) (in_motion pink_dodgeball) (in ?h floor) (not (agent_holds ?h) ) (object_orientation bed ?h) (agent_holds bed) (agent_holds bed) ) (not (not (< (distance ?h ?h) 6) ) ) ) ) )
          (hold-while (and (on ?h ?h) (not (touch front ?h) ) ) (adjacent ?h ?h) )
        )
      )
    )
  )
)
(:terminal
  (= (+ 9 (total-time) )
    (= (* (count bookOnDeskShelf:dodgeball) (count bookOnDeskShelf:golfball:book) )
      (external-forall-maximize
        (+ (count-shortest bookOnDeskShelf:dodgeball) (* (count bookOnDeskShelf:yellow) 2 (+ (* (count-shortest bookOnDeskShelf:basketball) (external-forall-maximize (count bookOnDeskShelf:pink) ) )
              (count bookOnDeskShelf:basketball:red_pyramid_block:hexagonal_bin)
            )
          )
          5
          (count-measure bookOnDeskShelf:basketball:doggie_bed)
          (* (count bookOnDeskShelf:red_pyramid_block:basketball) (count bookOnDeskShelf:purple:bed:dodgeball) )
          (+ 8 (* (- (count-longest bookOnDeskShelf:dodgeball) (count bookOnDeskShelf:red) ) (* (count-increasing-measure bookOnDeskShelf:dodgeball) 1 )
            )
          )
        )
      )
      (count-once bookOnDeskShelf:pyramid_block:triangle_block)
    )
  )
)
(:scoring
  (* (+ (- (total-time) )
      3
    )
    (count bookOnDeskShelf:doggie_bed)
  )
)
)

(define (game game-id-79) (:domain medium-objects-room-v1)
(:setup
  (not
    (forall (?g - game_object)
      (and
        (forall (?t2 - hexagonal_bin)
          (and
            (exists (?d - game_object)
              (and
                (game-conserved
                  (agent_holds ?g)
                )
              )
            )
          )
        )
        (and
          (exists (?b - wall)
            (and
              (and
                (game-optional
                  (> (distance ?b bed) 1)
                )
              )
              (and
                (and
                  (and
                    (and
                      (game-conserved
                        (and
                          (not
                            (< (x_position ?g) 2)
                          )
                          (on ?g ?g)
                        )
                      )
                    )
                  )
                  (game-conserved
                    (not
                      (not
                        (adjacent_side ?g ?g ?g)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - building)
      (and
        (preference woodenBlockMovedFromRugToDesk
          (exists (?b2 - block ?h - block)
            (then
              (forall-sequence (?w - beachball)
                (then
                  (once (agent_holds ?h) )
                  (hold (in ?h ?h) )
                  (hold (agent_crouches ) )
                )
              )
              (hold (on room_center ?b) )
              (once (and (above ?b ?b) (adjacent_side ?h ?b ?b upright) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= 2 5 )
)
(:scoring
  (count-once-per-objects woodenBlockMovedFromRugToDesk:basketball)
)
)

(define (game game-id-80) (:domain many-objects-room-v1)
(:setup
  (exists (?h - hexagonal_bin ?h - building ?c - hexagonal_bin)
    (and
      (game-conserved
        (in_motion ?c)
      )
    )
  )
)
(:constraints
  (and
    (preference failedThrowAttempt
      (exists (?h - doggie_bed)
        (then
          (once (not (and (in_motion ?h) (in_motion agent) ) ) )
          (once (exists (?b - triangular_ramp) (and (agent_holds ?h) (exists (?t2 ?c - (either floor cube_block)) (on ?h ?h) ) (not (agent_holds ?h) ) (touch ?b ?h) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects failedThrowAttempt:beachball) (* 10 (- 10 )
    )
  )
)
(:scoring
  (count failedThrowAttempt:hexagonal_bin)
)
)

(define (game game-id-81) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds floor)
  )
)
(:constraints
  (and
    (preference throwAttemptKnocksBlock
      (exists (?d2 - dodgeball ?o4 - chair)
        (then
          (hold (in ?o4 floor) )
          (once (agent_holds agent) )
          (hold-while (< (distance rug ?o4) 1) (and (agent_holds ?o4) (in_motion ?o4) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (> 7 10 )
    (>= (count throwAttemptKnocksBlock:golfball:basketball) 10 )
    (>= (count throwAttemptKnocksBlock:tall_cylindrical_block) (count-measure throwAttemptKnocksBlock:yellow:red) )
  )
)
(:scoring
  6
)
)

(define (game game-id-82) (:domain few-objects-room-v1)
(:setup
  (exists (?c - cube_block)
    (forall (?o - cube_block ?t - chair)
      (game-conserved
        (not
          (and
            (not
              (in_motion ?c)
            )
            (agent_holds ?t)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - dodgeball)
      (and
        (preference blockInTowerKnocked
          (exists (?o ?b6 - teddy_bear)
            (then
              (once (< 0 (distance ?b bed)) )
              (hold (in_motion ?b) )
              (once (not (not (on ?b6 bed) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* 2 (+ (count-once-per-objects blockInTowerKnocked:basketball:orange) (- (count-once-per-objects blockInTowerKnocked:pink) )
      )
      (* (* (= (count blockInTowerKnocked:dodgeball) (count-once blockInTowerKnocked:basketball:rug) )
          (+ (* (* (+ 10 5 )
                (- (count-once-per-objects blockInTowerKnocked:dodgeball) )
              )
              (* 2 (count blockInTowerKnocked:hexagonal_bin) (count blockInTowerKnocked:blue_pyramid_block) (+ (* (* (= (count-unique-positions blockInTowerKnocked:red) (* (* (* (* 6 (* 8 3 )
                              )
                              (count blockInTowerKnocked:pink)
                            )
                            (* 0 50 )
                            (count-once-per-objects blockInTowerKnocked:red)
                            60
                            (* (count-once-per-objects blockInTowerKnocked:red) 2 (count blockInTowerKnocked:pink_dodgeball) 5 3 20 )
                          )
                          (= (+ (count-once-per-external-objects blockInTowerKnocked:pink) (* (* (count-once-per-objects blockInTowerKnocked:green:rug) 40 )
                                (count-once blockInTowerKnocked:hexagonal_bin)
                              )
                              (count blockInTowerKnocked:blue_dodgeball)
                            )
                          )
                        )
                      )
                      (external-forall-minimize
                        (* (+ (count blockInTowerKnocked:dodgeball) 10 )
                          (count blockInTowerKnocked:beachball)
                        )
                      )
                    )
                    (count blockInTowerKnocked:dodgeball:blue_pyramid_block)
                    (* (count blockInTowerKnocked:dodgeball:golfball) 1 )
                    (count blockInTowerKnocked)
                  )
                  5
                )
                (- 10 )
              )
            )
            (count-longest blockInTowerKnocked:basketball:green)
          )
          (* (= (count blockInTowerKnocked:yellow) 300 )
            (external-forall-maximize
              (* (or (* (count blockInTowerKnocked:doggie_bed:basketball) (count-once-per-external-objects blockInTowerKnocked:brown) (count-once-per-objects blockInTowerKnocked:purple) 0 (count blockInTowerKnocked:basketball) (total-score) )
                  3
                  (count blockInTowerKnocked:yellow)
                )
                (count blockInTowerKnocked:dodgeball)
              )
            )
          )
          (= (- (* (count-once-per-objects blockInTowerKnocked:beachball:alarm_clock) (count-once-per-external-objects blockInTowerKnocked:red) )
            )
            60
            (count-total blockInTowerKnocked:golfball)
          )
        )
        (count blockInTowerKnocked:basketball:pink_dodgeball)
      )
      (count-same-positions blockInTowerKnocked:hexagonal_bin)
      (count blockInTowerKnocked:dodgeball)
      2
    )
    6
  )
)
(:scoring
  (+ 18 (count blockInTowerKnocked:purple) )
)
)

(define (game game-id-83) (:domain medium-objects-room-v1)
(:setup
  (exists (?d - chair)
    (and
      (exists (?b7 - game_object)
        (game-conserved
          (agent_holds ?d)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference teddyBearLandsInBin
      (exists (?b - cube_block)
        (then
          (once (on ?b rug) )
          (hold (touch ?b ?b) )
          (hold (in_motion ?b) )
          (hold (and (rug_color_under ?b ?b) (in_motion ?b) ) )
          (hold (in_motion ?b) )
        )
      )
    )
    (preference ballThrownHitsAgent
      (exists (?b - doggie_bed ?c - beachball)
        (then
          (once (not (agent_holds ?c) ) )
          (once (not (and (and (above agent agent) (not (on pink_dodgeball ?c) ) (agent_holds ?c) ) (not (game_start ) ) (not (toggled_on ?c) ) (and (and (and (agent_holds ?c) (agent_holds ?c) (not (and (and (game_start ) (rug_color_under floor ?c) ) (and (on ?c ?c) (not (agent_holds ?c) ) ) ) ) (on agent ?c) (in_motion rug) (on ?c ?c) (in ?c agent) ) (agent_holds ?c) ) (not (and (and (agent_holds ?c) (same_color ?c ?c) ) (not (not (on ?c ?c) ) ) (on ?c ?c) ) ) ) ) ) )
          (once (in ?c bed) )
        )
      )
    )
  )
)
(:terminal
  (> (count teddyBearLandsInBin:golfball) (+ (count teddyBearLandsInBin:purple) (* (count teddyBearLandsInBin:doggie_bed) (count teddyBearLandsInBin:dodgeball) )
      (* (* (count-once-per-objects ballThrownHitsAgent:basketball) 5 )
        (+ (* (count-once-per-objects ballThrownHitsAgent:dodgeball:orange) (count teddyBearLandsInBin:red) )
          3
        )
      )
    )
  )
)
(:scoring
  (count ballThrownHitsAgent)
)
)

(define (game game-id-84) (:domain few-objects-room-v1)
(:setup
  (exists (?b - (either key_chain block beachball) ?b10 - dodgeball ?p - hexagonal_bin)
    (and
      (game-optional
        (in_motion agent)
      )
      (and
        (and
          (and
            (exists (?b2 - ball)
              (forall (?p1 - curved_wooden_ramp)
                (forall (?w1 - hexagonal_bin)
                  (exists (?h - (either golfball golfball))
                    (game-conserved
                      (agent_holds ?w1)
                    )
                  )
                )
              )
            )
          )
        )
        (game-conserved
          (agent_holds ?p)
        )
      )
      (and
        (game-conserved
          (not
            (agent_holds ?p)
          )
        )
        (exists (?g - (either pyramid_block doggie_bed))
          (and
            (game-optional
              (not
                (same_color ?g ?p)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballKnocksTeddy
      (exists (?c2 - dodgeball ?f - ball ?w - hexagonal_bin)
        (then
          (hold (and (rug_color_under ?w ?w) (and (and (in_motion ?w) (and (agent_holds ?w) (agent_holds bed) ) ) (and (not (agent_holds ?w) ) (or (not (in_motion ?w) ) (and (in_motion ?w) ) (touch ?w ?w) ) ) (not (not (touch ?w ?w) ) ) ) ) )
          (hold-while (in ?w ?w) (on ?w ?w) )
          (once (agent_holds ?w) )
        )
      )
    )
  )
)
(:terminal
  (< 7 5 )
)
(:scoring
  (count-once-per-external-objects ballKnocksTeddy:dodgeball)
)
)

(define (game game-id-85) (:domain many-objects-room-v1)
(:setup
  (exists (?g - (either yellow_cube_block book))
    (game-conserved
      (adjacent ?g agent)
    )
  )
)
(:constraints
  (and
    (forall (?b - doggie_bed ?c2 - dodgeball)
      (and
        (preference failedThrowAttempt
          (exists (?d - curved_wooden_ramp)
            (at-end
              (agent_holds ?c2)
            )
          )
        )
      )
    )
    (preference objectThrownFromRug
      (exists (?o - ball ?r - cube_block)
        (at-end
          (not
            (in_motion ?r)
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count failedThrowAttempt:blue_pyramid_block) (* (count-once-per-objects objectThrownFromRug:white) 15 )
  )
)
(:scoring
  (- 3 )
)
)

(define (game game-id-86) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (agent_holds front_left_corner)
  )
)
(:constraints
  (and
    (forall (?d - pillow)
      (and
        (preference throwAttempt
          (exists (?b6 - building ?h - game_object)
            (then
              (hold (agent_holds ?d) )
              (once (and (adjacent blue ?h) (not (touch ?d ?h) ) ) )
              (once (in ?d ?d) )
            )
          )
        )
        (preference itemsBroken
          (exists (?h - bridge_block ?b - curved_wooden_ramp)
            (then
              (hold (not (and (in_motion agent) (and (< (distance ?b ?b) 1) (in ?b ?d) (on ?d ?b) ) ) ) )
              (once (not (in_motion ?d) ) )
              (once (<= (distance ?d ?d) 1) )
            )
          )
        )
      )
    )
    (preference gameBlockFound
      (exists (?b9 - dodgeball)
        (then
          (once (not (in_motion ?b9) ) )
          (once (not (agent_holds ?b9) ) )
          (once (and (agent_holds ?b9) (and (not (in_motion ?b9) ) (not (agent_holds ?b9) ) ) ) )
        )
      )
    )
    (preference throwFromBehindChairsInBin
      (exists (?p1 - golfball ?h - doggie_bed)
        (then
          (once (or (agent_holds ?h) (not (touch ?h ?h) ) (and (agent_holds ?h) (same_type ?h ?h) ) ) )
          (forall-sequence (?b - doggie_bed)
            (then
              (once (<= 1 (distance green bed)) )
              (hold (not (< (distance ?h ?b) (distance agent ?h)) ) )
              (hold (not (and (agent_holds ?b) (in_motion ?b) ) ) )
            )
          )
          (once (not (in floor upright) ) )
          (hold (exists (?c5 - wall ?b - hexagonal_bin ?l4 - game_object) (opposite agent ?l4) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count gameBlockFound:purple:doggie_bed) (or (* (count-overlapping gameBlockFound:green:basketball) 3 3 )
    )
  )
)
(:scoring
  (+ 9 0 )
)
)

(define (game game-id-87) (:domain few-objects-room-v1)
(:setup
  (forall (?p1 - block ?h - block ?h - triangular_ramp)
    (and
      (exists (?b - block)
        (and
          (game-optional
            (= 1 (distance ?h desk) 1)
          )
          (game-optional
            (not
              (and
                (in_motion ?h)
                (and
                  (is_setup_object back)
                  (and
                    (same_type ?h ?b)
                  )
                  (agent_holds agent)
                )
              )
            )
          )
          (exists (?d - triangular_ramp ?b5 - block)
            (game-conserved
              (on ?b5 agent)
            )
          )
        )
      )
      (game-optional
        (not
          (agent_holds ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?db - (either cd cellphone cd book))
      (and
        (preference objectMovedRoomSide
          (exists (?bl - hexagonal_bin)
            (then
              (hold (in_motion ?db) )
              (hold (and (and (and (in_motion ?bl) (exists (?o - doggie_bed) (exists (?b3 ?d - bridge_block) (broken ?db) ) ) ) (and (between ?bl ?bl ?bl) (not (not (not (and (in_motion front) (on ?db front) ) ) ) ) (not (agent_holds bed) ) (adjacent ?bl ?db) (and (agent_holds ?db) (in ?bl agent) ) (on ?db front) (and (not (is_setup_object ?bl) ) (and (in_motion ?db) (agent_holds ?db) ) ) (and (and (agent_holds ?bl) (not (not (not (agent_holds ?bl) ) ) ) ) (on ?db ?bl) ) ) ) (on agent agent) (and (not (same_color ?bl ?db) ) (in_motion ?bl) ) (not (and (< (distance ?bl ?db) 9) (agent_holds ?bl) ) ) ) )
              (once (not (< (distance ?bl room_center) 2) ) )
              (hold (< 0.5 (distance west_wall ?db)) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 5 (total-score) )
  )
)
(:scoring
  (* (count objectMovedRoomSide:yellow) (* 1 (= 3 2 )
    )
  )
)
)

(define (game game-id-88) (:domain medium-objects-room-v1)
(:setup
  (exists (?c - cube_block)
    (game-conserved
      (not
        (same_type ?c ?c)
      )
    )
  )
)
(:constraints
  (and
    (preference teddyBearLandsInBin
      (exists (?bl - pyramid_block)
        (then
          (hold (and (and (touch ?bl ?bl) (not (equal_x_position ?bl ?bl) ) ) (toggled_on ?bl) (and (in_motion ?bl) (< 0.5 (distance_side pillow ?bl ?bl ?bl)) ) ) )
          (once (not (agent_holds ?bl) ) )
          (hold (in ?bl ?bl) )
        )
      )
    )
    (preference ballThrownToRampToBed
      (exists (?h - cube_block)
        (then
          (hold (in ?h ?h) )
          (hold (and (in_motion upright) (and (in_motion ?h) (touch front agent) ) ) )
          (hold-for 5 (not (not (on side_table ?h) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 2 (count-once-per-objects ballThrownToRampToBed:pink) )
  )
)
(:scoring
  3
)
)

(define (game game-id-89) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?o - color ?h - watch)
      (game-optional
        (in_motion ?h)
      )
    )
  )
)
(:constraints
  (and
    (forall (?l2 - hexagonal_bin)
      (and
        (preference dodgeballBouncesOnceToDoggieBed
          (exists (?o - doggie_bed)
            (then
              (once (on door ?o) )
              (hold-to-end (in ?o agent) )
              (hold (not (< 7 (distance bed ?l2)) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (or
        (> (+ 1 3 )
          (count dodgeballBouncesOnceToDoggieBed:beachball)
        )
        (>= 4 (count dodgeballBouncesOnceToDoggieBed:dodgeball) )
      )
      (or
        (>= (count-once dodgeballBouncesOnceToDoggieBed:hexagonal_bin) 3 )
        (>= (count dodgeballBouncesOnceToDoggieBed:red) (external-forall-maximize (count dodgeballBouncesOnceToDoggieBed:yellow_pyramid_block:doggie_bed:hexagonal_bin) ) )
      )
    )
  )
)
(:scoring
  6
)
)

(define (game game-id-90) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?c4 - ball)
      (exists (?o4 - triangular_ramp ?h - curved_wooden_ramp ?d - hexagonal_bin ?b2 - curved_wooden_ramp)
        (game-optional
          (not
            (agent_holds ?c4)
          )
        )
      )
    )
    (and
      (exists (?h - hexagonal_bin)
        (forall (?o - (either laptop golfball) ?s - hexagonal_bin)
          (exists (?b - cylindrical_block)
            (forall (?b7 - hexagonal_bin)
              (exists (?b ?l - ball ?b4 - hexagonal_bin ?h - (either desktop dodgeball laptop))
                (game-conserved
                  (< 1 1)
                )
              )
            )
          )
        )
      )
      (and
        (exists (?d - (either dodgeball flat_block cylindrical_block))
          (exists (?o - hexagonal_bin)
            (and
              (game-conserved
                (on ?o ?d)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b7 - wall)
      (and
        (preference ballThrownOntoTarget
          (exists (?c2 - hexagonal_bin)
            (then
              (hold-to-end (exists (?p1 - hexagonal_bin) (< (x_position ?p1) 4) ) )
              (once (on pink ?c2) )
              (hold-to-end (not (agent_holds floor) ) )
            )
          )
        )
      )
    )
    (preference blockToBinFromRug
      (exists (?s - hexagonal_bin ?h - beachball ?x - hexagonal_bin)
        (then
          (hold (on ?x ?x) )
          (hold (agent_holds ?x) )
          (once (and (agent_holds ?x) ) )
        )
      )
    )
  )
)
(:terminal
  (< 2 6 )
)
(:scoring
  (+ (= (count-once-per-objects ballThrownOntoTarget) 9 )
    (count ballThrownOntoTarget:hexagonal_bin)
  )
)
)

(define (game game-id-91) (:domain many-objects-room-v1)
(:setup
  (and
    (not
      (game-optional
        (game_over )
      )
    )
  )
)
(:constraints
  (and
    (preference ballToBinFromBed
      (exists (?c - flat_block)
        (then
          (once (is_setup_object blue) )
        )
      )
    )
  )
)
(:terminal
  (<= (count-increasing-measure ballToBinFromBed:side_table) (count ballToBinFromBed:golfball) )
)
(:scoring
  (* (count-once ballToBinFromBed:basketball) (count ballToBinFromBed:golfball:dodgeball) (+ (* (count ballToBinFromBed:red:dodgeball) (count ballToBinFromBed:doggie_bed) )
      (count-once ballToBinFromBed:dodgeball)
    )
  )
)
)

(define (game game-id-92) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?c6 - ball)
      (exists (?d - building ?h - hexagonal_bin ?o - hexagonal_bin)
        (game-optional
          (not
            (exists (?o4 - dodgeball)
              (and
                (and
                  (game_over )
                  (touch ?o4 ?c6)
                )
                (equal_x_position ?c6 ?o4)
                (in_motion green_golfball)
                (touch ?o4 ?c6)
                (or
                  (in ?c6 ?o4)
                  (on ?c6 ?o)
                  (in_motion ?o)
                )
                (in_motion rug)
                (agent_holds ?o4)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference beachballOnRug
      (exists (?h - chair)
        (then
          (forall-sequence (?o ?c - hexagonal_bin ?b9 - (either ball blue_cube_block))
            (then
              (once (opposite ?b9 ?h) )
              (once (in_motion right) )
            )
          )
          (hold-while (adjacent ?h ?h) (touch ?h rug) )
          (hold (in_motion ?h) )
          (once (agent_holds ?h) )
        )
      )
    )
  )
)
(:terminal
  (> (count beachballOnRug:basketball:green) (count-total beachballOnRug:yellow) )
)
(:scoring
  (- (+ (* (count-once-per-objects beachballOnRug:purple) (> 2 (- 10 )
        )
      )
      (count-once-per-objects beachballOnRug:golfball)
    )
  )
)
)

(define (game game-id-93) (:domain medium-objects-room-v1)
(:setup
  (exists (?p3 - building ?l3 - dodgeball ?d2 - ball)
    (forall (?o4 - hexagonal_bin)
      (game-conserved
        (adjacent ?d2 front)
      )
    )
  )
)
(:constraints
  (and
    (preference blockToBinFromRug
      (exists (?b - hexagonal_bin)
        (then
          (once (and (and (in ?b ?b) (in_motion ?b) ) (and (agent_holds ?b) (< (distance ?b ?b) (distance ?b ?b)) ) (and (>= 10 1) (or (opposite top_drawer ?b) (> 1 (distance ?b ?b)) ) ) ) )
          (once (in_motion ?b) )
          (hold (not (in bed rug) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 2 (and (* (* (* (count blockToBinFromRug:blue_dodgeball) 2 )
            (count blockToBinFromRug:pink)
          )
          5
          (count-shortest blockToBinFromRug:dodgeball)
          (count-once-per-objects blockToBinFromRug:hexagonal_bin:basketball:red)
          (count blockToBinFromRug:alarm_clock)
          (* (count blockToBinFromRug:blue) (count-once-per-objects blockToBinFromRug:blue_pyramid_block) )
        )
        3
        (count blockToBinFromRug:basketball)
      )
    )
    (> (* 20 3 )
      (count blockToBinFromRug:red_pyramid_block)
    )
  )
)
(:scoring
  (external-forall-maximize
    (>= (* (* (= (count-same-positions blockToBinFromRug:red:beachball) 4 )
          (/
            (count-once-per-objects blockToBinFromRug:dodgeball)
            (* (* (+ (/ 2 9 ) 8 )
                2
              )
              (+ 1 (count-once-per-objects blockToBinFromRug:doggie_bed) )
            )
          )
          (count blockToBinFromRug:blue_dodgeball)
        )
        (count-once blockToBinFromRug:pink_dodgeball)
        (* (count blockToBinFromRug:yellow) 10 )
      )
      10
    )
  )
)
)

(define (game game-id-94) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (forall (?ob - doggie_bed ?o - chair)
        (forall (?r - hexagonal_bin ?d - chair)
          (game-conserved
            (agent_holds ?d)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockInTowerKnockedByDodgeball
      (exists (?b4 - (either yellow cube_block))
        (then
          (once (on bridge_block bed) )
          (once (and (and (agent_holds ?b4) (and (is_setup_object agent) (in ?b4 rug) ) (on bed ?b4) ) ) )
          (once (and (= 5 3) (on left ?b4) (in_motion ?b4) ) )
        )
      )
    )
  )
)
(:terminal
  (<= (count blockInTowerKnockedByDodgeball:basketball) (* 5 (count blockInTowerKnockedByDodgeball:pink) 15 )
  )
)
(:scoring
  6
)
)

(define (game game-id-95) (:domain few-objects-room-v1)
(:setup
  (forall (?g - (either cylindrical_block desktop))
    (or
      (game-conserved
        (and
          (in_motion ?g)
          (and
            (in_motion ?g)
            (forall (?o1 - hexagonal_bin ?l2 - color)
              (and
                (not
                  (touch ?g ?g)
                )
                (and
                  (not
                    (adjacent desk ?g)
                  )
                  (and
                    (in ?l2 ?l2)
                    (agent_holds ?g)
                  )
                  (not
                    (or
                      (in_motion ?l2)
                    )
                  )
                  (adjacent ?g ?g)
                )
              )
            )
          )
        )
      )
      (exists (?h ?x - cylindrical_block)
        (game-optional
          (in_motion ?h)
        )
      )
      (exists (?c3 - hexagonal_bin ?b - dodgeball)
        (and
          (and
            (exists (?h - (either bed main_light_switch))
              (game-conserved
                (and
                  (agent_holds ?g)
                  (and
                    (and
                      (< (building_size ?b) 1)
                    )
                    (on ?h ?b)
                  )
                )
              )
            )
          )
          (game-conserved
            (agent_holds agent)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballFromRugToBin
      (exists (?b - game_object)
        (then
          (hold (on ?b desk) )
          (once (not (in_motion ?b) ) )
          (hold (not (in_motion ?b) ) )
        )
      )
    )
    (forall (?b - ball)
      (and
        (preference ballThrownFromDoor
          (exists (?l2 - dodgeball)
            (then
              (hold (adjacent ?b bed) )
              (once (not (on ?b ?b) ) )
              (once (and (not (and (touch room_center floor) (in_motion ?b) (and (rug_color_under ?l2 pink) (and (or (same_color ?l2 desk) (equal_z_position ?l2 ?l2) ) (in_motion ?l2) ) ) ) ) (on agent ?b) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 4 5 )
)
(:scoring
  (* (+ (- (count ballThrownFromDoor:pink_dodgeball) )
      8
      (+ 10 (* (not 10 ) (* (count-once-per-external-objects ballThrownFromDoor:dodgeball:beachball) 30 )
        )
      )
      1
    )
    30
  )
)
)

(define (game game-id-96) (:domain few-objects-room-v1)
(:setup
  (exists (?c6 - (either laptop cube_block dodgeball))
    (exists (?h - game_object ?l - hexagonal_bin)
      (and
        (forall (?c - (either cylindrical_block triangle_block))
          (forall (?d - hexagonal_bin)
            (game-optional
              (agent_holds ?c6)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwInBin
      (exists (?l - (either pyramid_block mug))
        (at-end
          (agent_holds ?l)
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (or
        (and
          (>= (count throwInBin:red:beachball) 3 )
          (= 1 (count-once-per-objects throwInBin:red_pyramid_block:dodgeball) )
        )
      )
      (>= (+ (* 9 (* 15 (external-forall-minimize (/ 5 (* (total-time) 2 )
                )
              )
            )
          )
          6
        )
        10
      )
      (> 3 (* (count throwInBin:pink_dodgeball:dodgeball:beachball) 6 )
      )
      (or
        (> (total-score) (external-forall-minimize (count throwInBin:dodgeball) ) )
        (and
          (>= 300 15 )
          (> (* (count throwInBin:golfball) (count-overlapping throwInBin:hexagonal_bin) 3 )
            (count throwInBin:beachball)
          )
        )
        (>= 2 (count throwInBin:dodgeball:golfball) )
        (>= 20 7 )
      )
    )
    (or
      (and
        (>= (count throwInBin:hexagonal_bin) (* (count-once-per-objects throwInBin:basketball:block) (* (external-forall-maximize (total-time) ) (* 8 (count-once-per-objects throwInBin:beachball) )
            )
          )
        )
        (= 3 (count-once-per-objects throwInBin:basketball:blue_dodgeball) )
        (>= (* (count-longest throwInBin:orange) 3 )
          (external-forall-maximize
            (count throwInBin:pink_dodgeball)
          )
        )
      )
      (<= (* (+ (* 3 (+ (count-once-per-objects throwInBin:blue_cube_block) (/ 1 (count throwInBin:dodgeball) ) )
              (count-once-per-objects throwInBin:book)
              10
              (count-once-per-objects throwInBin:doggie_bed)
              4
            )
            2
          )
          4
        )
        (total-time)
      )
    )
    (>= 3 (count-longest throwInBin:dodgeball) )
  )
)
(:scoring
  (count throwInBin:orange)
)
)

(define (game game-id-97) (:domain few-objects-room-v1)
(:setup
  (forall (?g ?c3 ?b4 ?s ?r1 ?c3 - beachball ?d - ball ?b - doggie_bed)
    (and
      (forall (?h ?h - teddy_bear)
        (or
          (and
            (exists (?d2 - hexagonal_bin)
              (and
                (game-conserved
                  (and
                    (in_motion pink)
                    (agent_holds ?h)
                  )
                )
                (exists (?b8 - pillow)
                  (and
                    (forall (?h - drawer)
                      (forall (?c - drawer ?o - ball)
                        (and
                          (and
                            (game-conserved
                              (on ?b ?o)
                            )
                          )
                          (game-conserved
                            (and
                              (in ?d2 ?b)
                              (in_motion ?h)
                            )
                          )
                          (game-conserved
                            (and
                              (on ?h ?h)
                              (agent_holds ?h)
                            )
                          )
                          (game-conserved
                            (agent_holds ?b)
                          )
                        )
                      )
                    )
                  )
                )
                (exists (?b ?b - wall ?b - hexagonal_bin)
                  (game-conserved
                    (not
                      (rug_color_under ?d2 front)
                    )
                  )
                )
              )
            )
          )
          (forall (?s - cube_block ?c - dodgeball)
            (and
              (and
                (exists (?o2 - ball)
                  (game-conserved
                    (equal_z_position ?b ?b)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?g ?h - ball)
      (and
        (preference pillowThrownToDoggieBed
          (exists (?d - hexagonal_bin)
            (then
              (hold (in_motion ?h) )
              (once (in ?d ?g) )
              (once (or (not (or (in_motion bed) ) ) (on agent ?g) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (count pillowThrownToDoggieBed:red:beachball) )
)
(:scoring
  (count-once-per-objects pillowThrownToDoggieBed:dodgeball)
)
)

(define (game game-id-98) (:domain few-objects-room-v1)
(:setup
  (forall (?l4 - dodgeball)
    (exists (?t2 - curved_wooden_ramp)
      (game-optional
        (on ?l4 ?t2)
      )
    )
  )
)
(:constraints
  (and
    (preference throwToRampToBin
      (exists (?h - block)
        (then
          (once (touch ?h ?h) )
          (once (and (is_setup_object ?h) (in_motion ?h) ) )
          (hold (and (not (not (not (= (distance ?h ?h) (distance rug ?h)) ) ) ) (= (distance_side floor ?h ?h) 2) ) )
        )
      )
    )
    (preference throwBallToBin
      (exists (?h - color)
        (at-end
          (agent_holds ?h)
        )
      )
    )
    (preference bounceBallToBin
      (exists (?b8 - block ?b2 - bridge_block)
        (then
          (hold (and (equal_z_position ?b2 room_center) (agent_holds ?b2) ) )
          (once (adjacent ?b2 ?b2) )
          (once (agent_holds ?b2) )
        )
      )
    )
    (preference redDodgeballThrownToBinWithoutTouchingFloor
      (exists (?c3 - dodgeball ?d - dodgeball)
        (at-end
          (agent_holds ?d)
        )
      )
    )
    (preference throwBallToBinOffObject
      (exists (?f - (either cylindrical_block tall_cylindrical_block))
        (then
          (hold (touch ?f floor) )
          (once (not (open ?f) ) )
          (once (touch ?f ?f) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (<= (+ (<= (= (* (* (count throwToRampToBin:blue_dodgeball:blue_dodgeball) 10 )
                (+ (- (* (* 5 1 )
                      15
                    )
                  )
                  (* (count-once-per-objects bounceBallToBin:rug) (+ (+ (count-once-per-objects throwBallToBin:pyramid_block) (count-once-per-objects throwBallToBin:dodgeball) )
                      (count throwToRampToBin:yellow)
                    )
                  )
                )
              )
            )
            (count throwBallToBin:dodgeball)
          )
          (count redDodgeballThrownToBinWithoutTouchingFloor:yellow_cube_block)
        )
        (count-once-per-objects throwToRampToBin:pink_dodgeball:dodgeball)
      )
      (and
        (or
          (>= (* (count throwBallToBinOffObject:doggie_bed:beachball) (count-longest bounceBallToBin:white) )
            (* (count-unique-positions throwBallToBin:book) (* (- (total-time) )
                (* 4 (count redDodgeballThrownToBinWithoutTouchingFloor:blue_cube_block:dodgeball:hexagonal_bin) )
              )
            )
          )
        )
      )
    )
    (or
      (not
        (>= 12 (count throwToRampToBin:golfball) )
      )
      (>= (<= 6 (* 10 (count throwBallToBin:pink) )
        )
        (external-forall-maximize
          6
        )
      )
    )
    (or
      (>= (+ (count bounceBallToBin:red:dodgeball:dodgeball) 8 )
        (+ (* -10 (count-once throwToRampToBin:green) (* 3 (* 15 (* (count-once-per-objects throwBallToBinOffObject:dodgeball) (count throwToRampToBin:golfball) (count redDodgeballThrownToBinWithoutTouchingFloor:tan) )
                18
                8
              )
            )
          )
          (* (count throwBallToBinOffObject:dodgeball:golfball) (* (count throwToRampToBin:dodgeball) 5 )
          )
        )
      )
      (>= 7 (count throwToRampToBin:yellow_cube_block:blue_cube_block) )
    )
  )
)
(:scoring
  (* (count-unique-positions bounceBallToBin:basketball) (* (count-unique-positions throwBallToBin:beachball) )
    2
    (count-once-per-objects throwBallToBin:dodgeball)
    (/
      5
      (count redDodgeballThrownToBinWithoutTouchingFloor:red:book)
    )
    100
    (count-once-per-objects throwBallToBin:beachball)
    5
    3
  )
)
)

(define (game game-id-99) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?c - hexagonal_bin)
      (game-conserved
        (is_setup_object rug)
      )
    )
  )
)
(:constraints
  (and
    (forall (?w2 - doggie_bed)
      (and
        (preference ballThrownToChair
          (exists (?d - red_dodgeball)
            (then
              (once (above ?w2 ?w2) )
              (once (in_motion ?w2) )
              (once (on bed ?w2) )
            )
          )
        )
        (preference throwAttempt
          (exists (?ob - color)
            (then
              (once (exists (?b4 - teddy_bear ?b6 - hexagonal_bin) (rug_color_under ?ob ?w2) ) )
              (once (not (agent_holds ?ob) ) )
              (hold-for 6 (in_motion front_left_corner) )
            )
          )
        )
      )
    )
    (preference laptopAndBookInPlace
      (exists (?h - (either cylindrical_block cylindrical_block) ?g - hexagonal_bin)
        (at-end
          (< (building_size ?g) 1)
        )
      )
    )
    (forall (?b3 - block)
      (and
        (preference throwObjectToBin
          (exists (?o2 - dodgeball)
            (then
              (once (or (on ?o2 ?b3) (agent_holds ?b3) ) )
              (any)
              (once (not (or (in_motion bed) (exists (?w2 - dodgeball) (not (agent_holds ?o2) ) ) (on ?b3 ?b3) ) ) )
            )
          )
        )
        (preference throwFromBehindChairsInBin
          (exists (?l3 - (either wall pen))
            (then
              (once (and (agent_holds ?b3) (and (and (on door upright) (exists (?f - ball) (and (agent_holds ?l3) (in ?b3 ?f) ) ) ) (on agent bed) ) ) )
              (hold (and (and (equal_z_position ?b3 ?b3) (is_setup_object desk) ) (and (on ?b3 ?l3) (toggled_on ?l3) (not (on ?b3 ?l3) ) ) ) )
              (hold (exists (?t - teddy_bear ?o4 - doggie_bed) (not (agent_holds ?o4) ) ) )
            )
          )
        )
      )
    )
    (preference itemsBroken
      (exists (?o3 - (either top_drawer dodgeball) ?l2 - shelf ?c5 - hexagonal_bin)
        (then
          (hold (in_motion ?c5) )
          (hold (in_motion ?c5) )
          (once (and (not (on ?c5 ?c5) ) (in_motion ?c5) ) )
        )
      )
    )
    (preference redDodgeballThrownToBinWithoutTouchingFloor
      (exists (?l4 - ball)
        (then
          (hold (agent_holds ?l4) )
          (once-measure (in_motion ?l4) (distance ?l4 pink_dodgeball) )
          (once (not (in agent floor) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (count laptopAndBookInPlace:book) 8 )
    3
  )
)
(:scoring
  (* 3 (count-once throwAttempt:purple) )
)
)

(define (game game-id-100) (:domain many-objects-room-v1)
(:setup
  (and
    (or
      (and
        (and
          (and
            (and
              (and
                (exists (?h - hexagonal_bin)
                  (exists (?c - dodgeball)
                    (game-conserved
                      (not
                        (in_motion ?h)
                      )
                    )
                  )
                )
              )
            )
          )
        )
        (exists (?l - building ?b - block ?g - game_object)
          (game-conserved
            (< (distance desk ?g) 3)
          )
        )
      )
      (exists (?c6 - dodgeball)
        (exists (?w - (either cylindrical_block beachball) ?b - red_dodgeball ?b - (either tall_cylindrical_block cellphone))
          (forall (?o - (either pen basketball))
            (or
              (exists (?h - block)
                (game-conserved
                  (on door ?c6)
                )
              )
              (game-optional
                (in_motion ?o)
              )
              (forall (?h - cube_block)
                (game-conserved
                  (on ?b ?c6)
                )
              )
            )
          )
        )
      )
      (and
        (and
          (exists (?p - hexagonal_bin)
            (not
              (game-conserved
                (and
                  (agent_holds ?p)
                  (equal_z_position ?p ?p)
                )
              )
            )
          )
        )
      )
    )
    (exists (?w2 - ball)
      (exists (?b4 - dodgeball)
        (game-conserved
          (and
            (<= 4 10)
            (and
              (and
                (not
                  (between floor rug ?w2)
                )
                (agent_holds rug)
              )
            )
            (not
              (equal_x_position ?w2 ?b4)
            )
            (opposite ?b4 ?b4)
            (adjacent ?b4 ?w2)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference ballThrownHitsAgent
          (exists (?l - block ?c - pyramid_block ?c - hexagonal_bin)
            (then
              (once (< (distance ?c bed) (distance ?c pink_dodgeball)) )
              (hold-to-end (in ?c ?b) )
              (once (broken ?b) )
            )
          )
        )
        (preference objectInBuilding
          (exists (?b - (either tall_cylindrical_block dodgeball pillow))
            (then
              (once (on ?b ?b) )
              (once (and (on ?b bed) (touch ?b agent) ) )
              (once (and (same_color ?b ?b) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (= 15 )
    (total-score)
  )
)
(:scoring
  (* (* 3 (* (- (count ballThrownHitsAgent:basketball:doggie_bed) )
        (* (count-total ballThrownHitsAgent:basketball) (not 5 ) (count ballThrownHitsAgent:green) 20 )
      )
    )
    6
  )
)
)

(define (game game-id-101) (:domain few-objects-room-v1)
(:setup
  (and
    (game-optional
      (in_motion agent)
    )
  )
)
(:constraints
  (and
    (preference pillowThrownToDoggieBed
      (exists (?t - ball ?f - ball)
        (then
          (once (< 1 (distance agent ?f)) )
          (once (not (same_color ?f agent) ) )
          (any)
        )
      )
    )
  )
)
(:terminal
  (>= 18 (count pillowThrownToDoggieBed:beachball) )
)
(:scoring
  (<= (count pillowThrownToDoggieBed:basketball) (count pillowThrownToDoggieBed:orange) )
)
)

(define (game game-id-102) (:domain few-objects-room-v1)
(:setup
  (exists (?b - building ?b - (either cd hexagonal_bin))
    (game-conserved
      (on ?b desk)
    )
  )
)
(:constraints
  (and
    (preference cubeThrownToBin
      (exists (?w2 - dodgeball ?h - (either flat_block wall triangle_block))
        (at-end
          (in_motion ?h)
        )
      )
    )
  )
)
(:terminal
  (>= 5 1 )
)
(:scoring
  (count cubeThrownToBin:green)
)
)

(define (game game-id-103) (:domain medium-objects-room-v1)
(:setup
  (forall (?c2 - ball)
    (forall (?db ?d - dodgeball)
      (exists (?c - sliding_door ?d - block)
        (and
          (exists (?o - hexagonal_bin ?c6 - game_object ?l - bridge_block)
            (forall (?t - hexagonal_bin ?c5 - (either cylindrical_block doggie_bed))
              (exists (?b6 - dodgeball)
                (and
                  (exists (?o2 - dodgeball)
                    (exists (?d - dodgeball)
                      (exists (?c6 - hexagonal_bin ?h - hexagonal_bin ?db - hexagonal_bin)
                        (game-conserved
                          (agent_holds desk)
                        )
                      )
                    )
                  )
                  (exists (?r - (either alarm_clock cellphone))
                    (game-conserved
                      (not
                        (and
                          (in_motion ?d)
                          (in_motion ?d)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
          (game-conserved
            (or
              (object_orientation door floor)
              (in ?d ?c2)
            )
          )
          (game-conserved
            (in_motion ?db)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - triangular_ramp ?h - cylindrical_block)
      (and
        (preference throwToRampToBin
          (exists (?c - (either pyramid_block mug key_chain))
            (then
              (hold-while (in_motion ?c) (agent_holds ?h) (>= (distance ?c desk) 2) (not (and (exists (?b - hexagonal_bin ?h - pillow ?b - game_object) (agent_holds ?h) ) (and (in bed ?c) (agent_holds ?h) ) ) ) )
              (once (adjacent ?c ?c) )
              (once (agent_holds ?h) )
            )
          )
        )
      )
    )
    (forall (?h - pyramid_block)
      (and
        (preference bigObjectThrownToBed
          (exists (?s - dodgeball ?b7 - curved_wooden_ramp)
            (then
              (once (not (and (exists (?d - building) (in_motion ?b7) ) (in_motion ?h) (not (agent_holds main_light_switch) ) ) ) )
              (once (in ?h ?h) )
              (once (not (not (forall (?l - desk_shelf ?h - block) (on bed ?b7) ) ) ) )
            )
          )
        )
        (preference throwBallToBin
          (exists (?h - building)
            (then
              (once-measure (agent_holds ?h) (distance ?h ?h) )
              (once (agent_holds desk) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 3 7 )
)
(:scoring
  4
)
)

(define (game game-id-104) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?o1 - teddy_bear)
      (game-conserved
        (exists (?db - wall ?t - curved_wooden_ramp)
          (and
            (agent_holds ?t)
            (in_motion ?t)
            (in ?t ?o1)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference cubeBlockInBuilding
      (exists (?d ?r - (either ball wall))
        (then
          (hold-while (faces ?d ?r) (and (not (not (in_motion ?r) ) ) (game_over ) ) )
          (once (on ?d west_wall) )
          (once (and (agent_holds ?r) (touch ?d ?d) ) )
        )
      )
    )
    (preference ballThrownThroughRampAndBlocksToBin
      (exists (?o - wall ?h ?l1 - ball)
        (at-end
          (and
            (in_motion ?h)
            (exists (?c3 - hexagonal_bin ?t - cube_block)
              (on ?l1 ?l1)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (> (count ballThrownThroughRampAndBlocksToBin:beachball) 3 )
    (count-once ballThrownThroughRampAndBlocksToBin:side_table)
  )
)
(:scoring
  (count ballThrownThroughRampAndBlocksToBin:basketball)
)
)

(define (game game-id-105) (:domain many-objects-room-v1)
(:setup
  (forall (?r ?c2 - cube_block)
    (game-conserved
      (in_motion ?c2)
    )
  )
)
(:constraints
  (and
    (preference dodgeballThrownToBin
      (exists (?o - hexagonal_bin)
        (then
          (hold-while (on front ?o) (< (distance ?o ?o) (distance ?o ?o)) )
          (once (on ?o ?o) )
          (hold (forall (?b2 - sliding_door) (> (distance ?o ?o) (distance ?o desk)) ) )
          (once (agent_holds ?o) )
        )
      )
    )
    (preference basketMadeFromRug
      (exists (?db - curved_wooden_ramp ?b - ball ?c4 - hexagonal_bin)
        (then
          (hold (in_motion ?c4) )
          (once (not (not (agent_holds ?c4) ) ) )
          (once (not (in ?c4 ?c4) ) )
        )
      )
    )
    (preference golfballUnderBridgeWithoutTouchingBlock
      (exists (?d2 ?b - cube_block)
        (then
          (once (not (in_motion ?b) ) )
          (once (and (exists (?c - game_object) (not (in_motion agent) ) ) (not (in_motion ?d2) ) (not (object_orientation ?b ?b) ) (in ?b ?b) (agent_holds ?b) (same_type desk ?d2) (not (and (not (not (or (in_motion ?d2) ) ) ) (in_motion ?b) ) ) (on ?b ?b) (forall (?b - chair) (exists (?t - game_object ?b - block) (agent_holds ?d2) ) ) (> 1 (distance ?d2 ?d2)) (agent_holds desktop) (not (in_motion ?d2) ) ) )
          (hold (and (and (adjacent ?b ?d2) (touch ?d2 ?d2) ) (exists (?l4 - shelf) (not (adjacent_side ?b ?b ?l4) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 5 (count basketMadeFromRug:golfball) )
    (or
      (>= (count golfballUnderBridgeWithoutTouchingBlock:beachball) (* (* (> 100 (count-once-per-objects golfballUnderBridgeWithoutTouchingBlock:basketball) )
            (count dodgeballThrownToBin:pink)
            (- (count golfballUnderBridgeWithoutTouchingBlock:basketball) )
            (>= (count dodgeballThrownToBin:beachball) 5 )
            (* (count dodgeballThrownToBin:basketball) (+ 180 (* 3 (* 8 (+ 9 1 )
                  )
                  3
                  (count-overlapping dodgeballThrownToBin:beachball)
                  1
                )
              )
            )
            (count-unique-positions dodgeballThrownToBin:green)
            (- (count dodgeballThrownToBin:beachball) )
            2
            3
          )
          (count-once-per-objects golfballUnderBridgeWithoutTouchingBlock:yellow)
          2
          (+ (+ (* (external-forall-maximize (+ 1 (count-once dodgeballThrownToBin:yellow_pyramid_block) )
                )
                (external-forall-minimize
                  (count basketMadeFromRug:beachball)
                )
              )
              (total-score)
              (count basketMadeFromRug:dodgeball)
            )
            (* (* (+ 3 (* (count basketMadeFromRug:tan) 7 )
                )
                (count dodgeballThrownToBin:doggie_bed:dodgeball:dodgeball)
              )
              (* 10 5 5 )
              8
              (* (* (count golfballUnderBridgeWithoutTouchingBlock:beachball:orange) 3 (count-once-per-objects golfballUnderBridgeWithoutTouchingBlock:dodgeball) )
                (+ (+ (* (external-forall-minimize 20 ) (count-once-per-objects basketMadeFromRug:dodgeball) )
                    (count-measure dodgeballThrownToBin:dodgeball)
                  )
                  (count-once-per-external-objects dodgeballThrownToBin:dodgeball)
                  (+ (count-same-positions basketMadeFromRug:basketball) (count dodgeballThrownToBin:blue_dodgeball) )
                )
              )
              2
              (count dodgeballThrownToBin:triangle_block)
            )
          )
          (count-longest basketMadeFromRug:beachball:alarm_clock)
          (* (* 2 (external-forall-maximize 9 ) (* (* (count dodgeballThrownToBin:purple) (+ 10 5 )
                )
                (count dodgeballThrownToBin:red)
              )
            )
            (* (count-longest basketMadeFromRug:pink) (* (- (external-forall-maximize (+ (* 2 (>= 2 1 )
                      )
                      (* 3 (total-score) )
                    )
                  )
                )
                (count-once-per-objects golfballUnderBridgeWithoutTouchingBlock:yellow:blue_dodgeball)
              )
              (* (* 2 (count-once-per-objects dodgeballThrownToBin:green:dodgeball) (count-once-per-objects dodgeballThrownToBin:golfball) 4 )
                10
              )
            )
          )
          (count-same-positions dodgeballThrownToBin:dodgeball)
          (not
            5
          )
          5
        )
      )
      (>= 8 (* (count-once-per-objects basketMadeFromRug:hexagonal_bin) 3 (* 2 (count dodgeballThrownToBin:golfball) )
        )
      )
      (<= (+ (* (count-once-per-objects basketMadeFromRug) (count-once golfballUnderBridgeWithoutTouchingBlock:dodgeball:yellow) )
          (count-once-per-objects dodgeballThrownToBin:red)
          (+ 20 (count dodgeballThrownToBin:yellow) )
          (/
            (+ 0.7 (* (external-forall-maximize (* (* (count-once-per-objects dodgeballThrownToBin:red_pyramid_block) (+ 10 15 )
                    )
                    (* 4 (- (count-once-per-objects golfballUnderBridgeWithoutTouchingBlock:white:red:golfball) )
                    )
                  )
                )
                (count dodgeballThrownToBin:dodgeball)
              )
            )
            (count dodgeballThrownToBin:dodgeball)
          )
          (+ (count golfballUnderBridgeWithoutTouchingBlock:beachball) (* (* (* (count-same-positions dodgeballThrownToBin:golfball) (* 6 (- (count golfballUnderBridgeWithoutTouchingBlock:tan) (* 8 10 )
                    )
                    (count golfballUnderBridgeWithoutTouchingBlock:basketball)
                  )
                  (* (count-once-per-objects golfballUnderBridgeWithoutTouchingBlock:green) (count basketMadeFromRug:dodgeball) )
                )
                (count golfballUnderBridgeWithoutTouchingBlock:dodgeball:pink)
                (count-once-per-objects basketMadeFromRug:yellow)
                (* (* 5 (+ (count golfballUnderBridgeWithoutTouchingBlock:red) (count-once-per-objects basketMadeFromRug:dodgeball:blue_dodgeball) 10 )
                  )
                  (* 6 3 )
                )
              )
              7
              (* (count basketMadeFromRug:blue_dodgeball:purple) (* (count basketMadeFromRug:hexagonal_bin:dodgeball) (* (count basketMadeFromRug:dodgeball:rug) 10 )
                )
              )
              2
              (count-longest basketMadeFromRug:alarm_clock)
              2
              (* (total-time) 2 )
            )
          )
          (count-once-per-objects golfballUnderBridgeWithoutTouchingBlock:blue_dodgeball)
        )
        (+ 10 (count-once-per-objects dodgeballThrownToBin:pink:blue_pyramid_block) )
      )
    )
  )
)
(:scoring
  (count-once-per-objects basketMadeFromRug:hexagonal_bin)
)
)

(define (game game-id-106) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (not
        (forall (?o2 - dodgeball)
          (and
            (and
              (game-optional
                (and
                  (in_motion ?o2)
                  (agent_holds ?o2)
                )
              )
            )
          )
        )
      )
    )
    (forall (?b10 - (either cd book pyramid_block))
      (forall (?s - pillow)
        (and
          (game-conserved
            (in ?s bed)
          )
        )
      )
    )
    (exists (?r - ball)
      (game-conserved
        (agent_holds ?r)
      )
    )
    (forall (?c - game_object ?r2 - dodgeball ?h - ball)
      (forall (?b - curved_wooden_ramp)
        (game-conserved
          (agent_holds agent)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference nonBlockPlacedInBuilding
      (exists (?r - hexagonal_bin)
        (then
          (once (and (not (not (and (not (agent_holds ?r) ) (and (agent_holds ?r) (not (is_setup_object ?r) ) (not (and (and (not (not (in_motion ?r) ) ) (and (agent_holds ?r) (equal_x_position ?r ?r) (and (in desktop ?r) (on ?r ?r) ) (and (agent_holds ?r) (object_orientation agent ?r) (in ?r rug) ) ) ) (and (and (agent_holds ?r) (in block ?r) ) (or (agent_holds ?r) (< (distance ?r ?r) 10) ) (or (and (in_motion ?r) (and (agent_holds ?r) ) ) (game_over ) ) ) ) ) (in_motion ?r) (on ?r ?r) (and (in ?r ?r) (forall (?b8 - cube_block ?h ?r2 - curved_wooden_ramp ?r - hexagonal_bin) (not (and (not (not (on room_center agent) ) ) (and (forall (?c3 - hexagonal_bin) (and (between ?r ?c3 ?r) (or (on desk agent) ) (on ?c3 ?c3) ) ) (between ?r pink_dodgeball ?r) ) ) ) ) ) (agent_holds ?r) ) ) ) ) (is_setup_object ?r) ) )
          (hold-while (above bed ?r) (agent_holds rug) )
          (hold (< 1 3) )
          (hold (and (not (agent_holds ?r) ) (and (adjacent ?r ?r) (not (in_motion ?r) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 6 2 )
)
(:scoring
  15
)
)

(define (game game-id-107) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?t2 - hexagonal_bin)
      (game-conserved
        (and
          (not
            (and
              (same_color ?t2 ?t2)
              (agent_holds ?t2)
            )
          )
          (not
            (and
              (on ?t2 ?t2)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference itemInClosedDrawerAtEnd
      (exists (?b - hexagonal_bin)
        (then
          (once (and (or (and (and (in_motion ?b) (exists (?c1 - (either tall_cylindrical_block side_table)) (or (not (adjacent ?c1 ?b) ) (and (game_start ) (in_motion ?c1) ) ) ) (in ?b ?b) ) (= (distance ?b ?b) 1) (in ?b ?b) ) (> (distance_side ?b ?b ?b) (x_position ?b)) ) (> (distance ?b front) 1) ) )
          (once (on ?b ?b) )
          (hold (same_color bed ?b) )
        )
      )
    )
    (preference objectsHidden
      (exists (?d - hexagonal_bin)
        (then
          (once (and (on ?d desk) (not (in_motion ?d) ) ) )
          (once (exists (?r1 - chair) (not (in_motion ?d) ) ) )
          (hold (same_type rug ?d) )
        )
      )
    )
    (forall (?h ?c - building ?o - golfball ?c - doggie_bed)
      (and
        (preference teddyBearLandsInBin
          (then
            (once (and (not (in_motion desk) ) (toggled_on ?c) ) )
            (hold-to-end (not (on ?c ?c) ) )
            (once (on ?c ?c) )
          )
        )
        (preference blockPlacedInBuilding
          (exists (?h - cube_block)
            (then
              (hold-while (faces ?h ?c) (faces ?c ?c) )
              (once (and (agent_holds ?h) (and (not (on ?h agent) ) (in_motion ?h) (touch ?h ?h) ) ) )
              (once (not (in_motion ?h) ) )
            )
          )
        )
        (preference blueObjectMovedToRoomCenter
          (exists (?d - ball)
            (then
              (once (same_color ?d ?c) )
              (once (agent_holds ?c) )
              (hold-while (not (agent_holds ?c) ) (agent_holds ?d) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (total-score) (+ 5 (* (count blueObjectMovedToRoomCenter:dodgeball) 10 )
      )
    )
    (>= (count objectsHidden:block:pink) (* (and (count-once-per-objects teddyBearLandsInBin:basketball) ) 300 )
    )
  )
)
(:scoring
  1
)
)

(define (game game-id-108) (:domain medium-objects-room-v1)
(:setup
  (forall (?c1 - bridge_block)
    (exists (?h - hexagonal_bin)
      (or
        (game-conserved
          (touch ?h bed)
        )
        (and
          (exists (?b - hexagonal_bin)
            (and
              (and
                (exists (?c4 - dodgeball)
                  (game-conserved
                    (and
                      (forall (?h - pillow ?d - hexagonal_bin)
                        (not
                          (and
                            (on ?b ?c1)
                            (on ?c1 ?h)
                          )
                        )
                      )
                      (object_orientation ?b ?c1)
                    )
                  )
                )
              )
              (and
                (forall (?h - dodgeball)
                  (and
                    (game-conserved
                      (agent_holds front)
                    )
                    (game-conserved
                      (on room_center bed)
                    )
                    (and
                      (and
                        (exists (?h - hexagonal_bin)
                          (and
                            (game-conserved
                              (agent_holds ?c1)
                            )
                          )
                        )
                      )
                      (exists (?b ?h - (either chair teddy_bear bridge_block key_chain) ?t - (either golfball main_light_switch))
                        (game-conserved
                          (not
                            (not
                              (and
                                (and
                                  (rug_color_under agent ?c1)
                                  (adjacent_side door ?h ?h)
                                  (in bridge_block ?t)
                                  (on agent ?b)
                                )
                                (agent_holds ?b)
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
                (exists (?h - desk_shelf)
                  (and
                    (exists (?g - hexagonal_bin)
                      (exists (?d - block)
                        (forall (?o - doggie_bed)
                          (game-conserved
                            (or
                              (and
                                (and
                                  (and
                                    (same_color ?h ?g)
                                    (not
                                      (in_motion ?g)
                                    )
                                  )
                                  (forall (?h - cube_block)
                                    (agent_holds ?o)
                                  )
                                  (touch ?b floor)
                                )
                                (in_motion ?o)
                                (on ?b room_center)
                              )
                              (and
                                (not
                                  (in ?g upright)
                                )
                                (in_motion ?o)
                              )
                            )
                          )
                        )
                      )
                    )
                    (exists (?w1 - (either doggie_bed alarm_clock pink doggie_bed) ?f - dodgeball)
                      (forall (?b - cube_block ?b10 - cube_block ?c2 - building)
                        (game-optional
                          (on ?f ?b)
                        )
                      )
                    )
                    (and
                      (game-conserved
                        (and
                          (in ?c1 ?h)
                          (game_start )
                          (not
                            (in_motion ?c1)
                          )
                        )
                      )
                      (forall (?db - shelf)
                        (exists (?h - hexagonal_bin)
                          (forall (?b1 - ball)
                            (and
                              (game-conserved
                                (< 1 1)
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference thrownObjectHitsComputer
      (exists (?c2 - teddy_bear ?o5 - block ?h - dodgeball)
        (then
          (hold-while (< 8 1) (and (rug_color_under ?h rug) (and (and (in_motion ?h) (on ?h ?h) ) (and (and (not (and (in ?h ?h) (agent_holds ?h) ) ) (and (forall (?c - golfball) (adjacent ?h ?c) ) (not (agent_holds ?h) ) ) ) (and (not (adjacent ?h ?h) ) (touch ?h ?h) (in_motion ?h) ) ) (opposite ?h ?h) ) (adjacent ?h ?h) ) )
          (once (not (or (> 1 (distance ?h room_center)) (in_motion ?h) ) ) )
          (once (in_motion ?h) )
        )
      )
    )
    (preference smallObjectThrownToBed
      (exists (?c - hexagonal_bin ?h - hexagonal_bin)
        (then
          (hold (not (on ?h ?h) ) )
          (once (toggled_on ?h) )
          (once (in_motion top_drawer) )
        )
      )
    )
    (preference beachballBouncedOffRamp
      (exists (?h - block)
        (then
          (once (agent_holds ?h) )
          (forall-sequence (?o2 - game_object)
            (then
              (once (in_motion ?h) )
              (hold-while (in_motion ?h) (and (not (on ?o2 desk) ) ) (not (agent_holds ?h) ) )
              (once (in ?h desk) )
            )
          )
          (hold (agent_holds ?h) )
        )
      )
    )
  )
)
(:terminal
  (>= 1 (* (total-time) (total-score) )
  )
)
(:scoring
  (* 3 (count beachballBouncedOffRamp:golfball) )
)
)

(define (game game-id-109) (:domain few-objects-room-v1)
(:setup
  (forall (?l - ball)
    (exists (?d - game_object ?c5 - hexagonal_bin ?bl - wall ?l2 - block)
      (game-conserved
        (on ?l2 ?l2)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?h - cube_block)
        (at-end
          (same_color ?h ?h)
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 1 (< (count ballThrownToBin:beachball) 4 )
    )
    (or
      (> 8 3 )
      (>= (= (not (count-once ballThrownToBin:cube_block) ) (count-once ballThrownToBin:dodgeball) )
        (-
          (external-forall-maximize
            (* (count ballThrownToBin:alarm_clock:beachball) (count ballThrownToBin:yellow) (* (+ (count ballThrownToBin:wall:tan) 5 (count-once ballThrownToBin:pink) )
              )
              (external-forall-maximize
                4
              )
            )
          )
          (count ballThrownToBin:golfball)
        )
      )
    )
  )
)
(:scoring
  (not
    (= (* (count ballThrownToBin:golfball:blue_pyramid_block) 3 )
      (>= 0 50 )
    )
  )
)
)

(define (game game-id-110) (:domain many-objects-room-v1)
(:setup
  (exists (?d - game_object)
    (game-conserved
      (agent_holds ?d)
    )
  )
)
(:constraints
  (and
    (preference throwGolfballToBin
      (exists (?o - shelf)
        (at-end
          (between ?o ?o ?o)
        )
      )
    )
    (preference throwAttempt
      (exists (?b - pillow)
        (then
          (once (< 1 1) )
          (once (adjacent_side ?b agent ?b) )
          (once (agent_holds top_shelf) )
        )
      )
    )
  )
)
(:terminal
  (<= 10 3 )
)
(:scoring
  (+ (count-measure throwAttempt:green) (* 5 (* (count-once-per-objects throwGolfballToBin:hexagonal_bin) 2 (count throwAttempt:green) 10 )
    )
  )
)
)

(define (game game-id-111) (:domain many-objects-room-v1)
(:setup
  (forall (?tb - (either cube_block hexagonal_bin) ?l - dodgeball)
    (game-optional
      (exists (?h - cube_block ?t - doggie_bed ?d - hexagonal_bin)
        (agent_holds ?l)
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttemptFromBehindBlock
      (exists (?t - hexagonal_bin ?d2 - wall)
        (then
          (once (not (agent_holds ?d2) ) )
          (once (not (on ?d2 room_center) ) )
          (hold (in_motion agent) )
        )
      )
    )
    (forall (?db ?o2 ?w1 - golfball)
      (and
        (preference objectThrownFromRug
          (at-end
            (or
              (not
                (in_motion back)
              )
            )
          )
        )
        (preference throwBallToDoggieBedOffWall
          (exists (?o - block ?r1 - (either cellphone))
            (then
              (once (same_object ?r1 ?db) )
              (once (not (in ?db ?o2) ) )
              (once (agent_holds ?o2) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (external-forall-maximize (count objectThrownFromRug:dodgeball) ) (count throwBallToDoggieBedOffWall:golfball) )
    (count throwAttemptFromBehindBlock:alarm_clock:beachball)
  )
)
(:scoring
  3
)
)

(define (game game-id-112) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (= 9 6)
  )
)
(:constraints
  (and
    (preference throwFromEdgeOfRug
      (exists (?b7 - (either hexagonal_bin laptop) ?c - hexagonal_bin)
        (then
          (once (not (agent_holds ?c) ) )
          (once (adjacent ?c ?c) )
          (once (agent_crouches ) )
        )
      )
    )
    (preference dropAttempt
      (exists (?b - hexagonal_bin)
        (then
          (hold (adjacent rug bed) )
          (once (object_orientation ?b desk) )
          (hold (adjacent ?b ?b) )
        )
      )
    )
    (forall (?g - dodgeball ?g - (either cellphone))
      (and
        (preference ballThrownOntoTarget
          (exists (?b - game_object)
            (then
              (hold (on ?g ?g) )
              (once (same_object ?g ?g) )
              (once (and (and (in_motion ?g) (exists (?o - (either laptop)) (in_motion upright) ) ) (< (distance ?g ?b) 10) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once dropAttempt:dodgeball) (count-once-per-objects throwFromEdgeOfRug:doggie_bed:red) )
)
(:scoring
  3
)
)

(define (game game-id-113) (:domain many-objects-room-v1)
(:setup
  (exists (?w2 - tan_cube_block)
    (game-conserved
      (in ?w2 ?w2)
    )
  )
)
(:constraints
  (and
    (preference ballThrownIntoTarget
      (exists (?h - wall ?b - game_object)
        (then
          (once (and (agent_holds bed) (agent_holds ?b) ) )
          (once (touch ?b ?b) )
          (once (adjacent ?b ?b) )
        )
      )
    )
    (preference throwGolfballToBin
      (exists (?h - (either pillow pyramid_block bed))
        (then
          (once (same_object ?h ?h) )
          (once (not (and (and (agent_holds blinds) (not (forall (?g - dodgeball) (touch ?h ?h) ) ) ) (not (not (agent_holds front) ) ) ) ) )
          (once (not (< (distance ?h ?h) 1) ) )
        )
      )
    )
    (preference throwBallFromOtherBallToBin
      (exists (?c - (either yellow_cube_block cellphone))
        (then
          (once (< (distance ?c ?c) 1) )
          (once (not (and (touch ?c ?c) (not (not (not (not (agent_holds ?c) ) ) ) ) ) ) )
          (once (adjacent_side ?c ?c ?c) )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (count ballThrownIntoTarget) 2 )
    (>= (count throwBallFromOtherBallToBin:red) (count-measure throwBallFromOtherBallToBin:basketball) )
  )
)
(:scoring
  (- (count ballThrownIntoTarget:red) )
)
)

(define (game game-id-114) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (agent_holds pink_dodgeball)
  )
)
(:constraints
  (and
    (preference dodgeballBouncesOnceToDoggieBed
      (exists (?t - ball)
        (at-end
          (not
            (in_motion ?t)
          )
        )
      )
    )
  )
)
(:terminal
  (> (count dodgeballBouncesOnceToDoggieBed:yellow_pyramid_block) (+ 1 (* 3 (count dodgeballBouncesOnceToDoggieBed:dodgeball) )
      (count dodgeballBouncesOnceToDoggieBed:pink:dodgeball)
    )
  )
)
(:scoring
  (count dodgeballBouncesOnceToDoggieBed:pink_dodgeball)
)
)

(define (game game-id-115) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?b - hexagonal_bin ?b1 - block)
      (forall (?b - blue_cube_block ?b4 - hexagonal_bin)
        (exists (?b - ball)
          (game-optional
            (on ?b ?b)
          )
        )
      )
    )
    (forall (?o1 - cube_block ?p2 - curved_wooden_ramp)
      (and
        (and
          (game-conserved
            (and
              (same_color upright side_table)
              (agent_holds ?p2)
            )
          )
          (game-conserved
            (in ?p2 pink_dodgeball)
          )
          (game-conserved
            (and
              (not
                (or
                  (agent_holds ?p2)
                  (agent_holds ?p2)
                )
              )
              (in_motion ?p2)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballKnocksTeddy
      (exists (?w1 - wall)
        (then
          (once (and (and (adjacent_side ?w1 pink_dodgeball ?w1) (not (agent_holds ?w1) ) (and (and (same_type rug blue) (same_type ?w1 rug) (not (and (on ?w1 ?w1) (in_motion rug) ) ) (not (agent_holds ?w1) ) ) (agent_holds ?w1) ) ) (on ?w1 agent) ) )
          (hold-while (exists (?b8 - wall) (not (not (< 1 1) ) ) ) (not (on ?w1 ?w1) ) )
          (once (in_motion ?w1) )
        )
      )
    )
  )
)
(:terminal
  (>= (/ 10 (* (count-same-positions ballKnocksTeddy:blue_dodgeball) (* (+ 6 (- (count-once-per-objects ballKnocksTeddy:dodgeball) )
          )
          (count ballKnocksTeddy:basketball)
          (count-once-per-objects ballKnocksTeddy:yellow_pyramid_block)
        )
      )
    )
    10
  )
)
(:scoring
  5
)
)

(define (game game-id-116) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (agent_holds bridge_block)
  )
)
(:constraints
  (and
    (preference throwAttemptFromDoor
      (exists (?c - building)
        (at-end
          (above upside_down ?c)
        )
      )
    )
    (preference golfballUnderBridgeWithoutTouchingBlock
      (exists (?t2 - game_object)
        (then
          (once (agent_holds ?t2) )
          (once (on ?t2 ?t2) )
          (once (agent_holds ?t2) )
        )
      )
    )
    (preference objectInBuilding
      (exists (?b10 ?d - (either dodgeball blue_cube_block cd) ?w2 - (either alarm_clock laptop) ?h - game_object)
        (then
          (hold-while (not (not (adjacent ?h ?h) ) ) (and (not (faces ?h back) ) (not (and (not (and (and (not (not (< (distance agent ?h) (distance ?h ?h)) ) ) (or (on ?h ?h) (and (and (not (adjacent ?h ?h) ) (on ?h ?h) (< 0.5 (distance room_center ?h)) (not (on ?h sideways) ) (in_motion ?h) (and (not (and (in_motion ?h) (exists (?b - building) (not (not (agent_holds ?h) ) ) ) ) ) (on ?h room_center) ) (or (< 1 1) (agent_holds ?h) (same_object ?h room_center) ) ) (not (or (and (in ?h ?h) (agent_holds ?h) (same_color ?h pillow) (not (and (and (in ?h ?h) (in_motion ?h) (in_motion ?h) (adjacent ?h ?h) ) (forall (?b - hexagonal_bin) (not (adjacent ?h ?h) ) ) ) ) (on ?h ?h) (not (and (agent_holds ?h) (not (agent_holds ?h) ) ) ) ) (on ?h ?h) (and (and (on ?h ?h) (and (adjacent ?h ?h) (not (not (agent_holds agent) ) ) (touch ?h bed) (agent_holds ?h) (in ?h ?h) (agent_holds agent) ) (in_motion ?h) ) (in ?h ?h) ) ) ) ) ) ) (and (not (not (faces bed ?h) ) ) (equal_z_position ?h ?h) ) ) ) (and (agent_holds ?h) (agent_holds rug) ) (adjacent ?h ?h) ) ) ) )
          (once (object_orientation rug ?h) )
          (hold (not (exists (?c - chair) (in_motion rug) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (= (count-once golfballUnderBridgeWithoutTouchingBlock:basketball) 2 )
    (< (count throwAttemptFromDoor:doggie_bed) (count-once-per-objects throwAttemptFromDoor:hexagonal_bin) )
    (>= (count-once-per-objects objectInBuilding:green) (external-forall-maximize 5 ) )
  )
)
(:scoring
  (+ (total-score) (count throwAttemptFromDoor:pink) (count golfballUnderBridgeWithoutTouchingBlock:yellow_cube_block) )
)
)

(define (game game-id-117) (:domain many-objects-room-v1)
(:setup
  (exists (?c6 - block)
    (and
      (game-conserved
        (agent_holds ?c6)
      )
    )
  )
)
(:constraints
  (and
    (preference matchingBuildingBuilt
      (exists (?c - block ?h - dodgeball ?d - hexagonal_bin)
        (then
          (hold (same_color ?d ?d) )
          (once (not (agent_holds ?d) ) )
          (once (and (in_motion ?d) (and (agent_holds door) (and (and (equal_z_position ?d ?d) (not (in_motion ?d) ) ) ) ) ) )
        )
      )
    )
    (preference dodgeballFromBlockToBin
      (exists (?c - dodgeball)
        (then
          (hold (and (not (object_orientation ?c ?c) ) (and (same_color agent door) (on ?c ?c) ) ) )
          (once (agent_holds ?c) )
          (any)
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (count dodgeballFromBlockToBin) (count dodgeballFromBlockToBin:dodgeball) )
    (>= (count dodgeballFromBlockToBin) 3 )
    (or
      (>= (count dodgeballFromBlockToBin:dodgeball) (= 10 18 )
      )
    )
  )
)
(:scoring
  (+ (count matchingBuildingBuilt:triangle_block:basketball) (external-forall-minimize 4 ) )
)
)

(define (game game-id-118) (:domain many-objects-room-v1)
(:setup
  (exists (?b7 ?db ?o3 ?b ?b - hexagonal_bin ?c - hexagonal_bin)
    (forall (?d - (either pyramid_block cd))
      (game-conserved
        (not
          (in_motion ?c)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference watchOnShelf
      (exists (?h - wall)
        (then
          (once (and (and (in_motion ?h) (not (on agent ?h) ) ) (game_start ) ) )
          (once (and (and (touch ?h ?h) (in_motion ?h) ) (and (and (and (in_motion ?h) (not (and (or (touch ?h agent) (on ?h brown) (in_motion ?h) ) (in ?h ?h) (and (in ?h ?h) (exists (?l2 - cube_block) (object_orientation ?l2 ?h) ) ) ) ) ) (and (agent_holds ?h) (in_motion bed) ) ) (open ?h) ) (not (agent_holds ?h) ) ) )
          (hold (on ?h ?h) )
        )
      )
    )
    (forall (?c4 - hexagonal_bin)
      (and
        (preference throwToDrawerOrBin
          (exists (?o2 - golfball ?c2 - hexagonal_bin)
            (then
              (once (on ?c4 ?c2) )
              (hold (or (not (in_motion ?c4) ) (on ?c2 ?c4) ) )
              (once (and (agent_holds ?c2) (in ?c4 ?c2) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count watchOnShelf:hexagonal_bin:beachball) (count-once watchOnShelf:golfball) )
    (> 3 2 )
  )
)
(:scoring
  (* (count watchOnShelf:pink_dodgeball) 9 )
)
)

(define (game game-id-119) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (forall (?h - dodgeball ?s ?c - pyramid_block)
        (forall (?d - pillow)
          (game-optional
            (not
              (not
                (not
                  (and
                    (agent_holds agent)
                    (and
                      (in_motion ?c)
                      (agent_holds agent)
                    )
                  )
                )
              )
            )
          )
        )
      )
      (exists (?o4 - ball ?w - ball)
        (forall (?d - hexagonal_bin)
          (exists (?h - block ?r - block)
            (not
              (forall (?b - (either book yellow_cube_block))
                (game-optional
                  (and
                    (and
                      (agent_holds door)
                    )
                    (and
                      (on ?d agent)
                      (agent_holds ?r)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToRampToBed
      (exists (?d - hexagonal_bin)
        (then
          (once (same_type ?d ?d) )
          (hold (agent_holds ?d) )
          (hold-for 10 (not (in bed ?d) ) )
        )
      )
    )
    (forall (?d - triangular_ramp)
      (and
        (preference binKnockedOver
          (exists (?b - cube_block)
            (at-end
              (agent_holds ?d)
            )
          )
        )
      )
    )
    (preference laptopAndBookInPlace
      (exists (?d - pillow)
        (then
          (once (agent_holds agent) )
          (once (is_setup_object bed) )
          (hold (not (not (not (and (agent_holds ?d) (exists (?b - shelf) (on ?b ?b) ) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (> (* (and (count laptopAndBookInPlace:dodgeball) 3 3 ) 15 )
    (+ (total-score) (count laptopAndBookInPlace:orange) (count-once laptopAndBookInPlace:pink_dodgeball) -10 )
  )
)
(:scoring
  (* (count-once-per-external-objects binKnockedOver:yellow_pyramid_block) (count binKnockedOver:basketball) )
)
)

(define (game game-id-120) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (not
      (not
        (touch pillow rug)
      )
    )
  )
)
(:constraints
  (and
    (forall (?c - ball)
      (and
        (preference blindsOpened
          (exists (?h - hexagonal_bin)
            (then
              (once (and (same_color ?h ?c) (and (toggled_on agent) (in_motion ?c) (is_setup_object bed) (< 2 (distance_side agent ?c room_center)) (not (not (in_motion ?c) ) ) (not (touch ?c ?c) ) (= 1 2) ) ) )
              (hold-while (touch ?c bed) (not (not (in east_sliding_door ?c) ) ) )
              (hold (and (in ?h ?h) (not (< 1 9) ) ) )
            )
          )
        )
      )
    )
    (forall (?o5 - (either cd dodgeball))
      (and
        (preference throwBallToDoggieBed
          (exists (?t - chair)
            (then
              (hold-while (agent_holds ?o5) (> 2 1) (is_setup_object ?t) )
              (once (and (in ?o5 ?o5) ) )
              (once (in rug bed) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (- (count blindsOpened:pink) 5 ) (* 2 (or (> (total-score) (+ (count blindsOpened) (count throwBallToDoggieBed:book) )
          )
        )
        (+ 10 (count blindsOpened:dodgeball:book) (total-time) )
        3
      )
    )
    (= (count blindsOpened:top_drawer) )
  )
)
(:scoring
  (count blindsOpened:doggie_bed)
)
)

(define (game game-id-121) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (not
      (in_motion bed)
    )
  )
)
(:constraints
  (and
    (preference failedThrowAttempt
      (exists (?ob - building ?o1 - hexagonal_bin ?h - cube_block ?d - ball)
        (then
          (once (or (in_motion ?d) (and (and (and (or (on ?d ?d) (in ?d ?d) ) (rug_color_under ?d ?d) ) (on ?d floor) ) (in_motion ?d) ) (and (not (in_motion ?d) ) (in ?d ?d) ) ) )
          (once (not (not (and (in agent ?d) (not (and (not (in_motion ?d) ) (agent_holds ?d) (toggled_on ?d) ) ) ) ) ) )
        )
      )
    )
    (preference ballThrownFromRug
      (exists (?h - hexagonal_bin)
        (then
          (hold (in_motion ?h) )
          (hold (in ?h ?h) )
          (once (adjacent ?h door) )
        )
      )
    )
  )
)
(:terminal
  (<= (count failedThrowAttempt) (count-once-per-objects failedThrowAttempt:yellow:pyramid_block) )
)
(:scoring
  (external-forall-maximize
    30
  )
)
)

(define (game game-id-122) (:domain medium-objects-room-v1)
(:setup
  (exists (?b2 - (either cd basketball cube_block mug))
    (forall (?c - game_object ?c2 - hexagonal_bin ?ob - game_object)
      (forall (?h - (either cd blue_cube_block pillow))
        (and
          (exists (?d1 - hexagonal_bin ?t1 - dodgeball)
            (game-optional
              (agent_holds ?h)
            )
          )
          (exists (?b - hexagonal_bin)
            (forall (?b10 - book)
              (game-conserved
                (agent_holds ?ob)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballHitsPillowWithoutTouchingBlock
      (exists (?p ?g - tan_cube_block)
        (then
          (hold-while (in desk ?p) (agent_holds ?g) (not (and (= 1 (distance ?g ?g)) (and (same_color ?p ?p) (adjacent_side ?g room_center ?g) ) (on ?p ?g) ) ) )
          (hold (agent_holds ?p) )
          (once (agent_holds ?p) )
        )
      )
    )
    (forall (?c4 - hexagonal_bin)
      (and
        (preference bounceBallToBin
          (exists (?b - beachball)
            (then
              (hold-for 9 (agent_holds ?b) )
              (hold (touch ?c4 ?b) )
            )
          )
        )
      )
    )
    (preference throwFromBehindChairsInBin
      (exists (?c - color ?o - hexagonal_bin)
        (then
          (once (in_motion ?o) )
          (once (agent_holds ?o) )
          (once (faces ?o ?o) )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (count-once-per-objects dodgeballHitsPillowWithoutTouchingBlock:pink:yellow:golfball) )
)
(:scoring
  0
)
)

(define (game game-id-123) (:domain medium-objects-room-v1)
(:setup
  (forall (?l2 - curved_wooden_ramp)
    (game-optional
      (not
        (agent_holds agent)
      )
    )
  )
)
(:constraints
  (and
    (forall (?o - dodgeball ?b5 ?c - color)
      (and
        (preference throwTeddyOntoPillow
          (exists (?b - game_object ?d - dodgeball ?s - (either bed dodgeball pyramid_block))
            (then
              (once (agent_holds ?c) )
              (once (not (not (agent_holds ?s) ) ) )
              (once (< 3 (distance agent ?c)) )
            )
          )
        )
      )
    )
    (preference blueObjectMovedToRoomCenter
      (exists (?d - hexagonal_bin)
        (then
          (once (in_motion ?d) )
          (once (in_motion ?d) )
          (once (same_color ?d ?d) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (count blueObjectMovedToRoomCenter:yellow) )
)
(:scoring
  25
)
)

(define (game game-id-124) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?o4 - hexagonal_bin ?c - hexagonal_bin ?b2 - dodgeball)
      (game-conserved
        (on ?b2 room_center)
      )
    )
  )
)
(:constraints
  (and
    (forall (?p - building)
      (and
        (preference thrownBallReachesEnd
          (then
            (once (< 2 (distance desk ?p)) )
            (once (not (not (and (and (< 1 6) (agent_holds room_center) ) (in ?p ?p) ) ) ) )
            (once (in_motion bridge_block) )
            (once (not (in_motion ?p) ) )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count thrownBallReachesEnd:basketball:pink) 15 )
    (< (+ (* 3 (count thrownBallReachesEnd:dodgeball:dodgeball) )
        3
      )
      5
    )
  )
)
(:scoring
  6
)
)

(define (game game-id-125) (:domain many-objects-room-v1)
(:setup
  (forall (?d - (either alarm_clock dodgeball bridge_block))
    (exists (?d - ball)
      (not
        (exists (?p3 - bridge_block)
          (game-conserved
            (faces ?d ?d)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - hexagonal_bin)
      (and
        (preference objectOnBed
          (exists (?c - curved_wooden_ramp)
            (then
              (hold (on ?c ?c) )
              (hold (and (in_motion floor) (in blue ?d) (equal_z_position ?c ?c) (game_over ) (in_motion ?d) (object_orientation desk ?d) (and (and (not (in_motion ?d) ) (on ?c ?c) ) (not (agent_holds rug) ) ) (adjacent room_center ?d) ) )
              (once (adjacent ?c pink_dodgeball) )
            )
          )
        )
      )
    )
    (forall (?c2 - dodgeball ?d - hexagonal_bin)
      (and
        (preference towerFallsWhileBuilding
          (exists (?d - (either alarm_clock book pencil hexagonal_bin))
            (then
              (forall-sequence (?t - (either cd))
                (then
                  (once (and (agent_holds main_light_switch) (not (in ?d agent) ) ) )
                  (hold (and (in_motion ?d) (and (not (agent_holds ?d) ) (and (agent_holds ?d) (and (and (in ?t ?d) (on ?d ?d) (and (agent_holds ?d) (and (< (distance bed ?t) 0.5) (equal_x_position ?d pink) ) (touch ?d ?d) ) ) (not (agent_holds ?t) ) ) (not (in_motion ?d) ) ) ) ) )
                  (once (in_motion ?t) )
                )
              )
              (hold (in_motion ?d) )
              (once (not (game_over ) ) )
              (any)
              (once (and (in_motion ?d) (in ?d ?d) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (or
        (>= 300 4 )
        (>= (count-once-per-objects towerFallsWhileBuilding:green) (count-once-per-objects towerFallsWhileBuilding:yellow_cube_block) )
        (not
          (>= (count objectOnBed:red) (count-once-per-objects objectOnBed:blue_pyramid_block) )
        )
      )
      (>= (count objectOnBed:wall:dodgeball) (external-forall-maximize (count towerFallsWhileBuilding:hexagonal_bin) ) )
    )
    (or
      (>= 6 (count-once-per-objects towerFallsWhileBuilding:blue_dodgeball) )
      (>= (* (* (+ (count-once-per-objects towerFallsWhileBuilding:purple) (* 6 (+ 2 (or 1 ) )
              )
            )
            (count objectOnBed:pink_dodgeball)
          )
          (+ (- (- (count towerFallsWhileBuilding:brown) )
            )
            (+ (* (count-once-per-external-objects towerFallsWhileBuilding:basketball) (count-measure towerFallsWhileBuilding:pink_dodgeball) )
              3
              (+ 2 (count towerFallsWhileBuilding:basketball:beachball) (+ (external-forall-maximize 4 ) (* (+ (* 2 (* (count objectOnBed:pink_dodgeball) )
                      )
                      (count towerFallsWhileBuilding:blue_cube_block:dodgeball)
                    )
                    (count objectOnBed:dodgeball:dodgeball)
                  )
                )
              )
            )
          )
        )
        2
      )
    )
  )
)
(:scoring
  (count towerFallsWhileBuilding:dodgeball:blue_dodgeball)
)
)

(define (game game-id-126) (:domain many-objects-room-v1)
(:setup
  (forall (?c1 - watch)
    (game-conserved
      (touch ?c1 ?c1)
    )
  )
)
(:constraints
  (and
    (forall (?t2 - teddy_bear)
      (and
        (preference matchingBuildingBuilt
          (exists (?h - chair ?b - color)
            (at-end
              (in_motion ?b)
            )
          )
        )
        (preference ballThrownToBin
          (exists (?g - book)
            (then
              (hold (and (touch ?g ?g) (and (exists (?w2 - teddy_bear) (on ?w2 room_center) ) (in rug ?t2) ) ) )
              (once (agent_holds ?t2) )
              (once (adjacent ?t2 ?t2) )
            )
          )
        )
      )
    )
    (preference dodgeballAndBasketballInBin
      (exists (?o4 ?g - hexagonal_bin)
        (then
          (once (not (not (not (exists (?t1 - block ?d ?ob - dodgeball) (agent_holds ?d) ) ) ) ) )
        )
      )
    )
    (preference dodgeballFromDeskToTarget
      (exists (?h - dodgeball ?h - block ?b9 - hexagonal_bin)
        (then
          (hold (and (and (agent_holds ?b9) (< 1 1) (game_start ) ) (and (in ?b9 ?b9) (and (agent_holds ?b9) (forall (?r - teddy_bear ?c2 - dodgeball) (and (not (in_motion agent) ) (> 3 (distance agent ?c2)) (not (not (and (and (not (in_motion ?c2) ) (is_setup_object ?c2) (and (and (not (and (in_motion ?c2) (on ?b9 ?c2) ) ) (and (same_object ?c2 ?c2) (<= 5 (distance ?b9 front_left_corner)) ) ) (in agent desk) (agent_holds ?c2) (same_color desk ?b9) ) (on ?c2 ?c2) (adjacent ?c2 ?c2) (in_motion ?b9) (not (touch ?c2 ?b9) ) ) (and (and (in_motion ?c2) (on ?c2 ?b9) ) (and (agent_holds ?b9) (and (and (and (or (and (agent_holds ?c2) (agent_holds ?c2) ) (in_motion desk) ) (agent_holds ?c2) ) (and (and (on ?b9 door) (on ?c2 upright) (agent_holds ?c2) ) (and (not (not (not (game_over ) ) ) ) (< (distance_side green ?c2 ?c2) (distance ?b9 ?b9)) ) (in_motion ?b9) ) ) (and (in room_center ?c2) (same_object ?c2 ?c2) ) (and (> (distance ?b9 ?b9) (distance ?b9 front)) (agent_holds ?b9) (or (on ?b9 ?c2) (< (building_size agent) (distance_side rug ?c2 ?b9)) ) (and (exists (?b - hexagonal_bin) (in ?c2 ?b9) ) (not (game_over ) ) ) ) ) ) (agent_holds ?c2) ) (not (and (touch ?b9 ?c2) (agent_holds ?b9) ) ) ) ) ) ) ) ) ) ) )
          (hold (open ?b9) )
          (once (and (agent_holds agent) (on ?b9 ?b9) ) )
        )
      )
    )
    (forall (?h - hexagonal_bin)
      (and
        (preference blockKnockedFromBuildingInBin
          (exists (?w1 - wall)
            (then
              (hold (in ?w1 ?h) )
              (once (or (not (not (in ?w1 desk) ) ) (and (and (and (in_motion agent) (in_motion ?w1) ) (not (in_motion ?h) ) (adjacent ?w1 ?w1) ) (not (not (game_start ) ) ) ) ) )
              (once (and (broken ?h) (agent_holds ?w1) ) )
            )
          )
        )
        (preference golfballInBinFromPillow
          (exists (?b6 - hexagonal_bin)
            (then
              (once (not (and (not (agent_holds ?b6) ) (in_motion ?h) (agent_holds ?b6) (not (or (in_motion ?h) (and (in_motion ?h) (and (not (on desktop ?h) ) ) ) ) ) ) ) )
              (hold (and (agent_holds ?b6) (and (not (agent_holds front) ) (in_motion ?b6) ) ) )
              (once (not (touch ?b6 ?b6) ) )
            )
          )
        )
      )
    )
    (preference objectWithMatchingColor
      (exists (?f - block ?h ?d - (either doggie_bed floor book) ?b9 - game_object ?f - dodgeball)
        (then
          (once (in_motion ?f) )
          (hold (in_motion ?f) )
          (once (on agent ?f) )
        )
      )
    )
    (preference throwAttemptFromBehindBlock
      (exists (?w - triangular_ramp)
        (then
          (once (on ?w ?w) )
          (once (exists (?tb - wall) (not (not (not (not (not (agent_holds desk) ) ) ) ) ) ) )
          (once (and (not (>= (distance ?w ?w) 2) ) (adjacent ?w ?w) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects blockKnockedFromBuildingInBin:orange) 4 )
)
(:scoring
  4
)
)

(define (game game-id-127) (:domain medium-objects-room-v1)
(:setup
  (exists (?o ?d1 - (either cube_block wall))
    (and
      (exists (?r - curved_wooden_ramp)
        (game-conserved
          (in_motion ?o)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballFromBlockToBin
      (exists (?w2 - ball)
        (then
          (once-measure (< (x_position agent) (distance ?w2 ?w2)) (distance ?w2 ?w2) )
          (once (and (in ?w2 ?w2) (on ?w2 ?w2) (is_setup_object ?w2) ) )
          (hold (not (and (adjacent ?w2 ?w2) (in ?w2 desk) ) ) )
        )
      )
    )
    (preference pinkObjectMovedToRoomCenter
      (exists (?b - (either wall pillow))
        (then
          (once (on ?b pink_dodgeball) )
          (hold (and (in ?b floor) (and (agent_holds ?b) (agent_holds ?b) ) (in_motion desk) (not (not (on ?b ?b) ) ) (in_motion bed) (in ?b ?b) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (* 2 2 )
  )
)
(:scoring
  (* (count-once-per-objects dodgeballFromBlockToBin:alarm_clock) (count dodgeballFromBlockToBin:blue_dodgeball) )
)
)

(define (game game-id-128) (:domain medium-objects-room-v1)
(:setup
  (exists (?l2 - hexagonal_bin ?d - ball)
    (and
      (exists (?w - hexagonal_bin)
        (and
          (forall (?b1 - hexagonal_bin ?b4 ?d - hexagonal_bin)
            (forall (?b - hexagonal_bin)
              (exists (?s - building)
                (and
                  (forall (?c - ball)
                    (forall (?d - dodgeball)
                      (game-conserved
                        (not
                          (in ?b blinds)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
          (game-conserved
            (agent_holds desk)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?db ?b - hexagonal_bin)
      (and
        (preference dodgeballHitsBin
          (exists (?w2 - building)
            (then
              (once (agent_holds ?b) )
              (hold-while (on desk ?w2) (agent_holds ?db) (adjacent_side ?w2 ?w2 ?b ?w2) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (external-forall-minimize (* (count dodgeballHitsBin:dodgeball:basketball) (count-once-per-objects dodgeballHitsBin:yellow:green) )
    )
    8
  )
)
(:scoring
  1
)
)

(define (game game-id-129) (:domain medium-objects-room-v1)
(:setup
  (forall (?h - game_object)
    (and
      (exists (?h ?w2 - shelf)
        (exists (?b - hexagonal_bin)
          (game-conserved
            (and
              (in_motion ?h)
              (not
                (agent_holds ?w2)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?ob - hexagonal_bin)
      (and
        (preference ballThrownIntoTarget
          (exists (?b6 ?w ?c ?d1 ?ob ?h - ball)
            (then
              (hold (agent_holds ?h) )
              (once (in_motion ?h) )
              (once (and (and (not (and (not (touch ?w ?w) ) (adjacent ?b6 ?b6) ) ) (in_motion ?ob) ) (and (not (and (in ?d1 back) (same_color ?h ?b6) ) ) (and (and (touch agent desk) (agent_holds ?ob) (and (not (and (and (agent_holds ?h) (< (x_position ?h) 6) ) (faces ?c ?d1) ) ) (in ?ob back) ) (adjacent ?c ?d1) ) (on ?ob ?d1) ) ) ) )
            )
          )
        )
        (preference dodgeballHitsPillowWithoutTouchingBlock
          (then
            (once (not (touch ?ob agent) ) )
            (hold-while (toggled_on ?ob) (not (same_object ?ob ?ob) ) )
            (once (on ?ob ?ob) )
          )
        )
      )
    )
    (forall (?c - dodgeball)
      (and
        (preference objectMoved
          (exists (?h - block)
            (then
              (once (agent_holds ?c) )
              (once (on bed ?h) )
              (hold (and (agent_holds door) (not (on ?h ?h) ) ) )
            )
          )
        )
        (preference throwMovesBeachballWithoutKnockingTeddy
          (exists (?b - dodgeball ?c2 - hexagonal_bin)
            (then
              (once (agent_holds ?c) )
              (hold (not (on ?c ?c2) ) )
              (once (in_motion room_center) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-overlapping ballThrownIntoTarget:purple:golfball) 2 )
)
(:scoring
  5
)
)

(define (game game-id-130) (:domain many-objects-room-v1)
(:setup
  (exists (?h - dodgeball ?r1 - cube_block)
    (exists (?c - ball ?h - building)
      (exists (?p3 - game_object)
        (game-conserved
          (not
            (on ?r1 ?h)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - pillow)
      (and
        (preference pillowMovedToRoomCenter
          (exists (?p2 - cube_block ?o5 - bridge_block)
            (then
              (hold-to-end (on ?b ?o5) )
              (once (and (< (distance ?o5 ?b) 1) (not (in_motion ?b) ) ) )
              (once (same_color ?o5 ?o5) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-overlapping pillowMovedToRoomCenter:hexagonal_bin) (- (count pillowMovedToRoomCenter:beachball) )
  )
)
(:scoring
  (- 2 )
)
)

(define (game game-id-131) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?b2 - hexagonal_bin)
      (game-optional
        (not
          (adjacent ?b2 ?b2)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o2 - dodgeball)
      (and
        (preference gameBlockFound
          (exists (?c - building ?c4 - hexagonal_bin ?f - dodgeball)
            (then
              (once (and (not (and (not (and (adjacent ?o2 ?o2) (not (not (and (on ?f ?o2) (not (and (and (in_motion desk) (touch ?o2 ?o2) (not (and (in_motion ?o2) (adjacent ?f desk) ) ) ) (not (in_motion ?f) ) ) ) ) ) ) ) ) (and (on ?o2 ?f) (not (equal_z_position ?o2 ?o2) ) ) ) ) (on ?o2 brown) (<= (distance ?f ?f) (distance desk ?f)) ) )
              (once (in room_center ?o2) )
            )
          )
        )
        (preference dodgeballFromRugToBin
          (exists (?o2 - dodgeball)
            (then
              (hold (and (adjacent ?o2 ?o2) (not (on ?o2 ?o2) ) ) )
              (hold (not (not (touch ?o2 side_table) ) ) )
              (once (in_motion ?o2) )
            )
          )
        )
      )
    )
    (preference ballDroppedInBin
      (exists (?l - game_object)
        (then
          (once (same_object ?l rug) )
          (once (on ?l ?l) )
          (hold (or (in_motion ?l) (not (rug_color_under ?l ?l) ) (<= 8 1) (and (on agent ?l) (and (on ?l ?l) (>= 2 10) (in_motion ?l) (exists (?h - dodgeball) (in_motion pillow) ) ) ) ) )
        )
      )
    )
    (preference ballKnocksBlockFromRug
      (exists (?b - hexagonal_bin ?c4 - teddy_bear)
        (at-end
          (on ?c4 ?c4)
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (or
        (>= (count dodgeballFromRugToBin:doggie_bed) 15 )
        (>= 2 1 )
        (>= 100 (count-same-positions gameBlockFound:dodgeball) )
      )
      (>= 3 2 )
      (>= 2 3 )
    )
    (> (* (count ballDroppedInBin:dodgeball) 2 )
      7
    )
    (>= (/ (+ (+ (+ (* (count ballKnocksBlockFromRug:beachball) 5 )
              (* (count dodgeballFromRugToBin:golfball) 8 )
              5
            )
            (* 5 (count gameBlockFound:hexagonal_bin) )
          )
          3
        )
        (count ballKnocksBlockFromRug:blue_dodgeball)
      )
      (count ballDroppedInBin:dodgeball)
    )
  )
)
(:scoring
  (* 3 (count dodgeballFromRugToBin:golfball) )
)
)

(define (game game-id-132) (:domain few-objects-room-v1)
(:setup
  (exists (?c - hexagonal_bin ?r - hexagonal_bin ?h - cube_block)
    (exists (?o - dodgeball ?l4 - hexagonal_bin)
      (and
        (forall (?b5 - hexagonal_bin)
          (and
            (game-optional
              (same_type blue agent)
            )
            (exists (?b - shelf)
              (game-optional
                (in_motion ?b)
              )
            )
            (game-optional
              (agent_holds ?b5)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?r2 - hexagonal_bin ?h - hexagonal_bin)
      (and
        (preference dodgeballsInPlace
          (exists (?h - hexagonal_bin)
            (then
              (once (< 0.5 1) )
              (hold (= (distance ?h ?h) 7) )
              (hold-while (adjacent ?h block) (not (and (not (agent_holds ?h) ) (on ?h ?h) (on ?h ?h) (not (agent_holds ?h) ) ) ) (in_motion ?h) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 8 (* (* 2 (count dodgeballsInPlace:doggie_bed:pink) )
      (total-score)
      (* (count dodgeballsInPlace:book) (external-forall-maximize (count-once-per-external-objects dodgeballsInPlace:dodgeball) ) )
      (* (count-once-per-objects dodgeballsInPlace:basketball) (count dodgeballsInPlace:golfball) )
      (count-shortest dodgeballsInPlace:blue_dodgeball)
      6
    )
  )
)
(:scoring
  (= 4 5 )
)
)

(define (game game-id-133) (:domain few-objects-room-v1)
(:setup
  (exists (?p ?d ?b ?d ?l - yellow_pyramid_block)
    (forall (?c - curved_wooden_ramp)
      (exists (?d - hexagonal_bin ?o2 - dodgeball)
        (and
          (and
            (game-optional
              (in ?o2 agent)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?w - hexagonal_bin ?p - curved_wooden_ramp ?b2 - (either flat_block curved_wooden_ramp))
      (and
        (preference ballThrownHitsAgent
          (exists (?r - hexagonal_bin ?c6 - hexagonal_bin)
            (then
              (once (not (touch ?b2 ?c6) ) )
              (hold (in_motion door) )
              (once (adjacent ?c6 ?b2) )
            )
          )
        )
      )
    )
    (forall (?h - hexagonal_bin ?tb - hexagonal_bin)
      (and
        (preference ballThrownFromBehindBlock
          (exists (?c6 - hexagonal_bin)
            (then
              (once (agent_holds ?c6) )
              (once (object_orientation ?tb ?tb) )
              (once (not (not (forall (?t - block) (in_motion ?c6) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (< (+ 300 9 (count ballThrownHitsAgent:basketball) )
      (+ 3 (count-same-positions ballThrownHitsAgent:tall_cylindrical_block) )
    )
  )
)
(:scoring
  (* 5 5 10 )
)
)

(define (game game-id-134) (:domain many-objects-room-v1)
(:setup
  (exists (?c - hexagonal_bin)
    (exists (?b5 - dodgeball)
      (game-conserved
        (not
          (agent_holds ?b5)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference cubeBlockThrownToTopShelf
      (exists (?b3 - game_object)
        (then
          (hold (and (on ?b3 yellow) (adjacent bed agent) ) )
          (hold (> (distance pink ?b3) 9) )
          (hold-to-end (agent_crouches ) )
          (once (< 8 1) )
          (once (not (exists (?b2 - wall) (not (in_motion ?b2) ) ) ) )
        )
      )
    )
    (forall (?o2 - (either flat_block pyramid_block) ?h - (either lamp laptop))
      (and
        (preference bigObjectThrownToBed
          (exists (?w - hexagonal_bin)
            (at-end
              (and
                (agent_holds ?h)
                (and
                  (exists (?h - curved_wooden_ramp ?b - shelf)
                    (not
                      (and
                        (touch agent floor)
                        (and
                          (in ?w bed)
                          (is_setup_object ?h)
                        )
                      )
                    )
                  )
                  (not
                    (not
                      (in_motion ?w)
                    )
                  )
                )
                (touch ?w ?h)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 15 (count-once-per-objects bigObjectThrownToBed:blue:beachball) )
  )
)
(:scoring
  5
)
)

(define (game game-id-135) (:domain few-objects-room-v1)
(:setup
  (exists (?c1 - game_object ?b1 - wall)
    (game-conserved
      (in_motion ?b1)
    )
  )
)
(:constraints
  (and
    (preference throwFromDoorToBin
      (exists (?h - game_object)
        (at-end
          (in ?h ?h)
        )
      )
    )
    (preference ballThrownToBin
      (exists (?b - hexagonal_bin)
        (then
          (once (in_motion ?b) )
          (once (agent_holds ?b) )
          (hold (agent_holds ?b) )
        )
      )
    )
    (preference blockCorrectlyPicked
      (exists (?o - game_object)
        (then
          (hold (adjacent ?o ?o) )
          (once (adjacent_side ?o ?o ?o) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects ballThrownToBin:beachball) 0.5 )
)
(:scoring
  (count-once-per-objects blockCorrectlyPicked:pink)
)
)

(define (game game-id-136) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (agent_crouches )
  )
)
(:constraints
  (and
    (preference objectInBuilding
      (exists (?b3 - (either dodgeball doggie_bed))
        (at-end
          (in ?b3 agent)
        )
      )
    )
  )
)
(:terminal
  (<= 10 3 )
)
(:scoring
  (- 2 )
)
)

(define (game game-id-137) (:domain many-objects-room-v1)
(:setup
  (exists (?h - hexagonal_bin)
    (exists (?d - block)
      (game-conserved
        (and
          (agent_holds ?h)
          (on ?h ?d)
          (agent_holds ?d)
          (in_motion ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference agentLeavesDogbedOrNoMoreBalls
      (exists (?p1 ?w1 ?t - chair)
        (then
          (once (not (on rug east_sliding_door) ) )
          (hold-while (in floor bed) (agent_crouches ) (and (exists (?b2 - hexagonal_bin ?g - doggie_bed) (not (game_over ) ) ) (not (and (in ?t ?p1) ) ) ) (broken ?t) )
          (forall-sequence (?b3 - blinds)
            (then
              (hold-while (and (and (in_motion ?t) (not (and (and (above ?b3 ?b3) (and (not (not (agent_holds ?p1) ) ) (exists (?b - (either rug golfball) ?h - drawer) (agent_holds ?w1) ) (not (not (and (in_motion desk) (in_motion ?p1) ) ) ) ) ) (rug_color_under ?t ?w1) ) ) ) (between door ?t ?b3) ) (in_motion ?p1) )
              (once (agent_holds ?w1) )
              (hold (and (not (in_motion ?p1) ) (adjacent_side ?w1 ?b3 ?t) ) )
            )
          )
        )
      )
    )
    (preference pinkObjectMovedToRoomCenter
      (exists (?d - hexagonal_bin)
        (then
          (once (in_motion ?d) )
          (hold-to-end (not (agent_holds ?d) ) )
          (once (on ?d ?d) )
        )
      )
    )
    (preference objectMoved
      (exists (?h - game_object)
        (at-end
          (not
            (and
              (and
                (agent_holds ?h)
                (and
                  (= (distance_side ?h ?h ?h ?h) 1)
                  (adjacent desk ?h)
                  (not
                    (faces ?h ?h)
                  )
                )
                (agent_holds ?h)
              )
              (agent_holds ?h)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-once-per-objects pinkObjectMovedToRoomCenter:pink:beachball) (count-once objectMoved:dodgeball:green:blue_pyramid_block) )
  )
)
(:scoring
  3
)
)

(define (game game-id-138) (:domain few-objects-room-v1)
(:setup
  (forall (?t - dodgeball)
    (game-conserved
      (on ?t ?t)
    )
  )
)
(:constraints
  (and
    (preference ballToBinFromBed
      (exists (?h ?b - game_object)
        (then
          (once (open ?h) )
          (once (agent_holds ?h) )
          (once (not (agent_holds ?h) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (>= (count ballToBinFromBed:doggie_bed) (count ballToBinFromBed:blue_pyramid_block) )
      (or
        (>= (/ 7 (count ballToBinFromBed:dodgeball) ) (* (- (count-once-per-objects ballToBinFromBed:pink) )
            (count ballToBinFromBed:purple)
          )
        )
        (>= 10 (count ballToBinFromBed:red) )
        (= (total-score) 10 )
      )
      (not
        (>= (count ballToBinFromBed:hexagonal_bin) (* (count ballToBinFromBed:beachball) )
        )
      )
    )
    (>= 2 (* (count ballToBinFromBed:green) (count-once-per-external-objects ballToBinFromBed:yellow:dodgeball) )
    )
    (>= 1 8 )
  )
)
(:scoring
  (+ (count ballToBinFromBed:dodgeball:basketball:purple) (not (count-once-per-external-objects ballToBinFromBed:golfball:dodgeball) ) )
)
)

(define (game game-id-139) (:domain few-objects-room-v1)
(:setup
  (and
    (game-optional
      (exists (?b - beachball)
        (not
          (not
            (open ?b)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o2 ?l3 - (either pen cylindrical_block golfball))
      (and
        (preference throwFromEdgeOfRug
          (exists (?b - hexagonal_bin ?ob - (either main_light_switch cylindrical_block wall) ?b2 - golfball)
            (at-end
              (and
                (< (distance bed agent) (distance_side ?b2 ?b2 ?b2))
                (game_over )
              )
            )
          )
        )
      )
    )
    (preference baseBlockInTowerAtEnd
      (exists (?o5 - dodgeball)
        (then
          (hold-while (in_motion ?o5) (and (not (not (in_motion ?o5) ) ) (in_motion room_center) ) )
          (once (in_motion south_west_corner) )
          (once (same_type ?o5 ?o5) )
        )
      )
    )
  )
)
(:terminal
  (> (- 4 )
    (count-overlapping baseBlockInTowerAtEnd:green)
  )
)
(:scoring
  (* (count throwFromEdgeOfRug:basketball) (count-once throwFromEdgeOfRug:green) )
)
)

(define (game game-id-140) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (and
      (forall (?c2 - building ?ob - (either pen yellow) ?h - dodgeball)
        (exists (?b9 - dodgeball)
          (not
            (and
              (not
                (in_motion agent)
              )
              (on ?h ?b9)
            )
          )
        )
      )
      (exists (?r - dodgeball ?c3 - dodgeball)
        (in ?c3 agent)
      )
    )
  )
)
(:constraints
  (and
    (preference cubeBlockThrowAttempt
      (exists (?o - doggie_bed)
        (then
          (once (exists (?s - hexagonal_bin) (not (in_motion ?o) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (* (* (count-once-per-objects cubeBlockThrowAttempt:golfball:pink_dodgeball) (- (count-once-per-objects cubeBlockThrowAttempt:golfball) )
      )
      (* (* (count-once cubeBlockThrowAttempt:rug) 4 )
        5
      )
    )
  )
)
(:scoring
  (external-forall-minimize
    (* 10 1 )
  )
)
)

(define (game game-id-141) (:domain medium-objects-room-v1)
(:setup
  (exists (?h - hexagonal_bin ?b - ball)
    (game-conserved
      (not
        (and
          (not
            (agent_holds ?b)
          )
          (not
            (and
              (game_over )
              (in blue upright)
            )
          )
          (and
            (not
              (and
                (and
                  (agent_holds ?b)
                  (not
                    (not
                      (and
                        (agent_holds desk)
                        (in_motion ?b)
                      )
                    )
                  )
                )
                (game_start )
              )
            )
            (in agent agent)
          )
          (and
            (not
              (in_motion ?b)
            )
            (in ?b ?b)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?l3 - dodgeball)
      (and
        (preference objectMovedRoomSide
          (exists (?b - curved_wooden_ramp)
            (then
              (hold (in_motion desk) )
              (once (agent_holds ?l3) )
              (once-measure (agent_holds ?l3) (distance ?l3 ?b) )
            )
          )
        )
        (preference dropAttempt
          (exists (?h - hexagonal_bin)
            (then
              (hold (in ?l3 ?h) )
              (once (on ?h ?h) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 4 (* (count-once-per-objects dropAttempt:basketball) (* 4 (+ 7 (* 1 (count dropAttempt:basketball:beachball) )
          )
        )
      )
    )
  )
)
(:scoring
  (* 4 2 )
)
)

(define (game game-id-142) (:domain medium-objects-room-v1)
(:setup
  (forall (?ob - hexagonal_bin ?s - doggie_bed)
    (exists (?t2 - pillow)
      (exists (?b - hexagonal_bin)
        (exists (?h - ball)
          (forall (?b ?r1 ?o - game_object)
            (game-optional
              (not
                (in_motion rug)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference nonBlockPlacedInBuilding
      (exists (?d - (either dodgeball pillow watch))
        (then
          (once (and (and (not (exists (?h - dodgeball) (on agent ?h) ) ) (agent_holds ?d) ) (not (not (and (and (agent_holds ?d) (and (and (in rug ?d) (agent_holds ?d) ) (in_motion ?d) ) (exists (?c1 - game_object) (in_motion ?d) ) ) (and (not (open ?d) ) (or (same_color ?d ?d) (not (agent_holds ?d) ) ) ) ) ) ) (same_object ?d ?d) ) )
          (forall-sequence (?h - bridge_block)
            (then
              (once (in ?h ?d) )
              (once (agent_holds ?h) )
              (once (agent_holds ?h) )
            )
          )
          (once (not (and (not (and (toggled_on ?d) (is_setup_object ?d) ) ) (not (agent_holds rug) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (* (count-once-per-objects nonBlockPlacedInBuilding:pink_dodgeball) (count-once-per-objects nonBlockPlacedInBuilding:purple) 5 )
      (- (- (count nonBlockPlacedInBuilding:dodgeball) )
      )
    )
  )
)
(:scoring
  (count nonBlockPlacedInBuilding:dodgeball)
)
)

(define (game game-id-143) (:domain few-objects-room-v1)
(:setup
  (forall (?p1 - dodgeball ?o - hexagonal_bin ?d - dodgeball ?b - teddy_bear ?r2 - hexagonal_bin)
    (and
      (game-optional
        (same_type ?r2 ?r2)
      )
    )
  )
)
(:constraints
  (and
    (preference pyramidBlockAtopTowerAtEnd
      (exists (?b3 - ball ?g - game_object ?b - game_object ?t - hexagonal_bin)
        (at-end
          (toggled_on room_center)
        )
      )
    )
  )
)
(:terminal
  (>= 0 (count-once pyramidBlockAtopTowerAtEnd:red) )
)
(:scoring
  (count pyramidBlockAtopTowerAtEnd:basketball)
)
)

(define (game game-id-144) (:domain medium-objects-room-v1)
(:setup
  (exists (?o - hexagonal_bin)
    (forall (?c ?g ?c4 ?t1 - beachball ?c - (either ball doggie_bed))
      (and
        (game-optional
          (not
            (agent_holds ?c)
          )
        )
        (forall (?d - cube_block ?b4 - (either cube_block cube_block cylindrical_block))
          (game-conserved
            (not
              (and
                (in_motion ?o)
                (not
                  (exists (?h - (either yellow_cube_block cellphone))
                    (and
                      (in_motion door)
                      (and
                        (and
                          (agent_holds floor)
                          (not
                            (game_over )
                          )
                        )
                        (in_motion ?c)
                      )
                    )
                  )
                )
                (and
                  (agent_holds floor)
                  (in_motion ?b4)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttemptFromBehindBlock
      (exists (?h - flat_block ?b10 - building)
        (then
          (once (rug_color_under ?b10 agent) )
          (once (adjacent ?b10 floor) )
          (once (in_motion ?b10) )
        )
      )
    )
    (forall (?r1 - cube_block)
      (and
        (preference throwGolfballToBin
          (exists (?d - (either bridge_block))
            (then
              (once (not (in ?d ?d) ) )
              (hold (in ?d bed) )
              (hold (and (in_motion ?d) (agent_holds ?d) ) )
            )
          )
        )
        (preference ballKnocksTeddy
          (exists (?d - pillow)
            (then
              (once (not (not (agent_holds ?r1) ) ) )
              (hold (not (agent_crouches ) ) )
              (once (faces ?r1 floor) )
              (hold-while (and (and (in_motion agent) (agent_holds ?d) ) (in_motion ?d) ) (and (agent_holds ?r1) (and (adjacent ?r1 ?d) (same_color green_golfball rug) ) ) (agent_holds side_table) )
              (hold (in_motion ?r1) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (= 2 (external-forall-maximize 1 ) )
)
(:scoring
  (* (total-score) 3 )
)
)

(define (game game-id-145) (:domain few-objects-room-v1)
(:setup
  (and
    (game-optional
      (not
        (agent_holds door)
      )
    )
  )
)
(:constraints
  (and
    (preference objectLandsInBin
      (exists (?b6 - teddy_bear)
        (then
          (once (exists (?l - triangular_ramp) (and (not (and (and (and (in_motion agent) (not (in_motion ?l) ) ) (and (on ?b6 pink) (< 0.5 (x_position upright)) ) ) (agent_holds ?l) ) ) (exists (?o - curved_wooden_ramp) (in_motion ?l) ) ) ) )
          (hold (same_color ?b6 ?b6) )
          (once (and (not (adjacent ?b6 ?b6) ) (and (agent_holds ?b6) (in_motion ?b6) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (count-once objectLandsInBin:doggie_bed) (total-score) )
    1
  )
)
(:scoring
  (+ (count objectLandsInBin:dodgeball) (count objectLandsInBin:pink:dodgeball) )
)
)

(define (game game-id-146) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (game-optional
        (not
          (not
            (and
              (agent_holds west_wall)
              (faces bed front)
            )
          )
        )
      )
      (forall (?h - (either chair game_object))
        (forall (?b2 - hexagonal_bin)
          (and
            (exists (?g - (either teddy_bear pencil triangle_block cellphone cylindrical_block credit_card dodgeball))
              (game-optional
                (not
                  (and
                    (not
                      (on ?b2 ?g)
                    )
                    (agent_holds ?g)
                  )
                )
              )
            )
            (game-conserved
              (not
                (and
                  (and
                    (not
                      (agent_holds ?h)
                    )
                    (< 5 (distance ?b2 ?h))
                    (not
                      (is_setup_object ?b2)
                    )
                  )
                  (< 1 0)
                  (on door ?h)
                )
              )
            )
            (forall (?b - block)
              (and
                (and
                  (forall (?b ?l3 - dodgeball)
                    (game-conserved
                      (and
                        (agent_holds ?b)
                        (not
                          (and
                            (and
                              (and
                                (touch ?b2 ?b2)
                                (not
                                  (and
                                    (same_object ?l3 ?h)
                                    (or
                                      (and
                                        (and
                                          (in ?l3 ?b)
                                          (and
                                            (not
                                              (agent_holds ?h)
                                            )
                                            (and
                                              (not
                                                (and
                                                  (not
                                                    (and
                                                      (in ?l3 ?l3)
                                                      (or
                                                        (in_motion ?b2)
                                                        (not
                                                          (in_motion ?l3)
                                                        )
                                                      )
                                                    )
                                                  )
                                                  (not
                                                    (not
                                                      (and
                                                        (and
                                                          (and
                                                            (in_motion ?b2)
                                                            (not
                                                              (in ?b ?b2)
                                                            )
                                                          )
                                                          (not
                                                            (agent_holds ?h)
                                                          )
                                                        )
                                                        (not
                                                          (not
                                                            (in_motion rug)
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                              (< 6 (x_position bed))
                                            )
                                          )
                                        )
                                        (same_color bed ?b2)
                                      )
                                      (touch ?b ?b)
                                    )
                                  )
                                )
                              )
                              (and
                                (and
                                  (on ?l3 ?h)
                                  (and
                                    (and
                                      (and
                                        (same_color ?h room_center)
                                        (and
                                          (in_motion agent)
                                          (agent_holds agent)
                                          (> 1 (distance ?b2 ?l3))
                                          (in_motion ?b)
                                          (and
                                            (touch ?b ?h)
                                            (not
                                              (agent_holds room_center)
                                            )
                                          )
                                          (in_motion ?b2)
                                        )
                                      )
                                      (and
                                        (same_color floor ?b)
                                        (in_motion ?b)
                                      )
                                    )
                                    (adjacent ?b ?l3)
                                  )
                                )
                                (in_motion agent)
                              )
                            )
                            (not
                              (agent_holds ?h)
                            )
                          )
                        )
                      )
                    )
                  )
                )
                (game-conserved
                  (agent_holds ?h)
                )
              )
            )
          )
        )
      )
    )
    (exists (?o - chair ?h ?b - (either alarm_clock cube_block dodgeball) ?d - shelf ?b2 ?r - hexagonal_bin)
      (and
        (exists (?tb - dodgeball)
          (game-conserved
            (in_motion ?r)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - dodgeball)
      (and
        (preference dodgeballBouncesOnceToDoggieBed
          (exists (?c - game_object ?d - (either cube_block cellphone))
            (then
              (once (and (rug_color_under ?d ?d) (and (not (adjacent ?d ?d) ) (and (not (in agent ?d) ) (in_motion agent) ) ) ) )
            )
          )
        )
      )
    )
    (preference throwFromBehindChairsInBin
      (exists (?d - hexagonal_bin)
        (then
          (hold (> (building_size ?d) (distance room_center ?d)) )
          (once (not (adjacent ?d room_center) ) )
          (once (agent_holds ?d) )
        )
      )
    )
  )
)
(:terminal
  (> 2 2 )
)
(:scoring
  (count-once-per-objects throwFromBehindChairsInBin:beachball)
)
)

(define (game game-id-147) (:domain medium-objects-room-v1)
(:setup
  (forall (?h - block ?x - hexagonal_bin)
    (game-optional
      (agent_holds ?x)
    )
  )
)
(:constraints
  (and
    (preference basketMadeFromRug
      (exists (?o - pillow)
        (at-end
          (and
            (agent_holds desk)
            (exists (?o - cube_block)
              (in desk ?o)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (<= (count-once-per-objects basketMadeFromRug:dodgeball:dodgeball) 10 )
  )
)
(:scoring
  (count basketMadeFromRug:blue_dodgeball:dodgeball)
)
)

(define (game game-id-148) (:domain medium-objects-room-v1)
(:setup
  (exists (?r2 - curved_wooden_ramp)
    (and
      (game-optional
        (on ?r2 agent)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrowAttempt
      (exists (?b - dodgeball ?b - hexagonal_bin)
        (at-end
          (in ?b ?b)
        )
      )
    )
  )
)
(:terminal
  (>= 4 15 )
)
(:scoring
  (external-forall-maximize
    (* 15 (count-longest ballThrowAttempt) (count ballThrowAttempt:green) )
  )
)
)

(define (game game-id-149) (:domain many-objects-room-v1)
(:setup
  (exists (?h - beachball)
    (and
      (game-optional
        (adjacent ?h ?h)
      )
    )
  )
)
(:constraints
  (and
    (forall (?t2 - chair)
      (and
        (preference blockFromRugToDesk
          (exists (?b1 ?g - color ?c1 - blue_cube_block ?c - pyramid_block)
            (then
              (once (forall (?f - shelf ?b - hexagonal_bin) (in_motion ?c) ) )
              (once (forall (?w1 - pillow) (in_motion ?t2) ) )
              (once (on rug ?t2) )
            )
          )
        )
      )
    )
    (preference throwAttempt
      (exists (?l2 - hexagonal_bin)
        (then
          (once (on ?l2 ?l2) )
          (once (>= (building_size ?l2) (distance ?l2 floor)) )
          (once (and (and (not (agent_holds ?l2) ) (not (and (and (agent_crouches ) (exists (?w2 - teddy_bear ?d - ball) (and (agent_holds ?l2) (in_motion ?l2) ) ) ) (and (and (not (agent_holds rug) ) (>= (distance ?l2 ?l2) 1) ) (in_motion ?l2) ) (and (not (and (or (agent_holds ?l2) (and (and (and (in_motion ?l2) (in_motion ?l2) ) (in front ?l2) (not (equal_z_position ?l2 ?l2) ) ) (in ?l2 ?l2) (above ?l2 room_center) ) ) (and (agent_holds ?l2) (not (not (not (and (not (agent_holds ?l2) ) (rug_color_under room_center floor) ) ) ) ) (not (< (distance agent ?l2) 1) ) (same_color ?l2 ?l2) ) ) ) (touch ?l2 ?l2) (not (and (in_motion ?l2) (between ?l2 ?l2 ?l2) ) ) ) ) ) ) (>= 6 0.5) ) )
        )
      )
    )
  )
)
(:terminal
  (> 2 (+ (+ (+ 2 (count blockFromRugToDesk:pink_dodgeball:pink) )
        3
        (* 8 (* 4 (= (count-once-per-objects throwAttempt:dodgeball:tall_cylindrical_block) (>= 5 1 )
              (+ (count blockFromRugToDesk:basketball) (or (count throwAttempt:blue_dodgeball) 10 ) )
            )
          )
          2
        )
      )
      4
      (* (- 20 )
      )
    )
  )
)
(:scoring
  2
)
)

(define (game game-id-150) (:domain many-objects-room-v1)
(:setup
  (exists (?g - teddy_bear ?b6 ?t ?p2 ?b2 ?h - cube_block ?d - dodgeball ?h - (either side_table triangular_ramp) ?d - dodgeball)
    (game-conserved
      (and
        (not
          (equal_z_position agent ?d)
        )
        (in ?d ?d)
      )
    )
  )
)
(:constraints
  (and
    (preference itemInClosedDrawerAtEnd
      (exists (?h - dodgeball ?r - hexagonal_bin ?w - building)
        (then
          (once (< 0.5 (distance ?w front)) )
          (hold-while (not (= 1 1) ) (agent_holds upright) )
          (any)
        )
      )
    )
    (forall (?h - ball ?l1 - flat_block)
      (and
        (preference ballThrownToWallToAgent
          (exists (?b - (either desktop) ?o1 - hexagonal_bin)
            (then
              (hold (same_type rug front) )
              (hold-to-end (touch ?l1 ?o1) )
              (once (in_motion ?o1) )
            )
          )
        )
        (preference throwKnocksBlock
          (exists (?h - doggie_bed)
            (then
              (once (rug_color_under ?h desk) )
              (hold (agent_holds ?h) )
              (hold (in rug ?l1) )
            )
          )
        )
        (preference blockInTowerKnockedByDodgeball
          (exists (?b - doggie_bed ?h - hexagonal_bin)
            (then
              (hold-while (>= (distance blue ?h) 1) (agent_holds ?l1) )
              (hold (in_motion ?h) )
              (once (in_motion ?h) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (and
      (or
        (> 1 (count-total throwKnocksBlock:dodgeball:pink) )
        (> (and 40 (count-once-per-external-objects blockInTowerKnockedByDodgeball:side_table) 2 ) (/ 1 (* (count itemInClosedDrawerAtEnd:yellow) 2 )
          )
        )
        (>= (count throwKnocksBlock:basketball) (count-once-per-objects throwKnocksBlock:doggie_bed:green:golfball) )
      )
    )
    (or
      (>= (count blockInTowerKnockedByDodgeball:doggie_bed) (* (count ballThrownToWallToAgent:purple:cylindrical_block) (count-once itemInClosedDrawerAtEnd:blue_cube_block) )
      )
      (>= (* (count-total throwKnocksBlock:blue_dodgeball) (+ 15 (not (count ballThrownToWallToAgent:red:yellow) ) )
        )
        4
      )
    )
  )
)
(:scoring
  (>= (count-once-per-external-objects ballThrownToWallToAgent:dodgeball:pink) 2 )
)
)

(define (game game-id-151) (:domain few-objects-room-v1)
(:setup
  (forall (?h - hexagonal_bin ?d - hexagonal_bin)
    (game-optional
      (and
        (and
          (and
            (same_object agent agent)
            (in_motion ?d)
          )
          (adjacent top_shelf ?d)
        )
        (exists (?h - pyramid_block)
          (not
            (touch right ?h)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b1 - ball)
      (and
        (preference blockPickedUp
          (exists (?o - game_object ?bl ?h - ball)
            (then
              (once (= 1 1) )
              (once (agent_holds ?bl) )
              (once (not (not (not (in agent ?h) ) ) ) )
            )
          )
        )
      )
    )
    (forall (?f - hexagonal_bin ?p - hexagonal_bin)
      (and
        (preference beachballOnRug
          (exists (?o - cylindrical_block ?b - hexagonal_bin)
            (then
              (once (< 7 (distance ?b agent)) )
              (once (same_type ?p ?b) )
              (once (agent_holds ?b) )
            )
          )
        )
        (preference blockInTowerKnocked
          (exists (?c - wall ?g - dodgeball)
            (at-end
              (in ?g bed)
            )
          )
        )
        (preference bookOnDeskShelf
          (exists (?p - hexagonal_bin ?o1 - curved_wooden_ramp)
            (then
              (once (in_motion ?p) )
              (once (not (not (or (on agent desk) ) ) ) )
              (once (same_type ?o1 ?o1) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (not 10 ) (total-score) )
  )
)
(:scoring
  (+ 2 (+ (* 7 (count beachballOnRug:golfball:golfball) )
      (* (* 100 (count-once-per-objects blockPickedUp:basketball) )
        (* -30 5 (count-once-per-external-objects blockPickedUp:blue_dodgeball) )
      )
    )
  )
)
)

(define (game game-id-152) (:domain few-objects-room-v1)
(:setup
  (forall (?b2 ?h ?s - hexagonal_bin)
    (not
      (game-conserved
        (and
          (on ?b2 bed)
          (not
            (not
              (in_motion agent)
            )
          )
          (not
            (not
              (not
                (is_setup_object ?h)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference watchOnShelf
      (exists (?p - ball)
        (then
          (hold (and (agent_holds ?p) (in ?p agent) ) )
          (once (and (in_motion ?p) (not (and (on ?p ?p) (not (in_motion block) ) ) ) (on rug ?p) ) )
          (hold-while (in_motion ?p) (and (in_motion ?p) (touch bed ?p) ) )
        )
      )
    )
    (preference objectMoved
      (exists (?d - hexagonal_bin)
        (then
          (hold (agent_holds ?d) )
          (once (on ?d ?d) )
          (once (agent_holds ?d) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 1 1 )
    (<= 2 8 )
  )
)
(:scoring
  (+ 5 (* (count watchOnShelf:doggie_bed:beachball:dodgeball) (* 10 (* 7 (count objectMoved:basketball) )
      )
    )
  )
)
)

(define (game game-id-153) (:domain few-objects-room-v1)
(:setup
  (exists (?b ?s - doggie_bed)
    (game-conserved
      (not
        (not
          (exists (?c - teddy_bear ?b1 ?x ?b1 - tan_cube_block ?c - shelf)
            (not
              (not
                (not
                  (in pink rug)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference cubeBlockThrowAttempt
      (exists (?b7 ?c3 ?g ?d - golfball)
        (at-end
          (agent_holds floor)
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (>= (count-once-per-external-objects cubeBlockThrowAttempt:beachball) (total-score) )
    )
  )
)
(:scoring
  (* (* (+ (>= (* 8 (+ (+ 10 (count cubeBlockThrowAttempt:cube_block) )
              4
            )
          )
          (count cubeBlockThrowAttempt:blue_dodgeball)
        )
        -10
      )
      (count-once-per-objects cubeBlockThrowAttempt:tall_cylindrical_block:beachball)
    )
    10
  )
)
)

(define (game game-id-154) (:domain medium-objects-room-v1)
(:setup
  (forall (?o - (either cylindrical_block cylindrical_block) ?o3 - wall)
    (game-conserved
      (= (distance_side ?o3 back agent) 8)
    )
  )
)
(:constraints
  (and
    (preference ballKnocksTeddy
      (exists (?h - hexagonal_bin ?o - hexagonal_bin)
        (then
          (once (agent_holds ?o) )
          (hold (in_motion ?o) )
          (hold (touch ?o upside_down) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects ballKnocksTeddy:yellow) (count ballKnocksTeddy:red) )
)
(:scoring
  (count-once-per-objects ballKnocksTeddy:top_drawer:golfball)
)
)

(define (game game-id-155) (:domain few-objects-room-v1)
(:setup
  (forall (?c1 - hexagonal_bin ?d - chair)
    (game-optional
      (not
        (in_motion ?d)
      )
    )
  )
)
(:constraints
  (and
    (preference failedThrowToBin
      (exists (?h - (either rug dodgeball))
        (then
          (once (is_setup_object ?h) )
          (hold (on desk ?h) )
          (once (not (in_motion right) ) )
        )
      )
    )
    (forall (?d - dodgeball ?b - (either floor mug laptop) ?d1 - building)
      (and
        (preference throwAttempt
          (at-end
            (and
              (adjacent desk bed)
              (and
                (opposite ?d1 ?d1)
                (and
                  (and
                    (< (distance ?d1 ?d1) (distance ?d1 ?d1))
                    (in_motion ?d1)
                  )
                  (not
                    (in_motion ?d1)
                  )
                  (adjacent ?d1 agent)
                )
              )
            )
          )
        )
        (preference pillowThrownToDoggieBed
          (exists (?tb - chair ?h - cube_block)
            (then
              (hold (agent_holds ?h) )
              (hold-while (same_object ?d1 ?d1) (adjacent bottom_shelf ?d1) )
              (hold (faces ?h ?d1) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> 1 (count failedThrowToBin:purple) )
)
(:scoring
  3
)
)

(define (game game-id-156) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds room_center)
  )
)
(:constraints
  (and
    (preference tanObjectMovedToRoomCenter
      (exists (?g ?c - (either golfball) ?b - curved_wooden_ramp)
        (then
          (once (in_motion ?b) )
          (hold (in_motion ?b) )
          (hold (not (and (and (is_setup_object ?b) (is_setup_object bed) (adjacent_side ?b ?b front ?b) ) (and (in_motion bed) (on ?b ?b) ) ) ) )
        )
      )
    )
    (forall (?g - shelf)
      (and
        (preference cubeBlockInBuilding
          (exists (?c - doggie_bed)
            (then
              (hold (and (agent_holds ?c) (agent_holds ?g) (exists (?c - triangular_ramp) (toggled_on room_center) ) ) )
              (once (same_color ?c ?g) )
              (hold (and (in ?g bed) (and (agent_holds ?g) (touch ?c ?g) (and (> (x_position rug) 0) (object_orientation upright ?c) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (* 10 (* (+ (> 3 5 )
          5
        )
        10
      )
    )
  )
)
(:scoring
  (count tanObjectMovedToRoomCenter:cube_block:golfball)
)
)

(define (game game-id-157) (:domain many-objects-room-v1)
(:setup
  (forall (?d - cube_block ?h - pillow)
    (exists (?l1 - (either pyramid_block cube_block) ?db - ball ?r2 - (either doggie_bed dodgeball block))
      (game-optional
        (not
          (agent_holds ?r2)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToBinFromOppositeWall
      (exists (?c - hexagonal_bin ?b ?b9 - hexagonal_bin ?c3 - (either cd cellphone) ?b3 - yellow_pyramid_block ?tb - hexagonal_bin)
        (then
          (hold (not (and (and (not (adjacent_side ?tb ?tb ?tb) ) (adjacent_side top_shelf ?tb ?tb) ) (and (and (in_motion floor) (< 0.5 3) ) (agent_holds ?tb) ) ) ) )
          (once (and (exists (?c5 - game_object) (and (and (< 0.5 0.5) (on ?c5 ?tb) (agent_holds ?c5) ) (adjacent ?tb ?c5) (in_motion ?c5) (on ?tb ?c5) (in_motion ?tb) (adjacent ?c5 rug) (and (touch ?c5 floor) (> 3 (distance_side south_west_corner ?c5 ?tb)) ) (between ?tb ?tb desk) (agent_holds ?c5) (in_motion yellow) (not (opposite ?tb ?c5) ) (not (<= 4 2) ) ) ) (not (adjacent ?tb ?tb) ) (agent_holds ?tb) (agent_holds ?tb) ) )
          (hold (not (same_color ?tb room_center) ) )
        )
      )
    )
  )
)
(:terminal
  (> (* (count throwToBinFromOppositeWall:book) (+ (* (* (count-overlapping throwToBinFromOppositeWall:beachball) (count throwToBinFromOppositeWall:basketball) )
          5
        )
        3
        (count-same-positions throwToBinFromOppositeWall:dodgeball)
      )
    )
    (* (count throwToBinFromOppositeWall:green) 5 )
  )
)
(:scoring
  10
)
)

(define (game game-id-158) (:domain many-objects-room-v1)
(:setup
  (forall (?c2 - ball)
    (game-conserved
      (and
        (agent_holds bed)
        (and
          (agent_holds ?c2)
          (in_motion ?c2)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballRolledOnRampToRug
      (exists (?r - curved_wooden_ramp)
        (then
          (hold (> (distance ?r ?r) 1) )
          (once (and (adjacent_side ?r ?r ?r agent) (and (and (agent_holds upside_down) (in_motion ?r) ) (on ?r ?r) ) ) )
          (hold (in bed ?r) )
        )
      )
    )
    (forall (?l3 - (either golfball doggie_bed cd cube_block))
      (and
        (preference failedThrowAttempt
          (exists (?r1 - shelf)
            (then
              (once (in_motion ?r1) )
              (once (in agent pink_dodgeball) )
            )
          )
        )
        (preference ballThrownToWallToAgent
          (exists (?d - building ?r2 - dodgeball)
            (at-end
              (agent_holds ?l3)
            )
          )
        )
        (preference golfballInBinFromPillow
          (exists (?o3 - teddy_bear)
            (then
              (once (between ?l3 ?l3 ?l3) )
              (once (not (in_motion ?o3) ) )
              (once (not (not (in_motion ?l3) ) ) )
            )
          )
        )
      )
    )
    (preference dodgeballFromBlockToBin
      (exists (?w2 - beachball)
        (then
          (hold (on ?w2 agent) )
          (hold (not (in_motion floor) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 2 50 )
  )
)
(:scoring
  (count golfballInBinFromPillow:yellow)
)
)

(define (game game-id-159) (:domain few-objects-room-v1)
(:setup
  (exists (?p1 - hexagonal_bin)
    (game-conserved
      (is_setup_object room_center)
    )
  )
)
(:constraints
  (and
    (preference objectInBuilding
      (exists (?r - (either dodgeball floor))
        (then
          (once (not (game_start ) ) )
          (once (and (not (in_motion ?r) ) (not (not (not (adjacent_side ?r ?r ?r) ) ) ) ) )
          (once (in ?r ?r) )
        )
      )
    )
  )
)
(:terminal
  (>= (count objectInBuilding:basketball:yellow) 100 )
)
(:scoring
  (+ (count-total objectInBuilding:dodgeball) 4 )
)
)

(define (game game-id-160) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds desk)
  )
)
(:constraints
  (and
    (preference smallItemsInPlace
      (exists (?b ?o1 - wall ?c5 - shelf)
        (then
          (once (same_type ?c5 agent) )
          (once (or (= (distance_side ?c5 ?c5 ?c5) 1) (touch ?c5 bed) ) )
          (once (and (not (in_motion ?c5) ) (agent_holds ?c5) ) )
        )
      )
    )
    (preference tanObjectMovedToRoomCenter
      (exists (?c6 - ball ?b - pillow)
        (at-end
          (exists (?f - triangular_ramp ?o3 - drawer)
            (not
              (on ?o3 ?o3)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* 4 6 )
    (* (* (* 5 5 )
        (count-once tanObjectMovedToRoomCenter:hexagonal_bin)
      )
      (+ 3 (total-score) )
    )
  )
)
(:scoring
  (+ 3 6 3 )
)
)

(define (game game-id-161) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds desk)
  )
)
(:constraints
  (and
    (preference objectOnBed
      (exists (?o - wall)
        (then
          (hold (agent_holds ?o) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (* 3 (count-once objectOnBed:basketball) 8 (* (count objectOnBed:basketball:basketball) (or (external-forall-maximize (* 300 3 )
            )
            (count-once objectOnBed:yellow)
            (* (* (count objectOnBed:dodgeball:hexagonal_bin) (count objectOnBed:beachball) )
              6
            )
          )
          (* (count objectOnBed:hexagonal_bin) (* (count objectOnBed:triangle_block:beachball) (+ (count-once objectOnBed:red) (count objectOnBed:purple:dodgeball) )
            )
          )
        )
      )
      (count objectOnBed:basketball:dodgeball:golfball)
    )
    (>= (* (+ 1 (* (count objectOnBed:golfball) (total-score) (count-total objectOnBed:basketball:dodgeball) )
          3
        )
        (total-time)
      )
      (total-score)
    )
  )
)
(:scoring
  1
)
)

(define (game game-id-162) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (in_motion agent)
  )
)
(:constraints
  (and
    (forall (?c ?b - dodgeball)
      (and
        (preference throwAttemptFromBehindBlock
          (exists (?o - building)
            (then
              (once (and (in_motion ?b) (not (not (in_motion ?c) ) ) ) )
              (once (adjacent ?o ?c) )
              (once (= (distance ?b ?o) (distance agent block)) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count throwAttemptFromBehindBlock:blue:alarm_clock) (* (+ (count throwAttemptFromBehindBlock:beachball) )
      10
      (* 3 3 )
    )
  )
)
(:scoring
  1
)
)

(define (game game-id-163) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (not
      (exists (?p - (either cube_block laptop))
        (agent_holds room_center)
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?c2 - hexagonal_bin)
        (then
          (once (and (agent_holds ?c2) (and (and (> 1 (distance floor agent)) (is_setup_object left) ) (not (on ?c2 ?c2) ) (and (forall (?h - curved_wooden_ramp) (object_orientation ?c2 desk) ) (and (agent_holds ?c2) (agent_holds agent) ) ) ) ) )
          (once (touch pink_dodgeball ?c2) )
          (hold-while (not (and (< (distance_side ?c2 floor ?c2) 3) (on ?c2 door) ) ) (on pink ?c2) )
        )
      )
    )
    (forall (?h - hexagonal_bin ?b - triangular_ramp)
      (and
        (preference itemsTurnedOff
          (exists (?t - dodgeball ?o2 - dodgeball ?h - (either pencil blue_cube_block))
            (then
              (hold-while (adjacent_side ?b ?b ?b ?h) (<= 6 9) )
              (forall-sequence (?o4 ?o5 - block)
                (then
                  (once (equal_z_position ?h ?o5) )
                  (once (not (in ?h desk) ) )
                  (once (not (and (and (in_motion ?h) (in_motion agent) ) (and (and (in_motion agent) (object_orientation ?o5 ?o4) ) (on rug side_table) ) ) ) )
                  (hold (not (not (agent_holds ?b) ) ) )
                )
              )
              (forall-sequence (?b - (either dodgeball cd))
                (then
                  (hold-while (and (on front ?h) (or (equal_x_position ?b ?h) (agent_holds ?h) ) ) (and (in_motion ?b) (in_motion ?h) (and (not (object_orientation ?h desk) ) (in_motion ?b) (and (and (and (not (or (and (agent_holds ?h) (agent_holds ?h) (same_type desk ?b) ) (agent_holds ?h) (agent_holds ?b) ) ) (and (in_motion ?b) (agent_holds ?b) ) ) (exists (?b - hexagonal_bin) (object_orientation ?b agent) ) ) (not (in ?h ?h) ) ) ) ) )
                  (once (adjacent_side ?b room_center ?b ?h) )
                  (once (not (and (< 3 1) (agent_holds agent) ) ) )
                )
              )
            )
          )
        )
        (preference itemsBroken
          (exists (?b5 - (either floor flat_block floor))
            (then
              (hold (> 10 (distance_side ?b ?b ?b)) )
              (hold (in_motion ?b) )
              (hold (not (in ?b5 agent) ) )
            )
          )
        )
      )
    )
    (forall (?t - dodgeball ?o1 - game_object)
      (and
        (preference bigObjectThrownToBed
          (exists (?b8 - (either cube_block dodgeball basketball) ?l - building)
            (then
              (hold (is_setup_object room_center) )
              (once (and (faces ?l agent) (above ?o1 agent) ) )
              (once (agent_holds ?o1) )
            )
          )
        )
        (preference objectInBuilding
          (exists (?b5 - (either dodgeball cube_block))
            (then
              (hold (and (on ?o1 ?b5) (and (not (not (and (= (distance bed ?b5) (distance ?o1 ?b5)) (not (exists (?h - cube_block) (and (in_motion desk) (touch ?o1 ?b5) ) ) ) ) ) ) (not (opposite ?o1 ?o1) ) ) (= 1 1) ) )
              (hold-while (agent_holds ?o1) (not (and (and (in_motion ?o1) (adjacent ?b5 ?b5) ) (adjacent agent ?b5) ) ) (in rug ?b5) (< (distance front ?b5) (distance ?o1 pillow)) )
              (once (in_motion ?b5) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 50 6 )
)
(:scoring
  60
)
)

(define (game game-id-164) (:domain many-objects-room-v1)
(:setup
  (forall (?c - (either cellphone dodgeball dodgeball) ?b4 - dodgeball ?b - teddy_bear)
    (exists (?o2 - ball)
      (and
        (game-optional
          (in_motion ?b)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwKnocksOverBear
      (exists (?d - teddy_bear)
        (then
          (hold (in top_shelf ?d) )
          (hold (equal_x_position ?d ?d) )
          (once (and (in ?d ?d) (adjacent ?d ?d) ) )
        )
      )
    )
    (preference smallObjectThrownToBed
      (exists (?d1 - block)
        (at-end
          (on ?d1 ?d1)
        )
      )
    )
    (forall (?l - block)
      (and
        (preference otherObjectsOnDeskShelf
          (exists (?c2 - game_object)
            (then
              (once (in_motion east_sliding_door) )
              (once (< 4 (building_size ?l)) )
              (once (in ?l desktop) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count throwKnocksOverBear:red_pyramid_block:beachball) (count-once-per-objects smallObjectThrownToBed:beachball) (+ (* (* (* (total-score) 3 )
            10
          )
          (= (count-once-per-objects otherObjectsOnDeskShelf:blue_dodgeball) (count-once-per-objects smallObjectThrownToBed:golfball) )
        )
        (count-overlapping otherObjectsOnDeskShelf:hexagonal_bin)
        1
      )
    )
    5
  )
)
(:scoring
  10
)
)

(define (game game-id-165) (:domain medium-objects-room-v1)
(:setup
  (forall (?c - golfball)
    (game-optional
      (agent_holds ?c)
    )
  )
)
(:constraints
  (and
    (preference throwBallToDoggieBedOffWall
      (exists (?h ?b4 - wall)
        (then
          (hold (not (and (and (agent_holds ?b4) (>= (x_position ?h) 1) (and (on ?h ?h) (in_motion ?b4) ) ) (adjacent_side ?b4 agent ?h) ) ) )
          (hold (in_motion agent) )
          (once (in_motion room_center) )
        )
      )
    )
    (preference throwBallToBin
      (exists (?b6 - sliding_door)
        (then
          (once (not (in_motion pink) ) )
          (hold-while (open floor) (touch ?b6 ?b6) (in_motion ?b6) )
          (once (and (and (agent_holds ?b6) (and (and (in ?b6 ?b6) (and (< 1 8) (and (above ?b6 ?b6) (in_motion ?b6) ) (and (agent_holds pink_dodgeball) (agent_holds block) ) ) ) (and (and (not (not (in_motion ?b6) ) ) (not (and (agent_holds ?b6) (not (not (agent_holds agent) ) ) ) ) ) (and (agent_holds ?b6) ) ) ) (agent_holds ?b6) ) (not (not (agent_holds ?b6) ) ) ) )
        )
      )
    )
    (preference ballThrownFromRug
      (exists (?b6 - hexagonal_bin)
        (then
          (once (exists (?g - cylindrical_block) (and (and (not (not (in bed ?b6) ) ) (in_motion ?g) (and (adjacent rug ?g) (agent_holds ?b6) ) (not (opposite ?b6 rug) ) (and (<= (building_size ?b6) 4) (in_motion ?g) ) ) (on ?b6 room_center) ) ) )
          (hold (= (distance ?b6 ?b6) 1) )
          (hold (in ?b6 ?b6) )
        )
      )
    )
  )
)
(:terminal
  (> (count ballThrownFromRug:dodgeball) (count-once-per-objects throwBallToBin:yellow) )
)
(:scoring
  (count-once-per-objects throwBallToBin:beachball)
)
)

(define (game game-id-166) (:domain many-objects-room-v1)
(:setup
  (forall (?c5 - wall)
    (and
      (forall (?b - doggie_bed ?w1 - hexagonal_bin ?r - (either laptop golfball))
        (forall (?c - dodgeball ?c - hexagonal_bin ?h - (either cylindrical_block blue_cube_block))
          (exists (?p - block ?b10 - cube_block)
            (and
              (game-conserved
                (in_motion ?h)
              )
              (exists (?c - pillow)
                (exists (?c1 - hexagonal_bin)
                  (forall (?b8 - hexagonal_bin ?b1 - doggie_bed ?t2 - curved_wooden_ramp)
                    (game-conserved
                      (not
                        (agent_holds room_center)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
      (and
        (forall (?p2 - beachball ?o5 - (either doggie_bed key_chain))
          (game-conserved
            (on ?o5 ?c5)
          )
        )
        (game-conserved
          (touch bed door)
        )
      )
      (game-conserved
        (not
          (exists (?h - golfball ?d - (either golfball) ?c4 - game_object)
            (on ?c5 ?c5)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballFromDeskToTarget
      (exists (?r - sliding_door)
        (then
          (hold (not (and (in ?r ?r) (and (game_start ) (in desk ?r) ) ) ) )
          (once (adjacent ?r ?r) )
          (hold (in ?r ?r) )
        )
      )
    )
    (preference brownObjectMovedToRoomCenter
      (exists (?h - hexagonal_bin ?s ?r1 ?b ?p - (either key_chain) ?d - shelf ?t2 - color)
        (then
          (once (or (in ?t2 ?t2) (in ?t2 ?t2) (object_orientation ?t2 ?t2) (not (adjacent south_west_corner ?t2) ) ) )
          (once (not (in ?t2 desk) ) )
          (hold-while (not (in ?t2 ?t2) ) (and (on ?t2 bed) (agent_holds bed) ) )
          (hold-while (in_motion ?t2) (agent_holds agent) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects dodgeballFromDeskToTarget:red) 3 )
)
(:scoring
  5
)
)

(define (game game-id-167) (:domain few-objects-room-v1)
(:setup
  (exists (?h - game_object)
    (exists (?f - hexagonal_bin)
      (exists (?b2 - wall)
        (exists (?h - dodgeball)
          (forall (?l - hexagonal_bin ?o - ball)
            (and
              (forall (?p3 - teddy_bear)
                (exists (?s - hexagonal_bin ?c3 - hexagonal_bin)
                  (forall (?b - curved_wooden_ramp)
                    (forall (?h - game_object)
                      (or
                        (and
                          (game-conserved
                            (and
                              (in_motion ?o)
                              (adjacent ?h top_shelf)
                              (same_color ?f ?f)
                            )
                          )
                          (game-conserved
                            (agent_holds ?f)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockPickedUp
      (exists (?b - (either dodgeball teddy_bear pillow laptop dodgeball))
        (then
          (once (agent_holds ?b) )
          (once (or (and (not (not (on ?b agent) ) ) (and (not (in ?b ?b) ) (on ?b ?b) (game_over ) ) ) (and (in_motion ?b) (agent_holds ?b) (same_type ?b bed) ) (agent_holds upside_down) (not (and (not (agent_holds ?b) ) (agent_holds ?b) ) ) ) )
          (hold-for 9 (in_motion ?b) )
        )
      )
    )
  )
)
(:terminal
  (> 6 20 )
)
(:scoring
  (count-shortest blockPickedUp:hexagonal_bin)
)
)

(define (game game-id-168) (:domain few-objects-room-v1)
(:setup
  (exists (?d - golfball)
    (forall (?l1 - teddy_bear ?c4 - ball)
      (and
        (game-optional
          (agent_holds ?d)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?l4 - building ?g - hexagonal_bin)
      (and
        (preference smallItemsInPlace
          (then
            (once (in_motion agent) )
            (hold (not (in ?g ?g) ) )
            (once (in_motion ?g) )
          )
        )
      )
    )
  )
)
(:terminal
  (> (+ 5 (count smallItemsInPlace:basketball:pink) 4 (count-increasing-measure smallItemsInPlace:hexagonal_bin) (< (+ (* (* (+ 18 20 (* (* (count smallItemsInPlace:pink) (external-forall-maximize 4 ) )
                  (* (external-forall-maximize (>= 2 (* (- (total-score) )
                          (= (count smallItemsInPlace:blue_dodgeball:basketball) )
                        )
                      )
                    )
                    1
                  )
                )
              )
              (count smallItemsInPlace:beachball:basketball)
            )
            (count smallItemsInPlace:green)
          )
          (total-score)
        )
        (* (count-once smallItemsInPlace:pink_dodgeball) 1 (total-score) (count-once-per-external-objects smallItemsInPlace:yellow_cube_block) (count-once-per-objects smallItemsInPlace:yellow) (* (count smallItemsInPlace:dodgeball) (count-once-per-objects smallItemsInPlace:blue_cube_block) )
        )
      )
      10
    )
    2
  )
)
(:scoring
  4
)
)

(define (game game-id-169) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (game-optional
        (not
          (>= 1 1)
        )
      )
      (exists (?h - hexagonal_bin)
        (exists (?l - dodgeball)
          (game-conserved
            (in_motion ?h)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b6 - curved_wooden_ramp)
      (and
        (preference ballThrownFromRug
          (exists (?c6 - hexagonal_bin)
            (at-end
              (exists (?b1 - cube_block ?l1 - doggie_bed)
                (adjacent ?b6 ?b6)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (not
      (>= (external-forall-maximize 3 ) (* 6 (count ballThrownFromRug:white) (count ballThrownFromRug:red:golfball) )
      )
    )
  )
)
(:scoring
  (count ballThrownFromRug:blue_dodgeball:dodgeball:blue_cube_block)
)
)

(define (game game-id-170) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?d - hexagonal_bin)
      (game-conserved
        (in_motion ?d)
      )
    )
    (and
      (forall (?h - block ?b5 - dodgeball)
        (game-conserved
          (on floor back)
        )
      )
    )
    (forall (?b2 - dodgeball)
      (game-conserved
        (and
          (in_motion ?b2)
          (touch ?b2 ?b2)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToDrawerOrBin
      (exists (?c1 - block ?d - hexagonal_bin)
        (then
          (hold-while (adjacent ?d ?d) (< 3 1) )
          (once (not (on agent ?d) ) )
          (once (adjacent bed ?d) )
        )
      )
    )
    (preference throwAttempt
      (exists (?h - cube_block)
        (then
          (once (on ?h ?h) )
          (once (in_motion ?h) )
          (once (and (agent_holds ?h) (on ?h ?h) ) )
          (once (and (in_motion ?h) (and (in_motion ?h) (rug_color_under ?h ?h) ) ) )
        )
      )
    )
    (preference blockToBinFromRug
      (exists (?l4 - block)
        (then
          (once (agent_holds ?l4) )
          (once (in ?l4 ?l4) )
          (once (adjacent_side ?l4 ?l4 ?l4 ?l4) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-once throwToDrawerOrBin:dodgeball:pink) (total-score) )
    (>= (+ (count blockToBinFromRug:basketball) (count throwAttempt:yellow_cube_block) )
      (* (count-once-per-objects throwAttempt:white) 1 (count blockToBinFromRug:dodgeball) )
    )
  )
)
(:scoring
  (count-once-per-objects blockToBinFromRug:yellow_pyramid_block)
)
)

(define (game game-id-171) (:domain medium-objects-room-v1)
(:setup
  (exists (?p - dodgeball)
    (game-conserved
      (and
        (not
          (in_motion ?p)
        )
        (adjacent ?p ?p)
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?b6 - dodgeball ?l1 - shelf)
        (at-end
          (and
            (adjacent ?l1 ?l1)
            (same_color ?l1 ?l1)
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects throwBallToBin:dodgeball:purple) (* (count throwBallToBin:blue_cube_block) 5 )
  )
)
(:scoring
  (count-measure throwBallToBin:rug:blue_pyramid_block)
)
)

(define (game game-id-172) (:domain few-objects-room-v1)
(:setup
  (forall (?c - dodgeball)
    (game-conserved
      (in_motion ?c)
    )
  )
)
(:constraints
  (and
    (forall (?b1 - wall)
      (and
        (preference cubeBlockThrownToTopShelf
          (exists (?h - hexagonal_bin ?r1 - dodgeball)
            (then
              (once (on ?b1 ?r1) )
              (once (on ?b1 ?b1) )
              (once (agent_holds ?b1) )
            )
          )
        )
      )
    )
    (preference blockKnockedFromBuildingInBin
      (exists (?s ?b - hexagonal_bin ?l3 - (either tall_cylindrical_block cylindrical_block) ?h - cube_block)
        (at-end
          (on ?h ?h)
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (= (+ 2 (* (total-score) (count-once-per-objects blockKnockedFromBuildingInBin:doggie_bed) )
      )
      (count-once-per-objects blockKnockedFromBuildingInBin:beachball:dodgeball)
      (count-longest blockKnockedFromBuildingInBin:hexagonal_bin)
    )
  )
)
(:scoring
  (* (+ (+ (count-once-per-objects blockKnockedFromBuildingInBin:yellow) 5 (/ (count blockKnockedFromBuildingInBin:dodgeball) (count-once cubeBlockThrownToTopShelf:blue) ) (* 4 5 )
      )
      (count-once-per-objects cubeBlockThrownToTopShelf:blue_cube_block)
    )
    (* (count-total cubeBlockThrownToTopShelf:basketball) (count-once blockKnockedFromBuildingInBin:green:red) (count cubeBlockThrownToTopShelf:hexagonal_bin) (count blockKnockedFromBuildingInBin:golfball) (* (count blockKnockedFromBuildingInBin:beachball) (or (count cubeBlockThrownToTopShelf:pink:dodgeball) ) )
      (count blockKnockedFromBuildingInBin:dodgeball:yellow)
      (count blockKnockedFromBuildingInBin:beachball)
    )
  )
)
)

(define (game game-id-173) (:domain few-objects-room-v1)
(:setup
  (not
    (and
      (not
        (not
          (and
            (exists (?o - curved_wooden_ramp)
              (game-optional
                (not
                  (in ?o ?o)
                )
              )
            )
          )
        )
      )
      (and
        (and
          (exists (?p - curved_wooden_ramp)
            (and
              (forall (?c - teddy_bear)
                (not
                  (exists (?d - dodgeball)
                    (game-conserved
                      (in desk ?c)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - block)
      (and
        (preference throwToBinFromOppositeWall
          (exists (?d - wall)
            (then
              (hold (and (in agent ?d) (and (not (exists (?c2 - ball) (agent_holds ?c2) ) ) (not (adjacent ?d ?d) ) ) ) )
              (once (in_motion front) )
              (once (or (adjacent ?d ?d) (adjacent_side ?d ?d ?d) ) )
            )
          )
        )
        (preference dodgeballFromDeskToTarget
          (exists (?c2 - cube_block)
            (at-end
              (in_motion ?d)
            )
          )
        )
      )
    )
    (preference objectLandsInBin
      (exists (?c - hexagonal_bin)
        (then
          (hold-while (agent_holds ?c) (not (on ?c ?c) ) )
          (once (agent_holds ?c) )
          (hold (not (adjacent ?c desk) ) )
        )
      )
    )
    (forall (?c - (either cylindrical_block lamp) ?b - hexagonal_bin)
      (and
        (preference ballThrownToBin
          (exists (?h - ball ?d - game_object)
            (at-end
              (adjacent agent front)
            )
          )
        )
        (preference bigObjectThrownToBed
          (exists (?o2 - game_object ?b7 ?b ?c2 - cube_block ?b4 - dodgeball ?b - cube_block ?d2 - hexagonal_bin)
            (then
              (once (and (in_motion rug) (game_over ) ) )
              (hold (same_type ?d2 ?b) )
              (once (agent_holds pink_dodgeball) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count throwToBinFromOppositeWall:red) 15 )
)
(:scoring
  3
)
)

(define (game game-id-174) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (agent_holds agent)
  )
)
(:constraints
  (and
    (forall (?b2 - (either game_object doggie_bed) ?f - (either top_drawer desktop))
      (and
        (preference pinkObjectMovedToRoomCenter
          (exists (?c - (either yellow_cube_block pen) ?c - (either pyramid_block hexagonal_bin))
            (then
              (once (touch ?f ?c) )
              (once (on ?c ?c) )
              (hold (not (broken ?c) ) )
            )
          )
        )
        (preference objectThrownFromRug
          (exists (?x - ball ?s - doggie_bed)
            (at-end
              (not
                (on ?f ?f)
              )
            )
          )
        )
      )
    )
    (preference blockPickedUp
      (exists (?c - dodgeball)
        (then
          (once (and (and (and (is_setup_object ?c) (and (and (not (and (not (and (and (agent_holds ?c) (in_motion ?c) ) (and (in_motion ?c) (not (and (in ?c ?c) (and (forall (?p1 - dodgeball) (and (touch ?c ?c) (and (adjacent ?p1 agent) (adjacent_side ?p1 ?c ?c) ) (agent_holds ?c) ) ) (and (not (on ?c ?c) ) (adjacent ?c ?c) (< 1 (distance ?c ?c)) ) ) ) ) ) ) ) (between room_center agent agent) ) ) (not (>= 1 (distance ?c ?c)) ) (agent_holds ?c) ) (and (on ?c ?c) (in_motion ?c) ) (not (not (on ?c room_center) ) ) ) ) (not (agent_holds ?c) ) ) (in ?c ?c) ) )
          (once (and (and (not (in_motion ?c) ) (not (in_motion desk) ) ) (not (not (agent_holds ?c) ) ) (on room_center ?c) (is_setup_object rug) ) )
          (once (adjacent ?c ?c) )
        )
      )
    )
    (preference cubeBlockThrownToTopShelf
      (exists (?p1 - dodgeball ?c5 - dodgeball)
        (then
          (once (on ?c5 ?c5) )
          (once (in_motion ?c5) )
          (once (and (agent_holds ?c5) (is_setup_object room_center) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (- (count-once-per-objects blockPickedUp:dodgeball:green) )
    (count blockPickedUp:pink_dodgeball)
  )
)
(:scoring
  (* (* (count-overlapping blockPickedUp:cube_block) (total-score) )
    8
  )
)
)

(define (game game-id-175) (:domain few-objects-room-v1)
(:setup
  (forall (?b - (either dodgeball alarm_clock bridge_block))
    (game-conserved
      (agent_holds ?b)
    )
  )
)
(:constraints
  (and
    (preference ballDroppedInBin
      (exists (?c - chair)
        (then
          (once (not (and (same_color ?c ?c) (not (and (on ?c pink_dodgeball) (game_start ) ) ) ) ) )
          (once (in_motion upright) )
          (once-measure (and (agent_holds ?c) ) (distance ?c door) )
        )
      )
    )
  )
)
(:terminal
  (or
    (not
      (>= 3 (count-measure ballDroppedInBin:basketball) )
    )
    (or
      (or
        (or
          (not
            (or
              (>= (total-time) (count-once-per-objects ballDroppedInBin:dodgeball) )
              (>= (* 0.5 (count ballDroppedInBin:dodgeball) )
                5
              )
            )
          )
        )
        (not
          (>= (* (external-forall-maximize 3 ) -30 1 )
            (* 8 5 )
          )
        )
      )
      (or
        (or
          (>= (* (count-longest ballDroppedInBin:golfball:pink_dodgeball) (+ 3 (count ballDroppedInBin:cube_block) (+ 5 (* (count ballDroppedInBin:dodgeball) (- (count-same-positions ballDroppedInBin:pink_dodgeball) (* (+ (- 1 )
                          (count ballDroppedInBin:beachball)
                        )
                        2
                      )
                    )
                    (count-once-per-objects ballDroppedInBin:yellow_cube_block)
                  )
                )
              )
            )
            6
          )
          (> 20 (* (>= 8 (count ballDroppedInBin:purple) )
              7
            )
          )
        )
        (>= 15 (count-once-per-external-objects ballDroppedInBin) )
        (>= 5 6 )
        (>= (count ballDroppedInBin:beachball:basketball) 60 )
      )
      (> (- 6 )
        (count ballDroppedInBin:beachball:dodgeball)
      )
    )
  )
)
(:scoring
  5
)
)

(define (game game-id-176) (:domain medium-objects-room-v1)
(:setup
  (exists (?r1 - doggie_bed)
    (game-optional
      (on ?r1 rug)
    )
  )
)
(:constraints
  (and
    (forall (?t - building)
      (and
        (preference blockOnBlockInTowerAtEnd
          (exists (?c - curved_wooden_ramp ?o - hexagonal_bin)
            (then
              (once (not (not (agent_holds ?o) ) ) )
              (hold (in_motion ?t) )
              (hold (not (or (not (in_motion ?t) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (external-forall-maximize (< (count blockOnBlockInTowerAtEnd:basketball) (count-once-per-objects blockOnBlockInTowerAtEnd:basketball) )
    )
    (* (- (count-shortest blockOnBlockInTowerAtEnd:green) )
      (external-forall-maximize
        (+ (* 2 (count-once-per-objects blockOnBlockInTowerAtEnd:beachball) 2 3 (count blockOnBlockInTowerAtEnd:beachball) (count-once blockOnBlockInTowerAtEnd:hexagonal_bin) )
          50
        )
      )
    )
  )
)
(:scoring
  (* (count blockOnBlockInTowerAtEnd:hexagonal_bin) (total-time) )
)
)

(define (game game-id-177) (:domain medium-objects-room-v1)
(:setup
  (exists (?tb - hexagonal_bin)
    (game-conserved
      (exists (?l2 - pyramid_block)
        (not
          (not
            (in_motion ?tb)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwObjectToBin
      (exists (?s - block)
        (then
          (once (and (rug_color_under ?s pink) (agent_holds ?s) ) )
          (hold-while (game_over ) (agent_holds ?s) )
          (once (agent_holds ?s) )
        )
      )
    )
    (preference cubeBlockFromBedToShelf
      (exists (?o - hexagonal_bin)
        (then
          (once (in_motion ?o) )
          (once (in_motion ?o) )
          (once (same_type ?o ball) )
        )
      )
    )
    (preference bookOnDeskShelf
      (exists (?b - shelf ?s - hexagonal_bin)
        (then
          (hold (< 1 (distance ?s ?s)) )
          (hold (touch ?s agent) )
          (once (adjacent ?s ?s) )
        )
      )
    )
    (preference ballOnBedAtEnd
      (exists (?t1 - triangular_ramp)
        (then
          (once (on ?t1 ?t1) )
          (once (in_motion ?t1) )
          (hold (and (not (not (exists (?o - bridge_block) (in_motion side_table) ) ) ) (game_start ) ) )
          (once (agent_holds bed) )
        )
      )
    )
    (preference throwAttempt
      (exists (?p2 ?t - ball ?b - beachball)
        (then
          (once (on agent rug) )
          (once (< 4 8) )
          (once (not (in ?b ?b) ) )
        )
      )
    )
    (preference otherObjectsOnDeskShelf
      (exists (?o2 - pyramid_block)
        (then
          (hold (and (in_motion ?o2) (agent_holds ?o2) ) )
          (once (adjacent_side ?o2 ?o2 ?o2 ?o2) )
        )
      )
    )
  )
)
(:terminal
  (or
    (= 1 4 )
  )
)
(:scoring
  3
)
)

(define (game game-id-178) (:domain medium-objects-room-v1)
(:setup
  (exists (?o - (either teddy_bear mug))
    (forall (?d - dodgeball ?d - (either cellphone dodgeball) ?h - hexagonal_bin)
      (exists (?p2 - (either cylindrical_block wall))
        (exists (?f - hexagonal_bin)
          (or
            (and
              (forall (?x - dodgeball ?b6 - game_object)
                (and
                  (and
                    (and
                      (exists (?s ?d ?c5 ?d ?h - cube_block)
                        (exists (?b ?o - hexagonal_bin)
                          (and
                            (game-conserved
                              (on ?b6 ?f)
                            )
                            (and
                              (and
                                (game-optional
                                  (and
                                    (on agent ?p2)
                                    (in_motion ?h)
                                  )
                                )
                                (game-optional
                                  (not
                                    (not
                                      (game_over )
                                    )
                                  )
                                )
                                (game-optional
                                  (and
                                    (and
                                      (not
                                        (on ?c5 agent)
                                      )
                                      (not
                                        (between ?b ?c5 ?c5)
                                      )
                                    )
                                    (on ?b ?b)
                                  )
                                )
                              )
                              (game-conserved
                                (and
                                  (and
                                    (agent_holds front)
                                    (in_motion ?s)
                                  )
                                  (and
                                    (not
                                      (equal_x_position ?b ?h)
                                    )
                                    (same_color ?d east_sliding_door)
                                  )
                                )
                              )
                            )
                            (and
                              (forall (?b - dodgeball)
                                (and
                                  (exists (?o2 - curved_wooden_ramp)
                                    (exists (?o - (either pen blue_cube_block) ?b - red_dodgeball ?c1 - hexagonal_bin)
                                      (and
                                        (and
                                          (game-conserved
                                            (adjacent ?o agent)
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                              (exists (?l - dodgeball ?r2 - game_object)
                                (not
                                  (game-optional
                                    (agent_holds ?p2)
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                      (game-conserved
                        (and
                          (in_motion floor)
                          (touch ?o pink)
                        )
                      )
                    )
                  )
                )
              )
              (exists (?p1 - hexagonal_bin ?d - (either beachball laptop) ?h - hexagonal_bin)
                (and
                  (and
                    (game-conserved
                      (< 3 9)
                    )
                    (game-conserved
                      (and
                        (not
                          (above ?f ?h)
                        )
                        (on ?p2 desk)
                        (not
                          (on ?p2 ?f)
                        )
                      )
                    )
                    (game-optional
                      (between ?h ?o ?h)
                    )
                  )
                  (game-conserved
                    (< (distance desk upright) (distance_side ?o bed ?f ?p2))
                  )
                  (and
                    (exists (?w1 - (either doggie_bed) ?h - hexagonal_bin)
                      (game-optional
                        (agent_holds ?f)
                      )
                    )
                    (and
                      (game-optional
                        (not
                          (agent_holds ?f)
                        )
                      )
                    )
                  )
                  (exists (?g - (either teddy_bear yellow_cube_block yellow_cube_block))
                    (or
                      (and
                        (game-conserved
                          (exists (?l - hexagonal_bin)
                            (agent_holds block)
                          )
                        )
                        (and
                          (exists (?w1 ?l - hexagonal_bin)
                            (game-optional
                              (and
                                (in_motion pillow)
                                (in_motion ?l)
                                (same_object ?w1 yellow)
                              )
                            )
                          )
                        )
                        (exists (?c - hexagonal_bin)
                          (game-conserved
                            (agent_holds ?f)
                          )
                        )
                      )
                      (not
                        (game-conserved
                          (adjacent ?p2 ?f)
                        )
                      )
                      (and
                        (and
                          (forall (?h - (either cylindrical_block))
                            (forall (?b - game_object)
                              (not
                                (and
                                  (game-conserved
                                    (adjacent ?g pink)
                                  )
                                  (not
                                    (and
                                      (game-optional
                                        (agent_holds ?o)
                                      )
                                      (game-conserved
                                        (in_motion ?h)
                                      )
                                      (game-optional
                                        (or
                                          (in_motion ?g)
                                          (in_motion ?h)
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                          (forall (?h - hexagonal_bin)
                            (game-conserved
                              (agent_holds west_wall)
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
              (and
                (exists (?b ?b ?b3 - curved_wooden_ramp)
                  (game-optional
                    (game_over )
                  )
                )
                (or
                  (game-conserved
                    (agent_holds ?f)
                  )
                  (and
                    (exists (?r - hexagonal_bin)
                      (exists (?x - shelf ?o - block)
                        (game-conserved
                          (not
                            (in_motion ?h)
                          )
                        )
                      )
                    )
                  )
                  (game-optional
                    (game_start )
                  )
                )
                (exists (?t - hexagonal_bin)
                  (game-conserved
                    (agent_holds ?h)
                  )
                )
              )
            )
            (game-optional
              (<= (distance ?o rug) 0.5)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference pillowThrownToDoggieBed
      (exists (?w2 - (either doggie_bed bridge_block doggie_bed))
        (then
          (once (above ?w2 floor) )
          (hold (not (not (not (and (adjacent floor ?w2) (agent_holds ?w2) (in_motion ?w2) (adjacent front_left_corner bed) (agent_holds ?w2) (in ?w2 bed) ) ) ) ) )
          (once (on agent ?w2) )
        )
      )
    )
  )
)
(:terminal
  (> (- (count-once pillowThrownToDoggieBed:beachball) )
    15
  )
)
(:scoring
  (* 2 )
)
)

(define (game game-id-179) (:domain medium-objects-room-v1)
(:setup
  (or
    (exists (?p1 - (either triangular_ramp wall laptop cellphone cube_block))
      (exists (?b - hexagonal_bin)
        (game-conserved
          (in_motion ?b)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference brownObjectMovedToRoomCenter
      (exists (?b - hexagonal_bin ?bl - cylindrical_block)
        (then
          (hold (on ?bl blue) )
          (hold (and (and (in_motion ?bl) (and (and (in_motion bed) (on agent ?bl) ) (touch ?bl desk) ) ) (and (forall (?d ?w2 - dodgeball) (on ?d bed) ) (in_motion south_wall) ) ) )
          (once (and (in_motion ?bl) (not (and (and (not (and (not (and (and (not (< (distance ?bl ?bl) (distance desk ?bl)) ) (in_motion bed) ) (not (in ?bl desk) ) ) ) (game_start ) (= 1 1 1) ) ) (in_motion ?bl) (not (and (in_motion rug) (and (agent_holds top_shelf) (not (game_over ) ) ) ) ) ) (agent_holds upright) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (> (* (* (- 10 2 ) (count-once brownObjectMovedToRoomCenter:basketball:basketball) )
      (* (total-time) (count-once-per-objects brownObjectMovedToRoomCenter:dodgeball:top_drawer) )
      (count brownObjectMovedToRoomCenter:yellow)
      10
      (- (+ (* (count-longest brownObjectMovedToRoomCenter:dodgeball) (and (+ (- (count-once-per-objects brownObjectMovedToRoomCenter:pyramid_block) )
                3
                (+ (count brownObjectMovedToRoomCenter:beachball) (count brownObjectMovedToRoomCenter:blue_cube_block) 5 )
              )
              (count-longest brownObjectMovedToRoomCenter:doggie_bed:golfball)
            )
          )
          (+ (* (* 3 2 )
              25
            )
            2
          )
        )
      )
      (count brownObjectMovedToRoomCenter:beachball:yellow)
    )
    (+ 1 (count brownObjectMovedToRoomCenter:basketball) 4 )
  )
)
(:scoring
  (* (count brownObjectMovedToRoomCenter:beachball) (* 1 (total-time) )
  )
)
)

(define (game game-id-180) (:domain few-objects-room-v1)
(:setup
  (exists (?l2 - hexagonal_bin ?l - cube_block)
    (game-conserved
      (same_color ?l ?l)
    )
  )
)
(:constraints
  (and
    (preference teddyBearLandsInBin
      (exists (?p3 ?b6 ?p3 - triangular_ramp)
        (then
          (once (agent_holds ?b6) )
          (once (in ?p3 ?b6) )
          (hold (in green_golfball ?b6) )
        )
      )
    )
    (forall (?c - block ?b5 - beachball)
      (and
        (preference ballThrownToBin
          (exists (?b - game_object)
            (then
              (once (touch ?b5 ?b) )
              (hold (and (agent_holds ?b) (and (agent_holds ?b) (not (and (in ?b5 ?b5) (and (between ?b5 ?b5 ?b5) (not (in_motion agent) ) ) ) ) (agent_holds ?b) ) ) )
              (hold (and (in_motion floor) (adjacent_side ?b5 green ?b ?b5) ) )
            )
          )
        )
      )
    )
    (forall (?b - dodgeball ?w1 - teddy_bear ?b - ball ?w - (either cellphone))
      (and
        (preference throwBallToBin
          (exists (?b2 - dodgeball ?l - pyramid_block)
            (then
              (hold (in room_center desk) )
              (once (not (in_motion ?l) ) )
              (once (and (not (and (exists (?bl - (either mug tall_cylindrical_block)) (agent_holds ?bl) ) (and (< (distance floor ?l) 4) (not (in_motion ?w) ) (not (in_motion ?w) ) (on ?l ?w) ) ) ) (adjacent_side ?l ?l ?w) (exists (?w1 - ball) (game_start ) ) ) )
            )
          )
        )
      )
    )
    (preference ballThrownHitsAgent
      (exists (?b - color)
        (then
          (once (not (on ?b ?b) ) )
          (once (and (not (in_motion agent) ) (or (and (and (or (on room_center ?b) (in_motion ?b) (touch ?b ?b) ) (in_motion ?b) ) (in_motion ?b) ) (not (touch ?b agent) ) ) ) )
          (hold (between ?b ?b ?b) )
        )
      )
    )
  )
)
(:terminal
  (not
    (<= (+ (count-once ballThrownHitsAgent:pink_dodgeball) (* (count-once-per-objects ballThrownToBin:basketball) (+ (- (* 18 (* (count throwBallToBin:red:red_pyramid_block) (+ 10 (count teddyBearLandsInBin:purple:beachball:basketball) )
                )
                4
              )
            )
            15
          )
        )
      )
      (count-once-per-objects teddyBearLandsInBin:golfball)
    )
  )
)
(:scoring
  (count teddyBearLandsInBin:cube_block)
)
)

(define (game game-id-181) (:domain few-objects-room-v1)
(:setup
  (exists (?l - dodgeball ?t - cube_block)
    (game-optional
      (and
        (and
          (on room_center ?t)
          (in ?t ?t)
        )
        (toggled_on green_golfball)
      )
    )
  )
)
(:constraints
  (and
    (preference nonBlockPlacedInBuilding
      (exists (?t - game_object)
        (then
          (once (and (or (and (or (in_motion ?t) (exists (?b - game_object ?t - pillow) (not (< (distance_side back ?t ?t agent) (distance block ?t)) ) ) ) (and (exists (?b - ball) (on ?b floor) ) (< 1 (distance ?t ?t)) ) ) (agent_holds ?t) ) (adjacent_side bed ?t ?t) ) )
          (once (adjacent_side ?t ?t desk) )
          (once (> 6 (distance ?t ?t)) )
        )
      )
    )
    (preference objectWithMatchingColor
      (exists (?b - bridge_block ?p - ball ?c - ball ?l - (either golfball cylindrical_block))
        (then
          (once (touch ?l pink) )
          (once (not (and (in_motion agent) (agent_holds rug) ) ) )
          (once (not (toggled_on ?l) ) )
        )
      )
    )
    (forall (?p3 ?w1 - teddy_bear)
      (and
        (preference pyramidBlockAtopTowerAtEnd
          (exists (?p - (either dodgeball pyramid_block))
            (then
              (hold (game_over ) )
              (once (< 1 0.5) )
              (hold-while (in ?p ?p3) (and (agent_holds agent) (not (agent_holds ?p) ) (not (or (rug_color_under ?p3 ?w1) ) ) (and (in ?p agent) (not (agent_holds ?w1) ) ) ) )
            )
          )
        )
      )
    )
    (preference beachballBouncedOffRamp
      (exists (?b10 - teddy_bear ?g - game_object)
        (then
          (hold-while (in_motion ?g) (in_motion ?g) )
          (once (agent_holds ?g) )
          (hold (not (not (and (not (on ?g ?g) ) (is_setup_object ?g) ) ) ) )
        )
      )
    )
    (preference binKnockedOver
      (exists (?d - dodgeball)
        (then
          (hold (in_motion back) )
          (once (agent_holds ?d) )
          (hold (not (in_motion desk) ) )
        )
      )
    )
    (preference throwAttemptKnocksBlock
      (exists (?b - building ?d - game_object)
        (then
          (hold (and (= (x_position ?d) 1) (not (agent_holds ?d) ) ) )
          (once (agent_holds ?d) )
          (once (game_start ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (and
      (< 30 (count-once-per-external-objects pyramidBlockAtopTowerAtEnd:dodgeball:blue_cube_block) )
      (< 3 10 )
      (and
        (or
          (or
            (or
              (or
                (or
                  (>= (* 8 (* (count-once nonBlockPlacedInBuilding:dodgeball) (* (- (count-once objectWithMatchingColor:green) )
                          (count nonBlockPlacedInBuilding:golfball:doggie_bed)
                        )
                      )
                    )
                    (+ (count-once-per-objects objectWithMatchingColor:dodgeball) 2 )
                  )
                )
                (>= (count objectWithMatchingColor:dodgeball:beachball) (* 5 30 )
                )
              )
              (or
                (>= (count beachballBouncedOffRamp:side_table) (* (count binKnockedOver:orange:blue_cube_block) (count-once binKnockedOver:dodgeball) (count-once-per-objects throwAttemptKnocksBlock:golfball) 2 )
                )
              )
            )
          )
        )
        (or
          (> (+ (count nonBlockPlacedInBuilding:hexagonal_bin) )
            (count nonBlockPlacedInBuilding:dodgeball)
          )
          (<= (count-once-per-external-objects binKnockedOver:purple) (* 8 (count-once binKnockedOver:golfball) )
          )
          (or
            (>= (* (count-once-per-external-objects binKnockedOver:hexagonal_bin) (* (+ (count binKnockedOver:pink:dodgeball:pyramid_block) 2 )
                  (* 9 )
                  (* (count-once-per-objects nonBlockPlacedInBuilding:yellow) (count-once-per-external-objects throwAttemptKnocksBlock:golfball:tall_cylindrical_block) )
                )
              )
              (* (* (count-once-per-objects binKnockedOver:dodgeball:hexagonal_bin) (count-once-per-objects beachballBouncedOffRamp:beachball) 8 )
                (* (count binKnockedOver:dodgeball:dodgeball) 5 (count throwAttemptKnocksBlock:dodgeball) 10 4 )
              )
            )
            (> (count nonBlockPlacedInBuilding:basketball) (count pyramidBlockAtopTowerAtEnd:beachball) )
            (= 5 5 )
          )
        )
        (>= 1 4 )
      )
    )
    (not
      (or
        (not
          (and
            (< (- (* (count-once-per-objects throwAttemptKnocksBlock:beachball) (* (count-once-per-external-objects objectWithMatchingColor:dodgeball:tall_cylindrical_block) 10 )
                  (-
                    6
                    (count-once-per-objects throwAttemptKnocksBlock:doggie_bed)
                  )
                )
              )
              2
            )
          )
        )
        (not
          (> (count-increasing-measure beachballBouncedOffRamp:white) (count objectWithMatchingColor:dodgeball) )
        )
        (>= 20 (count throwAttemptKnocksBlock:dodgeball) )
        (>= (< (count-once-per-external-objects throwAttemptKnocksBlock:doggie_bed:blue_dodgeball) (count-once-per-objects pyramidBlockAtopTowerAtEnd:green:triangle_block) )
          (count-once-per-objects objectWithMatchingColor:basketball)
        )
      )
    )
    (< -30 (count-once-per-objects objectWithMatchingColor:beachball:basketball:top_drawer) )
  )
)
(:scoring
  (* (count nonBlockPlacedInBuilding:green) (count throwAttemptKnocksBlock:doggie_bed) )
)
)

(define (game game-id-182) (:domain few-objects-room-v1)
(:setup
  (forall (?d2 - (either dodgeball wall cube_block))
    (and
      (forall (?c - teddy_bear)
        (and
          (game-conserved
            (not
              (not
                (and
                  (and
                    (agent_holds ?d2)
                    (agent_holds ?c)
                  )
                  (and
                    (agent_holds ?c)
                    (in_motion ?c)
                    (not
                      (not
                        (on ?d2 ?d2)
                      )
                    )
                  )
                )
              )
            )
          )
          (forall (?b4 - hexagonal_bin ?b ?r2 ?g ?l1 ?d ?b4 - (either cd cube_block golfball))
            (game-conserved
              (agent_holds ?d2)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballHitsBin
      (exists (?w2 ?w2 ?b - dodgeball ?g - hexagonal_bin)
        (then
          (once (rug_color_under ?g ?g) )
          (once (and (in_motion ?g) (in ?g ?g) ) )
          (once (on ?g agent) )
        )
      )
    )
  )
)
(:terminal
  (or
    (<= (count-unique-positions dodgeballHitsBin:doggie_bed) (count dodgeballHitsBin:red) )
    (> (* (* (count dodgeballHitsBin:red) (count dodgeballHitsBin:basketball) 2 )
        8
      )
      (count-measure dodgeballHitsBin:yellow)
    )
    (> (count-once-per-objects dodgeballHitsBin:pyramid_block) 2 )
    (>= 6 (count dodgeballHitsBin:dodgeball:blue) )
  )
)
(:scoring
  (count dodgeballHitsBin:golfball:pink_dodgeball:green)
)
)

(define (game game-id-183) (:domain many-objects-room-v1)
(:setup
  (exists (?c4 - bridge_block)
    (game-optional
      (and
        (not
          (not
            (agent_holds ?c4)
          )
        )
        (in_motion ?c4)
        (in ?c4 floor)
        (and
          (not
            (above ?c4 ?c4)
          )
          (>= 1 (distance agent ?c4))
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?r - dodgeball ?b - hexagonal_bin ?d - building)
      (and
        (preference thrownBallReachesEnd
          (exists (?c - shelf)
            (then
              (once (> 4 0) )
              (once (agent_holds ?c) )
              (hold (and (adjacent bed rug) (not (faces floor desk) ) ) )
            )
          )
        )
      )
    )
    (preference objectsHidden
      (exists (?b6 - (either alarm_clock golfball))
        (then
          (once (agent_holds bed) )
          (once (in ?b6 ?b6) )
          (once (not (agent_holds ?b6) ) )
        )
      )
    )
    (preference blockCorrectlyPicked
      (exists (?db - wall)
        (then
          (hold (toggled_on ?db) )
          (once (not (not (on room_center ?db) ) ) )
          (hold-while (not (in_motion ?db) ) (not (rug_color_under ?db ?db) ) )
        )
      )
    )
    (preference dropAttempt
      (exists (?c - dodgeball)
        (at-end
          (not
            (not
              (adjacent ?c agent)
            )
          )
        )
      )
    )
    (preference golfballLandsInBinThroughRamp
      (exists (?c - (either cellphone ball))
        (at-end
          (agent_holds ?c)
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects dropAttempt:red:pink_dodgeball) (+ 3 5 )
  )
)
(:scoring
  (count thrownBallReachesEnd:green)
)
)

(define (game game-id-184) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?c1 ?c3 - curved_wooden_ramp)
      (exists (?b3 - (either beachball bridge_block tall_cylindrical_block) ?d - (either mug yellow))
        (exists (?d - hexagonal_bin)
          (and
            (exists (?c - hexagonal_bin)
              (and
                (game-conserved
                  (not
                    (same_type ?c3 bed)
                  )
                )
                (or
                  (forall (?c - hexagonal_bin ?l3 - cube_block)
                    (exists (?b2 - drawer)
                      (and
                        (exists (?c2 - dodgeball)
                          (game-conserved
                            (not
                              (agent_crouches )
                            )
                          )
                        )
                      )
                    )
                  )
                  (and
                    (game-conserved
                      (in ?c1 block)
                    )
                    (forall (?f - hexagonal_bin)
                      (and
                        (game-conserved
                          (in_motion ?c1)
                        )
                      )
                    )
                  )
                )
              )
            )
            (forall (?b1 - hexagonal_bin)
              (game-optional
                (in ?c3 ?c3)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballsInPlace
      (exists (?p2 - building ?h - (either pencil laptop red))
        (then
          (once (and (on ?h ?h) (on ?h ?h) ) )
          (once (< (distance ?h ?h) (distance ?h ?h)) )
        )
      )
    )
    (preference blockOnBlockInTowerAtEnd
      (exists (?c - hexagonal_bin)
        (at-end
          (agent_holds ?c)
        )
      )
    )
  )
)
(:terminal
  (>= (count-measure dodgeballsInPlace) (external-forall-maximize (count-once-per-objects dodgeballsInPlace:hexagonal_bin:basketball) ) )
)
(:scoring
  (* (count-once-per-objects dodgeballsInPlace:cylindrical_block:beachball) (* (* 10 (count blockOnBlockInTowerAtEnd:golfball:cube_block) )
      (- (* 3 5 )
      )
    )
  )
)
)

(define (game game-id-185) (:domain many-objects-room-v1)
(:setup
  (exists (?l - cube_block)
    (exists (?c - dodgeball ?d - (either golfball dodgeball))
      (and
        (game-optional
          (on ?d ?l)
        )
        (forall (?c - game_object)
          (exists (?l1 - (either cylindrical_block ball) ?c - cube_block ?t1 - dodgeball ?h - (either wall book) ?h - (either side_table alarm_clock pen cylindrical_block))
            (not
              (game-conserved
                (agent_holds ?c)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference tanObjectMovedToRoomCenter
      (exists (?h - pillow ?c5 - doggie_bed)
        (at-end
          (in_motion ?c5)
        )
      )
    )
    (forall (?o5 - triangular_ramp)
      (and
        (preference ballThrownToRug
          (exists (?tb - hexagonal_bin)
            (then
              (once-measure (and (on ?o5 ?o5) (not (on room_center ?o5) ) (not (and (agent_holds ?o5) (touch ?tb agent) ) ) ) (distance ?o5 ?o5) )
              (hold-to-end (in_motion pink_dodgeball) )
              (hold (in_motion agent) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< (* 15 (+ (+ (count tanObjectMovedToRoomCenter:side_table) 1 )
        4
      )
    )
    (not
      50
    )
  )
)
(:scoring
  (count tanObjectMovedToRoomCenter:dodgeball)
)
)

(define (game game-id-186) (:domain few-objects-room-v1)
(:setup
  (exists (?p1 ?h - hexagonal_bin)
    (forall (?d - game_object)
      (and
        (exists (?c - teddy_bear)
          (forall (?b6 - hexagonal_bin ?h - ball)
            (exists (?w1 - hexagonal_bin)
              (exists (?f - (either blue_cube_block floor))
                (and
                  (exists (?d - green_triangular_ramp ?h - block)
                    (and
                      (game-optional
                        (agent_crouches )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - tall_cylindrical_block)
      (and
        (preference ballThrownToWallToAgent
          (exists (?l2 - ball)
            (then
              (hold (agent_holds ?l2) )
              (once (adjacent_side ?l2 agent agent) )
              (once (on ?l2 ?l2) )
            )
          )
        )
        (preference throwToBinFromOppositeWall
          (exists (?c1 - building ?l1 - ball)
            (at-end
              (and
                (and
                  (game_start )
                  (exists (?d1 - sliding_door ?w ?t ?c4 ?l - red_pyramid_block)
                    (not
                      (not
                        (< 8 8)
                      )
                    )
                  )
                )
                (not
                  (and
                    (not
                      (rug_color_under rug ?b)
                    )
                    (and
                      (>= (distance ?b rug) (distance rug ?b))
                      (or
                        (in_motion ?b)
                        (touch ?b ?l1)
                        (not
                          (not
                            (agent_holds ?l1)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
    (forall (?d2 - (either bridge_block hexagonal_bin))
      (and
        (preference cubeThrownToBin
          (exists (?r - dodgeball)
            (then
              (once (agent_holds ?r) )
              (once (exists (?db ?ob - (either book chair cellphone) ?c4 - wall) (open bed) ) )
            )
          )
        )
        (preference matchingBuildingBuilt
          (then
            (hold (agent_holds ?d2) )
          )
        )
      )
    )
    (preference teddyBearLandsInBin
      (exists (?b4 - hexagonal_bin ?b6 - hexagonal_bin)
        (then
          (once (in_motion ?b6) )
          (once (and (in ?b6 ?b6) (and (not (and (in_motion ?b6) (and (not (and (rug_color_under ?b6 ?b6) (and (not (adjacent_side ?b6 ?b6 ?b6) ) (agent_holds ?b6) ) ) ) (and (>= 6 1) (not (and (not (not (in_motion ?b6) ) ) (agent_holds ?b6) ) ) ) (not (adjacent agent desk) ) ) ) ) (and (and (above rug ?b6) (and (agent_holds bed) (forall (?b5 - cube_block ?c4 - drawer ?d2 - (either pink cube_block) ?c3 - wall ?h - dodgeball) (not (and (not (in_motion ?h) ) (not (game_over ) ) ) ) ) ) (touch ?b6 ?b6) ) (touch ?b6 ?b6) ) (agent_holds ?b6) ) ) )
          (hold-while (agent_holds back) (in_motion ?b6) (agent_holds ?b6) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects throwToBinFromOppositeWall:pink:dodgeball) (* (* 1 (count ballThrownToWallToAgent:yellow) )
      (count cubeThrownToBin:pink_dodgeball)
    )
  )
)
(:scoring
  (count teddyBearLandsInBin:golfball)
)
)

(define (game game-id-187) (:domain many-objects-room-v1)
(:setup
  (exists (?r - (either alarm_clock))
    (forall (?h - hexagonal_bin)
      (and
        (forall (?h ?h - (either pyramid_block cd game_object))
          (forall (?p - curved_wooden_ramp ?r - golfball)
            (not
              (exists (?h - building)
                (and
                  (game-conserved
                    (in_motion ?h)
                  )
                )
              )
            )
          )
        )
        (exists (?h - wall ?b ?c ?l - (either golfball cylindrical_block))
          (and
            (and
              (exists (?h - hexagonal_bin)
                (and
                  (exists (?b - teddy_bear ?p - cube_block)
                    (game-conserved
                      (rug_color_under ?h ?l)
                    )
                  )
                  (game-conserved
                    (and
                      (in_motion ?h)
                      (agent_holds ?h)
                    )
                  )
                )
              )
              (game-conserved
                (in_motion agent)
              )
              (forall (?b5 - hexagonal_bin)
                (exists (?d - teddy_bear)
                  (exists (?g - dodgeball)
                    (exists (?t - (either key_chain dodgeball))
                      (exists (?c3 - game_object ?b1 ?b - color)
                        (game-optional
                          (not
                            (agent_holds ?t)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
        (game-optional
          (not
            (and
              (agent_holds ?r)
              (in ?h ?h)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference beachballBouncedOffRamp
      (exists (?g - ball ?b - hexagonal_bin)
        (at-end
          (<= 9 2)
        )
      )
    )
  )
)
(:terminal
  (>= (count-unique-positions beachballBouncedOffRamp:wall) (= (+ (count beachballBouncedOffRamp:yellow_pyramid_block) 1 )
      (count-once-per-objects beachballBouncedOffRamp:green)
    )
  )
)
(:scoring
  (count beachballBouncedOffRamp:yellow)
)
)

(define (game game-id-188) (:domain medium-objects-room-v1)
(:setup
  (forall (?b1 - (either key_chain pencil))
    (exists (?b5 - hexagonal_bin)
      (exists (?b - pyramid_block)
        (game-conserved
          (in ?b ?b5)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference pillowThrownToDoggieBed
      (exists (?p1 - game_object)
        (then
          (hold (and (agent_holds ?p1) (and (rug_color_under ?p1 ?p1) (in_motion ?p1) (agent_holds ?p1) ) ) )
          (once (not (not (and (broken bed) (not (and (and (and (in_motion rug) (and (< 1 (distance_side ?p1 ?p1 bed)) (and (adjacent front ?p1) (touch ?p1 ?p1) ) ) (in_motion ?p1) ) (in ?p1 ?p1) ) (not (in ?p1 ?p1) ) ) ) ) ) ) )
          (once (and (in_motion ?p1) (not (agent_holds top_shelf) ) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (not
      (>= 3 1 )
    )
    (>= 50 (> 5 (* (* (count pillowThrownToDoggieBed:blue_cube_block:yellow) (- 9 )
          )
          (= (count-once-per-objects pillowThrownToDoggieBed:pyramid_block:golfball) (count pillowThrownToDoggieBed:blue_dodgeball:red_pyramid_block) (count pillowThrownToDoggieBed:beachball) )
        )
      )
    )
  )
)
(:scoring
  (* 3 (* (external-forall-maximize 4 ) (count-once-per-objects pillowThrownToDoggieBed) )
  )
)
)

(define (game game-id-189) (:domain many-objects-room-v1)
(:setup
  (forall (?o - hexagonal_bin)
    (game-optional
      (< (distance ?o bed) 1)
    )
  )
)
(:constraints
  (and
    (preference blockToBinFromRug
      (exists (?b8 - shelf)
        (at-end
          (< (distance ?b8 ?b8) 8)
        )
      )
    )
    (preference dodgeballThrownToBin
      (exists (?l2 - ball)
        (then
          (any)
          (once (not (same_color ?l2 ?l2) ) )
          (once (in_motion ?l2) )
        )
      )
    )
    (preference throwBallToDoggieBedOffWall
      (exists (?w1 - cube_block)
        (then
          (hold (agent_holds ?w1) )
          (hold (forall (?h - hexagonal_bin) (agent_holds ?h) ) )
          (once (forall (?d - dodgeball ?t - dodgeball) (and (on ?w1 ?w1) (agent_holds ?w1) ) ) )
        )
      )
    )
  )
)
(:terminal
  (= (* (* (count-once-per-objects throwBallToDoggieBedOffWall:yellow) (count dodgeballThrownToBin:yellow) )
      (+ 3 (= (+ (* (count throwBallToDoggieBedOffWall:golfball:hexagonal_bin) (count-once-per-objects blockToBinFromRug:dodgeball:dodgeball) )
            (-
              (count blockToBinFromRug:side_table)
              0
            )
          )
          (count dodgeballThrownToBin:blue_cube_block)
        )
      )
    )
    6
  )
)
(:scoring
  (count-once blockToBinFromRug:beachball)
)
)

(define (game game-id-190) (:domain few-objects-room-v1)
(:setup
  (forall (?d - pyramid_block ?o3 - hexagonal_bin ?b6 - ball)
    (forall (?d - hexagonal_bin)
      (forall (?c1 - color)
        (and
          (exists (?c - (either beachball lamp) ?s - hexagonal_bin)
            (and
              (game-conserved
                (not
                  (not
                    (and
                      (on ?c1 ?s)
                      (and
                        (equal_z_position ?d ?d)
                        (not
                          (on ?d back)
                        )
                      )
                    )
                  )
                )
              )
              (exists (?d - block ?r - hexagonal_bin)
                (exists (?c6 - teddy_bear ?l - chair)
                  (game-conserved
                    (same_object ?s ?c1)
                  )
                )
              )
              (exists (?b - dodgeball)
                (forall (?p1 - dodgeball)
                  (exists (?b2 - hexagonal_bin ?h - hexagonal_bin)
                    (and
                      (and
                        (game-optional
                          (and
                            (and
                              (not
                                (>= (distance_side ?b desk upright) (distance ?b6 pink_dodgeball))
                              )
                              (in ?b6 ?c1)
                            )
                            (in_motion ?h)
                          )
                        )
                        (exists (?d - chair)
                          (and
                            (game-conserved
                              (not
                                (on ?h ?p1)
                              )
                            )
                            (exists (?h - hexagonal_bin)
                              (forall (?o3 - chair)
                                (exists (?b - (either cylindrical_block dodgeball desktop) ?w - dodgeball)
                                  (exists (?h ?r ?l2 - (either tall_cylindrical_block wall) ?d - dodgeball)
                                    (game-conserved
                                      (in_motion ?d)
                                    )
                                  )
                                )
                              )
                            )
                            (and
                              (and
                                (game-conserved
                                  (not
                                    (<= 1 1)
                                  )
                                )
                                (forall (?h - pyramid_block)
                                  (and
                                    (exists (?h - (either cylindrical_block golfball))
                                      (game-conserved
                                        (agent_holds agent)
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                      (forall (?h - cylindrical_block)
                        (and
                          (game-conserved
                            (not
                              (and
                                (agent_holds ?s)
                                (and
                                  (and
                                    (touch ?d room_center)
                                    (agent_holds floor)
                                    (not
                                      (agent_holds bed)
                                    )
                                  )
                                  (touch ?b ?h)
                                )
                                (or
                                  (in_motion desk)
                                  (on side_table agent)
                                )
                                (adjacent ?d ?p1)
                              )
                            )
                          )
                        )
                      )
                      (and
                        (exists (?l3 - cube_block)
                          (game-conserved
                            (<= 10 1)
                          )
                        )
                        (game-conserved
                          (not
                            (adjacent ?d ?c1)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference rollBallToBin
      (exists (?b4 - curved_wooden_ramp)
        (at-end
          (not
            (not
              (not
                (in agent ?b4)
              )
            )
          )
        )
      )
    )
    (forall (?h - (either book cube_block mug))
      (and
        (preference blueObjectMovedToRoomCenter
          (exists (?d - yellow_cube_block)
            (then
              (hold (in_motion ?h) )
              (once (not (game_over ) ) )
              (once (and (and (not (adjacent ?d ?h) ) (and (in ?h ?d) (open ?h) ) ) (touch floor desk) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) 3 )
)
(:scoring
  (* 2 (count-once blueObjectMovedToRoomCenter:pink) )
)
)

(define (game game-id-191) (:domain many-objects-room-v1)
(:setup
  (exists (?b8 - shelf)
    (and
      (exists (?o - cube_block)
        (and
          (and
            (or
              (game-conserved
                (in_motion ?o)
              )
              (game-conserved
                (in_motion ?b8)
              )
              (exists (?s - dodgeball)
                (exists (?h - hexagonal_bin)
                  (and
                    (game-conserved
                      (in_motion ?o)
                    )
                  )
                )
              )
            )
            (forall (?h - ball)
              (exists (?c - dodgeball)
                (forall (?c - (either pillow main_light_switch) ?o3 - (either ball beachball cellphone))
                  (forall (?b - cube_block ?t - doggie_bed)
                    (game-optional
                      (in_motion ?h)
                    )
                  )
                )
              )
            )
            (and
              (game-optional
                (in ?o ?o)
              )
              (exists (?o1 ?p3 ?r ?h ?l ?h - dodgeball)
                (exists (?w1 - chair ?d - dodgeball)
                  (game-optional
                    (not
                      (same_color ?r ?p3)
                    )
                  )
                )
              )
            )
            (and
              (forall (?g - cube_block)
                (exists (?l2 - chair)
                  (forall (?g - ball)
                    (and
                      (game-conserved
                        (not
                          (opposite ?b8 ?l2)
                        )
                      )
                      (and
                        (and
                          (exists (?d - doggie_bed)
                            (game-conserved
                              (on rug ?b8)
                            )
                          )
                        )
                      )
                      (game-conserved
                        (not
                          (on ?o ?o)
                        )
                      )
                      (game-optional
                        (equal_x_position ?g ?o)
                      )
                      (forall (?o - book ?b1 - chair)
                        (forall (?h - (either yellow))
                          (game-optional
                            (adjacent_side ?b1 ?h upright)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
            (forall (?w - hexagonal_bin)
              (forall (?l2 ?t ?o - teddy_bear)
                (game-conserved
                  (forall (?p - dodgeball)
                    (not
                      (in ?b8 ?p)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownFromRug
      (exists (?d - pillow)
        (then
          (hold (in_motion ?d) )
          (hold (and (and (in ?d ?d) (not (equal_z_position ?d ?d) ) ) (< (distance_side ?d ?d ?d) 1) ) )
          (once (agent_holds ?d) )
        )
      )
    )
    (preference blockInTowerAtEnd
      (exists (?d2 - hexagonal_bin)
        (then
          (hold (opposite ?d2 ?d2) )
          (once (agent_holds ?d2) )
        )
      )
    )
    (preference dodgeballHitsBin
      (exists (?h - (either basketball dodgeball))
        (at-end
          (< 0.5 (x_position ?h))
        )
      )
    )
    (preference watchOnShelf
      (exists (?h - hexagonal_bin)
        (then
          (hold (agent_holds ?h) )
          (hold (on ?h ?h) )
          (once (not (agent_holds ?h) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (not
      (or
        (and
          (>= 0 (count-same-positions watchOnShelf:red) )
        )
        (= (count blockInTowerAtEnd:dodgeball) (count blockInTowerAtEnd:basketball:pink) )
        (or
          (or
            (>= (count-once ballThrownFromRug) (count-longest ballThrownFromRug:dodgeball:pink) )
            (> 40 3 )
          )
          (or
            (or
              (<= (* 50 )
                (* (* (count blockInTowerAtEnd:rug) (count ballThrownFromRug:dodgeball:golfball) )
                  1
                )
              )
              (not
                (not
                  (>= (count blockInTowerAtEnd:yellow) (count-once-per-objects watchOnShelf:golfball) )
                )
              )
            )
            (or
              (= (count ballThrownFromRug:dodgeball:tan:cylindrical_block) (count-longest dodgeballHitsBin:pyramid_block) )
            )
          )
        )
        (>= (- 10 )
          2
        )
      )
    )
    (>= (- (<= 1 (total-time) )
      )
      (count watchOnShelf:pink_dodgeball:basketball)
    )
  )
)
(:scoring
  (* (- (+ 2 (count-once ballThrownFromRug:pink) )
    )
    (* (count-once-per-objects dodgeballHitsBin) 8 )
    (count-unique-positions blockInTowerAtEnd:hexagonal_bin)
  )
)
)

(define (game game-id-192) (:domain few-objects-room-v1)
(:setup
  (exists (?l1 - hexagonal_bin)
    (not
      (game-conserved
        (and
          (or
            (< (distance ?l1 ?l1) (distance ?l1 ?l1))
            (above ?l1 ?l1)
          )
          (and
            (not
              (in_motion ?l1)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - hexagonal_bin ?h - building)
      (and
        (preference blockInTowerKnocked
          (exists (?h - (either yellow_cube_block))
            (then
              (once (and (<= 5 1) (touch ?h ?h) ) )
              (once (in_motion ?h) )
            )
          )
        )
      )
    )
    (preference throwAttempt
      (exists (?h - pyramid_block)
        (then
          (hold-to-end (in_motion ?h) )
          (hold (in_motion ?h) )
          (forall-sequence (?l1 - curved_wooden_ramp)
            (then
              (hold (< (distance desk top_drawer) 3) )
              (once (on ?h ?h) )
              (once (not (and (not (not (and (and (agent_holds ?l1) ) (and (adjacent rug ?l1) (in ?h bed) ) ) ) ) (and (touch ?h ?l1) (agent_holds ?h) (or (and (not (not (< 1 4) ) ) (in_motion ?l1) ) (agent_holds ?l1) ) (and (in_motion ?l1) (and (agent_holds ?h) (and (not (in_motion ?l1) ) (touch ?h ?l1) (touch ?h agent) ) ) (in ?h ?l1) ) (agent_holds ?l1) (agent_holds ?l1) ) ) ) )
              (hold (not (on ?l1 ?l1) ) )
            )
          )
        )
      )
    )
    (preference golfballUnderBridgeWithoutTouchingBlock
      (exists (?t2 - cube_block)
        (then
          (once (and (not (agent_holds ?t2) ) (not (same_object front_left_corner ?t2) ) ) )
          (once (in_motion ?t2) )
          (once (and (agent_holds room_center) (and (>= 3 (distance_side back ?t2 ?t2)) (not (not (not (and (and (agent_holds ?t2) (on ?t2 ?t2) ) (agent_holds ?t2) ) ) ) ) ) (in ?t2 ?t2) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 10 5 )
)
(:scoring
  4
)
)

(define (game game-id-193) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?b - wall)
      (and
        (exists (?c4 - ball)
          (and
            (game-conserved
              (and
                (agent_holds ?c4)
                (not
                  (not
                    (open door)
                  )
                )
                (touch ?c4 ?b)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c ?o5 - pillow)
      (and
        (preference ballDroppedInBin
          (exists (?bl - pyramid_block)
            (then
              (hold (in_motion ?o5) )
              (once (same_color ?o5 ?o5) )
              (hold (agent_holds desk) )
            )
          )
        )
        (preference beachballBouncedOffRamp
          (then
            (hold (and (is_setup_object ?o5) (in_motion ?c) ) )
            (once (and (adjacent ?c ?o5) (and (agent_holds agent) (not (on ?c agent) ) (> (distance ?c ?o5) 6) ) ) )
            (once (and (in_motion agent) ) )
          )
        )
        (preference smallObjectThrownToBed
          (exists (?h - hexagonal_bin)
            (at-end
              (agent_holds ?h)
            )
          )
        )
      )
    )
    (forall (?s - ball)
      (and
        (preference bookOnDeskShelf
          (exists (?b - block)
            (then
              (hold (in_motion ?s) )
              (once (and (agent_holds front) (on ?b ?s) ) )
              (once (in_motion ?s) )
            )
          )
        )
        (preference binKnockedOver
          (exists (?c - doggie_bed)
            (then
              (once (= (distance ?s ?c) 1) )
              (once (< 3 (distance ?s ?c)) )
              (once (agent_holds ?c) )
            )
          )
        )
        (preference dodgeballsInPlace
          (exists (?b7 ?l - dodgeball ?b5 - dodgeball ?b - curved_wooden_ramp)
            (then
              (any)
              (once (agent_holds ?b) )
              (once (in ?b ?s) )
            )
          )
        )
        (preference redDodgeballThrownToBin
          (exists (?c6 - wall)
            (then
              (hold (in agent pink_dodgeball) )
              (hold-while (on ?c6 ?s) (and (and (in_motion ?c6) ) (exists (?c1 - (either tall_cylindrical_block tall_cylindrical_block) ?c1 - game_object) (in ?s ?s) ) ) (not (in_motion ?c6) ) (and (in_motion ?c6) (not (in_motion ?s) ) ) )
              (hold (exists (?h - (either pencil)) (agent_crouches ) ) )
              (once (adjacent rug ?c6) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (count-increasing-measure redDodgeballThrownToBin:pink:yellow_cube_block) (count-once-per-objects bookOnDeskShelf:dodgeball) )
    (total-score)
  )
)
(:scoring
  (* (count binKnockedOver:basketball) (count dodgeballsInPlace:hexagonal_bin) )
)
)

(define (game game-id-194) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (toggled_on desktop)
  )
)
(:constraints
  (and
    (preference bookOnDeskShelf
      (exists (?d - hexagonal_bin)
        (at-end
          (exists (?b - doggie_bed)
            (in_motion ?b)
          )
        )
      )
    )
  )
)
(:terminal
  (> (external-forall-maximize (count-once-per-objects bookOnDeskShelf:green:tan) ) (count bookOnDeskShelf:green) )
)
(:scoring
  (count-once-per-objects bookOnDeskShelf:rug)
)
)

(define (game game-id-195) (:domain few-objects-room-v1)
(:setup
  (forall (?o1 - pillow ?b - building)
    (game-optional
      (rug_color_under ?b ?b)
    )
  )
)
(:constraints
  (and
    (preference throwInBin
      (exists (?t - hexagonal_bin)
        (at-end
          (object_orientation agent ?t)
        )
      )
    )
    (preference dodgeballHitsBin
      (exists (?o - (either side_table main_light_switch) ?p1 - game_object ?x - hexagonal_bin)
        (then
          (once (on ?x ?x) )
          (hold (not (not (in_motion ?x) ) ) )
          (once (on ?x ?x) )
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (>= (count dodgeballHitsBin:pink_dodgeball) (count-unique-positions throwInBin:beachball:pink) )
      (or
        (> 2 (external-forall-maximize (count-once-per-external-objects throwInBin:pink:beachball) ) )
        (<= 5 3 )
        (= (count throwInBin) 2 )
      )
    )
  )
)
(:scoring
  5
)
)

(define (game game-id-196) (:domain medium-objects-room-v1)
(:setup
  (exists (?c2 - drawer)
    (and
      (exists (?o - (either cd))
        (game-conserved
          (in_motion ?o)
        )
      )
      (game-conserved
        (not
          (< (distance ?c2 ?c2) 1)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - cube_block ?c1 - block ?b5 - hexagonal_bin)
      (and
        (preference throwBallFromOtherBallToBin
          (exists (?b - chair ?w2 ?r1 ?b3 ?l2 ?h ?c6 - hexagonal_bin ?c - hexagonal_bin)
            (then
              (hold (on ?b5 ?b5) )
              (hold (agent_holds ?c) )
              (once (broken ?b5) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> 3 (* (count throwBallFromOtherBallToBin:dodgeball) (* 0.7 (count-once-per-objects throwBallFromOtherBallToBin:beachball) )
    )
  )
)
(:scoring
  (count-once-per-external-objects throwBallFromOtherBallToBin:orange)
)
)

(define (game game-id-197) (:domain many-objects-room-v1)
(:setup
  (or
    (exists (?b - hexagonal_bin)
      (game-conserved
        (not
          (opposite agent ?b)
        )
      )
    )
    (forall (?o - hexagonal_bin)
      (exists (?d - cube_block)
        (exists (?t1 - curved_wooden_ramp)
          (exists (?b - hexagonal_bin ?b4 - hexagonal_bin)
            (and
              (game-conserved
                (and
                  (agent_holds ?b4)
                  (and
                    (in_motion ?t1)
                    (in_motion ?b4)
                    (and
                      (adjacent_side ?b4 ?o ?o)
                      (or
                        (not
                          (on ?o ?d)
                        )
                        (and
                          (not
                            (and
                              (in_motion ?o)
                              (and
                                (not
                                  (on agent ?b4)
                                )
                                (agent_holds floor)
                              )
                              (or
                                (and
                                  (in upside_down ?t1)
                                  (in ?b4 ?o)
                                )
                                (and
                                  (agent_holds ?d)
                                  (in ?t1 ?b4)
                                  (in_motion ?b4)
                                )
                              )
                            )
                          )
                          (in_motion ?b4)
                          (<= 1 9)
                          (not
                            (on ?d ?t1)
                          )
                        )
                      )
                    )
                    (adjacent desk ?d)
                    (on ?o ?b4)
                    (agent_holds ?d)
                    (agent_holds agent)
                    (touch pink south_west_corner)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockKnockedFromBuildingInBin
      (exists (?t2 - wall)
        (at-end
          (and
            (not
              (agent_holds ?t2)
            )
            (in_motion blue)
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (count-same-positions blockKnockedFromBuildingInBin) (count-once-per-objects blockKnockedFromBuildingInBin:dodgeball) )
      (not
        (not
          (>= (+ 6 (count blockKnockedFromBuildingInBin:blue_pyramid_block:basketball) )
            (count-once-per-objects blockKnockedFromBuildingInBin:pink)
          )
        )
      )
      (> (count blockKnockedFromBuildingInBin:basketball:book) (* 1 (count blockKnockedFromBuildingInBin:book) )
      )
    )
  )
)
(:scoring
  (count blockKnockedFromBuildingInBin:dodgeball)
)
)

(define (game game-id-198) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - (either dodgeball desktop))
      (exists (?b10 - color)
        (exists (?h - dodgeball)
          (forall (?h - doggie_bed)
            (game-optional
              (in ?b10 ?b10)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference pinkObjectMovedToRoomCenter
      (exists (?h - game_object ?b - hexagonal_bin ?w2 - beachball)
        (then
          (once (in_motion desk) )
          (hold (in_motion ?w2) )
          (hold (in ?w2 ?w2) )
        )
      )
    )
  )
)
(:terminal
  (or
    (not
      (>= (count-once-per-objects pinkObjectMovedToRoomCenter:triangle_block) (* (and (* (count-once-per-objects pinkObjectMovedToRoomCenter:hexagonal_bin) (+ 2 (count-measure pinkObjectMovedToRoomCenter:yellow) )
            )
            (count pinkObjectMovedToRoomCenter:golfball)
            (total-score)
          )
          (count-once-per-objects pinkObjectMovedToRoomCenter:basketball)
        )
      )
    )
    (<= (count-overlapping pinkObjectMovedToRoomCenter:beachball:cube_block) 300 )
  )
)
(:scoring
  (external-forall-minimize
    (* (count pinkObjectMovedToRoomCenter:cube_block:basketball) 1 )
  )
)
)

(define (game game-id-199) (:domain many-objects-room-v1)
(:setup
  (not
    (and
      (exists (?s - red_dodgeball ?h - (either pencil cylindrical_block))
        (game-optional
          (adjacent ?h ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwMissesBin
      (exists (?b7 - cube_block ?c - bridge_block ?o - shelf)
        (then
          (once (and (and (and (agent_holds ?o) (game_over ) (on right ?o) (and (in ?o ?o) (in ?o ?o) ) ) (and (and (agent_holds upside_down) (between ?o ?o ?o) ) (exists (?o3 - building) (in_motion ?o3) ) ) ) (agent_holds ?o) ) )
          (hold (and (adjacent ?o rug) (in_motion ?o) ) )
          (hold (on agent ?o) )
        )
      )
    )
    (forall (?c - hexagonal_bin)
      (and
        (preference throwToBin
          (exists (?g - dodgeball)
            (then
              (once (not (or (in_motion ?g) ) ) )
              (once (not (and (and (broken ?c) (agent_holds ?g) ) (on ?g ?g) ) ) )
              (forall-sequence (?b - (either game_object tall_cylindrical_block) ?b - hexagonal_bin ?b - hexagonal_bin)
                (then
                  (hold (and (agent_holds top_drawer) (exists (?b - hexagonal_bin) (on ?c rug) ) ) )
                  (hold (object_orientation ?g ?b) )
                  (once (in_motion ?g) )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> 2 4 )
)
(:scoring
  5
)
)

(define (game game-id-200) (:domain few-objects-room-v1)
(:setup
  (forall (?b6 - building)
    (exists (?d ?b ?p2 - ball ?o1 - dodgeball ?o2 - tall_cylindrical_block)
      (and
        (exists (?x - dodgeball ?o - beachball)
          (and
            (game-conserved
              (and
                (in_motion ?o)
                (and
                  (and
                    (not
                      (agent_holds ?b6)
                    )
                    (on ?o ?o)
                  )
                )
              )
            )
          )
        )
        (exists (?t - (either key_chain book alarm_clock bridge_block) ?s - (either desktop laptop dodgeball) ?c1 - shelf)
          (exists (?b - block)
            (game-conserved
              (in_motion ?b)
            )
          )
        )
        (forall (?b - (either ball alarm_clock))
          (game-conserved
            (in ?b6 ?b6)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectOnBed
      (exists (?p1 - book)
        (then
          (once (in ?p1 ?p1) )
          (once (not (not (adjacent upright ?p1) ) ) )
          (once (adjacent_side ?p1 ?p1 ?p1 desk) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (/ (count objectOnBed) 4 ) 2 )
    (count-once-per-objects objectOnBed:red)
  )
)
(:scoring
  (count-once-per-objects objectOnBed:basketball)
)
)

(define (game game-id-201) (:domain few-objects-room-v1)
(:setup
  (forall (?h - (either cylindrical_block basketball))
    (and
      (game-optional
        (and
          (agent_holds ?h)
          (not
            (on ?h ?h)
          )
        )
      )
      (game-optional
        (in_motion door)
      )
    )
  )
)
(:constraints
  (and
    (preference ballInOrOnBin
      (exists (?b1 - dodgeball)
        (at-end
          (in_motion agent)
        )
      )
    )
    (preference teddyBearLandsInBin
      (exists (?b4 - hexagonal_bin)
        (at-end
          (exists (?o4 - block)
            (not
              (and
                (or
                  (not
                    (agent_holds ?o4)
                  )
                )
                (not
                  (agent_holds desk)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (- 300 4 ) (count ballInOrOnBin:hexagonal_bin) )
)
(:scoring
  0.5
)
)

(define (game game-id-202) (:domain many-objects-room-v1)
(:setup
  (exists (?b - wall)
    (game-conserved
      (in_motion ?b)
    )
  )
)
(:constraints
  (and
    (preference objectMoved
      (exists (?b - hexagonal_bin)
        (at-end
          (touch ?b ?b)
        )
      )
    )
  )
)
(:terminal
  (> 6 3 )
)
(:scoring
  2
)
)

(define (game game-id-203) (:domain many-objects-room-v1)
(:setup
  (exists (?l3 - block)
    (forall (?d ?l - triangular_ramp ?h ?r2 - hexagonal_bin)
      (game-optional
        (in_motion ?l3)
      )
    )
  )
)
(:constraints
  (and
    (preference golfballInBinFromPillow
      (exists (?l1 - building ?d - dodgeball ?c4 - dodgeball)
        (then
          (once (not (agent_holds ?c4) ) )
          (once (= 1 (x_position ?c4)) )
          (hold (touch top_drawer ?c4) )
        )
      )
    )
    (preference throwToDrawerOrBin
      (exists (?p1 - hexagonal_bin)
        (then
          (once (and (in_motion ?p1) (agent_holds ?p1) ) )
          (hold (agent_holds ?p1) )
          (hold-while (on ?p1 ?p1) (agent_holds ?p1) )
        )
      )
    )
    (preference blockToBinFromRug
      (exists (?d - ball ?b - sliding_door ?b - (either block alarm_clock dodgeball))
        (then
          (once-measure (adjacent ?b ?b) (distance ?b ?b) )
          (once (not (and (agent_holds ?b) (not (in agent bed) ) ) ) )
          (hold (in_motion ?b) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 4 (count-once-per-objects golfballInBinFromPillow:pink_dodgeball) )
    (not
      (and
        (> (external-forall-minimize (count-measure throwToDrawerOrBin:yellow:top_drawer) ) (count throwToDrawerOrBin:blue_dodgeball) )
        (>= 1 (+ (* 8 15 )
            (count-once blockToBinFromRug:pink_dodgeball)
          )
        )
      )
    )
  )
)
(:scoring
  (count-total blockToBinFromRug:pink:basketball)
)
)

(define (game game-id-204) (:domain many-objects-room-v1)
(:setup
  (forall (?c6 - hexagonal_bin ?c1 - dodgeball)
    (game-conserved
      (or
        (and
          (and
            (not
              (not
                (agent_holds upright)
              )
            )
            (in_motion ?c1)
          )
          (in_motion ?c1)
        )
        (> 2 1)
      )
    )
  )
)
(:constraints
  (and
    (preference throwTeddyOntoPillow
      (exists (?b - bridge_block ?p2 - (either laptop cube_block tall_cylindrical_block))
        (then
          (once (is_setup_object ?p2) )
          (hold-while (and (agent_holds ?p2) (not (and (in_motion ?p2) (agent_holds ?p2) ) ) (in rug rug) (not (not (in_motion ?p2) ) ) ) (and (on ?p2 desk) (in_motion ?p2) ) )
          (hold-for 6 (in_motion ?p2) )
        )
      )
    )
  )
)
(:terminal
  (>= (count throwTeddyOntoPillow:blue_cube_block) 25 )
)
(:scoring
  (+ (count-increasing-measure throwTeddyOntoPillow:pink_dodgeball) (- (+ 3 (* (count-increasing-measure throwTeddyOntoPillow:golfball:dodgeball) (+ (count-once-per-external-objects throwTeddyOntoPillow:dodgeball) (count throwTeddyOntoPillow:pink_dodgeball) )
        )
        (* 1 (* (* 10 (total-score) )
            (count-once-per-objects throwTeddyOntoPillow:golfball:pink_dodgeball)
          )
        )
      )
    )
    (* 3 (count-longest throwTeddyOntoPillow:dodgeball) )
    (count throwTeddyOntoPillow:basketball)
    (* (+ 5 (count throwTeddyOntoPillow:dodgeball) )
      30
    )
    (* 5 (+ 6 (* (count throwTeddyOntoPillow:golfball) (count-once-per-objects throwTeddyOntoPillow:orange) )
      )
      1
      6
      7
      (* 3 (count-once-per-objects throwTeddyOntoPillow:blue_dodgeball) )
      3
      (count-once-per-objects throwTeddyOntoPillow:purple)
      (* (count-once-per-objects throwTeddyOntoPillow:dodgeball) (- (* (+ (* (external-forall-maximize (count-unique-positions throwTeddyOntoPillow:basketball) ) (count throwTeddyOntoPillow:blue_cube_block:alarm_clock) (count-longest throwTeddyOntoPillow:golfball) (* (count-once throwTeddyOntoPillow:beachball) (* (+ 1 (count-once throwTeddyOntoPillow:dodgeball) )
                    18
                  )
                )
                (count-once-per-objects throwTeddyOntoPillow:orange)
                (count throwTeddyOntoPillow:yellow)
              )
              (* 10 (* (count-once-per-objects throwTeddyOntoPillow:blue_pyramid_block) 2 )
              )
            )
            (count-once-per-objects throwTeddyOntoPillow:orange:blue_cube_block:dodgeball)
          )
          (* (count-once-per-objects throwTeddyOntoPillow:doggie_bed:blue_pyramid_block) (* (< (count throwTeddyOntoPillow:blue_pyramid_block) (+ 15 (* (* (* (count throwTeddyOntoPillow:dodgeball) (count throwTeddyOntoPillow:dodgeball) (count throwTeddyOntoPillow:beachball) 50 (count-once-per-objects throwTeddyOntoPillow:orange) (* (count throwTeddyOntoPillow:beachball:book) 100 )
                      )
                      (count-same-positions throwTeddyOntoPillow:hexagonal_bin)
                    )
                    (* 20 (count throwTeddyOntoPillow:basketball:hexagonal_bin) )
                  )
                )
              )
              (* (count throwTeddyOntoPillow:alarm_clock) (count throwTeddyOntoPillow:green) )
            )
          )
        )
      )
    )
  )
)
)

(define (game game-id-205) (:domain few-objects-room-v1)
(:setup
  (forall (?d - desktop)
    (and
      (game-conserved
        (not
          (or
            (in_motion ?d)
            (adjacent_side ?d ?d pink_dodgeball)
          )
        )
      )
      (game-conserved
        (in ?d ?d)
      )
    )
  )
)
(:constraints
  (and
    (forall (?d2 - dodgeball)
      (and
        (preference ballThrownMissesEverything
          (exists (?l - hexagonal_bin ?w2 - chair ?h - triangular_ramp)
            (then
              (hold (same_color ?d2 ?h) )
              (once (in_motion ?d2) )
              (hold (in_motion ?h) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< (total-score) 5 )
)
(:scoring
  (count ballThrownMissesEverything:yellow_cube_block)
)
)

(define (game game-id-206) (:domain many-objects-room-v1)
(:setup
  (forall (?o2 - hexagonal_bin)
    (game-conserved
      (on ?o2 ?o2)
    )
  )
)
(:constraints
  (and
    (preference ballOnBedAtEnd
      (exists (?l1 - chair ?c3 - hexagonal_bin)
        (then
          (hold-while (touch ?c3 ?c3) (and (adjacent ?c3 ?c3) (toggled_on ?c3) ) )
          (once (agent_holds ?c3) )
          (once (and (< (distance brown desk) 2) (not (in_motion ?c3) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 6 (count-once-per-objects ballOnBedAtEnd:pink:yellow) )
)
(:scoring
  6
)
)

(define (game game-id-207) (:domain many-objects-room-v1)
(:setup
  (exists (?b - hexagonal_bin)
    (game-optional
      (agent_holds rug)
    )
  )
)
(:constraints
  (and
    (preference redDodgeballThrownToBinWithoutTouchingFloor
      (exists (?c2 - (either dodgeball cylindrical_block))
        (at-end
          (not
            (in_motion ?c2)
          )
        )
      )
    )
    (preference blueObjectMovedToRoomCenter
      (exists (?b10 - cube_block ?d - hexagonal_bin)
        (then
          (once (in_motion ?d) )
          (once (and (faces room_center ?d) (in_motion ?d) (< 1 (distance right ?d)) (< 1 1) ) )
          (once (= 0.5) )
        )
      )
    )
  )
)
(:terminal
  (>= (= (* 3 2 )
      (+ 3 (not (count-increasing-measure blueObjectMovedToRoomCenter:beachball:red) ) (* (count-overlapping redDodgeballThrownToBinWithoutTouchingFloor:blue_dodgeball) 6 )
      )
    )
    (count blueObjectMovedToRoomCenter:blue_dodgeball:basketball)
  )
)
(:scoring
  (count redDodgeballThrownToBinWithoutTouchingFloor:orange)
)
)

(define (game game-id-208) (:domain medium-objects-room-v1)
(:setup
  (forall (?s - (either cylindrical_block main_light_switch bridge_block))
    (game-conserved
      (not
        (forall (?d - hexagonal_bin)
          (and
            (in_motion ?d)
            (in_motion ?s)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - ball ?w1 - hexagonal_bin)
      (and
        (preference basketMadeFromRug
          (exists (?r - hexagonal_bin ?b - (either pillow pen dodgeball))
            (then
              (once (on ?w1 ?b) )
              (once (same_object ?w1 ?b) )
              (once (exists (?b2 - game_object) (on ?b2 ?w1) ) )
            )
          )
        )
        (preference teddyBearHitsBall
          (exists (?d - pyramid_block)
            (then
              (hold-while (exists (?l - hexagonal_bin) (in_motion ?l) ) (adjacent ?d ?w1) (and (in_motion ?d) (on ?w1 ?d) ) )
              (hold (agent_holds ?d) )
            )
          )
        )
        (preference ballThrownFromObjectToBin
          (exists (?t1 - cube_block)
            (at-end
              (in_motion floor)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-overlapping teddyBearHitsBall:cylindrical_block) (count ballThrownFromObjectToBin:yellow:dodgeball) )
)
(:scoring
  8
)
)

(define (game game-id-209) (:domain medium-objects-room-v1)
(:setup
  (forall (?d - chair ?h - beachball)
    (exists (?b - game_object ?w2 - teddy_bear)
      (or
        (game-optional
          (agent_holds ?w2)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - hexagonal_bin)
      (and
        (preference ballThrownThroughRampAndBlocksToBin
          (exists (?w - hexagonal_bin)
            (then
              (hold (and (not (on rug ?w) ) (not (and (adjacent green desk) (= 2 0) ) ) ) )
              (hold (on ?b ?w) )
              (once (= 1 (distance ?w ?b)) )
            )
          )
        )
        (preference cubeBlockInBuilding
          (exists (?b - blue_cube_block)
            (at-end
              (in ?b ?b)
            )
          )
        )
        (preference dodgeballAndBasketballInBin
          (exists (?h - (either book mug) ?b9 - dodgeball ?ob - hexagonal_bin)
            (at-end
              (forall (?l3 - hexagonal_bin)
                (same_type ?ob ?ob)
              )
            )
          )
        )
      )
    )
    (preference nonBlockPlacedInBuilding
      (exists (?t - (either cellphone cellphone) ?c - cube_block)
        (then
          (once (and (= (distance ?c ?c) 1 (distance ?c ?c)) (not (not (object_orientation agent ?c) ) ) (not (not (and (forall (?d - hexagonal_bin) (same_color ?d ?c) ) (agent_holds ?c) ) ) ) ) )
          (hold (<= (distance ?c ?c) 5) )
          (once (same_type ?c ?c) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (< 1 (count dodgeballAndBasketballInBin:hexagonal_bin) )
      (* (count cubeBlockInBuilding:pink:side_table) (+ (total-score) )
      )
    )
  )
)
(:scoring
  (count nonBlockPlacedInBuilding:hexagonal_bin)
)
)

(define (game game-id-210) (:domain medium-objects-room-v1)
(:setup
  (exists (?b - hexagonal_bin)
    (game-optional
      (is_setup_object ?b)
    )
  )
)
(:constraints
  (and
    (preference dodgeballFromDeskToTarget
      (exists (?h - ball)
        (then
          (once (or (adjacent ?h ?h) (and (not (agent_holds ?h) ) (in_motion ?h) (agent_holds desk) ) ) )
          (once (same_color ?h ?h) )
          (hold (agent_holds agent) )
        )
      )
    )
    (forall (?s - game_object ?db - drawer)
      (and
        (preference itemInClosedDrawerAtEnd
          (exists (?tb - ball)
            (at-end
              (agent_holds ?db)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (< (or (count dodgeballFromDeskToTarget:doggie_bed) (* 20 (* (count-unique-positions itemInClosedDrawerAtEnd:pink_dodgeball) 1 )
          )
          (count-once itemInClosedDrawerAtEnd:blue:beachball)
        )
        (= (count-once-per-objects dodgeballFromDeskToTarget:blue_dodgeball:beachball) )
      )
      (* (* (count itemInClosedDrawerAtEnd:golfball:block) 4 )
        (count dodgeballFromDeskToTarget:green:red)
      )
    )
  )
)
(:scoring
  (- (* (+ (* (* 3 (external-forall-maximize 10 ) )
          (+ (* 20 (* (+ 4 (count itemInClosedDrawerAtEnd:dodgeball) )
                (+ 3 (* (count dodgeballFromDeskToTarget:red) 5 )
                )
                (count-once itemInClosedDrawerAtEnd)
                8
              )
            )
            (/
              5
              2
            )
            (count-once itemInClosedDrawerAtEnd:red)
            (= (+ (count-once dodgeballFromDeskToTarget:blue_pyramid_block) (* (+ (= 3 2 (count itemInClosedDrawerAtEnd:dodgeball) )
                    0
                    (total-score)
                    2
                  )
                  (count dodgeballFromDeskToTarget:golfball)
                )
                (count dodgeballFromDeskToTarget:dodgeball)
              )
              6
            )
          )
        )
        3
      )
    )
  )
)
)

(define (game game-id-211) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (and
        (exists (?b ?t - hexagonal_bin ?b4 - building)
          (exists (?d - pillow)
            (and
              (forall (?h - beachball ?h - curved_wooden_ramp)
                (game-conserved
                  (agent_holds ?b4)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballBouncesOnceToDoggieBed
      (exists (?d ?h - block)
        (then
          (once (same_type ?h ?h) )
          (once (and (on rug ?h) (and (same_object pink ?h) (agent_holds ?d) ) ) )
          (once (in agent room_center) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects dodgeballBouncesOnceToDoggieBed:doggie_bed) (or (+ (* 3 )
        (+ (- (* (count dodgeballBouncesOnceToDoggieBed:dodgeball:blue_dodgeball:dodgeball) 10 )
          )
          (+ (count-once-per-objects dodgeballBouncesOnceToDoggieBed:pink_dodgeball:red) )
        )
        (count dodgeballBouncesOnceToDoggieBed:green)
        300
      )
      10
    )
  )
)
(:scoring
  (+ (* 7 9 )
    20
  )
)
)

(define (game game-id-212) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?d - beachball ?b5 - hexagonal_bin)
      (forall (?c - hexagonal_bin)
        (game-conserved
          (not
            (< (distance ?c agent) (distance ?b5 ?c))
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference woodenBlockMovedFromRugToDesk
      (exists (?c1 - cylindrical_block)
        (at-end
          (in ?c1 ?c1)
        )
      )
    )
    (preference blocksInPlace
      (exists (?b2 - building ?c2 - hexagonal_bin ?t - dodgeball)
        (then
          (hold (not (= (distance ?t ?t) (distance ?t ?t)) ) )
          (once (not (and (adjacent_side ?t ?t ?t ?t) (not (and (on ?t ?t) ) ) ) ) )
          (once (not (touch ?t ?t) ) )
          (once (in_motion ?t) )
        )
      )
    )
    (preference ballThrownMissesEverything
      (exists (?h ?r ?d ?l ?b5 ?g - hexagonal_bin)
        (then
          (once (not (agent_holds ?d) ) )
          (once (not (not (in_motion ?l) ) ) )
          (hold (agent_holds ?d) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (count-once-per-objects ballThrownMissesEverything:dodgeball) )
)
(:scoring
  (- (= 20 (count-once-per-objects blocksInPlace:beachball) )
  )
)
)

(define (game game-id-213) (:domain many-objects-room-v1)
(:setup
  (exists (?c - hexagonal_bin)
    (exists (?b - hexagonal_bin)
      (game-optional
        (in_motion agent)
      )
    )
  )
)
(:constraints
  (and
    (preference smallItemsInPlace
      (exists (?h - hexagonal_bin ?h - teddy_bear)
        (at-end
          (agent_holds ?h)
        )
      )
    )
    (forall (?b5 - (either laptop wall) ?o1 - hexagonal_bin)
      (and
        (preference dodgeballHitsBin
          (exists (?b6 - hexagonal_bin ?w2 - (either triangle_block bridge_block credit_card) ?o ?t2 - golfball)
            (then
              (once (and (and (not (and (not (on ?o ?o1) ) (agent_holds ?t2) ) ) (agent_holds rug) ) (not (agent_holds green) ) (in_motion bed) (not (on bed ?o) ) ) )
              (hold-while (and (touch ?o1 ?o1) (in ?t2 ?t2) (not (agent_holds ?o) ) ) (on ?t2 floor) (not (agent_holds ?o) ) )
              (once (adjacent ?t2 desk) )
            )
          )
        )
        (preference objectToBinOnFirstTry
          (exists (?r2 - (either yellow_cube_block golfball))
            (then
              (once (agent_holds ?r2) )
              (once (broken ?o1) )
              (hold-while (opposite ?r2 ?r2) (in ?r2 ?r2) )
            )
          )
        )
        (preference smallObjectThrownToBed
          (at-end
            (and
              (on ?o1 upright)
              (and
                (< 5 (distance room_center ?o1))
                (not
                  (or
                    (and
                      (on ?o1 ?o1)
                      (in ?o1 ?o1)
                      (in_motion ?o1)
                      (in_motion door)
                    )
                    (not
                      (not
                        (agent_holds ?o1)
                      )
                    )
                    (not
                      (and
                        (on ?o1 ?o1)
                        (equal_x_position desk rug)
                      )
                    )
                  )
                )
                (>= (distance ?o1 ?o1) (distance room_center ?o1))
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (count objectToBinOnFirstTry) (and (count-total smallObjectThrownToBed:blue_dodgeball) (* 3 (count objectToBinOnFirstTry:golfball) )
      )
    )
  )
)
(:scoring
  (count smallObjectThrownToBed:beachball)
)
)

(define (game game-id-214) (:domain many-objects-room-v1)
(:setup
  (forall (?c2 - ball)
    (exists (?c - cube_block)
      (and
        (and
          (exists (?d - block)
            (game-conserved
              (between ?c ?c ?d)
            )
          )
        )
        (and
          (forall (?b - hexagonal_bin)
            (forall (?d - drawer)
              (and
                (game-optional
                  (not
                    (and
                      (agent_holds ?d)
                      (rug_color_under ?d ?c2)
                      (in_motion ?b)
                    )
                  )
                )
              )
            )
          )
          (exists (?w2 - hexagonal_bin)
            (game-conserved
              (and
                (not
                  (agent_holds agent)
                )
                (in_motion back)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballsInPlace
      (exists (?o1 - dodgeball)
        (then
          (hold (not (and (in_motion ?o1) (same_color ?o1 ?o1) ) ) )
          (hold (and (in_motion ?o1) (in_motion ?o1) (in rug ?o1) (not (in ?o1 desk) ) ) )
          (hold-while (not (agent_holds ?o1) ) (adjacent ?o1 ?o1) )
        )
      )
    )
  )
)
(:terminal
  (< 5 (* (count dodgeballsInPlace:golfball) (external-forall-minimize 9 ) )
  )
)
(:scoring
  20
)
)

(define (game game-id-215) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (in_motion top_shelf)
  )
)
(:constraints
  (and
    (preference objectMovedRoomSide
      (exists (?l - (either dodgeball pillow) ?l3 - (either alarm_clock pencil))
        (then
          (hold (in_motion ?l3) )
          (hold (above ?l3 ?l3) )
          (once (and (on ?l3 ?l3) (not (and (not (not (in ?l3 ?l3) ) ) (touch ?l3 ?l3) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (- (count-once-per-objects objectMovedRoomSide:alarm_clock) )
    0
  )
)
(:scoring
  (+ (* (* 2 (* 10 2 )
        (total-time)
      )
      (* (* (count objectMovedRoomSide:pink:dodgeball) (count objectMovedRoomSide:yellow) )
        300
      )
      (count objectMovedRoomSide:yellow:blue_dodgeball:yellow)
      (* 1 (count-once-per-objects objectMovedRoomSide:yellow) )
    )
    5
  )
)
)

(define (game game-id-216) (:domain many-objects-room-v1)
(:setup
  (forall (?b - hexagonal_bin ?o - tall_cylindrical_block)
    (not
      (game-optional
        (and
          (not
            (touch ?o ?o)
          )
          (not
            (not
              (not
                (agent_holds ?o)
              )
            )
          )
          (and
            (in ?o blue)
            (agent_holds ?o)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownFromDoor
      (exists (?t1 - beachball)
        (then
          (hold (adjacent ?t1 ?t1) )
        )
      )
    )
    (preference ballThrownToBin
      (exists (?c3 - block)
        (at-end
          (not
            (in_motion ?c3)
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-increasing-measure ballThrownToBin:side_table) 5 )
)
(:scoring
  (< (external-forall-minimize (+ (count-once-per-objects ballThrownToBin:green:doggie_bed) (total-time) )
    )
    100
  )
)
)

(define (game game-id-217) (:domain medium-objects-room-v1)
(:setup
  (exists (?o1 - triangular_ramp ?tb - dodgeball ?t1 ?b - hexagonal_bin)
    (forall (?r - ball)
      (or
        (exists (?h - golfball)
          (game-conserved
            (agent_holds ?t1)
          )
        )
        (exists (?g ?r2 - block)
          (exists (?b3 - teddy_bear ?p1 - hexagonal_bin)
            (forall (?o - hexagonal_bin ?l - hexagonal_bin)
              (not
                (and
                  (and
                    (game-conserved
                      (same_color ?r2 ?t1)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference bookOnDeskShelf
      (exists (?r - teddy_bear)
        (then
          (once (in_motion ?r) )
          (once (not (not (agent_holds ?r) ) ) )
          (hold-while (and (adjacent agent back) (adjacent agent room_center) (adjacent ?r room_center) ) (on ?r ?r) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (count-once-per-objects bookOnDeskShelf:green) (- (total-time) )
    )
    100
  )
)
(:scoring
  5
)
)

(define (game game-id-218) (:domain few-objects-room-v1)
(:setup
  (forall (?t ?ob - dodgeball)
    (and
      (exists (?o - hexagonal_bin ?l1 - game_object)
        (forall (?o - hexagonal_bin)
          (game-optional
            (in_motion ?l1)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwFromBehindChairsInBin
      (exists (?o - block)
        (then
          (once (not (and (not (touch ?o ?o) ) (on floor ?o) (and (on ?o ?o) (not (in_motion desk) ) (not (>= (distance back ?o) 1) ) ) ) ) )
          (hold (and (in_motion ?o) (in_motion ?o) ) )
          (once (in ?o ?o) )
        )
      )
    )
    (preference gameObjectToBin
      (exists (?d - hexagonal_bin)
        (then
          (once (agent_holds ?d) )
          (once (and (and (same_type desk ?d) (in ?d ?d) ) (same_color agent ?d) ) )
          (once (agent_holds ?d) )
        )
      )
    )
    (forall (?h - beachball)
      (and
        (preference objectsHidden
          (exists (?c - hexagonal_bin)
            (then
              (hold (on ?h ?c) )
              (once (and (and (in_motion ?c) (and (not (not (on desk ?c) ) ) (not (in ?h ?h) ) ) ) (and (in_motion ?c) (exists (?b7 - triangular_ramp ?d1 - hexagonal_bin) (not (adjacent ?c ?c) ) ) (not (and (in_motion ?c) (and (and (same_type ?c agent) (in ?c ?h) (and (and (in ?c agent) (not (agent_holds ?h) ) ) (not (and (not (not (exists (?b ?l2 - dodgeball) (agent_holds ?l2) ) ) ) (adjacent ?h ?h) ) ) ) ) (not (between agent room_center ?c) ) (not (exists (?r - (either cylindrical_block dodgeball) ?b3 - curved_wooden_ramp) (adjacent ?b3 desk) ) ) (not (and (and (and (not (not (agent_holds ?h) ) ) (in_motion ?h) ) (in_motion ?h) ) (adjacent ?h ?h) (in ?h ?h) (not (in_motion ?c) ) ) ) ) ) ) ) (not (touch ?c ?h) ) (exists (?b5 - ball) (rug_color_under ?b5 bed) ) ) )
              (once (in_motion agent) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (+ 3 (count-overlapping throwFromBehindChairsInBin:dodgeball) (total-score) )
    4
  )
)
(:scoring
  3
)
)

(define (game game-id-219) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (game-optional
        (in_motion rug)
      )
      (exists (?d1 - block)
        (forall (?h - dodgeball)
          (game-conserved
            (not
              (on ?d1 ?d1)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference golfballLandsInBinThroughRamp
      (exists (?t ?d - hexagonal_bin)
        (then
          (hold (in_motion ?t) )
          (hold (< 5 (distance rug ?t)) )
          (once (agent_holds ?d) )
        )
      )
    )
  )
)
(:terminal
  (>= (count golfballLandsInBinThroughRamp:blue_dodgeball) (count golfballLandsInBinThroughRamp:basketball:dodgeball) )
)
(:scoring
  (count golfballLandsInBinThroughRamp:beachball)
)
)

(define (game game-id-220) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (in_motion agent)
  )
)
(:constraints
  (and
    (forall (?d - doggie_bed)
      (and
        (preference castleBuilt
          (then
            (hold (in_motion ?d) )
            (once (or (in_motion ?d) (touch upright agent) ) )
            (once (on ?d agent) )
          )
        )
      )
    )
    (forall (?g - (either mug bridge_block))
      (and
        (preference itemsBroken
          (exists (?b - hexagonal_bin ?d - chair)
            (then
              (once (and (on ?g ?d) (object_orientation ?d ?g) (on ?g ?d) (< 1 1) (< (distance_side ?d agent ?d) 9) (and (agent_holds agent) (not (not (and (broken ?d) (and (rug_color_under ?d ?d) (in_motion ?g) ) ) ) ) ) ) )
              (once (and (not (on ?d ?d) ) (on ?d ?d) ) )
              (once (and (in room_center desk) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (* (- (+ 4 30 )
        )
        (* 2 )
      )
      (count-once-per-objects castleBuilt)
    )
    (> (* 9 (count castleBuilt:blue_dodgeball) )
      5
    )
  )
)
(:scoring
  (count-once-per-objects castleBuilt)
)
)

(define (game game-id-221) (:domain many-objects-room-v1)
(:setup
  (forall (?h - hexagonal_bin)
    (game-optional
      (not
        (not
          (agent_holds ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballKnocksBlockFromRug
      (exists (?g - hexagonal_bin)
        (then
          (once (in ball bed) )
          (hold (on ?g floor) )
          (hold-while (and (or (in_motion ?g) (agent_holds ?g) ) (and (and (broken rug) (in_motion ?g) (in_motion ?g) ) (and (in_motion ?g) (and (touch ?g desk) (is_setup_object ?g) (< 8 (distance ?g ?g)) ) (not (and (and (agent_holds ?g) (agent_holds ?g) ) (and (< 1 (distance ?g ?g)) (in_motion ?g) (agent_holds ?g) ) ) ) ) ) ) (in_motion west_wall) )
        )
      )
    )
    (preference castleBuilt
      (exists (?r - ball)
        (at-end
          (in_motion ?r)
        )
      )
    )
  )
)
(:terminal
  (>= (* 5 (count castleBuilt:golfball:hexagonal_bin) )
    (external-forall-maximize
      (* (total-time) (* (* (count ballKnocksBlockFromRug:dodgeball) (* (count-once castleBuilt:dodgeball) (* (* (count-once-per-external-objects ballKnocksBlockFromRug:purple) (+ 30 (* (count ballKnocksBlockFromRug:pink_dodgeball:red) (* (+ 10 0.5 )
                        (count-total ballKnocksBlockFromRug:golfball)
                        (external-forall-maximize
                          (count castleBuilt:pink_dodgeball:yellow)
                        )
                      )
                    )
                  )
                )
                (count castleBuilt:pyramid_block)
              )
            )
          )
          (count-unique-positions ballKnocksBlockFromRug:golfball)
        )
      )
    )
  )
)
(:scoring
  (+ 5 (* 5 (count castleBuilt:dodgeball) )
  )
)
)

(define (game game-id-222) (:domain many-objects-room-v1)
(:setup
  (exists (?b - hexagonal_bin)
    (and
      (exists (?b6 - hexagonal_bin ?b9 - beachball)
        (exists (?t - game_object)
          (exists (?b9 - dodgeball ?c - dodgeball)
            (and
              (and
                (and
                  (forall (?d - (either watch red))
                    (exists (?h - dodgeball)
                      (forall (?d - hexagonal_bin ?r2 - hexagonal_bin)
                        (exists (?t2 - ball)
                          (and
                            (forall (?c - doggie_bed ?h - triangular_ramp ?b - game_object)
                              (exists (?c1 - hexagonal_bin)
                                (exists (?h - dodgeball ?c5 - triangular_ramp)
                                  (and
                                    (exists (?c - drawer ?b7 - hexagonal_bin)
                                      (or
                                        (and
                                          (exists (?ob - game_object)
                                            (game-conserved
                                              (not
                                                (and
                                                  (exists (?o - ball)
                                                    (not
                                                      (not
                                                        (not
                                                          (on ?b9 rug)
                                                        )
                                                      )
                                                    )
                                                  )
                                                  (adjacent_side ?d ?r2 south_west_corner)
                                                  (and
                                                    (game_start )
                                                    (in_motion ?r2)
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
                (game-optional
                  (rug_color_under ?b9 ?c)
                )
              )
              (game-conserved
                (agent_holds ?t)
              )
              (forall (?h - block)
                (forall (?b - doggie_bed ?b - (either dodgeball basketball))
                  (game-optional
                    (or
                      (not
                        (not
                          (touch ?c ?b9)
                        )
                      )
                      (adjacent_side ?t ?h ?b9)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - ball)
      (and
        (preference blockFromRugToDesk
          (exists (?b ?o - hexagonal_bin ?c4 - dodgeball)
            (then
              (hold (and (not (agent_holds floor) ) (in ?c4 ?c4) ) )
              (once (<= (x_position ?c4) (distance ?c4 ?h)) )
              (once (on ?c4 ?h) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> 6 (count-once-per-objects blockFromRugToDesk:brown) )
)
(:scoring
  2
)
)

(define (game game-id-223) (:domain medium-objects-room-v1)
(:setup
  (exists (?ob - triangular_ramp)
    (and
      (game-conserved
        (same_color ?ob ?ob)
      )
    )
  )
)
(:constraints
  (and
    (forall (?r - book)
      (and
        (preference itemsHidingScreens
          (then
            (hold (exists (?b5 - (either key_chain yellow_cube_block)) (or (in_motion bed) (in_motion ?r) ) ) )
            (hold (in desk ?r) )
            (hold-while (not (adjacent_side sideways ?r ?r) ) (touch agent ?r) )
          )
        )
      )
    )
    (forall (?p2 - hexagonal_bin ?w2 - teddy_bear)
      (and
        (preference gameBlockFound
          (exists (?h ?h - ball)
            (then
              (once (= 2 (distance ?h ?w2)) )
              (hold-while (< 1 (distance ?w2 ?h)) (and (in_motion desk) (in_motion desk) (exists (?b - (either bridge_block dodgeball)) (open ?h) ) ) )
              (once (in_motion ?h) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (or (count-unique-positions itemsHidingScreens:purple) 10 ) )
    4
  )
)
(:scoring
  (count itemsHidingScreens:pink)
)
)

(define (game game-id-224) (:domain medium-objects-room-v1)
(:setup
  (exists (?w2 - (either lamp basketball) ?w - hexagonal_bin)
    (game-optional
      (and
        (and
          (not
            (not
              (touch ?w ?w)
            )
          )
          (not
            (not
              (and
                (agent_holds agent)
                (not
                  (on ?w agent)
                )
              )
            )
          )
        )
        (in_motion ?w)
      )
    )
  )
)
(:constraints
  (and
    (forall (?l1 - dodgeball)
      (and
        (preference throwAttempt
          (exists (?bl ?c2 - (either doggie_bed blue_cube_block))
            (then
              (once (or (is_setup_object ?l1) (on ?l1 ?bl) ) )
              (once (not (touch ?c2 ?c2) ) )
              (once (on ?c2 ?bl) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 3 1 )
)
(:scoring
  2
)
)

(define (game game-id-225) (:domain medium-objects-room-v1)
(:setup
  (exists (?l ?c - doggie_bed ?h - chair)
    (exists (?d - (either doggie_bed cd blue_cube_block pyramid_block cylindrical_block cd tall_cylindrical_block) ?d - (either bridge_block cube_block pink))
      (game-conserved
        (> (distance ?d bed) (distance ?h desk))
      )
    )
  )
)
(:constraints
  (and
    (forall (?o2 - bridge_block)
      (and
        (preference throwToRampToBin
          (exists (?x - teddy_bear)
            (then
              (once (and (agent_holds ?x) (and (not (not (agent_holds ?o2) ) ) (> 1 1) (and (not (in ?o2 ?x) ) (and (in_motion ?o2) (or (and (exists (?r2 - blue_cube_block ?o2 - teddy_bear) (agent_holds desk) ) (on ?x ?o2) ) (open ?x) ) ) ) ) ) )
              (once (in ?x ?x) )
              (hold (not (< (distance ?x ?x) (distance ?o2 desk)) ) )
            )
          )
        )
        (preference throwKnocksOverBear
          (exists (?h ?r - pillow ?bl - shelf ?c - teddy_bear)
            (at-end
              (on ?c ?c)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (<= (count throwKnocksOverBear:dodgeball) 10 )
      5
    )
  )
)
(:scoring
  (+ (count-longest throwKnocksOverBear:basketball) (count-same-positions throwKnocksOverBear:pink:blue_dodgeball) )
)
)

(define (game game-id-226) (:domain medium-objects-room-v1)
(:setup
  (exists (?d ?d - book)
    (game-conserved
      (touch ?d ?d)
    )
  )
)
(:constraints
  (and
    (forall (?h - (either desktop doggie_bed))
      (and
        (preference golfballInBinFromPillow
          (exists (?d - cube_block)
            (then
              (once (in ?h ?d) )
              (once (in_motion ?h) )
              (hold (in_motion ?d) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 50 (* (count-once-per-objects golfballInBinFromPillow:dodgeball) (count-once-per-external-objects golfballInBinFromPillow:purple) )
  )
)
(:scoring
  (count-once-per-objects golfballInBinFromPillow:doggie_bed)
)
)

(define (game game-id-227) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?b6 - hexagonal_bin)
      (and
        (and
          (game-conserved
            (in south_west_corner ?b6)
          )
          (and
            (game-conserved
              (not
                (not
                  (and
                    (not
                      (agent_holds agent)
                    )
                    (agent_holds bed)
                  )
                )
              )
            )
            (game-conserved
              (in_motion pink_dodgeball)
            )
          )
        )
        (forall (?d - pillow)
          (game-conserved
            (and
              (in_motion door)
              (not
                (and
                  (touch ?b6 agent)
                  (not
                    (opposite ?d ?b6)
                  )
                )
              )
            )
          )
        )
        (and
          (forall (?f - dodgeball ?l2 - ball)
            (game-optional
              (not
                (same_color ?b6 ?l2)
              )
            )
          )
          (and
            (exists (?c1 - block)
              (exists (?s - curved_wooden_ramp ?d - (either cd))
                (and
                  (forall (?o2 - hexagonal_bin)
                    (and
                      (and
                        (game-optional
                          (and
                            (not
                              (and
                                (opposite bed ?o2)
                                (and
                                  (same_type agent ?b6)
                                  (on ?d ?d)
                                )
                              )
                            )
                            (on ?b6 ?b6)
                            (in_motion ?c1)
                          )
                        )
                        (game-optional
                          (and
                            (touch ?b6 ?c1)
                            (and
                              (agent_holds ?b6)
                              (not
                                (in_motion ?c1)
                              )
                              (rug_color_under ?c1 ?o2)
                            )
                          )
                        )
                      )
                      (exists (?d - chair)
                        (exists (?d - ball ?o - (either book pyramid_block) ?o2 - building)
                          (game-optional
                            (agent_holds ?d)
                          )
                        )
                      )
                    )
                  )
                  (and
                    (game-conserved
                      (faces ?c1 green)
                    )
                    (not
                      (game-conserved
                        (agent_holds front)
                      )
                    )
                  )
                )
              )
            )
          )
          (game-conserved
            (in ?b6 agent)
          )
          (forall (?d - dodgeball)
            (game-conserved
              (and
                (not
                  (on ?b6 ?d)
                )
                (or
                  (on ?b6 ?d)
                  (touch agent ?d)
                )
              )
            )
          )
          (and
            (exists (?t1 - hexagonal_bin ?d - (either golfball golfball))
              (not
                (exists (?bl - hexagonal_bin)
                  (not
                    (game-conserved
                      (agent_holds ?bl)
                    )
                  )
                )
              )
            )
            (and
              (and
                (game-optional
                  (not
                    (not
                      (in desk ?b6)
                    )
                  )
                )
                (and
                  (game-optional
                    (and
                      (not
                        (adjacent_side pink ?b6 ?b6 ?b6)
                      )
                    )
                  )
                )
                (not
                  (and
                    (forall (?ob - block)
                      (forall (?d - chair)
                        (exists (?t - curved_wooden_ramp)
                          (exists (?h - hexagonal_bin)
                            (and
                              (and
                                (forall (?c6 - wall)
                                  (and
                                    (forall (?o - hexagonal_bin)
                                      (exists (?b - dodgeball)
                                        (and
                                          (game-conserved
                                            (touch ?ob ?t)
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
                (exists (?x - dodgeball ?b10 - hexagonal_bin)
                  (and
                    (exists (?f - hexagonal_bin)
                      (and
                        (game-optional
                          (not
                            (adjacent ?f desk)
                          )
                        )
                      )
                    )
                  )
                )
                (exists (?r2 - hexagonal_bin)
                  (forall (?d ?c2 - blinds ?o - shelf)
                    (game-conserved
                      (in_motion ?r2)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwObjectToBin
      (exists (?o4 ?t - hexagonal_bin)
        (then
          (once (adjacent ?t ?t) )
          (hold (and (not (and (and (in_motion ?t) (in_motion ?t) ) (agent_holds ?t) ) ) (not (and (on ?t ?t) (between ?o4 ?t ?t) ) ) (and (agent_holds ?o4) (not (not (agent_holds ?o4) ) ) ) ) )
          (hold (same_type ?o4 ?t) )
          (once (agent_holds agent) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 5 (+ (count throwObjectToBin:beachball) (count-once-per-objects throwObjectToBin:dodgeball) )
    )
    (>= 5 7 )
  )
)
(:scoring
  (count throwObjectToBin:beachball)
)
)

(define (game game-id-228) (:domain many-objects-room-v1)
(:setup
  (exists (?t1 - hexagonal_bin)
    (game-optional
      (not
        (in_motion ?t1)
      )
    )
  )
)
(:constraints
  (and
    (preference blockOnBlockInTowerAtEnd
      (exists (?l4 - pyramid_block)
        (then
          (once (not (and (and (exists (?b5 ?d ?r ?c4 - game_object) (not (and (object_orientation ?r ?l4) (= 8 (distance ?d agent)) ) ) ) (in_motion ?l4) (adjacent ?l4 ?l4) ) (not (agent_holds ?l4) ) ) ) )
          (once (agent_holds ?l4) )
          (once (in_motion ?l4) )
          (once (adjacent ?l4 ?l4) )
          (once (forall (?b5 ?l2 ?c4 ?o1 ?tb ?b - (either teddy_bear game_object)) (in_motion desk) ) )
          (hold (in_motion agent) )
        )
      )
    )
  )
)
(:terminal
  (> (count-once-per-objects blockOnBlockInTowerAtEnd:dodgeball) 2 )
)
(:scoring
  (total-score)
)
)

(define (game game-id-229) (:domain medium-objects-room-v1)
(:setup
  (forall (?b - game_object)
    (forall (?b9 - (either wall dodgeball))
      (exists (?c - hexagonal_bin)
        (forall (?l3 - hexagonal_bin ?h - game_object ?c2 - color ?s - (either cellphone tall_cylindrical_block))
          (and
            (forall (?d1 - triangular_ramp ?b1 - ball ?c3 - hexagonal_bin)
              (or
                (and
                  (and
                    (exists (?g - blinds)
                      (game-conserved
                        (and
                          (agent_holds ?b9)
                          (and
                            (not
                              (on ?g ?c3)
                            )
                            (and
                              (in ?b9 desk)
                              (in_motion ?c3)
                              (in_motion ?c3)
                            )
                          )
                        )
                      )
                    )
                    (and
                      (forall (?b2 ?ob - shelf)
                        (exists (?b - hexagonal_bin ?b3 - golfball)
                          (game-optional
                            (agent_holds ?c3)
                          )
                        )
                      )
                    )
                  )
                )
                (game-conserved
                  (and
                    (agent_holds ?c3)
                  )
                )
              )
            )
            (game-conserved
              (in_motion ?c)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownFromObjectToBin
      (exists (?f - cube_block ?d - ball)
        (then
          (once (and (and (agent_holds ?d) (above ?d ?d) (on ?d desk) (and (<= 3 8) ) ) (not (and (on ?d ?d) (opposite ?d rug) ) ) ) )
          (hold-for 5 (not (adjacent_side ?d ?d ?d) ) )
          (once (not (and (in_motion ?d) (in room_center agent) ) ) )
        )
      )
    )
    (preference objectThrownFromRug
      (exists (?c3 - ball)
        (then
          (once (not (not (and (< 8 (distance ?c3 ?c3)) (and (in_motion ?c3) (not (agent_holds ?c3) ) (agent_holds ?c3) (adjacent ?c3 ?c3) ) ) ) ) )
          (hold-while (not (and (< (distance_side rug agent ?c3) 3) (and (in_motion ?c3) (agent_holds ?c3) ) ) ) (in_motion ?c3) )
          (once (on ?c3 ?c3) )
        )
      )
    )
  )
)
(:terminal
  (> (* 2 15 )
    3
  )
)
(:scoring
  (+ 0 3 )
)
)

(define (game game-id-230) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (forall (?f - hexagonal_bin)
        (game-conserved
          (agent_holds desk)
        )
      )
      (forall (?r2 - dodgeball)
        (exists (?h - cube_block ?h - block)
          (forall (?p1 - shelf ?l - block)
            (game-conserved
              (forall (?r - hexagonal_bin ?g - block)
                (and
                  (in_motion ?g)
                  (in_motion ?g)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference laptopAndBookInPlace
      (exists (?g ?b6 - teddy_bear)
        (then
          (once (in_motion ?b6) )
          (any)
          (hold (and (and (not (and (not (agent_crouches ) ) ) ) (not (adjacent ?g ?g) ) ) (in_motion floor) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* (external-forall-maximize 20 ) (count laptopAndBookInPlace:pink) )
      (count laptopAndBookInPlace:yellow_pyramid_block:hexagonal_bin:dodgeball)
    )
    (= (* (count laptopAndBookInPlace:beachball) )
      (* 5 8 (* (= (+ 8 (count laptopAndBookInPlace:pink:triangle_block) )
            1
            (count laptopAndBookInPlace:red:blue_dodgeball)
          )
          6
          10
          2
          (+ 1 (and 2 (* (external-forall-maximize 2 ) (* 1 (* (* 8 (- (total-time) )
                    )
                    (count laptopAndBookInPlace:golfball:green)
                  )
                )
              )
            )
          )
          5
        )
      )
    )
  )
)
(:scoring
  (* (count laptopAndBookInPlace:basketball) (total-time) )
)
)

(define (game game-id-231) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?b - chair)
      (game-conserved
        (not
          (not
            (< 6 1)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o5 - hexagonal_bin)
      (and
        (preference ballDroppedInBin
          (exists (?b - ball ?d - pyramid_block ?h - block)
            (at-end
              (and
                (agent_holds ?o5)
                (in_motion ?o5)
              )
            )
          )
        )
        (preference agentLeavesDogbedOrNoMoreBalls
          (exists (?h - (either dodgeball basketball) ?w2 - cube_block)
            (then
              (forall-sequence (?d - book ?bl - cylindrical_block)
                (then
                  (once (agent_holds ?bl) )
                  (once (agent_holds ?w2) )
                  (once (adjacent_side room_center ?w2 ?o5 ?bl) )
                )
              )
              (once (in ?o5 ?w2) )
              (once (in ?o5 desk) )
            )
          )
        )
      )
    )
    (preference ballThrownToBin
      (exists (?h - ball)
        (then
          (hold (on pink_dodgeball ?h) )
          (once (>= (distance_side ?h ?h room_center ?h) 1) )
          (hold (not (not (exists (?h - hexagonal_bin) (not (on ?h ?h) ) ) ) ) )
        )
      )
    )
    (preference objectThrownFromRug
      (exists (?b - shelf)
        (then
          (hold (adjacent agent desk) )
          (once (agent_holds ?b) )
          (hold (< (distance ?b ?b) (building_size ?b)) )
          (once (and (not (exists (?bl - dodgeball) (not (and (in ?bl ?b) (and (not (not (on ?bl ?b) ) ) (in door ?bl) ) ) ) ) ) (not (exists (?t2 - game_object) (game_over ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-measure agentLeavesDogbedOrNoMoreBalls:blue_cube_block) (count ballDroppedInBin:blue_pyramid_block) )
)
(:scoring
  (+ 5 2 )
)
)

(define (game game-id-232) (:domain few-objects-room-v1)
(:setup
  (forall (?b - hexagonal_bin ?d2 - wall)
    (game-conserved
      (> 7 (x_position ?d2))
    )
  )
)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?t1 - teddy_bear)
        (then
          (hold (not (on room_center rug) ) )
          (once (in_motion ?t1) )
          (once (agent_holds ?t1) )
        )
      )
    )
  )
)
(:terminal
  (> (count throwBallToBin:hexagonal_bin) (+ (external-forall-maximize (+ 8 (total-score) 2 )
      )
      3
    )
  )
)
(:scoring
  (* (count throwBallToBin:yellow) (total-score) 40 (= 9 0.5 2 )
  )
)
)

(define (game game-id-233) (:domain many-objects-room-v1)
(:setup
  (exists (?o2 - cylindrical_block)
    (and
      (and
        (and
          (exists (?t - chair ?p3 - dodgeball)
            (exists (?b1 - dodgeball ?c4 - hexagonal_bin)
              (game-conserved
                (not
                  (agent_holds ?p3)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballDroppedInBin
      (exists (?o2 - hexagonal_bin ?bl - color)
        (at-end
          (faces ?bl front_left_corner)
        )
      )
    )
  )
)
(:terminal
  (>= 10 (+ (total-score) 6 )
  )
)
(:scoring
  (count-once-per-objects ballDroppedInBin:golfball)
)
)

(define (game game-id-234) (:domain few-objects-room-v1)
(:setup
  (exists (?h - cube_block ?f - dodgeball)
    (forall (?b6 - game_object)
      (or
        (not
          (and
            (game-conserved
              (and
                (in ?f ?b6)
                (adjacent_side ?b6 ?b6 ?b6)
              )
            )
            (forall (?s - block ?l - hexagonal_bin)
              (forall (?r - (either alarm_clock mug floor pyramid_block ball blue_cube_block pyramid_block))
                (exists (?c6 - dodgeball ?b - ball)
                  (and
                    (and
                      (game-optional
                        (and
                          (= 7 4)
                          (in_motion ?b6)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?g - hexagonal_bin ?p1 - doggie_bed)
      (and
        (preference ballThrownToBin
          (exists (?b2 - dodgeball)
            (at-end
              (touch ?p1 ?p1)
            )
          )
        )
      )
    )
    (preference castleBuilt
      (exists (?r - hexagonal_bin ?ob - pillow)
        (then
          (hold (and (and (not (faces ?ob ?ob) ) (and (and (not (agent_holds ?ob) ) (or (on ?ob ?ob) (and (equal_x_position ?ob ?ob) (and (and (in_motion ?ob) (in_motion ?ob) ) ) ) ) ) (<= (distance agent ?ob) 9) ) ) (in_motion ?ob) ) )
          (once (in_motion ?ob) )
          (hold (> 0 (distance_side ?ob ?ob ?ob)) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-once-per-objects castleBuilt:dodgeball) (- 4 )
    )
    (= (count castleBuilt:dodgeball:green) (count-once-per-objects castleBuilt:golfball:beachball) )
    (>= (count ballThrownToBin:dodgeball) (count-once ballThrownToBin:rug) )
    (or
      (> (* (* (- (* (- (count-once-per-objects castleBuilt:dodgeball) )
                2
                (count-once-per-objects ballThrownToBin:beachball)
                (* 1 40 6 )
                (count castleBuilt:dodgeball)
                2
              )
            )
            (* (* (* (count-longest castleBuilt:hexagonal_bin) (count castleBuilt:pink) 300 (total-score) )
                (- (not 2 ) )
              )
              1
            )
          )
          (count castleBuilt:golfball)
        )
        (external-forall-maximize
          (- (count-once-per-objects castleBuilt) )
        )
      )
    )
  )
)
(:scoring
  (count castleBuilt:basketball)
)
)

(define (game game-id-235) (:domain medium-objects-room-v1)
(:setup
  (exists (?l - ball ?h - game_object)
    (game-conserved
      (in pink room_center)
    )
  )
)
(:constraints
  (and
    (preference blockOnBlockInTowerAtEnd
      (exists (?t - drawer)
        (at-end
          (and
            (and
              (touch door ?t)
              (not
                (and
                  (and
                    (agent_holds ?t)
                    (in ?t ?t)
                  )
                  (in ?t ?t)
                )
              )
              (on ?t ?t)
            )
            (agent_holds ?t)
            (exists (?c5 - hexagonal_bin)
              (equal_z_position bed ?c5)
            )
          )
        )
      )
    )
    (preference throwBallToBinOffObject
      (exists (?o5 - color)
        (then
          (once (between ?o5 ?o5 ?o5) )
          (once (agent_holds pink) )
          (hold (and (not (in ?o5 ?o5) ) (not (and (and (and (and (same_color ?o5 ?o5) (in ?o5 desktop) ) (not (in agent ?o5) ) ) (and (agent_holds ?o5) (rug_color_under ?o5 ?o5) (on ?o5 ?o5) ) ) (and (and (in_motion ?o5) (in_motion ?o5) ) (in_motion ?o5) ) ) ) (in_motion ?o5) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (- (count blockOnBlockInTowerAtEnd:green) )
    10
  )
)
(:scoring
  9
)
)

(define (game game-id-236) (:domain few-objects-room-v1)
(:setup
  (exists (?b - pillow ?b6 - dodgeball)
    (game-optional
      (agent_holds ?b6)
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?s - ball ?c6 - ball)
        (then
          (hold (on ?c6 left) )
          (hold (agent_holds block) )
          (once (in ?c6 agent) )
        )
      )
    )
    (forall (?b3 - cube_block ?c2 - building ?b - hexagonal_bin)
      (and
        (preference objectToBinOnFirstTry
          (exists (?b - block ?bl - doggie_bed ?s - hexagonal_bin)
            (then
              (hold (not (in_motion ?s) ) )
              (hold (on ?b ?b) )
              (once (not (and (not (agent_holds ?s) ) (in_motion ?b) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* 2 (* (count-once objectToBinOnFirstTry:pink) (* (count-once-per-objects objectToBinOnFirstTry) (count-once-per-objects objectToBinOnFirstTry:hexagonal_bin) (* (count objectToBinOnFirstTry:red_pyramid_block) (* (+ (count-overlapping objectToBinOnFirstTry:green) (count-same-positions objectToBinOnFirstTry:yellow_cube_block) (count-once-per-objects objectToBinOnFirstTry:basketball) )
              1
            )
          )
        )
      )
    )
    6
  )
)
(:scoring
  (count-increasing-measure objectToBinOnFirstTry:yellow_cube_block)
)
)

(define (game game-id-237) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?c3 - drawer ?l3 - hexagonal_bin ?ob - hexagonal_bin ?c6 - dodgeball)
      (and
        (exists (?h - dodgeball ?d - block)
          (forall (?l ?h - sliding_door ?d - dodgeball)
            (and
              (exists (?h - (either cellphone beachball))
                (and
                  (game-conserved
                    (not
                      (and
                        (and
                          (not
                            (not
                              (or
                                (adjacent ?c6 ?d)
                                (not
                                  (agent_holds ?c6)
                                )
                              )
                            )
                          )
                          (agent_holds ?c6)
                          (in_motion desk)
                          (and
                            (game_start )
                            (on ?c6 ?h)
                          )
                          (on agent ?c6)
                          (and
                            (in agent ?c6)
                            (in_motion room_center)
                            (agent_holds ?h)
                          )
                          (not
                            (and
                              (on ?c6 ?c6)
                              (not
                                (in_motion ?c6)
                              )
                              (< (distance ?d agent) 1)
                            )
                          )
                        )
                        (on ?c6 front)
                      )
                    )
                  )
                )
              )
              (and
                (forall (?h - block)
                  (and
                    (forall (?b - curved_wooden_ramp)
                      (and
                        (forall (?w2 - desk_shelf)
                          (and
                            (exists (?o1 - curved_wooden_ramp ?c - pyramid_block)
                              (game-conserved
                                (in_motion rug)
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
                (and
                  (and
                    (exists (?b4 ?o3 - cube_block)
                      (game-conserved
                        (> (x_position bed) (distance agent ?o3))
                      )
                    )
                    (exists (?d - hexagonal_bin)
                      (and
                        (game-conserved
                          (in_motion ?c6)
                        )
                        (exists (?c5 - hexagonal_bin)
                          (and
                            (game-conserved
                              (and
                                (and
                                  (and
                                    (in_motion desk)
                                  )
                                  (not
                                    (in ?c5 desk)
                                  )
                                )
                                (in_motion bed)
                              )
                            )
                            (game-optional
                              (agent_holds ?c6)
                            )
                          )
                        )
                      )
                    )
                  )
                  (forall (?h - dodgeball ?b ?o3 ?o - hexagonal_bin)
                    (game-conserved
                      (and
                        (agent_holds ?d)
                        (and
                          (not
                            (in desk ?d)
                          )
                          (in_motion ?o3)
                          (on ?c6 ?d)
                        )
                      )
                    )
                  )
                  (forall (?h - (either cd side_table))
                    (game-conserved
                      (in_motion ?c6)
                    )
                  )
                )
              )
              (game-optional
                (and
                  (not
                    (agent_holds ?c6)
                  )
                  (on agent ?d)
                )
              )
            )
          )
        )
        (game-conserved
          (agent_holds ?c6)
        )
        (forall (?s - (either triangular_ramp pyramid_block))
          (and
            (exists (?c1 - building)
              (forall (?d - hexagonal_bin)
                (game-conserved
                  (not
                    (on ?c6 door)
                  )
                )
              )
            )
          )
        )
      )
    )
    (and
      (and
        (and
          (exists (?c - (either wall wall))
            (game-conserved
              (agent_holds ?c)
            )
          )
        )
        (and
          (forall (?h - cube_block)
            (game-conserved
              (> 9 (distance_side ?h room_center ?h ?h))
            )
          )
        )
      )
    )
    (exists (?b8 - cube_block)
      (game-conserved
        (in_motion ?b8)
      )
    )
  )
)
(:constraints
  (and
    (preference failedThrowToBin
      (exists (?b3 - tan_cube_block)
        (then
          (once (and (in ?b3 ?b3) (agent_holds ?b3) ) )
          (forall-sequence (?o - chair ?t - chair ?o - teddy_bear ?c2 - hexagonal_bin ?b2 - (either golfball teddy_bear))
            (then
              (once (agent_holds floor) )
              (hold (exists (?d - ball ?o - triangular_ramp) (not (on ?b2 ?b3) ) ) )
              (once (on ?b3 ?b2) )
              (hold (in agent front) )
            )
          )
          (once (not (same_type ?b3 room_center) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects failedThrowToBin:book) (count-longest failedThrowToBin:basketball:pink_dodgeball) )
)
(:scoring
  (* 5 (count failedThrowToBin:golfball:golfball) )
)
)

(define (game game-id-238) (:domain many-objects-room-v1)
(:setup
  (exists (?b - game_object ?w1 - dodgeball ?l3 - (either basketball pink book))
    (game-conserved
      (in_motion ?l3)
    )
  )
)
(:constraints
  (and
    (preference baseBlockInTowerAtEnd
      (exists (?o2 - hexagonal_bin)
        (then
          (once (agent_holds ?o2) )
          (once (open top_shelf) )
        )
      )
    )
  )
)
(:terminal
  (>= (- (total-time) )
    3
  )
)
(:scoring
  (* (* 8 (count-once-per-external-objects baseBlockInTowerAtEnd:cube_block) )
    (+ (* 10 (external-forall-minimize (external-forall-maximize 20 ) ) )
      (* (* (count-once-per-objects baseBlockInTowerAtEnd:alarm_clock:hexagonal_bin) (count-once baseBlockInTowerAtEnd:basketball) )
        3
      )
    )
    (count-shortest baseBlockInTowerAtEnd:pink_dodgeball)
  )
)
)

(define (game game-id-239) (:domain many-objects-room-v1)
(:setup
  (forall (?d - desktop)
    (and
      (forall (?f ?o - dodgeball)
        (and
          (game-conserved
            (in_motion pink_dodgeball)
          )
          (game-optional
            (touch ?d ?o)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference failedThrowAttempt
      (exists (?h - wall ?h - hexagonal_bin)
        (then
          (hold (in_motion ?h) )
          (hold (adjacent ?h room_center) )
          (once (same_object ?h ?h) )
        )
      )
    )
  )
)
(:terminal
  (>= 8 20 )
)
(:scoring
  8
)
)

(define (game game-id-240) (:domain many-objects-room-v1)
(:setup
  (exists (?b - (either ball desktop))
    (forall (?b - hexagonal_bin ?d - dodgeball)
      (or
        (and
          (game-conserved
            (in door ?d)
          )
          (and
            (forall (?l - cylindrical_block)
              (and
                (game-conserved
                  (between ?l ?d ?b)
                )
                (exists (?b - hexagonal_bin ?b - tall_cylindrical_block)
                  (game-conserved
                    (on ?d ?d)
                  )
                )
                (forall (?t - dodgeball ?c - game_object ?b - cube_block)
                  (and
                    (game-optional
                      (agent_holds front_left_corner)
                    )
                  )
                )
              )
            )
          )
          (exists (?s - curved_wooden_ramp)
            (game-conserved
              (on ?d ?d)
            )
          )
        )
        (forall (?l3 - red_dodgeball)
          (forall (?o1 ?d2 - building)
            (and
              (and
                (and
                  (forall (?d - block)
                    (game-optional
                      (on ?d2 ?b)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference teddyBearLandsInBin
      (exists (?c - (either teddy_bear golfball laptop) ?c6 - ball)
        (at-end
          (rug_color_under desk ?c6)
        )
      )
    )
  )
)
(:terminal
  (or
    (> (count-once teddyBearLandsInBin:beachball) (+ (- (* 3 (count-once teddyBearLandsInBin:wall) )
        )
        (- 3 )
      )
    )
    (>= 6 (total-time) )
    (>= (count teddyBearLandsInBin:blue_pyramid_block) 20 )
  )
)
(:scoring
  (+ 60 (+ (- 2 )
      (* (count-once-per-objects teddyBearLandsInBin:doggie_bed) 30 )
      30
    )
  )
)
)

(define (game game-id-241) (:domain few-objects-room-v1)
(:setup
  (exists (?l2 - dodgeball ?d - hexagonal_bin ?o - block)
    (and
      (not
        (game-optional
          (agent_holds ?o)
        )
      )
      (exists (?b - (either alarm_clock cylindrical_block))
        (and
          (exists (?c - chair)
            (game-conserved
              (= 2 10 1)
            )
          )
          (game-conserved
            (and
              (not
                (in ?b ?o)
              )
              (and
                (and
                  (on ?b ?o)
                  (in_motion ?o)
                )
                (= (distance ?b ?o) (distance upright top_drawer) 1)
                (adjacent ?b ?b)
                (or
                  (in_motion ?o)
                  (same_object ?b ?b)
                )
                (and
                  (adjacent ?o ?o)
                  (object_orientation upright ?o)
                )
                (in ?o bed)
                (not
                  (and
                    (or
                      (equal_z_position ?b ?b)
                      (not
                        (in_motion ?b)
                      )
                    )
                    (in_motion ?o)
                  )
                )
                (and
                  (in_motion ?o)
                  (not
                    (agent_holds ?b)
                  )
                )
                (agent_holds ?o)
                (agent_holds ?b)
                (in_motion ?b)
                (agent_holds ?b)
              )
            )
          )
        )
      )
      (game-optional
        (rug_color_under bed agent)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownThroughRampToBin
      (exists (?c1 ?h - watch)
        (then
          (once (same_color room_center block) )
          (forall-sequence (?o - dodgeball)
            (then
              (once (and (broken ?c1) (and (on upright ?o) (< (distance ?o ?h) (distance ?o rug)) ) ) )
              (hold (not (forall (?h - (either basketball golfball) ?b - hexagonal_bin) (on ?h ?b) ) ) )
              (once (agent_holds ?o) )
            )
          )
          (hold (touch ?h ?c1) )
        )
      )
    )
    (preference throwToBinFromDistance
      (exists (?ob - dodgeball)
        (then
          (hold (rug_color_under ?ob ?ob) )
          (hold (in_motion ?ob) )
          (hold (in_motion ?ob) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (count ballThrownThroughRampToBin:pink_dodgeball) (* 2 3 )
    )
  )
)
(:scoring
  8
)
)

(define (game game-id-242) (:domain few-objects-room-v1)
(:setup
  (exists (?c2 - (either doggie_bed golfball pyramid_block))
    (game-conserved
      (agent_holds ?c2)
    )
  )
)
(:constraints
  (and
    (preference throwFromBehindChairsInBin
      (exists (?h - hexagonal_bin)
        (at-end
          (not
            (agent_holds ?h)
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (+ 180 (count throwFromBehindChairsInBin:golfball) )
      (count throwFromBehindChairsInBin:alarm_clock)
    )
    (or
      (>= (= (- (or (count-once throwFromBehindChairsInBin:basketball) (count-once-per-objects throwFromBehindChairsInBin:golfball) (count-once-per-external-objects throwFromBehindChairsInBin:dodgeball) ) )
          3
        )
        (count throwFromBehindChairsInBin:yellow_cube_block)
      )
    )
  )
)
(:scoring
  (>= 8 (count throwFromBehindChairsInBin:dodgeball:cylindrical_block) )
)
)

(define (game game-id-243) (:domain medium-objects-room-v1)
(:setup
  (exists (?g - hexagonal_bin)
    (and
      (and
        (game-conserved
          (on agent ?g)
        )
      )
      (and
        (forall (?g - block)
          (game-optional
            (and
              (and
                (agent_holds ?g)
              )
              (on ?g ?g)
              (exists (?p - flat_block ?h - doggie_bed)
                (and
                  (< 0 (distance ?h ?g))
                  (game_over )
                )
              )
            )
          )
        )
        (game-conserved
          (on ?g ?g)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectInBuilding
      (exists (?b - color)
        (then
          (hold (and (between ?b ?b ?b) ) )
          (hold-while (in pink_dodgeball ?b) (and (in ?b ?b) (touch ?b pink_dodgeball) (not (on agent ?b) ) ) (agent_holds ?b) (not (agent_holds ?b) ) )
          (once (adjacent ?b ?b) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= 20 (count objectInBuilding:dodgeball) )
  )
)
(:scoring
  (- 20 )
)
)

(define (game game-id-244) (:domain few-objects-room-v1)
(:setup
  (forall (?o - dodgeball ?c3 - (either dodgeball tall_cylindrical_block))
    (game-optional
      (exists (?b - block ?b - wall ?d2 - bridge_block)
        (on ?c3 agent)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownFromObjectToBin
      (exists (?o ?l1 ?r2 ?c5 - chair)
        (then
          (once (= 1 (distance_side ?l1 ?o ?r2) 6) )
          (hold (equal_z_position ?r2 ?r2) )
          (hold (same_color rug green_golfball) )
        )
      )
    )
    (preference blockInTowerKnocked
      (exists (?c3 - hexagonal_bin ?p - golfball ?l - dodgeball ?h - hexagonal_bin ?h - game_object)
        (then
          (any)
          (once (exists (?b10 - wall ?b - dodgeball) (not (in_motion ?h) ) ) )
          (once (not (not (or (or (and (agent_holds ?h) (not (agent_holds room_center) ) ) ) (same_color ?h ?h) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (+ (* (* 4 (count blockInTowerKnocked:yellow) )
          2
        )
        (or
          (* 6 5 5 )
        )
      )
      (- (- 10 )
      )
    )
    (or
      (>= (* (* (count ballThrownFromObjectToBin:yellow) (count blockInTowerKnocked:green:yellow) )
          (* (count-once-per-objects blockInTowerKnocked:pink) (count-once ballThrownFromObjectToBin:blue_dodgeball) )
        )
        (count ballThrownFromObjectToBin:triangle_block)
      )
      (or
        (>= (count-once-per-objects ballThrownFromObjectToBin:wall) (+ (count-once ballThrownFromObjectToBin:beachball) (count blockInTowerKnocked:green:purple) )
        )
      )
      (or
        (not
          (> (count-once-per-objects blockInTowerKnocked:basketball) 1 )
        )
        (= (count-once ballThrownFromObjectToBin:cylindrical_block) (count-once-per-objects ballThrownFromObjectToBin:dodgeball) )
      )
    )
  )
)
(:scoring
  (* (- (* (count-same-positions ballThrownFromObjectToBin:yellow) (+ (external-forall-maximize (count-once-per-objects blockInTowerKnocked:wall) ) 30 )
      )
    )
    (count-once-per-objects ballThrownFromObjectToBin:dodgeball)
  )
)
)

(define (game game-id-245) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - (either main_light_switch watch dodgeball))
      (and
        (game-conserved
          (in_motion bed)
        )
        (game-conserved
          (agent_holds ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectMovedRoomSide
      (exists (?b1 - hexagonal_bin ?p2 - dodgeball)
        (then
          (once (opposite ?p2 agent) )
          (once (not (not (agent_holds ?p2) ) ) )
          (once (not (agent_holds ?p2) ) )
        )
      )
    )
    (preference smallItemsInPlace
      (exists (?b - game_object ?r - ball)
        (then
          (hold (and (not (agent_holds desk) ) (not (not (exists (?x - hexagonal_bin) (in_motion ?x) ) ) ) ) )
          (once (and (< (distance ?r agent) 1) ) )
          (once (and (in_motion floor) (forall (?h - game_object ?l2 - game_object) (agent_holds pink_dodgeball) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count smallItemsInPlace:blue_dodgeball) (count-once-per-objects smallItemsInPlace) )
)
(:scoring
  (count-total smallItemsInPlace:purple:dodgeball)
)
)

(define (game game-id-246) (:domain few-objects-room-v1)
(:setup
  (or
    (game-optional
      (agent_holds bed)
    )
    (forall (?g - hexagonal_bin ?d - (either bridge_block))
      (exists (?t - hexagonal_bin ?b - dodgeball)
        (game-conserved
          (in_motion ?b)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dropAttempt
      (exists (?o - hexagonal_bin)
        (at-end
          (in_motion ?o)
        )
      )
    )
    (preference throwToRampToBin
      (exists (?o3 - ball)
        (then
          (hold-while (and (same_color ?o3 ?o3) (not (in bed ?o3) ) ) (not (in ?o3 ?o3) ) )
          (once (not (in_motion ?o3) ) )
          (once (not (on ?o3 bed) ) )
        )
      )
    )
    (forall (?b - hexagonal_bin)
      (and
        (preference blockInTowerAtEnd
          (exists (?c - teddy_bear)
            (then
              (once (in ?b ?c) )
              (once (< 1 1) )
              (hold (and (in_motion ?b) (agent_holds ?c) ) )
            )
          )
        )
        (preference ballThrownHitsAgent
          (exists (?l3 - dodgeball)
            (then
              (once (between ?b ?b ?l3) )
              (hold (and (not (agent_holds ?l3) ) (on agent ?b) ) )
              (once (agent_holds ?l3) )
            )
          )
        )
        (preference blockInTowerKnockedByDodgeball
          (exists (?b - wall)
            (then
              (once (in_motion ?b) )
              (once (toggled_on ?b) )
              (once (exists (?c1 - desktop) (and (on ?b room_center) (is_setup_object ?b) ) ) )
            )
          )
        )
      )
    )
    (preference throwFromBehindChairsInBin
      (exists (?d - dodgeball ?b4 - block)
        (then
          (once-measure (in_motion ?b4) (distance upright agent) )
          (once (not (object_orientation ?b4 ?b4) ) )
          (once (not (and (touch desk ?b4) (< (distance ?b4 desk) 1) (adjacent ?b4 ?b4) ) ) )
        )
      )
    )
    (preference thrownBallReachesEnd
      (exists (?t - hexagonal_bin ?b - ball)
        (then
          (once (< 1 1) )
          (once (not (touch ?b ?b) ) )
          (once (or (rug_color_under ?b desk) (adjacent_side ?b ?b ?b) ) )
        )
      )
    )
    (forall (?b10 - (either golfball cube_block pyramid_block) ?b6 - (either blue_cube_block cube_block) ?o1 - chair ?o1 ?s - watch ?f - curved_wooden_ramp)
      (and
        (preference greenObjectMovedToRoomCenter
          (exists (?b - (either cube_block tall_cylindrical_block key_chain) ?s - (either cylindrical_block pyramid_block book) ?b - chair)
            (then
              (once (on ?f ?f) )
              (hold (in_motion desk) )
              (once (not (agent_holds ?b) ) )
            )
          )
        )
        (preference otherObjectsOnDeskShelf
          (exists (?b - red_dodgeball ?p - dodgeball)
            (then
              (forall-sequence (?b4 - hexagonal_bin ?d - building ?b - cube_block)
                (then
                  (hold-to-end (adjacent ?f ?f) )
                  (once (agent_holds ?b) )
                  (once (same_color bed ?f) )
                )
              )
              (once (on ?f ?f) )
              (hold-while (in_motion ?f) (and (in ?p desk) (exists (?h ?b - dodgeball) (adjacent_side bed west_wall ?h) ) ) (same_object room_center ?f) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= 50 (count-once-per-external-objects throwToRampToBin:dodgeball:green) )
    (>= (count-once-per-objects ballThrownHitsAgent:basketball) -30 )
  )
)
(:scoring
  (* (count otherObjectsOnDeskShelf:golfball:blue_dodgeball) (count throwToRampToBin:green) (count-overlapping thrownBallReachesEnd:golfball) )
)
)

(define (game game-id-247) (:domain many-objects-room-v1)
(:setup
  (forall (?p1 ?p1 - ball)
    (game-conserved
      (agent_holds ?p1)
    )
  )
)
(:constraints
  (and
    (preference dodgeballBouncesOnceToDoggieBed
      (exists (?w1 - dodgeball)
        (then
          (once (not (rug_color_under ?w1 ?w1) ) )
        )
      )
    )
  )
)
(:terminal
  (> (count dodgeballBouncesOnceToDoggieBed:basketball) (count-once-per-external-objects dodgeballBouncesOnceToDoggieBed:basketball) )
)
(:scoring
  (count dodgeballBouncesOnceToDoggieBed:red)
)
)

(define (game game-id-248) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (not
      (exists (?b6 - doggie_bed)
        (on ?b6 desk)
      )
    )
  )
)
(:constraints
  (and
    (preference throwToRampToBin
      (exists (?c2 - golfball)
        (then
          (once (not (< 10 6) ) )
          (once-measure (is_setup_object side_table) (distance ?c2 ?c2) )
          (hold-to-end (not (not (agent_holds ?c2) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (count-same-positions throwToRampToBin:green) (count-once-per-objects throwToRampToBin:pyramid_block) )
  )
)
(:scoring
  1
)
)

(define (game game-id-249) (:domain medium-objects-room-v1)
(:setup
  (exists (?d ?d ?g ?b8 ?h ?b - cube_block)
    (exists (?c - hexagonal_bin ?b4 ?tb - pillow ?d2 - cube_block)
      (and
        (and
          (exists (?b6 ?c - cube_block)
            (exists (?c - block)
              (exists (?p3 - dodgeball)
                (and
                  (exists (?b - ball ?o2 - ball)
                    (game-conserved
                      (agent_holds ?c)
                    )
                  )
                )
              )
            )
          )
        )
        (game-optional
          (< (distance ?g ?d) (distance agent agent))
        )
      )
    )
  )
)
(:constraints
  (and
    (preference redDodgeballThrownToBinWithoutTouchingFloor
      (exists (?t ?p1 ?b ?d ?h ?b - game_object)
        (then
          (once (in ?t ?h) )
          (once (and (not (not (and (in ?h ?t) ) ) ) (adjacent ?d ?t) ) )
          (hold-while (on ?d ?p1) (on agent ?t) )
        )
      )
    )
  )
)
(:terminal
  (>= 6 (count redDodgeballThrownToBinWithoutTouchingFloor:basketball) )
)
(:scoring
  (count-once-per-objects redDodgeballThrownToBinWithoutTouchingFloor:beachball)
)
)

(define (game game-id-250) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (exists (?g - block ?d1 ?c2 - triangular_ramp)
      (not
        (same_type agent ?c2)
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - (either dodgeball side_table))
      (and
        (preference cubeBlockThrownToTopShelf
          (exists (?h - (either cd cd) ?o - hexagonal_bin)
            (then
              (once (same_color ?h ?o) )
              (once (adjacent ?h ?h) )
              (once (not (not (between ?h ?o agent) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< (* (total-time) (count-increasing-measure cubeBlockThrownToTopShelf:pyramid_block) )
    (- (* (* (count-once-per-objects cubeBlockThrownToTopShelf:dodgeball) 7 )
        (count cubeBlockThrownToTopShelf:block)
      )
    )
  )
)
(:scoring
  (* 5 )
)
)

(define (game game-id-251) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (on floor south_wall)
  )
)
(:constraints
  (and
    (preference castleBuilt
      (exists (?b ?b ?f ?d - curved_wooden_ramp ?h - golfball)
        (at-end
          (and
            (and
              (and
                (open ?h)
                (forall (?c4 - ball)
                  (and
                    (is_setup_object desk)
                    (exists (?p1 - drawer)
                      (and
                        (in green bed)
                        (not
                          (object_orientation ?p1 ?h)
                        )
                      )
                    )
                  )
                )
              )
              (in_motion ?h)
            )
            (agent_holds ?h)
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (count-increasing-measure castleBuilt:dodgeball) (count-once-per-objects castleBuilt:basketball) )
    (>= (count castleBuilt:dodgeball:yellow:hexagonal_bin) 1 )
  )
)
(:scoring
  (count castleBuilt)
)
)

(define (game game-id-252) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (and
      (on desk rug)
      (exists (?l2 - dodgeball)
        (and
          (not
            (and
              (>= 2 2)
              (adjacent rug ?l2)
            )
          )
          (in_motion ?l2)
          (not
            (on ?l2 ?l2)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownFromDoor
      (exists (?b ?d - yellow_pyramid_block)
        (then
          (once (and (not (and (in_motion ?b) (agent_holds ?d) ) ) (on agent ?b) ) )
          (hold (and (adjacent_side ?d sideways ?d) (faces rug ?b) (and (agent_holds ?d) (not (and (faces ?d ?d) (in_motion ?d) ) ) (adjacent ?d ?b) ) ) )
          (once (on ?d rug) )
          (hold (in_motion ?d) )
          (hold (object_orientation room_center ?d) )
        )
      )
    )
    (forall (?r1 - cube_block)
      (and
        (preference blockOnBlockInTowerAtEnd
          (exists (?l1 - hexagonal_bin ?b6 - ball ?b10 - (either golfball dodgeball dodgeball) ?d1 - dodgeball)
            (then
              (once-measure (not (not (not (in_motion ?d1) ) ) ) (distance ?d1 ?r1) )
              (hold-while (agent_holds ?r1) (same_object ?d1 ?r1) )
              (hold (touch ?r1 ?d1) )
            )
          )
        )
      )
    )
    (forall (?l - bridge_block)
      (and
        (preference throwGolfballToBin
          (exists (?h - dodgeball)
            (then
              (once (agent_holds ?l) )
              (hold (and (agent_holds ?l) (and (exists (?c - dodgeball ?b ?r - chair) (and (not (in ?l ?r) ) (on ?r ?b) ) ) (in ?h ?l) (adjacent_side ?l ?h ?h) ) (on ?h ?h) (on ?l ?l) (and (= (distance bed ?h) 2) (not (adjacent_side ?l ?h agent) ) ) (agent_holds ?h) ) )
              (hold (not (and (not (and (on ?h ?h) (not (not (touch ?l ?l) ) ) ) ) (and (and (adjacent_side ?l ?l door) (and (and (and (between desk ?h ?h) (in_motion ?l) ) (in_motion ?l) ) (open ?h) ) (and (not (not (and (adjacent_side upright ?l ?h) (and (not (agent_holds ?l) ) (agent_holds door) (or (and (and (agent_holds ?h) (and (not (not (rug_color_under agent ?h) ) ) (not (not (game_start ) ) ) (agent_holds ?h) ) ) (same_object ?h ?h) ) (not (> 1 (x_position ?h)) ) (agent_holds ?h) ) (exists (?d - block) (adjacent agent sideways) ) ) ) ) ) (not (agent_holds ?h) ) (not (not (agent_holds upright) ) ) (agent_holds desk) ) (object_orientation ?h bed) ) (in ?h ?h) ) ) ) )
            )
          )
        )
        (preference cubeBlockThrowAttempt
          (exists (?l - (either cube_block yellow pyramid_block laptop))
            (then
              (once (touch ?l ?l) )
              (once (and (in_motion ?l) (in_motion ?l) ) )
              (once (rug_color_under floor ?l) )
            )
          )
        )
      )
    )
    (forall (?g - curved_wooden_ramp)
      (and
        (preference castleBuilt
          (exists (?h - hexagonal_bin ?c - teddy_bear ?o4 - (either credit_card bridge_block))
            (at-end
              (not
                (exists (?h - hexagonal_bin)
                  (in_motion ?h)
                )
              )
            )
          )
        )
        (preference smallItemsInPlace
          (then
            (once (agent_holds ?g) )
            (hold (agent_holds ?g) )
            (hold (and (in_motion desk) (in_motion ?g) (in_motion ?g) ) )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-increasing-measure blockOnBlockInTowerAtEnd:yellow) 6 )
)
(:scoring
  (* (+ (* (* (* (* 7 10 )
            (count-total ballThrownFromDoor:beachball)
          )
          (count castleBuilt:tall_cylindrical_block:basketball)
        )
        (* 2 (* (+ 4 (- (count-once cubeBlockThrowAttempt:dodgeball) (<= 10 (count-once throwGolfballToBin:brown) )
              )
            )
            (count blockOnBlockInTowerAtEnd:golfball)
          )
        )
        (count-once-per-external-objects ballThrownFromDoor:beachball:golfball:dodgeball)
        (count-shortest cubeBlockThrowAttempt:blue_dodgeball:red)
      )
      (count castleBuilt:pink_dodgeball)
    )
    (* (* (* (* (= (count smallItemsInPlace:yellow:green) 3 )
            (* (count cubeBlockThrowAttempt:beachball) 15 )
          )
          (count throwGolfballToBin:basketball)
        )
        3
      )
      (external-forall-maximize
        (- (count castleBuilt:green) )
      )
    )
    7
  )
)
)

(define (game game-id-253) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (>= 1 10)
  )
)
(:constraints
  (and
    (preference ballThrownHitsAgent
      (exists (?c ?b7 ?h ?s - (either dodgeball dodgeball))
        (then
          (hold (in_motion west_wall) )
          (hold-for 9 (not (and (rug_color_under ?c ?b7) (not (and (not (and (not (agent_holds ?b7) ) (agent_holds west_wall) (agent_holds ?s) ) ) (in ?b7 ?h) ) ) ) ) )
          (once (<= (distance ?b7 ?s) (building_size ?s)) )
        )
      )
    )
    (forall (?h - golfball ?o1 - pyramid_block ?t - sliding_door)
      (and
        (preference itemInClosedDrawerAtEnd
          (exists (?t - hexagonal_bin ?c1 - (either red cylindrical_block))
            (then
              (once (adjacent_side ?t ?c1 ?c1 ?t) )
              (once (not (agent_holds agent) ) )
              (hold-for 4 (agent_holds ?c1) )
            )
          )
        )
      )
    )
    (preference cubeBlockThrownToTopShelf
      (exists (?c1 - dodgeball ?o2 - flat_block)
        (at-end
          (not
            (not
              (in ?o2 ?o2)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (not
      (>= (* (/ (count-same-positions ballThrownHitsAgent:golfball) (count itemInClosedDrawerAtEnd:golfball) ) (count cubeBlockThrownToTopShelf:doggie_bed) 0 10 )
        2
      )
    )
    (>= 0.7 (count-unique-positions ballThrownHitsAgent:dodgeball) )
    (not
      (>= (* (* 5 20 )
          2
          (* (count itemInClosedDrawerAtEnd:hexagonal_bin) (- (* (count-once cubeBlockThrownToTopShelf:dodgeball) (count itemInClosedDrawerAtEnd:dodgeball:yellow) )
            )
          )
          (count ballThrownHitsAgent:basketball:pink)
          (count-once-per-objects ballThrownHitsAgent:pink)
          (* (< (> (count ballThrownHitsAgent:white:blue_dodgeball) (count itemInClosedDrawerAtEnd:dodgeball) )
              (count-once-per-objects itemInClosedDrawerAtEnd:pink:cube_block)
            )
            (count-once cubeBlockThrownToTopShelf:yellow_cube_block)
            50
            (- 1 )
            12
            (count cubeBlockThrownToTopShelf:basketball:beachball)
          )
          4
          5
          (count itemInClosedDrawerAtEnd:dodgeball)
        )
        (count cubeBlockThrownToTopShelf:hexagonal_bin)
      )
    )
  )
)
(:scoring
  (+ (count-once cubeBlockThrownToTopShelf:brown) 2 )
)
)

(define (game game-id-254) (:domain medium-objects-room-v1)
(:setup
  (exists (?s ?b5 ?c ?c ?h ?p - hexagonal_bin)
    (game-optional
      (and
        (or
          (and
            (not
              (not
                (on ?p ?s)
              )
            )
            (and
              (and
                (and
                  (not
                    (> 1 (distance ?h ?s))
                  )
                  (and
                    (between ?p front ?h)
                    (adjacent agent ?h)
                    (exists (?b - dodgeball)
                      (in ?h ?p)
                    )
                  )
                )
                (in_motion ?s)
              )
              (and
                (rug_color_under ?p ?h)
                (agent_holds ?p)
                (and
                  (on rug ?b5)
                  (not
                    (not
                      (not
                        (not
                          (and
                            (in_motion ?s)
                            (in_motion ?b5)
                          )
                        )
                      )
                    )
                  )
                  (touch ?p ?c)
                  (not
                    (faces agent ?h)
                  )
                  (agent_holds ?h)
                  (in_motion ?h)
                  (and
                    (and
                      (and
                        (on ?p ?s)
                        (= 1 1)
                      )
                      (in_motion ?s)
                    )
                    (agent_holds agent)
                  )
                  (and
                    (not
                      (and
                        (agent_holds desk)
                        (on ?c ?h)
                      )
                    )
                    (agent_holds rug)
                  )
                )
              )
              (not
                (on ?c ?p)
              )
            )
          )
          (on ?h ?p)
        )
        (and
          (agent_holds ?s)
          (agent_holds ?b5)
          (same_type ?s ?h)
          (rug_color_under door ?p)
        )
        (and
          (same_color ?c agent)
          (not
            (adjacent front top_shelf)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?b - dodgeball ?c - cube_block)
        (then
          (once (agent_holds bed) )
          (hold-to-end (or (and (above bed ?c) (and (not (in ?c green) ) (forall (?h - hexagonal_bin) (in_motion ?c) ) ) ) (and (same_type ?c room_center) (and (exists (?o - (either book pyramid_block)) (forall (?d2 - block) (on ?d2 ?o) ) ) (same_color ?c ?c) (agent_holds ?c) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (= 5 (+ (count throwAttempt) (total-time) )
  )
)
(:scoring
  (* 3 (count-once throwAttempt:orange) )
)
)

(define (game game-id-255) (:domain many-objects-room-v1)
(:setup
  (exists (?c6 - teddy_bear)
    (exists (?p - shelf)
      (game-optional
        (and
          (and
            (and
              (touch ?p floor)
              (in_motion ?p)
            )
            (not
              (or
                (in_motion ?p)
                (on ?c6 agent)
              )
            )
          )
          (not
            (and
              (and
                (<= (distance ?p ?c6) (distance ?c6 ?c6))
                (not
                  (and
                    (agent_holds ?p)
                    (not
                      (agent_holds ?c6)
                    )
                    (in rug ?p)
                    (not
                      (agent_holds ?c6)
                    )
                  )
                )
                (not
                  (not
                    (and
                      (on ?p ?p)
                      (in_motion ?c6)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?t - dodgeball)
      (and
        (preference gameBlockFound
          (exists (?h ?d - dodgeball)
            (at-end
              (on front_left_corner ?h)
            )
          )
        )
        (preference smallItemsInPlace
          (exists (?h - hexagonal_bin ?w1 - hexagonal_bin)
            (then
              (once (not (in_motion door) ) )
              (once (in_motion ?t) )
              (once (in_motion ?t) )
              (hold (and (in_motion bed) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< (count-once-per-objects gameBlockFound:golfball) (count-once smallItemsInPlace:beachball:blue_pyramid_block:basketball) )
)
(:scoring
  (count smallItemsInPlace:basketball)
)
)

(define (game game-id-256) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?t1 - dodgeball)
      (forall (?r - golfball)
        (exists (?b - cube_block)
          (game-conserved
            (in ?t1 ?r)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference towerFallsWhileBuilding
      (exists (?t - game_object)
        (then
          (hold (or (same_object ?t ?t) (agent_holds ?t) ) )
          (once (not (not (toggled_on ?t) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 8 10 )
)
(:scoring
  (+ (count-overlapping towerFallsWhileBuilding:purple) (count towerFallsWhileBuilding:blue_dodgeball) )
)
)

(define (game game-id-257) (:domain few-objects-room-v1)
(:setup
  (forall (?b - color)
    (game-conserved
      (exists (?b9 - game_object)
        (and
          (forall (?r ?o - (either golfball))
            (in_motion floor)
          )
          (agent_holds ?b)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToRampToBin
      (exists (?d - (either hexagonal_bin main_light_switch))
        (at-end
          (in_motion agent)
        )
      )
    )
  )
)
(:terminal
  (>= 8 (count-once-per-objects throwToRampToBin:dodgeball) )
)
(:scoring
  (count throwToRampToBin:green)
)
)

(define (game game-id-258) (:domain medium-objects-room-v1)
(:setup
  (forall (?d - game_object)
    (game-optional
      (exists (?r - (either alarm_clock dodgeball))
        (agent_holds desk)
      )
    )
  )
)
(:constraints
  (and
    (preference golfballInBinFromPillow
      (exists (?b - dodgeball)
        (then
          (hold-to-end (agent_holds ?b) )
          (once (not (>= (distance ?b ?b) 2) ) )
          (once (on ?b ?b) )
        )
      )
    )
    (forall (?d - (either pyramid_block mug golfball))
      (and
        (preference nonBlockPlacedInBuilding
          (exists (?ob - beachball)
            (then
              (once (agent_holds desk) )
              (hold-while (and (in_motion ?ob) (in_motion ?d) ) (exists (?b - game_object) (in_motion ?d) ) (not (not (in agent desk) ) ) )
              (once (and (not (in_motion ?d) ) (exists (?p - (either laptop doggie_bed)) (not (in_motion ?p) ) ) ) )
            )
          )
        )
        (preference blockThrowAttempt
          (exists (?h ?b - watch ?d - drawer)
            (then
              (once (not (not (in_motion bed) ) ) )
              (once (< (building_size ?d) (distance ?d ?d)) )
              (once (not (not (and (and (on ?d ?d) (agent_holds room_center) ) (exists (?p2 - hexagonal_bin ?b5 - ball) (exists (?b - ball) (on ?b ?d) ) ) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (= (* (count nonBlockPlacedInBuilding:pink) (count blockThrowAttempt) )
    (count nonBlockPlacedInBuilding:basketball:golfball)
  )
)
(:scoring
  300
)
)

(define (game game-id-259) (:domain many-objects-room-v1)
(:setup
  (exists (?h - hexagonal_bin ?p1 - tall_cylindrical_block)
    (forall (?w - hexagonal_bin ?r - building ?d ?l - dodgeball)
      (game-conserved
        (in_motion ?p1)
      )
    )
  )
)
(:constraints
  (and
    (preference ballToBinFromBed
      (exists (?h - hexagonal_bin)
        (then
          (once (agent_holds ?h) )
          (once (not (in ?h ?h) ) )
          (once (exists (?b - dodgeball) (object_orientation agent ?b) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 12 (count ballToBinFromBed:golfball) )
    2
  )
)
(:scoring
  (count ballToBinFromBed:yellow)
)
)

(define (game game-id-260) (:domain many-objects-room-v1)
(:setup
  (forall (?b - hexagonal_bin ?c4 - ball)
    (forall (?h - dodgeball ?h - game_object)
      (forall (?c4 - dodgeball)
        (and
          (game-optional
            (agent_holds desk)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?ob - chair ?c6 - dodgeball)
      (and
        (preference throwBallToBin
          (exists (?b4 - (either ball golfball))
            (then
              (once (above ?b4 ?c6) )
              (once (not (on ?b4 ?c6) ) )
              (once (not (in_motion pink_dodgeball) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (= (count-once-per-objects throwBallToBin:blue_dodgeball:green) (count-once-per-external-objects throwBallToBin:beachball) )
)
(:scoring
  9
)
)

(define (game game-id-261) (:domain medium-objects-room-v1)
(:setup
  (exists (?o - curved_wooden_ramp)
    (exists (?h - block)
      (game-optional
        (and
          (and
            (exists (?t - (either game_object doggie_bed cd))
              (forall (?r - hexagonal_bin ?c ?b10 - dodgeball ?l - cylindrical_block)
                (on ?o ?h)
              )
            )
            (and
              (agent_holds bed)
              (exists (?b - block)
                (not
                  (and
                    (not
                      (not
                        (not
                          (not
                            (not
                              (and
                                (not
                                  (in ?b ?o)
                                )
                                (and
                                  (exists (?h - triangular_ramp)
                                    (and
                                      (in ?h ?h)
                                      (not
                                        (or
                                          (< (distance ?b sideways) (x_position ?h))
                                          (touch ?h ?h)
                                        )
                                      )
                                    )
                                  )
                                  (not
                                    (< (building_size ?o) (x_position floor))
                                  )
                                )
                                (not
                                  (broken ?h)
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                    (not
                      (on ?o ?h)
                    )
                  )
                )
              )
              (not
                (not
                  (and
                    (agent_holds ?h)
                    (not
                      (agent_holds ?h)
                    )
                  )
                )
              )
            )
          )
          (not
            (not
              (adjacent ?o ?o)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwObjectToBin
      (exists (?r1 - hexagonal_bin)
        (at-end
          (same_color ?r1 ?r1)
        )
      )
    )
  )
)
(:terminal
  (not
    (< (* (count throwObjectToBin:beachball:pink) (count-once throwObjectToBin:wall) )
      (* (total-time) (external-forall-minimize (count throwObjectToBin:golfball) ) )
    )
  )
)
(:scoring
  (- (+ (total-score) 100 )
  )
)
)

(define (game game-id-262) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?f - dodgeball)
      (forall (?g - curved_wooden_ramp ?d - ball)
        (game-conserved
          (in ?f ?f)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference greenObjectMovedToRoomCenter
      (exists (?d2 - ball)
        (then
          (hold (and (agent_holds side_table) (or (not (in ?d2 ?d2) ) (not (same_type ?d2 rug) ) ) ) )
          (once (agent_holds ?d2) )
          (hold-while (agent_crouches ) (in_motion ?d2) (and (on ?d2 brown) (not (and (adjacent_side ?d2 room_center ?d2) (and (> 5 (distance ?d2 ?d2)) (on ?d2 ?d2) (and (agent_holds ?d2) (in door ?d2) ) (< (building_size ?d2) 1) (adjacent ?d2 ?d2) (not (and (forall (?d1 - hexagonal_bin ?t2 - ball ?b2 - chair) (adjacent_side ?d2 ?b2 ?d2 ?d2) ) (not (on ?d2 ?d2) ) ) ) (not (agent_holds ?d2) ) (on ?d2 ?d2) ) ) ) (in_motion ?d2) ) (not (and (on ?d2 ?d2) (in bed ?d2) ) ) )
        )
      )
    )
  )
)
(:terminal
  (< (count-once-per-objects greenObjectMovedToRoomCenter:basketball) 5 )
)
(:scoring
  (- (count greenObjectMovedToRoomCenter:beachball) )
)
)

(define (game game-id-263) (:domain medium-objects-room-v1)
(:setup
  (exists (?b4 - game_object)
    (exists (?b - cylindrical_block)
      (exists (?b - (either laptop pink))
        (exists (?c - block)
          (game-conserved
            (adjacent ?b4 ?b4)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballNeverThrown
      (exists (?f - wall ?h - building)
        (then
          (hold (in ?h ?h) )
          (hold-while (in_motion ?h) (not (not (adjacent room_center ?h) ) ) )
          (hold (equal_z_position ?h ?h) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 2 (count ballNeverThrown:basketball) )
    (count ballNeverThrown:beachball)
  )
)
(:scoring
  (total-time)
)
)

(define (game game-id-264) (:domain many-objects-room-v1)
(:setup
  (exists (?r - (either cylindrical_block) ?l4 - triangular_ramp)
    (and
      (and
        (exists (?c - dodgeball ?r - doggie_bed)
          (exists (?b - ball ?s ?r - (either cube_block blue_cube_block) ?w1 - doggie_bed)
            (and
              (game-conserved
                (on ?l4 ?r)
              )
            )
          )
        )
      )
      (game-optional
        (not
          (< (distance ?l4 agent) 1)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?r - hexagonal_bin)
      (and
        (preference pyramidBlockAtopTowerAtEnd
          (exists (?b - curved_wooden_ramp)
            (then
              (once (same_color ?b ?r) )
            )
          )
        )
      )
    )
    (preference dodgeballFromDeskToTarget
      (exists (?h - game_object ?c - dodgeball)
        (then
          (any)
          (hold-while (and (or (not (not (adjacent ?c agent) ) ) (and (in_motion ?c) (and (not (rug_color_under ?c ?c) ) (object_orientation desk ?c) ) ) ) (and (in_motion ?c) ) ) (< 9 (distance back ?c)) )
          (any)
        )
      )
    )
  )
)
(:terminal
  (or
    (and
      (>= (count dodgeballFromDeskToTarget:dodgeball) (count dodgeballFromDeskToTarget) )
      (or
        (not
          (> 15 (* 10 (* (* (count-once-per-objects pyramidBlockAtopTowerAtEnd:red) (count-once-per-objects pyramidBlockAtopTowerAtEnd:brown:basketball) )
                4
              )
            )
          )
        )
        (or
          (or
            (>= 20 10 )
            (>= (count dodgeballFromDeskToTarget:beachball) (* (* (external-forall-maximize (* (* 10 (count dodgeballFromDeskToTarget:pink:green) )
                      (count-total dodgeballFromDeskToTarget:hexagonal_bin:dodgeball)
                    )
                  )
                  (+ (not (* (external-forall-maximize 3 ) (* (+ 8 (* (* 5 (+ (count-measure dodgeballFromDeskToTarget:doggie_bed) 6 )
                                (count-once-per-objects dodgeballFromDeskToTarget:dodgeball)
                                (count-once-per-objects dodgeballFromDeskToTarget:basketball)
                                (* 10 (count dodgeballFromDeskToTarget:yellow) )
                                3
                                (count-once-per-objects pyramidBlockAtopTowerAtEnd:blue_dodgeball:green)
                                (count pyramidBlockAtopTowerAtEnd:dodgeball)
                                (+ (count-once-per-objects dodgeballFromDeskToTarget:pink_dodgeball) 50 )
                              )
                              (* 6 10 )
                            )
                            (count pyramidBlockAtopTowerAtEnd:cube_block)
                          )
                          2
                        )
                        (external-forall-maximize
                          (* (- 6 )
                            5
                          )
                        )
                      )
                    )
                    5
                  )
                )
                10
              )
            )
          )
          (>= (+ (total-score) (count pyramidBlockAtopTowerAtEnd:dodgeball) (count-once-per-objects pyramidBlockAtopTowerAtEnd) )
            (total-time)
          )
        )
      )
    )
    (>= (* 3 (+ 10 (>= (count dodgeballFromDeskToTarget:beachball:pink) (or (* (- 18 )
                (count pyramidBlockAtopTowerAtEnd:golfball)
              )
            )
          )
        )
      )
      (* 2 (count-once-per-objects dodgeballFromDeskToTarget:orange:yellow:golfball) (+ (- (count-once-per-objects dodgeballFromDeskToTarget:golfball) )
          30
        )
        5
        (* (+ (count pyramidBlockAtopTowerAtEnd:red) (* 5 20 )
          )
        )
      )
    )
    (>= (- (* (count-once-per-objects dodgeballFromDeskToTarget:wall) 10 5 )
        10
      )
      (total-time)
    )
  )
)
(:scoring
  (* 5 3 )
)
)

(define (game game-id-265) (:domain few-objects-room-v1)
(:setup
  (exists (?b - sliding_door)
    (and
      (game-conserved
        (in_motion ?b)
      )
    )
  )
)
(:constraints
  (and
    (preference blockCorrectlyPicked
      (exists (?h - teddy_bear)
        (then
          (once (object_orientation ?h ?h) )
          (once (and (on ?h ?h) (agent_holds ?h) ) )
          (once (and (object_orientation ?h ?h) (not (and (on ?h ?h) (not (on top_shelf ?h) ) ) ) (and (not (same_type ?h ?h) ) (not (< 3 (distance ?h rug)) ) ) (not (above ?h ?h) ) ) )
        )
      )
    )
    (preference ballInOrOnBin
      (exists (?b ?g - dodgeball ?b3 - hexagonal_bin ?d - hexagonal_bin)
        (then
          (once (in_motion ?d) )
          (hold-while (adjacent_side green ?d ?d) (between desk ?d agent) )
          (hold-for 3 (not (and (<= (distance floor ?d) 1) (and (on upright ?d) (and (adjacent yellow ?d) (in_motion blue) ) ) (in_motion ?d) ) ) )
        )
      )
    )
    (forall (?b - (either bridge_block cylindrical_block doggie_bed))
      (and
        (preference throwToRampToBin
          (at-end
            (and
              (and
                (not
                  (not
                    (agent_holds ?b)
                  )
                )
                (adjacent ?b ?b)
                (and
                  (in ?b ?b)
                  (agent_holds ?b)
                  (adjacent_side ?b ?b upside_down)
                )
                (agent_holds ?b)
              )
              (agent_holds ?b)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 2 (count blockCorrectlyPicked:dodgeball:golfball) )
    (or
      (< (count-once-per-external-objects ballInOrOnBin:hexagonal_bin) 10 )
    )
  )
)
(:scoring
  (* (- (* 2 (count throwToRampToBin:red) )
    )
    (count-once blockCorrectlyPicked:pyramid_block)
  )
)
)

(define (game game-id-266) (:domain medium-objects-room-v1)
(:setup
  (not
    (game-conserved
      (in_motion bed)
    )
  )
)
(:constraints
  (and
    (preference teddyBearHitsBall
      (exists (?b - chair)
        (then
          (once (and (and (on ?b ?b) (agent_holds ?b) ) (adjacent agent desk) ) )
          (once (in_motion ?b) )
          (hold (in_motion ?b) )
        )
      )
    )
    (forall (?r - (either basketball top_drawer dodgeball) ?p1 - (either cd pink blue_cube_block bridge_block) ?c3 - wall ?t - ball)
      (and
        (preference redDodgeballThrownToBinWithoutTouchingFloor
          (exists (?w1 - teddy_bear ?s ?d - dodgeball)
            (then
              (once (not (and (agent_holds agent) (agent_holds pink_dodgeball) ) ) )
              (once (object_orientation ?s ?s) )
              (once (on ?t ?t) )
            )
          )
        )
      )
    )
    (preference ballInOrOnBin
      (exists (?l2 - wall)
        (then
          (once (adjacent ?l2 ?l2) )
          (hold (in_motion ?l2) )
          (once (and (and (not (in desk floor) ) (in_motion agent) ) ) )
          (once (and (rug_color_under bed ?l2) (agent_holds ?l2) ) )
          (hold (exists (?h - doggie_bed) (not (and (< (building_size pink_dodgeball) (distance agent agent)) (in_motion ?h) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* (count redDodgeballThrownToBinWithoutTouchingFloor:dodgeball) (* 3 (* (count ballInOrOnBin:beachball:orange) (+ (* (* (count redDodgeballThrownToBinWithoutTouchingFloor:beachball) (count teddyBearHitsBall:basketball:yellow) )
                (<= 3 (* (count teddyBearHitsBall:doggie_bed) 6 )
                )
              )
              (count redDodgeballThrownToBinWithoutTouchingFloor:cube_block:orange)
            )
            (count ballInOrOnBin:basketball)
            (count-same-positions teddyBearHitsBall:dodgeball:purple)
            (* (total-score) (count-once-per-objects teddyBearHitsBall:dodgeball) )
            3
          )
        )
      )
      (* (count-once-per-objects ballInOrOnBin:orange) (* 10 (count redDodgeballThrownToBinWithoutTouchingFloor:pink) )
      )
    )
    (or
      (= (total-score) (* (count ballInOrOnBin:pink_dodgeball) 3 )
      )
      (not
        (or
          (>= 5 (count ballInOrOnBin) )
          (= 4 (count teddyBearHitsBall:dodgeball:yellow:pink_dodgeball) )
        )
      )
    )
    (>= (count-unique-positions ballInOrOnBin:cube_block:pink) 3 )
  )
)
(:scoring
  (* 4 (total-time) )
)
)

(define (game game-id-267) (:domain medium-objects-room-v1)
(:setup
  (not
    (forall (?b - color)
      (and
        (forall (?s - block)
          (forall (?o5 - teddy_bear)
            (and
              (exists (?o - game_object)
                (and
                  (and
                    (and
                      (exists (?b1 - cube_block)
                        (and
                          (game-optional
                            (and
                              (and
                                (in_motion ?o5)
                                (toggled_on ?b)
                              )
                              (in_motion ?o5)
                            )
                          )
                          (forall (?o - ball)
                            (and
                              (game-optional
                                (not
                                  (not
                                    (or
                                      (= (distance ?s agent) (distance agent ?b) 1)
                                      (adjacent ?b1 ?b)
                                      (agent_holds ?b)
                                    )
                                  )
                                )
                              )
                              (game-optional
                                (on ?b ?o)
                              )
                            )
                          )
                        )
                      )
                      (and
                        (game-optional
                          (in_motion ?o)
                        )
                        (game-optional
                          (and
                            (agent_holds ?o)
                            (agent_holds desk)
                          )
                        )
                      )
                      (game-optional
                        (and
                          (and
                            (and
                              (agent_holds ?o)
                              (on ?b ?s)
                              (open ?o)
                            )
                            (exists (?c - (either golfball blue_cube_block))
                              (on agent ?o5)
                            )
                          )
                          (or
                            (and
                              (in ?o ?o)
                              (not
                                (in_motion ?b)
                              )
                            )
                            (< 3 (distance ?o ?o5))
                          )
                        )
                      )
                    )
                    (exists (?b8 ?b - building)
                      (exists (?h - (either game_object alarm_clock cylindrical_block) ?r1 - game_object ?o1 - (either mug tall_cylindrical_block))
                        (game-optional
                          (not
                            (in_motion back)
                          )
                        )
                      )
                    )
                  )
                  (and
                    (and
                      (forall (?o4 - hexagonal_bin)
                        (and
                          (game-conserved
                            (on ?b ?o5)
                          )
                        )
                      )
                    )
                  )
                  (and
                    (game-conserved
                      (agent_holds ?s)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c2 - (either cellphone teddy_bear dodgeball) ?h - pyramid_block ?r - block)
      (and
        (preference objectMovedRoomSide
          (exists (?o3 - dodgeball)
            (then
              (once (in_motion ?r) )
              (hold-for 4 (in_motion ?r) )
              (hold (in_motion ?o3) )
            )
          )
        )
        (preference golfballInBinFromPillow
          (exists (?d - triangular_ramp)
            (then
              (hold (< (distance ?r desk) 3) )
              (hold (agent_holds ?d) )
              (once (and (open ?r) (agent_holds agent) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (count objectMovedRoomSide:dodgeball) 5 )
)
(:scoring
  5
)
)

(define (game game-id-268) (:domain medium-objects-room-v1)
(:setup
  (forall (?c6 - hexagonal_bin)
    (forall (?p - hexagonal_bin)
      (and
        (game-conserved
          (touch ?p ?c6)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?l4 - hexagonal_bin)
      (and
        (preference ballThrownToBin
          (then
            (hold (not (agent_holds ?l4) ) )
            (once (agent_holds bridge_block) )
            (hold (in_motion ?l4) )
          )
        )
      )
    )
  )
)
(:terminal
  (< (and (count-once-per-objects ballThrownToBin:dodgeball:dodgeball) ) (<= (count-once-per-objects ballThrownToBin:dodgeball) (* 4 10 )
    )
  )
)
(:scoring
  (* (count ballThrownToBin:blue_dodgeball) (or 3 (* (count-overlapping ballThrownToBin:golfball:yellow_pyramid_block:orange) (count-once ballThrownToBin:cylindrical_block) )
      (* (* (count-once-per-objects ballThrownToBin:pink_dodgeball) 20 )
        (count-measure ballThrownToBin:blue_dodgeball)
        (count-once ballThrownToBin:orange:white)
      )
    )
  )
)
)

(define (game game-id-269) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?c - building)
      (game-optional
        (and
          (in_motion ?c)
          (and
            (agent_holds agent)
            (agent_holds bed)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?l1 - hexagonal_bin)
      (and
        (preference ballThrownToChair
          (exists (?h - doggie_bed)
            (then
              (once (and (not (forall (?l4 - shelf) (opposite ?l4 ?h) ) ) (not (and (not (equal_z_position ?l1 ?h) ) (on ?l1 bed) ) ) ) )
              (any)
              (once (in_motion ?l1) )
            )
          )
        )
        (preference bigObjectThrownToBed
          (exists (?t2 - doggie_bed ?l3 - block)
            (then
              (hold (in_motion agent) )
              (once (not (or (in_motion ?l1) (agent_holds ?l3) ) ) )
              (hold (in_motion ?l1) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= 5 (count-once-per-objects bigObjectThrownToBed:beachball) )
    (< (or (* (total-time) )
      )
      (* (* (count-once-per-objects ballThrownToChair:dodgeball:basketball) (* (/ (< (total-time) (count-once-per-objects ballThrownToChair:yellow_cube_block) )
              (count ballThrownToChair:red)
            )
            3
          )
        )
        (total-time)
      )
    )
  )
)
(:scoring
  180
)
)

(define (game game-id-270) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds desk)
  )
)
(:constraints
  (and
    (preference ballThrownMissesEverything
      (exists (?g - dodgeball)
        (at-end
          (not
            (not
              (not
                (not
                  (toggled_on floor)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (external-forall-maximize (or (count-once-per-external-objects ballThrownMissesEverything:dodgeball) ) ) )
)
(:scoring
  (count-once-per-objects ballThrownMissesEverything:dodgeball)
)
)

(define (game game-id-271) (:domain many-objects-room-v1)
(:setup
  (exists (?s - block)
    (exists (?t - hexagonal_bin ?h - (either cellphone credit_card))
      (game-optional
        (same_object desk ?s)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownMissesEverything
      (exists (?l - doggie_bed ?b10 - (either blue_cube_block key_chain))
        (then
          (hold (agent_holds brown) )
          (hold (and (not (in west_wall ?b10) ) (agent_holds ?b10) ) )
          (hold (in agent ?b10) )
        )
      )
    )
    (preference throwFromBehindChairsInBin
      (exists (?w1 - hexagonal_bin)
        (then
          (hold (adjacent ?w1 rug) )
          (once (agent_holds ?w1) )
          (once (in room_center ?w1) )
        )
      )
    )
    (preference baseBlockInTowerAtEnd
      (exists (?b6 - dodgeball ?d - teddy_bear)
        (then
          (once (exists (?r ?l2 ?b2 ?h - cylindrical_block) (same_object agent ?h) ) )
          (hold-to-end (and (adjacent_side ?d ?d ?d ?d) (not (on ?d ?d) ) ) )
          (once (and (adjacent_side ?d ?d ?d) (and (between ?d ?d ?d) (or (and (agent_holds ?d) (in_motion ?d) ) (not (not (in_motion ?d) ) ) ) ) (not (agent_holds ?d) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (count ballThrownMissesEverything:beachball) (* (* 3 (external-forall-maximize (* 10 (external-forall-minimize 30 ) (* (total-score) 2 10 )
            )
          )
        )
        (count-once ballThrownMissesEverything:green)
        (* 2 (+ (count baseBlockInTowerAtEnd:yellow_pyramid_block) (* 3 7 )
          )
        )
        (count-once-per-objects ballThrownMissesEverything)
        (* (count-longest baseBlockInTowerAtEnd:pink) (> (count-once-per-objects ballThrownMissesEverything:basketball:basketball) (count throwFromBehindChairsInBin:dodgeball) )
          3
        )
        (* (count-once baseBlockInTowerAtEnd:yellow_pyramid_block) 2 )
      )
    )
    (count baseBlockInTowerAtEnd)
  )
)
(:scoring
  (count baseBlockInTowerAtEnd:beachball:pyramid_block)
)
)

(define (game game-id-272) (:domain many-objects-room-v1)
(:setup
  (forall (?b - cube_block)
    (exists (?o1 - beachball)
      (and
        (and
          (game-conserved
            (agent_holds ?o1)
          )
          (game-conserved
            (agent_holds ?o1)
          )
          (and
            (and
              (exists (?h - bridge_block)
                (game-optional
                  (agent_holds pink_dodgeball)
                )
              )
              (exists (?d - wall)
                (game-optional
                  (not
                    (in_motion ?o1)
                  )
                )
              )
            )
          )
        )
        (forall (?b3 - (either red book))
          (and
            (exists (?h - hexagonal_bin)
              (game-conserved
                (not
                  (broken desk)
                )
              )
            )
            (exists (?h - chair)
              (exists (?h - hexagonal_bin)
                (game-conserved
                  (and
                    (not
                      (game_over )
                    )
                    (faces ?b ?o1)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToWallToAgent
      (exists (?h - drawer)
        (then
          (once (in_motion east_sliding_door) )
          (once (in_motion ?h) )
          (hold-to-end (not (agent_holds ?h) ) )
        )
      )
    )
    (preference objectInBuilding
      (exists (?w - game_object ?b - hexagonal_bin)
        (then
          (once (agent_holds ?b) )
          (once (and (exists (?d1 - building ?l2 - wall) (and (touch ?l2 ?b) (not (on ?l2 back) ) ) ) (in_motion ?b) (= 1 1 (distance ?b ?b)) ) )
          (hold (agent_holds ?b) )
        )
      )
    )
  )
)
(:terminal
  (or
    (and
      (and
        (or
          (> 10 (* (count-once-per-objects ballThrownToWallToAgent:doggie_bed:basketball) (total-score) )
          )
          (not
            (> 10 (* 5 1 )
            )
          )
        )
        (<= 2 (external-forall-minimize 8 ) )
      )
      (>= (count-overlapping ballThrownToWallToAgent:dodgeball) (count objectInBuilding:yellow) )
    )
    (and
      (>= (* 7 100 (count-once-per-objects ballThrownToWallToAgent:golfball:pink_dodgeball) (count objectInBuilding:yellow) 3 (* (count ballThrownToWallToAgent:basketball) (+ (external-forall-maximize (count ballThrownToWallToAgent:doggie_bed) ) (count ballThrownToWallToAgent:yellow_cube_block) )
          )
          (+ (* (* 5 (* 300 (count-once-per-objects ballThrownToWallToAgent:dodgeball:pink_dodgeball:red) )
              )
              (and
                10
                (- (* -10 (count-once-per-objects objectInBuilding:bed:dodgeball) )
                )
                (count-longest ballThrownToWallToAgent:rug)
              )
              (count objectInBuilding:orange)
              (+ (+ (* (count-once-per-objects objectInBuilding:pink) 5 )
                  (count ballThrownToWallToAgent:pink:dodgeball)
                  (count-once-per-objects objectInBuilding:hexagonal_bin)
                )
                (+ (+ 10 (external-forall-maximize 3 ) 7 (or (/ 4 (count-once-per-objects ballThrownToWallToAgent:blue_dodgeball) ) (count-same-positions objectInBuilding:green) ) )
                  9
                  (count-once objectInBuilding:beachball)
                  (/
                    4
                    (* (count objectInBuilding:golfball:red) 3 )
                  )
                  3
                  (count objectInBuilding:blue_dodgeball:tan)
                )
              )
              (+ 2 (count-total ballThrownToWallToAgent:golfball) )
            )
            3
          )
          (* (count-once-per-objects ballThrownToWallToAgent:beachball:pink) (count-same-positions objectInBuilding:basketball:tan) )
          (+ (count-once-per-objects ballThrownToWallToAgent:beachball) 2 )
          (count ballThrownToWallToAgent:basketball)
          10
          (count objectInBuilding:blue)
        )
        (external-forall-maximize
          8
        )
      )
      (or
        (or
          (>= 3 3 )
        )
        (>= (+ 3 0 )
          (- (external-forall-maximize 5 ) )
        )
        (>= (+ 9 (count ballThrownToWallToAgent:cube_block) )
          (+ (>= (total-score) (count ballThrownToWallToAgent:blue_cube_block) )
            (* (* (and (+ (count-once objectInBuilding:red:basketball) (count objectInBuilding:yellow:basketball) 50 (- (count objectInBuilding:basketball:dodgeball) )
                    3
                    (* (* 3 (* (count-once-per-objects objectInBuilding:dodgeball) (count ballThrownToWallToAgent:purple) )
                        (count-once-per-objects ballThrownToWallToAgent:dodgeball)
                        30
                        (count objectInBuilding:basketball)
                        (count-once objectInBuilding:hexagonal_bin)
                      )
                      (+ 15 4 )
                    )
                  )
                )
                (count objectInBuilding:dodgeball)
              )
            )
          )
        )
      )
    )
  )
)
(:scoring
  (* 5 (- (* (count-measure objectInBuilding:rug) (* 7 3 )
        300
        (count-once-per-objects objectInBuilding:red)
        (* (+ (- 20 )
            2
          )
          (total-score)
        )
        (count ballThrownToWallToAgent:golfball)
      )
    )
    5
  )
)
)

(define (game game-id-273) (:domain few-objects-room-v1)
(:setup
  (exists (?r - (either alarm_clock blue_cube_block) ?db - cube_block)
    (and
      (forall (?b - beachball)
        (not
          (game-optional
            (not
              (and
                (in_motion ?db)
                (adjacent floor ?b)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttemptFromDoor
      (exists (?c - chair ?h - (either book floor dodgeball))
        (then
          (once (and (faces ?h door) (not (not (not (not (agent_holds ?h) ) ) ) ) ) )
          (hold (adjacent ?h ?h) )
          (once (game_over ) )
        )
      )
    )
    (preference beachballOnRug
      (exists (?h - hexagonal_bin)
        (then
          (once (in_motion room_center) )
          (hold (adjacent_side ?h ?h bed ?h) )
          (once (and (and (in_motion ?h) (not (and (> (distance pink_dodgeball ?h) (distance_side ?h room_center ?h)) (in_motion rug) ) ) ) (or (not (on ?h ?h) ) (agent_crouches ) (in_motion ?h) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects beachballOnRug:orange) 8 )
)
(:scoring
  (* (count-once-per-objects throwAttemptFromDoor:blue_cube_block:yellow) 8 )
)
)

(define (game game-id-274) (:domain many-objects-room-v1)
(:setup
  (exists (?p - game_object ?d - ball)
    (exists (?c - building)
      (forall (?c - hexagonal_bin)
        (forall (?o - game_object)
          (exists (?g - building)
            (and
              (and
                (and
                  (and
                    (and
                      (game-optional
                        (not
                          (and
                            (not
                              (agent_holds agent)
                            )
                            (between rug ?g ?d)
                          )
                        )
                      )
                    )
                    (game-conserved
                      (agent_holds ?o)
                    )
                    (and
                      (exists (?c2 - yellow_cube_block)
                        (exists (?d - curved_wooden_ramp ?b7 - shelf)
                          (game-conserved
                            (agent_holds rug)
                          )
                        )
                      )
                    )
                  )
                )
                (game-conserved
                  (in ?d desk)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToWallToAgent
      (exists (?h - game_object ?c4 - hexagonal_bin)
        (then
          (once (and (on bed ?c4) (same_object ?c4 ?c4) ) )
          (hold (touch ?c4 ?c4) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (+ 7 5 )
      (count-once-per-objects ballThrownToWallToAgent:golfball:pyramid_block)
    )
    (>= (+ 10 (* (* (count ballThrownToWallToAgent:basketball) (count ballThrownToWallToAgent:doggie_bed) )
          (* 10 3 )
        )
      )
      (* 3 4 )
    )
  )
)
(:scoring
  10
)
)

(define (game game-id-275) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?h - doggie_bed)
      (game-optional
        (not
          (< (distance ?h ?h) (distance ?h front))
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToRampToBin
      (exists (?l2 - shelf)
        (then
          (hold-for 6 (in ?l2 ?l2) )
          (hold (forall (?h - dodgeball) (and (in_motion agent) (not (in_motion ?h) ) ) ) )
          (once (not (and (not (faces desk ?l2) ) (agent_holds ?l2) ) ) )
          (hold (in_motion ?l2) )
          (hold-while (in_motion agent) (not (and (and (agent_holds ?l2) (exists (?f - hexagonal_bin) (not (not (not (not (and (not (not (agent_holds ?f) ) ) (not (in agent ?l2) ) ) ) ) ) ) ) ) (not (agent_holds bottom_shelf) ) (or (not (on ?l2 ?l2) ) (and (in ?l2 ?l2) (same_object ?l2 ?l2) ) (and (>= 4 (distance ?l2 ?l2)) (or (and (touch ?l2 desk) (exists (?r - dodgeball) (agent_crouches ) ) (and (in_motion room_center) (or (and (agent_holds bed) (in ?l2 sideways) ) (or (in ?l2 ?l2) (on rug agent) ) ) (and (same_color ?l2 ?l2) (agent_holds ?l2) (above pink_dodgeball ?l2) ) (not (forall (?r - ball) (and (not (and (and (in ?l2 ?l2) (agent_holds ?r) (touch south_west_corner ?l2) ) (adjacent ?l2 ?l2) ) ) (and (in_motion agent) (agent_holds ?r) ) ) ) ) ) ) (< (distance ?l2 ?l2) (x_position ?l2)) ) (not (and (on ?l2 room_center) (not (agent_holds ?l2) ) (< (x_position ?l2) (x_position ?l2)) ) ) ) (in_motion ?l2) ) (in_motion ?l2) ) ) )
        )
      )
    )
    (preference dropAttempt
      (exists (?d - chair)
        (then
          (once (adjacent ?d ?d) )
          (once (and (in_motion bed) (in_motion ?d) ) )
          (once (above ?d ?d) )
        )
      )
    )
    (preference blockInTowerKnockedByDodgeball
      (exists (?h - dodgeball)
        (then
          (once (and (exists (?o - triangular_ramp) (not (exists (?h - hexagonal_bin) (not (= (distance ?h ?o)) ) ) ) ) (agent_crouches ) ) )
          (once (agent_holds ?h) )
          (once (in_motion ?h) )
        )
      )
    )
    (preference itemsBroken
      (exists (?w - (either golfball triangular_ramp) ?b - block)
        (at-end
          (and
            (same_type ?b ?b)
            (not
              (not
                (opposite green_golfball ?b)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects itemsBroken:basketball) (= 1 )
  )
)
(:scoring
  3
)
)

(define (game game-id-276) (:domain many-objects-room-v1)
(:setup
  (exists (?r - ball)
    (game-conserved
      (and
        (not
          (agent_holds ?r)
        )
        (and
          (and
            (in_motion desk)
            (in_motion ?r)
            (agent_holds rug)
            (and
              (agent_holds ?r)
              (and
                (not
                  (in_motion ?r)
                )
                (not
                  (agent_holds desk)
                )
                (and
                  (in_motion ?r)
                  (equal_z_position pink_dodgeball ?r)
                )
              )
            )
            (and
              (agent_holds rug)
              (and
                (and
                  (agent_holds ?r)
                  (exists (?c4 - doggie_bed)
                    (not
                      (in_motion ?r)
                    )
                  )
                )
                (not
                  (not
                    (not
                      (not
                        (not
                          (in agent ?r)
                        )
                      )
                    )
                  )
                )
                (touch right bed)
              )
            )
            (or
              (not
                (same_color ?r ?r)
              )
              (adjacent ?r ?r)
            )
            (in ?r ?r)
          )
          (adjacent ?r ?r)
          (not
            (and
              (in_motion ?r)
              (not
                (in_motion ?r)
              )
              (or
                (and
                  (in_motion ?r)
                  (not
                    (on ?r ?r)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToRampToBin
      (exists (?p - dodgeball)
        (then
          (hold-while (toggled_on ?p) (game_over ) )
          (hold (and (not (and (and (not (not (in_motion floor) ) ) (in ?p brown) ) (and (on ?p ?p) (in_motion ?p) ) ) ) (and (in_motion ?p) (in_motion ?p) ) ) )
          (hold (adjacent ?p ?p) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 4 9 7 )
    (* (count-once-per-external-objects throwToRampToBin:dodgeball) (> (- (count throwToRampToBin:yellow) )
        5
      )
    )
  )
)
(:scoring
  (total-score)
)
)

(define (game game-id-277) (:domain medium-objects-room-v1)
(:setup
  (exists (?c ?bl ?b8 ?c6 ?b ?c2 - game_object)
    (not
      (game-conserved
        (= (distance rug ?b8) (distance ?bl ?c6))
      )
    )
  )
)
(:constraints
  (and
    (preference binKnockedOver
      (exists (?c - cube_block)
        (at-end
          (not
            (in_motion ?c)
          )
        )
      )
    )
    (preference ballOnBedAtEnd
      (exists (?t - hexagonal_bin ?o2 - dodgeball)
        (at-end
          (in_motion ?o2)
        )
      )
    )
  )
)
(:terminal
  (> (+ (* (+ (- 25 )
          2
        )
        15
      )
      3
    )
    (* (* 15 4 )
      (+ 3 (count binKnockedOver:beachball) )
    )
  )
)
(:scoring
  5
)
)

(define (game game-id-278) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?ob - building)
      (forall (?d - hexagonal_bin)
        (and
          (exists (?d - (either cube_block tall_cylindrical_block))
            (exists (?b1 - block)
              (and
                (game-conserved
                  (on top_drawer ?b1)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - game_object)
      (and
        (preference ballOnBedAtEnd
          (exists (?c4 - cube_block ?db - doggie_bed)
            (at-end
              (in_motion ?db)
            )
          )
        )
      )
    )
    (preference throwKnocksOverBear
      (exists (?c ?b ?h ?h ?t ?o - ball ?b5 - hexagonal_bin ?l4 - hexagonal_bin ?d1 - game_object)
        (then
          (once (>= 1 9) )
          (once (agent_holds agent) )
          (hold (on blinds ?d1) )
        )
      )
    )
    (forall (?s - (either book hexagonal_bin lamp) ?h - hexagonal_bin)
      (and
        (preference thrownObjectHitsComputer
          (exists (?b9 - flat_block)
            (then
              (once (and (and (not (in_motion ?b9) ) (in ?b9 agent) ) (and (agent_holds ?h) (on ?h ?b9) ) ) )
              (hold (on ?b9 west_wall) )
              (once (not (in ?b9 ?b9) ) )
            )
          )
        )
        (preference ballThrownThroughRampAndBlocksToBin
          (exists (?b2 - yellow_cube_block)
            (at-end
              (agent_holds ?b2)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (< (* 2 )
      4
    )
  )
)
(:scoring
  5
)
)

(define (game game-id-279) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?p - ball)
      (and
        (game-conserved
          (agent_holds ?p)
        )
        (game-optional
          (adjacent agent ?p)
        )
        (game-conserved
          (and
            (and
              (and
                (on agent ?p)
                (not
                  (not
                    (not
                      (agent_holds ?p)
                    )
                  )
                )
              )
              (open ?p)
            )
            (< (distance ?p agent) (distance green_golfball ?p))
          )
        )
      )
    )
    (exists (?b6 - hexagonal_bin)
      (game-optional
        (in_motion room_center)
      )
    )
  )
)
(:constraints
  (and
    (preference baseBlockInTowerAtEnd
      (exists (?d - pyramid_block)
        (then
          (hold (agent_crouches ) )
          (hold (in_motion ?d) )
          (once (on desk ?d) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count baseBlockInTowerAtEnd:pink:triangle_block:tan) 3 )
    (or
      (= 1 (count baseBlockInTowerAtEnd:yellow) )
      (>= (+ (* (count-measure baseBlockInTowerAtEnd:golfball:beachball) (+ (count-once-per-objects baseBlockInTowerAtEnd:beachball) (count-once baseBlockInTowerAtEnd:pink) )
          )
          (count-once baseBlockInTowerAtEnd)
        )
        (count baseBlockInTowerAtEnd:basketball)
      )
    )
  )
)
(:scoring
  (* (external-forall-maximize (count baseBlockInTowerAtEnd:beachball:book) ) (+ (count baseBlockInTowerAtEnd:dodgeball:red:blue_dodgeball) (count baseBlockInTowerAtEnd:golfball:basketball) )
    (count-once baseBlockInTowerAtEnd:dodgeball)
  )
)
)

(define (game game-id-280) (:domain few-objects-room-v1)
(:setup
  (exists (?c - cube_block)
    (game-conserved
      (and
        (object_orientation top_drawer ?c)
        (not
          (in_motion ?c)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference brownObjectMovedToRoomCenter
      (exists (?g - curved_wooden_ramp ?w2 - beachball)
        (then
          (hold (in_motion ?w2) )
          (hold (adjacent ?w2 desk) )
          (hold-while (in_motion ?w2) (on ?w2 ?w2) (and (touch agent ?w2) ) (and (not (agent_holds ?w2) ) (in ?w2 ?w2) ) )
        )
      )
    )
    (preference itemsBroken
      (exists (?b2 - pillow)
        (then
          (hold-while (forall (?l - chair) (same_color front ?l) ) (in_motion ?b2) (in_motion ?b2) (and (in_motion upright) (and (>= 7 (distance ?b2 desk)) (broken ?b2) ) ) )
          (once (and (open ?b2) (< 1 (distance ?b2 agent)) ) )
          (hold-to-end (in_motion ?b2) )
        )
      )
    )
  )
)
(:terminal
  (<= (count itemsBroken:dodgeball) 3 )
)
(:scoring
  (* 3 (count itemsBroken:dodgeball) (count-once-per-objects brownObjectMovedToRoomCenter:green) )
)
)

(define (game game-id-281) (:domain many-objects-room-v1)
(:setup
  (forall (?b - curved_wooden_ramp)
    (game-conserved
      (in_motion desk)
    )
  )
)
(:constraints
  (and
    (forall (?c1 - dodgeball)
      (and
        (preference watchOnShelf
          (exists (?s - chair)
            (then
              (hold (and (agent_holds ?c1) (on ?c1 ?c1) ) )
              (once (or (agent_holds upright) (and (exists (?b - ball) (adjacent ?s rug) ) (in_motion top_drawer) (adjacent_side ?s ?c1 ?c1 ?s) (equal_z_position ?c1 agent) ) ) )
              (hold (in_motion ?c1) )
            )
          )
        )
        (preference ballThrownFromBehindBlock
          (exists (?b2 - dodgeball ?w - (either dodgeball dodgeball))
            (then
              (hold (and (and (agent_holds ?c1) ) (on agent agent) (toggled_on desk) ) )
              (once (< 1 2) )
              (once (not (object_orientation agent ?c1) ) )
            )
          )
        )
      )
    )
    (preference dodgeballsInPlace
      (exists (?p1 - (either flat_block dodgeball) ?c2 - building)
        (at-end
          (toggled_on ?c2)
        )
      )
    )
  )
)
(:terminal
  (>= (count dodgeballsInPlace:dodgeball:basketball) (count ballThrownFromBehindBlock:basketball) )
)
(:scoring
  (+ (count-once-per-objects dodgeballsInPlace:pink_dodgeball) (count watchOnShelf:yellow) )
)
)

(define (game game-id-282) (:domain medium-objects-room-v1)
(:setup
  (exists (?r - chair)
    (exists (?l2 - building ?d - yellow_cube_block ?d - teddy_bear)
      (forall (?b3 - hexagonal_bin ?c - chair)
        (game-conserved
          (not
            (and
              (and
                (agent_holds rug)
                (agent_holds ?r)
              )
              (equal_x_position ?r ?c)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?b1 - hexagonal_bin ?tb - (either mug golfball yellow_cube_block alarm_clock))
        (at-end
          (not
            (and
              (on ?tb ?tb)
              (in_motion ?tb)
            )
          )
        )
      )
    )
    (preference throwToRampToBin
      (exists (?c - book)
        (at-end
          (not
            (adjacent ?c ?c)
          )
        )
      )
    )
  )
)
(:terminal
  (>= 3 30 )
)
(:scoring
  (count-once-per-objects throwAttempt:doggie_bed)
)
)

(define (game game-id-283) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (< 1 1)
  )
)
(:constraints
  (and
    (forall (?c3 - doggie_bed)
      (and
        (preference dodgeballHitsPillowWithoutTouchingBlock
          (exists (?t - game_object)
            (at-end
              (and
                (< (distance ?c3 ?t) (distance rug ?c3))
                (not
                  (on ?c3 ?t)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= (* 6 3 (not 6 ) (+ (total-time) (+ (count-once-per-objects dodgeballHitsPillowWithoutTouchingBlock:pink_dodgeball:pyramid_block:green) (total-time) )
      )
      (count-once-per-objects dodgeballHitsPillowWithoutTouchingBlock:pink:yellow_pyramid_block)
      (count dodgeballHitsPillowWithoutTouchingBlock:beachball:blue)
    )
    (* (count-increasing-measure dodgeballHitsPillowWithoutTouchingBlock:pink) (count-once-per-objects dodgeballHitsPillowWithoutTouchingBlock:dodgeball:cube_block) )
  )
)
(:scoring
  4
)
)

(define (game game-id-284) (:domain many-objects-room-v1)
(:setup
  (forall (?d - blue_pyramid_block)
    (exists (?x - cube_block ?b - hexagonal_bin)
      (game-conserved
        (not
          (in_motion ?b)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrowAttempt
      (exists (?b - block)
        (then
          (once (in ?b ?b) )
          (once (not (in_motion bed) ) )
          (once (open ?b) )
        )
      )
    )
    (preference ballThrownIntoTarget
      (exists (?c6 - chair)
        (then
          (hold-while (not (in_motion ?c6) ) (on ?c6 bed) )
          (hold (equal_x_position ?c6 ?c6) )
          (hold (in_motion ?c6) )
          (once (and (> (building_size bed) 0.5) (in ?c6 agent) ) )
          (once (exists (?o1 ?t2 ?bl - pyramid_block ?r2 - ball) (in_motion ?c6) ) )
        )
      )
    )
    (forall (?b - cylindrical_block)
      (and
        (preference cubeBlockThrownToTopShelf
          (exists (?o - shelf ?o - shelf)
            (then
              (once (in_motion ?o) )
              (once (< (distance ?o ?o) 0.5) )
              (once (and (not (in_motion ?o) ) (exists (?l3 - hexagonal_bin ?b4 - hexagonal_bin) (and (and (in_motion desk) (not (not (on ?b4 ?b4) ) ) (and (and (not (adjacent ?o ?b4) ) (agent_holds south_wall) ) (and (not (agent_holds ?b4) ) (in_motion ?b4) ) ) ) (exists (?b5 - desktop ?l4 - chair ?t2 - block ?d1 - block) (forall (?t2 - golfball ?w1 - desk_shelf) (on ?o ?o) ) ) (adjacent ?b ?b4) (adjacent ?o ?b4) ) ) (in_motion ?o) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (= 1 )
    10
  )
)
(:scoring
  (total-time)
)
)

(define (game game-id-285) (:domain medium-objects-room-v1)
(:setup
  (exists (?h ?l ?l1 ?w - dodgeball ?w - (either book doggie_bed))
    (forall (?c1 - doggie_bed)
      (game-conserved
        (exists (?db - hexagonal_bin)
          (on agent ?db)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToRampToBed
      (exists (?c - doggie_bed)
        (then
          (once (same_color ?c rug) )
          (hold-to-end (not (in ?c ?c) ) )
          (hold (in_motion ?c) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (count-measure ballThrownToRampToBed:green) (count-once-per-objects ballThrownToRampToBed:blue_cube_block) )
  )
)
(:scoring
  5
)
)

(define (game game-id-286) (:domain few-objects-room-v1)
(:setup
  (not
    (forall (?b7 - ball)
      (forall (?d ?r - curved_wooden_ramp)
        (exists (?d1 - dodgeball)
          (exists (?d1 - cube_block)
            (exists (?b2 - hexagonal_bin)
              (and
                (game-conserved
                  (in ?d1 ?b7)
                )
                (not
                  (and
                    (exists (?t2 - game_object)
                      (game-optional
                        (agent_holds ?d1)
                      )
                    )
                  )
                )
                (game-conserved
                  (and
                    (agent_holds ?d1)
                    (and
                      (in_motion pink)
                      (agent_holds ?r)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwFromEdgeOfRug
      (exists (?b1 - game_object)
        (then
          (once (and (exists (?c4 - hexagonal_bin) (on ?c4 ?b1) ) (not (in_motion ?b1) ) (agent_holds door) (and (agent_holds ?b1) (in_motion ?b1) ) (in_motion ?b1) (in_motion ?b1) (and (agent_holds ?b1) (not (in_motion ?b1) ) ) (touch ?b1 ?b1) ) )
          (once (in_motion ?b1) )
          (once (not (< 1 (distance ?b1 rug)) ) )
        )
      )
    )
    (preference throwKnocksOverBear
      (exists (?c - hexagonal_bin)
        (at-end
          (not
            (on ?c ?c)
          )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (total-score) )
)
(:scoring
  (count-once throwKnocksOverBear:purple)
)
)

(define (game game-id-287) (:domain many-objects-room-v1)
(:setup
  (exists (?c4 - hexagonal_bin)
    (exists (?r2 - hexagonal_bin ?w2 - hexagonal_bin)
      (exists (?h - (either golfball doggie_bed mug) ?b1 - hexagonal_bin)
        (game-conserved
          (and
            (and
              (in_motion rug)
              (and
                (in_motion ?c4)
                (agent_holds ?c4)
                (and
                  (and
                    (not
                      (in ?c4 ?b1)
                    )
                    (not
                      (agent_crouches )
                    )
                  )
                  (adjacent ?w2 room_center)
                )
              )
              (agent_holds agent)
            )
            (on ?c4 pink)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference redDodgeballThrownToBin
      (exists (?h - (either triangular_ramp bridge_block basketball))
        (then
          (once (adjacent ?h ?h) )
          (hold (game_start ) )
          (hold-while (agent_holds ?h) (<= (distance ?h ?h) (distance ?h ?h)) )
        )
      )
    )
    (preference ballThrownThroughRampToBin
      (exists (?c6 - chair)
        (at-end
          (or
            (on ?c6 ?c6)
            (< 7 (distance ?c6 ?c6))
          )
        )
      )
    )
  )
)
(:terminal
  (>= (external-forall-maximize 10 ) 10 )
)
(:scoring
  20
)
)

(define (game game-id-288) (:domain few-objects-room-v1)
(:setup
  (exists (?c - hexagonal_bin ?s - ball ?p1 - hexagonal_bin)
    (forall (?d - (either tall_cylindrical_block book) ?h - hexagonal_bin)
      (exists (?c - pyramid_block ?c - dodgeball)
        (game-conserved
          (agent_holds ?p1)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - block ?b - (either key_chain chair))
      (and
        (preference throwKnocksBlock
          (exists (?l2 - (either pink wall book cube_block))
            (then
              (once (and (and (agent_holds ?b) (> (distance ?b ?b) (distance ?b floor)) ) (on bed ?b) ) )
              (hold (and (not (agent_holds ?l2) ) (in_motion ?l2) ) )
            )
          )
        )
        (preference throwKnocksOverBear
          (exists (?d - golfball ?r - dodgeball ?r1 - hexagonal_bin)
            (then
              (once (not (and (and (in ?b rug) (and (in_motion ?r1) (and (and (rug_color_under room_center ?r1) (< (distance ?r1 ?b) 0.5) ) (and (adjacent_side ?b ?b ?r1) (and (on ?r1 ?r1) (in_motion ?b) (or (and (agent_holds agent) (in_motion ?r1) ) (agent_holds ?b) ) ) ) (and (not (not (agent_holds ?r1) ) ) (not (not (not (same_color ?b ?r1) ) ) ) ) ) ) ) (adjacent ?b desk) ) ) )
              (hold-while (adjacent ?r1 ?r1) (agent_holds agent) )
              (once (not (agent_holds ?b) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (external-forall-maximize (count throwKnocksOverBear:blue_pyramid_block:golfball) ) (count-once-per-objects throwKnocksBlock) )
)
(:scoring
  4
)
)

(define (game game-id-289) (:domain many-objects-room-v1)
(:setup
  (exists (?r - hexagonal_bin ?d - blue_cube_block)
    (game-conserved
      (in_motion ?d)
    )
  )
)
(:constraints
  (and
    (preference gameBlockFound
      (exists (?b - (either cellphone desktop))
        (then
          (once (game_over ) )
          (once (agent_holds ?b) )
          (once (<= 2 7) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= 2 (+ (count gameBlockFound:green:golfball:brown) (count gameBlockFound:beachball) )
    )
  )
)
(:scoring
  5
)
)

(define (game game-id-290) (:domain many-objects-room-v1)
(:setup
  (exists (?l2 - wall)
    (forall (?l - chair ?d - hexagonal_bin)
      (and
        (exists (?c - ball)
          (forall (?h - cube_block)
            (forall (?d - drawer ?b9 - chair)
              (or
                (game-conserved
                  (in_motion ?d)
                )
                (game-optional
                  (forall (?l3 - ball ?b1 - game_object)
                    (not
                      (on ?d ?c)
                    )
                  )
                )
                (exists (?h ?h ?b ?c ?h ?b - hexagonal_bin)
                  (forall (?o - block)
                    (exists (?p - (either book cylindrical_block) ?c - shelf)
                      (game-optional
                        (in_motion top_shelf)
                      )
                    )
                  )
                )
              )
            )
          )
        )
        (game-optional
          (on ?l2 ?d)
        )
        (game-conserved
          (>= 6 1)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference castleBuilt
      (exists (?b9 - hexagonal_bin)
        (then
          (once (agent_holds ?b9) )
          (hold-while (is_setup_object front) (not (not (not (and (toggled_on ?b9) (on ?b9 ?b9) ) ) ) ) )
          (hold (in ?b9 ?b9) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count-once-per-objects castleBuilt:beachball:side_table) (count castleBuilt:brown) )
    (count castleBuilt:cylindrical_block)
  )
)
(:scoring
  (total-time)
)
)

(define (game game-id-291) (:domain medium-objects-room-v1)
(:setup
  (exists (?b5 - ball)
    (game-conserved
      (in_motion ?b5)
    )
  )
)
(:constraints
  (and
    (preference pyramidBlockAtopTowerAtEnd
      (exists (?r - color ?d2 - hexagonal_bin)
        (at-end
          (in_motion rug)
        )
      )
    )
  )
)
(:terminal
  (>= (- (+ (count pyramidBlockAtopTowerAtEnd:red) 7 )
    )
    (* 8 (* (- (<= 30 (count-once-per-objects pyramidBlockAtopTowerAtEnd:dodgeball) )
        )
        2
      )
    )
  )
)
(:scoring
  10
)
)

(define (game game-id-292) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?b10 - color)
      (and
        (forall (?h - (either triangle_block pyramid_block pillow bridge_block))
          (game-conserved
            (exists (?b7 - ball)
              (on ?b7 ?b7)
            )
          )
        )
        (exists (?s - hexagonal_bin)
          (exists (?h - hexagonal_bin)
            (exists (?c - cube_block)
              (forall (?l - block)
                (not
                  (forall (?r2 - curved_wooden_ramp)
                    (and
                      (game-optional
                        (in_motion ?s)
                      )
                      (forall (?l4 - hexagonal_bin)
                        (game-conserved
                          (on bed ?s)
                        )
                      )
                      (and
                        (and
                          (exists (?h - ball ?w1 - beachball)
                            (exists (?b4 - doggie_bed ?b - dodgeball ?b8 - hexagonal_bin)
                              (and
                                (exists (?b9 - hexagonal_bin ?b - dodgeball)
                                  (forall (?s - wall)
                                    (forall (?b9 - (either doggie_bed cylindrical_block))
                                      (and
                                        (or
                                          (game-conserved
                                            (agent_holds block)
                                          )
                                          (exists (?o5 - (either chair teddy_bear teddy_bear) ?o - dodgeball)
                                            (game-optional
                                              (on ?w1 ?b10)
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                                (forall (?d - wall)
                                  (forall (?p3 - game_object)
                                    (forall (?r - shelf)
                                      (exists (?f - chair)
                                        (game-optional
                                          (exists (?l - wall)
                                            (in_motion ?d)
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                                (and
                                  (forall (?b - cube_block)
                                    (game-conserved
                                      (not
                                        (and
                                          (and
                                            (not
                                              (in_motion ?s)
                                            )
                                            (in_motion ?w1)
                                          )
                                          (touch ?b8 ?b10)
                                        )
                                      )
                                    )
                                  )
                                  (not
                                    (game-optional
                                      (agent_holds ?r2)
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
        (exists (?o - (either cube_block cylindrical_block) ?h - dodgeball)
          (exists (?c6 - hexagonal_bin ?d - (either bridge_block cellphone) ?b - dodgeball)
            (game-optional
              (in_motion ?h)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwKnocksOverBear
      (exists (?o2 - ball)
        (at-end
          (< (distance ?o2 ?o2) (distance_side desk desk ?o2 agent))
        )
      )
    )
    (preference beachballBouncedOffRamp
      (exists (?o - pillow)
        (then
          (once (not (above ?o ?o) ) )
          (once (and (and (in_motion ?o) (and (agent_holds ?o) (and (not (on ball rug) ) (and (in ?o ?o) (in_motion ?o) (in_motion upright) ) ) (on ?o ?o) ) (in ?o ?o) (agent_holds ?o) ) (and (agent_holds bed) (agent_holds ?o) ) ) )
          (once (agent_holds ?o) )
        )
      )
    )
  )
)
(:terminal
  (> 5 (* 30 (count-longest beachballBouncedOffRamp:basketball:red) )
  )
)
(:scoring
  (external-forall-minimize
    (- (count-once-per-objects beachballBouncedOffRamp:dodgeball) )
  )
)
)

(define (game game-id-293) (:domain few-objects-room-v1)
(:setup
  (forall (?o - dodgeball)
    (and
      (forall (?h - curved_wooden_ramp)
        (and
          (and
            (and
              (game-conserved
                (in ?h ?h)
              )
            )
            (forall (?b - curved_wooden_ramp)
              (game-conserved
                (on ?o top_drawer)
              )
            )
            (exists (?db - (either cube_block basketball hexagonal_bin))
              (forall (?c2 ?db - teddy_bear)
                (and
                  (and
                    (exists (?h - curved_wooden_ramp)
                      (game-conserved
                        (agent_holds ?db)
                      )
                    )
                  )
                  (and
                    (game-optional
                      (in_motion green)
                    )
                  )
                  (and
                    (exists (?b2 - cube_block ?p ?c ?c3 ?b2 ?c ?b - (either golfball floor laptop triangle_block) ?h - hexagonal_bin)
                      (game-conserved
                        (agent_crouches )
                      )
                    )
                  )
                )
              )
            )
            (and
              (and
                (and
                  (and
                    (game-conserved
                      (in_motion ?o)
                    )
                    (not
                      (and
                        (and
                          (exists (?o5 - (either yellow_cube_block pink cube_block))
                            (game-conserved
                              (agent_holds ?o5)
                            )
                          )
                        )
                      )
                    )
                    (game-conserved
                      (in_motion ?o)
                    )
                  )
                  (game-conserved
                    (not
                      (in ?o floor)
                    )
                  )
                )
              )
            )
          )
          (or
            (game-conserved
              (on ?o ?o)
            )
            (game-conserved
              (in_motion ?o)
            )
          )
          (exists (?d ?d - block)
            (and
              (and
                (game-conserved
                  (in_motion ?d)
                )
                (game-optional
                  (agent_holds ?h)
                )
              )
            )
          )
        )
      )
      (game-conserved
        (same_color ?o ?o)
      )
      (and
        (forall (?f - doggie_bed)
          (game-conserved
            (and
              (agent_holds floor)
              (not
                (on ?f ?f)
              )
              (same_color ?o ?o)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?ob - blinds)
      (and
        (preference blockInTowerAtEnd
          (exists (?t - ball)
            (then
              (hold (touch ?ob ?ob) )
              (once (in_motion ?ob) )
              (once (in_motion ?t) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> 15 (* (* (count blockInTowerAtEnd:dodgeball) (count blockInTowerAtEnd:cube_block:golfball) 10 )
      2
    )
  )
)
(:scoring
  (count blockInTowerAtEnd:wall)
)
)

(define (game game-id-294) (:domain medium-objects-room-v1)
(:setup
  (exists (?b - (either desktop bridge_block) ?h - building)
    (game-conserved
      (not
        (in_motion ?h)
      )
    )
  )
)
(:constraints
  (and
    (preference beachballOnRug
      (exists (?t1 - hexagonal_bin)
        (then
          (hold-while (agent_holds ?t1) (not (<= 1 1) ) )
          (once (not (and (or (not (agent_holds ?t1) ) (same_type ?t1 ?t1) ) (and (on ?t1 floor) (not (not (not (adjacent ?t1 ?t1) ) ) ) ) (agent_holds ?t1) ) ) )
          (hold-while (rug_color_under ?t1 ?t1) (not (< (distance ?t1 agent) (building_size ?t1)) ) (and (and (on ?t1 ?t1) (in_motion ?t1) ) (not (in_motion ?t1) ) ) (touch ?t1 pink_dodgeball) )
        )
      )
    )
  )
)
(:terminal
  (>= 4 (count-once-per-objects beachballOnRug:yellow) )
)
(:scoring
  (count-once beachballOnRug:pink:basketball)
)
)

(define (game game-id-295) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (not
      (exists (?d - block ?ob - ball ?t1 - ball ?c - tall_cylindrical_block)
        (not
          (agent_holds room_center)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?l - teddy_bear ?p2 - chair ?b10 - teddy_bear ?b - block)
      (and
        (preference throwBallToDoggieBedOffWall
          (exists (?p1 - cube_block ?b4 - (either cd cd) ?w1 - dodgeball)
            (then
              (once (adjacent ?w1 ?w1) )
              (once (and (agent_holds ?b) (and (in_motion pink) (not (exists (?d - dodgeball ?o - dodgeball ?l1 - hexagonal_bin ?r - hexagonal_bin ?o3 - (either credit_card desktop)) (and (agent_holds ?o3) (agent_holds agent) ) ) ) ) ) )
              (once (and (not (not (on ?w1 ?b) ) ) (not (in ?b ?w1) ) (agent_holds ?w1) (agent_holds ?w1) (and (< 1 (distance ?w1 ?w1)) (agent_holds ?b) ) (agent_holds ?w1) (or (touch ?w1 ?b) ) ) )
            )
          )
        )
      )
    )
    (preference ballThrownFromObjectToBin
      (exists (?h - ball)
        (then
          (hold (on ?h ?h) )
          (hold-to-end (and (and (agent_holds ?h) (agent_holds ?h) ) (not (and (agent_holds ?h) (and (in_motion ?h) (agent_holds rug) ) ) ) ) )
          (once (agent_holds ?h) )
        )
      )
    )
  )
)
(:terminal
  (>= 1 (count ballThrownFromObjectToBin:red) )
)
(:scoring
  (count throwBallToDoggieBedOffWall:basketball)
)
)

(define (game game-id-296) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (< 1 1)
    )
  )
)
(:constraints
  (and
    (preference throwTeddyOntoPillow
      (exists (?d ?db ?d ?h ?h ?d - hexagonal_bin)
        (then
          (once (in agent desk) )
          (once (and (in_motion agent) (< (distance ?db ?h) 1) ) )
          (once (and (in_motion agent) (and (not (opposite ?d ?db) ) (> 1 1) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 6 50 )
)
(:scoring
  (* 10 (< (+ 8 (count throwTeddyOntoPillow:white) )
      (+ 4 (>= (- 0 (+ 100 (count-once throwTeddyOntoPillow:beachball) 3 (+ (count throwTeddyOntoPillow:golfball:purple) 2 )
              (+ (count-once-per-objects throwTeddyOntoPillow:cube_block) (count throwTeddyOntoPillow:pink_dodgeball) )
              (count throwTeddyOntoPillow:pink_dodgeball)
              6
              (+ (- 10 )
                (+ (+ (total-score) (count throwTeddyOntoPillow:golfball) )
                  (* (count throwTeddyOntoPillow:beachball) 10 )
                )
              )
              (count-once-per-objects throwTeddyOntoPillow:basketball)
            )
          )
          (+ (count throwTeddyOntoPillow:hexagonal_bin) (count throwTeddyOntoPillow:dodgeball) )
        )
      )
    )
  )
)
)

(define (game game-id-297) (:domain medium-objects-room-v1)
(:setup
  (not
    (exists (?h - dodgeball)
      (or
        (forall (?b9 - ball ?c1 - dodgeball)
          (game-conserved
            (and
              (agent_holds ?h)
              (object_orientation ?c1 ?c1)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownIntoTarget
      (exists (?b - hexagonal_bin ?o5 - wall ?c - hexagonal_bin ?h - hexagonal_bin)
        (then
          (once (on ?h ?h) )
          (hold (in_motion ?h) )
          (once (same_color ?h ?h) )
        )
      )
    )
    (preference blockInTowerAtEnd
      (exists (?d2 - hexagonal_bin ?b - triangular_ramp ?l - dodgeball)
        (then
          (once (touch floor ?l) )
          (hold-while (in_motion ?l) (or (agent_holds back) (agent_holds ?l) ) (agent_holds ?l) )
          (hold (not (in ?l door) ) )
        )
      )
    )
    (preference dodgeballHitsBin
      (exists (?d - dodgeball)
        (then
          (once (> (distance ?d ?d) (distance ?d ?d)) )
          (once (not (same_object ?d front) ) )
          (once (and (not (and (not (in_motion agent) ) (agent_holds desk) ) ) (and (agent_holds ?d) (and (agent_crouches ) (adjacent_side ?d ?d ?d) ) (and (in bed room_center) (and (agent_holds ?d) (in ?d floor) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (> 10 (+ (* (count blockInTowerAtEnd:pink_dodgeball:pink_dodgeball) 4 )
      10
    )
  )
)
(:scoring
  5
)
)

(define (game game-id-298) (:domain few-objects-room-v1)
(:setup
  (exists (?l1 - wall)
    (game-conserved
      (in_motion ?l1)
    )
  )
)
(:constraints
  (and
    (forall (?p1 - cylindrical_block ?h - dodgeball)
      (and
        (preference dodgeballBouncesOnceToDoggieBed
          (exists (?d - shelf)
            (then
              (hold-while (not (on agent ?d) ) (and (and (in_motion ?h) (not (and (not (not (and (and (and (not (between ?d ?h ?h) ) (agent_holds ?d) ) (or (touch ?d ?d) (game_over ) ) ) ) ) ) (in_motion ?d) (agent_holds bed) ) ) ) (and (on ?d ?d) (not (and (and (in_motion agent) (in ?h bed) ) ) ) ) ) (and (and (and (game_over ) (rug_color_under ?d desk) (and (agent_holds ?h) (agent_holds green_golfball) ) ) (and (not (not (in ?h ?h) ) ) (in ?h ?h) ) ) (is_setup_object ?d) ) (not (not (toggled_on ?h) ) ) )
              (once (not (< 2 1) ) )
              (once (not (not (on ?h ?d) ) ) )
            )
          )
        )
        (preference ballThrowAttempt
          (then
            (once (not (or (in_motion ?h) (not (not (not (adjacent_side ?h ?h ?h) ) ) ) (in_motion ?h) ) ) )
            (once (on ?h ?h) )
            (once (not (not (and (touch ?h ?h) (and (and (on ?h ?h) (and (agent_holds top_shelf) (and (in_motion ?h) (not (agent_holds desk) ) ) ) ) (in ?h ?h) ) ) ) ) )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* (- (count-once-per-objects dodgeballBouncesOnceToDoggieBed:yellow) )
        (count-once-per-objects ballThrowAttempt:yellow)
      )
      (count-once ballThrowAttempt:pink_dodgeball:green)
    )
    (>= (* (count ballThrowAttempt:pink) (count-same-positions ballThrowAttempt:doggie_bed) )
      (count ballThrowAttempt:brown)
    )
  )
)
(:scoring
  (count-once-per-objects dodgeballBouncesOnceToDoggieBed:dodgeball:dodgeball:blue_cube_block)
)
)

(define (game game-id-299) (:domain many-objects-room-v1)
(:setup
  (forall (?b - dodgeball ?b7 - (either golfball))
    (and
      (and
        (not
          (exists (?b1 - color ?b8 - block)
            (game-conserved
              (object_orientation agent ?b7)
            )
          )
        )
        (game-optional
          (same_type ?b7 ?b7)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference redDodgeballThrownToBinWithoutTouchingFloor
      (exists (?o2 - (either dodgeball teddy_bear) ?h - hexagonal_bin)
        (then
          (hold (and (in ?h ?h) (and (agent_holds ?h) ) ) )
          (once (agent_holds door) )
          (once (> 1 (distance ?h ?h)) )
        )
      )
    )
  )
)
(:terminal
  (< 6 (count redDodgeballThrownToBinWithoutTouchingFloor:book) )
)
(:scoring
  (count redDodgeballThrownToBinWithoutTouchingFloor:basketball:red)
)
)

(define (game game-id-300) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (forall (?b3 - (either yellow_cube_block flat_block dodgeball) ?h - hexagonal_bin)
        (and
          (and
            (game-optional
              (< (distance agent ?h) (distance ?h ?h))
            )
            (and
              (and
                (and
                  (game-optional
                    (and
                      (and
                        (touch ?h agent)
                        (in ?h ?h)
                      )
                      (in ?h ?h)
                    )
                  )
                )
                (game-optional
                  (and
                    (and
                      (agent_holds agent)
                      (in_motion ?h)
                    )
                    (in_motion ?h)
                  )
                )
              )
              (exists (?r - hexagonal_bin)
                (game-conserved
                  (not
                    (in_motion ?r)
                  )
                )
              )
            )
            (exists (?b4 - (either basketball cube_block))
              (exists (?d - hexagonal_bin)
                (and
                  (and
                    (forall (?l - ball)
                      (game-conserved
                        (and
                          (game_start )
                          (agent_holds ?l)
                        )
                      )
                    )
                  )
                  (game-conserved
                    (agent_holds ?b4)
                  )
                  (and
                    (forall (?c4 - (either golfball triangle_block))
                      (and
                        (exists (?b - curved_wooden_ramp)
                          (game-optional
                            (not
                              (not
                                (adjacent ?b ?b4)
                              )
                            )
                          )
                        )
                        (exists (?l1 - hexagonal_bin)
                          (and
                            (game-conserved
                              (in ?h ?l1)
                            )
                            (and
                              (and
                                (game-optional
                                  (and
                                    (agent_holds ?l1)
                                    (not
                                      (in ?h rug)
                                    )
                                    (in ?d ?l1)
                                  )
                                )
                                (game-optional
                                  (in_motion desk)
                                )
                                (exists (?d - hexagonal_bin)
                                  (forall (?h - chair)
                                    (game-conserved
                                      (not
                                        (agent_holds ?d)
                                      )
                                    )
                                  )
                                )
                              )
                              (and
                                (game-conserved
                                  (< (distance ?b4 ?b4) (distance ?h ?b4))
                                )
                              )
                              (exists (?p2 - ball ?b7 - block)
                                (game-optional
                                  (not
                                    (not
                                      (and
                                        (agent_holds ?d)
                                        (not
                                          (and
                                            (rug_color_under ?h ?h)
                                            (and
                                              (in_motion agent)
                                              (exists (?b1 - dodgeball)
                                                (in_motion ?b1)
                                              )
                                              (in ?h pink_dodgeball)
                                            )
                                            (not
                                              (not
                                                (in_motion ?l1)
                                              )
                                            )
                                          )
                                        )
                                        (in_motion ?b4)
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                        (exists (?o - hexagonal_bin)
                          (game-conserved
                            (not
                              (not
                                (on ?d ?d)
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
          (not
            (or
              (exists (?g - hexagonal_bin ?t - (either pyramid_block pen))
                (exists (?h - pillow)
                  (and
                    (and
                      (forall (?o1 - tall_cylindrical_block ?r1 - dodgeball)
                        (and
                          (game-conserved
                            (open ?t)
                          )
                        )
                      )
                      (exists (?c6 ?g - game_object)
                        (exists (?h - doggie_bed ?o - hexagonal_bin)
                          (forall (?g - (either doggie_bed dodgeball dodgeball))
                            (and
                              (game-optional
                                (and
                                  (and
                                    (in ?g ?o)
                                    (not
                                      (not
                                        (rug_color_under ?t ?h)
                                      )
                                    )
                                  )
                                  (in_motion ?t)
                                  (agent_holds desk)
                                  (in_motion upright)
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectMovedRoomSide
      (exists (?x - cube_block)
        (then
          (once (and (same_type ?x ?x) (agent_holds ?x) ) )
          (once (agent_holds ?x) )
          (once (on ?x block) )
        )
      )
    )
  )
)
(:terminal
  (>= 1 (count-overlapping objectMovedRoomSide:beachball) )
)
(:scoring
  (count-once objectMovedRoomSide:book)
)
)

(define (game game-id-301) (:domain medium-objects-room-v1)
(:setup
  (exists (?b3 - (either golfball pen floor) ?b2 - hexagonal_bin)
    (and
      (forall (?p2 - color)
        (exists (?r2 - hexagonal_bin)
          (forall (?c4 - hexagonal_bin)
            (game-optional
              (< (distance_side floor ?b2 bed ?p2) 3)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - hexagonal_bin)
      (and
        (preference redDodgeballThrownToBin
          (exists (?b1 - hexagonal_bin ?r2 - ball)
            (then
              (once (agent_holds desk) )
              (hold (not (on ?r2 ?r2) ) )
              (once (is_setup_object ?d) )
            )
          )
        )
        (preference greenObjectMovedToRoomCenter
          (exists (?b - building)
            (then
              (once (same_color ?b ?b) )
              (once (not (on bed ?d) ) )
              (once (and (and (agent_holds ?b) (is_setup_object ?d) (adjacent ?b ?b) ) (agent_holds ?b) ) )
            )
          )
        )
        (preference blockCorrectlyPicked
          (exists (?c - hexagonal_bin)
            (then
              (hold-to-end (not (not (in bed ?d) ) ) )
              (once (and (not (not (same_color ?c ?c) ) ) (exists (?h - beachball) (on ?d ?c) ) (in_motion green) (and (and (agent_holds pink_dodgeball) (adjacent ?d ?d) (in ?d ?d) ) (in_motion ?c) (in ?d ?d) ) ) )
              (once (in_motion ?d) )
            )
          )
        )
      )
    )
    (forall (?b2 - game_object)
      (and
        (preference teddyBearLandsInBin
          (then
            (hold-while (not (not (agent_holds ?b2) ) ) (not (agent_holds bed) ) )
            (once (in bed ?b2) )
            (once (not (and (in_motion ?b2) (agent_holds rug) ) ) )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-same-positions greenObjectMovedToRoomCenter:cylindrical_block) (count blockCorrectlyPicked:orange) )
)
(:scoring
  (* (* (= (> 6 (* (not 10 ) (count-once-per-objects redDodgeballThrownToBin:dodgeball) )
        )
        (count greenObjectMovedToRoomCenter:white)
      )
      2
    )
    3
  )
)
)

(define (game game-id-302) (:domain few-objects-room-v1)
(:setup
  (or
    (forall (?c - color ?o3 - triangular_ramp)
      (game-conserved
        (and
          (and
            (on ?o3 ?o3)
            (< (distance ?o3 ?o3) (distance ?o3 bed))
          )
          (> 1 2)
        )
      )
    )
    (exists (?c - hexagonal_bin)
      (exists (?b2 - tall_cylindrical_block)
        (game-conserved
          (and
            (not
              (in_motion ?b2)
            )
            (not
              (in_motion ?b2)
            )
          )
        )
      )
    )
    (forall (?c - cube_block)
      (game-conserved
        (in rug ?c)
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallFromOtherBallToBin
      (exists (?t - hexagonal_bin ?w1 - cube_block)
        (then
          (hold (or (same_color floor ?w1) (and (in_motion floor) (on ?w1 ?w1) ) ) )
          (once (touch room_center ?w1) )
          (hold (and (agent_holds bed) (in ?w1 ?w1) ) )
        )
      )
    )
  )
)
(:terminal
  (< (count-increasing-measure throwBallFromOtherBallToBin:yellow_pyramid_block:doggie_bed) 2 )
)
(:scoring
  4
)
)

(define (game game-id-303) (:domain few-objects-room-v1)
(:setup
  (forall (?b - teddy_bear)
    (and
      (and
        (and
          (exists (?o1 - chair ?c2 ?p1 - pillow)
            (game-conserved
              (touch ?p1 ?p1)
            )
          )
          (game-conserved
            (not
              (and
                (touch ?b ?b)
                (not
                  (and
                    (adjacent ?b ?b)
                    (not
                      (and
                        (in_motion ?b)
                        (agent_holds ?b)
                      )
                    )
                  )
                )
                (and
                  (not
                    (and
                      (and
                        (on ?b ?b)
                        (agent_holds ?b)
                      )
                      (on ?b ?b)
                    )
                  )
                  (not
                    (< 1 (distance ?b ?b))
                  )
                  (adjacent ?b ?b)
                )
              )
            )
          )
          (game-conserved
            (not
              (not
                (< (distance top_drawer ?b) 1)
              )
            )
          )
          (forall (?o3 - building)
            (not
              (and
                (or
                  (and
                    (and
                      (game-optional
                        (on ?b ?o3)
                      )
                      (exists (?r - (either golfball bridge_block))
                        (exists (?c5 - hexagonal_bin)
                          (and
                            (game-conserved
                              (touch desktop ?o3)
                            )
                            (and
                              (game-conserved
                                (in_motion pillow)
                              )
                            )
                            (game-optional
                              (= 1 (distance bed agent))
                            )
                          )
                        )
                      )
                    )
                  )
                  (game-optional
                    (on ?o3 ?o3)
                  )
                )
                (game-optional
                  (and
                    (not
                      (not
                        (agent_holds ?b)
                      )
                    )
                    (agent_holds front)
                  )
                )
                (game-conserved
                  (and
                    (and
                      (exists (?c - book ?c - (either pillow cube_block hexagonal_bin))
                        (on ?o3 ?c)
                      )
                      (not
                        (not
                          (in_motion floor)
                        )
                      )
                      (not
                        (and
                          (agent_holds bed)
                          (not
                            (not
                              (not
                                (in_motion ?b)
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
          (game-optional
            (and
              (and
                (not
                  (agent_holds ?b)
                )
                (touch ?b ?b)
                (> (distance agent ?b) 0)
              )
              (rug_color_under bed desk)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballOnBedAtEnd
      (exists (?t - flat_block ?b ?c - building ?h - cube_block)
        (then
          (once (and (and (agent_holds ?h) (not (equal_x_position ?h ?h) ) ) (in_motion ?h) ) )
          (once (not (is_setup_object ?h) ) )
          (once (and (in_motion ?h) (in_motion ?h) (not (and (agent_holds ?h) (not (agent_holds bed) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (count-once ballOnBedAtEnd:red:purple) (* (total-time) (count ballOnBedAtEnd:dodgeball) )
    )
    (or
      (>= (external-forall-maximize 6 ) 3 )
      (>= 20 (count ballOnBedAtEnd:orange) )
    )
    (>= (* (* (* (* (count-once-per-objects ballOnBedAtEnd:basketball) (external-forall-maximize (* (* (count ballOnBedAtEnd:cylindrical_block) (* (count ballOnBedAtEnd:basketball) (count-once-per-objects ballOnBedAtEnd:pyramid_block) (count ballOnBedAtEnd:dodgeball) )
                  )
                  50
                  (count-longest ballOnBedAtEnd:beachball:beachball)
                  (<= (+ (count ballOnBedAtEnd:yellow) (* 5 (count ballOnBedAtEnd:beachball) 3 )
                      10
                      (+ (+ (count ballOnBedAtEnd) (<= (count ballOnBedAtEnd:alarm_clock) 1 )
                        )
                        3
                        (count ballOnBedAtEnd:beachball)
                        (* (* (count-once ballOnBedAtEnd:yellow) (* (count-once-per-external-objects ballOnBedAtEnd:red_pyramid_block) (+ 2 1 )
                            )
                          )
                          (+ (* (total-score) 10 )
                            (count-once-per-objects ballOnBedAtEnd:beachball)
                            10
                          )
                        )
                        (count-once-per-objects ballOnBedAtEnd:blue_dodgeball)
                        (* 1 (+ (* (+ (* 0 (count-measure ballOnBedAtEnd:basketball) )
                                15
                              )
                              3
                              (count-once-per-external-objects ballOnBedAtEnd:golfball:cube_block)
                              3
                            )
                            (count-once-per-objects ballOnBedAtEnd:golfball)
                          )
                        )
                        (* (count ballOnBedAtEnd:hexagonal_bin) 30 (count ballOnBedAtEnd:pink:dodgeball) (* (count-once-per-objects ballOnBedAtEnd:dodgeball) (count ballOnBedAtEnd:orange) )
                        )
                        (count ballOnBedAtEnd:wall:orange)
                        (* (count ballOnBedAtEnd:hexagonal_bin) (count-once-per-objects ballOnBedAtEnd:yellow) )
                        1
                        30
                        (count ballOnBedAtEnd:dodgeball)
                      )
                    )
                    (total-score)
                  )
                  4
                  (count-once ballOnBedAtEnd:basketball:blue_dodgeball)
                  10
                )
              )
            )
            (count-once-per-objects ballOnBedAtEnd:blue_dodgeball)
            (count-once-per-objects ballOnBedAtEnd:golfball)
          )
          (count-once ballOnBedAtEnd:pink)
        )
        (* (count ballOnBedAtEnd:golfball) (total-score) 0 )
      )
      (/
        (count ballOnBedAtEnd:brown)
        (count ballOnBedAtEnd:green)
      )
    )
  )
)
(:scoring
  (count-measure ballOnBedAtEnd:hexagonal_bin)
)
)

(define (game game-id-304) (:domain medium-objects-room-v1)
(:setup
  (forall (?o1 - dodgeball ?b3 - dodgeball)
    (game-optional
      (exists (?h - red_pyramid_block)
        (not
          (in_motion agent)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - (either dodgeball cellphone))
      (and
        (preference tanObjectMovedToRoomCenter
          (exists (?d - (either cellphone cylindrical_block))
            (then
              (hold-while (object_orientation ?h pillow) (not (not (agent_holds ?d) ) ) (and (object_orientation bed ?d) (and (in_motion ?h) (in_motion ?h) ) ) )
              (once (not (toggled_on ?d) ) )
              (once (agent_holds ?h) )
            )
          )
        )
        (preference pillowMovedToRoomCenter
          (exists (?d - game_object)
            (then
              (hold (agent_holds ?d) )
              (hold (and (adjacent ?h ?d) (agent_holds pink_dodgeball) ) )
              (hold (not (and (on ?h ?h) (touch ?h ?h) ) ) )
            )
          )
        )
      )
    )
    (forall (?c - (either book pyramid_block))
      (and
        (preference objectThrownFromRug
          (exists (?p2 - hexagonal_bin)
            (then
              (once (opposite ?p2 ?c) )
              (once (and (in agent ?p2) (on ?c ?c) ) )
              (once (and (adjacent ?c ?p2) (not (same_color pink_dodgeball ?c) ) ) )
            )
          )
        )
      )
    )
    (preference throwFromEdgeOfRug
      (exists (?w2 - building ?o ?p - game_object)
        (then
          (hold (between door ?p room_center) )
          (once (agent_holds ?p) )
          (once (not (agent_holds ?p) ) )
          (hold (not (game_over ) ) )
        )
      )
    )
  )
)
(:terminal
  (= (count pillowMovedToRoomCenter:dodgeball) 4 )
)
(:scoring
  (count-once-per-objects pillowMovedToRoomCenter:red)
)
)

(define (game game-id-305) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - doggie_bed)
      (or
        (game-optional
          (and
            (not
              (agent_holds ?h)
            )
            (agent_holds agent)
          )
        )
        (game-conserved
          (and
            (in_motion ?h)
            (< (distance ?h ?h) 3)
          )
        )
        (and
          (game-optional
            (not
              (in_motion ?h)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToBed
      (exists (?c3 - chair)
        (at-end
          (same_color ?c3 rug)
        )
      )
    )
  )
)
(:terminal
  (>= (count ballThrownToBed) (+ 2 (count-increasing-measure ballThrownToBed:yellow:beachball) )
  )
)
(:scoring
  (count ballThrownToBed:beachball)
)
)

(define (game game-id-306) (:domain many-objects-room-v1)
(:setup
  (exists (?b6 - hexagonal_bin)
    (game-conserved
      (not
        (agent_holds ?b6)
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballThrownToBin
      (exists (?d - game_object)
        (then
          (once (adjacent ?d ?d) )
          (once (not (not (exists (?b - wall) (and (and (agent_holds ?d) (touch ?d ?d) ) (on ?b ?d) ) ) ) ) )
          (hold-while (in_motion ?d) (> 1 (distance ?d ?d)) )
        )
      )
    )
    (forall (?b - dodgeball)
      (and
        (preference dodgeballsInPlace
          (exists (?o - cube_block ?p - drawer)
            (at-end
              (agent_holds ?b)
            )
          )
        )
        (preference pyramidBlockAtopTowerAtEnd
          (exists (?b1 - hexagonal_bin)
            (then
              (once (in_motion top_shelf) )
              (once-measure (agent_holds ?b) (distance ?b1 ?b1) )
              (once (agent_holds ?b) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (* (count dodgeballsInPlace:dodgeball) (+ 7 )
    )
  )
)
(:scoring
  (count-once-per-objects dodgeballThrownToBin:pink)
)
)

(define (game game-id-307) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (in_motion rug)
  )
)
(:constraints
  (and
    (forall (?b10 - tall_cylindrical_block)
      (and
        (preference ballThrownThroughRampAndBlocksToBin
          (exists (?b - block ?d - hexagonal_bin)
            (then
              (once (agent_holds ?b10) )
              (once (in_motion ?d) )
              (once (on pink_dodgeball ?b10) )
            )
          )
        )
      )
    )
    (preference objectMovedRoomSide
      (exists (?l3 - triangular_ramp ?d - hexagonal_bin ?d - doggie_bed ?o ?s ?p - ball)
        (at-end
          (adjacent ?o ?p)
        )
      )
    )
    (forall (?d - block)
      (and
        (preference dodgeballFromBlockToBin
          (exists (?o2 - hexagonal_bin)
            (then
              (once (adjacent room_center ?o2) )
              (once (not (same_color ?o2 main_light_switch) ) )
              (once (not (not (in_motion ?o2) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 9 (total-time) )
    (> (* (count objectMovedRoomSide:cube_block:yellow) (count objectMovedRoomSide:hexagonal_bin) (+ 10 9 )
      )
      3
    )
    (>= (+ (count-once-per-objects objectMovedRoomSide:dodgeball) (count-once-per-objects objectMovedRoomSide:blue_pyramid_block:beachball) (* (* (external-forall-maximize (count objectMovedRoomSide:beachball:yellow) ) (count objectMovedRoomSide:basketball) )
          (count objectMovedRoomSide:pink)
        )
      )
      (+ (count-once-per-objects objectMovedRoomSide:tan) (count-once ballThrownThroughRampAndBlocksToBin:hexagonal_bin) )
    )
  )
)
(:scoring
  (> (count dodgeballFromBlockToBin:dodgeball) (* (* (* (count ballThrownThroughRampAndBlocksToBin:dodgeball) (count-once-per-objects objectMovedRoomSide:blue) )
      )
      8
      7
      (* (count ballThrownThroughRampAndBlocksToBin:pink) (* (count ballThrownThroughRampAndBlocksToBin:blue_dodgeball) 5 (count ballThrownThroughRampAndBlocksToBin:green:dodgeball) (+ (* 3 4 )
            (* (count ballThrownThroughRampAndBlocksToBin:book) (count ballThrownThroughRampAndBlocksToBin:blue_pyramid_block) )
          )
          1
          5
        )
      )
    )
  )
)
)

(define (game game-id-308) (:domain many-objects-room-v1)
(:setup
  (forall (?b - dodgeball)
    (exists (?r - building)
      (forall (?d - doggie_bed)
        (game-optional
          (equal_z_position ?r bed)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b5 - game_object)
      (and
        (preference throwBallToDoggieBedOffWall
          (exists (?c6 - (either dodgeball pink))
            (then
              (once (not (not (exists (?o3 - desktop ?c2 - hexagonal_bin) (not (touch ?c6 bed) ) ) ) ) )
              (once (and (not (in_motion room_center) ) (agent_holds floor) ) )
              (hold (in_motion ?c6) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* (count-once-per-objects throwBallToDoggieBedOffWall:white) (count-once-per-objects throwBallToDoggieBedOffWall:dodgeball) )
      (count throwBallToDoggieBedOffWall:book)
    )
    (= (count throwBallToDoggieBedOffWall:triangle_block) (count throwBallToDoggieBedOffWall:basketball:bed) )
  )
)
(:scoring
  (* (+ (count throwBallToDoggieBedOffWall:beachball:dodgeball) (count-increasing-measure throwBallToDoggieBedOffWall:yellow:basketball) )
  )
)
)

(define (game game-id-309) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?d - hexagonal_bin)
      (exists (?h - (either dodgeball dodgeball) ?b2 - pillow)
        (and
          (exists (?b ?r - dodgeball)
            (exists (?r - tall_cylindrical_block)
              (exists (?s - beachball ?b8 - (either mug book doggie_bed) ?b - teddy_bear ?d - (either cube_block golfball))
                (exists (?o - dodgeball ?w - block)
                  (game-optional
                    (in_motion ?b)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o ?c3 ?c2 ?c1 ?h ?b - color ?h - chair ?c6 - chair)
      (and
        (preference golfballLandsInBinThroughRamp
          (exists (?o5 - hexagonal_bin)
            (then
              (hold (and (agent_holds ?c6) (agent_holds ?o5) (in_motion ?c6) (not (in_motion ?c6) ) (adjacent ?o5 ?c6) (agent_holds agent) ) )
              (once (not (in_motion ?o5) ) )
              (once (and (and (touch ?c6 ?c6) (and (or (and (not (agent_holds ?c6) ) (not (on ?c6 desk) ) (in ?o5 desk) ) (on agent ?o5) ) (not (on ?o5 ?o5) ) ) ) (not (agent_holds ?c6) ) ) )
            )
          )
        )
      )
    )
    (forall (?c2 - color ?l - (either pink cd))
      (and
        (preference throwAttempt
          (exists (?x ?b ?f ?w ?b ?b5 ?b ?r ?h ?c - game_object)
            (then
              (hold (agent_holds ?r) )
              (once (exists (?c3 - cube_block ?bl - dodgeball) (not (not (on ?b ?c) ) ) ) )
              (once (< 1 1) )
            )
          )
        )
        (preference cubeBlockThrowAttempt
          (exists (?h - dodgeball ?o - building)
            (at-end
              (opposite ?o ?o)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (+ (external-forall-maximize (count throwAttempt:blue_dodgeball) ) (+ (count-once-per-objects throwAttempt:dodgeball) (* (count-same-positions cubeBlockThrowAttempt:dodgeball) (count throwAttempt:red) )
          7
        )
      )
      (count throwAttempt:yellow)
    )
    (count cubeBlockThrowAttempt:cylindrical_block)
  )
)
(:scoring
  (count cubeBlockThrowAttempt:golfball:beachball)
)
)

(define (game game-id-310) (:domain few-objects-room-v1)
(:setup
  (forall (?c2 - hexagonal_bin)
    (and
      (game-conserved
        (agent_holds ?c2)
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttemptFromDoor
      (exists (?c2 - hexagonal_bin)
        (then
          (hold-for 10 (and (not (not (object_orientation ?c2 pillow) ) ) (not (object_orientation desk ?c2) ) ) )
          (once (not (in_motion ?c2) ) )
          (once (adjacent ?c2 ?c2) )
        )
      )
    )
    (preference ballThrownOntoTarget
      (exists (?p - game_object ?l - doggie_bed)
        (then
          (hold-while (exists (?c - building ?f ?t ?g - dodgeball) (< 1 (distance_side ?f ?g bed)) ) (object_orientation bed ?l) )
          (once (not (agent_holds ?l) ) )
          (once (not (in_motion ?l) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count ballThrownOntoTarget:tan) 0 )
)
(:scoring
  15
)
)

(define (game game-id-311) (:domain few-objects-room-v1)
(:setup
  (forall (?d - shelf ?r - hexagonal_bin)
    (forall (?c - beachball ?h - doggie_bed)
      (exists (?p - pillow)
        (game-conserved
          (not
            (and
              (not
                (not
                  (agent_holds agent)
                )
              )
              (and
                (and
                  (or
                    (agent_holds floor)
                  )
                  (not
                    (not
                      (and
                        (on ?p floor)
                        (touch ?r ?r)
                      )
                    )
                  )
                )
                (in_motion desk)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - hexagonal_bin)
      (and
        (preference throwAttempt
          (exists (?w2 - hexagonal_bin ?h ?b1 ?c6 ?h ?l ?ob - block ?b3 - dodgeball)
            (then
              (hold-while (on agent ?b) (on ?b desk) (agent_holds ?b3) (in ?b3 ?b3) )
              (once (in_motion ?b) )
            )
          )
        )
      )
    )
    (forall (?b1 - hexagonal_bin)
      (and
        (preference bigObjectThrownToBed
          (exists (?d1 - game_object)
            (then
              (once (touch ?b1 ?b1) )
              (hold-for 10 (and (same_color ?b1 upright) (and (and (in_motion agent) (and (agent_holds ?d1) (and (in_motion ?d1) (agent_holds ?b1) ) ) ) (and (in_motion ?b1) (exists (?p1 - building) (agent_holds bed) ) ) ) ) )
              (once (not (in_motion agent) ) )
            )
          )
        )
      )
    )
    (preference castleBuilt
      (exists (?d - dodgeball)
        (at-end
          (agent_holds ?d)
        )
      )
    )
  )
)
(:terminal
  (>= (count throwAttempt:hexagonal_bin:pink) (count-once-per-objects bigObjectThrownToBed:golfball) )
)
(:scoring
  1
)
)

(define (game game-id-312) (:domain medium-objects-room-v1)
(:setup
  (exists (?h - hexagonal_bin)
    (game-conserved
      (not
        (and
          (not
            (not
              (agent_holds ?h)
            )
          )
          (adjacent ?h agent)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToRug
      (exists (?c - (either dodgeball pyramid_block))
        (then
          (once (in_motion ?c) )
          (forall-sequence (?t1 - hexagonal_bin)
            (then
              (hold (exists (?d - chair) (object_orientation ?d ?t1) ) )
              (once (agent_holds ?t1) )
              (once (equal_x_position ?t1 rug) )
            )
          )
          (once (in_motion ?c) )
          (hold (in_motion ?c) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= 15 2 )
    (and
      (>= 2 (count ballThrownToRug:dodgeball) )
      (>= (count ballThrownToRug:beachball) (total-time) )
    )
    (or
      (>= (* (> 1 30 )
          3
        )
        (* 4 (* 5 (external-forall-maximize (count ballThrownToRug:beachball) ) )
        )
      )
    )
  )
)
(:scoring
  (count ballThrownToRug:dodgeball:beachball:blue)
)
)

(define (game game-id-313) (:domain few-objects-room-v1)
(:setup
  (exists (?d1 - wall ?o1 - (either triangle_block ball))
    (game-conserved
      (agent_holds ?o1)
    )
  )
)
(:constraints
  (and
    (preference bookOnDeskShelf
      (exists (?b2 - color)
        (at-end
          (same_color ?b2 ?b2)
        )
      )
    )
    (forall (?b2 - hexagonal_bin)
      (and
        (preference throwAttemptKnocksBlock
          (exists (?c - hexagonal_bin)
            (then
              (once (not (and (touch ?c ?b2) (between desk ?c ?c) ) ) )
              (hold (in_motion ?c) )
              (once (in_motion ?b2) )
            )
          )
        )
      )
    )
    (preference golfballLandsInBinThroughRamp
      (exists (?w - red_pyramid_block ?h - teddy_bear)
        (then
          (hold (not (between ?h ?h ?h) ) )
          (hold (in_motion ?h) )
          (once (agent_holds ?h) )
        )
      )
    )
  )
)
(:terminal
  (>= 7 (count-once-per-objects bookOnDeskShelf:golfball) )
)
(:scoring
  (count-once-per-objects bookOnDeskShelf:doggie_bed)
)
)

(define (game game-id-314) (:domain medium-objects-room-v1)
(:setup
  (forall (?l - hexagonal_bin ?d1 ?b ?o - color)
    (game-optional
      (in_motion ?o)
    )
  )
)
(:constraints
  (and
    (preference watchOnShelf
      (exists (?d2 ?b ?b ?t ?s ?b - hexagonal_bin)
        (then
          (once (not (on agent ?b) ) )
          (hold (same_type desk ?s) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 10 )
)
(:scoring
  (* (count watchOnShelf) (count-once watchOnShelf:purple) )
)
)

(define (game game-id-315) (:domain few-objects-room-v1)
(:setup
  (exists (?p - game_object)
    (and
      (game-conserved
        (in_motion ?p)
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - ball ?c - hexagonal_bin)
      (and
        (preference golfballInBinFromPillow
          (exists (?d2 - dodgeball)
            (then
              (once (agent_holds ?c) )
              (hold-while (in_motion ?d2) (opposite ?d2 door) (forall (?c - (either basketball red)) (adjacent ?c ?c) ) )
              (hold (in ?d2 ?c) )
            )
          )
        )
      )
    )
    (preference bookOnDeskShelf
      (exists (?l - blue_cube_block ?p3 - hexagonal_bin ?o - (either blue_cube_block doggie_bed teddy_bear))
        (then
          (once (or (and (on ?o ?o) ) (on ?o ?o) ) )
          (once (in agent rug) )
          (hold-for 2 (and (in agent ?o) (not (and (not (in agent agent) ) (and (agent_holds ?o) (not (agent_holds ?o) ) (on ?o ?o) ) ) ) ) )
        )
      )
    )
    (preference pinkObjectMovedToRoomCenter
      (exists (?h - color ?c - triangular_ramp)
        (at-end
          (toggled_on ?c)
        )
      )
    )
  )
)
(:terminal
  (= (external-forall-maximize (< 2 (* (* (count golfballInBinFromPillow:golfball:yellow) (* 5 (* 2 (* (external-forall-minimize (+ 5 (count pinkObjectMovedToRoomCenter:pink) )
                  )
                  2
                )
              )
            )
          )
          10
        )
      )
    )
    (count pinkObjectMovedToRoomCenter:beachball:blue_dodgeball)
  )
)
(:scoring
  (count-unique-positions bookOnDeskShelf:golfball)
)
)

(define (game game-id-316) (:domain medium-objects-room-v1)
(:setup
  (forall (?o - cube_block ?b3 - ball)
    (game-optional
      (adjacent ?b3 ?b3)
    )
  )
)
(:constraints
  (and
    (preference throwToBinFromDistance
      (exists (?b - beachball)
        (then
          (once (on ?b ?b) )
          (hold (in_motion ?b) )
          (hold (and (object_orientation ?b desk) (in ?b ?b) ) )
        )
      )
    )
    (forall (?b2 - game_object)
      (and
        (preference golfballInBinFromPillow
          (exists (?d - doggie_bed)
            (then
              (once (agent_holds north_wall) )
              (once (and (in_motion ?b2) (and (and (in_motion rug) (and (on room_center ?b2) (and (in_motion ?d) (and (not (in_motion ?b2) ) (on ?d ?b2) (on ?b2 ?b2) ) ) ) ) (agent_holds block) ) ) )
              (hold (same_color ?d ?d) )
            )
          )
        )
        (preference bounceBallToBin
          (exists (?f - game_object)
            (then
              (once-measure (and (not (agent_holds ?f) ) ) (distance ?b2 ?f) )
              (hold (not (and (in_motion rug) (and (and (and (not (adjacent ?b2 ?b2) ) (agent_holds ?f) (and (adjacent_side ?b2 ?f ?f) (in_motion agent) ) (agent_holds ?b2) (on ?b2 ?b2) (agent_holds ?f) (in ?f ?f) (adjacent ?f ?f) (not (not (and (and (in_motion ?b2) (above ?b2 ?b2) ) (and (is_setup_object floor) (not (in ?b2 ?b2) ) ) (touch rug ?f) ) ) ) (agent_holds ?b2) (agent_holds ?b2) (< (x_position ?b2) 0) ) (and (not (> 1 2) ) (adjacent ?f ?b2) ) ) ) (in_motion ?b2) ) ) )
              (once (agent_holds ?b2) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (external-forall-maximize (external-forall-minimize (external-forall-minimize (+ 20 (count bounceBallToBin:basketball:purple) )
        )
      )
    )
  )
)
(:scoring
  (* (count bounceBallToBin:red) (* (count bounceBallToBin:dodgeball:dodgeball) )
    10
    (- (* (count throwToBinFromDistance:basketball) (* (count golfballInBinFromPillow:red) )
      )
    )
  )
)
)

(define (game game-id-317) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (and
        (and
          (game-optional
            (not
              (adjacent pillow bed)
            )
          )
        )
        (game-optional
          (not
            (agent_crouches )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttemptFromDoor
      (exists (?o4 ?b6 - (either teddy_bear cellphone) ?t1 - dodgeball)
        (then
          (hold-while (equal_z_position ?t1 ?t1) (object_orientation ?t1 ?t1) (and (and (adjacent ?t1 ?t1) (not (>= 1 (distance ?t1 ?t1)) ) ) (not (and (is_setup_object ?t1) (and (not (not (on bed ?t1) ) ) (in_motion ?t1) ) (opposite ?t1 ?t1) ) ) ) (object_orientation ?t1 ?t1) )
          (once (agent_holds door) )
          (once (in_motion ?t1) )
        )
      )
    )
    (preference cubeThrownToBin
      (exists (?db - pillow)
        (at-end
          (in_motion bed)
        )
      )
    )
    (preference throwTeddyOntoPillow
      (exists (?b - building)
        (then
          (once (on agent front) )
          (once (not (faces ?b ?b) ) )
          (once (and (on ?b ?b) (and (and (agent_holds ?b) ) (adjacent ?b ?b) (not (agent_holds ?b) ) (in_motion pink_dodgeball) (not (in ?b ?b) ) (rug_color_under ?b ?b) ) (or (and (agent_holds ?b) (agent_crouches ) ) (not (in_motion ?b) ) ) (and (and (on ?b agent) (agent_holds ?b) ) (and (in_motion ?b) (adjacent ?b ?b) ) ) ) )
        )
      )
    )
    (preference bigObjectThrownToBed
      (exists (?o2 - drawer)
        (then
          (hold (touch desk ?o2) )
          (once (and (agent_holds rug) (agent_holds ?o2) ) )
          (once (not (on ?o2 ?o2) ) )
        )
      )
    )
    (preference objectsHidden
      (exists (?h - block ?o - hexagonal_bin ?c2 - hexagonal_bin)
        (then
          (once (and (or (and (agent_holds ?c2) (and (not (and (in ?c2 ?c2) (not (in_motion ?c2) ) (and (agent_holds ?c2) (in_motion ?c2) ) ) ) (on ?c2 ?c2) (not (agent_holds ?c2) ) ) ) (and (and (agent_holds ?c2) (and (and (on agent agent) (agent_holds ?c2) (not (and (in_motion ?c2) (and (not (adjacent bed ?c2) ) (adjacent_side ?c2 ?c2 ?c2) ) ) ) ) (in_motion ?c2) ) ) (and (same_color ?c2 floor) (not (in_motion top_shelf) ) ) (agent_holds ?c2) (agent_holds ?c2) ) (and (not (exists (?h - hexagonal_bin ?w1 - triangular_ramp) (not (agent_holds ?w1) ) ) ) (and (and (or (in rug ?c2) (in_motion ?c2) ) (and (on ?c2 ?c2) (and (in_motion ?c2) (same_color ?c2 ?c2) ) ) ) (not (and (and (and (agent_holds ?c2) (not (not (in_motion ?c2) ) ) ) (and (in_motion ?c2) (in ?c2 ?c2) ) ) (in_motion door) ) ) (in ?c2 ?c2) ) ) ) (in ?c2 ?c2) ) )
          (hold (touch ?c2 ?c2) )
          (hold (rug_color_under rug ?c2) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-once-per-objects throwAttemptFromDoor:basketball) (+ 25 (<= (* (- (count throwAttemptFromDoor:basketball) )
            (count throwTeddyOntoPillow:beachball)
          )
          (+ 180 (count-once-per-objects throwTeddyOntoPillow:dodgeball) )
        )
      )
    )
    (>= (count-total objectsHidden:golfball) 100 )
    (> (count-once-per-objects throwAttemptFromDoor:yellow_pyramid_block) (count-once-per-objects throwAttemptFromDoor:dodgeball) )
    (and
      (<= (count-once-per-external-objects throwAttemptFromDoor:dodgeball) (* (count objectsHidden:dodgeball:cylindrical_block:pyramid_block) (count-once-per-objects cubeThrownToBin:hexagonal_bin) )
      )
      (>= (count cubeThrownToBin:red_pyramid_block) (count objectsHidden:dodgeball) )
      (>= 5 (count throwTeddyOntoPillow) )
    )
  )
)
(:scoring
  (external-forall-maximize
    (+ (total-score) 8 )
  )
)
)

(define (game game-id-318) (:domain medium-objects-room-v1)
(:setup
  (exists (?t - hexagonal_bin ?d - hexagonal_bin)
    (exists (?p1 - building)
      (exists (?h - hexagonal_bin)
        (game-conserved
          (in ?h ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference binKnockedOver
      (exists (?c6 - desk_shelf)
        (then
          (once (in_motion desk) )
          (hold (agent_holds ?c6) )
          (hold (in_motion ?c6) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (> (* (count-once binKnockedOver:dodgeball) 1 )
        3
      )
      (external-forall-maximize
        30
      )
    )
    (+ (+ (= (* 5 (+ (count binKnockedOver:beachball:dodgeball) (count-once-per-objects binKnockedOver:golfball) (* (count-total binKnockedOver:basketball) (external-forall-maximize (count binKnockedOver:yellow) ) )
            )
          )
          (total-time)
        )
        (* (* (- (or (count binKnockedOver:dodgeball) (count binKnockedOver:tan:red:brown) ) )
            5
          )
          2
        )
      )
      (count binKnockedOver:beachball)
    )
  )
)
(:scoring
  (count binKnockedOver:beachball:red)
)
)

(define (game game-id-319) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (in_motion floor)
  )
)
(:constraints
  (and
    (forall (?c6 - dodgeball ?tb - hexagonal_bin)
      (and
        (preference dodgeballsInPlace
          (exists (?p3 - block)
            (then
              (hold (and (not (on ?tb agent) ) (agent_holds bed) (agent_holds ?tb) (in_motion ?tb) ) )
              (once (and (< (distance_side ?p3 desk desk) 3) (touch rug ?tb) ) )
              (once (on ?p3 ?tb) )
              (hold (and (between ?p3 ?tb rug) (in ?p3 ?tb) ) )
              (hold-for 0 (and (not (open ?tb) ) (and (not (in_motion room_center) ) (agent_holds door) (on ?tb agent) ) (< 1 0) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (count-once-per-objects dodgeballsInPlace:pink_dodgeball) (* (* 2 (= (* (* 1 (count-once-per-objects dodgeballsInPlace:wall:dodgeball) )
              (count dodgeballsInPlace:red:beachball)
            )
          )
          (total-score)
        )
        (+ 10 (* 10 (* (count-same-positions dodgeballsInPlace:dodgeball) (* (* (* (count-once dodgeballsInPlace:purple:beachball) (* 3 100 3 (< 10 (* (+ (count-once-per-objects dodgeballsInPlace:red) (* 0.7 (+ (count dodgeballsInPlace:yellow) 100 )
                            )
                          )
                          (count-once-per-objects dodgeballsInPlace:golfball)
                          (count-longest dodgeballsInPlace:yellow)
                          (/
                            (count dodgeballsInPlace:hexagonal_bin:alarm_clock:dodgeball)
                            (count dodgeballsInPlace:red)
                          )
                          5
                        )
                      )
                      2
                      (count-once-per-objects dodgeballsInPlace:cube_block)
                      (+ 5 (count-once-per-objects dodgeballsInPlace:red:basketball) )
                      0
                      (count-once dodgeballsInPlace:side_table)
                      (count dodgeballsInPlace:hexagonal_bin)
                      50
                      (* (* 3 (* 2 (* (- (count-once-per-objects dodgeballsInPlace:beachball) )
                              5
                              (+ (* 5 (external-forall-maximize 3 ) )
                                10
                                (* 5 (count dodgeballsInPlace:beachball) )
                                100
                                (count-measure dodgeballsInPlace:yellow)
                                (* (count dodgeballsInPlace:basketball) (count-once-per-objects dodgeballsInPlace:pink_dodgeball) )
                              )
                            )
                          )
                        )
                        5
                        (count-once-per-objects dodgeballsInPlace:dodgeball)
                        5
                        3
                        1
                      )
                    )
                  )
                  (count dodgeballsInPlace:blue)
                  (- (count-once-per-objects dodgeballsInPlace:green) )
                  2
                  (count-unique-positions dodgeballsInPlace:dodgeball)
                  (count-once-per-objects dodgeballsInPlace:pink)
                )
                (+ (external-forall-maximize (* (and 1 ) (* (+ (* (* 0 0 )
                            20
                          )
                          (+ 7 (+ 20 5 )
                          )
                        )
                        2
                      )
                      10
                    )
                  )
                  5
                )
              )
            )
          )
        )
      )
    )
    (count dodgeballsInPlace:golfball)
  )
)
(:scoring
  (total-score)
)
)

(define (game game-id-320) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (game_over )
  )
)
(:constraints
  (and
    (forall (?d - block ?d - dodgeball)
      (and
        (preference blockThrowAttempt
          (exists (?d - dodgeball)
            (then
              (once-measure (not (and (rug_color_under ?d ?d) (on ?d ?d) (in_motion ?d) ) ) (distance agent ?d) )
              (hold (rug_color_under ?d ?d) )
            )
          )
        )
        (preference ballThrownToBin
          (exists (?b5 - hexagonal_bin)
            (then
              (once (and (in ?b5 agent) (and (not (in ?d ?d) ) (not (not (not (on agent agent) ) ) ) ) ) )
              (hold (and (and (and (on ?d agent) (not (in_motion rug) ) ) (in ?b5 ?b5) ) (and (not (and (not (forall (?b - ball ?bl - hexagonal_bin) (and (exists (?b2 ?h - building) (exists (?d - hexagonal_bin) (adjacent ?b5 ?h) ) ) (in_motion blinds) (not (and (agent_holds ?bl) (between agent door pink) ) ) (adjacent ?b5 ?b5) (on ?d ?d) (on ?d ?d) ) ) ) (and (and (in_motion ?d) (agent_holds ?d) ) (and (on ?b5 agent) (agent_holds ?b5) ) ) ) ) (on ?b5 desktop) ) ) )
              (hold (on ?d desk) )
            )
          )
        )
        (preference throwAttemptFromBehindBlock
          (exists (?d - (either doggie_bed golfball))
            (then
              (once (not (in_motion ?d) ) )
              (once (and (not (adjacent ?d agent) ) (and (agent_holds ?d) (in_motion ?d) ) (and (in agent ?d) (in ?d ?d) ) (exists (?h - drawer ?c1 - block ?c - (either pink pillow) ?g - chair ?f - hexagonal_bin) (agent_holds ?f) ) (and (not (in_motion ?d) ) (in_motion ?d) ) (not (in_motion ?d) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 1 (* (* (count blockThrowAttempt:pink) (count throwAttemptFromBehindBlock:cube_block) )
      (- (count ballThrownToBin:yellow) )
    )
  )
)
(:scoring
  (total-score)
)
)

(define (game game-id-321) (:domain few-objects-room-v1)
(:setup
  (not
    (and
      (exists (?s - dodgeball ?c - wall ?s - dodgeball)
        (exists (?d - curved_wooden_ramp)
          (exists (?c - ball ?c3 - (either beachball book))
            (forall (?b - (either desktop laptop))
              (game-conserved
                (or
                  (and
                    (not
                      (and
                        (and
                          (exists (?h - hexagonal_bin)
                            (not
                              (agent_holds ?d)
                            )
                          )
                          (on ?d ?s)
                          (not
                            (adjacent ?d ?d)
                          )
                        )
                      )
                    )
                    (< 7 1)
                    (not
                      (or
                        (< (distance ?s upside_down) (distance ?c3 ?s))
                      )
                    )
                    (and
                      (opposite ?s ?c3)
                      (adjacent ?b ?b)
                    )
                    (and
                      (forall (?c - chair ?t - dodgeball)
                        (and
                          (and
                            (touch agent ?t)
                            (or
                              (on ?c3 ?c3)
                              (< (distance agent ?d) (distance ?s ?b))
                            )
                          )
                          (touch desk ?b)
                        )
                      )
                      (< (distance ?c3 ?b) (x_position ?s))
                      (rug_color_under ?d upright)
                    )
                    (and
                      (and
                        (and
                          (agent_holds bed)
                          (in_motion ?s)
                        )
                        (touch agent ?d)
                      )
                      (touch ?b ?b)
                      (agent_holds ?s)
                      (not
                        (and
                          (on ?b ?c3)
                          (not
                            (in_motion upright)
                          )
                        )
                      )
                    )
                  )
                  (object_orientation ?d ?c3)
                )
              )
            )
          )
        )
      )
      (exists (?b1 - (either rug block key_chain))
        (game-optional
          (and
            (adjacent ?b1 ?b1)
            (in ?b1 ?b1)
            (and
              (equal_z_position bottom_shelf floor)
              (agent_holds ?b1)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference teddyBearLandsInBin
      (exists (?h - ball)
        (then
          (once (and (and (< 8 6) (opposite rug ?h) (agent_holds ?h) ) (or (in_motion ?h) (agent_holds ?h) ) ) )
          (once (not (not (and (in_motion ?h) (not (in_motion room_center) ) ) ) ) )
          (once (and (adjacent_side bed ?h desk) (and (not (not (and (and (on ?h rug) (and (not (and (in ?h ?h) (exists (?bl - desk_shelf ?r - cube_block) (in_motion ?r) ) ) ) (same_type ?h ?h) (agent_holds rug) (and (not (adjacent ?h agent) ) (on agent ?h) ) ) ) (not (on ?h desk) ) ) ) ) (not (not (not (< (building_size ?h) (distance ?h ?h)) ) ) ) (on ?h ?h) ) (and (on desk ?h) (in ?h rug) ) ) )
        )
      )
    )
    (forall (?p2 - block)
      (and
        (preference castleBuilt
          (exists (?h - hexagonal_bin ?b2 - curved_wooden_ramp ?w1 - hexagonal_bin)
            (at-end
              (on ?w1 ?w1)
            )
          )
        )
        (preference dodgeballAndBasketballInBin
          (exists (?o - hexagonal_bin)
            (then
              (once (and (on ?p2 ?p2) (and (not (game_start ) ) (not (in_motion ?o) ) ) ) )
              (once (in bed ?p2) )
              (once (agent_holds ?o) )
            )
          )
        )
      )
    )
    (preference thrownObjectHitsComputer
      (exists (?r2 - game_object ?l - color ?o2 - hexagonal_bin)
        (then
          (hold (agent_holds ?o2) )
          (once (not (on ?o2 door) ) )
          (once (in_motion ?o2) )
        )
      )
    )
    (forall (?l - hexagonal_bin)
      (and
        (preference beachballBouncedOffRamp
          (exists (?w - dodgeball)
            (then
              (hold-to-end (agent_holds ?w) )
              (once (adjacent blue ?w) )
              (once (game_start ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 2 (- 5 )
    )
    (= (count-once-per-external-objects castleBuilt:beachball:golfball) (+ (count dodgeballAndBasketballInBin:purple) (= (count-total beachballBouncedOffRamp:green) (count-once-per-objects castleBuilt:dodgeball) )
      )
    )
  )
)
(:scoring
  (* 1 15 )
)
)

(define (game game-id-322) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?b - red_dodgeball)
      (game-optional
        (adjacent ?b desk)
      )
    )
    (exists (?b - wall ?p - beachball)
      (forall (?b4 - game_object)
        (exists (?d ?o ?d - hexagonal_bin ?c - hexagonal_bin ?d - dodgeball)
          (and
            (game-conserved
              (adjacent ?d floor)
            )
            (and
              (forall (?o - ball)
                (and
                  (exists (?c - doggie_bed)
                    (and
                      (forall (?d - hexagonal_bin ?l1 - teddy_bear)
                        (exists (?b8 - cube_block)
                          (game-conserved
                            (not
                              (adjacent ?l1 agent)
                            )
                          )
                        )
                      )
                      (exists (?t2 - sliding_door ?c6 - chair)
                        (game-optional
                          (agent_holds ?o)
                        )
                      )
                      (forall (?o - building)
                        (game-conserved
                          (on rug upright)
                        )
                      )
                    )
                  )
                )
              )
              (exists (?o2 - pyramid_block)
                (game-conserved
                  (and
                    (and
                      (agent_holds bed)
                      (touch ?p ?d)
                    )
                    (agent_holds ?d)
                  )
                )
              )
              (and
                (forall (?l2 - doggie_bed)
                  (game-conserved
                    (on ?l2 ?p)
                  )
                )
              )
            )
            (forall (?p - hexagonal_bin ?h - block ?l3 - doggie_bed)
              (game-conserved
                (in_motion ?d)
              )
            )
            (game-optional
              (not
                (and
                  (and
                    (and
                      (adjacent ?d desk)
                      (and
                        (and
                          (in_motion ?p)
                          (on ?b4 ?b4)
                          (not
                            (not
                              (and
                                (not
                                  (agent_holds ?p)
                                )
                                (in_motion ?b4)
                              )
                            )
                          )
                        )
                        (and
                          (not
                            (same_color ?d ?p)
                          )
                        )
                      )
                    )
                    (adjacent ?d ?b4)
                  )
                  (adjacent ?b4 ?d)
                )
              )
            )
            (forall (?h - building ?c - (either blue_cube_block triangle_block tall_cylindrical_block) ?b3 - wall)
              (and
                (exists (?d - hexagonal_bin ?h - cube_block ?tb - dodgeball)
                  (and
                    (and
                      (forall (?d ?h - hexagonal_bin)
                        (and
                          (game-conserved
                            (agent_holds ?b4)
                          )
                        )
                      )
                    )
                    (forall (?b - (either dodgeball pen pyramid_block))
                      (exists (?b - chair)
                        (game-optional
                          (agent_holds front)
                        )
                      )
                    )
                  )
                )
                (and
                  (and
                    (game-optional
                      (agent_holds ?b4)
                    )
                  )
                  (and
                    (game-conserved
                      (and
                        (and
                          (and
                            (and
                              (and
                                (not
                                  (or
                                    (not
                                      (on ?b4 ?p)
                                    )
                                    (and
                                      (adjacent ?b4 ?b3)
                                      (agent_holds ?b4)
                                    )
                                  )
                                )
                                (exists (?g - (either key_chain lamp))
                                  (agent_holds bed)
                                )
                              )
                              (and
                                (on ?d ?p)
                              )
                            )
                            (not
                              (not
                                (not
                                  (between ?b3 sideways ?d)
                                )
                              )
                            )
                            (and
                              (and
                                (and
                                  (toggled_on ?b4)
                                )
                                (agent_holds ?b4)
                              )
                              (not
                                (agent_holds ?b4)
                              )
                            )
                          )
                          (in_motion ?d)
                          (and
                            (in_motion ?p)
                            (and
                              (not
                                (agent_holds ?p)
                              )
                              (agent_holds ?b4)
                            )
                          )
                        )
                        (and
                          (equal_z_position pink_dodgeball ?d)
                          (in_motion ?p)
                          (and
                            (adjacent ?b3 ?b4)
                            (not
                              (in_motion floor)
                            )
                          )
                        )
                      )
                    )
                  )
                )
                (game-conserved
                  (in ?b4 ?b3)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectInBuilding
      (exists (?h - ball ?h - (either pink cube_block) ?s ?h - game_object)
        (then
          (hold-while (and (on rug ?s) (> 1 0) (not (on ?s ?s) ) (on ?s ?h) (in_motion ?h) (in_motion ?h) (not (not (not (not (in_motion ?h) ) ) ) ) (<= 1 (distance ?h ?s)) (on rug ?s) (not (agent_holds ?s) ) ) (and (and (in ?h ?h) (and (above agent ?s) (exists (?c3 - chair) (not (not (not (on ?s agent) ) ) ) ) ) ) (agent_holds ?h) ) )
          (hold-while (not (and (not (and (agent_holds bed) (touch ?s ?s) (agent_holds ?h) (in_motion ?s) (adjacent ?h ?s) (and (and (in_motion ?s) (not (on ?h ?h) ) ) (agent_crouches ) ) (>= 2 (distance ?h ?s)) (between ?h ?h ?s) (< (distance ?s ?s) (distance ?h ?s)) (and (and (adjacent ?s ?h) (and (in_motion ?s) (on back ?s) ) (on ?s ?h) ) (adjacent_side ?s back front ?s) ) ) ) (same_color ?h ?s) ) ) (adjacent ?h ?h) )
          (hold-while (adjacent_side ?h ?s bed) (agent_holds ?s) )
          (once (exists (?c1 - curved_wooden_ramp) (adjacent_side upright ?h ?h) ) )
        )
      )
    )
    (preference throwFromDoorToBin
      (exists (?p2 - hexagonal_bin)
        (then
          (once (in_motion ?p2) )
          (hold (and (and (and (not (not (in ?p2 ?p2) ) ) (in_motion agent) (and (on ?p2 ?p2) (equal_x_position ?p2 ?p2) (in ?p2 ?p2) ) ) (not (in_motion ?p2) ) ) (adjacent_side ?p2 ?p2 agent ?p2) ) )
          (once (agent_holds ?p2) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (count objectInBuilding:red) 6 )
    (>= (count objectInBuilding:beachball:dodgeball) 20 )
    (>= 10 (* (not (>= 10 20 )
        )
        0
      )
    )
  )
)
(:scoring
  7
)
)

(define (game game-id-323) (:domain many-objects-room-v1)
(:setup
  (exists (?d - chair ?r - desktop ?b - desktop)
    (and
      (and
        (game-optional
          (in_motion ?b)
        )
        (forall (?s - bridge_block ?c4 - ball)
          (game-conserved
            (in_motion bridge_block)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockToBinFromRug
      (exists (?r - wall)
        (then
          (hold-for 7 (and (in agent ?r) (adjacent agent ?r) ) )
          (once (in agent floor) )
          (hold (on ?r green) )
        )
      )
    )
  )
)
(:terminal
  (< (- (* (- 10 )
        6
      )
    )
    (count-once-per-objects blockToBinFromRug:golfball)
  )
)
(:scoring
  (count-once-per-objects blockToBinFromRug:blue_cube_block:blue_dodgeball)
)
)

(define (game game-id-324) (:domain few-objects-room-v1)
(:setup
  (forall (?c - dodgeball ?h - hexagonal_bin)
    (game-optional
      (in_motion ?h)
    )
  )
)
(:constraints
  (and
    (preference dodgeballHitsBin
      (exists (?h - game_object)
        (at-end
          (in_motion ?h)
        )
      )
    )
    (preference ballThrownFromDoor
      (exists (?c2 - dodgeball)
        (then
          (once (and (and (in_motion ?c2) (and (or (and (and (or (toggled_on ?c2) (not (not (and (in_motion ?c2) (not (agent_holds ?c2) ) (< (distance ?c2 ?c2) (distance ?c2 ?c2)) (not (adjacent ?c2 agent) ) (adjacent ?c2 ?c2) (not (and (on room_center green_golfball) (not (agent_holds ?c2) ) ) ) (exists (?c - block) (in_motion ?c2) ) (in_motion ?c2) (object_orientation ?c2 ?c2) (and (and (and (adjacent ?c2 ?c2) (not (not (not (same_object ?c2 ?c2) ) ) ) ) (and (on ?c2 ?c2) (touch ?c2 ?c2) (on ?c2 ?c2) ) ) (on ?c2 ?c2) (and (< 9 8) (and (not (not (not (not (and (and (touch ?c2 ?c2) (in_motion agent) (and (agent_holds desk) (touch ?c2 ?c2) (not (not (and (not (same_type ?c2 ?c2) ) (faces ?c2 ?c2) ) ) ) (agent_holds ?c2) ) (in ?c2 ?c2) (and (in_motion ?c2) ) (forall (?b3 - (either blue_cube_block dodgeball) ?h - ball) (agent_holds ?h) ) (agent_holds ?c2) (not (touch ?c2 ?c2) ) ) (and (exists (?b1 - ball ?b8 ?l - hexagonal_bin) (or (not (and (touch ?c2 ?c2) (= (distance ?b8 ?b8) (distance ?c2 ?c2)) (in desk ?b8) (and (adjacent_side ?l ?c2 ?b8 ?c2) (not (above pink ?c2) ) ) ) ) (not (on ?l ?c2) ) ) ) (not (and (object_orientation agent ?c2) (touch ?c2 ?c2) ) ) ) ) ) ) ) ) (and (game_start ) (exists (?h - hexagonal_bin ?o4 - dodgeball) (on ?c2 ?c2) ) ) (agent_holds ?c2) ) (faces ?c2 ?c2) ) ) ) ) ) (agent_holds ?c2) ) (and (equal_z_position ?c2 ?c2) (not (agent_holds agent) ) ) ) (not (above bed ?c2) ) ) ) (and (and (forall (?b - teddy_bear ?r1 ?b - game_object) (and (adjacent ?r1 agent) (between ?r1 ?r1 ?b) ) ) (exists (?c - dodgeball) (< 2 (x_position ?c2)) ) ) (and (agent_holds ?c2) ) ) (in_motion ?c2) ) ) (or (and (in ?c2 ?c2) (adjacent ?c2 ?c2) ) (and (agent_holds ?c2) (not (agent_holds ?c2) ) (rug_color_under ?c2 ?c2) ) ) (< 0 (x_position ?c2)) (not (not (in_motion ?c2) ) ) (and (agent_holds blue) (and (agent_holds ?c2) (touch ?c2 ?c2) ) (opposite ?c2 ?c2) ) (and (agent_holds ?c2) (not (exists (?r - dodgeball) (and (in_motion bed) (adjacent ?c2 ?r) (adjacent_side ?r ?r ?r) ) ) ) (<= (x_position ?c2) (distance ?c2 ?c2)) ) ) )
          (hold (= (distance ?c2 ?c2) 6 (distance ?c2 agent)) )
          (hold (and (broken ?c2) (and (in ?c2 ?c2) (in_motion ?c2) (and (and (in_motion ?c2) (agent_holds ?c2) ) (not (in_motion ?c2) ) ) (> (distance ?c2 agent) (distance ?c2 ?c2)) (and (agent_holds ?c2) (agent_holds bed) ) (and (in_motion rug) (in_motion agent) ) ) (agent_holds ?c2) ) )
        )
      )
    )
  )
)
(:terminal
  (= 3 3 )
)
(:scoring
  (* 2 (count ballThrownFromDoor:beachball:golfball) 3 )
)
)

(define (game game-id-325) (:domain many-objects-room-v1)
(:setup
  (forall (?h - curved_wooden_ramp ?r - dodgeball ?p - beachball)
    (forall (?o - block)
      (game-optional
        (on bed ?o)
      )
    )
  )
)
(:constraints
  (and
    (preference blockToBinFromRug
      (exists (?t2 - hexagonal_bin)
        (at-end
          (not
            (exists (?h - cylindrical_block)
              (and
                (touch front agent)
                (in_motion desk)
              )
            )
          )
        )
      )
    )
    (forall (?b - curved_wooden_ramp)
      (and
        (preference cubeBlockFromBedToShelf
          (exists (?d - color)
            (at-end
              (not
                (and
                  (in_motion front)
                  (not
                    (in_motion agent)
                  )
                )
              )
            )
          )
        )
      )
    )
    (preference ballRolledOnRampToRug
      (exists (?tb - teddy_bear)
        (then
          (once (agent_holds ?tb) )
          (hold (not (and (not (or (object_orientation ?tb ?tb) (on ?tb ?tb) ) ) (and (on ?tb ?tb) (and (< 6 7) (and (agent_holds ?tb) (and (on ?tb room_center) (on top_drawer ?tb) (not (not (not (touch rug agent) ) ) ) (object_orientation ?tb ?tb) (in_motion ?tb) (and (toggled_on ?tb) (agent_holds back) ) (not (not (not (not (and (in ?tb pink_dodgeball) (on ?tb ?tb) (object_orientation ?tb ?tb) (< (distance ?tb ?tb) 1) (on ?tb ?tb) (not (game_over ) ) (not (opposite ?tb door) ) (and (agent_holds ?tb) (in_motion agent) ) (not (not (not (is_setup_object ?tb) ) ) ) (agent_holds ?tb) ) ) ) ) ) (in ?tb front) (agent_holds ?tb) (equal_x_position ?tb ?tb) (not (agent_holds ?tb) ) (and (agent_holds ?tb) (on ?tb ?tb) ) ) (adjacent_side room_center ?tb ?tb) ) ) (in_motion ?tb) ) ) ) )
          (hold (adjacent front agent) )
        )
      )
    )
  )
)
(:terminal
  (>= (and (+ (count blockToBinFromRug:tan) (+ (* (+ 3 (count-once-per-objects ballRolledOnRampToRug:dodgeball) )
            (+ 300 (count blockToBinFromRug:yellow) )
            4
            (+ (* (count-once blockToBinFromRug:hexagonal_bin:pink:hexagonal_bin) )
              4
            )
          )
          (* 6 5 )
        )
      )
      (> (= (count-once-per-objects blockToBinFromRug:book) (* (+ 1 (count blockToBinFromRug:blue) )
            (total-time)
            (count blockToBinFromRug:orange)
            (count-once-per-objects cubeBlockFromBedToShelf:beachball)
          )
        )
        (count-overlapping blockToBinFromRug:dodgeball:blue)
      )
    )
    (+ (external-forall-minimize 0 ) (* 8 3 (total-score) (count-once-per-objects cubeBlockFromBedToShelf:dodgeball) (+ (count ballRolledOnRampToRug:basketball) (count ballRolledOnRampToRug:dodgeball) (+ (count-once cubeBlockFromBedToShelf:blue_cube_block:golfball) (>= (* (* (count-once-per-objects ballRolledOnRampToRug:basketball) (* 2 4 )
                )
                (count-longest ballRolledOnRampToRug:orange)
              )
              (* (count ballRolledOnRampToRug:green:beachball) 6 )
            )
            (count-once-per-objects cubeBlockFromBedToShelf:purple)
          )
          3
          (total-time)
          (count-once-per-objects ballRolledOnRampToRug:yellow)
          3
          (count cubeBlockFromBedToShelf:dodgeball:dodgeball)
          3
          (count blockToBinFromRug:basketball)
          (count-measure blockToBinFromRug:dodgeball)
          4
        )
        (count blockToBinFromRug:yellow)
      )
    )
  )
)
(:scoring
  (count-once-per-objects cubeBlockFromBedToShelf:pink:red)
)
)

(define (game game-id-326) (:domain medium-objects-room-v1)
(:setup
  (forall (?b4 - hexagonal_bin)
    (game-conserved
      (agent_crouches )
    )
  )
)
(:constraints
  (and
    (preference throwAttemptKnocksBlock
      (exists (?w2 - cube_block ?l - game_object ?d1 - cube_block)
        (then
          (hold-while (not (and (in_motion agent) (open ?d1) ) ) (and (in_motion ?d1) (not (agent_holds ?d1) ) ) )
          (once (< 2 8) )
          (once (on ?d1 upright) )
        )
      )
    )
  )
)
(:terminal
  (and
    (not
      (or
        (not
          (not
            (>= (external-forall-minimize (total-score) ) (count-once-per-objects throwAttemptKnocksBlock) )
          )
        )
      )
    )
    (>= 7 (count-once-per-objects throwAttemptKnocksBlock:beachball) )
    (or
      (>= (count throwAttemptKnocksBlock:book) 7 )
      (or
        (> (* (count throwAttemptKnocksBlock:doggie_bed) 4 )
          (count throwAttemptKnocksBlock:basketball)
        )
        (>= 30 (count throwAttemptKnocksBlock:blue_cube_block) )
        (not
          (>= (count throwAttemptKnocksBlock:doggie_bed:yellow) (count-increasing-measure throwAttemptKnocksBlock:beachball) )
        )
      )
      (>= (not (count-once-per-objects throwAttemptKnocksBlock:doggie_bed) ) (* (count throwAttemptKnocksBlock:triangle_block:basketball) 10 6 (external-forall-minimize -10 ) )
      )
    )
  )
)
(:scoring
  (* (* (count throwAttemptKnocksBlock:brown) (* (* 10 20 (external-forall-maximize (total-score) ) (count-once-per-external-objects throwAttemptKnocksBlock:basketball:dodgeball) (- (- 15 )
          )
          (* (count throwAttemptKnocksBlock:blue_pyramid_block) (count throwAttemptKnocksBlock:doggie_bed:red) )
        )
        (* 2 (* (count-once throwAttemptKnocksBlock:dodgeball) (count throwAttemptKnocksBlock:yellow_cube_block) )
        )
      )
    )
    (count throwAttemptKnocksBlock:beachball)
  )
)
)

(define (game game-id-327) (:domain many-objects-room-v1)
(:setup
  (forall (?b4 - teddy_bear)
    (forall (?x - dodgeball)
      (exists (?c6 - hexagonal_bin)
        (exists (?d1 - dodgeball ?t2 - hexagonal_bin)
          (and
            (and
              (forall (?d - hexagonal_bin)
                (game-conserved
                  (object_orientation ?c6 ?c6)
                )
              )
            )
            (game-conserved
              (and
                (and
                  (on ?c6 rug)
                  (not
                    (adjacent ?t2 desk)
                  )
                  (and
                    (agent_holds ?c6)
                    (on ?t2 ?x)
                  )
                  (same_object ?b4 ?c6)
                )
                (< (distance desk ?x) (distance ?b4 agent))
                (not
                  (= 5 (distance ?b4 ?x))
                )
              )
            )
            (game-conserved
              (exists (?c - doggie_bed)
                (rug_color_under ?b4 ?c6)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - hexagonal_bin)
      (and
        (preference brownObjectMovedToRoomCenter
          (exists (?l - dodgeball)
            (then
              (once (in_motion ?l) )
            )
          )
        )
        (preference teddyBearLandsInBin
          (exists (?o2 - (either cellphone yellow_cube_block))
            (then
              (once (agent_holds ?o2) )
              (once (not (in_motion ?o2) ) )
              (once (agent_holds ?o2) )
            )
          )
        )
      )
    )
    (forall (?f - hexagonal_bin ?x - hexagonal_bin ?d - hexagonal_bin)
      (and
        (preference objectMovedRoomSide
          (exists (?t - shelf ?tb - game_object)
            (then
              (once (game_over ) )
              (hold (open ?d) )
              (hold (agent_holds desk) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (= (>= 10 (count-once-per-objects objectMovedRoomSide:blue_cube_block) )
    (* 1 (* 3 (* (count objectMovedRoomSide:blue_dodgeball) (* (count objectMovedRoomSide:dodgeball) 5 2 (count objectMovedRoomSide:basketball:blue) 3 (count-unique-positions objectMovedRoomSide:hexagonal_bin:pink) )
          (count objectMovedRoomSide:basketball)
        )
      )
    )
  )
)
(:scoring
  (> (count-once-per-objects brownObjectMovedToRoomCenter) (* (count-once teddyBearLandsInBin:basketball) (count teddyBearLandsInBin:green) )
  )
)
)

(define (game game-id-328) (:domain few-objects-room-v1)
(:setup
  (exists (?p1 - block)
    (game-conserved
      (and
        (and
          (not
            (agent_crouches )
          )
          (adjacent ?p1 ?p1)
        )
        (not
          (in_motion ?p1)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockToBinFromRug
      (exists (?o - wall ?b - teddy_bear ?d - hexagonal_bin ?b - game_object ?c5 - (either yellow lamp pen))
        (at-end
          (not
            (not
              (not
                (and
                  (>= 6 (distance_side ?c5 ?c5 green ?c5))
                  (agent_holds rug)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count blockToBinFromRug:book:dodgeball) (+ (count blockToBinFromRug:dodgeball) (count-once-per-objects blockToBinFromRug:purple:alarm_clock) )
  )
)
(:scoring
  15
)
)

(define (game game-id-329) (:domain many-objects-room-v1)
(:setup
  (exists (?c ?o3 - ball)
    (and
      (game-conserved
        (and
          (same_object ?o3 ?o3)
          (not
            (and
              (not
                (in_motion ?c)
              )
              (>= (distance agent ?o3) 8)
            )
          )
        )
      )
      (exists (?l1 - (either laptop dodgeball pink pink))
        (game-optional
          (agent_holds ?c)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrowAttempt
      (exists (?b - ball ?l2 - book)
        (then
          (once (and (in_motion ?l2) (not (< (distance_side ?l2 ?l2 ?l2 ?l2) (distance ?l2 ?l2)) ) (on ?l2 ?l2) ) )
          (once (on ?l2 ?l2) )
          (once (in_motion ?l2) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 2 )
    (count ballThrowAttempt:beachball)
  )
)
(:scoring
  (+ (+ (* 3 (* 1 (* 4 (* (count-once-per-objects ballThrowAttempt:red:pink_dodgeball) 10 )
          )
        )
      )
      4
    )
    (* (+ (total-score) (count-once-per-objects ballThrowAttempt:pink_dodgeball) )
      (count ballThrowAttempt:golfball)
    )
  )
)
)

(define (game game-id-330) (:domain few-objects-room-v1)
(:setup
  (exists (?b - pillow ?c4 - game_object)
    (game-conserved
      (agent_holds ?c4)
    )
  )
)
(:constraints
  (and
    (preference matchingBuildingBuilt
      (exists (?p - dodgeball)
        (then
          (once (and (agent_holds ?p) (on ?p ?p) ) )
          (once (agent_holds ?p) )
          (hold (same_color ?p ?p) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (count matchingBuildingBuilt:red) (* (count matchingBuildingBuilt:dodgeball:golfball) 8 )
    )
  )
)
(:scoring
  (count-longest matchingBuildingBuilt:basketball)
)
)

(define (game game-id-331) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (not
      (in_motion room_center)
    )
  )
)
(:constraints
  (and
    (preference woodenBlockMovedFromRugToDesk
      (exists (?t - beachball)
        (then
          (once (adjacent ?t ?t) )
          (once (and (in_motion ?t) (agent_holds ?t) (exists (?c - hexagonal_bin) (in_motion ?t) ) ) )
          (once (not (not (agent_holds room_center) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (count-shortest woodenBlockMovedFromRugToDesk:dodgeball) )
)
(:scoring
  (count woodenBlockMovedFromRugToDesk:dodgeball:basketball)
)
)

(define (game game-id-332) (:domain medium-objects-room-v1)
(:setup
  (not
    (exists (?r - hexagonal_bin)
      (and
        (game-conserved
          (adjacent ?r ?r)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?w1 - hexagonal_bin)
      (and
        (preference throwAttemptFromBehindBlock
          (exists (?b ?d - dodgeball ?b3 - hexagonal_bin)
            (then
              (once-measure (in_motion ?w1) (x_position ?w1) )
              (hold (between agent agent ?b3) )
              (once (on ?w1 ?b3) )
            )
          )
        )
        (preference failedThrowAttempt
          (exists (?h - dodgeball)
            (at-end
              (and
                (and
                  (is_setup_object brown)
                  (and
                    (touch ?w1 brown)
                    (touch ?w1 desk)
                  )
                )
                (not
                  (in_motion upright)
                )
              )
            )
          )
        )
        (preference smallObjectThrownToBed
          (exists (?b - curved_wooden_ramp)
            (then
              (once (not (on ?b ?w1) ) )
              (hold (not (in_motion ?w1) ) )
              (once (rug_color_under ?w1 ?b) )
            )
          )
        )
      )
    )
    (preference throwBallToBin
      (exists (?b ?d - cube_block)
        (then
          (once (< (distance door bed) 1) )
          (hold (in ?d ?d) )
          (once (in ?d desk) )
        )
      )
    )
  )
)
(:terminal
  (or
    (<= (- 10 )
      (+ (- (* (count-once-per-objects failedThrowAttempt:book:triangle_block) (>= (+ 6 (count throwBallToBin:red) )
              (count-once throwAttemptFromBehindBlock:basketball)
            )
          )
        )
        5
      )
    )
    (not
      (>= (+ (count smallObjectThrownToBed:block) 5 )
        (count-unique-positions throwAttemptFromBehindBlock:golfball)
      )
    )
    (>= (count-longest throwAttemptFromBehindBlock) 5 )
  )
)
(:scoring
  (count-once throwBallToBin:dodgeball)
)
)

(define (game game-id-333) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (agent_holds desk)
  )
)
(:constraints
  (and
    (preference blindsOpened
      (exists (?b - building ?g ?s - hexagonal_bin)
        (then
          (once (not (agent_holds ?g) ) )
          (once (not (not (and (and (not (on ?s ?s) ) (in_motion ?g) ) (agent_holds ?s) (in ?g ?s) ) ) ) )
          (hold (in_motion ?s) )
        )
      )
    )
    (preference greenObjectMovedToRoomCenter
      (exists (?h - hexagonal_bin ?t - ball)
        (then
          (once (agent_crouches ) )
          (once (in_motion ?t) )
          (hold-while (in ?t ?t) (adjacent ?t ?t) )
        )
      )
    )
  )
)
(:terminal
  (not
    (and
      (and
        (>= (count blindsOpened:beachball:dodgeball) (count greenObjectMovedToRoomCenter:dodgeball) )
      )
      (>= (external-forall-maximize (* 3 6 )
        )
        (* (count-once-per-external-objects greenObjectMovedToRoomCenter:dodgeball) 180 )
      )
      (not
        (or
          (>= (+ 2 10 )
            (count greenObjectMovedToRoomCenter:blue_dodgeball)
          )
          (or
            (= (count-once-per-objects blindsOpened:dodgeball) (count-once-per-objects greenObjectMovedToRoomCenter:blue_dodgeball:hexagonal_bin) )
          )
        )
      )
    )
  )
)
(:scoring
  (count blindsOpened:pyramid_block)
)
)

(define (game game-id-334) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (and
        (forall (?h - drawer ?tb - doggie_bed)
          (game-conserved
            (not
              (< 3 (distance ?tb upright))
            )
          )
        )
      )
      (forall (?b - ball)
        (exists (?db - curved_wooden_ramp ?c - ball)
          (exists (?w1 - (either beachball floor))
            (and
              (exists (?b - hexagonal_bin)
                (game-conserved
                  (is_setup_object bed)
                )
              )
            )
          )
        )
      )
      (forall (?b1 - hexagonal_bin ?b - block)
        (game-conserved
          (forall (?b - hexagonal_bin)
            (in_motion ?b)
          )
        )
      )
      (and
        (exists (?l1 - block)
          (exists (?l - tan_cube_block ?b6 - red_dodgeball)
            (or
              (game-conserved
                (and
                  (toggled_on ?l1)
                  (and
                    (on ?b6 ?b6)
                    (on bottom_shelf ?l1)
                  )
                )
              )
              (and
                (forall (?r - hexagonal_bin ?b - (either mug wall pyramid_block))
                  (game-conserved
                    (on pillow desk)
                  )
                )
                (exists (?h - hexagonal_bin)
                  (game-optional
                    (above agent ?b6)
                  )
                )
                (exists (?b9 - dodgeball ?c4 - hexagonal_bin ?h - (either cellphone tall_cylindrical_block))
                  (game-conserved
                    (and
                      (or
                        (not
                          (touch ?b6 ?b6)
                        )
                        (not
                          (in_motion ?h)
                        )
                      )
                      (on ?b6 ?h)
                      (> 1 (distance ?h ?b6))
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToChair
      (exists (?t - (either beachball cylindrical_block))
        (then
          (once (not (> 1 (distance ?t ?t)) ) )
        )
      )
    )
    (preference ballThrownToBin
      (at-end
        (agent_holds agent)
      )
    )
  )
)
(:terminal
  (or
    (and
      (>= (count ballThrownToBin:brown) 3 )
      (<= (* (+ 5 )
        )
        2
      )
      (>= 5 7 )
    )
    (> (+ (count-once-per-objects ballThrownToBin:pyramid_block) 3 30 )
      (count ballThrownToBin:beachball)
    )
    (>= (count ballThrownToChair:yellow) 9 )
  )
)
(:scoring
  3
)
)

(define (game game-id-335) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?d - building ?o3 - hexagonal_bin)
      (exists (?h - hexagonal_bin)
        (forall (?d - triangular_ramp)
          (game-conserved
            (agent_holds ?h)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference gameObjectToBin
      (exists (?b10 - hexagonal_bin)
        (then
          (hold (in_motion ?b10) )
          (once (not (and (and (agent_holds ?b10) (forall (?t - hexagonal_bin ?o - hexagonal_bin) (forall (?c - dodgeball) (and (touch ?c ?c) (agent_holds agent) ) ) ) ) (agent_holds ?b10) ) ) )
          (once (not (in_motion ?b10) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (* (count gameObjectToBin:doggie_bed:golfball) 3 )
      (count-once-per-objects gameObjectToBin:blue_dodgeball:hexagonal_bin)
    )
    30
  )
)
(:scoring
  (count gameObjectToBin:pink)
)
)

(define (game game-id-336) (:domain medium-objects-room-v1)
(:setup
  (or
    (and
      (exists (?d - hexagonal_bin)
        (game-conserved
          (in desk ?d)
        )
      )
    )
    (forall (?b4 ?h - (either laptop dodgeball) ?b - hexagonal_bin)
      (and
        (game-optional
          (in_motion agent)
        )
        (and
          (game-optional
            (in ?b ?b)
          )
        )
        (exists (?c - hexagonal_bin ?l - wall)
          (and
            (and
              (and
                (exists (?b - hexagonal_bin)
                  (exists (?h - hexagonal_bin)
                    (game-conserved
                      (in_motion floor)
                    )
                  )
                )
                (exists (?b - (either hexagonal_bin desktop alarm_clock))
                  (game-conserved
                    (on agent ?b)
                  )
                )
                (forall (?b - building)
                  (exists (?h - teddy_bear)
                    (and
                      (and
                        (game-optional
                          (adjacent ?h ?b)
                        )
                        (game-conserved
                          (not
                            (touch ?l ?l)
                          )
                        )
                        (forall (?d - hexagonal_bin)
                          (game-conserved
                            (and
                              (agent_holds ?d)
                              (in ?l bridge_block)
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
            (and
              (and
                (game-conserved
                  (agent_holds ?l)
                )
              )
            )
          )
        )
      )
    )
    (and
      (and
        (game-conserved
          (in_motion desktop)
        )
        (exists (?h - dodgeball ?g - (either cube_block tall_cylindrical_block))
          (exists (?b - hexagonal_bin)
            (and
              (and
                (exists (?c - hexagonal_bin)
                  (game-conserved
                    (on ?g agent)
                  )
                )
              )
            )
          )
        )
      )
      (exists (?b ?p1 - block)
        (and
          (game-optional
            (in_motion desk)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - ball)
      (and
        (preference greenObjectMovedToRoomCenter
          (exists (?l2 - ball)
            (then
              (hold-while (not (adjacent_side ?d ?d agent) ) (on agent ?d) )
              (hold-while (not (< (distance ?l2 ?d) (distance green ?l2)) ) (not (in_motion ?l2) ) )
              (once (and (agent_holds block) (and (on ?d ?l2) (in_motion ?d) (and (adjacent ?l2 desk) (not (and (on agent ?d) (same_type ?l2 ?d) ) ) (not (and (agent_holds ?l2) (not (<= (distance ?d ?l2) (distance_side ?d ?l2 ?d ?l2)) ) ) ) ) ) ) )
            )
          )
        )
      )
    )
    (preference gameObjectToBin
      (exists (?b - ball ?l1 - dodgeball)
        (then
          (once (in_motion ?l1) )
          (hold (adjacent ?l1 ?l1) )
          (once-measure (in_motion ?l1) (distance ?l1 ?l1) )
        )
      )
    )
    (preference throwAttemptFromBehindBlock
      (exists (?l1 ?h - block)
        (then
          (once (agent_holds ?h) )
          (once (agent_holds blue) )
          (once (not (game_start ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count-increasing-measure greenObjectMovedToRoomCenter:beachball) (count-once-per-objects gameObjectToBin:beachball) (count-once-per-objects gameObjectToBin:beachball) 3 (= (+ 7 15 )
        (= (count-same-positions throwAttemptFromBehindBlock:purple) )
        (* (* (/ (count greenObjectMovedToRoomCenter:orange) (+ (+ (* (total-score) (* (count gameObjectToBin:red:basketball) 2 )
                  )
                  (total-time)
                )
                (count throwAttemptFromBehindBlock:beachball:block:dodgeball)
                (* (* 40 20 )
                  (count-once gameObjectToBin:golfball:cube_block)
                  (-
                    0
                    (* 10 4 )
                  )
                  (count greenObjectMovedToRoomCenter:alarm_clock)
                  (< (count-shortest greenObjectMovedToRoomCenter:dodgeball) (count-once greenObjectMovedToRoomCenter:side_table) )
                  (count gameObjectToBin:doggie_bed)
                )
                3
                (* (* (* 6 (count gameObjectToBin:yellow) )
                    (+ (count gameObjectToBin:orange:golfball) (count-once-per-objects gameObjectToBin:basketball) )
                    100
                  )
                  (count throwAttemptFromBehindBlock:blue_dodgeball)
                )
                20
              )
            )
            5
          )
          (* 3 (count-once-per-objects throwAttemptFromBehindBlock:golfball) )
          20
          (count-once-per-objects throwAttemptFromBehindBlock:top_drawer)
          (count greenObjectMovedToRoomCenter:pink_dodgeball)
          (count greenObjectMovedToRoomCenter:dodgeball)
        )
      )
      (* (+ (count greenObjectMovedToRoomCenter:blue_cube_block) (+ (count throwAttemptFromBehindBlock:doggie_bed:dodgeball) (+ (total-time) (external-forall-maximize (total-score) ) (* (+ 10 (count throwAttemptFromBehindBlock:pink_dodgeball) )
                (count-once-per-objects greenObjectMovedToRoomCenter:dodgeball)
              )
              (* (count-same-positions gameObjectToBin:basketball:yellow) 7 )
            )
            2
            (+ (count-once-per-objects greenObjectMovedToRoomCenter:beachball) 3 )
          )
          (count-shortest throwAttemptFromBehindBlock:golfball:brown:green)
          (* 10 -30 )
          (count-once greenObjectMovedToRoomCenter:pyramid_block)
          (count gameObjectToBin:beachball)
        )
        (* (= 10 (* (* (count greenObjectMovedToRoomCenter:dodgeball) (not (- 5 )
                )
              )
              (count gameObjectToBin:dodgeball)
            )
          )
          (total-score)
        )
      )
    )
    (count-once-per-objects gameObjectToBin:pink)
  )
)
(:scoring
  (count-once throwAttemptFromBehindBlock:cube_block)
)
)

(define (game game-id-337) (:domain few-objects-room-v1)
(:setup
  (exists (?x - teddy_bear)
    (game-conserved
      (in_motion floor)
    )
  )
)
(:constraints
  (and
    (preference objectThrownFromRug
      (exists (?w2 - ball)
        (then
          (hold-while (and (not (not (in_motion ?w2) ) ) (on agent ?w2) (agent_holds ?w2) ) (in_motion ?w2) )
          (hold (adjacent_side ?w2 ?w2 ?w2) )
          (hold (< 4 1) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 180 3 (count objectThrownFromRug:beachball:tall_cylindrical_block) 9 3 (count-unique-positions objectThrownFromRug:yellow_pyramid_block) )
    2
  )
)
(:scoring
  10
)
)

(define (game game-id-338) (:domain many-objects-room-v1)
(:setup
  (forall (?b8 - (either blue_cube_block book cd))
    (and
      (and
        (and
          (exists (?b - red_dodgeball)
            (forall (?c4 - dodgeball ?b8 - chair)
              (and
                (and
                  (game-optional
                    (and
                      (agent_holds desk)
                      (agent_holds ?b8)
                      (not
                        (adjacent ?b ?b)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
      (game-conserved
        (not
          (not
            (equal_z_position ?b8 door)
          )
        )
      )
      (and
        (game-conserved
          (adjacent agent ?b8)
        )
        (exists (?b ?d - dodgeball ?o1 - pyramid_block)
          (game-conserved
            (in ?b8 ?b8)
          )
        )
        (game-conserved
          (exists (?o - (either dodgeball yellow))
            (< (distance_side ?o ?b8 ?o) (distance back agent))
          )
        )
        (game-conserved
          (not
            (not
              (faces ?b8 ?b8)
            )
          )
        )
        (game-conserved
          (in_motion agent)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - hexagonal_bin)
      (and
        (preference failedThrowAttempt
          (exists (?ob - ball)
            (then
              (forall-sequence (?b - triangular_ramp ?d - dodgeball ?b3 - doggie_bed ?b3 - hexagonal_bin)
                (then
                  (hold (adjacent pillow ?b3) )
                  (once (not (on ?ob ?b3) ) )
                  (once (touch ?ob bed) )
                )
              )
              (once (< 1 (distance_side upright ?ob ?d)) )
              (once (in ?ob ?ob) )
            )
          )
        )
      )
    )
    (forall (?d - (either doggie_bed cube_block))
      (and
        (preference blindsOpened
          (then
            (once (object_orientation floor ?d) )
            (hold (agent_holds ?d) )
            (hold-while (and (in_motion ?d) (on ?d ?d) ) (adjacent ?d floor) )
            (once (in_motion agent) )
          )
        )
        (preference objectMovedRoomSide
          (then
            (once (opposite ?d ?d) )
          )
        )
      )
    )
    (forall (?g - dodgeball)
      (and
        (preference thrownBallReachesEnd
          (then
            (once (in_motion agent) )
            (hold (not (agent_holds ?g) ) )
            (hold (and (and (not (in_motion ?g) ) (not (is_setup_object ?g) ) ) (on ?g ?g) ) )
          )
        )
      )
    )
    (forall (?g - shelf ?b - pyramid_block ?r1 - cube_block)
      (and
        (preference throwFromBehindChairsInBin
          (exists (?r - (either dodgeball cylindrical_block) ?o2 - blinds)
            (then
              (once (and (same_color ?r1 ?r1) (>= (distance ?r1 ?o2) 2) ) )
              (once (< (distance_side ?o2 ?o2 agent ?r1) (distance room_center desk)) )
              (once (and (and (and (not (agent_holds door) ) (faces ?o2 upright) ) (on side_table agent) (above ?r1 ?o2) ) (not (and (and (not (not (in_motion room_center) ) ) (and (and (in_motion agent) (not (adjacent_side agent ?o2 agent bed) ) ) (agent_holds ?r1) ) ) (and (exists (?bl - wall) (not (not (not (not (= 8 (distance ?bl ?o2) (distance ?r1 rug)) ) ) ) ) ) (agent_holds ?o2) ) ) ) ) )
            )
          )
        )
        (preference ballThrownToRampToBed
          (exists (?b6 - red_dodgeball)
            (then
              (once (not (not (object_orientation ?r1 ?b6) ) ) )
              (once (adjacent ?b6 agent) )
              (once (not (is_setup_object ?r1) ) )
            )
          )
        )
        (preference redDodgeballThrownToBin
          (exists (?p2 - dodgeball)
            (then
              (hold-while (adjacent floor door) (in_motion ?r1) (in_motion ?r1) )
              (once (on ?p2 ?p2) )
              (hold (not (agent_holds ?r1) ) )
            )
          )
        )
      )
    )
    (preference cubeBlockFromBedToShelf
      (exists (?d - shelf)
        (then
          (once (not (not (or (in_motion agent) (not (agent_holds door) ) ) ) ) )
          (once (same_color ?d ?d) )
          (once (in_motion ?d) )
        )
      )
    )
    (forall (?l4 - dodgeball ?h - (either blue_cube_block cube_block))
      (and
        (preference ballThrownToBin
          (exists (?b - hexagonal_bin)
            (then
              (hold (not (agent_holds ?h) ) )
              (once (in_motion ?b) )
              (once (in ?b ?b) )
            )
          )
        )
        (preference blockCorrectlyPicked
          (exists (?b3 - dodgeball)
            (then
              (once (is_setup_object ?h) )
              (once (not (not (and (agent_holds ?b3) (forall (?b - ball) (not (agent_holds ?b) ) ) ) ) ) )
              (hold-while (opposite ?h ?b3) (and (and (above ?h ?h) (not (in_motion door) ) (above ?h ?h) ) (same_type ?b3 rug) ) )
              (once (is_setup_object agent) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (= (+ (count-once-per-external-objects objectMovedRoomSide:beachball:pink) 2 )
    (total-score)
  )
)
(:scoring
  (total-time)
)
)

(define (game game-id-339) (:domain few-objects-room-v1)
(:setup
  (forall (?c - red_dodgeball)
    (game-conserved
      (touch ?c tan)
    )
  )
)
(:constraints
  (and
    (forall (?b5 - golfball ?o4 - chair)
      (and
        (preference throwAttemptKnocksBlock
          (exists (?r - ball ?tb - dodgeball)
            (then
              (once (agent_holds desk) )
              (once (on ?o4 ?tb) )
              (once (open ?o4) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-once-per-objects throwAttemptKnocksBlock:orange) 100 )
    (<= (count-once-per-objects throwAttemptKnocksBlock:pink) 3 )
  )
)
(:scoring
  (count-total throwAttemptKnocksBlock)
)
)

(define (game game-id-340) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (and
        (exists (?d - hexagonal_bin ?d - (either blue_cube_block))
          (and
            (exists (?b - (either alarm_clock mug))
              (and
                (or
                  (game-conserved
                    (not
                      (same_object ?d ?b)
                    )
                  )
                  (exists (?c3 - triangular_ramp ?d - hexagonal_bin)
                    (and
                      (exists (?h - beachball)
                        (forall (?d2 - building)
                          (game-conserved
                            (touch ?d ?d2)
                          )
                        )
                      )
                    )
                  )
                  (and
                    (game-optional
                      (on ?d ?b)
                    )
                    (not
                      (game-optional
                        (in_motion ?d)
                      )
                    )
                  )
                )
              )
            )
          )
        )
        (not
          (exists (?l3 - chair ?b - hexagonal_bin)
            (and
              (game-conserved
                (not
                  (and
                    (in_motion ?b)
                    (in ?b agent)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?r2 - (either basketball golfball) ?h - game_object)
      (and
        (preference throwBallFromOtherBallToBin
          (then
            (once (in_motion ?h) )
            (once (not (adjacent ?h ?h) ) )
            (once (in_motion ?h) )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 4 7 )
)
(:scoring
  (count throwBallFromOtherBallToBin:hexagonal_bin)
)
)

(define (game game-id-341) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (exists (?g - curved_wooden_ramp)
      (adjacent_side ?g ?g ?g)
    )
  )
)
(:constraints
  (and
    (preference objectMoved
      (exists (?b - (either cube_block flat_block) ?h - curved_wooden_ramp)
        (then
          (hold (faces ?h ?h) )
          (hold-while (agent_holds ?h) (agent_holds ?h) )
          (once (same_type upright ?h) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (* 1 (count objectMoved:dodgeball) )
      (* (count objectMoved:pink_dodgeball) (count-once-per-objects objectMoved:dodgeball) )
      5
    )
    (* 3 (* (count-once objectMoved:hexagonal_bin:basketball) (count objectMoved:pink) )
    )
  )
)
(:scoring
  (- (total-time) )
)
)

(define (game game-id-342) (:domain many-objects-room-v1)
(:setup
  (exists (?s - beachball)
    (forall (?t - shelf)
      (game-conserved
        (rug_color_under ?t room_center)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownFromDoor
      (exists (?s - hexagonal_bin)
        (then
          (once (agent_holds ?s) )
          (hold (and (in_motion ?s) (and (agent_holds ?s) (= 0.5 1) ) (not (agent_holds floor) ) (in_motion ?s) ) )
          (hold (in_motion ?s) )
        )
      )
    )
  )
)
(:terminal
  (>= 7 (+ 50 (count ballThrownFromDoor:green) )
  )
)
(:scoring
  5
)
)

(define (game game-id-343) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?o - hexagonal_bin ?t - ball ?db - ball ?c - curved_wooden_ramp)
      (exists (?t - drawer)
        (and
          (forall (?p3 - triangular_ramp)
            (exists (?o2 - hexagonal_bin)
              (game-conserved
                (and
                  (on ?o2 ?o2)
                  (faces bed ?p3)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballOnBedAtEnd
      (exists (?c2 - building)
        (then
          (once (in_motion ?c2) )
          (once (same_object ?c2 rug) )
          (once (not (agent_holds ?c2) ) )
        )
      )
    )
    (preference throwAttempt
      (exists (?w - cube_block)
        (then
          (hold (not (not (and (on back room_center) (same_color ?w desk) ) ) ) )
          (once (not (agent_holds ?w) ) )
          (hold (adjacent ?w ?w) )
        )
      )
    )
  )
)
(:terminal
  (>= (- (count-total ballOnBedAtEnd:dodgeball) )
    30
  )
)
(:scoring
  (count-longest throwAttempt:dodgeball)
)
)

(define (game game-id-344) (:domain few-objects-room-v1)
(:setup
  (forall (?b1 - curved_wooden_ramp)
    (forall (?h - game_object)
      (and
        (and
          (and
            (and
              (forall (?l - curved_wooden_ramp)
                (game-optional
                  (and
                    (agent_holds ?b1)
                    (agent_holds ?h)
                  )
                )
              )
              (and
                (game-optional
                  (game_over )
                )
              )
            )
            (game-conserved
              (same_type ?b1 agent)
            )
          )
          (and
            (forall (?bl - block)
              (and
                (exists (?h - dodgeball)
                  (exists (?p3 - hexagonal_bin)
                    (game-conserved
                      (and
                        (agent_holds ?h)
                        (adjacent_side ?h door ?bl)
                      )
                    )
                  )
                )
              )
            )
            (not
              (exists (?h - curved_wooden_ramp ?w2 - block)
                (and
                  (exists (?b6 - block)
                    (game-optional
                      (in ?h ?h)
                    )
                  )
                  (game-conserved
                    (toggled_on ?w2)
                  )
                )
              )
            )
          )
        )
        (game-conserved
          (not
            (agent_holds ?b1)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToBin
      (exists (?c - green_triangular_ramp ?c2 - ball)
        (then
          (hold-while (and (and (on ?c2 ?c2) (above bed desk) ) (agent_holds ?c2) ) (= (distance ?c2 ?c2) (distance ?c2 ?c2) (distance ?c2 ?c2)) )
          (hold (adjacent ?c2 ?c2) )
          (hold (not (same_color ?c2 ?c2) ) )
        )
      )
    )
    (preference dodgeballsInPlace
      (exists (?s ?b ?d ?b ?o ?o ?s ?w1 ?o ?w - pyramid_block ?h - wall)
        (then
          (once (and (in ?h pink) ) )
          (once (and (and (not (and (in_motion ?h) (or (and (agent_holds desk) (same_color ?h ?h) ) ) ) ) (and (and (same_color desk bed) (and (agent_holds brown) (not (opposite ?h rug) ) ) (and (and (broken ?h) (touch ?h agent) ) (in_motion front) (not (in_motion ?h) ) ) ) ) ) ) )
          (once (in_motion ?h) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects dodgeballsInPlace:golfball) (count throwToBin:basketball) )
)
(:scoring
  2
)
)

(define (game game-id-345) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?d - (either cube_block dodgeball alarm_clock) ?r - ball ?t - dodgeball ?o - block ?w2 - hexagonal_bin)
      (exists (?b2 - (either main_light_switch dodgeball))
        (game-conserved
          (in_motion ?w2)
        )
      )
    )
    (forall (?b5 - pillow ?w - chair)
      (game-optional
        (on ?w ?w)
      )
    )
  )
)
(:constraints
  (and
    (preference matchingBuildingBuilt
      (exists (?d2 - (either cd hexagonal_bin bridge_block key_chain) ?p1 - chair)
        (then
          (once (in agent ?p1) )
          (once (in_motion ?p1) )
          (once (and (forall (?r - teddy_bear) (in_motion ?r) ) (on bed ?p1) (opposite ?p1 rug) (on ?p1 ?p1) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (not (* (count-once-per-objects matchingBuildingBuilt:basketball) 3 )
      )
      60
    )
    (count matchingBuildingBuilt:pink)
  )
)
(:scoring
  (* (external-forall-maximize (total-score) ) 10 )
)
)

(define (game game-id-346) (:domain medium-objects-room-v1)
(:setup
  (exists (?d - hexagonal_bin)
    (game-conserved
      (adjacent bed ?d)
    )
  )
)
(:constraints
  (and
    (forall (?l2 - hexagonal_bin)
      (and
        (preference throwBallToDoggieBedOffWall
          (exists (?o3 - doggie_bed)
            (then
              (hold (exists (?h - wall) (in_motion ?o3) ) )
              (hold (same_object ?o3 ?l2) )
              (once (in_motion ?o3) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (not
      (or
        (>= (- 2 (count-once-per-objects throwBallToDoggieBedOffWall:red) ) (count-once-per-objects throwBallToDoggieBedOffWall:pink:basketball) )
        (or
          (>= (count throwBallToDoggieBedOffWall:white:basketball:red) (* (* (+ (count throwBallToDoggieBedOffWall:dodgeball) (* (external-forall-minimize (count-measure throwBallToDoggieBedOffWall:basketball) ) (count throwBallToDoggieBedOffWall:dodgeball) )
                )
                6
              )
              (total-time)
            )
          )
          (>= (count throwBallToDoggieBedOffWall) (count throwBallToDoggieBedOffWall:pink:doggie_bed) )
          (< 3 (+ (count-once-per-objects throwBallToDoggieBedOffWall:pink_dodgeball) (count throwBallToDoggieBedOffWall:beachball) )
          )
        )
      )
    )
    (or
      (>= (count throwBallToDoggieBedOffWall:beachball:green) (total-score) )
      (or
        (>= (+ 300 (* (* (count-once throwBallToDoggieBedOffWall:rug) (external-forall-maximize (count throwBallToDoggieBedOffWall:basketball) ) )
              (+ (count-once-per-objects throwBallToDoggieBedOffWall:dodgeball) (count-once-per-objects throwBallToDoggieBedOffWall:green) (* (count throwBallToDoggieBedOffWall:dodgeball) (count-once-per-objects throwBallToDoggieBedOffWall:yellow_cube_block) (count throwBallToDoggieBedOffWall:blue_pyramid_block:beachball) )
                (count-once-per-objects throwBallToDoggieBedOffWall:dodgeball:yellow)
              )
            )
          )
          0
        )
      )
      (> (+ (external-forall-maximize 10 ) 5 (- (+ (total-score) 5 (* (+ (count throwBallToDoggieBedOffWall:dodgeball:beachball) (external-forall-minimize 30 ) (* 4 (* 1 (* (* (+ (+ 2 (* 3 (count-once-per-external-objects throwBallToDoggieBedOffWall:beachball) )
                            )
                            (count throwBallToDoggieBedOffWall:pink)
                          )
                          15
                        )
                        5
                      )
                    )
                    (+ (- (total-time) )
                      (* 8 (count-same-positions throwBallToDoggieBedOffWall) )
                    )
                  )
                )
                (+ (total-score) 3 )
              )
            )
          )
        )
        (count throwBallToDoggieBedOffWall:dodgeball)
      )
    )
    (> (* (- (+ (count throwBallToDoggieBedOffWall:yellow_cube_block) 2 )
        )
        (count-once-per-objects throwBallToDoggieBedOffWall:dodgeball)
      )
      10
    )
  )
)
(:scoring
  5
)
)

(define (game game-id-347) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (exists (?c - (either book teddy_bear pen) ?o - teddy_bear)
        (or
          (game-optional
            (and
              (on ?o ?o)
              (in_motion ?o)
              (same_object ?o side_table)
              (not
                (and
                  (and
                    (adjacent ?o ?o)
                    (not
                      (exists (?w2 - block)
                        (not
                          (and
                            (and
                              (on ?w2 ?o)
                              (not
                                (and
                                  (agent_holds agent)
                                  (not
                                    (not
                                      (agent_holds ?w2)
                                    )
                                  )
                                )
                              )
                            )
                            (broken agent)
                            (agent_holds ?o)
                            (equal_x_position ?w2 ?w2)
                            (adjacent desk ?o)
                            (in_motion ?o)
                          )
                        )
                      )
                    )
                  )
                  (on agent ?o)
                )
              )
              (not
                (agent_holds ?o)
              )
              (or
                (in_motion ?o)
                (and
                  (not
                    (and
                      (agent_holds bed)
                      (on desk ?o)
                    )
                  )
                )
              )
              (and
                (in_motion ?o)
                (and
                  (not
                    (agent_holds agent)
                  )
                  (not
                    (not
                      (same_type bed ?o)
                    )
                  )
                )
                (not
                  (in ?o ?o)
                )
                (agent_holds ?o)
                (and
                  (same_object ?o ?o)
                  (not
                    (and
                      (not
                        (agent_holds ?o)
                      )
                      (game_start )
                    )
                  )
                )
                (< 1 2)
                (and
                  (not
                    (faces bed ?o)
                  )
                  (in ?o ?o)
                )
              )
            )
          )
          (and
            (exists (?b9 - block ?b10 - hexagonal_bin)
              (game-conserved
                (not
                  (equal_x_position ?b10 ?o)
                )
              )
            )
            (game-conserved
              (on floor ?o)
            )
          )
          (and
            (forall (?b4 - game_object)
              (and
                (exists (?o - ball)
                  (or
                    (game-optional
                      (and
                        (not
                          (exists (?c2 - game_object)
                            (in_motion ?o)
                          )
                        )
                        (on ?b4 desk)
                      )
                    )
                    (game-conserved
                      (on ?b4 desk)
                    )
                    (and
                      (forall (?g - (either pink key_chain blue_cube_block) ?o - hexagonal_bin ?l - hexagonal_bin)
                        (and
                          (game-conserved
                            (agent_holds ?b4)
                          )
                          (game-optional
                            (in_motion agent)
                          )
                          (game-conserved
                            (agent_holds ?l)
                          )
                        )
                      )
                      (game-conserved
                        (in_motion ?o)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectInBuilding
      (exists (?h - hexagonal_bin)
        (then
          (hold (and (in ?h ?h) (in_motion rug) ) )
          (once (opposite ?h ?h) )
          (once (and (adjacent ?h ?h) (opposite ?h ?h) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* (count-once-per-objects objectInBuilding:basketball:beachball) (count objectInBuilding:pink_dodgeball:white) )
      (external-forall-minimize
        16
      )
    )
    (>= (- (count-total objectInBuilding:blue_dodgeball) )
      (+ (count-overlapping objectInBuilding:beachball:basketball) (external-forall-maximize (* 3 (* (not 3 ) (count objectInBuilding:golfball) )
          )
        )
      )
    )
  )
)
(:scoring
  (total-time)
)
)

(define (game game-id-348) (:domain many-objects-room-v1)
(:setup
  (exists (?o2 - hexagonal_bin ?d - dodgeball)
    (game-conserved
      (not
        (opposite rug ?d)
      )
    )
  )
)
(:constraints
  (and
    (preference thrownObjectHitsComputer
      (exists (?b ?w - curved_wooden_ramp)
        (then
          (once (in_motion ?w) )
          (hold (exists (?d - shelf) (not (agent_holds ?d) ) ) )
          (once (not (not (and (not (not (agent_holds ?w) ) ) (not (in_motion ?w) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (count-total thrownObjectHitsComputer) 10 )
      (>= (count-shortest thrownObjectHitsComputer:alarm_clock:pink_dodgeball) 2 )
    )
  )
)
(:scoring
  0
)
)

(define (game game-id-349) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (game_over )
  )
)
(:constraints
  (and
    (forall (?o - hexagonal_bin)
      (and
        (preference cubeThrownToBin
          (exists (?b - chair ?h - shelf ?o2 - dodgeball)
            (then
              (once (same_color ?o2 desk) )
              (once (not (not (not (agent_holds east_sliding_door) ) ) ) )
              (hold (on ?o2 ?o) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 15 (* 10 60 )
    )
  )
)
(:scoring
  2
)
)

(define (game game-id-350) (:domain medium-objects-room-v1)
(:setup
  (forall (?w1 ?b7 - dodgeball ?h - dodgeball ?p3 - hexagonal_bin ?b8 - doggie_bed)
    (and
      (game-optional
        (and
          (on ?b8 ?b8)
          (in_motion ?b8)
        )
      )
      (and
        (and
          (forall (?b - hexagonal_bin ?b6 - hexagonal_bin)
            (or
              (forall (?d - color ?b9 - (either cube_block dodgeball))
                (game-optional
                  (and
                    (on ?b9 agent)
                    (not
                      (and
                        (adjacent ?b8 ?b8)
                        (agent_holds agent)
                      )
                    )
                  )
                )
              )
              (and
                (or
                  (forall (?bl - curved_wooden_ramp ?c - (either desktop golfball) ?o - dodgeball)
                    (game-optional
                      (and
                        (and
                          (on pink_dodgeball ?b6)
                          (not
                            (not
                              (and
                                (and
                                  (forall (?d - block)
                                    (not
                                      (rug_color_under rug ?b8)
                                    )
                                  )
                                  (on ?o green_golfball)
                                )
                                (not
                                  (not
                                    (touch ?b8 ?b8)
                                  )
                                )
                                (and
                                  (in_motion ?o)
                                  (same_object room_center ?o)
                                )
                                (on ?b6 ?b8)
                              )
                            )
                          )
                        )
                        (is_setup_object ?b6)
                      )
                    )
                  )
                )
                (and
                  (exists (?d - hexagonal_bin)
                    (exists (?c6 ?d - dodgeball ?d - hexagonal_bin ?g - hexagonal_bin ?h - dodgeball)
                      (game-conserved
                        (and
                          (and
                            (in_motion ?h)
                            (in_motion ?b8)
                            (and
                              (and
                                (= 2 1)
                                (on desk south_west_corner)
                              )
                              (forall (?c - teddy_bear)
                                (in_motion ?b8)
                              )
                              (in_motion ?h)
                              (game_over )
                            )
                          )
                          (and
                            (and
                              (< (distance agent ?h) 9)
                              (not
                                (forall (?o - pyramid_block)
                                  (not
                                    (same_type ?b8 top_shelf)
                                  )
                                )
                              )
                            )
                            (agent_holds ?d)
                          )
                          (in door ?b6)
                          (on ?b6 ?b6)
                        )
                      )
                    )
                  )
                  (forall (?h - teddy_bear ?l - doggie_bed)
                    (game-conserved
                      (in_motion ?b8)
                    )
                  )
                  (exists (?p - hexagonal_bin ?b - ball)
                    (forall (?p3 - game_object)
                      (exists (?s - hexagonal_bin ?b10 - dodgeball ?o3 - hexagonal_bin)
                        (exists (?o - hexagonal_bin)
                          (and
                            (exists (?o1 - ball)
                              (exists (?b10 - dodgeball)
                                (game-optional
                                  (not
                                    (on ?o1 agent)
                                  )
                                )
                              )
                            )
                            (exists (?b - wall)
                              (game-conserved
                                (not
                                  (not
                                    (adjacent ?b8 blinds)
                                  )
                                )
                              )
                            )
                            (and
                              (exists (?db - hexagonal_bin)
                                (game-optional
                                  (and
                                    (not
                                      (not
                                        (agent_holds ?db)
                                      )
                                    )
                                    (agent_holds agent)
                                  )
                                )
                              )
                            )
                            (game-conserved
                              (equal_z_position ?b6 ?b8)
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
        (or
          (exists (?b - block ?l - (either cellphone basketball dodgeball) ?b - dodgeball)
            (exists (?o5 - building)
              (game-optional
                (agent_holds ?b8)
              )
            )
          )
          (game-optional
            (not
              (not
                (< (distance ?b8 pink_dodgeball) 8)
              )
            )
          )
        )
      )
      (exists (?l2 - block ?o1 - cube_block)
        (game-conserved
          (>= 1 3)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?w2 - dodgeball ?d - ball)
        (then
          (hold-while (in_motion ?d) (in_motion ?d) )
          (hold (or (in ?d ?d) (not (not (and (and (and (not (adjacent rug front) ) (in ?d agent) ) (same_type ?d ?d) ) (< (distance ?d ?d) 2) (in_motion ?d) (touch ?d bed) (agent_holds ?d) (and (= 1 4) (in_motion rug) ) (between agent ?d ?d) ) ) ) ) )
          (hold-while (in ?d desk) (not (agent_holds side_table) ) )
        )
      )
    )
  )
)
(:terminal
  (> (count-once-per-external-objects throwBallToBin:hexagonal_bin:book) 5 )
)
(:scoring
  (external-forall-minimize
    (total-score)
  )
)
)

(define (game game-id-351) (:domain many-objects-room-v1)
(:setup
  (exists (?c ?b8 - ball ?o ?h ?o2 ?p ?t - wall)
    (and
      (forall (?o - cube_block)
        (and
          (not
            (and
              (game-optional
                (in_motion ?h)
              )
            )
          )
          (and
            (game-optional
              (in_motion ?t)
            )
            (forall (?p - game_object)
              (and
                (and
                  (exists (?w1 - hexagonal_bin)
                    (and
                      (and
                        (exists (?c - ball ?w1 ?o1 - game_object)
                          (game-conserved
                            (in_motion ?t)
                          )
                        )
                        (exists (?b - red_pyramid_block)
                          (and
                            (and
                              (exists (?c2 - cube_block)
                                (exists (?h - (either game_object floor credit_card))
                                  (forall (?w - hexagonal_bin ?c6 - chair ?g - (either cube_block wall yellow_cube_block))
                                    (game-conserved
                                      (adjacent_side rug room_center ?o2 ?t)
                                    )
                                  )
                                )
                              )
                              (game-conserved
                                (not
                                  (in_motion ?t)
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                  (exists (?h - hexagonal_bin)
                    (exists (?b - hexagonal_bin ?r ?g ?d1 - ball)
                      (exists (?o - hexagonal_bin)
                        (and
                          (exists (?c - beachball ?b - cube_block)
                            (game-optional
                              (rug_color_under ?o2 ?g)
                            )
                          )
                          (and
                            (game-optional
                              (on ?o2 ?t)
                            )
                          )
                          (game-conserved
                            (agent_holds ?t)
                          )
                        )
                      )
                    )
                  )
                )
                (forall (?r - game_object ?g ?h - ball)
                  (exists (?c1 ?d1 - triangular_ramp)
                    (game-optional
                      (in_motion ?d1)
                    )
                  )
                )
              )
            )
          )
        )
      )
      (game-conserved
        (not
          (adjacent ?o ?p)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference beachballOnRug
      (exists (?s - (either pyramid_block pillow) ?b - beachball)
        (then
          (hold (in_motion ?b) )
          (once (not (on ?b ?b) ) )
          (hold-while (on ?b ?b) (not (not (in_motion ?b) ) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (>= (external-forall-minimize 300 ) 3 )
    )
  )
)
(:scoring
  (count-once-per-objects beachballOnRug:dodgeball:orange)
)
)

(define (game game-id-352) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (exists (?b7 - hexagonal_bin)
        (forall (?g - dodgeball)
          (exists (?o - hexagonal_bin ?d - teddy_bear)
            (game-conserved
              (in ?g bed)
            )
          )
        )
      )
    )
    (and
      (forall (?p1 - hexagonal_bin ?h - hexagonal_bin)
        (forall (?b - pillow)
          (game-optional
            (< (distance ?h door) 8)
          )
        )
      )
    )
    (forall (?r2 - (either golfball))
      (and
        (exists (?l - dodgeball)
          (game-conserved
            (touch ?l ?r2)
          )
        )
        (game-conserved
          (in_motion ?r2)
        )
        (exists (?h - hexagonal_bin)
          (and
            (game-conserved
              (agent_holds room_center)
            )
            (game-conserved
              (not
                (in_motion ?h)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blocksInPlace
      (exists (?h - (either flat_block laptop))
        (then
          (hold (on ?h ?h) )
          (hold-while (on ?h ?h) (or (< 0.5 10) (and (and (not (faces ?h ?h) ) (in_motion door) ) (in_motion ?h) ) ) )
          (once (equal_z_position ?h front) )
        )
      )
    )
  )
)
(:terminal
  (<= (count blocksInPlace:dodgeball) (* (+ 3 (count blocksInPlace:dodgeball:wall:beachball) )
      (+ (count-once-per-objects blocksInPlace:dodgeball) (count blocksInPlace:hexagonal_bin) )
      (count blocksInPlace:pyramid_block:golfball:yellow)
    )
  )
)
(:scoring
  (external-forall-maximize
    (count-once-per-objects blocksInPlace:dodgeball)
  )
)
)

(define (game game-id-353) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?t - dodgeball ?g - pillow ?d ?c - game_object)
      (game-optional
        (touch ?d bed)
      )
    )
  )
)
(:constraints
  (and
    (preference objectWithMatchingColor
      (exists (?c ?b - curved_wooden_ramp)
        (at-end
          (and
            (and
              (or
                (not
                  (adjacent east_sliding_door ?b)
                )
                (adjacent_side room_center agent agent)
              )
              (adjacent desk ?c)
            )
            (not
              (not
                (opposite ?c room_center)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= 5 (count-once-per-objects objectWithMatchingColor:basketball) )
      (>= (count-increasing-measure objectWithMatchingColor:blue_dodgeball) (count objectWithMatchingColor:dodgeball) )
      (>= (count-once-per-objects objectWithMatchingColor:pyramid_block) (count objectWithMatchingColor:dodgeball) )
    )
    (> 10 10 )
    (>= 2 (count objectWithMatchingColor:triangle_block:purple) )
  )
)
(:scoring
  3
)
)

(define (game game-id-354) (:domain many-objects-room-v1)
(:setup
  (exists (?h - (either yellow_cube_block beachball cube_block flat_block dodgeball dodgeball mug))
    (exists (?o - beachball)
      (and
        (game-conserved
          (same_object ?h ?o)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToBed
      (exists (?h - cube_block)
        (then
          (hold (adjacent ?h ?h) )
          (once (touch ?h pink) )
          (once (agent_holds ?h) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (count ballThrownToBed:red) (count ballThrownToBed:golfball) )
  )
)
(:scoring
  10
)
)

(define (game game-id-355) (:domain many-objects-room-v1)
(:setup
  (exists (?b - chair ?b4 - cylindrical_block)
    (game-conserved
      (not
        (and
          (not
            (in_motion bed)
          )
          (agent_holds ?b4)
          (agent_holds ?b4)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownThroughRampAndBlocksToBin
      (exists (?h - cube_block)
        (then
          (hold (in_motion front) )
          (once (not (or (rug_color_under ?h ?h) (not (and (not (< (distance ?h ?h) 1) ) ) ) ) ) )
          (hold (not (and (agent_holds ?h) (broken ?h) ) ) )
        )
      )
    )
    (preference throwAttempt
      (exists (?b9 - dodgeball)
        (at-end
          (in_motion agent)
        )
      )
    )
    (preference bounceBallToBin
      (exists (?w2 - wall ?w1 - cube_block)
        (then
          (once (same_color ?w1 ?w1) )
          (hold (not (same_type ?w1 ?w1) ) )
          (once (same_color agent ?w1) )
        )
      )
    )
  )
)
(:terminal
  (<= (count-once-per-objects ballThrownThroughRampAndBlocksToBin:hexagonal_bin:yellow) (external-forall-maximize (- (+ (count bounceBallToBin:hexagonal_bin) 8 (* 3 (count throwAttempt:yellow) )
          (+ (count-once-per-objects ballThrownThroughRampAndBlocksToBin:blue:yellow) (count bounceBallToBin) )
          (+ (count-once-per-objects bounceBallToBin:dodgeball) 10 )
          3
        )
      )
    )
  )
)
(:scoring
  (+ (count ballThrownThroughRampAndBlocksToBin:doggie_bed) 3 )
)
)

(define (game game-id-356) (:domain few-objects-room-v1)
(:setup
  (forall (?p2 - cube_block ?o2 - hexagonal_bin)
    (game-conserved
      (not
        (in_motion ?o2)
      )
    )
  )
)
(:constraints
  (and
    (forall (?o - dodgeball ?b ?h - building)
      (and
        (preference ballKnocksTeddy
          (exists (?l2 - shelf ?r - dodgeball)
            (at-end
              (adjacent ?h ?h)
            )
          )
        )
        (preference objectLandsInBin
          (exists (?d - beachball)
            (then
              (hold-while (on ?b ?b) (in_motion desk) (not (and (and (touch ?h ?h) (exists (?w - hexagonal_bin) (and (and (not (in_motion ?d) ) (in_motion desk) ) (on ?d ?d) ) ) ) (and (agent_holds bed) (and (and (in ?h ?d) (and (and (>= 2 1) (not (and (not (not (on ?b pink_dodgeball) ) ) (not (not (not (agent_holds ?d) ) ) ) ) ) ) (<= 1 (distance ?d ?d)) (in_motion desk) (not (equal_x_position desk ?b) ) (touch ?d ?b) (and (agent_holds ?d) (and (not (and (touch ?h ?b) (and (not (< 1 2) ) (adjacent agent ?h) ) (exists (?b - curved_wooden_ramp ?p - curved_wooden_ramp) (in_motion ?d) ) ) ) (not (in_motion ?d) ) ) ) (touch ?h front) ) (not (rug_color_under ?d ?b) ) (and (agent_holds ?b) (and (not (agent_holds desk) ) (is_setup_object ?h) ) ) ) (and (in_motion brown) (agent_holds ?d) ) ) ) ) ) (and (in agent ?b) (in_motion ?h) ) )
              (once (in_motion ?b) )
              (hold (agent_holds block) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count-once-per-objects objectLandsInBin:beachball:dodgeball) (count-shortest objectLandsInBin:green) )
    4
  )
)
(:scoring
  (count objectLandsInBin:blue)
)
)

(define (game game-id-357) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?b - hexagonal_bin)
      (and
        (exists (?d - dodgeball)
          (exists (?h - bridge_block)
            (and
              (and
                (not
                  (exists (?b7 - pyramid_block ?g - curved_wooden_ramp)
                    (exists (?b - doggie_bed ?t - curved_wooden_ramp)
                      (exists (?g - (either basketball cellphone main_light_switch))
                        (and
                          (game-optional
                            (and
                              (or
                                (in_motion room_center)
                              )
                              (on ?t ?h)
                            )
                          )
                          (forall (?w1 ?b9 - wall)
                            (game-optional
                              (on ?d ?t)
                            )
                          )
                          (and
                            (not
                              (forall (?b - triangular_ramp)
                                (forall (?b - chair ?h - (either cube_block cd cd))
                                  (and
                                    (game-conserved
                                      (not
                                        (same_object left ?h)
                                      )
                                    )
                                    (forall (?o - dodgeball ?o3 ?w ?b1 ?s ?b8 - hexagonal_bin)
                                      (forall (?d - building ?l - game_object)
                                        (and
                                          (exists (?o1 - ball)
                                            (exists (?b4 - hexagonal_bin)
                                              (and
                                                (or
                                                  (exists (?h - shelf ?o ?tb - cube_block)
                                                    (and
                                                      (forall (?t - doggie_bed ?b - dodgeball ?s - game_object)
                                                        (game-optional
                                                          (not
                                                            (and
                                                              (not
                                                                (not
                                                                  (in_motion ?o3)
                                                                )
                                                              )
                                                              (not
                                                                (and
                                                                  (above room_center ?d)
                                                                  (in_motion front_left_corner)
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                  (forall (?h - shelf)
                                                    (exists (?bl - ball)
                                                      (forall (?tb - hexagonal_bin)
                                                        (game-conserved
                                                          (agent_holds ?t)
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                                (forall (?h - dodgeball ?r - block ?w1 - doggie_bed)
                                                  (exists (?c - hexagonal_bin)
                                                    (game-conserved
                                                      (and
                                                        (not
                                                          (and
                                                            (between ?w1 ?d ?b1)
                                                            (not
                                                              (agent_holds ?b1)
                                                            )
                                                            (on ?o3 ?l)
                                                          )
                                                        )
                                                        (adjacent ?s ?o3)
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                            (and
                              (game-conserved
                                (and
                                  (agent_holds ?d)
                                  (and
                                    (touch ?g pink_dodgeball)
                                    (in_motion door)
                                  )
                                  (and
                                    (not
                                      (and
                                        (on ?g ?g)
                                        (and
                                          (not
                                            (< 1 7)
                                          )
                                          (not
                                            (not
                                              (not
                                                (agent_holds ?g)
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                    (and
                                      (in_motion ?b)
                                      (and
                                        (exists (?c - chair)
                                          (< (distance ?b ?g) (distance_side ?t ?d ?g ?g))
                                        )
                                        (or
                                          (agent_holds ?b)
                                          (not
                                            (in_motion block)
                                          )
                                        )
                                      )
                                      (and
                                        (and
                                          (adjacent ?h ?b)
                                        )
                                        (in_motion ?t)
                                      )
                                      (and
                                        (< (distance ?d ?t) 1)
                                        (not
                                          (on ?t ?t)
                                        )
                                        (agent_holds ?h)
                                      )
                                      (touch ?h ?g)
                                      (< 6 (distance_side ?h ?h agent ?h))
                                    )
                                    (touch ?g ?d)
                                  )
                                )
                              )
                              (game-conserved
                                (agent_holds ?b)
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
              (and
                (and
                  (and
                    (game-conserved
                      (exists (?h - doggie_bed ?b - (either lamp dodgeball) ?b - hexagonal_bin)
                        (in_motion ?d)
                      )
                    )
                  )
                  (game-optional
                    (and
                      (agent_holds ?d)
                      (not
                        (= (distance ?b desk) 5)
                      )
                      (in_motion ?b)
                      (agent_holds ?b)
                    )
                  )
                  (and
                    (and
                      (and
                        (exists (?b - game_object ?c - red_dodgeball)
                          (exists (?h - hexagonal_bin ?c4 - dodgeball)
                            (forall (?d - game_object)
                              (and
                                (not
                                  (game-optional
                                    (and
                                      (not
                                        (and
                                          (< (distance ?b agent) (distance ?d ?h))
                                        )
                                      )
                                      (in room_center ?c4)
                                      (adjacent ?b ?c4)
                                    )
                                  )
                                )
                                (and
                                  (or
                                    (game-optional
                                      (agent_holds ?c)
                                    )
                                  )
                                  (and
                                    (exists (?l2 - hexagonal_bin)
                                      (exists (?c - hexagonal_bin)
                                        (or
                                          (and
                                            (game-conserved
                                              (and
                                                (not
                                                  (in_motion agent)
                                                )
                                                (same_type ?h ?b)
                                              )
                                            )
                                            (and
                                              (and
                                                (exists (?c ?o1 - building)
                                                  (and
                                                    (exists (?d - ball ?l4 - wall ?b - hexagonal_bin ?l4 - (either cellphone laptop))
                                                      (game-conserved
                                                        (in_motion ?o1)
                                                      )
                                                    )
                                                  )
                                                )
                                                (game-optional
                                                  (same_object ?h ?h)
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                    (game-conserved
                                      (agent_holds ?c4)
                                    )
                                    (game-optional
                                      (not
                                        (adjacent ?h ?d)
                                      )
                                    )
                                  )
                                )
                                (exists (?h - shelf)
                                  (game-optional
                                    (adjacent ?c room_center)
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
              (exists (?l4 - game_object ?r - hexagonal_bin)
                (and
                  (not
                    (and
                      (and
                        (and
                          (and
                            (game-conserved
                              (and
                                (in ?b ?b)
                                (exists (?b3 ?h - (either dodgeball flat_block doggie_bed))
                                  (not
                                    (in_motion ?r)
                                  )
                                )
                                (not
                                  (agent_holds ?r)
                                )
                              )
                            )
                          )
                        )
                      )
                      (game-optional
                        (touch ?h agent)
                      )
                    )
                  )
                  (and
                    (exists (?d - (either bridge_block golfball) ?ob - (either cylindrical_block dodgeball basketball))
                      (exists (?w - (either golfball blue_cube_block))
                        (game-conserved
                          (and
                            (on room_center ?d)
                            (on ?d ?b)
                          )
                        )
                      )
                    )
                    (forall (?b - doggie_bed ?p - hexagonal_bin)
                      (forall (?o - red_pyramid_block ?g - ball)
                        (forall (?b2 - hexagonal_bin ?r - game_object ?o - hexagonal_bin)
                          (and
                            (exists (?d - block)
                              (exists (?h - teddy_bear)
                                (forall (?g - hexagonal_bin)
                                  (forall (?w1 - beachball)
                                    (exists (?x - dodgeball)
                                      (and
                                        (game-optional
                                          (not
                                            (in_motion ?h)
                                          )
                                        )
                                        (and
                                          (forall (?b4 - block)
                                            (and
                                              (exists (?b8 ?o ?c ?c2 - (either cube_block blue_cube_block key_chain) ?l - sliding_door ?c - game_object)
                                                (game-conserved
                                                  (forall (?l - hexagonal_bin)
                                                    (on ?x ?r)
                                                  )
                                                )
                                              )
                                              (game-optional
                                                (agent_holds ?p)
                                              )
                                              (exists (?r ?b - hexagonal_bin)
                                                (and
                                                  (and
                                                    (game-conserved
                                                      (touch ?p ?o)
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                          (game-conserved
                                            (and
                                              (in agent ?x)
                                              (agent_holds ?g)
                                            )
                                          )
                                          (exists (?g - cube_block)
                                            (exists (?b4 - ball ?s ?b ?b ?d ?d - (either laptop chair))
                                              (game-conserved
                                                (in_motion ?d)
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                            (game-conserved
                              (in agent desk)
                            )
                          )
                        )
                      )
                    )
                    (and
                      (and
                        (game-conserved
                          (not
                            (in ?b ?h)
                          )
                        )
                        (and
                          (game-conserved
                            (rug_color_under ?r front)
                          )
                          (game-optional
                            (not
                              (agent_holds agent)
                            )
                          )
                        )
                        (and
                          (forall (?h - blinds)
                            (game-conserved
                              (agent_holds ?b)
                            )
                          )
                          (game-conserved
                            (in_motion ?h)
                          )
                        )
                      )
                      (exists (?o2 - blue_pyramid_block)
                        (exists (?d - ball)
                          (and
                            (and
                              (or
                                (exists (?b - ball ?b - cube_block)
                                  (forall (?c2 - ball ?r - hexagonal_bin)
                                    (and
                                      (and
                                        (forall (?b8 ?h - block ?b - game_object)
                                          (exists (?o - beachball)
                                            (and
                                              (game-optional
                                                (and
                                                  (agent_holds ?d)
                                                  (not
                                                    (and
                                                      (in ?o ?o2)
                                                      (agent_holds bed)
                                                    )
                                                  )
                                                )
                                              )
                                              (game-conserved
                                                (touch ?d ?d)
                                              )
                                            )
                                          )
                                        )
                                      )
                                      (and
                                        (exists (?o4 - doggie_bed ?d - hexagonal_bin ?b - pyramid_block ?h - wall)
                                          (game-optional
                                            (not
                                              (on ?b ?o2)
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                                (game-optional
                                  (is_setup_object ?o2)
                                )
                                (forall (?c - hexagonal_bin)
                                  (exists (?c - cube_block)
                                    (exists (?c3 - game_object)
                                      (game-optional
                                        (touch ?o2 agent)
                                      )
                                    )
                                  )
                                )
                              )
                              (game-optional
                                (on ?o2 ?o2)
                              )
                            )
                            (and
                              (game-optional
                                (and
                                  (and
                                    (in_motion ?r)
                                    (in_motion agent)
                                  )
                                  (on ?o2 ?d)
                                )
                              )
                              (or
                                (forall (?b1 - cube_block)
                                  (game-optional
                                    (touch ?b1 ?h)
                                  )
                                )
                                (exists (?o - beachball ?c - doggie_bed)
                                  (game-conserved
                                    (rug_color_under ?h ?c)
                                  )
                                )
                                (game-conserved
                                  (not
                                    (in_motion ?d)
                                  )
                                )
                              )
                              (game-conserved
                                (in_motion ?d)
                              )
                            )
                            (game-conserved
                              (not
                                (exists (?l - curved_wooden_ramp)
                                  (not
                                    (not
                                      (and
                                        (agent_holds ?o2)
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                      (exists (?r - pillow)
                        (game-conserved
                          (and
                            (adjacent ?d ?r)
                            (agent_holds ?r)
                          )
                        )
                      )
                    )
                    (game-optional
                      (in ?d ?h)
                    )
                    (forall (?d - block)
                      (game-conserved
                        (exists (?c - yellow_cube_block ?o - hexagonal_bin)
                          (agent_holds pink_dodgeball)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToRampToBin
      (exists (?ob - hexagonal_bin)
        (then
          (once (not (in_motion agent) ) )
          (once (and (< (distance floor ?ob) (distance main_light_switch tan)) (< 9 1) ) )
          (hold (not (adjacent agent ?ob) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count throwToRampToBin:brown) (count throwToRampToBin:yellow) )
)
(:scoring
  (* 3 (* 5 (+ (* (* (count-once throwToRampToBin:pyramid_block) (and (count throwToRampToBin:basketball) (* (+ (external-forall-minimize (count throwToRampToBin:yellow) ) (count-once throwToRampToBin:golfball) )
                10
              )
              (count throwToRampToBin:doggie_bed)
            )
          )
          (+ (* (count-once-per-external-objects throwToRampToBin:pink_dodgeball) )
            (* (* 3 (count throwToRampToBin:tall_cylindrical_block) 3 )
              (* (+ 4 (- (count-overlapping throwToRampToBin:hexagonal_bin) (total-score) ) 15 )
                (* 3 (- (* (count throwToRampToBin:blue_pyramid_block) (* (* (+ (total-score) (count throwToRampToBin:blue_dodgeball:dodgeball) )
                          (= 6 (* (+ (total-time) 30 )
                              (count-once-per-objects throwToRampToBin:beachball:purple)
                              2
                              (count throwToRampToBin)
                              (* (count throwToRampToBin:dodgeball) 4 1 (* (count throwToRampToBin:beachball:golfball) (- (* (* 7 (count throwToRampToBin:brown) )
                                      (count throwToRampToBin:pink_dodgeball)
                                    )
                                  )
                                )
                                (external-forall-maximize
                                  20
                                )
                                4
                                (- (total-time) )
                              )
                              (count throwToRampToBin:book)
                              (* 3 (count-increasing-measure throwToRampToBin) )
                              5
                              5
                              (count throwToRampToBin:beachball)
                              (total-score)
                              (< (* (count-once-per-objects throwToRampToBin:dodgeball) 9 )
                                2
                              )
                            )
                          )
                          (count-once throwToRampToBin:side_table)
                        )
                        (* (* (count throwToRampToBin:dodgeball) (> 5 (* (* (external-forall-maximize 8 ) 3 )
                                (and
                                  20
                                )
                              )
                            )
                          )
                          18
                          10
                          3
                          25
                          8
                        )
                        (+ (* (count throwToRampToBin:dodgeball:basketball:red) )
                          (count-same-positions throwToRampToBin:dodgeball:blue_dodgeball)
                        )
                      )
                    )
                  )
                )
              )
              (count-once-per-objects throwToRampToBin:dodgeball)
              (count throwToRampToBin:book)
              (count throwToRampToBin:golfball)
              (count-once-per-external-objects throwToRampToBin:beachball)
            )
          )
        )
        (+ 3 (* (count-once-per-external-objects throwToRampToBin:dodgeball) (count throwToRampToBin:blue_dodgeball:basketball:dodgeball) )
          10
          (count throwToRampToBin:dodgeball)
          (* (* (+ (+ (count-shortest throwToRampToBin:beachball:red) (count-once-per-objects throwToRampToBin:basketball) (count throwToRampToBin:pink_dodgeball) )
                2
              )
              (count throwToRampToBin:yellow:basketball)
            )
            (count-shortest throwToRampToBin:pink:pink_dodgeball)
          )
          (count throwToRampToBin:dodgeball)
        )
      )
    )
  )
)
)

(define (game game-id-358) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?b - hexagonal_bin)
      (forall (?o1 - doggie_bed)
        (exists (?h - game_object)
          (and
            (game-conserved
              (on ?b ?b)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - golfball ?r2 - (either dodgeball))
      (and
        (preference matchingBuildingBuilt
          (exists (?t - ball)
            (at-end
              (on ?r2 bottom_shelf)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-overlapping matchingBuildingBuilt:beachball) (* (count matchingBuildingBuilt) (count matchingBuildingBuilt:white) )
  )
)
(:scoring
  2
)
)

(define (game game-id-359) (:domain medium-objects-room-v1)
(:setup
  (exists (?x - hexagonal_bin)
    (forall (?d - desktop)
      (forall (?c1 - hexagonal_bin)
        (exists (?tb - hexagonal_bin)
          (game-conserved
            (on ?tb ?x)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToDoggieBedOffWall
      (exists (?d - (either desktop basketball) ?t ?d - teddy_bear ?d - cube_block)
        (at-end
          (in_motion ?d)
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* (+ (count throwBallToDoggieBedOffWall:dodgeball) 6 )
        (* (count throwBallToDoggieBedOffWall:tan) (or (+ (count throwBallToDoggieBedOffWall:basketball) (* (count-once-per-objects throwBallToDoggieBedOffWall:pink_dodgeball) 8 )
            )
            (count throwBallToDoggieBedOffWall:dodgeball:dodgeball)
          )
        )
      )
      0
    )
    (>= (* 2 (* (count-same-positions throwBallToDoggieBedOffWall:blue_dodgeball) (external-forall-minimize (- (>= (count-once-per-external-objects throwBallToDoggieBedOffWall:dodgeball) 10 )
              10
            )
          )
        )
      )
      (count-once-per-objects throwBallToDoggieBedOffWall:blue_pyramid_block)
    )
  )
)
(:scoring
  6
)
)

(define (game game-id-360) (:domain few-objects-room-v1)
(:setup
  (exists (?h - hexagonal_bin)
    (or
      (exists (?b - hexagonal_bin)
        (and
          (exists (?h - dodgeball ?b2 - hexagonal_bin ?p - shelf)
            (or
              (exists (?h - (either tall_cylindrical_block doggie_bed) ?c - chair)
                (or
                  (and
                    (and
                      (game-optional
                        (not
                          (and
                            (same_object ?c ?h)
                            (agent_holds ?p)
                            (in_motion ?c)
                          )
                        )
                      )
                    )
                  )
                  (game-conserved
                    (on ?c ?c)
                  )
                  (game-conserved
                    (on ?h ?h)
                  )
                )
              )
              (game-optional
                (rug_color_under ?p ?p)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference castleBuilt
      (exists (?r - dodgeball ?b ?p - tan_cube_block)
        (then
          (once (not (not (on ?p ?p) ) ) )
          (hold (same_type agent agent) )
          (hold (not (< (distance_side ?b room_center ?p) (x_position ?p)) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (= (count castleBuilt:yellow) (* (count castleBuilt:doggie_bed) 3 )
      )
      (>= (external-forall-maximize (count castleBuilt:yellow) ) 1 )
    )
    (not
      (not
        (< (external-forall-maximize 3 ) (* (- (* (count castleBuilt:dodgeball) (total-score) (count-once-per-objects castleBuilt:red) )
            )
            (count castleBuilt:beachball)
          )
        )
      )
    )
  )
)
(:scoring
  (* (count-once castleBuilt:beachball:hexagonal_bin) (* (* 0.7 20 )
      (count castleBuilt:beachball)
      3
      2
    )
  )
)
)

(define (game game-id-361) (:domain many-objects-room-v1)
(:setup
  (exists (?g - game_object)
    (game-optional
      (and
        (not
          (in ?g ?g)
        )
        (< (distance floor ?g) 1)
      )
    )
  )
)
(:constraints
  (and
    (forall (?b ?c - building)
      (and
        (preference thrownBallReachesEnd
          (exists (?l - hexagonal_bin)
            (then
              (once (between ?l ?b rug) )
              (once (not (not (not (agent_holds ?l) ) ) ) )
              (once (is_setup_object ?c) )
            )
          )
        )
      )
    )
    (preference throwBallFromOtherBallToBin
      (exists (?o - (either cd desktop) ?h - cube_block)
        (at-end
          (agent_holds ?h)
        )
      )
    )
    (forall (?s - (either dodgeball top_drawer cube_block))
      (and
        (preference throwAttemptKnocksBlock
          (then
            (once (on ?s ?s) )
            (once (agent_holds ?s) )
            (hold (and (and (same_color ?s ?s) (and (touch ?s ?s) (exists (?c - pillow) (in_motion ?c) ) (and (in ?s ?s) (and (and (and (touch agent ?s) (agent_holds ?s) ) (touch ?s ?s) ) (agent_holds ?s) (in_motion ?s) (is_setup_object ?s) ) ) ) ) (and (not (agent_holds ?s) ) (not (on back ?s) ) (agent_holds ?s) (agent_holds ?s) (and (not (or (not (agent_holds ?s) ) (and (agent_holds bed) (in_motion floor) ) ) ) (agent_holds agent) ) (agent_holds ?s) (on ?s ?s) ) ) )
            (hold (in rug ?s) )
          )
        )
        (preference blockPickedUp
          (exists (?c - hexagonal_bin)
            (then
              (once (in_motion ?s) )
              (hold (in_motion ?c) )
              (hold (and (not (open ?c) ) (agent_holds south_wall) ) )
              (once (agent_holds ?c) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 30 7 )
    (not
      (>= 7 5 )
    )
  )
)
(:scoring
  4
)
)

(define (game game-id-362) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (game_start )
  )
)
(:constraints
  (and
    (forall (?c1 - game_object)
      (and
        (preference dodgeballFromRugToBin
          (exists (?o - (either alarm_clock dodgeball key_chain bridge_block pen) ?o3 ?b4 - hexagonal_bin ?c1 - dodgeball)
            (then
              (hold (in_motion ?c1) )
              (hold (in ?c1 ?c1) )
              (once (not (open ?c1) ) )
            )
          )
        )
        (preference ballThrownFromObjectToBin
          (exists (?l - dodgeball ?o - ball ?s - triangular_ramp ?t1 - curved_wooden_ramp)
            (at-end
              (game_start )
            )
          )
        )
        (preference blockToBinFromRug
          (exists (?w1 - hexagonal_bin)
            (then
              (once (agent_holds ?w1) )
              (hold (and (and (exists (?c1 ?g - (either mug blue_cube_block) ?b8 - hexagonal_bin) (agent_holds ?c1) ) (adjacent ?w1 ?w1) (forall (?c - hexagonal_bin ?o1 - (either pyramid_block dodgeball)) (in_motion ?o1) ) (agent_holds ?w1) ) (and (in_motion ?c1) ) (on ?c1 ?w1) ) )
              (once (and (and (and (and (in ?w1 ?c1) (and (and (and (on agent ?w1) (agent_holds room_center) ) (<= (building_size desk) 4) ) ) (in ?c1 floor) ) (and (on ?w1 bed) (in_motion ?c1) (and (> 1 (distance ?w1 bed)) (and (in_motion ?w1) (adjacent_side agent ?w1 ?c1) ) ) ) (not (forall (?g - curved_wooden_ramp) (and (agent_holds ?w1) (on ?g top_drawer) ) ) ) ) (agent_holds ?c1) ) (and (not (and (adjacent_side ?c1 pink_dodgeball ?c1 ?w1) (on ?w1 ?w1) (agent_holds ?c1) (in_motion ?c1) (in ?c1 ?c1) (adjacent_side ?w1 ?w1 ?c1) (and (< 1 7) ) (and (in ?w1 ?c1) (touch ?w1 ?w1) ) (open ?w1) (in_motion ?w1) ) ) (not (agent_holds ?c1) ) (not (not (and (in_motion agent) (and (game_over ) (in_motion ?c1) ) ) ) ) ) (is_setup_object ?c1) ) )
            )
          )
        )
      )
    )
    (preference throwToBinFromOppositeWall
      (exists (?w - pillow)
        (then
          (once (and (in_motion rug) (and (on ?w desk) (in_motion ?w) ) ) )
        )
      )
    )
    (forall (?r - ball ?o ?g - building ?d - cube_block)
      (and
        (preference beachballBouncedOffRamp
          (exists (?w2 ?g - cube_block)
            (then
              (hold-while (adjacent_side ?w2 agent bridge_block ?d) (< (distance ?w2 ?g) 1) )
              (once (agent_holds ?w2) )
              (once (< (distance ?g agent) 1) )
            )
          )
        )
        (preference objectThrownFromRug
          (at-end
            (adjacent ?d ?d)
          )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (+ (* (count-measure blockToBinFromRug:dodgeball) (total-time) )
      (* 4 (= (+ 2 )
          (count-once-per-objects ballThrownFromObjectToBin:dodgeball)
        )
      )
    )
  )
)
(:scoring
  0.5
)
)

(define (game game-id-363) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (not
        (agent_holds rug)
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - dodgeball)
      (and
        (preference itemsHidingScreens
          (then
            (once (on ?d ?d) )
            (once (agent_holds agent) )
            (once (agent_holds ?d) )
          )
        )
        (preference objectOnBed
          (exists (?h - curved_wooden_ramp)
            (then
              (once (not (and (agent_holds ?h) (on ?d ?d) ) ) )
              (hold (and (not (not (>= (distance ?d floor) 1) ) ) (and (on ?h ?h) (not (in_motion ?h) ) ) ) )
              (once (agent_holds ?h) )
            )
          )
        )
        (preference objectToBinOnFirstTry
          (exists (?b2 - dodgeball)
            (then
              (once (and (in_motion door) (exists (?c4 - hexagonal_bin) (same_type ?c4 ?c4) ) ) )
              (hold (adjacent ?d ?b2) )
              (once (object_orientation top_drawer ?b2) )
            )
          )
        )
      )
    )
    (preference dodgeballThrownToBin
      (exists (?o5 - teddy_bear)
        (then
          (hold (or (not (in ?o5 ?o5) ) ) )
          (once-measure (agent_holds ?o5) (distance ?o5 ?o5) )
          (once (not (agent_holds ?o5) ) )
        )
      )
    )
    (preference throwFromBehindChairsInBin
      (exists (?b5 - wall ?o - dodgeball ?w2 - hexagonal_bin)
        (then
          (once (> (distance blue ?w2) 1) )
          (hold (adjacent ?w2 ?w2) )
          (once (in pink ?w2) )
        )
      )
    )
  )
)
(:terminal
  (or
    (< (= (count throwFromBehindChairsInBin:beachball) (count dodgeballThrownToBin:dodgeball) )
      3
    )
    (or
      (>= (count objectToBinOnFirstTry:pink_dodgeball) 30 )
    )
  )
)
(:scoring
  (count-once-per-external-objects itemsHidingScreens:book)
)
)

(define (game game-id-364) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?c - game_object ?d - hexagonal_bin)
      (and
        (exists (?w - game_object)
          (game-optional
            (in_motion ?w)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c1 - building)
      (and
        (preference throwToBin
          (then
            (hold (in ?c1 ?c1) )
            (hold (on ?c1 ?c1) )
            (once (agent_holds ?c1) )
          )
        )
      )
    )
    (forall (?h - dodgeball)
      (and
        (preference throwFromDoorToBin
          (exists (?b - teddy_bear ?p3 - building)
            (then
              (hold-while (and (exists (?d - dodgeball) (< (distance_side ?p3 ?p3 ?d ?h) 6) ) (and (not (in_motion ?h) ) (in_motion ?h) (in_motion ?h) ) ) (equal_x_position bed ?h) )
              (once (is_setup_object desk) )
              (hold (in_motion ?p3) )
              (once (not (in_motion ?h) ) )
            )
          )
        )
        (preference blockOnBlockInTowerAtEnd
          (exists (?t ?o ?d - ball)
            (then
              (hold (and (touch ?o ?t) (in_motion ?d) ) )
              (once (and (and (agent_holds ?h) (or (not (agent_holds ?t) ) (exists (?b10 - hexagonal_bin) (adjacent_side pillow ?h ?o) ) ) ) (in_motion ?d) (adjacent ?h ?t) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> 6 (count throwToBin:blue_pyramid_block) )
)
(:scoring
  5
)
)

(define (game game-id-365) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?c - hexagonal_bin)
      (exists (?l3 - hexagonal_bin ?l2 ?h - dodgeball)
        (exists (?c - color)
          (and
            (game-conserved
              (and
                (agent_holds ?l2)
                (agent_holds rug)
                (agent_holds ?l2)
              )
            )
            (exists (?w2 - ball ?h - building ?d - curved_wooden_ramp)
              (game-optional
                (agent_holds bed)
              )
            )
            (game-conserved
              (rug_color_under ?l2 ?h)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockOnBlockInTowerAtEnd
      (exists (?o - doggie_bed)
        (then
          (once (not (agent_holds ?o) ) )
          (once (not (and (and (in_motion desk) ) (touch ?o ?o) (agent_holds ?o) (touch agent ?o) ) ) )
          (hold-while (on ?o ?o) (adjacent ?o ?o) )
        )
      )
    )
    (forall (?b - cube_block ?d ?l4 - doggie_bed)
      (and
        (preference redDodgeballThrownToBin
          (exists (?o2 - teddy_bear ?l3 ?o - hexagonal_bin)
            (then
              (once (in ?l3 ?d) )
              (hold (touch ?l3 ?d) )
              (once (and (agent_holds ?l3) (and (same_object ?l3 ?l4) (not (in_motion rug) ) (not (and (in_motion ?o) (and (and (not (in bed ?l3) ) (in_motion ?l3) ) (agent_crouches ) (exists (?o2 - game_object) (not (in_motion ?l4) ) ) (and (not (touch ?l3 ?l4) ) (agent_holds ?l3) ) (and (and (on ?o ?o) (agent_holds ?l4) ) (same_type agent pink) ) (agent_holds ?o) ) ) ) (agent_holds agent) (adjacent ?l4 ?d) (< 3 10) (same_type ?o agent) ) ) )
            )
          )
        )
        (preference throwToBinFromOppositeWall
          (exists (?b - drawer)
            (then
              (once (= (distance ?l4 ?b) (distance ?d ?b)) )
              (hold (and (exists (?c - hexagonal_bin) (agent_holds ?c) ) (adjacent ?d ?l4) ) )
              (hold (agent_holds ?b) )
            )
          )
        )
        (preference objectLandsInBin
          (exists (?c3 - triangular_ramp)
            (then
              (hold (is_setup_object bed) )
              (once (< (distance ?c3 ?c3) (distance ?c3 agent)) )
              (once (adjacent ?d ?d) )
            )
          )
        )
        (preference ballThrownThroughRampAndBlocksToBin
          (exists (?db - (either game_object cd))
            (then
              (once (in_motion ?db) )
              (hold (in_motion ?db) )
              (hold (not (in_motion ?d) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (* (count-once-per-objects objectLandsInBin:pink) (count objectLandsInBin:pyramid_block) )
      (+ 6 2 )
    )
    (count blockOnBlockInTowerAtEnd:pink)
  )
)
(:scoring
  (count-once-per-external-objects blockOnBlockInTowerAtEnd:dodgeball)
)
)

(define (game game-id-366) (:domain few-objects-room-v1)
(:setup
  (forall (?h ?c1 ?db ?l1 ?d ?o2 - ball)
    (game-optional
      (= (distance ?db ?l1) (distance ?db agent))
    )
  )
)
(:constraints
  (and
    (preference beachballOnRug
      (exists (?l1 - dodgeball)
        (then
          (once (and (in_motion ?l1) (same_color ?l1 ?l1) ) )
          (once (not (agent_holds green_golfball) ) )
          (once (in_motion desk) )
        )
      )
    )
    (preference smallItemsInPlace
      (exists (?o - hexagonal_bin)
        (then
          (once (touch ?o ?o) )
          (once (and (object_orientation ?o floor) (agent_holds ?o) ) )
          (once (in_motion ?o) )
        )
      )
    )
  )
)
(:terminal
  (>= (count beachballOnRug:pink:dodgeball:beachball) 6 )
)
(:scoring
  (count smallItemsInPlace:golfball)
)
)

(define (game game-id-367) (:domain medium-objects-room-v1)
(:setup
  (exists (?h - wall ?c4 - game_object)
    (game-conserved
      (and
        (on ?c4 ?c4)
        (not
          (on agent ?c4)
        )
        (not
          (adjacent agent bed)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockThrowAttempt
      (exists (?d - doggie_bed ?ob - (either main_light_switch yellow) ?o - hexagonal_bin)
        (then
          (hold (adjacent_side desk ?o ?o) )
          (once (and (< 1 (distance_side rug ?o ?o rug)) (and (not (agent_holds ?o) ) (> 1 10) ) (and (agent_holds ?o) (in ?o ?o) ) ) )
          (hold (in ?o ?o) )
        )
      )
    )
    (forall (?c1 - hexagonal_bin)
      (and
        (preference cubeBlockInBuilding
          (exists (?b - doggie_bed)
            (at-end
              (and
                (and
                  (on ?c1 door)
                  (in ?b ?b)
                )
                (agent_holds ?c1)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (* 180 (* (= (external-forall-maximize (count blockThrowAttempt:golfball:golfball) ) (external-forall-maximize (+ (count cubeBlockInBuilding:golfball) (count cubeBlockInBuilding:blue:purple) )
          )
        )
        (count blockThrowAttempt:golfball)
      )
    )
    (count blockThrowAttempt:dodgeball)
  )
)
(:scoring
  10
)
)

(define (game game-id-368) (:domain few-objects-room-v1)
(:setup
  (exists (?d - game_object)
    (game-optional
      (not
        (not
          (on ?d ?d)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference golfballInBinFromPillow
      (exists (?c2 - red_dodgeball)
        (then
          (once (and (and (< (distance ?c2 ?c2) (distance agent ?c2)) (exists (?d - building) (toggled_on ?d) ) (and (not (agent_holds ?c2) ) (and (object_orientation ?c2 ?c2) (in ?c2 ?c2) (agent_holds ?c2) (or (on ?c2 ?c2) (object_orientation desk ?c2) (not (in_motion ?c2) ) (between ?c2 ?c2 ?c2) ) ) ) ) (on bed ?c2) ) )
          (once (> 1 (distance ?c2 ?c2)) )
          (any)
        )
      )
    )
  )
)
(:terminal
  (> 6 (* (- (+ (count-shortest golfballInBinFromPillow:purple) (count golfballInBinFromPillow:green) )
      )
      (count golfballInBinFromPillow:hexagonal_bin:doggie_bed)
    )
  )
)
(:scoring
  (count-once-per-objects golfballInBinFromPillow:dodgeball:green)
)
)

(define (game game-id-369) (:domain few-objects-room-v1)
(:setup
  (exists (?h - (either blue_cube_block dodgeball pencil) ?d - curved_wooden_ramp)
    (game-optional
      (not
        (same_color ?d ?d)
      )
    )
  )
)
(:constraints
  (and
    (preference pyramidBlockAtopTowerAtEnd
      (exists (?w1 - ball)
        (then
          (hold-while (agent_holds ?w1) (and (agent_holds ?w1) (adjacent bed ?w1) ) )
          (once (on ?w1 ?w1) )
          (hold-while (and (not (agent_holds ?w1) ) (< 2 3) ) (not (faces ?w1 ?w1) ) )
          (once (not (in_motion ?w1) ) )
        )
      )
    )
    (preference blockIncorrectlyPicked
      (exists (?l - doggie_bed)
        (then
          (hold (same_color ?l back) )
          (once (or (in_motion ?l) (on ?l ?l) (and (in_motion ?l) (agent_holds ?l) ) ) )
          (once (adjacent agent ?l) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count blockIncorrectlyPicked:dodgeball) (count-once-per-objects blockIncorrectlyPicked:red_pyramid_block) )
    (>= 1 (count-once-per-objects blockIncorrectlyPicked:green) )
    (>= 9 (external-forall-maximize (count blockIncorrectlyPicked:basketball:basketball) ) )
  )
)
(:scoring
  2
)
)

(define (game game-id-370) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?o - hexagonal_bin)
      (exists (?l3 - dodgeball ?o4 - hexagonal_bin ?d - shelf)
        (and
          (game-conserved
            (not
              (and
                (exists (?o ?c6 - hexagonal_bin ?r - dodgeball ?b2 - game_object)
                  (and
                    (not
                      (in_motion ?d)
                    )
                    (in_motion ?d)
                  )
                )
                (on ?o bed)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballDroppedInBin
      (exists (?b7 - block)
        (then
          (once (not (on ?b7 ?b7) ) )
          (once (agent_holds ?b7) )
          (hold (in_motion bed) )
        )
      )
    )
    (preference itemsBroken
      (exists (?d - dodgeball)
        (then
          (once (and (and (agent_holds ?d) (rug_color_under agent ?d) ) (agent_holds ?d) ) )
          (once (agent_holds ?d) )
          (once (not (on pink ?d) ) )
        )
      )
    )
  )
)
(:terminal
  (< (count-once-per-objects itemsBroken:beachball) 2 )
)
(:scoring
  (+ (count itemsBroken:dodgeball:golfball) (count-once-per-objects itemsBroken:doggie_bed) )
)
)

(define (game game-id-371) (:domain many-objects-room-v1)
(:setup
  (forall (?g - ball ?d - chair ?o1 - (either cd dodgeball bridge_block blue_cube_block))
    (game-conserved
      (and
        (and
          (opposite ?o1 ?o1)
          (not
            (in_motion ?o1)
          )
        )
        (same_type ?o1 ?o1)
      )
    )
  )
)
(:constraints
  (and
    (preference golfballInBinFromPillow
      (exists (?tb - hexagonal_bin ?tb - ball)
        (then
          (once (agent_holds ?tb) )
          (once (agent_holds ?tb) )
        )
      )
    )
  )
)
(:terminal
  (>= (count golfballInBinFromPillow:dodgeball) (* (* (count-longest golfballInBinFromPillow:blue_pyramid_block) (count golfballInBinFromPillow:rug:purple) (count golfballInBinFromPillow:golfball:dodgeball:dodgeball) 2 (count-once-per-objects golfballInBinFromPillow:hexagonal_bin:basketball) 3 (- 3 )
        (count-once golfballInBinFromPillow:basketball)
        (+ (count golfballInBinFromPillow:beachball) (count-measure golfballInBinFromPillow:blue_dodgeball) )
      )
      (- (>= 7 (* (* (= (count-measure golfballInBinFromPillow) (* (+ (+ (* 4 (* 2 (count golfballInBinFromPillow:pink) )
                      )
                      7
                      18
                      (count golfballInBinFromPillow:hexagonal_bin:top_drawer)
                      (* 3 180 )
                      (total-time)
                    )
                    (total-score)
                  )
                  (count golfballInBinFromPillow:basketball)
                )
              )
              (count-shortest golfballInBinFromPillow:hexagonal_bin)
              (count-once-per-objects golfballInBinFromPillow:blue)
            )
            (+ (- (total-time) )
              (count-once-per-objects golfballInBinFromPillow:beachball)
            )
          )
        )
      )
    )
  )
)
(:scoring
  (* (count golfballInBinFromPillow:basketball:beachball) (count-longest golfballInBinFromPillow:pink) 5 (count golfballInBinFromPillow:green) 50 (count-once-per-external-objects golfballInBinFromPillow:dodgeball) (total-score) (count-once golfballInBinFromPillow:orange) (count-increasing-measure golfballInBinFromPillow:dodgeball) )
)
)

(define (game game-id-372) (:domain few-objects-room-v1)
(:setup
  (exists (?d - building)
    (game-optional
      (and
        (in_motion ?d)
        (agent_holds ?d)
        (not
          (on ?d ?d)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b10 - block)
      (and
        (preference blockInTowerAtEnd
          (exists (?b - chair ?b1 - golfball)
            (then
              (once (not (adjacent ?b1 agent) ) )
              (once (and (not (and (not (and (agent_holds ?b1) (adjacent ?b10 ?b1) ) ) (not (agent_holds ?b10) ) ) ) (not (agent_holds ?b1) ) ) )
              (once (and (not (not (in_motion ?b1) ) ) (and (not (agent_holds ?b10) ) (not (not (and (not (not (agent_holds floor) ) ) (and (not (not (not (on agent ?b1) ) ) ) (not (agent_holds ?b1) ) (< (distance ?b10 ?b10) (distance ?b10 desk)) (touch ?b1 ?b1) (agent_holds ?b10) (on ?b10 ?b10) (not (in_motion ?b10) ) (= (distance ?b1 ?b1) (distance ?b10 rug)) (not (in desk ?b10) ) (and (same_type ?b1 ?b1) (not (in_motion room_center) ) ) (adjacent_side ?b10 ?b10 rug ?b10) (and (< (distance ?b1 ?b10) 1) (in_motion ?b10) ) ) ) ) ) ) ) )
            )
          )
        )
        (preference ballNeverThrown
          (then
            (once (agent_holds agent) )
            (once (not (in_motion floor) ) )
            (once (adjacent ?b10 side_table) )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count ballNeverThrown:yellow:beachball) (* (count ballNeverThrown:hexagonal_bin) 10 )
  )
)
(:scoring
  (* (count-once-per-objects blockInTowerAtEnd:dodgeball) (* (count-once-per-objects ballNeverThrown:yellow) (+ 10 (count-once-per-objects blockInTowerAtEnd:beachball) (< (count-overlapping ballNeverThrown:pyramid_block:book) (count ballNeverThrown:white) )
        (count-shortest blockInTowerAtEnd:top_drawer:beachball)
        (count-once blockInTowerAtEnd:orange)
        50
      )
    )
  )
)
)

(define (game game-id-373) (:domain many-objects-room-v1)
(:setup
  (exists (?h - doggie_bed)
    (game-conserved
      (on ?h ?h)
    )
  )
)
(:constraints
  (and
    (preference blockFromRugToDesk
      (exists (?d ?p1 - cylindrical_block)
        (then
          (hold-while (and (and (touch desk ?d) (in ?d ?d) (in_motion ?p1) (or (not (and (< 10 (distance ?d floor)) (not (not (adjacent ?p1 ?p1) ) ) (equal_z_position ?d ?p1) (in rug ?p1) ) ) (adjacent agent agent) ) ) (agent_holds ?d) ) (not (agent_holds ?d) ) )
          (once (and (touch ?p1 ?d) (not (in_motion ?d) ) ) )
          (hold (< (distance ?p1 ?p1) 1) )
        )
      )
    )
  )
)
(:terminal
  (<= 2 (* (count blockFromRugToDesk:purple) (* 7 (* (+ (* 3 5 )
            (+ (count-once-per-objects blockFromRugToDesk:yellow) 1 )
            (* 2 3 (count-once-per-objects blockFromRugToDesk:dodgeball) (count-once blockFromRugToDesk:red_pyramid_block) )
            2
            3
            (count blockFromRugToDesk:cube_block:dodgeball)
          )
          (* (count blockFromRugToDesk) (* (external-forall-maximize (* 18 2 )
              )
              2
            )
          )
        )
      )
    )
  )
)
(:scoring
  10
)
)

(define (game game-id-374) (:domain few-objects-room-v1)
(:setup
  (exists (?g - hexagonal_bin ?c1 - hexagonal_bin)
    (game-conserved
      (same_color ?c1 ?c1)
    )
  )
)
(:constraints
  (and
    (preference cubeBlockInBuilding
      (exists (?d ?r ?t ?b ?b ?b - teddy_bear ?ob - dodgeball)
        (then
          (once (agent_holds ?ob) )
          (once (agent_holds ?ob) )
          (once (forall (?d - ball ?h - (either teddy_bear flat_block golfball)) (agent_holds ?h) ) )
        )
      )
    )
    (preference ballThrownFromDoor
      (exists (?c - ball ?d - hexagonal_bin)
        (then
          (hold (adjacent ?d ?d) )
          (once (in_motion bed) )
          (hold-while (= (distance ?d ?d) 1) (agent_holds door) )
        )
      )
    )
    (preference laptopAndBookInPlace
      (exists (?b - (either cube_block cd))
        (then
          (once (in ?b ?b) )
          (once (in_motion ?b) )
          (once (and (not (and (not (on floor ?b) ) (in_motion ?b) ) ) (on ?b ?b) ) )
        )
      )
    )
    (forall (?h - hexagonal_bin)
      (and
        (preference ballThrownFromRug
          (then
            (once (in_motion ?h) )
            (hold (on bed ?h) )
            (once (in_motion ?h) )
          )
        )
      )
    )
    (preference ballThrownFromBehindBlock
      (exists (?h - ball)
        (then
          (hold (agent_holds ?h) )
          (hold (not (adjacent ?h ?h) ) )
          (once (and (touch ?h agent) (not (on ?h ?h) ) ) )
        )
      )
    )
    (preference ballThrownToBed
      (exists (?b10 ?o1 ?c ?c ?d - pyramid_block ?c - chair)
        (at-end
          (and
            (agent_holds ?c)
            (in_motion ?c)
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 4 2 )
    (>= (<= (count-once-per-objects cubeBlockInBuilding:hexagonal_bin:dodgeball) (* (count ballThrownFromDoor:golfball) (+ (+ (>= (count-once-per-objects ballThrownFromBehindBlock:beachball) (* 10 (count-once laptopAndBookInPlace:red) )
              )
              (count laptopAndBookInPlace:dodgeball)
            )
            (* (total-score) (- (- (count ballThrownFromBehindBlock:hexagonal_bin) )
              )
              30
            )
          )
        )
      )
      (count-total ballThrownToBed)
    )
    (= (count-shortest ballThrownToBed:basketball) 5 )
  )
)
(:scoring
  (count-longest ballThrownFromDoor:green)
)
)

(define (game game-id-375) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?r - hexagonal_bin)
      (and
        (game-conserved
          (not
            (and
              (not
                (touch ?r ?r)
              )
              (and
                (in ?r ?r)
              )
              (not
                (in_motion ?r)
              )
            )
          )
        )
        (and
          (or
            (game-conserved
              (exists (?b - hexagonal_bin)
                (in_motion rug)
              )
            )
          )
          (game-optional
            (agent_holds ?r)
          )
          (game-conserved
            (< 1 (distance ?r ?r))
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference agentLeavesDogbedOrNoMoreBalls
      (exists (?d - block ?bl - desktop)
        (then
          (hold (not (agent_holds ?bl) ) )
          (once (>= 1 (distance_side ?bl floor bed)) )
          (forall-sequence (?b2 - (either dodgeball game_object) ?h - (either cube_block bridge_block) ?d - hexagonal_bin ?d - dodgeball)
            (then
              (hold (in_motion upside_down) )
              (once (not (in_motion ?d) ) )
              (hold-while (not (not (and (agent_holds ?d) (same_color ?bl floor) ) ) ) (and (not (in_motion bed) ) (<= 4 1) ) )
            )
          )
          (once (and (exists (?c ?d - hexagonal_bin) (and (in_motion ?bl) (in_motion floor) ) ) (> (distance ?bl ?bl) (distance_side ?bl ?bl ?bl agent)) (on ?bl desk) ) )
        )
      )
    )
  )
)
(:terminal
  (> 10 (* 50 40 (total-score) )
  )
)
(:scoring
  6
)
)

(define (game game-id-376) (:domain few-objects-room-v1)
(:setup
  (exists (?b - hexagonal_bin ?c ?c1 - hexagonal_bin)
    (game-conserved
      (in_motion ?c)
    )
  )
)
(:constraints
  (and
    (preference dodgeballThrownToBinFromDesk
      (exists (?d - hexagonal_bin ?r - hexagonal_bin)
        (at-end
          (touch bed ?r)
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (<= (- (* 5 (* 1 (external-forall-maximize (+ (total-score) (external-forall-maximize (count-once dodgeballThrownToBinFromDesk:golfball) ) )
              )
            )
            8
          )
        )
        (+ 4 (count-once-per-objects dodgeballThrownToBinFromDesk:pink) (* (- (* (external-forall-maximize (count dodgeballThrownToBinFromDesk:pink) ) (count dodgeballThrownToBinFromDesk:bed:beachball) )
            )
          )
        )
      )
      (>= (count-shortest dodgeballThrownToBinFromDesk:pink) (count-once-per-objects dodgeballThrownToBinFromDesk:dodgeball:blue_cube_block) )
    )
    (or
      (>= (count-once dodgeballThrownToBinFromDesk) (* 3 (* (* 18 3 (count dodgeballThrownToBinFromDesk:dodgeball) 10 (+ (count-once dodgeballThrownToBinFromDesk:dodgeball) 3 )
              (not
                (count-once dodgeballThrownToBinFromDesk:book:hexagonal_bin)
              )
              10
              (count-unique-positions dodgeballThrownToBinFromDesk:basketball:pink)
              (count dodgeballThrownToBinFromDesk:blue_dodgeball:block)
            )
            (or
              (count dodgeballThrownToBinFromDesk:hexagonal_bin)
              5
            )
          )
        )
      )
      (> (count dodgeballThrownToBinFromDesk) (* (count dodgeballThrownToBinFromDesk) (* 6 (count-once-per-objects dodgeballThrownToBinFromDesk:beachball:beachball) (count dodgeballThrownToBinFromDesk:pink_dodgeball) )
          5
          (* 10 (+ 2 (count dodgeballThrownToBinFromDesk:basketball) (+ 3 (external-forall-maximize (* (count-measure dodgeballThrownToBinFromDesk:dodgeball:golfball) (count dodgeballThrownToBinFromDesk:yellow:dodgeball) )
                )
                (* (- (count dodgeballThrownToBinFromDesk:red_pyramid_block:purple) )
                  5
                  3
                )
                (< (* (count dodgeballThrownToBinFromDesk:dodgeball) (+ (count-once-per-objects dodgeballThrownToBinFromDesk:pyramid_block) (count-once dodgeballThrownToBinFromDesk:yellow:beachball) )
                    (* 5 4 )
                  )
                  6
                )
              )
              (external-forall-maximize
                (count-once-per-objects dodgeballThrownToBinFromDesk:basketball)
              )
              (count dodgeballThrownToBinFromDesk:red:dodgeball)
            )
          )
        )
      )
      (>= (external-forall-maximize (= (* (count dodgeballThrownToBinFromDesk:blue_pyramid_block:orange) 5 )
            (* (* 2 (count-once-per-objects dodgeballThrownToBinFromDesk:beachball) )
              3
            )
          )
        )
        (count dodgeballThrownToBinFromDesk:tall_cylindrical_block)
      )
    )
  )
)
(:scoring
  (count dodgeballThrownToBinFromDesk:blue_dodgeball)
)
)

(define (game game-id-377) (:domain medium-objects-room-v1)
(:setup
  (forall (?p2 - (either dodgeball pyramid_block))
    (game-optional
      (or
        (agent_holds ?p2)
        (in ?p2 bed)
      )
    )
  )
)
(:constraints
  (and
    (preference cubeBlockInBuilding
      (exists (?p2 - cube_block)
        (then
          (hold (in_motion rug) )
          (hold (and (< 3 2) (in ?p2 ?p2) ) )
          (hold (agent_holds ?p2) )
        )
      )
    )
  )
)
(:terminal
  (>= 3 2 )
)
(:scoring
  0
)
)

(define (game game-id-378) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (not
      (in_motion bed)
    )
  )
)
(:constraints
  (and
    (forall (?b - wall)
      (and
        (preference blocksInPlace
          (exists (?w2 - hexagonal_bin)
            (then
              (once (on floor ?w2) )
              (hold (agent_holds room_center) )
              (hold-while (and (and (in_motion ?b) (agent_holds ?w2) ) (not (agent_holds ?w2) ) (not (agent_holds ?b) ) ) (and (in ?w2 ?w2) (on ?w2 ?b) ) )
            )
          )
        )
        (preference basketMadeFromRug
          (exists (?p1 - chair ?r ?b - hexagonal_bin ?c2 - teddy_bear ?d - dodgeball)
            (then
              (once (not (in_motion rug) ) )
              (once (in_motion ?b) )
              (once (agent_holds ?d) )
            )
          )
        )
        (preference objectOnBed
          (exists (?c6 - hexagonal_bin)
            (then
              (hold (and (game_over ) (and (object_orientation bed ?c6) (not (in_motion ?b) ) ) (and (not (< 2 1) ) (not (and (and (agent_holds ?b) (adjacent ?b ?b) (agent_holds ?c6) ) (not (same_type agent ?b) ) ) ) ) ) )
              (once (object_orientation ?b back) )
              (hold (same_color ?c6 ?b) )
            )
          )
        )
        (preference laptopAndBookInPlace
          (exists (?t1 ?b - hexagonal_bin)
            (then
              (hold (on ?b ?b) )
              (once (not (and (agent_holds ?t1) (in ?b ?t1) ) ) )
              (once (between agent ?b agent) )
            )
          )
        )
      )
    )
    (preference itemsHidingScreens
      (exists (?l - dodgeball)
        (then
          (once (agent_holds front_left_corner) )
          (hold (and (adjacent_side ?l desk ?l) (on ?l agent) ) )
          (once-measure (not (equal_z_position ?l ?l) ) (distance ?l agent) )
        )
      )
    )
    (forall (?o3 - hexagonal_bin)
      (and
        (preference throwAttemptKnocksBlock
          (exists (?b - hexagonal_bin)
            (then
              (once (in_motion ?b) )
              (hold-while (not (same_color ?o3 ?o3) ) (agent_holds left) )
              (hold-for 10 (not (not (not (and (not (touch door front_left_corner) ) (< (distance ?o3 ?o3) (distance upright ?b)) ) ) ) ) )
            )
          )
        )
        (preference throwAttempt
          (exists (?b - triangular_ramp)
            (then
              (once (in desk ?o3) )
              (once (not (in_motion ?b) ) )
              (hold (agent_holds ?o3) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* 0.7 (count-measure blocksInPlace:book) )
    (count-longest itemsHidingScreens:dodgeball)
  )
)
(:scoring
  (count itemsHidingScreens:golfball)
)
)

(define (game game-id-379) (:domain many-objects-room-v1)
(:setup
  (exists (?w - hexagonal_bin)
    (game-conserved
      (not
        (agent_holds ?w)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownFromBehindBlock
      (exists (?o3 ?h ?h ?c4 - ball)
        (then
          (hold-while (in ?h ?c4) (adjacent ?c4 ?c4) )
          (once (and (touch ?h ?h) (exists (?t - block) (exists (?r - dodgeball) (and (agent_holds ?c4) (in_motion ?t) ) ) ) ) )
          (once (agent_holds agent) )
        )
      )
    )
  )
)
(:terminal
  (>= 5 5 )
)
(:scoring
  (count-same-positions ballThrownFromBehindBlock:basketball)
)
)

(define (game game-id-380) (:domain medium-objects-room-v1)
(:setup
  (forall (?l4 - hexagonal_bin)
    (not
      (or
        (and
          (and
            (forall (?c5 - wall ?b4 - triangular_ramp)
              (game-optional
                (exists (?t - curved_wooden_ramp ?t - (either hexagonal_bin hexagonal_bin doggie_bed floor pink laptop pink) ?c2 ?h - ball)
                  (and
                    (in_motion ?c2)
                    (not
                      (in ?c2 ?c2)
                    )
                    (on ?h ?l4)
                  )
                )
              )
            )
          )
        )
        (and
          (game-conserved
            (agent_holds ?l4)
          )
        )
        (game-conserved
          (on ?l4 ?l4)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockPlacedInBuilding
      (exists (?d - dodgeball ?b - game_object)
        (then
          (hold-while (not (object_orientation ?b ?b) ) (not (and (not (agent_holds ?b) ) (forall (?w - dodgeball) (above ?w ?b) ) ) ) )
          (once (not (not (in room_center ?b) ) ) )
          (once (adjacent ?b ?b) )
        )
      )
    )
    (forall (?tb - beachball ?c3 - tall_cylindrical_block)
      (and
        (preference throwAttemptFromDoor
          (exists (?b - dodgeball)
            (then
              (once (and (and (not (not (is_setup_object ?b) ) ) (on ?c3 front) ) (and (agent_holds ?c3) (not (agent_holds ?c3) ) (in_motion ?c3) ) ) )
              (once (agent_holds agent) )
              (hold (not (in ?b ?c3) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count throwAttemptFromDoor:orange) (count blockPlacedInBuilding:dodgeball) )
)
(:scoring
  (count blockPlacedInBuilding:golfball:golfball:yellow)
)
)

(define (game game-id-381) (:domain few-objects-room-v1)
(:setup
  (forall (?g - block)
    (or
      (exists (?d - beachball)
        (game-conserved
          (agent_holds ?g)
        )
      )
      (exists (?t1 - shelf ?b10 - (either top_drawer book))
        (game-optional
          (not
            (in_motion ?b10)
          )
        )
      )
      (exists (?r - building)
        (and
          (game-conserved
            (forall (?c - dodgeball ?b - dodgeball ?g - teddy_bear)
              (and
                (adjacent ?r ?r)
                (not
                  (= 9 (distance bridge_block ?r))
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - wall)
      (and
        (preference ballKnocksTeddy
          (exists (?c - (either main_light_switch) ?h - (either tall_cylindrical_block))
            (then
              (once (not (in_motion pink) ) )
              (once (agent_holds ?h) )
              (hold-while (in_motion desk) (not (in ?b agent) ) (or (< (distance ?h ?b) (building_size ?b)) (and (and (not (adjacent ?h bed) ) (same_color ?b desk) (not (same_color ?h ?b) ) ) (and (not (adjacent_side ?b ?b ?h) ) (not (agent_holds ?h) ) (and (and (and (and (in_motion ?h) (agent_holds ?b) ) ) (not (< 5 (x_position ?b)) ) ) (not (in_motion ?h) ) ) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 2 5 )
)
(:scoring
  (not
    (count ballKnocksTeddy:purple)
  )
)
)

(define (game game-id-382) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (is_setup_object desk)
  )
)
(:constraints
  (and
    (preference ballOnBedAtEnd
      (exists (?b1 - cube_block)
        (then
          (once (agent_holds upright) )
          (forall-sequence (?b ?o5 - (either yellow_cube_block key_chain))
            (then
              (hold (<= 5 (distance ?b1 rug)) )
              (once (not (and (agent_holds ?b1) (on ?b ?o5) (in_motion ?o5) ) ) )
              (once (agent_holds ?b1) )
            )
          )
          (once (not (and (on desk ?b1) (on agent ?b1) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects ballOnBedAtEnd:basketball) (* (- 3 )
      5
    )
  )
)
(:scoring
  (* (count ballOnBedAtEnd:beachball) (count-total ballOnBedAtEnd:basketball) 10 5 )
)
)

(define (game game-id-383) (:domain many-objects-room-v1)
(:setup
  (exists (?o2 - building ?b3 - (either key_chain book))
    (exists (?c2 - dodgeball ?b - hexagonal_bin)
      (game-conserved
        (in_motion ?b)
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballAndBasketballInBin
      (exists (?h - bridge_block)
        (then
          (once (not (and (agent_holds ?h) (agent_holds agent) (on ?h ?h) ) ) )
          (once (and (not (in_motion ?h) ) (agent_holds ?h) ) )
          (once (not (= (distance ?h ?h) 0) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 3 25 )
)
(:scoring
  (+ (count-once-per-objects dodgeballAndBasketballInBin:side_table) (count dodgeballAndBasketballInBin:basketball) )
)
)

(define (game game-id-384) (:domain many-objects-room-v1)
(:setup
  (or
    (forall (?h - hexagonal_bin)
      (exists (?b - building)
        (and
          (and
            (game-optional
              (not
                (in_motion room_center)
              )
            )
          )
          (and
            (forall (?t2 - building)
              (forall (?w - building)
                (game-optional
                  (not
                    (agent_holds desk)
                  )
                )
              )
            )
            (and
              (game-conserved
                (in ?b ?h)
              )
            )
            (and
              (exists (?h - (either dodgeball cd game_object laptop) ?o - hexagonal_bin)
                (and
                  (and
                    (exists (?o2 - wall)
                      (and
                        (game-conserved
                          (in_motion ?h)
                        )
                      )
                    )
                  )
                  (forall (?b7 - hexagonal_bin)
                    (and
                      (exists (?h - game_object)
                        (exists (?b - (either golfball cellphone cube_block))
                          (game-conserved
                            (not
                              (and
                                (not
                                  (and
                                    (equal_z_position ?b ?o)
                                    (open ?b7)
                                    (< 1 (distance agent ?b7))
                                  )
                                )
                                (agent_holds ?h)
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
          (exists (?bl - hexagonal_bin)
            (game-conserved
              (not
                (and
                  (open ?h)
                  (not
                    (not
                      (forall (?l4 - curved_wooden_ramp)
                        (not
                          (touch ?bl ?h)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference pillowMovedToRoomCenter
      (exists (?w2 - beachball)
        (then
          (once (< 4 1) )
          (once (not (and (adjacent ?w2 ?w2) (in_motion ?w2) ) ) )
          (once (not (opposite agent bed) ) )
        )
      )
    )
    (preference ballThrownToBin
      (exists (?w - hexagonal_bin ?h - ball)
        (then
          (hold (same_object ?h ?h) )
          (once (exists (?c - (either cellphone cellphone) ?b ?w2 - game_object ?g - hexagonal_bin ?c6 - red_dodgeball) (game_over ) ) )
          (once (in_motion desk) )
          (once (in ?h ?h) )
          (hold-while (and (on ?h ?h) (in agent ?h) ) (in_motion ?h) (not (not (and (touch ?h ?h) (exists (?o - cube_block ?f - block ?g - game_object) (not (and (touch ?h ?h) (in_motion ?g) (agent_crouches ) (in_motion ?g) ) ) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (+ (count pillowMovedToRoomCenter:green) (+ (+ (count ballThrownToBin:hexagonal_bin) 1 )
          (+ (total-time) (- 3 (count-once pillowMovedToRoomCenter:dodgeball) ) 7 )
        )
      )
      (count-once-per-objects ballThrownToBin:golfball)
    )
    (or
      (> (/ 3 (count pillowMovedToRoomCenter:hexagonal_bin:pink_dodgeball) ) (count ballThrownToBin:basketball) )
    )
  )
)
(:scoring
  10
)
)

(define (game game-id-385) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?w1 - (either cube_block beachball golfball chair book))
      (and
        (exists (?o ?w2 - ball)
          (and
            (and
              (and
                (game-conserved
                  (and
                    (and
                      (in_motion ?w2)
                      (not
                        (touch ?o ?w1)
                      )
                    )
                    (same_object ?w2 agent)
                  )
                )
              )
            )
            (and
              (game-conserved
                (not
                  (not
                    (and
                      (not
                        (agent_holds ?w2)
                      )
                      (not
                        (in_motion ?w2)
                      )
                    )
                  )
                )
              )
            )
            (forall (?r - pillow ?o - hexagonal_bin)
              (exists (?o4 - hexagonal_bin ?s - hexagonal_bin)
                (game-conserved
                  (agent_holds ?s)
                )
              )
            )
          )
        )
        (game-conserved
          (touch ?w1 ?w1)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballKnocksBlockFromRug
      (exists (?w2 - hexagonal_bin ?d - cube_block ?d - doggie_bed ?o - ball ?c1 - block)
        (at-end
          (exists (?p1 - dodgeball)
            (agent_holds ?p1)
          )
        )
      )
    )
  )
)
(:terminal
  (> 20 10 )
)
(:scoring
  (count ballKnocksBlockFromRug:beachball)
)
)

(define (game game-id-386) (:domain medium-objects-room-v1)
(:setup
  (exists (?d1 - hexagonal_bin)
    (game-optional
      (agent_holds ?d1)
    )
  )
)
(:constraints
  (and
    (preference failedThrowToBin
      (exists (?b6 - triangular_ramp ?b7 - hexagonal_bin)
        (at-end
          (not
            (not
              (touch ?b7 ?b7)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (+ 1 1 )
    7
  )
)
(:scoring
  (count-measure failedThrowToBin:pink_dodgeball)
)
)

(define (game game-id-387) (:domain many-objects-room-v1)
(:setup
  (exists (?d - dodgeball)
    (and
      (exists (?c - teddy_bear ?c - shelf)
        (exists (?b10 ?b4 ?h ?l3 ?c3 ?o1 ?h ?d ?d ?h - (either cube_block pyramid_block))
          (forall (?w1 - hexagonal_bin ?ob - (either cube_block bridge_block key_chain beachball cube_block))
            (game-optional
              (in ?c ?ob)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToRampToBin
      (exists (?w2 ?h - (either teddy_bear chair))
        (then
          (hold (in desk bed) )
          (once (and (on ?h ?h) (<= 10 2) ) )
          (once (not (or (agent_holds ?h) (in ?w2 ?h) ) ) )
        )
      )
    )
    (preference pillowThrownToDoggieBed
      (exists (?c - dodgeball)
        (then
          (once (exists (?h - hexagonal_bin ?tb ?h ?b1 ?h ?p ?l2 ?t ?b ?l2 ?b - hexagonal_bin) (in_motion ?t) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* (count pillowThrownToDoggieBed:dodgeball) (* (* 20 (count-once-per-objects pillowThrownToDoggieBed:basketball:golfball:red) )
          (total-time)
        )
        (count-same-positions throwToRampToBin:purple)
      )
      (count throwToRampToBin:hexagonal_bin)
    )
    (or
      (> 8 (* (count-once-per-objects pillowThrownToDoggieBed:green:golfball) 4 )
      )
      (> 18 (count-once-per-objects throwToRampToBin:basketball) )
    )
  )
)
(:scoring
  6
)
)

(define (game game-id-388) (:domain few-objects-room-v1)
(:setup
  (exists (?h - (either flat_block doggie_bed book))
    (and
      (forall (?g - hexagonal_bin)
        (exists (?d - bridge_block)
          (game-conserved
            (agent_holds ?h)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballKnocksBlockFromRug
      (exists (?ob - cube_block)
        (then
          (once (same_type ?ob ?ob) )
          (hold-for 5 (or (not (and (on right ?ob) (not (not (agent_holds bed) ) ) ) ) (in_motion agent) ) )
          (hold (not (in ?ob ?ob) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (or (* 6 (count-once-per-objects ballKnocksBlockFromRug:dodgeball) )
      (count-once-per-objects ballKnocksBlockFromRug:yellow_cube_block)
    )
    (>= (count ballKnocksBlockFromRug:hexagonal_bin) 5 )
  )
)
(:scoring
  (* (- 6 )
    (* (count ballKnocksBlockFromRug:purple:red) 3 (count-once-per-objects ballKnocksBlockFromRug:dodgeball) (count-once-per-external-objects ballKnocksBlockFromRug:basketball) )
  )
)
)

(define (game game-id-389) (:domain few-objects-room-v1)
(:setup
  (or
    (game-optional
      (in_motion desk)
    )
  )
)
(:constraints
  (and
    (preference failedThrowToBin
      (exists (?c - chair)
        (then
          (once (in_motion ?c) )
          (hold (and (not (adjacent ?c ?c) ) (exists (?h - (either main_light_switch pyramid_block book)) (toggled_on ?c) ) ) )
          (once (agent_holds ?c) )
        )
      )
    )
  )
)
(:terminal
  (= (count-unique-positions failedThrowToBin:brown) (count failedThrowToBin:dodgeball:dodgeball:dodgeball) )
)
(:scoring
  2
)
)

(define (game game-id-390) (:domain many-objects-room-v1)
(:setup
  (exists (?h - pyramid_block)
    (and
      (and
        (and
          (game-conserved
            (in_motion ?h)
          )
          (exists (?c - beachball ?c - ball)
            (game-conserved
              (not
                (and
                  (and
                    (in_motion ?c)
                    (agent_holds pink_dodgeball)
                    (agent_holds ?c)
                  )
                  (on ?c tan)
                  (agent_holds ?c)
                )
              )
            )
          )
        )
        (game-conserved
          (and
            (in_motion ?h)
            (agent_holds ?h)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?d - game_object ?b - (either dodgeball cube_block))
        (then
          (hold (on ?b floor) )
          (any)
          (once (agent_holds sideways) )
          (hold (on ?b agent) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects throwBallToBin:beachball:pink_dodgeball:green) (count-once throwBallToBin:pink) )
)
(:scoring
  (* (count-once-per-objects throwBallToBin:hexagonal_bin) 4 (* (count throwBallToBin:dodgeball:basketball) (* (* 2 (- (- 3 )
          )
        )
        4
      )
    )
  )
)
)

(define (game game-id-391) (:domain few-objects-room-v1)
(:setup
  (exists (?t2 - ball)
    (and
      (exists (?t - red_pyramid_block)
        (exists (?d - (either doggie_bed pyramid_block dodgeball))
          (exists (?t - ball)
            (and
              (exists (?p1 - doggie_bed ?d - (either pillow teddy_bear alarm_clock) ?c - (either hexagonal_bin pyramid_block mug) ?t2 - teddy_bear ?o - ball)
                (game-conserved
                  (same_object rug ?t2)
                )
              )
              (game-conserved
                (on ?t ?d)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownMissesEverything
      (exists (?l3 - (either pyramid_block pyramid_block dodgeball) ?d - (either beachball credit_card))
        (then
          (once (not (or (not (in ?d desk) ) (or (and (adjacent pink agent) (not (not (not (agent_holds ?d) ) ) ) ) (< 1 8) ) ) ) )
          (hold (or (exists (?d - book ?p2 - shelf) (on ?p2 side_table) ) (agent_holds ?d) ) )
          (once (agent_holds room_center) )
        )
      )
    )
    (preference dodgeballHitsBinBottom
      (exists (?o2 - wall)
        (then
          (hold-to-end (agent_holds ?o2) )
          (once (agent_holds agent) )
          (once (adjacent ?o2 ?o2) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* (count-shortest ballThrownMissesEverything:wall) (* (+ (+ 5 (count ballThrownMissesEverything:bed:red) )
            (external-forall-maximize
              (count dodgeballHitsBinBottom:hexagonal_bin)
            )
          )
          (* (external-forall-minimize (= 10 (count-longest dodgeballHitsBinBottom:basketball) (count-once-per-objects ballThrownMissesEverything:green) )
            )
            (- (- (external-forall-maximize 5 ) )
            )
          )
          (* (count dodgeballHitsBinBottom:pink) (count ballThrownMissesEverything:cube_block) (+ 5 6 )
          )
          9
          (count dodgeballHitsBinBottom:beachball)
          (count dodgeballHitsBinBottom:hexagonal_bin)
          10
          (count dodgeballHitsBinBottom:yellow)
          (count dodgeballHitsBinBottom:doggie_bed)
        )
      )
      (count-once-per-objects ballThrownMissesEverything)
    )
    (< (count dodgeballHitsBinBottom:hexagonal_bin) (count-once-per-objects dodgeballHitsBinBottom:dodgeball:yellow) )
  )
)
(:scoring
  (count dodgeballHitsBinBottom:golfball)
)
)

(define (game game-id-392) (:domain few-objects-room-v1)
(:setup
  (forall (?b3 - block)
    (game-optional
      (toggled_on ?b3)
    )
  )
)
(:constraints
  (and
    (preference blockCorrectlyPicked
      (exists (?d ?l ?f ?h - (either book book laptop wall floor))
        (at-end
          (on ?h ?h)
        )
      )
    )
    (preference matchingBuildingBuilt
      (exists (?t - (either bridge_block cylindrical_block laptop) ?b1 - pillow)
        (then
          (hold (and (is_setup_object agent) (in_motion ?b1) (and (in_motion ?b1) (not (and (in_motion ?b1) (adjacent agent ?b1) ) ) ) ) )
          (once (is_setup_object ?b1) )
          (hold-while (not (in_motion ?b1) ) (not (not (or (not (not (touch ?b1 ?b1) ) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 0.5 (* (count-once-per-objects matchingBuildingBuilt) (* (* (count matchingBuildingBuilt:pink_dodgeball) (+ (count blockCorrectlyPicked:basketball) 5 )
        )
        -30
      )
    )
  )
)
(:scoring
  4
)
)

(define (game game-id-393) (:domain few-objects-room-v1)
(:setup
  (forall (?d - dodgeball)
    (game-conserved
      (opposite ?d agent)
    )
  )
)
(:constraints
  (and
    (preference throwFromBehindChairsInBin
      (exists (?s - ball ?o4 - hexagonal_bin)
        (then
          (hold (on ?o4 ?o4) )
          (hold (agent_holds ?o4) )
          (once (in_motion ?o4) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 5 3 )
    (or
      (>= (count-once-per-objects throwFromBehindChairsInBin:block) (not 2 ) )
    )
  )
)
(:scoring
  (count throwFromBehindChairsInBin:blue_cube_block:yellow)
)
)

(define (game game-id-394) (:domain few-objects-room-v1)
(:setup
  (forall (?b4 - watch ?c - (either cellphone laptop) ?p - chair ?b - doggie_bed)
    (game-conserved
      (and
        (faces pink ?b)
        (and
          (not
            (or
              (in agent ?b)
              (in_motion ?b)
            )
          )
          (agent_holds door)
          (not
            (agent_holds ?b)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference teddyBearHitsBall
      (exists (?p3 - dodgeball)
        (then
          (hold (and (and (faces ?p3 agent) (in_motion ?p3) ) (is_setup_object ?p3) ) )
          (hold (object_orientation ?p3 agent) )
          (once (on ?p3 ?p3) )
        )
      )
    )
    (forall (?g - (either flat_block hexagonal_bin))
      (and
        (preference cubeBlockInBuilding
          (exists (?o2 - chair)
            (then
              (hold (rug_color_under desk ?o2) )
              (once (not (in_motion bed) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once cubeBlockInBuilding:hexagonal_bin) (count teddyBearHitsBall:yellow:beachball) )
)
(:scoring
  40
)
)

(define (game game-id-395) (:domain medium-objects-room-v1)
(:setup
  (exists (?b - dodgeball)
    (and
      (exists (?t - pyramid_block)
        (exists (?l - hexagonal_bin)
          (exists (?o - dodgeball)
            (game-conserved
              (in ?o ?t)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?t2 - hexagonal_bin ?l2 - book)
      (and
        (preference pillowMovedToRoomCenter
          (exists (?o1 - building ?o1 - curved_wooden_ramp ?h ?d ?c2 - hexagonal_bin)
            (then
              (once (in ?d ?c2) )
              (any)
              (hold-while (agent_holds ?c2) (between ?d ?c2 ?d) )
            )
          )
        )
        (preference throwAttemptFromDoor
          (exists (?d ?d - doggie_bed ?d - block)
            (then
              (hold (in_motion ?d) )
              (once (and (agent_holds ?l2) (> 1 (distance ?d ?d)) ) )
              (once (> (distance ?l2 ?d) 1) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (* (external-forall-minimize (* (count-once-per-objects throwAttemptFromDoor:basketball) (* (count-shortest throwAttemptFromDoor:red:yellow) 10 )
            2
            30
            (count throwAttemptFromDoor:yellow)
            (+ 5 2 )
            (count throwAttemptFromDoor:blue_dodgeball)
            (count throwAttemptFromDoor)
            (* (count throwAttemptFromDoor:yellow_cube_block:book) 10 )
          )
        )
        (not
          (* (* (count pillowMovedToRoomCenter:block:basketball) (+ (count-increasing-measure pillowMovedToRoomCenter:golfball) (count-once-per-objects pillowMovedToRoomCenter:red) (total-time) (+ (count pillowMovedToRoomCenter:golfball) 10 )
              )
              (+ (* (total-score) )
                300
              )
              (count-once-per-objects throwAttemptFromDoor:orange:golfball)
            )
            (count pillowMovedToRoomCenter:doggie_bed)
          )
        )
      )
      (- 0 )
    )
    (or
      (or
        (>= (+ (total-time) (* 9 1 )
          )
          (count throwAttemptFromDoor:basketball)
        )
        (>= 4 6 )
      )
      (<= (count pillowMovedToRoomCenter:green) (external-forall-maximize (count-same-positions throwAttemptFromDoor:yellow_pyramid_block) ) )
      (and
        (or
          (or
            (or
              (>= (* 3 (* (count pillowMovedToRoomCenter:pink) (count-once-per-objects pillowMovedToRoomCenter:pink) 5 )
                )
                3
              )
              (or
                (>= (count-unique-positions pillowMovedToRoomCenter:pink) (total-time) )
                (< (* (not 2 ) 2 )
                  (+ 5 (total-score) )
                )
              )
              (>= (total-score) (total-time) )
            )
            (> (count throwAttemptFromDoor:doggie_bed) (count-measure pillowMovedToRoomCenter:pyramid_block) )
            (not
              (>= (count-once-per-objects throwAttemptFromDoor:beachball) (count-once-per-objects pillowMovedToRoomCenter:golfball) )
            )
          )
          (<= 5 4 )
        )
        (not
          (>= (count-once-per-objects throwAttemptFromDoor:basketball:golfball) 5 )
        )
      )
    )
    (>= 2 1 )
  )
)
(:scoring
  4
)
)

(define (game game-id-396) (:domain many-objects-room-v1)
(:setup
  (exists (?h - dodgeball)
    (and
      (game-optional
        (and
          (not
            (adjacent_side ?h ?h ?h)
          )
          (exists (?o2 - red_dodgeball)
            (rug_color_under ?o2 ?o2)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToChair
      (exists (?b - cube_block)
        (then
          (once (and (not (not (and (not (> 6 6) ) (not (not (in ?b ?b) ) ) ) ) ) (adjacent ?b ?b) (not (and (and (agent_holds ?b) (and (and (in_motion ?b) ) (in_motion ?b) (and (not (touch ?b ?b) ) (on ?b ?b) ) (agent_holds ?b) (not (rug_color_under ?b block) ) (in_motion ?b) (agent_holds ?b) (< 9 (building_size ?b)) (agent_holds ?b) (not (in ?b ?b) ) ) ) (and (agent_holds agent) (and (agent_holds ?b) (touch ?b rug) ) ) (< (distance ?b ?b) 1) ) ) ) )
          (once (rug_color_under ?b ?b) )
          (once (and (touch desk ?b) (on ?b ?b) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (total-time) 7 )
  )
)
(:scoring
  2
)
)

(define (game game-id-397) (:domain few-objects-room-v1)
(:setup
  (exists (?d - wall)
    (and
      (exists (?x - (either cellphone desktop))
        (game-conserved
          (same_color ?d ?d)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b9 - (either laptop golfball))
      (and
        (preference gameObjectToBin
          (exists (?b6 - ball)
            (then
              (once (agent_holds ?b9) )
              (hold (and (and (in_motion ?b9) (not (agent_holds ?b9) ) ) (and (and (not (in ?b9 ?b9) ) (between ?b9 ?b9 ?b6) ) (agent_holds ?b9) ) (on ?b6 ?b9) (in_motion ?b6) (not (not (not (and (not (on ?b6 ?b9) ) (touch ?b9 agent) ) ) ) ) (in_motion ?b6) ) )
              (once (in_motion ?b9) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (and
      (< (count gameObjectToBin:doggie_bed:dodgeball) (- (and 10 ) )
      )
    )
    (>= (- 10 )
      (- (count gameObjectToBin:golfball) )
    )
  )
)
(:scoring
  (count-once-per-objects gameObjectToBin:purple)
)
)

(define (game game-id-398) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (not
      (in_motion bed)
    )
  )
)
(:constraints
  (and
    (forall (?b - hexagonal_bin)
      (and
        (preference throwToRampToBin
          (exists (?p2 - hexagonal_bin ?g - ball)
            (then
              (hold (and (adjacent ?g ?g) (in_motion ?b) ) )
              (hold (same_type ?g bed) )
              (once (not (not (touch desk ?b) ) ) )
            )
          )
        )
        (preference cubeBlockInBuilding
          (exists (?c5 - cube_block)
            (then
              (hold-while (not (or (and (and (exists (?r - wall ?tb - color ?c ?r - teddy_bear) (adjacent ?b ?c) ) (and (agent_holds ?b) (in_motion ?b) ) ) (not (not (in_motion desk) ) ) ) (exists (?c3 - hexagonal_bin) (and (touch room_center ?b) (and (not (forall (?bl - (either cellphone bridge_block key_chain)) (and (>= (distance ?c5 ?b) (distance ?c3 agent)) (not (in_motion ?c3) ) ) ) ) (agent_holds ?b) ) ) ) ) ) (and (and (same_color ?b ?c5) (not (agent_holds ?c5) ) (< 6 1) ) (agent_holds ?c5) ) )
              (once (< 3 1) )
              (once (in_motion ?b) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* (count-once-per-objects throwToRampToBin:pink:basketball) (count-once cubeBlockInBuilding:beachball) )
      (* 0 (+ (count throwToRampToBin:dodgeball) (+ (count-same-positions throwToRampToBin:pink_dodgeball:beachball) (- (= 0 10 )
            )
          )
        )
      )
    )
    (<= (count-once throwToRampToBin:hexagonal_bin:orange) (* (* (+ (* (count cubeBlockInBuilding:dodgeball) 5 )
            (-
              (* 6 (- (count cubeBlockInBuilding:blue_dodgeball:dodgeball) )
              )
              7
            )
          )
          (count cubeBlockInBuilding:basketball:hexagonal_bin)
        )
        (external-forall-maximize
          (count cubeBlockInBuilding:beachball)
        )
        100
        (= (* (count throwToRampToBin:red_pyramid_block) (count-once-per-objects throwToRampToBin:golfball) )
          20
        )
      )
    )
    (>= 10 (count throwToRampToBin:green) )
  )
)
(:scoring
  (* (< (* (count-once-per-objects cubeBlockInBuilding:green:beachball) )
      (count-once-per-objects cubeBlockInBuilding:cube_block)
    )
    3
    (* (external-forall-minimize (* (count-once-per-objects throwToRampToBin:yellow) (count throwToRampToBin:basketball:dodgeball) )
      )
      (* (= 3 (+ 1 8 )
          20
        )
        10
        (count-once-per-objects cubeBlockInBuilding:golfball)
      )
    )
  )
)
)

(define (game game-id-399) (:domain many-objects-room-v1)
(:setup
  (exists (?b7 - ball)
    (game-conserved
      (and
        (and
          (in_motion ?b7)
          (equal_z_position ?b7 ?b7)
        )
        (and
          (on ?b7 floor)
          (and
            (>= 4 (distance ?b7 ?b7))
            (not
              (opposite ?b7 ?b7)
            )
            (on ?b7 front)
            (adjacent ?b7 ?b7)
          )
          (> 1 1)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballThrownToBinFromDesk
      (exists (?b ?b7 - ball ?h - (either dodgeball pen))
        (then
          (once (not (agent_holds ?h) ) )
          (once (on ?h ?h) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ 1 (+ (count-unique-positions dodgeballThrownToBinFromDesk:cube_block) (+ 2 4 )
      )
    )
    4
  )
)
(:scoring
  (count dodgeballThrownToBinFromDesk:purple)
)
)

(define (game game-id-400) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (not
      (in_motion agent)
    )
  )
)
(:constraints
  (and
    (preference throwObjectToBin
      (exists (?w - hexagonal_bin)
        (then
          (hold (exists (?d - dodgeball ?l - hexagonal_bin) (not (touch ?l ?l) ) ) )
          (once (not (not (agent_holds top_drawer) ) ) )
          (hold (exists (?d - dodgeball) (not (in_motion agent) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (* 5 (count-once throwObjectToBin:dodgeball) )
        (count throwObjectToBin:purple)
      )
      (and
        (>= (- (count-increasing-measure throwObjectToBin:beachball) )
          (- (* (count-increasing-measure throwObjectToBin:pink) (total-score) )
          )
        )
        (> 8 1 )
        (> 0 (not (count-once-per-external-objects throwObjectToBin:golfball:yellow) ) )
      )
      (> 3 (count throwObjectToBin:red) )
    )
    (or
      (not
        (or
          (>= (* (count-longest throwObjectToBin:yellow) (total-score) (+ 20 5 )
            )
            (+ (* (+ 2 3 )
                (count throwObjectToBin:bed)
              )
              4
            )
          )
        )
      )
    )
  )
)
(:scoring
  (- (count-once-per-objects throwObjectToBin:yellow) )
)
)

(define (game game-id-401) (:domain medium-objects-room-v1)
(:setup
  (exists (?x - dodgeball ?c - chair)
    (forall (?o4 ?d2 - ball)
      (game-conserved
        (and
          (not
            (in_motion ?o4)
          )
          (not
            (not
              (in_motion floor)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - dodgeball ?d - cube_block ?h - chair)
      (and
        (preference throwAttempt
          (exists (?c - ball ?h - (either alarm_clock key_chain))
            (then
              (hold-to-end (not (adjacent_side ?h rug ?h) ) )
              (hold (not (and (is_setup_object ?h) (and (adjacent ?h rug) (< 8 (distance ?h agent)) (not (in bed agent) ) (and (not (in_motion ?h) ) (in_motion ?h) ) ) (on ?h ?h) ) ) )
            )
          )
        )
        (preference objectThrownFromRug
          (exists (?h - hexagonal_bin)
            (then
              (once (is_setup_object ?h) )
              (once (in_motion ?h) )
              (hold (equal_x_position ?h ?h) )
            )
          )
        )
      )
    )
    (preference throwBallToBin
      (exists (?r - hexagonal_bin)
        (then
          (hold (agent_holds ?r) )
          (once (not (agent_holds ?r) ) )
          (once (not (not (agent_holds desk) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects throwBallToBin:alarm_clock) 3 )
)
(:scoring
  20
)
)

(define (game game-id-402) (:domain medium-objects-room-v1)
(:setup
  (exists (?ob - pillow)
    (game-optional
      (adjacent ?ob ?ob)
    )
  )
)
(:constraints
  (and
    (forall (?ob - (either dodgeball cube_block) ?b - building)
      (and
        (preference baseBlockInTowerAtEnd
          (exists (?c2 - beachball)
            (then
              (once (toggled_on ?c2) )
              (once (on ?b ?b) )
              (hold (and (not (not (faces ?b ?c2) ) ) (not (and (above ?c2 ?b) (in_motion ?c2) ) ) (and (exists (?d - block ?c - wall) (not (not (and (on agent ?b) (and (and (in_motion ?c2) (in_motion agent) (in ?c ?b) (in ?c2 ?c) (not (in_motion ?c2) ) (same_type ?c2 ?c2) (not (not (touch ?c2 ?b) ) ) (on agent ?c2) (not (on bed top_shelf) ) (not (in_motion agent) ) ) (agent_holds agent) (between ?c bed ?c2) ) ) ) ) ) (in_motion ?c2) ) ) )
            )
          )
        )
        (preference throwToBin
          (at-end
            (and
              (in_motion ?b)
              (adjacent ?b ?b)
            )
          )
        )
        (preference ballThrownThroughRampAndBlocksToBin
          (exists (?p - wall)
            (then
              (once (exists (?h ?b6 - beachball) (in_motion ?h) ) )
              (once (not (and (< (distance ?p ?p) (building_size desk)) (in_motion ?b) ) ) )
              (hold-while (same_color ?p room_center) (not (and (not (touch ?b door) ) (faces bed ?p) ) ) )
              (once (in_motion ?b) )
            )
          )
        )
      )
    )
    (preference teddyBearHitsBall
      (exists (?o2 - curved_wooden_ramp ?b - cube_block)
        (then
          (hold (in_motion ?b) )
          (hold (not (agent_holds ?b) ) )
          (once (on ?b ?b) )
        )
      )
    )
    (preference blockThrowAttempt
      (exists (?d ?c ?b ?b - wall)
        (then
          (once (and (on ?c ?b) (in_motion ?d) ) )
          (once (in_motion ?d) )
          (once-measure (not (> (distance ?b ?b) 1) ) (distance ?b ?b) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count baseBlockInTowerAtEnd:alarm_clock) 4 )
    (>= -30 1 )
    (>= (count throwToBin:golfball) 2 )
  )
)
(:scoring
  6
)
)

(define (game game-id-403) (:domain many-objects-room-v1)
(:setup
  (forall (?c6 - wall ?o - hexagonal_bin ?h - wall)
    (game-optional
      (adjacent_side ?h ?h east_sliding_door ?h)
    )
  )
)
(:constraints
  (and
    (preference itemsBroken
      (exists (?w1 - golfball)
        (then
          (once (agent_holds ?w1) )
          (once (and (on ?w1 ?w1) (exists (?h - hexagonal_bin ?b - hexagonal_bin) (not (not (not (agent_holds ?b) ) ) ) ) ) )
          (once (and (agent_holds rug) (in_motion ?w1) ) )
        )
      )
    )
  )
)
(:terminal
  (> (count-once-per-objects itemsBroken:pink) 7 )
)
(:scoring
  (+ 10 10 )
)
)

(define (game game-id-404) (:domain medium-objects-room-v1)
(:setup
  (forall (?s - hexagonal_bin ?w2 - hexagonal_bin)
    (forall (?b7 - (either tall_cylindrical_block cd))
      (game-optional
        (and
          (and
            (not
              (on ?w2 ?w2)
            )
          )
          (and
            (not
              (not
                (< (distance ?b7 ?b7) 8)
              )
            )
            (not
              (not
                (in_motion ?b7)
              )
            )
            (agent_holds ?w2)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference cubeBlockThrownToTopShelf
      (exists (?l2 - (either dodgeball pyramid_block))
        (then
          (hold (agent_holds room_center) )
          (once (in agent ?l2) )
          (hold (and (adjacent ?l2 ?l2) (not (not (and (and (in_motion rug) (agent_holds ?l2) ) (in_motion ?l2) ) ) ) ) )
        )
      )
    )
    (preference smallObjectThrownToBed
      (exists (?b - red_dodgeball)
        (then
          (hold (and (in_motion ?b) (touch ?b ?b) ) )
          (once (agent_holds agent) )
          (hold (and (and (agent_holds ?b) (and (between ?b ?b bed) (and (in_motion ?b) (and (adjacent_side ?b ?b ?b) (adjacent ?b ?b) ) (not (between ?b ?b ?b) ) ) ) ) (and (agent_holds bed) (not (or (and (in ?b ?b) (on ?b bed) ) (on ?b agent) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (- 5 (and (* (* (+ (count-once-per-objects cubeBlockThrownToTopShelf:beachball:basketball) 1 )
            (* (count-once-per-objects cubeBlockThrownToTopShelf:beachball) (count smallObjectThrownToBed:block) )
          )
          1
        )
        (and
          (external-forall-maximize
            10
          )
        )
        (* (count smallObjectThrownToBed:golfball) 12 )
      )
    )
    (count cubeBlockThrownToTopShelf:doggie_bed)
  )
)
(:scoring
  1
)
)

(define (game game-id-405) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-optional
        (not
          (forall (?h - cube_block ?s - block ?h - hexagonal_bin)
            (not
              (and
                (adjacent ?h ?h)
                (touch ?h desk)
              )
            )
          )
        )
      )
    )
    (exists (?d - dodgeball)
      (or
        (exists (?r ?c2 ?d - hexagonal_bin ?w2 - cube_block)
          (game-conserved
            (and
              (not
                (not
                  (not
                    (not
                      (or
                        (adjacent_side ?w2 ?d agent ?w2)
                        (and
                          (on blue ?d)
                          (and
                            (in_motion ?w2)
                            (agent_holds ?w2)
                          )
                        )
                      )
                    )
                  )
                )
              )
              (not
                (agent_holds ?w2)
              )
            )
          )
        )
        (and
          (and
            (and
              (game-conserved
                (agent_holds ?d)
              )
              (and
                (game-optional
                  (not
                    (not
                      (adjacent ?d ?d)
                    )
                  )
                )
                (game-conserved
                  (and
                    (and
                      (same_color ?d ?d)
                      (and
                        (agent_holds ?d)
                        (and
                          (and
                            (in_motion ?d)
                            (not
                              (and
                                (not
                                  (> 1 (distance desk ?d))
                                )
                                (touch ?d ?d)
                              )
                            )
                            (and
                              (= (distance ?d ?d) 1)
                              (agent_holds upright)
                            )
                          )
                          (in ?d ?d)
                        )
                      )
                      (agent_holds ?d)
                    )
                    (object_orientation ?d ?d)
                  )
                )
                (forall (?d - chair)
                  (game-conserved
                    (broken ?d)
                  )
                )
              )
              (game-optional
                (and
                  (not
                    (is_setup_object room_center)
                  )
                  (in_motion ?d)
                )
              )
            )
            (forall (?c4 - dodgeball ?p - curved_wooden_ramp)
              (and
                (and
                  (game-conserved
                    (agent_holds ?p)
                  )
                )
              )
            )
          )
        )
      )
    )
    (and
      (exists (?h - beachball)
        (and
          (game-conserved
            (exists (?d - (either dodgeball basketball))
              (in_motion ?h)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectWithMatchingColor
      (exists (?c2 - game_object ?o5 ?l1 - hexagonal_bin)
        (then
          (once (not (agent_holds ?l1) ) )
          (once (agent_holds ?o5) )
        )
      )
    )
  )
)
(:terminal
  (<= 3 (count objectWithMatchingColor:blue_cube_block) )
)
(:scoring
  (total-score)
)
)

(define (game game-id-406) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (in_motion desk)
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?d - game_object)
        (at-end
          (not
            (in_motion ?d)
          )
        )
      )
    )
  )
)
(:terminal
  (> (* (count throwAttempt:block:hexagonal_bin) (and (+ 1 (* (count throwAttempt:yellow) 6 )
        )
        (count-measure throwAttempt:hexagonal_bin:purple)
      )
    )
    6
  )
)
(:scoring
  (* 2 (* 5 (= (count-once-per-external-objects throwAttempt:white) 2 )
      (count-once throwAttempt:book)
    )
  )
)
)

(define (game game-id-407) (:domain few-objects-room-v1)
(:setup
  (exists (?p3 - beachball ?c ?o2 - dodgeball)
    (forall (?w1 - cube_block ?h - hexagonal_bin)
      (and
        (game-optional
          (and
            (agent_holds ?c)
            (and
              (and
                (in ?h ?c)
                (in room_center ?c)
              )
              (agent_holds ?h)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?s - red_dodgeball ?h - hexagonal_bin)
      (and
        (preference blockThrowAttempt
          (exists (?c4 - hexagonal_bin)
            (then
              (once (and (and (not (in desk ?h) ) (< (distance door top_drawer) 1) ) (and (adjacent ?h ?h) (not (and (not (and (in ?h ?h) (not (same_type ?c4 ?h) ) ) ) (and (not (agent_holds ?h) ) (and (and (in_motion ?h) (same_type ?c4 ?h) ) (on ?c4 ?h) ) (in agent top_drawer) (in agent ?h) (not (not (and (touch ?c4 ?h) (or (in_motion ?c4) (in_motion room_center) ) ) ) ) (touch ?c4 ?c4) ) (> 1 1) ) ) ) ) )
              (hold-while (and (and (on ?c4 ?c4) (and (in_motion ?h) (not (not (not (touch ?c4 desk) ) ) ) ) ) (and (agent_holds ?h) (and (in_motion south_west_corner) (in ?c4 ?h) ) ) (< 2 (distance floor ?c4)) ) (in_motion ?c4) (not (in_motion ?h) ) )
              (once (broken ?h) )
            )
          )
        )
        (preference smallObjectThrownToBed
          (exists (?d1 - dodgeball)
            (then
              (hold (on ?d1 ?h) )
              (once (agent_holds rug) )
              (hold (and (not (on bed desk) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< (count smallObjectThrownToBed:green) (not (count-once-per-objects blockThrowAttempt:hexagonal_bin) ) )
)
(:scoring
  (count-once smallObjectThrownToBed:blue_dodgeball:red)
)
)

(define (game game-id-408) (:domain few-objects-room-v1)
(:setup
  (or
    (exists (?h - (either dodgeball yellow_cube_block))
      (and
        (exists (?b - cylindrical_block)
          (or
            (forall (?t - dodgeball ?s - hexagonal_bin)
              (game-conserved
                (adjacent_side ?b ?h ?s)
              )
            )
            (not
              (forall (?h - (either cellphone golfball))
                (and
                  (game-optional
                    (object_orientation ?h ?b)
                  )
                  (game-optional
                    (not
                      (faces pink_dodgeball ?h)
                    )
                  )
                  (and
                    (and
                      (and
                        (game-optional
                          (forall (?b - dodgeball ?r1 - (either dodgeball cylindrical_block wall cube_block key_chain hexagonal_bin dodgeball))
                            (and
                              (on ?r1 ?r1)
                              (on ?r1 ?r1)
                              (or
                                (in_motion ?b)
                                (exists (?r1 - dodgeball)
                                  (< (distance ?b ?h) (distance ?r1 ?r1))
                                )
                              )
                              (agent_holds ?r1)
                            )
                          )
                        )
                      )
                      (forall (?d - teddy_bear ?b3 - beachball)
                        (and
                          (exists (?o - hexagonal_bin)
                            (exists (?d - dodgeball ?c - hexagonal_bin)
                              (and
                                (and
                                  (forall (?h - doggie_bed)
                                    (exists (?t1 - hexagonal_bin ?w - ball)
                                      (exists (?b - chair ?l4 - (either lamp book))
                                        (exists (?w - dodgeball)
                                          (forall (?o1 - hexagonal_bin)
                                            (forall (?b - tan_cube_block)
                                              (exists (?h - chair)
                                                (exists (?c - curved_wooden_ramp)
                                                  (and
                                                    (exists (?h - hexagonal_bin ?b8 - dodgeball)
                                                      (and
                                                        (exists (?b ?g - hexagonal_bin)
                                                          (forall (?h - dodgeball ?c ?t - curved_wooden_ramp)
                                                            (exists (?d - cylindrical_block)
                                                              (exists (?w2 - dodgeball ?t - hexagonal_bin)
                                                                (game-conserved
                                                                  (not
                                                                    (on ?c ?t)
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                        (and
                                                          (game-optional
                                                            (equal_x_position ?c agent)
                                                          )
                                                          (forall (?c - (either cd dodgeball laptop) ?f - building ?h - building)
                                                            (and
                                                              (forall (?b - cube_block)
                                                                (exists (?b - hexagonal_bin)
                                                                  (forall (?r - hexagonal_bin)
                                                                    (exists (?b - dodgeball ?b1 - cube_block)
                                                                      (and
                                                                        (exists (?r - building)
                                                                          (and
                                                                            (game-optional
                                                                              (in_motion ?b)
                                                                            )
                                                                          )
                                                                        )
                                                                        (forall (?b7 - hexagonal_bin)
                                                                          (and
                                                                            (and
                                                                              (game-conserved
                                                                                (adjacent agent ?l4)
                                                                              )
                                                                            )
                                                                            (and
                                                                              (or
                                                                                (game-conserved
                                                                                  (not
                                                                                    (in desk ?b7)
                                                                                  )
                                                                                )
                                                                                (exists (?h - hexagonal_bin)
                                                                                  (forall (?o - wall)
                                                                                    (game-conserved
                                                                                      (not
                                                                                        (faces ?h ?c)
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                              (game-conserved
                                                                                (not
                                                                                  (not
                                                                                    (open ?b3)
                                                                                  )
                                                                                )
                                                                              )
                                                                              (game-conserved
                                                                                (adjacent agent ?b3)
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                        (game-conserved
                                                                          (agent_holds ?l4)
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                              (game-conserved
                                                                (game_start )
                                                              )
                                                            )
                                                          )
                                                          (game-conserved
                                                            (agent_holds ?c)
                                                          )
                                                        )
                                                        (exists (?b - flat_block ?b - ball)
                                                          (game-optional
                                                            (agent_holds ?w)
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                  (and
                                    (game-conserved
                                      (> 5 (distance ?b ?b))
                                    )
                                    (exists (?b3 - wall)
                                      (exists (?o3 - red_dodgeball)
                                        (game-optional
                                          (in_motion ?b3)
                                        )
                                      )
                                    )
                                    (and
                                      (exists (?o - hexagonal_bin)
                                        (forall (?l1 - desk_shelf)
                                          (game-conserved
                                            (in_motion ?h)
                                          )
                                        )
                                      )
                                    )
                                    (and
                                      (and
                                        (or
                                          (game-conserved
                                            (exists (?o4 ?b10 ?t1 - curved_wooden_ramp)
                                              (adjacent agent desk)
                                            )
                                          )
                                        )
                                        (and
                                          (exists (?l2 - (either mug book))
                                            (forall (?l2 - (either cylindrical_block cylindrical_block))
                                              (and
                                                (game-conserved
                                                  (and
                                                    (and
                                                      (same_object ?b3 bed)
                                                      (agent_holds ?b)
                                                    )
                                                    (object_orientation ?b3 ?c)
                                                    (and
                                                      (on ?b ?b3)
                                                      (and
                                                        (on ?c green_golfball)
                                                        (on ?b ?c)
                                                        (and
                                                          (agent_holds agent)
                                                          (not
                                                            (and
                                                              (in_motion ?l2)
                                                              (= (distance room_center ?l2) (distance ?b3 ?b))
                                                            )
                                                          )
                                                        )
                                                        (in_motion ?b3)
                                                        (not
                                                          (agent_holds ?o)
                                                        )
                                                        (agent_holds ?o)
                                                        (and
                                                          (and
                                                            (and
                                                              (or
                                                                (not
                                                                  (not
                                                                    (and
                                                                      (same_type ?c front_left_corner)
                                                                      (exists (?b3 - wall ?h - drawer ?c - curved_wooden_ramp ?c5 - pillow)
                                                                        (in_motion ?h)
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                                (adjacent_side ?b3 ?o ?h)
                                                                (in_motion desk)
                                                              )
                                                              (not
                                                                (object_orientation ?c ?b3)
                                                              )
                                                            )
                                                            (agent_holds ?c)
                                                          )
                                                          (in_motion ?h)
                                                          (exists (?l1 - beachball)
                                                            (agent_holds upside_down)
                                                          )
                                                        )
                                                        (and
                                                          (and
                                                            (not
                                                              (agent_holds rug)
                                                            )
                                                            (= 1 1)
                                                          )
                                                          (forall (?c6 - ball)
                                                            (not
                                                              (in_motion ?l2)
                                                            )
                                                          )
                                                        )
                                                        (and
                                                          (agent_holds ?b3)
                                                          (and
                                                            (not
                                                              (in ?b ?c)
                                                            )
                                                            (not
                                                              (toggled_on ?c)
                                                            )
                                                          )
                                                        )
                                                        (adjacent ?o ?c)
                                                        (is_setup_object front_left_corner)
                                                        (in_motion ?l2)
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                        (and
                                          (game-optional
                                            (touch pink agent)
                                          )
                                          (exists (?d - game_object)
                                            (game-optional
                                              (touch ?b ?o)
                                            )
                                          )
                                        )
                                      )
                                    )
                                    (forall (?b ?l4 - cube_block)
                                      (exists (?d - hexagonal_bin ?h - pyramid_block)
                                        (game-conserved
                                          (same_object ?o ?l4)
                                        )
                                      )
                                    )
                                  )
                                  (and
                                    (game-optional
                                      (on brown ?b)
                                    )
                                  )
                                )
                                (game-optional
                                  (on ?h ?b)
                                )
                              )
                            )
                          )
                        )
                      )
                      (and
                        (game-conserved
                          (adjacent ?b ?b)
                        )
                        (game-optional
                          (and
                            (game_over )
                            (and
                              (object_orientation ?h ?b)
                              (between ?b bed ?b)
                            )
                            (in_motion ?h)
                          )
                        )
                      )
                      (and
                        (and
                          (exists (?c - curved_wooden_ramp)
                            (and
                              (game-conserved
                                (> 1 (distance ?b ?b))
                              )
                              (game-optional
                                (equal_x_position ?b ?c)
                              )
                              (and
                                (or
                                  (exists (?l1 - building)
                                    (exists (?bl - chair)
                                      (game-optional
                                        (in ?c room_center)
                                      )
                                    )
                                  )
                                  (game-optional
                                    (agent_holds sideways)
                                  )
                                  (game-optional
                                    (not
                                      (not
                                        (agent_holds ?b)
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                  (game-conserved
                    (and
                      (not
                        (equal_z_position ?b room_center)
                      )
                      (agent_holds ?b)
                    )
                  )
                  (and
                    (forall (?db - cube_block ?o2 - dodgeball)
                      (game-conserved
                        (agent_holds ?h)
                      )
                    )
                    (exists (?w1 - doggie_bed)
                      (and
                        (and
                          (game-conserved
                            (agent_holds agent)
                          )
                          (exists (?w1 - (either ball cd))
                            (and
                              (exists (?c2 - shelf)
                                (exists (?ob - (either dodgeball flat_block) ?s - hexagonal_bin)
                                  (and
                                    (game-conserved
                                      (agent_holds ?b)
                                    )
                                    (exists (?o3 ?b - game_object ?ob - dodgeball)
                                      (and
                                        (and
                                          (game-optional
                                            (on ?w1 ?s)
                                          )
                                          (forall (?o1 - ball)
                                            (exists (?t - (either doggie_bed hexagonal_bin cylindrical_block))
                                              (game-conserved
                                                (same_type ?c2 bed)
                                              )
                                            )
                                          )
                                          (and
                                            (game-optional
                                              (touch desk agent)
                                            )
                                          )
                                          (exists (?b10 - bridge_block)
                                            (exists (?h - block)
                                              (and
                                                (exists (?b - dodgeball)
                                                  (game-optional
                                                    (not
                                                      (touch side_table ?h)
                                                    )
                                                  )
                                                )
                                                (exists (?h - curved_wooden_ramp)
                                                  (exists (?b - triangular_ramp)
                                                    (forall (?l - hexagonal_bin)
                                                      (game-conserved
                                                        (agent_holds ?h)
                                                      )
                                                    )
                                                  )
                                                )
                                                (exists (?d - building)
                                                  (forall (?h - ball)
                                                    (or
                                                      (game-conserved
                                                        (in_motion ?c2)
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                          (exists (?b7 ?t2 - (either cube_block key_chain) ?w1 - doggie_bed)
                                            (game-conserved
                                              (in_motion ?b)
                                            )
                                          )
                                        )
                                        (forall (?o - ball)
                                          (game-optional
                                            (in_motion ?b)
                                          )
                                        )
                                      )
                                    )
                                    (and
                                      (and
                                        (game-conserved
                                          (on ?b agent)
                                        )
                                        (exists (?l1 - hexagonal_bin)
                                          (or
                                            (exists (?r - game_object)
                                              (forall (?o2 - curved_wooden_ramp ?b4 - beachball)
                                                (game-optional
                                                  (and
                                                    (in_motion ?w1)
                                                    (in ?w1 ?s)
                                                    (above ?r ?s)
                                                  )
                                                )
                                              )
                                            )
                                            (exists (?bl - hexagonal_bin)
                                              (and
                                                (game-conserved
                                                  (in_motion ?l1)
                                                )
                                                (game-conserved
                                                  (and
                                                    (adjacent_side ?c2 ?h ?h)
                                                    (not
                                                      (not
                                                        (agent_holds ?h)
                                                      )
                                                    )
                                                    (agent_holds ?b)
                                                  )
                                                )
                                                (game-optional
                                                  (agent_holds ?b)
                                                )
                                                (exists (?d - ball ?h - block)
                                                  (not
                                                    (and
                                                      (and
                                                        (forall (?c - ball ?h - curved_wooden_ramp ?d1 - hexagonal_bin ?o - dodgeball)
                                                          (exists (?w - hexagonal_bin)
                                                            (game-conserved
                                                              (in_motion ?w)
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                            (forall (?l1 - (either bridge_block alarm_clock laptop))
                                              (game-optional
                                                (and
                                                  (object_orientation ?s ?h)
                                                  (agent_holds ?w1)
                                                )
                                              )
                                            )
                                          )
                                        )
                                        (game-conserved
                                          (and
                                            (and
                                              (not
                                                (adjacent ?s ?b)
                                              )
                                              (and
                                                (agent_holds ?w1)
                                                (and
                                                  (and
                                                    (same_color agent rug)
                                                    (and
                                                      (not
                                                        (and
                                                          (and
                                                            (agent_holds ?s)
                                                            (on ?w1 ?s)
                                                            (adjacent ?h floor)
                                                          )
                                                          (on ?b ?c2)
                                                        )
                                                      )
                                                      (object_orientation ?c2 agent)
                                                      (not
                                                        (and
                                                          (in_motion ?w1)
                                                          (in ?s bed)
                                                        )
                                                      )
                                                    )
                                                  )
                                                  (not
                                                    (in_motion ?c2)
                                                  )
                                                )
                                              )
                                            )
                                            (in_motion ?c2)
                                          )
                                        )
                                      )
                                      (and
                                        (forall (?h - cube_block)
                                          (and
                                            (not
                                              (forall (?d - dodgeball)
                                                (and
                                                  (game-conserved
                                                    (in_motion ?h)
                                                  )
                                                )
                                              )
                                            )
                                            (exists (?h - (either curved_wooden_ramp yellow_cube_block cellphone))
                                              (exists (?d - pyramid_block ?b - hexagonal_bin)
                                                (and
                                                  (game-conserved
                                                    (agent_holds brown)
                                                  )
                                                  (exists (?w - hexagonal_bin ?w - hexagonal_bin ?d - cube_block)
                                                    (game-optional
                                                      (and
                                                        (on ?h ?w1)
                                                        (not
                                                          (not
                                                            (not
                                                              (in_motion ?b)
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                  (and
                                                    (game-conserved
                                                      (agent_holds ?b)
                                                    )
                                                    (game-optional
                                                      (on agent ?h)
                                                    )
                                                    (and
                                                      (game-optional
                                                        (touch ?w1 ?b)
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                        (game-conserved
                          (not
                            (in_motion bed)
                          )
                        )
                        (and
                          (and
                            (exists (?b ?p - pillow)
                              (exists (?s - (either cylindrical_block doggie_bed bridge_block))
                                (and
                                  (and
                                    (game-conserved
                                      (and
                                        (and
                                          (and
                                            (in_motion ?s)
                                            (not
                                              (not
                                                (in_motion ?p)
                                              )
                                            )
                                          )
                                          (and
                                            (exists (?d1 - pyramid_block)
                                              (exists (?b - ball)
                                                (not
                                                  (agent_holds north_wall)
                                                )
                                              )
                                            )
                                            (open ?s)
                                          )
                                        )
                                        (on desk ?b)
                                      )
                                    )
                                  )
                                  (and
                                    (not
                                      (exists (?b - hexagonal_bin)
                                        (and
                                          (game-optional
                                            (rug_color_under ?w1 ?w1)
                                          )
                                          (forall (?o - (either yellow_cube_block ball))
                                            (game-conserved
                                              (not
                                                (and
                                                  (on ?p ?w1)
                                                  (or
                                                    (and
                                                      (agent_holds front_left_corner)
                                                      (not
                                                        (< 1 (distance rug agent))
                                                      )
                                                    )
                                                    (not
                                                      (agent_holds ?s)
                                                    )
                                                  )
                                                  (agent_holds ?h)
                                                )
                                              )
                                            )
                                          )
                                          (game-optional
                                            (between ?h ?s ?h)
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                          (game-conserved
                            (and
                              (is_setup_object ?b)
                              (not
                                (in_motion ?b)
                              )
                            )
                          )
                          (exists (?h - ball)
                            (forall (?d - hexagonal_bin)
                              (game-conserved
                                (opposite ?h ?b)
                              )
                            )
                          )
                          (exists (?h - dodgeball)
                            (and
                              (forall (?d - hexagonal_bin)
                                (and
                                  (game-optional
                                    (on ?b ?w1)
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
        (forall (?w2 - wall)
          (and
            (game-conserved
              (and
                (not
                  (in_motion ?h)
                )
                (in_motion ?h)
              )
            )
            (game-conserved
              (exists (?h - dodgeball ?l3 - chair ?h - flat_block)
                (not
                  (not
                    (agent_holds ?h)
                  )
                )
              )
            )
          )
        )
        (or
          (game-conserved
            (not
              (exists (?r - hexagonal_bin ?c - hexagonal_bin ?d - hexagonal_bin ?b - hexagonal_bin)
                (toggled_on ?h)
              )
            )
          )
          (game-conserved
            (agent_holds ?h)
          )
        )
      )
    )
    (and
      (game-conserved
        (not
          (not
            (exists (?b3 - building ?b5 - hexagonal_bin)
              (in_motion ?b5)
            )
          )
        )
      )
    )
    (game-conserved
      (forall (?g - blue_cube_block)
        (on ?g ?g)
      )
    )
  )
)
(:constraints
  (and
    (forall (?b4 - dodgeball)
      (and
        (preference blockPickedUp
          (exists (?b8 - game_object ?h ?b1 - hexagonal_bin)
            (then
              (hold (touch ?b1 ?h) )
              (once (and (>= (distance ?h ?b4) (building_size ?h)) (in_motion ?b1) ) )
              (once (agent_holds ?h) )
            )
          )
        )
      )
    )
    (preference throwMovesBeachballWithoutKnockingTeddy
      (exists (?d - teddy_bear)
        (at-end
          (agent_holds desk)
        )
      )
    )
    (preference dodgeballFromRugToBin
      (exists (?h - building ?g - (either wall tall_cylindrical_block cube_block))
        (then
          (once (on ?g ?g) )
          (hold (not (in ?g ?g) ) )
          (hold (not (not (not (object_orientation ?g ?g) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (= (external-forall-maximize 5 ) (count-once-per-external-objects throwMovesBeachballWithoutKnockingTeddy:dodgeball) )
)
(:scoring
  (total-time)
)
)

(define (game game-id-409) (:domain many-objects-room-v1)
(:setup
  (exists (?w - chair)
    (game-conserved
      (not
        (agent_holds ?w)
      )
    )
  )
)
(:constraints
  (and
    (preference smallItemsInPlace
      (exists (?r - block ?b1 - hexagonal_bin ?l - beachball)
        (at-end
          (and
            (not
              (and
                (and
                  (and
                    (on ?l ?l)
                    (adjacent ?l ?l)
                  )
                  (not
                    (and
                      (touch agent ?l)
                      (on ?l ?l)
                      (is_setup_object ?l)
                    )
                  )
                )
                (not
                  (and
                    (in desk ?l)
                    (agent_holds ?l)
                  )
                )
              )
            )
            (in ?l agent)
          )
        )
      )
    )
    (forall (?o - hexagonal_bin)
      (and
        (preference objectInBuilding
          (exists (?d - game_object)
            (then
              (once (exists (?b7 - (either desktop cylindrical_block yellow_cube_block)) (game_start ) ) )
              (once (on ?d ?o) )
              (hold-while (equal_x_position ?o agent) (not (same_type ?o ?d) ) )
            )
          )
        )
      )
    )
    (preference ballRolledOnRampToRug
      (exists (?h - ball)
        (then
          (once (in_motion ?h) )
          (once (in_motion ?h) )
          (once (not (in_motion ?h) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 10 )
)
(:scoring
  1
)
)

(define (game game-id-410) (:domain many-objects-room-v1)
(:setup
  (exists (?bl - golfball)
    (and
      (and
        (exists (?d1 - (either book alarm_clock golfball))
          (exists (?c - (either pyramid_block))
            (game-conserved
              (agent_holds ?c)
            )
          )
        )
        (and
          (game-conserved
            (on tan ?bl)
          )
          (exists (?h - dodgeball ?b - hexagonal_bin)
            (and
              (game-conserved
                (agent_holds ?b)
              )
              (exists (?r2 - game_object)
                (not
                  (and
                    (game-conserved
                      (and
                        (not
                          (not
                            (agent_holds bed)
                          )
                        )
                        (agent_holds bed)
                      )
                    )
                  )
                )
              )
              (exists (?d - building)
                (game-conserved
                  (and
                    (not
                      (agent_holds ?b)
                    )
                    (game_start )
                  )
                )
              )
            )
          )
          (exists (?b1 - dodgeball)
            (game-optional
              (and
                (agent_holds ?bl)
                (agent_holds ?b1)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference cubeThrownToBin
      (exists (?o - (either blue_cube_block triangular_ramp) ?b ?h ?w - (either bridge_block cd cube_block pyramid_block))
        (at-end
          (in_motion ?b)
        )
      )
    )
    (preference objectToBinOnFirstTry
      (exists (?b2 - ball)
        (then
          (once (in bed ?b2) )
          (once (touch ?b2 bed) )
          (once (not (in_motion ?b2) ) )
        )
      )
    )
    (forall (?r ?h - drawer ?c1 - dodgeball)
      (and
        (preference castleBuilt
          (exists (?g - dodgeball)
            (then
              (once (in_motion ?c1) )
              (once (agent_holds ?c1) )
              (hold (agent_holds ?c1) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= (count cubeThrownToBin:purple) (count-once-per-objects cubeThrownToBin:dodgeball:golfball) )
)
(:scoring
  (* (count objectToBinOnFirstTry:hexagonal_bin:beachball) (count castleBuilt:basketball) )
)
)

(define (game game-id-411) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?d - chair)
      (forall (?c1 - game_object)
        (forall (?d - beachball ?d - beachball)
          (forall (?d - cube_block)
            (game-conserved
              (not
                (not
                  (on ?c1 ?c1)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference teddyBearHitsBall
      (exists (?g - hexagonal_bin)
        (then
          (once (on agent desk) )
          (once (and (agent_holds ?g) (in_motion agent) (not (not (agent_holds ?g) ) ) ) )
          (once (not (on ?g agent) ) )
        )
      )
    )
    (preference blindsOpened
      (exists (?b ?b3 - block ?c2 - ball)
        (then
          (hold (not (in_motion ?c2) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once blindsOpened:red) (+ (= (count teddyBearHitsBall:basketball) )
      (- (count-once-per-objects blindsOpened:yellow) )
    )
  )
)
(:scoring
  (count-once teddyBearHitsBall:blue_dodgeball)
)
)

(define (game game-id-412) (:domain medium-objects-room-v1)
(:setup
  (forall (?c - hexagonal_bin)
    (game-conserved
      (agent_holds ?c)
    )
  )
)
(:constraints
  (and
    (forall (?t1 - hexagonal_bin)
      (and
        (preference throwKnocksBlock
          (exists (?r - shelf ?r - building)
            (then
              (once (not (and (agent_holds ?r) (in ?r ?t1) ) ) )
              (hold (and (in_motion ?t1) (on ?t1 ?r) ) )
              (once (in_motion ?t1) )
            )
          )
        )
        (preference brownObjectMovedToRoomCenter
          (exists (?d - ball ?h - cube_block ?b6 - bridge_block)
            (then
              (once (same_color ?t1 ?b6) )
              (once (< (distance ?t1 ?b6) (distance ?t1 ?b6)) )
              (hold (touch room_center ?t1) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (total-time) (count throwKnocksBlock:golfball) )
)
(:scoring
  (and
    (* (external-forall-maximize (count brownObjectMovedToRoomCenter:beachball) ) (* (total-score) (count brownObjectMovedToRoomCenter:golfball) )
    )
    (and
      (count-once-per-objects brownObjectMovedToRoomCenter:yellow_pyramid_block:dodgeball)
      (count-once-per-objects throwKnocksBlock:beachball:golfball)
    )
    (total-score)
  )
)
)

(define (game game-id-413) (:domain many-objects-room-v1)
(:setup
  (forall (?h - doggie_bed ?l1 - (either beachball alarm_clock))
    (exists (?b - blinds)
      (game-conserved
        (and
          (and
            (in_motion ?l1)
            (touch ?b agent)
          )
          (in_motion agent)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectMovedRoomSide
      (exists (?t2 ?l - beachball ?t2 - pillow)
        (then
          (once (not (in_motion ?t2) ) )
          (once (not (and (on top_drawer ?t2) (not (and (not (agent_holds blinds) ) (and (in_motion ?t2) (in_motion ?t2) ) (= 1 2 (distance ?t2 ?t2)) ) ) ) ) )
          (once (on ?t2 right) )
        )
      )
    )
    (preference ballDroppedInBin
      (exists (?b - hexagonal_bin)
        (then
          (once (in_motion ?b) )
          (hold (in_motion ?b) )
          (once (agent_holds agent) )
        )
      )
    )
    (preference golfballInBinFromPillow
      (exists (?c - chair)
        (at-end
          (adjacent ?c ?c)
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count objectMovedRoomSide:hexagonal_bin) (+ (* (count golfballInBinFromPillow:beachball) 2 )
        (+ (* 20 5 )
          (count-once-per-objects objectMovedRoomSide:dodgeball)
          (count-once-per-objects objectMovedRoomSide:yellow:blue)
        )
      )
    )
    (and
      (or
        (or
          (or
            (>= (count objectMovedRoomSide:hexagonal_bin:doggie_bed) (count golfballInBinFromPillow:basketball) )
            (not
              (not
                (not
                  (> (count-once-per-objects ballDroppedInBin:blue) 8 )
                )
              )
            )
            (and
              (<= (* (count-once-per-objects ballDroppedInBin:yellow) (- (* (* (+ (count-once golfballInBinFromPillow:yellow) (+ (count-once ballDroppedInBin:green) (count-once-per-objects ballDroppedInBin:beachball:dodgeball) )
                          2
                        )
                        2
                      )
                      (count-once ballDroppedInBin:beachball)
                      (external-forall-minimize
                        (* (total-score) (- (count ballDroppedInBin:beachball) )
                          (- 3 )
                        )
                      )
                    )
                  )
                )
                (count-unique-positions golfballInBinFromPillow:purple:dodgeball)
              )
            )
            (>= (external-forall-maximize (+ (count-same-positions ballDroppedInBin:hexagonal_bin) (count objectMovedRoomSide:basketball:green) )
              )
              (count objectMovedRoomSide:golfball)
            )
          )
        )
        (and
          (<= (+ (count golfballInBinFromPillow:yellow) (* (* 10 (count-once-per-objects objectMovedRoomSide:dodgeball) (count objectMovedRoomSide:dodgeball) )
                (or
                  (count objectMovedRoomSide:golfball)
                  (* 5 (total-score) )
                  (count-once-per-objects ballDroppedInBin:pyramid_block:pink:basketball)
                )
              )
              (= (count objectMovedRoomSide:brown) (count-total golfballInBinFromPillow:doggie_bed) (= (+ 3 5 (count objectMovedRoomSide:basketball:beachball) (* (total-score) (count-once-per-external-objects objectMovedRoomSide:brown) )
                    (count-once-per-objects golfballInBinFromPillow:blue_pyramid_block)
                    (count golfballInBinFromPillow:pink:blue_cube_block:bed)
                  )
                  18
                )
              )
              (count objectMovedRoomSide:beachball)
              (- (* (count-once-per-objects ballDroppedInBin:basketball) (count-unique-positions objectMovedRoomSide:yellow) )
              )
              (total-score)
            )
            (count-once golfballInBinFromPillow:dodgeball:rug)
          )
          (or
            (<= (/ 5 (count ballDroppedInBin:brown) ) 10 )
            (>= (* (* 1 (count-once-per-objects golfballInBinFromPillow:pink) )
                (count ballDroppedInBin:tall_cylindrical_block)
              )
              10
            )
          )
          (or
            (>= (* (= 50 )
                (count-once-per-objects golfballInBinFromPillow:golfball)
                9
                (+ 15 (* 1 (count-once-per-external-objects ballDroppedInBin:dodgeball) )
                  16
                  4
                  (* 50 5 0 7 100 (* (count-total golfballInBinFromPillow:hexagonal_bin:hexagonal_bin) (count-total ballDroppedInBin:cube_block) )
                  )
                )
                3
                (count golfballInBinFromPillow:doggie_bed)
              )
              (* (count ballDroppedInBin:dodgeball) )
            )
            (>= (* 5 (>= (total-score) (and 2 ) )
              )
              (+ 1 )
            )
          )
        )
      )
      (>= 3 (count objectMovedRoomSide:hexagonal_bin) )
      (>= (total-score) (external-forall-maximize (* 3 (count-once-per-objects objectMovedRoomSide:alarm_clock) (count-measure ballDroppedInBin:blue_cube_block) )
        )
      )
    )
  )
)
(:scoring
  (* 300 20 )
)
)

(define (game game-id-414) (:domain medium-objects-room-v1)
(:setup
  (exists (?c6 - hexagonal_bin)
    (and
      (exists (?h - block ?w - chair ?b1 - dodgeball ?o - sliding_door ?h - (either cd key_chain dodgeball))
        (not
          (game-conserved
            (and
              (agent_holds ?h)
              (not
                (agent_holds ?c6)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - teddy_bear)
      (and
        (preference throwToRampToBin
          (then
            (once (adjacent ?b ?b) )
            (hold-while (in_motion ?b) (and (in_motion ?b) (agent_holds ?b) (in_motion ?b) (and (agent_holds ?b) (not (on ?b ?b) ) ) ) (in ?b ?b) )
            (hold (and (in_motion ?b) (agent_holds ?b) ) )
          )
        )
      )
    )
  )
)
(:terminal
  (= (+ (count-once-per-external-objects throwToRampToBin:pink_dodgeball:block) 2 )
    10
  )
)
(:scoring
  (count throwToRampToBin:dodgeball:dodgeball)
)
)

(define (game game-id-415) (:domain medium-objects-room-v1)
(:setup
  (forall (?c - (either golfball pyramid_block ball))
    (game-conserved
      (touch ?c ?c)
    )
  )
)
(:constraints
  (and
    (forall (?l4 - ball ?b - game_object)
      (and
        (preference dodgeballHitsBinBottom
          (exists (?d - cube_block)
            (then
              (once (agent_holds ?b) )
              (once (in_motion top_drawer) )
            )
          )
        )
      )
    )
    (forall (?d - hexagonal_bin)
      (and
        (preference throwAttempt
          (exists (?o - hexagonal_bin)
            (then
              (once (not (and (not (and (on desk room_center) (toggled_on brown) ) ) (on ?o left) ) ) )
              (hold-to-end (touch ?o front_left_corner) )
              (hold (and (exists (?h - (either pyramid_block cd desktop golfball)) (object_orientation bed ?o) ) (on ?d room_center) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 5 1 )
)
(:scoring
  (+ 1 7 )
)
)

(define (game game-id-416) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - teddy_bear)
      (exists (?b - chair)
        (game-optional
          (touch agent ?h)
        )
      )
    )
    (exists (?g - hexagonal_bin)
      (game-optional
        (in ?g ?g)
      )
    )
  )
)
(:constraints
  (and
    (preference golfballLandsInBinThroughRamp
      (exists (?o - golfball ?l2 - game_object)
        (then
          (once (game_over ) )
          (once (not (not (object_orientation ?l2 ?l2) ) ) )
          (once (and (and (adjacent_side ?l2 floor ?l2) (> (distance ?l2 ?l2) 2) ) (and (and (and (not (not (not (>= 1 (distance ?l2 agent)) ) ) ) (and (exists (?h - wall) (not (not (object_orientation agent ?h) ) ) ) (and (in_motion ?l2) (on room_center ?l2) (and (in_motion ?l2) (and (agent_holds ?l2) (in_motion ?l2) ) (not (on ?l2 ?l2) ) (agent_holds ?l2) (touch ?l2 desk) (in ?l2 agent) ) ) ) (and (on ?l2 ?l2) (>= 3 (distance ?l2 ?l2)) ) ) (and (agent_holds ?l2) (not (and (and (not (not (agent_holds floor) ) ) (adjacent ?l2 ?l2) ) (in_motion ?l2) ) ) ) (not (forall (?d - dodgeball ?d - (either pyramid_block laptop)) (or (in floor ?l2) ) ) ) ) (and (and (and (not (in_motion ?l2) ) (touch bed ?l2) ) (adjacent ?l2 bed) (in ?l2 ?l2) ) (and (in_motion ?l2) (and (agent_holds ?l2) (<= (distance ?l2 ?l2) 6) ) ) (> 2 1) (not (in_motion ?l2) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (> (* (< (count golfballLandsInBinThroughRamp) (count golfballLandsInBinThroughRamp:dodgeball:yellow) )
      (* 60 (+ (>= (count golfballLandsInBinThroughRamp:red:doggie_bed) (not (count-once golfballLandsInBinThroughRamp:dodgeball:red) ) )
          2
          (count-once golfballLandsInBinThroughRamp:pink:blue_pyramid_block)
          (+ (count golfballLandsInBinThroughRamp:basketball) (count golfballLandsInBinThroughRamp:dodgeball) )
          (count golfballLandsInBinThroughRamp:red:yellow:dodgeball)
          0
        )
      )
    )
    (+ (- (* (count golfballLandsInBinThroughRamp:pink) (* (count golfballLandsInBinThroughRamp:pink_dodgeball) (total-score) )
        )
      )
      (* (count golfballLandsInBinThroughRamp:tall_cylindrical_block:yellow) (count golfballLandsInBinThroughRamp:dodgeball:basketball) )
    )
  )
)
(:scoring
  5
)
)

(define (game game-id-417) (:domain medium-objects-room-v1)
(:setup
  (exists (?d - block)
    (exists (?d - (either golfball mug cylindrical_block))
      (exists (?o - block ?h - dodgeball)
        (and
          (and
            (exists (?o4 ?c - cylindrical_block)
              (and
                (exists (?h - game_object)
                  (game-optional
                    (agent_holds block)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o5 - (either key_chain wall) ?l1 - triangular_ramp ?b - ball)
      (and
        (preference objectMovedRoomSide
          (exists (?b - dodgeball)
            (then
              (hold (on desk bed) )
              (hold (not (agent_holds back) ) )
              (once (on ?b ?b) )
            )
          )
        )
        (preference dodgeballHitsPillowWithoutTouchingBlock
          (exists (?h - cube_block ?b - game_object ?d - (either book curved_wooden_ramp yellow_cube_block desktop desktop cylindrical_block pyramid_block))
            (then
              (hold (rug_color_under ?d ?d) )
              (hold (touch agent ?d) )
              (hold (or (in_motion ?d) (agent_holds bed) (touch ?b ?d) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (* (* (external-forall-maximize (* (count objectMovedRoomSide:block) (count-once-per-objects dodgeballHitsPillowWithoutTouchingBlock:dodgeball) (count dodgeballHitsPillowWithoutTouchingBlock) (+ (* (not 5 ) 6 )
                (* (count-once-per-objects objectMovedRoomSide:hexagonal_bin) 3 (* (count objectMovedRoomSide:hexagonal_bin:beachball) (+ 4 2 )
                  )
                )
              )
              (count dodgeballHitsPillowWithoutTouchingBlock:basketball)
            )
          )
          (count-once objectMovedRoomSide:basketball)
          (* 4 4 )
        )
        (count-once-per-objects dodgeballHitsPillowWithoutTouchingBlock:beachball:hexagonal_bin)
      )
      (* (count-longest objectMovedRoomSide:hexagonal_bin) (count-once-per-objects objectMovedRoomSide:beachball:dodgeball) )
      (count dodgeballHitsPillowWithoutTouchingBlock:basketball:dodgeball)
      30
      (* (count-shortest dodgeballHitsPillowWithoutTouchingBlock:pink:basketball) 5 )
      2
    )
    (* (count dodgeballHitsPillowWithoutTouchingBlock:dodgeball) 6 )
  )
)
(:scoring
  (+ 6 3 )
)
)

(define (game game-id-418) (:domain medium-objects-room-v1)
(:setup
  (forall (?h - dodgeball)
    (and
      (game-conserved
        (< 0.5 (distance ?h ?h))
      )
    )
  )
)
(:constraints
  (and
    (forall (?w2 - bridge_block)
      (and
        (preference basketMadeFromRug
          (exists (?h - hexagonal_bin)
            (at-end
              (on ?w2 ?w2)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (count-once-per-objects basketMadeFromRug:pink_dodgeball) (+ (total-score) (count-once-per-objects basketMadeFromRug:yellow) )
  )
)
(:scoring
  (* (* (count-increasing-measure basketMadeFromRug:beachball) (- (external-forall-maximize (* (+ (count basketMadeFromRug:red) (count basketMadeFromRug:dodgeball) (count-once-per-external-objects basketMadeFromRug:beachball) )
            (* (count-once-per-external-objects basketMadeFromRug:red_pyramid_block) (- (count basketMadeFromRug:red) 10 ) )
          )
        )
      )
    )
    1
  )
)
)

(define (game game-id-419) (:domain medium-objects-room-v1)
(:setup
  (not
    (game-conserved
      (and
        (not
          (not
            (in_motion agent)
          )
        )
        (exists (?b - cube_block ?x - wall)
          (and
            (and
              (not
                (and
                  (in_motion ?x)
                  (in_motion ?x)
                  (not
                    (and
                      (not
                        (broken ?x)
                      )
                      (in_motion ?x)
                      (not
                        (not
                          (not
                            (in_motion ?x)
                          )
                        )
                      )
                    )
                  )
                )
              )
              (in_motion upright)
            )
            (on ?x bed)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwFromEdgeOfRug
      (exists (?c - (either book doggie_bed yellow_cube_block))
        (then
          (once (agent_holds brown) )
          (once (in south_west_corner ?c) )
          (hold (is_setup_object ?c) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 3 3 )
    2
  )
)
(:scoring
  (* (count throwFromEdgeOfRug:beachball:basketball) (count-once-per-external-objects throwFromEdgeOfRug:alarm_clock) )
)
)

(define (game game-id-420) (:domain medium-objects-room-v1)
(:setup
  (forall (?d - wall ?l4 - doggie_bed ?c5 - golfball)
    (and
      (exists (?d - game_object)
        (game-conserved
          (on ?c5 ?d)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballRolledOnRampToRug
      (exists (?c - hexagonal_bin ?d - dodgeball)
        (then
          (hold (between ?d ?d ?d) )
          (once (and (< (distance ?d room_center) (distance ?d ?d)) ) )
          (once (in ?d ?d) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-once ballRolledOnRampToRug:pink_dodgeball) (count ballRolledOnRampToRug:dodgeball) )
    (= 5 (count-once ballRolledOnRampToRug:basketball) )
    (>= 180 (count ballRolledOnRampToRug:orange:beachball) )
  )
)
(:scoring
  (count-once-per-objects ballRolledOnRampToRug:white)
)
)

(define (game game-id-421) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (game-conserved
        (agent_holds desk)
      )
    )
    (exists (?r - building)
      (game-conserved
        (on desk ?r)
      )
    )
  )
)
(:constraints
  (and
    (forall (?db - beachball)
      (and
        (preference baseBlockInTowerAtEnd
          (exists (?o ?c - cube_block ?b3 - cube_block ?d - ball ?l2 - building ?o2 - flat_block)
            (at-end
              (same_color ?o2 ?db)
            )
          )
        )
        (preference objectMoved
          (exists (?b - hexagonal_bin)
            (then
              (once (in ?db ?b) )
              (hold (not (game_start ) ) )
              (hold (< (distance ?b ?b) (distance_side agent ?db ?b)) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (- (count-once-per-objects baseBlockInTowerAtEnd:hexagonal_bin:hexagonal_bin) )
    (* 4 (count baseBlockInTowerAtEnd:basketball) )
  )
)
(:scoring
  10
)
)

(define (game game-id-422) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (in_motion bridge_block)
  )
)
(:constraints
  (and
    (preference cubeBlockFromBedToShelf
      (exists (?b - dodgeball)
        (at-end
          (in room_center ?b)
        )
      )
    )
    (forall (?c6 ?h - dodgeball)
      (and
        (preference ballKnocksTeddy
          (then
            (hold (not (agent_holds ?c6) ) )
            (once (on ?c6 ?c6) )
            (once (and (not (and (or (agent_holds ?h) (in ?c6 door) ) (on room_center ?h) ) ) (agent_holds ?h) ) )
          )
        )
        (preference bookOnDeskShelf
          (exists (?d - dodgeball ?o1 - dodgeball)
            (then
              (once (in ?h ?o1) )
              (forall-sequence (?c - hexagonal_bin ?p - ball)
                (then
                  (once (agent_crouches ) )
                  (once (in desk ?h) )
                  (hold (agent_holds ?c6) )
                  (hold (on ?p ?p) )
                )
              )
              (hold (on ?o1 ?h) )
            )
          )
        )
      )
    )
    (forall (?p1 - ball ?c - beachball)
      (and
        (preference throwMissesBin
          (exists (?b - hexagonal_bin ?h - hexagonal_bin)
            (then
              (once (agent_holds rug) )
              (hold (not (agent_holds agent) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (* 10 (* (count-once-per-objects bookOnDeskShelf:hexagonal_bin:dodgeball) (+ (* (count bookOnDeskShelf:beachball) (count bookOnDeskShelf:beachball) )
          5
        )
      )
      (count-once-per-objects ballKnocksTeddy:yellow:triangle_block)
    )
  )
)
(:scoring
  (count ballKnocksTeddy:dodgeball)
)
)

(define (game game-id-423) (:domain few-objects-room-v1)
(:setup
  (exists (?h - cube_block)
    (and
      (exists (?t - pyramid_block)
        (forall (?c - hexagonal_bin)
          (game-optional
            (agent_holds ?h)
          )
        )
      )
      (and
        (and
          (exists (?l3 - desk_shelf ?f - ball)
            (game-conserved
              (exists (?r1 - hexagonal_bin)
                (and
                  (and
                    (in_motion ?h)
                    (and
                      (adjacent ?h ?f)
                      (forall (?o - block)
                        (same_color ?o ?h)
                      )
                    )
                  )
                  (< 1 (distance ?r1 ?f))
                )
              )
            )
          )
          (and
            (forall (?d1 - tall_cylindrical_block)
              (forall (?o2 - red_dodgeball ?h ?o3 ?d - ball ?h ?b - cube_block)
                (game-optional
                  (>= 0.5 (distance ?b bed))
                )
              )
            )
          )
        )
        (exists (?h - hexagonal_bin)
          (forall (?l3 - shelf ?d - cube_block)
            (forall (?t ?l2 ?w2 ?o2 ?b6 ?d1 - triangular_ramp)
              (not
                (and
                  (game-optional
                    (adjacent ?l2 ?d)
                  )
                )
              )
            )
          )
        )
      )
      (forall (?d - yellow_cube_block)
        (game-conserved
          (equal_z_position ?h ?h)
        )
      )
      (game-conserved
        (agent_holds ?h)
      )
    )
  )
)
(:constraints
  (and
    (preference throwFromDoorToBin
      (exists (?o - ball ?b1 - cube_block)
        (then
          (once (agent_holds south_west_corner) )
          (once (on ?b1 ?b1) )
          (hold (and (not (game_start ) ) (not (in ?b1 agent) ) ) )
        )
      )
    )
    (preference throwAttemptFromBehindBlock
      (exists (?h - doggie_bed ?h - pillow)
        (then
          (once (adjacent ?h ?h) )
          (hold (and (and (in ?h ?h) (and (exists (?d - cylindrical_block) (faces ?d bed) ) (in_motion agent) ) ) (and (and (adjacent ?h ?h) (and (and (and (agent_holds ?h) (in_motion ?h) (touch ?h ?h) ) (adjacent_side ?h ?h ?h) (in_motion ?h) (agent_holds ?h) (and (not (adjacent ?h ?h) ) (not (touch ?h ?h) ) ) (in_motion bed) (in_motion bed) ) (in_motion desk) ) ) (not (not (in_motion desk) ) ) (not (< (distance bed ?h) 1) ) (between ?h ?h ?h) (and (and (in ?h ?h) (and (agent_holds ?h) (not (same_type ?h ?h) ) ) ) (agent_holds ?h) ) (agent_holds ?h) (adjacent ?h ?h) ) (not (open ?h) ) ) )
        )
      )
    )
    (preference blockFromRugToDesk
      (exists (?b1 - game_object)
        (then
          (hold (not (in_motion ?b1) ) )
          (once-measure (exists (?c1 - doggie_bed) (not (on ?b1 ?b1) ) ) (distance ?b1 ?b1) )
          (once (on room_center ?b1) )
        )
      )
    )
  )
)
(:terminal
  (<= (count throwAttemptFromBehindBlock:blue_dodgeball) 2 )
)
(:scoring
  (count-once-per-objects throwFromDoorToBin:brown:pink)
)
)

(define (game game-id-424) (:domain medium-objects-room-v1)
(:setup
  (forall (?b ?b6 - doggie_bed)
    (forall (?r - building)
      (forall (?o - block)
        (exists (?d - building)
          (forall (?o - beachball ?l2 - doggie_bed)
            (exists (?h - doggie_bed)
              (and
                (game-conserved
                  (not
                    (and
                      (same_type ?d ?o)
                      (forall (?b - hexagonal_bin)
                        (agent_holds ?o)
                      )
                    )
                  )
                )
                (and
                  (exists (?w2 - doggie_bed)
                    (exists (?s - block)
                      (game-optional
                        (adjacent ?b6 agent)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectWithMatchingColor
      (exists (?d - dodgeball)
        (then
          (hold (not (agent_holds back) ) )
          (once (adjacent agent ?d) )
          (hold-while (on south_west_corner room_center) (in agent ?d) )
        )
      )
    )
    (preference watchOnShelf
      (exists (?h - curved_wooden_ramp)
        (then
          (once (not (in_motion ?h) ) )
          (hold (and (agent_holds ?h) ) )
          (once (not (object_orientation ?h ?h) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (not
      (not
        (or
          (>= (total-score) (count-once-per-external-objects objectWithMatchingColor:wall:golfball) )
        )
      )
    )
    (>= (* (* (+ 1 (* (- (< (+ 1 4 )
                  15
                )
              )
              (count-total watchOnShelf:top_drawer)
              (* (* (count-once-per-external-objects watchOnShelf:basketball) (total-score) 1 (+ (* 8 50 )
                    (count-once-per-objects objectWithMatchingColor:doggie_bed:dodgeball:green)
                  )
                  10
                )
                (* (count watchOnShelf:beachball) (total-time) )
              )
              (count objectWithMatchingColor:beachball)
            )
          )
          (count watchOnShelf:doggie_bed)
        )
        (> 6 (* (count objectWithMatchingColor:red) (* (count-once-per-objects objectWithMatchingColor:pink_dodgeball:cylindrical_block:hexagonal_bin) 4 )
            15
          )
        )
      )
      (external-forall-maximize
        (and
          (count-once objectWithMatchingColor:pink_dodgeball)
        )
      )
    )
    (and
      (>= (count watchOnShelf:blue_cube_block) (count objectWithMatchingColor:yellow_cube_block) )
    )
  )
)
(:scoring
  5
)
)

(define (game game-id-425) (:domain few-objects-room-v1)
(:setup
  (exists (?g - tan_cube_block ?d - (either triangle_block basketball) ?b1 - hexagonal_bin ?h - teddy_bear)
    (and
      (or
        (exists (?o - hexagonal_bin)
          (and
            (game-optional
              (not
                (adjacent ?h pink_dodgeball)
              )
            )
            (exists (?t ?l4 ?o1 ?b2 ?s ?o - dodgeball)
              (and
                (game-conserved
                  (in_motion ?o)
                )
              )
            )
          )
        )
        (exists (?d1 - hexagonal_bin)
          (game-conserved
            (same_color ?d1 ?h)
          )
        )
      )
      (game-conserved
        (or
          (not
            (agent_holds floor)
          )
          (not
            (agent_holds agent)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c - hexagonal_bin)
      (and
        (preference ballKnocksBlockFromRug
          (exists (?b4 - cube_block)
            (then
              (once (not (faces ?c ?c) ) )
              (hold-while (agent_holds ?c) (agent_holds ?b4) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (* (total-time) (count ballKnocksBlockFromRug:basketball) )
  )
)
(:scoring
  (count-once-per-objects ballKnocksBlockFromRug:pyramid_block)
)
)

(define (game game-id-426) (:domain many-objects-room-v1)
(:setup
  (exists (?l - hexagonal_bin ?b - (either book cd teddy_bear) ?b9 - dodgeball)
    (exists (?p2 - game_object ?b - hexagonal_bin)
      (forall (?d - hexagonal_bin)
        (forall (?d - ball)
          (and
            (exists (?g - hexagonal_bin ?p - game_object ?l - game_object)
              (game-conserved
                (and
                  (is_setup_object ?b)
                  (not
                    (exists (?c ?b1 - game_object ?c2 ?h - block)
                      (not
                        (in_motion ?c2)
                      )
                    )
                  )
                )
              )
            )
            (exists (?h - cube_block ?o2 - block)
              (and
                (exists (?c1 - (either golfball teddy_bear desktop))
                  (forall (?o3 ?c - blue_cube_block)
                    (game-conserved
                      (in_motion ?c1)
                    )
                  )
                )
                (and
                  (exists (?b - building ?b - tall_cylindrical_block ?d - hexagonal_bin)
                    (game-conserved
                      (not
                        (on ?b ?b9)
                      )
                    )
                  )
                )
              )
            )
            (and
              (and
                (game-conserved
                  (and
                    (in_motion ?b)
                    (not
                      (on ?b9 ?b)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?p - building ?b8 - red_dodgeball)
      (and
        (preference nonBlockPlacedInBuilding
          (exists (?w1 - ball)
            (then
              (once (not (not (toggled_on ?b8) ) ) )
              (hold-while (in_motion bed) (and (in_motion ?b8) (in_motion ?b8) (and (in_motion ?w1) (in_motion desk) (adjacent ?w1 ?w1) (in_motion ?w1) (and (in_motion ?b8) (is_setup_object ?b8) ) ) ) (and (not (and (not (and (and (in upside_down agent) (and (in ?w1 agent) (on agent rug) ) ) (not (and (adjacent_side agent room_center ?b8 ?b8) (agent_holds ?b8) (object_orientation ?b8 agent) (and (adjacent agent ?w1) (not (not (or (agent_holds ?w1) (in_motion ?w1) ) ) ) ) (or (opposite ?b8 ?b8) (and (in_motion rug) (not (agent_holds ?w1) ) ) ) ) ) ) ) (not (not (and (< 1 (x_position ?b8)) (and (agent_holds ?b8) (in_motion desk) ) ) ) ) ) ) (not (and (between front_left_corner ?b8 ?w1) (adjacent ?w1 ?w1) ) ) ) )
              (hold (in_motion ?w1) )
            )
          )
        )
        (preference blockIncorrectlyPicked
          (then
            (forall-sequence (?l - game_object ?b4 - dodgeball ?d - game_object)
              (then
                (once (and (not (agent_holds ?b8) ) (game_start ) (touch ?b8 ?d) (and (agent_holds ?d) (in_motion ?d) ) ) )
                (once (on floor ?d) )
              )
            )
            (once (on bed ?b8) )
          )
        )
        (preference objectsHidden
          (exists (?b - hexagonal_bin ?b3 - teddy_bear)
            (at-end
              (and
                (exists (?r1 - doggie_bed)
                  (and
                    (agent_holds ?b3)
                    (and
                      (< 1 (distance ?b8 ?b8))
                      (and
                        (not
                          (not
                            (not
                              (in pink_dodgeball floor)
                            )
                          )
                        )
                        (agent_holds ?b3)
                      )
                    )
                    (agent_holds ?r1)
                  )
                )
                (agent_holds ?b3)
                (on ?b8 ?b3)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (* 3 (not (count objectsHidden:beachball) ) )
  )
)
(:scoring
  (count objectsHidden:basketball)
)
)

(define (game game-id-427) (:domain medium-objects-room-v1)
(:setup
  (exists (?l3 ?b4 - hexagonal_bin)
    (game-conserved
      (not
        (on ?b4 agent)
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToDoggieBed
      (exists (?p1 - building)
        (then
          (once (not (not (and (forall (?bl ?l1 - game_object ?p2 ?b2 ?c - desk_shelf ?g - shelf) (and (in_motion ?g) (in_motion ?g) ) ) (in_motion ?p1) ) ) ) )
          (hold (in_motion ?p1) )
          (hold (on ?p1 ?p1) )
        )
      )
    )
  )
)
(:terminal
  (>= (count throwBallToDoggieBed:golfball) (- (- (count throwBallToDoggieBed:blue_dodgeball) )
    )
  )
)
(:scoring
  (count throwBallToDoggieBed:orange:basketball)
)
)

(define (game game-id-428) (:domain few-objects-room-v1)
(:setup
  (and
    (game-conserved
      (game_start )
    )
  )
)
(:constraints
  (and
    (preference blockInTowerAtEnd
      (exists (?h - ball ?p1 - dodgeball)
        (at-end
          (and
            (same_object ?p1 ?p1)
            (agent_holds ?p1)
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (< (count blockInTowerAtEnd:blue_dodgeball) 50 )
    (and
      (= 4 (count blockInTowerAtEnd:yellow_pyramid_block:side_table) )
      (>= (count blockInTowerAtEnd:purple) 2 )
    )
    (or
      (<= (count-overlapping blockInTowerAtEnd:rug) 3 )
      (>= (count-once-per-objects blockInTowerAtEnd:purple) (count blockInTowerAtEnd:blue) )
    )
  )
)
(:scoring
  (+ (and (* (count blockInTowerAtEnd:alarm_clock:beachball) (and (* (count-once blockInTowerAtEnd:beachball:triangle_block) (+ (+ 50 (count blockInTowerAtEnd:blue_dodgeball) )
              2
            )
          )
          (count blockInTowerAtEnd:dodgeball:dodgeball:beachball)
        )
      )
      3
    )
    5
  )
)
)

(define (game game-id-429) (:domain many-objects-room-v1)
(:setup
  (exists (?g - block ?h - dodgeball ?r - block)
    (exists (?r - block ?c - cube_block)
      (game-conserved
        (not
          (on agent ?r)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - hexagonal_bin ?d - dodgeball)
      (and
        (preference dodgeballsInPlace
          (exists (?o - building)
            (then
              (once (in_motion ?d) )
              (hold (in_motion ?o) )
              (hold (not (in_motion rug) ) )
            )
          )
        )
        (preference blockOnBlockInTowerAtEnd
          (exists (?o2 ?d - ball ?b9 - ball)
            (at-end
              (not
                (not
                  (agent_holds ?d)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> 3 (>= 4 (* (external-forall-maximize (count dodgeballsInPlace:orange) ) (* (count blockOnBlockInTowerAtEnd:green) (* (count blockOnBlockInTowerAtEnd:pink) 5 )
          100
        )
        (<= (external-forall-maximize 3 ) (count-once-per-objects dodgeballsInPlace:brown:blue_cube_block) )
      )
    )
  )
)
(:scoring
  1
)
)

(define (game game-id-430) (:domain medium-objects-room-v1)
(:setup
  (exists (?o3 - dodgeball)
    (and
      (and
        (exists (?o - curved_wooden_ramp ?h - game_object)
          (and
            (game-conserved
              (on ?o3 ?h)
            )
            (game-conserved
              (not
                (agent_holds ?h)
              )
            )
            (and
              (and
                (or
                  (not
                    (game-conserved
                      (< (distance front ?o3) 0.5)
                    )
                  )
                  (and
                    (forall (?w ?r - hexagonal_bin)
                      (exists (?p - hexagonal_bin ?b2 - hexagonal_bin)
                        (forall (?b ?db - dodgeball)
                          (and
                            (game-conserved
                              (not
                                (< (distance ?h bed) 0)
                              )
                            )
                          )
                        )
                      )
                    )
                    (game-optional
                      (and
                        (agent_holds ?h)
                        (not
                          (and
                            (forall (?h - block ?h - color)
                              (not
                                (in_motion agent)
                              )
                            )
                            (< (distance ?h ?o3) 4)
                            (and
                              (in_motion ?h)
                              (on ?h ?o3)
                              (on ?h ?o3)
                            )
                            (adjacent ?o3 ?o3)
                          )
                        )
                      )
                    )
                  )
                )
                (game-conserved
                  (not
                    (in ?h ?o3)
                  )
                )
                (exists (?ob - building)
                  (forall (?c - beachball ?h - doggie_bed)
                    (exists (?h - (either laptop teddy_bear))
                      (exists (?w2 - hexagonal_bin)
                        (forall (?l - game_object ?c1 - game_object)
                          (game-optional
                            (and
                              (not
                                (not
                                  (touch agent ?c1)
                                )
                              )
                              (on ?ob ?ob)
                              (not
                                (not
                                  (in ?w2 ?o3)
                                )
                              )
                              (and
                                (and
                                  (and
                                    (in_motion ?c1)
                                    (agent_holds ?o3)
                                    (in_motion ?h)
                                  )
                                  (in_motion ?ob)
                                )
                                (and
                                  (touch ?h ?o3)
                                  (on ?c1 agent)
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
              (forall (?w2 - triangular_ramp ?h - cube_block)
                (game-conserved
                  (agent_holds ?h)
                )
              )
              (not
                (game-conserved
                  (in_motion agent)
                )
              )
            )
          )
        )
        (and
          (exists (?h - dodgeball)
            (exists (?l2 - dodgeball)
              (and
                (and
                  (exists (?b9 - dodgeball ?b1 - wall)
                    (exists (?b8 - pillow ?d - building)
                      (exists (?w2 - pyramid_block ?o - wall)
                        (game-conserved
                          (and
                            (in ?o ?l2)
                            (in agent ?d)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
      (and
        (game-conserved
          (in_motion ?o3)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?w2 - watch ?h - (either laptop golfball wall))
      (and
        (preference ballToBinFromBed
          (exists (?p - curved_wooden_ramp ?o - hexagonal_bin)
            (then
              (hold (in_motion ?h) )
              (once (in ?o pillow) )
              (once (not (and (on room_center ?h) (agent_holds ?h) (and (and (and (and (agent_holds top_shelf) (not (agent_holds ?o) ) ) (agent_holds brown) (equal_z_position ?o ?h) ) (equal_x_position ?o ?o) ) (adjacent ?h ?o) ) (agent_holds ?o) (and (and (and (not (and (>= 4 6) (not (and (in_motion ?o) (and (and (or (agent_holds ?o) (agent_holds ?h) (on top_shelf room_center) (not (not (not (not (> 5 (distance brown ?h)) ) ) ) ) ) (on ?h agent) ) (not (in_motion ?o) ) ) (and (in_motion ?o) (agent_holds ?o) ) (not (and (in_motion ?h) (in_motion agent) (and (not (in_motion ?h) ) (and (in_motion agent) (exists (?p - chair) (in_motion ?o) ) ) ) (and (in ?h ?o) (agent_holds ?h) ) ) ) (exists (?o5 - hexagonal_bin ?b - chair) (on ?o ?h) ) (agent_holds ?o) (agent_holds door) ) ) ) ) (not (exists (?h - flat_block) (agent_holds ?o) ) ) (agent_holds ?h) ) (and (and (in_motion ?h) (not (on north_wall ?h) ) ) (on ?h ?h) ) ) (not (on ?h ?h) ) ) (agent_holds ?h) (not (and (in ?h ?h) (on agent agent) ) ) (in_motion agent) (and (and (on ?o ?h) (on ?h ?h) ) (not (equal_z_position ?h ?o) ) ) (not (same_object ?h rug) ) (on ?h ?h) (not (agent_holds ?o) ) ) ) )
            )
          )
        )
      )
    )
    (forall (?c4 - hexagonal_bin)
      (and
        (preference gameBlockFound
          (exists (?c - (either hexagonal_bin cube_block cd) ?d - chair)
            (at-end
              (on blue ?d)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (* (* 3 (count-once-per-objects gameBlockFound:dodgeball:dodgeball) )
      (count-once-per-objects gameBlockFound:yellow)
    )
    (count gameBlockFound:doggie_bed:yellow)
  )
)
(:scoring
  3
)
)

(define (game game-id-431) (:domain few-objects-room-v1)
(:setup
  (forall (?x - hexagonal_bin ?c - cube_block)
    (exists (?w2 - red_dodgeball)
      (exists (?b - flat_block ?d - dodgeball)
        (exists (?b - hexagonal_bin)
          (exists (?p3 - hexagonal_bin)
            (game-optional
              (touch desk ?p3)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwFromEdgeOfRug
      (exists (?tb - (either cellphone doggie_bed))
        (then
          (once (and (in_motion ?tb) (not (= 1 0.5) ) ) )
          (hold-while (agent_holds desk) (and (agent_holds ?tb) (not (same_color room_center ?tb) ) ) )
        )
      )
    )
    (preference golfballUnderBridgeWithoutTouchingBlock
      (exists (?w - dodgeball ?l2 - ball)
        (at-end
          (exists (?ob - hexagonal_bin ?c4 - cube_block)
            (agent_holds ?c4)
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (= (* 3 (* (count throwFromEdgeOfRug:blue_cube_block) (count golfballUnderBridgeWithoutTouchingBlock:wall) )
      )
      3
    )
    (or
      (and
        (not
          (>= (external-forall-maximize (total-time) ) (* (* (* 3 (+ 3 (external-forall-maximize 10 ) (count throwFromEdgeOfRug:dodgeball:blue_dodgeball) )
                )
                (+ (count-total throwFromEdgeOfRug:golfball) (> 3 (* (* (count-once-per-objects throwFromEdgeOfRug:pink:beachball:purple) (* (count-once golfballUnderBridgeWithoutTouchingBlock:purple) (count throwFromEdgeOfRug:orange) )
                      )
                      (* 4 (* (* (count golfballUnderBridgeWithoutTouchingBlock:pink) (count throwFromEdgeOfRug:dodgeball) )
                          (>= (* (count throwFromEdgeOfRug:dodgeball) (+ (count-measure golfballUnderBridgeWithoutTouchingBlock:purple) 18 )
                            )
                            (* (count-shortest golfballUnderBridgeWithoutTouchingBlock:basketball) (* (external-forall-minimize (count throwFromEdgeOfRug:pink) ) (count golfballUnderBridgeWithoutTouchingBlock:yellow) )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
              (count throwFromEdgeOfRug:cube_block:blue_pyramid_block)
            )
          )
        )
        (>= (= (* (- (+ 1 8 (* 10 5 )
                  6
                )
              )
              (count-longest throwFromEdgeOfRug:pink_dodgeball:pink:purple)
            )
            (not
              (count-once golfballUnderBridgeWithoutTouchingBlock:dodgeball)
            )
          )
          (* (* (+ (- 3 20 ) (count-once-per-objects golfballUnderBridgeWithoutTouchingBlock:book) 10 )
              (total-time)
            )
            (count-once-per-objects throwFromEdgeOfRug:pink)
          )
        )
        (>= 3 4 )
      )
    )
  )
)
(:scoring
  (= (<= (count-once-per-objects golfballUnderBridgeWithoutTouchingBlock:dodgeball) 10 )
    3
    2
  )
)
)

(define (game game-id-432) (:domain many-objects-room-v1)
(:setup
  (exists (?b9 - dodgeball)
    (game-conserved
      (in ?b9 ?b9)
    )
  )
)
(:constraints
  (and
    (preference golfballUnderBridgeWithoutTouchingBlock
      (exists (?h - cube_block ?b - ball)
        (then
          (hold (agent_holds agent) )
          (once (agent_holds ?b) )
          (any)
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-external-objects golfballUnderBridgeWithoutTouchingBlock:yellow:cube_block:golfball) (count-once golfballUnderBridgeWithoutTouchingBlock:golfball:yellow_cube_block) )
)
(:scoring
  (* (+ (* 8 (+ 9 (external-forall-minimize 5 ) 5 (total-score) )
      )
      (* 5 (+ (count-once-per-objects golfballUnderBridgeWithoutTouchingBlock:basketball:yellow) (total-time) )
      )
    )
    10
    4
  )
)
)

(define (game game-id-433) (:domain many-objects-room-v1)
(:setup
  (exists (?c - hexagonal_bin)
    (and
      (forall (?o - game_object)
        (forall (?c5 - pillow ?b7 ?b ?b2 - building)
          (exists (?r1 - building)
            (forall (?h - hexagonal_bin)
              (and
                (not
                  (game-conserved
                    (not
                      (open ?b7)
                    )
                  )
                )
                (game-optional
                  (and
                    (in_motion ?b7)
                    (rug_color_under ?b ?b2)
                  )
                )
                (game-conserved
                  (object_orientation bed ?c)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference watchOnShelf
      (exists (?c2 - blinds ?s - triangular_ramp)
        (then
          (once (and (and (and (and (in_motion ?s) (agent_holds ?s) (game_start ) ) (and (in bed ?s) (in_motion ?s) ) ) (agent_holds ?s) ) (and (>= 1 (distance desk desk)) (not (< 9 (distance ?s ?s)) ) ) (in_motion door) ) )
          (hold (and (on ?s top_shelf) (and (not (< (distance ?s ?s) (distance ?s ?s)) ) (on ?s ?s) ) ) )
          (hold (same_object ?s ?s) )
        )
      )
    )
  )
)
(:terminal
  (> 10 5 )
)
(:scoring
  (* 6 (* 2 (count watchOnShelf:block) )
  )
)
)

(define (game game-id-434) (:domain few-objects-room-v1)
(:setup
  (forall (?h - (either yellow main_light_switch))
    (game-conserved
      (and
        (not
          (not
            (not
              (agent_holds ?h)
            )
          )
        )
        (not
          (on ?h room_center)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b1 - hexagonal_bin)
      (and
        (preference ballRolledOnRampToRug
          (exists (?l - dodgeball)
            (then
              (once (on ?l ?l) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> 3 (count-same-positions ballRolledOnRampToRug:dodgeball) )
)
(:scoring
  (* (- 5 )
    (count ballRolledOnRampToRug:green)
    (count-once-per-objects ballRolledOnRampToRug:dodgeball)
  )
)
)

(define (game game-id-435) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (and
        (forall (?h - ball)
          (game-optional
            (< (distance ?h ?h) 1)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference baseBlockInTowerAtEnd
      (exists (?l - building)
        (then
          (hold-while (agent_holds ?l) (in_motion door) )
          (hold (agent_holds ?l) )
          (hold (in ?l room_center) )
        )
      )
    )
    (preference throwToBinFromOppositeWall
      (exists (?c3 - desk_shelf ?b - cube_block)
        (then
          (once (not (agent_holds ?b) ) )
          (hold (> (distance door ?b) (distance ?b rug)) )
        )
      )
    )
    (forall (?b10 - cube_block)
      (and
        (preference binKnockedOver
          (exists (?c - (either yellow doggie_bed cylindrical_block desktop cd tall_cylindrical_block alarm_clock))
            (then
              (hold (in_motion desk) )
              (once (and (not (above ?b10 room_center) ) (in ?b10 ?b10) ) )
              (once (not (touch ?b10 ?c) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (<= 5 (>= 10 (* (count throwToBinFromOppositeWall:side_table:dodgeball) 4 )
      )
    )
    (<= 3 3 )
    (>= 5 2 )
  )
)
(:scoring
  5
)
)

(define (game game-id-436) (:domain medium-objects-room-v1)
(:setup
  (exists (?d - (either cylindrical_block cellphone) ?o5 - dodgeball)
    (forall (?c - hexagonal_bin)
      (game-conserved
        (not
          (and
            (in_motion ?c)
            (agent_holds ?o5)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference greenObjectMovedToRoomCenter
      (exists (?o - game_object ?b4 - hexagonal_bin)
        (then
          (hold (in agent ?b4) )
          (once (adjacent ?b4 ?b4) )
          (once (in_motion ?b4) )
        )
      )
    )
    (preference throwInBin
      (exists (?d ?o3 ?p ?d - hexagonal_bin)
        (then
          (once (in_motion ?p) )
          (once (not (not (and (touch front ?p) (not (adjacent ?p ?d) ) ) ) ) )
          (once (and (and (broken ?p) (and (in ?o3 ?o3) (and (and (in_motion ?p) (agent_crouches ) ) (not (< 1 1) ) (not (in_motion top_drawer) ) (not (agent_holds ?p) ) (in_motion ?p) (in_motion ?p) (agent_holds upright) ) (and (and (agent_holds ?d) (not (agent_holds sideways) ) (not (same_object ?p agent) ) (and (not (game_over ) ) (and (and (and (forall (?h ?b1 - bridge_block) (exists (?c - cylindrical_block) (on ?b1 ?b1) ) ) (in ?d ?d) (not (not (not (agent_holds bed) ) ) ) (in_motion desk) ) (in_motion agent) ) (and (in_motion ?d) (in_motion ?p) (adjacent desk ?d) (and (equal_z_position ?o3 ?o3) (in_motion ?o3) ) ) ) ) ) (not (and (agent_holds ?d) ) ) (agent_holds ?o3) (not (on ?p bed) ) ) (and (agent_holds ?o3) (adjacent ?o3 ?d) ) (not (in_motion ?p) ) (in_motion agent) ) ) ) )
        )
      )
    )
    (preference dodgeballHitsBinBottom
      (exists (?g ?c5 ?o4 ?p2 ?c ?bl - game_object)
        (at-end
          (in ?c ?c5)
        )
      )
    )
  )
)
(:terminal
  (>= 3 (* (+ (count greenObjectMovedToRoomCenter:dodgeball) (* (count dodgeballHitsBinBottom:golfball) 2 )
        180
        2
      )
      (external-forall-maximize
        (* 5 2 )
      )
    )
  )
)
(:scoring
  (* 1 (>= (* (and (* (count-once throwInBin:blue_cube_block) 5 )
          30
        )
        2
      )
      (* (count greenObjectMovedToRoomCenter:yellow) (- 1 )
        (- (count greenObjectMovedToRoomCenter:dodgeball:blue_dodgeball:book) )
      )
    )
  )
)
)

(define (game game-id-437) (:domain many-objects-room-v1)
(:setup
  (forall (?d - chair)
    (exists (?o1 - ball ?c3 - hexagonal_bin)
      (and
        (forall (?t - chair)
          (not
            (forall (?c - doggie_bed)
              (game-conserved
                (agent_holds ?d)
              )
            )
          )
        )
        (and
          (game-conserved
            (and
              (in ?d ?d)
              (< (distance room_center ?c3) 1)
            )
          )
        )
        (exists (?b3 - ball)
          (exists (?l1 - hexagonal_bin)
            (and
              (forall (?h - (either desktop pink) ?l2 - doggie_bed)
                (game-conserved
                  (in_motion ?d)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?w1 - cube_block ?x - (either book dodgeball))
      (and
        (preference ballThrownToBed
          (exists (?o - hexagonal_bin)
            (then
              (once (adjacent_side room_center ?o north_wall) )
            )
          )
        )
      )
    )
    (preference ballThrownToChair
      (exists (?h - flat_block)
        (then
          (hold (on ?h ?h) )
          (hold (< (distance main_light_switch ?h) 2) )
          (once (is_setup_object ?h) )
        )
      )
    )
    (forall (?f - block ?b - teddy_bear)
      (and
        (preference cubeBlockInBuilding
          (exists (?c - dodgeball)
            (then
              (hold (on back desk) )
              (once (and (in bed ?b) (and (agent_holds bed) (in_motion ?c) ) (agent_holds ?c) ) )
              (once (agent_holds ?b) )
              (once (agent_holds ?c) )
            )
          )
        )
      )
    )
    (preference blocksInPlace
      (exists (?p - dodgeball)
        (then
          (once (not (in_motion ?p) ) )
          (once (and (> (distance agent ?p) 7) (on ?p bed) ) )
          (once (exists (?o - cube_block) (and (and (not (not (not (< (distance door ?o) 0) ) ) ) (not (and (is_setup_object ?o) (on ?o front) ) ) ) (and (agent_holds ?o) (agent_holds ?p) (in_motion ?p) ) ) ) )
        )
      )
    )
    (preference throwAttempt
      (exists (?o - teddy_bear)
        (then
          (once (in ?o ?o) )
          (hold (same_object ?o ?o) )
          (once (< 1 0) )
          (hold (not (and (agent_holds ?o) (on ?o ?o) (in_motion ?o) (in_motion ?o) (and (in_motion ?o) (and (adjacent_side ?o ?o ?o) (exists (?d - hexagonal_bin) (agent_holds ?d) ) ) ) (not (agent_holds ?o) ) (in ?o ?o) ) ) )
        )
      )
    )
    (preference blindsOpened
      (exists (?w2 - pillow)
        (then
          (once (in desk ?w2) )
          (once (agent_holds ?w2) )
          (once (not (and (and (= (distance ?w2 ?w2) 2 1) (in_motion desk) ) (not (exists (?o2 ?p ?s - ball) (in_motion ?w2) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (<= (* 5 5 )
    (count-once-per-objects ballThrownToChair:yellow)
  )
)
(:scoring
  3
)
)

(define (game game-id-438) (:domain many-objects-room-v1)
(:setup
  (forall (?b9 - building)
    (exists (?w1 ?l - shelf ?c4 - hexagonal_bin)
      (exists (?o1 - cube_block)
        (exists (?x - ball)
          (game-conserved
            (agent_holds floor)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectToBinOnFirstTry
      (exists (?c ?g ?h ?o - teddy_bear ?d - dodgeball)
        (then
          (once (agent_holds ?d) )
          (hold (and (and (in_motion ?d) (and (not (or (and (not (on ?d ?d) ) (agent_holds back) ) (and (agent_holds ?d) (in_motion ?d) ) (and (in_motion desk) ) ) ) (adjacent ?d ?d) ) ) (on agent ?d) ) )
          (once (touch ?d ?d) )
        )
      )
    )
    (forall (?d ?h - game_object)
      (and
        (preference dodgeballThrownToBin
          (exists (?p - pillow)
            (at-end
              (exists (?r1 - hexagonal_bin)
                (not
                  (agent_holds upside_down)
                )
              )
            )
          )
        )
        (preference blockOnBlockInTowerAtEnd
          (exists (?o - beachball ?c - hexagonal_bin)
            (then
              (once (not (and (and (same_object ?h ?d) (in_motion ?d) (not (and (not (and (= (distance ?h ?h) (distance_side ?h floor ?c)) (on ?c ?d) (or (not (touch ?c ?d) ) (agent_holds ?d) ) ) ) (not (in_motion ?d) ) ) ) (in_motion ?d) ) (not (adjacent ?d ?d) ) ) ) )
              (once (not (agent_holds ?d) ) )
              (once (in ?h brown) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count dodgeballThrownToBin:pink:green) 2 )
)
(:scoring
  (count blockOnBlockInTowerAtEnd:pyramid_block)
)
)

(define (game game-id-439) (:domain medium-objects-room-v1)
(:setup
  (exists (?c2 - dodgeball)
    (game-conserved
      (agent_holds ?c2)
    )
  )
)
(:constraints
  (and
    (forall (?b2 - shelf ?c - block)
      (and
        (preference throwMissesBin
          (exists (?h - cube_block)
            (then
              (hold (object_orientation rug desk) )
              (hold (in_motion ?c) )
              (hold (object_orientation ?h ?h) )
            )
          )
        )
        (preference ballNeverThrown
          (then
            (once (on ?c ?c) )
            (hold (in_motion ?c) )
            (hold (agent_holds ?c) )
          )
        )
      )
    )
  )
)
(:terminal
  (> (count-once-per-objects throwMissesBin:pink) 3 )
)
(:scoring
  (+ (count ballNeverThrown:basketball) 0 30 (* (count-longest ballNeverThrown:dodgeball:golfball) (count throwMissesBin:pink_dodgeball) 50 (count ballNeverThrown:pink:golfball) 5 (count-same-positions ballNeverThrown:tan) )
    8
    (count-once-per-objects throwMissesBin:hexagonal_bin)
    (count throwMissesBin:beachball:dodgeball)
  )
)
)

(define (game game-id-440) (:domain few-objects-room-v1)
(:setup
  (exists (?b6 - cylindrical_block)
    (exists (?o5 ?b1 - hexagonal_bin)
      (game-conserved
        (on ?o5 agent)
      )
    )
  )
)
(:constraints
  (and
    (forall (?t - block)
      (and
        (preference objectWithMatchingColor
          (exists (?o - game_object ?h - hexagonal_bin)
            (then
              (hold (and (game_over ) (same_type ?t ?h) (on ?t ?h) (in_motion ?t) ) )
            )
          )
        )
        (preference dodgeballBouncesOnceToDoggieBed
          (exists (?d - hexagonal_bin)
            (at-end
              (same_color ?d ?t)
            )
          )
        )
        (preference golfballLandsInBinThroughRamp
          (exists (?h - ball)
            (then
              (once (and (agent_holds ?h) (forall (?l1 - game_object) (touch ?t ?l1) ) ) )
              (once (and (in_motion ?t) (agent_holds agent) ) )
              (hold (exists (?w - game_object ?p2 - shelf ?w2 - shelf ?d - chair) (agent_holds ?t) ) )
            )
          )
        )
      )
    )
    (forall (?t - block)
      (and
        (preference throwTeddyOntoPillow
          (exists (?b6 - game_object)
            (then
              (hold (on ?b6 ?t) )
              (once (agent_holds ?t) )
              (once (and (in_motion agent) (not (adjacent ?t ?b6) ) (not (in_motion ?b6) ) ) )
            )
          )
        )
        (preference ballThrownMissesEverything
          (exists (?c2 - dodgeball)
            (then
              (once (adjacent_side ?t agent ?c2) )
              (hold (on ?c2 ?c2) )
              (hold (not (on ?c2 ?t) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 0 (* (count-overlapping golfballLandsInBinThroughRamp:basketball) 300 )
    )
  )
)
(:scoring
  (* 2 (count-once-per-objects objectWithMatchingColor:basketball) )
)
)

(define (game game-id-441) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?d ?d1 - (either book dodgeball))
      (exists (?o1 - hexagonal_bin ?x - triangular_ramp ?w ?p - cube_block)
        (game-optional
          (and
            (equal_x_position ?p ?d)
            (adjacent ?p upright)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToBin
      (exists (?h ?o1 - color ?o - doggie_bed ?b - wall)
        (then
          (hold (in bed ?b) )
          (hold (and (in ?b side_table) (in_motion door) (in_motion ?b) ) )
          (once (and (agent_holds ?b) (> 9 (distance ?b ?b)) ) )
        )
      )
    )
    (preference blockFromRugToDesk
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d) )
          (once (not (and (< (distance ?d bed) (distance ?d bed)) (in_motion ?d) ) ) )
          (once (in_motion agent) )
        )
      )
    )
    (preference castleBuilt
      (exists (?r1 - block)
        (at-end
          (not
            (on ?r1 ?r1)
          )
        )
      )
    )
  )
)
(:terminal
  (< (count-once-per-objects castleBuilt:pink_dodgeball) (* (external-forall-maximize (* (count blockFromRugToDesk:beachball) 2 5 (* (* 3 (* 3 8 )
            )
            (count-once-per-external-objects throwToBin:hexagonal_bin)
          )
          18
          1
        )
      )
      (count blockFromRugToDesk:dodgeball)
    )
  )
)
(:scoring
  (count castleBuilt:pink_dodgeball)
)
)

(define (game game-id-442) (:domain many-objects-room-v1)
(:setup
  (not
    (forall (?o4 - hexagonal_bin)
      (forall (?o - game_object ?b8 - doggie_bed)
        (forall (?o2 ?w1 - game_object)
          (game-conserved
            (not
              (agent_holds ?o4)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?d - ball)
        (then
          (forall-sequence (?b4 - (either tall_cylindrical_block game_object))
            (then
              (once (and (agent_holds ?b4) (and (agent_holds ?d) ) ) )
              (once (not (not (not (and (not (opposite agent ?b4) ) (in_motion ?b4) ) ) ) ) )
              (hold (not (in ?b4 ?d) ) )
            )
          )
          (once (or (opposite ?d front) (in_motion ?d) ) )
          (once (not (on ?d ?d) ) )
        )
      )
    )
    (preference throwMovesBeachballWithoutKnockingTeddy
      (exists (?b4 - building)
        (then
          (once (is_setup_object agent) )
          (once (not (and (adjacent_side ?b4 ?b4 ?b4 ?b4) (not (agent_holds ?b4) ) ) ) )
          (once (and (and (adjacent ?b4 ?b4) (and (and (on desk ?b4) (touch ?b4 ?b4) ) (and (and (and (not (rug_color_under ?b4 ?b4) ) (or (not (not (not (and (opposite ?b4 ?b4) (in ?b4 ?b4) (and (in_motion ?b4) (faces agent ?b4) ) ) ) ) ) (not (on ?b4 ?b4) ) ) (and (adjacent ?b4 ?b4) (exists (?b - (either doggie_bed)) (in_motion side_table) ) (in_motion agent) ) ) (adjacent_side ?b4 ?b4 floor) ) (in_motion ?b4) ) (agent_holds ?b4) ) (in_motion ?b4) ) (or (agent_holds ?b4) (on desk floor) ) ) )
        )
      )
    )
    (forall (?t2 - block)
      (and
        (preference throwAttempt
          (exists (?d - wall ?d - color ?o4 - chair)
            (then
              (once (in ?t2 blue) )
              (once (and (in_motion ?t2) (and (adjacent ?t2 rug) (in_motion ?o4) ) (on ?o4 agent) ) )
              (once (agent_crouches ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count throwMovesBeachballWithoutKnockingTeddy:orange) (+ 18 (* (count-measure throwAttempt:doggie_bed) 5 )
    )
  )
)
(:scoring
  (total-score)
)
)

(define (game game-id-443) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (and
        (exists (?c ?c - dodgeball)
          (and
            (and
              (game-optional
                (in ?c ?c)
              )
            )
          )
        )
      )
    )
    (forall (?h - drawer)
      (and
        (game-conserved
          (adjacent_side ?h ?h ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - hexagonal_bin)
      (and
        (preference otherObjectsOnDeskShelf
          (exists (?t1 - dodgeball)
            (then
              (any)
              (hold (same_color ?t1 ?b) )
              (hold (and (same_color ?t1 ?t1) (not (not (touch ?t1 ?t1) ) ) ) )
            )
          )
        )
        (preference dodgeballHitsPillowWithoutTouchingBlock
          (exists (?o - chair)
            (then
              (hold (agent_holds agent) )
              (once (in ?o ?o) )
              (once (in_motion ?b) )
            )
          )
        )
      )
    )
    (preference ballToBinFromBed
      (exists (?b10 - pillow ?b2 - ball)
        (then
          (hold (agent_holds ?b2) )
          (forall-sequence (?t - (either dodgeball game_object))
            (then
              (hold (adjacent ?t ?b2) )
              (hold (not (< (distance ?b2 ?b2) 1) ) )
              (once (agent_holds desk) )
            )
          )
          (hold (agent_holds bed) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count ballToBinFromBed:dodgeball:hexagonal_bin) (count ballToBinFromBed:basketball:pyramid_block) )
    (>= (+ (count-once-per-objects dodgeballHitsPillowWithoutTouchingBlock) (* (count-once-per-external-objects otherObjectsOnDeskShelf:cylindrical_block) (count dodgeballHitsPillowWithoutTouchingBlock:book) )
      )
      (count otherObjectsOnDeskShelf:blue_dodgeball)
    )
  )
)
(:scoring
  0
)
)

(define (game game-id-444) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?o4 - game_object ?s - ball)
      (game-optional
        (not
          (rug_color_under ?s ?s)
        )
      )
    )
    (forall (?b5 - desktop)
      (game-conserved
        (adjacent floor ?b5)
      )
    )
    (exists (?b - ball)
      (and
        (forall (?t2 - red_pyramid_block)
          (exists (?b9 - triangular_ramp ?c1 - hexagonal_bin)
            (game-conserved
              (agent_holds ?c1)
            )
          )
        )
        (exists (?d - chair)
          (forall (?p2 - (either golfball cylindrical_block) ?d - cube_block)
            (game-conserved
              (agent_holds ?d)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?c - block ?w1 - shelf ?ob - yellow_pyramid_block ?b - dodgeball)
        (then
          (once (< 1 1) )
          (once (in_motion back) )
          (hold (in_motion ?b) )
        )
      )
    )
  )
)
(:terminal
  (< (count throwBallToBin:beachball) (+ (and (- (- 10 )
        )
      )
      (* (* (* (count throwBallToBin:basketball) )
          6
          3
          (count throwBallToBin:blue_dodgeball)
          1
          (count-once-per-objects throwBallToBin:hexagonal_bin:blue_dodgeball)
        )
        (* (* 20 10 )
          4
        )
      )
    )
  )
)
(:scoring
  (count-measure throwBallToBin:yellow)
)
)

(define (game game-id-445) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?o3 - (either floor dodgeball doggie_bed) ?t - hexagonal_bin)
      (forall (?p ?c2 - hexagonal_bin)
        (game-optional
          (< 4 (distance ?c2 desk))
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - cube_block)
      (and
        (preference blueObjectMovedToRoomCenter
          (exists (?o3 - cube_block)
            (then
              (once (not (in_motion ?o3) ) )
              (once (agent_holds agent) )
              (once (and (agent_holds ?o3) (in_motion ?o3) ) )
            )
          )
        )
        (preference blockToBinFromRug
          (exists (?w - dodgeball)
            (then
              (once (and (in_motion ?h) (not (in ?h ?w) ) ) )
              (hold-while (and (and (agent_holds ?w) (adjacent green_golfball ?w) ) (in_motion ?w) ) (exists (?b6 - hexagonal_bin ?b7 - golfball) (in_motion ?h) ) )
              (once (and (or (on ?w top_shelf) (not (< 1 (distance ?h agent)) ) ) (same_type ?w ?w) ) )
            )
          )
        )
        (preference failedThrowToBin
          (exists (?o1 - curved_wooden_ramp)
            (then
              (hold (and (in_motion ?o1) (or (not (on ?o1 ?h) ) (agent_holds ?o1) (not (agent_holds ?h) ) ) ) )
              (hold (or (> 7 (building_size ?o1)) ) )
              (once (in rug ?h) )
            )
          )
        )
        (preference basketMadeFromRug
          (exists (?p3 - hexagonal_bin)
            (then
              (hold (not (not (not (< 3 3) ) ) ) )
              (once (not (and (and (exists (?d - hexagonal_bin ?d - hexagonal_bin) (on room_center ?p3) ) (not (same_object ?p3 agent) ) ) (equal_z_position ?h ?p3) ) ) )
              (once (and (in ?h ?p3) (and (not (not (in_motion ?p3) ) ) (adjacent desk ?p3) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 6 (count blockToBinFromRug:purple) )
)
(:scoring
  (* (count basketMadeFromRug:dodgeball) (count failedThrowToBin:dodgeball) )
)
)

(define (game game-id-446) (:domain few-objects-room-v1)
(:setup
  (exists (?o - hexagonal_bin ?c - wall)
    (game-optional
      (not
        (in_motion ?c)
      )
    )
  )
)
(:constraints
  (and
    (preference cubeBlockThrownToTopShelf
      (exists (?b6 - book)
        (then
          (once (on ?b6 ?b6) )
          (hold-while (agent_holds ?b6) (not (adjacent bed ?b6) ) )
          (once (in_motion ?b6) )
        )
      )
    )
    (preference objectInBuilding
      (exists (?c - ball ?o1 - building)
        (then
          (once (in_motion ?o1) )
          (once (not (in_motion ?o1) ) )
          (once (and (in ?o1 ?o1) (agent_holds ?o1) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (> (* (count-once-per-objects cubeBlockThrownToTopShelf:blue_dodgeball) (* 2 2 )
        )
        (count cubeBlockThrownToTopShelf:blue_dodgeball)
      )
      (or
        (not
          (or
            (>= (count-once objectInBuilding:beachball) (- (+ (= (* (* (count objectInBuilding:pyramid_block) 6 )
                      4
                    )
                  )
                  (count-once-per-objects cubeBlockThrownToTopShelf:dodgeball)
                )
              )
            )
            (> 10 (count-once-per-objects objectInBuilding:green) )
          )
        )
        (>= 1 (+ (count-same-positions objectInBuilding:golfball) -10 )
        )
      )
      (> (/ (- 7 )
          1
        )
        6
      )
    )
    (>= (+ 15 (and 180 ) 5 )
      6
    )
  )
)
(:scoring
  (count objectInBuilding:yellow)
)
)

(define (game game-id-447) (:domain few-objects-room-v1)
(:setup
  (exists (?o1 - hexagonal_bin ?w2 - game_object)
    (and
      (game-conserved
        (not
          (in_motion ?w2)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockInTowerKnockedByDodgeball
      (exists (?c2 - triangular_ramp ?o - (either flat_block cube_block))
        (then
          (hold (in ?o ?o) )
          (once (adjacent_side ?o ?o ?o) )
          (once (and (or (and (or (in_motion ?o) (agent_holds agent) ) (and (and (in_motion ?o) (not (and (on ?o ?o) (agent_holds room_center) ) ) ) (or (agent_holds ?o) (on pink_dodgeball ?o) ) ) ) (in_motion ?o) ) (adjacent ?o ?o) ) )
          (once (agent_holds bed) )
        )
      )
    )
    (forall (?h ?ob - hexagonal_bin ?d - triangular_ramp)
      (and
        (preference dodgeballBouncesOnceToDoggieBed
          (then
            (hold (in ?d ?d) )
            (once (on ?d ?d) )
            (hold (not (and (agent_holds ?d) (not (between ?d ?d ?d) ) ) ) )
          )
        )
      )
    )
  )
)
(:terminal
  (<= (* 8 (not 30 ) )
    (* 5 (count blockInTowerKnockedByDodgeball:side_table) )
  )
)
(:scoring
  9
)
)

(define (game game-id-448) (:domain medium-objects-room-v1)
(:setup
  (forall (?h - curved_wooden_ramp)
    (and
      (game-optional
        (not
          (agent_holds ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b2 - game_object)
      (and
        (preference dodgeballBouncesOnceToDoggieBed
          (exists (?c ?o ?r2 - cylindrical_block ?ob - teddy_bear)
            (then
              (hold-while (touch ?ob ?b2) (not (on ?b2 ?b2) ) (not (not (agent_holds ?b2) ) ) )
              (once (on ?b2 ?b2) )
              (once (in_motion ?ob) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (count dodgeballBouncesOnceToDoggieBed:beachball:dodgeball) )
)
(:scoring
  (* (count-once-per-external-objects dodgeballBouncesOnceToDoggieBed) (count-once-per-external-objects dodgeballBouncesOnceToDoggieBed:yellow) (+ (and 18 3 ) (* (* (count-unique-positions dodgeballBouncesOnceToDoggieBed:green) (count dodgeballBouncesOnceToDoggieBed:golfball) )
        (count-once dodgeballBouncesOnceToDoggieBed:book:pink_dodgeball:pink)
      )
      1
      (count-overlapping dodgeballBouncesOnceToDoggieBed:basketball)
      (* (* (<= (count dodgeballBouncesOnceToDoggieBed:basketball:blue_dodgeball) (count dodgeballBouncesOnceToDoggieBed:cylindrical_block) )
          (count dodgeballBouncesOnceToDoggieBed:golfball:purple)
        )
        2
      )
      (count dodgeballBouncesOnceToDoggieBed:rug:dodgeball)
    )
  )
)
)

(define (game game-id-449) (:domain medium-objects-room-v1)
(:setup
  (forall (?h - dodgeball)
    (forall (?c1 - hexagonal_bin)
      (exists (?l3 - dodgeball)
        (exists (?h - building)
          (and
            (exists (?g - block)
              (game-optional
                (and
                  (agent_holds ?g)
                  (agent_holds agent)
                  (above ?c1 agent)
                )
              )
            )
            (game-optional
              (exists (?b ?h - ball)
                (on ?b upside_down)
              )
            )
            (forall (?d2 - curved_wooden_ramp)
              (and
                (game-optional
                  (in blinds desk)
                )
              )
            )
            (or
              (forall (?r - block ?o - pyramid_block ?b - triangular_ramp)
                (game-conserved
                  (and
                    (<= 8 (distance pink ?h))
                    (in_motion ?b)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference failedThrowToBin
      (exists (?d2 - cube_block ?p3 - hexagonal_bin)
        (at-end
          (> (distance ?p3 ?p3) (distance ?p3 ?p3))
        )
      )
    )
    (forall (?h - hexagonal_bin)
      (and
        (preference towerFallsWhileBuilding
          (at-end
            (and
              (on bed ?h)
              (and
                (in_motion rug)
                (agent_holds ?h)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (count towerFallsWhileBuilding:dodgeball) (count-once failedThrowToBin:dodgeball) )
      (> (count towerFallsWhileBuilding:blue_dodgeball) (* (count towerFallsWhileBuilding:yellow:cylindrical_block) (count-once-per-objects failedThrowToBin:red:blue_dodgeball) )
      )
    )
    (>= (count-measure towerFallsWhileBuilding:beachball) (* 10 20 )
    )
    (> (count failedThrowToBin:beachball) 5 )
    (> (* (count towerFallsWhileBuilding:blue_dodgeball) )
      10
    )
  )
)
(:scoring
  (count towerFallsWhileBuilding:green:yellow_cube_block)
)
)

(define (game game-id-450) (:domain few-objects-room-v1)
(:setup
  (exists (?t - (either cd alarm_clock) ?b - hexagonal_bin)
    (and
      (exists (?l4 - teddy_bear)
        (game-optional
          (not
            (in_motion ?b)
          )
        )
      )
      (and
        (forall (?p3 - cube_block)
          (game-conserved
            (or
              (not
                (and
                  (not
                    (and
                      (on ?b ?p3)
                      (in_motion bed)
                    )
                  )
                )
              )
              (in_motion agent)
            )
          )
        )
        (game-conserved
          (not
            (or
              (in_motion ?b)
              (and
                (same_type ?b ?b)
                (same_object agent ?b)
                (object_orientation ?b ?b)
                (agent_holds ?b)
              )
            )
          )
        )
      )
      (exists (?b - game_object ?w - hexagonal_bin ?w2 - hexagonal_bin)
        (exists (?c3 ?c - blinds ?h - chair)
          (and
            (exists (?p - bridge_block)
              (exists (?b - building ?w - hexagonal_bin)
                (game-conserved
                  (and
                    (is_setup_object ?w2)
                    (on ?h rug)
                  )
                )
              )
            )
            (game-optional
              (and
                (not
                  (and
                    (and
                      (in_motion ?w2)
                      (and
                        (and
                          (faces ?w2 agent)
                          (<= 6 1)
                        )
                        (equal_z_position ?h ?b)
                      )
                      (in ?h ?w2)
                    )
                    (opposite ?b ?b)
                  )
                )
                (in_motion ?b)
                (touch side_table ?b)
              )
            )
            (and
              (and
                (exists (?t - doggie_bed)
                  (and
                    (and
                      (game-optional
                        (agent_holds ?h)
                      )
                    )
                  )
                )
                (and
                  (game-conserved
                    (not
                      (in ?b ?h)
                    )
                  )
                  (and
                    (forall (?h - hexagonal_bin ?o4 - (either cube_block doggie_bed))
                      (game-optional
                        (and
                          (< (distance ?h ?o4) 1)
                          (not
                            (and
                              (on ?h ?h)
                              (in_motion ?w2)
                              (not
                                (agent_holds ?w2)
                              )
                              (in_motion ?b)
                            )
                          )
                          (in_motion ?o4)
                        )
                      )
                    )
                    (and
                      (and
                        (game-optional
                          (same_color ?b ?b)
                        )
                        (and
                          (game-conserved
                            (not
                              (or
                                (and
                                  (in rug ?b)
                                  (adjacent ?b ?h)
                                )
                                (and
                                  (in_motion ?w2)
                                  (and
                                    (in_motion ?w2)
                                    (in ?b ?h)
                                  )
                                )
                              )
                            )
                          )
                        )
                        (and
                          (forall (?l - hexagonal_bin ?o2 - dodgeball)
                            (game-conserved
                              (forall (?c - (either golfball watch))
                                (and
                                  (agent_holds ?h)
                                  (forall (?b - chair ?t1 - pillow)
                                    (agent_holds back)
                                  )
                                  (and
                                    (between ?c ?c agent)
                                    (on ?o2 ?h)
                                    (and
                                      (agent_holds ?o2)
                                      (exists (?o4 - cube_block)
                                        (and
                                          (in_motion ?c)
                                          (agent_holds ?h)
                                        )
                                      )
                                    )
                                  )
                                  (faces bed ?o2)
                                )
                              )
                            )
                          )
                          (game-optional
                            (in door ?b)
                          )
                          (and
                            (exists (?b4 - hexagonal_bin ?b9 - dodgeball)
                              (and
                                (game-conserved
                                  (and
                                    (in ?b9 ?b)
                                    (agent_holds ?h)
                                  )
                                )
                                (not
                                  (exists (?s - dodgeball)
                                    (forall (?w - (either golfball curved_wooden_ramp pyramid_block))
                                      (exists (?d - dodgeball)
                                        (exists (?h - game_object)
                                          (game-optional
                                            (not
                                              (agent_holds ?d)
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                            (game-conserved
                              (not
                                (in_motion ?h)
                              )
                            )
                          )
                        )
                      )
                    )
                    (game-optional
                      (not
                        (and
                          (in_motion bed)
                          (and
                            (not
                              (not
                                (or
                                  (and
                                    (in_motion bed)
                                    (not
                                      (adjacent ?w2 bed)
                                    )
                                  )
                                  (and
                                    (and
                                      (and
                                        (not
                                          (toggled_on ?b)
                                        )
                                        (in_motion ?h)
                                      )
                                      (in_motion ?w2)
                                    )
                                    (in_motion agent)
                                  )
                                )
                              )
                            )
                            (agent_holds ?b)
                          )
                        )
                      )
                    )
                  )
                  (game-optional
                    (agent_holds agent)
                  )
                )
                (game-optional
                  (in_motion ?h)
                )
              )
            )
          )
        )
      )
      (exists (?bl - game_object)
        (forall (?l - hexagonal_bin)
          (game-conserved
            (in_motion ?bl)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c5 - block)
      (and
        (preference dodgeballFromRugToBin
          (exists (?t1 - triangular_ramp)
            (then
              (once (on desk ?c5) )
              (hold (in_motion ?t1) )
              (once (not (in_motion ?c5) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count-increasing-measure dodgeballFromRugToBin:pyramid_block) (* (count dodgeballFromRugToBin:blue_dodgeball) (* (+ 2 (* (* (* (count dodgeballFromRugToBin:blue_cube_block) 3 )
                3
              )
              (count dodgeballFromRugToBin:pink)
            )
          )
          (count dodgeballFromRugToBin:golfball)
        )
      )
    )
    (* 4 (or (external-forall-minimize 3 ) (count-once-per-objects dodgeballFromRugToBin) ) )
  )
)
(:scoring
  (count-once-per-objects dodgeballFromRugToBin:basketball)
)
)

(define (game game-id-451) (:domain many-objects-room-v1)
(:setup
  (forall (?t - chair)
    (game-conserved
      (agent_holds ?t)
    )
  )
)
(:constraints
  (and
    (preference objectThrownFromRug
      (exists (?b - block)
        (then
          (hold (and (and (agent_holds ?b) (touch right ?b) ) (in_motion ?b) (and (agent_holds ?b) (in ?b ?b) ) ) )
          (hold (and (and (agent_holds agent) (in ?b ?b) ) (in_motion ?b) ) )
          (once (adjacent_side room_center door ?b pink_dodgeball) )
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (or
        (< 2 5 )
        (= (count-increasing-measure objectThrownFromRug:pink_dodgeball) 10 )
        (>= (count-once objectThrownFromRug:triangle_block) (count objectThrownFromRug:golfball) )
      )
      (and
        (>= (count objectThrownFromRug:orange) 10 )
        (and
          (and
            (>= (external-forall-maximize (* (count objectThrownFromRug:green:blue_dodgeball) (+ (count objectThrownFromRug:blue_dodgeball) (+ (* (+ (* 1 6 )
                          (+ 4 (* (count-once-per-objects objectThrownFromRug:dodgeball:green) (count objectThrownFromRug:cube_block:book) (* (external-forall-minimize (* (count objectThrownFromRug:basketball) (count-once-per-objects objectThrownFromRug:dodgeball) )
                                )
                                1
                              )
                              (count objectThrownFromRug:book)
                            )
                          )
                        )
                        (+ 10 3 )
                        (count objectThrownFromRug:golfball)
                      )
                      (count-total objectThrownFromRug)
                      (* (* (count objectThrownFromRug:green) (* (- (count-once-per-objects objectThrownFromRug:golfball) )
                            (count objectThrownFromRug:beachball)
                          )
                        )
                        (- 5 )
                      )
                      (total-time)
                      (* (count objectThrownFromRug:hexagonal_bin) (count-overlapping objectThrownFromRug) 3 (count objectThrownFromRug:pink) (count objectThrownFromRug:dodgeball) 50 (* (total-time) (* 5 3 )
                        )
                        2
                        3
                        (* (+ (* (* (* 8 10 )
                                (count-once-per-objects objectThrownFromRug:pink:dodgeball:white)
                              )
                              6
                            )
                            3
                          )
                          (count-once-per-objects objectThrownFromRug:beachball:cube_block)
                        )
                        (external-forall-maximize
                          (= 4 (- (* 6 3 )
                            )
                          )
                        )
                        10
                      )
                      (- (+ (count objectThrownFromRug:green) (* (count-shortest objectThrownFromRug:dodgeball:purple) (count-once-per-objects objectThrownFromRug:beachball) )
                        )
                      )
                    )
                  )
                  10
                  (* 12 (count objectThrownFromRug:hexagonal_bin:golfball) )
                  (count objectThrownFromRug:blue_dodgeball)
                  5
                )
              )
              10
            )
            (> (count-once objectThrownFromRug:pink) (< (* (+ (or (count objectThrownFromRug:tall_cylindrical_block:pyramid_block) ) 5 )
                  (* (count objectThrownFromRug:pink_dodgeball) (* 4 2 )
                  )
                )
                (count-once-per-objects objectThrownFromRug:dodgeball:tall_cylindrical_block)
              )
            )
          )
        )
        (>= (count-once-per-objects objectThrownFromRug:yellow) (count-shortest objectThrownFromRug:beachball) )
      )
      (not
        (>= (+ (count-longest objectThrownFromRug:basketball) (external-forall-maximize 6 ) (* 5 (count-once-per-objects objectThrownFromRug:yellow) )
          )
          (count-once-per-objects objectThrownFromRug:yellow_cube_block)
        )
      )
    )
    (or
      (<= (* (count-longest objectThrownFromRug:cube_block:green) 15 (count objectThrownFromRug:tan:yellow) )
        (count objectThrownFromRug:basketball)
      )
      (not
        (and
          (>= (count objectThrownFromRug:dodgeball) 2 )
          (>= (count objectThrownFromRug:dodgeball) (count objectThrownFromRug:yellow:dodgeball) )
          (not
            (> 6 (* 2 (* (count-once-per-objects objectThrownFromRug:dodgeball) 3 )
              )
            )
          )
        )
      )
    )
  )
)
(:scoring
  15
)
)

(define (game game-id-452) (:domain medium-objects-room-v1)
(:setup
  (exists (?d2 - hexagonal_bin)
    (or
      (exists (?c6 - chair)
        (exists (?ob - ball ?c5 ?h - dodgeball)
          (exists (?t2 - (either alarm_clock dodgeball) ?h - pillow ?o1 - block)
            (game-conserved
              (and
                (and
                  (and
                    (not
                      (and
                        (same_type ?c6 ?o1)
                        (not
                          (agent_holds ?d2)
                        )
                      )
                    )
                    (adjacent back yellow)
                  )
                  (in_motion ?o1)
                )
                (agent_holds ?c5)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballThrownToBinFromDesk
      (exists (?c - triangular_ramp)
        (at-end
          (in_motion ?c)
        )
      )
    )
  )
)
(:terminal
  (>= 1 4 )
)
(:scoring
  15
)
)

(define (game game-id-453) (:domain many-objects-room-v1)
(:setup
  (exists (?b2 - (either flat_block dodgeball wall ball main_light_switch))
    (game-optional
      (and
        (and
          (and
            (agent_holds ?b2)
            (same_type ?b2 ?b2)
          )
        )
        (agent_holds ?b2)
        (in ?b2 desk)
        (not
          (not
            (agent_holds front_left_corner)
          )
        )
        (on ?b2 door)
        (and
          (not
            (agent_holds ?b2)
          )
          (and
            (in_motion ?b2)
            (not
              (agent_holds ?b2)
            )
          )
        )
        (on ?b2 ?b2)
        (is_setup_object agent)
        (and
          (on ?b2 ?b2)
          (agent_holds ?b2)
        )
        (and
          (on ?b2 ?b2)
          (in_motion top_shelf)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - hexagonal_bin)
      (and
        (preference throwAttempt
          (exists (?b - building)
            (at-end
              (touch ?b ?b)
            )
          )
        )
      )
    )
    (preference laptopAndBookInPlace
      (exists (?l3 - (either desktop pyramid_block cylindrical_block))
        (then
          (once (in_motion yellow) )
          (hold-while (agent_holds ?l3) (agent_holds upright) )
          (hold (not (in_motion ?l3) ) )
        )
      )
    )
    (preference dodgeballFromRugToBin
      (exists (?c - dodgeball)
        (at-end
          (agent_holds ?c)
        )
      )
    )
  )
)
(:terminal
  (= 7 (* (* (* 15 (count-shortest throwAttempt:basketball:yellow) )
        (* (* (count laptopAndBookInPlace:hexagonal_bin) 3 )
          (count-shortest throwAttempt:purple:dodgeball)
        )
      )
      (count-total dodgeballFromRugToBin:orange)
    )
  )
)
(:scoring
  (* 1 (* 5 (- (or (* 2 (count laptopAndBookInPlace:triangle_block:pink) )
          (count laptopAndBookInPlace:alarm_clock:pink_dodgeball)
          (+ 2 (* (* (count-once-per-objects dodgeballFromRugToBin:doggie_bed) 3 5 )
              2
            )
          )
        )
      )
    )
    (count-same-positions throwAttempt:golfball)
  )
)
)

(define (game game-id-454) (:domain few-objects-room-v1)
(:setup
  (forall (?h - building ?h - chair ?h - hexagonal_bin)
    (game-conserved
      (agent_holds ?h)
    )
  )
)
(:constraints
  (and
    (preference objectInBuilding
      (exists (?b - golfball ?f - hexagonal_bin)
        (then
          (once (in agent floor) )
          (once (or (and (not (and (in_motion ?f) (not (in_motion ?f) ) ) ) (in ?f ?f) ) (agent_holds ?f) ) )
          (once (in_motion ?f) )
        )
      )
    )
  )
)
(:terminal
  (>= 15 (count objectInBuilding:golfball) )
)
(:scoring
  (count objectInBuilding:blue)
)
)

(define (game game-id-455) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?d ?d - hexagonal_bin)
      (exists (?d - (either golfball dodgeball) ?h - pillow)
        (game-conserved
          (and
            (in_motion ?d)
            (in_motion ?h)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?x - teddy_bear)
      (and
        (preference golfballLandsInBinThroughRamp
          (exists (?t - hexagonal_bin)
            (then
              (once (exists (?o1 ?w - game_object) (is_setup_object ?t) ) )
              (once (agent_holds ?x) )
              (hold-while (rug_color_under ?x ?x) (and (not (not (agent_holds ?x) ) ) (not (< (distance agent bed) 1) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count golfballLandsInBinThroughRamp) (count-once-per-objects golfballLandsInBinThroughRamp:yellow:pink_dodgeball) )
    (- (total-time) )
  )
)
(:scoring
  (count golfballLandsInBinThroughRamp:blue_dodgeball)
)
)

(define (game game-id-456) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?o - ball)
      (forall (?d ?s - bridge_block ?c1 - ball)
        (and
          (exists (?bl - hexagonal_bin)
            (game-conserved
              (and
                (in_motion ?bl)
                (in_motion ?bl)
              )
            )
          )
          (and
            (and
              (and
                (and
                  (exists (?b3 - building)
                    (and
                      (forall (?l3 - triangular_ramp ?l - blue_cube_block)
                        (game-conserved
                          (not
                            (agent_holds agent)
                          )
                        )
                      )
                      (game-optional
                        (in blue ?b3)
                      )
                      (forall (?b - teddy_bear ?p - ball)
                        (exists (?d - game_object)
                          (game-conserved
                            (< 10 (distance door ?o))
                          )
                        )
                      )
                    )
                  )
                  (game-optional
                    (not
                      (in_motion ?c1)
                    )
                  )
                  (and
                    (game-optional
                      (not
                        (on ?c1 ?c1)
                      )
                    )
                  )
                  (exists (?c1 - hexagonal_bin)
                    (exists (?l2 - building)
                      (game-conserved
                        (and
                          (on ?c1 ?l2)
                          (touch desk ?o)
                        )
                      )
                    )
                  )
                )
                (exists (?o1 - drawer ?d - game_object)
                  (forall (?c5 - ball ?d - chair ?p - curved_wooden_ramp)
                    (and
                      (and
                        (and
                          (forall (?r - hexagonal_bin)
                            (game-conserved
                              (not
                                (<= 1 (distance ?o ?c1))
                              )
                            )
                          )
                          (game-conserved
                            (= (distance ?p ?o) (distance ?p ?c1) (distance ?o ?c1))
                          )
                          (and
                            (game-optional
                              (on ?o ?o)
                            )
                            (exists (?w - cube_block ?c - teddy_bear)
                              (and
                                (and
                                  (forall (?l1 - chair ?b5 - curved_wooden_ramp)
                                    (and
                                      (and
                                        (forall (?l - teddy_bear ?c - hexagonal_bin)
                                          (game-conserved
                                            (not
                                              (agent_holds ?o)
                                            )
                                          )
                                        )
                                        (or
                                          (and
                                            (game-conserved
                                              (and
                                                (and
                                                  (exists (?d - shelf)
                                                    (and
                                                      (and
                                                        (agent_holds ?d)
                                                        (agent_holds ?c)
                                                      )
                                                      (not
                                                        (not
                                                          (not
                                                            (agent_holds agent)
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                  (agent_holds ?d)
                                                  (touch ?d ?c)
                                                )
                                                (agent_holds ?b5)
                                              )
                                            )
                                            (not
                                              (game-conserved
                                                (not
                                                  (touch ?b5 ?p)
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                                (exists (?o - (either ball key_chain))
                                  (game-optional
                                    (not
                                      (in_motion agent)
                                    )
                                  )
                                )
                              )
                            )
                          )
                          (game-conserved
                            (and
                              (on ?c1 ?d)
                              (not
                                (in_motion ?p)
                              )
                            )
                          )
                        )
                        (exists (?b - hexagonal_bin ?h - doggie_bed)
                          (game-conserved
                            (and
                              (in_motion floor)
                              (and
                                (and
                                  (not
                                    (adjacent ?p ?c1)
                                  )
                                  (agent_holds ?d)
                                )
                                (touch ?o agent)
                              )
                              (forall (?bl - block ?s - game_object ?t - ball)
                                (toggled_on ?o)
                              )
                            )
                          )
                        )
                        (and
                          (forall (?c5 - doggie_bed ?b - teddy_bear ?b - teddy_bear)
                            (exists (?h - (either key_chain wall rug))
                              (game-conserved
                                (and
                                  (not
                                    (not
                                      (agent_holds agent)
                                    )
                                  )
                                  (and
                                    (and
                                      (in ?c1 ?o)
                                      (and
                                        (opposite agent ?c1)
                                        (and
                                          (and
                                            (exists (?l1 - pillow)
                                              (in_motion blue)
                                            )
                                            (agent_holds ?d)
                                          )
                                          (agent_holds agent)
                                        )
                                      )
                                      (agent_holds ?d)
                                    )
                                    (agent_crouches )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                      (forall (?d - (either cube_block lamp rug))
                        (and
                          (game-optional
                            (and
                              (in_motion ?d)
                              (on ?d agent)
                            )
                          )
                          (exists (?b - blinds)
                            (game-conserved
                              (agent_holds ?d)
                            )
                          )
                          (and
                            (game-conserved
                              (agent_holds ?d)
                            )
                            (game-conserved
                              (in_motion rug)
                            )
                          )
                        )
                      )
                    )
                  )
                )
                (game-optional
                  (agent_holds ?c1)
                )
                (game-conserved
                  (in_motion ?c1)
                )
              )
              (exists (?s - game_object)
                (and
                  (game-conserved
                    (agent_holds ?s)
                  )
                  (forall (?h - hexagonal_bin ?ob - (either yellow_cube_block desktop))
                    (exists (?b ?l ?h ?t ?o4 ?p ?d ?t ?r ?g - game_object)
                      (and
                        (game-conserved
                          (in_motion ?g)
                        )
                      )
                    )
                  )
                  (game-conserved
                    (same_object ?o ?o)
                  )
                )
              )
              (game-conserved
                (not
                  (on ?o ?c1)
                )
              )
            )
            (and
              (forall (?h - doggie_bed)
                (game-conserved
                  (not
                    (adjacent ?o room_center)
                  )
                )
              )
              (and
                (game-optional
                  (and
                    (not
                      (agent_holds ?o)
                    )
                    (adjacent ?o ?o)
                  )
                )
              )
              (game-conserved
                (adjacent ?o ?o)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference cubeBlockThrownToTopShelf
      (exists (?c - hexagonal_bin)
        (then
          (once (agent_holds ?c) )
          (once (not (agent_crouches ) ) )
          (once (not (agent_holds ?c) ) )
        )
      )
    )
    (preference dropAttempt
      (exists (?d - drawer)
        (then
          (hold (agent_holds ?d) )
          (once (and (agent_holds ?d) (not (adjacent ?d desk) ) ) )
          (any)
        )
      )
    )
  )
)
(:terminal
  (> (- (+ (+ (* (external-forall-maximize (* 50 (count-once-per-objects cubeBlockThrownToTopShelf:dodgeball) )
            )
            (count-once-per-external-objects cubeBlockThrownToTopShelf:dodgeball)
          )
          10
          (count-once-per-objects cubeBlockThrownToTopShelf:dodgeball)
          (count-once-per-objects cubeBlockThrownToTopShelf:dodgeball)
          (+ (* 3 (count-once-per-objects cubeBlockThrownToTopShelf:yellow) 20 (* (* (count-longest dropAttempt:dodgeball) 30 )
                (count cubeBlockThrownToTopShelf:pink:yellow)
                (count-unique-positions dropAttempt:golfball)
                (* 7 (external-forall-minimize (total-time) ) )
                (* (* (count dropAttempt:green) 3 (total-time) )
                  (+ (or (total-score) ) 2 (external-forall-minimize (>= (count cubeBlockThrownToTopShelf) (- 9 )
                      )
                    )
                    (count-once-per-objects dropAttempt:dodgeball)
                    (count-once-per-objects dropAttempt:doggie_bed)
                    (* (count-once-per-objects cubeBlockThrownToTopShelf:golfball:basketball) (count-once-per-objects dropAttempt:yellow) )
                    50
                    (count-once-per-objects cubeBlockThrownToTopShelf:beachball)
                    (count dropAttempt:dodgeball)
                  )
                )
              )
            )
            (* 2 1 10 )
          )
        )
        (* (count-once-per-objects dropAttempt:orange:block:pink_dodgeball) (+ (count cubeBlockThrownToTopShelf:purple) (+ 4 3 )
          )
          (* (count dropAttempt:wall) 5 6 )
        )
      )
    )
    2
  )
)
(:scoring
  4
)
)

(define (game game-id-457) (:domain few-objects-room-v1)
(:setup
  (forall (?o1 - game_object)
    (exists (?o - pyramid_block)
      (game-conserved
        (and
          (on agent ?o1)
          (in desk ?o1)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownMissesEverything
      (exists (?f - triangular_ramp)
        (then
          (once (exists (?t2 - pillow) (equal_z_position ?f ?f) ) )
          (hold-while (touch ?f agent) (adjacent_side ?f rug desk) )
          (once (not (touch ?f ?f) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count ballThrownMissesEverything:orange) 5 )
)
(:scoring
  (* (count-once-per-objects ballThrownMissesEverything:beachball) (external-forall-maximize 3 ) )
)
)

(define (game game-id-458) (:domain few-objects-room-v1)
(:setup
  (or
    (forall (?l2 ?s - curved_wooden_ramp)
      (game-optional
        (and
          (in_motion ?s)
          (< (distance ?s side_table) 5)
          (agent_holds ?s)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallFromOtherBallToBin
      (exists (?d - (either lamp cube_block) ?h - yellow_cube_block)
        (then
          (hold (and (in_motion ?h) (same_type ?h room_center) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (not
      (>= 2 4 )
    )
    (>= 20 (count throwBallFromOtherBallToBin:red) )
  )
)
(:scoring
  (count throwBallFromOtherBallToBin:tall_cylindrical_block:golfball)
)
)

(define (game game-id-459) (:domain many-objects-room-v1)
(:setup
  (forall (?c - chair)
    (and
      (game-optional
        (equal_z_position ?c desk)
      )
      (and
        (exists (?p2 - dodgeball ?w2 - game_object)
          (and
            (game-conserved
              (in_motion ?c)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference binKnockedOver
      (exists (?c - dodgeball)
        (then
          (hold (and (adjacent ?c ?c) (in ?c ?c) (on ?c ?c) (exists (?b - flat_block) (not (agent_holds ?c) ) ) ) )
          (once (in_motion ?c) )
          (once (in ?c ?c) )
        )
      )
    )
  )
)
(:terminal
  (>= 20 (count binKnockedOver:red) )
)
(:scoring
  5
)
)

(define (game game-id-460) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds pink)
  )
)
(:constraints
  (and
    (forall (?c3 - hexagonal_bin ?h ?s - (either beachball laptop key_chain cylindrical_block) ?g - drawer ?o - ball)
      (and
        (preference ballOnBedAtEnd
          (exists (?g - wall ?d - ball)
            (then
              (hold (in_motion ?o) )
              (once (between ?d ?d ?d) )
              (once-measure (and (adjacent ?o ?d) (and (and (and (agent_holds ?d) (in_motion ?d) ) (agent_holds ?d) ) (in_motion ?o) ) (in ?o ?o) ) (distance_side ?o room_center agent ?o) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (>= 50 1 )
      (or
        (not
          (>= (count ballOnBedAtEnd:dodgeball) (count ballOnBedAtEnd:dodgeball) )
        )
      )
      (>= (* (count ballOnBedAtEnd:white) (count ballOnBedAtEnd:dodgeball) )
        2
      )
    )
  )
)
(:scoring
  30
)
)

(define (game game-id-461) (:domain few-objects-room-v1)
(:setup
  (forall (?l - dodgeball)
    (game-conserved
      (and
        (not
          (agent_holds ?l)
        )
        (on ?l ?l)
      )
    )
  )
)
(:constraints
  (and
    (preference ballInOrOnBin
      (exists (?p - dodgeball)
        (then
          (hold (and (= 7 (distance ?p ?p)) (adjacent_side top_shelf agent ?p) ) )
          (once (or (< 1 0) (and (>= (distance ?p ?p) (distance floor rug)) (agent_holds ?p) (and (in_motion ?p) (not (in_motion ?p) ) (touch ?p ?p) ) ) ) )
          (once (in_motion ?p) )
        )
      )
    )
    (forall (?o - doggie_bed)
      (and
        (preference throwMissesBin
          (exists (?d - drawer ?h - triangular_ramp)
            (then
              (hold (agent_holds desk) )
              (hold (and (not (on ?o ?o) ) (and (not (not (agent_holds ?h) ) ) (adjacent agent ?o) ) ) )
              (once (on ?h ?h) )
              (once (agent_holds ?h) )
            )
          )
        )
      )
    )
    (preference throwTeddyOntoPillow
      (exists (?b - dodgeball)
        (then
          (hold (and (agent_holds bed) (not (and (on agent ?b) (adjacent front_left_corner ?b) ) ) ) )
          (once (agent_holds agent) )
          (once (same_object ?b ?b) )
        )
      )
    )
  )
)
(:terminal
  (or
    (not
      (>= (count ballInOrOnBin:tall_cylindrical_block:green) (* (count-once-per-objects ballInOrOnBin:yellow_cube_block:pyramid_block:basketball) 6 )
      )
    )
  )
)
(:scoring
  1
)
)

(define (game game-id-462) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?b - flat_block)
      (and
        (game-conserved
          (or
            (agent_holds pink)
            (in ?b ?b)
          )
        )
        (exists (?f - dodgeball)
          (exists (?t - block)
            (and
              (exists (?c1 - wall)
                (game-conserved
                  (agent_holds ?c1)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference towerFallsWhileBuilding
      (exists (?d - (either laptop hexagonal_bin pink))
        (then
          (once (agent_holds ?d) )
          (hold (on ?d back) )
          (once (in_motion ?d) )
        )
      )
    )
  )
)
(:terminal
  (and
    (< (external-forall-maximize (count towerFallsWhileBuilding:blue_cube_block) ) (count-once-per-objects towerFallsWhileBuilding:beachball) )
    (< (not 6 ) 5 )
  )
)
(:scoring
  (external-forall-maximize
    (count-once-per-objects towerFallsWhileBuilding:cylindrical_block:pink)
  )
)
)

(define (game game-id-463) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?b7 - hexagonal_bin)
      (exists (?s - (either tall_cylindrical_block hexagonal_bin))
        (forall (?w2 - dodgeball ?h ?ob ?d ?d ?d ?l2 ?h ?o4 ?d ?h - golfball)
          (and
            (and
              (and
                (game-conserved
                  (same_color top_shelf floor)
                )
                (game-conserved
                  (not
                    (and
                      (agent_holds ?d)
                      (and
                        (and
                          (and
                            (not
                              (not
                                (not
                                  (in ?l2 bed)
                                )
                              )
                            )
                            (on ?b7 ?l2)
                          )
                          (not
                            (agent_holds ?d)
                          )
                        )
                        (or
                          (agent_holds ?h)
                          (in agent ?b7)
                        )
                      )
                      (and
                        (on floor ?b7)
                        (agent_holds ?l2)
                      )
                      (same_type bed ?l2)
                    )
                  )
                )
                (exists (?p - game_object ?b - hexagonal_bin ?h ?b4 ?l4 - ball)
                  (game-conserved
                    (on ?b7 ?o4)
                  )
                )
              )
            )
            (game-conserved
              (in_motion ?l2)
            )
            (forall (?o - hexagonal_bin ?c - hexagonal_bin)
              (exists (?w - dodgeball)
                (and
                  (game-conserved
                    (adjacent ?w ?o4)
                  )
                  (and
                    (exists (?b1 - pyramid_block ?h - red_pyramid_block)
                      (game-conserved
                        (not
                          (in_motion ?o4)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference gameObjectToBin
      (exists (?o - cube_block)
        (then
          (once (in_motion top_shelf) )
          (once (in ?o ?o) )
          (once (not (and (not (and (not (and (in rug ?o) (object_orientation agent ?o) ) ) (on ?o ?o) ) ) (in_motion desk) ) ) )
        )
      )
    )
    (forall (?b10 - hexagonal_bin)
      (and
        (preference objectsHidden
          (exists (?d - (either cellphone wall))
            (then
              (once (touch ?d ?d) )
              (once (and (on ?b10 agent) (on agent ?b10) ) )
              (once (in_motion bed) )
            )
          )
        )
      )
    )
    (preference gameBlockFound
      (exists (?c5 - hexagonal_bin)
        (then
          (once (touch ?c5 ?c5) )
          (hold (in desk ?c5) )
          (once (in_motion ?c5) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (* 8 (* (+ (+ 5 (count gameObjectToBin:book:pink_dodgeball) )
          (external-forall-maximize
            2
          )
          (* (* (count-once objectsHidden:beachball:pink) (- 5 )
            )
            7
            (count-once-per-objects objectsHidden:cylindrical_block:hexagonal_bin)
          )
          (count gameObjectToBin:yellow)
          (+ (+ (count-once-per-objects gameBlockFound:tan) (* (count gameBlockFound:doggie_bed) 10 )
            )
            (total-score)
          )
          (count gameBlockFound:pink)
          4
        )
        5
      )
    )
  )
)
(:scoring
  (count objectsHidden:hexagonal_bin:pink)
)
)

(define (game game-id-464) (:domain medium-objects-room-v1)
(:setup
  (forall (?r - (either laptop yellow_cube_block))
    (game-conserved
      (in_motion ?r)
    )
  )
)
(:constraints
  (and
    (forall (?o1 - (either triangle_block cylindrical_block hexagonal_bin) ?p - bridge_block ?b - ball ?o - dodgeball)
      (and
        (preference blockFromRugToDesk
          (exists (?l2 - hexagonal_bin ?o - (either golfball laptop yellow_cube_block))
            (then
              (once (agent_holds ?o) )
              (hold (= (distance ?o front_left_corner) (distance_side agent ?o ?o)) )
              (once (adjacent ball rug) )
            )
          )
        )
        (preference tanObjectMovedToRoomCenter
          (exists (?c4 ?h - color ?l2 - hexagonal_bin)
            (at-end
              (in_motion ?o)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (>= (total-time) (* (* (count-once-per-objects tanObjectMovedToRoomCenter:dodgeball:dodgeball) (/ (count-unique-positions blockFromRugToDesk:wall) (- (* (* (count-once-per-objects blockFromRugToDesk:pink) (- (count-once-per-objects tanObjectMovedToRoomCenter:beachball) )
                    10
                  )
                  (+ 5 (* (* (count-once tanObjectMovedToRoomCenter:top_drawer) 5 )
                      (count blockFromRugToDesk)
                    )
                  )
                  (* 2 (+ (or (count tanObjectMovedToRoomCenter:red) (count tanObjectMovedToRoomCenter:dodgeball) ) (count-once blockFromRugToDesk:dodgeball) )
                  )
                )
              )
            )
          )
          (count tanObjectMovedToRoomCenter:purple)
        )
      )
      (or
        (>= (count-once-per-objects blockFromRugToDesk:yellow) (count-longest blockFromRugToDesk:beachball:pink_dodgeball) )
        (>= (+ (* (+ (count blockFromRugToDesk:dodgeball) 3 )
              5
            )
            (count blockFromRugToDesk:beachball)
          )
          1
        )
        (< (count-once-per-objects blockFromRugToDesk:dodgeball) 0.5 )
      )
    )
  )
)
(:scoring
  (+ (* (+ (* (* 4 5 )
          (total-time)
        )
        2
      )
      2
    )
    (count-once-per-objects tanObjectMovedToRoomCenter:golfball)
  )
)
)

(define (game game-id-465) (:domain many-objects-room-v1)
(:setup
  (exists (?t1 - dodgeball ?b - game_object)
    (and
      (game-conserved
        (in_motion desk)
      )
    )
  )
)
(:constraints
  (and
    (preference throwKnocksBlock
      (exists (?h - (either dodgeball cube_block) ?o ?h - hexagonal_bin ?d - hexagonal_bin ?b - ball)
        (then
          (once (agent_holds ?b) )
          (once (agent_holds ?b) )
          (once (opposite ?b ?b) )
        )
      )
    )
    (preference blindsOpened
      (exists (?l1 - bridge_block)
        (then
          (once (not (in_motion west_wall) ) )
          (once (and (touch ?l1 ?l1) (in_motion desk) ) )
          (once (touch ?l1 ?l1) )
        )
      )
    )
  )
)
(:terminal
  (or
    (<= (count-once-per-objects throwKnocksBlock:yellow) 2 )
    (not
      (>= (count blindsOpened:basketball) (count-overlapping throwKnocksBlock:dodgeball) )
    )
  )
)
(:scoring
  (count throwKnocksBlock:dodgeball)
)
)

(define (game game-id-466) (:domain medium-objects-room-v1)
(:setup
  (or
    (game-conserved
      (agent_holds floor)
    )
    (game-optional
      (exists (?w - block ?o1 - hexagonal_bin)
        (not
          (on desk ?o1)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blueObjectMovedToRoomCenter
      (exists (?x - (either alarm_clock golfball))
        (then
          (hold (in_motion ?x) )
          (once (and (agent_holds ?x) (and (adjacent ?x ?x) (agent_holds ?x) ) ) )
          (once (agent_holds ?x) )
        )
      )
    )
  )
)
(:terminal
  (>= (count blueObjectMovedToRoomCenter:red_pyramid_block:dodgeball:red_pyramid_block) (* (total-score) (count blueObjectMovedToRoomCenter:blue_cube_block) 2 )
  )
)
(:scoring
  40
)
)

(define (game game-id-467) (:domain medium-objects-room-v1)
(:setup
  (forall (?d - pillow)
    (game-optional
      (and
        (in_motion ?d)
        (on ?d ?d)
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - building)
      (and
        (preference ballThrownToBin
          (exists (?o - (either bridge_block cube_block))
            (then
              (once (not (agent_holds ?o) ) )
              (once (not (not (and (and (and (toggled_on agent) (game_over ) (in_motion ?o) ) (agent_holds room_center) ) (not (not (agent_holds ?d) ) ) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< (* (* (count-once-per-objects ballThrownToBin:dodgeball:beachball) 5 )
      4
    )
    10
  )
)
(:scoring
  2
)
)

(define (game game-id-468) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (and
        (exists (?b3 - (either wall book))
          (game-conserved
            (and
              (in_motion rug)
              (on ?b3 ?b3)
              (not
                (not
                  (exists (?d - game_object ?c1 - dodgeball)
                    (on ?b3 pink)
                  )
                )
              )
              (not
                (on floor ?b3)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - block ?b - pyramid_block ?r2 - game_object)
      (and
        (preference gameBlockFound
          (exists (?b6 - hexagonal_bin ?r2 - block)
            (then
              (hold-while (same_type door ?r2) (< (distance ?r2 ?r2) 6) )
              (hold (and (not (not (toggled_on ?r2) ) ) (not (agent_holds ?r2) ) ) )
              (once (exists (?p1 - dodgeball) (object_orientation ?p1 ?p1) ) )
            )
          )
        )
        (preference throwFromBehindChairsInBin
          (exists (?c4 - dodgeball ?x - desktop ?w2 - hexagonal_bin)
            (then
              (hold (and (agent_holds ?r2) (not (agent_holds ?r2) ) ) )
              (hold-while (in_motion agent) (and (touch agent ?r2) (in_motion ?r2) ) (same_type agent ?r2) (and (= (distance ?w2 ?w2) (distance ?r2 agent)) (not (not (and (not (not (game_start ) ) ) (not (and (and (on ?r2 desk) (is_setup_object ?r2) ) (and (not (and (agent_holds ?r2) (not (not (not (and (not (agent_holds door) ) (open ?w2) ) ) ) ) (not (and (on agent ?r2) (and (on ?r2 top_drawer) (adjacent_side desk ?w2 ?w2) ) ) ) ) ) (in ?w2 ?w2) (agent_holds ?w2) (in green_golfball ?r2) ) ) ) ) ) ) ) )
              (hold (in ?w2 ?w2) )
            )
          )
        )
      )
    )
    (preference ballOnBedAtEnd
      (exists (?b - hexagonal_bin)
        (then
          (once (not (agent_holds pink) ) )
          (once (and (or (same_color ?b ?b) (in_motion ?b) ) (agent_holds ?b) ) )
          (hold (not (not (in_motion ?b) ) ) )
        )
      )
    )
  )
)
(:terminal
  (= (count gameBlockFound:dodgeball) (* (* (- 10 )
        (= (* 3 (- 4 )
          )
          10
          (count throwFromBehindChairsInBin:beachball)
        )
      )
      (count throwFromBehindChairsInBin:dodgeball:dodgeball)
    )
  )
)
(:scoring
  3
)
)

(define (game game-id-469) (:domain few-objects-room-v1)
(:setup
  (exists (?h - (either flat_block book))
    (game-conserved
      (in_motion ?h)
    )
  )
)
(:constraints
  (and
    (forall (?c - dodgeball)
      (and
        (preference dodgeballThrownToBin
          (then
            (hold (= 9) )
            (hold-while (not (and (and (on ?c ?c) (and (not (in_motion ?c) ) (not (on ?c agent) ) ) ) (agent_holds ?c) ) ) (and (game_over ) (forall (?b - dodgeball) (exists (?o - dodgeball) (on ?c ?b) ) ) ) )
            (hold-while (not (not (and (touch green ?c) (= 1 (distance ?c ?c)) (and (agent_holds bed) (agent_holds door) ) ) ) ) (in_motion ?c) (in ?c ?c) )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (external-forall-maximize (count dodgeballThrownToBin:dodgeball:golfball) ) (- (count-same-positions dodgeballThrownToBin:green) (count-once-per-objects dodgeballThrownToBin:basketball:cube_block) ) )
  )
)
(:scoring
  (count-once dodgeballThrownToBin:golfball:side_table)
)
)

(define (game game-id-470) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?d - (either pyramid_block cube_block))
      (and
        (game-optional
          (and
            (on ?d ?d)
            (agent_holds ?d)
          )
        )
      )
    )
    (exists (?b10 - (either dodgeball pillow) ?b - hexagonal_bin)
      (game-optional
        (on ?b ?b)
      )
    )
    (exists (?h - block ?b - hexagonal_bin)
      (game-conserved
        (in ?b ?b)
      )
    )
  )
)
(:constraints
  (and
    (preference objectMovedRoomSide
      (exists (?p1 - hexagonal_bin)
        (then
          (hold (adjacent sideways upright) )
          (hold (and (game_over ) (and (and (in_motion agent) (and (and (adjacent_side ?p1 desk agent) (and (agent_holds ?p1) (in ?p1 agent) ) ) (above ?p1 ?p1) ) ) (and (not (touch ?p1 agent) ) (agent_holds ?p1) ) ) ) )
          (hold (in ?p1 ?p1) )
        )
      )
    )
    (preference ballThrownFromDoor
      (exists (?l - cube_block)
        (then
          (once (in ?l bed) )
          (once (<= (distance left ?l) (building_size ?l)) )
          (once (agent_holds ?l) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects ballThrownFromDoor) 7 )
)
(:scoring
  6
)
)

(define (game game-id-471) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?o2 - drawer ?b - cube_block)
      (not
        (game-conserved
          (on desk ?b)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?w1 - dodgeball ?o4 - hexagonal_bin)
      (and
        (preference ballThrownToBin
          (exists (?b6 - cube_block ?l - curved_wooden_ramp)
            (then
              (hold (not (open ?l) ) )
              (once (in_motion ?o4) )
              (once (< 2 (distance ?l ?o4)) )
            )
          )
        )
      )
    )
    (forall (?o1 ?bl - game_object)
      (and
        (preference objectWithMatchingColor
          (exists (?b9 - hexagonal_bin ?b - doggie_bed ?c4 - (either chair book desktop))
            (then
              (once (or (object_orientation ?o1 room_center) (< (distance ?o1 desk) 0) ) )
              (hold-while (in_motion ?o1) (and (in_motion ?o1) (in ?bl floor) (in ?c4 ?c4) ) )
              (once (agent_holds ?bl) )
            )
          )
        )
        (preference ballThrownFromDoor
          (at-end
            (agent_holds ?o1)
          )
        )
        (preference gameObjectToBin
          (exists (?d - (either cube_block yellow_cube_block cellphone))
            (then
              (once (or (on ?d ?bl) (and (in ?o1 desk) (agent_holds upright) (not (and (in room_center ?o1) ) ) ) ) )
              (once (on ?o1 ?o1) )
              (hold (not (agent_holds pink_dodgeball) ) )
            )
          )
        )
      )
    )
    (preference bigObjectThrownToBed
      (exists (?ob - (either hexagonal_bin))
        (then
          (once (agent_crouches ) )
          (hold (forall (?l1 - ball ?d2 - hexagonal_bin) (on ?d2 ?ob) ) )
          (once (and (agent_holds ?ob) (not (in_motion ?ob) ) ) )
        )
      )
    )
  )
)
(:terminal
  (<= 5 (- (* (+ (count-once-per-objects gameObjectToBin:white) (* (count-once-per-external-objects ballThrownFromDoor:yellow) (count gameObjectToBin:basketball) )
        )
        (count gameObjectToBin:cube_block:dodgeball)
      )
    )
  )
)
(:scoring
  5
)
)

(define (game game-id-472) (:domain few-objects-room-v1)
(:setup
  (and
    (game-conserved
      (not
        (agent_holds floor)
      )
    )
    (and
      (exists (?b2 - dodgeball)
        (exists (?h - hexagonal_bin)
          (exists (?h ?h - cube_block ?g ?w - color)
            (forall (?b4 - game_object)
              (forall (?c - cube_block)
                (and
                  (and
                    (and
                      (exists (?o - hexagonal_bin ?d - cube_block)
                        (game-conserved
                          (adjacent ?c ?b4)
                        )
                      )
                    )
                    (and
                      (forall (?r2 - (either golfball dodgeball desktop))
                        (and
                          (exists (?h - hexagonal_bin)
                            (exists (?o4 - ball)
                              (and
                                (game-optional
                                  (on agent room_center)
                                )
                                (game-conserved
                                  (and
                                    (agent_holds ?g)
                                    (and
                                      (in_motion ?b4)
                                      (on ?c ?r2)
                                    )
                                    (in_motion ?o4)
                                  )
                                )
                                (exists (?b - game_object ?d1 - game_object)
                                  (exists (?c2 - game_object ?b2 - block)
                                    (game-conserved
                                      (exists (?d - teddy_bear)
                                        (adjacent ?d ?c)
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
    (exists (?o2 - curved_wooden_ramp ?b1 - (either basketball pink) ?h - game_object)
      (and
        (exists (?d - (either book desktop))
          (game-conserved
            (agent_holds front)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c - doggie_bed)
      (and
        (preference blockOnBlockInTowerAtEnd
          (exists (?b - (either book cd) ?b4 - ball ?t - beachball)
            (then
              (hold (agent_holds ?t) )
              (once (in ?t ?t) )
              (once (agent_holds agent) )
            )
          )
        )
        (preference cubeThrownToBin
          (exists (?b - hexagonal_bin ?o3 - hexagonal_bin)
            (then
              (once (on ?o3 ?c) )
              (once (in ?c ?c) )
              (once (and (in_motion ?c) (and (and (agent_holds ?c) (agent_holds ?o3) ) (on ?c ?o3) (on ?c ?o3) (and (not (on agent ?c) ) (on ?o3 ?c) ) (is_setup_object ?o3) (exists (?h - dodgeball) (in_motion ?c) ) (in_motion ?o3) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (count cubeThrownToBin:green) (external-forall-maximize -30 ) )
)
(:scoring
  (total-time)
)
)

(define (game game-id-473) (:domain medium-objects-room-v1)
(:setup
  (exists (?r1 - cube_block ?o - yellow_cube_block)
    (and
      (game-conserved
        (and
          (not
            (not
              (not
                (agent_holds ?o)
              )
            )
          )
          (and
            (on ?o agent)
            (and
              (< 4 (distance ?o ?o))
              (opposite desk ?o)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrowAttempt
      (exists (?d - hexagonal_bin)
        (then
          (once (not (in_motion ?d) ) )
        )
      )
    )
    (preference objectLandsInBin
      (exists (?b ?b1 ?c2 ?c ?b2 - bridge_block)
        (then
          (once (and (and (in ?b ?c) (and (in_motion ?c2) (agent_holds ?b1) ) (in upright ?b1) ) (not (in_motion ?b) ) ) )
          (once (agent_holds ?c) )
          (hold-while (and (not (same_type ?b1 ?b) ) (exists (?o3 - dodgeball) (adjacent floor upright) ) ) (not (and (and (on ?b1 ?c) (not (not (= 6 10) ) ) ) (in_motion ?b1) ) ) (not (and (forall (?h - block ?c3 ?c6 - hexagonal_bin) (exists (?b4 - cylindrical_block) (in_motion floor) ) ) (not (agent_holds ?c) ) (agent_crouches ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count objectLandsInBin:basketball) 9 )
)
(:scoring
  (count ballThrowAttempt)
)
)

(define (game game-id-474) (:domain many-objects-room-v1)
(:setup
  (forall (?c - building ?o - game_object ?c2 - hexagonal_bin)
    (game-conserved
      (and
        (not
          (and
            (in_motion ?c2)
            (and
              (agent_holds ?c2)
              (touch ?c2 ?c2)
              (forall (?p - drawer ?d - dodgeball)
                (not
                  (and
                    (in_motion ?d)
                    (between ?d door ?c2)
                  )
                )
              )
            )
            (and
              (and
                (and
                  (not
                    (and
                      (and
                        (agent_holds ?c2)
                        (and
                          (not
                            (in ?c2 ?c2)
                          )
                          (< 1 (distance ?c2 ?c2))
                        )
                      )
                      (<= (distance desk agent) 1)
                    )
                  )
                  (not
                    (in_motion ?c2)
                  )
                )
                (or
                  (on green ?c2)
                  (is_setup_object ?c2)
                )
              )
              (not
                (same_object ?c2 ?c2)
              )
            )
          )
        )
        (and
          (not
            (and
              (adjacent bed ?c2)
              (not
                (in_motion ?c2)
              )
              (agent_holds ?c2)
              (adjacent top_drawer ?c2)
              (not
                (same_color ?c2 ?c2)
              )
              (adjacent rug ?c2)
              (not
                (exists (?d - building)
                  (not
                    (exists (?o5 - building ?s - hexagonal_bin)
                      (not
                        (rug_color_under desk ?d)
                      )
                    )
                  )
                )
              )
            )
          )
          (in ?c2 ?c2)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwInBin
      (exists (?t1 - green_triangular_ramp)
        (then
          (hold-while (faces right agent) (not (in_motion ?t1) ) (in_motion floor) (agent_holds ?t1) )
          (once (> (distance ?t1 ?t1) 1) )
          (hold (in_motion ?t1) )
          (forall-sequence (?c - building ?h - dodgeball)
            (then
              (once (and (in_motion ?h) (and (< 0 1) (not (and (and (not (agent_holds ?t1) ) (not (agent_holds ?h) ) ) (in_motion ?h) ) ) ) ) )
              (hold (not (above desk ?h) ) )
              (once (adjacent ?h ?h) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (* (count-once-per-objects throwInBin:blue_dodgeball:basketball) 5 (count-overlapping throwInBin:basketball:blue_dodgeball) )
      (* (* 7 (count-longest throwInBin) )
        (count-once-per-objects throwInBin:yellow)
      )
    )
    (or
      (or
        (>= 10 (+ 3 (count throwInBin:dodgeball) )
        )
        (>= (+ (* 3 (* 30 4 )
            )
            (count throwInBin:golfball:yellow)
            (* (count throwInBin:doggie_bed:beachball) 3 )
            (count-once-per-external-objects throwInBin:beachball)
            5
            (* (+ (total-score) (count-same-positions throwInBin:yellow_cube_block) )
              5
            )
            (count-overlapping throwInBin:basketball)
            10
            (count throwInBin:dodgeball)
            12
            (count throwInBin:blue_dodgeball)
            10
          )
          (* (count-overlapping throwInBin:dodgeball) (count-once-per-objects throwInBin:tan) )
        )
      )
    )
    (>= (+ (total-score) (+ (count-once-per-objects throwInBin:dodgeball:hexagonal_bin) (* (+ 10 5 )
            (* 10 (count throwInBin:red) )
            180
            (count throwInBin:basketball)
          )
        )
      )
      5
    )
  )
)
(:scoring
  (- 10 )
)
)

(define (game game-id-475) (:domain medium-objects-room-v1)
(:setup
  (exists (?c ?c - pyramid_block)
    (game-optional
      (same_color agent rug)
    )
  )
)
(:constraints
  (and
    (preference throwToBinFromDistance
      (exists (?d - ball)
        (then
          (once (equal_x_position ?d ?d) )
          (once (and (on ?d ?d) (not (not (opposite front_left_corner ?d) ) ) (in_motion ?d) ) )
          (once (agent_holds ?d) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count throwToBinFromDistance:brown:green:dodgeball) (count-once-per-external-objects throwToBinFromDistance:dodgeball:basketball) )
    (* 30 (* (* (+ (count throwToBinFromDistance:beachball:golfball) )
          (* (* (count throwToBinFromDistance:beachball) (* 10 1 )
            )
            (external-forall-maximize
              (count-same-positions throwToBinFromDistance:yellow_cube_block:cylindrical_block:pink_dodgeball)
            )
          )
        )
        (count-once throwToBinFromDistance:beachball)
      )
    )
  )
)
(:scoring
  (count throwToBinFromDistance:yellow)
)
)

(define (game game-id-476) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (exists (?c6 - cube_block)
      (and
        (on ?c6 ?c6)
        (exists (?b - hexagonal_bin)
          (and
            (and
              (agent_holds agent)
              (in_motion bed)
            )
            (in ?b ?b)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference smallObjectThrownToBed
      (exists (?b3 - hexagonal_bin)
        (then
          (hold (>= (distance_side ?b3 front ?b3 ?b3) (distance ?b3 desk)) )
          (hold (on ?b3 rug) )
          (once (equal_x_position ?b3 agent) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (+ (count smallObjectThrownToBed:red:dodgeball) (count smallObjectThrownToBed:white:pink) )
      (count-once-per-objects smallObjectThrownToBed:yellow_pyramid_block:doggie_bed)
    )
  )
)
(:scoring
  (count-once smallObjectThrownToBed:blue)
)
)

(define (game game-id-477) (:domain few-objects-room-v1)
(:setup
  (exists (?ob - hexagonal_bin)
    (game-conserved
      (in_motion ?ob)
    )
  )
)
(:constraints
  (and
    (forall (?b - color)
      (and
        (preference throwGolfballToBin
          (exists (?h ?d - game_object)
            (then
              (hold (agent_holds ?h) )
              (once (and (equal_x_position ?b ?d) (and (on rug ?d) (same_object ?b bed) ) ) )
              (once (in_motion ?b) )
            )
          )
        )
      )
    )
    (forall (?o1 - hexagonal_bin)
      (and
        (preference throwBallToDoggieBed
          (exists (?c6 ?h - green_triangular_ramp)
            (at-end
              (not
                (object_orientation ball ?o1)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count throwGolfballToBin:rug:pink:dodgeball) (* (* (count throwBallToDoggieBed:basketball) (* (* 4 (* 3 (count-once-per-objects throwGolfballToBin:yellow) (count throwGolfballToBin:blue) (+ (* (count-once-per-objects throwGolfballToBin:dodgeball) 2 )
                (* (and (count-unique-positions throwBallToDoggieBed:purple:dodgeball:dodgeball) 5 ) (count throwBallToDoggieBed:pink) (count throwGolfballToBin:green:red:cylindrical_block) (- (count throwBallToDoggieBed:yellow) )
                  -30
                  3
                )
              )
              (* (count-measure throwGolfballToBin:green) (count-once-per-objects throwGolfballToBin:side_table:blue_pyramid_block) )
              (count-same-positions throwBallToDoggieBed:yellow)
              3
            )
            (* (count throwBallToDoggieBed) (not 3 ) )
            2
            (count-once throwBallToDoggieBed:yellow:block)
            (* (total-time) (count-once-per-objects throwBallToDoggieBed:rug) (+ 10 (* 4 (count throwBallToDoggieBed:pink) 8 )
              )
            )
          )
          (* (count throwGolfballToBin:dodgeball) (count throwBallToDoggieBed:yellow_pyramid_block:yellow_cube_block) )
        )
      )
      6
    )
  )
)
(:scoring
  (and
    (count throwGolfballToBin:dodgeball)
    (+ (* (< 300 (count throwGolfballToBin:blue) )
        (count-once-per-objects throwBallToDoggieBed:red)
      )
      60
    )
  )
)
)

(define (game game-id-478) (:domain few-objects-room-v1)
(:setup
  (forall (?b - (either book key_chain pyramid_block cd))
    (forall (?s - hexagonal_bin)
      (game-conserved
        (in_motion ?b)
      )
    )
  )
)
(:constraints
  (and
    (preference ballRolledOnRampToRug
      (exists (?b1 - curved_wooden_ramp ?o4 - game_object)
        (then
          (hold (in ?o4 ?o4) )
          (hold-to-end (not (in ?o4 ?o4) ) )
          (once-measure (or (and (not (not (toggled_on ?o4) ) ) (and (and (and (in_motion ?o4) (or (not (in agent desk) ) (not (agent_holds ?o4) ) ) ) (not (not (or (agent_holds ?o4) (in_motion ?o4) ) ) ) ) (in_motion ?o4) ) ) ) (distance ?o4 ?o4) )
          (once (agent_holds ?o4) )
        )
      )
    )
    (preference throwToBinFromOppositeWall
      (exists (?b - (either hexagonal_bin cylindrical_block laptop))
        (then
          (hold-while (agent_holds ?b) (adjacent_side ?b rug ?b) )
          (once (agent_holds agent) )
          (once (in_motion ?b) )
        )
      )
    )
  )
)
(:terminal
  (> (+ 5 )
    (count ballRolledOnRampToRug:alarm_clock:pink)
  )
)
(:scoring
  (- (count throwToBinFromOppositeWall:yellow_cube_block) )
)
)

(define (game game-id-479) (:domain few-objects-room-v1)
(:setup
  (exists (?o - curved_wooden_ramp)
    (and
      (or
        (game-conserved
          (and
            (not
              (touch ?o ?o)
            )
            (agent_holds ?o)
          )
        )
        (game-optional
          (agent_holds desk)
        )
        (forall (?p1 - (either cellphone yellow_cube_block))
          (exists (?h - dodgeball ?l - (either key_chain doggie_bed))
            (and
              (game-conserved
                (in agent ?l)
              )
              (and
                (game-optional
                  (in_motion floor)
                )
              )
              (exists (?t1 - hexagonal_bin)
                (and
                  (and
                    (and
                      (not
                        (and
                          (exists (?h - game_object)
                            (and
                              (or
                                (exists (?h - hexagonal_bin ?c - hexagonal_bin)
                                  (game-conserved
                                    (adjacent ?t1 ?c)
                                  )
                                )
                              )
                              (forall (?c - golfball)
                                (and
                                  (not
                                    (game-conserved
                                      (and
                                        (adjacent ?h ?l)
                                        (on ?t1 ?t1)
                                        (agent_holds ?h)
                                        (and
                                          (not
                                            (not
                                              (in_motion blue)
                                            )
                                          )
                                          (in_motion ?p1)
                                        )
                                        (not
                                          (is_setup_object ?l)
                                        )
                                        (touch ?h ?h)
                                      )
                                    )
                                  )
                                  (game-optional
                                    (touch ?h agent)
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
      (and
        (and
          (and
            (game-conserved
              (agent_holds blue)
            )
          )
        )
        (and
          (and
            (exists (?r - dodgeball)
              (game-conserved
                (not
                  (agent_holds ?r)
                )
              )
            )
            (game-optional
              (and
                (agent_holds ?o)
                (not
                  (and
                    (agent_holds ?o)
                    (and
                      (or
                        (adjacent green_golfball pink_dodgeball)
                      )
                      (agent_holds ?o)
                    )
                    (agent_holds ?o)
                  )
                )
              )
            )
            (game-conserved
              (adjacent_side upright ?o agent)
            )
          )
          (game-optional
            (and
              (agent_holds ?o)
              (and
                (or
                  (and
                    (not
                      (in agent ?o)
                    )
                    (not
                      (in ?o ?o)
                    )
                  )
                  (agent_holds ?o)
                )
                (not
                  (and
                    (on ?o ?o)
                    (not
                      (and
                        (in ?o ?o)
                        (touch ?o ?o)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
      (forall (?b2 - (either golfball doggie_bed alarm_clock cd))
        (game-conserved
          (not
            (broken ?o)
          )
        )
      )
      (forall (?o5 - curved_wooden_ramp)
        (or
          (and
            (exists (?d2 - triangular_ramp)
              (and
                (and
                  (game-conserved
                    (in_motion ?d2)
                  )
                )
                (game-conserved
                  (and
                    (or
                      (in_motion ?d2)
                      (and
                        (not
                          (on agent ?o5)
                        )
                        (not
                          (in_motion ?d2)
                        )
                        (agent_holds agent)
                        (and
                          (not
                            (and
                              (and
                                (same_type agent ?d2)
                                (in ?o5 ?o5)
                                (agent_holds ?o5)
                                (in_motion ?d2)
                              )
                              (adjacent_side ?d2 ?o ?o)
                            )
                          )
                          (in ?o ?o5)
                          (in_motion ?o)
                        )
                      )
                    )
                    (adjacent agent ?o5)
                  )
                )
              )
            )
          )
        )
      )
      (not
        (exists (?h - cube_block ?c4 - beachball)
          (game-conserved
            (exists (?l2 ?c3 - ball ?b - drawer)
              (in_motion ?b)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToBin
      (exists (?h - cube_block ?h - hexagonal_bin)
        (then
          (once (> 1 8) )
          (hold-while (agent_holds ?h) (not (not (not (not (is_setup_object ?h) ) ) ) ) (on ?h ?h) )
        )
      )
    )
    (preference baseBlockInTowerAtEnd
      (exists (?p1 - dodgeball ?r - wall)
        (at-end
          (= (distance ?r ?r) (distance ?r ?r))
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (+ 5 (* (count-longest baseBlockInTowerAtEnd:alarm_clock:red) (count throwToBin:alarm_clock:beachball) )
      )
      4
    )
  )
)
(:scoring
  10
)
)

(define (game game-id-480) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (and
        (forall (?b3 - wall ?t1 - dodgeball)
          (forall (?h - doggie_bed)
            (game-conserved
              (not
                (adjacent ?h ?t1)
              )
            )
          )
        )
        (and
          (game-optional
            (in rug ?h)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference failedThrowAttempt
      (exists (?t - building)
        (then
          (hold (equal_x_position ?t ?t) )
          (hold (in_motion ?t) )
          (once (agent_holds ?t) )
        )
      )
    )
  )
)
(:terminal
  (= (count failedThrowAttempt:book) 6 )
)
(:scoring
  (total-score)
)
)

(define (game game-id-481) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (in_motion agent)
  )
)
(:constraints
  (and
    (preference throwMovesBeachballWithoutKnockingTeddy
      (exists (?t - teddy_bear ?w1 - doggie_bed)
        (then
          (hold-while (not (in ?w1 ?w1) ) (and (not (in ?w1 ?w1) ) ) )
          (hold (and (not (or (in ?w1 ?w1) (and (not (adjacent ?w1 ?w1) ) (agent_holds ?w1) ) ) ) (and (agent_holds room_center) (and (or (not (> (distance ?w1 ?w1) (x_position agent)) ) (in_motion ?w1) (or (< (distance ?w1 upside_down) (distance ?w1 ?w1)) (< (distance_side ?w1 ?w1 ?w1) (distance ?w1 ?w1)) ) ) (not (adjacent ?w1 ?w1) ) ) ) ) )
          (once (faces ?w1 ?w1) )
        )
      )
    )
    (preference ballThrownFromBehindBlock
      (exists (?c - (either key_chain key_chain) ?c1 ?c - hexagonal_bin)
        (at-end
          (not
            (adjacent_side ?c1 rug ?c)
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (<= (* (count throwMovesBeachballWithoutKnockingTeddy:brown) 100 )
      100
    )
    (>= (count-increasing-measure ballThrownFromBehindBlock:doggie_bed) (* (* 5 (+ (count-once-per-objects throwMovesBeachballWithoutKnockingTeddy:basketball) (count throwMovesBeachballWithoutKnockingTeddy:golfball) -10 )
        )
        (count-once throwMovesBeachballWithoutKnockingTeddy:book)
      )
    )
  )
)
(:scoring
  9
)
)

(define (game game-id-482) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?c1 - building)
      (and
        (game-optional
          (exists (?b - dodgeball)
            (touch ?c1 ?c1)
          )
        )
        (and
          (and
            (and
              (forall (?b - dodgeball ?g - block)
                (game-conserved
                  (not
                    (same_object ?c1 ?c1)
                  )
                )
              )
              (not
                (forall (?o - cube_block ?o - desk_shelf)
                  (forall (?t - game_object)
                    (exists (?ob ?h - hexagonal_bin ?c - (either chair) ?h - color ?p - dodgeball)
                      (exists (?t - flat_block)
                        (exists (?b - chair ?b4 - wall)
                          (exists (?w1 - wall ?d - dodgeball)
                            (exists (?b8 - (either floor bridge_block teddy_bear) ?b - hexagonal_bin ?tb - (either dodgeball yellow_cube_block))
                              (and
                                (exists (?w1 - dodgeball)
                                  (forall (?l - ball)
                                    (and
                                      (exists (?b - shelf)
                                        (exists (?c1 - dodgeball ?c ?h ?g ?b ?h ?h ?c6 ?p3 ?l ?r1 - hexagonal_bin)
                                          (forall (?w - game_object)
                                            (game-conserved
                                              (and
                                                (in_motion ?b)
                                                (not
                                                  (adjacent ?o agent)
                                                )
                                                (on ?c6 ?o)
                                                (in_motion ?w1)
                                              )
                                            )
                                          )
                                        )
                                      )
                                      (game-optional
                                        (on ?tb green_golfball)
                                      )
                                    )
                                  )
                                )
                                (forall (?bl ?c - dodgeball)
                                  (and
                                    (forall (?b - hexagonal_bin)
                                      (and
                                        (not
                                          (game-optional
                                            (in_motion ?o)
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                                (forall (?d - triangular_ramp ?o5 - game_object)
                                  (game-conserved
                                    (not
                                      (agent_crouches )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
            (exists (?b8 - teddy_bear)
              (game-optional
                (on ?c1 ?c1)
              )
            )
            (and
              (or
                (not
                  (and
                    (exists (?b9 - building ?p - triangular_ramp ?t2 - hexagonal_bin)
                      (forall (?b2 - hexagonal_bin)
                        (and
                          (forall (?b - game_object ?w - beachball)
                            (and
                              (forall (?b7 - building)
                                (exists (?c - (either laptop doggie_bed doggie_bed yellow_cube_block curved_wooden_ramp dodgeball cellphone))
                                  (exists (?b - (either cd))
                                    (exists (?d - wall ?c4 - ball ?b2 - block)
                                      (and
                                        (forall (?s - (either cellphone dodgeball))
                                          (game-conserved
                                            (in_motion ?s)
                                          )
                                        )
                                        (game-conserved
                                          (not
                                            (agent_holds ?c1)
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                              (game-conserved
                                (agent_holds room_center)
                              )
                            )
                          )
                          (exists (?o5 - cube_block)
                            (game-conserved
                              (on ?t2 ?t2)
                            )
                          )
                        )
                      )
                    )
                    (game-conserved
                      (in_motion ?c1)
                    )
                  )
                )
                (forall (?b8 - color ?b - dodgeball)
                  (and
                    (exists (?h ?o - wall)
                      (game-optional
                        (and
                          (broken ?h)
                          (> (distance agent ?o) (distance ?h ?h))
                        )
                      )
                    )
                    (exists (?c - hexagonal_bin)
                      (game-conserved
                        (agent_holds ?c1)
                      )
                    )
                    (game-optional
                      (and
                        (not
                          (exists (?p - cube_block ?b - hexagonal_bin)
                            (not
                              (on ?b agent)
                            )
                          )
                        )
                        (not
                          (and
                            (and
                              (adjacent ?b ?b)
                              (in_motion ?c1)
                            )
                            (and
                              (in_motion agent)
                              (not
                                (not
                                  (not
                                    (not
                                      (agent_holds ?c1)
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                        (< 1 (distance rug rug))
                        (and
                          (on ?c1 ?c1)
                          (adjacent ?b ?c1)
                          (on side_table ?c1)
                        )
                        (in ?b ?c1)
                        (agent_holds ?b)
                        (same_type ?c1 ?c1)
                      )
                    )
                  )
                )
              )
              (and
                (exists (?o - yellow_pyramid_block)
                  (and
                    (exists (?l3 - dodgeball)
                      (game-optional
                        (in_motion ?l3)
                      )
                    )
                    (game-conserved
                      (same_type floor upright)
                    )
                  )
                )
                (game-conserved
                  (in_motion pink_dodgeball)
                )
                (game-optional
                  (in ?c1 ?c1)
                )
                (and
                  (and
                    (exists (?d - chair)
                      (exists (?l - cube_block)
                        (game-optional
                          (on ?l ?c1)
                        )
                      )
                    )
                  )
                  (and
                    (game-conserved
                      (in_motion ?c1)
                    )
                    (exists (?w2 - ball)
                      (and
                        (game-optional
                          (on rug ?w2)
                        )
                        (exists (?d - block ?c - (either hexagonal_bin dodgeball))
                          (and
                            (game-optional
                              (opposite ?w2 bed)
                            )
                          )
                        )
                        (and
                          (and
                            (and
                              (forall (?b - building)
                                (game-conserved
                                  (agent_holds ?w2)
                                )
                              )
                              (game-conserved
                                (adjacent ?c1 ?w2)
                              )
                            )
                          )
                          (and
                            (and
                              (game-optional
                                (in ?w2 ?w2)
                              )
                            )
                          )
                          (game-conserved
                            (object_orientation pillow front)
                          )
                        )
                      )
                    )
                  )
                  (and
                    (exists (?g - hexagonal_bin)
                      (and
                        (game-optional
                          (in_motion ?c1)
                        )
                      )
                    )
                  )
                )
                (and
                  (and
                    (game-conserved
                      (in_motion ?c1)
                    )
                    (game-conserved
                      (and
                        (not
                          (in_motion ?c1)
                        )
                        (and
                          (not
                            (agent_holds agent)
                          )
                          (in_motion ?c1)
                        )
                      )
                    )
                  )
                  (or
                    (game-optional
                      (agent_holds ?c1)
                    )
                    (and
                      (and
                        (game-optional
                          (adjacent_side agent ?c1 ?c1 ?c1)
                        )
                        (and
                          (forall (?d - pillow)
                            (exists (?c - dodgeball)
                              (game-conserved
                                (not
                                  (and
                                    (not
                                      (exists (?h - blinds)
                                        (and
                                          (agent_holds desk)
                                          (and
                                            (= (distance rug ?c) (distance ?c1 ?c1) 0.5)
                                            (in bed ?c1)
                                            (not
                                              (and
                                                (in_motion ?c)
                                                (adjacent ?c1 ?c1)
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                    (and
                                      (not
                                        (and
                                          (in ?d ?c)
                                          (agent_crouches )
                                        )
                                      )
                                      (and
                                        (faces ?c1 ?c1)
                                        (in_motion ?d)
                                      )
                                    )
                                    (and
                                      (in_motion ?d)
                                      (touch agent ?c1)
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                      (and
                        (and
                          (game-conserved
                            (not
                              (in_motion pink_dodgeball)
                            )
                          )
                          (game-optional
                            (in_motion desk)
                          )
                        )
                      )
                      (game-conserved
                        (in_motion ?c1)
                      )
                    )
                    (exists (?ob - hexagonal_bin)
                      (game-conserved
                        (adjacent ?ob ?ob)
                      )
                    )
                  )
                  (and
                    (and
                      (exists (?b4 - hexagonal_bin)
                        (or
                          (game-conserved
                            (exists (?b - sliding_door ?b - beachball ?b2 - cube_block)
                              (not
                                (on agent ?b2)
                              )
                            )
                          )
                          (game-conserved
                            (agent_holds room_center)
                          )
                          (game-conserved
                            (faces ?b4 pink_dodgeball)
                          )
                        )
                      )
                    )
                    (and
                      (game-conserved
                        (in_motion room_center)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference greenObjectMovedToRoomCenter
      (exists (?l1 - dodgeball)
        (then
          (once (in_motion ?l1) )
          (once (in_motion ?l1) )
          (hold (agent_holds rug) )
          (once (in_motion ?l1) )
        )
      )
    )
    (preference pillowThrownToDoggieBed
      (exists (?d - (either golfball cylindrical_block key_chain pencil chair blue_cube_block bridge_block) ?p2 - dodgeball)
        (at-end
          (adjacent_side ?p2 upright ?p2)
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 300 (count-once-per-objects greenObjectMovedToRoomCenter:white) )
    (>= 1 (count greenObjectMovedToRoomCenter:block) )
  )
)
(:scoring
  5
)
)

(define (game game-id-483) (:domain medium-objects-room-v1)
(:setup
  (forall (?l - cube_block)
    (forall (?b5 - hexagonal_bin)
      (forall (?f - (either pillow tall_cylindrical_block))
        (not
          (game-conserved
            (< 0 1)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockInTowerKnockedByDodgeball
      (exists (?o - hexagonal_bin ?l - hexagonal_bin)
        (at-end
          (and
            (on ?l ?l)
            (on ?l ?l)
          )
        )
      )
    )
    (preference ballThrowAttempt
      (exists (?s - dodgeball ?c - ball)
        (then
          (hold-for 8 (in_motion ?c) )
          (once (and (and (not (not (and (and (not (adjacent ?c ?c) ) (on ?c ?c) ) (on room_center ?c) ) ) ) (and (and (is_setup_object ?c) (< (distance_side agent ?c ?c) (x_position floor)) ) (and (agent_holds agent) (and (or (not (< (distance ?c ?c) 0.5) ) (and (agent_holds ?c) (adjacent ?c ?c) ) ) ) ) ) (agent_holds ?c) (and (in_motion ?c) (not (in agent ?c) ) ) (on ?c ?c) (and (rug_color_under ?c ?c) (open ?c) ) (and (agent_holds ?c) (adjacent ?c ?c) ) ) (not (rug_color_under ?c ?c) ) ) )
          (hold (exists (?h - cube_block) (is_setup_object ?c) ) )
        )
      )
    )
  )
)
(:terminal
  (<= (+ (count-once-per-objects blockInTowerKnockedByDodgeball:beachball:pink) 2 12 )
    (* (* 2 (+ (count-once-per-objects ballThrowAttempt:blue_pyramid_block) (* (count ballThrowAttempt:hexagonal_bin) (count ballThrowAttempt) )
        )
      )
      3
    )
  )
)
(:scoring
  (+ (count-overlapping ballThrowAttempt:dodgeball) 15 )
)
)

(define (game game-id-484) (:domain many-objects-room-v1)
(:setup
  (exists (?b - hexagonal_bin ?o4 - curved_wooden_ramp)
    (game-conserved
      (and
        (adjacent agent ?o4)
        (and
          (and
            (above ?o4 ?o4)
            (in ?o4 ?o4)
            (agent_holds ?o4)
            (or
              (on desk ?o4)
              (and
                (game_over )
                (touch ?o4 ?o4)
              )
            )
          )
          (and
            (not
              (on ?o4 ?o4)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference teddyBearHitsBall
      (exists (?c1 - hexagonal_bin)
        (then
          (once (adjacent ?c1 ?c1) )
          (once (> (distance agent ?c1) (building_size ?c1)) )
          (once (touch ?c1 ?c1) )
        )
      )
    )
    (preference throwAttempt
      (exists (?o1 - ball)
        (at-end
          (not
            (or
              (agent_holds ?o1)
              (and
                (agent_holds ?o1)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (and (* 1 6 )
      10
      (count-once-per-objects throwAttempt:blue_cube_block)
    )
    (= (* (* (count-once-per-objects teddyBearHitsBall:beachball) (+ (count throwAttempt:yellow:basketball) 1 )
        )
        (* (total-score) (count throwAttempt:doggie_bed) )
      )
      1
    )
  )
)
(:scoring
  (+ (* (+ (count throwAttempt) 15 )
      (and
        (count-overlapping throwAttempt:brown)
        (+ (total-score) 6 (count throwAttempt:block) )
        (count teddyBearHitsBall:blue_dodgeball:dodgeball)
      )
      (external-forall-maximize
        (/
          3
          (* (count-once-per-objects teddyBearHitsBall:basketball) 1 10 (+ (count-same-positions throwAttempt:yellow) (* (+ (count teddyBearHitsBall) (count teddyBearHitsBall:dodgeball) (count-once-per-objects throwAttempt:hexagonal_bin:purple) )
                (* (* 4 (count-unique-positions teddyBearHitsBall:pink_dodgeball) (count teddyBearHitsBall:golfball) )
                  5
                )
              )
            )
            5
            10
          )
        )
      )
      (count teddyBearHitsBall:pink:red)
      10
    )
    3
  )
)
)

(define (game game-id-485) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?s - ball)
      (and
        (and
          (game-conserved
            (in ?s top_shelf)
          )
          (exists (?d ?b ?b - hexagonal_bin ?h - hexagonal_bin)
            (exists (?db - beachball)
              (and
                (game-conserved
                  (adjacent upside_down bed)
                )
              )
            )
          )
          (and
            (not
              (and
                (game-optional
                  (not
                    (in_motion agent)
                  )
                )
              )
            )
            (exists (?p - hexagonal_bin)
              (forall (?c - wall)
                (forall (?p3 - (either golfball game_object))
                  (game-optional
                    (agent_holds ?c)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference agentLeavesDogbedOrNoMoreBalls
      (exists (?c2 - (either dodgeball pyramid_block))
        (then
          (once (in_motion ?c2) )
        )
      )
    )
  )
)
(:terminal
  (> (total-score) (+ 40 2 (* (count agentLeavesDogbedOrNoMoreBalls:beachball) (* (* (+ 5 (count agentLeavesDogbedOrNoMoreBalls:red:yellow) )
            (count-overlapping agentLeavesDogbedOrNoMoreBalls:beachball:dodgeball)
            1
            (total-time)
            (not
              (* (- (* (count-once-per-external-objects agentLeavesDogbedOrNoMoreBalls:dodgeball:dodgeball) (and (* 10 (count-once-per-objects agentLeavesDogbedOrNoMoreBalls:yellow_cube_block) )
                    )
                  )
                )
                (<= (- (* (count-once-per-objects agentLeavesDogbedOrNoMoreBalls:basketball) (count agentLeavesDogbedOrNoMoreBalls:yellow:golfball) )
                  )
                  2
                )
              )
            )
            (+ (count-once-per-external-objects agentLeavesDogbedOrNoMoreBalls:dodgeball) (+ (count agentLeavesDogbedOrNoMoreBalls:yellow) 10 )
            )
            15
            (count-once-per-objects agentLeavesDogbedOrNoMoreBalls:dodgeball)
            (* (count-once-per-objects agentLeavesDogbedOrNoMoreBalls:yellow:pink_dodgeball) (count agentLeavesDogbedOrNoMoreBalls:yellow) 9 )
          )
          (* 4 2 )
        )
      )
      (* (count agentLeavesDogbedOrNoMoreBalls:basketball) 300 )
    )
  )
)
(:scoring
  (* (* 1 (count agentLeavesDogbedOrNoMoreBalls:dodgeball) (or 1 (>= (total-score) (count-once-per-objects agentLeavesDogbedOrNoMoreBalls:yellow_cube_block:dodgeball:golfball) )
        (+ (<= 6 (count-shortest agentLeavesDogbedOrNoMoreBalls:dodgeball) )
          (count-once-per-objects agentLeavesDogbedOrNoMoreBalls:blue_dodgeball)
          (count-overlapping agentLeavesDogbedOrNoMoreBalls:beachball:side_table)
        )
      )
    )
  )
)
)

(define (game game-id-486) (:domain few-objects-room-v1)
(:setup
  (exists (?o - hexagonal_bin ?d - pyramid_block ?d - ball)
    (game-optional
      (on ?d ?d)
    )
  )
)
(:constraints
  (and
    (forall (?h - teddy_bear ?p2 - doggie_bed)
      (and
        (preference objectLandsInBin
          (exists (?r1 - ball)
            (then
              (once (touch ?p2 door) )
              (hold (and (and (in_motion ?p2) (on ?r1 ?p2) ) (not (same_color ?r1 ?p2) ) ) )
              (hold (<= 1 (distance ?p2 ?r1)) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 20 (* (count-once-per-objects objectLandsInBin:pink_dodgeball:basketball) (count objectLandsInBin:yellow_cube_block:blue_pyramid_block:hexagonal_bin) )
  )
)
(:scoring
  6
)
)

(define (game game-id-487) (:domain many-objects-room-v1)
(:setup
  (exists (?g - golfball)
    (forall (?f - doggie_bed ?l - ball)
      (exists (?p ?p1 - hexagonal_bin ?d2 - cube_block)
        (game-conserved
          (and
            (game_over )
            (not
              (adjacent ?d2 ?d2)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballThrownToBin
      (exists (?o - pyramid_block)
        (then
          (once (< (building_size ?o) 1) )
          (once (< (distance rug ?o) (distance ?o ?o)) )
          (once (not (< (distance ?o ?o) (distance_side room_center ?o ?o)) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once dodgeballThrownToBin:bed:basketball) 2 )
)
(:scoring
  (* (* 5 (* 6 (+ (count-same-positions dodgeballThrownToBin:dodgeball) (* 2 (count-total dodgeballThrownToBin:pink) )
        )
        (external-forall-maximize
          5
        )
      )
      (count dodgeballThrownToBin:rug:triangle_block:bed)
      5
      (count dodgeballThrownToBin:golfball)
      (and
        (count dodgeballThrownToBin:dodgeball)
        6
        10
      )
    )
    (external-forall-maximize
      (count-measure dodgeballThrownToBin:basketball:yellow)
    )
    (count dodgeballThrownToBin:yellow:dodgeball)
    10
    (count dodgeballThrownToBin:pink_dodgeball)
    (count dodgeballThrownToBin:beachball:book)
  )
)
)

(define (game game-id-488) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (agent_crouches )
  )
)
(:constraints
  (and
    (forall (?g - curved_wooden_ramp ?d - teddy_bear)
      (and
        (preference smallObjectThrownToBed
          (exists (?o - (either basketball golfball))
            (then
              (once (not (touch ?o ?o) ) )
              (hold (not (not (object_orientation rug yellow) ) ) )
              (once (in_motion ?d) )
            )
          )
        )
        (preference ballThrownToBed
          (exists (?c6 ?s - wall)
            (then
              (once (touch ?c6 ?d) )
              (hold (and (and (not (adjacent ?d ?c6) ) (in ?c6 agent) ) (in_motion ?d) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (- 5 )
    (count-once ballThrownToBed:dodgeball)
  )
)
(:scoring
  (count-unique-positions ballThrownToBed)
)
)

(define (game game-id-489) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (same_color agent agent)
  )
)
(:constraints
  (and
    (preference ballRolledOnRampToRug
      (exists (?c - teddy_bear ?o3 - (either beachball cylindrical_block))
        (then
          (once (and (not (above ?o3 ?o3) ) (exists (?h - chair) (in bed ?h) ) ) )
          (once (and (touch ?o3 ?o3) (touch ?o3 ?o3) ) )
          (once (on ?o3 ?o3) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= 15 (* (external-forall-maximize 5 ) (+ (count ballRolledOnRampToRug:beachball) (count ballRolledOnRampToRug:cube_block:block) )
        )
      )
    )
    (>= (count ballRolledOnRampToRug:pink_dodgeball:basketball) 1 )
  )
)
(:scoring
  (- 30 )
)
)

(define (game game-id-490) (:domain few-objects-room-v1)
(:setup
  (exists (?o1 - cube_block)
    (exists (?h - doggie_bed)
      (game-conserved
        (forall (?o1 - hexagonal_bin)
          (same_color ?o1 agent)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballAndBasketballInBin
      (exists (?b3 - curved_wooden_ramp ?d - cylindrical_block)
        (at-end
          (in_motion desk)
        )
      )
    )
  )
)
(:terminal
  (>= 4 (- (count dodgeballAndBasketballInBin:beachball:hexagonal_bin) (count-shortest dodgeballAndBasketballInBin:pink_dodgeball) ) )
)
(:scoring
  (count dodgeballAndBasketballInBin:rug)
)
)

(define (game game-id-491) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (not
      (forall (?o3 - triangular_ramp ?s - hexagonal_bin)
        (not
          (above agent ?s)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?d1 - game_object)
      (and
        (preference thrownBallReachesEnd
          (exists (?l3 - doggie_bed)
            (then
              (hold (not (not (and (not (adjacent_side ?l3 rug ?d1) ) (between bed ?l3 ?l3) ) ) ) )
              (once (in_motion ?l3) )
              (hold-while (adjacent ?l3 ?l3) (on ?d1 ?d1) (on ?d1 ?d1) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count thrownBallReachesEnd:hexagonal_bin) (* (- (count-unique-positions thrownBallReachesEnd:side_table) )
      5
    )
  )
)
(:scoring
  (count-once-per-objects thrownBallReachesEnd:cube_block)
)
)

(define (game game-id-492) (:domain many-objects-room-v1)
(:setup
  (forall (?b - book ?o - drawer ?g - building ?p3 - dodgeball ?t - curved_wooden_ramp)
    (exists (?t1 - beachball)
      (forall (?b - game_object ?b - (either yellow_cube_block basketball))
        (game-optional
          (< 2 1)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballThrownToBin
      (exists (?tb - dodgeball)
        (then
          (once (agent_holds ?tb) )
          (hold-for 1 (agent_holds ?tb) )
          (hold (and (agent_holds ?tb) (or (not (agent_holds east_sliding_door) ) ) ) )
        )
      )
    )
    (preference throwFromBehindChairsInBin
      (exists (?d - (either dodgeball desktop cellphone yellow_cube_block golfball))
        (then
          (once (on desk ?d) )
          (hold (adjacent ?d bed) )
          (hold (object_orientation bed desk) )
        )
      )
    )
  )
)
(:terminal
  (>= (count throwFromBehindChairsInBin:pink_dodgeball) (count throwFromBehindChairsInBin:red) )
)
(:scoring
  (- (* (- (* 100 (* (* 4 (count throwFromBehindChairsInBin:dodgeball:golfball) 25 )
            (count throwFromBehindChairsInBin:pink_dodgeball:dodgeball:alarm_clock)
          )
        )
      )
      3
    )
  )
)
)

(define (game game-id-493) (:domain medium-objects-room-v1)
(:setup
  (forall (?h ?b2 ?c2 ?o2 - golfball)
    (game-conserved
      (not
        (and
          (= (distance ?o2 ?h) 1 0)
          (in ?h rug)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballThrownToBinFromDesk
      (exists (?b - block)
        (then
          (once (agent_holds ?b) )
          (hold (not (and (in_motion ?b) (in_motion ?b) ) ) )
          (once (not (not (not (not (< (distance ?b agent) (distance ?b agent)) ) ) ) ) )
          (hold (and (and (not (in_motion ?b) ) (not (in_motion ?b) ) (and (and (broken ?b) (in_motion ?b) ) (exists (?h - pillow) (agent_holds floor) ) ) ) (in_motion bridge_block) (and (and (not (forall (?h - (either yellow_cube_block dodgeball) ?h - (either golfball ball)) (not (agent_holds ?h) ) ) ) (and (object_orientation ?b room_center) (agent_holds ?b) ) (toggled_on ?b) ) (in_motion ?b) ) ) )
          (hold-while (agent_holds ?b) (in ?b ?b) )
        )
      )
    )
    (forall (?h - hexagonal_bin ?b - hexagonal_bin ?x ?ob ?b3 - hexagonal_bin)
      (and
        (preference ballDroppedInBin
          (exists (?d ?l2 ?o3 ?o2 ?w ?w1 - triangular_ramp)
            (then
              (once (and (in_motion bed) (and (not (on ?b3 ?w) ) (in ?o3 ?w) (= 2 6) (rug_color_under desk ?x) ) ) )
              (once (not (not (in_motion agent) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* (count ballDroppedInBin:hexagonal_bin) (count-once dodgeballThrownToBinFromDesk:pink:dodgeball) )
      (total-score)
    )
    (>= (+ (* (* (count-once ballDroppedInBin:doggie_bed) 6 )
          (count-once dodgeballThrownToBinFromDesk:alarm_clock:orange)
        )
        (* (+ (total-score) (+ (+ (* 1 (count-once-per-objects ballDroppedInBin:dodgeball) )
                (* (count ballDroppedInBin:purple) (+ (* (count-once-per-objects dodgeballThrownToBinFromDesk:hexagonal_bin:pink) 3 (+ (count-once-per-objects ballDroppedInBin:pink) 3 )
                      (count ballDroppedInBin:golfball)
                    )
                    2
                  )
                )
                5
              )
              (count dodgeballThrownToBinFromDesk:basketball)
            )
          )
          10
        )
      )
      3
    )
  )
)
(:scoring
  3
)
)

(define (game game-id-494) (:domain many-objects-room-v1)
(:setup
  (exists (?t1 - dodgeball ?o2 - (either alarm_clock teddy_bear))
    (and
      (forall (?p - block)
        (forall (?o3 - bridge_block ?d - hexagonal_bin)
          (game-conserved
            (and
              (in_motion ?d)
              (not
                (game_start )
              )
              (opposite room_center ?d)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?l3 - block ?d - (either key_chain))
      (and
        (preference dodgeballsInPlace
          (exists (?b - dodgeball)
            (then
              (hold (between ?b ?b ?d) )
              (once (in_motion ?b) )
              (once (and (not (forall (?o4 - game_object) (not (not (agent_holds ?o4) ) ) ) ) (not (and (and (not (on ?d ?b) ) (and (on ?d ?b) (in_motion agent) ) ) (not (not (agent_holds room_center) ) ) ) ) ) )
            )
          )
        )
      )
    )
    (forall (?d - hexagonal_bin ?b - tall_cylindrical_block ?b2 ?t - dodgeball ?c - (either ball hexagonal_bin beachball cube_block cube_block) ?h - doggie_bed)
      (and
        (preference ballOnBedAtEnd
          (exists (?h ?b3 - cube_block ?o - cylindrical_block)
            (then
              (hold-for 4 (not (same_color room_center green_golfball) ) )
              (once (and (in_motion ?h) (in ?h ?o) ) )
              (once (and (in_motion ?o) (adjacent ?h ?o) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (+ 6 1 (total-time) )
    (count ballOnBedAtEnd:cube_block:yellow)
  )
)
(:scoring
  3
)
)

(define (game game-id-495) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (in_motion agent)
    )
  )
)
(:constraints
  (and
    (forall (?c - hexagonal_bin ?o3 - dodgeball ?h - curved_wooden_ramp)
      (and
        (preference ballToBinFromBed
          (exists (?h ?b ?db - building ?r1 - hexagonal_bin ?l - hexagonal_bin)
            (then
              (forall-sequence (?b7 - chair)
                (then
                  (hold-while (in_motion ?h) (or (not (not (in_motion ?l) ) ) (on ?h ?l) ) (not (toggled_on agent) ) )
                  (hold-while (and (and (not (and (not (and (in_motion room_center) (adjacent bed rug) ) ) (in_motion ?b7) (and (agent_holds brown) (not (or (in_motion ?l) (on ?l ?l) ) ) ) (touch ?h ?h) ) ) (and (not (<= 7 (distance ?b7 ?b7)) ) (and (and (and (agent_holds ?l) (and (in_motion bed) (toggled_on ?h) ) (agent_holds ?h) ) (agent_holds ?h) ) (not (and (and (not (agent_holds ?h) ) (agent_holds ?b7) ) (> (distance_side ?l ?b7 ?h ?l) 0) (not (not (and (adjacent agent ?l) (between ?l back desk) ) ) ) (not (and (and (and (in ?b7 ?h) (in_motion ?l) (in_motion ?l) ) (>= (distance ?l ?b7) 1) (not (agent_holds ?h) ) ) ) ) (in_motion ?h) (not (adjacent_side ?h ?h desk) ) (in ?b7 ?l) ) ) ) ) ) (agent_holds ?l) (not (not (not (and (not (agent_holds ?l) ) (in_motion ?b7) ) ) ) ) ) (touch ?b7 ?h) )
                  (hold (and (not (in_motion ?l) ) (game_over ) ) )
                )
              )
              (hold (<= (building_size ?h) (distance rug ?h)) )
              (once (and (in_motion ?l) (exists (?w1 - hexagonal_bin) (above ?w1 ?h) ) ) )
            )
          )
        )
        (preference ballThrownFromDoor
          (exists (?d - golfball)
            (then
              (hold-while (and (in ?h ?h) (and (not (adjacent ?d agent) ) ) ) (on desk ?h) (not (in ?d ?h) ) (or (not (agent_holds ?d) ) (on bed ?d) ) )
              (once (in rug desk) )
              (once (in_motion ?h) )
            )
          )
        )
      )
    )
    (preference throwObjectToBin
      (exists (?b - (either laptop dodgeball pyramid_block) ?t - drawer)
        (then
          (once (on ?t ?t) )
          (once (in_motion ?t) )
          (once (agent_holds ?t) )
        )
      )
    )
  )
)
(:terminal
  (= (= (count ballThrownFromDoor:top_drawer) 4 (* 10 (and (+ (count throwObjectToBin:basketball) (count-once-per-objects throwObjectToBin:dodgeball:dodgeball) (* (count-once-per-objects ballThrownFromDoor:tall_cylindrical_block) (* (* (count ballThrownFromDoor:dodgeball) 15 )
                (* 40 3 )
                5
                (count ballToBinFromBed:pink:pink_dodgeball)
              )
            )
            10
            (+ 3 (count ballThrownFromDoor:basketball) )
            (* (or (and 3 (* (< (count throwObjectToBin:dodgeball) (count ballThrownFromDoor:blue_dodgeball:pink) )
                    (* (+ 10 (count-once-per-objects ballThrownFromDoor:green) )
                      (* 5 )
                    )
                  )
                  4
                )
                (count ballThrownFromDoor:pink:dodgeball)
                (+ 5 30 )
              )
              (external-forall-maximize
                (* (* 10 (+ (external-forall-maximize (* (* 5 (count-once-per-objects throwObjectToBin:side_table) )
                        )
                      )
                      (count-once throwObjectToBin:pink)
                    )
                  )
                )
              )
            )
          )
          (* (* (count-once-per-objects ballToBinFromBed:pink_dodgeball) 10 (- 3 (count throwObjectToBin:pink:yellow) ) (count throwObjectToBin:hexagonal_bin) (count-once-per-external-objects ballThrownFromDoor:pyramid_block) )
            4
            (count ballToBinFromBed:pink:beachball)
          )
        )
      )
    )
    7
  )
)
(:scoring
  (external-forall-maximize
    (or
      (count-once-per-objects ballToBinFromBed:yellow_pyramid_block)
      (count-once-per-objects ballToBinFromBed:dodgeball)
      (count throwObjectToBin:basketball:beachball)
    )
  )
)
)

(define (game game-id-496) (:domain few-objects-room-v1)
(:setup
  (exists (?c4 - hexagonal_bin ?b6 - blue_cube_block)
    (game-optional
      (and
        (and
          (game_over )
          (and
            (in ?b6 ?b6)
            (in_motion ?b6)
          )
        )
        (not
          (not
            (not
              (in ?b6 ?b6)
            )
          )
        )
        (agent_holds ?b6)
      )
    )
  )
)
(:constraints
  (and
    (forall (?l3 - hexagonal_bin)
      (and
        (preference pillowThrownToDoggieBed
          (exists (?h - building ?o3 - yellow_pyramid_block)
            (at-end
              (agent_holds ?o3)
            )
          )
        )
        (preference throwAttempt
          (exists (?p2 - cube_block)
            (then
              (once (agent_holds ?l3) )
              (hold-while (object_orientation ?l3 ?l3) (same_object ?p2 ?p2) (agent_holds ?l3) )
              (once-measure (in_motion ?p2) (x_position ?p2) )
            )
          )
        )
        (preference throwGolfballToBin
          (exists (?b5 - teddy_bear ?d - hexagonal_bin)
            (then
              (once (and (on ?d ?d) (on ?d ?d) ) )
              (hold (in_motion ?d) )
              (hold (not (in_motion ?d) ) )
            )
          )
        )
        (preference watchOnShelf
          (exists (?b ?b6 - doggie_bed)
            (then
              (hold (and (not (exists (?g - ball) (not (not (not (agent_holds pink_dodgeball) ) ) ) ) ) (equal_z_position ?l3 ?l3) ) )
              (once (adjacent_side ?b ?b6 ?b) )
              (once (and (in_motion ?l3) (exists (?c - dodgeball) (>= 1 (distance ?c brown)) ) ) )
            )
          )
        )
      )
    )
    (forall (?t - blue_pyramid_block)
      (and
        (preference bookOnDeskShelf
          (exists (?o - chair)
            (then
              (once (agent_holds ?t) )
              (once (and (and (agent_holds ?o) (not (agent_holds ?o) ) ) (and (same_color ?t ?o) (agent_holds ?t) (in ?o ?t) (not (object_orientation ?o ?t) ) ) (object_orientation ?o ?o) (in_motion ?o) (not (and (and (not (adjacent ?t ?o) ) (broken desk) ) (< (distance agent ?t) (distance pink ?o)) ) ) (not (< (distance_side ?o ?t desk) 8) ) ) )
              (once (agent_holds agent) )
            )
          )
        )
        (preference rollBallToBin
          (exists (?b - triangular_ramp)
            (then
              (once (agent_holds ?t) )
              (once (adjacent ?t ?b) )
              (hold (agent_holds rug) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* 5 (count-measure bookOnDeskShelf:pink_dodgeball) (* (+ (count-overlapping throwAttempt:golfball) (count watchOnShelf:basketball:beachball) (count-once-per-objects watchOnShelf:basketball) )
          (+ (count-overlapping pillowThrownToDoggieBed:cylindrical_block) (count bookOnDeskShelf:book) )
        )
        (count bookOnDeskShelf:red)
        (count rollBallToBin:beachball)
        (count bookOnDeskShelf:pink_dodgeball)
      )
      (count throwAttempt:yellow:blue_dodgeball)
    )
    (>= (* (count throwAttempt:yellow) (count-once pillowThrownToDoggieBed:purple) )
      (count watchOnShelf:green:basketball)
    )
  )
)
(:scoring
  3
)
)

(define (game game-id-497) (:domain few-objects-room-v1)
(:setup
  (forall (?d - building ?h - dodgeball)
    (game-optional
      (< (distance ?h ?h) (distance ?h ?h))
    )
  )
)
(:constraints
  (and
    (forall (?bl - chair ?d - doggie_bed)
      (and
        (preference objectWithMatchingColor
          (exists (?b - chair ?p2 - dodgeball)
            (then
              (once (agent_holds ?p2) )
              (hold (and (and (in_motion ?d) (>= 1 (distance ?p2 ?d)) ) (and (and (is_setup_object room_center) (and (and (object_orientation ?d ?p2) (on ?p2 ?d) (and (not (adjacent ?d ?d) ) (in_motion ?p2) (not (not (rug_color_under room_center ?p2) ) ) ) (in ?p2 ?d) (in_motion ?p2) (in_motion ?p2) (adjacent ?p2 ?p2) (agent_holds ?p2) (forall (?p - chair ?s - (either pillow bridge_block blue_cube_block)) (not (and (and (adjacent ?d ?s) (agent_holds ?p2) ) ) ) ) (not (exists (?h - game_object) (agent_holds ?p2) ) ) (touch ?p2 rug) (in_motion ?p2) ) (agent_holds ?d) ) ) (on ?p2 green) ) ) )
              (once (in_motion ?d) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 20 (+ (* (count-once-per-objects objectWithMatchingColor:dodgeball) (* (count objectWithMatchingColor:cylindrical_block) (count-once-per-objects objectWithMatchingColor:triangle_block) )
      )
      50
    )
  )
)
(:scoring
  (count objectWithMatchingColor:beachball)
)
)

(define (game game-id-498) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (in_motion ?h)
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballHitsBin
      (exists (?b - hexagonal_bin)
        (then
          (once (exists (?b - wall) (or (not (not (and (in_motion agent) (on ?b agent) (and (and (agent_holds agent) (on ?b ?b) ) (and (and (agent_holds ?b) (not (touch ?b ?b) ) ) (in_motion ?b) ) ) ) ) ) (and (agent_holds bed) (object_orientation ?b rug) ) ) ) )
          (hold (in_motion ?b) )
          (hold (< (distance ?b ?b) 9) )
        )
      )
    )
    (preference ballKnocksBlockFromRug
      (exists (?h - cube_block)
        (then
          (once (and (open ?h) (and (in_motion ?h) (in ?h ?h) ) (and (on agent ?h) (in_motion ?h) (and (or (not (agent_holds ?h) ) (adjacent ?h ?h) ) (agent_holds ?h) ) (and (and (on ?h ?h) (above ?h ?h) ) (not (forall (?g ?c - ball) (broken ?c) ) ) ) (or (<= (distance ?h ?h) 1) (in_motion ?h) ) (not (not (exists (?c6 - cylindrical_block) (and (in_motion ?c6) (agent_holds ?h) ) ) ) ) (and (not (not (object_orientation ?h room_center) ) ) (and (in_motion ?h) (in desk ?h) (on ?h ?h) ) ) (and (in_motion rug) (and (above ?h ?h) (equal_z_position door ?h) ) ) (agent_holds agent) (exists (?p - hexagonal_bin) (in block ?h) ) ) ) )
          (once (and (not (in_motion ?h) ) ) )
          (once (exists (?d1 - dodgeball ?h - (either mug watch)) (in_motion ?h) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count ballKnocksBlockFromRug:hexagonal_bin) (* 7 (count-once-per-objects dodgeballHitsBin:hexagonal_bin:hexagonal_bin) )
  )
)
(:scoring
  (* 3 (count-once-per-objects dodgeballHitsBin:pink) 3 )
)
)

(define (game game-id-499) (:domain medium-objects-room-v1)
(:setup
  (exists (?c5 - ball)
    (game-conserved
      (adjacent_side ?c5 ?c5 ?c5)
    )
  )
)
(:constraints
  (and
    (forall (?h - game_object ?h - cube_block)
      (and
        (preference objectThrownFromRug
          (exists (?c2 - hexagonal_bin)
            (then
              (once (equal_z_position ?h block) )
              (once (agent_holds ?h) )
              (once (not (in_motion ?c2) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< (count-once-per-objects objectThrownFromRug:golfball) (external-forall-maximize 1 ) )
)
(:scoring
  15
)
)

(define (game game-id-500) (:domain few-objects-room-v1)
(:setup
  (forall (?t - curved_wooden_ramp ?b - shelf)
    (and
      (and
        (and
          (and
            (and
              (exists (?b2 ?t2 - (either cellphone yellow main_light_switch alarm_clock laptop cube_block laptop))
                (and
                  (forall (?d ?b - bridge_block ?d - curved_wooden_ramp ?b - ball)
                    (game-conserved
                      (in_motion ?t2)
                    )
                  )
                )
              )
            )
            (and
              (game-conserved
                (agent_holds desk)
              )
            )
          )
          (and
            (exists (?bl - dodgeball)
              (forall (?b4 - (either book lamp game_object cube_block))
                (and
                  (exists (?b3 - building)
                    (not
                      (and
                        (game-conserved
                          (agent_holds brown)
                        )
                      )
                    )
                  )
                  (not
                    (exists (?f - hexagonal_bin ?b7 - hexagonal_bin ?d - game_object)
                      (exists (?h - doggie_bed)
                        (game-conserved
                          (and
                            (not
                              (same_color ?d bed)
                            )
                            (in_motion desk)
                            (and
                              (adjacent ?bl ?b)
                              (< (distance ?b4 room_center) (distance room_center ?h))
                              (and
                                (< (distance ?b4 desk) (distance ?b ?b))
                                (agent_holds ?b4)
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                  (and
                    (exists (?o - dodgeball)
                      (forall (?b2 - hexagonal_bin)
                        (and
                          (game-conserved
                            (or
                              (not
                                (adjacent agent desk)
                              )
                              (in ?b ?bl)
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
            (forall (?b8 - hexagonal_bin)
              (game-conserved
                (in_motion agent)
              )
            )
            (exists (?r1 - (either pyramid_block lamp))
              (game-conserved
                (not
                  (exists (?l1 - golfball)
                    (adjacent ?b ?r1)
                  )
                )
              )
            )
          )
        )
        (game-conserved
          (agent_holds ?b)
        )
        (game-optional
          (agent_holds ?b)
        )
      )
      (game-conserved
        (not
          (and
            (agent_holds ?b)
            (and
              (and
                (in_motion ?b)
                (and
                  (agent_holds desk)
                  (agent_holds desk)
                  (not
                    (in left ?b)
                  )
                  (not
                    (not
                      (and
                        (on agent ?b)
                        (agent_holds agent)
                      )
                    )
                  )
                )
              )
              (on ?b ?b)
            )
          )
        )
      )
      (forall (?s - pillow ?l - red_pyramid_block ?b5 ?b7 ?c5 - watch)
        (exists (?h - ball)
          (forall (?r - dodgeball)
            (game-optional
              (not
                (and
                  (not
                    (and
                      (agent_holds ?r)
                      (and
                        (in ?b ?b7)
                        (= (distance ?c5 ?r) (distance ?b5 ?h))
                      )
                    )
                  )
                  (in agent ?b)
                  (not
                    (and
                      (not
                        (touch agent ?r)
                      )
                      (adjacent ?b7 ?h)
                      (and
                        (and
                          (not
                            (not
                              (and
                                (on ?b7 ?b7)
                                (in ?b room_center)
                              )
                            )
                          )
                          (touch ?b ?b)
                        )
                        (not
                          (on ?r bed)
                        )
                      )
                    )
                  )
                  (agent_holds ?h)
                )
              )
            )
          )
        )
      )
      (exists (?b5 - hexagonal_bin ?t2 - (either block book basketball key_chain yellow_cube_block dodgeball triangle_block))
        (exists (?b - cube_block)
          (game-conserved
            (<= 1 9)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectLandsInBin
      (exists (?c6 - hexagonal_bin ?c - ball)
        (at-end
          (adjacent_side ?c room_center ?c desk)
        )
      )
    )
    (preference throwBallFromOtherBallToBin
      (exists (?r - (either main_light_switch tall_cylindrical_block basketball))
        (then
          (once (agent_holds upright) )
          (hold (not (same_object ?r agent) ) )
          (hold-while (adjacent ?r ?r) (agent_holds ?r) (game_over ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (+ 1 (count throwBallFromOtherBallToBin:basketball) (* 30 20 )
      )
      (* (* (+ 5 4 )
          (count-shortest objectLandsInBin:beachball)
        )
        (count-once throwBallFromOtherBallToBin:red)
      )
    )
    (or
      (>= (* 10 (or 3 (count-once-per-objects objectLandsInBin:beachball) (count objectLandsInBin:hexagonal_bin:yellow_cube_block) ) )
        2
      )
      (>= (* (- (* 300 (+ (- (count throwBallFromOtherBallToBin:doggie_bed) )
                (count objectLandsInBin:tall_cylindrical_block:pink)
                10
              )
            )
          )
          (+ (external-forall-maximize (* (count-once-per-objects objectLandsInBin:dodgeball) (* 30 (external-forall-maximize 9 ) )
              )
            )
            (count throwBallFromOtherBallToBin:pink)
          )
        )
        (count-once-per-objects objectLandsInBin:orange:beachball)
      )
    )
  )
)
(:scoring
  (count-once objectLandsInBin:basketball)
)
)

(define (game game-id-501) (:domain few-objects-room-v1)
(:setup
  (forall (?h - shelf)
    (and
      (exists (?p - dodgeball)
        (exists (?o - hexagonal_bin)
          (and
            (and
              (forall (?h - cube_block)
                (forall (?p - game_object)
                  (game-conserved
                    (not
                      (agent_holds ?o)
                    )
                  )
                )
              )
            )
          )
        )
      )
      (exists (?b8 - teddy_bear)
        (game-optional
          (agent_holds ?b8)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?o - building ?b4 - (either pen golfball) ?b9 - chair)
        (then
          (hold (in ?b9 ?b9) )
          (hold (not (agent_holds ?b9) ) )
          (hold (and (in_motion ?b9) (and (object_orientation ?b9 ?b9) (on desk agent) ) ) )
        )
      )
    )
    (forall (?t - chair ?l - drawer)
      (and
        (preference throwBallFromOtherBallToBin
          (exists (?h - (either alarm_clock pink ball))
            (then
              (once (same_color ?h ?l) )
              (hold (not (in_motion ?l) ) )
              (once (and (exists (?b - hexagonal_bin ?h ?b10 ?p ?d ?c ?r - ball ?c - ball) (and (not (or (not (in_motion desk) ) ) ) (and (agent_holds ?l) (agent_holds ?c) ) ) ) (agent_holds ?l) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (and (- (count throwBallToBin:beachball) )
    )
    5
  )
)
(:scoring
  (* (total-score) (count-unique-positions throwBallFromOtherBallToBin:dodgeball) )
)
)

(define (game game-id-502) (:domain few-objects-room-v1)
(:setup
  (forall (?h - cube_block)
    (game-optional
      (and
        (agent_holds ?h)
        (object_orientation ?h agent)
        (not
          (not
            (and
              (agent_holds ?h)
              (exists (?d2 - flat_block)
                (on ?h ?h)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockKnockedFromBuildingInBin
      (exists (?g - bridge_block ?c2 - dodgeball)
        (then
          (once (in ?c2 ?c2) )
          (hold-while (not (not (object_orientation ?c2 ?c2) ) ) (object_orientation ?c2 desk) (agent_holds ?c2) )
          (hold (not (exists (?t - shelf ?o3 - cube_block) (in_motion ?o3) ) ) )
        )
      )
    )
    (preference itemInClosedDrawerAtEnd
      (exists (?o2 - hexagonal_bin)
        (then
          (once (agent_holds ?o2) )
          (once (not (in_motion tan) ) )
          (once (agent_holds ?o2) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects itemInClosedDrawerAtEnd:basketball:dodgeball) (* (- (count-once blockKnockedFromBuildingInBin:top_drawer) )
      10
      (count blockKnockedFromBuildingInBin:dodgeball)
    )
  )
)
(:scoring
  (count-once-per-objects itemInClosedDrawerAtEnd:blue_dodgeball)
)
)

(define (game game-id-503) (:domain many-objects-room-v1)
(:setup
  (forall (?c - pyramid_block ?b4 - (either dodgeball curved_wooden_ramp) ?b ?o ?d - sliding_door)
    (game-conserved
      (and
        (not
          (not
            (in_motion ?o)
          )
        )
        (not
          (adjacent desk desk)
        )
        (and
          (exists (?b2 - ball)
            (in_motion ?b)
          )
          (<= 1 (distance rug ?o))
        )
        (agent_holds ?d)
      )
    )
  )
)
(:constraints
  (and
    (preference otherObjectsOnDeskShelf
      (exists (?p3 - hexagonal_bin)
        (then
          (once (not (on ?p3 ?p3) ) )
          (once (in_motion agent) )
          (once (and (and (and (and (on ?p3 ?p3) (and (= 8 (distance rug ?p3)) (is_setup_object ?p3) (in_motion ?p3) (not (equal_z_position ?p3 floor) ) ) ) (not (is_setup_object ?p3) ) ) (agent_holds ?p3) ) ) )
        )
      )
    )
    (preference ballKnocksBlockFromRug
      (exists (?o2 - ball ?b2 - dodgeball)
        (then
          (once (not (not (not (agent_holds ?b2) ) ) ) )
          (once (exists (?d - (either triangle_block lamp)) (and (not (not (and (in_motion floor) (agent_holds ?b2) ) ) ) (equal_x_position ?b2 ?d) ) ) )
          (once (not (is_setup_object ?b2) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects otherObjectsOnDeskShelf:dodgeball) 3 )
)
(:scoring
  10
)
)

(define (game game-id-504) (:domain many-objects-room-v1)
(:setup
  (exists (?b3 - dodgeball)
    (or
      (forall (?t - (either cylindrical_block alarm_clock yellow_cube_block))
        (and
          (exists (?t - pillow)
            (forall (?b ?p - pillow ?r - (either hexagonal_bin yellow_cube_block))
              (and
                (and
                  (game-conserved
                    (adjacent agent ?b3)
                  )
                )
                (game-conserved
                  (adjacent agent ?b3)
                )
                (exists (?c4 - hexagonal_bin)
                  (exists (?h ?d1 - (either cube_block basketball cd beachball))
                    (game-conserved
                      (not
                        (agent_holds ?d1)
                      )
                    )
                  )
                )
              )
            )
          )
          (game-conserved
            (> (distance ?b3 ?t) (distance ?t ?t))
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballThrownToBinFromDesk
      (exists (?o - hexagonal_bin)
        (at-end
          (adjacent_side ?o ?o ?o)
        )
      )
    )
    (preference throwToBinFromDistance
      (exists (?h - hexagonal_bin ?d - hexagonal_bin ?g - wall)
        (then
          (once (in ?g ?g) )
          (once (is_setup_object agent) )
          (once (faces ?g ?g) )
        )
      )
    )
  )
)
(:terminal
  (or
    (and
      (>= (count throwToBinFromDistance:yellow) (+ (* 5 (count-once dodgeballThrownToBinFromDesk:beachball) )
          (+ (external-forall-minimize (count dodgeballThrownToBinFromDesk:dodgeball) ) (+ (* (count throwToBinFromDistance:dodgeball) (count-once-per-objects dodgeballThrownToBinFromDesk:basketball) )
              -10
            )
          )
        )
      )
    )
    (<= (count throwToBinFromDistance) (count-once-per-objects throwToBinFromDistance:golfball:dodgeball:block) )
  )
)
(:scoring
  (+ 10 4 )
)
)

(define (game game-id-505) (:domain medium-objects-room-v1)
(:setup
  (exists (?h - dodgeball)
    (and
      (forall (?h - teddy_bear ?ob - shelf)
        (and
          (forall (?b - ball ?s - hexagonal_bin)
            (not
              (game-optional
                (not
                  (not
                    (not
                      (not
                        (agent_holds ?h)
                      )
                    )
                  )
                )
              )
            )
          )
          (game-optional
            (touch ?ob ?ob)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwGolfballToBin
      (exists (?w1 - green_triangular_ramp)
        (then
          (once (and (agent_holds floor) (in_motion ?w1) ) )
          (once (and (not (in_motion ?w1) ) (exists (?t - triangular_ramp) (not (= 3 (distance ?t ?w1)) ) ) ) )
        )
      )
    )
    (forall (?h - block ?d - triangular_ramp)
      (and
        (preference objectLandsInBin
          (exists (?r - hexagonal_bin)
            (then
              (hold (and (and (in_motion ?d) (in ?r ?r) ) (not (< 1 1) ) ) )
              (once (same_color ?d ?d) )
              (once (and (touch ?d ?r) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (- 3 )
    (count-once-per-external-objects throwGolfballToBin:golfball)
  )
)
(:scoring
  10
)
)

(define (game game-id-506) (:domain medium-objects-room-v1)
(:setup
  (exists (?o - game_object)
    (game-conserved
      (agent_holds ?o)
    )
  )
)
(:constraints
  (and
    (preference objectLandsInBin
      (exists (?d - block)
        (at-end
          (not
            (not
              (same_type front ?d)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= (* (count objectLandsInBin:basketball:dodgeball) 2 (count-overlapping objectLandsInBin:beachball) )
    (+ 3 (+ (count objectLandsInBin:red) 15 )
    )
  )
)
(:scoring
  (* (count objectLandsInBin:beachball:basketball) (count-once objectLandsInBin:beachball:purple) )
)
)

(define (game game-id-507) (:domain many-objects-room-v1)
(:setup
  (forall (?o - cylindrical_block)
    (and
      (game-conserved
        (not
          (adjacent_side green ?o ?o ?o)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToChair
      (exists (?c - ball)
        (then
          (once (not (not (not (not (same_object ?c ?c) ) ) ) ) )
          (hold (agent_holds back) )
          (forall-sequence (?b6 - game_object ?o3 - cube_block ?w - building)
            (then
              (hold (not (not (and (not (agent_holds pink_dodgeball) ) (on ?w ?c) ) ) ) )
              (hold-while (faces ?w ?w) (adjacent ?c ?c) )
              (once (in ?c room_center) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (count ballThrownToChair:dodgeball) (* 18 10 )
    )
  )
)
(:scoring
  (count-increasing-measure ballThrownToChair:basketball)
)
)

(define (game game-id-508) (:domain medium-objects-room-v1)
(:setup
  (forall (?b5 - dodgeball ?h - dodgeball)
    (forall (?d1 - dodgeball)
      (forall (?b7 - wall ?d - hexagonal_bin)
        (game-optional
          (in_motion ?d1)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o - dodgeball ?h - (either red flat_block doggie_bed dodgeball cylindrical_block))
      (and
        (preference throwBallFromOtherBallToBin
          (exists (?b9 - ball)
            (then
              (once (object_orientation ?h ?b9) )
              (once (agent_holds rug) )
              (once (not (in_motion ?h) ) )
            )
          )
        )
        (preference beachballOnRug
          (exists (?db - dodgeball)
            (then
              (once (agent_holds agent) )
              (hold (agent_holds ?h) )
              (hold-while (< (distance ?db ?h) 1) (agent_holds ?db) (and (not (adjacent_side ?db ?db ?db) ) (and (on ?h ?db) (and (and (exists (?b - wall ?r2 - color) (same_object ?db ?db) ) (in_motion agent) (not (and (not (adjacent ?db ?h) ) (in_motion front) ) ) ) (and (and (on ?h ?h) (not (in ?db ?db) ) ) (on ?db bed) ) ) (agent_holds ?db) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (* 1 (* (count-once-per-objects throwBallFromOtherBallToBin:yellow_cube_block) )
      )
      10
    )
  )
)
(:scoring
  (* (count throwBallFromOtherBallToBin:orange) (count throwBallFromOtherBallToBin:pink_dodgeball) )
)
)

(define (game game-id-509) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (exists (?c2 - cube_block)
        (game-optional
          (in_motion ?c2)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwFromBehindChairsInBin
      (exists (?c3 - pillow ?c ?l2 - cube_block)
        (at-end
          (and
            (adjacent agent ?c)
          )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (or (count-once-per-objects throwFromBehindChairsInBin:yellow:orange) (count throwFromBehindChairsInBin:blue_dodgeball:cube_block) (- (count throwFromBehindChairsInBin:beachball) )
    )
  )
)
(:scoring
  (count-once throwFromBehindChairsInBin:block:yellow_cube_block:golfball)
)
)

(define (game game-id-510) (:domain few-objects-room-v1)
(:setup
  (forall (?o ?r1 - cube_block ?o - hexagonal_bin)
    (exists (?b1 - curved_wooden_ramp)
      (exists (?b9 - (either flat_block pillow laptop))
        (exists (?c - dodgeball)
          (game-conserved
            (and
              (on bed ?c)
              (< (distance ?o rug) 2)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballThrownToBinFromDesk
      (exists (?o1 - dodgeball ?d - hexagonal_bin)
        (at-end
          (not
            (on ?d ?d)
          )
        )
      )
    )
    (preference ballThrownThroughRampAndBlocksToBin
      (exists (?h - hexagonal_bin)
        (then
          (hold (adjacent ?h ?h) )
          (once (in_motion ?h) )
          (once (is_setup_object ?h) )
        )
      )
    )
  )
)
(:terminal
  (>= 7 2 )
)
(:scoring
  (* (* (count ballThrownThroughRampAndBlocksToBin:hexagonal_bin) (+ 3 180 )
    )
    1
  )
)
)

(define (game game-id-511) (:domain many-objects-room-v1)
(:setup
  (exists (?c - (either pink triangle_block basketball))
    (not
      (exists (?w1 - (either cd desktop))
        (forall (?r1 - ball)
          (and
            (forall (?r2 - curved_wooden_ramp)
              (forall (?o5 - chair ?b ?d - ball)
                (exists (?d - building ?l3 - dodgeball ?p - golfball)
                  (and
                    (exists (?w1 - dodgeball)
                      (game-conserved
                        (adjacent_side ?r1 ?w1 door)
                      )
                    )
                    (game-optional
                      (and
                        (touch ?r1 bed)
                        (not
                          (and
                            (on ?w1 ?c)
                            (not
                              (adjacent upright top_shelf)
                            )
                            (faces sideways ?p)
                            (in ?w1 ?r2)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - triangular_ramp)
      (and
        (preference ballThrownFromDoor
          (exists (?h - dodgeball)
            (then
              (hold (on agent ?b) )
              (once (in_motion ?h) )
              (hold (in_motion ?h) )
            )
          )
        )
      )
    )
    (preference throwFromBehindChairsInBin
      (exists (?d - cube_block)
        (then
          (once (and (not (and (agent_holds ?d) (agent_holds ?d) ) ) (in_motion ?d) ) )
          (hold (same_color ?d ?d) )
          (hold (agent_holds ?d) )
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (= 15 0 )
      (> (count ballThrownFromDoor:yellow_cube_block:red_pyramid_block) 10 )
      (>= (count ballThrownFromDoor:basketball:pink) (* 20 (+ 10 (total-time) )
        )
      )
    )
  )
)
(:scoring
  2
)
)

(define (game game-id-512) (:domain few-objects-room-v1)
(:setup
  (and
    (not
      (game-conserved
        (not
          (exists (?b1 - ball)
            (= (distance agent ?b1) (distance ?b1 bed))
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToBinFromOppositeWall
      (exists (?c6 - ball)
        (then
          (once (on ?c6 agent) )
          (hold (and (open ?c6) (and (and (agent_holds ?c6) (and (not (and (in_motion ?c6) (not (and (is_setup_object ?c6) (not (not (adjacent agent bed) ) ) ) ) ) ) (in_motion ?c6) ) (in_motion ?c6) ) (and (in_motion ?c6) (not (and (forall (?c3 - hexagonal_bin) (adjacent ?c3 side_table) ) (not (and (not (and (and (is_setup_object ?c6) (and (agent_holds agent) (agent_holds agent) (and (touch ?c6 pink) (exists (?l1 - hexagonal_bin) (is_setup_object ?l1) ) ) ) ) (in_motion ?c6) ) ) (same_color ?c6 ?c6) ) ) ) ) (and (not (< (distance_side ?c6 ?c6 ?c6) (distance upright ?c6)) ) (agent_holds pink) ) (in_motion ?c6) ) ) ) )
          (once (and (in_motion agent) (not (in_motion ?c6) ) ) )
          (once (in ?c6 ?c6) )
        )
      )
    )
  )
)
(:terminal
  (>= (external-forall-maximize (+ (count-once-per-objects throwToBinFromOppositeWall:rug) (- (+ (- (- (and (count-once-per-objects throwToBinFromOppositeWall:pyramid_block) (count throwToBinFromOppositeWall:golfball) ) )
            )
            10
          )
          3
        )
        4
        3
        8
        (* 10 (count-once-per-objects throwToBinFromOppositeWall:dodgeball) )
      )
    )
    (count throwToBinFromOppositeWall:beachball)
  )
)
(:scoring
  15
)
)

(define (game game-id-513) (:domain many-objects-room-v1)
(:setup
  (exists (?b - dodgeball)
    (exists (?o2 - hexagonal_bin)
      (exists (?h - hexagonal_bin)
        (forall (?b6 - teddy_bear)
          (forall (?ob - (either book cd dodgeball))
            (and
              (game-conserved
                (in_motion ?b6)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference golfballUnderBridgeWithoutTouchingBlock
      (exists (?d - hexagonal_bin)
        (then
          (once (on ?d ?d) )
          (hold-while (in ?d ?d) (agent_holds ?d) )
          (hold-while (touch ?d ?d) (agent_holds ?d) )
        )
      )
    )
  )
)
(:terminal
  (> 20 2 )
)
(:scoring
  1
)
)

(define (game game-id-514) (:domain few-objects-room-v1)
(:setup
  (exists (?s - building)
    (game-conserved
      (and
        (agent_holds desk)
        (not
          (< 1 (distance ?s ?s))
        )
      )
    )
  )
)
(:constraints
  (and
    (preference cubeBlockFromBedToShelf
      (exists (?p2 - golfball)
        (at-end
          (is_setup_object agent)
        )
      )
    )
    (forall (?d - hexagonal_bin)
      (and
        (preference ballThrownToRug
          (exists (?b5 - doggie_bed ?h - (either hexagonal_bin yellow_cube_block dodgeball))
            (at-end
              (exists (?g - dodgeball)
                (in_motion ?g)
              )
            )
          )
        )
        (preference throwBallFromOtherBallToBin
          (exists (?b2 - ball)
            (then
              (once (not (not (and (agent_holds ?d) (on ?d agent) (adjacent_side ?b2 ?d ?d) (in_motion ?d) (in_motion brown) (in rug ?d) (agent_holds ?b2) (in ?d ?b2) ) ) ) )
              (once (agent_holds bed) )
              (hold-while (not (agent_holds ?d) ) (and (agent_holds agent) (agent_holds ?d) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (+ (+ (external-forall-minimize 15 ) 5 3 )
      (count-once-per-objects throwBallFromOtherBallToBin:beachball)
    )
    (count cubeBlockFromBedToShelf:beachball)
  )
)
(:scoring
  4
)
)

(define (game game-id-515) (:domain many-objects-room-v1)
(:setup
  (exists (?w - dodgeball ?o - shelf ?d - hexagonal_bin)
    (and
      (exists (?c1 - hexagonal_bin ?d ?b - shelf)
        (exists (?r - (either dodgeball key_chain book))
          (forall (?b - hexagonal_bin ?r - hexagonal_bin)
            (or
              (game-optional
                (not
                  (agent_holds ?r)
                )
              )
              (game-conserved
                (in ?d ?r)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - hexagonal_bin)
      (and
        (preference dropAttempt
          (exists (?t1 - teddy_bear ?b - bridge_block)
            (at-end
              (forall (?d - hexagonal_bin ?o - dodgeball)
                (in_motion ?o)
              )
            )
          )
        )
      )
    )
    (preference ballOnBedAtEnd
      (exists (?b - cube_block)
        (then
          (once (adjacent ?b agent) )
          (hold (not (and (not (adjacent ?b bed) ) (rug_color_under floor ?b) ) ) )
          (hold (agent_holds ?b) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* (count ballOnBedAtEnd:cube_block) 8 )
      (count-once ballOnBedAtEnd:dodgeball)
    )
    (>= (count dropAttempt:book) (count-once-per-objects ballOnBedAtEnd:golfball:green) )
  )
)
(:scoring
  3
)
)

(define (game game-id-516) (:domain medium-objects-room-v1)
(:setup
  (exists (?c - game_object)
    (and
      (exists (?o - dodgeball ?b5 - (either alarm_clock pillow ball) ?o2 - watch)
        (exists (?o1 - curved_wooden_ramp)
          (game-conserved
            (in_motion bottom_shelf)
          )
        )
      )
      (forall (?c - hexagonal_bin ?t2 - block)
        (game-conserved
          (same_color ?c ?c)
        )
      )
      (or
        (exists (?s - ball)
          (game-optional
            (rug_color_under ?s ?s)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballHitsBinBottom
      (exists (?o - curved_wooden_ramp)
        (at-end
          (agent_holds ?o)
        )
      )
    )
    (forall (?b10 - hexagonal_bin ?p1 - doggie_bed)
      (and
        (preference throwToRampToBin
          (exists (?b2 - hexagonal_bin)
            (then
              (once (in ?b2 ?b2) )
              (once (in_motion ?p1) )
              (once (on ?p1 agent) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< 5 (* (* (count throwToRampToBin:yellow_cube_block) (count-once-per-external-objects dodgeballHitsBinBottom:wall) )
      (count-shortest dodgeballHitsBinBottom:dodgeball)
    )
  )
)
(:scoring
  (count dodgeballHitsBinBottom:beachball)
)
)

(define (game game-id-517) (:domain many-objects-room-v1)
(:setup
  (exists (?h - (either book cd))
    (not
      (exists (?d - hexagonal_bin)
        (forall (?c - (either dodgeball dodgeball pillow pencil cd bridge_block red))
          (forall (?b1 ?b - dodgeball)
            (forall (?d - (either flat_block doggie_bed tall_cylindrical_block))
              (game-optional
                (not
                  (agent_holds agent)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - triangular_ramp)
      (and
        (preference ballThrownToBin
          (exists (?h - doggie_bed ?d - blue_cube_block)
            (then
              (hold (in_motion ?h) )
              (once (not (agent_holds ?d) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count ballThrownToBin) (count-once ballThrownToBin:tan) )
    100
  )
)
(:scoring
  (count ballThrownToBin:rug)
)
)

(define (game game-id-518) (:domain many-objects-room-v1)
(:setup
  (forall (?b - wall ?h - triangular_ramp ?p - dodgeball)
    (exists (?s - hexagonal_bin)
      (forall (?l2 - dodgeball ?b - curved_wooden_ramp)
        (game-optional
          (and
            (< (distance ?p ?s) 1)
            (or
              (agent_holds bed)
              (object_orientation agent ?b)
            )
            (and
              (and
                (and
                  (in_motion desk)
                  (and
                    (agent_holds ?b)
                    (touch room_center ?b)
                  )
                )
                (is_setup_object ?b)
              )
              (in_motion rug)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?l - (either dodgeball pillow) ?b - golfball ?t - (either desktop golfball book))
      (and
        (preference ballThrownToBin
          (exists (?p - hexagonal_bin)
            (then
              (once (not (on ?t ?t) ) )
              (once (adjacent_side agent ?t ?p) )
              (hold (not (in_motion door) ) )
              (once (agent_holds ?p) )
            )
          )
        )
        (preference throwMissesBin
          (exists (?w - block)
            (at-end
              (agent_holds agent)
            )
          )
        )
        (preference blockKnockedFromBuildingInBin
          (exists (?b - hexagonal_bin)
            (at-end
              (agent_holds ?b)
            )
          )
        )
      )
    )
    (preference ballThrownThroughRampToBin
      (exists (?l1 - hexagonal_bin)
        (at-end
          (toggled_on ?l1)
        )
      )
    )
  )
)
(:terminal
  (>= 2 6 )
)
(:scoring
  (external-forall-maximize
    (- (* (+ 1 (* (total-score) 15 (total-time) )
        )
        (count-unique-positions ballThrownToBin:white:red)
        (count-once ballThrownToBin:pink:yellow_cube_block:pink_dodgeball)
        (count throwMissesBin:pink_dodgeball)
        5
        (count blockKnockedFromBuildingInBin:dodgeball)
      )
    )
  )
)
)

(define (game game-id-519) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (in_motion desk)
  )
)
(:constraints
  (and
    (preference teddyBearHitsBall
      (exists (?b6 - (either pencil tall_cylindrical_block pillow))
        (then
          (once (agent_holds ?b6) )
          (hold (on ?b6 floor) )
          (once (and (and (agent_holds ?b6) (not (on ?b6 rug) ) ) (on desk ?b6) (rug_color_under ?b6 ?b6) ) )
          (once (in_motion ?b6) )
        )
      )
    )
    (preference pinkObjectMovedToRoomCenter
      (exists (?b - hexagonal_bin)
        (then
          (once (on ?b ?b) )
          (hold (on ?b ?b) )
          (once (adjacent_side ?b ?b ?b pink) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-unique-positions teddyBearHitsBall:basketball) (- (count pinkObjectMovedToRoomCenter:red:hexagonal_bin) )
  )
)
(:scoring
  10
)
)

(define (game game-id-520) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (< 2 2)
  )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference blockCorrectlyPicked
          (exists (?p3 ?w1 - (either yellow_cube_block yellow_cube_block))
            (at-end
              (and
                (and
                  (and
                    (agent_holds ?w1)
                    (agent_holds desk)
                    (in_motion floor)
                  )
                  (on ?p3 pillow)
                )
                (in_motion ?p3)
                (touch ?p3 ?w1)
              )
            )
          )
        )
        (preference throwBallToDoggieBed
          (exists (?s - chair ?h ?h - desktop)
            (then
              (hold (on ?b door) )
              (once (in ?b ?h) )
              (once (= 1 (distance_side agent east_sliding_door ?b)) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (* 5 (+ (count-once-per-objects blockCorrectlyPicked:green:dodgeball) (count-once-per-objects throwBallToDoggieBed:golfball:green:red) )
      )
      50
    )
    (>= 5 (+ (+ (count-once-per-objects throwBallToDoggieBed:beachball) (count-overlapping throwBallToDoggieBed:red:dodgeball) (count blockCorrectlyPicked:wall) (count-once throwBallToDoggieBed:triangle_block) (total-score) 10 (count-once throwBallToDoggieBed:hexagonal_bin) 10 (external-forall-maximize 3 ) )
        (* 6 (+ (* (* (count throwBallToDoggieBed:dodgeball) (count-once-per-objects throwBallToDoggieBed:green) (count-once-per-objects throwBallToDoggieBed:pink_dodgeball:side_table) )
              (count blockCorrectlyPicked:doggie_bed:dodgeball)
              (count blockCorrectlyPicked:red:golfball)
            )
            2
          )
          2
          (count throwBallToDoggieBed:dodgeball)
          (/
            (* (count blockCorrectlyPicked:hexagonal_bin:basketball) (count blockCorrectlyPicked) (* (* 2 (count-once-per-objects throwBallToDoggieBed:golfball) )
                (count throwBallToDoggieBed:basketball)
              )
              4
              (count-increasing-measure blockCorrectlyPicked:pink:beachball:orange)
              (* (count throwBallToDoggieBed:dodgeball) (count blockCorrectlyPicked:blue_dodgeball:purple) 180 )
            )
            (count blockCorrectlyPicked:red)
          )
          30
          6
          3
          (+ (+ (- (* (count-once-per-objects throwBallToDoggieBed:basketball) (count throwBallToDoggieBed:basketball) )
              )
              (count-once-per-objects blockCorrectlyPicked:basketball)
              (count throwBallToDoggieBed:beachball)
              (count-once throwBallToDoggieBed)
              (count throwBallToDoggieBed:basketball)
              5
            )
            (or
              (+ 5 (* (* 0.7 180 )
                  3
                )
              )
              (count-total throwBallToDoggieBed:green:doggie_bed)
              (count throwBallToDoggieBed:hexagonal_bin)
            )
          )
        )
      )
    )
  )
)
(:scoring
  (external-forall-minimize
    (* (+ (+ (* 2 9 )
          (* (* (count-once-per-objects blockCorrectlyPicked:golfball) (- 1 )
            )
            (total-score)
          )
        )
        (count-once-per-objects blockCorrectlyPicked:dodgeball)
        (* (* (count-longest blockCorrectlyPicked:dodgeball) (+ 3 7 )
            (count-increasing-measure blockCorrectlyPicked:green)
            4
            (count-once-per-objects throwBallToDoggieBed:red)
            1
          )
          (count-once-per-external-objects blockCorrectlyPicked:dodgeball:dodgeball)
          (- (external-forall-maximize 2 ) )
        )
      )
      10
    )
  )
)
)

(define (game game-id-521) (:domain few-objects-room-v1)
(:setup
  (forall (?o2 - dodgeball ?s ?p1 ?ob - (either book doggie_bed basketball cellphone) ?b1 - (either cylindrical_block block basketball))
    (exists (?r - teddy_bear ?h - hexagonal_bin)
      (game-conserved
        (and
          (game_start )
          (in_motion ?h)
          (equal_z_position agent ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference cubeBlockThrowAttempt
      (exists (?o2 - dodgeball)
        (then
          (hold-while (in_motion ?o2) (< (building_size ?o2) (distance ?o2 ?o2)) )
          (hold-while (< 1 2) (<= 1 1) )
          (once (and (not (not (agent_holds ?o2) ) ) (and (and (and (and (not (not (agent_holds ?o2) ) ) (on desk ?o2) ) (and (and (not (on ?o2 ?o2) ) (on ?o2 room_center) ) (agent_holds desk) ) ) (= 9 3) (in desk ?o2) (on ?o2 ?o2) (on ?o2 ?o2) ) (not (agent_holds ?o2) ) (and (on ?o2 ?o2) (not (not (in_motion agent) ) ) ) ) (and (not (and (= (distance desk back) 0.5) (and (>= 1 (distance floor ?o2)) (open agent) ) (in_motion ?o2) (not (adjacent ?o2 ?o2) ) ) ) (in_motion ?o2) ) ) )
          (once (and (agent_holds ?o2) (< (distance ?o2 ?o2) (distance_side ?o2 ?o2 ?o2)) ) )
          (hold (game_over ) )
          (once (agent_holds ?o2) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (> (total-score) 4 )
  )
)
(:scoring
  1
)
)

(define (game game-id-522) (:domain many-objects-room-v1)
(:setup
  (forall (?c2 ?d - hexagonal_bin)
    (and
      (game-conserved
        (and
          (and
            (agent_holds bed)
            (and
              (agent_holds door)
              (or
                (in ?c2 room_center)
                (adjacent ?c2 bottom_shelf)
              )
            )
          )
          (and
            (or
              (and
                (not
                  (not
                    (on ?d ?d)
                  )
                )
                (adjacent ?d ?c2)
              )
            )
            (>= 4 (distance ?c2 ?c2))
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectOnBed
      (exists (?c2 - hexagonal_bin)
        (then
          (once (and (on ?c2 ?c2) (in_motion ?c2) ) )
          (once (on ?c2 ?c2) )
          (once (between ?c2 ?c2 ?c2) )
        )
      )
    )
  )
)
(:terminal
  (= (count objectOnBed:golfball:bed) (count objectOnBed:beachball) )
)
(:scoring
  (-
    (count objectOnBed:golfball:dodgeball)
    (+ (* 6 2 )
      (* 7 (count objectOnBed:golfball:dodgeball:blue_dodgeball) 8 )
      10
    )
  )
)
)

(define (game game-id-523) (:domain medium-objects-room-v1)
(:setup
  (forall (?h - block)
    (and
      (exists (?w - red_dodgeball)
        (forall (?ob - (either cylindrical_block book golfball golfball))
          (game-conserved
            (in ?ob ?ob)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?p3 - golfball ?d - hexagonal_bin ?b1 - dodgeball ?p - hexagonal_bin)
        (at-end
          (in ?p ?p)
        )
      )
    )
  )
)
(:terminal
  (>= (- 1 )
    (- 2 )
  )
)
(:scoring
  2
)
)

(define (game game-id-524) (:domain medium-objects-room-v1)
(:setup
  (exists (?db - ball ?b - (either triangle_block golfball))
    (exists (?b ?b - hexagonal_bin ?b1 - doggie_bed ?h - block)
      (game-optional
        (in_motion bed)
      )
    )
  )
)
(:constraints
  (and
    (preference blindsOpened
      (exists (?p1 - (either red tall_cylindrical_block) ?t - (either desktop basketball))
        (at-end
          (agent_holds ?t)
        )
      )
    )
    (preference bookOnDeskShelf
      (exists (?o1 - chair)
        (then
          (once (agent_holds ?o1) )
          (once (adjacent_side ?o1 ?o1 desk) )
          (hold-for 10 (and (on ?o1 rug) (< (distance ?o1 ?o1) (distance ?o1 bed)) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (>= 2 3 )
      (>= (external-forall-maximize (count blindsOpened:golfball) ) (count-once-per-objects blindsOpened:dodgeball) )
      (> 5 (* (* 2 (/ (count-once-per-external-objects bookOnDeskShelf:dodgeball) (+ (count bookOnDeskShelf:beachball) 180 )
            )
          )
          3
          6
        )
      )
    )
  )
)
(:scoring
  (count blindsOpened:beachball)
)
)

(define (game game-id-525) (:domain medium-objects-room-v1)
(:setup
  (exists (?o2 - building)
    (game-conserved
      (and
        (forall (?c ?s - dodgeball)
          (not
            (agent_holds ?c)
          )
        )
        (and
          (and
            (agent_holds bed)
          )
          (and
            (agent_holds door)
            (exists (?p1 - (either book desktop))
              (and
                (and
                  (in_motion ?o2)
                  (agent_holds ?o2)
                )
                (adjacent ?p1 ?o2)
              )
            )
            (not
              (in_motion ?o2)
            )
            (touch ?o2 agent)
          )
        )
        (agent_holds ?o2)
      )
    )
  )
)
(:constraints
  (and
    (preference throwToBinFromOppositeWall
      (exists (?o - hexagonal_bin ?b10 - dodgeball)
        (then
          (hold-for 4 (and (on ?b10 agent) (in ?b10 back) ) )
          (hold (and (agent_holds ?b10) (agent_holds ?b10) ) )
          (hold (not (touch ?b10 desk) ) )
        )
      )
    )
    (preference blocksInPlace
      (exists (?h - game_object ?w ?h ?b ?c4 - dodgeball)
        (then
          (hold (and (= (distance ?c4 ?b) (distance ?w ?h)) (in_motion ?b) ) )
          (hold (and (agent_holds ?h) (in ?c4 ?w) (same_color ?w agent) ) )
          (hold-while (< (distance desk ?w) 1) (not (and (not (agent_holds agent) ) (on ?b ?b) ) ) (adjacent ?w ?h) (not (or (equal_x_position ?c4 ?c4) (not (not (agent_holds ?h) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= 10 (- (count-once-per-external-objects throwToBinFromOppositeWall:blue_cube_block) )
    )
    (= (count throwToBinFromOppositeWall:dodgeball) (count-once blocksInPlace:basketball) )
  )
)
(:scoring
  2
)
)

(define (game game-id-526) (:domain few-objects-room-v1)
(:setup
  (exists (?o1 - red_pyramid_block ?db - (either dodgeball yellow_cube_block))
    (and
      (game-optional
        (touch ?db ?db)
      )
      (forall (?w - hexagonal_bin)
        (game-conserved
          (and
            (agent_holds sideways)
            (agent_holds side_table)
            (in_motion ?w)
          )
        )
      )
      (forall (?g - (either cube_block desktop doggie_bed))
        (game-conserved
          (in ?db ?db)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b6 ?o - building)
      (and
        (preference throwFromEdgeOfRug
          (exists (?t1 - hexagonal_bin ?c - (either laptop bridge_block))
            (then
              (hold (in ?b6 desk) )
            )
          )
        )
        (preference throwTeddyOntoPillow
          (exists (?p1 - chair)
            (at-end
              (and
                (in ?p1 desk)
                (on ?o room_center)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (not
        (and
          (>= (* 3 (total-time) )
            1
          )
        )
      )
      (and
        (> 1 (+ 5 9 )
        )
      )
    )
    (>= (total-time) (count throwTeddyOntoPillow:dodgeball) )
  )
)
(:scoring
  3
)
)

(define (game game-id-527) (:domain few-objects-room-v1)
(:setup
  (forall (?d - curved_wooden_ramp ?w - teddy_bear ?b - cube_block)
    (game-conserved
      (adjacent_side ?b ?b ?b)
    )
  )
)
(:constraints
  (and
    (preference ballThrownIntoTarget
      (exists (?w - dodgeball)
        (then
          (hold (in_motion ?w) )
          (hold (on room_center ?w) )
          (hold (and (not (in_motion ?w) ) (agent_holds ?w) ) )
        )
      )
    )
    (forall (?l - ball ?c3 - wall ?d - dodgeball)
      (and
        (preference ballThrownThroughRampToBin
          (exists (?r - wall)
            (then
              (hold (in_motion ?r) )
              (once (>= 0 9) )
              (once (in_motion ?r) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> 20 18 )
)
(:scoring
  100
)
)

(define (game game-id-528) (:domain few-objects-room-v1)
(:setup
  (forall (?g - blinds)
    (and
      (exists (?b6 - hexagonal_bin)
        (and
          (game-conserved
            (not
              (agent_holds ?g)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference thrownBallReachesEnd
      (exists (?l - shelf)
        (then
          (hold (on floor ?l) )
          (hold (agent_holds ?l) )
          (once (not (not (not (and (in_motion ?l) (same_type ?l ?l) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (* 10 (count-overlapping thrownBallReachesEnd:blue_pyramid_block:blue_pyramid_block) )
      (* (* (= (count-longest thrownBallReachesEnd:dodgeball) (not 20 ) )
          (* (- (count thrownBallReachesEnd:doggie_bed:dodgeball) )
            (count-once-per-external-objects thrownBallReachesEnd:dodgeball:golfball)
            5
          )
        )
        (count thrownBallReachesEnd:blue_dodgeball)
      )
    )
    3
  )
)
(:scoring
  (not
    2
  )
)
)

(define (game game-id-529) (:domain few-objects-room-v1)
(:setup
  (forall (?h - hexagonal_bin ?o3 - dodgeball ?g - dodgeball)
    (exists (?c5 - ball ?o1 - dodgeball ?c - doggie_bed ?b1 - dodgeball)
      (and
        (forall (?d - doggie_bed)
          (and
            (exists (?r2 - hexagonal_bin)
              (game-conserved
                (in_motion floor)
              )
            )
          )
        )
        (game-conserved
          (touch ?g ?g)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballsInPlace
      (exists (?b - sliding_door)
        (at-end
          (not
            (and
              (on ?b ?b)
              (equal_z_position ?b ?b)
              (equal_z_position ?b ?b)
              (in_motion ?b)
              (not
                (in_motion ?b)
              )
              (in_motion ?b)
            )
          )
        )
      )
    )
    (preference throwBallToBin
      (exists (?c1 - cube_block ?b6 - pyramid_block ?o - curved_wooden_ramp)
        (at-end
          (and
            (on ?o ?o)
            (in_motion ?o)
          )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (count-once-per-objects dodgeballsInPlace:basketball:dodgeball) )
)
(:scoring
  (count-once-per-objects dodgeballsInPlace:orange:dodgeball)
)
)

(define (game game-id-530) (:domain medium-objects-room-v1)
(:setup
  (exists (?w2 - (either laptop cellphone))
    (and
      (forall (?o - game_object ?d - hexagonal_bin ?d ?w1 ?d - dodgeball)
        (forall (?db - red_dodgeball ?d1 - drawer)
          (forall (?f - hexagonal_bin)
            (game-optional
              (agent_holds ?w2)
            )
          )
        )
      )
      (and
        (game-optional
          (on ?w2 room_center)
        )
        (exists (?d1 - curved_wooden_ramp)
          (game-conserved
            (not
              (adjacent_side agent ?w2 ?d1 ?w2)
            )
          )
        )
      )
      (forall (?r - golfball)
        (and
          (forall (?p1 - hexagonal_bin ?c3 - game_object)
            (exists (?b - game_object)
              (forall (?b - yellow_pyramid_block)
                (not
                  (forall (?x - ball)
                    (and
                      (exists (?d2 - ball)
                        (exists (?o2 - dodgeball)
                          (and
                            (game-optional
                              (not
                                (adjacent ?c3 ?c3)
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
          (game-optional
            (agent_holds ?w2)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownOntoTarget
      (exists (?d - pyramid_block)
        (at-end
          (and
            (not
              (and
                (adjacent_side ?d desk ?d)
                (and
                  (not
                    (in_motion ?d)
                  )
                  (not
                    (in ?d floor)
                  )
                  (agent_holds agent)
                )
              )
            )
            (adjacent_side ?d ?d agent)
            (agent_holds ?d)
          )
        )
      )
    )
    (preference tanObjectMovedToRoomCenter
      (exists (?c - (either golfball beachball))
        (at-end
          (agent_holds ?c)
        )
      )
    )
    (preference blocksInPlace
      (exists (?l - pyramid_block ?t1 - ball)
        (then
          (once (not (and (is_setup_object ?t1) (not (and (on ?t1 ?t1) (agent_holds ?t1) ) ) ) ) )
          (once (and (or (and (in bed ?t1) (agent_holds desk) (and (in ?t1 ?t1) (exists (?c2 ?d ?r1 ?c1 ?c ?t2 ?b ?d ?b1 ?o5 - color ?r2 - pillow) (< 9 (distance ?r2 ?t1)) ) ) ) (not (not (and (adjacent ?t1 ?t1) (in_motion ?t1) ) ) ) ) (agent_holds ?t1) ) )
          (once (forall (?h - block ?l3 - building) (on ?l3 ?t1) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (* (* (count blocksInPlace:beachball) (count blocksInPlace:yellow) 4 )
        (count-same-positions tanObjectMovedToRoomCenter:yellow)
      )
      (count ballThrownOntoTarget:blue:dodgeball)
    )
    10
  )
)
(:scoring
  (total-time)
)
)

(define (game game-id-531) (:domain many-objects-room-v1)
(:setup
  (forall (?b4 - dodgeball)
    (exists (?r - dodgeball)
      (game-conserved
        (in_motion bed)
      )
    )
  )
)
(:constraints
  (and
    (preference blockPickedUp
      (exists (?h - hexagonal_bin ?h - ball)
        (then
          (hold (exists (?c - dodgeball ?c3 - (either pencil rug dodgeball) ?b - beachball) (and (adjacent ?b ?h) (< 1 (building_size ?b)) (or (exists (?c - dodgeball) (not (on front_left_corner ?c) ) ) (agent_holds ?h) ) (agent_holds ?b) (not (or (and (not (and (and (and (agent_holds ?b) (and (in_motion ?h) (in_motion ?h) ) (agent_holds ?h) ) (agent_holds ?h) (agent_holds ?b) (agent_holds ?b) ) (in ?h ?h) ) ) (in_motion bed) ) (adjacent_side ?b bed ?h ?b) ) ) (same_type ?h ?h) ) ) )
          (hold (agent_holds ?h) )
          (once (not (in_motion ?h) ) )
        )
      )
    )
    (forall (?b4 - cylindrical_block)
      (and
        (preference blocksInPlace
          (exists (?h - ball)
            (at-end
              (touch ?h ?h)
            )
          )
        )
        (preference gameBlockFound
          (exists (?b1 - hexagonal_bin)
            (at-end
              (= (distance_side rug ?b1 ?b4) 1)
            )
          )
        )
      )
    )
    (preference rollBallToBin
      (exists (?x - hexagonal_bin)
        (then
          (once (agent_holds ?x) )
          (hold (exists (?b5 - ball) (not (in_motion ?x) ) ) )
          (once (and (adjacent main_light_switch ?x) (and (in_motion ?x) (in_motion ?x) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-same-positions blocksInPlace:dodgeball:beachball) 5 )
)
(:scoring
  (count-once-per-objects blocksInPlace:pink_dodgeball)
)
)

(define (game game-id-532) (:domain few-objects-room-v1)
(:setup
  (forall (?o4 - hexagonal_bin ?d ?b - hexagonal_bin ?o3 - (either golfball alarm_clock))
    (game-conserved
      (on ?o3 ?o3)
    )
  )
)
(:constraints
  (and
    (forall (?r1 - hexagonal_bin)
      (and
        (preference objectToBinOnFirstTry
          (exists (?h - doggie_bed ?h ?c ?d2 ?l ?ob - doggie_bed)
            (then
              (once (and (not (not (not (not (in_motion floor) ) ) ) ) (not (on floor ?r1) ) ) )
              (once (in_motion ?r1) )
              (hold (not (touch ?c ?c) ) )
            )
          )
        )
        (preference dodgeballHitsBinBottom
          (exists (?b3 - block)
            (then
              (hold (not (exists (?w - ball) (and (adjacent ?w front) (agent_holds ?r1) ) ) ) )
              (once (on desk floor) )
              (once (rug_color_under desk ?r1) )
            )
          )
        )
        (preference otherObjectsOnDeskShelf
          (exists (?l4 ?b - wall)
            (then
              (once (not (in_motion ?l4) ) )
              (once (and (not (agent_holds ?r1) ) (agent_holds ?b) ) )
              (once (object_orientation agent ?l4) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> 1 (+ (count objectToBinOnFirstTry:purple) 2 )
  )
)
(:scoring
  1
)
)

(define (game game-id-533) (:domain few-objects-room-v1)
(:setup
  (forall (?s - dodgeball ?d - dodgeball ?o2 ?h ?h ?h ?c ?d ?r ?c2 ?h ?l3 - (either alarm_clock bridge_block) ?t2 - ball)
    (game-conserved
      (not
        (not
          (agent_holds desk)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?t - doggie_bed ?o1 - hexagonal_bin ?d - watch)
      (and
        (preference agentLeavesDogbedOrNoMoreBalls
          (exists (?c - building)
            (then
              (hold (is_setup_object floor) )
              (hold-while (adjacent ?d rug) (< 0 (distance ?c room_center)) )
              (once (agent_holds bed) )
            )
          )
        )
        (preference woodenBlockMovedFromRugToDesk
          (exists (?db ?b ?d - desk_shelf ?o5 - golfball)
            (then
              (once (and (and (on ?o5 agent) (not (not (not (above ?d ?d) ) ) ) (and (agent_holds ?d) (not (in_motion ?d) ) ) ) (and (not (in_motion agent) ) (= 1 4) ) ) )
              (hold-while (same_color ?d front_left_corner) (on ?o5 ?d) )
              (hold (agent_holds ?d) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (= 5 (count agentLeavesDogbedOrNoMoreBalls:golfball) )
)
(:scoring
  (* (count agentLeavesDogbedOrNoMoreBalls) (count-total agentLeavesDogbedOrNoMoreBalls:blue_dodgeball:purple:dodgeball) )
)
)

(define (game game-id-534) (:domain few-objects-room-v1)
(:setup
  (exists (?h - dodgeball ?h - curved_wooden_ramp)
    (exists (?s - hexagonal_bin ?c6 - hexagonal_bin ?f - hexagonal_bin)
      (game-conserved
        (on ?f agent)
      )
    )
  )
)
(:constraints
  (and
    (preference blockKnockedFromBuildingInBin
      (exists (?b1 - game_object)
        (then
          (hold (touch ?b1 ?b1) )
          (hold (in ?b1 ?b1) )
        )
      )
    )
  )
)
(:terminal
  (< 30 (+ 5 (+ 1 (+ (count blockKnockedFromBuildingInBin:golfball) (count blockKnockedFromBuildingInBin:rug) )
      )
    )
  )
)
(:scoring
  (count-once-per-objects blockKnockedFromBuildingInBin:basketball:dodgeball)
)
)

(define (game game-id-535) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (agent_crouches )
  )
)
(:constraints
  (and
    (preference smallObjectThrownToBed
      (exists (?b - hexagonal_bin)
        (then
          (hold (in ?b ?b) )
          (once (not (and (and (and (not (in_motion front) ) (in_motion ?b) ) (in ?b ?b) ) (in_motion ?b) ) ) )
          (once (agent_holds ?b) )
        )
      )
    )
  )
)
(:terminal
  (> (count-total smallObjectThrownToBed:purple) 3 )
)
(:scoring
  (count smallObjectThrownToBed:doggie_bed)
)
)

(define (game game-id-536) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?b5 - wall ?l - hexagonal_bin)
      (and
        (game-optional
          (agent_holds ?l)
        )
        (game-conserved
          (in_motion ?l)
        )
      )
    )
    (exists (?r - hexagonal_bin ?l - hexagonal_bin)
      (exists (?d - chair ?d - curved_wooden_ramp)
        (exists (?w2 ?c4 ?o ?b5 ?l2 ?o ?o ?h ?c ?b - game_object ?b4 ?b ?h ?b6 ?c2 ?o4 - color)
          (game-conserved
            (agent_holds ?c2)
          )
        )
      )
    )
    (and
      (and
        (game-optional
          (agent_holds desk)
        )
        (game-conserved
          (agent_holds rug)
        )
        (forall (?p1 - cube_block ?c - wall ?h - hexagonal_bin ?bl - hexagonal_bin)
          (game-conserved
            (and
              (adjacent rug ?bl)
              (and
                (between ?bl room_center ?bl)
                (same_object ?bl pink_dodgeball)
              )
            )
          )
        )
        (forall (?t - building ?b4 - game_object ?b6 - dodgeball)
          (and
            (and
              (forall (?t - game_object ?b3 - ball)
                (forall (?r2 ?d ?d ?o1 ?b1 ?d2 - beachball ?g - hexagonal_bin)
                  (or
                    (and
                      (exists (?o4 - hexagonal_bin)
                        (exists (?w2 - (either triangle_block hexagonal_bin))
                          (forall (?c4 - cube_block)
                            (game-conserved
                              (in ?c4 bed)
                            )
                          )
                        )
                      )
                    )
                    (game-conserved
                      (on rug desk)
                    )
                  )
                )
              )
            )
            (exists (?c3 - ball)
              (game-conserved
                (agent_holds east_sliding_door)
              )
            )
            (game-conserved
              (not
                (not
                  (agent_holds agent)
                )
              )
            )
          )
        )
        (forall (?b - hexagonal_bin ?b4 - doggie_bed)
          (exists (?w - chair)
            (game-conserved
              (and
                (not
                  (and
                    (and
                      (exists (?w2 - (either main_light_switch flat_block hexagonal_bin cube_block))
                        (agent_holds ?w2)
                      )
                      (rug_color_under front ?b4)
                    )
                    (and
                      (and
                        (and
                          (exists (?h - dodgeball ?b - hexagonal_bin)
                            (and
                              (and
                                (same_type ?b ?b4)
                                (agent_holds ?w)
                              )
                              (and
                                (not
                                  (agent_holds ?b)
                                )
                                (in_motion ?w)
                              )
                            )
                          )
                          (agent_holds agent)
                        )
                        (open ?w)
                      )
                      (agent_holds agent)
                    )
                    (same_type ?b4 ?w)
                  )
                )
                (agent_holds ?b4)
                (or
                  (equal_z_position ?w ?w)
                  (adjacent ?w ?b4)
                )
              )
            )
          )
        )
      )
      (forall (?p - (either golfball pyramid_block golfball))
        (forall (?b2 - wall)
          (exists (?d - block ?h - (either desktop cd cellphone))
            (forall (?c1 - doggie_bed)
              (not
                (game-conserved
                  (touch back ?b2)
                )
              )
            )
          )
        )
      )
      (and
        (exists (?h - cube_block)
          (forall (?g - ball)
            (and
              (and
                (game-conserved
                  (agent_holds ?g)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o - ball ?s - drawer ?l - cube_block)
      (and
        (preference blockPickedUp
          (exists (?o ?h - triangular_ramp)
            (then
              (once (agent_holds floor) )
              (once (agent_holds ?h) )
              (once (in agent ?l) )
            )
          )
        )
        (preference objectWithMatchingColor
          (exists (?c4 - building)
            (then
              (once (agent_holds bed) )
              (once (not (and (agent_holds ?l) (and (agent_holds ?l) (agent_holds ?l) ) (not (and (agent_holds ?c4) (not (< 1 (distance tan ?l)) ) ) ) ) ) )
              (hold (and (and (and (not (on ?l ?c4) ) (not (not (agent_holds ?l) ) ) ) (in_motion ?c4) ) (on ?c4 ?l) ) )
            )
          )
        )
      )
    )
    (preference blockInTowerKnockedByDodgeball
      (exists (?d - flat_block)
        (then
          (once (or (not (object_orientation agent ?d) ) (on ?d ?d) ) )
          (once (agent_holds ?d) )
          (hold-while (on ?d ?d) (in_motion ?d) (agent_holds ?d) (and (and (agent_holds ?d) (not (not (on agent ?d) ) ) ) (or (agent_holds ?d) (and (and (and (and (in_motion ?d) (agent_holds south_west_corner) ) (and (on ?d ?d) (in_motion agent) ) (adjacent ?d ?d) ) (< (distance ?d ?d) 0.5) ) (not (not (not (in_motion ?d) ) ) ) ) (not (not (and (< 4 5) (touch ?d south_west_corner) ) ) ) ) ) )
        )
      )
    )
    (preference throwMovesBeachballWithoutKnockingTeddy
      (exists (?p - ball)
        (then
          (once (in ?p ?p) )
          (once (in_motion ?p) )
          (once (between ?p agent ?p) )
        )
      )
    )
  )
)
(:terminal
  (<= 5 40 )
)
(:scoring
  4
)
)

(define (game game-id-537) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (not
      (agent_holds agent)
    )
  )
)
(:constraints
  (and
    (preference ballThrowAttempt
      (exists (?ob - hexagonal_bin)
        (then
          (hold-to-end (agent_holds ?ob) )
          (hold (< (distance ?ob ?ob) (distance ?ob ?ob)) )
          (once (in_motion ?ob) )
        )
      )
    )
  )
)
(:terminal
  (>= 1 (count ballThrowAttempt:book) )
)
(:scoring
  2
)
)

(define (game game-id-538) (:domain few-objects-room-v1)
(:setup
  (forall (?d - cube_block)
    (game-optional
      (not
        (not
          (and
            (agent_holds ?d)
            (and
              (in_motion ?d)
              (and
                (agent_holds desk)
                (and
                  (or
                    (not
                      (agent_holds ?d)
                    )
                    (and
                      (toggled_on tan)
                      (in_motion ?d)
                    )
                  )
                  (not
                    (not
                      (above ?d ?d)
                    )
                  )
                )
              )
              (in_motion desk)
            )
            (or
              (touch ?d ?d)
              (and
                (agent_holds ?d)
                (in_motion ?d)
                (and
                  (in_motion ?d)
                  (= (distance desk ?d) (distance ?d desk))
                )
              )
            )
            (between rug ?d ?d)
            (and
              (in rug ?d)
              (on ?d ?d)
            )
            (and
              (agent_holds ?d)
              (and
                (agent_holds ?d)
                (same_color floor desk)
              )
            )
            (and
              (in_motion ?d)
              (in_motion ?d)
            )
            (agent_holds ?d)
            (not
              (and
                (forall (?d - chair)
                  (not
                    (on ?d ?d)
                  )
                )
                (and
                  (not
                    (not
                      (exists (?s - desk_shelf)
                        (< 7 1)
                      )
                    )
                  )
                  (adjacent ?d desk)
                )
              )
            )
            (= (distance ?d ?d) (distance ?d ?d) (distance ?d agent))
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballFromBlockToBin
      (exists (?h - flat_block)
        (at-end
          (not
            (and
              (in_motion ?h)
              (in_motion ?h)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count dodgeballFromBlockToBin:blue_pyramid_block) 6 )
)
(:scoring
  (count dodgeballFromBlockToBin:beachball)
)
)

(define (game game-id-539) (:domain many-objects-room-v1)
(:setup
  (exists (?l - cube_block ?c - cube_block ?d - dodgeball)
    (and
      (or
        (forall (?t ?c ?r2 - ball)
          (game-optional
            (and
              (and
                (in_motion ?c)
                (on ?d ?r2)
              )
              (on ?r2 back)
            )
          )
        )
        (and
          (forall (?p ?ob - dodgeball)
            (exists (?c - triangular_ramp ?r - (either pillow dodgeball) ?o4 - hexagonal_bin)
              (exists (?o - bridge_block ?b1 - triangular_ramp ?b2 - flat_block)
                (exists (?t - cube_block)
                  (and
                    (game-conserved
                      (forall (?b - block)
                        (not
                          (in_motion ?ob)
                        )
                      )
                    )
                    (and
                      (and
                        (and
                          (and
                            (forall (?l4 - block)
                              (game-conserved
                                (not
                                  (and
                                    (not
                                      (between ?l4 ?t ?t)
                                    )
                                    (agent_holds desk)
                                    (not
                                      (adjacent ?d ?p)
                                    )
                                    (not
                                      (and
                                        (and
                                          (not
                                            (and
                                              (in_motion door)
                                            )
                                          )
                                          (and
                                            (agent_holds ?t)
                                            (not
                                              (not
                                                (exists (?h - shelf ?p - ball)
                                                  (between ?d ?ob agent)
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                    (not
                                      (not
                                        (and
                                          (touch ?l4 ?d)
                                          (on ?o4 ?t)
                                        )
                                      )
                                    )
                                    (and
                                      (adjacent ?d ?d)
                                      (faces ?l4 ?o4)
                                    )
                                  )
                                )
                              )
                            )
                          )
                          (exists (?b - hexagonal_bin ?o1 - hexagonal_bin)
                            (and
                              (game-conserved
                                (not
                                  (in_motion ?b2)
                                )
                              )
                            )
                          )
                          (and
                            (game-optional
                              (and
                                (not
                                  (on bed ?p)
                                )
                                (in_motion ?o4)
                              )
                            )
                            (exists (?b4 - (either yellow_cube_block dodgeball))
                              (game-optional
                                (in_motion ?o4)
                              )
                            )
                            (and
                              (game-conserved
                                (in_motion ?o4)
                              )
                              (game-optional
                                (in_motion ?ob)
                              )
                              (and
                                (game-conserved
                                  (and
                                    (and
                                      (< (distance ?p ?d) (distance ?b2 ?d))
                                      (>= 4 (building_size ?ob))
                                    )
                                    (not
                                      (not
                                        (agent_holds ?d)
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                        (exists (?t - golfball)
                          (exists (?b - hexagonal_bin)
                            (and
                              (game-conserved
                                (not
                                  (not
                                    (< 7 (distance ?t agent))
                                  )
                                )
                              )
                            )
                          )
                        )
                        (game-optional
                          (open ?d)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
      (exists (?t1 - cube_block ?b1 - shelf)
        (game-conserved
          (and
            (and
              (agent_holds ?b1)
              (not
                (agent_holds ?b1)
              )
            )
            (in_motion door)
          )
        )
      )
      (exists (?c3 - (either alarm_clock laptop))
        (and
          (exists (?o1 ?db - triangular_ramp ?b - block)
            (and
              (forall (?c - ball)
                (forall (?w1 - pillow ?c4 - block)
                  (game-conserved
                    (and
                      (and
                        (adjacent ?c3 ?b)
                        (on rug ?c)
                      )
                      (not
                        (not
                          (and
                            (not
                              (= 3 1)
                            )
                            (in_motion bed)
                          )
                        )
                      )
                    )
                  )
                )
              )
              (and
                (game-optional
                  (above ?b ?c3)
                )
              )
              (and
                (game-conserved
                  (not
                    (object_orientation ?b ?b)
                  )
                )
              )
            )
          )
          (game-conserved
            (>= (distance ?d ?d) 1)
          )
          (game-conserved
            (< 4 (distance ?c3 ?d))
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwInBin
      (exists (?b8 - ball ?l - game_object)
        (then
          (once (not (on ?l ?l) ) )
          (once (forall (?r - hexagonal_bin) (in ?l rug) ) )
          (once (not (and (and (not (or (not (or (agent_holds back) (not (on ?l ?l) ) ) ) (agent_holds ?l) ) ) (not (forall (?b4 - hexagonal_bin ?d - block) (in_motion ?l) ) ) ) (and (and (not (not (and (not (forall (?bl - wall) (agent_holds block) ) ) (in_motion ?l) ) ) ) (not (agent_holds ?l) ) ) (and (and (and (agent_holds ?l) (and (and (and (and (not (agent_holds ?l) ) (not (in_motion room_center) ) ) (not (and (not (in_motion ?l) ) (and (in_motion pink_dodgeball) (exists (?h - ball) (in_motion desk) ) ) ) ) (agent_holds ?l) ) (agent_holds ?l) ) (in ?l floor) ) ) (equal_x_position ?l ?l) ) (and (adjacent_side ?l ?l ?l) (same_color ?l ?l) ) ) ) (not (not (in_motion ?l) ) ) (adjacent_side green_golfball ?l desk) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (< (count throwInBin:cylindrical_block) 5 )
      (count throwInBin:yellow_pyramid_block)
      5
      (count throwInBin:golfball)
    )
    (* 0 1 )
  )
)
(:scoring
  (+ (+ (external-forall-minimize 3 ) (* (count throwInBin:red:blue_dodgeball) (count-once throwInBin:basketball) )
    )
    10
  )
)
)

(define (game game-id-540) (:domain few-objects-room-v1)
(:setup
  (exists (?l - ball)
    (forall (?r - hexagonal_bin)
      (and
        (game-optional
          (< 1 (distance ?l ?r))
        )
        (game-conserved
          (in_motion agent)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?db - triangular_ramp ?c - dodgeball)
      (and
        (preference objectThrownFromRug
          (exists (?h - game_object ?b8 - dodgeball)
            (then
              (once (not (in ?c ?c) ) )
              (once (agent_holds ?b8) )
              (once (not (and (not (in_motion ?c) ) (and (>= 5 (distance ?b8 ?c)) (agent_holds ?b8) (is_setup_object ?b8) ) (on ?c ?c) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (not
      (or
        (or
          (> (- 9 )
            (count-total objectThrownFromRug:dodgeball)
          )
        )
        (> 2 (* (+ (* 2 )
              (count objectThrownFromRug:yellow)
            )
            5
          )
        )
        (> (total-time) (and (count-once-per-objects objectThrownFromRug) ) )
      )
    )
    (>= (* (count objectThrownFromRug:pink_dodgeball) (count objectThrownFromRug:block) )
      (count objectThrownFromRug:dodgeball)
    )
    (and
      (or
        (or
          (or
            (>= 3 3 )
            (>= (count-longest objectThrownFromRug:pyramid_block) 15 )
          )
          (or
            (>= 5 (- (< (count-once objectThrownFromRug:yellow) (count objectThrownFromRug:purple) )
              )
            )
            (or
              (or
                (>= (count objectThrownFromRug:pyramid_block) (* 5 60 )
                )
                (>= (count objectThrownFromRug:dodgeball) (+ (* 6 5 )
                    2
                    3
                    (count objectThrownFromRug:beachball)
                    300
                    (* (* (external-forall-maximize (external-forall-maximize (count-longest objectThrownFromRug:dodgeball) ) ) (* (count objectThrownFromRug:beachball) (count objectThrownFromRug:golfball:dodgeball) )
                      )
                      (count-once-per-objects objectThrownFromRug)
                    )
                    (count-overlapping objectThrownFromRug:dodgeball)
                    (count-once objectThrownFromRug:dodgeball)
                    8
                    (* (total-score) (count-once-per-objects objectThrownFromRug:yellow:pink_dodgeball) )
                    10
                    (* (* 10 (count objectThrownFromRug:dodgeball:blue) 50 )
                      (count objectThrownFromRug:doggie_bed)
                      (total-time)
                      (count-once-per-objects objectThrownFromRug:pink:doggie_bed)
                    )
                  )
                )
              )
            )
            (not
              (>= (+ (count objectThrownFromRug:dodgeball:tan) (count objectThrownFromRug:basketball) )
                5
              )
            )
          )
          (>= (count-once-per-objects objectThrownFromRug:pyramid_block:dodgeball) (+ (/ 4 6 ) (and (count-measure objectThrownFromRug:basketball) ) (* (* 8 2 (count objectThrownFromRug:blue_pyramid_block) )
                (count objectThrownFromRug:basketball:side_table)
              )
              (count objectThrownFromRug:basketball)
            )
          )
        )
        (>= 12 (count objectThrownFromRug:alarm_clock) )
      )
    )
    (and
      (and
        (> (count-once-per-objects objectThrownFromRug:basketball) (* 8 (* (and (count objectThrownFromRug:basketball) 9 ) (count objectThrownFromRug:golfball:top_drawer) )
            1
          )
        )
        (or
          (>= (+ 4 3 )
            (count objectThrownFromRug:green)
          )
          (>= (* (count-once-per-external-objects objectThrownFromRug:blue_pyramid_block) (count objectThrownFromRug:hexagonal_bin) )
            (count-once-per-objects objectThrownFromRug:book)
          )
        )
        (or
          (or
            (>= (* 3 (* (+ (count objectThrownFromRug:dodgeball) 4 (* 180 (total-score) )
                  )
                  100
                  (count objectThrownFromRug:pink:dodgeball)
                  (* (* 10 (- (count-once-per-external-objects objectThrownFromRug:golfball:pink) )
                    )
                    (count objectThrownFromRug:hexagonal_bin:basketball)
                  )
                  (count-once-per-objects objectThrownFromRug:beachball)
                )
                (* (count objectThrownFromRug:dodgeball) 10 )
              )
              (count-once-per-objects objectThrownFromRug:doggie_bed)
            )
            (or
              (and
                (or
                  (and
                    (>= (external-forall-maximize (* 5 (/ (* (count objectThrownFromRug:red) 50 )
                            3
                          )
                        )
                      )
                      1
                    )
                  )
                  (>= (* (+ (count-once-per-external-objects objectThrownFromRug:book:beachball) (count objectThrownFromRug:yellow:basketball) )
                      2
                      3
                    )
                    (count objectThrownFromRug:golfball:dodgeball)
                  )
                  (or
                    (>= (total-score) 10 )
                    (>= (* (* (count-once objectThrownFromRug:beachball) 6 7 )
                        50
                      )
                      (* (count objectThrownFromRug:red_pyramid_block) (count-unique-positions objectThrownFromRug:blue_dodgeball) )
                    )
                  )
                )
                (<= 2 (count-once-per-objects objectThrownFromRug:golfball) )
                (>= (+ 5 (- (+ (count objectThrownFromRug:bed) (* 10 6 )
                      )
                    )
                  )
                  (count-once objectThrownFromRug:orange)
                )
              )
              (>= (* (* (count objectThrownFromRug:blue_cube_block) (count objectThrownFromRug:blue_dodgeball) )
                  (- (count-once-per-objects objectThrownFromRug:pink_dodgeball:hexagonal_bin) )
                )
                (count objectThrownFromRug:yellow_cube_block:yellow)
              )
              (> 5 (+ (* (count-shortest objectThrownFromRug:basketball) )
                  3
                  (+ (total-time) )
                )
              )
            )
          )
          (>= 6 (count objectThrownFromRug:cylindrical_block) )
        )
      )
      (> 3 (* (count objectThrownFromRug:yellow:alarm_clock) (count-once-per-objects objectThrownFromRug:beachball) (count objectThrownFromRug) )
      )
    )
  )
)
(:scoring
  (- 10 )
)
)

(define (game game-id-541) (:domain medium-objects-room-v1)
(:setup
  (exists (?o3 - hexagonal_bin)
    (exists (?b - dodgeball)
      (not
        (game-conserved
          (and
            (agent_holds ?o3)
            (and
              (and
                (exists (?d - dodgeball)
                  (and
                    (touch agent ?o3)
                    (agent_holds ?o3)
                  )
                )
                (or
                  (and
                    (adjacent_side desk ?b ?b ?b)
                    (adjacent_side ?o3 ?b ?b)
                  )
                )
                (same_type ?o3 ?o3)
              )
              (adjacent agent ?o3)
              (and
                (and
                  (touch ?b ?o3)
                  (forall (?h - (either laptop dodgeball))
                    (not
                      (not
                        (in ?o3 agent)
                      )
                    )
                  )
                )
                (and
                  (not
                    (and
                      (agent_holds ?b)
                      (not
                        (not
                          (on ?b ?b)
                        )
                      )
                    )
                  )
                  (agent_holds ?b)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?w1 - dodgeball ?b - cube_block)
      (and
        (preference gameObjectToBin
          (exists (?r - cube_block ?p3 - teddy_bear)
            (at-end
              (exists (?t2 ?w - dodgeball)
                (agent_holds ?p3)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (> 15 10 )
    (>= (count-once-per-objects gameObjectToBin:purple:beachball) 2 )
  )
)
(:scoring
  (count-once-per-external-objects gameObjectToBin:hexagonal_bin)
)
)

(define (game game-id-542) (:domain many-objects-room-v1)
(:setup
  (forall (?b3 - hexagonal_bin ?b - dodgeball)
    (exists (?p - hexagonal_bin ?l1 - red_dodgeball)
      (game-optional
        (not
          (agent_holds ?l1)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference failedThrowToBin
      (exists (?b - game_object)
        (then
          (hold (in_motion desk) )
          (once (not (not (and (touch agent ?b) ) ) ) )
        )
      )
    )
    (preference blockKnockedFromBuildingInBin
      (exists (?o ?d ?c - drawer)
        (then
          (hold-while (in_motion ?d) (rug_color_under ?d ?o) )
          (once (adjacent ?o ?c) )
          (once (and (not (in_motion desk) ) (on ?d ?d) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) 3 )
)
(:scoring
  (not
    (* (count failedThrowToBin:golfball) (* (count-once failedThrowToBin:alarm_clock) (* 3 (* (* (count-once blockKnockedFromBuildingInBin:dodgeball) (* (count failedThrowToBin:hexagonal_bin) (* (+ (- (- (count blockKnockedFromBuildingInBin:dodgeball) )
                    )
                    (count failedThrowToBin:red)
                  )
                  (+ (* (- (* 2 (total-time) )
                      )
                      (+ (* (count-longest failedThrowToBin:alarm_clock:hexagonal_bin) (* (- (external-forall-maximize (+ 2 6 )
                              )
                            )
                            5
                          )
                          18
                        )
                        10
                      )
                    )
                    (total-score)
                  )
                )
              )
              (* 5 (count blockKnockedFromBuildingInBin:white) )
              15
              5
              9
            )
            (count failedThrowToBin)
          )
        )
      )
    )
  )
)
)

(define (game game-id-543) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?l1 - dodgeball)
      (and
        (forall (?ob - cube_block ?b - (either dodgeball cellphone pyramid_block) ?c3 - hexagonal_bin ?g - golfball)
          (and
            (game-optional
              (in_motion ?l1)
            )
          )
        )
      )
    )
    (forall (?d - ball ?g - dodgeball)
      (game-conserved
        (not
          (not
            (not
              (and
                (in_motion ?g)
                (on ?g ?g)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToRampToBed
      (exists (?c2 - dodgeball)
        (then
          (once (object_orientation ?c2 ?c2) )
          (once (in_motion floor) )
          (hold (not (and (in_motion ?c2) (agent_holds ?c2) ) ) )
        )
      )
    )
    (preference throwBallToBinOffObject
      (exists (?l1 - block)
        (then
          (once (agent_crouches ) )
          (once (and (forall (?b - (either golfball dodgeball) ?b1 - dodgeball) (in ?l1 ?l1) ) (not (in_motion ?l1) ) ) )
          (hold-to-end (exists (?b3 - hexagonal_bin ?c1 - hexagonal_bin) (not (in bed ?c1) ) ) )
        )
      )
    )
    (preference dodgeballHitsBin
      (exists (?d - chair)
        (then
          (once (not (in_motion ?d) ) )
          (once (and (touch ?d ?d) (> (distance ?d rug) 1) ) )
          (hold (object_orientation ?d ?d) )
          (once (agent_holds bottom_shelf) )
          (hold (agent_holds ?d) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (* (- (count-measure dodgeballHitsBin:beachball) )
        (+ (count-measure dodgeballHitsBin:golfball) 100 )
      )
      2
    )
    15
  )
)
(:scoring
  8
)
)

(define (game game-id-544) (:domain few-objects-room-v1)
(:setup
  (forall (?db - book)
    (forall (?h - dodgeball ?w ?w2 ?c5 - cube_block)
      (and
        (exists (?h - building)
          (and
            (and
              (game-conserved
                (on ?h door)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - game_object)
      (and
        (preference ballThrownThroughRampToBin
          (exists (?b5 - triangular_ramp)
            (then
              (once-measure (agent_holds ?b5) (distance ?b ?b) )
              (hold (on block ?b5) )
              (once (agent_holds ?b) )
            )
          )
        )
        (preference thrownObjectHitsComputer
          (exists (?r - cube_block)
            (then
              (hold (agent_holds ?b) )
              (hold-while (agent_holds ?b) (in door ?b) )
              (hold (forall (?o - game_object ?l4 - curved_wooden_ramp ?c ?d - wall) (agent_holds ?r) ) )
              (once (exists (?p - hexagonal_bin) (exists (?h - shelf ?w - (either triangular_ramp ball blue_cube_block)) (and (in_motion ?p) (and (not (adjacent ?r ?b) ) (not (on ?p bed) ) ) ) ) ) )
              (once (in ?b floor) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (count thrownObjectHitsComputer:golfball) )
)
(:scoring
  2
)
)

(define (game game-id-545) (:domain many-objects-room-v1)
(:setup
  (exists (?h - hexagonal_bin)
    (exists (?h - pyramid_block ?h - green_triangular_ramp)
      (exists (?o - curved_wooden_ramp)
        (exists (?l4 - hexagonal_bin)
          (and
            (game-conserved
              (and
                (and
                  (on ?o ?o)
                  (in ?o ?l4)
                )
                (in_motion ?o)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectsHidden
      (exists (?d - (either cylindrical_block dodgeball) ?s - hexagonal_bin ?t1 - hexagonal_bin)
        (then
          (hold-while (in_motion ?t1) (on ?t1 desk) )
          (hold-for 6 (and (in bed agent) (not (and (not (agent_holds front) ) (in_motion room_center) ) ) ) )
          (once (on ?t1 ?t1) )
        )
      )
    )
  )
)
(:terminal
  (and
    (= (count objectsHidden:basketball) 3 )
    (not
      (= (count objectsHidden:blue_dodgeball) (count-once-per-objects objectsHidden:red:red_pyramid_block) )
    )
    (or
      (>= (+ 20 (= (total-score) (+ (count objectsHidden:basketball) (* 2 2 )
            )
          )
        )
        (count objectsHidden:cube_block:golfball)
      )
    )
  )
)
(:scoring
  3
)
)

(define (game game-id-546) (:domain medium-objects-room-v1)
(:setup
  (exists (?o1 - block ?w - doggie_bed ?c2 - hexagonal_bin)
    (exists (?b2 - color ?c6 - ball)
      (game-optional
        (and
          (faces top_shelf room_center)
          (on ?c2 ?c2)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference towerFallsWhileBuilding
      (exists (?o - triangular_ramp)
        (then
          (hold (and (game_over ) (forall (?b2 - chair ?p3 - (either yellow lamp)) (in_motion agent) ) ) )
          (once (agent_holds floor) )
          (once (not (and (on ?o room_center) ) ) )
        )
      )
    )
  )
)
(:terminal
  (> (* 10 (* (external-forall-maximize (external-forall-maximize (count towerFallsWhileBuilding:green) ) ) 1 )
      (count-unique-positions towerFallsWhileBuilding:pyramid_block)
    )
    7
  )
)
(:scoring
  (* (* (count towerFallsWhileBuilding:golfball:basketball) )
    (* (count-once-per-objects towerFallsWhileBuilding:dodgeball) 5 )
  )
)
)

(define (game game-id-547) (:domain many-objects-room-v1)
(:setup
  (exists (?c - hexagonal_bin)
    (and
      (game-conserved
        (agent_holds agent)
      )
      (game-optional
        (and
          (not
            (in_motion ?c)
          )
          (and
            (in_motion ?c)
            (forall (?d - game_object ?b7 - dodgeball)
              (agent_holds agent)
            )
            (and
              (adjacent ?c ?c)
              (agent_holds ?c)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - building ?d - (either bridge_block chair))
      (and
        (preference throwFromDoorToBin
          (exists (?r1 - teddy_bear)
            (then
              (hold (and (not (between ?d ?r1 south_west_corner) ) (agent_holds ?d) ) )
              (hold (and (and (and (in ?d ?r1) ) (not (or (and (<= 6 1) (on ?d ?d) (and (not (not (in_motion ?r1) ) ) (and (< (x_position agent) 10) (not (and (and (not (in_motion ?d) ) (agent_holds ?r1) ) (not (in_motion ?r1) ) ) ) ) (and (agent_holds sideways) (agent_holds ?d) ) (in_motion ?r1) ) ) (agent_holds agent) ) ) ) (and (in_motion ?r1) (agent_holds ?r1) ) ) )
              (once (in_motion ?r1) )
            )
          )
        )
      )
    )
    (forall (?d ?b ?c ?b2 ?d ?t - hexagonal_bin)
      (and
        (preference ballToBinFromBed
          (exists (?c - doggie_bed)
            (then
              (hold (and (= (distance ?d ?d) 1) (in_motion ?t) (on ?c ?d) ) )
              (hold (and (< 1 (distance ?c ?d)) (in_motion ?d) ) )
              (once (not (and (in_motion ?c) (on ?b ?c) ) ) )
            )
          )
        )
        (preference objectLandsInBin
          (exists (?h - triangular_ramp ?o3 - block)
            (then
              (once (agent_holds ?b2) )
              (once (< (distance ?b2 ?d) 2) )
              (hold-while (agent_holds ?o3) (touch desk ?t) (same_type ?t ?t) (<= 1 (distance ?b2 ?o3)) )
              (hold (not (in_motion ?o3) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 3 (- 10 )
    )
    (>= (+ (count ballToBinFromBed:basketball) 5 )
      (* (= 1 3 )
        5
        12
      )
    )
  )
)
(:scoring
  (count throwFromDoorToBin:red:orange)
)
)

(define (game game-id-548) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (agent_holds desk)
  )
)
(:constraints
  (and
    (preference brownObjectMovedToRoomCenter
      (exists (?h - hexagonal_bin)
        (then
          (once (and (not (adjacent_side ?h rug ?h) ) (and (in_motion upright) ) (not (in desk ?h) ) ) )
          (once (not (and (and (adjacent ?h ?h) (same_color ?h ?h) ) ) ) )
          (hold (not (and (and (and (agent_holds ?h) (and (not (on ?h desk) ) (in ?h ?h) ) (and (or (in_motion ?h) ) (agent_holds ?h) (in green_golfball ?h) ) (game_over ) ) (in_motion ?h) ) (on door ?h) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count brownObjectMovedToRoomCenter:pink) (* (>= (external-forall-maximize (count brownObjectMovedToRoomCenter:beachball:beachball) ) 50 )
      (count-once brownObjectMovedToRoomCenter:cube_block:bed:blue_dodgeball)
    )
  )
)
(:scoring
  (count brownObjectMovedToRoomCenter:dodgeball:golfball)
)
)

(define (game game-id-549) (:domain many-objects-room-v1)
(:setup
  (not
    (forall (?h ?ob - (either cellphone book))
      (exists (?b7 - dodgeball)
        (and
          (and
            (game-conserved
              (not
                (< 1 (x_position ?b7))
              )
            )
            (forall (?p1 - pillow)
              (forall (?c1 - hexagonal_bin)
                (game-conserved
                  (in_motion ?b7)
                )
              )
            )
          )
          (exists (?db - dodgeball)
            (exists (?l - teddy_bear ?c - teddy_bear ?c - (either basketball book))
              (game-conserved
                (and
                  (agent_holds ?ob)
                  (in ?b7 ?db)
                  (in_motion back)
                )
              )
            )
          )
          (game-conserved
            (agent_holds ?h)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockIncorrectlyPicked
      (exists (?tb - block)
        (then
          (once (not (faces ?tb ?tb) ) )
          (once (and (not (in_motion ?tb) ) ) )
          (hold (not (in_motion floor) ) )
        )
      )
    )
    (preference cubeBlockThrowAttempt
      (exists (?l - dodgeball ?o - golfball ?b - pyramid_block)
        (then
          (hold (not (and (agent_holds ?b) (same_object ?b top_shelf) ) ) )
          (hold (in_motion ?b) )
        )
      )
    )
  )
)
(:terminal
  (<= 7 6 )
)
(:scoring
  2
)
)

(define (game game-id-550) (:domain many-objects-room-v1)
(:setup
  (forall (?w1 - hexagonal_bin ?h - shelf)
    (and
      (game-conserved
        (not
          (not
            (and
              (same_color rug ?h)
              (not
                (and
                  (same_color ?h agent)
                  (= (distance_side ?h ?h ?h ?h))
                )
              )
            )
          )
        )
      )
      (game-conserved
        (not
          (not
            (is_setup_object agent)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToDrawerOrBin
      (exists (?d2 - game_object)
        (then
          (once (>= (distance ?d2 blue) 6) )
          (hold (and (in_motion ?d2) (and (toggled_on ?d2) (or (and (<= (building_size ?d2) 1) (not (= (distance ?d2 ?d2) (x_position ?d2) 0.5) ) ) (and (on ?d2 floor) (agent_holds ?d2) ) ) (not (in right ?d2) ) ) (open ?d2) ) )
          (once (agent_holds upright) )
          (once (adjacent bed rug) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (* (count-once-per-external-objects throwToDrawerOrBin:brown:dodgeball) (count throwToDrawerOrBin:doggie_bed:basketball) )
        (total-score)
      )
      (>= 2 (* 2 (not 1 ) )
      )
      (not
        (>= 100 100 )
      )
    )
    (not
      (>= (count-once-per-objects throwToDrawerOrBin:yellow) (* (external-forall-maximize 10 ) (count-longest throwToDrawerOrBin:golfball) )
      )
    )
    (>= (* (count throwToDrawerOrBin:pink) 5 )
      (* (* (total-score) (external-forall-maximize 20 ) )
        3
        (count-once-per-objects throwToDrawerOrBin:red)
      )
    )
  )
)
(:scoring
  (count-once throwToDrawerOrBin:red)
)
)

(define (game game-id-551) (:domain medium-objects-room-v1)
(:setup
  (exists (?d - cylindrical_block)
    (or
      (and
        (and
          (game-optional
            (not
              (on ?d ?d)
            )
          )
          (and
            (and
              (exists (?h - ball ?o2 - dodgeball)
                (forall (?b - hexagonal_bin)
                  (game-optional
                    (and
                      (in_motion ?b)
                      (same_type ?o2 ?b)
                    )
                  )
                )
              )
              (and
                (exists (?c4 - hexagonal_bin)
                  (game-optional
                    (not
                      (= 1 1)
                    )
                  )
                )
              )
              (or
                (game-optional
                  (exists (?c4 ?c ?h - pillow ?p1 ?w2 ?p - watch)
                    (and
                      (on pink_dodgeball ?w2)
                      (exists (?d - chair ?l - green_triangular_ramp)
                        (agent_holds ?p1)
                      )
                    )
                  )
                )
                (exists (?c3 - doggie_bed)
                  (not
                    (game-conserved
                      (not
                        (not
                          (and
                            (in_motion ?c3)
                            (agent_holds ?c3)
                          )
                        )
                      )
                    )
                  )
                )
                (exists (?bl - curved_wooden_ramp)
                  (and
                    (and
                      (exists (?c - cube_block)
                        (forall (?r - dodgeball ?s - teddy_bear ?d - ball ?d - chair)
                          (forall (?c - ball ?p - cube_block)
                            (exists (?h - chair)
                              (game-optional
                                (on ?h ?bl)
                              )
                            )
                          )
                        )
                      )
                      (exists (?b - beachball ?bl - hexagonal_bin ?o - block)
                        (and
                          (and
                            (game-conserved
                              (not
                                (not
                                  (and
                                    (not
                                      (not
                                        (> 1 (distance ?bl ?d))
                                      )
                                    )
                                    (adjacent_side ?d desk ?d)
                                    (on ?o ?o)
                                    (not
                                      (or
                                        (not
                                          (in_motion ?bl)
                                        )
                                        (and
                                          (not
                                            (not
                                              (in ?bl ?d)
                                            )
                                          )
                                          (< 1 (distance agent desk))
                                        )
                                      )
                                    )
                                    (agent_holds rug)
                                    (agent_holds ?d)
                                  )
                                )
                              )
                            )
                            (forall (?l4 - chair)
                              (or
                                (game-optional
                                  (agent_holds desk)
                                )
                              )
                            )
                            (game-conserved
                              (broken ?bl)
                            )
                          )
                          (and
                            (game-optional
                              (same_color ?o ?bl)
                            )
                            (exists (?b5 - block ?c4 - hexagonal_bin)
                              (exists (?c - hexagonal_bin ?c5 - bridge_block)
                                (exists (?h - beachball ?b - curved_wooden_ramp)
                                  (game-optional
                                    (on ?o ?bl)
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                      (forall (?b - (either teddy_bear cylindrical_block))
                        (game-conserved
                          (in ?b ?d)
                        )
                      )
                      (exists (?d - doggie_bed)
                        (not
                          (exists (?l4 - teddy_bear)
                            (and
                              (exists (?p2 - dodgeball)
                                (and
                                  (exists (?l - wall)
                                    (exists (?l - dodgeball ?h - triangular_ramp)
                                      (forall (?h - curved_wooden_ramp)
                                        (game-conserved
                                          (not
                                            (on ?p2 back)
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
          (forall (?b2 - (either pen dodgeball hexagonal_bin hexagonal_bin))
            (game-conserved
              (and
                (not
                  (in_motion desk)
                )
                (not
                  (and
                    (and
                      (in_motion ?b2)
                      (in_motion ?b2)
                    )
                    (adjacent ?b2 ?d)
                  )
                )
              )
            )
          )
        )
      )
      (and
        (forall (?c4 - dodgeball ?bl - dodgeball ?tb - dodgeball)
          (game-optional
            (in_motion ?tb)
          )
        )
        (exists (?o5 - wall ?g - shelf ?d ?b3 - block ?w1 - golfball)
          (exists (?b6 - hexagonal_bin)
            (game-conserved
              (and
                (adjacent ?b6 ?w1)
                (and
                  (and
                    (same_color east_sliding_door ?d)
                    (not
                      (rug_color_under ?b6 ?d)
                    )
                    (on ?b6 ?d)
                  )
                  (equal_x_position ?w1 ?w1)
                )
                (on bed ?b6)
              )
            )
          )
        )
        (game-conserved
          (broken ?d)
        )
      )
      (game-conserved
        (agent_holds ?d)
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballFromDeskToTarget
      (exists (?b - hexagonal_bin ?b7 - (either cd basketball))
        (then
          (once (opposite ?b7 ?b7) )
          (once (not (on ?b7 ?b7) ) )
          (once (not (agent_holds ?b7) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= 10 10 )
  )
)
(:scoring
  (count-once-per-objects dodgeballFromDeskToTarget:triangle_block:pyramid_block)
)
)

(define (game game-id-552) (:domain medium-objects-room-v1)
(:setup
  (exists (?l - ball ?d - hexagonal_bin ?h - dodgeball)
    (game-conserved
      (and
        (equal_z_position ?h ?h)
      )
    )
  )
)
(:constraints
  (and
    (forall (?c - doggie_bed ?o - hexagonal_bin ?o - hexagonal_bin)
      (and
        (preference throwBallToDoggieBedOffWall
          (exists (?s - triangular_ramp ?o2 - hexagonal_bin)
            (then
              (hold (in_motion ?o2) )
              (once (< 1 7) )
              (hold (open ?o2) )
            )
          )
        )
      )
    )
    (forall (?c - (either beachball blue_cube_block top_drawer) ?h ?h - teddy_bear ?p - (either cylindrical_block bed tall_cylindrical_block doggie_bed))
      (and
        (preference throwOverRamp
          (then
            (once (and (in_motion bed) (on room_center ?p) ) )
          )
        )
        (preference teddyBearHitsBall
          (exists (?b - (either blue_cube_block doggie_bed) ?d - hexagonal_bin)
            (then
              (once (agent_crouches ) )
              (once (adjacent ?p ?p) )
              (once (in_motion desk) )
            )
          )
        )
      )
    )
    (forall (?l - doggie_bed)
      (and
        (preference smallItemsInPlace
          (exists (?c2 - triangular_ramp ?o - hexagonal_bin)
            (then
              (hold-for 9 (agent_holds ?o) )
              (hold-while (and (< (distance ?o ?l) (x_position ?o)) (exists (?b - cube_block ?d - hexagonal_bin) (and (agent_holds ?o) (and (touch ?d ?d) ) ) ) ) (> (distance ?o ?o) (distance_side ?o ?o ?o)) )
              (hold (and (same_object ?o ?l) ) )
            )
          )
        )
        (preference throwMovesBeachballWithoutKnockingTeddy
          (exists (?x - red_dodgeball)
            (then
              (hold (and (adjacent ?l ?x) (not (not (not (not (and (exists (?h - blue_pyramid_block) (rug_color_under desk ?x) ) (and (and (broken ?x) (agent_holds ?x) ) (and (in door floor) (in ?x ?x) ) ) ) ) ) ) ) ) )
              (hold-while (agent_holds rug) (on ?x agent) )
            )
          )
        )
        (preference cubeBlockThrowAttempt
          (exists (?g - (either flat_block flat_block game_object))
            (then
              (once (in agent ?g) )
              (hold (same_type ?g ?l) )
              (hold (and (agent_holds ?g) (agent_holds ?g) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (external-forall-maximize (count-once-per-objects cubeBlockThrowAttempt) ) (+ (* (+ (* (not (* 7 (total-score) )
            )
            1
          )
          3
        )
        (* 30 (* (+ (- (+ (count throwOverRamp:blue:purple) (count-once-per-objects throwOverRamp) )
              )
              (count-increasing-measure cubeBlockThrowAttempt:yellow_cube_block:doggie_bed)
            )
            (* 4 (+ (count-once-per-external-objects throwOverRamp:orange) 3 0 (count-once-per-objects throwMovesBeachballWithoutKnockingTeddy:yellow) )
            )
          )
        )
        (count-once-per-objects throwOverRamp:dodgeball)
      )
      (count-total cubeBlockThrowAttempt:yellow)
    )
  )
)
(:scoring
  5
)
)

(define (game game-id-553) (:domain many-objects-room-v1)
(:setup
  (exists (?l3 - dodgeball ?b10 - doggie_bed)
    (and
      (and
        (exists (?b7 - tall_cylindrical_block)
          (and
            (exists (?w1 ?b - bridge_block)
              (and
                (and
                  (exists (?d - chair)
                    (exists (?c - hexagonal_bin ?d - bridge_block)
                      (and
                        (game-conserved
                          (and
                            (not
                              (in ?b ?w1)
                            )
                            (on ?b7 floor)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
      (and
        (exists (?o1 - curved_wooden_ramp)
          (exists (?h - game_object)
            (and
              (exists (?h - curved_wooden_ramp)
                (game-conserved
                  (equal_x_position ?b10 ?b10)
                )
              )
            )
          )
        )
        (and
          (not
            (and
              (forall (?d - dodgeball ?b8 - doggie_bed)
                (game-conserved
                  (not
                    (agent_holds ?b8)
                  )
                )
              )
              (game-conserved
                (adjacent ?b10 ?b10)
              )
              (game-optional
                (faces room_center ?b10)
              )
            )
          )
        )
      )
      (game-conserved
        (not
          (in ?b10 ?b10)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - game_object)
      (and
        (preference cubeBlockThrownToTopShelf
          (exists (?h - pyramid_block)
            (then
              (once (agent_holds ?h) )
              (once (touch ?b top_shelf) )
              (hold (on ?b ?h) )
            )
          )
        )
        (preference brownObjectMovedToRoomCenter
          (exists (?o2 - hexagonal_bin)
            (then
              (once (in ?o2 ?b) )
              (hold (agent_holds agent) )
              (once (and (and (on ?b ?b) (in_motion agent) ) (same_object ?b ?b) (touch ?o2 ?b) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* 0 (count-overlapping cubeBlockThrownToTopShelf:cylindrical_block:golfball) )
      (count-once-per-objects brownObjectMovedToRoomCenter:yellow)
    )
    (or
      (or
        (>= 12 (count-once-per-objects cubeBlockThrownToTopShelf:basketball:dodgeball) )
        (> (count brownObjectMovedToRoomCenter:triangle_block) (external-forall-maximize 7 ) )
      )
      (or
        (>= (- 3 )
          (+ (count cubeBlockThrownToTopShelf:dodgeball) 3 )
        )
        (>= (count-unique-positions brownObjectMovedToRoomCenter:bed) 2 )
      )
    )
  )
)
(:scoring
  8
)
)

(define (game game-id-554) (:domain many-objects-room-v1)
(:setup
  (not
    (forall (?f - cube_block)
      (exists (?x - (either pillow pencil rug))
        (and
          (game-optional
            (not
              (agent_holds ?x)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - teddy_bear)
      (and
        (preference blockKnockedFromBuildingInBin
          (exists (?b2 - curved_wooden_ramp)
            (then
              (hold-while (not (equal_x_position desktop room_center) ) (and (not (on top_shelf bed) ) (agent_holds ?b2) (agent_holds ?b2) ) (between ?b2 ?b2 ?b2) )
              (once (same_type ?b2 ?h) )
              (once (or (same_object ?b2 agent) (agent_holds ?b2) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= 3 (* 0.7 (count blockKnockedFromBuildingInBin:basketball) )
      )
      (>= (count blockKnockedFromBuildingInBin:side_table:yellow) (count-once-per-objects blockKnockedFromBuildingInBin:basketball) )
    )
    (>= (- (count-once-per-objects blockKnockedFromBuildingInBin:golfball:pink_dodgeball) )
      (count blockKnockedFromBuildingInBin:yellow_pyramid_block)
    )
  )
)
(:scoring
  (- (count blockKnockedFromBuildingInBin:dodgeball:beachball) )
)
)

(define (game game-id-555) (:domain many-objects-room-v1)
(:setup
  (exists (?o - ball)
    (game-conserved
      (forall (?ob - teddy_bear ?p - hexagonal_bin ?o - dodgeball)
        (not
          (agent_holds ?o)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference castleBuilt
      (exists (?l - hexagonal_bin)
        (at-end
          (and
            (on ?l ?l)
            (in_motion ?l)
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count castleBuilt:cube_block) (count-once-per-external-objects castleBuilt:doggie_bed:alarm_clock) )
)
(:scoring
  (count castleBuilt:dodgeball)
)
)

(define (game game-id-556) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (not
      (and
        (is_setup_object door)
        (object_orientation pink_dodgeball top_shelf)
      )
    )
  )
)
(:constraints
  (and
    (preference throwToBinFromOppositeWall
      (at-end
        (agent_holds door)
      )
    )
    (preference ballThrownFromRug
      (exists (?l3 - building ?d - cube_block ?o - game_object ?w - sliding_door)
        (then
          (once (on ?w ?w) )
          (once (not (agent_holds ?w) ) )
          (once (adjacent ?w ?w) )
        )
      )
    )
    (preference teddyBearHitsBall
      (exists (?l2 - cube_block)
        (then
          (once (adjacent ?l2 ?l2) )
          (once (agent_holds ?l2) )
          (hold (on desktop ?l2) )
        )
      )
    )
    (preference blockInTowerAtEnd
      (exists (?l2 - dodgeball)
        (then
          (once (is_setup_object agent) )
          (hold (not (agent_holds desk) ) )
          (hold (not (and (not (and (not (agent_holds ?l2) ) (agent_holds door) ) ) (same_color ?l2 ?l2) ) ) )
        )
      )
    )
    (preference cubeThrownToBin
      (exists (?d - dodgeball)
        (then
          (hold (not (in agent ?d) ) )
          (hold (not (adjacent ?d ?d) ) )
          (hold-for 10 (and (agent_holds ?d) (in_motion ?d) (in_motion ?d) (exists (?d - red_dodgeball) (agent_holds ?d) ) (not (agent_holds ?d) ) (not (touch ?d ?d) ) (in_motion bed) (and (not (and (toggled_on ?d) (exists (?l - triangular_ramp ?p1 - (either hexagonal_bin pyramid_block)) (in_motion ?p1) ) (agent_holds ?d) ) ) (forall (?g - hexagonal_bin) (and (agent_holds ?g) (and (or (and (not (and (touch ?g pink_dodgeball) (adjacent ?g floor) (agent_holds agent) (adjacent ?d rug) (in_motion ?d) (adjacent rug ?d) ) ) (agent_holds ?g) ) (agent_holds ?g) ) (agent_holds floor) ) ) ) (adjacent ?d bed) (and (and (and (in_motion ?d) (not (< 1 1) ) (agent_holds ?d) (not (and (above ?d ?d) (agent_holds back) ) ) (and (and (in ?d ?d) (not (agent_holds ?d) ) ) (> (distance bottom_shelf desk) 7) ) (not (same_color ?d desk) ) (and (on green_golfball ?d) (> (distance back ?d) (distance ?d ?d)) (and (= 1 0 (distance_side pink_dodgeball ?d ?d)) (not (agent_holds ?d) ) ) ) (adjacent ?d ?d) ) (in_motion ?d) ) (agent_holds agent) ) (> 1 1) (on ?d agent) ) ) )
        )
      )
    )
    (forall (?c - (either doggie_bed game_object))
      (and
        (preference ballThrownToBin
          (then
            (once (and (agent_holds ?c) (same_color ?c ?c) ) )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (+ 20 6 )
    (>= 100 3 )
  )
)
(:scoring
  2
)
)

(define (game game-id-557) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (not
      (not
        (exists (?r - (either alarm_clock blue_cube_block key_chain cylindrical_block bed dodgeball hexagonal_bin) ?l - block ?d - pyramid_block)
          (or
            (in_motion ?d)
            (agent_holds ?d)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockCorrectlyPicked
      (exists (?c - sliding_door ?c3 - (either hexagonal_bin pen) ?g - block)
        (then
          (once (= (distance ?g ?g) 2) )
          (once (touch ?g ?g) )
          (once (equal_z_position agent ?g) )
        )
      )
    )
  )
)
(:terminal
  (>= (count blockCorrectlyPicked:cube_block) (* (+ (count blockCorrectlyPicked:cube_block) 10 )
      (count blockCorrectlyPicked:pink_dodgeball:hexagonal_bin)
    )
  )
)
(:scoring
  2
)
)

(define (game game-id-558) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-conserved
      (agent_holds floor)
    )
    (forall (?h - dodgeball)
      (game-conserved
        (not
          (not
            (and
              (not
                (and
                  (in_motion bed)
                  (not
                    (not
                      (agent_holds ?h)
                    )
                  )
                )
              )
              (in_motion ?h)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToChair
      (exists (?p3 - building)
        (then
          (once (and (in_motion ?p3) (in ?p3 room_center) ) )
          (once (not (agent_holds ?p3) ) )
          (hold-while (in_motion ?p3) (same_color ?p3 ?p3) (on ?p3 ?p3) )
        )
      )
    )
  )
)
(:terminal
  (>= 8 5 )
)
(:scoring
  (* 20 3 )
)
)

(define (game game-id-559) (:domain few-objects-room-v1)
(:setup
  (forall (?t2 - wall ?b6 - color)
    (exists (?c1 - tall_cylindrical_block)
      (and
        (exists (?c - cube_block ?p - (either cellphone dodgeball))
          (game-conserved
            (adjacent ?p ?c1)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballHitsPillowWithoutTouchingBlock
      (exists (?r - doggie_bed)
        (then
          (hold (and (touch ?r ?r) (touch ?r ?r) ) )
          (once (not (in_motion ?r) ) )
          (once-measure (exists (?o - game_object) (not (and (and (agent_holds agent) (agent_holds bed) ) (adjacent ?r ?o) ) ) ) (distance agent ?r) )
        )
      )
    )
    (preference ballThrownFromBehindBlock
      (exists (?f - (either dodgeball cube_block laptop basketball))
        (then
          (once (and (in_motion ?f) (not (agent_holds ?f) ) ) )
          (once (and (in ?f ?f) (not (in ?f agent) ) ) )
          (once (not (or (object_orientation ?f ?f) (and (on ?f ?f) (same_object desk ?f) ) (and (adjacent ?f ?f) ) (and (exists (?b6 - hexagonal_bin) (not (and (on ?f ?f) (< 4 (distance ?f ?f)) ) ) ) (on ?f ?f) (on ?f ?f) ) ) ) )
        )
      )
    )
    (preference cubeBlockInBuilding
      (exists (?l3 - dodgeball ?d - dodgeball)
        (then
          (hold-while (agent_holds ?d) (not (on ?d ?d) ) )
          (once (< 1 1) )
          (hold-while (in_motion ?d) (same_color ?d ?d) )
          (hold (and (faces ?d ?d) (and (in_motion ?d) (adjacent ?d ?d) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (and
      (>= 10 (+ (* (* 2 (not 100 ) )
            (+ (total-time) (* (not 5 ) (count ballThrownFromBehindBlock:golfball) )
            )
          )
          (count ballThrownFromBehindBlock:block)
        )
      )
      (and
        (>= (count-longest ballThrownFromBehindBlock:dodgeball) (count cubeBlockInBuilding:pink_dodgeball) )
      )
    )
    (>= (count cubeBlockInBuilding:blue_pyramid_block) (count-once-per-objects dodgeballHitsPillowWithoutTouchingBlock:dodgeball) )
    (>= 7 (count cubeBlockInBuilding:pink_dodgeball) )
  )
)
(:scoring
  (* (external-forall-minimize 18 ) (+ (* (count dodgeballHitsPillowWithoutTouchingBlock:cube_block:pink) (+ 6 (total-time) )
      )
      (count-once-per-objects dodgeballHitsPillowWithoutTouchingBlock:dodgeball:book)
    )
  )
)
)

(define (game game-id-560) (:domain medium-objects-room-v1)
(:setup
  (forall (?tb - (either pen golfball wall))
    (and
      (and
        (forall (?b - (either dodgeball hexagonal_bin))
          (exists (?b - dodgeball ?d - hexagonal_bin)
            (exists (?c2 - ball)
              (and
                (and
                  (game-conserved
                    (touch ?c2 rug)
                  )
                  (forall (?c - wall)
                    (game-conserved
                      (agent_holds ?c)
                    )
                  )
                  (exists (?b7 - ball)
                    (exists (?h ?b8 ?r ?c ?b9 - hexagonal_bin ?h ?d ?p ?b ?t1 ?l3 - ball ?d - doggie_bed)
                      (exists (?h - game_object)
                        (exists (?tb - desk_shelf)
                          (game-conserved
                            (not
                              (not
                                (and
                                  (not
                                    (on desk ?c2)
                                  )
                                  (and
                                    (in_motion ?tb)
                                    (on ?h ?b)
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballOnBedAtEnd
      (exists (?w - red_dodgeball)
        (then
          (hold (adjacent ?w ?w) )
          (once (in ?w ?w) )
          (hold (and (in_motion ?w) (not (on ?w ?w) ) (touch ?w ?w) (and (in_motion ?w) (in_motion ?w) ) (on ?w ?w) (and (and (and (and (exists (?c1 - hexagonal_bin) (agent_holds ?c1) ) (same_object ?w agent) ) (in_motion ?w) (on ?w ?w) ) (not (not (agent_holds ?w) ) ) ) (agent_holds ?w) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (and
      (>= 1 (* (count ballOnBedAtEnd:green) 4 )
      )
      (>= 1 (count ballOnBedAtEnd:doggie_bed) )
    )
    (> 5 5 )
    (>= 1 5 )
  )
)
(:scoring
  5
)
)

(define (game game-id-561) (:domain medium-objects-room-v1)
(:setup
  (forall (?c6 ?c - hexagonal_bin)
    (exists (?l2 - hexagonal_bin ?b4 - hexagonal_bin)
      (and
        (forall (?g - cube_block)
          (forall (?h - hexagonal_bin ?t - hexagonal_bin ?b - red_dodgeball)
            (exists (?d - cube_block ?ob - ball)
              (not
                (and
                  (game-conserved
                    (agent_holds ?ob)
                  )
                  (game-conserved
                    (exists (?o - hexagonal_bin)
                      (object_orientation ?c6 ?c)
                    )
                  )
                  (forall (?b - game_object ?d - building)
                    (game-optional
                      (on ?b ?c)
                    )
                  )
                )
              )
            )
          )
        )
        (game-conserved
          (adjacent ?c agent)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectThrownFromRug
      (exists (?b - block)
        (then
          (once (on ?b ?b) )
          (once (agent_holds rug) )
          (hold-while (and (and (same_color ?b front) (same_color ?b ?b) (and (not (and (on ?b ?b) (agent_holds ?b) (adjacent_side ?b floor ?b rug) ) ) (< (x_position bed) 1) (agent_holds ?b) (agent_holds ?b) ) ) (in ?b bed) ) (on ?b ?b) (not (on rug ?b) ) (same_type ?b ?b) )
        )
      )
    )
    (forall (?b8 ?p - (either cube_block golfball alarm_clock) ?l1 - hexagonal_bin)
      (and
        (preference dodgeballFromBlockToBin
          (exists (?h ?p3 ?c ?g ?l ?h - hexagonal_bin)
            (then
              (once (and (and (on ?l1 ?h) (and (not (not (not (same_type ?p3 ?l) ) ) ) (between agent ?c ?h) ) ) (in ?l ?c) (in_motion desk) (and (< 1 (distance ?c ?l1)) (and (in agent ?l) (and (not (not (and (and (not (and (and (in ?g ?g) (exists (?l - cube_block ?c - green_triangular_ramp ?t - curved_wooden_ramp) (adjacent ?h ?p3) ) (adjacent_side ?l1 ?g ?c ?g) ) ) ) (exists (?l - hexagonal_bin) (and (on ?p3 ?p3) (in_motion pink) (< 1 1) ) ) ) (on ?g ?p3) ) ) ) (game_over ) ) ) (not (and (agent_holds ?h) (and (in_motion ?l) (not (same_object agent door) ) ) ) ) (and (and (and (touch right ?h) (in_motion ?g) ) (in ?l1 desk) (adjacent ?g ?h) ) (agent_holds ?p3) (agent_holds bed) ) ) ) )
              (hold (and (and (on ?l ?l) ) (and (agent_holds ?h) (agent_holds bed) ) ) )
              (hold (and (and (in bed ?g) (not (and (same_color agent door) (on ?p3 bed) ) ) ) (on ?c ?p3) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (count-total dodgeballFromBlockToBin:pink) (* (<= (* (* (>= (count-once-per-objects objectThrownFromRug:dodgeball) (* (* 3 3 )
                    0
                  )
                )
                (count-shortest objectThrownFromRug:beachball)
                2
                (> (count dodgeballFromBlockToBin:blue_pyramid_block:alarm_clock) (count-once-per-objects dodgeballFromBlockToBin:pink) )
                (total-time)
                (+ (total-score) (* (* (+ (total-score) 1 )
                      100
                    )
                    (count-unique-positions objectThrownFromRug:hexagonal_bin:green)
                    5
                    (count-once-per-objects dodgeballFromBlockToBin:purple)
                    2
                    (count objectThrownFromRug:purple)
                    (count-once-per-objects dodgeballFromBlockToBin:purple:doggie_bed)
                    5
                    10
                    10
                    (external-forall-maximize
                      (+ 3 3 )
                    )
                    (* (count-increasing-measure dodgeballFromBlockToBin:pink:alarm_clock) 5 )
                  )
                  (total-score)
                  5
                )
              )
              (count dodgeballFromBlockToBin:basketball)
            )
            2
          )
        )
      )
      (>= (count objectThrownFromRug:blue_pyramid_block:pink_dodgeball) (* (count-measure objectThrownFromRug:basketball) 3 )
      )
    )
    (> (- (+ 6 (total-time) )
      )
      (total-time)
    )
    (>= (* (count-once-per-objects objectThrownFromRug:basketball) 3 )
      (count objectThrownFromRug:hexagonal_bin)
    )
  )
)
(:scoring
  (count objectThrownFromRug:dodgeball)
)
)

(define (game game-id-562) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?r - (either pink top_drawer))
      (exists (?o - game_object)
        (forall (?d - game_object ?p - chair ?r - chair)
          (forall (?d - block ?d - (either blue_cube_block))
            (and
              (exists (?g - hexagonal_bin ?c1 - building)
                (game-conserved
                  (adjacent ?o ?d)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - teddy_bear)
      (and
        (preference cubeBlockThrowAttempt
          (exists (?o4 - game_object ?l - building)
            (then
              (hold (same_object ?h ?h) )
              (once (in bed rug) )
              (once (exists (?p1 - building) (not (agent_holds desk) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (count cubeBlockThrowAttempt:beachball) (count cubeBlockThrowAttempt:basketball) )
)
(:scoring
  (count-once-per-external-objects cubeBlockThrowAttempt:top_drawer)
)
)

(define (game game-id-563) (:domain many-objects-room-v1)
(:setup
  (exists (?c5 - blue_cube_block ?b - (either golfball doggie_bed))
    (forall (?b1 - pyramid_block ?c2 - (either pillow pen pen))
      (exists (?o ?h - teddy_bear)
        (game-conserved
          (< 1 (distance ?c2 ?c2))
        )
      )
    )
  )
)
(:constraints
  (and
    (preference cubeBlockFromBedToShelf
      (exists (?p - hexagonal_bin ?b5 - game_object ?w1 - cube_block)
        (at-end
          (in_motion ?w1)
        )
      )
    )
  )
)
(:terminal
  (= (count cubeBlockFromBedToShelf:wall) 6 )
)
(:scoring
  5
)
)

(define (game game-id-564) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds yellow)
  )
)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?p - dodgeball ?s - (either golfball blue_cube_block) ?t - (either golfball key_chain))
        (at-end
          (not
            (same_object door ?t)
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once throwBallToBin:pink:dodgeball:pink_dodgeball) 100 )
)
(:scoring
  (count-once-per-objects throwBallToBin:basketball:pink)
)
)

(define (game game-id-565) (:domain many-objects-room-v1)
(:setup
  (exists (?h - (either dodgeball laptop mug))
    (game-conserved
      (in_motion desk)
    )
  )
)
(:constraints
  (and
    (preference throwKnocksBlock
      (exists (?h - hexagonal_bin ?b - dodgeball)
        (then
          (once (on ?b rug) )
          (once (or (forall (?b - red_dodgeball) (not (not (same_type ?b ?b) ) ) ) ) )
          (hold (in_motion ?b) )
        )
      )
    )
  )
)
(:terminal
  (< 2 (count throwKnocksBlock:dodgeball:beachball) )
)
(:scoring
  (+ (* (count-once-per-objects throwKnocksBlock:orange) (count throwKnocksBlock:pink) )
    (count-longest throwKnocksBlock:beachball)
  )
)
)

(define (game game-id-566) (:domain medium-objects-room-v1)
(:setup
  (exists (?o3 - doggie_bed ?c - game_object)
    (exists (?b1 - desktop)
      (game-optional
        (agent_holds ?c)
      )
    )
  )
)
(:constraints
  (and
    (forall (?s - ball)
      (and
        (preference ballThrownFromBehindBlock
          (exists (?d - ball)
            (then
              (once (and (and (and (agent_holds ?d) (and (agent_holds ?d) (not (object_orientation west_wall ?s) ) ) ) (in_motion ?d) (in_motion ?s) (equal_x_position ?d ?s) ) (and (in_motion ?d) (in_motion ?s) (exists (?l2 - teddy_bear) (not (toggled_on ?d) ) ) ) (game_over ) ) )
            )
          )
        )
        (preference throwToDrawerOrBin
          (exists (?b3 - building ?t - (either cylindrical_block book))
            (then
              (hold (not (same_type ?s bed) ) )
              (once (or (agent_holds ?s) (on ?t ?t) ) )
              (once (agent_holds ?t) )
            )
          )
        )
      )
    )
    (preference cubeThrownToBin
      (exists (?db - (either desktop cube_block golfball) ?l4 - block ?w - hexagonal_bin)
        (then
          (hold (and (adjacent_side ?w ?w upright) (on ?w ?w) (not (and (same_type ?w ?w) (on ?w agent) ) ) ) )
          (once (agent_holds ?w) )
          (once (exists (?d - building) (not (agent_holds ?d) ) ) )
        )
      )
    )
    (forall (?d - teddy_bear ?b - hexagonal_bin)
      (and
        (preference nonBlockPlacedInBuilding
          (then
            (once (< (distance top_drawer ?b) (distance floor ?b)) )
          )
        )
        (preference pyramidBlockAtopTowerAtEnd
          (exists (?d - beachball)
            (then
              (once (and (in_motion ?d) (>= 1 (distance ?b ?b)) ) )
              (once (adjacent_side ?d agent ?d) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (count ballThrownFromBehindBlock:blue_pyramid_block:pink:pink) )
)
(:scoring
  (- (count pyramidBlockAtopTowerAtEnd:brown:dodgeball) )
)
)

(define (game game-id-567) (:domain medium-objects-room-v1)
(:setup
  (exists (?p3 - ball)
    (and
      (forall (?b - red_dodgeball)
        (and
          (and
            (game-conserved
              (toggled_on ?p3)
            )
            (game-conserved
              (agent_holds room_center)
            )
            (forall (?l4 - hexagonal_bin)
              (game-conserved
                (not
                  (agent_holds ?b)
                )
              )
            )
          )
          (forall (?b4 - (either key_chain laptop))
            (forall (?h - (either mug bridge_block))
              (game-optional
                (agent_holds ?b4)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o - dodgeball ?b ?b - hexagonal_bin)
      (and
        (preference throwToBinFromDistance
          (exists (?o - color)
            (at-end
              (and
                (in_motion ?b)
                (on ?b ?b)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count throwToBinFromDistance:golfball:dodgeball:beachball) 6 )
)
(:scoring
  5
)
)

(define (game game-id-568) (:domain few-objects-room-v1)
(:setup
  (forall (?b10 - dodgeball)
    (game-optional
      (< (distance ?b10 ?b10) 1)
    )
  )
)
(:constraints
  (and
    (preference bookOnDeskShelf
      (exists (?l - blinds)
        (then
          (hold (in ?l ?l) )
          (once (agent_holds ?l) )
        )
      )
    )
  )
)
(:terminal
  (< (* (+ 3 0 (count bookOnDeskShelf:golfball:yellow_cube_block) (count-once-per-objects bookOnDeskShelf:dodgeball) (* (count-once-per-objects bookOnDeskShelf:yellow) 5 3 (- (count bookOnDeskShelf:dodgeball) )
        )
        (+ 9 (= (count bookOnDeskShelf) (total-score) (* 0 (count bookOnDeskShelf:red) )
          )
        )
      )
      (count-once-per-objects bookOnDeskShelf:dodgeball)
    )
    2
  )
)
(:scoring
  (count-once-per-objects bookOnDeskShelf:hexagonal_bin:beachball:blue_dodgeball)
)
)

(define (game game-id-569) (:domain many-objects-room-v1)
(:setup
  (exists (?d - hexagonal_bin)
    (forall (?h - building ?c - dodgeball)
      (game-conserved
        (and
          (on room_center ?d)
          (not
            (in ?c ?d)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?f - (either mug alarm_clock))
      (and
        (preference blockKnockedFromBuildingInBin
          (exists (?b - game_object)
            (then
              (hold (same_color ?f ?f) )
              (once (adjacent_side front ?b ?b ?f) )
              (once (exists (?d ?tb - red_pyramid_block ?b - (either golfball beachball triangular_ramp)) (exists (?c1 - golfball ?h - teddy_bear ?o1 - cube_block) (not (agent_holds ?b) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (count blockKnockedFromBuildingInBin) )
)
(:scoring
  (count blockKnockedFromBuildingInBin:dodgeball)
)
)

(define (game game-id-570) (:domain medium-objects-room-v1)
(:setup
  (exists (?r - dodgeball)
    (and
      (game-conserved
        (not
          (agent_holds ?r)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballToBinFromBed
      (exists (?b2 - dodgeball ?d - dodgeball ?c2 - curved_wooden_ramp)
        (then
          (once (equal_z_position ?c2 ?c2) )
          (once (in_motion upright) )
          (once (in_motion ?c2) )
        )
      )
    )
  )
)
(:terminal
  (>= (count ballToBinFromBed:doggie_bed:basketball) (* (count-once-per-objects ballToBinFromBed:blue_dodgeball) (+ (count-once-per-objects ballToBinFromBed:basketball) 10 )
    )
  )
)
(:scoring
  (count-once-per-objects ballToBinFromBed:book)
)
)

(define (game game-id-571) (:domain few-objects-room-v1)
(:setup
  (exists (?b - triangular_ramp)
    (game-conserved
      (in_motion ?b)
    )
  )
)
(:constraints
  (and
    (forall (?d - dodgeball)
      (and
        (preference ballNeverThrown
          (then
            (once (in ?d ?d) )
            (once (not (agent_holds ?d) ) )
            (once (same_object ?d ?d) )
          )
        )
        (preference dropAttempt
          (exists (?h - (either doggie_bed golfball))
            (then
              (once (and (in_motion ?h) (or (on ?h ?h) ) ) )
              (hold (and (> 2 (x_position ?h)) (= 2 (x_position ?d)) ) )
              (hold-while (in_motion agent) (and (same_type ?d desk) (agent_holds ?h) (and (and (in_motion ?d) (rug_color_under ?d ?d) (and (object_orientation ?d ?h) (and (rug_color_under ?d block) (not (agent_holds agent) ) (in_motion ?h) (and (same_type ?d blinds) (in_motion ?d) (adjacent ?h ?h) ) ) (and (on front ?h) (and (and (in front_left_corner agent) (in ?d ?d) (agent_holds ?d) (and (not (exists (?g - triangular_ramp) (and (same_color ?d ?h) (adjacent ?d ?h) ) ) ) (and (open ?d) (agent_holds ?h) ) ) ) (not (in ?d desk) ) (in_motion agent) ) (in_motion ?d) ) (in_motion ?d) ) ) (and (between ?h ?d ?d) (not (and (and (same_object ?d ?d) (above ?d ?h) ) (and (in ?h ?d) (on pink ?d) (not (and (not (not (not (not (and (in_motion ?h) (agent_holds ?h) ) ) ) ) ) (exists (?t1 - dodgeball) (is_setup_object ?h) ) (not (agent_holds blue) ) ) ) ) ) ) ) ) (in_motion ?d) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count ballNeverThrown:pink) (count ballNeverThrown:dodgeball) )
)
(:scoring
  (>= (count-same-positions ballNeverThrown:golfball:basketball) (* 5 4 )
  )
)
)

(define (game game-id-572) (:domain medium-objects-room-v1)
(:setup
  (not
    (and
      (exists (?t - doggie_bed ?o - (either dodgeball side_table wall))
        (exists (?h - cube_block)
          (game-conserved
            (same_color ?h ?h)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttemptFromDoor
      (exists (?t - hexagonal_bin ?o3 - pillow)
        (then
          (hold (in brown ?o3) )
          (once (and (in_motion ?o3) (not (and (and (open ?o3) ) ) ) (not (and (not (not (agent_holds ?o3) ) ) ) ) ) )
          (once (in_motion ?o3) )
        )
      )
    )
    (forall (?b4 - yellow_pyramid_block)
      (and
        (preference objectMoved
          (exists (?c - doggie_bed)
            (at-end
              (in_motion agent)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (* (count-once-per-external-objects throwAttemptFromDoor:blue_pyramid_block:red) (count objectMoved:bed:blue_pyramid_block) )
  )
)
(:scoring
  (count-once throwAttemptFromDoor:pyramid_block)
)
)

(define (game game-id-573) (:domain many-objects-room-v1)
(:setup
  (and
    (or
      (and
        (forall (?t - ball ?h - building ?b - (either dodgeball alarm_clock) ?w - book)
          (or
            (game-conserved
              (and
                (in_motion ?w)
                (in_motion agent)
              )
            )
            (or
              (exists (?h - shelf ?b1 - hexagonal_bin ?r2 - doggie_bed)
                (game-conserved
                  (agent_holds ?r2)
                )
              )
              (and
                (and
                  (game-optional
                    (not
                      (not
                        (and
                          (agent_holds ?w)
                          (and
                            (faces blue bed)
                            (and
                              (on agent ?w)
                            )
                          )
                        )
                      )
                    )
                  )
                  (exists (?o - chair)
                    (and
                      (game-conserved
                        (not
                          (on ?o ?o)
                        )
                      )
                    )
                  )
                  (game-conserved
                    (on ?w ?w)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blueObjectMovedToRoomCenter
      (exists (?c1 - ball)
        (then
          (once (adjacent ?c1 blinds) )
          (hold-while (and (agent_holds ?c1) (in_motion desk) ) (adjacent ?c1 floor) (agent_holds ?c1) )
          (once (and (on ?c1 ?c1) (agent_holds ?c1) ) )
        )
      )
    )
    (preference throwMissesBin
      (exists (?ob - doggie_bed)
        (then
          (once (and (and (and (or (same_object bed ?ob) (not (on front agent) ) ) (on bed agent) ) (not (in_motion ?ob) ) (and (not (in_motion ?ob) ) (equal_x_position ?ob desk) ) ) (< 1 (distance ?ob ?ob)) ) )
          (once (and (and (same_object ?ob ?ob) (and (above agent floor) (< (distance ?ob desk) 1) ) ) (not (in_motion ?ob) ) ) )
          (once (and (and (in_motion ?ob) (and (and (not (same_object ?ob ?ob) ) (not (< 1 (building_size ?ob)) ) ) (in_motion ?ob) ) (in_motion back) (rug_color_under room_center ?ob) ) (adjacent_side ?ob ?ob ?ob) ) )
        )
      )
    )
    (forall (?p - game_object)
      (and
        (preference dropAttempt
          (exists (?p - game_object)
            (then
              (hold (rug_color_under ?p room_center) )
              (hold-to-end (object_orientation ?p desk) )
            )
          )
        )
      )
    )
    (forall (?h - hexagonal_bin ?h - (either key_chain laptop) ?b - dodgeball)
      (and
        (preference ballThrownToChair
          (exists (?d ?bl - game_object)
            (then
              (forall-sequence (?c - dodgeball ?r1 - doggie_bed)
                (then
                  (once (not (agent_holds ?bl) ) )
                  (once (on ?b ?r1) )
                  (once (< 1 (distance ?b ?b)) )
                )
              )
              (once (in_motion desk) )
              (hold (in_motion ?d) )
            )
          )
        )
      )
    )
    (preference cubeBlockInBuilding
      (exists (?c - hexagonal_bin)
        (then
          (once (game_start ) )
          (once (not (adjacent brown ?c) ) )
          (once (and (and (agent_holds pink) (object_orientation ?c ?c) ) (in_motion ?c) (not (agent_holds ?c) ) ) )
        )
      )
    )
    (preference gameObjectToBin
      (exists (?w1 - block)
        (then
          (once (agent_holds ?w1) )
          (once (on room_center ?w1) )
          (hold (< 2 (distance ?w1 ?w1)) )
        )
      )
    )
  )
)
(:terminal
  (and
    (< (* 8 (not (+ 50 10 (count-once-per-objects dropAttempt:top_drawer:triangle_block) (count blueObjectMovedToRoomCenter:yellow) (+ 3 (count gameObjectToBin:green) (+ (count-once-per-external-objects cubeBlockInBuilding:red) (total-score) (count blueObjectMovedToRoomCenter:pink) 100 (* (count-once dropAttempt:yellow:basketball) (+ (/ (* (count throwMissesBin) (count-overlapping dropAttempt:basketball) )
                      3
                    )
                    5
                  )
                )
                (count cubeBlockInBuilding:golfball)
              )
              (count cubeBlockInBuilding:golfball)
              (* (* (* (count-once-per-objects dropAttempt:pink:purple) 1 )
                  4
                )
                (count dropAttempt:blue_dodgeball)
              )
              5
            )
            4
          )
        )
      )
      3
    )
  )
)
(:scoring
  (+ 1 10 )
)
)

(define (game game-id-574) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?c - teddy_bear)
      (or
        (game-optional
          (not
            (not
              (is_setup_object desk)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference woodenBlockMovedFromRugToDesk
      (exists (?bl - (either dodgeball))
        (then
          (once (not (in_motion agent) ) )
          (once (agent_holds ?bl) )
          (once (and (in ?bl ?bl) (not (between ?bl room_center ?bl) ) ) )
        )
      )
    )
  )
)
(:terminal
  (> 2 (count-once woodenBlockMovedFromRugToDesk:orange) )
)
(:scoring
  (count-once-per-external-objects woodenBlockMovedFromRugToDesk:pink_dodgeball)
)
)

(define (game game-id-575) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (exists (?r - (either flat_block))
        (exists (?b - hexagonal_bin)
          (and
            (exists (?t - hexagonal_bin)
              (exists (?w - (either desktop cylindrical_block) ?s - dodgeball)
                (game-optional
                  (agent_holds ?s)
                )
              )
            )
          )
        )
      )
    )
    (exists (?b - curved_wooden_ramp)
      (game-conserved
        (and
          (and
            (not
              (exists (?r - hexagonal_bin ?h - hexagonal_bin ?d - hexagonal_bin)
                (agent_holds sideways)
              )
            )
            (and
              (above ?b ?b)
              (adjacent_side ?b ?b ?b ?b)
            )
          )
          (and
            (and
              (and
                (not
                  (agent_holds ?b)
                )
                (not
                  (adjacent agent ?b)
                )
              )
              (in_motion floor)
            )
            (open desk)
          )
          (exists (?p - dodgeball)
            (exists (?c1 - bridge_block ?d - (either blue_cube_block alarm_clock desktop wall dodgeball alarm_clock chair))
              (agent_holds ?d)
            )
          )
        )
      )
    )
    (exists (?d - pillow)
      (game-conserved
        (in ?d ?d)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownIntoTarget
      (exists (?t1 - hexagonal_bin ?b1 - building)
        (then
          (once (in ?b1 rug) )
          (hold (in_motion ?b1) )
          (once (in_motion ?b1) )
        )
      )
    )
  )
)
(:terminal
  (>= (count ballThrownIntoTarget:golfball:hexagonal_bin) (* (* (external-forall-maximize (* (+ 10 5 )
            (count-once ballThrownIntoTarget:yellow)
          )
        )
        (- (* (not (* (* (+ 5 (* (- (count ballThrownIntoTarget:golfball) )
                      (count ballThrownIntoTarget:cube_block:blue_cube_block)
                    )
                    (* (count ballThrownIntoTarget:beachball) 2 (external-forall-minimize (* 5 10 )
                      )
                    )
                  )
                  (count ballThrownIntoTarget:bed)
                  (+ (count-once-per-external-objects ballThrownIntoTarget:orange) (count-increasing-measure ballThrownIntoTarget:golfball) )
                  (* (* (count ballThrownIntoTarget:book) (count-once-per-external-objects ballThrownIntoTarget:blue_dodgeball:pink) )
                    (* (- (+ (count-once-per-objects ballThrownIntoTarget:beachball) (count-once ballThrownIntoTarget:doggie_bed:blue_pyramid_block) )
                      )
                      2
                    )
                  )
                )
                (count-once-per-objects ballThrownIntoTarget:dodgeball)
              )
            )
            (count-once-per-objects ballThrownIntoTarget:yellow_cube_block:pink)
          )
        )
      )
      (- 6 )
    )
  )
)
(:scoring
  (+ 5 (+ (count-longest ballThrownIntoTarget:blue_pyramid_block:alarm_clock) (count ballThrownIntoTarget:green) )
    (count ballThrownIntoTarget:golfball)
  )
)
)

(define (game game-id-576) (:domain medium-objects-room-v1)
(:setup
  (forall (?o5 - doggie_bed)
    (and
      (forall (?d - cube_block)
        (and
          (game-conserved
            (opposite ?d ?d)
          )
          (game-conserved
            (on ?d ?d)
          )
          (game-conserved
            (not
              (in_motion ?o5)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockThrowAttempt
      (exists (?b8 - cube_block)
        (then
          (once (on ?b8 ?b8) )
          (hold (in_motion ?b8) )
          (once (game_start ) )
        )
      )
    )
    (preference castleBuilt
      (exists (?b - block ?o4 - dodgeball)
        (at-end
          (is_setup_object ?o4)
        )
      )
    )
    (forall (?d - building)
      (and
        (preference beachballBouncedOffRamp
          (exists (?d ?o - doggie_bed)
            (at-end
              (toggled_on bed)
            )
          )
        )
        (preference cubeBlockInBuilding
          (exists (?p2 - curved_wooden_ramp ?s - ball ?o2 - dodgeball)
            (then
              (hold (in_motion bed) )
              (once (on ?o2 ?d) )
              (hold (on ?d agent) )
              (hold (and (and (and (not (faces bed agent) ) (not (not (not (touch ?o2 ?d) ) ) ) ) (agent_holds pink_dodgeball) (agent_holds rug) (on ?o2 ?o2) (and (rug_color_under ?o2 ?d) (in_motion ?o2) ) (adjacent ?d ?d) ) (on ?o2 ?d) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (+ 10 (- (count cubeBlockInBuilding:dodgeball) )
    )
  )
)
(:scoring
  (external-forall-maximize
    100
  )
)
)

(define (game game-id-577) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?b - hexagonal_bin ?g - ball)
      (and
        (exists (?o1 - ball)
          (exists (?h - hexagonal_bin)
            (game-conserved
              (in_motion ?o1)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?b - hexagonal_bin)
        (then
          (once (adjacent floor ?b) )
          (once (<= (distance ?b ?b) 1) )
          (hold (<= 9 (distance ?b ?b)) )
        )
      )
    )
    (preference dodgeballFromDeskToTarget
      (exists (?b - hexagonal_bin)
        (then
          (once (in_motion ?b) )
          (once (agent_holds ?b) )
          (hold-while (not (not (agent_holds ?b) ) ) (not (not (and (in_motion ?b) (same_type ?b ?b) (in_motion ?b) (not (adjacent ?b ?b) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (> (count-once-per-objects throwAttempt:basketball:green) (external-forall-maximize (count throwAttempt) ) )
)
(:scoring
  (count-unique-positions dodgeballFromDeskToTarget:yellow)
)
)

(define (game game-id-578) (:domain few-objects-room-v1)
(:setup
  (forall (?r - curved_wooden_ramp ?b8 - pyramid_block)
    (and
      (forall (?h - hexagonal_bin ?b5 - hexagonal_bin)
        (exists (?d - green_triangular_ramp ?g - ball)
          (and
            (game-conserved
              (touch ?b8 bed)
            )
            (and
              (and
                (and
                  (or
                    (game-conserved
                      (same_color ?b8 ?b8)
                    )
                    (game-optional
                      (on ?b5 ?b5)
                    )
                    (and
                      (game-conserved
                        (not
                          (exists (?d - block ?p3 - hexagonal_bin)
                            (touch ?p3 ?g)
                          )
                        )
                      )
                      (or
                        (and
                          (forall (?c - block)
                            (game-optional
                              (< 4 7)
                            )
                          )
                        )
                        (forall (?l1 - building ?bl - shelf)
                          (game-optional
                            (not
                              (equal_x_position door ?g)
                            )
                          )
                        )
                      )
                      (forall (?g - shelf)
                        (and
                          (game-conserved
                            (not
                              (not
                                (and
                                  (not
                                    (exists (?c - chair)
                                      (agent_holds ?b5)
                                    )
                                  )
                                  (on ?b8 side_table)
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
              (game-optional
                (agent_holds ?b5)
              )
            )
            (and
              (and
                (game-optional
                  (adjacent ?g ?g)
                )
              )
              (game-optional
                (not
                  (agent_holds ?g)
                )
              )
              (and
                (exists (?c ?o2 - (either hexagonal_bin cube_block dodgeball))
                  (game-conserved
                    (< 2 (distance ?b8 ?o2))
                  )
                )
                (game-optional
                  (on desk ?b5)
                )
                (game-conserved
                  (agent_holds ?b5)
                )
              )
              (exists (?b - cube_block)
                (forall (?b - dodgeball ?b - flat_block)
                  (game-optional
                    (not
                      (agent_holds ?b5)
                    )
                  )
                )
              )
              (game-optional
                (on ?b8 ?g)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballBouncesOnceToDoggieBed
      (exists (?p3 - ball)
        (then
          (hold-while (agent_holds ?p3) (on ?p3 ?p3) )
          (once (same_color ?p3 ?p3) )
          (hold (not (on door ?p3) ) )
          (hold (and (on upright agent) (in_motion ?p3) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 300 (count-longest dodgeballBouncesOnceToDoggieBed:red) )
)
(:scoring
  (* (count-once-per-external-objects dodgeballBouncesOnceToDoggieBed:tall_cylindrical_block) (count-once-per-objects dodgeballBouncesOnceToDoggieBed:dodgeball) )
)
)

(define (game game-id-579) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds room_center)
  )
)
(:constraints
  (and
    (preference cubeThrownToBin
      (exists (?b - game_object ?s - hexagonal_bin ?b1 - desk_shelf)
        (then
          (once (adjacent ?b1 ?b1) )
          (once (in ?b1 ?b1) )
          (once (not (agent_holds ?b1) ) )
        )
      )
    )
  )
)
(:terminal
  (> (+ (external-forall-maximize 3 ) (external-forall-maximize (+ (total-time) (* (+ (count cubeThrownToBin:wall) (+ (count-once-per-objects cubeThrownToBin:basketball:blue_dodgeball) 3 )
            )
            3
          )
        )
      )
      (* (+ 3 2 )
        (* (count-once-per-objects cubeThrownToBin:golfball:yellow) 1 )
      )
    )
    (+ (+ 7 (count-once-per-objects cubeThrownToBin:yellow:brown) )
      (+ (* (+ 30 2 )
          (external-forall-maximize
            4
          )
        )
        (count-once-per-objects cubeThrownToBin:green)
      )
    )
  )
)
(:scoring
  (* (+ 9 6 )
    (count-unique-positions cubeThrownToBin:pink_dodgeball)
  )
)
)

(define (game game-id-580) (:domain medium-objects-room-v1)
(:setup
  (exists (?h - block)
    (game-conserved
      (and
        (and
          (adjacent ?h ?h)
          (in ?h ?h)
          (not
            (on agent ?h)
          )
          (same_color ?h ?h)
        )
        (agent_holds ?h)
      )
    )
  )
)
(:constraints
  (and
    (preference ballKnocksTeddy
      (exists (?b - hexagonal_bin)
        (at-end
          (in_motion ?b)
        )
      )
    )
    (forall (?o - block)
      (and
        (preference towerFallsWhileBuilding
          (exists (?c2 - (either chair cube_block) ?l - (either dodgeball flat_block bridge_block))
            (then
              (hold (and (exists (?o2 - shelf ?t - chair ?l1 - hexagonal_bin) (agent_holds ?o) ) (< 7 (distance ?l ?l)) ) )
              (once (in_motion ?l) )
              (hold-while (and (and (same_object ?o ?l) (on ?o desk) ) (not (and (in_motion ?l) (in tan ?l) (object_orientation pink_dodgeball pink_dodgeball) ) ) ) (agent_holds ?l) )
            )
          )
        )
        (preference ballRolledOnRampToRug
          (exists (?p - ball)
            (then
              (hold (agent_holds ?p) )
              (once (adjacent ?o door) )
              (once (in_motion ?o) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= (count-once-per-objects ballKnocksTeddy:dodgeball:basketball) 2 )
)
(:scoring
  (count-once-per-objects towerFallsWhileBuilding:blue_cube_block)
)
)

(define (game game-id-581) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (forall (?b1 - doggie_bed)
        (forall (?h ?o - hexagonal_bin ?d1 - game_object)
          (forall (?o3 - teddy_bear)
            (game-conserved
              (adjacent ?o3 ?b1)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallFromOtherBallToBin
      (exists (?b - ball ?ob - chair)
        (at-end
          (not
            (not
              (in_motion ?ob)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 2 (count-once-per-objects throwBallFromOtherBallToBin:dodgeball) )
    (>= 5 5 )
    (> (count-once-per-objects throwBallFromOtherBallToBin:dodgeball:hexagonal_bin) (+ 1 (count throwBallFromOtherBallToBin:hexagonal_bin) )
    )
    (>= (* (count-once-per-objects throwBallFromOtherBallToBin:cube_block) (+ (- (* (count throwBallFromOtherBallToBin:yellow:cube_block:yellow) (* 1 (+ 3 10 )
                (* (count throwBallFromOtherBallToBin:alarm_clock:pink:basketball) 180 (count-same-positions throwBallFromOtherBallToBin:golfball) )
              )
              (count throwBallFromOtherBallToBin:orange)
              (external-forall-minimize
                (external-forall-maximize
                  (count-once throwBallFromOtherBallToBin:basketball)
                )
              )
              0
              (= 6 (count throwBallFromOtherBallToBin:doggie_bed) )
              (count throwBallFromOtherBallToBin:dodgeball:orange)
              (* (count throwBallFromOtherBallToBin:dodgeball) (and (count throwBallFromOtherBallToBin:red:triangle_block) ) )
              (-
                (external-forall-maximize
                  (* (count-once-per-objects throwBallFromOtherBallToBin:hexagonal_bin) 5 )
                )
                6
              )
              (count throwBallFromOtherBallToBin:yellow)
              (count-once-per-objects throwBallFromOtherBallToBin:green)
              (count-once-per-objects throwBallFromOtherBallToBin:orange)
            )
          )
          (count-once-per-objects throwBallFromOtherBallToBin:dodgeball)
        )
        3
      )
      8
    )
  )
)
(:scoring
  6
)
)

(define (game game-id-582) (:domain medium-objects-room-v1)
(:setup
  (exists (?b - cube_block)
    (and
      (game-conserved
        (not
          (not
            (not
              (in_motion ?b)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToBinFromOppositeWall
      (exists (?h - triangular_ramp ?w1 - shelf ?f - dodgeball)
        (then
          (once (not (not (agent_holds ?f) ) ) )
          (once (on room_center agent) )
          (hold (on rug ?f) )
        )
      )
    )
  )
)
(:terminal
  (>= 6 180 )
)
(:scoring
  (* 15 4 )
)
)

(define (game game-id-583) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-conserved
      (agent_holds bed)
    )
    (forall (?o - hexagonal_bin ?b - cube_block ?d1 - (either pencil cellphone))
      (and
        (game-conserved
          (not
            (not
              (and
                (in_motion ?d1)
                (agent_holds ?d1)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o4 - hexagonal_bin ?s - dodgeball)
      (and
        (preference throwAttempt
          (exists (?s - cube_block)
            (then
              (once (and (not (agent_holds ?s) ) (on ?s ?s) ) )
              (hold-for 9 (and (object_orientation ?s bed) (not (and (object_orientation ?s ?s) (on top_drawer ?s) ) ) (in_motion ?s) ) )
              (hold (not (in_motion ?s) ) )
            )
          )
        )
        (preference throwKnocksOverBear
          (exists (?ob - hexagonal_bin ?c4 - hexagonal_bin)
            (then
              (once (touch bed desk) )
              (hold (and (agent_holds door) (in_motion ?s) ) )
              (once (and (adjacent ?s ?s) (touch ?c4 ?c4) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (* 2 (- (count throwAttempt:dodgeball:yellow) )
      )
      (* (- (* 10 40 )
        )
        (total-score)
      )
    )
    (and
      (or
        (or
          (or
            (>= 180 (external-forall-maximize (+ 3 (count throwAttempt:yellow) )
              )
            )
            (>= (count throwAttempt:blue) (count-once-per-objects throwAttempt:doggie_bed:top_drawer) )
          )
        )
        (> (> 6 (and 18 5 (count throwKnocksOverBear:blue_dodgeball:pink) ) )
          5
        )
      )
      (> (count throwAttempt:orange) 1 )
    )
  )
)
(:scoring
  (* (* (* (+ (or (count-once throwKnocksOverBear:dodgeball) ) (* 7 (+ 0.7 (count-unique-positions throwKnocksOverBear:book:beachball) (count-overlapping throwKnocksOverBear:dodgeball:dodgeball:dodgeball) )
            (+ 2 )
          )
        )
        (external-forall-maximize
          (* (count throwAttempt:basketball) 0 )
        )
      )
    )
    10
  )
)
)

(define (game game-id-584) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?r - dodgeball)
      (exists (?g - hexagonal_bin)
        (exists (?c - doggie_bed)
          (game-conserved
            (in_motion ?c)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference smallItemsInPlace
      (exists (?l4 - teddy_bear)
        (at-end
          (agent_holds ?l4)
        )
      )
    )
  )
)
(:terminal
  (> (count-once-per-external-objects smallItemsInPlace:alarm_clock) (count-once-per-objects smallItemsInPlace:dodgeball) )
)
(:scoring
  (count smallItemsInPlace:yellow:basketball)
)
)

(define (game game-id-585) (:domain few-objects-room-v1)
(:setup
  (forall (?h - hexagonal_bin)
    (and
      (game-optional
        (and
          (or
            (same_color ?h ?h)
            (faces ?h ?h)
          )
          (in_motion ?h)
          (and
            (in desk ?h)
            (in_motion ?h)
            (not
              (and
                (and
                  (and
                    (< 1 1)
                    (>= (distance ?h ?h) (distance ?h ?h))
                  )
                  (and
                    (exists (?b - doggie_bed ?b - (either beachball curved_wooden_ramp book) ?l4 ?c1 - hexagonal_bin ?l2 - game_object)
                      (not
                        (agent_holds ?h)
                      )
                    )
                    (forall (?db - dodgeball)
                      (not
                        (or
                          (agent_holds ?db)
                          (on ?h ?db)
                        )
                      )
                    )
                    (adjacent ?h ?h)
                  )
                )
                (and
                  (and
                    (on ?h ?h)
                    (or
                      (on ?h ?h)
                    )
                    (not
                      (on ?h ?h)
                    )
                    (in_motion ?h)
                  )
                  (and
                    (and
                      (agent_holds ?h)
                      (same_object ?h room_center)
                    )
                  )
                )
              )
            )
            (and
              (<= 1 1)
              (not
                (agent_holds ?h)
              )
            )
          )
          (not
            (agent_holds ?h)
          )
        )
      )
      (game-optional
        (and
          (in ?h ?h)
          (and
            (agent_holds desk)
            (not
              (not
                (agent_holds ?h)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o - ball ?tb - dodgeball ?b - dodgeball ?h - ball)
      (and
        (preference blockInTowerKnocked
          (exists (?b - game_object)
            (then
              (hold (agent_holds ?h) )
              (hold-to-end (not (and (in_motion ?h) (on upright ?h) ) ) )
              (once (and (agent_holds ?h) (agent_holds ?b) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (count blockInTowerKnocked:green) 0 )
    (or
      (>= (+ 5 (external-forall-maximize (count blockInTowerKnocked) ) )
        (- (* (+ (count-once-per-external-objects blockInTowerKnocked:pyramid_block) (* 10 (external-forall-minimize 3 ) )
              10
            )
            (+ (count-once-per-objects blockInTowerKnocked:dodgeball) (count blockInTowerKnocked) 9 )
          )
        )
      )
      (>= (count blockInTowerKnocked:golfball) (+ (+ 10 (* (count blockInTowerKnocked:pink) (count-once-per-objects blockInTowerKnocked:book) )
          )
          3
        )
      )
    )
    (or
      (>= 3 (+ (* (count blockInTowerKnocked:pink) (* (+ (or (* (count blockInTowerKnocked) (count-measure blockInTowerKnocked:dodgeball) )
                  (* (count blockInTowerKnocked:golfball) (count-once-per-objects blockInTowerKnocked:red) )
                  10
                )
                (count blockInTowerKnocked:beachball:dodgeball)
              )
              (count blockInTowerKnocked:yellow)
            )
          )
          (total-time)
          (count-once blockInTowerKnocked:pink_dodgeball)
          (* (* (/ (* (* (count blockInTowerKnocked:bed) 5 300 (and (count blockInTowerKnocked:yellow) (* (count blockInTowerKnocked:tan:basketball) (count blockInTowerKnocked:hexagonal_bin:red) )
                      (count-measure blockInTowerKnocked:dodgeball)
                    )
                  )
                  10
                )
                (count blockInTowerKnocked:pink_dodgeball:golfball)
              )
              10
            )
            30
            3
          )
          5
          (* (* 4 (+ (count-measure blockInTowerKnocked) 3 )
              (* 5 )
            )
            (count-once-per-objects blockInTowerKnocked:yellow)
            (+ 1 (count blockInTowerKnocked:blue_cube_block:basketball) )
            (count-once-per-objects blockInTowerKnocked:yellow)
            (count blockInTowerKnocked:basketball:blue)
            10
            100
            (count-once-per-objects blockInTowerKnocked:dodgeball)
            1
          )
        )
      )
      (>= (count-once-per-objects blockInTowerKnocked:yellow:golfball) (count-once-per-objects blockInTowerKnocked:green) )
    )
  )
)
(:scoring
  7
)
)

(define (game game-id-586) (:domain medium-objects-room-v1)
(:setup
  (forall (?g - (either beachball) ?w1 ?c - dodgeball)
    (game-optional
      (in_motion desk)
    )
  )
)
(:constraints
  (and
    (preference ballThrownFromDoor
      (exists (?l1 - building)
        (then
          (hold (and (agent_holds rug) (and (not (equal_z_position ?l1 ?l1) ) ) (and (same_color bed ?l1) (not (adjacent_side ?l1 floor ?l1) ) (equal_z_position ?l1 ?l1) ) ) )
          (once (and (agent_holds ?l1) (not (in_motion ?l1) ) ) )
          (once (and (>= (distance ?l1 ?l1) 3) (in_motion ?l1) ) )
        )
      )
    )
    (preference blueObjectMovedToRoomCenter
      (exists (?p - building ?p1 - hexagonal_bin ?s - doggie_bed ?d - hexagonal_bin)
        (then
          (once (not (agent_holds ?d) ) )
          (once (and (agent_holds ?d) (agent_holds ?d) (not (agent_holds ?d) ) ) )
          (once (in_motion rug) )
        )
      )
    )
  )
)
(:terminal
  (> (* (count-increasing-measure blueObjectMovedToRoomCenter:golfball) (+ 2 (- 10 )
      )
    )
    (- (* (count blueObjectMovedToRoomCenter:basketball) (count-once-per-objects ballThrownFromDoor:beachball:dodgeball) )
    )
  )
)
(:scoring
  4
)
)

(define (game game-id-587) (:domain many-objects-room-v1)
(:setup
  (exists (?h - building ?t - (either hexagonal_bin red) ?t - hexagonal_bin)
    (exists (?d - hexagonal_bin)
      (forall (?h - beachball)
        (forall (?c6 - dodgeball)
          (and
            (forall (?h - triangular_ramp)
              (exists (?b - chair ?l2 - curved_wooden_ramp)
                (and
                  (exists (?d - dodgeball ?g - chair ?r - pillow ?w - hexagonal_bin)
                    (game-optional
                      (and
                        (and
                          (not
                            (in_motion desk)
                          )
                          (in_motion ?c6)
                          (> (building_size ?l2) (distance_side room_center back ?h ?t))
                          (and
                            (between ?h ?w floor)
                            (= (distance sideways ?t) 1)
                          )
                        )
                        (toggled_on ?t)
                        (adjacent_side ?d agent ?d ?h)
                      )
                    )
                  )
                  (and
                    (game-conserved
                      (adjacent floor agent)
                    )
                  )
                  (game-conserved
                    (agent_holds ?h)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockPickedUp
      (exists (?p - hexagonal_bin ?h - dodgeball)
        (then
          (hold (touch ?h desk) )
          (once (not (touch desk ?h) ) )
          (once (not (not (in ?h ?h) ) ) )
        )
      )
    )
    (preference ballKnocksTeddy
      (exists (?d - triangular_ramp ?o1 - block)
        (then
          (hold-while (and (adjacent agent ?o1) (agent_holds ?o1) (agent_holds ?o1) (in_motion ?o1) ) (and (not (on ?o1 ?o1) ) (toggled_on ?o1) ) )
          (once (not (not (and (agent_holds ?o1) (agent_holds ?o1) ) ) ) )
          (hold (agent_holds ?o1) )
        )
      )
    )
  )
)
(:terminal
  (not
    (not
      (not
        (not
          (> (* (+ 100 (* (count-once-per-objects blockPickedUp:basketball:beachball) 0 )
              )
              (external-forall-maximize
                3
              )
            )
            5
          )
        )
      )
    )
  )
)
(:scoring
  (+ 2 8 )
)
)

(define (game game-id-588) (:domain few-objects-room-v1)
(:setup
  (exists (?b9 - (either doggie_bed cylindrical_block pink pyramid_block dodgeball dodgeball key_chain) ?d - ball)
    (exists (?c - (either dodgeball dodgeball book))
      (game-conserved
        (in_motion desk)
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?b - hexagonal_bin)
        (then
          (once (in_motion ?b) )
          (once (above ?b agent) )
          (once (not (not (not (and (game_start ) (open ?b) (touch ?b door) ) ) ) ) )
        )
      )
    )
    (preference dodgeballThrownToBinFromDesk
      (exists (?h - game_object ?o - dodgeball)
        (then
          (once (touch ?o ?o) )
          (hold (and (on ?o ?o) (< (distance ?o ?o) (distance desk ?o)) ) )
          (hold (agent_holds ?o) )
        )
      )
    )
    (preference gameObjectToBin
      (exists (?c ?b - building)
        (then
          (forall-sequence (?f - (either pillow top_drawer tall_cylindrical_block))
            (then
              (hold (agent_holds ?b) )
              (once (and (not (not (on ?b ?b) ) ) (and (in_motion floor) (and (not (and (in ?b ?b) (touch room_center ?b) ) ) ) ) ) )
              (hold (exists (?f - curved_wooden_ramp ?c - dodgeball) (not (not (on desk ?c) ) ) ) )
              (hold (and (in_motion ?b) (on ?b ?b) ) )
              (hold (in_motion ?c) )
            )
          )
          (once (and (on ?c ?b) (adjacent_side ?c ?c ?c) (adjacent ?b ?b) (agent_holds ?c) (agent_holds desk) (agent_holds ?b) ) )
          (hold (in_motion rug) )
        )
      )
    )
  )
)
(:terminal
  (>= 50 (* 60 (count-once dodgeballThrownToBinFromDesk:dodgeball) (total-time) (count-once-per-objects gameObjectToBin:green) 3 (count-once-per-objects dodgeballThrownToBinFromDesk:red:basketball) 10 3 (* 300 (count dodgeballThrownToBinFromDesk) (total-time) (not (count-overlapping throwBallToBin:basketball:book) ) (* (total-time) (count throwBallToBin:cube_block) )
        (count dodgeballThrownToBinFromDesk:golfball:yellow)
      )
    )
  )
)
(:scoring
  (count gameObjectToBin:golfball)
)
)

(define (game game-id-589) (:domain many-objects-room-v1)
(:setup
  (exists (?g - block)
    (exists (?p2 ?p2 - hexagonal_bin)
      (game-conserved
        (in_motion desk)
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - hexagonal_bin)
      (and
        (preference throwKnocksBlock
          (exists (?o4 - wall)
            (then
              (once (agent_holds ?o4) )
              (once (not (not (not (toggled_on agent) ) ) ) )
              (hold-while (not (and (on ?h bed) (exists (?c4 - curved_wooden_ramp) (not (agent_holds ?o4) ) ) ) ) (exists (?r1 - triangular_ramp) (and (in_motion back) (and (in_motion ?h) (in_motion ?h) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (= (* (count-once throwKnocksBlock:purple) 3 )
    (+ 10 (+ 2 (count-once-per-objects throwKnocksBlock:pink_dodgeball:dodgeball) )
      (/
        (count throwKnocksBlock:yellow)
        5
      )
      (count throwKnocksBlock:basketball)
      5
      (* (* 5 15 (- (count throwKnocksBlock:beachball) )
        )
        (count throwKnocksBlock:dodgeball:basketball)
        (* (count throwKnocksBlock:pink_dodgeball) (+ (count throwKnocksBlock:dodgeball:pyramid_block) 0 (<= 8 (count throwKnocksBlock:basketball:doggie_bed) )
            (- (count throwKnocksBlock:basketball) )
            1
            (= (count throwKnocksBlock:purple) (* (count-once-per-objects throwKnocksBlock:golfball:golfball) (not (+ (= (* 3 (= (* (count-once-per-objects throwKnocksBlock:hexagonal_bin) (* 5 (= (* (* (count-longest throwKnocksBlock:beachball:dodgeball) 5 )
                                  20
                                )
                                2
                                (count throwKnocksBlock:yellow)
                              )
                            )
                          )
                        )
                      )
                      (count throwKnocksBlock:blue)
                      (count-increasing-measure throwKnocksBlock:green)
                    )
                    (total-score)
                    (count-measure throwKnocksBlock:basketball)
                  )
                )
              )
            )
          )
        )
      )
      (* 3 (* (count throwKnocksBlock:purple) (* (count-once-per-objects throwKnocksBlock:dodgeball) (* 5 8 )
          )
        )
      )
    )
  )
)
(:scoring
  (count-once-per-objects throwKnocksBlock:basketball)
)
)

(define (game game-id-590) (:domain few-objects-room-v1)
(:setup
  (forall (?h - dodgeball)
    (and
      (game-conserved
        (touch pink_dodgeball ?h)
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttemptKnocksBlock
      (exists (?d - hexagonal_bin)
        (then
          (once (same_type ?d bed) )
          (once (not (same_color ?d ?d) ) )
          (hold (agent_holds bed) )
        )
      )
    )
    (preference objectOnBed
      (exists (?l2 - game_object)
        (then
          (hold (not (on ?l2 ?l2) ) )
          (once (on ?l2 ?l2) )
          (hold (agent_holds ?l2) )
          (hold (not (not (in ?l2 ?l2) ) ) )
        )
      )
    )
    (preference cubeBlockInBuilding
      (exists (?p3 - (either cube_block yellow_cube_block))
        (at-end
          (and
            (agent_holds ?p3)
            (not
              (and
                (touch ?p3 ?p3)
                (not
                  (not
                    (in ?p3 ?p3)
                  )
                )
              )
            )
            (not
              (and
                (not
                  (same_type rug ?p3)
                )
                (in ?p3 ?p3)
                (between front_left_corner ?p3 ?p3)
                (and
                  (adjacent ?p3 ?p3)
                  (and
                    (in_motion ?p3)
                    (in_motion ?p3)
                  )
                )
                (adjacent_side floor bed ?p3 ?p3)
                (in ?p3 desk)
                (adjacent ?p3 ?p3)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count objectOnBed:beachball) 1 )
)
(:scoring
  3
)
)

(define (game game-id-591) (:domain medium-objects-room-v1)
(:setup
  (exists (?r1 - game_object)
    (and
      (and
        (game-conserved
          (and
            (on ?r1 agent)
            (not
              (exists (?o1 - bridge_block)
                (agent_holds ?r1)
              )
            )
            (agent_crouches )
          )
        )
      )
      (game-optional
        (game_start )
      )
      (and
        (and
          (game-conserved
            (agent_holds ?r1)
          )
          (and
            (and
              (game-optional
                (in ?r1 ?r1)
              )
            )
          )
          (and
            (exists (?r - (either cube_block cylindrical_block dodgeball main_light_switch))
              (exists (?l2 - hexagonal_bin)
                (forall (?h - cube_block)
                  (exists (?o4 - game_object ?b3 - shelf)
                    (exists (?g - hexagonal_bin)
                      (game-conserved
                        (touch ?r1 desk)
                      )
                    )
                  )
                )
              )
            )
            (game-optional
              (in desk rug)
            )
            (and
              (exists (?t - chair)
                (game-conserved
                  (or
                    (agent_holds agent)
                    (< (distance bed pink_dodgeball) 1)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference agentLeavesDogbedOrNoMoreBalls
      (exists (?o1 - building ?c - ball)
        (then
          (once (agent_holds ?c) )
          (hold (not (on ?c ?c) ) )
          (once (on ?c room_center) )
        )
      )
    )
  )
)
(:terminal
  (>= (/ (external-forall-maximize (* (count agentLeavesDogbedOrNoMoreBalls:beachball) (* (+ (+ (count agentLeavesDogbedOrNoMoreBalls:yellow:dodgeball) (+ (count agentLeavesDogbedOrNoMoreBalls:red:blue) (* (count-longest agentLeavesDogbedOrNoMoreBalls:dodgeball) (- 9 )
                  )
                )
                (count agentLeavesDogbedOrNoMoreBalls:bed)
                (* (count-once agentLeavesDogbedOrNoMoreBalls:basketball) (count agentLeavesDogbedOrNoMoreBalls:book) )
                15
                (* (count-unique-positions agentLeavesDogbedOrNoMoreBalls:dodgeball:beachball) (count agentLeavesDogbedOrNoMoreBalls:beachball:dodgeball) )
              )
              (* (* (< (count-once agentLeavesDogbedOrNoMoreBalls:blue_dodgeball) (count-once-per-objects agentLeavesDogbedOrNoMoreBalls:pink_dodgeball:pink) )
                  (+ (count agentLeavesDogbedOrNoMoreBalls:yellow_pyramid_block:pink) (count-once-per-objects agentLeavesDogbedOrNoMoreBalls:blue_dodgeball) )
                )
                (count agentLeavesDogbedOrNoMoreBalls:dodgeball)
              )
            )
            (/
              (- 2 )
              (count agentLeavesDogbedOrNoMoreBalls:green:pink)
            )
          )
        )
      )
      (* (+ (* 0 (count-once agentLeavesDogbedOrNoMoreBalls:blue_cube_block:doggie_bed) )
          4
        )
        (count-same-positions agentLeavesDogbedOrNoMoreBalls:yellow)
      )
    )
    (count-once-per-objects agentLeavesDogbedOrNoMoreBalls:pink_dodgeball:golfball)
  )
)
(:scoring
  (* 50 (count-increasing-measure agentLeavesDogbedOrNoMoreBalls:basketball) )
)
)

(define (game game-id-592) (:domain many-objects-room-v1)
(:setup
  (forall (?w2 - (either teddy_bear dodgeball blue_cube_block))
    (exists (?x ?h - chair)
      (game-optional
        (< (distance ?h ?h) (x_position ?x))
      )
    )
  )
)
(:constraints
  (and
    (preference ballOnBedAtEnd
      (exists (?l - (either golfball alarm_clock) ?t - curved_wooden_ramp)
        (then
          (hold (and (touch ?t ?t) (touch ?t ?t) ) )
        )
      )
    )
    (preference ballThrownFromRug
      (exists (?r1 - hexagonal_bin ?b5 - pyramid_block)
        (at-end
          (and
            (equal_z_position ?b5 ?b5)
            (not
              (not
                (not
                  (and
                    (and
                      (and
                        (in_motion ?b5)
                        (and
                          (= 1 (distance ?b5 rug))
                          (not
                            (adjacent ?b5 ?b5)
                          )
                        )
                        (touch ?b5 ?b5)
                      )
                      (agent_holds ?b5)
                    )
                    (adjacent ?b5 desk)
                  )
                )
              )
            )
            (not
              (and
                (game_over )
                (in_motion desk)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (>= (count-once-per-objects ballThrownFromRug:orange) (* (count-once-per-objects ballOnBedAtEnd:golfball:beachball) (* 3 (count-once ballThrownFromRug:yellow) )
        )
      )
      (> (total-score) (count-once-per-objects ballThrownFromRug) )
    )
  )
)
(:scoring
  (count-once-per-objects ballThrownFromRug:basketball:dodgeball)
)
)

(define (game game-id-593) (:domain many-objects-room-v1)
(:setup
  (exists (?d - ball)
    (game-conserved
      (in ?d ?d)
    )
  )
)
(:constraints
  (and
    (preference itemsTurnedOff
      (exists (?tb - dodgeball)
        (then
          (once (on ?tb ?tb) )
          (hold-while (and (in_motion ?tb) (not (in ?tb ?tb) ) ) (agent_holds side_table) (and (touch ?tb ?tb) (on ?tb ?tb) ) )
          (hold (< (distance ?tb ?tb) 2) )
        )
      )
    )
    (preference throwToBinFromOppositeWall
      (exists (?d1 - (either bridge_block ball basketball blue_cube_block))
        (then
          (once (and (in_motion ?d1) (adjacent rug bed) (agent_holds ?d1) ) )
          (hold-while (and (not (and (not (same_color ?d1 ?d1) ) (agent_crouches ) ) ) (and (agent_holds floor) (and (in_motion ?d1) (on agent ?d1) (not (same_color ?d1 ?d1) ) (object_orientation ?d1 ?d1) ) ) ) (> (building_size bed) 1) )
          (hold-for 1 (and (in_motion ?d1) (agent_holds ?d1) ) )
        )
      )
    )
    (forall (?h - ball ?h - hexagonal_bin ?d - (either desktop cellphone chair hexagonal_bin))
      (and
        (preference bigObjectThrownToBed
          (then
            (hold-for 5 (not (on ?d ?d) ) )
            (once (in_motion ?d) )
          )
        )
        (preference ballThrownThroughRampToBin
          (exists (?c4 - pillow ?b8 ?g - (either dodgeball hexagonal_bin))
            (then
              (once (and (exists (?g - hexagonal_bin ?c2 - curved_wooden_ramp) (touch ?d ?b8) ) (and (in_motion room_center) (above ?g ?b8) ) ) )
              (once (and (and (in_motion bed) (and (and (and (not (in_motion ?g) ) (or (exists (?b - wall) (agent_holds ?b) ) (>= 1 1) ) ) (and (or (in_motion ?g) (and (and (in ?g ?d) (or (agent_holds ?b8) (touch ?g ?b8) ) (and (adjacent_side ?d ?d ?b8 ?g) (exists (?h - (either cd dodgeball) ?b - hexagonal_bin) (in ?g ?b) ) ) (and (not (and (not (not (and (agent_holds ?d) (same_object ?d agent) ) ) ) (and (in ?b8 ?g) (agent_holds ?g) (not (agent_holds agent) ) (on ?b8 ?g) (not (in_motion ?b8) ) (= 1 2) ) (in ?b8 agent) (not (or (< (distance ?b8 ?b8) 1) (= (distance ?g ?g) (distance ?g agent) 4) ) ) ) ) (and (not (adjacent ?g ?d) ) (in_motion ?b8) (same_object desk ?b8) ) ) ) (and (and (adjacent_side pink_dodgeball ?d ?g) (and (and (in_motion ?d) (on ?d ?d) ) (between ?b8 ?b8 agent) (not (agent_holds ?b8) ) ) ) ) ) (and (on ?g ?d) (and (on ?b8 ?d) (forall (?h - hexagonal_bin ?l - (either beachball teddy_bear key_chain)) (not (and (and (and (not (not (in_motion ?g) ) ) (in_motion ?d) ) (or (in_motion ?l) (agent_holds ?l) ) ) (not (agent_holds ?b8) ) ) ) ) (in ?b8 ?d) ) (< 2 (distance ?d ?d)) ) ) (not (exists (?b - dodgeball ?h - dodgeball) (not (not (not (in_motion blue) ) ) ) ) ) (and (agent_holds ?b8) (and (< 10 2) (same_type desk ?b8) ) ) ) ) (not (not (and (on agent ?g) (not (and (agent_holds ?d) (not (touch ?d ?g) ) (agent_crouches ) ) ) ) ) ) ) (in_motion ?d) ) (and (open ?d) (not (and (in_motion ?b8) (in_motion ?g) ) ) ) ) )
              (once (and (and (on ?g ?b8) (in_motion ?g) ) (and (in_motion agent) (in_motion ?g) ) (and (not (< (distance ?b8 bed) 4) ) (not (touch ?g ?d) ) ) (adjacent_side door rug ?d) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count throwToBinFromOppositeWall:dodgeball) (* 3 3 )
    )
    5
  )
)
(:scoring
  1
)
)

(define (game game-id-594) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?o2 - hexagonal_bin ?b9 - dodgeball ?d - hexagonal_bin)
      (and
        (and
          (game-optional
            (and
              (adjacent_side agent ?d desk)
              (not
                (not
                  (not
                    (in_motion bed)
                  )
                )
              )
            )
          )
          (game-conserved
            (in_motion ?d)
          )
          (exists (?b - (either cube_block dodgeball) ?h - (either chair mug laptop))
            (exists (?o - hexagonal_bin)
              (and
                (and
                  (forall (?c1 - curved_wooden_ramp)
                    (or
                      (forall (?l2 - shelf)
                        (forall (?t - building)
                          (forall (?b9 - (either book golfball book))
                            (exists (?c4 - dodgeball)
                              (or
                                (game-conserved
                                  (not
                                    (adjacent_side ?c4 agent ?h ?d)
                                  )
                                )
                                (game-conserved
                                  (and
                                    (on ?b9 ?t)
                                    (adjacent ?d agent)
                                    (agent_holds ?d)
                                    (on ?l2 rug)
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                  (exists (?b6 - (either pencil rug))
                    (game-conserved
                      (not
                        (and
                          (and
                            (agent_holds ?d)
                            (and
                              (agent_holds ?h)
                              (not
                                (broken ?h)
                              )
                              (and
                                (adjacent ?b6 desk)
                                (adjacent_side blue ?b6 ?b6)
                              )
                            )
                          )
                          (touch ?h desk)
                        )
                      )
                    )
                  )
                )
                (game-conserved
                  (broken floor)
                )
                (game-optional
                  (and
                    (< (distance agent ?o) 1)
                    (< 2 (x_position rug))
                  )
                )
              )
            )
          )
          (and
            (and
              (forall (?h - (either floor mug dodgeball))
                (or
                  (exists (?r2 - dodgeball ?h - dodgeball)
                    (game-conserved
                      (agent_holds ?d)
                    )
                  )
                  (exists (?ob - block)
                    (forall (?h - cube_block)
                      (and
                        (game-conserved
                          (on ?h ?d)
                        )
                      )
                    )
                  )
                )
              )
            )
            (forall (?w2 - game_object)
              (game-optional
                (not
                  (and
                    (adjacent ?d ?d)
                    (not
                      (and
                        (in_motion ?w2)
                        (not
                          (and
                            (and
                              (on ?d ?d)
                              (or
                                (in_motion ?d)
                                (equal_z_position ?w2 ?d)
                              )
                            )
                            (not
                              (and
                                (agent_holds ?w2)
                                (game_over )
                                (not
                                  (and
                                    (in_motion ?w2)
                                    (and
                                      (in_motion ?w2)
                                      (not
                                        (and
                                          (in ?d ?w2)
                                          (agent_holds ?w2)
                                          (in_motion ?w2)
                                        )
                                      )
                                    )
                                  )
                                )
                                (agent_holds ?d)
                                (agent_holds ?w2)
                                (not
                                  (agent_holds ?d)
                                )
                                (not
                                  (not
                                    (< 4 (distance ?w2 ?w2))
                                  )
                                )
                                (not
                                  (< (distance ?w2 bed) 3)
                                )
                                (in_motion ?w2)
                                (agent_holds ?w2)
                                (not
                                  (in ?d ?w2)
                                )
                                (not
                                  (agent_holds agent)
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
            (not
              (game-conserved
                (in_motion ?d)
              )
            )
          )
          (and
            (game-optional
              (agent_holds ?d)
            )
            (and
              (exists (?o2 - (either pencil) ?s - doggie_bed)
                (game-conserved
                  (not
                    (agent_holds ?d)
                  )
                )
              )
              (and
                (forall (?h - dodgeball ?l ?b - game_object)
                  (exists (?o - ball)
                    (exists (?r1 - dodgeball)
                      (and
                        (and
                          (game-conserved
                            (in_motion ?o)
                          )
                        )
                        (forall (?d - dodgeball ?c ?l2 - hexagonal_bin)
                          (forall (?r - hexagonal_bin ?b - (either dodgeball chair))
                            (and
                              (game-conserved
                                (and
                                  (agent_holds ?d)
                                  (not
                                    (not
                                      (agent_holds ?c)
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
              (forall (?g - game_object ?o - ball)
                (game-conserved
                  (adjacent_side ?d ?o ?d)
                )
              )
            )
            (game-optional
              (touch ?d agent)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference cubeBlockFromBedToShelf
      (exists (?t2 - dodgeball)
        (at-end
          (open ?t2)
        )
      )
    )
    (preference throwKnocksBlock
      (exists (?d - dodgeball)
        (then
          (once (in_motion ?d) )
        )
      )
    )
  )
)
(:terminal
  (<= (external-forall-maximize (* (external-forall-maximize (count-once-per-external-objects throwKnocksBlock:purple) ) (count-once-per-objects cubeBlockFromBedToShelf:basketball) )
    )
    (count throwKnocksBlock:doggie_bed:pink)
  )
)
(:scoring
  (= (+ (- (count cubeBlockFromBedToShelf:beachball) )
      10
    )
    (count-once-per-objects cubeBlockFromBedToShelf:yellow)
  )
)
)

(define (game game-id-595) (:domain many-objects-room-v1)
(:setup
  (forall (?o1 - cube_block)
    (forall (?c2 - chair)
      (exists (?d - hexagonal_bin ?h - game_object ?g - cylindrical_block)
        (forall (?b - hexagonal_bin)
          (forall (?s ?r - hexagonal_bin)
            (and
              (exists (?r - block ?o1 - block)
                (game-conserved
                  (and
                    (not
                      (agent_holds rug)
                    )
                    (in_motion ?o1)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrowAttempt
      (exists (?d - block)
        (then
          (once (and (and (toggled_on ?d) (agent_holds ?d) ) (above ?d ?d) ) )
          (once (in_motion bed) )
          (once (in_motion ?d) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= 6 (= (* (count-once-per-objects ballThrowAttempt:golfball) (count-once-per-objects ballThrowAttempt:dodgeball) 6 )
          (* (* (count-once-per-objects ballThrowAttempt:yellow:rug) (or (+ (* (count-once-per-objects ballThrowAttempt:dodgeball) (count-once-per-objects ballThrowAttempt) )
                  10
                )
              )
            )
            -10
          )
          (* (count ballThrowAttempt:dodgeball) 2 )
        )
      )
      (>= 4 (count-longest ballThrowAttempt:yellow) )
      (>= 50 20 )
    )
    (>= 3 (* (count-once-per-objects ballThrowAttempt:yellow) (count ballThrowAttempt:dodgeball) )
    )
  )
)
(:scoring
  (* 1 (count-once-per-external-objects ballThrowAttempt:blue_dodgeball) )
)
)

(define (game game-id-596) (:domain few-objects-room-v1)
(:setup
  (exists (?l2 - hexagonal_bin ?c3 - (either cube_block cube_block cylindrical_block alarm_clock yellow_cube_block golfball bridge_block) ?b - doggie_bed)
    (and
      (and
        (game-conserved
          (or
            (in_motion ?b)
            (in_motion ?b)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?o - (either mug desktop mug))
        (then
          (once (agent_holds ?o) )
          (hold-while (broken ?o) (not (< (distance_side ?o ?o ?o ?o) 1) ) )
          (once (not (in_motion ?o) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (<= (count-overlapping throwAttempt:dodgeball:dodgeball) (count throwAttempt:yellow:yellow) )
    (or
      (>= (<= 7 1 )
        (= (- 3 )
          (* 5 (count-once-per-objects throwAttempt:yellow_pyramid_block) )
        )
      )
      (<= (count-once throwAttempt:golfball) 2 )
    )
  )
)
(:scoring
  (* 7 (count-once-per-objects throwAttempt:blue_pyramid_block) )
)
)

(define (game game-id-597) (:domain few-objects-room-v1)
(:setup
  (forall (?d - hexagonal_bin)
    (game-optional
      (on ?d bed)
    )
  )
)
(:constraints
  (and
    (forall (?c4 - hexagonal_bin)
      (and
        (preference throwFromBehindChairsInBin
          (exists (?c - ball ?d - tall_cylindrical_block)
            (then
              (once (not (in agent ?c4) ) )
              (hold-while (on ?d ?c4) (agent_holds room_center) )
            )
          )
        )
        (preference throwBallToBin
          (exists (?b4 - (either cube_block cube_block))
            (then
              (forall-sequence (?r2 - block ?x ?h - building)
                (then
                  (hold (agent_holds ?b4) )
                  (once (adjacent_side ?h ?h ?b4) )
                  (hold-while (not (in ?b4 bed) ) (in_motion ?b4) (on floor agent) )
                )
              )
              (once (in_motion ?b4) )
              (once (and (on ?c4 ?c4) (not (not (not (faces ?b4 ?c4) ) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count throwFromBehindChairsInBin:beachball) 10 )
)
(:scoring
  5
)
)

(define (game game-id-598) (:domain medium-objects-room-v1)
(:setup
  (forall (?h - dodgeball ?h - doggie_bed ?c4 - block)
    (and
      (game-conserved
        (agent_holds ?c4)
      )
      (exists (?r1 ?h ?b1 ?b10 - dodgeball ?tb - hexagonal_bin ?p2 - (either cd blue_cube_block cd))
        (exists (?g ?l - building ?c - ball)
          (game-conserved
            (not
              (= (distance desk ?c) 7)
            )
          )
        )
      )
      (game-conserved
        (agent_holds ?c4)
      )
    )
  )
)
(:constraints
  (and
    (preference ballKnocksBlockFromRug
      (exists (?h - sliding_door)
        (at-end
          (not
            (not
              (in_motion agent)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= (* (count-once ballKnocksBlockFromRug:hexagonal_bin) (count ballKnocksBlockFromRug:dodgeball) )
    1
  )
)
(:scoring
  20
)
)

(define (game game-id-599) (:domain few-objects-room-v1)
(:setup
  (exists (?c - hexagonal_bin)
    (game-optional
      (on ?c ?c)
    )
  )
)
(:constraints
  (and
    (forall (?p1 - block)
      (and
        (preference binKnockedOver
          (exists (?c - chair)
            (then
              (once (and (in_motion upside_down) (and (agent_holds ?p1) (and (and (on ?c ?c) (not (adjacent door ?p1) ) ) (in bed agent) (toggled_on ?c) (adjacent_side bottom_shelf ?c ?p1) ) (and (same_object ?c ?p1) (on ?p1 ?c) ) ) (and (agent_holds ?c) (and (not (not (in ?p1 ?c) ) ) (not (< 1 1) ) ) ) ) )
              (once (agent_holds ?p1) )
              (once (agent_holds ?p1) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= (count-longest binKnockedOver:yellow) 5 )
)
(:scoring
  (external-forall-maximize
    30
  )
)
)

(define (game game-id-600) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?o - dodgeball)
      (game-optional
        (agent_holds ?o)
      )
    )
  )
)
(:constraints
  (and
    (forall (?t - hexagonal_bin)
      (and
        (preference itemsBroken
          (exists (?b1 - tall_cylindrical_block)
            (then
              (hold (exists (?g - block) (not (in ?b1 yellow) ) ) )
              (once (not (in_motion ?t) ) )
              (once (not (agent_holds ?b1) ) )
            )
          )
        )
        (preference pyramidBlockAtopTowerAtEnd
          (exists (?o - (either cellphone ball) ?o - cube_block)
            (at-end
              (and
                (and
                  (not
                    (exists (?p3 - cube_block ?d - cube_block)
                      (agent_holds ?d)
                    )
                  )
                  (not
                    (not
                      (above front agent)
                    )
                  )
                )
                (agent_holds ?t)
                (open ?t)
              )
            )
          )
        )
      )
    )
    (forall (?b - building ?l - hexagonal_bin ?o1 - (either pen mug))
      (and
        (preference ballThrownToBed
          (exists (?r2 ?s - doggie_bed ?c - (either golfball blue_cube_block))
            (then
              (hold (not (agent_holds ?o1) ) )
              (once (< (x_position agent) 4) )
              (once (and (and (in_motion ?c) (on ?o1 ?c) ) (between ?c agent ?c) (agent_holds ?o1) ) )
            )
          )
        )
      )
    )
    (preference smallObjectThrownToBed
      (exists (?ob - color)
        (then
          (hold (and (adjacent ?ob ?ob) (or (and (< 0.5 (distance ?ob rug)) (and (in_motion ?ob) (and (forall (?l - hexagonal_bin) (and (adjacent pink_dodgeball desk) (exists (?b - hexagonal_bin) (and (> (distance_side ?l ?b bed) (distance ?l ?l)) (adjacent ?b ?l) ) ) (not (forall (?d - block ?c5 - doggie_bed ?o3 - doggie_bed) (and (not (agent_holds agent) ) (agent_holds ?o3) ) ) ) ) ) (on ?ob desk) (not (and (on upright ?ob) (< (distance ?ob ?ob) 0.5) (same_color agent ?ob) ) ) ) ) ) (agent_holds ?ob) ) ) )
          (once (and (< 1 2) (not (and (agent_holds ?ob) (on ?ob ?ob) ) ) (on ?ob ?ob) (not (agent_holds ?ob) ) (and (in ?ob ?ob) (and (and (on rug ?ob) (and (exists (?b2 - (either cylindrical_block desktop lamp pillow) ?x - game_object) (adjacent west_wall sideways) ) (on ?ob ?ob) (in_motion ?ob) ) ) (object_orientation ?ob door) (agent_holds agent) ) ) (in_motion ?ob) (or (is_setup_object ?ob) (opposite agent ?ob) ) ) )
        )
      )
    )
    (preference dodgeballThrownToBin
      (exists (?b7 - dodgeball)
        (then
          (once (same_color ?b7 ?b7) )
          (hold (< 4 (building_size ?b7)) )
          (once (not (and (and (in ?b7 ?b7) (not (= (distance ?b7 ?b7) (distance ?b7 ?b7)) ) ) (not (and (equal_x_position ?b7 blue) (not (and (= (distance ?b7 ?b7) 1 1) (in_motion ?b7) (in_motion agent) (adjacent bed ?b7) ) ) ) ) ) ) )
        )
      )
    )
    (preference throwObjectToBin
      (exists (?h - hexagonal_bin)
        (at-end
          (and
            (not
              (agent_holds room_center)
            )
            (and
              (on ?h bed)
              (in_motion bed)
              (on ?h ?h)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-external-objects pyramidBlockAtopTowerAtEnd:orange) (count-once-per-objects pyramidBlockAtopTowerAtEnd:book:beachball) )
)
(:scoring
  20
)
)

(define (game game-id-601) (:domain few-objects-room-v1)
(:setup
  (not
    (game-conserved
      (in_motion agent)
    )
  )
)
(:constraints
  (and
    (preference blocksInPlace
      (exists (?b4 - hexagonal_bin)
        (then
          (once (not (and (agent_holds ?b4) (agent_holds ?b4) ) ) )
          (once (open ?b4) )
          (hold (not (and (on agent room_center) (same_color ?b4 ?b4) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (> (count-once-per-objects blocksInPlace:blue_pyramid_block:cube_block) 6 )
    (count blocksInPlace:blue:yellow)
  )
)
(:scoring
  3
)
)

(define (game game-id-602) (:domain few-objects-room-v1)
(:setup
  (forall (?b - tan_cube_block ?b - hexagonal_bin ?b - triangular_ramp ?r - hexagonal_bin)
    (game-conserved
      (on ?r ?r)
    )
  )
)
(:constraints
  (and
    (preference golfballLandsInBinThroughRamp
      (exists (?h - pyramid_block ?b9 - dodgeball ?d - building)
        (then
          (once (not (touch ?d ?d) ) )
          (once (not (< 4 1) ) )
          (once (in_motion ?d) )
        )
      )
    )
    (preference gameObjectToBin
      (exists (?r - pyramid_block)
        (then
          (once (not (not (and (on ?r room_center) (adjacent_side blue top_shelf ?r bed) ) ) ) )
          (hold (= (distance ?r ?r) (distance ?r ?r)) )
          (once (and (and (adjacent rug ?r) (not (not (and (not (game_start ) ) (not (in_motion ?r) ) ) ) ) (or (and (adjacent tan ?r) (not (not (touch ?r ?r) ) ) ) (exists (?o2 - (either cube_block cube_block)) (in_motion yellow) ) ) ) (not (faces pink ?r) ) ) )
        )
      )
    )
    (preference blockKnockedFromBuildingInBin
      (exists (?d - dodgeball ?c - block)
        (then
          (hold (touch blue ?c) )
          (hold (and (not (in_motion ?c) ) (in ?c bed) ) )
          (once (agent_holds desk) )
        )
      )
    )
  )
)
(:terminal
  (>= (count gameObjectToBin:dodgeball:basketball) 10 )
)
(:scoring
  (* 10 (total-score) )
)
)

(define (game game-id-603) (:domain medium-objects-room-v1)
(:setup
  (exists (?o - ball)
    (exists (?b - block)
      (game-optional
        (in_motion ?b)
      )
    )
  )
)
(:constraints
  (and
    (preference blindsOpened
      (exists (?t2 - curved_wooden_ramp)
        (then
          (hold-while (and (and (on ?t2 ?t2) (not (and (agent_holds ?t2) (and (not (equal_z_position door ?t2) ) (and (on rug ?t2) (adjacent_side ?t2 ?t2 ?t2) ) ) ) ) ) (in agent ?t2) ) (on ?t2 ?t2) )
          (once (and (and (not (object_orientation ?t2 bed) ) (and (not (and (rug_color_under ?t2 bed) (not (agent_holds door) ) ) ) ) ) (and (and (and (not (exists (?t2 - ball) (agent_holds ?t2) ) ) (open ?t2) ) (and (agent_holds ?t2) (and (agent_holds ?t2) (adjacent_side ?t2 ?t2 ?t2) ) ) ) (and (in_motion ?t2) (touch ?t2 ?t2) ) ) ) )
          (hold (in ?t2 ?t2) )
        )
      )
    )
  )
)
(:terminal
  (< 3 (count-same-positions blindsOpened:red) )
)
(:scoring
  (count blindsOpened:cube_block:hexagonal_bin:beachball)
)
)

(define (game game-id-604) (:domain medium-objects-room-v1)
(:setup
  (exists (?h - hexagonal_bin ?c - game_object)
    (game-conserved
      (in_motion main_light_switch)
    )
  )
)
(:constraints
  (and
    (preference blockFromRugToDesk
      (exists (?o2 - doggie_bed ?l - dodgeball ?p - hexagonal_bin)
        (then
          (once (in door agent) )
          (once (same_color ?p ?p) )
          (forall-sequence (?b6 - hexagonal_bin)
            (then
              (once-measure (agent_holds agent) (distance ?b6 desk) )
              (hold (not (in_motion ?b6) ) )
              (once (in_motion ?p) )
            )
          )
        )
      )
    )
    (preference blueObjectMovedToRoomCenter
      (exists (?o2 - drawer ?b - hexagonal_bin)
        (then
          (once (and (< 1 (distance ?b ?b)) (same_type floor ?b) ) )
          (hold (exists (?o - dodgeball ?h - (either cellphone dodgeball) ?c1 - block ?w - hexagonal_bin) (not (touch ?w ?b) ) ) )
          (once (exists (?h - hexagonal_bin) (< 9 (distance ?h ?h)) ) )
        )
      )
    )
    (preference cubeBlockThrownToTopShelf
      (exists (?s - hexagonal_bin)
        (then
          (once (agent_holds ?s) )
          (once (touch ?s ?s) )
          (once (in_motion ?s) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once blueObjectMovedToRoomCenter:basketball) (count cubeBlockThrownToTopShelf:blue_dodgeball) )
)
(:scoring
  (* 18 (+ (count-once-per-objects blueObjectMovedToRoomCenter:dodgeball:beachball) 7 )
    (- (* (* (count-once-per-objects blueObjectMovedToRoomCenter:alarm_clock) 2 )
        (+ 50 (count-once-per-objects cubeBlockThrownToTopShelf:green) )
        (+ (count-once-per-objects blockFromRugToDesk:beachball) (count-once blockFromRugToDesk:golfball:yellow_pyramid_block) )
      )
    )
    (count cubeBlockThrownToTopShelf)
    (* (external-forall-maximize 9 ) (count blueObjectMovedToRoomCenter:red) )
    (* (<= (count-once-per-objects cubeBlockThrownToTopShelf:basketball) 3 )
      (count cubeBlockThrownToTopShelf:yellow)
    )
  )
)
)

(define (game game-id-605) (:domain medium-objects-room-v1)
(:setup
  (exists (?o - ball)
    (game-conserved
      (< (distance ?o ?o) 0.5)
    )
  )
)
(:constraints
  (and
    (preference throwToBinFromDistance
      (exists (?h - cube_block)
        (then
          (once (exists (?h - cube_block ?l2 - triangular_ramp) (on agent ?l2) ) )
          (hold-while (agent_holds ?h) (not (in_motion ?h) ) )
          (hold (is_setup_object ?h) )
        )
      )
    )
    (preference dodgeballHitsBinBottom
      (exists (?h - curved_wooden_ramp ?o3 - game_object)
        (then
          (once (and (and (not (agent_holds ?o3) ) (agent_holds ?o3) ) (< 0 (building_size rug)) ) )
          (hold (adjacent ?o3 ?o3) )
          (hold (adjacent ?o3 ?o3) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-external-objects dodgeballHitsBinBottom) (* (count-once-per-objects dodgeballHitsBinBottom:beachball:basketball) 2 (count throwToBinFromDistance:green:tan) )
  )
)
(:scoring
  2
)
)

(define (game game-id-606) (:domain medium-objects-room-v1)
(:setup
  (forall (?d1 - hexagonal_bin ?s - sliding_door)
    (exists (?c - block)
      (forall (?r1 - ball ?r1 - dodgeball ?d - green_triangular_ramp ?d - hexagonal_bin)
        (exists (?l3 - hexagonal_bin)
          (or
            (game-conserved
              (in_motion ?s)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference greenObjectMovedToRoomCenter
      (exists (?b2 - doggie_bed ?d - dodgeball)
        (then
          (hold-while (not (in desk ?d) ) (touch ?d ?d) (< (distance_side ?d brown ?d) (distance ?d ?d)) )
          (once-measure (on ?d ?d) (x_position bed) )
          (once (adjacent ?d agent) )
        )
      )
    )
    (preference throwBallFromOtherBallToBin
      (exists (?tb - ball)
        (then
          (once (agent_holds ?tb) )
          (once (agent_holds ?tb) )
          (hold (object_orientation ?tb ?tb) )
          (once (not (in_motion ?tb) ) )
          (hold-for 7 (not (agent_holds ?tb) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (= (count-once-per-objects greenObjectMovedToRoomCenter:golfball) 3 )
    (> (external-forall-maximize (+ (count-once-per-objects greenObjectMovedToRoomCenter) (count-once greenObjectMovedToRoomCenter:top_drawer:doggie_bed) (count-once-per-external-objects greenObjectMovedToRoomCenter:beachball) )
      )
      (* 8 8 )
    )
    (>= 1 9 )
  )
)
(:scoring
  (* (count-once-per-objects greenObjectMovedToRoomCenter:golfball) 1 (count-increasing-measure greenObjectMovedToRoomCenter:beachball:yellow) (count throwBallFromOtherBallToBin:blue_pyramid_block) (- 50 )
    2
  )
)
)

(define (game game-id-607) (:domain few-objects-room-v1)
(:setup
  (forall (?b - game_object)
    (forall (?d - cube_block)
      (and
        (game-optional
          (in_motion ?d)
        )
        (forall (?b9 - dodgeball)
          (and
            (and
              (and
                (game-conserved
                  (< (x_position ?b9) (distance ?d agent))
                )
                (forall (?c - green_triangular_ramp)
                  (and
                    (forall (?h - chair)
                      (game-optional
                        (forall (?l1 - (either pink basketball) ?l - hexagonal_bin ?o - tan_cube_block)
                          (and
                            (and
                              (agent_holds ?h)
                            )
                            (on ?b ?h)
                            (not
                              (in_motion ?c)
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
              (forall (?s - drawer ?db - hexagonal_bin ?c1 - hexagonal_bin)
                (game-optional
                  (in_motion ?b)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - book)
      (and
        (preference objectMovedRoomSide
          (exists (?w - cube_block)
            (then
              (once (and (and (agent_holds ?w) (in_motion ?w) ) (in_motion ?w) ) )
              (hold (on ?w room_center) )
              (hold (and (agent_holds ?w) (agent_holds rug) ) )
              (once (in_motion ?w) )
            )
          )
        )
      )
    )
    (preference throwToDrawerOrBin
      (exists (?h - game_object ?h - cube_block)
        (then
          (hold (in ?h ?h) )
          (once (in_motion ?h) )
          (once (adjacent_side ?h ?h desk ?h) )
        )
      )
    )
    (forall (?c - wall ?t - hexagonal_bin)
      (and
        (preference greenObjectMovedToRoomCenter
          (exists (?p1 - hexagonal_bin)
            (then
              (once (not (agent_holds ?t) ) )
              (once (not (in_motion agent) ) )
              (once (not (and (agent_holds agent) (in_motion ?t) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (- (- (* (count objectMovedRoomSide:cube_block:golfball) 0.5 )
      )
    )
    (count greenObjectMovedToRoomCenter:dodgeball)
  )
)
(:scoring
  (count-overlapping greenObjectMovedToRoomCenter:yellow:blue_dodgeball:green)
)
)

(define (game game-id-608) (:domain many-objects-room-v1)
(:setup
  (and
    (not
      (exists (?h - shelf)
        (game-conserved
          (and
            (and
              (on ?h ?h)
              (adjacent ?h ?h)
            )
            (adjacent ?h agent)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectOnBed
      (exists (?ob - doggie_bed)
        (then
          (hold-while (not (touch ?ob ?ob) ) (and (and (not (agent_holds desk) ) (in_motion ?ob) (adjacent ?ob side_table) ) (agent_holds bed) ) (and (not (and (not (in_motion ?ob) ) (not (not (in_motion ?ob) ) ) (same_color ?ob ?ob) (and (touch ?ob ?ob) (in_motion ?ob) ) ) ) (in ?ob ?ob) ) (in_motion ?ob) )
          (hold-while (and (on ?ob ?ob) (and (agent_holds ?ob) (in room_center upright) ) ) (and (agent_holds ?ob) (agent_holds ?ob) (not (not (in pillow ?ob) ) ) ) (in_motion ?ob) )
          (once (<= 0.5 (distance ?ob ?ob)) )
        )
      )
    )
    (forall (?b2 ?h - red_dodgeball ?c4 - doggie_bed)
      (and
        (preference ballThrownMissesEverything
          (exists (?h - game_object ?t1 - dodgeball ?b8 - ball)
            (then
              (once (agent_holds ?b8) )
              (once (not (adjacent ?c4 ?b8) ) )
              (hold (same_object ?b8 ?c4) )
            )
          )
        )
        (preference itemsBroken
          (exists (?l4 - ball)
            (then
              (hold (in_motion ?c4) )
              (hold (adjacent ?c4 ?l4) )
              (once (agent_holds ?c4) )
            )
          )
        )
      )
    )
    (preference ballThrownFromObjectToBin
      (exists (?c - (either golfball bridge_block))
        (at-end
          (faces rug room_center)
        )
      )
    )
    (preference throwAttemptFromDoor
      (exists (?l3 - dodgeball)
        (at-end
          (in ?l3 ?l3)
        )
      )
    )
    (preference gameObjectToBin
      (exists (?d - hexagonal_bin)
        (then
          (once (in_motion ?d) )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (count ballThrownFromObjectToBin:blue_dodgeball) (count-once gameObjectToBin:pink_dodgeball) )
    (>= 6 (count-once-per-objects itemsBroken:top_drawer) )
    (= (* (* (count gameObjectToBin:dodgeball:dodgeball) (external-forall-maximize (total-time) ) )
        40
      )
      (count-same-positions gameObjectToBin:red:blue_dodgeball)
    )
  )
)
(:scoring
  1
)
)

(define (game game-id-609) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-conserved
      (exists (?b ?l1 ?x ?o - ball ?r - hexagonal_bin)
        (agent_holds ?r)
      )
    )
  )
)
(:constraints
  (and
    (forall (?b6 - golfball)
      (and
        (preference ballThrowAttempt
          (exists (?b6 - dodgeball)
            (then
              (hold (and (not (agent_holds ?b6) ) (and (not (and (not (in_motion ?b6) ) (and (and (< (distance desk ?b6) 9) (and (not (and (not (in_motion ?b6) ) (not (and (and (in_motion ?b6) (faces ?b6 ?b6) ) (and (not (in_motion ?b6) ) (on ?b6 ?b6) ) ) ) ) ) (not (in_motion south_west_corner) ) (and (is_setup_object ?b6) (and (and (and (on ?b6 ?b6) (on ?b6 ?b6) (in_motion ?b6) ) ) (on ?b6 ?b6) (in_motion ?b6) (adjacent ?b6 bed) (and (adjacent ?b6 ?b6) (rug_color_under ?b6 ?b6) (in ?b6 blue) ) (game_start ) (touch ?b6 ?b6) (in_motion ?b6) ) ) (agent_holds ?b6) (<= (distance ?b6 ?b6) (distance ?b6 ?b6)) (not (in_motion rug) ) (and (not (and (not (agent_holds ?b6) ) (agent_holds ?b6) ) ) (not (< (distance ?b6 ?b6) (distance ?b6 ?b6)) ) ) (same_color ?b6 brown) ) (exists (?b - curved_wooden_ramp) (agent_holds ?b) ) ) (equal_x_position ?b6 ?b6) ) ) ) (and (not (in_motion ?b6) ) (and (exists (?d ?db ?h ?l - building) (in_motion ?b6) ) (adjacent_side ?b6 ?b6 ?b6) (on ?b6 ?b6) (adjacent ?b6 ?b6) ) ) ) ) )
              (once (not (in_motion desk) ) )
              (hold (and (and (exists (?o - doggie_bed) (in ?o ?o) ) (not (in_motion ?b6) ) ) (adjacent ?b6 ?b6) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 8 (- 300 )
  )
)
(:scoring
  3
)
)

(define (game game-id-610) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?t - hexagonal_bin)
      (and
        (and
          (forall (?h - dodgeball)
            (exists (?r - game_object)
              (forall (?bl - doggie_bed ?d - block ?h - doggie_bed ?g - green_triangular_ramp)
                (game-conserved
                  (in ?g ?r)
                )
              )
            )
          )
        )
        (forall (?b - building)
          (forall (?b1 - cube_block)
            (and
              (game-conserved
                (and
                  (in_motion ?b)
                  (in_motion ?t)
                  (in ?b1 ?t)
                  (touch ?b ?b1)
                )
              )
              (and
                (and
                  (and
                    (game-conserved
                      (adjacent desk door)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?w2 - dodgeball ?c - (either rug cube_block beachball))
      (and
        (preference smallObjectThrownToBed
          (exists (?r - hexagonal_bin)
            (then
              (hold (>= (distance ?c ?c) 10) )
              (hold (and (and (in_motion ?r) (in_motion ?c) (in ?c ?c) (and (not (agent_holds ?r) ) (> (distance desk ?r) (distance ?r ?c)) ) ) (not (touch ?r ?c) ) ) )
              (hold (and (and (not (agent_holds ?r) ) (faces ?r ?c) ) (on ?r ?c) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count smallObjectThrownToBed:pink_dodgeball:hexagonal_bin) 2 )
)
(:scoring
  (count-once smallObjectThrownToBed:dodgeball)
)
)

(define (game game-id-611) (:domain few-objects-room-v1)
(:setup
  (exists (?d - wall)
    (game-conserved
      (in_motion ?d)
    )
  )
)
(:constraints
  (and
    (preference throwToBinFromDistance
      (exists (?c - wall)
        (at-end
          (and
            (adjacent_side floor ?c ?c)
            (not
              (or
                (not
                  (not
                    (not
                      (in_motion ?c)
                    )
                  )
                )
                (adjacent agent ?c)
                (and
                  (agent_holds ?c)
                  (not
                    (in_motion block)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (not
      (not
        (>= 5 (count throwToBinFromDistance:dodgeball) )
      )
    )
    (not
      (>= (count throwToBinFromDistance:dodgeball) 2 )
    )
    (>= (count-once-per-objects throwToBinFromDistance:beachball) (and (count-once-per-objects throwToBinFromDistance:blue_pyramid_block) (count-once throwToBinFromDistance:hexagonal_bin:alarm_clock) (+ (* (count-once-per-external-objects throwToBinFromDistance:yellow) (count-once throwToBinFromDistance:pyramid_block) (count throwToBinFromDistance:book) )
        )
      )
    )
  )
)
(:scoring
  2
)
)

(define (game game-id-612) (:domain many-objects-room-v1)
(:setup
  (not
    (and
      (exists (?r - block ?l - dodgeball)
        (exists (?b - hexagonal_bin ?w - (either cube_block key_chain))
          (game-optional
            (and
              (not
                (not
                  (in_motion ?w)
                )
              )
              (< (x_position ?l) (distance_side ?w ?w ?w))
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference gameBlockFound
      (exists (?w1 - block)
        (at-end
          (not
            (opposite ?w1 room_center)
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count gameBlockFound:hexagonal_bin:basketball) 6 )
    9
  )
)
(:scoring
  10
)
)

(define (game game-id-613) (:domain many-objects-room-v1)
(:setup
  (forall (?h - (either pen) ?c2 - (either book desktop cylindrical_block))
    (game-conserved
      (or
        (same_color ?c2 floor)
        (is_setup_object ?c2)
        (and
          (and
            (agent_holds ?c2)
            (in_motion ?c2)
          )
          (on ?c2 ?c2)
        )
        (agent_holds ?c2)
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - block)
      (and
        (preference thrownObjectHitsComputer
          (exists (?o - shelf ?d - hexagonal_bin)
            (then
              (hold-while (not (not (in agent ?h) ) ) (adjacent ?d ?h) )
              (once (is_setup_object agent) )
              (once (not (not (agent_holds agent) ) ) )
            )
          )
        )
        (preference blockKnockedFromBuildingInBin
          (exists (?c2 ?d ?c - color ?g - hexagonal_bin)
            (then
              (once (touch ?g ?h) )
              (once (adjacent ?h ?g) )
              (once (<= 1 1) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 8 (* 0 (and (count-overlapping blockKnockedFromBuildingInBin:brown:pink) ) )
    )
    (>= (count-once-per-objects blockKnockedFromBuildingInBin:rug) (count thrownObjectHitsComputer:book) )
  )
)
(:scoring
  (count blockKnockedFromBuildingInBin:dodgeball)
)
)

(define (game game-id-614) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?l2 - chair ?b3 - dodgeball)
      (forall (?s - dodgeball)
        (game-optional
          (agent_holds ?b3)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockInTowerKnocked
      (exists (?p1 - hexagonal_bin ?b ?t2 - dodgeball)
        (at-end
          (and
            (in top_shelf ?b)
            (in_motion ?b)
          )
        )
      )
    )
    (preference dodgeballHitsPillowWithoutTouchingBlock
      (exists (?p - (either pen dodgeball))
        (then
          (hold (and (rug_color_under ?p ?p) (not (> 5 (distance ?p ?p)) ) (and (opposite desk desk) (game_start ) ) (not (agent_holds ?p) ) (in_motion ?p) (adjacent desk ?p) (equal_z_position ?p ?p) (rug_color_under ?p ?p) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (or 5 10 2 ) 8 )
)
(:scoring
  (>= (count-once-per-objects dodgeballHitsPillowWithoutTouchingBlock:yellow:basketball) (* (count-once-per-objects dodgeballHitsPillowWithoutTouchingBlock:orange) (count dodgeballHitsPillowWithoutTouchingBlock:beachball) )
  )
)
)

(define (game game-id-615) (:domain few-objects-room-v1)
(:setup
  (exists (?b - hexagonal_bin)
    (game-optional
      (and
        (and
          (and
            (in desk ?b)
            (on blue ?b)
          )
          (not
            (in upright ?b)
          )
        )
        (agent_holds ?b)
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - (either cube_block book))
      (and
        (preference itemsBroken
          (exists (?h - color ?f - wall)
            (then
              (hold (in_motion ?d) )
              (once (or (in_motion ?d) (in_motion ?f) ) )
              (hold-while (touch ?d ?f) (not (not (on ?f upside_down) ) ) )
            )
          )
        )
        (preference ballThrownThroughRampToBin
          (exists (?c1 - game_object)
            (then
              (hold (and (on ?c1 ?d) (agent_holds door) (not (and (and (on ?d ?c1) (not (on ?c1 ?c1) ) ) (equal_z_position ?d agent) ) ) ) )
              (once (not (not (and (not (on ?c1 ?c1) ) (in ?d ?d) ) ) ) )
              (hold-while (rug_color_under door ?c1) (and (not (not (on ?c1 ?d) ) ) (in_motion ?c1) ) (and (adjacent_side ?d floor ?d) ) )
            )
          )
        )
      )
    )
    (preference nonBlockPlacedInBuilding
      (exists (?l - building)
        (then
          (once (not (in_motion bed) ) )
          (once (on ?l rug) )
          (once (and (not (and (same_color ?l ?l) (faces ?l ?l) ) ) (exists (?c - hexagonal_bin) (above upside_down ?l) ) (agent_holds ?l) (< (distance ?l ?l) 1) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (external-forall-minimize 7 ) (external-forall-minimize 2 ) )
)
(:scoring
  (* (count nonBlockPlacedInBuilding:golfball) (count-once-per-objects nonBlockPlacedInBuilding:pink) )
)
)

(define (game game-id-616) (:domain few-objects-room-v1)
(:setup
  (exists (?t - (either game_object teddy_bear) ?bl - ball)
    (exists (?b - (either desktop alarm_clock cd))
      (game-optional
        (and
          (object_orientation ?bl ?b)
          (and
            (not
              (and
                (not
                  (not
                    (in_motion rug)
                  )
                )
                (adjacent ?bl ?b)
              )
            )
            (and
              (not
                (not
                  (same_color brown ?bl)
                )
              )
              (is_setup_object ?bl)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?r - hexagonal_bin ?g - cube_block)
      (and
        (preference beachballBouncedOffRamp
          (exists (?d - (either alarm_clock) ?h - hexagonal_bin)
            (then
              (once (adjacent ?h ?h) )
              (once (in_motion ?h) )
              (once (and (and (and (in_motion ?h) (agent_holds ?g) ) (adjacent ?g ?g) (is_setup_object ?h) (in_motion agent) (exists (?b - dodgeball) (< 1 (distance ?g door)) ) (agent_holds ?h) (< 2 2) ) (and (in_motion ?h) (on ?h ?g) ) ) )
            )
          )
        )
      )
    )
    (preference teddyBearHitsBall
      (exists (?h - game_object)
        (at-end
          (> (distance ?h desk) (distance_side agent ?h ?h))
        )
      )
    )
    (forall (?w - hexagonal_bin)
      (and
        (preference throwAttemptFromDoor
          (exists (?h - game_object)
            (then
              (once (in_motion ?w) )
              (hold-for 7 (in ?h ?w) )
              (once (object_orientation ?w ?h) )
            )
          )
        )
      )
    )
    (preference throwFromDoorToBin
      (exists (?o - (either dodgeball triangle_block))
        (at-end
          (not
            (agent_holds ?o)
          )
        )
      )
    )
    (preference redDodgeballThrownToBinWithoutTouchingFloor
      (exists (?r - building ?b - teddy_bear ?d1 - beachball ?b2 - ball ?c5 - dodgeball)
        (then
          (hold (in_motion ?c5) )
          (once (and (agent_holds ?c5) (and (exists (?o - ball ?o4 - dodgeball ?c - dodgeball ?h - dodgeball) (not (faces ?h ?h) ) ) (adjacent ?c5 ?c5) ) (not (and (same_type ?c5 agent) (and (not (agent_holds ?c5) ) (in_motion ?c5) ) ) ) ) )
          (once (same_color ?c5 ?c5) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-once-per-objects redDodgeballThrownToBinWithoutTouchingFloor:green:pink) (count throwFromDoorToBin:pink_dodgeball) )
    (<= 8 (* (count-once-per-objects beachballBouncedOffRamp:doggie_bed) (total-score) )
    )
  )
)
(:scoring
  10
)
)

(define (game game-id-617) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (> (distance room_center top_drawer) 2)
  )
)
(:constraints
  (and
    (preference ballRolledOnRampToRug
      (exists (?b9 - hexagonal_bin)
        (then
          (hold (adjacent ?b9 ?b9) )
          (hold (and (on ?b9 ?b9) (not (on ?b9 ?b9) ) ) )
          (hold-for 9 (adjacent ?b9 ?b9) )
        )
      )
    )
  )
)
(:terminal
  (< (count ballRolledOnRampToRug) (count ballRolledOnRampToRug:golfball:blue_dodgeball) )
)
(:scoring
  3
)
)

(define (game game-id-618) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?d - cube_block ?d2 - building)
      (game-conserved
        (not
          (in ?d2 ?d2)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballThrownToBin
      (exists (?o1 ?c ?h ?c4 ?o - blue_pyramid_block ?p ?c3 ?b2 - color)
        (at-end
          (and
            (on ?b2 ?p)
            (agent_holds ?c3)
          )
        )
      )
    )
  )
)
(:terminal
  (<= (count-once dodgeballThrownToBin:pink) (count dodgeballThrownToBin:cylindrical_block) )
)
(:scoring
  2
)
)

(define (game game-id-619) (:domain many-objects-room-v1)
(:setup
  (exists (?b - (either red cylindrical_block dodgeball) ?c - hexagonal_bin ?o5 - ball)
    (exists (?h - dodgeball ?c - dodgeball)
      (game-optional
        (on ?c ?o5)
      )
    )
  )
)
(:constraints
  (and
    (forall (?b6 - hexagonal_bin)
      (and
        (preference ballThrownFromDoor
          (exists (?c - hexagonal_bin)
            (then
              (once (is_setup_object ?b6) )
              (hold (in_motion agent) )
              (hold (agent_holds ?c) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (total-time) )
)
(:scoring
  (>= (count-measure ballThrownFromDoor:alarm_clock) (+ (count ballThrownFromDoor:green:brown) (* (count-once-per-external-objects ballThrownFromDoor:hexagonal_bin) (* (count ballThrownFromDoor:basketball:dodgeball) 10 )
      )
      4
    )
  )
)
)

(define (game game-id-620) (:domain many-objects-room-v1)
(:setup
  (forall (?d - teddy_bear)
    (exists (?l1 - wall)
      (exists (?b - block ?g - teddy_bear)
        (and
          (and
            (forall (?tb - hexagonal_bin)
              (forall (?l - (either wall alarm_clock basketball hexagonal_bin basketball))
                (game-optional
                  (in_motion ?tb)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference agentLeavesDogbedOrNoMoreBalls
      (exists (?o2 - (either pyramid_block doggie_bed triangular_ramp) ?o - hexagonal_bin ?b5 - teddy_bear)
        (then
          (hold (< (building_size ?b5) 4) )
          (once (in_motion ?b5) )
          (once (agent_holds ?b5) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (count agentLeavesDogbedOrNoMoreBalls:book) (- (= (total-score) (* (+ 6 2 (* 10 (count agentLeavesDogbedOrNoMoreBalls:book) )
            )
            2
          )
        )
      )
    )
    (>= 40 (count agentLeavesDogbedOrNoMoreBalls:basketball) )
    (>= 9 30 )
  )
)
(:scoring
  (count agentLeavesDogbedOrNoMoreBalls:beachball:dodgeball:basketball)
)
)

(define (game game-id-621) (:domain many-objects-room-v1)
(:setup
  (forall (?g - hexagonal_bin)
    (game-conserved
      (on yellow ?g)
    )
  )
)
(:constraints
  (and
    (preference failedThrowAttempt
      (exists (?x - (either doggie_bed doggie_bed))
        (then
          (once (on agent ?x) )
          (once (and (<= (distance ?x ?x) (distance ?x desk)) ) )
        )
      )
    )
    (preference throwKnocksBlock
      (exists (?b - block ?o - teddy_bear ?b7 - hexagonal_bin)
        (at-end
          (< 1 1)
        )
      )
    )
  )
)
(:terminal
  (> (count-once-per-objects throwKnocksBlock:wall:basketball) (* 2 (count-once-per-objects throwKnocksBlock:cylindrical_block) )
  )
)
(:scoring
  (count throwKnocksBlock:pink)
)
)

(define (game game-id-622) (:domain medium-objects-room-v1)
(:setup
  (exists (?b4 ?b - ball)
    (game-optional
      (forall (?c - cube_block)
        (and
          (or
            (in agent ?c)
            (agent_holds brown)
          )
          (and
            (not
              (agent_holds ?c)
            )
            (faces ?c ?c)
            (rug_color_under ?c floor)
            (in_motion ?c)
          )
          (and
            (same_type ?c ?b)
            (same_type ?b4 desk)
            (touch ?b4 door)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?r - tall_cylindrical_block ?l4 - game_object)
      (and
        (preference pillowMovedToRoomCenter
          (then
            (once (adjacent ?l4 desk) )
            (once (on upright blue) )
            (hold (in ?l4 door) )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-once pillowMovedToRoomCenter:blue_dodgeball) 10 )
    (or
      (<= (count pillowMovedToRoomCenter:beachball) 10 )
    )
  )
)
(:scoring
  (- (count pillowMovedToRoomCenter:basketball:dodgeball) )
)
)

(define (game game-id-623) (:domain medium-objects-room-v1)
(:setup
  (exists (?b - pillow)
    (and
      (or
        (game-conserved
          (and
            (not
              (agent_holds ?b)
            )
            (agent_holds ?b)
          )
        )
        (and
          (and
            (game-conserved
              (adjacent ?b ?b)
            )
          )
        )
        (exists (?c5 - hexagonal_bin)
          (exists (?o - ball ?d - game_object)
            (game-conserved
              (and
                (and
                  (adjacent ?c5 ?c5)
                  (and
                    (agent_holds room_center)
                    (on agent ?d)
                    (agent_holds ?b)
                    (not
                      (agent_holds ?d)
                    )
                    (object_orientation ?c5 ?b)
                    (open ?b)
                    (adjacent_side agent ?c5 ?b)
                  )
                )
                (exists (?b2 - bridge_block)
                  (and
                    (agent_holds room_center)
                  )
                )
                (not
                  (not
                    (not
                      (on pink_dodgeball door)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwGolfballToBin
      (exists (?c - cube_block ?c6 - pillow)
        (then
          (hold (faces ?c6 ?c6) )
          (once (and (and (agent_holds ?c6) (not (in ?c6 ?c6) ) ) (agent_holds ?c6) ) )
          (once (equal_x_position blue ?c6) )
        )
      )
    )
    (preference pillowThrownToDoggieBed
      (exists (?bl ?d ?p2 ?o ?c ?c3 - building)
        (then
          (once (not (and (not (exists (?h - watch ?h - blinds) (game_start ) ) ) (in_motion ?bl) (and (not (touch ?c ?d) ) (touch ?o ?c3) ) ) ) )
          (once (agent_holds agent) )
          (once (< 7 (distance ?o ?o)) )
        )
      )
    )
  )
)
(:terminal
  (>= 1 (* (= (total-time) (not (count pillowThrownToDoggieBed:purple) ) )
      (count throwGolfballToBin:bed)
    )
  )
)
(:scoring
  100
)
)

(define (game game-id-624) (:domain medium-objects-room-v1)
(:setup
  (exists (?o - ball)
    (exists (?bl - curved_wooden_ramp)
      (not
        (game-conserved
          (on pink ?bl)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballDroppedInBin
      (exists (?h - game_object)
        (then
          (once (< 3 (distance ?h ?h)) )
          (once (same_color agent agent) )
          (once (object_orientation ?h ?h) )
        )
      )
    )
  )
)
(:terminal
  (>= (count ballDroppedInBin:pink_dodgeball) (count ballDroppedInBin:yellow:beachball) )
)
(:scoring
  (count-once-per-objects ballDroppedInBin:dodgeball)
)
)

(define (game game-id-625) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (forall (?b1 - ball)
        (exists (?b - (either blue_cube_block))
          (game-conserved
            (in_motion ?b1)
          )
        )
      )
      (and
        (game-conserved
          (agent_holds door)
        )
        (exists (?o2 - desk_shelf)
          (forall (?b - building)
            (exists (?d2 - doggie_bed)
              (exists (?o2 - building)
                (forall (?b - drawer)
                  (game-conserved
                    (on ?o2 top_drawer)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference smallItemsInPlace
      (exists (?o2 - dodgeball)
        (then
          (hold-while (in_motion ?o2) (not (not (agent_holds ?o2) ) ) )
          (once (agent_holds rug) )
          (once (in_motion blue) )
        )
      )
    )
    (preference matchingBuildingBuilt
      (exists (?s - golfball ?b - dodgeball ?h - (either cube_block cellphone) ?l - game_object)
        (then
          (once (and (and (not (and (agent_holds agent) (adjacent sideways ?l) ) ) (in ?l agent) (agent_holds floor) (in_motion ?l) (not (on ?l ?l) ) (< (distance ?l ?l) (distance ?l ?l)) ) (in ?l ?l) (and (not (on ?l door) ) (not (agent_holds ?l) ) (on ?l door) ) ) )
          (once (and (agent_holds ?l) (<= 0.5 (distance ?l ?l)) ) )
          (once (adjacent agent ?l) )
        )
      )
    )
  )
)
(:terminal
  (> (count matchingBuildingBuilt:side_table:red:golfball) 5 )
)
(:scoring
  (+ (* (count smallItemsInPlace:yellow) (count matchingBuildingBuilt:beachball) 3 )
    (count matchingBuildingBuilt:yellow_cube_block)
  )
)
)

(define (game game-id-626) (:domain few-objects-room-v1)
(:setup
  (exists (?h - hexagonal_bin)
    (game-optional
      (= (distance ?h agent) (distance top_drawer agent) (distance ?h ?h))
    )
  )
)
(:constraints
  (and
    (forall (?d - teddy_bear ?c - hexagonal_bin)
      (and
        (preference ballThrownMissesEverything
          (exists (?o ?c ?g ?h - dodgeball ?p3 - (either tall_cylindrical_block red))
            (then
              (hold (and (and (in_motion ?c) (on ?p3 ?c) ) (in_motion ?p3) ) )
              (hold (< 1 1) )
              (hold-for 4 (or (agent_holds ?p3) (agent_holds ?p3) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (+ (count-once-per-objects ballThrownMissesEverything:triangle_block) (external-forall-minimize (* (count ballThrownMissesEverything:dodgeball:top_drawer:dodgeball) (* (count ballThrownMissesEverything:beachball) (* (count ballThrownMissesEverything:doggie_bed:beachball) (count ballThrownMissesEverything:dodgeball) (count-once-per-objects ballThrownMissesEverything:golfball:pink) )
              5
            )
            10
          )
        )
      )
      (count-shortest ballThrownMissesEverything:beachball)
      10
    )
    (* 5 (count-once-per-objects ballThrownMissesEverything:pink_dodgeball) )
  )
)
(:scoring
  (count ballThrownMissesEverything)
)
)

(define (game game-id-627) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (exists (?t - dodgeball ?w - cube_block ?b ?t - game_object)
        (and
          (exists (?d - game_object)
            (game-optional
              (not
                (not
                  (on door ?b)
                )
              )
            )
          )
          (not
            (and
              (game-conserved
                (not
                  (agent_crouches )
                )
              )
              (and
                (and
                  (game-conserved
                    (exists (?c - beachball)
                      (< (distance agent ?b) 1)
                    )
                  )
                  (and
                    (exists (?ob - hexagonal_bin ?c - bridge_block)
                      (forall (?b9 - drawer ?t2 - beachball)
                        (forall (?o - pillow ?h - dodgeball)
                          (and
                            (and
                              (forall (?h - chair ?h - (either alarm_clock floor triangular_ramp))
                                (and
                                  (forall (?b1 - shelf)
                                    (and
                                      (game-conserved
                                        (exists (?l4 - book)
                                          (in_motion desk)
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                            (exists (?t - hexagonal_bin)
                              (game-conserved
                                (not
                                  (not
                                    (in ?c ?t2)
                                  )
                                )
                              )
                            )
                            (game-optional
                              (agent_holds rug)
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
              (exists (?c - wall)
                (exists (?b3 - hexagonal_bin ?w1 - dodgeball ?r1 - cube_block)
                  (and
                    (game-conserved
                      (agent_holds ?t)
                    )
                    (and
                      (game-conserved
                        (not
                          (on ?c ?c)
                        )
                      )
                    )
                    (and
                      (game-conserved
                        (and
                          (not
                            (adjacent ?c ?t)
                          )
                          (not
                            (and
                              (and
                                (not
                                  (not
                                    (in ?r1 desk)
                                  )
                                )
                                (and
                                  (agent_holds ?b)
                                  (not
                                    (and
                                      (faces agent ?c)
                                      (and
                                        (same_object ?t ?c)
                                        (agent_holds ?b)
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                          (on ?b agent)
                        )
                      )
                      (and
                        (game-conserved
                          (adjacent ?c ?c)
                        )
                        (and
                          (exists (?h - blue_cube_block)
                            (and
                              (and
                                (exists (?h - pyramid_block)
                                  (game-optional
                                    (agent_holds ?c)
                                  )
                                )
                              )
                              (forall (?b - dodgeball)
                                (game-optional
                                  (in_motion ?t)
                                )
                              )
                            )
                          )
                          (game-conserved
                            (agent_holds ?c)
                          )
                          (game-conserved
                            (agent_holds ?c)
                          )
                        )
                        (forall (?h ?o3 ?o ?d ?w1 - bridge_block)
                          (forall (?b - curved_wooden_ramp)
                            (and
                              (exists (?h ?o2 ?d ?o1 - hexagonal_bin)
                                (and
                                  (game-conserved
                                    (not
                                      (agent_holds agent)
                                    )
                                  )
                                  (forall (?d - pillow ?d - ball)
                                    (and
                                      (game-conserved
                                        (agent_holds ?o3)
                                      )
                                    )
                                  )
                                  (game-conserved
                                    (in ?o3 ?w1)
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                      (exists (?d ?b5 - building)
                        (exists (?d - hexagonal_bin)
                          (forall (?p2 - dodgeball)
                            (game-conserved
                              (on ?d room_center)
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
          (exists (?d - building)
            (game-optional
              (agent_holds ?d)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dropAttempt
      (exists (?c1 - (either game_object alarm_clock))
        (at-end
          (agent_holds ?c1)
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects dropAttempt:dodgeball) (count dropAttempt:triangle_block) )
)
(:scoring
  (count dropAttempt:blue_cube_block)
)
)

(define (game game-id-628) (:domain medium-objects-room-v1)
(:setup
  (forall (?h - ball ?d - block)
    (game-conserved
      (adjacent floor ?d)
    )
  )
)
(:constraints
  (and
    (forall (?o1 - hexagonal_bin)
      (and
        (preference blockCorrectlyPicked
          (exists (?r - dodgeball)
            (at-end
              (in_motion ?o1)
            )
          )
        )
        (preference pillowMovedToRoomCenter
          (exists (?c - (either dodgeball game_object) ?b - pillow ?d - block ?o1 - dodgeball)
            (then
              (hold (and (in_motion ?o1) (on bed agent) ) )
              (once-measure (and (agent_holds brown) (same_type ?o1 ?o1) ) (x_position ?o1) )
              (once (not (game_over ) ) )
            )
          )
        )
      )
    )
    (preference bookOnDeskShelf
      (exists (?d - dodgeball ?b - dodgeball)
        (then
          (once (not (in_motion bed) ) )
          (hold (= (building_size ?b) (distance ?b ?b)) )
          (once (not (and (on bed ?b) (on ?b ?b) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count pillowMovedToRoomCenter:book) (+ (count bookOnDeskShelf:blue_dodgeball:yellow_cube_block) (count-same-positions blockCorrectlyPicked:block) )
  )
)
(:scoring
  2
)
)

(define (game game-id-629) (:domain medium-objects-room-v1)
(:setup
  (forall (?c - hexagonal_bin ?b - (either hexagonal_bin dodgeball dodgeball) ?h - hexagonal_bin ?w - wall ?tb - hexagonal_bin)
    (not
      (forall (?o - doggie_bed)
        (game-conserved
          (not
            (above agent ?tb)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference pillowMovedToRoomCenter
      (exists (?d - chair)
        (at-end
          (adjacent_side agent south_wall ?d)
        )
      )
    )
  )
)
(:terminal
  (>= 30 7 )
)
(:scoring
  (count pillowMovedToRoomCenter:golfball)
)
)

(define (game game-id-630) (:domain few-objects-room-v1)
(:setup
  (not
    (exists (?c2 - hexagonal_bin)
      (exists (?h - hexagonal_bin)
        (and
          (and
            (and
              (exists (?f - hexagonal_bin)
                (and
                  (game-optional
                    (and
                      (agent_holds ?f)
                      (agent_holds ?h)
                    )
                  )
                )
              )
            )
            (exists (?d - hexagonal_bin)
              (and
                (game-conserved
                  (agent_holds ?d)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference woodenBlockMovedFromRugToDesk
      (exists (?w - ball)
        (then
          (hold (= (distance ?w ?w) 1) )
          (hold-to-end (agent_holds floor) )
          (once (in_motion ?w) )
        )
      )
    )
    (preference ballRolledOnRampToRug
      (exists (?o2 - dodgeball ?l - hexagonal_bin ?w - hexagonal_bin ?r - hexagonal_bin)
        (then
          (hold-while (not (and (in_motion ?r) (in_motion ?r) (agent_holds pink) ) ) (in_motion ?r) )
          (hold (< (distance ?r ?r) (distance ?r ?r)) )
          (hold (not (< 4 1) ) )
        )
      )
    )
  )
)
(:terminal
  (> (- (+ (count-once-per-objects woodenBlockMovedFromRugToDesk:golfball) 25 )
    )
    (count-once-per-objects woodenBlockMovedFromRugToDesk:doggie_bed)
  )
)
(:scoring
  7
)
)

(define (game game-id-631) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (and
        (forall (?l1 - block)
          (and
            (forall (?b - hexagonal_bin)
              (game-conserved
                (on ?l1 ?b)
              )
            )
            (game-optional
              (not
                (or
                  (not
                    (agent_holds ?l1)
                  )
                  (and
                    (on ?l1 ?l1)
                    (and
                      (on ?l1 ?l1)
                      (or
                        (not
                          (and
                            (in_motion ?l1)
                            (not
                              (agent_holds ?l1)
                            )
                          )
                        )
                        (and
                          (agent_holds left)
                          (same_object ?l1 ?l1)
                          (in_motion ?l1)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
    (exists (?c - (either cd desktop triangle_block))
      (and
        (game-conserved
          (on rug ?c)
        )
        (game-optional
          (not
            (touch bed ?c)
          )
        )
        (forall (?b8 - teddy_bear)
          (game-conserved
            (in_motion ?b8)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockInTowerKnocked
      (exists (?d - doggie_bed ?d - (either dodgeball flat_block laptop))
        (then
          (once (and (on ?d ?d) (exists (?g - pyramid_block) (agent_holds ?d) ) (same_object ?d ?d) (not (not (in ?d ?d) ) ) ) )
          (once (game_over ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (not
      (or
        (> (count-once blockInTowerKnocked:golfball) (* 6 (count blockInTowerKnocked:alarm_clock:book) )
        )
        (>= (count-once-per-objects blockInTowerKnocked:golfball) 0 )
      )
    )
    (> (count blockInTowerKnocked) (count-once-per-objects blockInTowerKnocked:golfball) )
  )
)
(:scoring
  (count-once-per-objects blockInTowerKnocked:dodgeball:block)
)
)

(define (game game-id-632) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - (either key_chain alarm_clock) ?x ?h - game_object)
      (and
        (forall (?b - hexagonal_bin)
          (forall (?c4 - (either game_object laptop))
            (game-conserved
              (not
                (not
                  (on ?c4 ?h)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrowAttempt
      (exists (?b - dodgeball)
        (then
          (once (same_type agent ?b) )
          (once (adjacent ?b ?b) )
          (once (and (object_orientation ?b ?b) (on ?b front_left_corner) ) )
        )
      )
    )
  )
)
(:terminal
  (<= (count-once-per-objects ballThrowAttempt:basketball:yellow_pyramid_block:beachball) 5 )
)
(:scoring
  25
)
)

(define (game game-id-633) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (agent_holds bed)
  )
)
(:constraints
  (and
    (preference throwFromEdgeOfRug
      (exists (?ob - teddy_bear)
        (then
          (hold (= (distance bed agent) 1 (distance_side ?ob ?ob ?ob ?ob)) )
          (once (not (same_color ?ob ?ob) ) )
          (once (agent_holds ?ob) )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (- (count throwFromEdgeOfRug:golfball:golfball) )
  )
)
(:scoring
  (* 5 10 )
)
)

(define (game game-id-634) (:domain many-objects-room-v1)
(:setup
  (forall (?h - pillow ?s - ball)
    (and
      (game-conserved
        (< 0.5 (x_position ?s))
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?w2 ?w ?o3 ?r ?b4 ?h ?d ?h ?b ?b2 - curved_wooden_ramp ?b - hexagonal_bin ?p - chair)
        (then
          (once (in_motion door) )
          (once (in_motion ?p) )
          (hold (not (not (not (exists (?p1 - (either pen cd cylindrical_block)) (< (distance agent ?p) (distance ?p1 ?p1)) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (< (count ballThrownToBin:blue_dodgeball) (- (count ballThrownToBin:red) )
      )
      (count ballThrownToBin:dodgeball)
    )
    10
  )
)
(:scoring
  (total-score)
)
)

(define (game game-id-635) (:domain medium-objects-room-v1)
(:setup
  (not
    (exists (?h - game_object ?p - teddy_bear)
      (exists (?d - pyramid_block)
        (exists (?o2 - (either doggie_bed bridge_block))
          (game-conserved
            (game_start )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockCorrectlyPicked
      (exists (?w1 - cylindrical_block ?p3 - dodgeball)
        (then
          (once (adjacent ?p3 block) )
          (hold (not (and (adjacent ?p3 desk) (agent_holds agent) (in_motion ?p3) ) ) )
          (hold (in_motion ?p3) )
        )
      )
    )
    (forall (?h - teddy_bear ?d - ball ?h - block)
      (and
        (preference objectToBinOnFirstTry
          (exists (?b - ball ?o ?d - hexagonal_bin ?t2 - (either triangle_block alarm_clock))
            (then
              (hold (on desk ?t2) )
              (once (agent_holds ?h) )
              (once (on ?h room_center) )
            )
          )
        )
        (preference dodgeballHitsBinBottom
          (exists (?g - hexagonal_bin)
            (then
              (hold (on agent upright) )
              (hold (adjacent_side ?h ?g agent) )
              (hold (adjacent ?g ?g) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 5 (external-forall-maximize (count-shortest objectToBinOnFirstTry:golfball:purple) ) )
  )
)
(:scoring
  (* 3 (* (+ 10 (* (* (external-forall-minimize (count dodgeballHitsBinBottom:golfball:basketball:blue_pyramid_block) ) (external-forall-minimize (+ (+ (count dodgeballHitsBinBottom:doggie_bed) (* (total-time) (and (* (* (* (+ (* (count dodgeballHitsBinBottom:dodgeball) 1 (count blockCorrectlyPicked:purple:red:pink) )
                              (* 5 1 )
                              (count objectToBinOnFirstTry:basketball:pink:basketball)
                              5
                            )
                            2
                          )
                          (* 3 (count-shortest blockCorrectlyPicked:beachball) )
                        )
                        20
                        (count-once-per-objects blockCorrectlyPicked:beachball)
                        (count-once-per-objects blockCorrectlyPicked:red:dodgeball:red)
                        (* (+ (count-once-per-objects objectToBinOnFirstTry:brown:basketball) 0.5 )
                        )
                        (- (count blockCorrectlyPicked:pink_dodgeball) )
                      )
                      3
                      (* 2 (* 5 (count objectToBinOnFirstTry:tall_cylindrical_block:basketball:yellow_pyramid_block) (count objectToBinOnFirstTry:bed) )
                      )
                    )
                  )
                )
                (count dodgeballHitsBinBottom:golfball)
                7
              )
            )
          )
          3
        )
        3
        (* (external-forall-maximize (* (count-once-per-objects dodgeballHitsBinBottom:beachball) (* (* 4 2 )
                (* 10 (* 5 10 )
                )
              )
            )
          )
          4
        )
        (count-once dodgeballHitsBinBottom:purple)
        2
        (>= (external-forall-minimize (* 7 10 )
          )
          (+ (count-once-per-objects dodgeballHitsBinBottom:basketball) (external-forall-maximize 100 ) )
        )
        (count-once-per-objects objectToBinOnFirstTry:dodgeball:dodgeball)
        6
      )
      10
    )
  )
)
)

(define (game game-id-636) (:domain many-objects-room-v1)
(:setup
  (exists (?d - block)
    (and
      (forall (?p - hexagonal_bin)
        (and
          (forall (?c4 - teddy_bear)
            (game-conserved
              (in_motion ?c4)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?x - (either cd lamp) ?b6 - curved_wooden_ramp ?l3 - (either pyramid_block main_light_switch pencil))
      (and
        (preference thrownBallReachesEnd
          (exists (?db - hexagonal_bin)
            (then
              (once (and (agent_holds ?db) (and (not (on agent desk) ) (in_motion ?l3) ) ) )
              (once (not (on ?l3 ?l3) ) )
              (hold (agent_holds ?l3) )
            )
          )
        )
      )
    )
    (preference throwInBin
      (exists (?t - hexagonal_bin ?t1 - block ?p - curved_wooden_ramp)
        (then
          (once (and (agent_holds ?p) ) )
          (hold (agent_holds ?p) )
          (hold (not (agent_holds ?p) ) )
        )
      )
    )
    (preference blockKnockedFromBuildingInBin
      (exists (?l4 - cube_block)
        (then
          (once (exists (?b3 - hexagonal_bin) (and (agent_holds ?l4) (on desk ?l4) ) ) )
          (once (touch ?l4 ?l4) )
          (once (in_motion bed) )
        )
      )
    )
    (forall (?h ?l2 - beachball)
      (and
        (preference ballThrownToRampToBed
          (exists (?c4 - (either bridge_block cube_block) ?d - hexagonal_bin)
            (at-end
              (on agent ?h)
            )
          )
        )
        (preference beachballBouncedOffRamp
          (at-end
            (in_motion upright)
          )
        )
      )
    )
    (preference throwAttemptFromDoor
      (exists (?o3 - block ?w - (either blue_cube_block basketball) ?bl - cube_block)
        (at-end
          (not
            (in_motion pillow)
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (> 2 (count blockKnockedFromBuildingInBin:golfball) )
    (>= 15 (count throwInBin:hexagonal_bin) )
    (>= (count ballThrownToRampToBed:basketball) (+ (count thrownBallReachesEnd:blue_dodgeball:book) (count-total blockKnockedFromBuildingInBin:hexagonal_bin:cube_block) )
    )
  )
)
(:scoring
  (* (external-forall-minimize (* 6 (* (and (count-once-per-objects blockKnockedFromBuildingInBin:orange) (count-once-per-objects throwInBin:purple) (* 20 (+ 3 (- (* 2 (total-time) 2 (count throwAttemptFromDoor:dodgeball) (count ballThrownToRampToBed:orange) (* (count throwInBin:blue_pyramid_block) (count throwInBin:beachball:green) )
                    1
                  )
                )
              )
            )
          )
          10
        )
        (count-once-per-objects throwAttemptFromDoor:red_pyramid_block)
      )
    )
    2
  )
)
)

(define (game game-id-637) (:domain many-objects-room-v1)
(:setup
  (exists (?b3 - hexagonal_bin ?l - block ?b - cube_block)
    (forall (?r - dodgeball ?d - cube_block)
      (and
        (and
          (and
            (game-conserved
              (on ?b ?d)
            )
          )
        )
        (game-optional
          (in_motion ?b)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference golfballLandsInBinThroughRamp
      (exists (?c - game_object ?p2 - building)
        (at-end
          (<= (distance ?p2 desk) (distance ?p2 ?p2))
        )
      )
    )
    (preference blueObjectMovedToRoomCenter
      (exists (?h - (either blue_cube_block side_table) ?h - (either golfball laptop) ?h ?b5 ?b7 - doggie_bed)
        (then
          (hold (and (not (on ?h ?b7) ) (agent_holds ?b5) ) )
          (once (exists (?d - (either desktop dodgeball pyramid_block)) (on ?b5 agent) ) )
          (hold (in floor ?b7) )
        )
      )
    )
    (preference blocksInPlace
      (exists (?p3 - hexagonal_bin ?b4 - dodgeball ?c - sliding_door)
        (then
          (once (agent_holds ?c) )
          (once (and (agent_holds ?c) (adjacent ?c ?c) ) )
          (hold (adjacent ?c ?c) )
        )
      )
    )
  )
)
(:terminal
  (>= 1 7 )
)
(:scoring
  (-
    (count-once-per-objects golfballLandsInBinThroughRamp:dodgeball)
    20
  )
)
)

(define (game game-id-638) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (agent_crouches )
  )
)
(:constraints
  (and
    (forall (?o5 - cube_block)
      (and
        (preference itemInClosedDrawerAtEnd
          (exists (?p1 - hexagonal_bin ?g - teddy_bear)
            (then
              (once (on ?o5 ?g) )
              (once (not (agent_holds ?o5) ) )
              (once (in_motion ?o5) )
            )
          )
        )
      )
    )
    (preference throwFromBehindChairsInBin
      (exists (?w2 - golfball)
        (then
          (once (and (in_motion ?w2) (same_color ?w2 ?w2) (in bottom_shelf ?w2) (and (not (in_motion ?w2) ) (and (in_motion ?w2) (not (on agent ?w2) ) (= (distance ?w2 south_wall) (distance ?w2 ?w2)) ) (or (not (on room_center agent) ) (not (agent_holds ?w2) ) (in ?w2 ?w2) ) (in_motion ?w2) ) ) )
          (once (agent_holds ?w2) )
          (hold (not (agent_holds ?w2) ) )
        )
      )
    )
    (forall (?h - hexagonal_bin ?b10 - dodgeball)
      (and
        (preference ballNeverThrown
          (then
            (hold-while (> 1 (distance room_center ?b10)) (not (not (agent_holds room_center) ) ) (exists (?b8 - hexagonal_bin) (in_motion ?b10) ) )
            (once (faces room_center ?b10) )
            (once (faces ?b10 ?b10) )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (* 20 (* 2 9 )
    )
  )
)
(:scoring
  (+ 3 4 30 )
)
)

(define (game game-id-639) (:domain medium-objects-room-v1)
(:setup
  (exists (?g - (either desktop hexagonal_bin))
    (forall (?b - ball)
      (forall (?b1 - pillow)
        (exists (?c3 - dodgeball)
          (exists (?h - hexagonal_bin)
            (forall (?l - shelf ?c1 - game_object)
              (and
                (exists (?b - (either triangle_block key_chain))
                  (game-conserved
                    (in ?b ?h)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - teddy_bear ?r - hexagonal_bin)
      (and
        (preference thrownBallHitsBlock
          (exists (?db - dodgeball)
            (then
              (once (in_motion ?db) )
              (hold (toggled_on ?db) )
              (once (not (and (adjacent ?db ?r) (in_motion ?r) ) ) )
              (once (not (in_motion ?db) ) )
            )
          )
        )
      )
    )
    (preference throwBallToDoggieBedOffWall
      (exists (?h - (either cd dodgeball key_chain))
        (then
          (once (and (not (agent_holds ?h) ) (not (and (and (not (or (agent_holds agent) (and (in_motion ?h) (agent_holds desk) ) ) ) (object_orientation ?h ?h) (in_motion ?h) (agent_holds ?h) ) (in_motion ?h) (is_setup_object ?h) (in ?h ?h) ) ) (agent_holds ?h) (not (in_motion ?h) ) ) )
          (hold (agent_holds ?h) )
          (once (on ?h front_left_corner) )
        )
      )
    )
  )
)
(:terminal
  (>= (count throwBallToDoggieBedOffWall:pink_dodgeball) (* 8 4 )
  )
)
(:scoring
  (and
    (count-once-per-objects throwBallToDoggieBedOffWall:dodgeball)
    7
  )
)
)

(define (game game-id-640) (:domain many-objects-room-v1)
(:setup
  (exists (?b6 - building ?g - game_object)
    (game-conserved
      (and
        (not
          (opposite ?g ?g)
        )
        (agent_holds agent)
      )
    )
  )
)
(:constraints
  (and
    (forall (?o - (either cellphone dodgeball) ?p - game_object ?b - hexagonal_bin ?b5 - ball)
      (and
        (preference basketMadeFromRug
          (exists (?c ?d ?l4 - game_object ?d1 - game_object)
            (then
              (once (and (agent_holds ?d1) (= 4 1) ) )
              (once (not (on ?d1 desk) ) )
              (hold-to-end (and (not (and (and (> (distance ?b5 room_center) 1) (adjacent_side ?d1 blinds bed) ) (and (exists (?o1 - (either desktop doggie_bed) ?t ?b9 ?h ?r ?h ?o5 - hexagonal_bin ?o - hexagonal_bin) (in_motion ?b5) ) (between ?d1 room_center ?d1) ) ) ) (in_motion ?d1) ) )
              (hold (not (not (and (on ?b5 ?d1) (not (same_type ?d1 drawer) ) ) ) ) )
            )
          )
        )
      )
    )
    (preference cubeBlockFromBedToShelf
      (exists (?r1 - hexagonal_bin)
        (then
          (hold (exists (?b2 - game_object) (on ?b2 bed) ) )
          (hold (touch ?r1 ?r1) )
          (hold (or (object_orientation ?r1 ?r1) (agent_holds ?r1) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count basketMadeFromRug:orange:hexagonal_bin) (* 4 (* 3 (* (total-time) (count-once-per-objects basketMadeFromRug) )
      )
    )
  )
)
(:scoring
  (count-once-per-objects cubeBlockFromBedToShelf:yellow)
)
)

(define (game game-id-641) (:domain medium-objects-room-v1)
(:setup
  (forall (?p - hexagonal_bin ?d - shelf)
    (game-optional
      (in_motion ?d)
    )
  )
)
(:constraints
  (and
    (preference ballThrownIntoTarget
      (exists (?h - cube_block ?b - building ?b4 - building ?b5 - hexagonal_bin)
        (then
          (hold-while (in_motion ?b5) (not (in_motion ?b5) ) )
          (once (not (agent_holds rug) ) )
          (once (exists (?l1 - (either laptop desktop)) (agent_holds ?l1) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (and (* (= (count-once-per-objects ballThrownIntoTarget:pink_dodgeball) (count-once-per-objects ballThrownIntoTarget:yellow_cube_block) )
        (* (or (* (+ (count-once-per-external-objects ballThrownIntoTarget:dodgeball) 6 )
              (count ballThrownIntoTarget:basketball)
            )
            (count ballThrownIntoTarget:yellow)
            (count-once ballThrownIntoTarget:dodgeball)
          )
          10
        )
        (* (count ballThrownIntoTarget) (* (+ (* (count-once-per-objects ballThrownIntoTarget:pink_dodgeball) 300 (+ (count-once-per-objects ballThrownIntoTarget:pink_dodgeball) (+ (* 5 )
                    (- (count ballThrownIntoTarget:blue_cube_block) )
                  )
                )
                (count ballThrownIntoTarget:beachball)
                (+ (count ballThrownIntoTarget:dodgeball) (* (* (* (count ballThrownIntoTarget:yellow) 9 )
                      (- 60 )
                    )
                    (count ballThrownIntoTarget:basketball)
                    (and
                      (count ballThrownIntoTarget:golfball)
                      (count ballThrownIntoTarget:golfball:triangle_block)
                    )
                  )
                )
                3
              )
              (* (count-once-per-objects ballThrownIntoTarget:yellow:orange) (count-once-per-objects ballThrownIntoTarget:dodgeball) (count ballThrownIntoTarget:dodgeball) )
            )
            (total-score)
          )
        )
        (* 2 )
      )
      (count ballThrownIntoTarget:red_pyramid_block:purple)
      (+ 3 (external-forall-minimize (* (count-once-per-objects ballThrownIntoTarget:dodgeball) )
        )
      )
    )
    (count ballThrownIntoTarget:yellow)
  )
)
(:scoring
  15
)
)

(define (game game-id-642) (:domain many-objects-room-v1)
(:setup
  (forall (?h - wall)
    (and
      (exists (?l2 - hexagonal_bin ?ob - (either top_drawer golfball) ?o4 - red_dodgeball)
        (game-conserved
          (same_object floor ?o4)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownFromObjectToBin
      (exists (?r2 - tall_cylindrical_block ?o - wall)
        (then
          (once (broken bed) )
          (once (rug_color_under ?o ?o) )
          (once (in_motion ?o) )
        )
      )
    )
    (preference baseBlockInTowerAtEnd
      (exists (?tb - block)
        (then
          (once (in_motion blue) )
          (once (agent_holds ?tb) )
          (once (= (distance ?tb ?tb)) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (* 3 (- (count baseBlockInTowerAtEnd:pink_dodgeball) )
      )
      7
    )
  )
)
(:scoring
  2
)
)

(define (game game-id-643) (:domain few-objects-room-v1)
(:setup
  (exists (?d - (either cellphone bridge_block))
    (forall (?tb - curved_wooden_ramp)
      (and
        (game-optional
          (or
            (adjacent bed ?tb)
            (and
              (above ?d ?d)
              (not
                (not
                  (not
                    (and
                      (and
                        (agent_holds ?d)
                        (not
                          (in_motion room_center)
                        )
                      )
                      (not
                        (and
                          (agent_holds ?tb)
                          (not
                            (in_motion ?tb)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
        (forall (?l1 - ball)
          (and
            (game-optional
              (exists (?d - hexagonal_bin ?r - blinds ?b - hexagonal_bin)
                (agent_holds ?b)
              )
            )
          )
        )
        (game-optional
          (adjacent ?d ?d)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h ?tb ?h - hexagonal_bin)
      (and
        (preference redDodgeballThrownToBin
          (exists (?bl - hexagonal_bin)
            (then
              (once (object_orientation ?h ?h) )
              (once (and (game_over ) (and (not (and (in ?bl ?bl) (in_motion ?h) ) ) (adjacent_side west_wall ?bl ?tb) ) ) )
              (hold (on ?bl ?tb) )
            )
          )
        )
      )
    )
    (preference dodgeballBouncesOnceToDoggieBed
      (exists (?b - (either cellphone laptop alarm_clock))
        (then
          (hold (same_color ?b ?b) )
          (once (adjacent desk rug) )
          (hold-while (not (in_motion ?b) ) (on ?b ?b) )
          (once (not (and (in_motion ?b) (not (on ?b ?b) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects redDodgeballThrownToBin:dodgeball) (* (count-once-per-objects dodgeballBouncesOnceToDoggieBed:green:blue_dodgeball) 3 )
  )
)
(:scoring
  (count dodgeballBouncesOnceToDoggieBed:beachball)
)
)

(define (game game-id-644) (:domain medium-objects-room-v1)
(:setup
  (exists (?b - hexagonal_bin)
    (exists (?c2 - block)
      (and
        (game-optional
          (adjacent ?c2 desk)
        )
        (forall (?b10 - cube_block)
          (forall (?bl - pillow)
            (game-optional
              (and
                (in ?b desk)
                (in_motion ?b10)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference castleBuilt
      (exists (?c6 - hexagonal_bin ?l - dodgeball)
        (then
          (once (agent_holds ?l) )
          (once (on ?l ?l) )
          (once (< 1 2) )
        )
      )
    )
    (preference pillowThrownToDoggieBed
      (exists (?o2 - shelf)
        (then
          (once (agent_holds sideways) )
          (hold-while (touch ?o2 ?o2) (and (adjacent ?o2 agent) (in_motion ?o2) ) )
          (hold (game_start ) )
        )
      )
    )
    (preference throwOverRamp
      (exists (?b1 - bridge_block ?o - (either wall yellow_cube_block) ?l4 - dodgeball)
        (then
          (once (in ?l4 ?l4) )
          (hold-to-end (opposite ?l4 ?l4) )
          (hold-for 4 (agent_holds ?l4) )
          (once (not (and (in ?l4 ?l4) (not (in_motion ?l4) ) ) ) )
          (once-measure (< 2 (x_position ?l4)) (distance_side ?l4 ?l4 ?l4) )
          (once (in_motion ?l4) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects throwOverRamp) 10 )
)
(:scoring
  3
)
)

(define (game game-id-645) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (exists (?b ?d - doggie_bed)
        (game-optional
          (not
            (and
              (adjacent ?d ?b)
              (is_setup_object ?d)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockPlacedInBuilding
      (exists (?c - block ?c3 - color ?d ?h - curved_wooden_ramp ?t1 - triangular_ramp)
        (then
          (hold (in_motion ?t1) )
          (once (not (agent_holds ?t1) ) )
          (once (adjacent desk ?t1) )
        )
      )
    )
    (preference ballKnocksBlockFromRug
      (exists (?ob - pyramid_block ?ob - game_object ?b - hexagonal_bin)
        (then
          (once (on ?b ?b) )
          (hold (not (in_motion ?b) ) )
          (once (adjacent ?b agent) )
        )
      )
    )
  )
)
(:terminal
  (> (+ (count-overlapping blockPlacedInBuilding:yellow) 5 )
    (external-forall-maximize
      (count-once-per-objects ballKnocksBlockFromRug:purple)
    )
  )
)
(:scoring
  (* (count ballKnocksBlockFromRug:yellow) 30 )
)
)

(define (game game-id-646) (:domain medium-objects-room-v1)
(:setup
  (forall (?o1 - hexagonal_bin)
    (game-optional
      (adjacent agent ?o1)
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?b2 - hexagonal_bin ?b - curved_wooden_ramp)
        (then
          (hold-for 0 (and (not (in ?b ?b) ) (exists (?o - hexagonal_bin) (toggled_on ?b) ) ) )
          (once (not (not (above ?b ?b) ) ) )
          (once (agent_holds ?b) )
        )
      )
    )
    (forall (?c1 - (either yellow_cube_block blue_cube_block))
      (and
        (preference blockFromRugToDesk
          (exists (?b - dodgeball)
            (then
              (once (not (or (touch ?c1 bed) (and (and (in_motion ?c1) (agent_holds ?b) ) (agent_holds ?c1) (is_setup_object ?b) ) (not (not (agent_holds ?b) ) ) ) ) )
              (once (not (or (and (< 4 4) (in_motion ?c1) ) (and (in ?c1 ?c1) (touch ?b ?b) ) ) ) )
              (once (not (agent_holds agent) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (>= (* (count-total throwAttempt:yellow) 3 )
        (+ (* (count-once-per-objects throwAttempt:golfball) (count blockFromRugToDesk:dodgeball:beachball:beachball) )
          (count blockFromRugToDesk:purple)
        )
      )
      (and
        (>= (= (count throwAttempt:beachball:yellow) (= 300 )
          )
          3
        )
      )
    )
    (>= (total-time) (count-shortest throwAttempt) )
    (or
      (>= 2 (+ 20 (count throwAttempt:yellow) )
      )
      (> (count throwAttempt:dodgeball) (count-once-per-objects throwAttempt:alarm_clock) )
      (>= (* (count throwAttempt:blue_dodgeball) (count throwAttempt:basketball) )
        4
      )
    )
  )
)
(:scoring
  (* (>= (count-once-per-objects blockFromRugToDesk:beachball) (external-forall-maximize (count blockFromRugToDesk:pink) ) )
    (count throwAttempt:block)
  )
)
)

(define (game game-id-647) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?h - hexagonal_bin)
      (not
        (game-optional
          (agent_holds ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b2 - hexagonal_bin)
      (and
        (preference baseBlockInTowerAtEnd
          (exists (?o2 - cube_block)
            (then
              (once (in ?b2 ?b2) )
              (once (in ?b2 ?b2) )
              (once (and (in_motion ?b2) (in_motion ?o2) ) )
            )
          )
        )
      )
    )
    (forall (?b - game_object)
      (and
        (preference smallItemsInPlace
          (exists (?o - ball ?d - hexagonal_bin ?o - hexagonal_bin)
            (at-end
              (adjacent ?o floor)
            )
          )
        )
      )
    )
    (preference towerFallsWhileBuilding
      (exists (?t - dodgeball)
        (then
          (hold-while (not (and (same_object ?t ?t) (and (agent_holds block) (on ?t room_center) ) ) ) (and (agent_holds ?t) (game_start ) ) )
          (hold (adjacent upright ?t) )
          (once (not (and (not (in_motion ?t) ) (agent_holds ?t) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (< 5 20 )
  )
)
(:scoring
  (count-once-per-objects smallItemsInPlace:dodgeball)
)
)

(define (game game-id-648) (:domain few-objects-room-v1)
(:setup
  (forall (?h - (either yellow golfball) ?c - pyramid_block)
    (forall (?s - curved_wooden_ramp)
      (game-optional
        (not
          (not
            (agent_holds desk)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference castleBuilt
      (exists (?c3 - block)
        (then
          (once (and (in_motion ?c3) (in_motion ?c3) ) )
          (once (not (agent_holds ?c3) ) )
          (hold (on agent ?c3) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 3 7 )
  )
)
(:scoring
  100
)
)

(define (game game-id-649) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (forall (?x ?r2 - block)
        (and
          (and
            (exists (?t - wall)
              (game-optional
                (not
                  (agent_holds ?t)
                )
              )
            )
            (exists (?b5 - pyramid_block ?o3 - game_object)
              (and
                (exists (?r2 - desktop)
                  (game-conserved
                    (equal_x_position ?x ?r2)
                  )
                )
              )
            )
          )
          (game-conserved
            (not
              (not
                (in_motion ?x)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownOntoTarget
      (exists (?p ?l - block)
        (then
          (hold (on ?p ?p) )
          (hold (agent_holds ?l) )
          (once (not (not (not (in_motion ?p) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ 10 (* (* (count ballThrownOntoTarget:white:orange:blue_dodgeball) 5 )
        (total-score)
      )
    )
    10
  )
)
(:scoring
  (* 1 (* (+ (count ballThrownOntoTarget:pink) (- (count ballThrownOntoTarget:wall) )
      )
      (count ballThrownOntoTarget:dodgeball)
    )
    (total-time)
    (* (+ (count-once-per-objects ballThrownOntoTarget:blue_dodgeball) (count ballThrownOntoTarget:doggie_bed) )
      (external-forall-maximize
        (total-score)
      )
    )
  )
)
)

(define (game game-id-650) (:domain medium-objects-room-v1)
(:setup
  (forall (?o4 - game_object)
    (game-conserved
      (exists (?h - teddy_bear)
        (open ?h)
      )
    )
  )
)
(:constraints
  (and
    (preference throwMissesBin
      (exists (?b - dodgeball)
        (then
          (once (above ?b green_golfball) )
          (once (not (and (not (in agent ?b) ) (touch ?b ?b) ) ) )
          (once (not (in_motion ?b) ) )
        )
      )
    )
  )
)
(:terminal
  (= (count-once-per-objects throwMissesBin:beachball) (count throwMissesBin:yellow) )
)
(:scoring
  (count throwMissesBin:yellow)
)
)

(define (game game-id-651) (:domain few-objects-room-v1)
(:setup
  (forall (?c4 ?d - dodgeball)
    (and
      (exists (?c ?s - dodgeball)
        (game-conserved
          (exists (?c6 - color)
            (and
              (on ?c6 ?c)
              (in_motion front)
            )
          )
        )
      )
      (game-optional
        (adjacent agent ?c4)
      )
    )
  )
)
(:constraints
  (and
    (forall (?d1 - watch)
      (and
        (preference golfballLandsInBinThroughRamp
          (exists (?b2 - cube_block ?l1 - curved_wooden_ramp)
            (then
              (once (and (= (distance ?d1 ?d1) (distance floor ?l1)) (not (in_motion bed) ) (not (or (not (in ?d1 agent) ) (not (in_motion ?l1) ) ) ) ) )
              (hold (above ?l1 ?l1) )
              (hold (and (agent_holds agent) (and (in_motion ?d1) (agent_holds ?d1) ) ) )
            )
          )
        )
      )
    )
    (preference itemsTurnedOff
      (exists (?d ?d - (either book dodgeball))
        (then
          (once (and (and (not (agent_holds brown) ) (not (>= 4 (x_position ?d)) ) ) (agent_holds ?d) ) )
          (hold (and (in_motion ?d) (in_motion rug) ) )
          (hold (in_motion ?d) )
        )
      )
    )
    (preference ballThrownThroughRampAndBlocksToBin
      (exists (?c - building)
        (at-end
          (agent_holds agent)
        )
      )
    )
  )
)
(:terminal
  (<= 50 12 )
)
(:scoring
  (external-forall-minimize
    10
  )
)
)

(define (game game-id-652) (:domain medium-objects-room-v1)
(:setup
  (exists (?x - (either wall dodgeball tall_cylindrical_block cube_block dodgeball laptop book) ?p1 - dodgeball)
    (forall (?g - doggie_bed)
      (game-conserved
        (not
          (opposite ?p1 ?g)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - cube_block)
      (and
        (preference blockIncorrectlyPicked
          (exists (?d - hexagonal_bin ?w - (either dodgeball desktop) ?bl - wall)
            (then
              (once (agent_holds desk) )
              (once (exists (?p3 - hexagonal_bin) (in_motion ?h) ) )
              (once (and (in_motion ?h) (not (not (agent_holds ?h) ) ) ) )
            )
          )
        )
        (preference ballThrowAttempt
          (exists (?b - drawer ?b - hexagonal_bin ?h - (either triangular_ramp yellow_cube_block pen cube_block))
            (then
              (hold-while (rug_color_under ?h ?h) (equal_z_position ?h ?h) (and (object_orientation ?h ?h) (not (agent_holds ?h) ) (in_motion ?h) ) )
              (hold (not (agent_holds ?h) ) )
              (once (in_motion desk) )
            )
          )
        )
        (preference objectMovedRoomSide
          (exists (?h - drawer)
            (then
              (once (game_start ) )
              (hold-while (in_motion ?h) (same_color ?h ?h) )
            )
          )
        )
        (preference pillowMovedToRoomCenter
          (at-end
            (in ?h rug)
          )
        )
      )
    )
    (preference throwTeddyOntoPillow
      (exists (?o5 ?s ?c2 ?d ?l ?c2 - triangular_ramp)
        (then
          (once (adjacent upright pink_dodgeball) )
          (once (and (agent_holds desk) (in ?l ?l) ) )
          (once (and (same_type ?s ?s) (on ?d agent) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (not
      (<= (count throwTeddyOntoPillow:dodgeball) (= (* (count-once-per-objects blockIncorrectlyPicked:basketball:doggie_bed:tan) (count-once-per-objects pillowMovedToRoomCenter:green:golfball) )
          (count objectMovedRoomSide:hexagonal_bin)
        )
      )
    )
  )
)
(:scoring
  10
)
)

(define (game game-id-653) (:domain few-objects-room-v1)
(:setup
  (exists (?h - teddy_bear)
    (exists (?b - hexagonal_bin)
      (and
        (game-optional
          (touch ?b ?b)
        )
        (and
          (exists (?d1 - dodgeball ?d - hexagonal_bin ?b - hexagonal_bin)
            (game-optional
              (and
                (not
                  (and
                    (<= (distance front ?h) 1)
                    (agent_holds room_center)
                  )
                )
                (in_motion ?h)
              )
            )
          )
          (game-conserved
            (and
              (adjacent agent ?b)
              (agent_holds bed)
            )
          )
          (forall (?b6 - doggie_bed ?d - game_object)
            (and
              (or
                (and
                  (and
                    (and
                      (game-optional
                        (on ?h desk)
                      )
                    )
                  )
                )
              )
              (forall (?p2 - dodgeball ?d - hexagonal_bin ?r - dodgeball ?c - game_object)
                (or
                  (game-conserved
                    (not
                      (is_setup_object ?d)
                    )
                  )
                  (forall (?b1 - (either chair desktop))
                    (forall (?h - beachball ?h - bridge_block)
                      (not
                        (exists (?tb - (either floor book))
                          (exists (?o1 - dodgeball)
                            (game-conserved
                              (on ?c ?b)
                            )
                          )
                        )
                      )
                    )
                  )
                  (game-conserved
                    (agent_holds ?b)
                  )
                )
              )
              (and
                (forall (?h - dodgeball)
                  (game-conserved
                    (in_motion ?d)
                  )
                )
              )
            )
          )
        )
        (or
          (exists (?o1 - game_object)
            (and
              (game-conserved
                (agent_holds ?h)
              )
            )
          )
          (game-optional
            (and
              (agent_holds ?h)
              (not
                (on ?h ?b)
              )
            )
          )
          (exists (?c2 - pillow)
            (forall (?h - building ?d - dodgeball)
              (game-conserved
                (in_motion upright)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?r1 - (either dodgeball doggie_bed))
      (and
        (preference objectWithMatchingColor
          (exists (?h ?o ?d - game_object)
            (then
              (hold (on ?h ?d) )
              (once (agent_holds ?d) )
              (hold (rug_color_under ?h ?d) )
            )
          )
        )
        (preference teddyBearHitsBall
          (exists (?b - hexagonal_bin)
            (then
              (forall-sequence (?bl ?d ?o ?l4 ?b - blue_pyramid_block ?l2 ?w2 ?t ?h ?h ?c2 ?b3 ?d ?d ?d - cylindrical_block)
                (then
                  (once (not (not (and (touch rug ?b3) (exists (?b4 - cube_block) (object_orientation ?l2 ?b3) ) ) ) ) )
                  (hold (on ?b ?h) )
                  (once (and (not (agent_crouches ) ) (in floor ?c2) (and (on ?d ?l2) (in_motion ?l2) ) (in blue ?w2) (in ?d bed) (touch ?l2 desk) ) )
                )
              )
              (once (and (not (on ?r1 ?r1) ) (on ?b ?r1) ) )
              (forall-sequence (?b - ball ?b6 - dodgeball)
                (then
                  (once (not (touch agent ?b6) ) )
                  (hold (in_motion ?r1) )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-external-objects objectWithMatchingColor:basketball) (external-forall-maximize (count teddyBearHitsBall:yellow) ) )
)
(:scoring
  (* 5 (count teddyBearHitsBall:beachball:yellow_cube_block) )
)
)

(define (game game-id-654) (:domain many-objects-room-v1)
(:setup
  (exists (?h - ball)
    (and
      (exists (?c - building)
        (exists (?h - hexagonal_bin)
          (exists (?o - drawer)
            (and
              (forall (?h - hexagonal_bin ?c2 - (either doggie_bed wall hexagonal_bin golfball cube_block golfball golfball))
                (and
                  (game-conserved
                    (touch ?c ?c)
                  )
                  (game-conserved
                    (and
                      (not
                        (broken ?c2)
                      )
                      (adjacent ?o ?o)
                      (in_motion ?o)
                    )
                  )
                  (game-conserved
                    (and
                      (and
                        (and
                          (adjacent_side ?c agent ?o)
                          (exists (?o ?c - doggie_bed)
                            (in_motion ?c)
                          )
                        )
                        (not
                          (agent_holds ?o)
                        )
                      )
                      (and
                        (= (distance ?c ?c) 6)
                        (not
                          (agent_holds pink)
                        )
                      )
                    )
                  )
                )
              )
              (exists (?b - teddy_bear)
                (game-conserved
                  (on ?o ?o)
                )
              )
            )
          )
        )
      )
      (game-optional
        (and
          (< 2 (distance ?h ?h))
          (agent_holds ?h)
        )
      )
      (forall (?c2 - hexagonal_bin)
        (game-conserved
          (agent_holds ?c2)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference failedThrowAttempt
      (exists (?p3 - game_object)
        (then
          (hold (and (and (not (adjacent ?p3 ?p3) ) (not (agent_holds desk) ) ) (on ?p3 ?p3) ) )
          (hold (on ?p3 ?p3) )
          (once (< 1 (distance_side ?p3 ?p3 ?p3)) )
        )
      )
    )
  )
)
(:terminal
  (>= (count failedThrowAttempt:side_table:yellow_cube_block) 0 )
)
(:scoring
  20
)
)

(define (game game-id-655) (:domain many-objects-room-v1)
(:setup
  (exists (?d - teddy_bear ?b - ball ?h - sliding_door)
    (exists (?c1 - (either cylindrical_block alarm_clock cellphone))
      (game-conserved
        (not
          (in_motion ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?r - desk_shelf ?r - hexagonal_bin ?b2 ?t2 - dodgeball)
      (and
        (preference thrownObjectHitsComputer
          (exists (?o1 - ball ?db - hexagonal_bin)
            (at-end
              (and
                (agent_holds ?t2)
                (on ?b2 ?t2)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (count-once thrownObjectHitsComputer:golfball) 2 )
    (< (count thrownObjectHitsComputer:doggie_bed) 5 )
    (>= (total-time) (* (- 6 )
        (* 10 )
      )
    )
  )
)
(:scoring
  (external-forall-minimize
    (* (count-same-positions thrownObjectHitsComputer:yellow:yellow_cube_block) 4 )
  )
)
)

(define (game game-id-656) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?b2 - curved_wooden_ramp)
      (game-conserved
        (not
          (and
            (is_setup_object ?b2)
            (agent_holds ?b2)
          )
        )
      )
    )
    (exists (?w1 - building)
      (exists (?b1 ?d - wall ?d - doggie_bed)
        (exists (?c ?p ?tb - hexagonal_bin ?l - dodgeball)
          (not
            (game-conserved
              (forall (?t - (either lamp alarm_clock))
                (not
                  (faces ?d ?d)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballKnocksBlockFromRug
      (exists (?w2 - (either yellow lamp key_chain))
        (at-end
          (agent_holds ?w2)
        )
      )
    )
    (preference throwBallToBin
      (exists (?h - red_dodgeball)
        (then
          (hold (adjacent ?h ?h) )
          (once (agent_holds ?h) )
          (once (and (on ?h ?h) (in_motion ?h) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-once-per-objects throwBallToBin:blue_cube_block) (= (count-once-per-objects throwBallToBin:beachball) (* 8 (* (count ballKnocksBlockFromRug:pink) (* 3 (count-once-per-external-objects throwBallToBin:basketball:yellow_cube_block:alarm_clock) )
          )
        )
      )
    )
    (< 5 25 )
    (or
      (>= (count ballKnocksBlockFromRug:tan:blue_dodgeball) (count-measure throwBallToBin:bed:pink_dodgeball) )
      (>= (total-time) (count-once-per-objects throwBallToBin:dodgeball) )
    )
  )
)
(:scoring
  (- (external-forall-maximize 5 ) )
)
)

(define (game game-id-657) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (not
        (exists (?h - ball)
          (and
            (exists (?b1 ?r - hexagonal_bin)
              (and
                (game-conserved
                  (not
                    (in_motion ?h)
                  )
                )
                (forall (?b3 - beachball)
                  (and
                    (exists (?b - dodgeball ?r - cube_block ?g ?o - hexagonal_bin)
                      (and
                        (exists (?b - dodgeball ?b3 - hexagonal_bin)
                          (forall (?p - (either book alarm_clock))
                            (game-conserved
                              (= (distance_side ?g ?o ?r) (distance ?p floor))
                            )
                          )
                        )
                      )
                    )
                    (exists (?f - hexagonal_bin)
                      (exists (?o4 - dodgeball)
                        (and
                          (exists (?o5 - cube_block)
                            (not
                              (game-optional
                                (and
                                  (in ?r ?b1)
                                  (or
                                    (and
                                      (not
                                        (and
                                          (agent_holds ?o4)
                                          (agent_holds ?o4)
                                        )
                                      )
                                      (and
                                        (exists (?db - hexagonal_bin)
                                          (and
                                            (exists (?x - (either dodgeball laptop))
                                              (in ?h bed)
                                            )
                                            (not
                                              (agent_holds ?o5)
                                            )
                                          )
                                        )
                                        (not
                                          (or
                                            (and
                                              (and
                                                (in_motion ?b3)
                                                (adjacent_side upside_down ?r ?b3 ?r)
                                                (and
                                                  (agent_holds ?f)
                                                  (adjacent_side ?b3 ?b1 block agent)
                                                )
                                              )
                                              (agent_holds ?h)
                                            )
                                            (not
                                              (on ?f ?b1)
                                            )
                                          )
                                        )
                                      )
                                      (not
                                        (in_motion ?o5)
                                      )
                                    )
                                    (in_motion ?b1)
                                    (agent_holds ?o5)
                                  )
                                  (agent_holds ?f)
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                    (exists (?w2 - dodgeball)
                      (and
                        (and
                          (game-optional
                            (not
                              (and
                                (touch ?h ?r)
                                (not
                                  (in_motion ?b1)
                                )
                              )
                            )
                          )
                          (game-conserved
                            (not
                              (agent_holds ?r)
                            )
                          )
                          (exists (?d - ball)
                            (game-optional
                              (agent_holds ?r)
                            )
                          )
                        )
                      )
                    )
                  )
                )
                (and
                  (and
                    (game-optional
                      (in ?h ?h)
                    )
                  )
                  (forall (?c ?l1 ?x ?h - hexagonal_bin)
                    (game-optional
                      (and
                        (in ?b1 ?l1)
                        (touch ?x ?c)
                        (not
                          (in_motion agent)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference gameObjectToBin
      (exists (?r - ball)
        (at-end
          (on ?r ?r)
        )
      )
    )
    (forall (?b - hexagonal_bin)
      (and
        (preference ballToBinFromBed
          (exists (?t - ball)
            (then
              (hold (not (or (and (adjacent pink_dodgeball ?b) (agent_holds ?t) ) (agent_holds ?t) ) ) )
              (once (and (agent_holds ?t) (adjacent ?t ?b) ) )
              (once (not (and (or (and (and (and (not (and (not (and (in ?t room_center) (or (same_color ?b ?t) (adjacent ?b ?t) (exists (?c4 - hexagonal_bin) (and (agent_holds room_center) (and (on ?t ?t) (on ?b ?t) ) (in ?c4 ?c4) ) ) (< (distance_side ?t ?b ?b) (distance ?b ?t)) ) ) ) (not (on ?t agent) ) ) ) (agent_holds rug) (not (agent_holds ?t) ) ) (touch ?t ?b) ) (and (not (in_motion ?t) ) (not (object_orientation ?b ?t) ) (adjacent ?t ?b) (and (in ?t ?t) (and (and (same_color ?t ?t) (exists (?c3 - doggie_bed ?c6 - yellow_cube_block) (above ?t ?t) ) (agent_holds ?b) ) (in_motion ?b) ) ) ) ) (and (not (not (in door ?t) ) ) (agent_holds rug) ) ) (agent_holds ?t) ) ) )
            )
          )
        )
        (preference throwBallToDoggieBedOffWall
          (exists (?p - wall)
            (then
              (once (on bed ?p) )
              (once (not (in_motion ?p) ) )
              (hold (same_color ?p ?p) )
            )
          )
        )
      )
    )
    (forall (?t - hexagonal_bin)
      (and
        (preference ballThrownToBed
          (exists (?h - hexagonal_bin)
            (at-end
              (in ?h bed)
            )
          )
        )
        (preference smallObjectThrownToBed
          (exists (?c - cylindrical_block)
            (at-end
              (agent_holds ?t)
            )
          )
        )
        (preference gameBlockFound
          (exists (?p - game_object)
            (then
              (hold (is_setup_object ?t) )
              (once (on ?t ?p) )
              (once (touch ?t ?t) )
            )
          )
        )
      )
    )
    (preference throwAttempt
      (exists (?h - (either blue_cube_block pencil) ?h - dodgeball)
        (then
          (hold (and (on ?h ?h) (and (not (same_color ?h ?h) ) (and (on ?h ?h) (faces ?h ?h) ) (and (not (= 0 1) ) (in_motion ?h) (touch ?h ?h) (and (adjacent_side ?h bed ?h room_center) (on desk tan) ) (agent_holds ?h) (not (agent_holds ?h) ) (and (or (or (rug_color_under floor ?h) (and (and (< 1 (distance ?h ?h)) (in_motion ?h) ) (same_type ?h ?h) ) ) (not (and (on ?h ?h) (in_motion ?h) (not (agent_holds ?h) ) (exists (?c - block) (exists (?g - hexagonal_bin) (not (in ?c ?c) ) ) ) (and (touch ?h ?h) (and (and (and (and (agent_holds ?h) (game_over ) ) (and (in ?h ?h) (object_orientation ?h floor) ) ) (on door ?h) (exists (?h - hexagonal_bin) (touch yellow ?h) ) ) (and (in_motion ?h) ) ) ) (not (in_motion ?h) ) (and (not (agent_holds ?h) ) (in_motion ?h) ) (and (< 1 (distance ?h ?h)) (agent_holds ?h) ) ) ) ) (in ?h ?h) (not (on ?h pink_dodgeball) ) ) ) (not (in_motion ?h) ) ) (on back ?h) ) )
          (once (not (in_motion ?h) ) )
          (once (and (agent_holds ?h) (not (not (agent_holds desk) ) ) ) )
        )
      )
    )
    (preference golfballLandsInBinThroughRamp
      (exists (?g - hexagonal_bin)
        (then
          (hold (equal_z_position ?g ?g) )
          (hold (and (on ?g ?g) (not (and (in_motion ?g) (and (agent_holds ?g) (agent_holds top_shelf) (agent_holds ?g) ) ) ) ) )
          (once (on ?g blinds) )
          (once (exists (?b - (either yellow_cube_block main_light_switch pillow) ?h - hexagonal_bin) (in_motion ?g) ) )
          (once (exists (?w2 - doggie_bed) (not (in ?w2 desk) ) ) )
        )
      )
    )
    (preference throwToBinFromDistance
      (exists (?b7 - (either pencil pyramid_block yellow_cube_block))
        (then
          (once (in_motion ?b7) )
          (hold (on ?b7 ?b7) )
          (once (on ?b7 ?b7) )
        )
      )
    )
  )
)
(:terminal
  (>= 1 (count throwAttempt:pink_dodgeball:pink) )
)
(:scoring
  (count gameBlockFound:blue_cube_block)
)
)

(define (game game-id-658) (:domain medium-objects-room-v1)
(:setup
  (exists (?l2 - (either pen book))
    (and
      (and
        (and
          (game-optional
            (broken ?l2)
          )
          (exists (?r - game_object)
            (and
              (game-conserved
                (agent_holds ?r)
              )
              (exists (?b10 - triangular_ramp)
                (game-conserved
                  (not
                    (in_motion ?l2)
                  )
                )
              )
              (game-conserved
                (touch desk ?l2)
              )
            )
          )
          (game-conserved
            (touch bed ?l2)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference tanObjectMovedToRoomCenter
      (exists (?h - cube_block ?r - block ?g - cube_block)
        (then
          (once (not (and (and (agent_holds floor) (not (on ?g ?g) ) ) (and (and (and (in_motion ?g) (agent_holds ?g) (and (not (in_motion ?g) ) (agent_holds ?g) ) ) (on front ?g) ) (and (not (agent_holds ?g) ) (agent_holds ?g) ) ) ) ) )
          (hold (in_motion ?g) )
          (once (in ?g ?g) )
        )
      )
    )
  )
)
(:terminal
  (and
    (and
      (and
        (>= (count-overlapping tanObjectMovedToRoomCenter:dodgeball:alarm_clock) (count tanObjectMovedToRoomCenter:green) )
        (or
          (or
            (>= (* (total-time) 50 )
              (count tanObjectMovedToRoomCenter:doggie_bed)
            )
            (or
              (>= 0 (count-unique-positions tanObjectMovedToRoomCenter:green) )
              (> (count-once-per-objects tanObjectMovedToRoomCenter:basketball) (count tanObjectMovedToRoomCenter:block) )
            )
          )
          (not
            (>= (count-once-per-objects tanObjectMovedToRoomCenter:cube_block) (count-once-per-objects tanObjectMovedToRoomCenter:hexagonal_bin) )
          )
          (or
            (or
              (>= 2 (count tanObjectMovedToRoomCenter:red_pyramid_block:orange) )
            )
            (> (count-once-per-objects tanObjectMovedToRoomCenter:golfball:pink) 7 )
            (or
              (or
                (>= (external-forall-maximize (- 2 )
                  )
                  (count tanObjectMovedToRoomCenter:dodgeball)
                )
                (>= (count-once-per-objects tanObjectMovedToRoomCenter:orange:orange) (external-forall-maximize 2 ) )
                (>= (* (- 10 )
                    (count-once-per-objects tanObjectMovedToRoomCenter:bed:red)
                  )
                  (- (count tanObjectMovedToRoomCenter:beachball:red) )
                )
              )
              (or
                (or
                  (>= (+ (= (count tanObjectMovedToRoomCenter:orange) 3 )
                      (count tanObjectMovedToRoomCenter:hexagonal_bin:purple:cube_block)
                    )
                    (* (* (count tanObjectMovedToRoomCenter:beachball) (count-once-per-objects tanObjectMovedToRoomCenter:pink_dodgeball:golfball) (count tanObjectMovedToRoomCenter:alarm_clock:cylindrical_block) (or (count-unique-positions tanObjectMovedToRoomCenter:dodgeball) (count tanObjectMovedToRoomCenter:yellow) ) (count tanObjectMovedToRoomCenter:bed) (count tanObjectMovedToRoomCenter:dodgeball) (- (count-shortest tanObjectMovedToRoomCenter:dodgeball) (count-once-per-objects tanObjectMovedToRoomCenter:pink:blue_dodgeball:dodgeball) ) (external-forall-maximize 6 ) (count tanObjectMovedToRoomCenter:yellow) )
                      (total-time)
                      5
                      (total-score)
                    )
                  )
                  (< 5 (count-once-per-objects tanObjectMovedToRoomCenter:beachball) )
                )
                (<= 5 (count tanObjectMovedToRoomCenter:pink_dodgeball) )
              )
              (not
                (>= 2 30 )
              )
            )
          )
          (>= (+ 3 5 )
            (count tanObjectMovedToRoomCenter:tan)
          )
        )
        (= 2 5 )
      )
    )
    (>= 2 (count-once-per-objects tanObjectMovedToRoomCenter:pink:doggie_bed) )
  )
)
(:scoring
  (* (external-forall-maximize (* (and (count-once-per-objects tanObjectMovedToRoomCenter:basketball) ) (total-time) )
    )
  )
)
)

(define (game game-id-659) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (not
      (open rug)
    )
  )
)
(:constraints
  (and
    (preference rollBallToBin
      (exists (?o2 - chair ?s ?b2 - building)
        (then
          (once (agent_holds ?b2) )
          (once (same_type ?s ?b2) )
          (hold (and (or (not (not (and (in_motion ?b2) (agent_holds ?b2) ) ) ) (agent_holds agent) ) (not (on ?s ?b2) ) ) )
        )
      )
    )
    (forall (?d ?b4 - hexagonal_bin)
      (and
        (preference dodgeballAndBasketballInBin
          (at-end
            (and
              (and
                (adjacent ?b4 ?d)
                (agent_holds ?b4)
              )
              (and
                (= (distance_side ?b4 ?d room_center) (distance bed ?d))
                (on door ?d)
                (< (distance ?b4 ?b4) 1)
                (adjacent_side ?d ?d ?b4 agent)
              )
              (in_motion ?d)
            )
          )
        )
        (preference throwAttempt
          (exists (?l4 - pillow ?g - hexagonal_bin)
            (then
              (once (agent_holds ?b4) )
              (once (and (and (and (same_object ?d desk) (in ?b4 ?b4) (and (and (forall (?p - doggie_bed) (not (not (not (agent_holds ?p) ) ) ) ) (broken ?g) (in_motion ?b4) (not (in_motion ?d) ) ) (agent_holds ?d) ) ) (is_setup_object ?d) ) (and (and (and (not (agent_holds ?g) ) (on ?d ?b4) ) (faces ?b4 ?g) ) (not (and (and (adjacent ?d ?g) (not (< 1 10) ) ) (not (on ?b4 ?d) ) (in_motion ?g) ) ) ) ) )
              (once (agent_holds bed) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (<= (count throwAttempt:orange) (count throwAttempt:blue_dodgeball:red:dodgeball) )
      (count throwAttempt:pink)
    )
    (>= -10 9 )
  )
)
(:scoring
  25
)
)

(define (game game-id-660) (:domain few-objects-room-v1)
(:setup
  (exists (?c1 - cube_block)
    (exists (?t - golfball)
      (exists (?l - (either beachball pen cd))
        (exists (?w2 - hexagonal_bin)
          (and
            (and
              (exists (?l ?l4 ?b ?o - building ?h - red_dodgeball ?b - ball)
                (game-optional
                  (< 2 (x_position agent))
                )
              )
            )
            (exists (?o - hexagonal_bin)
              (exists (?b - ball)
                (game-conserved
                  (exists (?g - flat_block)
                    (not
                      (game_over )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b3 - dodgeball)
      (and
        (preference ballThrownToWallToAgent
          (exists (?g - hexagonal_bin)
            (at-end
              (exists (?c - chair)
                (in agent ?b3)
              )
            )
          )
        )
      )
    )
    (preference throwBallFromOtherBallToBin
      (exists (?l4 - cylindrical_block)
        (then
          (once (game_over ) )
          (once (in_motion ?l4) )
          (hold (not (and (not (and (and (and (rug_color_under agent ?l4) (in_motion ?l4) ) (in ?l4 ?l4) ) (and (agent_holds blue) (agent_holds ?l4) (not (in_motion ?l4) ) ) (not (agent_holds ?l4) ) (same_type ?l4 ?l4) (on ?l4 pink) (exists (?b - hexagonal_bin) (not (in ?l4 ?b) ) ) (and (agent_holds ?l4) (in_motion west_wall) ) (same_color ?l4 ?l4) ) ) (in_motion desk) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count ballThrownToWallToAgent:basketball) (* (count-overlapping ballThrownToWallToAgent:pink) (external-forall-maximize (+ (count-once throwBallFromOtherBallToBin:beachball:dodgeball) (* (count ballThrownToWallToAgent:orange:yellow_cube_block) 1 )
          (+ (* (count throwBallFromOtherBallToBin:pink_dodgeball) 3 )
            (count-once-per-objects throwBallFromOtherBallToBin:dodgeball)
          )
        )
      )
    )
  )
)
(:scoring
  5
)
)

(define (game game-id-661) (:domain many-objects-room-v1)
(:setup
  (exists (?b2 - ball ?b - ball ?c4 - (either cd))
    (game-optional
      (not
        (and
          (adjacent ?c4 green_golfball)
          (agent_holds rug)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownOntoTarget
      (exists (?b3 - hexagonal_bin)
        (at-end
          (in_motion ?b3)
        )
      )
    )
  )
)
(:terminal
  (>= 5 (or 4 (* (* (count-once-per-objects ballThrownOntoTarget:golfball) (* 2 (+ (count-once-per-objects ballThrownOntoTarget) 15 )
          )
          (count ballThrownOntoTarget:wall)
          (count ballThrownOntoTarget:yellow)
          (- (* (- 4 )
              (- (total-time) )
              (count-once-per-objects ballThrownOntoTarget:golfball:blue_dodgeball)
            )
          )
          (* (count-once-per-objects ballThrownOntoTarget:rug) )
        )
        (count-once-per-objects ballThrownOntoTarget)
        3
        (* (count ballThrownOntoTarget:blue) (external-forall-maximize (count-once-per-objects ballThrownOntoTarget:cube_block:block) ) (count ballThrownOntoTarget) 2 (count-once-per-objects ballThrownOntoTarget:beachball) )
        300
        (* (count-once-per-objects ballThrownOntoTarget:top_drawer) (and (count-once-per-objects ballThrownOntoTarget:basketball:pyramid_block) ) )
        (count ballThrownOntoTarget:red)
        (count ballThrownOntoTarget:doggie_bed)
        (count-once-per-external-objects ballThrownOntoTarget:dodgeball)
      )
    )
  )
)
(:scoring
  (count-once-per-objects ballThrownOntoTarget:red)
)
)

(define (game game-id-662) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (< 9 1)
  )
)
(:constraints
  (and
    (forall (?c6 ?b - game_object)
      (and
        (preference smallItemsInPlace
          (exists (?c - block ?f - (either pyramid_block desktop))
            (then
              (once (agent_holds ?f) )
              (hold (adjacent ?b ?b) )
              (once (and (not (and (same_color ?f ?b) (not (and (on ?b ?f) (in_motion top_shelf) ) ) (on ?f agent) (in ?c6 ?c6) ) ) (not (broken ?c6) ) ) )
            )
          )
        )
        (preference throwBallToDoggieBed
          (exists (?b - building ?b - doggie_bed)
            (then
              (once (agent_holds ?b) )
              (hold (touch rug ?c6) )
              (hold-while (not (above bed pink) ) (adjacent_side ?c6 ?c6 ?b front_left_corner) )
            )
          )
        )
      )
    )
    (preference throwToBinFromDistance
      (exists (?o - game_object)
        (then
          (once (above ?o ?o) )
          (hold (not (not (not (and (agent_holds rug) (in_motion ?o) ) ) ) ) )
          (once (not (not (on tan agent) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (and (count-once-per-external-objects smallItemsInPlace:beachball) (- (count smallItemsInPlace:dodgeball) (count smallItemsInPlace:brown) ) ) (count-once-per-objects throwBallToDoggieBed:orange:beachball) )
)
(:scoring
  (external-forall-maximize
    5
  )
)
)

(define (game game-id-663) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (not
      (agent_holds pink)
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?h - teddy_bear ?t1 - sliding_door)
        (then
          (once (agent_holds bed) )
          (once (in_motion ?t1) )
          (once (not (touch room_center ?t1) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-once-per-objects throwAttempt:dodgeball:green:yellow) 2 )
  )
)
(:scoring
  (count-once-per-objects throwAttempt:white:pink)
)
)

(define (game game-id-664) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (not
      (< 1 4)
    )
  )
)
(:constraints
  (and
    (forall (?c - (either golfball cube_block golfball))
      (and
        (preference ballThrowAttempt
          (exists (?c - (either game_object doggie_bed key_chain))
            (then
              (once (touch ?c ?c) )
              (once (in_motion ?c) )
              (once (agent_holds agent) )
            )
          )
        )
        (preference throwOverRamp
          (exists (?tb - dodgeball ?db - cube_block)
            (then
              (once (not (on ?db ?db) ) )
              (once (touch ?c ?c) )
              (hold-while (and (in_motion ?c) (broken ?db) ) (in_motion ?c) (in_motion agent) )
            )
          )
        )
      )
    )
    (preference objectsHidden
      (exists (?o - game_object)
        (then
          (hold (and (and (agent_holds ?o) ) (and (agent_holds ?o) (on ?o ?o) ) ) )
        )
      )
    )
    (forall (?bl - dodgeball)
      (and
        (preference ballThrownThroughRampToBin
          (exists (?s - building)
            (then
              (once (in_motion bed) )
              (once (not (not (not (and (adjacent ?bl ?bl) (exists (?o3 - hexagonal_bin) (agent_holds rug) ) ) ) ) ) )
              (hold (not (in ?s ?bl) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= 1 (count ballThrownThroughRampToBin:cylindrical_block) )
)
(:scoring
  (* (count ballThrowAttempt:cylindrical_block) (* (* (count-unique-positions throwOverRamp:dodgeball:basketball) (count-once-per-objects objectsHidden:doggie_bed) )
      (* (* (count objectsHidden:golfball) (count-once-per-objects ballThrowAttempt:cube_block) )
        5
      )
      (* (external-forall-maximize (count-longest ballThrowAttempt:cube_block:dodgeball) ) )
    )
    2
    6
    10
  )
)
)

(define (game game-id-665) (:domain few-objects-room-v1)
(:setup
  (exists (?t - red_dodgeball ?h - hexagonal_bin ?d - dodgeball ?l4 - curved_wooden_ramp)
    (game-conserved
      (and
        (in_motion ?l4)
        (adjacent drawer ?l4)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrowAttempt
      (exists (?d - cube_block ?b - hexagonal_bin ?c1 - game_object)
        (then
          (any)
          (once (not (adjacent ?c1 ?c1) ) )
          (hold (< 1 1) )
        )
      )
    )
    (preference throwObjectToBin
      (exists (?b - hexagonal_bin)
        (at-end
          (and
            (in ?b agent)
            (not
              (in_motion desk)
            )
          )
        )
      )
    )
    (forall (?w2 - blue_cube_block)
      (and
        (preference ballThrownToBed
          (exists (?p3 - hexagonal_bin ?t - ball)
            (then
              (hold (on ?t ?t) )
              (hold (not (not (same_object ?w2 floor) ) ) )
              (hold-while (equal_z_position ?t ?w2) (faces ?t ?t) (on ?t ?t) )
            )
          )
        )
        (preference throwFromBehindChairsInBin
          (exists (?h - pillow ?w - dodgeball)
            (then
              (hold-while (< 1 4) (exists (?h - game_object ?d - shelf) (< (distance ?w2 ?w2) 6) ) )
              (once (agent_holds ?w) )
              (once (and (not (adjacent ?w ?w2) ) (not (on ?w ?w) ) (and (and (not (and (not (in_motion ?w2) ) (not (and (touch ?w ?w2) (in ?w agent) (in ?w2 right) (and (in_motion ?w) (not (in_motion ?w2) ) ) ) ) ) ) (or (> 1 (distance ?w ?w2)) (not (not (agent_holds ?w) ) ) ) (and (in_motion ?w) (on room_center ?w) ) ) (adjacent ?w2 ?w) (= (distance ?w ?w) (distance ?w bed)) ) (and (and (< (distance ?w agent) 2) (not (agent_holds desk) ) ) (agent_holds ?w2) ) ) )
            )
          )
        )
      )
    )
    (preference agentLeavesDogbedOrNoMoreBalls
      (exists (?h - ball)
        (at-end
          (and
            (agent_holds bed)
            (and
              (in_motion ?h)
              (agent_holds ?h)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects throwObjectToBin:beachball:basketball) (count throwObjectToBin:purple) )
)
(:scoring
  (* (count ballThrowAttempt:hexagonal_bin) 6 )
)
)

(define (game game-id-666) (:domain few-objects-room-v1)
(:setup
  (exists (?b - building ?b1 - hexagonal_bin)
    (and
      (exists (?h - doggie_bed ?ob - ball)
        (and
          (exists (?h - game_object)
            (game-conserved
              (and
                (not
                  (not
                    (not
                      (< 1 1)
                    )
                  )
                )
                (in_motion ?b1)
              )
            )
          )
          (forall (?b3 - block)
            (or
              (exists (?c - cube_block)
                (game-conserved
                  (and
                    (and
                      (not
                        (adjacent ?b3 ?b1)
                      )
                      (in block desk)
                    )
                    (not
                      (agent_holds ?b1)
                    )
                  )
                )
              )
              (exists (?c3 - game_object)
                (game-conserved
                  (not
                    (not
                      (adjacent floor ?b3)
                    )
                  )
                )
              )
              (game-optional
                (in_motion ?ob)
              )
            )
          )
          (exists (?d - beachball ?r2 - building ?r - building)
            (exists (?d - cube_block)
              (game-optional
                (agent_holds ?ob)
              )
            )
          )
          (exists (?l ?h - chair ?c - blue_cube_block)
            (not
              (game-conserved
                (not
                  (> 0 (distance ?b1 ?b1))
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?f - flat_block ?h - wall)
      (and
        (preference objectMoved
          (exists (?p1 - doggie_bed ?b - doggie_bed)
            (then
              (hold (and (in ?b agent) (on ?b desk) (and (in_motion ?h) (agent_holds ?h) ) ) )
              (hold (not (in_motion ?h) ) )
              (hold (in_motion ?b) )
            )
          )
        )
        (preference smallItemsInPlace
          (exists (?o - dodgeball ?b - (either triangle_block doggie_bed cellphone golfball))
            (then
              (once (and (in ?h ?h) (agent_holds ?h) ) )
              (hold (and (in_motion ?b) (not (exists (?c - hexagonal_bin ?d - hexagonal_bin) (not (in_motion ?b) ) ) ) (in_motion ?b) ) )
              (once (agent_holds desk) )
            )
          )
        )
        (preference otherObjectsOnDeskShelf
          (exists (?f - ball)
            (then
              (once (on ?h ?h) )
              (once (and (and (in_motion ?h) (equal_x_position desk ?h) ) (and (not (not (and (on ?f ?f) (in ?h ?h) ) ) ) (on ?f ?h) ) ) )
              (once-measure (on ?f top_drawer) (distance ?f ?h) )
            )
          )
        )
        (preference ballThrowAttempt
          (exists (?h - hexagonal_bin)
            (then
              (hold (agent_holds ?h) )
              (once (same_type ?h ?h) )
              (once (or (not (not (not (and (and (agent_holds ?h) (and (< (distance ?h ?h) (distance ?h ?h)) (and (on ?h desk) (in_motion ?h) (agent_holds ?h) ) (and (in_motion agent) (and (forall (?d - teddy_bear) (and (and (and (in_motion ?d) (not (same_type ?d pink) ) ) (above ?h bed) ) (not (in_motion agent) ) ) ) (exists (?h - hexagonal_bin) (and (or (agent_holds ?h) (not (in_motion door) ) ) (in_motion ?h) (and (not (not (above ?h ?h) ) ) (in ?h ?h) ) ) ) ) (not (or (not (> (distance ?h rug) 4) ) (object_orientation ?h ?h) ) ) ) ) ) (agent_holds ?h) (in ?h room_center) ) ) ) ) (is_setup_object door) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (/ (count-once-per-objects objectMoved:dodgeball:dodgeball) 30 ) 4 )
  )
)
(:scoring
  16
)
)

(define (game game-id-667) (:domain medium-objects-room-v1)
(:setup
  (not
    (forall (?g ?d ?h ?c ?r2 - hexagonal_bin ?c4 - hexagonal_bin ?b5 ?b - game_object)
      (and
        (and
          (and
            (exists (?d2 - chair)
              (and
                (and
                  (exists (?c3 - cube_block ?g - dodgeball)
                    (and
                      (game-conserved
                        (in_motion ?d2)
                      )
                    )
                  )
                )
                (and
                  (forall (?b - red_dodgeball)
                    (exists (?b - dodgeball)
                      (exists (?r - drawer)
                        (forall (?o3 ?o - chair ?h - ball)
                          (game-optional
                            (agent_holds ?b5)
                          )
                        )
                      )
                    )
                  )
                  (exists (?d - hexagonal_bin)
                    (game-conserved
                      (game_start )
                    )
                  )
                )
              )
            )
            (and
              (not
                (and
                  (forall (?ob - building ?h - shelf ?d - (either bridge_block pillow))
                    (and
                      (forall (?b - (either watch pink) ?bl - (either cellphone cube_block dodgeball golfball top_drawer pillow game_object))
                        (and
                          (game-optional
                            (in ?bl ?b5)
                          )
                        )
                      )
                    )
                  )
                  (forall (?c1 - cube_block)
                    (game-conserved
                      (rug_color_under ?b ?b5)
                    )
                  )
                  (game-optional
                    (agent_holds pink)
                  )
                )
              )
              (and
                (game-optional
                  (adjacent ?b ?b5)
                )
                (game-conserved
                  (and
                    (> (distance ?b5 desk) 1)
                    (adjacent agent ?b)
                  )
                )
              )
              (game-optional
                (not
                  (not
                    (agent_holds ?b)
                  )
                )
              )
            )
            (game-optional
              (on front ?b)
            )
          )
        )
        (and
          (and
            (and
              (exists (?b9 - hexagonal_bin)
                (and
                  (and
                    (exists (?h - hexagonal_bin)
                      (and
                        (and
                          (forall (?b2 ?o - dodgeball)
                            (and
                              (game-optional
                                (in_motion agent)
                              )
                              (and
                                (game-conserved
                                  (rug_color_under ?b5 ?b2)
                                )
                                (forall (?f - block)
                                  (and
                                    (exists (?r - ball ?c - hexagonal_bin ?l1 ?b2 ?c2 - cube_block)
                                      (game-conserved
                                        (not
                                          (is_setup_object ?l1)
                                        )
                                      )
                                    )
                                  )
                                )
                                (and
                                  (exists (?f - curved_wooden_ramp ?b - hexagonal_bin)
                                    (and
                                      (exists (?r ?o - dodgeball)
                                        (exists (?b - doggie_bed)
                                          (and
                                            (game-optional
                                              (agent_crouches )
                                            )
                                            (game-conserved
                                              (agent_holds ?b)
                                            )
                                          )
                                        )
                                      )
                                      (game-conserved
                                        (on ?b ?b9)
                                      )
                                      (forall (?r - golfball)
                                        (game-optional
                                          (not
                                            (agent_holds ?h)
                                          )
                                        )
                                      )
                                    )
                                  )
                                  (exists (?h - hexagonal_bin ?c1 - bridge_block)
                                    (game-optional
                                      (object_orientation ?o desk)
                                    )
                                  )
                                  (game-optional
                                    (not
                                      (in room_center ?b)
                                    )
                                  )
                                )
                              )
                            )
                          )
                          (game-conserved
                            (< (distance ?b pillow) 8)
                          )
                          (and
                            (game-conserved
                              (agent_holds rug)
                            )
                          )
                        )
                        (forall (?o4 ?g - (either doggie_bed dodgeball))
                          (forall (?t - red_dodgeball)
                            (exists (?d - cube_block)
                              (and
                                (game-conserved
                                  (in agent room_center)
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                  (exists (?r - hexagonal_bin ?b - dodgeball)
                    (and
                      (game-conserved
                        (and
                          (touch ?b9 floor)
                          (or
                            (broken ?b9)
                            (not
                              (in ?b9 ?b)
                            )
                          )
                        )
                      )
                      (exists (?r2 - game_object)
                        (and
                          (game-conserved
                            (and
                              (and
                                (in_motion ?b9)
                                (in_motion ?r2)
                              )
                              (not
                                (forall (?p3 - hexagonal_bin ?b - shelf ?d - pillow)
                                  (not
                                    (and
                                      (and
                                        (in ?b9 ?d)
                                        (on rug ?b)
                                      )
                                      (> (distance ?b front) 1)
                                      (in ?b5 agent)
                                    )
                                  )
                                )
                              )
                            )
                          )
                          (forall (?c - hexagonal_bin ?w1 - ball)
                            (and
                              (and
                                (and
                                  (game-conserved
                                    (on ?b rug)
                                  )
                                )
                                (game-conserved
                                  (touch ?w1 door)
                                )
                                (game-conserved
                                  (agent_holds ?r2)
                                )
                              )
                            )
                          )
                          (game-optional
                            (and
                              (in_motion ?b5)
                              (in ?b5 ?b5)
                            )
                          )
                        )
                      )
                    )
                  )
                  (and
                    (and
                      (game-conserved
                        (on ?b ?b)
                      )
                    )
                    (exists (?db - sliding_door)
                      (exists (?r - dodgeball ?r - hexagonal_bin ?t - hexagonal_bin)
                        (game-optional
                          (and
                            (agent_holds agent)
                            (in_motion ?b)
                            (agent_crouches )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
            (or
              (or
                (not
                  (exists (?b - chair ?c - hexagonal_bin)
                    (exists (?c - desk_shelf ?o4 - (either cube_block cube_block blue_cube_block yellow_cube_block) ?b3 ?r2 - (either cd cellphone) ?t1 - ball)
                      (game-optional
                        (same_type ?c rug)
                      )
                    )
                  )
                )
              )
            )
            (and
              (exists (?c4 - shelf)
                (and
                  (exists (?h - teddy_bear)
                    (game-conserved
                      (<= (distance ?c4 ?b) 1)
                    )
                  )
                  (game-conserved
                    (and
                      (adjacent ?b5 bed)
                      (in ?c4 left)
                    )
                  )
                )
              )
              (exists (?o ?t1 - doggie_bed)
                (game-conserved
                  (and
                    (adjacent ?b ?b5)
                    (same_color floor ?o)
                  )
                )
              )
            )
          )
          (game-conserved
            (in_motion floor)
          )
        )
        (game-conserved
          (object_orientation ?b5 ?b5)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballsInPlace
      (exists (?d - drawer ?c4 - block ?b1 - cube_block)
        (then
          (once (rug_color_under ?b1 ?b1) )
          (hold (on ?b1 ?b1) )
          (once (agent_holds ?b1) )
          (hold (on ?b1 ?b1) )
        )
      )
    )
    (forall (?l1 - red_dodgeball)
      (and
        (preference throwInBin
          (exists (?tb - hexagonal_bin)
            (then
              (once (and (and (agent_holds ?l1) (on ?l1 ?tb) (exists (?w2 ?b10 - hexagonal_bin) (open ?l1) ) ) (agent_holds agent) ) )
              (once (agent_holds ?tb) )
              (once (not (and (not (and (exists (?p2 - hexagonal_bin ?b - game_object) (agent_holds ?b) ) (in_motion ?tb) (and (not (or (and (< (distance floor ?l1) (distance ?l1 ?l1)) (<= (distance ?l1 ?tb) 0) ) (in ?l1 ?l1) ) ) (in_motion rug) (not (on ?tb room_center) ) (= (building_size agent)) ) ) ) (and (rug_color_under ?l1 ?l1) (and (between bed ?l1 rug) (not (in bed ?l1) ) ) ) (in_motion ?l1) (on ?l1 ?tb) ) ) )
            )
          )
        )
        (preference throwBallFromOtherBallToBin
          (exists (?c ?o1 - hexagonal_bin ?c - hexagonal_bin ?s - wall)
            (at-end
              (not
                (faces ?l1 desk)
              )
            )
          )
        )
        (preference failedThrowAttempt
          (exists (?p - cube_block)
            (then
              (hold (not (adjacent_side top_shelf ?l1 ?l1) ) )
              (once (not (in ?l1 ?l1) ) )
              (once (in_motion ?p) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (* (count-measure failedThrowAttempt:tan:pink) 3 )
      (or
        (or
          (* (not (* (count throwBallFromOtherBallToBin:pink:side_table) (count-once-per-objects throwBallFromOtherBallToBin:dodgeball) )
            )
            (count failedThrowAttempt:dodgeball:pink)
            5
            300
            (count-once-per-objects failedThrowAttempt:beachball)
            (* (count throwInBin:beachball) (* 10 (count throwBallFromOtherBallToBin:golfball) )
              4
            )
          )
        )
      )
    )
    (>= 10 (total-score) )
  )
)
(:scoring
  (count dodgeballsInPlace:dodgeball)
)
)

(define (game game-id-668) (:domain many-objects-room-v1)
(:setup
  (exists (?d - hexagonal_bin ?f - dodgeball)
    (and
      (and
        (exists (?o5 - hexagonal_bin ?b ?b1 - doggie_bed ?b - dodgeball)
          (exists (?h - hexagonal_bin)
            (exists (?l2 - doggie_bed)
              (game-conserved
                (in_motion ?f)
              )
            )
          )
        )
        (forall (?h - hexagonal_bin)
          (forall (?d - (either yellow_cube_block cube_block))
            (and
              (game-optional
                (on ?d ?d)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference beachballBouncedOffRamp
      (exists (?d - (either teddy_bear cube_block) ?l2 - game_object)
        (then
          (hold (faces ?l2 ?l2) )
          (once (agent_holds ?l2) )
          (once (forall (?d1 - hexagonal_bin) (< 0.5 1) ) )
        )
      )
    )
    (preference throwBallToDoggieBed
      (exists (?o1 - dodgeball)
        (then
          (once (and (agent_holds bed) (agent_holds ?o1) ) )
          (once (on ?o1 ?o1) )
          (hold-while (not (agent_holds north_wall) ) (and (rug_color_under ?o1 agent) (and (not (rug_color_under ?o1 ?o1) ) (in_motion ?o1) ) ) (agent_holds agent) )
        )
      )
    )
  )
)
(:terminal
  (> (count-unique-positions throwBallToDoggieBed:dodgeball) (count-once-per-objects beachballBouncedOffRamp:pink) )
)
(:scoring
  (<= (total-score) (* (count throwBallToDoggieBed:dodgeball:golfball) (count throwBallToDoggieBed:blue_cube_block) )
  )
)
)

(define (game game-id-669) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (in_motion rug)
    )
  )
)
(:constraints
  (and
    (forall (?c - hexagonal_bin ?w2 - cube_block)
      (and
        (preference dodgeballThrownToBinFromDesk
          (exists (?o3 - ball)
            (then
              (once (< 1 8) )
              (once (in_motion ?o3) )
              (once (exists (?d - doggie_bed) (forall (?c3 - chair) (and (same_color ?o3 ?d) (not (agent_holds ?c3) ) ) ) ) )
              (once (not (in_motion ?w2) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= (external-forall-maximize (* (count-overlapping dodgeballThrownToBinFromDesk:blue_dodgeball) (* (count dodgeballThrownToBinFromDesk:dodgeball) (count-once-per-objects dodgeballThrownToBinFromDesk:dodgeball) )
      )
    )
    (+ (count-once-per-objects dodgeballThrownToBinFromDesk:pink:green) (count dodgeballThrownToBinFromDesk:blue_cube_block) (count-once-per-objects dodgeballThrownToBinFromDesk:dodgeball:basketball) )
  )
)
(:scoring
  (count-once-per-objects dodgeballThrownToBinFromDesk:basketball)
)
)

(define (game game-id-670) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (not
      (< 3 1)
    )
  )
)
(:constraints
  (and
    (forall (?h - red_dodgeball)
      (and
        (preference ballThrownToBed
          (exists (?o1 - wall)
            (then
              (once (not (on ?o1 ?h) ) )
              (once (in_motion ?h) )
              (once (agent_holds ?h) )
            )
          )
        )
        (preference ballThrownToBin
          (exists (?w1 - building)
            (then
              (hold (not (agent_holds ?w1) ) )
              (hold-for 5 (on ?h ?h) )
              (once (same_object ?w1 ?h) )
            )
          )
        )
      )
    )
    (forall (?d - (either book) ?ob - curved_wooden_ramp)
      (and
        (preference bounceBallToBin
          (exists (?b1 - cube_block ?w2 ?b - game_object)
            (then
              (once (in_motion ?b) )
              (hold (in_motion agent) )
              (hold (in_motion ?b) )
            )
          )
        )
      )
    )
    (preference objectInBuilding
      (exists (?t2 - hexagonal_bin)
        (then
          (hold (not (in ?t2 ?t2) ) )
          (once (in_motion ?t2) )
          (once (agent_holds ?t2) )
        )
      )
    )
  )
)
(:terminal
  (< (count-once-per-objects ballThrownToBed:blue_dodgeball:blue) (* 6 (count-once-per-external-objects objectInBuilding:blue_dodgeball) )
  )
)
(:scoring
  3
)
)

(define (game game-id-671) (:domain many-objects-room-v1)
(:setup
  (exists (?w1 - triangular_ramp ?w - hexagonal_bin)
    (and
      (game-optional
        (between ?w door pink)
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - teddy_bear)
      (and
        (preference laptopAndBookInPlace
          (exists (?tb - (either cellphone golfball))
            (then
              (hold-while (in_motion ?d) (agent_holds ?tb) (adjacent block ?d) (opposite desk ?d) )
              (hold-while (not (not (touch ?tb ?tb) ) ) (and (forall (?w - game_object) (< 4 1) ) (in_motion upright) ) )
              (hold-while (on ?d ?d) (rug_color_under ?tb ?tb) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (= 2 (* (count laptopAndBookInPlace:dodgeball) (external-forall-maximize 40 ) )
  )
)
(:scoring
  (count laptopAndBookInPlace:triangle_block)
)
)

(define (game game-id-672) (:domain few-objects-room-v1)
(:setup
  (exists (?t - hexagonal_bin)
    (or
      (exists (?d - shelf)
        (game-optional
          (is_setup_object ?d)
        )
      )
      (game-optional
        (and
          (agent_holds ?t)
          (in_motion ?t)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference redDodgeballThrownToBinWithoutTouchingFloor
      (exists (?tb - ball ?t1 - bridge_block)
        (then
          (hold (agent_holds ?t1) )
          (once (in_motion ?t1) )
          (once (not (in_motion ?t1) ) )
        )
      )
    )
    (preference ballThrownThroughRampAndBlocksToBin
      (exists (?db - hexagonal_bin ?b2 - (either bridge_block book))
        (at-end
          (agent_holds ?b2)
        )
      )
    )
    (preference ballThrownMissesEverything
      (exists (?l1 - hexagonal_bin ?b - game_object)
        (then
          (once (not (same_color ?b ?b) ) )
          (hold-while (not (not (same_color ?b ?b) ) ) (agent_holds ?b) (not (and (rug_color_under ?b ?b) (on ?b ?b) ) ) )
          (once (on ?b rug) )
        )
      )
    )
  )
)
(:terminal
  (> (total-score) 8 )
)
(:scoring
  (count-once-per-objects redDodgeballThrownToBinWithoutTouchingFloor:dodgeball)
)
)

(define (game game-id-673) (:domain medium-objects-room-v1)
(:setup
  (exists (?d - blue_cube_block)
    (game-conserved
      (and
        (< (distance bed ?d) 1)
        (and
          (and
            (and
              (between ?d agent desk)
              (agent_holds ?d)
            )
            (and
              (and
                (in_motion ?d)
                (in_motion ?d)
              )
              (agent_holds ?d)
            )
          )
          (on ?d desk)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballFromBlockToBin
      (exists (?c2 - hexagonal_bin)
        (at-end
          (in_motion ?c2)
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects dodgeballFromBlockToBin:basketball) (* (count-once-per-objects dodgeballFromBlockToBin:blue_dodgeball) 6 )
  )
)
(:scoring
  (* 15 3 (* (count dodgeballFromBlockToBin:basketball) (* 10 (count-once-per-objects dodgeballFromBlockToBin:dodgeball) )
    )
  )
)
)

(define (game game-id-674) (:domain medium-objects-room-v1)
(:setup
  (forall (?r - hexagonal_bin)
    (and
      (game-conserved
        (not
          (not
            (not
              (agent_holds agent)
            )
          )
        )
      )
      (and
        (exists (?r2 - bridge_block)
          (and
            (game-conserved
              (same_color agent agent)
            )
          )
        )
      )
      (game-optional
        (in ?r agent)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownFromRug
      (exists (?d - hexagonal_bin ?b - red_dodgeball)
        (at-end
          (and
            (in_motion ?b)
            (in ?b ?b)
          )
        )
      )
    )
    (preference ballOnBedAtEnd
      (exists (?c2 - cube_block ?b - chair)
        (then
          (once (forall (?h - game_object) (forall (?b ?g - hexagonal_bin) (and (in_motion ?g) (agent_holds ?g) ) ) ) )
          (once (or (open ?b) (and (not (agent_holds ?b) ) (agent_holds agent) (agent_holds ?b) ) ) )
          (once (not (and (exists (?g - (either cube_block pillow pink) ?o - hexagonal_bin ?t1 - ball) (in_motion ?b) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (and
        (<= (total-score) 10 )
        (<= (count-once-per-objects ballOnBedAtEnd:red) (count ballThrownFromRug:yellow:basketball:dodgeball) )
        (and
          (>= 2 (count-once ballOnBedAtEnd:dodgeball:blue_pyramid_block) )
        )
      )
      (>= 0 20 )
      (or
        (or
          (<= 1 (count-once-per-objects ballThrownFromRug:basketball) )
          (> 7 2 )
        )
        (or
          (and
            (>= 10 (count ballOnBedAtEnd:hexagonal_bin:beachball) )
          )
          (> (count ballThrownFromRug:red) (count ballThrownFromRug:yellow) )
        )
      )
      (>= (+ (count-once-per-objects ballThrownFromRug:yellow) (count-once-per-objects ballOnBedAtEnd:dodgeball) )
        (count-unique-positions ballOnBedAtEnd:orange:dodgeball)
      )
    )
    (>= (* 1 (count-once ballOnBedAtEnd:alarm_clock) )
      (count ballThrownFromRug:red)
    )
  )
)
(:scoring
  (= (count-unique-positions ballThrownFromRug:pink) (count ballOnBedAtEnd:pink:blue_dodgeball) )
)
)

(define (game game-id-675) (:domain medium-objects-room-v1)
(:setup
  (forall (?o - ball)
    (game-optional
      (on desk ?o)
    )
  )
)
(:constraints
  (and
    (preference ballThrownFromDoor
      (exists (?o5 - dodgeball)
        (then
          (hold (not (in_motion room_center) ) )
          (once (adjacent ?o5 ?o5) )
          (hold (not (and (not (< (distance ?o5 ?o5) (distance ?o5 ?o5)) ) (in_motion ?o5) ) ) )
        )
      )
    )
    (preference throwFromEdgeOfRug
      (exists (?d - hexagonal_bin ?b5 - dodgeball ?r - (either ball cylindrical_block) ?c - hexagonal_bin ?l1 - ball)
        (then
          (once (in_motion desk) )
          (once (and (not (and (and (and (and (and (not (agent_holds ?l1) ) (in_motion ?l1) ) (not (and (not (not (in_motion ?l1) ) ) (in ?l1 rug) ) ) ) (agent_holds ?l1) ) (forall (?b - hexagonal_bin) (forall (?h - block) (in_motion ?l1) ) ) ) (in_motion ?l1) ) ) (not (not (and (agent_holds ?l1) (in_motion agent) ) ) ) ) )
          (once (not (not (agent_holds ?l1) ) ) )
          (hold-while (in_motion ?l1) (not (in_motion ?l1) ) )
        )
      )
    )
    (preference bounceBallToBin
      (exists (?b5 ?c1 - ball)
        (then
          (once (not (and (not (adjacent_side ?b5 ?b5 ?c1) ) (not (in ?b5 ?b5) ) ) ) )
          (once (not (touch ?b5 desk) ) )
          (hold (> (distance ?c1 desk) 9) )
        )
      )
    )
  )
)
(:terminal
  (> 1 (* (* 0.7 10 )
      (count ballThrownFromDoor:red_pyramid_block:red)
      (-
        (count-once-per-objects ballThrownFromDoor:pink_dodgeball)
        (total-time)
      )
    )
  )
)
(:scoring
  (count ballThrownFromDoor:bed)
)
)

(define (game game-id-676) (:domain many-objects-room-v1)
(:setup
  (forall (?h ?h - cube_block ?b - teddy_bear)
    (game-conserved
      (in ?b ?b)
    )
  )
)
(:constraints
  (and
    (preference blockPickedUp
      (exists (?b3 - ball)
        (at-end
          (agent_holds ?b3)
        )
      )
    )
  )
)
(:terminal
  (>= (* 0 2 (>= 3 (* (count-once-per-objects blockPickedUp:dodgeball:yellow) 3 )
      )
      (count blockPickedUp:yellow)
      (or
        30
        (+ (+ (* 2 (count-once-per-objects blockPickedUp:purple) )
            (* (count blockPickedUp:basketball:dodgeball) (* (count blockPickedUp:green:beachball) (- (* (count blockPickedUp:beachball:pink:beachball) )
                )
              )
            )
          )
          15
          (count-once-per-objects blockPickedUp:doggie_bed)
          (count-once-per-objects blockPickedUp:basketball)
          (* (* 6 1 )
            (* 3 1 )
          )
        )
        (count blockPickedUp:yellow)
      )
      4
      (- (count-once-per-objects blockPickedUp:basketball) )
      10
      8
      15
      (= 5 )
      (+ 2 5 )
    )
    (count blockPickedUp:basketball)
  )
)
(:scoring
  (count-once-per-objects blockPickedUp:green)
)
)

(define (game game-id-677) (:domain medium-objects-room-v1)
(:setup
  (exists (?h - book ?d - curved_wooden_ramp)
    (game-conserved
      (forall (?b5 - hexagonal_bin)
        (and
          (above ?b5 agent)
          (exists (?db - dodgeball)
            (in ?db ?d)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?l1 - dodgeball)
      (and
        (preference ballOnBedAtEnd
          (exists (?b7 - cube_block ?b10 - hexagonal_bin)
            (then
              (hold-to-end (in_motion ?b10) )
            )
          )
        )
        (preference brownObjectMovedToRoomCenter
          (exists (?x - curved_wooden_ramp)
            (then
              (hold (and (< (distance ?x ?x) 1) (< (distance desk ?l1) (distance agent ?l1)) ) )
              (once (in_motion ?x) )
              (hold (not (adjacent_side ?x ?l1 ?x) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count ballOnBedAtEnd:dodgeball) (count brownObjectMovedToRoomCenter:blue_cube_block) )
)
(:scoring
  (* (count-once-per-objects ballOnBedAtEnd:dodgeball) 40 12 (* (count-once brownObjectMovedToRoomCenter:dodgeball) (* 5 (count ballOnBedAtEnd:yellow) )
    )
    60
    (/
      12
      2
    )
  )
)
)

(define (game game-id-678) (:domain medium-objects-room-v1)
(:setup
  (forall (?s ?b2 ?b - cube_block)
    (game-optional
      (< (distance desk ?b) (distance ?s ?b2))
    )
  )
)
(:constraints
  (and
    (forall (?o2 - dodgeball)
      (and
        (preference throwToRampToBin
          (exists (?x - (either cellphone yellow_cube_block))
            (at-end
              (not
                (in ?o2 desk)
              )
            )
          )
        )
        (preference throwToBinFromOppositeWall
          (exists (?h - hexagonal_bin)
            (then
              (once (in_motion ?o2) )
              (hold (is_setup_object desk) )
              (once (adjacent ?o2 ?h) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (* (count-once-per-objects throwToBinFromOppositeWall:beachball) (+ 10 (count throwToRampToBin:beachball:basketball) )
      )
      (* (count-measure throwToBinFromOppositeWall:dodgeball:book) (count throwToBinFromOppositeWall:book:red) )
    )
    3
  )
)
(:scoring
  (external-forall-maximize
    10
  )
)
)

(define (game game-id-679) (:domain many-objects-room-v1)
(:setup
  (forall (?h - doggie_bed ?b - cube_block ?h - hexagonal_bin)
    (forall (?r ?d - game_object)
      (game-conserved
        (on ?d ?r)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownFromRug
      (exists (?l - block ?t - game_object ?h - doggie_bed ?o - game_object)
        (then
          (once (not (and (in ?o agent) (agent_holds ?o) ) ) )
          (hold (and (not (toggled_on ?o) ) (adjacent ?o ?o) ) )
          (once (not (agent_holds ?o) ) )
        )
      )
    )
    (preference dodgeballHitsBinBottom
      (exists (?x - block)
        (at-end
          (and
            (in_motion ?x)
            (on ?x ?x)
          )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (- (* (- (* (total-time) (count-once-per-objects dodgeballHitsBinBottom:alarm_clock:orange) )
          )
          (* (total-score) (count-once dodgeballHitsBinBottom:white) )
        )
      )
      (count-once-per-external-objects ballThrownFromRug:pink_dodgeball)
      (count dodgeballHitsBinBottom:beachball)
    )
    (count dodgeballHitsBinBottom:yellow:hexagonal_bin)
  )
)
(:scoring
  (* (- (count-once-per-objects ballThrownFromRug:yellow) )
    (* (+ (count-same-positions dodgeballHitsBinBottom:basketball) (* (* (external-forall-maximize (count dodgeballHitsBinBottom:pink:green) ) 3 (count dodgeballHitsBinBottom:basketball) )
          (count ballThrownFromRug:golfball:blue_cube_block)
          (* 40 (* (count ballThrownFromRug:book) (count-once-per-objects dodgeballHitsBinBottom:blue_pyramid_block) )
          )
          5
          (external-forall-maximize
            4
          )
          (count dodgeballHitsBinBottom:beachball)
          5
          (+ (and 10 (count dodgeballHitsBinBottom:pink) (count-once-per-objects ballThrownFromRug:hexagonal_bin:book:orange) ) (+ (count ballThrownFromRug) (* 3 10 )
            )
          )
          (count-once-per-objects dodgeballHitsBinBottom:purple)
          (count-total dodgeballHitsBinBottom:dodgeball)
          (count-once-per-objects ballThrownFromRug:golfball)
          (count-once dodgeballHitsBinBottom:purple:hexagonal_bin:green)
        )
      )
      5
      (* (count dodgeballHitsBinBottom:pink_dodgeball) (count-once dodgeballHitsBinBottom:block) )
    )
  )
)
)

(define (game game-id-680) (:domain many-objects-room-v1)
(:setup
  (exists (?r - hexagonal_bin ?h - (either cube_block dodgeball golfball))
    (and
      (forall (?l2 - hexagonal_bin)
        (exists (?c - bridge_block)
          (game-conserved
            (exists (?s - hexagonal_bin)
              (not
                (object_orientation ?c ?c)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference rollBallToBin
      (exists (?g - beachball)
        (then
          (once (adjacent ?g ?g) )
        )
      )
    )
  )
)
(:terminal
  (>= 6 (count rollBallToBin:red) )
)
(:scoring
  (count-once-per-objects rollBallToBin:basketball)
)
)

(define (game game-id-681) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?p3 ?h - (either cube_block))
      (and
        (game-conserved
          (in rug bed)
        )
        (exists (?p - (either rug teddy_bear))
          (and
            (exists (?d ?t1 - doggie_bed)
              (game-conserved
                (and
                  (in_motion ?t1)
                )
              )
            )
            (exists (?b - building)
              (and
                (game-optional
                  (in_motion ?h)
                )
                (game-conserved
                  (not
                    (not
                      (agent_holds ?p)
                    )
                  )
                )
                (game-optional
                  (in ?h ?p3)
                )
              )
            )
          )
        )
      )
    )
    (exists (?c - dodgeball)
      (exists (?h - cube_block)
        (forall (?h - (either cd alarm_clock) ?g - hexagonal_bin ?f - beachball ?l4 - hexagonal_bin)
          (game-conserved
            (agent_holds ?c)
          )
        )
      )
    )
    (exists (?b6 - game_object ?b - wall)
      (exists (?g - beachball)
        (game-optional
          (not
            (in ?g room_center)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b2 - teddy_bear)
      (and
        (preference cubeBlockInBuilding
          (exists (?h - building ?x - hexagonal_bin)
            (then
              (once (and (object_orientation ?b2 ?b2) (agent_holds desk) ) )
              (hold (not (in ?b2 ?x) ) )
              (once (on agent ?b2) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= 5 (* 2 (* (* (* (* (count cubeBlockInBuilding:book) (count cubeBlockInBuilding:yellow) )
            (count cubeBlockInBuilding:dodgeball)
          )
          (count cubeBlockInBuilding:red)
          (- (count cubeBlockInBuilding:pink_dodgeball) )
        )
        (count-once-per-external-objects cubeBlockInBuilding:golfball)
      )
    )
  )
)
(:scoring
  (count-overlapping cubeBlockInBuilding:golfball)
)
)

(define (game game-id-682) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?o - game_object)
      (game-optional
        (same_color ?o desk)
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballHitsBinBottom
      (exists (?o - (either book pyramid_block) ?b - hexagonal_bin)
        (then
          (hold (in_motion ?b) )
          (hold-while (and (in_motion rug) (and (and (not (not (and (rug_color_under ?b ?b) (between ?b ?b ?b) ) ) ) (and (in_motion ?b) (in agent ?b) (on ?b ?b) (forall (?w2 - bridge_block) (exists (?d - hexagonal_bin) (on ?w2 agent) ) ) (forall (?b - hexagonal_bin) (not (agent_holds ?b) ) ) (and (on desk ?b) (in_motion room_center) ) (not (on ?b ?b) ) (< 1 (building_size ?b)) (rug_color_under ?b blue) (and (and (in ?b ?b) (in ?b ?b) (not (not (not (and (and (not (not (agent_holds ?b) ) ) (on room_center ?b) ) (and (not (not (in ?b ?b) ) ) (agent_holds pink_dodgeball) ) ) ) ) ) ) (above ?b ?b) ) ) (agent_holds ?b) (not (agent_holds green) ) (and (and (in_motion ?b) (and (agent_holds ?b) (same_type ?b ?b) (and (in_motion ?b) (agent_holds ?b) ) ) ) (in_motion ?b) ) ) (equal_z_position ?b ?b) (on ?b bed) (< 1 (distance ?b ?b)) (rug_color_under ?b ?b) (rug_color_under east_sliding_door desk) (not (above green_golfball back) ) (in_motion ?b) (< (distance_side ?b green ?b) 2) (object_orientation ?b bed) ) ) (and (in ?b ?b) (not (not (not (not (in_motion ?b) ) ) ) ) (in_motion ?b) ) (adjacent ?b ?b) )
          (hold (agent_holds ?b) )
        )
      )
    )
    (preference throwBallToDoggieBed
      (exists (?b1 - dodgeball)
        (at-end
          (and
            (in_motion ?b1)
            (in ?b1 ?b1)
          )
        )
      )
    )
    (preference ballThrownThroughRampToBin
      (exists (?h - game_object)
        (then
          (hold-while (on rug ?h) (faces ?h ?h) )
          (hold-to-end (and (on ?h ?h) (and (and (in desk ?h) (agent_holds ?h) (same_color ?h ?h) ) (< (distance front ?h) 0.5) (in agent ?h) ) ) )
          (once (in_motion ?h) )
        )
      )
    )
  )
)
(:terminal
  (or
    (< (- (count-once-per-objects ballThrownThroughRampToBin:pyramid_block) )
      (+ 0 (- (count-once-per-external-objects dodgeballHitsBinBottom:pyramid_block) 6 ) 18 (* (count-once-per-objects ballThrownThroughRampToBin:golfball) (/ (count-once-per-objects dodgeballHitsBinBottom:book) (count ballThrownThroughRampToBin:pyramid_block) ) (or 9 (/ 5 15 ) (count-once dodgeballHitsBinBottom:alarm_clock:block) ) )
        (count-once-per-objects throwBallToDoggieBed:dodgeball:basketball)
        (count dodgeballHitsBinBottom:dodgeball)
        (* (* (total-score) (count dodgeballHitsBinBottom:dodgeball) )
          (* 5 (* (count throwBallToDoggieBed:dodgeball:side_table) (+ 4 3 (* 3 15 )
                15
                (count-once-per-objects ballThrownThroughRampToBin:dodgeball:beachball)
                (count-once-per-objects dodgeballHitsBinBottom:dodgeball:pyramid_block)
              )
            )
            (count throwBallToDoggieBed:dodgeball)
          )
        )
        (- (count-once-per-objects throwBallToDoggieBed:beachball) )
        (count-once-per-objects ballThrownThroughRampToBin:triangle_block)
      )
    )
    (>= (total-time) (* 100 (* (count-once-per-objects throwBallToDoggieBed:cube_block) 3 )
      )
    )
  )
)
(:scoring
  10
)
)

(define (game game-id-683) (:domain few-objects-room-v1)
(:setup
  (exists (?h ?t ?w ?c ?b ?x - ball ?l - desk_shelf)
    (forall (?b - building ?o - hexagonal_bin)
      (forall (?d - dodgeball)
        (exists (?g - ball ?b ?c2 - (either basketball cube_block yellow_cube_block cube_block) ?c - hexagonal_bin ?d - dodgeball)
          (exists (?p - ball)
            (and
              (game-conserved
                (not
                  (not
                    (and
                      (adjacent top_drawer door)
                      (on ?o ?o)
                    )
                  )
                )
              )
              (exists (?b - cube_block)
                (and
                  (exists (?t - building)
                    (game-optional
                      (not
                        (agent_holds agent)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dropAttempt
      (exists (?o - dodgeball)
        (then
          (once (and (adjacent_side ?o ?o ?o) (in_motion ?o) ) )
          (once (and (not (same_color ?o ?o) ) (and (in ?o ?o) (touch ?o desk) ) ) )
          (forall-sequence (?c - doggie_bed)
            (then
              (once (and (in bed ?c) (in_motion ?c) ) )
              (hold (not (not (not (agent_holds ?o) ) ) ) )
              (hold (and (and (agent_holds agent) (and (agent_holds ?c) (not (broken ?o) ) (and (on top_drawer ?o) (in_motion agent) ) ) (< (distance top_shelf ?c) 1) ) (not (in_motion ?c) ) ) )
              (once (and (adjacent ?o ?c) (and (agent_holds front_left_corner) (and (open ?o) (not (agent_holds ?o) ) ) (not (in_motion ?c) ) ) (in_motion ?c) (in_motion ?o) (and (not (adjacent bed ?o) ) (not (not (touch ?c desk) ) ) ) (in_motion ?o) (agent_holds ?o) ) )
            )
          )
        )
      )
    )
    (preference woodenBlockMovedFromRugToDesk
      (exists (?b - teddy_bear)
        (then
          (hold (in ?b ?b) )
          (once (in ?b ?b) )
          (hold-while (not (and (forall (?h - hexagonal_bin ?c ?b5 - hexagonal_bin) (toggled_on ?b5) ) (agent_holds bed) ) ) (not (in ?b ?b) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count-shortest woodenBlockMovedFromRugToDesk:dodgeball) 12 )
    (count woodenBlockMovedFromRugToDesk:blue:cylindrical_block)
  )
)
(:scoring
  (count-once woodenBlockMovedFromRugToDesk:blue_dodgeball)
)
)

(define (game game-id-684) (:domain many-objects-room-v1)
(:setup
  (forall (?l1 - (either watch game_object) ?h - cube_block)
    (game-optional
      (not
        (or
          (on agent ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownThroughRampToBin
      (exists (?b ?b - color)
        (at-end
          (in ?b ?b)
        )
      )
    )
  )
)
(:terminal
  (>= 3 10 )
)
(:scoring
  (count-once-per-external-objects ballThrownThroughRampToBin:basketball)
)
)

(define (game game-id-685) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-conserved
      (game_over )
    )
  )
)
(:constraints
  (and
    (preference throwAttemptFromBehindBlock
      (exists (?b5 - sliding_door)
        (then
          (hold (and (in_motion agent) (adjacent ?b5 ?b5) ) )
          (hold-while (in_motion ?b5) (and (in_motion ?b5) (same_object ?b5 ?b5) ) )
          (once (and (adjacent desk ?b5) (and (and (on ?b5 ?b5) (exists (?l - hexagonal_bin) (in rug top_shelf) ) ) (in_motion ?b5) ) (on ?b5 ?b5) ) )
        )
      )
    )
    (preference throwAttempt
      (exists (?w - hexagonal_bin ?b - hexagonal_bin ?db - dodgeball)
        (then
          (once (and (exists (?db - (either book dodgeball)) (in_motion desk) ) (opposite bottom_shelf ?db) ) )
          (once (> 10 1) )
          (once (not (and (open ?db) (and (not (in_motion ?db) ) (not (= 5) ) ) (in ?db ?db) ) ) )
        )
      )
    )
    (preference dodgeballAndBasketballInBin
      (exists (?h - ball ?db - curved_wooden_ramp)
        (then
          (once (in_motion ?db) )
          (once (broken ?db) )
          (once (and (in_motion ?db) (on ?db ?db) ) )
        )
      )
    )
    (forall (?b - hexagonal_bin)
      (and
        (preference throwGolfballToBin
          (exists (?r - doggie_bed ?c ?w1 ?c ?c5 ?w2 ?b - drawer)
            (then
              (once (in ?w2 bed) )
              (once (not (not (not (agent_holds ?b) ) ) ) )
              (hold (same_color ?c ?w1) )
            )
          )
        )
      )
    )
    (preference cubeBlockThrowAttempt
      (exists (?d - ball ?d - cube_block ?h - flat_block ?c - wall ?c3 - hexagonal_bin)
        (then
          (hold (on agent ?c3) )
          (hold-for 5 (in ?c3 ?c3) )
          (once (or (not (adjacent ?c3 ?c3) ) (in rug ?c3) ) )
        )
      )
    )
    (forall (?h - hexagonal_bin ?l3 - (either triangular_ramp bridge_block tall_cylindrical_block) ?b7 - ball)
      (and
        (preference throwToRampToBin
          (exists (?c1 - (either dodgeball alarm_clock))
            (then
              (once (and (= (distance ?c1 ?c1) 1) (and (not (in_motion ?b7) ) (and (and (and (and (and (exists (?c4 - cube_block) (and (object_orientation bed bed) (and (agent_holds ?c1) (> (distance bed ?c4) 1) ) ) ) (> (x_position ?c1) (distance ?b7 ?c1)) ) (agent_holds ?b7) (adjacent_side ?b7 agent ?b7) ) (in_motion rug) ) (not (adjacent desk ?c1) ) ) (not (on ?b7 ?c1) ) ) ) ) )
              (once (above ?c1 ?b7) )
              (hold (= 1 (x_position front)) )
              (hold (agent_holds ?c1) )
              (hold (agent_holds ?b7) )
            )
          )
        )
        (preference throwBallToBin
          (exists (?b1 - ball)
            (then
              (once (agent_crouches ) )
              (hold (game_over ) )
              (once (not (on room_center ?b1) ) )
            )
          )
        )
        (preference ballKnocksTeddy
          (exists (?d - color ?b9 - hexagonal_bin)
            (then
              (hold (on ?b9 ?b7) )
              (hold (>= (distance desk agent) (building_size ?b9)) )
              (hold (> 8 (distance ?b7 ?b7)) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (* (count throwGolfballToBin:golfball) (count dodgeballAndBasketballInBin:red_pyramid_block) 7 (count throwBallToBin:green) (+ (total-time) 4 )
        (+ (count dodgeballAndBasketballInBin:golfball) (count-once throwBallToBin:golfball) )
      )
      6
    )
    (and
      20
    )
  )
)
(:scoring
  1
)
)

(define (game game-id-686) (:domain medium-objects-room-v1)
(:setup
  (exists (?h - triangular_ramp)
    (and
      (game-conserved
        (and
          (in blue ?h)
          (and
            (exists (?c5 - wall ?b - (either desktop))
              (not
                (not
                  (>= (distance ?b ?b) 1)
                )
              )
            )
            (not
              (not
                (object_orientation ?h ?h)
              )
            )
            (in_motion ?h)
            (not
              (game_over )
            )
            (rug_color_under ?h ?h)
            (agent_holds agent)
            (and
              (and
                (not
                  (agent_holds ?h)
                )
                (agent_holds sideways)
              )
              (and
                (in_motion bed)
                (exists (?d - building)
                  (not
                    (on bed ?h)
                  )
                )
              )
            )
          )
          (and
            (and
              (adjacent_side ?h ?h ?h)
              (not
                (and
                  (agent_crouches )
                  (faces ?h agent)
                )
              )
            )
            (not
              (or
                (and
                  (not
                    (not
                      (in_motion ?h)
                    )
                  )
                  (and
                    (and
                      (> 1 2)
                      (not
                        (on desk ?h)
                      )
                    )
                    (and
                      (is_setup_object ?h)
                      (on ?h agent)
                      (on ?h ?h)
                    )
                  )
                  (in ?h ?h)
                )
                (in_motion ?h)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectOnBed
      (exists (?h - teddy_bear ?o2 - (either dodgeball pyramid_block pyramid_block bridge_block))
        (then
          (once (in_motion ?o2) )
          (hold (toggled_on ?o2) )
          (once (game_start ) )
        )
      )
    )
  )
)
(:terminal
  (= (+ (* 50 2 )
      (count-once-per-objects objectOnBed:tall_cylindrical_block)
    )
    6
  )
)
(:scoring
  (count-once objectOnBed:dodgeball:book)
)
)

(define (game game-id-687) (:domain many-objects-room-v1)
(:setup
  (forall (?d - green_triangular_ramp ?d - triangular_ramp ?o - pillow ?w2 - game_object)
    (game-conserved
      (agent_holds ?w2)
    )
  )
)
(:constraints
  (and
    (forall (?s - game_object)
      (and
        (preference blockFromRugToDesk
          (exists (?c - red_pyramid_block)
            (then
              (hold (and (and (agent_holds ?s) (above ?c ?s) ) (agent_holds ?s) ) )
              (hold (> (distance ?c room_center) (distance ?s ?s)) )
              (once (not (in ?c ?c) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (* (* 300 18 )
      (count-shortest blockFromRugToDesk:dodgeball:green)
    )
    (external-forall-minimize
      (not
        3
      )
    )
  )
)
(:scoring
  50
)
)

(define (game game-id-688) (:domain many-objects-room-v1)
(:setup
  (exists (?d - hexagonal_bin)
    (game-conserved
      (and
        (toggled_on ?d)
        (and
          (not
            (same_type ?d ?d)
          )
          (between ?d ?d ?d)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference woodenBlockMovedFromRugToDesk
      (exists (?d - hexagonal_bin)
        (at-end
          (and
            (on ?d ?d)
            (< (distance upright pink_dodgeball) (distance_side blue ?d ?d ?d))
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (count-increasing-measure woodenBlockMovedFromRugToDesk:yellow:top_drawer) (total-time) )
    (or
      (> (count-once-per-objects woodenBlockMovedFromRugToDesk:white) (* (count-once woodenBlockMovedFromRugToDesk:book:golfball) 5 )
      )
      (>= (count-once-per-objects woodenBlockMovedFromRugToDesk:bed) (count woodenBlockMovedFromRugToDesk:blue_dodgeball) )
    )
    (> (+ (count-once-per-objects woodenBlockMovedFromRugToDesk:tall_cylindrical_block) (* 3 (* 10 (+ (> (+ (* (count woodenBlockMovedFromRugToDesk:dodgeball:yellow) (+ (or (+ (count woodenBlockMovedFromRugToDesk:blue_dodgeball) 50 )
                      )
                      (and
                        3
                        (- (* (count-once woodenBlockMovedFromRugToDesk:hexagonal_bin) (+ 5 (count-once woodenBlockMovedFromRugToDesk:dodgeball) (total-score) (+ (- (* (* 10 (count-longest woodenBlockMovedFromRugToDesk:beachball) )
                                    3
                                  )
                                )
                                (count-once-per-objects woodenBlockMovedFromRugToDesk:doggie_bed:dodgeball)
                                (total-score)
                              )
                              10
                            )
                            (count-once-per-external-objects woodenBlockMovedFromRugToDesk:cube_block)
                            (count woodenBlockMovedFromRugToDesk:triangle_block)
                            (count-once woodenBlockMovedFromRugToDesk:beachball)
                            (<= (* 9 (count-unique-positions woodenBlockMovedFromRugToDesk:pink:rug) )
                              (count-once-per-objects woodenBlockMovedFromRugToDesk:pink_dodgeball)
                            )
                            20
                            5
                            2
                          )
                        )
                      )
                    )
                  )
                  100
                )
                (count-once-per-objects woodenBlockMovedFromRugToDesk:dodgeball)
              )
              (external-forall-maximize
                5
              )
            )
          )
        )
      )
      (* 2 (total-score) )
    )
  )
)
(:scoring
  (count woodenBlockMovedFromRugToDesk:purple)
)
)

(define (game game-id-689) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (in_motion desk)
  )
)
(:constraints
  (and
    (preference dodgeballHitsBinBottom
      (exists (?h - game_object ?c1 - (either chair pink triangle_block) ?tb - hexagonal_bin)
        (at-end
          (on ?tb top_drawer)
        )
      )
    )
    (forall (?bl - shelf)
      (and
        (preference ballThrownFromBehindBlock
          (exists (?p - game_object ?b1 - curved_wooden_ramp)
            (then
              (once (in_motion door) )
              (hold (in_motion ?b1) )
            )
          )
        )
      )
    )
    (forall (?b2 - desk_shelf)
      (and
        (preference ballThrownOntoTarget
          (exists (?o - hexagonal_bin)
            (then
              (hold-while (in_motion pink_dodgeball) (and (and (and (on ?b2 ?o) (agent_holds ?o) ) ) (in ?b2 agent) ) )
              (hold-while (agent_holds block) (on ?b2 ?b2) )
              (hold-to-end (not (and (in desk ?o) (in ?o ?o) ) ) )
            )
          )
        )
        (preference objectMovedRoomSide
          (exists (?c - watch)
            (then
              (once-measure (not (not (< 6 (distance ?b2 ?c)) ) ) (building_size ?b2) )
              (once (same_color ?c ?c) )
              (hold (and (not (on ?b2 ?c) ) (and (on ?c ?b2) (and (agent_holds ?c) (same_type bed ?b2) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (= 3 )
    3
  )
)
(:scoring
  (count-once-per-objects objectMovedRoomSide:red_pyramid_block)
)
)

(define (game game-id-690) (:domain few-objects-room-v1)
(:setup
  (and
    (or
      (and
        (exists (?h - (either alarm_clock cube_block yellow_cube_block pyramid_block))
          (and
            (game-conserved
              (not
                (adjacent ?h ?h)
              )
            )
            (game-optional
              (and
                (in_motion ?h)
                (agent_holds ?h)
              )
            )
            (exists (?c2 - ball ?o - hexagonal_bin ?h - pillow)
              (game-optional
                (not
                  (same_color desk brown)
                )
              )
            )
          )
        )
        (exists (?p - desk_shelf)
          (game-conserved
            (and
              (= 2 (distance ?p ?p))
              (in ?p desk)
            )
          )
        )
      )
      (forall (?d - beachball ?h ?w - hexagonal_bin)
        (forall (?d - hexagonal_bin ?c6 - ball)
          (forall (?c - dodgeball)
            (and
              (game-optional
                (between ?c6 ?h ?h)
              )
              (and
                (exists (?d2 - curved_wooden_ramp ?b1 - cube_block)
                  (and
                    (and
                      (and
                        (game-conserved
                          (adjacent rug ?c6)
                        )
                        (game-optional
                          (not
                            (and
                              (on ?c6 agent)
                              (on ?c ?c6)
                            )
                          )
                        )
                        (forall (?c - triangular_ramp ?t2 - building ?o1 - hexagonal_bin)
                          (and
                            (and
                              (exists (?c2 - hexagonal_bin)
                                (and
                                  (exists (?o1 - game_object ?o2 - pillow)
                                    (exists (?b4 ?d ?p ?d2 ?p2 ?b - dodgeball)
                                      (and
                                        (exists (?l - color)
                                          (game-optional
                                            (adjacent_side ?c6 ?h desk)
                                          )
                                        )
                                        (game-conserved
                                          (not
                                            (agent_holds ?c2)
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                            (and
                              (game-optional
                                (adjacent ?b1 ?c6)
                              )
                              (and
                                (not
                                  (exists (?t - triangular_ramp ?t - ball)
                                    (game-optional
                                      (in_motion bed)
                                    )
                                  )
                                )
                              )
                              (forall (?h - hexagonal_bin ?h ?h - hexagonal_bin ?d - beachball)
                                (game-conserved
                                  (and
                                    (agent_holds ?c)
                                    (and
                                      (object_orientation top_drawer ?d)
                                      (rug_color_under agent rug)
                                      (not
                                        (exists (?b - doggie_bed)
                                          (on ?w rug)
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                              (and
                                (exists (?c4 - teddy_bear)
                                  (game-conserved
                                    (not
                                      (adjacent ?c ?c6)
                                    )
                                  )
                                )
                                (forall (?b4 - building)
                                  (game-conserved
                                    (< 0.5 (distance ?b1 ?o1))
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                      (and
                        (game-conserved
                          (>= (distance ?b1 ?h) (distance_side ?h desk ?c6))
                        )
                      )
                    )
                  )
                )
                (and
                  (exists (?s - (either cellphone))
                    (forall (?h - (either cd mug) ?d - hexagonal_bin)
                      (exists (?p1 - hexagonal_bin ?l - building ?h - cube_block)
                        (game-conserved
                          (agent_holds ?d)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
    (exists (?g - (either laptop pyramid_block blue_cube_block))
      (forall (?w - shelf)
        (forall (?s - wall)
          (game-conserved
            (exists (?b6 - color)
              (agent_holds agent)
            )
          )
        )
      )
    )
    (game-conserved
      (not
        (not
          (exists (?r1 - curved_wooden_ramp ?b - building)
            (agent_holds ?b)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?w1 - doggie_bed)
      (and
        (preference cubeBlockFromBedToShelf
          (exists (?h - pillow ?l ?h - curved_wooden_ramp)
            (then
              (once (in_motion ?w1) )
              (hold (in_motion ?h) )
              (once (agent_holds ?h) )
            )
          )
        )
        (preference pillowThrownToDoggieBed
          (exists (?d - curved_wooden_ramp)
            (at-end
              (in_motion ?d)
            )
          )
        )
      )
    )
    (preference smallItemsInPlace
      (exists (?h - hexagonal_bin)
        (then
          (once (not (or (< (distance ?h ?h) (distance ?h upright)) (not (and (faces desk ?h) (adjacent ?h ?h) (in ?h ?h) ) ) ) ) )
          (hold (not (and (not (and (and (in_motion ?h) (not (adjacent ?h ?h) ) (touch ?h ?h) ) (in_motion ?h) ) ) (and (and (in_motion ?h) (and (on ?h ?h) (in_motion agent) (and (in_motion room_center) (agent_holds ?h) ) ) (agent_holds ?h) ) (rug_color_under ?h ?h) ) (not (and (not (agent_holds ?h) ) (<= (distance_side ?h door agent) 1) (agent_holds ?h) ) ) ) ) )
          (once (and (agent_holds ?h) (in_motion ?h) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (count smallItemsInPlace:golfball) )
)
(:scoring
  (* (count-once-per-objects cubeBlockFromBedToShelf:pink) (* (+ 4 (* (* 3 (or (count-once-per-objects cubeBlockFromBedToShelf:beachball) 3 ) 15 )
          (count smallItemsInPlace:beachball:golfball)
        )
      )
      (count smallItemsInPlace:blue_cube_block)
      (count-once-per-objects cubeBlockFromBedToShelf:basketball)
      10
    )
  )
)
)

(define (game game-id-691) (:domain few-objects-room-v1)
(:setup
  (exists (?l1 - cube_block)
    (game-optional
      (or
        (exists (?h - (either wall pink doggie_bed))
          (not
            (touch ?l1 ?h)
          )
        )
        (in_motion ?l1)
      )
    )
  )
)
(:constraints
  (and
    (preference woodenBlockMovedFromRugToDesk
      (exists (?l - cube_block ?b - block)
        (then
          (once (agent_crouches ) )
          (once (and (and (same_object ?b ?b) (and (not (not (on ?b ?b) ) ) (agent_holds ?b) (not (in ?b ?b) ) ) (= (distance ?b ?b) (distance ?b ?b)) (not (and (in_motion ?b) (and (not (agent_holds ?b) ) (on desk pillow) ) (and (in_motion ?b) (agent_holds ?b) ) ) ) (on agent ?b) (and (agent_holds ?b) (in_motion ?b) ) (agent_holds desk) ) (on ?b ?b) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (- 3 1 ) )
)
(:scoring
  (count-once-per-objects woodenBlockMovedFromRugToDesk:blue_pyramid_block)
)
)

(define (game game-id-692) (:domain many-objects-room-v1)
(:setup
  (forall (?d2 - block ?b ?ob - block)
    (game-optional
      (on ?ob ?b)
    )
  )
)
(:constraints
  (and
    (preference ballThrownThroughRampToBin
      (exists (?p ?c - hexagonal_bin)
        (then
          (hold-to-end (not (not (not (and (on ?p ?c) (and (not (agent_crouches ) ) (above ?c ?p) ) ) ) ) ) )
          (once (agent_holds ?p) )
          (hold (touch ?c ?c) )
        )
      )
    )
    (forall (?b - doggie_bed)
      (and
        (preference blockIncorrectlyPicked
          (exists (?l2 - hexagonal_bin)
            (at-end
              (and
                (in ?l2 ?l2)
                (and
                  (not
                    (agent_holds ?b)
                  )
                  (adjacent_side ?l2 ?b ?b ?b)
                )
              )
            )
          )
        )
      )
    )
    (preference ballThrowAttempt
      (exists (?l2 - teddy_bear)
        (then
          (hold (in_motion ?l2) )
          (hold-while (not (and (and (same_type agent ?l2) (in_motion ?l2) (not (and (not (in_motion ?l2) ) (and (and (in ?l2 ?l2) (is_setup_object ?l2) ) (agent_holds ?l2) ) (same_type ?l2 ?l2) ) ) (and (not (and (and (in_motion ?l2) (adjacent ?l2 ?l2) ) (in_motion ?l2) (not (adjacent_side ?l2 ?l2 ?l2) ) ) ) (touch ?l2 ?l2) ) (< (distance ?l2 ?l2) (distance ?l2 ?l2)) ) (in ?l2 ?l2) ) ) (< 3 (distance bed ?l2)) (exists (?b - teddy_bear) (agent_holds ?b) ) )
          (once (in ?l2 ?l2) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* (- (* (+ (* (- (count-once-per-objects blockIncorrectlyPicked:orange) 3 ) (= (count-once-per-objects ballThrowAttempt:dodgeball:yellow) (<= 7 (+ (count-once-per-objects ballThrownThroughRampToBin:dodgeball) (+ (count-once-per-objects blockIncorrectlyPicked:green) (+ (count-once-per-objects ballThrowAttempt) (* (count-once ballThrowAttempt:dodgeball) (count ballThrowAttempt:yellow) (not (count-measure ballThrownThroughRampToBin:golfball) ) )
                        )
                        (count blockIncorrectlyPicked:red_pyramid_block)
                      )
                    )
                  )
                )
              )
              5
            )
            10
          )
        )
        (* (count blockIncorrectlyPicked:golfball) (* (total-score) 0.5 )
        )
      )
      (/
        (count-once-per-objects blockIncorrectlyPicked:book)
        5
      )
    )
    (or
      (not
        (< (* (* (count ballThrowAttempt:pink_dodgeball) 2 )
            (count ballThrowAttempt:basketball)
            10
            2
          )
          (count-once ballThrownThroughRampToBin:beachball)
        )
      )
      (or
        (>= 1 (and (not (* (count-once-per-objects ballThrownThroughRampToBin:green) (* (count-once-per-objects blockIncorrectlyPicked:beachball) 4 )
                (+ (count-once-per-objects blockIncorrectlyPicked:red) (count-once-per-objects blockIncorrectlyPicked:green) )
                6
                16
                3
              )
            )
          )
        )
        (< (count-once-per-objects ballThrownThroughRampToBin:dodgeball:pink_dodgeball) 5 )
      )
      (not
        (>= (- 20 )
          (count ballThrowAttempt:dodgeball)
        )
      )
    )
  )
)
(:scoring
  (count-once-per-objects ballThrownThroughRampToBin:basketball)
)
)

(define (game game-id-693) (:domain few-objects-room-v1)
(:setup
  (exists (?d - triangular_ramp ?b1 - shelf ?c4 - wall)
    (and
      (exists (?o1 - (either cube_block floor flat_block))
        (and
          (and
            (game-conserved
              (agent_holds ?o1)
            )
            (forall (?o1 - doggie_bed)
              (game-optional
                (not
                  (is_setup_object ?c4)
                )
              )
            )
          )
        )
      )
      (exists (?d - (either dodgeball cellphone pyramid_block tall_cylindrical_block key_chain pencil hexagonal_bin))
        (and
          (exists (?d - flat_block)
            (exists (?h - hexagonal_bin)
              (exists (?t1 - hexagonal_bin ?b - dodgeball)
                (forall (?ob - drawer)
                  (forall (?b7 - color)
                    (forall (?p1 - curved_wooden_ramp)
                      (game-conserved
                        (agent_holds desk)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blueObjectMovedToRoomCenter
      (exists (?b - dodgeball ?b - (either golfball))
        (at-end
          (and
            (not
              (not
                (on ?b ?b)
              )
            )
            (not
              (not
                (agent_holds ?b)
              )
            )
          )
        )
      )
    )
    (forall (?f ?b5 - teddy_bear ?c - cube_block)
      (and
        (preference objectWithMatchingColor
          (exists (?h - hexagonal_bin)
            (then
              (hold (in ?h ?c) )
              (once (in ?h ?h) )
              (hold (same_object ?c ?h) )
              (once (not (agent_holds ?h) ) )
            )
          )
        )
      )
    )
    (forall (?t - triangular_ramp)
      (and
        (preference baseBlockInTowerAtEnd
          (exists (?b - dodgeball)
            (then
              (any)
              (hold (in ?t desk) )
              (hold (touch ?t ?t) )
            )
          )
        )
        (preference throwOverRamp
          (exists (?h - building)
            (then
              (once (exists (?ob - hexagonal_bin ?g - game_object) (exists (?l2 - hexagonal_bin ?b10 - blue_cube_block) (touch ?g ?t) ) ) )
              (hold-for 9 (exists (?o - flat_block) (agent_holds ?t) ) )
              (once (agent_holds ?t) )
              (once (in_motion ?h) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (count objectWithMatchingColor:red) 3 )
)
(:scoring
  (* (count-once-per-objects throwOverRamp:pink_dodgeball) (count objectWithMatchingColor:brown) )
)
)

(define (game game-id-694) (:domain few-objects-room-v1)
(:setup
  (forall (?b - building ?d - (either golfball pink))
    (forall (?b1 ?b - curved_wooden_ramp)
      (forall (?g - hexagonal_bin)
        (and
          (game-conserved
            (equal_x_position rug ?b1)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - triangular_ramp)
      (and
        (preference ballDroppedInBin
          (then
            (hold (in_motion ?b) )
            (once (and (and (forall (?p - shelf ?d2 - hexagonal_bin ?b - cube_block) (not (in_motion ?b) ) ) (not (or (adjacent_side ?b ?b bed ?b) (in_motion ?b) ) ) ) (agent_holds ?b) ) )
            (once (not (equal_z_position agent ?b) ) )
          )
        )
        (preference throwBallToBin
          (exists (?o5 - hexagonal_bin)
            (then
              (once (agent_holds ?b) )
              (hold (and (and (on ?o5 ?b) ) (in ?b ?o5) ) )
              (once (not (and (< (distance ?b ?b) 3) (agent_holds floor) ) ) )
            )
          )
        )
      )
    )
    (preference throwToBinFromDistance
      (exists (?b - shelf)
        (at-end
          (and
            (on ?b room_center)
            (in_motion ?b)
          )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (count ballDroppedInBin:red) )
)
(:scoring
  10
)
)

(define (game game-id-695) (:domain medium-objects-room-v1)
(:setup
  (or
    (forall (?r - cylindrical_block)
      (and
        (game-conserved
          (and
            (agent_holds ?r)
            (not
              (in pink_dodgeball ?r)
            )
          )
        )
        (and
          (and
            (exists (?c ?d - teddy_bear)
              (and
                (game-optional
                  (and
                    (and
                      (and
                        (agent_holds upside_down)
                      )
                      (in_motion ?d)
                    )
                    (and
                      (not
                        (in_motion floor)
                      )
                      (adjacent ?c ?d)
                    )
                  )
                )
              )
            )
          )
          (game-optional
            (not
              (and
                (not
                  (not
                    (and
                      (agent_holds ?r)
                    )
                  )
                )
                (agent_holds ?r)
              )
            )
          )
          (game-conserved
            (agent_holds agent)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?c - (either bridge_block mug flat_block) ?o3 - block)
        (then
          (hold (and (rug_color_under agent ?o3) (agent_holds ?o3) ) )
          (hold-while (on ?o3 ?o3) (agent_holds agent) (on ?o3 ?o3) (and (and (not (in_motion agent) ) (and (agent_holds ?o3) (not (and (not (< 1 2) ) (in ?o3 ?o3) (and (not (in_motion ?o3) ) (and (is_setup_object ?o3) (agent_holds desk) ) ) (and (on ?o3 desk) (not (not (and (not (<= (distance_side ?o3 ?o3 ?o3 agent) 1) ) (and (agent_holds desk) (not (agent_holds agent) ) ) ) ) ) ) ) ) ) ) (in_motion ?o3) ) )
          (once (not (< (distance ?o3 agent) (distance ?o3 ?o3)) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 9 (count throwBallToBin:yellow_cube_block) )
)
(:scoring
  3
)
)

(define (game game-id-696) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (exists (?d1 - pillow)
      (< 0 2)
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?c2 - dodgeball ?b - hexagonal_bin ?d - dodgeball ?d - ball)
        (then
          (once (agent_holds ?d) )
          (once (object_orientation ?d front) )
          (hold (agent_holds ?d) )
        )
      )
    )
  )
)
(:terminal
  (and
    (> (+ (count throwAttempt:orange) (* (count throwAttempt:dodgeball) (- (* 20 (count-once-per-objects throwAttempt:beachball:purple) )
          )
          (count throwAttempt:beachball)
        )
        (* (total-score) (* (count-once-per-objects throwAttempt:yellow) (count-once-per-objects throwAttempt:green) 9 )
        )
      )
      (count throwAttempt)
    )
  )
)
(:scoring
  12
)
)

(define (game game-id-697) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?r2 ?b9 - dodgeball ?s - dodgeball)
      (forall (?d - wall)
        (forall (?h - color ?h - dodgeball ?d ?o5 - teddy_bear)
          (forall (?bl - hexagonal_bin)
            (and
              (and
                (and
                  (not
                    (game-conserved
                      (adjacent agent ?d)
                    )
                  )
                )
              )
              (and
                (game-conserved
                  (= 10)
                )
                (and
                  (and
                    (and
                      (game-conserved
                        (touch ?o5 ?d)
                      )
                    )
                    (not
                      (exists (?c2 - shelf)
                        (exists (?h - (either laptop cylindrical_block))
                          (and
                            (forall (?d - cube_block)
                              (game-optional
                                (agent_holds ?o5)
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                  (and
                    (exists (?b5 - hexagonal_bin ?o3 - hexagonal_bin)
                      (game-optional
                        (in_motion ?o5)
                      )
                    )
                    (forall (?b - (either lamp pencil))
                      (game-optional
                        (not
                          (is_setup_object ?o5)
                        )
                      )
                    )
                    (and
                      (game-optional
                        (in_motion ?o5)
                      )
                    )
                  )
                )
                (forall (?l1 - hexagonal_bin ?d - dodgeball ?l2 - hexagonal_bin)
                  (exists (?o1 - hexagonal_bin)
                    (game-optional
                      (and
                        (on ?o5 ?bl)
                        (and
                          (not
                            (on bed ?bl)
                          )
                          (not
                            (in_motion ?o5)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectInBuilding
      (exists (?c - (either cellphone yellow_cube_block))
        (then
          (once (and (in_motion ?c) (same_object ?c ?c) ) )
          (once (< 1 9) )
          (hold-while (rug_color_under ?c upright) (not (and (adjacent ?c floor) (or (on ?c ?c) (in_motion ?c) ) ) ) )
        )
      )
    )
    (preference tanObjectMovedToRoomCenter
      (exists (?b - cylindrical_block)
        (then
          (once (not (and (between ?b ?b ?b) (not (adjacent ?b ?b) ) ) ) )
          (once (not (and (agent_holds ?b) ) ) )
          (once (and (in_motion ?b) (in ?b ?b) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (+ (count objectInBuilding:basketball) 8 (* (* (- (count-overlapping tanObjectMovedToRoomCenter:dodgeball:yellow) )
            10
          )
          (* (- (count-once-per-objects tanObjectMovedToRoomCenter:golfball) )
            (total-score)
          )
        )
      )
      15
    )
    (count tanObjectMovedToRoomCenter:blue_dodgeball)
  )
)
(:scoring
  (count objectInBuilding:green)
)
)

(define (game game-id-698) (:domain few-objects-room-v1)
(:setup
  (exists (?b6 - cube_block)
    (game-optional
      (not
        (and
          (is_setup_object ?b6)
          (not
            (and
              (object_orientation ?b6 ?b6)
              (< (distance_side ?b6 ?b6 ?b6) 6)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference brownObjectMovedToRoomCenter
      (exists (?o2 - doggie_bed ?t - dodgeball)
        (then
          (once (adjacent ?t ?t) )
          (once (agent_holds ?t) )
          (once (and (adjacent_side ?t ?t ?t ?t) (in_motion ?t) ) )
          (once (or (not (forall (?o - hexagonal_bin ?d ?b9 - book ?l - dodgeball) (exists (?d - (either cellphone flat_block) ?b7 - chair) (not (agent_holds agent) ) ) ) ) (agent_holds ?t) ) )
        )
      )
    )
    (preference blockPlacedInBuilding
      (exists (?h - ball)
        (then
          (once (agent_holds pillow) )
          (hold (not (and (agent_holds ?h) (and (and (object_orientation ?h front_left_corner) (and (and (not (not (and (on floor agent) (same_object ?h ?h) ) ) ) (not (not (agent_holds ?h) ) ) (in_motion ?h) ) (and (touch ?h rug) (in_motion ?h) ) ) ) (and (and (in floor ?h) (in_motion ?h) ) (not (not (not (in_motion bed) ) ) ) (in room_center ?h) ) (in_motion ?h) ) ) ) )
          (once (and (agent_holds ?h) (and (on ?h ?h) (on ?h ?h) ) ) )
        )
      )
    )
    (preference teddyBearLandsInBin
      (exists (?h - red_pyramid_block ?ob - hexagonal_bin)
        (then
          (hold (on room_center ?ob) )
          (once (in_motion agent) )
          (once (not (and (or (in_motion ?ob) (and (and (in_motion ?ob) (and (exists (?h - (either alarm_clock bridge_block key_chain)) (in_motion ?h) ) (< (distance room_center desk) (distance ?ob ?ob)) (not (in_motion ?ob) ) (agent_holds room_center) (not (not (in_motion ?ob) ) ) (and (and (object_orientation bed ?ob) (between ?ob ?ob ?ob) ) (in_motion ?ob) ) ) ) (agent_holds ?ob) ) ) (in_motion ?ob) ) ) )
        )
      )
    )
  )
)
(:terminal
  (= (= (total-score) (count blockPlacedInBuilding:hexagonal_bin) )
    3
  )
)
(:scoring
  (count teddyBearLandsInBin:basketball)
)
)

(define (game game-id-699) (:domain few-objects-room-v1)
(:setup
  (exists (?b9 - dodgeball)
    (game-optional
      (in_motion door)
    )
  )
)
(:constraints
  (and
    (preference throwKnocksOverBear
      (exists (?o1 - (either doggie_bed tall_cylindrical_block))
        (at-end
          (not
            (in_motion rug)
          )
        )
      )
    )
  )
)
(:terminal
  (<= (+ 10 (count throwKnocksOverBear:pink_dodgeball:beachball) )
    (count throwKnocksOverBear:beachball)
  )
)
(:scoring
  (count throwKnocksOverBear:blue_cube_block)
)
)

(define (game game-id-700) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (not
      (in_motion agent)
    )
  )
)
(:constraints
  (and
    (forall (?d - cube_block ?h - ball)
      (and
        (preference failedThrowToBin
          (then
            (once (in ?h ?h) )
            (hold (and (forall (?h - (either bed cube_block game_object tall_cylindrical_block cube_block)) (not (on sideways block) ) ) (not (and (on ?h ?h) (on ?h ?h) ) ) ) )
            (any)
          )
        )
        (preference throwOverRamp
          (exists (?p2 ?b - cube_block ?h ?c ?w ?b - hexagonal_bin)
            (then
              (hold-while (in_motion ?b) (agent_holds ?b) (agent_holds agent) )
              (once (and (agent_holds bed) (and (rug_color_under ?w ?c) (on bed ?h) ) ) )
              (once (agent_holds agent) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (> (count-once throwOverRamp:red:green) (+ (count failedThrowToBin:blue_dodgeball:pink_dodgeball) (+ (count failedThrowToBin:top_drawer) 2 )
      )
    )
  )
)
(:scoring
  (count throwOverRamp:pink_dodgeball:doggie_bed:pink)
)
)

(define (game game-id-701) (:domain few-objects-room-v1)
(:setup
  (exists (?p - building ?c3 - hexagonal_bin)
    (and
      (exists (?w - color)
        (game-optional
          (and
            (and
              (agent_holds ?w)
              (agent_holds ?c3)
              (and
                (same_color ?w ?w)
                (and
                  (on ?c3 ?c3)
                  (and
                    (on ?c3 ?c3)
                    (in_motion ?c3)
                    (touch front ?c3)
                  )
                )
                (in_motion agent)
              )
            )
            (in_motion ?c3)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwOverRamp
      (exists (?b - (either pencil laptop pillow))
        (then
          (hold (< 1 (distance ?b ?b)) )
          (hold (faces ?b room_center) )
          (hold (in_motion ?b) )
        )
      )
    )
    (preference greenObjectMovedToRoomCenter
      (exists (?c - dodgeball ?g - doggie_bed ?l3 - hexagonal_bin ?o1 - cylindrical_block)
        (then
          (hold (agent_holds agent) )
          (hold-while (agent_holds ?o1) (not (in_motion ?o1) ) )
          (once (on bed ?o1) )
        )
      )
    )
    (preference throwFromBehindChairsInBin
      (exists (?b4 - hexagonal_bin)
        (then
          (once (and (on rug ?b4) (not (in_motion ?b4) ) (touch ?b4 ?b4) (broken ?b4) (adjacent ?b4 ?b4) (and (not (< (distance ?b4 bed) 2) ) ) (touch ?b4 ?b4) (and (in_motion ?b4) (agent_holds ?b4) (agent_holds ?b4) ) ) )
          (hold-while (in_motion ?b4) (and (not (in desk ?b4) ) (not (or (not (not (in_motion ?b4) ) ) (exists (?h - dodgeball) (or (not (on ?b4 ?h) ) (and (not (agent_holds ?b4) ) (agent_holds ?b4) ) ) ) (and (on ?b4 ?b4) (on agent ?b4) (agent_holds ?b4) ) ) ) ) )
          (hold (in ?b4 ?b4) )
          (once (in_motion desk) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (<= (* (* 2 (not 10 ) 10 (count-once-per-external-objects greenObjectMovedToRoomCenter:doggie_bed) (count-once-per-objects greenObjectMovedToRoomCenter:dodgeball) )
          (count throwFromBehindChairsInBin:yellow_pyramid_block:beachball)
        )
        (count-once-per-objects throwFromBehindChairsInBin:dodgeball)
      )
      (= (count throwFromBehindChairsInBin:dodgeball) (external-forall-maximize 10 ) )
    )
    (not
      (= 5 (count-increasing-measure throwFromBehindChairsInBin:golfball) )
    )
  )
)
(:scoring
  (+ 2 (count-once-per-objects throwFromBehindChairsInBin:golfball) )
)
)

(define (game game-id-702) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?c4 - dodgeball)
      (game-conserved
        (is_setup_object door)
      )
    )
  )
)
(:constraints
  (and
    (preference objectMovedRoomSide
      (exists (?b9 - (either tall_cylindrical_block golfball book cube_block book basketball golfball) ?o4 - ball)
        (then
          (hold (and (is_setup_object agent) (and (and (agent_holds ?o4) (in_motion ?o4) ) (not (agent_holds ?o4) ) ) (same_color ?o4 ?o4) (exists (?b - curved_wooden_ramp ?b - cube_block) (in_motion ?b) ) ) )
          (once (and (or (and (not (and (agent_holds ?o4) (in_motion ?o4) ) ) (agent_holds ?o4) ) (in_motion ?o4) ) (not (not (in_motion ?o4) ) ) ) )
          (once (adjacent ?o4 upright) )
        )
      )
    )
  )
)
(:terminal
  (> (count objectMovedRoomSide:dodgeball:red) (* (count-once-per-objects objectMovedRoomSide:doggie_bed) )
  )
)
(:scoring
  (count objectMovedRoomSide:beachball)
)
)

(define (game game-id-703) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (in_motion pink)
  )
)
(:constraints
  (and
    (preference ballToBinFromBed
      (exists (?c3 - doggie_bed)
        (then
          (hold (agent_holds ?c3) )
          (once (and (is_setup_object ?c3) (not (and (agent_holds ?c3) (in ?c3 bed) ) ) ) )
          (once (and (not (and (and (agent_holds ?c3) (not (not (agent_holds ?c3) ) ) ) (agent_holds ?c3) (in_motion agent) (not (agent_holds ?c3) ) (same_color back pink_dodgeball) (on ?c3 ?c3) ) ) (agent_holds ?c3) ) )
        )
      )
    )
  )
)
(:terminal
  (> (+ 6 (count-overlapping ballToBinFromBed:golfball:hexagonal_bin) (count-measure ballToBinFromBed:red) 10 (count-once-per-objects ballToBinFromBed:golfball:red) 3 )
    (or
      (count-once-per-objects ballToBinFromBed:golfball)
      (count ballToBinFromBed:white)
    )
  )
)
(:scoring
  (+ (or (count ballToBinFromBed:dodgeball:dodgeball) (/ (count-total ballToBinFromBed:dodgeball) (external-forall-maximize (* 2 15 )
        )
      )
      3
    )
    (count-unique-positions ballToBinFromBed:pyramid_block)
  )
)
)

(define (game game-id-704) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-optional
      (= 1 2)
    )
    (game-conserved
      (exists (?c - building ?d - flat_block)
        (not
          (and
            (and
              (exists (?o - hexagonal_bin)
                (not
                  (adjacent ?d ?o)
                )
              )
              (same_color floor ?d)
              (and
                (in_motion ?d)
                (in_motion bed)
              )
            )
            (agent_holds agent)
          )
        )
      )
    )
    (not
      (game-optional
        (agent_holds agent)
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToBinOffObject
      (exists (?h - teddy_bear)
        (then
          (once (and (in_motion ?h) (in_motion ?h) ) )
          (hold (and (and (agent_holds ?h) (on ?h ?h) ) (not (not (not (in_motion ?h) ) ) ) (and (not (not (exists (?l1 - game_object ?b - triangular_ramp) (agent_holds bed) ) ) ) (agent_holds ?h) ) ) )
          (once (in ?h ?h) )
        )
      )
    )
  )
)
(:terminal
  (>= 1 (count-increasing-measure throwBallToBinOffObject:pink:dodgeball) )
)
(:scoring
  (count-measure throwBallToBinOffObject:cube_block:dodgeball)
)
)

(define (game game-id-705) (:domain many-objects-room-v1)
(:setup
  (exists (?b - hexagonal_bin)
    (and
      (not
        (or
          (game-conserved
            (and
              (and
                (agent_holds ?b)
                (above ?b ?b)
                (object_orientation ?b ?b)
              )
              (and
                (agent_holds ?b)
                (and
                  (in ?b agent)
                  (touch rug rug)
                )
                (on ?b ?b)
              )
            )
          )
          (forall (?d - dodgeball)
            (exists (?r2 - teddy_bear)
              (and
                (game-conserved
                  (agent_holds ?b)
                )
              )
            )
          )
        )
      )
      (and
        (forall (?r - (either cube_block dodgeball teddy_bear))
          (and
            (game-conserved
              (in_motion ?r)
            )
            (and
              (exists (?d - ball)
                (game-optional
                  (agent_holds ?r)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?l - shelf)
      (and
        (preference dodgeballHitsBin
          (exists (?f - hexagonal_bin ?c4 - chair ?b4 - (either cube_block beachball))
            (then
              (once (and (agent_holds ?b4) (and (in_motion ?b4) (agent_holds ?l) ) ) )
              (once (on ?l ?l) )
              (once (not (agent_holds ?l) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (and
      (> 3 (count dodgeballHitsBin:yellow:dodgeball) )
    )
    (= (* (count dodgeballHitsBin:green:doggie_bed) (count dodgeballHitsBin:hexagonal_bin) )
      300
    )
    (and
      (>= (count dodgeballHitsBin:dodgeball) (count dodgeballHitsBin:white:beachball) )
    )
  )
)
(:scoring
  (count dodgeballHitsBin:basketball)
)
)

(define (game game-id-706) (:domain few-objects-room-v1)
(:setup
  (forall (?h - hexagonal_bin)
    (game-optional
      (and
        (same_object ?h ?h)
        (and
          (and
            (agent_holds ?h)
            (and
              (and
                (and
                  (in_motion ?h)
                  (same_type ?h ?h)
                )
                (not
                  (in ?h ?h)
                )
                (in_motion ?h)
              )
              (and
                (in_motion left)
                (rug_color_under ?h ?h)
              )
            )
          )
          (agent_holds agent)
        )
        (agent_holds floor)
        (not
          (not
            (on ?h ?h)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference itemsTurnedOff
      (exists (?w2 - hexagonal_bin)
        (at-end
          (adjacent_side ?w2 ?w2 ?w2 ?w2)
        )
      )
    )
    (preference ballThrownFromBehindBlock
      (exists (?c1 - cube_block)
        (then
          (once (and (in_motion ?c1) (is_setup_object ?c1) ) )
          (once (and (and (in_motion ?c1) (not (agent_holds ?c1) ) ) (in_motion ?c1) ) )
          (hold (and (not (in_motion rug) ) (in_motion ?c1) ) )
        )
      )
    )
    (preference teddyBearLandsInBin
      (exists (?b5 - block)
        (then
          (once (not (in agent ?b5) ) )
          (once (not (< (distance block ?b5) (distance ?b5 ?b5)) ) )
          (once (in ?b5 ?b5) )
        )
      )
    )
  )
)
(:terminal
  (>= 10 10 )
)
(:scoring
  (- (count ballThrownFromBehindBlock:pink:blue_cube_block) )
)
)

(define (game game-id-707) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?t - hexagonal_bin)
      (not
        (and
          (game-optional
            (in_motion pink_dodgeball)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownIntoTarget
      (exists (?p3 - shelf ?d - hexagonal_bin)
        (then
          (once (not (not (not (toggled_on ?d) ) ) ) )
          (once (or (in_motion ?d) (not (> 10 (distance front ?d)) ) ) )
          (hold (in_motion ?d) )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (+ 3 1 )
      (and
        (count ballThrownIntoTarget:golfball)
        (external-forall-maximize
          5
        )
      )
    )
    (>= (count ballThrownIntoTarget:basketball) 8 )
  )
)
(:scoring
  (count ballThrownIntoTarget:hexagonal_bin)
)
)

(define (game game-id-708) (:domain few-objects-room-v1)
(:setup
  (forall (?d - hexagonal_bin)
    (game-optional
      (equal_z_position ?d front)
    )
  )
)
(:constraints
  (and
    (preference dodgeballHitsBinBottom
      (exists (?d1 - dodgeball)
        (then
          (once (< 1 0.5) )
          (hold-while (< 0.5 8) (agent_holds ?d1) (exists (?p - teddy_bear ?t2 - building) (and (and (not (and (adjacent ?t2 ?d1) (in_motion ?t2) (adjacent ?t2 ?t2) ) ) (agent_holds ?t2) (and (adjacent ?d1 pink_dodgeball) (on ?t2 ?t2) (touch ?d1 ?d1) ) ) (on front ?t2) ) ) )
          (hold (in ?d1 ?d1) )
        )
      )
    )
    (preference redDodgeballThrownToBinWithoutTouchingFloor
      (exists (?d - building ?b4 - building)
        (then
          (once (not (and (adjacent ?b4 ?b4) (on room_center ?b4) ) ) )
          (hold-while (and (adjacent ?b4 ?b4) (in ?b4 ?b4) ) (in ?b4 ?b4) )
          (once (in_motion ?b4) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects redDodgeballThrownToBinWithoutTouchingFloor:beachball) (* 3 (total-score) )
  )
)
(:scoring
  (count-increasing-measure redDodgeballThrownToBinWithoutTouchingFloor:yellow:yellow)
)
)

(define (game game-id-709) (:domain medium-objects-room-v1)
(:setup
  (exists (?s - color ?r - hexagonal_bin)
    (game-optional
      (and
        (and
          (not
            (and
              (not
                (not
                  (in_motion ?r)
                )
              )
              (not
                (not
                  (object_orientation agent ?r)
                )
              )
            )
          )
          (and
            (not
              (agent_holds ?r)
            )
            (on ?r front)
          )
        )
        (and
          (in ?r ?r)
        )
        (and
          (not
            (< (distance ?r ?r) 1)
          )
          (not
            (on ?r ?r)
          )
        )
        (and
          (agent_holds ?r)
          (agent_holds ?r)
          (in_motion ?r)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?tb ?b - block)
      (and
        (preference bounceBallToBin
          (exists (?b3 - pillow)
            (then
              (once (adjacent agent ?tb) )
              (hold (on agent ?b3) )
              (hold-while (on ?b ?b3) (not (agent_holds ?b3) ) (adjacent ?tb ?tb) (and (in_motion ?b3) (touch ?tb bottom_shelf) ) )
            )
          )
        )
      )
    )
    (preference ballThrownFromRug
      (exists (?c - hexagonal_bin ?c ?o1 - ball ?c3 - wall)
        (at-end
          (and
            (<= (distance ?c3 blue) (distance ?c3 ?c3))
            (and
              (not
                (open ?c3)
              )
              (rug_color_under rug ?c3)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (= (external-forall-minimize (+ 7 (* (+ (+ 5 2 )
              (count-once-per-objects bounceBallToBin:yellow)
              (* (* (count-once-per-objects ballThrownFromRug:dodgeball) (count bounceBallToBin:beachball) (* (count bounceBallToBin:top_drawer:yellow) 3 )
                )
                (total-score)
                (- (count-once-per-external-objects bounceBallToBin:pink) )
              )
              8
            )
            (* -30 10 )
            2
            (count bounceBallToBin:doggie_bed)
          )
          5
        )
      )
      180
    )
  )
)
(:scoring
  7
)
)

(define (game game-id-710) (:domain medium-objects-room-v1)
(:setup
  (exists (?c6 - building ?d - ball)
    (game-conserved
      (same_type ?d ?d)
    )
  )
)
(:constraints
  (and
    (preference objectMovedRoomSide
      (exists (?b - doggie_bed ?g - hexagonal_bin)
        (then
          (once (in_motion ?g) )
          (hold (on floor ?g) )
          (once (not (in_motion ?g) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (> (count-once-per-objects objectMovedRoomSide:triangle_block) (external-forall-maximize (count objectMovedRoomSide:dodgeball) ) )
  )
)
(:scoring
  (count-once-per-objects objectMovedRoomSide:hexagonal_bin)
)
)

(define (game game-id-711) (:domain few-objects-room-v1)
(:setup
  (exists (?tb - blue_cube_block ?h - game_object ?l - hexagonal_bin)
    (game-conserved
      (not
        (not
          (agent_holds desk)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference pinkObjectMovedToRoomCenter
      (exists (?h ?c4 - ball)
        (then
          (hold (not (agent_holds green) ) )
          (hold (and (agent_holds ?c4) (agent_holds pink_dodgeball) (touch top_shelf ?c4) (in_motion ?h) ) )
          (hold-to-end (in_motion ?c4) )
        )
      )
    )
  )
)
(:terminal
  (> 9 (total-score) )
)
(:scoring
  (= (- (- (+ (* (* 1 (* (* (* (+ (count-once-per-objects pinkObjectMovedToRoomCenter:basketball) 5 )
                    6
                  )
                  2
                )
                (count-once pinkObjectMovedToRoomCenter:beachball)
              )
            )
            (count pinkObjectMovedToRoomCenter:red:orange)
          )
          (count pinkObjectMovedToRoomCenter:doggie_bed)
        )
      )
    )
    (* (count pinkObjectMovedToRoomCenter:cube_block) 2 4 (external-forall-maximize (count-once-per-objects pinkObjectMovedToRoomCenter) ) )
  )
)
)

(define (game game-id-712) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (in_motion agent)
  )
)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?r2 ?d2 - hexagonal_bin ?d - blue_cube_block)
        (then
          (once (and (adjacent_side ?d agent desk) (not (not (exists (?r - hexagonal_bin ?g - dodgeball) (not (in_motion ?d) ) ) ) ) ) )
          (once (agent_holds ?d) )
          (once (on ?d ?d) )
        )
      )
    )
    (preference castleBuilt
      (exists (?b3 - doggie_bed)
        (at-end
          (on ?b3 ?b3)
        )
      )
    )
    (preference ballThrownToBed
      (exists (?o - cube_block)
        (then
          (once (not (on ?o ?o) ) )
          (hold (>= 6 (distance ?o upright)) )
          (once (is_setup_object agent) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (total-score) (+ (* 15 (count-once-per-objects ballThrownToBin:blue_pyramid_block) (external-forall-maximize (count-once-per-external-objects castleBuilt:hexagonal_bin) ) )
        300
        (* 9 4 )
      )
    )
    8
  )
)
(:scoring
  (count ballThrownToBed:purple)
)
)

(define (game game-id-713) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (= 1 7 9)
  )
)
(:constraints
  (and
    (forall (?b6 - game_object ?t2 - dodgeball ?l2 - curved_wooden_ramp)
      (and
        (preference throwBallToDoggieBed
          (exists (?h - hexagonal_bin)
            (then
              (once (in_motion ?l2) )
              (once (and (not (not (and (and (and (not (and (not (not (in_motion agent) ) ) (agent_holds ?l2) (agent_holds ?h) ) ) (object_orientation ?h ?l2) ) (not (not (not (not (and (not (on ?h ?h) ) (and (not (in_motion ?h) ) (in_motion ?l2) (> 9 (distance ?l2 ?h)) ) ) ) ) ) ) ) (not (on ?l2 ?l2) ) ) ) ) (and (same_color ?h ?h) (in_motion ?h) (in_motion sideways) ) ) )
              (once (agent_holds ?h) )
            )
          )
        )
        (preference pyramidBlockAtopTowerAtEnd
          (exists (?p2 - ball ?o - hexagonal_bin)
            (at-end
              (not
                (agent_holds ?o)
              )
            )
          )
        )
        (preference blockOnBlockInTowerAtEnd
          (then
            (once (exists (?l - cylindrical_block ?c4 - dodgeball ?p3 - desk_shelf ?l1 - shelf) (and (agent_holds ?l2) (not (and (exists (?d1 - dodgeball) (in_motion ?d1) ) (in ?l1 ?l1) ) ) ) ) )
            (hold (in_motion desk) )
            (once-measure (not (in agent ?l2) ) (distance rug ?l2) )
          )
        )
      )
    )
    (forall (?h - ball)
      (and
        (preference blockKnockedFromBuildingInBin
          (exists (?b - game_object ?b6 - ball)
            (then
              (hold (in ?b6 bed) )
              (hold (and (equal_z_position ?h ?b6) (in_motion ?h) ) )
              (hold-while (not (< 10 2) ) (and (= 1 1) (touch ?h ?h) ) )
            )
          )
        )
      )
    )
    (forall (?b - hexagonal_bin)
      (and
        (preference cubeBlockInBuilding
          (exists (?d - dodgeball)
            (at-end
              (and
                (agent_holds desk)
                (exists (?b - hexagonal_bin)
                  (not
                    (in_motion ?d)
                  )
                )
                (not
                  (and
                    (agent_holds floor)
                    (not
                      (agent_holds agent)
                    )
                    (not
                      (agent_holds ?d)
                    )
                    (in front ?d)
                    (adjacent ?d ?d)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (or (+ (count pyramidBlockAtopTowerAtEnd:triangle_block:beachball:beachball) (- (count pyramidBlockAtopTowerAtEnd:basketball:brown) )
      )
      (- (count cubeBlockInBuilding:green) )
    )
    5
  )
)
(:scoring
  (* (* (count cubeBlockInBuilding:purple) (count-once blockKnockedFromBuildingInBin:dodgeball) )
    (count blockOnBlockInTowerAtEnd:blue_dodgeball)
  )
)
)

(define (game game-id-714) (:domain few-objects-room-v1)
(:setup
  (forall (?h - doggie_bed ?b1 - hexagonal_bin)
    (exists (?o - ball ?b - ball)
      (game-conserved
        (in_motion ?b1)
      )
    )
  )
)
(:constraints
  (and
    (forall (?c2 - cube_block ?b - (either tall_cylindrical_block ball))
      (and
        (preference ballThrownToBin
          (exists (?o - pillow ?p2 ?d - hexagonal_bin ?b - ball)
            (at-end
              (in_motion pink)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count ballThrownToBin:hexagonal_bin) 4 )
    (> 2 0.7 )
    (or
      (>= (count-once ballThrownToBin:beachball) 1 )
    )
  )
)
(:scoring
  (or
    (count ballThrownToBin:dodgeball)
  )
)
)

(define (game game-id-715) (:domain many-objects-room-v1)
(:setup
  (forall (?c1 - hexagonal_bin)
    (forall (?d - dodgeball ?d - hexagonal_bin)
      (forall (?d ?h - doggie_bed)
        (game-conserved
          (and
            (not
              (on desk ?c1)
            )
            (between ?h ?d ?d)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - game_object)
      (and
        (preference throwToDrawerOrBin
          (exists (?t2 - hexagonal_bin)
            (at-end
              (exists (?l1 - dodgeball ?g - dodgeball)
                (not
                  (agent_holds ?b)
                )
              )
            )
          )
        )
        (preference ballInOrOnBin
          (exists (?d2 ?h - triangular_ramp ?b - hexagonal_bin ?o2 - hexagonal_bin ?c5 ?h ?b2 ?b ?h - hexagonal_bin)
            (at-end
              (agent_holds ?h)
            )
          )
        )
      )
    )
    (preference dodgeballHitsBinBottom
      (exists (?l - building ?t - dodgeball ?d - building ?t - dodgeball)
        (at-end
          (faces agent ?t)
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* 3 (count throwToDrawerOrBin:blue_pyramid_block) )
      (* 8 (* (total-score) (count dodgeballHitsBinBottom:basketball:pink) (count dodgeballHitsBinBottom:red:book) )
      )
    )
    (not
      (not
        (>= (count ballInOrOnBin:basketball:yellow) (count ballInOrOnBin:white:orange:pink_dodgeball) )
      )
    )
  )
)
(:scoring
  (* (count-once-per-objects dodgeballHitsBinBottom:beachball) 2 )
)
)

(define (game game-id-716) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (forall (?r - golfball)
        (exists (?b8 - dodgeball)
          (game-conserved
            (and
              (in_motion ?b8)
              (forall (?b - hexagonal_bin ?d - shelf)
                (agent_holds ?b8)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c - hexagonal_bin)
      (and
        (preference matchingBuildingBuilt
          (exists (?c - dodgeball ?x - (either yellow_cube_block dodgeball))
            (then
              (once (and (not (not (adjacent_side desk ?x ?c brown) ) ) (not (= (distance drawer desk) (x_position ?c)) ) ) )
              (once (agent_holds ?x) )
              (hold (< 10 (building_size ?c)) )
              (once (in_motion ?x) )
              (hold (adjacent room_center floor) )
            )
          )
        )
      )
    )
    (preference pillowThrownToDoggieBed
      (exists (?t1 - dodgeball)
        (then
          (once (not (exists (?h - (either teddy_bear dodgeball cube_block)) (and (is_setup_object ?h) (or (< (distance ?t1 ?t1) 1) (agent_holds bed) ) ) ) ) )
          (hold (agent_holds ?t1) )
          (once (in_motion ?t1) )
        )
      )
    )
    (preference itemsHidingScreens
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d) )
          (once (agent_holds ?d) )
          (hold (not (not (not (exists (?d2 - dodgeball) (and (and (agent_holds ?d2) (> (distance ?d ?d2) 1) (or (forall (?h - dodgeball) (on ?d ?h) ) (same_type ?d2 ?d2) ) (on ?d2 ?d) ) (not (in ?d2 ?d) ) ) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (< (* 3 10 )
      (count-once-per-objects itemsHidingScreens:yellow:dodgeball)
    )
  )
)
(:scoring
  10
)
)

(define (game game-id-717) (:domain many-objects-room-v1)
(:setup
  (forall (?l4 - (either tall_cylindrical_block pyramid_block cylindrical_block))
    (exists (?h - (either alarm_clock wall yellow_cube_block) ?s - building)
      (exists (?l3 - color)
        (game-conserved
          (agent_holds bed)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - bridge_block ?b - cube_block)
      (and
        (preference blockKnockedFromBuildingInBin
          (exists (?c - ball ?r ?s ?h ?h ?h ?c2 ?c ?c2 ?l ?d - ball ?h - hexagonal_bin)
            (then
              (once (agent_holds ?b) )
              (once (and (not (opposite ?b ?b) ) (and (agent_crouches ) (not (or (and (on bed ?b) (agent_holds ?h) (not (object_orientation ?h ?b) ) ) (agent_holds ?h) ) ) ) ) )
              (hold (not (and (not (exists (?t - (either cube_block basketball cube_block)) (in ?t rug) ) ) (and (in ?h ?h) (not (< (distance ?b bed) 2) ) ) ) ) )
            )
          )
        )
        (preference dodgeballFromBlockToBin
          (then
            (once (in_motion ?b) )
            (once (and (toggled_on ?b) (touch ?b ?b) ) )
          )
        )
      )
    )
  )
)
(:terminal
  (> (count blockKnockedFromBuildingInBin) (count-overlapping dodgeballFromBlockToBin:beachball) )
)
(:scoring
  (count dodgeballFromBlockToBin:dodgeball)
)
)

(define (game game-id-718) (:domain few-objects-room-v1)
(:setup
  (exists (?l1 - ball)
    (and
      (and
        (and
          (forall (?f - ball)
            (exists (?d - (either blue_cube_block tall_cylindrical_block))
              (forall (?h - chair)
                (exists (?o3 - game_object)
                  (and
                    (exists (?b - hexagonal_bin)
                      (and
                        (game-conserved
                          (not
                            (on ?b ?f)
                          )
                        )
                      )
                    )
                    (exists (?l - curved_wooden_ramp)
                      (game-conserved
                        (not
                          (and
                            (in_motion ?o3)
                            (and
                              (exists (?o - hexagonal_bin ?b - color ?b2 - game_object ?b - hexagonal_bin)
                                (not
                                  (on ?o3 ?d)
                                )
                              )
                              (touch ?f ?o3)
                              (in_motion ?h)
                            )
                          )
                        )
                      )
                    )
                    (exists (?c3 ?w2 - dodgeball)
                      (and
                        (game-optional
                          (and
                            (not
                              (< 1 0.5)
                            )
                            (agent_holds ?o3)
                            (touch ?l1 ?o3)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
          (and
            (exists (?t - (either pyramid_block hexagonal_bin) ?o ?t ?d ?bl ?c2 ?b8 - hexagonal_bin ?h - pyramid_block)
              (game-conserved
                (in ?h ?l1)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference pillowMovedToRoomCenter
      (exists (?b2 - ball)
        (then
          (hold (agent_holds ?b2) )
          (once (<= 2 (distance_side ?b2 ?b2 ?b2)) )
          (hold (in ?b2 ?b2) )
        )
      )
    )
  )
)
(:terminal
  (not
    (< 5 3 )
  )
)
(:scoring
  5
)
)

(define (game game-id-719) (:domain medium-objects-room-v1)
(:setup
  (exists (?b7 - dodgeball)
    (game-optional
      (not
        (on ?b7 ?b7)
      )
    )
  )
)
(:constraints
  (and
    (preference ballToBinFromBed
      (exists (?l2 - hexagonal_bin)
        (then
          (hold (>= (distance ?l2 ?l2) (distance ?l2 agent)) )
          (once (agent_holds ?l2) )
          (hold-to-end (in_motion ?l2) )
          (hold (not (and (not (and (> 2 5) (in_motion ?l2) (and (same_color ?l2 ?l2) (in_motion ?l2) ) ) ) (and (agent_holds ?l2) (game_over ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (= (* (count-once-per-objects ballToBinFromBed:purple) (not (* 6 (count-overlapping ballToBinFromBed:purple) )
      )
    )
    (- (count ballToBinFromBed:hexagonal_bin) )
  )
)
(:scoring
  5
)
)

(define (game game-id-720) (:domain many-objects-room-v1)
(:setup
  (forall (?c - chair)
    (exists (?d - block ?b4 - chair ?b - red_dodgeball)
      (exists (?b ?d - flat_block ?b - building)
        (forall (?t - doggie_bed)
          (game-conserved
            (and
              (and
                (not
                  (not
                    (agent_holds ?c)
                  )
                )
                (and
                  (and
                    (opposite ?b ?c)
                    (and
                      (and
                        (in_motion ?c)
                        (agent_holds ?b)
                      )
                      (in_motion ?t)
                    )
                  )
                  (not
                    (and
                      (on ?t ?c)
                      (and
                        (and
                          (adjacent ?c ?b)
                          (on ?c ?c)
                        )
                        (object_orientation ?b desk)
                      )
                    )
                  )
                )
              )
              (agent_holds agent)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference greenObjectMovedToRoomCenter
      (exists (?p2 - dodgeball)
        (at-end
          (not
            (not
              (agent_holds ?p2)
            )
          )
        )
      )
    )
    (forall (?bl - (either curved_wooden_ramp laptop basketball) ?b - ball)
      (and
        (preference dodgeballHitsBinBottom
          (exists (?h - cube_block ?b - shelf)
            (at-end
              (not
                (object_orientation room_center ?b)
              )
            )
          )
        )
        (preference dodgeballBouncesOnceToDoggieBed
          (exists (?h - sliding_door)
            (at-end
              (agent_holds agent)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (and
      (or
        (<= (* 4 (count dodgeballBouncesOnceToDoggieBed:beachball) (+ (count dodgeballHitsBinBottom) (count-once greenObjectMovedToRoomCenter:rug) )
          )
          2
        )
        (>= 1 (* (* (count dodgeballHitsBinBottom) 50 )
            (count-once-per-objects dodgeballHitsBinBottom:hexagonal_bin)
            (count greenObjectMovedToRoomCenter)
          )
        )
      )
    )
  )
)
(:scoring
  (count greenObjectMovedToRoomCenter:beachball:white)
)
)

(define (game game-id-721) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (agent_holds pink_dodgeball)
  )
)
(:constraints
  (and
    (preference itemsTurnedOff
      (exists (?h - hexagonal_bin)
        (then
          (once (or (and (agent_holds pink_dodgeball) (and (same_type ?h ?h) (same_color ?h ?h) ) ) (agent_holds ?h) ) )
          (once (in_motion ?h) )
          (once (not (in ?h ?h) ) )
        )
      )
    )
    (preference otherObjectsOnDeskShelf
      (exists (?b2 - hexagonal_bin ?c - triangular_ramp ?c - (either wall block hexagonal_bin))
        (then
          (once (and (game_start ) (= (distance ?c ?c) 1) (on bed ?c) ) )
          (hold-to-end (not (in_motion agent) ) )
          (once (not (agent_holds ?c) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count itemsTurnedOff:basketball) (+ 2 6 )
    )
    1
  )
)
(:scoring
  (count itemsTurnedOff:golfball)
)
)

(define (game game-id-722) (:domain medium-objects-room-v1)
(:setup
  (forall (?c - color ?d - doggie_bed ?ob - dodgeball ?s - hexagonal_bin)
    (forall (?o4 - ball)
      (exists (?c - doggie_bed)
        (and
          (and
            (game-optional
              (not
                (opposite ?o4 ?s)
              )
            )
          )
          (game-conserved
            (not
              (not
                (between ?o4 ?c ?s)
              )
            )
          )
          (game-conserved
            (agent_crouches )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - doggie_bed ?c - (either cube_block flat_block))
      (and
        (preference throwKnocksOverBear
          (exists (?bl - (either key_chain top_drawer pen))
            (then
              (hold (and (on ?c ?c) (not (on ?c ?bl) ) ) )
              (once (and (in ?bl ?bl) (in_motion agent) ) )
              (once (agent_holds ?c) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (> (- (count-unique-positions throwKnocksOverBear:yellow) )
      (count-once-per-external-objects throwKnocksOverBear:purple)
    )
    (and
      (>= 300 (+ (count-once-per-objects throwKnocksOverBear:basketball) 5 10 (+ (* 30 (count throwKnocksOverBear:cylindrical_block) )
            (count-once throwKnocksOverBear:dodgeball:pink_dodgeball:red)
          )
          (total-score)
          (* (- (count-once throwKnocksOverBear:golfball) )
            (- (total-time) )
          )
        )
      )
      (or
        (>= (count-once-per-objects throwKnocksOverBear:alarm_clock:alarm_clock:pink_dodgeball) 12 )
      )
      (not
        (>= (total-time) 3 )
      )
    )
    (>= (count throwKnocksOverBear) (count throwKnocksOverBear:dodgeball) )
  )
)
(:scoring
  3
)
)

(define (game game-id-723) (:domain medium-objects-room-v1)
(:setup
  (forall (?h - ball)
    (and
      (and
        (game-optional
          (and
            (not
              (exists (?o - (either floor bridge_block dodgeball laptop cube_block pink alarm_clock))
                (in_motion ?h)
              )
            )
            (and
              (or
                (on ?h room_center)
                (< (building_size ?h) (distance ?h ?h))
              )
              (and
                (and
                  (in_motion ?h)
                  (not
                    (and
                      (and
                        (not
                          (in_motion ?h)
                        )
                        (not
                          (not
                            (and
                              (game_over )
                              (game_over )
                            )
                          )
                        )
                        (and
                          (< (distance_side pink ?h ?h) 1)
                          (agent_crouches )
                          (agent_holds ?h)
                        )
                      )
                      (and
                        (agent_holds agent)
                        (and
                          (in_motion desk)
                          (in ?h ?h)
                          (not
                            (on room_center ?h)
                          )
                          (agent_holds ?h)
                        )
                      )
                      (< (distance ?h ?h) (distance agent ?h))
                    )
                  )
                  (equal_x_position ?h ?h)
                )
                (in_motion ?h)
              )
            )
          )
        )
        (exists (?d - (either mug cube_block wall))
          (forall (?b - shelf)
            (game-optional
              (agent_holds ?h)
            )
          )
        )
        (forall (?t1 - ball)
          (forall (?s - hexagonal_bin)
            (and
              (game-conserved
                (not
                  (not
                    (not
                      (and
                        (on ?t1 ?t1)
                        (in_motion ?h)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?p - block)
        (at-end
          (and
            (forall (?c - desktop)
              (and
                (and
                  (same_color ?p ?p)
                  (not
                    (same_color ?p ?c)
                  )
                  (agent_holds ?p)
                )
                (and
                  (agent_holds ?p)
                  (agent_holds ?c)
                )
              )
            )
            (not
              (and
                (on ?p drawer)
                (on ?p ?p)
                (exists (?o ?c1 - teddy_bear)
                  (not
                    (not
                      (adjacent ?p ?o)
                    )
                  )
                )
                (agent_holds ?p)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count throwBallToBin:blue_dodgeball:cylindrical_block) (+ 1 (count throwBallToBin:red) )
    )
    (>= (* (count throwBallToBin:dodgeball:yellow_cube_block) 30 )
      (* (count throwBallToBin:book) (* (count-once-per-objects throwBallToBin:beachball) (count-once-per-objects throwBallToBin:green) )
      )
    )
  )
)
(:scoring
  (count throwBallToBin:green)
)
)

(define (game game-id-724) (:domain medium-objects-room-v1)
(:setup
  (forall (?b - hexagonal_bin ?h - beachball)
    (game-conserved
      (and
        (not
          (and
            (forall (?b10 - hexagonal_bin)
              (< (distance ?b10 ?h) 1)
            )
            (and
              (not
                (in_motion ?h)
              )
              (and
                (< 9 4)
                (on ?h ?h)
              )
            )
          )
        )
        (in_motion ?h)
      )
    )
  )
)
(:constraints
  (and
    (preference itemsHidingScreens
      (exists (?l1 - hexagonal_bin ?o1 - doggie_bed)
        (then
          (once (in ?o1 ?o1) )
          (hold-while (in_motion ?o1) (and (and (agent_holds ?o1) (and (agent_holds ?o1) (in ?o1 ?o1) ) ) (agent_holds ?o1) (not (adjacent ?o1 bed) ) ) )
          (hold-for 1 (in_motion ?o1) )
          (hold (on ?o1 door) )
        )
      )
    )
  )
)
(:terminal
  (= 3 10 )
)
(:scoring
  (count itemsHidingScreens:book)
)
)

(define (game game-id-725) (:domain few-objects-room-v1)
(:setup
  (exists (?h - ball)
    (game-conserved
      (and
        (not
          (adjacent ?h ?h)
        )
        (= (distance bed ?h) 1)
      )
    )
  )
)
(:constraints
  (and
    (preference pyramidBlockAtopTowerAtEnd
      (exists (?w1 - hexagonal_bin)
        (then
          (once (in ?w1 ?w1) )
          (hold (not (agent_holds ?w1) ) )
          (once (= (distance ?w1 agent) 1) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 5 (count pyramidBlockAtopTowerAtEnd:basketball) )
    3
  )
)
(:scoring
  (+ (>= (count-once-per-objects pyramidBlockAtopTowerAtEnd:dodgeball) 1 )
  )
)
)

(define (game game-id-726) (:domain medium-objects-room-v1)
(:setup
  (exists (?l2 - cube_block)
    (exists (?o2 - (either cellphone bridge_block) ?db - (either ball golfball laptop hexagonal_bin) ?c2 - (either cylindrical_block tall_cylindrical_block))
      (exists (?b1 - dodgeball)
        (exists (?l - yellow_cube_block)
          (and
            (game-optional
              (not
                (or
                  (in ?c2 ?l)
                  (agent_holds ?l)
                )
              )
            )
            (forall (?g - game_object)
              (game-conserved
                (in_motion ?b1)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwMovesBeachballWithoutKnockingTeddy
      (exists (?o - pillow)
        (then
          (once (agent_holds ?o) )
          (once (not (in_motion ?o) ) )
          (once (faces rug ?o) )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (* 10 (* (+ 2 (+ (* 2 (count-once throwMovesBeachballWithoutKnockingTeddy:book:dodgeball) )
            (+ (+ (* (count-once throwMovesBeachballWithoutKnockingTeddy) 10 )
                (* 3 (count-longest throwMovesBeachballWithoutKnockingTeddy:dodgeball) )
                (count-overlapping throwMovesBeachballWithoutKnockingTeddy:purple)
              )
              (* (* (* (* (+ 7 (count throwMovesBeachballWithoutKnockingTeddy:triangle_block) )
                      (* 5 (- (count-once throwMovesBeachballWithoutKnockingTeddy) )
                      )
                      16
                    )
                    0
                  )
                  (count throwMovesBeachballWithoutKnockingTeddy:blue_dodgeball)
                )
                (count-once-per-objects throwMovesBeachballWithoutKnockingTeddy)
                (- (+ (count-same-positions throwMovesBeachballWithoutKnockingTeddy:blue_dodgeball:orange) (count throwMovesBeachballWithoutKnockingTeddy:yellow) )
                )
                (total-time)
                (or
                  (- (count throwMovesBeachballWithoutKnockingTeddy:beachball:red:golfball) )
                  (count throwMovesBeachballWithoutKnockingTeddy:yellow:dodgeball)
                  (+ 8 1 )
                )
                2
              )
            )
          )
          5
        )
      )
    )
  )
)
(:scoring
  (count-once-per-external-objects throwMovesBeachballWithoutKnockingTeddy:cylindrical_block:book)
)
)

(define (game game-id-727) (:domain few-objects-room-v1)
(:setup
  (forall (?ob - (either yellow_cube_block curved_wooden_ramp) ?h - hexagonal_bin)
    (game-conserved
      (exists (?b4 - game_object)
        (agent_holds ?b4)
      )
    )
  )
)
(:constraints
  (and
    (preference throwToDrawerOrBin
      (exists (?c1 - (either golfball laptop) ?c - hexagonal_bin)
        (then
          (once (and (and (and (in agent ?c) (on ?c ?c) ) (and (same_color ?c ?c) (not (in_motion ?c) ) ) ) (exists (?b - game_object ?b7 - (either triangle_block dodgeball pyramid_block)) (agent_holds ?c) ) ) )
          (once (on ?c ?c) )
          (hold (on ?c ?c) )
        )
      )
    )
    (forall (?o - doggie_bed ?g ?w1 - dodgeball ?h - chair)
      (and
        (preference thrownBallHitsBlock
          (exists (?d - dodgeball ?o5 - (either laptop teddy_bear ball))
            (at-end
              (agent_holds ?o5)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 4 (count-overlapping thrownBallHitsBlock:doggie_bed) )
)
(:scoring
  (external-forall-minimize
    (count-once-per-objects thrownBallHitsBlock:doggie_bed:dodgeball)
  )
)
)

(define (game game-id-728) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds tan)
  )
)
(:constraints
  (and
    (preference baseBlockInTowerAtEnd
      (exists (?b5 - (either desktop hexagonal_bin blue_cube_block) ?h - ball)
        (then
          (once (in_motion ?h) )
          (hold (not (agent_holds ?h) ) )
          (hold (or (in ?h room_center) (in_motion ?h) ) )
        )
      )
    )
    (preference throwFromEdgeOfRug
      (exists (?h - cube_block)
        (then
          (hold (agent_holds ?h) )
          (hold (agent_holds ?h) )
          (hold-while (adjacent ?h ?h) (< 1 (distance_side ?h ?h ?h)) (agent_holds ?h) (on ?h agent) )
        )
      )
    )
  )
)
(:terminal
  (>= (count throwFromEdgeOfRug:purple) 2 )
)
(:scoring
  (count-once-per-objects throwFromEdgeOfRug:dodgeball:basketball)
)
)

(define (game game-id-729) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?t - dodgeball)
      (game-optional
        (in_motion ?t)
      )
    )
  )
)
(:constraints
  (and
    (preference cubeBlockFromBedToShelf
      (exists (?t - game_object)
        (then
          (hold (not (forall (?s - triangular_ramp ?b - game_object) (not (touch ?b ?b) ) ) ) )
          (once (and (and (agent_holds front) (not (broken ?t) ) ) (and (opposite ?t agent) (not (not (not (agent_holds agent) ) ) ) ) ) )
          (hold-while (is_setup_object agent) (toggled_on pillow) (exists (?p - dodgeball) (object_orientation ?t ?t) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (* (+ 3 (+ (count cubeBlockFromBedToShelf:rug:dodgeball:basketball) 180 )
        )
        (total-time)
      )
      (= 8 (< (+ (+ (count cubeBlockFromBedToShelf:green:triangle_block) (+ (/ (- (* (count-once-per-objects cubeBlockFromBedToShelf:pink_dodgeball) (* (count-once-per-objects cubeBlockFromBedToShelf:dodgeball) 6 )
                      (count cubeBlockFromBedToShelf:dodgeball)
                      (total-score)
                      (count cubeBlockFromBedToShelf:bed)
                    )
                  )
                  (count-once-per-objects cubeBlockFromBedToShelf:beachball:book)
                )
                (* (* (count cubeBlockFromBedToShelf:blue_dodgeball:red) (count-unique-positions cubeBlockFromBedToShelf:beachball) )
                  (count-once cubeBlockFromBedToShelf:doggie_bed:yellow)
                )
              )
            )
            (or
              (* (count cubeBlockFromBedToShelf:beachball) (count-once cubeBlockFromBedToShelf:book) )
              (- 20 )
            )
          )
          (count cubeBlockFromBedToShelf:beachball)
        )
      )
    )
    0
  )
)
(:scoring
  (* (count cubeBlockFromBedToShelf:beachball) (count cubeBlockFromBedToShelf:basketball) )
)
)

(define (game game-id-730) (:domain medium-objects-room-v1)
(:setup
  (forall (?b - game_object)
    (game-conserved
      (< (distance desk ?b) (distance ?b ?b))
    )
  )
)
(:constraints
  (and
    (preference throwKnocksOverBear
      (exists (?c - (either floor red) ?c4 - (either cellphone yellow_cube_block) ?l1 - wall ?b - hexagonal_bin)
        (then
          (hold (not (agent_holds ?b) ) )
          (once (not (in ?b ?b) ) )
          (once (in_motion ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (external-forall-maximize (+ (* (<= (count-once-per-objects throwKnocksOverBear:yellow_pyramid_block) (* 15 (external-forall-maximize (count throwKnocksOverBear:basketball) ) (/ (count-once-per-objects throwKnocksOverBear:triangle_block) 10 ) )
          )
          (+ (count throwKnocksOverBear:alarm_clock) (= (+ (total-time) (count-once throwKnocksOverBear) 1 )
              (+ (+ (count throwKnocksOverBear:book:basketball) (count throwKnocksOverBear:green) )
                (/
                  (* (count throwKnocksOverBear:yellow_cube_block:yellow) 2 )
                  (count throwKnocksOverBear:basketball:pink_dodgeball)
                )
              )
            )
          )
          (count throwKnocksOverBear:basketball)
          (count-once-per-objects throwKnocksOverBear:dodgeball)
          (* (count-once throwKnocksOverBear:book) (count-once-per-external-objects throwKnocksOverBear:pink) )
          (* (* 5 (count throwKnocksOverBear:golfball) )
            (count throwKnocksOverBear:dodgeball)
          )
        )
        60
      )
    )
  )
)
(:scoring
  7
)
)

(define (game game-id-731) (:domain medium-objects-room-v1)
(:setup
  (forall (?h - (either pyramid_block tall_cylindrical_block) ?c - ball)
    (game-conserved
      (and
        (in_motion ?c)
        (not
          (and
            (not
              (< (distance ?c room_center) (distance_side ?c ?c ?c))
            )
            (and
              (exists (?o - block)
                (agent_crouches )
              )
              (and
                (not
                  (in_motion ?c)
                )
                (or
                  (and
                    (not
                      (in agent ?c)
                    )
                    (in_motion ?c)
                  )
                  (in_motion ?c)
                )
              )
            )
          )
        )
        (agent_holds ?c)
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - (either cellphone golfball))
      (and
        (preference throwBallFromOtherBallToBin
          (exists (?o - (either pencil yellow_cube_block) ?d - wall)
            (then
              (once (on ?h front) )
              (once (in_motion room_center) )
              (hold (in_motion ?d) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (= (count throwBallFromOtherBallToBin:wall) (+ (count-once-per-objects throwBallFromOtherBallToBin:dodgeball) (* 25 (+ (- (count-shortest throwBallFromOtherBallToBin:yellow:red) )
          4
        )
      )
    )
  )
)
(:scoring
  (>= 3 (count throwBallFromOtherBallToBin:beachball) )
)
)

(define (game game-id-732) (:domain medium-objects-room-v1)
(:setup
  (exists (?bl - doggie_bed)
    (exists (?t2 - dodgeball)
      (and
        (and
          (exists (?l4 - doggie_bed)
            (and
              (and
                (exists (?s - dodgeball)
                  (exists (?p3 - dodgeball)
                    (game-conserved
                      (not
                        (touch ?bl ?bl)
                      )
                    )
                  )
                )
              )
            )
          )
        )
        (game-conserved
          (agent_holds ?bl)
        )
        (game-conserved
          (object_orientation ?t2 ?bl)
        )
        (not
          (game-conserved
            (agent_holds ?bl)
          )
        )
        (forall (?c - (either blue_cube_block doggie_bed))
          (exists (?bl - hexagonal_bin)
            (forall (?l - triangular_ramp)
              (game-conserved
                (adjacent ?l bed)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - building)
      (and
        (preference throwBallToBin
          (exists (?b - (either hexagonal_bin rug))
            (then
              (once (on ?b ?b) )
            )
          )
        )
      )
    )
    (preference gameBlockFound
      (exists (?o - doggie_bed)
        (at-end
          (not
            (agent_holds ?o)
          )
        )
      )
    )
    (preference greenObjectMovedToRoomCenter
      (exists (?d ?w2 - cube_block)
        (then
          (once (agent_holds ?w2) )
          (hold (in_motion agent) )
          (once-measure (not (equal_x_position bed ?d) ) (distance_side ?w2 ?d ?w2) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (total-score) (count-once-per-objects greenObjectMovedToRoomCenter:basketball) )
  )
)
(:scoring
  (count gameBlockFound:pink_dodgeball)
)
)

(define (game game-id-733) (:domain medium-objects-room-v1)
(:setup
  (forall (?b - hexagonal_bin)
    (and
      (game-conserved
        (agent_holds ?b)
      )
      (and
        (exists (?r1 - flat_block ?ob - cylindrical_block)
          (exists (?c - (either dodgeball ball))
            (exists (?b6 - block ?h - drawer)
              (and
                (game-optional
                  (toggled_on ?h)
                )
              )
            )
          )
        )
        (game-optional
          (>= (distance ?b bed) 1)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c2 - cube_block ?w - dodgeball)
      (and
        (preference golfballInBinFromPillow
          (exists (?o4 - shelf)
            (at-end
              (in_motion ?w)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (= (count-once-per-objects golfballInBinFromPillow:basketball) (count golfballInBinFromPillow:cube_block) )
)
(:scoring
  (> (count-once golfballInBinFromPillow:basketball) 7 )
)
)

(define (game game-id-734) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?h - ball)
      (exists (?g - (either dodgeball book))
        (or
          (game-conserved
            (or
              (in_motion ?h)
              (same_color ?h ?h)
              (same_color ?h room_center)
            )
          )
          (exists (?p3 - dodgeball ?b - shelf)
            (game-optional
              (adjacent door ?g)
            )
          )
        )
      )
    )
    (forall (?b8 - cube_block)
      (forall (?p - dodgeball)
        (forall (?b5 - triangular_ramp)
          (game-conserved
            (and
              (and
                (not
                  (not
                    (not
                      (agent_holds ?b8)
                    )
                  )
                )
                (not
                  (in_motion ?b8)
                )
              )
              (not
                (or
                  (agent_holds ?b8)
                  (and
                    (and
                      (agent_holds ?b8)
                      (not
                        (not
                          (agent_holds ?b5)
                        )
                      )
                    )
                    (not
                      (in_motion ?b5)
                    )
                    (equal_x_position ?b8 ?b5)
                    (on ?b8 ?p)
                  )
                )
              )
            )
          )
        )
      )
    )
    (game-conserved
      (in_motion bed)
    )
  )
)
(:constraints
  (and
    (forall (?d - triangular_ramp ?g - hexagonal_bin)
      (and
        (preference cubeBlockInBuilding
          (exists (?c - block ?s - (either chair cylindrical_block))
            (at-end
              (in_motion ?s)
            )
          )
        )
        (preference dodgeballAndBasketballInBin
          (exists (?c ?s - hexagonal_bin)
            (at-end
              (and
                (in_motion upright)
                (in_motion ?g)
              )
            )
          )
        )
      )
    )
    (forall (?l - cube_block)
      (and
        (preference greenObjectMovedToRoomCenter
          (then
            (hold (in_motion ?l) )
            (hold-to-end (not (in_motion ?l) ) )
            (hold (agent_holds top_drawer) )
          )
        )
      )
    )
    (preference throwAttempt
      (exists (?c - pyramid_block)
        (then
          (once (adjacent ?c ?c) )
          (once (agent_holds ?c) )
          (hold (on ?c ?c) )
          (once (on ?c ?c) )
          (once (in ?c ?c) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (- (* (not (count-total throwAttempt:basketball) ) 4 )
      )
      2
    )
    (and
      (>= (* (count-once-per-objects dodgeballAndBasketballInBin:pink:basketball:dodgeball) )
        (count greenObjectMovedToRoomCenter:orange)
      )
      (or
        (>= 40 (count greenObjectMovedToRoomCenter:beachball) )
        (< 8 (count dodgeballAndBasketballInBin:pink_dodgeball) )
      )
    )
    (> (count throwAttempt:red_pyramid_block:basketball) (count-unique-positions greenObjectMovedToRoomCenter:doggie_bed) )
  )
)
(:scoring
  (- (count greenObjectMovedToRoomCenter:dodgeball) )
)
)

(define (game game-id-735) (:domain medium-objects-room-v1)
(:setup
  (exists (?h - pyramid_block)
    (exists (?h - cube_block ?p - cube_block)
      (and
        (exists (?c4 - hexagonal_bin)
          (exists (?b - chair)
            (game-conserved
              (and
                (in ?h ?h)
                (not
                  (and
                    (not
                      (agent_holds ?p)
                    )
                    (or
                      (in ?c4 ?b)
                      (in_motion ?b)
                    )
                    (in room_center room_center)
                  )
                )
                (in_motion ?b)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockOnBlockInTowerAtEnd
      (exists (?b - building)
        (then
          (once (in ?b ?b) )
          (once (agent_holds ?b) )
          (once (agent_holds ?b) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count blockOnBlockInTowerAtEnd:golfball) (* (count blockOnBlockInTowerAtEnd:hexagonal_bin:green) (* (count-once-per-objects blockOnBlockInTowerAtEnd:beachball) (* (external-forall-maximize 3 ) (* (* 100 (* (count-once-per-objects blockOnBlockInTowerAtEnd:side_table) (* (count-once-per-objects blockOnBlockInTowerAtEnd:beachball:golfball) 2 )
                )
              )
              (* (count blockOnBlockInTowerAtEnd:beachball:dodgeball) 3 )
            )
          )
        )
      )
    )
    (and
      (not
        (>= (count-once-per-objects blockOnBlockInTowerAtEnd:golfball) (+ (count-once-per-external-objects blockOnBlockInTowerAtEnd:golfball) (* (count blockOnBlockInTowerAtEnd:cube_block) (* (* (= (+ (<= (total-score) (- (count-once-per-objects blockOnBlockInTowerAtEnd:beachball) )
                      )
                      (* (count blockOnBlockInTowerAtEnd:yellow:dodgeball) (count blockOnBlockInTowerAtEnd:green:green) )
                      (count blockOnBlockInTowerAtEnd:yellow:red)
                    )
                    10
                  )
                  10
                )
                3
                4
                (* 10 (* (count blockOnBlockInTowerAtEnd:triangle_block:dodgeball) (and (* (+ 3 (count-once blockOnBlockInTowerAtEnd:basketball) )
                        (count blockOnBlockInTowerAtEnd:yellow)
                      )
                    )
                  )
                  (count-once-per-objects blockOnBlockInTowerAtEnd:blue)
                  5
                  (* (count-once-per-objects blockOnBlockInTowerAtEnd:tan:beachball:basketball) 8 )
                  (count-overlapping blockOnBlockInTowerAtEnd:dodgeball)
                )
              )
            )
            (count blockOnBlockInTowerAtEnd:dodgeball)
          )
        )
      )
      (or
        (>= (- (count blockOnBlockInTowerAtEnd:orange) )
          (* (* (count-once-per-objects blockOnBlockInTowerAtEnd) (count-once-per-objects blockOnBlockInTowerAtEnd:blue_dodgeball) )
            (count-once-per-objects blockOnBlockInTowerAtEnd:purple)
          )
        )
        (>= (+ 180 (+ (count blockOnBlockInTowerAtEnd:golfball:green) (* 8 (count-once-per-objects blockOnBlockInTowerAtEnd:basketball) )
            )
          )
          (count blockOnBlockInTowerAtEnd:dodgeball)
        )
      )
      (and
        (>= (/ (- (* (* (total-score) 5 )
                (count blockOnBlockInTowerAtEnd:dodgeball:yellow:basketball)
              )
            )
            (count blockOnBlockInTowerAtEnd:rug)
          )
          4
        )
        (>= (+ (total-score) (+ (count-once-per-objects blockOnBlockInTowerAtEnd:hexagonal_bin) (count-once-per-objects blockOnBlockInTowerAtEnd:pink) )
            (count blockOnBlockInTowerAtEnd:book)
            (total-time)
            (* (count-once-per-objects blockOnBlockInTowerAtEnd:basketball) (count-once blockOnBlockInTowerAtEnd:basketball) )
            5
            6
            (* (count-longest blockOnBlockInTowerAtEnd:beachball) (= (count blockOnBlockInTowerAtEnd:red) (* (* (* 5 2 (- (count blockOnBlockInTowerAtEnd:pink_dodgeball:yellow:pink) )
                      (count blockOnBlockInTowerAtEnd:hexagonal_bin:doggie_bed:dodgeball)
                      (count blockOnBlockInTowerAtEnd:beachball:orange)
                      (count-once-per-external-objects blockOnBlockInTowerAtEnd:red_pyramid_block:basketball)
                    )
                    5
                    (total-time)
                    (count blockOnBlockInTowerAtEnd:dodgeball)
                    0.5
                    3
                  )
                  (count blockOnBlockInTowerAtEnd:brown)
                  (count blockOnBlockInTowerAtEnd:dodgeball)
                  7
                  3
                  (* 7 7 )
                  (count-once blockOnBlockInTowerAtEnd:red:pink:white)
                )
                (+ 100 (* (count-measure blockOnBlockInTowerAtEnd:dodgeball:basketball) (external-forall-maximize 100 ) )
                )
              )
              4
            )
            (* 4 (+ 3 3 )
            )
            (* 15 (- 5 )
              (not
                (count blockOnBlockInTowerAtEnd:green:cube_block:pyramid_block)
              )
            )
            (count-once blockOnBlockInTowerAtEnd:hexagonal_bin)
            (count blockOnBlockInTowerAtEnd:red)
          )
          (external-forall-maximize
            2
          )
        )
      )
    )
  )
)
(:scoring
  4
)
)

(define (game game-id-736) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?d - ball ?d - cube_block)
      (game-conserved
        (agent_holds ?d)
      )
    )
    (and
      (exists (?h - cube_block ?r - ball)
        (and
          (exists (?c - cube_block)
            (and
              (exists (?o - dodgeball ?b10 - dodgeball)
                (exists (?d - chair)
                  (game-conserved
                    (rug_color_under ?b10 ?c)
                  )
                )
              )
            )
          )
          (exists (?h - (either cellphone pillow) ?w1 ?d ?h - cube_block)
            (and
              (game-conserved
                (in_motion ?w1)
              )
              (game-conserved
                (and
                  (in_motion ?h)
                  (and
                    (not
                      (and
                        (and
                          (adjacent_side rug agent rug bed)
                          (in_motion ?r)
                        )
                        (and
                          (agent_holds ?d)
                          (not
                            (is_setup_object ?w1)
                          )
                          (game_over )
                        )
                      )
                    )
                    (between ?h agent ?w1)
                  )
                  (in_motion ?d)
                )
              )
            )
          )
        )
      )
    )
    (forall (?o3 - red_dodgeball)
      (exists (?h - ball)
        (game-optional
          (not
            (above rug ?o3)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference thrownBallReachesEnd
      (exists (?o ?b3 ?c ?t ?t2 ?d ?h ?d ?b3 ?g - ball)
        (at-end
          (between ?b3 ?t ?t)
        )
      )
    )
    (preference throwAttemptFromBehindBlock
      (exists (?l - hexagonal_bin)
        (at-end
          (on rug ?l)
        )
      )
    )
  )
)
(:terminal
  (or
    (<= (* (external-forall-maximize (count-once-per-objects thrownBallReachesEnd:red_pyramid_block:hexagonal_bin) ) (* 15 5 5 (* (* 7 2 )
            1
            (* 3 -10 )
            (count throwAttemptFromBehindBlock:hexagonal_bin)
          )
          7
          (count thrownBallReachesEnd:blue_dodgeball)
        )
      )
      (external-forall-maximize
        (count throwAttemptFromBehindBlock:red)
      )
    )
    (or
      (>= 5 (total-time) )
      (>= (count-once thrownBallReachesEnd:golfball:doggie_bed) (not (* 4 (external-forall-maximize 15 ) )
        )
      )
    )
  )
)
(:scoring
  3
)
)

(define (game game-id-737) (:domain medium-objects-room-v1)
(:setup
  (exists (?d - chair)
    (exists (?p2 ?b9 ?b9 ?c ?s ?r ?p3 ?h ?s ?h - hexagonal_bin ?ob - pyramid_block)
      (forall (?d - teddy_bear ?h - doggie_bed)
        (and
          (game-optional
            (agent_holds ?h)
          )
          (game-conserved
            (in ?h ?ob)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockKnockedFromBuildingInBin
      (exists (?g - hexagonal_bin)
        (then
          (once (faces floor desk) )
          (once (and (agent_holds ?g) (adjacent_side ?g ?g ?g) (in_motion ?g) ) )
          (hold (and (adjacent_side ?g bed ?g) (adjacent_side ?g upside_down agent ?g) ) )
        )
      )
    )
    (preference blocksInPlace
      (exists (?bl - (either doggie_bed bridge_block))
        (then
          (hold (and (object_orientation ?bl ?bl) (agent_holds ?bl) ) )
          (hold-while (< (distance ?bl ?bl) 1) (on ?bl agent) (adjacent ?bl ?bl) (and (and (not (and (in ?bl ?bl) (open ?bl) ) ) (not (toggled_on ?bl) ) ) (and (in_motion ?bl) (and (in ?bl ?bl) (in pink ?bl) ) ) ) )
          (hold-while (and (not (faces ?bl ?bl) ) ) (touch blue ?bl) (in ?bl ?bl) )
          (forall-sequence (?o2 - doggie_bed)
            (then
              (once (in_motion agent) )
              (once (broken ?o2) )
              (once (not (in_motion room_center) ) )
              (once (and (and (above ?o2 ?o2) ) (and (not (not (and (not (not (and (not (on ?o2 ?bl) ) ) ) ) (in_motion ?bl) ) ) ) (touch ?o2 ?bl) ) (agent_holds ?o2) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (+ (count blockKnockedFromBuildingInBin:hexagonal_bin) (count-total blockKnockedFromBuildingInBin:purple:beachball) )
      (* (count-once blockKnockedFromBuildingInBin:hexagonal_bin) 2 )
    )
    3
  )
)
(:scoring
  (count blocksInPlace:pink_dodgeball)
)
)

(define (game game-id-738) (:domain many-objects-room-v1)
(:setup
  (forall (?b1 - game_object)
    (forall (?h - (either cube_block doggie_bed) ?r2 - hexagonal_bin)
      (game-optional
        (not
          (and
            (on ?b1 ?r2)
            (in_motion ?r2)
            (not
              (< (distance ?r2 ?r2) 1)
            )
            (in_motion ?b1)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToBinFromOppositeWall
      (exists (?w2 - hexagonal_bin ?l2 - pillow)
        (then
          (hold (in_motion ?l2) )
          (once (in ?l2 ?l2) )
          (once (on ?l2 ?l2) )
        )
      )
    )
    (preference blockFromRugToDesk
      (exists (?l - dodgeball)
        (at-end
          (same_color ?l ?l)
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (or
        (>= (> (count-once-per-objects blockFromRugToDesk:beachball) (count-once-per-objects throwToBinFromOppositeWall:brown) )
          1
        )
        (>= (count blockFromRugToDesk:blue_cube_block) (* 30 (count-once-per-objects blockFromRugToDesk:blue:red:orange) )
        )
      )
    )
    (> (count blockFromRugToDesk:orange:hexagonal_bin:basketball) (- 8 )
    )
  )
)
(:scoring
  (count throwToBinFromOppositeWall:dodgeball)
)
)

(define (game game-id-739) (:domain many-objects-room-v1)
(:setup
  (exists (?r2 - pyramid_block ?s - block)
    (and
      (and
        (forall (?h - cube_block ?x - (either doggie_bed cellphone laptop))
          (exists (?b4 - hexagonal_bin)
            (game-optional
              (not
                (on ?b4 ?b4)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b3 - hexagonal_bin)
      (and
        (preference throwAttempt
          (exists (?c2 - (either key_chain key_chain))
            (then
              (once (< 7 1) )
              (hold (> 1 1) )
              (once (in ?c2 ?b3) )
              (once (in_motion ?b3) )
            )
          )
        )
      )
    )
    (preference ballThrownIntoTarget
      (exists (?r2 - dodgeball)
        (then
          (hold-to-end (opposite ?r2 ?r2) )
          (hold (agent_holds ?r2) )
          (once (and (on agent ?r2) (is_setup_object bed) ) )
          (hold (not (not (on ?r2 ?r2) ) ) )
          (once (in_motion ?r2) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-same-positions throwAttempt:golfball) (* (external-forall-minimize (count-measure throwAttempt:dodgeball) ) (count throwAttempt:block) )
    )
  )
)
(:scoring
  (-
    (count-increasing-measure ballThrownIntoTarget:basketball)
    5
  )
)
)

(define (game game-id-740) (:domain medium-objects-room-v1)
(:setup
  (exists (?d - hexagonal_bin ?p ?r - hexagonal_bin)
    (forall (?l4 - pyramid_block ?b - doggie_bed)
      (exists (?tb - doggie_bed)
        (and
          (game-conserved
            (and
              (in_motion ?tb)
              (and
                (and
                  (agent_holds ?tb)
                  (and
                    (same_type ?b ?b)
                    (agent_holds ?b)
                  )
                  (in_motion north_wall)
                )
                (rug_color_under ?b ?tb)
              )
              (in_motion ?b)
              (game_start )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballHitsBin
      (exists (?o - (either pen golfball tall_cylindrical_block))
        (then
          (hold (not (and (not (rug_color_under ?o ?o) ) (not (in_motion ?o) ) ) ) )
          (once (exists (?h - curved_wooden_ramp) (and (above ?o ?o) (on desk ?o) ) ) )
          (once (on ?o rug) )
        )
      )
    )
    (preference ballThrownToWallToAgent
      (exists (?o - hexagonal_bin)
        (then
          (once (agent_holds ?o) )
          (once (agent_holds ?o) )
          (hold (adjacent ?o ?o) )
        )
      )
    )
  )
)
(:terminal
  (>= (count dodgeballHitsBin:pink:top_drawer) (+ 5 4 )
  )
)
(:scoring
  (count ballThrownToWallToAgent:side_table)
)
)

(define (game game-id-741) (:domain few-objects-room-v1)
(:setup
  (forall (?w - doggie_bed ?o - (either dodgeball chair bridge_block dodgeball))
    (exists (?s - dodgeball ?c - hexagonal_bin)
      (game-conserved
        (in ?c ?c)
      )
    )
  )
)
(:constraints
  (and
    (preference redDodgeballThrownToBin
      (exists (?d - cube_block ?d ?ob - doggie_bed)
        (at-end
          (in ?d ?ob)
        )
      )
    )
    (preference dodgeballFromBlockToBin
      (exists (?c - game_object ?c1 - hexagonal_bin)
        (then
          (once (and (on ?c1 agent) (on ?c1 ?c1) ) )
        )
      )
    )
    (preference ballInOrOnBin
      (exists (?w2 - cube_block)
        (at-end
          (< (distance rug ?w2) (distance ?w2 ?w2))
        )
      )
    )
  )
)
(:terminal
  (= (total-score) (count-overlapping ballInOrOnBin:green) )
)
(:scoring
  (not
    (count-once-per-objects ballInOrOnBin:beachball)
  )
)
)

(define (game game-id-742) (:domain few-objects-room-v1)
(:setup
  (exists (?t - teddy_bear)
    (game-optional
      (and
        (opposite ?t ?t)
        (above ?t rug)
      )
    )
  )
)
(:constraints
  (and
    (preference watchOnShelf
      (exists (?h - sliding_door ?p1 - hexagonal_bin ?g - cube_block)
        (then
          (hold (agent_holds ?g) )
          (once (agent_holds ?g) )
          (hold (in ?g floor) )
        )
      )
    )
    (forall (?b1 - doggie_bed)
      (and
        (preference ballOnBedAtEnd
          (exists (?b - dodgeball)
            (then
              (hold (agent_holds ?b1) )
              (once (not (in_motion ?b1) ) )
              (once (in_motion desk) )
            )
          )
        )
      )
    )
    (preference otherObjectsOnDeskShelf
      (exists (?c4 ?h - wall)
        (then
          (hold-to-end (and (not (and (not (not (<= (distance_side ?c4 ?h ?c4) 5) ) ) (on ?h ?c4) (touch ?h ?h) ) ) (agent_holds bed) ) )
          (hold-while (= (distance_side ?h ?c4 ?c4) 3) (object_orientation ?c4 ?h) (not (in_motion ?c4) ) )
          (once (on ?h ?c4) )
        )
      )
    )
  )
)
(:terminal
  (= 15 10 )
)
(:scoring
  3
)
)

(define (game game-id-743) (:domain few-objects-room-v1)
(:setup
  (forall (?l - doggie_bed ?r - hexagonal_bin)
    (exists (?b9 - cube_block)
      (game-conserved
        (agent_holds ?r)
      )
    )
  )
)
(:constraints
  (and
    (preference failedThrowAttempt
      (exists (?l - (either rug yellow) ?b - chair)
        (at-end
          (not
            (agent_holds side_table)
          )
        )
      )
    )
  )
)
(:terminal
  (>= 4 2 )
)
(:scoring
  180
)
)

(define (game game-id-744) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (exists (?o3 - chair)
        (exists (?c4 - dodgeball ?h - chair)
          (game-conserved
            (not
              (exists (?h - curved_wooden_ramp ?c3 - hexagonal_bin)
                (toggled_on agent)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownOntoTarget
      (exists (?p3 - red_pyramid_block)
        (then
          (once (not (in_motion ?p3) ) )
          (hold (in ?p3 agent) )
          (once (object_orientation ?p3 ?p3) )
          (once (adjacent ?p3 ?p3) )
        )
      )
    )
  )
)
(:terminal
  (>= (count ballThrownOntoTarget:dodgeball:yellow:dodgeball) 6 )
)
(:scoring
  1
)
)

(define (game game-id-745) (:domain medium-objects-room-v1)
(:setup
  (forall (?h - (either cd hexagonal_bin) ?h - wall)
    (game-optional
      (in ?h room_center)
    )
  )
)
(:constraints
  (and
    (preference itemsBroken
      (exists (?g - hexagonal_bin)
        (at-end
          (in rug top_drawer)
        )
      )
    )
    (forall (?d - (either pyramid_block alarm_clock book))
      (and
        (preference itemsHidingScreens
          (exists (?b - game_object)
            (then
              (once (agent_holds ?b) )
              (once (in ?b ?b) )
              (once (in room_center ?b) )
            )
          )
        )
        (preference throwObjectToBin
          (exists (?c - ball ?d1 - hexagonal_bin)
            (then
              (once (on ?d1 ?d) )
              (hold (agent_holds ?d) )
              (once (agent_holds ?d) )
            )
          )
        )
        (preference ballNeverThrown
          (exists (?d - golfball)
            (at-end
              (on ?d ?d)
            )
          )
        )
      )
    )
    (preference cubeBlockInBuilding
      (exists (?o - hexagonal_bin)
        (at-end
          (adjacent ?o ?o)
        )
      )
    )
  )
)
(:terminal
  (>= (+ (total-score) 10 5 3 (count-once-per-objects ballNeverThrown:blue_pyramid_block) (count itemsHidingScreens:red) )
    (count itemsHidingScreens:dodgeball)
  )
)
(:scoring
  (> (* (* 10 1 1 )
      (* (count-overlapping ballNeverThrown:purple) (* 5 (not (count ballNeverThrown:basketball) ) 5 (+ (* (count-once-per-objects itemsBroken:orange) (* (* (count throwObjectToBin:red:pink_dodgeball) (* (count itemsHidingScreens:beachball:dodgeball) 5 (count throwObjectToBin:blue_dodgeball) )
                  (* (count itemsBroken:dodgeball) (total-score) (> 3 2 )
                  )
                )
                (count-once-per-objects itemsHidingScreens:blue_dodgeball)
              )
            )
            (* (count ballNeverThrown:golfball:pink) (count cubeBlockInBuilding:pink_dodgeball) )
          )
        )
        (* (count-increasing-measure itemsHidingScreens:pink_dodgeball) (external-forall-maximize (count ballNeverThrown:pink_dodgeball) ) )
      )
    )
    1
  )
)
)

(define (game game-id-746) (:domain many-objects-room-v1)
(:setup
  (exists (?b2 - cylindrical_block)
    (and
      (game-conserved
        (and
          (and
            (game_start )
            (not
              (adjacent ?b2 ?b2)
            )
          )
          (in_motion ?b2)
          (on ?b2 ?b2)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToBin
      (exists (?b - (either desktop book cube_block))
        (at-end
          (adjacent_side ?b ?b ?b)
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count throwToBin:dodgeball) (count-once-per-objects throwToBin:orange) )
    (not
      (>= 7 (count throwToBin:hexagonal_bin:purple) )
    )
  )
)
(:scoring
  5
)
)

(define (game game-id-747) (:domain few-objects-room-v1)
(:setup
  (exists (?h - block)
    (and
      (and
        (game-conserved
          (agent_holds ?h)
        )
        (game-conserved
          (and
            (in_motion ?h)
            (in_motion ?h)
          )
        )
        (game-conserved
          (agent_holds ?h)
        )
      )
      (and
        (exists (?c - sliding_door ?b - red_dodgeball)
          (and
            (and
              (game-optional
                (in_motion ?b)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference itemsHidingScreens
      (exists (?b - flat_block)
        (then
          (hold-while (on ?b ?b) (exists (?r1 ?ob ?b - (either alarm_clock cd) ?o - hexagonal_bin) (in_motion agent) ) (agent_holds ?b) )
          (once (in_motion ?b) )
          (hold (in_motion ?b) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (count itemsHidingScreens:yellow_pyramid_block:pink_dodgeball) 20 )
    )
    (or
      (not
        (>= (count-total itemsHidingScreens:dodgeball) (count-once itemsHidingScreens:doggie_bed) )
      )
      (= (+ (* (* (count-once-per-objects itemsHidingScreens:beachball:dodgeball) 4 )
            6
          )
          (+ 5 (count itemsHidingScreens:dodgeball) )
        )
        (+ (count-once-per-objects itemsHidingScreens:red) 4 )
      )
      (or
        (or
          (or
            (>= (count itemsHidingScreens:dodgeball) (count itemsHidingScreens:beachball) )
            (>= 5 (count-once-per-objects itemsHidingScreens:pink) )
          )
        )
        (or
          (or
            (>= (count-total itemsHidingScreens:basketball) (* (count itemsHidingScreens:dodgeball) 50 )
            )
          )
          (< 5 (count itemsHidingScreens:basketball:beachball) )
        )
      )
    )
  )
)
(:scoring
  1
)
)

(define (game game-id-748) (:domain many-objects-room-v1)
(:setup
  (exists (?t - block)
    (game-conserved
      (in_motion ?t)
    )
  )
)
(:constraints
  (and
    (forall (?b7 - pyramid_block ?c - hexagonal_bin)
      (and
        (preference smallObjectThrownToBed
          (exists (?b ?p1 - hexagonal_bin)
            (at-end
              (or
                (agent_holds desktop)
                (and
                  (and
                    (on desk ?c)
                    (faces ?b ?b)
                    (or
                      (in_motion ?p1)
                      (on south_west_corner ?c)
                    )
                  )
                  (agent_holds ?p1)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* (* (+ (count smallObjectThrownToBed:blue_dodgeball) 1 (count smallObjectThrownToBed:green) (* (count smallObjectThrownToBed:doggie_bed) 15 )
            (external-forall-maximize
              7
            )
          )
          5
        )
        (* (count smallObjectThrownToBed:dodgeball) 2 )
      )
      (/
        (* (count smallObjectThrownToBed:green) (* (* 20 4 )
          )
        )
        2
      )
    )
  )
)
(:scoring
  (count-total smallObjectThrownToBed:green:pink)
)
)

(define (game game-id-749) (:domain many-objects-room-v1)
(:setup
  (exists (?d - hexagonal_bin ?h - ball ?c1 - dodgeball)
    (forall (?b1 - curved_wooden_ramp ?b6 - dodgeball)
      (and
        (and
          (game-conserved
            (not
              (not
                (< 1 0)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference smallObjectThrownToBed
      (exists (?o1 - wall)
        (then
          (once (on ?o1 ?o1) )
          (once (not (agent_holds ?o1) ) )
          (once (in_motion ?o1) )
        )
      )
    )
    (preference ballNeverThrown
      (exists (?h - teddy_bear)
        (then
          (hold (< 1 6) )
        )
      )
    )
    (preference golfballInBinFromPillow
      (exists (?h - cube_block ?o - hexagonal_bin)
        (then
          (once (and (or (on ?o ?o) (in ?o ?o) ) (< 2 1) (and (and (in_motion ?o) (and (in ?o ?o) ) ) (same_type room_center ?o) ) ) )
          (any)
          (hold-to-end (not (not (and (in_motion agent) (and (and (in ?o ?o) (on ?o ?o) ) (exists (?o2 - doggie_bed) (agent_holds agent) ) (and (in_motion ?o) (< (distance ?o upright) 5) ) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count ballNeverThrown:yellow) (+ (count-once-per-objects smallObjectThrownToBed:basketball) (count smallObjectThrownToBed:yellow) )
  )
)
(:scoring
  8
)
)

(define (game game-id-750) (:domain few-objects-room-v1)
(:setup
  (not
    (exists (?h - game_object ?o - hexagonal_bin ?c - block)
      (game-conserved
        (in_motion ?c)
      )
    )
  )
)
(:constraints
  (and
    (preference golfballUnderBridgeWithoutTouchingBlock
      (exists (?h ?b - block ?o5 - game_object ?h - (either bridge_block laptop golfball) ?b2 - building)
        (then
          (any)
          (once (and (agent_holds ?b2) (in_motion ?b2) ) )
          (once (agent_holds agent) )
        )
      )
    )
    (preference throwGolfballToBin
      (exists (?b - hexagonal_bin)
        (at-end
          (touch ?b ?b)
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* (- (+ (* (+ 10 (count-measure throwGolfballToBin:dodgeball) )
              (count throwGolfballToBin:beachball)
            )
            (count-once-per-objects golfballUnderBridgeWithoutTouchingBlock:beachball)
            (count-once-per-objects golfballUnderBridgeWithoutTouchingBlock:dodgeball)
          )
        )
        (count-total golfballUnderBridgeWithoutTouchingBlock:dodgeball:book)
        (count-once-per-objects throwGolfballToBin:dodgeball:brown)
      )
      0
    )
    (>= 5 3 )
  )
)
(:scoring
  (count-once throwGolfballToBin:basketball:red)
)
)

(define (game game-id-751) (:domain few-objects-room-v1)
(:setup
  (forall (?ob - wall ?p - dodgeball)
    (not
      (game-optional
        (in ?p ?p)
      )
    )
  )
)
(:constraints
  (and
    (preference smallObjectThrownToBed
      (exists (?o - teddy_bear ?d ?r ?t2 ?w2 - flat_block)
        (at-end
          (and
            (agent_holds ?w2)
            (agent_holds ?w2)
            (not
              (on ?r desk)
            )
            (< 1 (distance ?w2 ?t2))
          )
        )
      )
    )
    (preference cubeBlockInBuilding
      (exists (?b - triangular_ramp ?d - red_dodgeball ?o4 - hexagonal_bin)
        (then
          (once (or (or (in bed ?o4) (in_motion room_center) ) (not (exists (?b9 - hexagonal_bin) (on ?o4 ?o4) ) ) ) )
          (once (is_setup_object ?o4) )
          (hold (not (and (agent_holds ?o4) (in ?o4 ?o4) ) ) )
        )
      )
    )
    (forall (?h - blinds)
      (and
        (preference ballThrownFromObjectToBin
          (then
            (hold (not (not (and (agent_holds ?h) (and (and (in_motion ?h) (agent_holds desk) ) (not (in_motion ?h) ) ) (agent_holds desk) (in_motion ?h) ) ) ) )
            (hold-while (and (agent_holds ?h) (in_motion ?h) (and (in_motion ?h) (and (agent_holds ?h) (in_motion ?h) ) ) ) (on ?h ?h) )
            (once (< (distance ?h ?h) 10) )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count smallObjectThrownToBed:orange) (* (+ (count-once-per-objects smallObjectThrownToBed:hexagonal_bin) 10 )
      (count smallObjectThrownToBed:dodgeball:pink:golfball)
    )
  )
)
(:scoring
  5
)
)

(define (game game-id-752) (:domain medium-objects-room-v1)
(:setup
  (exists (?w2 - chair)
    (and
      (exists (?h - red_dodgeball)
        (and
          (game-optional
            (in_motion ?w2)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwFromBehindChairsInBin
      (exists (?h - hexagonal_bin)
        (then
          (once (agent_holds ?h) )
          (once (not (equal_x_position ?h desk) ) )
          (once (on ?h desk) )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (+ (count throwFromBehindChairsInBin:red:dodgeball) 0 )
  )
)
(:scoring
  (count throwFromBehindChairsInBin:basketball)
)
)

(define (game game-id-753) (:domain few-objects-room-v1)
(:setup
  (forall (?tb - game_object)
    (forall (?b1 - (either yellow_cube_block golfball) ?g - ball)
      (game-conserved
        (on desk ?tb)
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToDoggieBed
      (exists (?d - (either dodgeball cd))
        (at-end
          (and
            (in bed ?d)
            (in_motion ?d)
          )
        )
      )
    )
  )
)
(:terminal
  (>= 4 (count throwBallToDoggieBed:basketball) )
)
(:scoring
  (external-forall-maximize
    (count-once-per-external-objects throwBallToDoggieBed:pink)
  )
)
)

(define (game game-id-754) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (agent_crouches )
  )
)
(:constraints
  (and
    (preference objectOnBed
      (exists (?c3 - color ?d - beachball)
        (at-end
          (in_motion ?d)
        )
      )
    )
    (preference cubeBlockFromBedToShelf
      (exists (?b - dodgeball ?h - ball)
        (then
          (hold-while (agent_holds ?h) (adjacent ?h ?h) (touch ?h desk) )
          (once (on ?h desk) )
          (once (agent_holds ?h) )
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (= (* (count-once-per-objects cubeBlockFromBedToShelf:cylindrical_block) (= 4 (and 8 (count cubeBlockFromBedToShelf:yellow) 8 ) )
        )
        6
      )
      (>= (count-same-positions cubeBlockFromBedToShelf:beachball:dodgeball) 2 )
    )
  )
)
(:scoring
  (- (* (- (count cubeBlockFromBedToShelf:dodgeball) )
      (* (* (count cubeBlockFromBedToShelf:yellow:dodgeball) 3 )
        (count objectOnBed:red)
      )
    )
  )
)
)

(define (game game-id-755) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (forall (?l1 - wall)
        (and
          (exists (?h - pyramid_block ?b10 - dodgeball)
            (game-optional
              (exists (?d - hexagonal_bin ?c4 - hexagonal_bin)
                (not
                  (exists (?b - block)
                    (not
                      (in ?b ?b10)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference pillowThrownToDoggieBed
      (exists (?p - hexagonal_bin)
        (then
          (once (not (in_motion ?p) ) )
          (once (agent_holds floor) )
          (once (same_color ?p ?p) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-once-per-external-objects pillowThrownToDoggieBed:yellow:hexagonal_bin) (* (count pillowThrownToDoggieBed:dodgeball) 5 )
    )
    (<= (count pillowThrownToDoggieBed:yellow) (count-once-per-objects pillowThrownToDoggieBed:golfball) )
  )
)
(:scoring
  3
)
)

(define (game game-id-756) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds room_center)
  )
)
(:constraints
  (and
    (preference ballKnocksBlockFromRug
      (exists (?o - (either blue_cube_block laptop) ?c2 - golfball)
        (then
          (once (on ?c2 bed) )
          (hold-while (not (and (in_motion ?c2) (exists (?b - game_object) (agent_holds south_west_corner) ) ) ) (agent_holds ?c2) )
          (hold-while (agent_holds ?c2) (in_motion agent) (not (not (< 3 (distance ?c2 ?c2)) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects ballKnocksBlockFromRug:yellow) (count-longest ballKnocksBlockFromRug:green) )
)
(:scoring
  (count-once-per-objects ballKnocksBlockFromRug:orange)
)
)

(define (game game-id-757) (:domain medium-objects-room-v1)
(:setup
  (exists (?g - game_object ?t - hexagonal_bin)
    (game-optional
      (in_motion agent)
    )
  )
)
(:constraints
  (and
    (preference throwAttemptFromBehindBlock
      (exists (?c1 - wall ?w1 - dodgeball)
        (then
          (once (not (and (and (not (in_motion ?w1) ) (and (agent_holds ?w1) (not (not (and (and (and (and (on ?w1 rug) (adjacent ?w1 ?w1) ) (on ?w1 ?w1) ) (agent_holds ?w1) ) (and (in_motion ?w1) ) (touch ?w1 ?w1) ) ) ) ) ) (not (faces ?w1 pink_dodgeball) ) (on ?w1 agent) ) ) )
          (hold (agent_holds ?w1) )
          (once (and (adjacent ?w1 door) (and (agent_holds ?w1) (and (agent_holds agent) (in_motion desk) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (> (<= 1 (count throwAttemptFromBehindBlock:pink_dodgeball) )
      (* 2 (+ (* 40 )
          (count throwAttemptFromBehindBlock:dodgeball)
        )
      )
    )
  )
)
(:scoring
  (total-time)
)
)

(define (game game-id-758) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - (either cellphone blue_cube_block desktop))
      (game-conserved
        (not
          (agent_holds ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference pyramidBlockAtopTowerAtEnd
      (exists (?d - dodgeball)
        (then
          (once (and (and (or (in ?d ?d) (< 2 (distance ?d bed)) ) (not (not (agent_holds ?d) ) ) (in_motion ?d) (agent_holds ?d) (and (in_motion ?d) (on ?d ?d) ) (not (is_setup_object ?d) ) ) (in_motion ?d) ) )
          (hold (adjacent ?d ?d) )
          (once (not (same_color ?d floor) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 6 (+ (* (total-time) (- (count-once-per-objects pyramidBlockAtopTowerAtEnd:dodgeball) )
      )
      (* (count-same-positions pyramidBlockAtopTowerAtEnd:beachball:tan) 4 )
    )
  )
)
(:scoring
  (count pyramidBlockAtopTowerAtEnd:cylindrical_block)
)
)

(define (game game-id-759) (:domain medium-objects-room-v1)
(:setup
  (exists (?b - dodgeball)
    (game-optional
      (in ?b ?b)
    )
  )
)
(:constraints
  (and
    (preference laptopAndBookInPlace
      (exists (?r - dodgeball)
        (then
          (once (not (agent_holds ?r) ) )
          (hold-to-end (agent_holds ?r) )
          (once (in_motion ?r) )
        )
      )
    )
  )
)
(:terminal
  (= 10 (* 15 (- (total-time) )
    )
  )
)
(:scoring
  7
)
)

(define (game game-id-760) (:domain few-objects-room-v1)
(:setup
  (exists (?b - (either cellphone golfball doggie_bed))
    (exists (?w2 - (either dodgeball lamp))
      (and
        (game-conserved
          (not
            (on ?b ?b)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballNeverThrown
      (exists (?b - dodgeball ?b5 - wall)
        (then
          (once (in_motion ?b5) )
          (hold (not (adjacent ?b5 side_table) ) )
          (hold (and (in_motion ?b5) (and (and (agent_crouches ) (in_motion ?b5) ) (agent_holds ?b5) ) ) )
        )
      )
    )
    (forall (?b10 - color)
      (and
        (preference thrownObjectHitsComputer
          (exists (?b6 - dodgeball ?w1 - (either pyramid_block cellphone book alarm_clock book alarm_clock dodgeball) ?d - drawer ?w - shelf)
            (then
              (once (and (adjacent ?w ?w) (is_setup_object agent) ) )
              (once (< (distance ?w rug) (distance ?b10 ?w)) )
              (once (same_type ?w ?w) )
            )
          )
        )
      )
    )
    (preference thrownBallReachesEnd
      (exists (?p1 - pillow)
        (then
          (once (exists (?c - hexagonal_bin) (= (distance ?c ?c) (distance ?c bed) 1 0) ) )
          (hold (on ?p1 desk) )
          (hold (not (open ?p1) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-external-objects ballNeverThrown:green) (* 2 (* 1 (count-once-per-objects thrownBallReachesEnd:basketball) )
      (* 10 (external-forall-maximize (* (count thrownBallReachesEnd:basketball:dodgeball) (+ 2 (count thrownObjectHitsComputer:dodgeball:dodgeball) )
          )
        )
      )
    )
  )
)
(:scoring
  (* (count-once-per-external-objects ballNeverThrown:pink) 8 )
)
)

(define (game game-id-761) (:domain medium-objects-room-v1)
(:setup
  (forall (?h - hexagonal_bin)
    (game-conserved
      (and
        (game_start )
        (on ?h ?h)
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallFromOtherBallToBin
      (exists (?b - color)
        (then
          (once (not (agent_holds ?b) ) )
          (hold-while (in_motion door) (in_motion ?b) (agent_holds ?b) (< 10 (distance_side ?b front ?b ?b)) )
          (once (in_motion ?b) )
        )
      )
    )
    (forall (?d - hexagonal_bin)
      (and
        (preference throwToDrawerOrBin
          (exists (?b - building)
            (then
              (once (< (distance desk ?b) 1) )
              (hold (or (< (x_position bed) 1) ) )
              (once (in_motion ?d) )
            )
          )
        )
        (preference ballThrownThroughRampToBin
          (then
            (once (in ?d ?d) )
            (once (not (not (and (agent_holds ?d) (on desk ?d) ) ) ) )
            (once (on ?d ?d) )
          )
        )
      )
    )
    (preference throwAttempt
      (exists (?b - dodgeball ?b - game_object)
        (then
          (once (in_motion ?b) )
          (once (same_type ?b ?b) )
          (hold (and (agent_holds floor) (in_motion agent) (agent_holds ?b) ) )
        )
      )
    )
  )
)
(:terminal
  (> -30 (> (+ 4 (count throwAttempt:red) )
      (= 3 (count-once-per-objects throwBallFromOtherBallToBin:dodgeball) )
    )
  )
)
(:scoring
  (* (+ 18 (<= 10 (count-same-positions throwToDrawerOrBin:dodgeball) )
    )
    (count throwToDrawerOrBin:blue_dodgeball)
    3
    (* 10 (count ballThrownThroughRampToBin:dodgeball) )
  )
)
)

(define (game game-id-762) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?c1 - book)
      (game-conserved
        (<= (distance ?c1 ?c1) 1)
      )
    )
    (and
      (exists (?d - dodgeball)
        (not
          (game-conserved
            (agent_holds ?d)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?p3 - dodgeball ?c2 - curved_wooden_ramp)
      (and
        (preference ballThrownFromObjectToBin
          (then
            (hold-while (adjacent ?c2 back) (in_motion ?c2) (is_setup_object ?c2) )
            (once (in bed ?c2) )
            (hold (object_orientation ?c2 ?c2) )
          )
        )
        (preference throwAttempt
          (exists (?b - cube_block ?c ?b1 ?c2 - game_object)
            (at-end
              (not
                (agent_holds ?c2)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (external-forall-maximize (count-once-per-objects throwAttempt:blue_dodgeball:red) ) (+ (* (count ballThrownFromObjectToBin:tan:dodgeball) (count-once-per-external-objects throwAttempt:tall_cylindrical_block) )
      (* (= 3 4 )
        3
        5
      )
    )
  )
)
(:scoring
  50
)
)

(define (game game-id-763) (:domain medium-objects-room-v1)
(:setup
  (exists (?o - hexagonal_bin)
    (game-conserved
      (= 7 (building_size ?o))
    )
  )
)
(:constraints
  (and
    (preference basketMadeFromRug
      (exists (?c - ball)
        (then
          (hold (not (exists (?d - (either dodgeball dodgeball)) (agent_holds ?d) ) ) )
          (once (in_motion ?c) )
          (hold (in_motion desk) )
        )
      )
    )
  )
)
(:terminal
  (> (/ (+ 3 10 )
      20
    )
    (* (* (count-once-per-objects basketMadeFromRug:green) (count basketMadeFromRug:yellow:beachball) )
      2
      9
      (count-same-positions basketMadeFromRug:beachball:green)
      (count-overlapping basketMadeFromRug:golfball)
      100
      (* (* (count basketMadeFromRug:blue_dodgeball) (+ 15 )
        )
        4
      )
      (count-once-per-objects basketMadeFromRug:dodgeball)
      2
    )
  )
)
(:scoring
  20
)
)

(define (game game-id-764) (:domain few-objects-room-v1)
(:setup
  (forall (?o4 - doggie_bed ?l1 - block ?b - hexagonal_bin ?w2 - hexagonal_bin)
    (forall (?o1 - blue_cube_block ?l - (either alarm_clock yellow_cube_block basketball) ?db - (either flat_block floor))
      (exists (?c4 - ball ?d1 - chair)
        (game-conserved
          (touch ?w2 ?w2)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference cubeBlockFromBedToShelf
      (exists (?b - building ?b4 - dodgeball)
        (at-end
          (object_orientation ?b4 ?b4)
        )
      )
    )
    (preference pillowThrownToDoggieBed
      (exists (?c - game_object)
        (then
          (hold (same_object bridge_block ?c) )
          (once (equal_z_position ?c ?c) )
          (once (agent_holds ?c) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (count-unique-positions pillowThrownToDoggieBed:pink:blue_dodgeball) )
)
(:scoring
  (count cubeBlockFromBedToShelf:beachball)
)
)

(define (game game-id-765) (:domain medium-objects-room-v1)
(:setup
  (exists (?t - dodgeball)
    (game-conserved
      (not
        (agent_holds ?t)
      )
    )
  )
)
(:constraints
  (and
    (preference ballKnocksBlockFromRug
      (exists (?g - dodgeball)
        (then
          (once (agent_holds bed) )
          (hold (exists (?db - color) (in ?g ?g) ) )
          (hold-to-end (and (>= (distance agent ?g) (distance ?g floor)) (agent_holds bed) ) )
        )
      )
    )
    (preference dodgeballsInPlace
      (exists (?o1 - (either hexagonal_bin mug dodgeball) ?p - (either pyramid_block key_chain) ?b4 - dodgeball)
        (at-end
          (not
            (not
              (not
                (faces back ?b4)
              )
            )
          )
        )
      )
    )
    (preference cubeBlockInBuilding
      (exists (?c ?b9 - teddy_bear)
        (then
          (hold-while (> (distance agent green_golfball) (distance ?c agent)) (and (> 1 9) (on ?c bed) ) )
          (once (<= (distance ?b9 brown) 4) )
          (once (agent_holds ?b9) )
        )
      )
    )
  )
)
(:terminal
  (< 4 (count-increasing-measure cubeBlockInBuilding:pink_dodgeball) )
)
(:scoring
  4
)
)

(define (game game-id-766) (:domain many-objects-room-v1)
(:setup
  (forall (?c - chair)
    (game-conserved
      (not
        (and
          (broken ?c)
          (not
            (on ?c top_drawer)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballFromDeskToTarget
      (exists (?h - building ?d1 - doggie_bed)
        (then
          (any)
          (once (not (exists (?h - hexagonal_bin ?s - block) (in_motion ?d1) ) ) )
          (once (not (in_motion ?d1) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 18 5 )
)
(:scoring
  (* 10 50 20 )
)
)

(define (game game-id-767) (:domain few-objects-room-v1)
(:setup
  (exists (?g - chair)
    (exists (?d - hexagonal_bin ?c - dodgeball)
      (game-optional
        (and
          (on ?g ?g)
          (agent_holds ?c)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference failedThrowAttempt
      (exists (?p2 ?l1 - curved_wooden_ramp)
        (at-end
          (in_motion ?l1)
        )
      )
    )
  )
)
(:terminal
  (> (* (* (count failedThrowAttempt:doggie_bed:blue_dodgeball) (<= 3 7 )
      )
      (count-once failedThrowAttempt:purple)
    )
    (* 7 10 )
  )
)
(:scoring
  (count-once-per-objects failedThrowAttempt:dodgeball)
)
)

(define (game game-id-768) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?h - block)
      (game-conserved
        (or
          (in_motion ?h)
          (not
            (adjacent_side agent room_center ?h rug)
          )
          (and
            (on ?h room_center)
            (adjacent_side ?h ?h ?h)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - hexagonal_bin ?p1 - hexagonal_bin ?h - ball ?o1 - ball ?r ?b10 ?g - dodgeball)
      (and
        (preference blockIncorrectlyPicked
          (exists (?o3 - (either bridge_block hexagonal_bin golfball book))
            (then
              (hold (between ?r ?g ?o3) )
              (once (in_motion ?b10) )
              (once (exists (?c1 - hexagonal_bin) (agent_holds front) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count blockIncorrectlyPicked:doggie_bed) (count blockIncorrectlyPicked:yellow_cube_block) )
)
(:scoring
  3
)
)

(define (game game-id-769) (:domain few-objects-room-v1)
(:setup
  (exists (?b3 - hexagonal_bin)
    (game-conserved
      (exists (?h - wall)
        (in agent ?b3)
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - dodgeball)
      (and
        (preference ballThrowAttempt
          (exists (?f - doggie_bed)
            (then
              (once (and (in ?b ?b) (and (on ?f ?b) (agent_holds ?b) ) ) )
              (once (in_motion ?b) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-longest ballThrowAttempt:golfball) 3 )
)
(:scoring
  (* (* (+ 30 (* (* (count ballThrowAttempt:dodgeball) (count ballThrowAttempt:golfball:pink) )
          (count ballThrowAttempt:dodgeball)
        )
      )
      (count-once-per-objects ballThrowAttempt:basketball)
    )
    (* (count-once-per-objects ballThrowAttempt:beachball) (count ballThrowAttempt:dodgeball) (+ 3 5 3 )
      (external-forall-maximize
        (count ballThrowAttempt:yellow:hexagonal_bin)
      )
      (count-shortest ballThrowAttempt:purple)
      (* 12 (count-once ballThrowAttempt:hexagonal_bin) )
    )
  )
)
)

(define (game game-id-770) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?p1 - shelf)
      (and
        (forall (?b - hexagonal_bin)
          (forall (?h - building ?o2 - dodgeball)
            (forall (?c - doggie_bed)
              (and
                (forall (?b - hexagonal_bin ?b - chair)
                  (exists (?bl - game_object)
                    (exists (?o2 - ball)
                      (and
                        (exists (?o - hexagonal_bin)
                          (and
                            (and
                              (exists (?d - block)
                                (exists (?o4 - hexagonal_bin ?b - ball ?p - ball ?p ?p1 - ball)
                                  (and
                                    (exists (?c2 - dodgeball)
                                      (and
                                        (game-optional
                                          (and
                                            (agent_holds ?p)
                                            (not
                                              (and
                                                (agent_holds ?c)
                                                (or
                                                  (game_start )
                                                  (in ?p1 ?d)
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                              (and
                                (and
                                  (game-conserved
                                    (in_motion agent)
                                  )
                                )
                              )
                            )
                          )
                        )
                        (game-conserved
                          (faces ?bl ?b)
                        )
                        (forall (?o3 - (either dodgeball tall_cylindrical_block tall_cylindrical_block))
                          (exists (?h - hexagonal_bin ?r - (either alarm_clock mug) ?r - curved_wooden_ramp)
                            (forall (?o2 - (either hexagonal_bin pillow) ?h - (either dodgeball basketball))
                              (exists (?r ?b - triangular_ramp)
                                (game-conserved
                                  (in_motion rug)
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
                (game-conserved
                  (in_motion ?p1)
                )
              )
            )
          )
        )
        (game-optional
          (in agent ?p1)
        )
        (exists (?d ?h - hexagonal_bin)
          (and
            (and
              (game-optional
                (in_motion ?h)
              )
              (game-conserved
                (in_motion ?p1)
              )
            )
            (and
              (and
                (forall (?o - dodgeball)
                  (game-conserved
                    (in ?o ?h)
                  )
                )
              )
              (game-optional
                (and
                  (not
                    (agent_holds ?d)
                  )
                  (touch ?p1 ?d)
                )
              )
              (and
                (game-conserved
                  (agent_holds rug)
                )
              )
              (game-optional
                (not
                  (in_motion ?p1)
                )
              )
              (exists (?g - chair)
                (forall (?b - block)
                  (game-optional
                    (< 7 (distance agent ?p1))
                  )
                )
              )
            )
            (forall (?b - (either tall_cylindrical_block blue_cube_block))
              (game-optional
                (touch ?p1 ?d)
              )
            )
          )
        )
      )
    )
    (exists (?b ?o - (either laptop teddy_bear doggie_bed))
      (exists (?b - cube_block)
        (game-conserved
          (not
            (not
              (game_over )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToRampToBin
      (exists (?d1 - hexagonal_bin ?g ?b5 - chair ?b - block ?l3 - dodgeball)
        (then
          (hold (touch ?l3 bed) )
          (once (< (distance_side rug room_center ?l3) (distance_side ?l3 ?l3 ?l3)) )
          (once (in_motion door) )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (count throwToRampToBin:hexagonal_bin) )
)
(:scoring
  6
)
)

(define (game game-id-771) (:domain many-objects-room-v1)
(:setup
  (exists (?d - hexagonal_bin ?d2 - building)
    (or
      (game-optional
        (< (distance ?d2 ?d2) (distance ?d2 ?d2))
      )
      (exists (?b - game_object)
        (exists (?l4 - hexagonal_bin ?b1 - game_object)
          (exists (?c2 - triangular_ramp ?t - bridge_block)
            (and
              (and
                (and
                  (and
                    (forall (?d - hexagonal_bin ?b5 - hexagonal_bin)
                      (game-conserved
                        (and
                          (in ?d2 ?t)
                          (not
                            (touch ?d2 ?b)
                          )
                        )
                      )
                    )
                  )
                )
              )
              (forall (?b4 - chair)
                (and
                  (forall (?b - game_object)
                    (exists (?l2 - golfball ?o - teddy_bear)
                      (game-conserved
                        (and
                          (not
                            (not
                              (= (distance ?b ?b1))
                            )
                          )
                          (in ?o ?b1)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballOnBedAtEnd
      (exists (?t - sliding_door ?c - game_object)
        (then
          (hold (not (not (not (not (adjacent ?c ?c) ) ) ) ) )
          (once (and (in_motion ?c) (agent_holds room_center) ) )
          (once (not (open ?c) ) )
        )
      )
    )
  )
)
(:terminal
  (< 1 (count ballOnBedAtEnd:red) )
)
(:scoring
  (+ (count ballOnBedAtEnd:yellow) (count ballOnBedAtEnd) )
)
)

(define (game game-id-772) (:domain few-objects-room-v1)
(:setup
  (exists (?f - hexagonal_bin)
    (game-conserved
      (same_object ?f ?f)
    )
  )
)
(:constraints
  (and
    (forall (?d - ball)
      (and
        (preference dodgeballAndBasketballInBin
          (then
            (once (and (in_motion ?d) (and (agent_holds ?d) (in_motion ?d) ) ) )
            (hold-while (>= 1 1) (and (not (same_color ?d ?d) ) (not (agent_holds room_center) ) (or (not (not (adjacent ?d ?d) ) ) (not (agent_holds ?d) ) ) ) )
            (once (in ?d ?d) )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (= (count dodgeballAndBasketballInBin:beachball) (count dodgeballAndBasketballInBin) )
  )
)
(:scoring
  2
)
)

(define (game game-id-773) (:domain few-objects-room-v1)
(:setup
  (exists (?c3 ?h ?o2 - tall_cylindrical_block ?d1 - beachball)
    (exists (?d - curved_wooden_ramp)
      (and
        (forall (?b7 - game_object)
          (game-optional
            (and
              (= 4 1)
              (adjacent ?d ?d)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwMovesBeachballWithoutKnockingTeddy
      (exists (?p2 - wall)
        (then
          (hold (not (in ?p2 pink_dodgeball) ) )
        )
      )
    )
    (forall (?p - cube_block)
      (and
        (preference dodgeballsInPlace
          (exists (?p - cube_block)
            (then
              (hold (not (same_color ?p ?p) ) )
              (once (and (on ?p ?p) (in ?p ?p) ) )
              (once (not (agent_holds ?p) ) )
            )
          )
        )
        (preference throwToBin
          (exists (?b6 ?b7 ?b10 ?b7 ?g ?b - teddy_bear ?b7 - hexagonal_bin)
            (then
              (once (agent_holds ?b7) )
              (once (and (not (not (adjacent ?p ?p) ) ) (not (equal_z_position ?b7 ?p) ) ) )
              (once (> (distance ?b7 rug) 1) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 4 (count-shortest dodgeballsInPlace:red) )
)
(:scoring
  (count-once-per-objects throwMovesBeachballWithoutKnockingTeddy:green:pink_dodgeball)
)
)

(define (game game-id-774) (:domain few-objects-room-v1)
(:setup
  (forall (?b2 - curved_wooden_ramp)
    (and
      (game-conserved
        (< 1 1)
      )
    )
  )
)
(:constraints
  (and
    (preference castleBuilt
      (exists (?w1 - dodgeball)
        (at-end
          (in ?w1 ?w1)
        )
      )
    )
  )
)
(:terminal
  (= 4 (* (* (count-once-per-objects castleBuilt:beachball) (count castleBuilt:yellow) )
      (count castleBuilt:basketball)
    )
  )
)
(:scoring
  (count-once-per-objects castleBuilt:green)
)
)

(define (game game-id-775) (:domain few-objects-room-v1)
(:setup
  (and
    (not
      (exists (?l ?b10 - (either block))
        (game-conserved
          (is_setup_object ?b10)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference redDodgeballThrownToBinWithoutTouchingFloor
      (exists (?p ?b10 - (either pyramid_block pillow))
        (then
          (once (not (not (in agent ?p) ) ) )
          (once (in_motion ?b10) )
          (hold-while (equal_x_position ?p ?b10) (on ?b10 ?p) )
          (forall-sequence (?r2 - (either golfball cylindrical_block))
            (then
              (once (and (in ?p ?b10) (in_motion ?r2) ) )
              (once (agent_holds ?r2) )
              (once (not (agent_holds ?p) ) )
              (hold (on ?b10 desk) )
            )
          )
          (hold (agent_holds ?b10) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 7 (count-once-per-objects redDodgeballThrownToBinWithoutTouchingFloor:dodgeball) (<= (count-once-per-external-objects redDodgeballThrownToBinWithoutTouchingFloor:hexagonal_bin) 5 )
      25
    )
    4
  )
)
(:scoring
  (not
    (external-forall-maximize
      3
    )
  )
)
)

(define (game game-id-776) (:domain few-objects-room-v1)
(:setup
  (forall (?c ?d ?o3 - ball ?tb - doggie_bed)
    (forall (?w2 - hexagonal_bin)
      (exists (?tb - hexagonal_bin)
        (game-conserved
          (not
            (not
              (between ?w2 ?w2 floor)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference golfballInBinFromPillow
      (exists (?g ?h - wall ?d - pillow)
        (then
          (hold (< 3 0) )
          (once (agent_holds ?d) )
          (hold (agent_holds ?d) )
        )
      )
    )
    (forall (?p - block)
      (and
        (preference throwToRampToBin
          (exists (?b10 - curved_wooden_ramp ?f - cube_block ?b5 - block)
            (then
              (hold (agent_holds ?p) )
              (hold (same_color ?p floor) )
              (hold (in_motion ?p) )
              (hold (on rug desk) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 9 3 )
)
(:scoring
  (* 5 (+ 6 60 (* (- 10 )
        (* (count-once-per-objects throwToRampToBin:pink_dodgeball:blue_dodgeball) (* (or (count-once-per-objects throwToRampToBin:pink) (* 3 (count-once throwToRampToBin:beachball) )
            )
            6
          )
        )
      )
    )
  )
)
)

(define (game game-id-777) (:domain few-objects-room-v1)
(:setup
  (exists (?c - (either doggie_bed pen) ?o3 - hexagonal_bin)
    (forall (?o2 - (either game_object cylindrical_block desktop main_light_switch tall_cylindrical_block) ?p3 ?c1 - dodgeball)
      (exists (?b2 - teddy_bear)
        (game-optional
          (and
            (not
              (agent_holds ?p3)
            )
            (touch ?o3 ?p3)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference basketMadeFromRug
      (exists (?w1 - block)
        (then
          (once (< 2 (distance ?w1 ?w1)) )
          (once (and (touch ?w1 ?w1) (on ?w1 ?w1) ) )
          (once (and (in_motion ?w1) (touch ?w1 ?w1) (agent_holds ?w1) ) )
        )
      )
    )
    (forall (?b - (either main_light_switch))
      (and
        (preference redDodgeballThrownToBin
          (exists (?o1 - hexagonal_bin)
            (at-end
              (in ?b ?b)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (and
      (>= (* (* (count basketMadeFromRug:blue_pyramid_block) 10 )
          (count basketMadeFromRug:golfball)
        )
        (* (* 3 10 )
          (count-once-per-objects basketMadeFromRug:dodgeball)
        )
      )
      (= 3 10 )
      (and
        (= (count-once basketMadeFromRug:rug:green) (external-forall-maximize 6 ) )
        (and
          (>= 5 2 )
          (>= 20 10 )
          (>= 30 30 )
        )
        (>= (count redDodgeballThrownToBin:beachball) 5 )
      )
    )
  )
)
(:scoring
  1
)
)

(define (game game-id-778) (:domain medium-objects-room-v1)
(:setup
  (and
    (or
      (exists (?d - doggie_bed)
        (game-optional
          (not
            (and
              (and
                (in ?d ?d)
              )
              (not
                (not
                  (not
                    (on ?d ?d)
                  )
                )
              )
            )
          )
        )
      )
    )
    (and
      (exists (?c - hexagonal_bin)
        (game-conserved
          (not
            (in_motion ?c)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?x - hexagonal_bin ?bl - dodgeball ?c5 ?b10 - (either laptop laptop) ?b7 - chair)
      (and
        (preference throwToBin
          (exists (?c - (either cylindrical_block triangular_ramp pink blue_cube_block dodgeball cube_block golfball) ?o1 - dodgeball)
            (then
              (hold (agent_holds ?o1) )
              (hold (not (not (agent_holds ?o1) ) ) )
              (hold (< (distance ?b7 ?o1) 6) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* (* 10 (* (count-once-per-objects throwToBin:beachball) 2 (* (count throwToBin:beachball) 6 (external-forall-maximize (total-score) ) )
            (count-once-per-objects throwToBin:red)
            (+ (total-score) 1 (external-forall-maximize (count throwToBin:beachball:beachball) ) )
            (count throwToBin:orange)
          )
          (* (count-once-per-objects throwToBin:blue_dodgeball) (* 2 60 )
          )
        )
      )
      (+ 3 (- (* (- (* (total-time) (count-once throwToBin:basketball) )
            )
            (* 4 30 )
            5
            6
            5
            (count throwToBin:yellow)
          )
        )
      )
    )
    (or
      (>= (+ (count-once-per-objects throwToBin:purple) 1 5 (- (count-once-per-external-objects throwToBin:pink_dodgeball) )
        )
        10
      )
      (>= (count-once throwToBin:rug:rug:yellow) (* 4 (+ (count-once-per-objects throwToBin:blue:pink:doggie_bed) (external-forall-maximize (* (count throwToBin:blue_dodgeball) (* (total-time) (* 3 (* 5 (* 15 (* (count-shortest throwToBin:orange) (* (* 300 (* (count-once throwToBin:dodgeball) )
                            )
                            5
                          )
                        )
                        (+ (count-once-per-objects throwToBin:golfball:rug) (count-once-per-objects throwToBin:dodgeball) )
                        (not
                          (count throwToBin:beachball)
                        )
                      )
                    )
                  )
                  (* 2 )
                  3
                )
              )
            )
          )
        )
      )
      (>= (* 2 (count throwToBin:yellow) )
        (external-forall-maximize
          2
        )
      )
    )
  )
)
(:scoring
  (count throwToBin:doggie_bed)
)
)

(define (game game-id-779) (:domain medium-objects-room-v1)
(:setup
  (forall (?o - blinds)
    (exists (?d1 - game_object)
      (exists (?h ?b - dodgeball ?d ?h - hexagonal_bin)
        (forall (?h - (either laptop cylindrical_block) ?d - hexagonal_bin ?b - (either beachball alarm_clock ball))
          (and
            (exists (?d1 - block ?o - (either golfball) ?o1 - ball)
              (forall (?c6 - beachball)
                (and
                  (forall (?b - color)
                    (and
                      (and
                        (and
                          (exists (?b7 - teddy_bear ?bl - curved_wooden_ramp)
                            (and
                              (forall (?c - hexagonal_bin)
                                (exists (?c - hexagonal_bin ?b - triangular_ramp)
                                  (and
                                    (and
                                      (game-conserved
                                        (opposite ?o1 ?o1)
                                      )
                                    )
                                    (game-conserved
                                      (and
                                        (and
                                          (same_color ?d1 ?c)
                                          (and
                                            (or
                                              (in_motion ?d1)
                                              (in_motion ?o)
                                              (or
                                                (agent_holds ?d1)
                                                (not
                                                  (or
                                                    (exists (?d - hexagonal_bin)
                                                      (agent_holds ?b)
                                                    )
                                                    (or
                                                      (not
                                                        (in_motion ?b)
                                                      )
                                                      (= (distance ?b ?bl) (distance ?d ?b))
                                                    )
                                                  )
                                                )
                                                (not
                                                  (>= 2 9)
                                                )
                                              )
                                            )
                                            (not
                                              (same_color room_center ?o)
                                            )
                                          )
                                        )
                                        (and
                                          (in ?bl ?o1)
                                          (not
                                            (on ?b desk)
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                          (game-optional
                            (between ?o ?d1 agent)
                          )
                          (exists (?h - curved_wooden_ramp)
                            (forall (?c - (either bridge_block))
                              (forall (?s - dodgeball)
                                (forall (?l1 - hexagonal_bin ?b6 - curved_wooden_ramp ?l - hexagonal_bin ?d ?x ?b - (either triangle_block flat_block) ?l - triangular_ramp)
                                  (game-optional
                                    (not
                                      (not
                                        (not
                                          (in_motion ?b)
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                        (forall (?c - sliding_door)
                          (game-conserved
                            (exists (?w - building)
                              (in_motion ?h)
                            )
                          )
                        )
                        (game-conserved
                          (agent_holds ?o1)
                        )
                      )
                    )
                  )
                  (not
                    (and
                      (exists (?b - dodgeball ?d - dodgeball ?d - hexagonal_bin)
                        (and
                          (and
                            (game-conserved
                              (agent_holds ?h)
                            )
                          )
                        )
                      )
                      (game-optional
                        (and
                          (adjacent_side ?o1 agent ?o)
                          (and
                            (touch ?d1 ?d)
                            (and
                              (and
                                (faces ?c6 bridge_block)
                                (and
                                  (adjacent ?d ?o)
                                )
                              )
                              (in_motion ?d1)
                            )
                          )
                        )
                      )
                      (and
                        (game-conserved
                          (and
                            (not
                              (agent_holds ?d1)
                            )
                            (or
                              (agent_holds ?b)
                              (in_motion ?d1)
                            )
                            (same_color ?d room_center)
                            (exists (?ob - hexagonal_bin)
                              (on ?ob ?o)
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
            (game-optional
              (in_motion ?h)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference agentLeavesDogbedOrNoMoreBalls
      (exists (?h - drawer)
        (then
          (hold (agent_holds ?h) )
        )
      )
    )
    (preference blockCorrectlyPicked
      (exists (?d ?h ?l3 - dodgeball ?b - dodgeball)
        (then
          (once (exists (?p - shelf) (on ?b ?b) ) )
          (once (same_color ?b ?b) )
          (once (agent_holds agent) )
        )
      )
    )
    (preference ballThrownFromRug
      (exists (?g - cube_block)
        (then
          (hold (not (or (between ?g desk ?g) (game_over ) ) ) )
          (hold (adjacent_side ?g ?g desk ?g) )
          (once (not (not (agent_holds ?g) ) ) )
        )
      )
    )
  )
)
(:terminal
  (< (* (count blockCorrectlyPicked:basketball) 3 )
    (- 3 )
  )
)
(:scoring
  1
)
)

(define (game game-id-780) (:domain many-objects-room-v1)
(:setup
  (forall (?d - triangular_ramp)
    (and
      (game-conserved
        (not
          (on bed ?d)
        )
      )
      (game-conserved
        (or
          (in desk bed)
          (toggled_on ?d)
        )
      )
      (and
        (forall (?tb - cube_block ?b8 - game_object)
          (or
            (and
              (game-optional
                (not
                  (in ?b8 ?b8)
                )
              )
            )
          )
        )
      )
      (game-conserved
        (not
          (and
            (not
              (and
                (not
                  (in_motion ?d)
                )
                (adjacent ?d ?d)
              )
            )
            (in_motion ?d)
          )
        )
      )
      (and
        (and
          (game-optional
            (or
              (in_motion ?d)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c1 - game_object ?p1 - wall)
      (and
        (preference blueObjectMovedToRoomCenter
          (exists (?c ?l - dodgeball ?p1 - pyramid_block)
            (then
              (once (on ?p1 ?p1) )
              (hold (in_motion ?p1) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (* 3 (- (count blueObjectMovedToRoomCenter:doggie_bed) )
      )
      (count blueObjectMovedToRoomCenter:beachball)
    )
    10
  )
)
(:scoring
  (count blueObjectMovedToRoomCenter:dodgeball:blue_dodgeball)
)
)

(define (game game-id-781) (:domain medium-objects-room-v1)
(:setup
  (forall (?d - golfball)
    (game-conserved
      (in_motion ?d)
    )
  )
)
(:constraints
  (and
    (preference throwToBinFromDistance
      (exists (?bl - dodgeball)
        (then
          (hold (exists (?d - hexagonal_bin) (in_motion ?d) ) )
          (hold (and (agent_holds ?bl) (not (agent_holds ?bl) ) (and (in_motion ?bl) (not (and (and (not (agent_holds ?bl) ) (in_motion ?bl) ) (and (not (in_motion ?bl) ) (adjacent ?bl ?bl) ) ) ) (and (toggled_on ?bl) (not (not (and (in ?bl ?bl) (on ?bl ?bl) ) ) ) ) ) ) )
          (once (and (adjacent_side ?bl ?bl ?bl) (in ?bl ?bl) ) )
          (once (not (in_motion room_center) ) )
        )
      )
    )
    (forall (?o ?h - wall ?c4 ?w2 ?c6 ?o1 - hexagonal_bin ?o - game_object)
      (and
        (preference blockPickedUp
          (exists (?c - ball)
            (then
              (hold (faces ?o ?o) )
              (once (touch ?o ?c) )
              (hold-to-end (not (not (not (not (adjacent ?o ?c) ) ) ) ) )
            )
          )
        )
        (preference ballThrownIntoTarget
          (exists (?o - dodgeball)
            (then
              (once (exists (?g - (either dodgeball pen)) (and (in_motion ?o) (and (not (exists (?h - dodgeball) (and (on ?g ?o) (in ?o ?h) ) ) ) (adjacent ?g ?o) ) (not (rug_color_under ?g desk) ) (in_motion agent) ) ) )
              (hold-while (and (not (and (touch ?o ?o) (not (not (and (not (in_motion ?o) ) (in ?o ?o) (in_motion agent) (and (on ?o ?o) (in ?o desk) ) ) ) ) ) ) (between ?o ?o ?o) (open ?o) ) (and (and (agent_holds room_center) (in_motion agent) ) (not (same_color ?o drawer) ) ) )
              (hold-while (and (and (not (in ?o bed) ) (in_motion ?o) ) (and (adjacent ?o ?o) (adjacent bed upright) (in room_center ?o) ) ) (in_motion ?o) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (count throwToBinFromDistance:beachball) 4 )
)
(:scoring
  (+ (< (count ballThrownIntoTarget:purple:yellow_pyramid_block) 5 )
  )
)
)

(define (game game-id-782) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (exists (?tb - game_object)
        (and
          (and
            (exists (?b - cube_block)
              (game-conserved
                (is_setup_object ?tb)
              )
            )
            (and
              (exists (?c - game_object ?b - color)
                (exists (?b - bridge_block ?b - hexagonal_bin)
                  (and
                    (game-optional
                      (not
                        (forall (?db ?r1 - pyramid_block)
                          (in ?b ?tb)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
          (exists (?l - hexagonal_bin)
            (exists (?h - hexagonal_bin)
              (game-conserved
                (< (distance ?tb agent) 2)
              )
            )
          )
        )
      )
    )
    (exists (?c6 - dodgeball ?d2 - red_pyramid_block ?t - hexagonal_bin ?h - hexagonal_bin)
      (and
        (exists (?b - doggie_bed ?f - (either chair blue_cube_block) ?w2 - dodgeball)
          (game-conserved
            (and
              (touch bed side_table)
              (or
                (agent_holds ?h)
                (and
                  (not
                    (and
                      (> (distance ?w2 room_center) (distance ?w2 ?w2))
                      (agent_holds ?w2)
                    )
                  )
                )
              )
              (on ?h room_center)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - dodgeball)
      (and
        (preference objectMovedRoomSide
          (exists (?h - hexagonal_bin ?p1 - (either alarm_clock triangle_block wall dodgeball cube_block yellow_cube_block cellphone) ?g - game_object)
            (then
              (once (not (and (agent_holds ?g) (not (in ?g ?b) ) ) ) )
              (once (on ?b ?g) )
              (once (agent_holds ?b) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count objectMovedRoomSide:dodgeball) (count-unique-positions objectMovedRoomSide:hexagonal_bin:purple) )
    (or
      (> (+ (count objectMovedRoomSide:golfball:pink) 3 3 )
        2
      )
      (> (* (* (count-once-per-objects objectMovedRoomSide:doggie_bed) 10 (* (count-once objectMovedRoomSide:basketball:dodgeball:yellow_pyramid_block) 3 (+ (* (- (* (count-once objectMovedRoomSide:golfball) (count-once-per-objects objectMovedRoomSide:dodgeball) )
                  )
                  2
                )
                (+ (count objectMovedRoomSide:side_table) (= (* 2 (and (count objectMovedRoomSide:dodgeball) ) )
                    (* (or 100 (count objectMovedRoomSide:orange) 15 ) (not (+ (* (count objectMovedRoomSide) (/ (* (= (count-once-per-objects objectMovedRoomSide:pink_dodgeball) (count objectMovedRoomSide:blue_dodgeball) )
                                100
                              )
                              (count-overlapping objectMovedRoomSide:blue_dodgeball)
                            )
                            (* (* (total-score) (count objectMovedRoomSide:dodgeball) (* (count objectMovedRoomSide:top_drawer:purple) )
                              )
                              4
                            )
                          )
                          (total-score)
                        )
                      )
                    )
                  )
                )
              )
              (count objectMovedRoomSide)
              (* (count-longest objectMovedRoomSide:pink) 8 )
            )
          )
          (external-forall-maximize
            (count objectMovedRoomSide:red:purple)
          )
        )
        (* (count-once objectMovedRoomSide:beachball) (count-once-per-objects objectMovedRoomSide:dodgeball:dodgeball) )
      )
      (and
        (>= (< 5 (count-once-per-objects objectMovedRoomSide:green:golfball:doggie_bed) )
          1
        )
        (>= (+ (* (count-once-per-objects objectMovedRoomSide:dodgeball:orange) (* (+ (* (+ (count objectMovedRoomSide:beachball) (+ (count objectMovedRoomSide:pink) (* (count-once-per-objects objectMovedRoomSide:orange:beachball) (+ 2 2 )
                        )
                      )
                      (<= (count objectMovedRoomSide:basketball:beachball) (* 15 (= 1 (>= (count objectMovedRoomSide:yellow_cube_block) 3 )
                          )
                        )
                      )
                      (- (* (count objectMovedRoomSide:dodgeball) (total-score) )
                      )
                      (external-forall-maximize
                        (* 5 (* (count-longest objectMovedRoomSide:basketball) (count objectMovedRoomSide:yellow) )
                        )
                      )
                      (* 4 (total-score) 4 (count-once objectMovedRoomSide:beachball) (count objectMovedRoomSide:orange:purple) (+ (count-once-per-objects objectMovedRoomSide:green:basketball) 3 )
                      )
                    )
                    (count-once-per-objects objectMovedRoomSide:yellow)
                  )
                  (total-score)
                )
                2
              )
            )
            (* 3 5 (external-forall-minimize (count objectMovedRoomSide:alarm_clock) ) )
          )
          10
        )
        (>= 5 0.7 )
      )
    )
  )
)
(:scoring
  (* (- (count objectMovedRoomSide:yellow) )
    6
  )
)
)

(define (game game-id-783) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?c3 - hexagonal_bin ?b - dodgeball)
      (and
        (game-conserved
          (on ?b ?b)
        )
        (and
          (exists (?x - game_object ?c3 - hexagonal_bin)
            (exists (?o - curved_wooden_ramp)
              (game-optional
                (and
                  (and
                    (on rug ?c3)
                    (< (distance ?b ?c3) 3)
                  )
                  (and
                    (not
                      (not
                        (in_motion ?c3)
                      )
                    )
                    (agent_holds ?c3)
                    (agent_holds ?b)
                  )
                )
              )
            )
          )
          (and
            (forall (?c3 - tan_cube_block)
              (forall (?d - doggie_bed)
                (exists (?t1 - doggie_bed)
                  (exists (?h - hexagonal_bin ?r - curved_wooden_ramp)
                    (and
                      (and
                        (game-optional
                          (on ?r ?d)
                        )
                      )
                    )
                  )
                )
              )
            )
            (and
              (game-conserved
                (and
                  (and
                    (agent_holds ?b)
                    (on ?b ?b)
                  )
                  (not
                    (on ?b ?b)
                  )
                  (touch ?b ?b)
                )
              )
              (forall (?o5 - hexagonal_bin ?d ?d - cube_block ?h - triangular_ramp)
                (game-optional
                  (and
                    (in agent ?h)
                    (not
                      (faces ?b bed)
                    )
                    (and
                      (in_motion ?h)
                      (and
                        (not
                          (exists (?h - doggie_bed)
                            (and
                              (on ?b ?b)
                              (agent_holds ?h)
                            )
                          )
                        )
                        (in_motion ?b)
                      )
                    )
                  )
                )
              )
              (game-conserved
                (and
                  (and
                    (and
                      (agent_holds ?b)
                      (agent_holds agent)
                    )
                    (in_motion desk)
                    (in_motion ?b)
                  )
                  (in ?b ?b)
                  (not
                    (in ?b bed)
                  )
                )
              )
            )
          )
        )
      )
    )
    (exists (?h - drawer ?c1 - triangular_ramp)
      (and
        (and
          (game-optional
            (adjacent ?c1 ?c1)
          )
          (exists (?h - game_object ?t - doggie_bed)
            (and
              (exists (?db - curved_wooden_ramp)
                (game-conserved
                  (and
                    (in_motion ?t)
                    (agent_holds agent)
                  )
                )
              )
              (forall (?f - (either pillow cellphone book key_chain))
                (and
                  (exists (?w ?p ?s - (either cylindrical_block desktop dodgeball))
                    (game-conserved
                      (and
                        (and
                          (on ?t sideways)
                        )
                        (in_motion ?t)
                      )
                    )
                  )
                )
              )
            )
          )
          (exists (?l ?h - hexagonal_bin ?c4 - (either triangle_block laptop hexagonal_bin))
            (game-conserved
              (not
                (in ?c1 ?c1)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference itemInClosedDrawerAtEnd
      (exists (?h - (either yellow_cube_block dodgeball golfball tall_cylindrical_block teddy_bear))
        (then
          (once (and (game_start ) (agent_holds sideways) ) )
          (hold-while (in ?h ?h) (not (in_motion rug) ) )
          (hold (not (in_motion ?h) ) )
        )
      )
    )
  )
)
(:terminal
  (> 8 (count itemInClosedDrawerAtEnd:blue_pyramid_block:beachball:blue_dodgeball) )
)
(:scoring
  (* (count-once itemInClosedDrawerAtEnd:hexagonal_bin:green:dodgeball) (* (* (or (count itemInClosedDrawerAtEnd:basketball) ) (count itemInClosedDrawerAtEnd:brown) )
      (* 5 5 )
    )
  )
)
)

(define (game game-id-784) (:domain medium-objects-room-v1)
(:setup
  (forall (?b - block)
    (exists (?g - shelf)
      (game-conserved
        (in ?g ?b)
      )
    )
  )
)
(:constraints
  (and
    (preference throwFromEdgeOfRug
      (exists (?h - doggie_bed)
        (at-end
          (and
            (not
              (not
                (not
                  (agent_holds yellow)
                )
              )
            )
            (and
              (not
                (not
                  (not
                    (and
                      (and
                        (game_start )
                        (and
                          (and
                            (in_motion ?h)
                            (>= 1 (distance rug ?h))
                          )
                          (exists (?o - ball ?h - hexagonal_bin ?d - block ?o2 - (either main_light_switch cellphone cube_block golfball) ?o2 - cube_block)
                            (in_motion ?h)
                          )
                        )
                      )
                      (not
                        (and
                          (or
                            (in ?h ?h)
                            (in_motion ?h)
                          )
                          (in_motion ?h)
                        )
                      )
                    )
                  )
                )
              )
              (agent_holds ?h)
            )
          )
        )
      )
    )
    (forall (?l1 - (either dodgeball hexagonal_bin))
      (and
        (preference failedThrowToBin
          (exists (?b6 - cube_block ?o ?s ?b1 - curved_wooden_ramp)
            (then
              (hold (touch ?s ?l1) )
              (hold (not (not (not (broken main_light_switch) ) ) ) )
              (once-measure (on ?l1 ?o) (distance_side ?s ?l1 ?o ?o) )
            )
          )
        )
        (preference bounceBallToBin
          (exists (?b1 - building)
            (then
              (once (in_motion ?l1) )
              (once (< 1 (distance ?l1 ?b1)) )
              (once (not (in_motion agent) ) )
            )
          )
        )
        (preference blockPlacedInBuilding
          (exists (?c - cube_block)
            (at-end
              (not
                (and
                  (on ?c ?c)
                  (on ?c ?c)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (* 3 (count-same-positions blockPlacedInBuilding:beachball) )
    0
  )
)
(:scoring
  (count bounceBallToBin)
)
)

(define (game game-id-785) (:domain medium-objects-room-v1)
(:setup
  (forall (?c4 - dodgeball ?h - shelf)
    (game-conserved
      (agent_holds ?h)
    )
  )
)
(:constraints
  (and
    (forall (?b2 - teddy_bear)
      (and
        (preference ballDroppedInBin
          (exists (?l3 - dodgeball)
            (then
              (once (in ?b2 ?b2) )
              (once (not (exists (?p - hexagonal_bin) (exists (?h - ball ?o - drawer) (or (on ?p ?b2) (object_orientation ?o ?o) ) ) ) ) )
              (once (forall (?o2 - color ?c4 - game_object) (in ?b2 ?c4) ) )
            )
          )
        )
        (preference ballInOrOnBin
          (exists (?c5 - (either wall hexagonal_bin))
            (then
              (hold (not (in ?c5 ?b2) ) )
              (once (and (not (not (agent_holds ?c5) ) ) (exists (?h - hexagonal_bin ?b - pyramid_block) (in_motion ?b) ) (same_color ?c5 ?b2) (toggled_on ?b2) (in_motion room_center) (on ?b2 pink) ) )
              (once (and (not (is_setup_object ?b2) ) (open ?c5) ) )
            )
          )
        )
        (preference smallItemsInPlace
          (exists (?h ?b8 ?c2 - shelf)
            (then
              (once (forall (?w2 - hexagonal_bin ?o - dodgeball) (on agent ?c2) ) )
              (hold (not (and (in_motion ?c2) (exists (?o - dodgeball ?b - (either basketball ball main_light_switch)) (faces ?h ?h) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 1 (count smallItemsInPlace:green) )
)
(:scoring
  (+ (count ballInOrOnBin:orange:golfball) (- 8 )
    (* (count ballInOrOnBin:beachball) (* 10 (- (count ballDroppedInBin:hexagonal_bin) )
      )
    )
  )
)
)

(define (game game-id-786) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?c - dodgeball)
      (and
        (game-conserved
          (and
            (not
              (and
                (and
                  (and
                    (open ?c)
                    (not
                      (same_color ?c agent)
                    )
                  )
                  (agent_holds ?c)
                )
                (adjacent ?c ?c)
              )
            )
            (in agent room_center)
            (object_orientation ?c ?c)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectToBinOnFirstTry
      (exists (?b10 - block)
        (then
          (once (agent_holds room_center) )
          (hold (agent_holds ?b10) )
          (hold (not (and (in_motion ?b10) (agent_holds ?b10) ) ) )
        )
      )
    )
    (forall (?g - dodgeball)
      (and
        (preference dodgeballFromDeskToTarget
          (exists (?p1 - book ?b - (either cube_block pink tall_cylindrical_block) ?d - (either teddy_bear laptop game_object) ?b - dodgeball)
            (then
              (once (on ?b ?g) )
              (hold (adjacent_side ?b block ?g) )
              (hold (in_motion door) )
            )
          )
        )
      )
    )
    (preference ballThrownFromObjectToBin
      (exists (?o - game_object)
        (at-end
          (and
            (and
              (exists (?o - (either ball main_light_switch top_drawer))
                (not
                  (agent_holds bed)
                )
              )
              (and
                (in_motion ?o)
                (not
                  (in_motion ?o)
                )
              )
            )
            (in_motion pink_dodgeball)
          )
        )
      )
    )
    (preference watchOnShelf
      (exists (?b - hexagonal_bin ?b3 - block)
        (then
          (hold-while (and (agent_holds ?b3) (in_motion ?b3) ) (on ?b3 ?b3) )
          (hold (exists (?g - game_object ?c6 - block) (touch ?c6 ?b3) ) )
          (once (in_motion ?b3) )
        )
      )
    )
    (preference gameObjectToBin
      (exists (?t1 - building)
        (then
          (once (agent_holds door) )
        )
      )
    )
    (preference throwInBin
      (exists (?h - hexagonal_bin)
        (at-end
          (agent_holds desk)
        )
      )
    )
  )
)
(:terminal
  (= (+ (* (* 4 (count gameObjectToBin:basketball:pyramid_block) )
        (* 3 (total-score) )
      )
      7
      50
      10
    )
    0
  )
)
(:scoring
  (count-once-per-objects objectToBinOnFirstTry:bed)
)
)

(define (game game-id-787) (:domain few-objects-room-v1)
(:setup
  (exists (?d - (either cube_block cellphone) ?h - dodgeball ?b ?b4 - (either chair cylindrical_block) ?c - hexagonal_bin)
    (game-conserved
      (opposite ?c ?c)
    )
  )
)
(:constraints
  (and
    (forall (?c2 - hexagonal_bin)
      (and
        (preference brownObjectMovedToRoomCenter
          (then
            (hold-while (in ?c2 ?c2) (< (building_size ?c2) (distance ?c2 ?c2)) )
            (once (not (< 1 (distance_side ?c2 ?c2 ?c2)) ) )
            (once (on ?c2 ?c2) )
          )
        )
      )
    )
    (preference dodgeballFromRugToBin
      (exists (?d2 - beachball)
        (then
          (once (same_color ?d2 ?d2) )
          (hold (on ?d2 ?d2) )
          (hold (and (and (on ?d2 ?d2) (forall (?d - game_object) (and (not (and (in_motion ?d) (not (in_motion agent) ) ) ) (adjacent ?d ?d2) (agent_holds ?d2) ) ) (agent_holds ?d2) ) (game_over ) (not (not (and (adjacent ?d2 agent) (and (in_motion rug) (in ?d2 rug) ) ) ) ) (not (agent_holds ?d2) ) ) )
        )
      )
    )
    (forall (?b - game_object)
      (and
        (preference blockPlacedInBuilding
          (exists (?b - dodgeball ?c2 - hexagonal_bin)
            (then
              (any)
              (once (agent_holds ?c2) )
              (hold-while (between pink_dodgeball desk pink_dodgeball) (< 1 1) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* (count-once-per-external-objects brownObjectMovedToRoomCenter:blue_pyramid_block) (count-once-per-objects brownObjectMovedToRoomCenter:golfball) 10 (count-overlapping blockPlacedInBuilding:dodgeball) (count brownObjectMovedToRoomCenter:dodgeball:block) (count-increasing-measure blockPlacedInBuilding:tall_cylindrical_block) )
      (count blockPlacedInBuilding:hexagonal_bin)
    )
    (or
      (>= (total-score) (+ (count-shortest blockPlacedInBuilding:book:dodgeball) (+ (count dodgeballFromRugToBin:pink_dodgeball) (count-once-per-objects blockPlacedInBuilding:blue_dodgeball:basketball) )
        )
      )
      (>= (* (external-forall-maximize (count dodgeballFromRugToBin:basketball) ) 3 )
        3
      )
      (>= (count dodgeballFromRugToBin:basketball:basketball) (* (count-once-per-objects brownObjectMovedToRoomCenter:golfball) (count-same-positions brownObjectMovedToRoomCenter:yellow) (count brownObjectMovedToRoomCenter:beachball) (count-once brownObjectMovedToRoomCenter:dodgeball:bed) 6 )
      )
    )
  )
)
(:scoring
  (* 10 (count dodgeballFromRugToBin:tan:green) )
)
)

(define (game game-id-788) (:domain few-objects-room-v1)
(:setup
  (exists (?b - hexagonal_bin)
    (exists (?b2 - block ?w1 - sliding_door)
      (forall (?l3 - dodgeball ?c - (either doggie_bed cube_block))
        (game-conserved
          (and
            (toggled_on ?w1)
            (touch ?w1 ?b)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToBed
      (exists (?o - block)
        (then
          (once (not (agent_holds upright) ) )
          (once (in_motion ?o) )
          (once (is_setup_object ?o) )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (count-once-per-objects ballThrownToBed:dodgeball) )
)
(:scoring
  (* 5 3 )
)
)

(define (game game-id-789) (:domain many-objects-room-v1)
(:setup
  (forall (?b5 - block)
    (and
      (exists (?b - chair)
        (and
          (exists (?t - hexagonal_bin)
            (game-optional
              (in_motion ?b)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c - building ?h - hexagonal_bin ?bl - ball)
      (and
        (preference ballThrownToWallToAgent
          (exists (?ob - (either ball pyramid_block) ?p2 - teddy_bear)
            (then
              (once (exists (?d2 - dodgeball) (in ?d2 ?bl) ) )
              (hold (same_color ?p2 ?bl) )
              (hold (agent_holds ?p2) )
            )
          )
        )
      )
    )
    (preference brownObjectMovedToRoomCenter
      (exists (?b1 ?o ?d ?s ?db - desk_shelf)
        (at-end
          (and
            (not
              (not
                (exists (?g - dodgeball)
                  (and
                    (in_motion ?d)
                    (in_motion ?d)
                    (not
                      (and
                        (in_motion ?db)
                        (in_motion ?b1)
                        (in ?d ?b1)
                      )
                    )
                  )
                )
              )
            )
            (is_setup_object ?o)
          )
        )
      )
    )
    (preference objectLandsInBin
      (exists (?h - hexagonal_bin)
        (then
          (once (and (not (and (on ?h ?h) (on ?h ?h) ) ) (not (and (on ?h ?h) (and (agent_holds ?h) (in_motion agent) (not (not (not (not (and (agent_holds ?h) (not (or (on ?h ?h) ) ) ) ) ) ) ) ) ) ) ) )
          (hold (in ?h bed) )
        )
      )
    )
  )
)
(:terminal
  (>= (and 1 ) (total-score) )
)
(:scoring
  (* 6 1 (+ 4 (count brownObjectMovedToRoomCenter:pink) )
  )
)
)

(define (game game-id-790) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (in_motion desk)
    )
  )
)
(:constraints
  (and
    (preference objectMovedRoomSide
      (exists (?w1 - hexagonal_bin)
        (then
          (once (not (and (on ?w1 ?w1) (and (agent_holds ?w1) (< (distance ?w1 ?w1) 1) (agent_holds ?w1) ) ) ) )
          (once (agent_holds ?w1) )
          (hold-while (in_motion ?w1) (and (and (not (in ?w1 ?w1) ) (agent_holds ?w1) ) (between agent ?w1 ?w1) (in bed ?w1) (agent_crouches ) ) (in_motion ?w1) (and (on ?w1 ?w1) (not (and (= 1 1 3) (= (distance ?w1 ?w1)) (not (not (not (in_motion ?w1) ) ) ) ) ) (not (not (and (adjacent room_center ?w1) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (<= 10 (* (count objectMovedRoomSide:bed:dodgeball) (+ (* 2 3 )
        (= (count-once-per-objects objectMovedRoomSide:doggie_bed) (+ (* 40 6 )
            4
          )
        )
        (count-once-per-objects objectMovedRoomSide:red)
      )
      (count objectMovedRoomSide:blue_pyramid_block)
    )
  )
)
(:scoring
  (count-once objectMovedRoomSide:pink)
)
)

(define (game game-id-791) (:domain many-objects-room-v1)
(:setup
  (forall (?o - building)
    (game-conserved
      (not
        (in_motion ?o)
      )
    )
  )
)
(:constraints
  (and
    (preference blockInTowerKnocked
      (exists (?b5 - desktop ?w - cube_block)
        (then
          (once (in_motion ?w) )
          (once (and (in_motion ?w) (not (agent_holds ?w) ) ) )
          (once (agent_holds bed) )
        )
      )
    )
  )
)
(:terminal
  (> (count blockInTowerKnocked:dodgeball) (/ (= (count-once-per-objects blockInTowerKnocked:purple) (external-forall-maximize (count-once-per-objects blockInTowerKnocked:green) ) )
      (- (not (* (count-total blockInTowerKnocked:blue_dodgeball) (- (count blockInTowerKnocked:red) )
          )
        )
      )
    )
  )
)
(:scoring
  (count-once-per-objects blockInTowerKnocked:tall_cylindrical_block)
)
)

(define (game game-id-792) (:domain many-objects-room-v1)
(:setup
  (forall (?h - (either triangle_block hexagonal_bin golfball) ?h - dodgeball)
    (game-optional
      (not
        (and
          (in_motion ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h ?o - wall ?d - hexagonal_bin)
      (and
        (preference rollBallToBin
          (at-end
            (exists (?d - hexagonal_bin ?c - flat_block)
              (not
                (adjacent ?c agent)
              )
            )
          )
        )
        (preference throwBallToDoggieBedOffWall
          (exists (?d - dodgeball)
            (then
              (once (not (in_motion agent) ) )
              (hold-while (between agent agent ?d) (not (agent_holds agent) ) )
              (hold (and (agent_holds door) (< 1 1) ) )
            )
          )
        )
        (preference throwGolfballToBin
          (exists (?h - game_object)
            (then
              (hold-while (on ?h agent) (adjacent_side ?d ?d ?h ?d) )
              (hold-while (agent_holds pink_dodgeball) (in room_center ?d) )
              (hold-while (and (and (not (not (agent_holds desk) ) ) (forall (?ob - building ?o2 - teddy_bear) (and (in_motion ?h) (agent_holds front) ) ) ) (and (agent_holds ?h) (toggled_on ?d) (agent_holds upright) (on ?d ?d) (not (on pink_dodgeball ?d) ) (and (agent_holds ?d) (agent_holds ?d) ) ) ) (exists (?o3 - (either dodgeball ball)) (in_motion ?o3) ) (or (and (and (and (not (not (agent_holds ?d) ) ) (in_motion ?h) (faces ?d ?h) ) (= 6 1) ) (in_motion ?h) ) (and (same_type ?d ?d) (is_setup_object ?d) ) ) )
            )
          )
        )
      )
    )
    (preference throwAttempt
      (exists (?c - ball ?t1 - dodgeball)
        (then
          (once (and (forall (?c2 - building ?o1 - (either watch red)) (agent_holds ?o1) ) (agent_holds ?t1) ) )
          (once (and (not (and (rug_color_under ?t1 ?t1) (in_motion pink) ) ) (adjacent ?t1 ?t1) ) )
        )
      )
    )
    (forall (?b - ball)
      (and
        (preference throwInBin
          (exists (?r1 - pyramid_block)
            (then
              (hold (= 0 (distance green_golfball ?b) 1) )
              (hold (not (in_motion bed) ) )
              (once (and (agent_holds ?r1) (in_motion agent) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects throwGolfballToBin:green) (external-forall-maximize 3 ) )
)
(:scoring
  10
)
)

(define (game game-id-793) (:domain medium-objects-room-v1)
(:setup
  (forall (?f - (either hexagonal_bin lamp pyramid_block))
    (game-conserved
      (in_motion ?f)
    )
  )
)
(:constraints
  (and
    (preference pyramidBlockAtopTowerAtEnd
      (exists (?c ?b - (either lamp yellow_cube_block))
        (at-end
          (rug_color_under ?c agent)
        )
      )
    )
  )
)
(:terminal
  (>= (* (count-once-per-objects pyramidBlockAtopTowerAtEnd:pink) 4 )
    10
  )
)
(:scoring
  (count pyramidBlockAtopTowerAtEnd:yellow_cube_block)
)
)

(define (game game-id-794) (:domain many-objects-room-v1)
(:setup
  (exists (?o ?d ?p1 ?o ?o2 - dodgeball)
    (forall (?b - doggie_bed)
      (exists (?w - wall)
        (game-optional
          (not
            (not
              (toggled_on ?o2)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - hexagonal_bin ?c4 - cube_block)
      (and
        (preference throwToBinFromDistance
          (exists (?d2 - dodgeball ?p1 - (either mug bridge_block alarm_clock key_chain) ?c ?r - cylindrical_block)
            (then
              (once (object_orientation ?r ?r) )
              (hold (and (and (in ?r ?r) (or (agent_holds ?c) (not (and (not (agent_holds desk) ) (adjacent_side ?c4 room_center ?c ?c) ) ) ) ) (not (> 1 (distance ?c4 ?r)) ) (not (agent_holds desk) ) (in_motion ?c4) ) )
              (hold (and (agent_holds ?c4) (touch ?c4 top_shelf) ) )
            )
          )
        )
      )
    )
    (preference objectsHidden
      (exists (?s - curved_wooden_ramp)
        (then
          (once (and (in_motion ?s) (agent_holds desk) ) )
          (hold-while (and (opposite ?s ?s) (< (distance ?s ?s) 6) ) (in_motion ?s) )
          (hold (agent_holds ?s) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (= 2 20 )
      (>= 300 9 )
    )
    (>= (count-once-per-objects throwToBinFromDistance:bed) 30 )
  )
)
(:scoring
  0.5
)
)

(define (game game-id-795) (:domain few-objects-room-v1)
(:setup
  (exists (?d2 - hexagonal_bin)
    (exists (?d1 - cube_block)
      (game-conserved
        (in_motion ?d2)
      )
    )
  )
)
(:constraints
  (and
    (preference woodenBlockMovedFromRugToDesk
      (exists (?p3 - (either tall_cylindrical_block tall_cylindrical_block) ?p - color)
        (then
          (hold (in_motion ?p) )
          (once (not (< 2 8) ) )
          (once (in_motion ?p) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (count woodenBlockMovedFromRugToDesk:basketball) 1 )
    (>= (count woodenBlockMovedFromRugToDesk:cube_block) (count-increasing-measure woodenBlockMovedFromRugToDesk:pink_dodgeball) )
  )
)
(:scoring
  (+ (count-once woodenBlockMovedFromRugToDesk:alarm_clock) 5 )
)
)

(define (game game-id-796) (:domain many-objects-room-v1)
(:setup
  (exists (?r - game_object)
    (or
      (game-conserved
        (in_motion ?r)
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttemptFromBehindBlock
      (exists (?d - game_object ?h - (either pen doggie_bed))
        (then
          (hold-while (on ?h ?h) (and (game_start ) (same_type rug ?h) ) (and (adjacent block ?h) (and (on ?h ?h) (agent_holds ?h) ) (and (not (and (is_setup_object ?h) (not (agent_holds ?h) ) ) ) ) (in ?h pink) (on ?h ?h) (in_motion ?h) ) )
          (hold-while (in_motion ?h) (or (in ?h ?h) (and (agent_crouches ) (on ?h ?h) (and (faces pink ?h) (and (and (agent_holds ?h) (and (agent_holds ?h) (in_motion agent) ) (and (not (agent_holds ?h) ) (not (agent_holds north_wall) ) ) ) (and (in_motion ?h) (on ?h ?h) ) ) (not (in_motion ?h) ) ) ) ) )
          (once (< (distance ?h ?h) (distance ?h ?h)) )
        )
      )
    )
    (forall (?d - dodgeball)
      (and
        (preference pillowThrownToDoggieBed
          (exists (?p1 - dodgeball)
            (then
              (once (and (and (not (agent_holds ?p1) ) (and (in_motion ?p1) (in_motion ?d) (touch ?p1 ?d) ) ) (not (toggled_on ?p1) ) ) )
              (once (on agent ?d) )
              (once (not (adjacent_side room_center door ?d) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 100 (count pillowThrownToDoggieBed:side_table:doggie_bed) )
)
(:scoring
  (count-once-per-objects throwAttemptFromBehindBlock:dodgeball)
)
)

(define (game game-id-797) (:domain many-objects-room-v1)
(:setup
  (exists (?o - (either key_chain) ?o5 - ball ?t2 - yellow_cube_block)
    (forall (?o3 - (either beachball cube_block))
      (forall (?p3 - (either key_chain dodgeball))
        (and
          (exists (?b - dodgeball)
            (game-conserved
              (not
                (< 0 (distance ?p3 ?o3))
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?r - chair)
      (and
        (preference throwKnocksBlock
          (exists (?d - ball)
            (then
              (once (not (and (and (not (not (and (and (and (not (not (on ?r ?d) ) ) (and (on ?r ?d) (not (not (< (distance ?r ?r) 10) ) ) ) ) (same_color ?r rug) ) (open ?r) ) ) ) (agent_holds desk) ) (and (in ?d ?r) (and (not (not (agent_holds ?r) ) ) (not (and (adjacent ?r ?d) (in_motion ?r) ) ) ) ) ) ) )
              (hold-while (on ?d ?d) (in_motion ?r) )
              (hold (agent_holds ?d) )
            )
          )
        )
        (preference throwKnocksOverBear
          (exists (?w - bridge_block ?g - curved_wooden_ramp ?c - hexagonal_bin ?c - block)
            (then
              (once (rug_color_under ?r pink_dodgeball) )
              (once (agent_holds ?c) )
              (once (and (and (not (and (and (on ?c ?c) (forall (?r1 - dodgeball) (not (broken agent) ) ) ) (in_motion ?r) ) ) (adjacent ?c pink_dodgeball) (rug_color_under ?c ?r) (exists (?w2 - (either golfball pyramid_block tall_cylindrical_block doggie_bed)) (opposite ?r ?c) ) ) (and (in_motion ?r) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count throwKnocksBlock:beachball) 1 )
)
(:scoring
  (count throwKnocksOverBear:beachball)
)
)

(define (game game-id-798) (:domain medium-objects-room-v1)
(:setup
  (forall (?ob - dodgeball ?d - cube_block ?h - bridge_block)
    (exists (?w2 ?c - (either beachball cube_block doggie_bed))
      (forall (?c - (either cd bridge_block))
        (forall (?p3 - shelf)
          (exists (?h - (either mug alarm_clock))
            (forall (?w1 - dodgeball)
              (game-optional
                (and
                  (agent_holds ?w1)
                  (not
                    (in bottom_shelf ?h)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwMissesBin
      (exists (?o - block)
        (at-end
          (> 1 1)
        )
      )
    )
    (preference throwAttemptKnocksBlock
      (exists (?o4 - dodgeball)
        (then
          (once (and (< 4 (distance ?o4 ?o4)) (in_motion ?o4) ) )
          (hold (in_motion ?o4) )
          (hold (and (same_type ?o4 ?o4) (and (< (distance ?o4 ?o4) (distance ?o4 agent)) (in ?o4 ?o4) ) (on ?o4 ?o4) (and (not (and (not (in_motion ?o4) ) (in_motion ?o4) (not (not (and (and (or (or (and (not (and (not (agent_holds ?o4) ) (agent_holds desk) (not (in_motion ?o4) ) ) ) (in_motion ?o4) ) (forall (?o5 - drawer) (and (not (open ?o5) ) (same_color ?o5 yellow) ) ) ) ) (< (x_position ?o4) (building_size ?o4)) ) (on ?o4 ?o4) ) ) ) ) ) (in_motion floor) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count throwAttemptKnocksBlock:wall) (count throwAttemptKnocksBlock:pink_dodgeball) )
    (>= (total-score) (* 3 15 )
    )
  )
)
(:scoring
  1
)
)

(define (game game-id-799) (:domain medium-objects-room-v1)
(:setup
  (or
    (and
      (exists (?b2 - chair)
        (and
          (exists (?c - hexagonal_bin ?g - game_object)
            (exists (?db - (either desktop pyramid_block))
              (and
                (or
                  (not
                    (exists (?h - hexagonal_bin ?p1 - color ?w - dodgeball)
                      (and
                        (game-conserved
                          (in_motion ?b2)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
          (game-optional
            (or
              (not
                (rug_color_under ?b2 ?b2)
              )
              (and
                (and
                  (and
                    (not
                      (in_motion rug)
                    )
                    (above bed ?b2)
                  )
                  (and
                    (agent_holds ?b2)
                    (agent_holds ?b2)
                  )
                  (forall (?o3 - hexagonal_bin)
                    (not
                      (and
                        (in_motion ?o3)
                        (rug_color_under ?b2 ?o3)
                      )
                    )
                  )
                )
                (in_motion ?b2)
              )
            )
          )
          (game-optional
            (and
              (agent_holds ?b2)
              (not
                (adjacent ?b2 ?b2)
              )
            )
          )
        )
      )
    )
    (game-conserved
      (not
        (not
          (exists (?g - wall)
            (is_setup_object agent)
          )
        )
      )
    )
    (not
      (and
        (exists (?l4 - curved_wooden_ramp)
          (and
            (and
              (or
                (game-conserved
                  (exists (?p - (either blue_cube_block dodgeball golfball blue_cube_block red) ?t - chair)
                    (not
                      (agent_holds ?t)
                    )
                  )
                )
              )
              (game-optional
                (in_motion agent)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockIncorrectlyPicked
      (exists (?p2 - curved_wooden_ramp ?l ?s - dodgeball)
        (then
          (hold (and (and (in side_table ?l) (agent_holds floor) ) (on ?l ?s) (adjacent ?l ?l) ) )
          (hold (not (not (and (and (or (and (rug_color_under pink_dodgeball ?s) (and (agent_holds ?s) (in ?s ?l) ) ) (in_motion agent) ) (adjacent ?l ?l) ) (and (touch ?l ?l) (not (in_motion agent) ) (agent_holds agent) ) (in ?l ?s) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (> 5 6 )
)
(:scoring
  (count-once-per-objects blockIncorrectlyPicked:dodgeball)
)
)

(define (game game-id-800) (:domain few-objects-room-v1)
(:setup
  (forall (?b - hexagonal_bin ?b - hexagonal_bin ?h - building)
    (and
      (not
        (exists (?b9 - wall)
          (forall (?d - (either dodgeball watch dodgeball book main_light_switch dodgeball bridge_block))
            (exists (?s - cube_block)
              (game-conserved
                (not
                  (in ?d ?b9)
                )
              )
            )
          )
        )
      )
      (game-conserved
        (agent_holds ?h)
      )
    )
  )
)
(:constraints
  (and
    (preference throwFromEdgeOfRug
      (exists (?b8 - game_object)
        (then
          (once (not (and (forall (?p - tan_cube_block) (agent_holds ?b8) ) (and (agent_holds ?b8) (equal_x_position ?b8 ?b8) ) (touch ?b8 ?b8) ) ) )
          (once-measure (between back desk ?b8) (distance ?b8 ?b8) )
          (hold (on ?b8 ?b8) )
        )
      )
    )
    (forall (?h - hexagonal_bin)
      (and
        (preference teddyBearHitsBall
          (exists (?b8 - game_object)
            (then
              (once (not (not (on ?h ?h) ) ) )
              (hold (and (and (not (and (and (and (and (< 1 (distance ?h ?b8)) (in ?h desk) (and (rug_color_under ?b8 ?h) (not (not (and (not (in_motion desk) ) (not (on rug ?h) ) ) ) ) ) ) (not (game_start ) ) (in front ?h) ) (touch ?b8 ?b8) ) (on ?h ?h) ) ) (not (and (exists (?h - ball ?s - hexagonal_bin) (adjacent ?h ?b8) ) (on ?h ?b8) ) ) ) (and (not (not (adjacent_side ?b8 ?b8 ?h) ) ) (not (on ?h ?h) ) ) ) )
              (hold (same_color ?h ?h) )
            )
          )
        )
      )
    )
    (preference ballThrownToChair
      (exists (?b8 - dodgeball)
        (then
          (once (in_motion bed) )
          (once (< 7 (distance ?b8 agent)) )
          (once (in agent pink) )
        )
      )
    )
    (preference dodgeballHitsPillowWithoutTouchingBlock
      (exists (?h - dodgeball)
        (then
          (once (and (not (in_motion ?h) ) (on ?h ?h) ) )
          (once (agent_holds ?h) )
          (once (not (not (on ?h ?h) ) ) )
        )
      )
    )
    (preference throwAttempt
      (at-end
        (not
          (forall (?r2 ?d ?g ?l ?b ?c - cube_block ?b - building)
            (< 1 0.5)
          )
        )
      )
    )
    (forall (?h - building)
      (and
        (preference redDodgeballThrownToBin
          (exists (?t - hexagonal_bin ?b4 - (either cube_block key_chain tall_cylindrical_block))
            (at-end
              (and
                (and
                  (and
                    (same_type ?h ?b4)
                    (agent_holds ?b4)
                  )
                  (agent_holds bed)
                )
                (not
                  (in_motion ?b4)
                )
                (adjacent agent ?h)
                (in_motion ?b4)
                (not
                  (and
                    (on rug ?b4)
                    (or
                      (agent_holds ?h)
                      (on ?h ?b4)
                    )
                  )
                )
                (in_motion ?h)
              )
            )
          )
        )
        (preference objectMovedRoomSide
          (exists (?r ?c - hexagonal_bin ?r - (either cellphone))
            (at-end
              (in_motion desk)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (count-once redDodgeballThrownToBin:green:beachball) 1 )
  )
)
(:scoring
  (not
    2
  )
)
)

(define (game game-id-801) (:domain few-objects-room-v1)
(:setup
  (exists (?h - color)
    (forall (?t - hexagonal_bin)
      (and
        (and
          (and
            (game-conserved
              (and
                (not
                  (open ?t)
                )
                (not
                  (and
                    (agent_holds ?t)
                    (= 4 (distance rug ?t))
                    (exists (?ob - cube_block)
                      (same_object agent ?t)
                    )
                    (in ?h ?t)
                  )
                )
                (adjacent ?t agent)
              )
            )
          )
          (forall (?t2 ?c2 - dodgeball)
            (game-conserved
              (in_motion ?c2)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?l - chair ?h - (either pink lamp))
      (and
        (preference blockCorrectlyPicked
          (exists (?d - (either doggie_bed flat_block cube_block))
            (then
              (hold (agent_holds bed) )
              (hold (in_motion ?h) )
              (once (exists (?b7 - shelf) (and (in_motion rug) (in desk bed) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* 3 (count-once-per-objects blockCorrectlyPicked:book) )
      (+ (* (* (count blockCorrectlyPicked:beachball) 100 )
          4
        )
        25
        (* (count blockCorrectlyPicked:pink) (count blockCorrectlyPicked:hexagonal_bin:pink:pink) 2 (count blockCorrectlyPicked:basketball) 2 (count-once-per-objects blockCorrectlyPicked:yellow) )
        (count-once blockCorrectlyPicked:golfball:basketball:beachball)
      )
    )
  )
)
(:scoring
  (* 2 (* (* (- 8 )
        (count blockCorrectlyPicked:top_drawer:yellow)
      )
      3
    )
  )
)
)

(define (game game-id-802) (:domain few-objects-room-v1)
(:setup
  (exists (?b2 - (either yellow pyramid_block hexagonal_bin))
    (forall (?o - cube_block)
      (and
        (exists (?d - hexagonal_bin)
          (game-optional
            (agent_holds ?d)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockInTowerAtEnd
      (exists (?c - dodgeball ?b - hexagonal_bin)
        (then
          (once (in_motion ?b) )
          (hold (and (in_motion block) (and (not (not (agent_holds ?b) ) ) (touch ?b ?b) ) (agent_holds ?b) (on ?b ?b) ) )
          (hold (agent_holds ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once blockInTowerAtEnd:dodgeball) (count blockInTowerAtEnd:dodgeball) )
)
(:scoring
  (+ (* (count blockInTowerAtEnd:blue_cube_block) 1 (count-once-per-objects blockInTowerAtEnd:dodgeball) )
    (count blockInTowerAtEnd:orange)
    (count blockInTowerAtEnd:beachball:pink_dodgeball)
    3
  )
)
)

(define (game game-id-803) (:domain few-objects-room-v1)
(:setup
  (and
    (game-optional
      (forall (?o3 - chair ?h - hexagonal_bin)
        (not
          (in_motion ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballKnocksBlockFromRug
      (exists (?bl - pillow ?p - block)
        (then
          (once (in_motion bed) )
          (once (and (agent_holds ?p) (and (>= (distance ?p ?p) (distance_side ?p desk door)) (agent_crouches ) ) ) )
          (once-measure (object_orientation ?p ?p) (distance ?p agent) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once ballKnocksBlockFromRug:dodgeball) (count ballKnocksBlockFromRug:pyramid_block:pink:blue_cube_block) )
)
(:scoring
  (count ballKnocksBlockFromRug:pink_dodgeball)
)
)

(define (game game-id-804) (:domain many-objects-room-v1)
(:setup
  (exists (?g - shelf ?c - shelf)
    (game-conserved
      (agent_holds ?c)
    )
  )
)
(:constraints
  (and
    (forall (?r1 - dodgeball)
      (and
        (preference throwGolfballToBin
          (exists (?t - pillow ?o ?s ?b ?d ?r - game_object)
            (then
              (once (on ?o ?d) )
              (once (on ?r1 ?b) )
              (hold (equal_z_position ?b ?b) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once throwGolfballToBin:golfball) 2 )
)
(:scoring
  (count throwGolfballToBin:tan)
)
)

(define (game game-id-805) (:domain few-objects-room-v1)
(:setup
  (forall (?p - chair)
    (exists (?d - (either doggie_bed beachball) ?b2 - chair)
      (and
        (game-conserved
          (broken ?p)
        )
        (game-conserved
          (in_motion ?b2)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockKnockedFromBuildingInBin
      (exists (?db - ball)
        (at-end
          (same_color ?db agent)
        )
      )
    )
  )
)
(:terminal
  (> (+ 3 (count blockKnockedFromBuildingInBin:dodgeball) (external-forall-maximize 3 ) )
    2
  )
)
(:scoring
  7
)
)

(define (game game-id-806) (:domain few-objects-room-v1)
(:setup
  (exists (?p - ball ?g - doggie_bed)
    (forall (?o3 - teddy_bear)
      (game-conserved
        (touch upright ?g)
      )
    )
  )
)
(:constraints
  (and
    (forall (?o - hexagonal_bin)
      (and
        (preference dodgeballsInPlace
          (exists (?b8 - cube_block)
            (then
              (once (in_motion ?o) )
              (hold (agent_holds ?b8) )
              (hold (adjacent ?o ?b8) )
            )
          )
        )
      )
    )
    (preference golfballUnderBridgeWithoutTouchingBlock
      (exists (?s - cube_block)
        (then
          (once (not (adjacent ?s ?s) ) )
          (hold (in_motion ?s) )
          (once (opposite drawer ?s) )
        )
      )
    )
  )
)
(:terminal
  (> (total-score) 2 )
)
(:scoring
  5
)
)

(define (game game-id-807) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (> 3 3)
  )
)
(:constraints
  (and
    (preference throwFromBehindChairsInBin
      (exists (?h - building ?c - game_object ?b - pyramid_block)
        (then
          (once (agent_holds ?b) )
          (once (opposite ?b agent) )
          (hold (in agent ?b) )
        )
      )
    )
    (forall (?l1 - (either desktop yellow_cube_block) ?c - hexagonal_bin)
      (and
        (preference ballThrownMissesEverything
          (then
            (once (exists (?l - teddy_bear) (adjacent ?c ?c) ) )
            (hold (on ?c door) )
            (hold-while (exists (?o2 - game_object) (agent_holds agent) ) (not (on ?c ?c) ) (not (= 10 5) ) )
          )
        )
        (preference blockToBinFromRug
          (exists (?d - wall)
            (then
              (once (not (and (in ?c ?c) (and (not (adjacent ?c ?d) ) (not (not (adjacent_side agent ?d ?c) ) ) ) ) ) )
              (once (and (not (on ?c ?c) ) (not (adjacent ?c ?c) ) ) )
              (once (agent_holds upright) )
            )
          )
        )
        (preference ballDroppedInBin
          (then
            (hold-to-end (and (agent_holds floor) (agent_holds ?c) (exists (?w2 ?f ?db ?r ?c1 - cylindrical_block) (not (in ?c1 bed) ) ) ) )
            (once (in bed rug) )
            (hold (agent_holds ?c) )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 2 0 )
)
(:scoring
  (- (count-once-per-objects throwFromBehindChairsInBin:dodgeball) )
)
)

(define (game game-id-808) (:domain few-objects-room-v1)
(:setup
  (forall (?tb - curved_wooden_ramp)
    (game-conserved
      (not
        (not
          (on blue ?tb)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c1 - wall ?l - hexagonal_bin ?w - ball)
      (and
        (preference blockPickedUp
          (exists (?d - beachball ?h - dodgeball)
            (then
              (once (not (and (in ?h ?h) (agent_holds ?h) ) ) )
              (once (and (exists (?h - wall) (agent_holds ?w) ) (agent_holds ?w) (adjacent ?w ?w) (exists (?b - cube_block) (agent_holds ?h) ) ) )
              (hold (and (not (on ?h desk) ) (on ?w ?w) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= (+ (* (count-once blockPickedUp:golfball) (* (count blockPickedUp:golfball) (>= (+ (external-forall-minimize 1 ) (external-forall-maximize (count blockPickedUp:dodgeball) ) )
            5
          )
        )
      )
      (- (* (* (count blockPickedUp:basketball:yellow) (count-once-per-objects blockPickedUp:blue_cube_block:green) )
          (+ (+ (count blockPickedUp:beachball:blue_pyramid_block) (* (* (count blockPickedUp:blue_dodgeball) 300 )
                (* (count-once-per-objects blockPickedUp:book:beachball) (count blockPickedUp:red) )
              )
            )
            (count blockPickedUp:dodgeball)
          )
          10
          (* (external-forall-minimize 2 ) (- (+ (total-score) (* 9 5 )
              )
            )
          )
          (count blockPickedUp:book)
        )
      )
    )
    (count-once-per-objects blockPickedUp:doggie_bed:doggie_bed)
  )
)
(:scoring
  (count-once-per-external-objects blockPickedUp:book)
)
)

(define (game game-id-809) (:domain many-objects-room-v1)
(:setup
  (exists (?t - hexagonal_bin)
    (exists (?bl - cube_block ?d - desk_shelf)
      (game-optional
        (adjacent ?t ?t)
      )
    )
  )
)
(:constraints
  (and
    (preference throwObjectToBin
      (exists (?b - dodgeball)
        (at-end
          (not
            (in ?b ?b)
          )
        )
      )
    )
    (preference objectToBinOnFirstTry
      (exists (?h - hexagonal_bin ?b10 - (either dodgeball golfball))
        (then
          (once (not (not (not (agent_crouches ) ) ) ) )
          (hold (in ?b10 ?b10) )
          (once (not (or (not (faces ?b10 ?b10) ) (rug_color_under ?b10 ?b10) ) ) )
        )
      )
    )
    (preference ballInOrOnBin
      (exists (?x - hexagonal_bin ?b - cube_block ?o4 - dodgeball ?w - ball ?o1 - dodgeball)
        (then
          (once (adjacent_side ?o1 ?o1 bottom_shelf) )
        )
      )
    )
    (forall (?b3 - game_object)
      (and
        (preference blockKnockedFromBuildingInBin
          (exists (?l - teddy_bear ?b1 - hexagonal_bin)
            (then
              (hold-while (on ?b1 ?b1) (and (not (agent_holds ?b1) ) (not (above ?b3 ?b3) ) ) )
              (hold (agent_holds ?b3) )
              (hold (touch ?b3 ?b1) )
            )
          )
        )
      )
    )
    (forall (?h ?d ?r - ball)
      (and
        (preference dodgeballFromRugToBin
          (exists (?b - pyramid_block)
            (then
              (once (or (in_motion upright) (agent_holds ?r) ) )
              (once (and (exists (?c - hexagonal_bin) (and (on ?h ?h) (not (agent_holds ?h) ) (is_setup_object ?d) (and (and (and (between ?d ?r north_wall) (= 1 1) ) (in_motion ?h) (and (in ?c ?c) (same_type ?r ?r) (in_motion agent) ) ) (in_motion ?c) (and (agent_crouches ) (game_start ) ) (agent_holds ?h) (and (adjacent_side ?b ?h ?r ?h) (agent_holds ?h) ) (not (and (in ?c agent) (not (< (x_position agent) (distance ?d ?c)) ) ) ) ) ) ) (in_motion ?b) ) )
              (once (is_setup_object ?r) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (= (count throwObjectToBin:red:dodgeball) (count-once objectToBinOnFirstTry:hexagonal_bin) )
)
(:scoring
  (+ 3 (* (count blockKnockedFromBuildingInBin:blue_cube_block) 2 )
    (count-once blockKnockedFromBuildingInBin:golfball)
    2
  )
)
)

(define (game game-id-810) (:domain medium-objects-room-v1)
(:setup
  (exists (?h - building ?b5 ?t - building ?p - chair)
    (game-optional
      (agent_holds ?p)
    )
  )
)
(:constraints
  (and
    (preference throwFromEdgeOfRug
      (exists (?p2 - dodgeball)
        (then
          (once (and (in ?p2 ?p2) (and (not (adjacent ?p2 bed) ) (and (touch ?p2 ?p2) (on ?p2 ?p2) ) ) ) )
          (once (agent_holds ?p2) )
          (hold (on bed ?p2) )
        )
      )
    )
    (preference objectOnBed
      (exists (?p - hexagonal_bin ?h - hexagonal_bin)
        (then
          (hold (not (agent_holds bed) ) )
          (once (agent_holds ?h) )
          (once (touch floor ?h) )
        )
      )
    )
    (preference smallObjectThrownToBed
      (exists (?p3 - game_object)
        (then
          (once (in_motion ?p3) )
          (once-measure (agent_holds ?p3) (distance ?p3 ?p3) )
          (hold (exists (?b3 - cube_block) (and (not (adjacent rug ?p3) ) (on ?b3 ?b3) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (external-forall-maximize 7 ) (* (or 5 5 (count-once objectOnBed:yellow:purple) ) 4 )
      )
      (>= 2 2 )
    )
    (or
      (>= 4 (- (* (count-once throwFromEdgeOfRug:purple) (> (count throwFromEdgeOfRug:pink:red) 3 )
          )
        )
      )
      (>= (or (count throwFromEdgeOfRug:purple) ) 10 )
    )
    (>= (* (* (* (count throwFromEdgeOfRug:alarm_clock:basketball) 5 )
          0
        )
        10
      )
      (count-unique-positions objectOnBed:red)
    )
    (or
      (>= (count throwFromEdgeOfRug:purple:alarm_clock) (+ 9 (* (count-once-per-objects throwFromEdgeOfRug:purple) (= (count-unique-positions smallObjectThrownToBed:basketball:beachball:wall) )
          )
        )
      )
      (<= (* (* (total-time) (* (or (count-once-per-objects objectOnBed:yellow_cube_block) ) 3 )
          )
          2
        )
        2
      )
    )
  )
)
(:scoring
  (count objectOnBed:beachball)
)
)

(define (game game-id-811) (:domain medium-objects-room-v1)
(:setup
  (exists (?b5 - curved_wooden_ramp ?b - bridge_block)
    (exists (?b10 - ball)
      (not
        (exists (?b6 - block ?o - game_object ?l - dodgeball)
          (game-conserved
            (broken ?b10)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - ball ?o4 - (either dodgeball doggie_bed hexagonal_bin dodgeball) ?b - red_dodgeball)
      (and
        (preference dodgeballHitsPillowWithoutTouchingBlock
          (exists (?o5 ?b9 - ball)
            (then
              (hold (in ?b ?o5) )
              (once (not (exists (?h - game_object) (and (in ?o5 door) (agent_holds ?o5) ) ) ) )
              (hold (and (agent_holds ?o5) (and (rug_color_under ?b ?b) (agent_holds pink_dodgeball) (not (and (on ?b ?o5) (not (or (> (distance_side bed ?o5 ?o5) (distance desk ?b9)) (touch ?b ?b9) (agent_holds pink_dodgeball) ) ) ) ) ) ) )
            )
          )
        )
      )
    )
    (preference throwAttemptFromBehindBlock
      (exists (?r2 - block)
        (then
          (once (in_motion agent) )
          (once (in_motion ?r2) )
          (hold (not (in_motion agent) ) )
        )
      )
    )
  )
)
(:terminal
  (= 10 100 )
)
(:scoring
  (>= (count-once-per-objects dodgeballHitsPillowWithoutTouchingBlock:hexagonal_bin:golfball:red) 2 )
)
)

(define (game game-id-812) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?d - hexagonal_bin)
      (and
        (and
          (game-optional
            (on ?d ?d)
          )
          (or
            (and
              (game-conserved
                (not
                  (and
                    (> (distance ?d ?d) (distance ?d ?d))
                    (on ?d ?d)
                    (agent_holds ?d)
                    (agent_holds door)
                  )
                )
              )
            )
            (forall (?p1 - block ?p1 - game_object ?d - ball ?p1 - game_object)
              (forall (?h - shelf ?b - hexagonal_bin)
                (game-conserved
                  (not
                    (in desk ?d)
                  )
                )
              )
            )
            (and
              (game-conserved
                (in_motion ?d)
              )
              (and
                (game-conserved
                  (and
                    (in_motion ?d)
                    (in_motion ?d)
                  )
                )
              )
            )
          )
          (exists (?d - ball ?b10 - shelf)
            (and
              (forall (?b - ball)
                (forall (?h - hexagonal_bin)
                  (and
                    (exists (?h - dodgeball)
                      (and
                        (exists (?w1 - watch ?tb - hexagonal_bin)
                          (game-conserved
                            (not
                              (agent_holds ?b)
                            )
                          )
                        )
                      )
                    )
                    (game-conserved
                      (and
                        (and
                          (agent_holds ?b)
                          (agent_holds ?b)
                        )
                        (agent_holds bed)
                      )
                    )
                  )
                )
              )
              (and
                (and
                  (exists (?c - blinds)
                    (exists (?o2 - hexagonal_bin)
                      (and
                        (and
                          (exists (?bl - block ?o - hexagonal_bin)
                            (and
                              (or
                                (game-conserved
                                  (not
                                    (agent_holds bed)
                                  )
                                )
                              )
                            )
                          )
                          (game-conserved
                            (agent_holds drawer)
                          )
                          (game-optional
                            (< 1 1)
                          )
                        )
                        (game-conserved
                          (agent_holds ?o2)
                        )
                      )
                    )
                  )
                )
                (exists (?d - cube_block)
                  (and
                    (game-conserved
                      (adjacent ?b10 ?d)
                    )
                  )
                )
              )
              (forall (?d - (either key_chain desktop) ?db - beachball)
                (forall (?p ?l - (either golfball alarm_clock))
                  (and
                    (game-conserved
                      (in_motion rug)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockInTowerAtEnd
      (exists (?d - hexagonal_bin)
        (then
          (once (not (in_motion ?d) ) )
          (once (and (forall (?f - ball) (and (agent_holds ?f) (not (not (in ?f ?f) ) ) (agent_holds ?f) (and (< (x_position ?d) (distance_side ?d bed ?d)) (not (and (in_motion ?f) (not (not (in_motion ?f) ) ) ) ) ) ) ) (< (distance ?d ?d) 1) ) )
          (hold (agent_holds ?d) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects blockInTowerAtEnd) (count blockInTowerAtEnd:basketball) )
)
(:scoring
  (count-once-per-objects blockInTowerAtEnd:block:beachball)
)
)

(define (game game-id-813) (:domain many-objects-room-v1)
(:setup
  (exists (?c - (either pyramid_block triangle_block))
    (game-conserved
      (in_motion ?c)
    )
  )
)
(:constraints
  (and
    (preference objectToBinOnFirstTry
      (exists (?b - hexagonal_bin)
        (at-end
          (and
            (not
              (and
                (same_type ?b ?b)
                (not
                  (< 8 (distance ?b ?b))
                )
              )
            )
            (not
              (and
                (agent_holds ?b)
                (or
                  (not
                    (and
                      (on ?b ?b)
                      (and
                        (on ?b ?b)
                        (in_motion ?b)
                        (in bed ?b)
                      )
                    )
                  )
                  (in_motion ?b)
                )
              )
            )
          )
        )
      )
    )
    (preference dodgeballsInPlace
      (exists (?w2 - dodgeball ?l - ball)
        (at-end
          (agent_holds ?l)
        )
      )
    )
    (forall (?c - hexagonal_bin)
      (and
        (preference throwObjectToBin
          (exists (?o - cube_block ?o2 - ball ?p2 - (either desktop cube_block))
            (then
              (hold (and (exists (?b3 - (either teddy_bear desktop) ?b1 ?r2 - triangular_ramp ?o - dodgeball) (not (forall (?b - building) (and (and (on ?o ?b) (on ?p2 ?c) ) (and (in_motion ?b) (not (and (on ?p2 ?o) (not (in_motion ?p2) ) ) ) ) ) ) ) ) (in_motion ?p2) (< (distance ?p2 ?c) 7) ) )
              (once (and (and (and (< 9 (distance ?c ?p2)) (agent_holds ?c) ) (and (in ?c ?c) (same_color ?c agent) ) ) (not (and (and (not (in pink ?c) ) (not (not (not (agent_holds front) ) ) ) ) (and (agent_holds ?p2) (in_motion ?c) ) ) ) ) )
              (once (and (between bed back desk) (agent_holds ?p2) (adjacent ?p2 ?c) ) )
            )
          )
        )
        (preference objectThrownFromRug
          (exists (?o - curved_wooden_ramp ?h - dodgeball ?b6 - ball)
            (then
              (once (agent_holds bed) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count throwObjectToBin:yellow) 7 )
)
(:scoring
  10
)
)

(define (game game-id-814) (:domain medium-objects-room-v1)
(:setup
  (exists (?b4 ?c - block)
    (game-optional
      (< 4 1)
    )
  )
)
(:constraints
  (and
    (forall (?d - hexagonal_bin)
      (and
        (preference otherObjectsOnDeskShelf
          (exists (?b10 - (either block dodgeball))
            (then
              (once (object_orientation desk ?b10) )
              (once (and (or (exists (?r - block ?d - drawer ?h ?b7 - hexagonal_bin ?d - curved_wooden_ramp) (on ?b10 ?b10) ) (in_motion ?b10) ) (in_motion ?d) (adjacent upright desk) (is_setup_object ?d) (and (object_orientation desk ?b10) (adjacent ?b10 ?d) ) (in_motion ?d) ) )
              (once (or (and (not (and (in_motion ?b10) (not (in_motion ?d) ) ) ) (agent_holds ?d) ) (and (same_object ?b10 ?b10) (< 7 (distance ?d ?b10)) (and (agent_holds ?b10) (exists (?b3 - dodgeball) (agent_holds floor) ) ) (in_motion bed) ) ) )
            )
          )
        )
      )
    )
    (preference throwOverRamp
      (exists (?b10 - game_object ?c - chair)
        (then
          (once (on ?c ?c) )
          (once (in ?c ?c) )
          (once (on ?c ?c) )
        )
      )
    )
  )
)
(:terminal
  (>= (count otherObjectsOnDeskShelf:golfball:dodgeball) 0 )
)
(:scoring
  (* 2 (+ (* 2 4 1 (+ (total-score) (* (count throwOverRamp:dodgeball) )
        )
        (= (count-overlapping throwOverRamp:green) 5 )
        (* 5 (count-once-per-objects otherObjectsOnDeskShelf:purple:yellow) )
      )
      (- 15 )
    )
  )
)
)

(define (game game-id-815) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (exists (?b10 - (either bed cube_block))
      (and
        (in bed ?b10)
        (agent_holds ?b10)
        (adjacent_side ?b10 agent ?b10)
        (in_motion bed)
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToDoggieBed
      (exists (?d - ball)
        (then
          (hold (agent_holds ?d) )
          (once (in ?d ?d) )
          (hold-while (adjacent ?d ?d) (is_setup_object ?d) )
        )
      )
    )
    (preference ballDroppedInBin
      (exists (?c5 - dodgeball)
        (then
          (once (agent_holds ?c5) )
          (hold (not (in_motion ?c5) ) )
          (once (on agent ?c5) )
        )
      )
    )
    (forall (?c - wall ?h ?t2 - cylindrical_block)
      (and
        (preference pinkObjectMovedToRoomCenter
          (exists (?r2 - doggie_bed ?b - hexagonal_bin ?p2 - teddy_bear)
            (then
              (hold (in_motion back) )
              (once (in_motion ?p2) )
              (once-measure (on ?h ?h) (distance agent ?p2) )
            )
          )
        )
        (preference teddyBearHitsBall
          (exists (?d - hexagonal_bin)
            (then
              (once (agent_holds ?h) )
              (once (touch front ?t2) )
              (hold (not (and (toggled_on desk) (in_motion ?t2) ) ) )
            )
          )
        )
        (preference throwFromEdgeOfRug
          (exists (?h - chair)
            (then
              (once (agent_holds ?t2) )
              (once (not (not (not (and (agent_holds ?h) (not (not (not (agent_holds desk) ) ) ) ) ) ) ) )
              (hold-while (not (same_object ?h ?h) ) (and (agent_holds bed) (and (> (distance ?t2 ?t2) (distance_side ?t2 ?h ?t2 ?h)) (in_motion room_center) ) (on agent floor) ) (not (agent_holds ?h) ) )
            )
          )
        )
        (preference ballOnBedAtEnd
          (exists (?tb - doggie_bed)
            (then
              (hold-to-end (not (agent_holds ?t2) ) )
              (hold (not (agent_holds ?tb) ) )
              (once (agent_holds agent) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (< (* (count throwFromEdgeOfRug:rug:pyramid_block:blue_dodgeball) (count throwBallToDoggieBed:top_drawer) )
      (count-once-per-objects ballOnBedAtEnd:yellow:dodgeball)
    )
    (>= (count ballDroppedInBin:cube_block) (count-once-per-objects ballOnBedAtEnd:orange:basketball) )
  )
)
(:scoring
  2
)
)

(define (game game-id-816) (:domain few-objects-room-v1)
(:setup
  (exists (?b - hexagonal_bin)
    (and
      (and
        (and
          (game-conserved
            (not
              (in_motion ?b)
            )
          )
          (forall (?d ?t1 ?d - block)
            (and
              (and
                (and
                  (and
                    (exists (?h - ball ?o5 - teddy_bear)
                      (game-conserved
                        (and
                          (on ?d rug)
                          (not
                            (agent_holds blue)
                          )
                          (in ?d ?b)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballHitsBinBottom
      (exists (?c2 ?h - pillow)
        (at-end
          (in_motion ?h)
        )
      )
    )
    (preference throwToRampToBin
      (exists (?d - game_object)
        (then
          (once (and (in floor ?d) (on ?d ?d) ) )
          (hold (is_setup_object ?d) )
          (once (in ?d ?d) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (* (count-once-per-objects throwToRampToBin:alarm_clock) 6 )
  )
)
(:scoring
  (not
    (= (count dodgeballHitsBinBottom:basketball) (count dodgeballHitsBinBottom:green) )
  )
)
)

(define (game game-id-817) (:domain few-objects-room-v1)
(:setup
  (exists (?b4 - (either alarm_clock dodgeball))
    (forall (?d - curved_wooden_ramp)
      (forall (?g - ball ?b - dodgeball)
        (game-conserved
          (and
            (on agent yellow)
            (agent_holds desk)
            (not
              (not
                (not
                  (and
                    (and
                      (in_motion ?d)
                      (not
                        (agent_holds ?b)
                      )
                    )
                    (in_motion ?d)
                    (in_motion ?d)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference gameObjectToBin
      (exists (?g - ball)
        (at-end
          (and
            (and
              (in_motion ?g)
              (is_setup_object desk)
            )
            (agent_holds ?g)
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (> (count-once-per-external-objects gameObjectToBin:cylindrical_block) (count gameObjectToBin:dodgeball) )
    (>= (+ 10 (* 3 (total-score) )
      )
      (count-once-per-objects gameObjectToBin:dodgeball)
    )
  )
)
(:scoring
  (count-once-per-external-objects gameObjectToBin:dodgeball)
)
)

(define (game game-id-818) (:domain few-objects-room-v1)
(:setup
  (forall (?p - hexagonal_bin)
    (game-optional
      (not
        (same_color bed ?p)
      )
    )
  )
)
(:constraints
  (and
    (preference ballToBinFromBed
      (exists (?p ?c ?p1 ?d - (either bridge_block yellow_cube_block) ?d - wall)
        (then
          (hold (not (in ?d ?d) ) )
          (once (in south_wall ?d) )
          (once (in_motion desk) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-shortest ballToBinFromBed:green) (+ (count-measure ballToBinFromBed:purple:orange:dodgeball) (count ballToBinFromBed:yellow:doggie_bed) )
  )
)
(:scoring
  (+ (count ballToBinFromBed:dodgeball) 30 )
)
)

(define (game game-id-819) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (not
      (in_motion front)
    )
  )
)
(:constraints
  (and
    (preference dodgeballThrownToBin
      (exists (?bl - hexagonal_bin)
        (then
          (hold (not (in_motion ?bl) ) )
          (once (in_motion ?bl) )
          (once (adjacent bed bed) )
        )
      )
    )
    (preference binKnockedOver
      (exists (?t1 - ball ?s - building ?r1 - block)
        (then
          (hold (on block ?r1) )
          (once (adjacent_side ?r1 ?r1 ?r1) )
          (once (in_motion ?r1) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-same-positions dodgeballThrownToBin:dodgeball) (* (* (count-longest binKnockedOver:golfball:basketball) 2 )
      3
      3
    )
  )
)
(:scoring
  (- 3 )
)
)

(define (game game-id-820) (:domain medium-objects-room-v1)
(:setup
  (forall (?b - ball ?c3 - curved_wooden_ramp)
    (and
      (exists (?o4 - teddy_bear)
        (exists (?b - hexagonal_bin)
          (exists (?h - dodgeball ?o - game_object)
            (game-conserved
              (not
                (and
                  (< 1 (distance ?o ?c3))
                  (touch ?b room_center)
                )
              )
            )
          )
        )
      )
      (forall (?l3 - curved_wooden_ramp)
        (game-optional
          (and
            (same_color ?l3 left)
            (touch rug ?l3)
            (not
              (not
                (and
                  (between ?l3 floor ?c3)
                  (and
                    (and
                      (in agent rug)
                      (on ?l3 ?c3)
                      (equal_z_position ?l3 ?c3)
                    )
                    (not
                      (in door ?c3)
                    )
                    (exists (?d - chair)
                      (opposite back agent)
                    )
                    (adjacent ?c3 bottom_shelf)
                  )
                )
              )
            )
            (and
              (agent_holds ?c3)
              (not
                (object_orientation ?l3 ?l3)
              )
              (not
                (and
                  (not
                    (and
                      (not
                        (and
                          (touch ?l3 agent)
                          (and
                            (on ?c3 ?l3)
                            (opposite agent ?c3)
                          )
                        )
                      )
                      (not
                        (adjacent_side room_center rug ?c3)
                      )
                    )
                  )
                  (touch ?l3 floor)
                )
              )
            )
          )
        )
      )
      (exists (?c - hexagonal_bin ?d - ball)
        (game-conserved
          (adjacent_side ?c3 ?c3 ?c3 ?d)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference cubeBlockInBuilding
      (exists (?w2 - (either top_drawer book))
        (then
          (once (not (and (touch rug ?w2) (not (not (exists (?c ?db - hexagonal_bin) (on room_center ?c) ) ) ) ) ) )
          (once (same_object ?w2 ?w2) )
          (once (and (agent_holds ?w2) (in_motion ?w2) (and (in_motion ?w2) (not (>= (distance ?w2 ?w2) 1) ) ) ) )
        )
      )
    )
    (preference towerFallsWhileBuilding
      (exists (?d - hexagonal_bin)
        (then
          (once (in_motion ?d) )
          (once (adjacent ?d ?d) )
          (once (agent_holds ?d) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* (- (* (* (count-once-per-objects cubeBlockInBuilding) (* 3 (+ (- (count cubeBlockInBuilding:beachball) )
                  (* (count-longest towerFallsWhileBuilding:red) 100 )
                )
              )
            )
            5
          )
        )
        (* (count-once-per-objects cubeBlockInBuilding:green:cube_block) (+ (* (* (external-forall-maximize (count towerFallsWhileBuilding:purple:beachball) ) (count cubeBlockInBuilding:beachball) )
              (* (external-forall-maximize (- 15 )
                )
                (* (+ (* (* (count towerFallsWhileBuilding:red:dodgeball) 4 3 3 )
                      (external-forall-maximize
                        (* (- 4 )
                          100
                        )
                      )
                      (count cubeBlockInBuilding:dodgeball)
                    )
                    5
                  )
                  (count-once-per-objects towerFallsWhileBuilding:beachball:triangle_block)
                )
              )
            )
            (count-same-positions cubeBlockInBuilding:basketball)
          )
        )
        (count towerFallsWhileBuilding:tan:beachball)
        2
        (* 2 10 )
        (* (count-once-per-objects cubeBlockInBuilding:pink_dodgeball) (count-once-per-external-objects towerFallsWhileBuilding:beachball) )
      )
      (and
        (external-forall-maximize
          (count-once-per-objects towerFallsWhileBuilding:basketball)
        )
        15
      )
    )
    (>= 1 (* 5 (count-once-per-objects cubeBlockInBuilding:red:yellow:dodgeball) (count-shortest cubeBlockInBuilding:beachball) (count-once-per-objects cubeBlockInBuilding:dodgeball:beachball) )
    )
    (or
      (>= (count-once-per-objects cubeBlockInBuilding:blue_pyramid_block) 8 )
      (>= (count-once-per-objects towerFallsWhileBuilding:orange:pink) (total-time) )
    )
  )
)
(:scoring
  (count cubeBlockInBuilding:dodgeball)
)
)

(define (game game-id-821) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (not
      (exists (?o2 - block ?c - hexagonal_bin)
        (not
          (in_motion ?c)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference matchingBuildingBuilt
      (exists (?t - beachball ?b2 - cylindrical_block ?b - game_object ?d - building)
        (at-end
          (> 0 1)
        )
      )
    )
    (preference pinkObjectMovedToRoomCenter
      (exists (?c4 - hexagonal_bin)
        (then
          (hold (agent_holds ?c4) )
          (hold (opposite ?c4 front) )
          (once (equal_z_position agent ?c4) )
        )
      )
    )
    (preference pillowMovedToRoomCenter
      (exists (?b - cube_block)
        (then
          (hold-while (agent_holds desk) (agent_holds room_center) )
          (hold (adjacent_side ?b ?b rug) )
          (hold (and (and (agent_holds ?b) (in_motion ?b) ) (on rug ?b) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (count-once pillowMovedToRoomCenter:purple:pink) )
)
(:scoring
  (count-once pinkObjectMovedToRoomCenter:pyramid_block)
)
)

(define (game game-id-822) (:domain few-objects-room-v1)
(:setup
  (exists (?h - hexagonal_bin)
    (game-optional
      (agent_holds rug)
    )
  )
)
(:constraints
  (and
    (preference throwObjectToBin
      (exists (?c - dodgeball ?r2 - (either alarm_clock cube_block))
        (then
          (hold-while (not (and (< 8 7) (not (above ?r2 ?r2) ) ) ) (not (not (on ?r2 agent) ) ) (and (not (in_motion ?r2) ) (< (distance_side ?r2 desk agent) (building_size ?r2)) ) )
          (hold (not (and (in ?r2 desk) (not (in_motion ?r2) ) ) ) )
          (hold (not (not (and (rug_color_under floor ?r2) (on ?r2 ?r2) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (> (count-once throwObjectToBin:blue_dodgeball) 2 )
  )
)
(:scoring
  (count-once throwObjectToBin:rug)
)
)

(define (game game-id-823) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?d - golfball)
      (exists (?s - ball)
        (forall (?c5 ?o4 ?d ?h ?o3 ?c5 - hexagonal_bin ?d1 ?g - building)
          (exists (?c - cylindrical_block)
            (game-conserved
              (not
                (and
                  (on ?s ?d)
                  (= 1 3 5)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b2 - dodgeball)
      (and
        (preference ballThrownFromDoor
          (exists (?r1 - (either dodgeball alarm_clock))
            (then
              (hold-while (agent_holds ?b2) (toggled_on ?r1) )
              (hold (and (not (not (and (and (not (in ?b2 ?r1) ) (not (agent_holds ?b2) ) ) ) ) ) (agent_holds ?b2) ) )
            )
          )
        )
        (preference binKnockedOver
          (exists (?h - ball)
            (then
              (hold (in_motion right) )
              (once (or (agent_holds ?b2) (in_motion ?b2) ) )
              (hold (faces ?b2 ?h) )
              (hold (agent_holds ?h) )
              (once (not (is_setup_object desk) ) )
            )
          )
        )
        (preference ballThrownFromObjectToBin
          (then
            (once (in_motion ?b2) )
            (once (not (on room_center green_golfball) ) )
            (hold (touch ?b2 ?b2) )
          )
        )
      )
    )
  )
)
(:terminal
  (<= (= (total-score) (- 20 )
      (external-forall-minimize
        (count ballThrownFromObjectToBin:orange:basketball)
      )
    )
    (count ballThrownFromDoor:pink_dodgeball)
  )
)
(:scoring
  (count ballThrownFromObjectToBin:basketball)
)
)

(define (game game-id-824) (:domain few-objects-room-v1)
(:setup
  (exists (?p1 - cube_block)
    (game-conserved
      (not
        (same_type ?p1 ?p1)
      )
    )
  )
)
(:constraints
  (and
    (preference thrownBallReachesEnd
      (exists (?b - chair)
        (then
          (once (and (and (adjacent blue ?b) (same_object ?b ?b) (in_motion ?b) (in_motion ?b) ) (in ?b rug) (not (in ?b ?b) ) (agent_holds agent) (agent_crouches ) (is_setup_object ?b) (agent_holds ?b) ) )
          (once (in ?b agent) )
          (once (in_motion ?b) )
        )
      )
    )
    (preference blockThrowAttempt
      (exists (?ob - watch)
        (then
          (hold-while (and (and (not (in ?ob ?ob) ) (on desk ?ob) ) (not (not (agent_holds ?ob) ) ) ) (is_setup_object pink) )
          (hold (agent_holds bed) )
          (once (touch ?ob ?ob) )
        )
      )
    )
  )
)
(:terminal
  (>= (- (count-once-per-objects blockThrowAttempt:basketball:pink) )
    (* 15 (count blockThrowAttempt:blue_cube_block) )
  )
)
(:scoring
  0
)
)

(define (game game-id-825) (:domain few-objects-room-v1)
(:setup
  (forall (?h - (either cylindrical_block golfball) ?c - (either cylindrical_block yellow_cube_block alarm_clock))
    (forall (?c - (either cellphone bridge_block))
      (and
        (exists (?d2 - ball)
          (not
            (exists (?l1 - dodgeball ?h - dodgeball)
              (exists (?s - shelf)
                (game-conserved
                  (agent_holds ?d2)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectsHidden
      (exists (?s - drawer ?b - dodgeball)
        (then
          (once (not (and (adjacent ?b desk) (and (in ?b ?b) (not (in top_shelf ?b) ) (in_motion agent) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (count-increasing-measure objectsHidden:blue_pyramid_block) (count-once objectsHidden:hexagonal_bin) )
  )
)
(:scoring
  (* (total-score) (+ (* 5 (* 10 (count-once-per-objects objectsHidden:block) )
      )
      (* (+ (count objectsHidden:basketball:hexagonal_bin) (count-once-per-objects objectsHidden:blue_dodgeball) )
        (* (* (* (count-once-per-objects objectsHidden:red) (count objectsHidden:yellow) )
            10
          )
          (count-once-per-objects objectsHidden:basketball:purple:basketball)
          (count-once-per-objects objectsHidden:basketball)
          (count objectsHidden:hexagonal_bin)
        )
      )
    )
    (count-once objectsHidden:basketball)
  )
)
)

(define (game game-id-826) (:domain many-objects-room-v1)
(:setup
  (forall (?b - dodgeball)
    (game-optional
      (and
        (agent_holds ?b)
        (not
          (< (distance ?b ?b) 0)
        )
        (same_color desk ?b)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownFromDoor
      (exists (?w1 - building)
        (then
          (hold-for 7 (and (not (in_motion desk) ) (agent_holds side_table) (not (and (and (not (agent_holds ?w1) ) (agent_holds bed) ) (and (not (< (distance ?w1 ?w1) 5) ) (and (in_motion ?w1) (in agent rug) ) ) (in_motion ?w1) (and (not (agent_holds ?w1) ) (in_motion ?w1) (agent_holds ?w1) (and (not (is_setup_object ?w1) ) (not (in_motion ?w1) ) ) ) ) ) ) )
          (once (not (on upright ?w1) ) )
          (once (agent_holds ?w1) )
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (or
        (and
          (>= (count-once-per-objects ballThrownFromDoor:basketball) 6 )
        )
        (>= 2 (/ (count-once-per-objects ballThrownFromDoor:blue_dodgeball:brown) (>= (/ 5 (count-once-per-external-objects ballThrownFromDoor:basketball:purple) ) (* (count-once-per-objects ballThrownFromDoor:beachball) (external-forall-maximize 5 ) )
            )
          )
        )
      )
      (or
        (>= (count-once-per-external-objects ballThrownFromDoor:golfball) (count ballThrownFromDoor:doggie_bed) )
        (>= 3 (count-once-per-objects ballThrownFromDoor:yellow_cube_block) )
        (or
          (>= (total-score) 5 )
          (and
            (>= 3 3 )
          )
        )
      )
    )
    (or
      (not
        (>= (* 10 (count ballThrownFromDoor:pink:blue_dodgeball) )
          (count ballThrownFromDoor:pink)
        )
      )
      (>= (count ballThrownFromDoor:golfball) (* (count-once-per-objects ballThrownFromDoor:pink) (count ballThrownFromDoor:beachball) 6 (external-forall-maximize 5 ) )
      )
    )
    (or
      (>= 10 1 )
      (< 2 (count-once-per-objects ballThrownFromDoor:hexagonal_bin:beachball) )
    )
  )
)
(:scoring
  0
)
)

(define (game game-id-827) (:domain few-objects-room-v1)
(:setup
  (forall (?c6 - triangular_ramp)
    (game-optional
      (in_motion ?c6)
    )
  )
)
(:constraints
  (and
    (forall (?h - dodgeball)
      (and
        (preference ballThrownThroughRampAndBlocksToBin
          (exists (?s - pillow)
            (then
              (once (not (agent_holds desk) ) )
              (once (or (< (x_position ?h) 1) (and (in_motion ?s) (on ?h ?s) ) (on desktop ?h) ) )
              (once (not (and (> 1 2) (same_color ?s ?h) (touch bed pink_dodgeball) ) ) )
              (hold-while (not (not (in_motion bed) ) ) (agent_holds ?h) (and (same_type ?s ?s) (> 1 1) ) (agent_holds ?h) )
              (once (not (or (adjacent blue ?h) (not (< 5 (distance desk ?s)) ) ) ) )
            )
          )
        )
        (preference itemsHidingScreens
          (exists (?g - hexagonal_bin)
            (then
              (once (not (on agent ?h) ) )
              (hold-for 3 (agent_holds ?h) )
              (once (in_motion ?g) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects ballThrownThroughRampAndBlocksToBin:basketball) (count ballThrownThroughRampAndBlocksToBin:basketball) )
)
(:scoring
  (count-total ballThrownThroughRampAndBlocksToBin:pink)
)
)

(define (game game-id-828) (:domain few-objects-room-v1)
(:setup
  (forall (?h - pyramid_block)
    (and
      (forall (?h ?b8 - cylindrical_block)
        (exists (?t - ball)
          (exists (?o1 - dodgeball)
            (forall (?t ?b - sliding_door)
              (game-conserved
                (in_motion ?t)
              )
            )
          )
        )
      )
      (and
        (exists (?d - dodgeball)
          (forall (?d - triangular_ramp ?b2 ?tb ?h ?w2 - ball)
            (exists (?b - (either basketball cylindrical_block book))
              (exists (?tb - beachball)
                (or
                  (exists (?h - hexagonal_bin)
                    (game-conserved
                      (adjacent ?b2 ?h)
                    )
                  )
                )
              )
            )
          )
        )
        (game-optional
          (in front ?h)
        )
      )
      (game-optional
        (broken ?h)
      )
    )
  )
)
(:constraints
  (and
    (preference ballOnBedAtEnd
      (exists (?l - red_dodgeball)
        (at-end
          (adjacent bed rug)
        )
      )
    )
    (forall (?o2 - building)
      (and
        (preference throwToRampToBin
          (exists (?r - ball)
            (then
              (once (agent_holds ?r) )
              (once (and (touch ?o2 ?r) (in_motion ?r) ) )
              (once (touch ?o2 ?o2) )
              (hold (above room_center ?r) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (+ (count ballOnBedAtEnd:yellow) (* (* (count throwToRampToBin:blue_dodgeball) (count-once ballOnBedAtEnd:dodgeball:yellow) )
        (count-once-per-external-objects ballOnBedAtEnd:book)
      )
    )
    (total-time)
  )
)
(:scoring
  (count-overlapping ballOnBedAtEnd:wall)
)
)

(define (game game-id-829) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (in_motion bed)
  )
)
(:constraints
  (and
    (forall (?h - dodgeball)
      (and
        (preference blockPlacedInBuilding
          (at-end
            (not
              (game_start )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< 2 1 )
)
(:scoring
  (+ (* (+ (count blockPlacedInBuilding:basketball) (* (count blockPlacedInBuilding:blue_dodgeball) (* (- (count-same-positions blockPlacedInBuilding:golfball) )
            5
          )
        )
      )
      (count-once-per-external-objects blockPlacedInBuilding:dodgeball:pink)
      (count blockPlacedInBuilding:yellow:red)
    )
  )
)
)

(define (game game-id-830) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?b ?r1 - hexagonal_bin ?t1 - hexagonal_bin)
      (game-conserved
        (in_motion rug)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?h - game_object)
        (then
          (once (in_motion ?h) )
          (once (not (touch ?h bridge_block) ) )
          (once (not (in_motion ?h) ) )
          (once (in_motion ?h) )
        )
      )
    )
    (preference smallItemsInPlace
      (exists (?c - dodgeball ?b4 - block ?l3 - cube_block)
        (then
          (hold (and (exists (?b10 - ball) (not (on ?l3 agent) ) ) (game_start ) ) )
          (any)
          (once (not (and (adjacent_side ?l3 ?l3 ?l3 ?l3) (in_motion pink) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 180 (+ (count-once-per-objects smallItemsInPlace:beachball) 2 )
  )
)
(:scoring
  (+ (count-once-per-objects ballThrownToBin:beachball) (and (count smallItemsInPlace:beachball) ) )
)
)

(define (game game-id-831) (:domain many-objects-room-v1)
(:setup
  (exists (?c - dodgeball)
    (and
      (forall (?d - chair ?o - dodgeball)
        (forall (?h - wall)
          (game-optional
            (not
              (in_motion door)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockPlacedInBuilding
      (exists (?h - hexagonal_bin)
        (then
          (once (and (and (and (in_motion agent) (and (not (game_over ) ) (on ?h ?h) (and (in_motion ?h) (adjacent ?h ?h) ) ) ) (and (adjacent_side ?h ?h ?h agent) (on ?h ?h) ) ) ) )
          (once (same_color ?h door) )
          (once (and (same_type rug ?h) (not (adjacent ?h sideways) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects blockPlacedInBuilding:beachball) (count-overlapping blockPlacedInBuilding) )
)
(:scoring
  (count-once-per-objects blockPlacedInBuilding:pink)
)
)

(define (game game-id-832) (:domain medium-objects-room-v1)
(:setup
  (exists (?g - block)
    (and
      (and
        (game-conserved
          (in_motion ?g)
        )
        (and
          (game-conserved
            (agent_holds ?g)
          )
        )
        (game-optional
          (in_motion ?g)
        )
      )
      (exists (?h - shelf ?c5 - chair)
        (game-optional
          (touch ?c5 ?c5)
        )
      )
      (exists (?h - (either flat_block bridge_block))
        (game-conserved
          (in_motion ?g)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballFromRugToBin
      (exists (?o2 - shelf)
        (at-end
          (and
            (in_motion ?o2)
            (in_motion ?o2)
            (in_motion ?o2)
            (not
              (rug_color_under ?o2 desk)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 9 (- (count-once-per-objects dodgeballFromRugToBin:dodgeball) )
  )
)
(:scoring
  (+ (count-once-per-objects dodgeballFromRugToBin:beachball:purple) (= (count dodgeballFromRugToBin:pink) 6 )
    8
    15
    (+ 2 5 )
    (* 3 5 )
  )
)
)

(define (game game-id-833) (:domain few-objects-room-v1)
(:setup
  (exists (?h - ball)
    (forall (?o - ball)
      (forall (?b - (either cube_block dodgeball) ?c - game_object)
        (and
          (and
            (exists (?b - hexagonal_bin)
              (forall (?t2 - hexagonal_bin ?h - flat_block)
                (and
                  (exists (?c4 - drawer)
                    (and
                      (and
                        (game-optional
                          (agent_holds room_center)
                        )
                      )
                    )
                  )
                )
              )
            )
            (forall (?c - dodgeball ?b - building)
              (exists (?w - dodgeball ?d - teddy_bear)
                (forall (?b2 - beachball)
                  (or
                    (exists (?b3 - game_object ?d - blue_pyramid_block)
                      (and
                        (exists (?l ?r ?b2 ?t - teddy_bear ?l4 - (either pyramid_block cellphone) ?w - beachball)
                          (and
                            (exists (?h - hexagonal_bin)
                              (forall (?w1 - pillow)
                                (and
                                  (game-optional
                                    (and
                                      (and
                                        (agent_holds ?d)
                                        (same_color ?b ?w)
                                      )
                                      (on ?b2 ?w1)
                                      (in room_center desk)
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                        (game-optional
                          (in_motion floor)
                        )
                      )
                    )
                    (exists (?c5 - hexagonal_bin)
                      (exists (?h - shelf ?h - dodgeball)
                        (and
                          (forall (?h - dodgeball)
                            (and
                              (game-optional
                                (< 8 1)
                              )
                            )
                          )
                          (and
                            (exists (?s - triangular_ramp ?b5 - hexagonal_bin)
                              (and
                                (game-conserved
                                  (in_motion ?b2)
                                )
                                (game-optional
                                  (agent_holds ?o)
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                    (forall (?g - yellow_pyramid_block)
                      (and
                        (game-conserved
                          (is_setup_object ?b)
                        )
                        (and
                          (and
                            (exists (?s - hexagonal_bin)
                              (game-optional
                                (on ?d desk)
                              )
                            )
                          )
                          (and
                            (exists (?b1 - game_object)
                              (forall (?c - (either yellow_cube_block pen alarm_clock cube_block golfball hexagonal_bin tall_cylindrical_block))
                                (game-conserved
                                  (in_motion ?b2)
                                )
                              )
                            )
                          )
                          (game-conserved
                            (same_color agent ?g)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
            (and
              (game-optional
                (on ?c ?c)
              )
              (forall (?d - building)
                (and
                  (exists (?t2 - chair)
                    (and
                      (game-conserved
                        (in_motion desk)
                      )
                      (exists (?l4 - block ?h ?b - dodgeball)
                        (forall (?o5 - game_object)
                          (exists (?o3 - hexagonal_bin)
                            (exists (?p1 - dodgeball ?o2 ?l3 - cube_block)
                              (exists (?c - curved_wooden_ramp)
                                (game-optional
                                  (and
                                    (not
                                      (in ?c ?d)
                                    )
                                    (and
                                      (not
                                        (and
                                          (agent_holds rug)
                                          (not
                                            (not
                                              (not
                                                (not
                                                  (<= (distance room_center ?l3) 1)
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                      (not
                                        (adjacent_side ?t2 bed ?c)
                                      )
                                      (in_motion ?o2)
                                    )
                                    (and
                                      (agent_holds ?o3)
                                      (on ?t2 ?b)
                                      (or
                                        (on ?c ?o5)
                                        (and
                                          (between ?b ?d bed)
                                          (open ?c)
                                          (and
                                            (and
                                              (agent_holds bottom_shelf)
                                              (same_color ?o2 ?l3)
                                              (in_motion ?o3)
                                            )
                                          )
                                          (not
                                            (< 1 1)
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                      (and
                        (game-conserved
                          (= 0 (distance ?c back))
                        )
                      )
                    )
                  )
                )
              )
              (game-optional
                (game_over )
              )
            )
          )
          (exists (?t - beachball ?t ?h - hexagonal_bin)
            (game-conserved
              (not
                (not
                  (and
                    (agent_holds green)
                    (not
                      (agent_holds ?o)
                    )
                  )
                )
              )
            )
          )
          (game-conserved
            (not
              (exists (?d - game_object ?d - hexagonal_bin)
                (not
                  (< (x_position ?o) 1)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallFromOtherBallToBin
      (exists (?c - ball)
        (then
          (once (agent_holds brown) )
          (once (not (and (in ?c ?c) (in_motion ?c) (in_motion ?c) ) ) )
          (once (or (and (object_orientation ?c ?c) (or (adjacent agent ?c) (in_motion ?c) (same_type ?c ?c) (not (not (and (agent_holds desk) (and (not (and (and (same_color ?c ?c) (not (and (agent_holds ?c) (and (not (on agent top_shelf) ) (and (in_motion ?c) (<= 1 0.5) ) ) ) ) ) (same_type ?c top_drawer) ) ) (in_motion ?c) ) ) ) ) ) ) (agent_holds ?c) ) )
        )
      )
    )
    (preference ballThrownOntoTarget
      (exists (?c2 - ball)
        (then
          (once-measure (and (in_motion ?c2) (not (agent_holds room_center) ) ) (distance ?c2 desk) )
          (forall-sequence (?r - dodgeball)
            (then
              (hold (broken ?c2) )
            )
          )
          (hold (and (and (not (and (on ?c2 ?c2) (and (not (adjacent ?c2 ?c2) ) (and (and (in_motion ?c2) (not (and (and (agent_holds ?c2) (agent_holds ?c2) ) (and (agent_holds ?c2) ) ) ) ) (not (and (and (same_type ?c2 pink_dodgeball) (and (not (and (on ?c2 ?c2) (not (in_motion ?c2) ) ) ) (on ?c2 desk) (exists (?o2 - hexagonal_bin) (same_object ?c2 door) ) ) ) (in_motion floor) ) ) ) ) ) ) (agent_crouches ) (adjacent ?c2 agent) (in_motion ?c2) ) (not (in_motion ?c2) ) (same_object ?c2 ?c2) ) )
          (once (not (or (and (not (in_motion ?c2) ) (in_motion ?c2) ) (and (agent_holds ?c2) (in_motion ?c2) (in_motion rug) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (count throwBallFromOtherBallToBin:dodgeball:basketball) (count ballThrownOntoTarget:dodgeball:red) )
  )
)
(:scoring
  2
)
)

(define (game game-id-834) (:domain few-objects-room-v1)
(:setup
  (exists (?d - cube_block)
    (exists (?b5 - (either triangle_block basketball) ?d - pyramid_block ?c - game_object)
      (and
        (game-conserved
          (not
            (same_object ?c ?d)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?d1 - hexagonal_bin)
      (and
        (preference throwFromDoorToBin
          (exists (?c4 - desk_shelf)
            (then
              (once (forall (?h - block) (same_object ?c4 block) ) )
              (once-measure (< (distance ?d1 floor) (distance ?d1 ?d1)) (distance ?c4 ?d1) )
            )
          )
        )
      )
    )
    (preference brownObjectMovedToRoomCenter
      (exists (?h ?b4 - hexagonal_bin ?h - hexagonal_bin)
        (then
          (hold-while (agent_holds ?h) (and (on ?h rug) (not (in_motion ?h) ) ) )
          (once (in_motion ?h) )
          (hold (between ?h ?h ?h) )
        )
      )
    )
    (preference golfballUnderBridgeWithoutTouchingBlock
      (exists (?c6 - hexagonal_bin)
        (then
          (once (adjacent ?c6 ?c6) )
          (once (in_motion ?c6) )
          (once (in_motion ?c6) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (count-once-per-objects brownObjectMovedToRoomCenter:basketball:beachball) )
)
(:scoring
  10
)
)

(define (game game-id-835) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (not
      (not
        (exists (?h - hexagonal_bin ?c6 - building ?b - block)
          (adjacent_side ?b ?b ?b ?b)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference cubeBlockThrowAttempt
      (exists (?c - cube_block)
        (at-end
          (on top_shelf ?c)
        )
      )
    )
    (forall (?o - (either block book alarm_clock))
      (and
        (preference blueObjectMovedToRoomCenter
          (exists (?w2 - dodgeball)
            (then
              (once (agent_holds rug) )
              (once (and (not (and (and (not (agent_holds ?w2) ) (agent_holds room_center) ) (not (touch ?w2 ?o) ) ) ) (agent_holds ?w2) (agent_holds ?w2) (in_motion ?o) ) )
              (once (not (in_motion ?w2) ) )
            )
          )
        )
      )
    )
    (preference blockInTowerAtEnd
      (exists (?g - game_object)
        (then
          (once (not (and (and (in agent ?g) (agent_holds ?g) ) (in_motion ?g) ) ) )
          (once (in ?g ?g) )
          (hold (touch ?g room_center) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects blueObjectMovedToRoomCenter:hexagonal_bin) (* 3 (count blueObjectMovedToRoomCenter:brown) )
  )
)
(:scoring
  (external-forall-maximize
    (* (- (count blockInTowerAtEnd:blue_cube_block) )
      (- (count blueObjectMovedToRoomCenter:dodgeball:rug) )
    )
  )
)
)

(define (game game-id-836) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?c - ball)
      (game-conserved
        (< 6 (x_position ?c))
      )
    )
  )
)
(:constraints
  (and
    (preference pillowMovedToRoomCenter
      (exists (?b - teddy_bear)
        (then
          (once (in ?b ?b) )
          (hold (and (on ?b ?b) (in_motion ?b) (game_start ) ) )
          (hold-while (not (and (on ?b ?b) (touch ?b agent) ) ) (and (and (not (and (not (and (not (on ?b ?b) ) (not (and (agent_holds ?b) (not (agent_holds top_shelf) ) (adjacent ?b ?b) ) ) ) ) (and (< (distance rug ?b) 2) (adjacent ?b ?b) ) (object_orientation ?b ?b) ) ) (in_motion upright) (in_motion ?b) (= (building_size front) 3) ) (in_motion ?b) (agent_holds agent) ) (and (< (distance ?b rug) 1) (agent_holds agent) ) (same_type agent ?b) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (count-once-per-objects pillowMovedToRoomCenter:pyramid_block:pink) (count pillowMovedToRoomCenter:yellow) )
      (<= (not (* (+ (external-forall-maximize (total-time) ) (total-time) (external-forall-maximize 5 ) )
            (or
              (* (count pillowMovedToRoomCenter:yellow) (* (* (* 10 (+ 100 (* 2 7 (+ (+ (external-forall-maximize (* (count-once-per-external-objects pillowMovedToRoomCenter:blue_cube_block:blue_pyramid_block) (- (count-once-per-objects pillowMovedToRoomCenter:doggie_bed:yellow) )
                                  (count-once-per-external-objects pillowMovedToRoomCenter:red)
                                )
                              )
                              (* (total-time) (count pillowMovedToRoomCenter:yellow:dodgeball) (count-total pillowMovedToRoomCenter) (* (total-time) 100 )
                                (count pillowMovedToRoomCenter:yellow)
                                1
                              )
                            )
                            (count-same-positions pillowMovedToRoomCenter:basketball:golfball)
                          )
                          (total-score)
                          (external-forall-maximize
                            (count-same-positions pillowMovedToRoomCenter:beachball:bed)
                          )
                          (count pillowMovedToRoomCenter:red)
                          (count pillowMovedToRoomCenter:red)
                          (count pillowMovedToRoomCenter:doggie_bed)
                          (count-once-per-objects pillowMovedToRoomCenter:dodgeball)
                          (count-once pillowMovedToRoomCenter:green:beachball:pink)
                          (count-once-per-external-objects pillowMovedToRoomCenter:purple)
                          2
                        )
                      )
                    )
                    (count-once-per-objects pillowMovedToRoomCenter:alarm_clock)
                  )
                  300
                )
                (count pillowMovedToRoomCenter:green)
              )
              2
              (* (count pillowMovedToRoomCenter:bed:blue_dodgeball) 1 )
            )
          )
        )
        (count-once-per-objects pillowMovedToRoomCenter:basketball)
      )
      (>= (* (count pillowMovedToRoomCenter:side_table) (* (count-once-per-external-objects pillowMovedToRoomCenter:yellow) (+ (count-once pillowMovedToRoomCenter:blue_cube_block) (* (count pillowMovedToRoomCenter:beachball) )
            )
          )
        )
        5
      )
    )
    (> (count pillowMovedToRoomCenter:doggie_bed) (+ (* (* 4 15 )
          (count-once-per-objects pillowMovedToRoomCenter:pink)
        )
        (* 5 (not (> (count-total pillowMovedToRoomCenter:yellow_cube_block:pink) 6 )
          )
        )
        5
        (* (* (count pillowMovedToRoomCenter:golfball:blue_pyramid_block) 6 )
          2
        )
        (+ (* (external-forall-maximize (* (+ 9 5 )
              )
            )
            2
          )
          (count-once-per-objects pillowMovedToRoomCenter:beachball)
        )
      )
    )
  )
)
(:scoring
  (* (count-once-per-objects pillowMovedToRoomCenter:dodgeball) (* 1 6 (+ (- 15 )
      )
    )
  )
)
)

(define (game game-id-837) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?b - hexagonal_bin ?b10 - teddy_bear)
      (game-conserved
        (agent_holds bridge_block)
      )
    )
  )
)
(:constraints
  (and
    (preference throwFromBehindChairsInBin
      (exists (?h - flat_block)
        (then
          (once (not (forall (?b - wall ?b ?d ?s ?h - (either yellow pillow laptop)) (in_motion ?b) ) ) )
          (once (touch ?h ?h) )
          (hold-while (in_motion ?h) (and (adjacent_side rug ?h ?h) (in_motion ?h) ) )
        )
      )
    )
    (preference ballThrownToRug
      (exists (?w2 ?r ?p ?w1 ?c ?b - block)
        (then
          (once (and (in_motion ?b) (same_color ?c ?w1) ) )
          (hold (rug_color_under ?w2 ?b) )
          (once (agent_holds ?w2) )
        )
      )
    )
  )
)
(:terminal
  (>= 15 (count-once-per-objects throwFromBehindChairsInBin:golfball) )
)
(:scoring
  (count-once-per-objects ballThrownToRug:pink)
)
)

(define (game game-id-838) (:domain few-objects-room-v1)
(:setup
  (forall (?t - game_object)
    (game-optional
      (game_start )
    )
  )
)
(:constraints
  (and
    (preference blockInTowerAtEnd
      (exists (?b - hexagonal_bin)
        (then
          (once (on ?b ?b) )
          (once (not (not (and (on agent ?b) (agent_holds ?b) (in ?b ?b) (agent_holds ?b) ) ) ) )
          (once (not (and (in ?b bed) (on ?b floor) ) ) )
        )
      )
    )
    (preference throwAttempt
      (exists (?r - (either side_table pillow))
        (at-end
          (same_type ?r ?r)
        )
      )
    )
  )
)
(:terminal
  (> (count-once-per-objects blockInTowerAtEnd:pink_dodgeball) (not 8 ) )
)
(:scoring
  (* 2 (* (count throwAttempt:beachball) 1 )
  )
)
)

(define (game game-id-839) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (game_start )
  )
)
(:constraints
  (and
    (forall (?b - dodgeball)
      (and
        (preference throwAttempt
          (exists (?t - (either pyramid_block cellphone floor) ?g - block)
            (then
              (once (and (equal_z_position ?g ?g) (not (and (in ?b ?b) (and (agent_holds ?g) (in ?g ?g) (not (in_motion ?b) ) ) (and (in ?g ?b) (not (not (and (in_motion rug) (same_object ?g ?g) (and (above ?g bed) (same_type pink ?b) ) ) ) ) ) ) ) ) )
              (hold-for 3 (not (agent_holds ?b) ) )
              (once (not (= (distance desk agent) (distance rug ?b)) ) )
            )
          )
        )
      )
    )
    (preference itemsTurnedOff
      (exists (?b9 - dodgeball)
        (then
          (once (not (in_motion ?b9) ) )
        )
      )
    )
    (preference blueObjectMovedToRoomCenter
      (exists (?p2 - dodgeball)
        (at-end
          (agent_holds bed)
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* (count-once-per-objects throwAttempt:dodgeball) 8 )
      (* 3 2 3 (- 2 )
      )
    )
    (> (count-once-per-objects throwAttempt:yellow) 2 )
  )
)
(:scoring
  (count-measure throwAttempt:blue_dodgeball)
)
)

(define (game game-id-840) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?g - cube_block)
      (exists (?p1 ?w1 - hexagonal_bin)
        (game-conserved
          (not
            (and
              (not
                (adjacent ?p1 ?g)
              )
              (< 1 (distance green_golfball agent))
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference gameObjectToBin
      (exists (?l3 - cube_block)
        (then
          (hold (< (distance ?l3 ?l3) (distance_side ?l3 floor ?l3)) )
          (hold (in ?l3 front) )
          (once (game_start ) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ 7 (count-once-per-objects gameObjectToBin:book:red) )
    (count-once-per-objects gameObjectToBin:dodgeball:white)
  )
)
(:scoring
  (count-once-per-objects gameObjectToBin:blue_dodgeball:wall)
)
)

(define (game game-id-841) (:domain few-objects-room-v1)
(:setup
  (exists (?p2 - (either cube_block alarm_clock alarm_clock) ?g - teddy_bear)
    (game-optional
      (not
        (and
          (< (distance ?g ?g) (distance desk desk))
          (is_setup_object ?g)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownMissesEverything
      (exists (?o - curved_wooden_ramp)
        (then
          (hold (touch ?o ?o) )
          (hold-for 4 (not (not (on rug ?o) ) ) )
          (hold (and (not (in_motion room_center) ) (adjacent ?o ?o) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count ballThrownMissesEverything:pink) (total-score) )
)
(:scoring
  (not
    (count ballThrownMissesEverything:golfball)
  )
)
)

(define (game game-id-842) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (on bed bed)
  )
)
(:constraints
  (and
    (forall (?p2 - hexagonal_bin ?h - hexagonal_bin)
      (and
        (preference dodgeballThrownToBin
          (exists (?w1 - game_object)
            (at-end
              (not
                (and
                  (agent_holds agent)
                  (and
                    (on ?h ?w1)
                  )
                )
              )
            )
          )
        )
      )
    )
    (preference golfballInBinFromPillow
      (exists (?w1 - hexagonal_bin)
        (then
          (once (in_motion rug) )
          (hold-while (agent_holds desk) (and (touch ?w1 ?w1) (adjacent ?w1 ?w1) (not (< 0.5 8) ) ) )
          (once (not (and (not (agent_holds ?w1) ) (and (agent_holds agent) (and (and (agent_holds ?w1) (rug_color_under ?w1 ?w1) ) (>= (distance room_center ?w1) 6) ) ) ) ) )
          (any)
          (once (on ?w1 desk) )
        )
      )
    )
    (forall (?w1 - block)
      (and
        (preference throwAttemptFromDoor
          (exists (?d - hexagonal_bin)
            (then
              (once (not (or (rug_color_under ?d ?d) (same_type ?w1 ?w1) ) ) )
              (once (not (same_color ?d ?w1) ) )
              (hold (and (same_color ?w1 ?d) (and (in_motion ?w1) ) ) )
            )
          )
        )
      )
    )
    (forall (?r2 - chair)
      (and
        (preference smallItemsInPlace
          (exists (?l - (either key_chain key_chain yellow))
            (at-end
              (agent_holds ?r2)
            )
          )
        )
      )
    )
    (preference ballThrownToBin
      (exists (?w1 - pillow)
        (at-end
          (in_motion ?w1)
        )
      )
    )
    (preference throwBallToBinOffObject
      (exists (?h - (either game_object wall pyramid_block main_light_switch dodgeball alarm_clock cube_block))
        (then
          (once (in_motion agent) )
          (hold (in_motion ?h) )
          (once (not (in_motion ?h) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (or (* (* (* 2 (count-once-per-objects smallItemsInPlace:yellow_pyramid_block:hexagonal_bin) )
          (count ballThrownToBin:orange)
        )
        3
      )
      2
      (and
        (count smallItemsInPlace:dodgeball:white)
      )
    )
    (and
      (and
        (* 100 (* (count-once golfballInBinFromPillow:dodgeball) 1 )
          (count dodgeballThrownToBin:dodgeball)
          (not
            (* 3 12 )
          )
        )
        2
        (count-once-per-objects dodgeballThrownToBin:pink_dodgeball)
      )
    )
  )
)
(:scoring
  10
)
)

(define (game game-id-843) (:domain medium-objects-room-v1)
(:setup
  (forall (?t1 - building)
    (exists (?d - hexagonal_bin)
      (game-conserved
        (and
          (same_color agent ?t1)
          (on ?d right)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockInTowerAtEnd
      (exists (?c1 - block)
        (then
          (hold-while (and (between ?c1 bed ?c1) (not (game_start ) ) ) (in desk ?c1) (in ?c1 ?c1) (in_motion ?c1) )
          (hold-to-end (and (agent_holds ?c1) (and (or (and (< 6 1) (not (and (in_motion ?c1) (adjacent_side agent ?c1 ?c1 bed) (exists (?h - triangular_ramp) (in ?h ?h) ) (forall (?b - game_object) (or (adjacent ?c1 upside_down) (and (adjacent_side ?b bottom_shelf ?b ?b) (on ?c1 rug) ) ) ) ) ) ) (or (not (not (adjacent ?c1 ?c1) ) ) (above ?c1 ?c1) ) ) (in agent desk) ) ) )
          (once (= (distance_side ?c1 ?c1 ?c1 ?c1) 3) )
        )
      )
    )
    (preference throwAttempt
      (exists (?c4 - (either bridge_block pyramid_block) ?w - hexagonal_bin)
        (then
          (once (and (in_motion ?w) (not (and (in_motion ?w) (not (<= (distance ?w ?w) 6) ) ) ) ) )
          (hold (in_motion north_wall) )
          (hold (in_motion agent) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects blockInTowerAtEnd:white) (not (- (count throwAttempt:dodgeball) )
    )
  )
)
(:scoring
  20
)
)

(define (game game-id-844) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - (either side_table doggie_bed) ?b - hexagonal_bin)
      (and
        (game-optional
          (and
            (is_setup_object ?b)
            (and
              (in_motion ?b)
              (in_motion ?b)
            )
          )
        )
        (and
          (exists (?t1 - wall)
            (exists (?ob - dodgeball ?x - hexagonal_bin)
              (game-optional
                (and
                  (not
                    (not
                      (and
                        (in_motion ?t1)
                      )
                    )
                  )
                  (in agent ?b)
                )
              )
            )
          )
          (game-conserved
            (not
              (on ?b bed)
            )
          )
        )
        (and
          (forall (?o - cylindrical_block)
            (forall (?c1 - (either pink blue_cube_block alarm_clock) ?h - dodgeball ?p1 - game_object ?h - curved_wooden_ramp)
              (forall (?w2 - curved_wooden_ramp)
                (game-conserved
                  (not
                    (and
                      (not
                        (forall (?c - chair)
                          (agent_holds ?o)
                        )
                      )
                      (agent_holds ?o)
                    )
                  )
                )
              )
            )
          )
        )
        (game-conserved
          (not
            (in_motion bed)
          )
        )
        (exists (?b - cube_block ?f - hexagonal_bin)
          (game-optional
            (in front ?f)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference bigObjectThrownToBed
      (exists (?p - (either basketball) ?h - building)
        (then
          (once (in_motion agent) )
          (once (and (not (agent_holds ?h) ) (and (adjacent rug pink_dodgeball) (in_motion ?h) ) (in_motion ?h) ) )
          (hold-for 6 (not (agent_holds ?h) ) )
        )
      )
    )
    (preference blindsOpened
      (exists (?b6 - teddy_bear)
        (then
          (hold (adjacent ?b6 ?b6) )
          (once (and (in ?b6 desk) (on ?b6 ?b6) ) )
          (once (adjacent_side ?b6 ?b6 ?b6) )
        )
      )
    )
    (preference smallObjectThrownToBed
      (exists (?b3 - drawer)
        (then
          (once (on ?b3 ?b3) )
          (once (in_motion ?b3) )
          (once (not (in ?b3 ?b3) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects smallObjectThrownToBed:dodgeball:basketball:green) 5 )
)
(:scoring
  (+ (count-once blindsOpened:purple) (= (* (count-once-per-objects blindsOpened:red:yellow) (* (and (count-overlapping blindsOpened:blue_cube_block:yellow) ) (count bigObjectThrownToBed:blue_dodgeball) )
      )
      (count-measure blindsOpened:dodgeball)
    )
  )
)
)

(define (game game-id-845) (:domain few-objects-room-v1)
(:setup
  (exists (?r - hexagonal_bin)
    (game-conserved
      (adjacent_side agent bed left)
    )
  )
)
(:constraints
  (and
    (preference gameObjectToBin
      (exists (?h - dodgeball)
        (then
          (hold (agent_holds desk) )
          (once (and (agent_holds agent) (not (in_motion ?h) ) ) )
          (once (in_motion agent) )
        )
      )
    )
    (preference thrownBallReachesEnd
      (exists (?c - doggie_bed)
        (then
          (once (and (not (object_orientation ?c door) ) (and (adjacent ?c ?c) (not (and (not (agent_holds ?c) ) (touch front agent) ) ) (and (agent_holds ?c) (adjacent ?c front) ) (adjacent_side ?c ?c ?c ?c) ) (agent_holds rug) (and (not (not (exists (?d - cube_block) (adjacent ?d ?c) ) ) ) (touch upside_down ?c) ) (on ?c agent) (not (agent_holds agent) ) (in_motion ?c) ) )
          (hold (rug_color_under ?c pink) )
          (once (agent_holds ?c) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (count thrownBallReachesEnd:hexagonal_bin) 3 )
  )
)
(:scoring
  (* (and 12 ) 3 )
)
)

(define (game game-id-846) (:domain few-objects-room-v1)
(:setup
  (or
    (and
      (forall (?h - ball)
        (exists (?p - hexagonal_bin ?l2 - curved_wooden_ramp)
          (and
            (game-optional
              (agent_holds ?h)
            )
          )
        )
      )
    )
    (forall (?g - dodgeball)
      (game-conserved
        (= (distance_side ?g ?g ?g ?g))
      )
    )
  )
)
(:constraints
  (and
    (forall (?r - cube_block)
      (and
        (preference dodgeballFromBlockToBin
          (exists (?c3 - teddy_bear ?f - dodgeball)
            (then
              (once (not (agent_holds agent) ) )
              (once (agent_holds agent) )
              (once (not (= 6 1 (distance_side ?r ?r ?f)) ) )
            )
          )
        )
      )
    )
    (preference ballThrownToRampToBed
      (exists (?b - ball)
        (then
          (once (agent_holds agent) )
          (once (same_color ?b ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= (= (total-score) (+ (count-once-per-objects dodgeballFromBlockToBin:basketball) (* (count-once-per-objects ballThrownToRampToBed:doggie_bed) 2 )
        (* 6 (* (or 3 ) (* 5 (count-once-per-objects ballThrownToRampToBed:beachball) )
          )
        )
      )
    )
    (count dodgeballFromBlockToBin:dodgeball:triangle_block)
  )
)
(:scoring
  (count ballThrownToRampToBed:basketball)
)
)

(define (game game-id-847) (:domain many-objects-room-v1)
(:setup
  (exists (?o - triangular_ramp ?t1 - dodgeball)
    (game-conserved
      (on ?t1 ?t1)
    )
  )
)
(:constraints
  (and
    (forall (?db - (either cylindrical_block cube_block))
      (and
        (preference failedThrowAttempt
          (exists (?h - chair)
            (then
              (once (in_motion ?db) )
              (hold-while (on ?db ?db) (not (agent_holds ?h) ) )
              (once (and (and (on ?h ?h) (exists (?bl - (either pyramid_block alarm_clock) ?h - game_object) (agent_holds ?h) ) ) (not (in_motion ?h) ) ) )
            )
          )
        )
        (preference throwAttemptFromBehindBlock
          (exists (?d - block)
            (then
              (hold (or (in_motion agent) (in_motion pink_dodgeball) (agent_crouches ) ) )
              (once (in_motion ?d) )
              (hold-while (and (agent_holds ?db) (faces ?db agent) ) (object_orientation ?d ?d) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (count throwAttemptFromBehindBlock:red) )
)
(:scoring
  (* 4 (count failedThrowAttempt:pink_dodgeball) )
)
)

(define (game game-id-848) (:domain medium-objects-room-v1)
(:setup
  (forall (?t ?d - hexagonal_bin ?b2 - shelf ?o - building ?b6 - dodgeball ?r - cube_block)
    (game-conserved
      (and
        (< (distance agent ?r) (distance agent ?r))
        (and
          (not
            (in_motion ?r)
          )
          (object_orientation ?r ?r)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?d2 - game_object)
        (then
          (once (and (on back ?d2) (adjacent_side ?d2 ?d2 ?d2 desk) ) )
          (hold-while (in_motion ?d2) (and (exists (?b1 - tan_cube_block ?o3 ?b - doggie_bed) (in_motion agent) ) (agent_holds agent) ) (forall (?b - (either pillow laptop golfball)) (agent_holds agent) ) )
          (hold (in ?d2 rug) )
        )
      )
    )
  )
)
(:terminal
  (>= (- 2 )
    (- 7 )
  )
)
(:scoring
  1
)
)

(define (game game-id-849) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?b - pyramid_block)
      (exists (?h ?c - (either cellphone cylindrical_block desktop))
        (game-conserved
          (agent_holds ?b)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToChair
      (exists (?b5 - ball ?o - dodgeball ?b - chair)
        (at-end
          (in_motion ?b)
        )
      )
    )
    (preference redDodgeballThrownToBin
      (exists (?h ?o - (either red laptop golfball bridge_block))
        (then
          (once (not (not (touch agent ?h) ) ) )
          (once (in_motion ?o) )
          (once (and (agent_holds blue) (agent_holds ?o) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (- (count-once-per-objects redDodgeballThrownToBin:purple) (* (* (count-overlapping redDodgeballThrownToBin:triangle_block) (* 5 7 )
        )
        (count-once ballThrownToChair:yellow_cube_block:dodgeball)
        (+ (count redDodgeballThrownToBin:blue_dodgeball) 20 (+ (count-once-per-objects ballThrownToChair:dodgeball:dodgeball:orange) (count-once redDodgeballThrownToBin:green) (+ (- (count-once-per-objects redDodgeballThrownToBin:yellow_pyramid_block) )
              (count ballThrownToChair:hexagonal_bin:beachball)
            )
          )
        )
      )
    )
    (+ 3 (count-total ballThrownToChair:dodgeball) )
  )
)
(:scoring
  (or
    (* (+ (total-score) (+ (* 10 10 )
          (count ballThrownToChair:alarm_clock)
        )
      )
      (total-score)
    )
  )
)
)

(define (game game-id-850) (:domain many-objects-room-v1)
(:setup
  (exists (?b2 - pillow ?b - drawer)
    (forall (?h - (either tall_cylindrical_block floor desktop))
      (forall (?r - game_object)
        (exists (?r - hexagonal_bin ?b4 - cube_block)
          (and
            (forall (?d - block)
              (and
                (game-conserved
                  (< (distance_side agent ?b agent) 1)
                )
                (game-optional
                  (on blue desk)
                )
              )
            )
            (exists (?d - hexagonal_bin)
              (forall (?d - book)
                (and
                  (game-optional
                    (in_motion ?r)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference failedThrowAttempt
      (exists (?o4 - (either red wall main_light_switch))
        (then
          (once (not (agent_holds ?o4) ) )
          (once (is_setup_object ?o4) )
          (hold (agent_holds agent) )
        )
      )
    )
    (preference throwToBin
      (exists (?h - doggie_bed ?p - color)
        (then
          (hold (not (between ?p ?p ?p) ) )
          (once (and (and (touch ?p ?p) (on ?p ?p) (not (< (distance_side ?p agent ?p ?p) (distance ?p rug)) ) ) (in ?p ?p) ) )
          (hold (on bed ?p) )
        )
      )
    )
  )
)
(:terminal
  (>= (count failedThrowAttempt:dodgeball) 3 )
)
(:scoring
  5
)
)

(define (game game-id-851) (:domain few-objects-room-v1)
(:setup
  (forall (?h - hexagonal_bin)
    (and
      (exists (?c4 - hexagonal_bin)
        (game-optional
          (in ?c4 ?h)
        )
      )
      (game-optional
        (in rug ?h)
      )
      (exists (?db - hexagonal_bin)
        (and
          (game-conserved
            (in_motion ?db)
          )
          (forall (?o - (either pencil block flat_block) ?b1 ?b2 - cylindrical_block ?d ?g - hexagonal_bin)
            (game-optional
              (not
                (not
                  (in desk ?h)
                )
              )
            )
          )
          (game-conserved
            (same_color ?db ?db)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - drawer ?b1 - game_object)
      (and
        (preference bookOnDeskShelf
          (then
            (hold-for 8 (and (touch ?b1 bed) (not (touch ?b1 ?b1) ) ) )
            (hold (agent_holds ?b1) )
            (hold-while (and (not (agent_holds ?b1) ) (in ?b1 ?b1) ) (and (exists (?w1 - cube_block) (in ?b1 ?w1) ) (= (distance ?b1 ?b1)) (agent_holds ?b1) ) )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (- (count-once bookOnDeskShelf:dodgeball:golfball) )
    2
  )
)
(:scoring
  (external-forall-maximize
    15
  )
)
)

(define (game game-id-852) (:domain medium-objects-room-v1)
(:setup
  (forall (?h - (either cube_block cube_block dodgeball))
    (and
      (exists (?b - chair ?c - (either tall_cylindrical_block cylindrical_block dodgeball))
        (and
          (game-conserved
            (in_motion ?h)
          )
        )
      )
      (game-conserved
        (in door rug)
      )
      (exists (?t - hexagonal_bin ?c - pyramid_block)
        (exists (?b - (either mug ball) ?p - chair)
          (forall (?b1 - hexagonal_bin)
            (forall (?h - hexagonal_bin ?b9 - cube_block)
              (game-optional
                (agent_holds pink_dodgeball)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?o4 - dodgeball ?b ?w1 ?c3 - (either cellphone block) ?d ?b - hexagonal_bin)
        (at-end
          (in floor ?d)
        )
      )
    )
  )
)
(:terminal
  (> -10 3 )
)
(:scoring
  (count-once throwAttempt:beachball)
)
)

(define (game game-id-853) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?b2 - dodgeball)
      (exists (?p - doggie_bed)
        (game-conserved
          (adjacent bed ?b2)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o2 - chair)
      (and
        (preference pyramidBlockAtopTowerAtEnd
          (exists (?g - game_object)
            (then
              (once (and (and (agent_holds ?o2) (< (distance ?o2 ?o2) 1) ) (not (in_motion ?o2) ) (in_motion ?g) (adjacent ?g ?o2) ) )
              (hold-while (exists (?b2 ?c3 - cube_block) (< 0 (distance ?o2 ?o2)) ) (agent_holds rug) (and (not (in_motion ?o2) ) (faces ?g agent) ) )
              (once (and (adjacent ?g ?o2) (and (and (not (not (or (in ?o2 ?o2) (in ?g ?g) ) ) ) (adjacent ?o2 ?g) ) (in_motion ?g) ) ) )
            )
          )
        )
        (preference throwBallToBinOffObject
          (exists (?c - building)
            (then
              (once (on ?c ?o2) )
              (hold (in_motion ?c) )
              (once (and (not (not (and (adjacent_side desk agent ?o2) (on ?c ?o2) ) ) ) (agent_holds ?o2) ) )
            )
          )
        )
        (preference blockInTowerKnocked
          (exists (?d - hexagonal_bin)
            (then
              (once (not (agent_holds ?d) ) )
              (once (in_motion floor) )
              (once (in_motion ?o2) )
              (once (agent_holds ?d) )
              (hold (in_motion ?o2) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count throwBallToBinOffObject:purple) (+ 1 4 )
    )
  )
)
(:scoring
  (count throwBallToBinOffObject)
)
)

(define (game game-id-854) (:domain medium-objects-room-v1)
(:setup
  (exists (?c2 - hexagonal_bin)
    (forall (?o - block)
      (exists (?b8 ?b ?h - cube_block)
        (game-conserved
          (in_motion ?o)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToChair
      (exists (?c - game_object ?o - hexagonal_bin ?x - doggie_bed ?b - color)
        (then
          (once (in_motion ?b) )
          (once (not (not (< 1 (distance ?b ?b)) ) ) )
          (once (and (< (distance bed ?b) (distance ?b ?b)) (> (distance room_center front) 1) ) )
        )
      )
    )
    (preference ballKnocksBlockFromRug
      (exists (?d - curved_wooden_ramp)
        (then
          (once (not (= 5 3) ) )
          (hold-while (in_motion rug) (game_over ) )
          (hold (faces ?d ?d) )
        )
      )
    )
  )
)
(:terminal
  (or
    (< (+ 15 (+ 2 5 )
      )
      (- (count ballThrownToChair:pink) )
    )
    (or
      (>= (* (count ballKnocksBlockFromRug:yellow_cube_block) (- (* 3 (count-same-positions ballThrownToChair:beachball) )
          )
        )
        (* (+ (* (count ballThrownToChair:dodgeball:side_table) (count ballKnocksBlockFromRug:yellow) )
            (total-score)
          )
          (count ballThrownToChair:side_table)
        )
      )
    )
    (>= (* (+ (* (* (* (* 300 (count ballKnocksBlockFromRug:beachball) )
                18
              )
              (and
                (* (* 10 (count ballThrownToChair:tall_cylindrical_block) )
                  (* (count ballThrownToChair:pyramid_block) (count-overlapping ballKnocksBlockFromRug:dodgeball) )
                )
              )
            )
            (* (count ballThrownToChair:book) (count ballKnocksBlockFromRug:green:cylindrical_block) )
            8
          )
          0.7
          (* (count-once-per-external-objects ballKnocksBlockFromRug:dodgeball) 0 )
          (count-once-per-objects ballKnocksBlockFromRug:green)
        )
        (count-unique-positions ballKnocksBlockFromRug:red:pink)
      )
      5
    )
  )
)
(:scoring
  5
)
)

(define (game game-id-855) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (< 1 4)
  )
)
(:constraints
  (and
    (forall (?o - block)
      (and
        (preference throwToBinFromOppositeWall
          (exists (?d - curved_wooden_ramp ?c3 - chair)
            (at-end
              (and
                (in sideways desk)
                (same_type ?o agent)
              )
            )
          )
        )
        (preference dodgeballHitsBinBottom
          (exists (?d - dodgeball)
            (then
              (once (and (in ?o blue) (agent_holds ?o) ) )
              (hold-while (not (or (agent_holds ?d) (same_color ?d ?o) ) ) (in ?o ?d) (and (agent_holds ?d) (agent_holds floor) ) )
              (once (agent_holds agent) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (not
        (not
          (>= (count-once-per-objects throwToBinFromOppositeWall:dodgeball) (+ 180 (>= 3 (count throwToBinFromOppositeWall:dodgeball:red) )
            )
          )
        )
      )
      (not
        (<= (count-overlapping throwToBinFromOppositeWall:dodgeball) (count-once-per-objects throwToBinFromOppositeWall:dodgeball) )
      )
    )
    (> (count-once-per-objects dodgeballHitsBinBottom:basketball) (count dodgeballHitsBinBottom:pink_dodgeball) )
  )
)
(:scoring
  (* (count-once-per-objects dodgeballHitsBinBottom:yellow_cube_block) 5 )
)
)

(define (game game-id-856) (:domain medium-objects-room-v1)
(:setup
  (exists (?b6 - chair ?l1 - curved_wooden_ramp)
    (exists (?b - beachball ?c - cube_block ?h - dodgeball ?h - dodgeball)
      (game-optional
        (not
          (and
            (and
              (agent_holds ?l1)
              (< 2 (distance agent ?h))
              (faces ?h ?l1)
            )
            (in_motion ?l1)
            (on bed bed)
            (and
              (agent_holds ?l1)
              (on rug ?l1)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectOnBed
      (exists (?d - (either laptop dodgeball golfball))
        (at-end
          (> (distance_side desk ?d ?d room_center) (distance ?d ?d))
        )
      )
    )
  )
)
(:terminal
  (or
    (and
      (>= (total-time) 2 )
    )
    (>= 1 (total-score) )
  )
)
(:scoring
  (count-once-per-objects objectOnBed:beachball)
)
)

(define (game game-id-857) (:domain many-objects-room-v1)
(:setup
  (forall (?b7 - ball ?l1 - dodgeball)
    (forall (?h - building ?p2 - (either pyramid_block golfball))
      (and
        (and
          (game-optional
            (or
              (and
                (in_motion ?p2)
                (in_motion ?p2)
              )
              (equal_x_position ?p2 ?p2)
            )
          )
          (game-conserved
            (not
              (and
                (< 8 (distance desk desktop))
                (same_color floor ?l1)
              )
            )
          )
          (exists (?o - ball ?o - ball)
            (game-conserved
              (agent_holds ?o)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?b - shelf)
        (at-end
          (not
            (and
              (not
                (not
                  (in ?b ?b)
                )
              )
              (in ?b ?b)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count ballThrownToBin:orange) (- (count ballThrownToBin:golfball:hexagonal_bin) (total-time) ) )
)
(:scoring
  3
)
)

(define (game game-id-858) (:domain many-objects-room-v1)
(:setup
  (forall (?d - drawer ?d ?b - ball)
    (game-optional
      (toggled_on right)
    )
  )
)
(:constraints
  (and
    (preference throwBallToBinOffObject
      (exists (?b ?h ?w ?o1 ?f ?c - hexagonal_bin ?h - curved_wooden_ramp)
        (then
          (hold-while (toggled_on ?h) (and (> 0 (distance ?h ?h)) ) (>= 1 0) (on agent ?h) )
          (once (agent_holds desk) )
          (once (in ?h agent) )
        )
      )
    )
    (preference thrownObjectHitsComputer
      (exists (?c - curved_wooden_ramp)
        (then
          (once (same_type desk ?c) )
          (hold (or (in_motion rug) (in ?c left) ) )
          (once (and (in_motion door) (not (and (not (< 10 (distance ?c ?c)) ) (not (and (in_motion ?c) ) ) (not (and (exists (?w2 - game_object) (in_motion ?c) ) (in_motion ?c) ) ) (in ?c ?c) (not (agent_holds ?c) ) (and (agent_holds ?c) (not (not (agent_holds ?c) ) ) (in door ?c) ) ) ) ) )
        )
      )
    )
    (preference throwFromDoorToBin
      (exists (?p - dodgeball)
        (then
          (once (agent_holds ?p) )
          (hold-while (agent_holds ?p) (in_motion ?p) (on ?p ?p) )
          (hold (agent_holds floor) )
        )
      )
    )
  )
)
(:terminal
  (>= (- (* (- (+ (external-forall-maximize 0 ) (count-once-per-objects throwBallToBinOffObject:dodgeball) )
        )
        (* 2 (+ (* (+ (count throwBallToBinOffObject:dodgeball) (count throwBallToBinOffObject:green:golfball:beachball) )
            )
            (* (+ 2 8 60 )
              (count-increasing-measure throwFromDoorToBin:beachball)
            )
          )
          (+ 10 (- (count thrownObjectHitsComputer:golfball:blue_cube_block) )
          )
          10
        )
      )
      (count throwBallToBinOffObject:dodgeball)
    )
    30
  )
)
(:scoring
  (* 5 (count-unique-positions thrownObjectHitsComputer:dodgeball) )
)
)

(define (game game-id-859) (:domain medium-objects-room-v1)
(:setup
  (forall (?b - game_object)
    (exists (?b3 - dodgeball)
      (game-optional
        (exists (?b - cube_block ?ob - triangular_ramp ?bl - block)
          (not
            (and
              (agent_holds bed)
              (not
                (not
                  (and
                    (on ?b3 ?b3)
                    (touch ?bl ?b3)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockInTowerKnocked
      (exists (?p1 - block)
        (then
          (once (on bed ?p1) )
          (once (in_motion ?p1) )
        )
      )
    )
  )
)
(:terminal
  (< (+ 10 9 2 )
    (* (count blockInTowerKnocked:dodgeball) (count-once-per-objects blockInTowerKnocked:dodgeball) )
  )
)
(:scoring
  30
)
)

(define (game game-id-860) (:domain medium-objects-room-v1)
(:setup
  (exists (?x - tall_cylindrical_block)
    (not
      (exists (?c4 - hexagonal_bin)
        (game-conserved
          (and
            (and
              (not
                (touch ?x bed)
              )
              (in_motion ?x)
            )
            (or
              (same_color ?x ?c4)
              (same_color desk ?c4)
              (faces ?x ?x)
              (not
                (and
                  (not
                    (adjacent_side ?x ?c4 ?c4)
                  )
                  (= (x_position ?c4))
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockPlacedInBuilding
      (exists (?b1 - cube_block)
        (at-end
          (agent_holds rug)
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (* (count-once-per-objects blockPlacedInBuilding:cylindrical_block) (count-once blockPlacedInBuilding:pink_dodgeball) (count-once-per-objects blockPlacedInBuilding:cube_block) (* (* 1 (count blockPlacedInBuilding:cylindrical_block:blue_dodgeball) )
        (count-once-per-objects blockPlacedInBuilding:pink_dodgeball:blue_dodgeball)
      )
      (count blockPlacedInBuilding:red)
      10
    )
  )
)
(:scoring
  (count blockPlacedInBuilding)
)
)

(define (game game-id-861) (:domain medium-objects-room-v1)
(:setup
  (forall (?db - hexagonal_bin ?o1 - green_triangular_ramp ?g - building)
    (forall (?b4 - shelf ?b - dodgeball)
      (or
        (forall (?t2 - dodgeball ?w2 - hexagonal_bin)
          (game-conserved
            (adjacent bed ?g)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttemptFromDoor
      (exists (?l2 - hexagonal_bin ?c1 - ball)
        (then
          (hold (and (same_color ?c1 ?c1) (toggled_on desk) ) )
          (once (not (in ?c1 ?c1) ) )
          (once (not (in_motion ?c1) ) )
        )
      )
    )
    (forall (?h - hexagonal_bin)
      (and
        (preference ballDroppedInBin
          (exists (?b - (either pink alarm_clock doggie_bed))
            (then
              (once (exists (?h - chair) (not (not (touch ?h agent) ) ) ) )
              (once (not (not (not (on agent ?h) ) ) ) )
              (hold-while (in ?h ?b) (adjacent ?b ?b) )
            )
          )
        )
        (preference beachballOnRug
          (exists (?b - hexagonal_bin)
            (then
              (hold-while (on ?b south_west_corner) (and (in ?b ?b) (not (same_object ?h ?b) ) (and (agent_holds ?b) (and (touch ?h desk) ) ) ) (is_setup_object ?b) )
              (once (in_motion ?h) )
              (once (agent_holds pink_dodgeball) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (count-same-positions ballDroppedInBin:purple:dodgeball:green) (count-once-per-objects ballDroppedInBin:dodgeball) )
)
(:scoring
  180
)
)

(define (game game-id-862) (:domain few-objects-room-v1)
(:setup
  (forall (?b5 - beachball)
    (exists (?s - teddy_bear ?x - triangular_ramp)
      (and
        (exists (?o2 - ball)
          (game-conserved
            (agent_holds ?b5)
          )
        )
        (exists (?p1 - cube_block ?d ?o ?h ?b7 ?h ?b1 - dodgeball)
          (game-conserved
            (on room_center ?o)
          )
        )
        (game-optional
          (not
            (agent_holds ?b5)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballRolledOnRampToRug
      (exists (?b7 ?h ?h - game_object ?d ?c4 ?b5 - hexagonal_bin)
        (then
          (once (exists (?b7 - hexagonal_bin) (not (rug_color_under ?c4 ?c4) ) ) )
          (once (not (and (agent_holds ?d) (in_motion ?b5) ) ) )
          (once (equal_z_position ?d ?c4) )
        )
      )
    )
  )
)
(:terminal
  (>= 4 9 )
)
(:scoring
  (count ballRolledOnRampToRug:beachball:green)
)
)

(define (game game-id-863) (:domain medium-objects-room-v1)
(:setup
  (exists (?h - (either yellow_cube_block))
    (exists (?b1 - (either basketball alarm_clock pen))
      (and
        (exists (?t - ball)
          (game-optional
            (in ?h ?t)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToBinFromOppositeWall
      (exists (?b - curved_wooden_ramp)
        (then
          (once (and (agent_holds ?b) ) )
          (once (on ?b agent) )
          (hold-while (in ?b pink_dodgeball) (and (not (not (and (in_motion ?b) (and (open ?b) (not (opposite ?b ?b) ) ) ) ) ) (in_motion ?b) ) (and (in_motion ?b) (and (in ?b ?b) (not (in_motion ?b) ) ) (and (in_motion ?b) (touch ?b rug) (and (agent_holds ?b) (faces ?b door) ) ) (and (and (rug_color_under ?b agent) (not (in_motion ?b) ) ) (not (agent_holds ?b) ) (agent_holds ?b) (in_motion door) ) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (or
        (or
          (< (* (count-once throwToBinFromOppositeWall:dodgeball:beachball) (* (count throwToBinFromOppositeWall:pink_dodgeball) 4 (count throwToBinFromOppositeWall:golfball) (- (* 2 3 )
                )
                (* (total-score) (* (* (count-once-per-objects throwToBinFromOppositeWall:green) (count throwToBinFromOppositeWall:golfball) )
                    8
                  )
                )
              )
            )
            9
          )
        )
        (>= (count-once-per-external-objects throwToBinFromOppositeWall:dodgeball) 1 )
      )
      (or
        (>= 3 (* (count throwToBinFromOppositeWall:dodgeball) 5 )
        )
        (>= 2 15 )
      )
      (>= (count throwToBinFromOppositeWall:basketball) (count-once-per-objects throwToBinFromOppositeWall:purple) )
    )
  )
)
(:scoring
  (* (* (count-once-per-objects throwToBinFromOppositeWall:yellow) (count throwToBinFromOppositeWall:red) )
    300
  )
)
)

(define (game game-id-864) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-optional
      (agent_crouches )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToWallToAgent
      (exists (?l4 - dodgeball ?d - hexagonal_bin)
        (then
          (once (agent_holds floor) )
          (once (or (agent_holds agent) ) )
          (once (agent_holds ?d) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 2 20 )
  )
)
(:scoring
  (* 3 (count-once ballThrownToWallToAgent:dodgeball) )
)
)

(define (game game-id-865) (:domain few-objects-room-v1)
(:setup
  (exists (?h - dodgeball)
    (game-optional
      (touch ?h ?h)
    )
  )
)
(:constraints
  (and
    (preference smallObjectThrownToBed
      (exists (?h ?b ?p ?c ?p3 ?d - hexagonal_bin)
        (then
          (hold (and (agent_holds ?p3) (on ?b bed) ) )
          (once (and (agent_holds ?p3) (opposite ?c agent) (above ?b ?b) (same_object ?c east_sliding_door) ) )
          (hold (not (not (not (agent_holds ?b) ) ) ) )
        )
      )
    )
    (preference pillowMovedToRoomCenter
      (exists (?f - dodgeball)
        (then
          (forall-sequence (?p2 - cube_block)
            (then
              (hold (not (and (agent_holds ?p2) (in ?p2 rug) (agent_holds ?f) ) ) )
              (once (not (= (distance ?p2 ?p2) 0.5) ) )
              (once (agent_holds ?p2) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (count-once-per-objects smallObjectThrownToBed:pink_dodgeball) )
)
(:scoring
  (* (total-time) (count pillowMovedToRoomCenter:pink_dodgeball:dodgeball:blue_cube_block) )
)
)

(define (game game-id-866) (:domain medium-objects-room-v1)
(:setup
  (exists (?b - dodgeball ?h ?o1 ?l - (either laptop bridge_block) ?c - (either golfball golfball))
    (game-conserved
      (and
        (agent_holds ?c)
        (on agent ?c)
      )
    )
  )
)
(:constraints
  (and
    (preference blockInTowerAtEnd
      (exists (?h - ball)
        (then
          (once (and (agent_holds ?h) (in ?h ?h) (in_motion room_center) (on ?h ?h) (not (and (on ?h ?h) (on ?h ?h) (and (broken agent) (in_motion bed) (object_orientation agent ?h) ) (forall (?l ?p1 ?w1 ?p1 ?c1 ?h ?h ?o3 ?w1 ?s - dodgeball) (not (and (and (adjacent ?p1 desk) (in_motion ?c1) ) (not (rug_color_under ?w1 rug) ) (and (on green_golfball ?l) (not (in_motion left) ) ) ) ) ) ) ) (not (agent_holds ?h) ) ) )
          (hold (not (not (agent_holds ?h) ) ) )
          (hold (in_motion ?h) )
        )
      )
    )
  )
)
(:terminal
  (>= 8 (count blockInTowerAtEnd:red) )
)
(:scoring
  5
)
)

(define (game game-id-867) (:domain many-objects-room-v1)
(:setup
  (exists (?r - game_object)
    (forall (?b8 - block ?h - watch)
      (game-conserved
        (< (distance ?h ?r) (distance ?r ?h))
      )
    )
  )
)
(:constraints
  (and
    (forall (?ob - hexagonal_bin ?l - doggie_bed)
      (and
        (preference pyramidBlockAtopTowerAtEnd
          (exists (?b - (either cd triangle_block))
            (then
              (once (in_motion ?l) )
              (hold (and (not (and (adjacent_side ?l ?b ?b) (on ?l room_center) ) ) (not (<= (distance ?b ?b) 1) ) ) )
              (once (in_motion ?l) )
            )
          )
        )
        (preference matchingBuildingBuilt
          (exists (?o - color ?h - color)
            (then
              (once (adjacent ?l room_center) )
              (hold (and (not (not (same_type ?l ?l) ) ) (agent_crouches ) ) )
              (hold (and (in_motion ?h) (and (in ?l room_center) (in ?h ?l) (adjacent ?h ?l) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once matchingBuildingBuilt:basketball) (external-forall-maximize (count matchingBuildingBuilt) ) )
)
(:scoring
  5
)
)

(define (game game-id-868) (:domain many-objects-room-v1)
(:setup
  (exists (?b - teddy_bear ?w1 - wall)
    (and
      (and
        (and
          (game-conserved
            (on ?w1 ?w1)
          )
          (and
            (exists (?b1 - pyramid_block ?b8 - (either pyramid_block pencil dodgeball))
              (exists (?p1 - golfball ?b6 - cube_block)
                (exists (?b1 - hexagonal_bin)
                  (game-conserved
                    (in ?b8 ?b6)
                  )
                )
              )
            )
            (game-conserved
              (agent_holds ?w1)
            )
          )
          (game-optional
            (exists (?c - dodgeball)
              (< (distance ?c ?w1) 0.5)
            )
          )
        )
        (game-conserved
          (in_motion ?w1)
        )
      )
      (and
        (and
          (and
            (and
              (exists (?b - dodgeball)
                (or
                  (exists (?l - hexagonal_bin ?c4 - triangular_ramp)
                    (and
                      (and
                        (exists (?o ?c - chair)
                          (forall (?o - hexagonal_bin ?b5 - hexagonal_bin ?l1 - (either desktop teddy_bear cylindrical_block blue_cube_block hexagonal_bin blue_cube_block ball))
                            (exists (?c - dodgeball)
                              (forall (?o2 - hexagonal_bin)
                                (exists (?b - dodgeball ?h - hexagonal_bin)
                                  (not
                                    (and
                                      (game-optional
                                        (not
                                          (agent_holds ?o2)
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                  (game-optional
                    (in_motion agent)
                  )
                )
              )
            )
          )
          (forall (?ob - dodgeball)
            (and
              (exists (?o - hexagonal_bin)
                (game-conserved
                  (and
                    (= 0 9)
                    (adjacent ?ob ?ob)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttemptKnocksBlock
      (exists (?f - cube_block)
        (then
          (once (agent_holds floor) )
          (once (on ?f ?f) )
          (hold-while (not (same_color ?f ?f) ) (or (not (in_motion ?f) ) (and (not (and (faces ?f ?f) (and (or (agent_holds ?f) (not (agent_holds ?f) ) ) (and (in ?f ?f) (exists (?w2 - dodgeball) (touch brown ?f) ) ) ) ) ) ) ) (in_motion brown) (exists (?o - book) (not (not (or (in_motion agent) (not (and (adjacent ?o ?o) (same_color floor ?o) (>= 9 1) (above ?f ?o) (not (and (agent_holds ?f) (agent_holds pink) ) ) (or (not (and (and (and (agent_holds ?f) (exists (?b - pillow ?c2 - hexagonal_bin) (in_motion ?o) ) ) (game_start ) ) (and (equal_z_position ?o ?o) (not (agent_holds ?o) ) ) (adjacent_side ?o ?f ?o pillow) ) ) (in_motion ?o) ) (and (not (not (agent_holds ?f) ) ) (and (not (in_motion ?o) ) (not (in ?f ?o) ) (in_motion ?o) ) (not (in_motion rug) ) ) (not (not (= (distance ?o agent) (distance agent ?f)) ) ) (not (not (adjacent room_center agent) ) ) (and (and (not (and (agent_holds ?f) (and (and (in_motion ?o) (rug_color_under ?o ?o) ) (on desk ?f) ) ) ) (not (in_motion desk) ) ) (and (agent_holds ?o) (same_type ?o ?f) ) ) ) ) ) ) ) ) )
        )
      )
    )
    (forall (?c - cube_block)
      (and
        (preference throwInBin
          (at-end
            (and
              (on ?c ?c)
              (on ?c room_center)
            )
          )
        )
      )
    )
    (preference throwAttempt
      (exists (?h - pyramid_block)
        (then
          (once (equal_z_position ?h ?h) )
          (once (not (adjacent ?h ?h) ) )
          (once (agent_crouches ) )
        )
      )
    )
  )
)
(:terminal
  (<= 1 15 )
)
(:scoring
  (total-time)
)
)

(define (game game-id-869) (:domain few-objects-room-v1)
(:setup
  (forall (?p3 - dodgeball ?b - wall)
    (exists (?b3 - dodgeball)
      (game-optional
        (agent_holds agent)
      )
    )
  )
)
(:constraints
  (and
    (forall (?p - (either wall basketball cd))
      (and
        (preference dodgeballFromBlockToBin
          (exists (?h - hexagonal_bin ?b - wall)
            (then
              (once (toggled_on ?p) )
              (once (not (toggled_on ?b) ) )
              (once (on ?p room_center) )
            )
          )
        )
      )
    )
    (forall (?h - hexagonal_bin)
      (and
        (preference throwToBinFromDistance
          (at-end
            (rug_color_under desk ?h)
          )
        )
      )
    )
    (forall (?t1 - dodgeball)
      (and
        (preference blockFromRugToDesk
          (exists (?b4 - hexagonal_bin)
            (then
              (once (in ?b4 ?t1) )
              (hold (exists (?w1 - (either cube_block) ?b1 - golfball ?o5 ?d - dodgeball) (agent_holds ?t1) ) )
              (once (exists (?h - (either main_light_switch)) (not (not (and (or (on ?h agent) ) (on ?b4 ?t1) ) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (> 6 (- (count-once-per-external-objects blockFromRugToDesk:golfball:beachball) )
    )
    10
  )
)
(:scoring
  0
)
)

(define (game game-id-870) (:domain few-objects-room-v1)
(:setup
  (forall (?b - (either bridge_block basketball blue_cube_block) ?b2 ?d ?b3 ?l3 ?l ?c ?d ?l ?b ?p1 - cube_block)
    (forall (?c5 - hexagonal_bin)
      (game-optional
        (agent_holds agent)
      )
    )
  )
)
(:constraints
  (and
    (preference blindsOpened
      (exists (?c6 - hexagonal_bin)
        (then
          (hold (in_motion ?c6) )
          (hold (same_object ?c6 ?c6) )
          (hold (open ?c6) )
        )
      )
    )
    (preference ballThrownFromObjectToBin
      (exists (?l4 - cube_block)
        (at-end
          (adjacent ?l4 bed)
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (= 10 10 )
      (or
        (>= 3 (* (count ballThrownFromObjectToBin:beachball:beachball) 6 (count-longest blindsOpened:tan) )
        )
        (>= (total-score) (* (count-once blindsOpened:dodgeball) 2 )
        )
      )
      (or
        (>= 2 (and (count ballThrownFromObjectToBin:beachball) ) )
        (>= (* 2 4 (count-once-per-objects blindsOpened:yellow) (* (count ballThrownFromObjectToBin:basketball) (count-once-per-objects blindsOpened:basketball) )
            (external-forall-maximize
              3
            )
            (count ballThrownFromObjectToBin:golfball)
          )
          (+ 6 (> (* (count-once-per-external-objects ballThrownFromObjectToBin:pink) (external-forall-maximize (= (+ (* (count-once-per-objects ballThrownFromObjectToBin:wall:yellow_pyramid_block) 9 (count blindsOpened:red:blue_pyramid_block) )
                      0
                    )
                    (+ 1 (count blindsOpened:blue_dodgeball:dodgeball) )
                    (external-forall-maximize
                      (not
                        (* (count-once-per-external-objects blindsOpened:blue_cube_block:yellow_cube_block) (count-once-per-objects ballThrownFromObjectToBin:purple:white) )
                      )
                    )
                  )
                )
              )
              (count-once blindsOpened:hexagonal_bin)
            )
            7
          )
        )
      )
    )
    (or
      (or
        (>= (- 1 )
          2
        )
        (> (count blindsOpened:basketball) 2 )
      )
      (>= (+ (+ (* (total-score) (* (count blindsOpened:alarm_clock:blue_dodgeball) (* 10 (count-once-per-objects blindsOpened:orange) )
              )
            )
            (* (count-once-per-objects ballThrownFromObjectToBin:dodgeball:blue_pyramid_block) (count-once-per-external-objects ballThrownFromObjectToBin:dodgeball) )
            (count-once-per-objects ballThrownFromObjectToBin:yellow:blue_dodgeball)
            (count-once blindsOpened:dodgeball)
            (* (count-once-per-objects blindsOpened:wall) (+ 10 (count-longest blindsOpened:dodgeball:red) )
            )
            (* (count-once-per-objects ballThrownFromObjectToBin:basketball) 3 )
          )
          (count ballThrownFromObjectToBin:dodgeball)
        )
        (external-forall-maximize
          (or
            (count blindsOpened:golfball)
            (count ballThrownFromObjectToBin:green)
            (<= 0 (count-measure blindsOpened:yellow_cube_block:beachball) )
          )
        )
      )
    )
  )
)
(:scoring
  (* 30 3 )
)
)

(define (game game-id-871) (:domain medium-objects-room-v1)
(:setup
  (exists (?s - book ?h - hexagonal_bin)
    (and
      (and
        (forall (?o - hexagonal_bin ?c4 - ball ?d - ball)
          (and
            (game-conserved
              (above agent ?d)
            )
            (game-optional
              (agent_holds ?h)
            )
            (and
              (exists (?o - shelf)
                (and
                  (or
                    (exists (?o2 - dodgeball)
                      (game-conserved
                        (faces ?h ?o)
                      )
                    )
                    (game-optional
                      (same_color ?h ?d)
                    )
                  )
                )
              )
              (game-optional
                (not
                  (in_motion ?d)
                )
              )
              (forall (?p - cube_block)
                (and
                  (game-conserved
                    (and
                      (> (distance ?d ?h) 1)
                      (in_motion ?d)
                      (in ?p ?p)
                      (is_setup_object ?h)
                    )
                  )
                )
              )
            )
          )
        )
        (and
          (game-conserved
            (in_motion ?h)
          )
        )
        (and
          (forall (?h - game_object ?o - (either blue_cube_block dodgeball))
            (game-conserved
              (and
                (on ?o ?h)
                (forall (?w1 - red_dodgeball)
                  (forall (?r1 - hexagonal_bin)
                    (adjacent ?o ?h)
                  )
                )
              )
            )
          )
        )
      )
      (forall (?d - cube_block)
        (and
          (exists (?b8 - wall)
            (exists (?s - shelf)
              (forall (?h ?l - dodgeball)
                (exists (?b - hexagonal_bin ?w1 - game_object ?d - dodgeball)
                  (game-optional
                    (broken ?l)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?l - (either triangular_ramp triangle_block))
      (and
        (preference blockIncorrectlyPicked
          (exists (?p1 - curved_wooden_ramp)
            (then
              (hold (in ?p1 ?l) )
              (once (and (agent_holds ?l) (and (not (and (and (agent_holds ?l) (not (and (exists (?b - hexagonal_bin ?h - cube_block) (agent_holds rug) ) (in_motion ?p1) ) ) ) (not (in_motion agent) ) ) ) (in ?p1 ?p1) ) ) )
              (once (and (= 2 7) (not (and (agent_holds ?p1) (in ?p1 ?p1) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (* 2 (count blockIncorrectlyPicked:block) )
    2
  )
)
(:scoring
  (count blockIncorrectlyPicked:yellow)
)
)

(define (game game-id-872) (:domain many-objects-room-v1)
(:setup
  (exists (?h - golfball)
    (exists (?c6 - bridge_block ?b2 - hexagonal_bin)
      (game-conserved
        (agent_holds ?b2)
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - beachball ?db - cylindrical_block)
      (and
        (preference towerFallsWhileBuilding
          (exists (?l2 - hexagonal_bin ?bl - (either side_table hexagonal_bin mug))
            (at-end
              (toggled_on ?db)
            )
          )
        )
        (preference blockFromRugToDesk
          (exists (?o5 - hexagonal_bin)
            (then
              (hold-while (not (and (same_object bed ?o5) (and (and (agent_holds top_drawer) (not (in ?db ?o5) ) ) (and (and (touch ?o5 ?o5) (and (game_over ) (not (agent_holds ?o5) ) ) ) (on ?o5 ?db) ) ) ) ) (in_motion desk) (adjacent ?o5 ?db) )
              (hold-while (in_motion ?db) (not (and (is_setup_object rug) (and (in ?o5 ?db) ) (not (not (agent_holds back) ) ) ) ) )
              (hold (in room_center ?o5) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (count-once-per-objects towerFallsWhileBuilding:golfball) )
)
(:scoring
  6
)
)

(define (game game-id-873) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (agent_holds agent)
  )
)
(:constraints
  (and
    (preference objectInBuilding
      (exists (?b - hexagonal_bin)
        (then
          (once (between ?b block ?b) )
          (once (agent_holds front) )
          (hold (not (> 4 (distance ?b ?b)) ) )
          (hold (is_setup_object green_golfball) )
        )
      )
    )
  )
)
(:terminal
  (>= (count objectInBuilding:purple) (count objectInBuilding:purple) )
)
(:scoring
  (count objectInBuilding:dodgeball:hexagonal_bin)
)
)

(define (game game-id-874) (:domain many-objects-room-v1)
(:setup
  (forall (?c3 - doggie_bed)
    (game-optional
      (touch bed ?c3)
    )
  )
)
(:constraints
  (and
    (forall (?c1 - watch)
      (and
        (preference blockPlacedInBuilding
          (exists (?c - cube_block)
            (then
              (once (agent_holds east_sliding_door) )
              (once (and (or (on ?c1 rug) (and (and (agent_holds ?c) (in ?c1 ?c) ) (not (on ?c1 door) ) ) ) (not (in_motion room_center) ) (and (same_object bed desk) (not (agent_holds ?c) ) ) ) )
              (hold (not (in_motion agent) ) )
            )
          )
        )
      )
    )
    (preference otherObjectsOnDeskShelf
      (exists (?b1 - dodgeball)
        (at-end
          (adjacent ?b1 ?b1)
        )
      )
    )
  )
)
(:terminal
  (>= (count blockPlacedInBuilding:beachball:hexagonal_bin) 10 )
)
(:scoring
  3
)
)

(define (game game-id-875) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (not
      (in_motion desk)
    )
  )
)
(:constraints
  (and
    (preference throwAttemptFromBehindBlock
      (exists (?h - hexagonal_bin)
        (then
          (once (and (not (on green_golfball ?h) ) (in_motion ?h) (agent_holds ?h) (in_motion ?h) ) )
          (forall-sequence (?d - cube_block)
            (then
              (once (and (on ?h ?h) ) )
              (once (agent_holds ?h) )
              (once (and (not (equal_z_position ?h desk) ) (same_color floor ?h) ) )
            )
          )
          (once (adjacent ?h ?h) )
        )
      )
    )
    (preference throwToBinFromDistance
      (exists (?g - hexagonal_bin)
        (then
          (once (forall (?b - ball) (agent_holds ?b) ) )
          (once (not (touch ?g ?g) ) )
          (hold (in rug agent) )
        )
      )
    )
  )
)
(:terminal
  (> 10 (total-score) )
)
(:scoring
  (* (/ 10 (count throwAttemptFromBehindBlock:dodgeball:beachball:alarm_clock) ) 10 )
)
)

(define (game game-id-876) (:domain many-objects-room-v1)
(:setup
  (exists (?c - triangular_ramp)
    (and
      (exists (?d - cube_block)
        (game-conserved
          (not
            (agent_holds ?c)
          )
        )
      )
      (and
        (exists (?r1 - dodgeball)
          (and
            (exists (?t1 - hexagonal_bin ?b - cube_block ?b - hexagonal_bin)
              (and
                (and
                  (or
                    (exists (?o2 - dodgeball)
                      (game-conserved
                        (between ?c ?b ?c)
                      )
                    )
                  )
                )
                (forall (?c - dodgeball ?w2 - game_object)
                  (game-conserved
                    (adjacent ?w2 ?r1)
                  )
                )
              )
            )
          )
        )
      )
      (and
        (exists (?b1 - cube_block ?p3 - pyramid_block)
          (game-conserved
            (is_setup_object ?p3)
          )
        )
        (and
          (and
            (and
              (game-optional
                (on ?c room_center)
              )
              (game-optional
                (agent_holds ?c)
              )
              (game-conserved
                (and
                  (in_motion desk)
                  (and
                    (is_setup_object ?c)
                    (adjacent_side ?c blinds ?c ?c)
                  )
                )
              )
            )
            (forall (?s - color)
              (game-conserved
                (not
                  (in_motion ?s)
                )
              )
            )
            (game-conserved
              (exists (?c4 - (either laptop book dodgeball))
                (and
                  (or
                    (agent_holds ?c)
                    (on ?c4 ?c)
                  )
                  (and
                    (agent_holds ?c)
                    (not
                      (not
                        (touch bed ?c)
                      )
                    )
                  )
                )
              )
            )
          )
        )
        (game-conserved
          (adjacent rug rug)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - ball ?db - ball ?c - hexagonal_bin)
      (and
        (preference objectThrownFromRug
          (exists (?o4 - block)
            (then
              (hold (not (in ?o4 ?o4) ) )
              (forall-sequence (?b7 - curved_wooden_ramp ?b ?o4 ?t ?b - doggie_bed)
                (then
                  (once (equal_x_position ?t ?b) )
                  (once (and (and (same_object ?b ?o4) (touch ?t ?b) ) (agent_holds ?b) ) )
                  (hold (same_object ?b ?t) )
                )
              )
              (once (agent_holds desk) )
            )
          )
        )
      )
    )
    (forall (?b1 - dodgeball)
      (and
        (preference objectInBuilding
          (exists (?c2 - dodgeball ?b - block)
            (then
              (once (in_motion ?b) )
              (hold (and (in_motion bed) (agent_holds ?b) ) )
              (hold-while (in_motion ?b) (and (agent_holds bed) (agent_holds ?b) ) )
            )
          )
        )
        (preference bounceBallToBin
          (exists (?o4 - hexagonal_bin)
            (at-end
              (object_orientation ?b1 ?b1)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< (count-once-per-objects bounceBallToBin:basketball) 8 )
)
(:scoring
  (count bounceBallToBin:green)
)
)

(define (game game-id-877) (:domain many-objects-room-v1)
(:setup
  (exists (?o - dodgeball ?w - red_dodgeball)
    (and
      (and
        (and
          (game-optional
            (not
              (not
                (not
                  (on ?w pink_dodgeball)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference golfballInBinFromPillow
      (exists (?h ?d - hexagonal_bin)
        (then
          (once (and (agent_holds bed) (not (on ?d ?d) ) (on ?h ?d) ) )
          (once (in_motion ?d) )
          (hold (agent_holds ?h) )
        )
      )
    )
    (forall (?h - block)
      (and
        (preference throwToRampToBin
          (exists (?h - ball ?c4 - hexagonal_bin)
            (then
              (once (and (and (and (agent_holds ?h) (not (in_motion ?c4) ) ) (not (not (and (agent_holds ?h) (adjacent ?c4 bed) ) ) ) ) (touch ?h ?c4) (agent_holds ?h) ) )
              (once (in ?c4 ?c4) )
              (hold (< 1 (distance ?c4 ?c4)) )
            )
          )
        )
        (preference nonBlockPlacedInBuilding
          (then
            (hold (in_motion ?h) )
            (once (agent_holds ?h) )
            (hold (not (not (in_motion ?h) ) ) )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (external-forall-minimize (count-once-per-objects golfballInBinFromPillow:dodgeball:pink) ) (count-measure golfballInBinFromPillow:doggie_bed:pink_dodgeball) )
    2
  )
)
(:scoring
  (+ (* 0 (count-once-per-objects golfballInBinFromPillow:basketball) )
    (-
      (+ (count nonBlockPlacedInBuilding:red:beachball) 2 )
      (* (count nonBlockPlacedInBuilding:basketball) (count nonBlockPlacedInBuilding:dodgeball:pink) )
    )
  )
)
)

(define (game game-id-878) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (in_motion agent)
  )
)
(:constraints
  (and
    (preference bookOnDeskShelf
      (exists (?d - game_object ?d - dodgeball)
        (then
          (hold (not (not (agent_holds ?d) ) ) )
          (once (and (in_motion ?d) (and (broken top_shelf) (and (< 2 1) (on ?d ?d) ) ) ) )
          (once (equal_z_position ?d ?d) )
        )
      )
    )
    (forall (?w - chair ?h - cube_block ?tb - game_object)
      (and
        (preference throwAttempt
          (exists (?p - shelf ?bl ?d - (either tall_cylindrical_block chair))
            (then
              (once (agent_holds agent) )
              (once (exists (?d - ball ?c - pyramid_block) (not (or (in ?c ?bl) (exists (?h - cube_block) (faces agent pillow) ) ) ) ) )
              (hold (not (and (and (rug_color_under ?d ?bl) (not (not (>= 1 1) ) ) ) (on ?bl ?d) ) ) )
            )
          )
        )
      )
    )
    (preference ballThrownThroughRampAndBlocksToBin
      (exists (?p - golfball)
        (at-end
          (< 2 1)
        )
      )
    )
  )
)
(:terminal
  (>= 4 (total-score) )
)
(:scoring
  (count-once-per-objects ballThrownThroughRampAndBlocksToBin:dodgeball)
)
)

(define (game game-id-879) (:domain many-objects-room-v1)
(:setup
  (exists (?t - pillow)
    (game-optional
      (in ?t desk)
    )
  )
)
(:constraints
  (and
    (preference objectThrownFromRug
      (exists (?o - chair ?d1 - wall)
        (at-end
          (agent_holds ?d1)
        )
      )
    )
  )
)
(:terminal
  (or
    (> (count objectThrownFromRug:dodgeball) 6 )
  )
)
(:scoring
  10
)
)

(define (game game-id-880) (:domain medium-objects-room-v1)
(:setup
  (forall (?b3 - wall)
    (game-optional
      (agent_holds bed)
    )
  )
)
(:constraints
  (and
    (preference smallObjectThrownToBed
      (exists (?w1 - dodgeball ?s - dodgeball ?h - (either mug pen) ?w - cube_block)
        (then
          (hold-while (not (in agent ?w) ) (in ?w ?w) )
          (once (in_motion ?w) )
        )
      )
    )
    (preference bookOnDeskShelf
      (exists (?t - cube_block)
        (then
          (hold-while (agent_crouches ) (agent_holds bed) (in_motion ?t) )
          (once (touch ?t ?t) )
          (once (exists (?b - game_object) (and (touch ?t ?b) (in_motion side_table) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (* (* (* (count smallObjectThrownToBed:yellow) 60 )
          (count bookOnDeskShelf:pyramid_block)
        )
        (count bookOnDeskShelf:basketball)
      )
      300
    )
    10
  )
)
(:scoring
  (* 2 2 )
)
)

(define (game game-id-881) (:domain few-objects-room-v1)
(:setup
  (forall (?t2 - (either bridge_block) ?b - teddy_bear)
    (game-conserved
      (and
        (in ?b ?b)
        (not
          (and
            (in_motion ?b)
            (on ?b desk)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToChair
      (exists (?c - block)
        (then
          (hold (not (and (adjacent rug ?c) (not (and (agent_holds desk) (adjacent rug ?c) ) ) ) ) )
          (once (and (and (game_over ) (and (> 1 (distance ?c desk)) (not (and (in_motion ?c) (>= 1 10) ) ) ) (not (agent_holds ?c) ) (in ?c ?c) ) (not (not (adjacent ?c ?c) ) ) (not (object_orientation ?c ?c) ) ) )
          (once (and (object_orientation ?c west_wall) (in_motion ?c) ) )
        )
      )
    )
    (preference ballInOrOnBin
      (exists (?b - curved_wooden_ramp)
        (then
          (once (agent_holds ?b) )
          (once (touch ?b ?b) )
          (once (and (in ?b ?b) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects ballThrownToChair:pink) 10 )
)
(:scoring
  (count-once ballThrownToChair:pyramid_block)
)
)

(define (game game-id-882) (:domain medium-objects-room-v1)
(:setup
  (forall (?d - curved_wooden_ramp)
    (exists (?r2 - chair ?h - pillow ?p2 - game_object ?h ?tb ?c ?w2 ?h ?c - (either hexagonal_bin laptop cube_block))
      (exists (?c6 - (either basketball dodgeball))
        (and
          (forall (?c - tall_cylindrical_block)
            (exists (?b9 - hexagonal_bin)
              (exists (?d - hexagonal_bin)
                (game-conserved
                  (in_motion agent)
                )
              )
            )
          )
          (exists (?c - dodgeball)
            (game-conserved
              (agent_holds ?c)
            )
          )
          (game-conserved
            (and
              (agent_holds ?c)
              (in_motion ?c6)
            )
          )
          (forall (?d - hexagonal_bin)
            (game-optional
              (agent_holds ?tb)
            )
          )
          (game-optional
            (in_motion ?w2)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - chair)
      (and
        (preference cubeBlockFromBedToShelf
          (exists (?h - (either pyramid_block golfball) ?b7 - red_dodgeball ?w2 - flat_block ?l ?c - color)
            (then
              (once (in_motion ?l) )
              (hold (in_motion ?c) )
              (hold-while (game_over ) (touch ?h ?l) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (<= (* (count-once-per-objects cubeBlockFromBedToShelf:beachball) (* (total-score) (count-once-per-objects cubeBlockFromBedToShelf:brown) )
      )
      (+ 10 )
    )
    (or
      (< (- 15 (* (* (external-forall-maximize (+ (count cubeBlockFromBedToShelf:basketball) (count cubeBlockFromBedToShelf:basketball) )
              )
              (count cubeBlockFromBedToShelf:red_pyramid_block)
            )
            8
            (count cubeBlockFromBedToShelf:book)
            (count-once cubeBlockFromBedToShelf:orange)
          )
        )
        (count cubeBlockFromBedToShelf:dodgeball)
      )
    )
    (>= (count-same-positions cubeBlockFromBedToShelf:dodgeball) (external-forall-maximize (count cubeBlockFromBedToShelf:basketball) ) )
  )
)
(:scoring
  10
)
)

(define (game game-id-883) (:domain many-objects-room-v1)
(:setup
  (forall (?h - hexagonal_bin)
    (game-optional
      (and
        (on ?h floor)
        (and
          (agent_holds ?h)
          (agent_holds ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - dodgeball)
      (and
        (preference baseBlockInTowerAtEnd
          (exists (?b - ball)
            (then
              (hold (and (not (touch ?h desk) ) (same_color agent ?b) ) )
              (once (agent_holds ?h) )
              (hold (and (in_motion ?h) (not (in_motion ?b) ) ) )
              (once (touch ?b ?h) )
            )
          )
        )
      )
    )
    (preference itemsTurnedOff
      (exists (?b - cylindrical_block)
        (then
          (once (in_motion ?b) )
          (once (and (and (< 1 1) (agent_holds ?b) ) (in_motion ?b) ) )
          (once (in_motion desk) )
        )
      )
    )
    (preference ballThrownHitsAgent
      (exists (?c - chair ?t - hexagonal_bin)
        (at-end
          (or
            (agent_holds agent)
            (agent_holds ?t)
            (agent_holds room_center)
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count itemsTurnedOff:hexagonal_bin) (external-forall-maximize 10 ) )
    (count ballThrownHitsAgent:golfball)
  )
)
(:scoring
  2
)
)

(define (game game-id-884) (:domain many-objects-room-v1)
(:setup
  (exists (?h - hexagonal_bin)
    (exists (?o1 - hexagonal_bin)
      (game-optional
        (on agent ?o1)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrowAttempt
      (exists (?b - bridge_block ?b2 - (either golfball dodgeball))
        (then
          (once (in_motion ?b2) )
          (hold (in_motion rug) )
          (once (and (not (between ?b2 agent ?b2) ) (same_color desk ?b2) ) )
        )
      )
    )
    (preference objectInBuilding
      (exists (?b - dodgeball ?t - dodgeball)
        (then
          (hold-while (<= 2 9) (and (not (not (not (and (agent_holds ?t) ) ) ) ) (and (not (and (and (in_motion ?t) ) (same_object ?t rug) ) ) (agent_holds bed) ) ) (in_motion room_center) )
          (once (on ?t agent) )
          (hold (in_motion ?t) )
        )
      )
    )
    (forall (?c3 - building ?h - (either book dodgeball))
      (and
        (preference throwBallToDoggieBedOffWall
          (exists (?h - hexagonal_bin)
            (then
              (once (in_motion bed) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 5 5 )
)
(:scoring
  (- (- (* (count objectInBuilding:red) (* (count-once-per-objects ballThrowAttempt) (/ 5 (+ 10 2 (+ 30 (+ 10 (* (count-once-per-objects throwBallToDoggieBedOffWall:purple) (* 5 (* (* (* 0.5 (+ 2 (count-once-per-objects throwBallToDoggieBedOffWall:dodgeball) )
                          )
                          (count-once-per-objects objectInBuilding:blue_pyramid_block:basketball)
                        )
                        10
                        6
                      )
                    )
                  )
                )
                (+ 1 (count ballThrowAttempt:dodgeball:pink) 50 0.5 )
                5
              )
              (count ballThrowAttempt:blue_dodgeball)
              (+ (count-once-per-objects throwBallToDoggieBedOffWall:basketball) (count-unique-positions objectInBuilding:hexagonal_bin:pink:dodgeball) )
              (count-once-per-objects throwBallToDoggieBedOffWall:dodgeball:cube_block)
              300
            )
          )
        )
      )
      (count-once-per-objects ballThrowAttempt:red_pyramid_block)
    )
  )
)
)

(define (game game-id-885) (:domain few-objects-room-v1)
(:setup
  (exists (?t - hexagonal_bin)
    (and
      (or
        (game-conserved
          (not
            (not
              (> 1 2)
            )
          )
        )
        (not
          (game-optional
            (touch ?t ?t)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - game_object)
      (and
        (preference throwToDrawerOrBin
          (then
            (once (and (and (broken ?h) (and (and (agent_holds ?h) (opposite floor ?h) ) (not (< 0.5 (distance ?h sideways)) ) ) (and (touch ?h bed) (agent_holds ?h) ) ) (< 1 (distance side_table ?h)) ) )
            (hold (agent_holds ?h) )
            (once (between ?h ?h ?h) )
            (once (same_object ?h ?h) )
            (once (rug_color_under ?h ?h) )
          )
        )
        (preference failedThrowAttempt
          (then
            (once (< (distance ?h ?h) 2) )
            (hold (in_motion ?h) )
            (once (not (agent_holds ?h) ) )
          )
        )
      )
    )
    (preference ballThrownToRampToBed
      (exists (?b ?c - dodgeball)
        (then
          (once (equal_x_position ?c sideways) )
          (once (in_motion ?c) )
          (once (not (faces desk ?c) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once failedThrowAttempt:basketball) 10 )
)
(:scoring
  8
)
)

(define (game game-id-886) (:domain few-objects-room-v1)
(:setup
  (exists (?ob - hexagonal_bin ?b4 - hexagonal_bin)
    (exists (?g - dodgeball)
      (forall (?d - dodgeball ?h - cube_block)
        (exists (?f - dodgeball)
          (exists (?b - hexagonal_bin)
            (exists (?b5 - hexagonal_bin)
              (game-conserved
                (exists (?d - tan_cube_block)
                  (and
                    (in_motion bed)
                    (agent_holds ?b)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference pyramidBlockAtopTowerAtEnd
      (exists (?b - block)
        (then
          (once (in_motion ?b) )
          (hold-while (not (or (not (same_color agent ?b) ) (not (in_motion ?b) ) ) ) (and (or (and (not (in_motion ?b) ) (or (in_motion ?b) (and (agent_holds ?b) (and (in_motion back) (agent_holds ?b) ) ) ) ) (not (in_motion ?b) ) ) (touch ?b ?b) ) )
          (hold (in ?b rug) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 5 (- (* 5 (external-forall-maximize 10 ) (- (count pyramidBlockAtopTowerAtEnd:basketball) )
          (count-measure pyramidBlockAtopTowerAtEnd:golfball)
        )
      )
    )
    (external-forall-maximize
      2
    )
  )
)
(:scoring
  5
)
)

(define (game game-id-887) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (exists (?d - dodgeball)
        (and
          (exists (?b - block)
            (game-conserved
              (and
                (not
                  (not
                    (same_color ?d ?b)
                  )
                )
                (exists (?d - cube_block)
                  (not
                    (agent_holds ?d)
                  )
                )
                (and
                  (touch yellow ?b)
                  (or
                    (= 5 0.5)
                    (not
                      (adjacent ?d ?b)
                    )
                  )
                )
              )
            )
          )
          (and
            (game-optional
              (and
                (in ?d ?d)
                (not
                  (and
                    (touch ?d ?d)
                    (in_motion ?d)
                  )
                )
              )
            )
            (exists (?b - dodgeball ?r - dodgeball ?c - (either ball cylindrical_block beachball golfball doggie_bed lamp dodgeball))
              (game-optional
                (agent_holds ?c)
              )
            )
          )
          (exists (?b ?h ?p - hexagonal_bin ?h - game_object)
            (game-conserved
              (same_object ?h ?h)
            )
          )
        )
      )
    )
    (exists (?l2 - pillow ?f - hexagonal_bin)
      (forall (?o2 ?l - yellow_cube_block ?b3 - hexagonal_bin)
        (game-conserved
          (not
            (or
              (agent_holds ?b3)
              (and
                (touch ?b3 ?f)
                (< (distance upright rug) 1)
              )
            )
          )
        )
      )
    )
    (exists (?p - shelf)
      (exists (?b1 - hexagonal_bin)
        (game-conserved
          (adjacent ?p ?p)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference pyramidBlockAtopTowerAtEnd
      (exists (?w1 - building ?l4 - hexagonal_bin)
        (then
          (hold (and (agent_holds ?l4) (and (between ?l4 ?l4 ?l4) (on agent ?l4) ) ) )
          (hold (in_motion ?l4) )
          (once (or (touch ?l4 ?l4) (in_motion ?l4) ) )
        )
      )
    )
    (preference ballThrownFromDoor
      (exists (?d1 - hexagonal_bin)
        (then
          (hold-while (same_object ?d1 ?d1) (not (touch left agent) ) (adjacent bed ?d1) )
          (hold-while (forall (?d - curved_wooden_ramp) (and (agent_holds pink_dodgeball) (same_object ?d ?d1) ) ) (agent_holds ?d1) )
          (once (exists (?l - hexagonal_bin ?l3 ?c - game_object) (in_motion ?c) ) )
        )
      )
    )
    (forall (?b9 ?c1 ?g - ball ?h - wall ?b - beachball)
      (and
        (preference dodgeballFromRugToBin
          (exists (?ob - game_object)
            (then
              (once (and (and (and (in ?ob ?ob) (on ?ob ?ob) (agent_holds ?b) ) (and (and (faces ?ob ?b) (agent_holds ?b) ) (and (agent_holds ?b) (not (in door ?b) ) ) ) ) (in_motion door) ) )
              (once (not (<= (distance ?ob ?b) 1) ) )
              (hold-while (on ?b ?b) (not (not (on top_drawer desk) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count dodgeballFromRugToBin:basketball) (total-score) )
)
(:scoring
  (count dodgeballFromRugToBin:beachball)
)
)

(define (game game-id-888) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c1 - dodgeball ?d - dodgeball ?h - dodgeball)
      (game-conserved
        (in_motion ?h)
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttemptKnocksBlock
      (exists (?d - doggie_bed)
        (then
          (once (agent_holds ?d) )
          (hold (and (equal_z_position ?d ?d) (not (or (and (agent_holds ?d) (on ?d ?d) ) (touch ?d ?d) (in_motion ?d) ) ) ) )
          (forall-sequence (?o - hexagonal_bin)
            (then
              (hold (in ?o ?o) )
              (hold (in_motion desk) )
              (once (in_motion ?d) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (> 300 (count-same-positions throwAttemptKnocksBlock:beachball) )
    (or
      (>= 6 (* (* (count-once throwAttemptKnocksBlock:red:top_drawer) (* 10 (count throwAttemptKnocksBlock:yellow) )
          )
          (* (total-score) (* (+ (total-time) (* 30 2 (and (count throwAttemptKnocksBlock:red:book) (- (count throwAttemptKnocksBlock:bed:wall) )
                    10
                  )
                )
              )
              (- 5 )
            )
          )
        )
      )
      (<= (> 9 (count-shortest throwAttemptKnocksBlock:basketball) )
        (* (count-once throwAttemptKnocksBlock:orange:beachball) 8 )
      )
    )
  )
)
(:scoring
  (count-once throwAttemptKnocksBlock:beachball)
)
)

(define (game game-id-889) (:domain medium-objects-room-v1)
(:setup
  (exists (?t - wall)
    (game-optional
      (and
        (or
          (in_motion ?t)
        )
        (touch ?t ?t)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?s - hexagonal_bin ?h - dodgeball)
        (at-end
          (not
            (in agent ?h)
          )
        )
      )
    )
    (forall (?r - hexagonal_bin ?s - dodgeball)
      (and
        (preference tanObjectMovedToRoomCenter
          (exists (?l - (either alarm_clock cube_block))
            (then
              (once (same_color south_west_corner ?s) )
              (once (= 1 (distance ?l ?l)) )
              (once (and (agent_holds ?l) (on ?l ?l) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-increasing-measure ballThrownToBin) (count ballThrownToBin:red) )
)
(:scoring
  (count-once-per-objects tanObjectMovedToRoomCenter:golfball:dodgeball)
)
)

(define (game game-id-890) (:domain medium-objects-room-v1)
(:setup
  (exists (?b - wall ?l2 - (either golfball dodgeball))
    (forall (?o5 - (either key_chain beachball))
      (forall (?o - sliding_door ?o - (either alarm_clock pen))
        (and
          (and
            (or
              (forall (?b - doggie_bed ?b - (either cylindrical_block golfball dodgeball))
                (game-conserved
                  (exists (?d - ball)
                    (and
                      (not
                        (in_motion front)
                      )
                      (in_motion ?b)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference cubeThrownToBin
      (exists (?g - cube_block)
        (at-end
          (in desk ?g)
        )
      )
    )
    (preference pillowThrownToDoggieBed
      (exists (?b - game_object)
        (at-end
          (agent_crouches )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (- (+ (count cubeThrownToBin:block) (not (* (count-once-per-objects cubeThrownToBin:red_pyramid_block) 4 )
          )
        )
      )
      8
    )
    (- 4 )
  )
)
(:scoring
  (count cubeThrownToBin:pink:dodgeball)
)
)

(define (game game-id-891) (:domain medium-objects-room-v1)
(:setup
  (forall (?c3 - hexagonal_bin ?s - dodgeball)
    (game-conserved
      (in_motion ?s)
    )
  )
)
(:constraints
  (and
    (forall (?tb - dodgeball ?t - hexagonal_bin)
      (and
        (preference ballThrownToBin
          (exists (?c5 - dodgeball)
            (then
              (once (agent_holds ?t) )
              (once (and (agent_holds ?t) (above ?c5 ?t) ) )
              (once (not (not (and (in_motion ?c5) (in ?t ?c5) ) ) ) )
            )
          )
        )
      )
    )
    (preference ballThrownThroughRampAndBlocksToBin
      (exists (?c6 ?h - dodgeball)
        (then
          (once (exists (?c1 - ball) (in_motion ?c6) ) )
          (hold (and (and (in_motion ?h) (and (in_motion rug) (in_motion ?c6) (faces ?c6 rug) ) ) (and (in ?h ?h) (and (agent_holds ?c6) (not (and (and (and (adjacent front_left_corner ?c6) (not (and (is_setup_object ?h) (object_orientation pink ?c6) (agent_holds blue) (agent_holds ?h) ) ) ) (agent_holds ?c6) ) (on ?h ?h) ) ) ) ) (and (and (not (on ?h ?h) ) (in_motion ?c6) ) (on ?h ?h) ) ) )
          (once-measure (not (toggled_on ?c6) ) (distance ?h agent) )
        )
      )
    )
  )
)
(:terminal
  (>= 3 5 )
)
(:scoring
  (+ (* (count-once-per-objects ballThrownThroughRampAndBlocksToBin:dodgeball:dodgeball) 9 (< 5 (count ballThrownToBin:beachball) )
    )
    (* (count-unique-positions ballThrownToBin:red:basketball) 20 (- 5 )
    )
    (* 5 7 )
    7
    (total-score)
    (* (external-forall-minimize (* (count ballThrownThroughRampAndBlocksToBin:pink_dodgeball:hexagonal_bin) (external-forall-maximize 1 ) (count-overlapping ballThrownThroughRampAndBlocksToBin:basketball:dodgeball) )
      )
      (* 8 (* 2 (count ballThrownToBin:golfball:orange) )
      )
      (count ballThrownToBin:pink)
    )
  )
)
)

(define (game game-id-892) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?c3 - hexagonal_bin)
      (game-conserved
        (in_motion ?c3)
      )
    )
    (and
      (and
        (exists (?h - block)
          (game-conserved
            (not
              (agent_holds ?h)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?d - hexagonal_bin)
        (then
          (once (exists (?bl - cube_block) (agent_holds ?d) ) )
          (hold (not (not (and (and (and (not (in_motion ?d) ) (in ?d ?d) ) (and (> 9 1) (same_object ?d ?d) ) ) (exists (?c - beachball ?l - book) (not (on agent ?l) ) ) ) ) ) )
          (once (adjacent ?d ?d) )
        )
      )
    )
    (forall (?p - hexagonal_bin ?b - (either dodgeball dodgeball) ?ob - dodgeball)
      (and
        (preference nonBlockPlacedInBuilding
          (exists (?b2 - hexagonal_bin)
            (then
              (once (on ?ob ?b2) )
              (once (and (and (in_motion ?ob) (and (and (and (and (not (on ?ob ?b2) ) (and (agent_holds ?b2) (in ?b2 ?ob) ) ) (in bridge_block ?ob) ) (in_motion agent) (in_motion ?ob) (agent_holds agent) (and (on ?b2 ?b2) (on agent ?ob) ) (opposite agent desk) (in_motion floor) (on ?b2 bed) ) (and (and (and (in_motion ?ob) (touch ?ob ?b2) ) (and (agent_holds ?ob) (equal_z_position ?ob ?b2) ) (not (not (adjacent ?b2 ?b2) ) ) (agent_holds ?ob) (agent_holds ?b2) (agent_holds ?ob) (not (not (and (and (on ?b2 ?ob) ) (agent_holds ?ob) ) ) ) ) (not (in_motion ?ob) ) (in_motion ?ob) ) (adjacent_side ?ob ?b2 ?ob) ) ) (and (not (not (in_motion ?b2) ) ) (agent_holds ?b2) ) (agent_crouches ) ) )
              (hold (touch desk ?ob) )
            )
          )
        )
        (preference blockToBinFromRug
          (exists (?p2 - cube_block ?bl - ball)
            (then
              (once (and (not (is_setup_object ?bl) ) (in ?ob ?ob) ) )
              (once (adjacent_side room_center ?ob ?bl) )
              (once (not (in ?bl ?bl) ) )
              (once (and (and (and (< 1 1) (exists (?o4 - (either doggie_bed dodgeball)) (agent_holds ?o4) ) ) (on ?ob agent) ) (not (and (object_orientation pink ?bl) (and (exists (?o - hexagonal_bin ?h - dodgeball) (same_color ?h ?h) ) (agent_holds pink_dodgeball) ) ) ) (in ?ob ?ob) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (count-once-per-objects blockToBinFromRug:dodgeball) (count blockToBinFromRug) )
    (>= (* (+ 3 (* (* (* (external-forall-minimize 5 ) (* 1 (* (- (count blockToBinFromRug:green:hexagonal_bin) )
                    (+ (* (count blockToBinFromRug:dodgeball:side_table) 1 )
                      (+ 18 (count-once-per-objects throwBallToBin:dodgeball) )
                    )
                  )
                )
                3
              )
              (count-once-per-objects nonBlockPlacedInBuilding:yellow)
              (count-measure throwBallToBin:dodgeball)
            )
            (* (count-increasing-measure nonBlockPlacedInBuilding:blue_cube_block:beachball:basketball) 10 )
          )
        )
        (count nonBlockPlacedInBuilding:green)
      )
      4
    )
    (>= (* 2 (count nonBlockPlacedInBuilding:golfball:basketball) )
      (total-score)
    )
  )
)
(:scoring
  (+ (* (* (count-same-positions blockToBinFromRug) (count throwBallToBin:basketball) )
      (count throwBallToBin:dodgeball)
    )
    (count-once-per-objects nonBlockPlacedInBuilding:blue_cube_block)
  )
)
)

(define (game game-id-893) (:domain few-objects-room-v1)
(:setup
  (exists (?bl - dodgeball)
    (and
      (game-conserved
        (equal_z_position ?bl ?bl)
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballHitsPillowWithoutTouchingBlock
      (exists (?db - teddy_bear ?d - sliding_door)
        (then
          (hold (in_motion ?d) )
          (hold (not (in_motion desk) ) )
          (once (agent_holds ?d) )
        )
      )
    )
    (preference cubeThrownToBin
      (exists (?d - (either cube_block desktop) ?g - block)
        (then
          (once (in_motion ?g) )
          (once (in_motion ?g) )
          (once (and (agent_holds ?g) (forall (?h - hexagonal_bin) (in ?g ?g) ) (on front ?g) ) )
        )
      )
    )
  )
)
(:terminal
  (= (- (count-same-positions cubeThrownToBin:dodgeball) )
    (+ 2 (+ (* 7 (+ 4 (count dodgeballHitsPillowWithoutTouchingBlock:green:pyramid_block) )
        )
        3
        8
      )
    )
  )
)
(:scoring
  (count cubeThrownToBin:basketball)
)
)

(define (game game-id-894) (:domain many-objects-room-v1)
(:setup
  (exists (?b5 - book ?w1 - hexagonal_bin)
    (game-optional
      (on ?w1 ?w1)
    )
  )
)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?t ?h - triangular_ramp ?h - dodgeball)
        (then
          (once (on room_center ?h) )
          (once (in_motion ?h) )
        )
      )
    )
    (preference throwAttemptFromDoor
      (exists (?o - dodgeball)
        (then
          (hold-while (on ?o top_drawer) (same_color ?o ?o) )
          (once (and (exists (?t1 - color ?b - dodgeball) (in_motion desk) ) (exists (?b - cube_block) (in_motion ?b) ) (rug_color_under ?o ?o) ) )
          (once (not (and (agent_holds desk) (not (game_over ) ) ) ) )
          (once (and (agent_crouches ) (adjacent ?o ?o) (agent_holds ?o) (and (and (agent_holds door) (in_motion ?o) ) (in_motion door) (in_motion ?o) ) (not (agent_holds ?o) ) (in_motion bed) ) )
          (once (in_motion ?o) )
        )
      )
    )
  )
)
(:terminal
  (<= (= (* (count throwAttemptFromDoor) (* 1 5 )
        5
      )
      6
      (count-same-positions throwBallToBin:pink)
    )
    2
  )
)
(:scoring
  (* 5 (count-once-per-objects throwBallToBin:basketball) )
)
)

(define (game game-id-895) (:domain few-objects-room-v1)
(:setup
  (exists (?s - cube_block ?d - pillow)
    (and
      (forall (?h - teddy_bear)
        (exists (?f - color)
          (exists (?b - cube_block ?w2 - block)
            (exists (?s - ball)
              (game-conserved
                (agent_holds upright)
              )
            )
          )
        )
      )
      (forall (?c3 - dodgeball ?d - hexagonal_bin)
        (exists (?c - hexagonal_bin)
          (game-optional
            (and
              (exists (?b9 - ball ?d - (either doggie_bed triangle_block flat_block) ?g - pillow)
                (on floor ?d)
              )
              (and
                (exists (?h - (either dodgeball pyramid_block))
                  (exists (?b6 - (either blue_cube_block))
                    (and
                      (on ?c ?c)
                      (in_motion ?c)
                    )
                  )
                )
                (not
                  (in_motion ?d)
                )
              )
            )
          )
        )
      )
      (and
        (and
          (game-optional
            (< 9 (distance ?d ?d))
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?l - (either top_drawer cd))
      (and
        (preference cubeBlockThrowAttempt
          (exists (?g - dodgeball)
            (then
              (once (in pink ?l) )
              (once (not (in_motion ?l) ) )
              (once-measure (agent_holds ?g) (distance door ?g) )
            )
          )
        )
        (preference ballKnocksBlockFromRug
          (exists (?c3 - doggie_bed)
            (at-end
              (and
                (and
                  (open room_center)
                  (agent_holds door)
                )
                (agent_holds agent)
              )
            )
          )
        )
        (preference watchOnShelf
          (exists (?b - (either dodgeball yellow_cube_block hexagonal_bin))
            (at-end
              (not
                (on desk ?b)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count-once-per-external-objects ballKnocksBlockFromRug:yellow:golfball) (* 2 2 (+ (* (- (+ 2 (count-once-per-external-objects watchOnShelf:pink_dodgeball:beachball) )
            )
            2
            (count-total ballKnocksBlockFromRug:golfball:blue_dodgeball)
          )
          5
        )
      )
      8
      5
    )
    (* (count-measure watchOnShelf:pink_dodgeball) 9 )
  )
)
(:scoring
  (+ 3 5 )
)
)

(define (game game-id-896) (:domain medium-objects-room-v1)
(:setup
  (forall (?w2 ?w1 ?o1 - (either cube_block laptop))
    (game-optional
      (in_motion ?o1)
    )
  )
)
(:constraints
  (and
    (preference ballThrownToWallToAgent
      (exists (?h - dodgeball ?g - hexagonal_bin)
        (then
          (once (in_motion ?g) )
          (hold (same_object ?g bed) )
          (hold (agent_holds ?g) )
        )
      )
    )
  )
)
(:terminal
  (<= (count-once-per-objects ballThrownToWallToAgent:yellow:blue_pyramid_block) 5 )
)
(:scoring
  (count-same-positions ballThrownToWallToAgent:red:beachball)
)
)

(define (game game-id-897) (:domain medium-objects-room-v1)
(:setup
  (forall (?b7 - (either tall_cylindrical_block basketball tall_cylindrical_block) ?r2 - dodgeball ?d - color)
    (game-conserved
      (agent_holds ?d)
    )
  )
)
(:constraints
  (and
    (preference baseBlockInTowerAtEnd
      (exists (?o3 ?o1 - teddy_bear)
        (then
          (hold (not (agent_holds rug) ) )
          (once (in_motion agent) )
          (hold (agent_holds top_shelf) )
        )
      )
    )
    (forall (?d - curved_wooden_ramp)
      (and
        (preference redDodgeballThrownToBin
          (exists (?c - (either pink lamp) ?s - dodgeball)
            (then
              (hold (in_motion ?s) )
              (once (or (exists (?p3 - (either key_chain laptop)) (not (agent_holds ?d) ) ) (in ?d ?s) (agent_holds ?s) (and (exists (?d - dodgeball) (in_motion agent) ) (open ?s) (and (< (distance ?d ?s) 0.5) (on ?d ?s) (agent_holds ?d) ) ) ) )
              (once (and (in upright ?d) (and (and (agent_holds ?s) (agent_holds green_golfball) ) (agent_holds ?d) ) (adjacent_side ?s ?s ?s ?s) (agent_crouches ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= 5 (count redDodgeballThrownToBin:beachball:golfball:doggie_bed) )
)
(:scoring
  (total-score)
)
)

(define (game game-id-898) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?d2 - dodgeball)
      (and
        (game-conserved
          (on bed ?d2)
        )
        (game-optional
          (and
            (adjacent_side ?d2 ?d2 agent)
            (and
              (on ?d2 ?d2)
              (agent_holds ?d2)
            )
          )
        )
      )
    )
    (game-conserved
      (exists (?b - (either cube_block golfball key_chain) ?b - building ?b - block)
        (not
          (and
            (agent_holds ?b)
            (and
              (and
                (and
                  (< (x_position ?b) (distance room_center ?b))
                  (and
                    (rug_color_under ?b ?b)
                    (touch agent ?b)
                  )
                )
              )
              (and
                (agent_holds ?b)
                (in ?b ?b)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference smallItemsInPlace
      (exists (?d - curved_wooden_ramp)
        (then
          (hold (and (broken ?d) (and (not (agent_holds green_golfball) ) (and (adjacent ?d ?d) (in ?d ?d) ) (exists (?b - cube_block) (in_motion ?d) ) ) (and (on ?d bed) (not (agent_holds agent) ) ) ) )
          (once (not (not (not (agent_holds ?d) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (not
        (>= (count-once smallItemsInPlace:blue_dodgeball) (* (count smallItemsInPlace:pink) (count-unique-positions smallItemsInPlace:dodgeball:rug) )
        )
      )
      (or
        (= (* (count smallItemsInPlace:golfball) (<= (total-score) (* (not (* 7 (+ (count-longest smallItemsInPlace:pink) 6 )
                  )
                )
                (* (count smallItemsInPlace:hexagonal_bin) (total-score) )
              )
            )
          )
          1
        )
        (or
          (>= (not (total-score) ) (count smallItemsInPlace:red:basketball) )
          (or
            (>= (count-once-per-external-objects smallItemsInPlace:yellow:pink) (count smallItemsInPlace:yellow) )
            (< (* (count-once-per-objects smallItemsInPlace:dodgeball:hexagonal_bin) 50 )
              (count-once-per-objects smallItemsInPlace:dodgeball:red:green)
            )
            (>= (* 2 5 (count-once-per-external-objects smallItemsInPlace:dodgeball) (count smallItemsInPlace:dodgeball) )
              (* (not (count smallItemsInPlace:purple) ) 6 (* (total-score) 5 )
              )
            )
          )
          (or
            (> (count smallItemsInPlace:pink) 3 )
            (> (count smallItemsInPlace:basketball:purple) 5 )
          )
        )
        (< (count-once smallItemsInPlace:basketball) (* (count-once-per-objects smallItemsInPlace:yellow:golfball) (count-once-per-external-objects smallItemsInPlace:beachball) )
        )
      )
      (<= 15 9 )
    )
  )
)
(:scoring
  (+ 10 5 )
)
)

(define (game game-id-899) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?c ?b - chair)
      (game-conserved
        (exists (?x - shelf)
          (agent_holds bed)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o3 - ball ?g - wall)
      (and
        (preference throwToBin
          (exists (?t - hexagonal_bin ?d ?p - chair)
            (at-end
              (in_motion ?p)
            )
          )
        )
        (preference bookOnDeskShelf
          (exists (?d - hexagonal_bin)
            (then
              (hold (agent_holds agent) )
              (once (game_over ) )
              (hold-while (in_motion ?d) (not (adjacent ?d ?d) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (count-once throwToBin:dodgeball:orange) 30 )
)
(:scoring
  -10
)
)

(define (game game-id-900) (:domain medium-objects-room-v1)
(:setup
  (exists (?h - dodgeball)
    (and
      (and
        (game-conserved
          (in_motion ?h)
        )
        (exists (?c - cube_block)
          (exists (?b3 - dodgeball)
            (forall (?o - game_object)
              (and
                (game-conserved
                  (agent_holds ?h)
                )
              )
            )
          )
        )
        (exists (?o - hexagonal_bin ?b8 - (either basketball pillow))
          (forall (?b - block)
            (exists (?h - pyramid_block)
              (forall (?b - chair ?b9 - dodgeball)
                (exists (?o2 - (either golfball floor))
                  (game-conserved
                    (< 1 1)
                  )
                )
              )
            )
          )
        )
      )
      (game-optional
        (touch ?h ?h)
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?o - building)
        (at-end
          (same_color ?o ?o)
        )
      )
    )
    (preference redDodgeballThrownToBinWithoutTouchingFloor
      (exists (?f - wall)
        (then
          (hold (opposite ?f pink_dodgeball) )
          (once (agent_holds ?f) )
          (hold (agent_holds ?f) )
        )
      )
    )
  )
)
(:terminal
  (> 10 (count throwAttempt:red) )
)
(:scoring
  (count redDodgeballThrownToBinWithoutTouchingFloor:blue_pyramid_block:dodgeball)
)
)

(define (game game-id-901) (:domain few-objects-room-v1)
(:setup
  (forall (?h - ball)
    (forall (?t1 - hexagonal_bin)
      (game-optional
        (on agent desk)
      )
    )
  )
)
(:constraints
  (and
    (preference laptopAndBookInPlace
      (exists (?c - chair)
        (at-end
          (agent_holds ?c)
        )
      )
    )
    (forall (?o - (either cellphone pen))
      (and
        (preference pinkObjectMovedToRoomCenter
          (exists (?d ?r - beachball)
            (then
              (hold (exists (?t - dodgeball ?b4 - doggie_bed) (agent_holds top_shelf) ) )
              (once (in_motion ?o) )
              (hold (in_motion ?d) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 5 (- (+ 1 1 )
        (+ 3 (count-once laptopAndBookInPlace:pink:yellow) 6 )
      )
    )
    (>= 1 4 )
  )
)
(:scoring
  (external-forall-maximize
    (count-once-per-objects pinkObjectMovedToRoomCenter:yellow:red)
  )
)
)

(define (game game-id-902) (:domain few-objects-room-v1)
(:setup
  (forall (?s - dodgeball ?c - block ?o - chair)
    (and
      (exists (?o - teddy_bear)
        (exists (?b6 - (either cube_block book))
          (or
            (game-optional
              (on ?b6 ?o)
            )
            (game-optional
              (in_motion ?b6)
            )
            (exists (?l1 - hexagonal_bin)
              (game-conserved
                (not
                  (above ?o ?b6)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference golfballInBinFromPillow
      (exists (?s - hexagonal_bin ?l4 - game_object)
        (then
          (once (agent_holds ?l4) )
          (once (and (on ?l4 ?l4) (adjacent ?l4 ?l4) ) )
          (once (and (on ?l4 ?l4) (in_motion ?l4) ) )
        )
      )
    )
    (preference smallObjectThrownToBed
      (exists (?c2 - (either pillow))
        (at-end
          (rug_color_under ?c2 ?c2)
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (count-once-per-objects golfballInBinFromPillow:pink) (total-score) )
    (or
      (= (* 3 -10 )
        (count golfballInBinFromPillow:hexagonal_bin)
      )
      (>= 10 7 )
    )
  )
)
(:scoring
  (+ (count-once golfballInBinFromPillow:basketball) (count-total smallObjectThrownToBed:green:purple) )
)
)

(define (game game-id-903) (:domain many-objects-room-v1)
(:setup
  (exists (?h - dodgeball)
    (and
      (and
        (game-conserved
          (in_motion upright)
        )
        (exists (?c4 - pillow)
          (game-optional
            (in_motion agent)
          )
        )
        (and
          (game-conserved
            (not
              (opposite ?h ?h)
            )
          )
        )
      )
      (and
        (exists (?p - wall)
          (game-optional
            (on ?p ?h)
          )
        )
        (exists (?b4 - ball ?b - hexagonal_bin)
          (and
            (game-conserved
              (not
                (and
                  (not
                    (in_motion ?b)
                  )
                  (and
                    (and
                      (not
                        (and
                          (not
                            (and
                              (in_motion ?b)
                              (agent_holds right)
                            )
                          )
                          (in_motion ?b)
                          (game_over )
                          (in_motion floor)
                        )
                      )
                      (not
                        (and
                          (not
                            (in_motion ?h)
                          )
                          (in_motion bed)
                        )
                      )
                    )
                    (not
                      (agent_holds ?b)
                    )
                    (not
                      (agent_crouches )
                    )
                  )
                )
              )
            )
            (exists (?h - dodgeball)
              (exists (?d - building)
                (game-optional
                  (adjacent desk ?d)
                )
              )
            )
          )
        )
      )
      (game-conserved
        (in_motion ?h)
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballHitsBin
      (exists (?h - hexagonal_bin)
        (at-end
          (in_motion desk)
        )
      )
    )
    (forall (?b5 ?o3 - dodgeball)
      (and
        (preference ballThrownToRug
          (exists (?t - dodgeball ?b9 - bridge_block)
            (then
              (once (or (< 2 2) (in ?o3 ?b5) ) )
              (hold (on ?o3 ?b9) )
              (hold-while (touch ?o3 ?b5) (is_setup_object ?b5) )
            )
          )
        )
        (preference dropAttempt
          (exists (?b - hexagonal_bin)
            (then
              (once (in ?b ?o3) )
              (once (agent_holds ?b5) )
              (once (agent_holds ?o3) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (count ballThrownToRug:white) (count dropAttempt:beachball) )
)
(:scoring
  6
)
)

(define (game game-id-904) (:domain many-objects-room-v1)
(:setup
  (forall (?h - hexagonal_bin)
    (exists (?h - hexagonal_bin)
      (exists (?o3 - dodgeball ?t2 - pillow ?o2 - triangular_ramp)
        (and
          (game-conserved
            (opposite agent ?o2)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference bookOnDeskShelf
      (exists (?h - color)
        (then
          (any)
          (once (agent_holds ?h) )
          (once (agent_holds ?h) )
        )
      )
    )
  )
)
(:terminal
  (<= (count bookOnDeskShelf:alarm_clock) (count bookOnDeskShelf:basketball:pink_dodgeball) )
)
(:scoring
  9
)
)

(define (game game-id-905) (:domain medium-objects-room-v1)
(:setup
  (forall (?o1 - dodgeball)
    (game-conserved
      (and
        (same_color ?o1 bed)
        (on green ?o1)
      )
    )
  )
)
(:constraints
  (and
    (preference ballInOrOnBin
      (exists (?o - curved_wooden_ramp ?p1 - ball ?r - (either blue_cube_block pillow laptop))
        (then
          (hold (and (and (object_orientation ?r door) (faces rug ?r) ) (in agent ?r) (in_motion ?r) ) )
          (once (broken ?r) )
          (any)
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (or
        (and
          (= (* (count-same-positions ballInOrOnBin:beachball:dodgeball:dodgeball) (* 2 10 )
            )
            (count ballInOrOnBin:white:dodgeball)
          )
          (or
            (>= (* (count ballInOrOnBin:doggie_bed:dodgeball) (count ballInOrOnBin:pink) )
              (* 4 (count ballInOrOnBin:golfball) )
            )
            (< (* (count ballInOrOnBin) (count-once ballInOrOnBin) )
              5
            )
          )
          (or
            (> (* (not (- (total-score) (count-once-per-objects ballInOrOnBin:blue_dodgeball) ) ) (count ballInOrOnBin:basketball:pink) 5 )
              (count-once-per-objects ballInOrOnBin:alarm_clock)
            )
            (<= 3 (- 2 )
            )
          )
        )
        (>= (+ (count ballInOrOnBin:orange) (count-once-per-objects ballInOrOnBin:pink) )
          3
        )
        (>= (+ (or (count-once-per-objects ballInOrOnBin:pink) 3 ) (count-unique-positions ballInOrOnBin:green:red:beachball) )
          (count ballInOrOnBin:dodgeball:dodgeball)
        )
      )
      (>= (+ (count-once-per-objects ballInOrOnBin:golfball) (* 3 (* (+ (+ 10 10 )
                (* (count-once ballInOrOnBin) 6 )
                (count-once-per-objects ballInOrOnBin:book)
              )
              10
            )
            (< 6 (total-time) )
            (external-forall-maximize
              3
            )
            10
            3
          )
        )
        (- 3 )
      )
    )
    (= 3 1 )
  )
)
(:scoring
  (* (external-forall-minimize (external-forall-maximize 5 ) ) 10 )
)
)

(define (game game-id-906) (:domain many-objects-room-v1)
(:setup
  (exists (?w2 - (either alarm_clock alarm_clock blue_cube_block) ?l3 - cube_block ?b3 - dodgeball)
    (or
      (game-optional
        (not
          (agent_holds ?b3)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference cubeBlockThrowAttempt
      (at-end
        (< 4 2)
      )
    )
  )
)
(:terminal
  (>= (count-same-positions cubeBlockThrowAttempt:dodgeball) (* (+ (count-once-per-objects cubeBlockThrowAttempt:wall) (* (count cubeBlockThrowAttempt:pyramid_block:alarm_clock) (* (count-once-per-external-objects cubeBlockThrowAttempt:dodgeball) 2 )
        )
      )
      (count cubeBlockThrowAttempt:beachball)
    )
  )
)
(:scoring
  (count-shortest cubeBlockThrowAttempt:hexagonal_bin:golfball)
)
)

(define (game game-id-907) (:domain many-objects-room-v1)
(:setup
  (exists (?c2 - hexagonal_bin)
    (game-optional
      (forall (?tb ?g - hexagonal_bin ?p - dodgeball ?c2 ?bl - pyramid_block)
        (on ?bl ?bl)
      )
    )
  )
)
(:constraints
  (and
    (forall (?t - cube_block ?c ?b - desktop ?o3 - cube_block)
      (and
        (preference brownObjectMovedToRoomCenter
          (exists (?p2 - dodgeball)
            (then
              (once (exists (?h - ball) (not (not (touch bed ?h) ) ) ) )
              (once (exists (?c3 - dodgeball) (adjacent ?o3 ?c3) ) )
              (hold (between ?p2 ?o3 door) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-once-per-objects brownObjectMovedToRoomCenter:doggie_bed:dodgeball) 5 )
  )
)
(:scoring
  (+ 8 (count-once brownObjectMovedToRoomCenter:beachball) (count brownObjectMovedToRoomCenter:golfball) (count brownObjectMovedToRoomCenter:yellow) (count-once-per-objects brownObjectMovedToRoomCenter:hexagonal_bin) 50 )
)
)

(define (game game-id-908) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (on front floor)
  )
)
(:constraints
  (and
    (preference throwBallToDoggieBedOffWall
      (exists (?h - chair)
        (at-end
          (in_motion ?h)
        )
      )
    )
    (preference ballNeverThrown
      (exists (?c - ball ?db - shelf)
        (at-end
          (not
            (and
              (touch floor desk)
              (not
                (agent_holds ?db)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once ballNeverThrown:purple:yellow_pyramid_block) (not (count-once-per-objects throwBallToDoggieBedOffWall:hexagonal_bin) ) )
)
(:scoring
  (* (total-score) (count throwBallToDoggieBedOffWall:dodgeball:blue_pyramid_block) )
)
)

(define (game game-id-909) (:domain many-objects-room-v1)
(:setup
  (exists (?w2 - hexagonal_bin ?h - building)
    (game-optional
      (in_motion ?h)
    )
  )
)
(:constraints
  (and
    (preference tanObjectMovedToRoomCenter
      (exists (?o - dodgeball)
        (then
          (once (in_motion ?o) )
          (hold (and (object_orientation ?o desk) (agent_holds ?o) ) )
        )
      )
    )
    (preference thrownBallReachesEnd
      (exists (?o1 - ball)
        (then
          (once (on ?o1 ?o1) )
          (hold (agent_holds ?o1) )
          (hold (on agent ?o1) )
        )
      )
    )
    (preference failedThrowToBin
      (exists (?t - cube_block ?c1 - (either cube_block yellow_cube_block key_chain))
        (then
          (once (not (not (in_motion ?c1) ) ) )
          (once (on room_center ?c1) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count tanObjectMovedToRoomCenter:basketball) (count failedThrowToBin:dodgeball:basketball) )
    (external-forall-minimize
      6
    )
  )
)
(:scoring
  (count-once-per-objects failedThrowToBin:bed)
)
)

(define (game game-id-910) (:domain medium-objects-room-v1)
(:setup
  (exists (?b5 - dodgeball)
    (and
      (game-conserved
        (not
          (in room_center ?b5)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?r - hexagonal_bin)
      (and
        (preference ballThrownToRug
          (exists (?b - cube_block)
            (at-end
              (and
                (not
                  (in_motion ?b)
                )
                (in_motion ?r)
              )
            )
          )
        )
        (preference blockOnBlockInTowerAtEnd
          (exists (?b - (either mug dodgeball))
            (then
              (once (not (and (not (and (on agent ?r) (and (not (and (in_motion ?r) (or (adjacent ?b agent) (in_motion ?r) ) ) ) (in_motion agent) ) ) ) (agent_holds floor) ) ) )
              (once (not (agent_holds ?b) ) )
              (hold (not (exists (?g - block) (not (and (on ?g ?g) (and (same_color ?r ?r) (agent_holds ?b) ) ) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (>= (external-forall-maximize 30 ) (+ 12 (count-once-per-objects ballThrownToRug:pink:beachball:beachball) )
      )
      (* (total-time) )
    )
  )
)
(:scoring
  3
)
)

(define (game game-id-911) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (and
        (and
          (forall (?d - teddy_bear ?r - shelf)
            (forall (?r1 - ball ?w1 - chair)
              (game-optional
                (= (distance ?r ?r) 10)
              )
            )
          )
          (forall (?d - hexagonal_bin)
            (exists (?o - wall)
              (exists (?b - (either golfball laptop) ?c - dodgeball ?o - hexagonal_bin)
                (forall (?d1 - chair ?l2 - doggie_bed)
                  (exists (?b10 - teddy_bear)
                    (and
                      (forall (?b ?c3 - teddy_bear)
                        (exists (?d - (either yellow beachball))
                          (forall (?t1 - dodgeball)
                            (game-optional
                              (above pink_dodgeball ?b)
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
      (and
        (and
          (forall (?c - hexagonal_bin ?b - hexagonal_bin)
            (and
              (game-conserved
                (agent_holds block)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?l1 - dodgeball)
      (and
        (preference throwOverRamp
          (exists (?o2 - golfball ?s - dodgeball)
            (then
              (once-measure (and (in_motion ?s) (and (and (adjacent ?s ?l1) (on ?l1 ?s) ) (open ?l1) (on ?l1 front_left_corner) (not (not (in_motion ?l1) ) ) (and (agent_holds ?l1) (agent_holds ?s) ) (< 1 (distance ?l1 upright)) (and (not (rug_color_under ?s ?l1) ) (adjacent_side ?s ?s ?l1) (not (and (not (and (adjacent ?s ?l1) (on bed ?l1) ) ) ) ) ) (on ?s ?s) (in_motion ?s) (not (on ?s ?s) ) ) ) (distance ?s ?s) )
              (once (agent_holds ?s) )
              (once (in ?s ?l1) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 10 10 )
    (> (count-once-per-objects throwOverRamp:red:beachball) 4 )
  )
)
(:scoring
  (+ 3 1 )
)
)

(define (game game-id-912) (:domain many-objects-room-v1)
(:setup
  (forall (?o - dodgeball)
    (game-optional
      (and
        (on ?o ?o)
        (in ?o ?o)
        (and
          (< 10 (distance_side ?o ?o top_drawer bed))
          (agent_holds bed)
        )
        (not
          (toggled_on ?o)
        )
        (in top_drawer ?o)
        (not
          (and
            (in_motion bed)
            (not
              (agent_holds ?o)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o - (either lamp basketball rug pyramid_block laptop ball teddy_bear) ?l - curved_wooden_ramp ?d - cube_block)
      (and
        (preference itemsHidingScreens
          (exists (?t - doggie_bed)
            (then
              (hold (and (on ?d ?t) (or (and (in_motion ?t) (on ?d ?t) (or (in_motion ?t) (agent_holds ?t) ) (agent_holds north_wall) ) (and (agent_holds ?t) (not (agent_holds ?t) ) (not (adjacent ?d ?d) ) ) ) ) )
              (hold (broken ?t) )
              (hold (on ?t ?d) )
            )
          )
        )
      )
    )
    (preference brownObjectMovedToRoomCenter
      (exists (?b - doggie_bed)
        (then
          (hold-while (on ?b ?b) (same_color agent ?b) (on ?b ?b) )
          (hold (not (not (in upright desk) ) ) )
          (once (agent_holds rug) )
        )
      )
    )
    (forall (?b - dodgeball)
      (and
        (preference blockInTowerAtEnd
          (exists (?b9 - (either tall_cylindrical_block game_object))
            (then
              (once (not (agent_holds agent) ) )
              (once (touch ?b9 ?b9) )
              (once (agent_holds ?b) )
            )
          )
        )
        (preference dodgeballFromBlockToBin
          (exists (?b9 - block ?c1 - (either floor blue_cube_block))
            (then
              (hold (and (agent_holds ?b) ) )
              (once (adjacent ?b ?c1) )
              (once (and (or (in_motion ?c1) (in rug ?b) ) (not (adjacent ?c1 ?b) ) (or (same_color ?c1 ?c1) (in ?c1 ?c1) ) ) )
            )
          )
        )
      )
    )
    (preference blockKnockedFromBuildingInBin
      (exists (?l3 ?b6 - triangular_ramp ?c4 - building)
        (then
          (once (adjacent ?c4 ?c4) )
          (hold (in_motion ?c4) )
          (once (agent_holds ?c4) )
        )
      )
    )
    (forall (?d - cube_block)
      (and
        (preference throwToRampToBin
          (exists (?t - cube_block)
            (at-end
              (same_type ?t ?d)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (>= (count-once-per-objects blockKnockedFromBuildingInBin:top_drawer) 30 )
      (>= (count brownObjectMovedToRoomCenter:book) 3 )
    )
  )
)
(:scoring
  (count blockKnockedFromBuildingInBin)
)
)

(define (game game-id-913) (:domain medium-objects-room-v1)
(:setup
  (forall (?s - (either watch wall golfball lamp))
    (exists (?h - shelf ?p1 - hexagonal_bin ?d - hexagonal_bin)
      (and
        (exists (?d1 - hexagonal_bin)
          (game-conserved
            (agent_holds ?d)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b5 ?b ?h ?p ?b ?p2 ?o2 ?p ?h ?w2 - dodgeball)
      (and
        (preference throwMissesBin
          (exists (?t - hexagonal_bin)
            (then
              (forall-sequence (?l4 - doggie_bed ?h - wall)
                (then
                  (once (and (exists (?b - ball) (same_type ?b agent) ) (and (not (not (= 1 (distance bed pink_dodgeball)) ) ) (not (not (not (and (in ?t ?w2) (equal_x_position ?t ?p2) ) ) ) ) (not (not (and (and (agent_holds ?w2) (= (distance ?p2 ?h) (distance_side ?w2 ?b5 ?t)) ) (in ?b5 blue) ) ) ) ) (and (< (distance ?p2 ?t) 1) (adjacent_side ?t ?h back) ) ) )
                  (hold (and (agent_holds ?h) (touch ?b ?b) (same_color ?b5 ?h) (and (not (not (adjacent ?t rug) ) ) (touch ?o2 ?o2) (in_motion ?p) (is_setup_object ?o2) (adjacent_side agent ?w2 ?b5) (touch ?p2 ?h) (on ?h green) ) ) )
                  (once (and (and (in_motion ?p) (on ?t ball) ) (not (on ?b5 sideways) ) ) )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects throwMissesBin:basketball) (+ (+ (+ (count-unique-positions throwMissesBin:dodgeball:dodgeball) (count throwMissesBin:pink_dodgeball) (* 10 1 )
          20
          (count throwMissesBin)
          (external-forall-maximize
            (count throwMissesBin:dodgeball)
          )
        )
        6
      )
      (* (count throwMissesBin:dodgeball) (count-shortest throwMissesBin:dodgeball:orange) )
      1
      1
    )
  )
)
(:scoring
  (count-once-per-objects throwMissesBin:yellow:beachball)
)
)

(define (game game-id-914) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (agent_holds floor)
  )
)
(:constraints
  (and
    (forall (?l - block ?t - teddy_bear)
      (and
        (preference throwBallToBin
          (exists (?r1 - hexagonal_bin)
            (then
              (once (not (not (not (and (agent_holds ?r1) (agent_holds ?r1) ) ) ) ) )
              (once (in_motion ?r1) )
              (once (agent_holds ?t) )
            )
          )
        )
        (preference objectInBuilding
          (exists (?h - dodgeball ?c - ball)
            (then
              (once (game_over ) )
              (once (not (and (not (not (agent_holds ?c) ) ) (on ?t ?c) (and (and (in ?c ?t) (not (same_color ?t ?c) ) ) (in_motion ?c) ) (< (distance_side rug ?t ?c blue) 3) ) ) )
              (once (and (not (and (object_orientation ?c ?t) (agent_holds ?t) ) ) (not (and (or (agent_holds ?c) (and (object_orientation ?t ?c) (in_motion ?t) ) (agent_holds ?c) ) (faces ?c ?t) (not (and (agent_holds ?t) (and (= (distance ?c left) 5) (exists (?c - hexagonal_bin ?ob ?o - desk_shelf ?s - (either blue_cube_block cylindrical_block)) (in_motion pillow) ) (touch front ?t) ) (> 1 1) ) ) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= (not (count-same-positions objectInBuilding:blue_pyramid_block) ) (- (count objectInBuilding:doggie_bed:dodgeball) )
  )
)
(:scoring
  (= (count-once objectInBuilding:basketball) 3 )
)
)

(define (game game-id-915) (:domain few-objects-room-v1)
(:setup
  (and
    (not
      (game-conserved
        (on green agent)
      )
    )
  )
)
(:constraints
  (and
    (preference itemInClosedDrawerAtEnd
      (exists (?c - ball)
        (at-end
          (opposite pink_dodgeball ?c)
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (count-same-positions itemInClosedDrawerAtEnd:golfball) (* (* (* (* 6 (count itemInClosedDrawerAtEnd:pink_dodgeball) )
            (count-once-per-objects itemInClosedDrawerAtEnd:beachball)
            (<= 5 (count-overlapping itemInClosedDrawerAtEnd:hexagonal_bin) )
            (count-once-per-objects itemInClosedDrawerAtEnd:doggie_bed)
          )
          (total-score)
          (- (* 3 (count itemInClosedDrawerAtEnd:green:golfball) )
          )
        )
        4
      )
    )
  )
)
(:scoring
  10
)
)

(define (game game-id-916) (:domain few-objects-room-v1)
(:setup
  (exists (?r - game_object)
    (and
      (or
        (game-conserved
          (in ?r ?r)
        )
        (game-conserved
          (agent_holds ?r)
        )
        (exists (?b10 - hexagonal_bin)
          (forall (?b6 - color)
            (game-optional
              (and
                (and
                  (not
                    (on agent ?b6)
                  )
                  (in_motion ?b10)
                )
                (agent_holds ?r)
                (not
                  (same_type ?b6 rug)
                )
                (in_motion pink_dodgeball)
              )
            )
          )
        )
      )
      (game-optional
        (not
          (and
            (agent_holds ?r)
            (< 1 (distance ?r ?r))
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b9 - ball)
      (and
        (preference throwFromDoorToBin
          (at-end
            (agent_holds ?b9)
          )
        )
      )
    )
    (preference ballThrownThroughRampToBin
      (exists (?c - hexagonal_bin)
        (then
          (once (adjacent ?c ?c) )
          (once (in ?c ?c) )
          (once (and (not (in_motion ?c) ) (on ?c door) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (not (count ballThrownThroughRampToBin:dodgeball) ) (count-once-per-objects throwFromDoorToBin:blue_dodgeball) )
)
(:scoring
  (count ballThrownThroughRampToBin:red:dodgeball)
)
)

(define (game game-id-917) (:domain many-objects-room-v1)
(:setup
  (forall (?h - triangular_ramp)
    (game-conserved
      (on ?h front)
    )
  )
)
(:constraints
  (and
    (preference basketMadeFromRug
      (exists (?l - ball ?c5 - dodgeball)
        (at-end
          (agent_holds ?c5)
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (total-score) 7 )
  )
)
(:scoring
  (count basketMadeFromRug:top_drawer:dodgeball)
)
)

(define (game game-id-918) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?d - hexagonal_bin)
      (exists (?l - color ?d - teddy_bear ?d - chair)
        (game-conserved
          (on ?d ?d)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b7 - hexagonal_bin)
      (and
        (preference ballThrownToBed
          (exists (?g - block)
            (then
              (hold (= 6 (distance ?g ?b7) (distance ?g ?b7)) )
              (once (not (and (not (not (and (and (not (in_motion ?g) ) (and (adjacent ?b7 ?b7) (exists (?r ?o5 - block) (not (touch ?b7 ?o5) ) ) (agent_holds ?g) (and (in_motion ?g) (agent_holds ?g) ) ) ) (in ?b7 ?g) (not (in_motion ?b7) ) ) ) ) (in_motion ?b7) ) ) )
              (once (touch ?g ?g) )
            )
          )
        )
      )
    )
    (preference blockOnBlockInTowerAtEnd
      (exists (?l - doggie_bed)
        (then
          (once (agent_holds bed) )
          (hold (between ?l ?l agent) )
          (once (same_type ?l ?l) )
        )
      )
    )
    (preference throwAttemptKnocksBlock
      (exists (?b - (either main_light_switch cylindrical_block))
        (at-end
          (on ?b ?b)
        )
      )
    )
  )
)
(:terminal
  (>= 10 3 )
)
(:scoring
  3
)
)

(define (game game-id-919) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds agent)
  )
)
(:constraints
  (and
    (forall (?d - ball ?p1 - tan_cube_block ?t - ball)
      (and
        (preference castleBuilt
          (then
            (once (agent_holds ?t) )
            (hold (above room_center ?t) )
            (once (agent_holds ?t) )
          )
        )
        (preference throwBallFromOtherBallToBin
          (exists (?p3 - doggie_bed)
            (then
              (once (not (agent_holds ?t) ) )
              (once (not (on ?t door) ) )
              (once (and (< 5 2) (not (< (building_size ?t) (building_size ?t)) ) ) )
            )
          )
        )
        (preference laptopAndBookInPlace
          (exists (?h ?r - curved_wooden_ramp ?b6 - doggie_bed)
            (then
              (hold (in_motion ?t) )
              (hold (and (not (not (and (in_motion ?b6) (and (in_motion ?b6) (in_motion ?b6) ) ) ) ) (not (on ?t ?b6) ) (in_motion rug) ) )
              (hold-while (agent_holds ?t) (and (not (not (not (in_motion ?b6) ) ) ) (not (in ?b6 ?b6) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (not
      (> (+ 10 )
        (* (* (* (count laptopAndBookInPlace:basketball) (count castleBuilt:dodgeball) )
            (+ 7 (count throwBallFromOtherBallToBin:yellow) )
          )
          (count-once-per-objects throwBallFromOtherBallToBin:blue_dodgeball)
        )
      )
    )
    (>= 4 (count-once-per-objects castleBuilt:purple) )
  )
)
(:scoring
  (total-score)
)
)

(define (game game-id-920) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?c3 - (either cellphone block dodgeball) ?h - teddy_bear)
      (game-conserved
        (or
          (agent_holds ?h)
          (agent_crouches )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b1 - building)
      (and
        (preference blockInTowerKnocked
          (exists (?f - building)
            (then
              (hold-while (agent_holds ?f) (in ?b1 ?f) )
              (once (on ?b1 ?b1) )
              (hold-while (adjacent ?b1 ?b1) (touch ?f ?f) (touch agent ?f) )
            )
          )
        )
      )
    )
    (preference thrownBallReachesEnd
      (exists (?o3 - ball ?d - dodgeball ?l4 ?b - hexagonal_bin)
        (then
          (once (not (not (object_orientation ?b ?b) ) ) )
          (once-measure (in_motion ?l4) (distance ?b ?l4) )
          (once (and (agent_holds ?l4) (agent_holds ?l4) ) )
        )
      )
    )
    (preference bigObjectThrownToBed
      (exists (?b - hexagonal_bin)
        (then
          (once (touch ?b ?b) )
          (hold (in_motion ?b) )
          (once (agent_holds ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count-once blockInTowerKnocked:cube_block) 40 )
    (+ (count-once-per-objects bigObjectThrownToBed:side_table) 2 )
  )
)
(:scoring
  1
)
)

(define (game game-id-921) (:domain many-objects-room-v1)
(:setup
  (exists (?b1 - color ?o - doggie_bed)
    (game-conserved
      (and
        (and
          (in_motion ?o)
          (not
            (agent_holds ?o)
          )
        )
        (<= 1 2)
      )
    )
  )
)
(:constraints
  (and
    (preference basketMadeFromRug
      (exists (?t - ball ?c - cube_block)
        (then
          (hold (in_motion ?c) )
          (once (on ?c ?c) )
          (once (in_motion ?c) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count-once-per-objects basketMadeFromRug:dodgeball:dodgeball) (* 2 50 (count basketMadeFromRug:dodgeball) )
    )
    (count basketMadeFromRug:dodgeball)
  )
)
(:scoring
  180
)
)

(define (game game-id-922) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?b5 - dodgeball)
      (not
        (game-conserved
          (in_motion ?b5)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference otherObjectsOnDeskShelf
      (exists (?c1 - hexagonal_bin)
        (then
          (once (agent_holds ?c1) )
          (any)
          (once (in_motion ?c1) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (count-once-per-objects otherObjectsOnDeskShelf:dodgeball) (+ 6 (+ (count-once-per-objects otherObjectsOnDeskShelf:cylindrical_block) (external-forall-maximize (count-overlapping otherObjectsOnDeskShelf:pink) ) )
      )
    )
    (* 10 (count otherObjectsOnDeskShelf:red:purple) )
  )
)
(:scoring
  (count-once-per-external-objects otherObjectsOnDeskShelf:pink:pink)
)
)

(define (game game-id-923) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?o - dodgeball)
      (and
        (game-conserved
          (in agent agent)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference thrownBallReachesEnd
      (exists (?o - ball)
        (then
          (hold (in ?o ?o) )
          (hold-while (agent_holds desk) (in_motion rug) )
          (once (in_motion ?o) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (count thrownBallReachesEnd:book:golfball) (count-once-per-objects thrownBallReachesEnd:yellow) )
    3
  )
)
(:scoring
  4
)
)

(define (game game-id-924) (:domain medium-objects-room-v1)
(:setup
  (not
    (and
      (exists (?t - block)
        (game-optional
          (not
            (touch rug ?t)
          )
        )
      )
      (forall (?b - (either yellow pillow))
        (exists (?w1 - doggie_bed ?w2 - dodgeball)
          (and
            (game-optional
              (agent_holds ?w2)
            )
            (and
              (and
                (and
                  (and
                    (and
                      (game-optional
                        (adjacent ?w2 ?b)
                      )
                      (game-optional
                        (and
                          (adjacent_side ?b ?w2 ?b)
                          (and
                            (in ?w2 ?w2)
                            (not
                              (in ?b ?w2)
                            )
                          )
                        )
                      )
                    )
                    (exists (?c - hexagonal_bin)
                      (forall (?d1 - building)
                        (and
                          (not
                            (game-optional
                              (agent_holds ?b)
                            )
                          )
                          (game-optional
                            (on ?w2 ?w2)
                          )
                        )
                      )
                    )
                    (and
                      (game-optional
                        (and
                          (touch ?b ?b)
                          (= 6 (distance ?b ?b))
                        )
                      )
                    )
                  )
                )
                (exists (?h ?o - doggie_bed ?b2 - dodgeball ?d - cube_block)
                  (game-conserved
                    (and
                      (on desk ?d)
                      (same_object ?b ?d)
                      (and
                        (in_motion ?b)
                        (in floor ?w2)
                      )
                      (between ?d ?w2 agent)
                    )
                  )
                )
                (forall (?b5 - hexagonal_bin ?l1 - shelf)
                  (and
                    (and
                      (game-conserved
                        (< (distance ?l1 ?w2) (distance ?l1 ?b))
                      )
                    )
                    (forall (?h - ball)
                      (and
                        (exists (?s - hexagonal_bin ?o4 ?b2 ?p ?db ?p ?w2 - (either flat_block pyramid_block))
                          (exists (?ob - hexagonal_bin)
                            (exists (?w2 - hexagonal_bin)
                              (game-optional
                                (agent_holds ?p)
                              )
                            )
                          )
                        )
                      )
                    )
                    (game-conserved
                      (in_motion ?l1)
                    )
                  )
                )
              )
              (or
                (and
                  (and
                    (game-optional
                      (on desk ?b)
                    )
                  )
                )
                (game-conserved
                  (not
                    (agent_holds desk)
                  )
                )
              )
              (and
                (exists (?w1 - (either chair wall golfball) ?b ?o1 ?d ?c4 ?d ?b1 ?b2 ?r ?c2 ?d - (either laptop cylindrical_block tall_cylindrical_block))
                  (exists (?s ?d ?d ?r ?b10 - hexagonal_bin)
                    (game-conserved
                      (agent_holds ?d)
                    )
                  )
                )
              )
            )
            (and
              (and
                (exists (?c - hexagonal_bin)
                  (and
                    (game-conserved
                      (agent_holds ?c)
                    )
                    (game-conserved
                      (in_motion ?b)
                    )
                  )
                )
              )
            )
          )
        )
      )
      (forall (?t ?o - doggie_bed)
        (forall (?b - cube_block)
          (and
            (game-conserved
              (in_motion ?t)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockFromRugToDesk
      (exists (?c5 - game_object)
        (at-end
          (and
            (not
              (and
                (agent_holds ?c5)
                (touch ?c5 agent)
                (and
                  (or
                    (and
                      (in ?c5 ?c5)
                      (and
                        (on ?c5 front)
                        (agent_holds front)
                      )
                    )
                    (on pillow ?c5)
                  )
                  (agent_holds bed)
                )
                (not
                  (not
                    (on rug ?c5)
                  )
                )
                (exists (?b5 - (either pink desktop cube_block laptop))
                  (not
                    (not
                      (not
                        (or
                          (in_motion right)
                          (adjacent blue ?c5)
                        )
                      )
                    )
                  )
                )
                (not
                  (touch ?c5 rug)
                )
                (not
                  (on ?c5 ?c5)
                )
                (not
                  (not
                    (on ?c5 desk)
                  )
                )
              )
            )
            (on ?c5 ?c5)
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (and
      (>= (* (count blockFromRugToDesk:basketball:pink_dodgeball) (total-score) )
        (+ (count-shortest blockFromRugToDesk:yellow) )
      )
      (< (count blockFromRugToDesk:doggie_bed:blue_dodgeball) (* (external-forall-maximize 3 ) (* 2 (and 2 (- (total-time) )
              (or
                (+ 7 (count blockFromRugToDesk:bed) (+ 2 (count blockFromRugToDesk:basketball) )
                  5
                  (+ 2 (count blockFromRugToDesk:pink) 5 )
                  (count-once-per-objects blockFromRugToDesk:blue_dodgeball)
                  (- (count-once-per-objects blockFromRugToDesk:basketball) )
                  (count-shortest blockFromRugToDesk:beachball:hexagonal_bin)
                  (count-once-per-objects blockFromRugToDesk:dodgeball)
                  2
                  (count-once-per-objects blockFromRugToDesk:basketball)
                  (count blockFromRugToDesk:basketball)
                )
                (* (+ (count-increasing-measure blockFromRugToDesk:pink_dodgeball) 10 2 )
                  180
                )
              )
            )
            1
          )
        )
      )
    )
  )
)
(:scoring
  (- (count blockFromRugToDesk:yellow_cube_block) )
)
)

(define (game game-id-925) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (not
      (in_motion rug)
    )
  )
)
(:constraints
  (and
    (preference redDodgeballThrownToBinWithoutTouchingFloor
      (exists (?h - (either alarm_clock cylindrical_block))
        (then
          (once (< (distance ?h ?h) (distance ?h ?h)) )
          (hold-while (not (and (and (and (adjacent agent agent) (not (< 2 7) ) ) (in ?h ?h) ) (same_color agent room_center) (not (and (in_motion ?h) (not (not (in_motion ?h) ) ) ) ) ) ) (agent_holds ?h) (touch ?h ?h) )
          (once (not (< (distance ?h ?h) 1) ) )
        )
      )
    )
    (preference ballOnBedAtEnd
      (exists (?c2 - pillow)
        (at-end
          (not
            (in ?c2 ?c2)
          )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (count-once-per-objects redDodgeballThrownToBinWithoutTouchingFloor:dodgeball:purple) )
)
(:scoring
  3
)
)

(define (game game-id-926) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h ?r ?t - hexagonal_bin ?bl - curved_wooden_ramp)
      (game-optional
        (and
          (agent_holds ?bl)
          (agent_holds ?bl)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectMoved
      (exists (?d2 - block ?o - hexagonal_bin)
        (at-end
          (and
            (in_motion ?o)
            (game_over )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (count objectMoved:side_table) )
)
(:scoring
  (count-unique-positions objectMoved:yellow_cube_block)
)
)

(define (game game-id-927) (:domain few-objects-room-v1)
(:setup
  (exists (?c - (either cube_block lamp yellow_cube_block cd pillow pen book))
    (and
      (forall (?h - hexagonal_bin)
        (and
          (and
            (and
              (and
                (exists (?o - hexagonal_bin ?b8 - block)
                  (exists (?t - dodgeball ?d - hexagonal_bin)
                    (and
                      (forall (?c - red_dodgeball)
                        (game-optional
                          (same_type ?d ?c)
                        )
                      )
                      (and
                        (game-optional
                          (not
                            (in_motion ?c)
                          )
                        )
                        (game-conserved
                          (in_motion ?b8)
                        )
                        (exists (?b - building)
                          (game-conserved
                            (in ?c ?h)
                          )
                        )
                        (game-optional
                          (in_motion ?h)
                        )
                        (and
                          (forall (?o1 - tall_cylindrical_block)
                            (game-conserved
                              (agent_holds ?c)
                            )
                          )
                        )
                      )
                    )
                  )
                )
                (game-conserved
                  (in_motion ?c)
                )
                (exists (?b5 ?t2 ?r2 - (either alarm_clock laptop))
                  (forall (?d - (either pen dodgeball hexagonal_bin) ?l - triangular_ramp ?p2 - dodgeball)
                    (game-optional
                      (or
                        (in_motion ?h)
                        (and
                          (adjacent_side ?b5 ?h ?r2 ?b5)
                          (in_motion agent)
                        )
                        (not
                          (and
                            (touch ?t2 ?r2)
                            (and
                              (< 1 (distance ?b5 ?b5))
                              (game_over )
                              (not
                                (not
                                  (and
                                    (and
                                      (agent_holds ?b5)
                                      (in_motion bed)
                                    )
                                    (toggled_on agent)
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToRug
      (exists (?tb - chair ?c - hexagonal_bin)
        (then
          (once (on ?c ?c) )
          (once (and (not (and (object_orientation ?c ?c) (agent_holds ?c) ) ) (in floor ?c) ) )
        )
      )
    )
    (preference ballThrownFromRug
      (exists (?b - block)
        (then
          (hold (rug_color_under room_center ?b) )
          (hold (adjacent ?b ?b) )
          (once (< 1 (distance ?b ?b)) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 3 (- (* (count ballThrownFromRug:dodgeball) (+ 15 (count-once-per-objects ballThrownToRug:beachball:yellow) )
        )
      )
      (* (external-forall-maximize (* (count ballThrownFromRug:purple) (+ (* 8 (count-once-per-objects ballThrownFromRug:golfball) )
              (* 5 4 )
              2
              (count ballThrownToRug:alarm_clock)
            )
          )
        )
        (count ballThrownToRug:blue_dodgeball:yellow)
      )
      (count-once-per-external-objects ballThrownFromRug:pink:golfball)
      (>= 3 (total-score) )
      (count ballThrownFromRug:red)
    )
    (total-score)
  )
)
(:scoring
  3
)
)

(define (game game-id-928) (:domain many-objects-room-v1)
(:setup
  (forall (?h - (either pillow laptop pillow))
    (game-conserved
      (not
        (adjacent ?h room_center)
      )
    )
  )
)
(:constraints
  (and
    (preference binKnockedOver
      (exists (?o2 - hexagonal_bin)
        (at-end
          (in_motion ?o2)
        )
      )
    )
    (preference ballThrownToRampToBed
      (exists (?h - ball)
        (at-end
          (not
            (in ?h room_center)
          )
        )
      )
    )
  )
)
(:terminal
  (= (+ (count binKnockedOver:doggie_bed:dodgeball) (* 2 (and (count binKnockedOver:yellow:dodgeball) 5 ) (* (- (* (count-once-per-objects ballThrownToRampToBed:dodgeball) )
          )
          10
        )
        16
        15
        5
      )
    )
    (count-once-per-objects ballThrownToRampToBed:blue_dodgeball)
  )
)
(:scoring
  (+ (external-forall-maximize (+ (* 2 (count ballThrownToRampToBed:white) )
        (count binKnockedOver:yellow_cube_block)
        (- 5 )
      )
    )
    (* (count ballThrownToRampToBed:golfball:green) (count binKnockedOver:book) (count-once-per-objects ballThrownToRampToBed:basketball) )
  )
)
)

(define (game game-id-929) (:domain few-objects-room-v1)
(:setup
  (exists (?d - building)
    (game-conserved
      (in_motion floor)
    )
  )
)
(:constraints
  (and
    (preference thrownBallHitsBlock
      (exists (?c - ball ?d2 - cube_block ?d - hexagonal_bin)
        (then
          (hold (not (equal_z_position ?d ?d) ) )
          (once (< (distance ?d ?d) (distance ?d bed)) )
          (hold (in_motion bed) )
        )
      )
    )
  )
)
(:terminal
  (>= 5 2 )
)
(:scoring
  18
)
)

(define (game game-id-930) (:domain many-objects-room-v1)
(:setup
  (exists (?p1 - (either cd cd pyramid_block))
    (game-conserved
      (not
        (agent_holds ?p1)
      )
    )
  )
)
(:constraints
  (and
    (preference thrownObjectHitsComputer
      (exists (?l1 ?g - pillow)
        (then
          (once (not (not (in_motion ?g) ) ) )
          (once (in_motion ?l1) )
          (hold-while (adjacent agent blue) (object_orientation ?l1 ?l1) )
        )
      )
    )
  )
)
(:terminal
  (<= (+ (count-once-per-external-objects thrownObjectHitsComputer:golfball) (* (count-once-per-external-objects thrownObjectHitsComputer:pyramid_block) (* (* (- (count thrownObjectHitsComputer:pyramid_block) )
            10
          )
          (total-time)
          (- 2 )
          (+ 1 5 )
          (count thrownObjectHitsComputer:dodgeball)
          (= (external-forall-minimize (* (* (count thrownObjectHitsComputer:basketball) (count-measure thrownObjectHitsComputer:basketball) )
                3
              )
            )
            (count thrownObjectHitsComputer:blue_dodgeball)
          )
          (external-forall-maximize
            (count-once-per-objects thrownObjectHitsComputer:yellow)
          )
          (count thrownObjectHitsComputer:yellow)
          (count-total thrownObjectHitsComputer:golfball)
        )
      )
      1
      (* (external-forall-minimize 10 ) (* 2 (count thrownObjectHitsComputer:dodgeball) )
      )
      (count-once-per-objects thrownObjectHitsComputer:beachball)
      (count-once-per-objects thrownObjectHitsComputer:yellow)
      (* 10 (/ 180 (* (count-once-per-objects thrownObjectHitsComputer) (count thrownObjectHitsComputer:pyramid_block) (= 2 )
          )
        )
      )
      (count thrownObjectHitsComputer:red:yellow)
      (-
        (+ (external-forall-maximize 2 ) (total-time) 0 (count thrownObjectHitsComputer:golfball:book) (count-once-per-objects thrownObjectHitsComputer:yellow:basketball) (count thrownObjectHitsComputer:purple:dodgeball) )
        (+ 6 9 (count-once-per-objects thrownObjectHitsComputer:orange) (* 8 (- (count-once-per-objects thrownObjectHitsComputer:orange) )
          )
          (count-once-per-objects thrownObjectHitsComputer:pink)
          (* (- 300 )
            4
          )
          (count-same-positions thrownObjectHitsComputer:top_drawer)
          15
          (total-score)
        )
      )
      1
      6
      (* 5 (count thrownObjectHitsComputer:blue_cube_block) )
    )
    2
  )
)
(:scoring
  (+ (count-once-per-objects thrownObjectHitsComputer:purple) (count thrownObjectHitsComputer:pink) 10 )
)
)

(define (game game-id-931) (:domain many-objects-room-v1)
(:setup
  (exists (?c - ball)
    (game-conserved
      (and
        (agent_holds top_shelf)
        (in_motion ?c)
      )
    )
  )
)
(:constraints
  (and
    (preference throwInBin
      (exists (?t - sliding_door)
        (then
          (once (not (and (on ?t ?t) (in_motion ?t) ) ) )
          (once (in_motion ?t) )
          (once (in_motion ?t) )
          (once (and (agent_holds ?t) (not (agent_holds desk) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (and
      (or
        (>= (count throwInBin:pink) (count throwInBin:green) )
        (>= 4 (count throwInBin:beachball) )
      )
      (>= 3 300 )
    )
    (and
      (>= (count throwInBin:side_table) (count throwInBin:green) )
      (< 10 8 )
      (>= (count throwInBin:yellow:purple) 3 )
    )
  )
)
(:scoring
  (- (* (count throwInBin:yellow:golfball) 1 )
  )
)
)

(define (game game-id-932) (:domain medium-objects-room-v1)
(:setup
  (exists (?o ?d - hexagonal_bin)
    (game-conserved
      (or
        (agent_holds ?d)
        (on ?d ?d)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToRug
      (exists (?t1 - drawer)
        (at-end
          (not
            (agent_holds ?t1)
          )
        )
      )
    )
    (preference cubeThrownToBin
      (exists (?o - bridge_block)
        (then
          (once (exists (?db ?l1 - (either mug dodgeball pyramid_block doggie_bed)) (and (agent_holds ?o) (exists (?d2 - hexagonal_bin ?r - chair ?l4 - building ?r1 - cube_block) (in_motion ?l1) ) (agent_holds floor) (faces ?o ?l1) ) ) )
          (hold (and (in_motion agent) (in_motion desk) ) )
          (once (not (not (and (and (same_color ?o ?o) (agent_holds desk) (in ?o south_west_corner) ) (and (agent_holds block) (on ?o ?o) (and (in ?o room_center) (or (agent_holds bed) (object_orientation ?o ?o) ) (and (object_orientation ?o rug) (in_motion agent) ) (same_color ?o agent) ) ) ) ) ) )
        )
      )
    )
    (preference beachballBouncedOffRamp
      (exists (?b9 - game_object ?d - ball)
        (then
          (once (agent_holds ?d) )
          (hold (adjacent_side agent ?d ?d ?d) )
          (once (and (on ?d ?d) (and (in_motion ?d) (and (agent_holds ?d) (faces ?d ?d) (not (toggled_on ?d) ) ) ) (same_type ?d ?d) ) )
        )
      )
    )
  )
)
(:terminal
  (> (and 5 (count-shortest ballThrownToRug:beachball) 0 ) 5 )
)
(:scoring
  4
)
)

(define (game game-id-933) (:domain many-objects-room-v1)
(:setup
  (exists (?g - dodgeball)
    (forall (?bl - building ?d - triangular_ramp)
      (forall (?d - wall ?b - dodgeball)
        (game-conserved
          (same_color ?d ?g)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c6 - hexagonal_bin)
      (and
        (preference agentLeavesDogbedOrNoMoreBalls
          (exists (?c4 - building)
            (then
              (once (adjacent desk ?c4) )
              (hold (agent_crouches ) )
              (hold (<= (distance ?c4 ?c6) 0.5) )
            )
          )
        )
        (preference dropAttempt
          (exists (?r1 - (either golfball cube_block))
            (at-end
              (and
                (not
                  (on ?c6 door)
                )
                (not
                  (and
                    (rug_color_under ?r1 ?r1)
                    (in_motion ?r1)
                    (not
                      (and
                        (open bridge_block)
                        (not
                          (adjacent agent bed)
                        )
                        (not
                          (and
                            (and
                              (on ?r1 ?c6)
                              (or
                                (in_motion ?r1)
                                (in_motion ?c6)
                              )
                            )
                            (and
                              (and
                                (and
                                  (toggled_on ?r1)
                                  (adjacent_side ?c6 ?r1 ?c6)
                                )
                                (same_type desk ?r1)
                              )
                              (in agent ?c6)
                            )
                            (not
                              (on ?r1 agent)
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
        (preference ballThrownFromRug
          (exists (?c1 - hexagonal_bin)
            (then
              (hold (in room_center ?c1) )
              (once (and (agent_holds ?c6) (in_motion ?c1) ) )
              (hold (adjacent ?c6 desk) )
            )
          )
        )
        (preference ballNeverThrown
          (exists (?h - teddy_bear)
            (then
              (once (between ?c6 ?h ?c6) )
              (once (exists (?x - block ?s - dodgeball) (not (agent_crouches ) ) ) )
              (hold (not (object_orientation desk ?c6) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* 3 (* 30 15 )
    )
    5
  )
)
(:scoring
  (* (count dropAttempt:hexagonal_bin) (count agentLeavesDogbedOrNoMoreBalls:beachball) (count-once ballThrownFromRug:doggie_bed:dodgeball) (= (* (count ballNeverThrown:doggie_bed) (count ballThrownFromRug:red) )
      (count ballThrownFromRug:yellow:dodgeball)
      (count ballThrownFromRug:blue_pyramid_block)
    )
    (count dropAttempt:yellow)
    (count-once-per-objects agentLeavesDogbedOrNoMoreBalls:pink)
    6
    (- 3 )
    (count ballThrownFromRug:side_table)
    (count-once-per-objects ballNeverThrown:red:beachball)
    (count ballNeverThrown:golfball)
    7
  )
)
)

(define (game game-id-934) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (game-conserved
        (forall (?h - dodgeball)
          (> (distance ?h front_left_corner) 2)
        )
      )
      (forall (?o - game_object)
        (game-optional
          (not
            (agent_holds back)
          )
        )
      )
    )
    (exists (?l4 - dodgeball)
      (game-optional
        (< 1 (distance ?l4 room_center))
      )
    )
  )
)
(:constraints
  (and
    (preference woodenBlockMovedFromRugToDesk
      (exists (?g - game_object)
        (then
          (once (adjacent ?g ?g) )
          (hold (in ?g ?g) )
          (once (agent_holds ?g) )
        )
      )
    )
    (forall (?h - (either cd lamp cube_block cylindrical_block cube_block triangle_block dodgeball))
      (and
        (preference blockPlacedInBuilding
          (exists (?c2 - hexagonal_bin)
            (at-end
              (on ?c2 ?h)
            )
          )
        )
      )
    )
    (forall (?h - dodgeball ?d - cube_block)
      (and
        (preference ballThrownThroughRampToBin
          (exists (?b1 - ball ?p3 - hexagonal_bin)
            (then
              (once (not (not (and (and (and (not (agent_holds ?p3) ) (in ?d floor) ) (in_motion ?p3) ) (and (agent_holds block) (or (and (on ?p3 block) (agent_holds green_golfball) (forall (?b2 - ball ?w - (either pyramid_block cellphone hexagonal_bin)) (adjacent ?w pillow) ) ) (and (and (not (agent_holds bed) ) (in_motion ?d) ) (object_orientation ?d pillow) ) (in_motion ?d) ) ) ) ) ) )
              (hold (in_motion ?d) )
              (hold (agent_holds ?d) )
            )
          )
        )
        (preference blockIncorrectlyPicked
          (exists (?r - pillow)
            (then
              (hold (on ?r ?d) )
              (once (not (agent_holds ?r) ) )
              (forall-sequence (?h - block ?f ?p3 ?d ?h - curved_wooden_ramp)
                (then
                  (once (not (not (on ?h ?r) ) ) )
                  (once (and (in_motion ?h) (same_object ?d ?f) ) )
                  (once (on ?h ?p3) )
                )
              )
            )
          )
        )
        (preference objectLandsInBin
          (exists (?b1 - hexagonal_bin ?b - shelf ?t2 - (either dodgeball book) ?d1 - hexagonal_bin ?h - hexagonal_bin)
            (at-end
              (on ?h ?h)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (+ 5 10 )
    (* (total-time) (* (+ (count blockPlacedInBuilding:pyramid_block:tan) 6 (* 50 (external-forall-maximize 3 ) )
        )
        5
      )
    )
  )
)
(:scoring
  (count-same-positions blockIncorrectlyPicked:hexagonal_bin)
)
)

(define (game game-id-935) (:domain medium-objects-room-v1)
(:setup
  (exists (?o1 - building)
    (game-optional
      (not
        (not
          (in_motion ?o1)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blindsOpened
      (exists (?c5 - hexagonal_bin ?h - wall ?c - dodgeball ?t2 - (either laptop cd) ?b3 - hexagonal_bin)
        (then
          (hold (and (not (not (on ?b3 ?b3) ) ) (in_motion ?b3) ) )
          (once (not (in ?b3 rug) ) )
          (hold (not (same_color ?b3 agent) ) )
          (once (and (not (not (exists (?b - block ?t - chair) (agent_holds ?b3) ) ) ) (not (not (< (distance ?b3 ?b3) 9) ) ) ) )
        )
      )
    )
    (forall (?b - hexagonal_bin ?b - (either game_object credit_card cd) ?r - dodgeball)
      (and
        (preference binKnockedOver
          (exists (?t2 - dodgeball ?t2 - (either dodgeball dodgeball))
            (then
              (hold-for 7 (not (adjacent ?t2 rug) ) )
              (hold (in_motion ?r) )
              (hold (in ?r ?t2) )
            )
          )
        )
      )
    )
    (forall (?c - hexagonal_bin)
      (and
        (preference blockPickedUp
          (exists (?d - building ?d1 - hexagonal_bin)
            (then
              (hold (in_motion rug) )
              (once (agent_holds ?c) )
              (hold (on ?d1 ?c) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (<= (count-total blockPickedUp:orange) 3 )
  )
)
(:scoring
  1
)
)

(define (game game-id-936) (:domain medium-objects-room-v1)
(:setup
  (exists (?tb - hexagonal_bin)
    (game-conserved
      (same_color ?tb ?tb)
    )
  )
)
(:constraints
  (and
    (forall (?d2 - hexagonal_bin)
      (and
        (preference towerFallsWhileBuilding
          (then
            (forall-sequence (?ob - doggie_bed ?d - ball)
              (then
                (hold (agent_holds ?d) )
                (hold (agent_holds ?d2) )
                (hold (not (and (touch agent ?d) (in_motion desk) ) ) )
              )
            )
            (hold (agent_holds ?d2) )
            (hold-while (and (and (not (< 7 (x_position ?d2)) ) (= (distance ?d2 ?d2) 1) ) ) (not (on ?d2 floor) ) )
          )
        )
        (preference ballKnocksTeddy
          (exists (?l2 - hexagonal_bin)
            (then
              (once (and (in ?d2 ?d2) (and (and (exists (?c - (either cd yellow_cube_block flat_block cylindrical_block triangle_block yellow_cube_block cylindrical_block)) (not (in_motion ?c) ) ) (game_over ) ) (< 1 1) ) ) )
              (hold (not (and (agent_holds ?d2) (agent_holds ?l2) ) ) )
              (once (and (= 9) (in_motion ?d2) ) )
            )
          )
        )
      )
    )
    (preference ballRolledOnRampToRug
      (exists (?d - cube_block)
        (then
          (hold-while (adjacent ?d ?d) (adjacent door agent) )
          (once (adjacent rug upside_down) )
          (hold (and (in ?d ?d) (and (not (agent_holds ?d) ) (adjacent_side ?d ?d desk ?d) (agent_holds ?d) ) (in_motion ?d) ) )
        )
      )
    )
    (preference bigObjectThrownToBed
      (exists (?h - drawer)
        (then
          (once (faces ?h ?h) )
          (once (in_motion ?h) )
          (once (adjacent ?h ?h) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 4 (count-once-per-objects ballKnocksTeddy:hexagonal_bin:dodgeball) )
    (count towerFallsWhileBuilding:purple)
  )
)
(:scoring
  (count towerFallsWhileBuilding:blue_dodgeball)
)
)

(define (game game-id-937) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?o1 ?h ?h - (either desktop floor mug))
      (game-conserved
        (in_motion pink)
      )
    )
  )
)
(:constraints
  (and
    (preference throwKnocksBlock
      (exists (?b - cube_block)
        (then
          (hold (and (and (exists (?l - red_dodgeball) (on ?b ?l) ) (and (agent_holds agent) (not (in_motion ?b) ) ) ) (and (< 2 2) (agent_holds ?b) ) ) )
          (hold (in ?b ?b) )
          (once (and (agent_holds ?b) (is_setup_object ?b) ) )
          (hold (agent_holds ?b) )
        )
      )
    )
    (forall (?l2 - dodgeball)
      (and
        (preference ballThrownFromObjectToBin
          (exists (?w1 - blue_cube_block)
            (then
              (hold (not (adjacent ?l2 ?l2) ) )
              (once (on ?l2 ?w1) )
              (once (on ?w1 ?w1) )
            )
          )
        )
        (preference blockCorrectlyPicked
          (exists (?d ?r2 - cube_block)
            (then
              (once (agent_holds agent) )
              (once (not (in_motion rug) ) )
              (hold (and (< (distance desk ?l2) 6) (in_motion ?l2) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< (* 2 (* (- (count-once ballThrownFromObjectToBin:purple) )
        4
        (* 3 (count-once-per-objects ballThrownFromObjectToBin:pink_dodgeball) )
      )
    )
    (total-time)
  )
)
(:scoring
  (* (count-total ballThrownFromObjectToBin:beachball) (* 10 (* (external-forall-maximize 5 ) (count-once-per-objects ballThrownFromObjectToBin:basketball) )
    )
  )
)
)

(define (game game-id-938) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds upside_down)
  )
)
(:constraints
  (and
    (preference redDodgeballThrownToBinWithoutTouchingFloor
      (exists (?b1 - building)
        (then
          (hold (or (agent_holds ?b1) (is_setup_object ?b1) ) )
          (hold-while (open desk) (in_motion ?b1) (in ?b1 bed) )
          (once (not (not (not (and (adjacent ?b1 ?b1) (and (in_motion green_golfball) (agent_holds ?b1) (not (not (on ?b1 ?b1) ) ) ) ) ) ) ) )
        )
      )
    )
    (preference ballThrownThroughRampAndBlocksToBin
      (exists (?r - chair)
        (then
          (forall-sequence (?r - hexagonal_bin)
            (then
              (hold-while (= 1) (not (and (adjacent bridge_block ?r) (not (agent_holds ?r) ) ) ) (< 3 7) )
              (once (on rug ?r) )
              (forall-sequence (?o - dodgeball)
                (then
                  (once (agent_holds ?o) )
                  (hold-while (same_color ?r ?r) (and (in_motion ?r) (same_color ?o ?o) ) )
                  (once (on ?r ?o) )
                )
              )
            )
          )
          (forall-sequence (?h ?o - dodgeball)
            (then
              (hold (and (in ?h ?o) (and (and (not (agent_holds ?h) ) (is_setup_object agent) ) (not (in desk ?o) ) (same_color bed ?o) ) ) )
              (hold (adjacent_side bed side_table ?r) )
              (hold (in ?r agent) )
            )
          )
          (hold (in_motion ?r) )
        )
      )
    )
    (forall (?l1 - hexagonal_bin ?h - game_object)
      (and
        (preference otherObjectsOnDeskShelf
          (exists (?r - block ?g - hexagonal_bin)
            (at-end
              (object_orientation ?g ?g)
            )
          )
        )
      )
    )
    (forall (?r - shelf)
      (and
        (preference ballInOrOnBin
          (exists (?b - curved_wooden_ramp)
            (at-end
              (in_motion ?b)
            )
          )
        )
        (preference greenObjectMovedToRoomCenter
          (exists (?r - doggie_bed ?h - hexagonal_bin)
            (then
              (once (and (not (= 0.5 (distance_side ?h ?r ?h)) ) (on ?r rug) ) )
              (once (adjacent ?h ?h) )
              (once (agent_holds ?h) )
            )
          )
        )
      )
    )
    (preference throwFromDoorToBin
      (exists (?g ?g - (either laptop))
        (then
          (once (not (on pink_dodgeball room_center) ) )
          (hold (between ?g ?g ?g) )
          (once (and (adjacent_side ?g ?g ?g desk) (and (agent_holds room_center) (agent_holds ?g) ) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (and
      (or
        (>= (* 9 )
          2
        )
      )
    )
    (not
      (>= 2 10 )
    )
  )
)
(:scoring
  4
)
)

(define (game game-id-939) (:domain few-objects-room-v1)
(:setup
  (exists (?b - pillow)
    (forall (?c2 - block)
      (forall (?w2 - curved_wooden_ramp ?b - dodgeball)
        (and
          (forall (?c - hexagonal_bin)
            (forall (?b7 - wall ?l - dodgeball)
              (game-conserved
                (object_orientation agent ?c)
              )
            )
          )
          (game-conserved
            (and
              (agent_holds ?b)
              (not
                (on ?c2 ?b)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c - hexagonal_bin ?o ?db - doggie_bed)
      (and
        (preference throwKnocksOverBear
          (exists (?d - ball)
            (then
              (once (in_motion west_wall) )
              (once (and (in_motion ?d) (adjacent_side agent ?o ?o) ) )
              (once (not (not (on ?db blue) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-once-per-objects throwKnocksOverBear:pink) (+ (count throwKnocksOverBear:basketball:purple) (* (* (* (count-measure throwKnocksOverBear:blue_cube_block) (+ (count throwKnocksOverBear:orange:yellow) (* (count-once-per-objects throwKnocksOverBear:dodgeball:side_table) 100 )
              )
              10
            )
            (= (count-once-per-external-objects throwKnocksOverBear:brown) (* (not 6 ) (count-once-per-objects throwKnocksOverBear:red) (* (count throwKnocksOverBear:blue_pyramid_block) (* (* (* (count-once-per-objects throwKnocksOverBear:pink) 0.5 )
                      (not
                        (+ (+ 15 (count-same-positions throwKnocksOverBear:basketball) (count-longest throwKnocksOverBear:yellow_pyramid_block) )
                          (count throwKnocksOverBear:purple:pink_dodgeball)
                        )
                      )
                    )
                    (and
                      (count throwKnocksOverBear:cube_block)
                    )
                  )
                )
              )
            )
            10
            (* (* 2 3 )
              (* (* (total-time) (count-once-per-objects throwKnocksOverBear:beachball:yellow) 3 )
                (* (+ (count-once-per-objects throwKnocksOverBear:pink_dodgeball) (count-once-per-objects throwKnocksOverBear:yellow) )
                  (count-once throwKnocksOverBear:dodgeball)
                )
                (external-forall-maximize
                  9
                )
              )
            )
            (count throwKnocksOverBear:red)
          )
          3
        )
      )
    )
    (>= 2 3 )
    (or
      (<= (count-once-per-objects throwKnocksOverBear:dodgeball) 4 )
      (>= 0 (count throwKnocksOverBear:golfball) )
      (>= (total-score) (>= (count-once throwKnocksOverBear:golfball:side_table:triangle_block) 0.7 )
      )
      (>= (count-longest throwKnocksOverBear:beachball) (* 4 (+ (count throwKnocksOverBear:red) 5 )
        )
      )
    )
  )
)
(:scoring
  (* (* 7 (* (+ 9 (and 9 ) )
        (count-once-per-objects throwKnocksOverBear)
      )
    )
    (+ (count throwKnocksOverBear:basketball) 2 (* (* (count throwKnocksOverBear:basketball) (- 50 )
          (count throwKnocksOverBear:yellow)
        )
        (* (+ (* 4 (count-once-per-objects throwKnocksOverBear:side_table:dodgeball) )
            (+ (count throwKnocksOverBear:purple) (* (+ (total-time) 3 )
                (total-score)
                (count-once-per-objects throwKnocksOverBear:side_table:basketball)
              )
            )
          )
          4
        )
      )
      (count-once-per-objects throwKnocksOverBear:green:beachball)
    )
    (count-shortest throwKnocksOverBear:beachball)
  )
)
)

(define (game game-id-940) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?c - (either yellow_cube_block pyramid_block bridge_block))
      (game-conserved
        (in_motion ?c)
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - hexagonal_bin)
      (and
        (preference throwGolfballToBin
          (exists (?b - blinds)
            (then
              (once (exists (?r - hexagonal_bin ?c3 - wall) (and (and (in_motion ?b) (and (rug_color_under ?c3 desk) (not (not (not (and (and (adjacent ?c3 agent) (agent_holds ?b) ) (and (in_motion ?c3) (not (agent_holds desk) ) (in_motion desk) ) ) ) ) ) (agent_holds ?b) ) (touch desk bed) (in ?c3 floor) (adjacent ?c3 ?b) (game_start ) (and (game_start ) (not (not (in ?b ?c3) ) ) ) (in_motion ?c3) ) (and (and (and (not (and (and (between ?b ?c3 ?c3) (not (and (not (and (agent_holds upside_down) (and (in_motion ?b) (adjacent ?c3 ?c3) ) ) ) (not (and (not (and (on ?b ?c3) (and (in_motion ?c3) (> (distance ?c3 ?c3) 6) ) ) ) (adjacent desk ?b) (on ?c3 ?c3) (not (agent_holds bridge_block) ) (same_color ?c3 ?c3) (on ?b ?c3) (and (and (in_motion ?b) (same_object bed ?c3) (agent_holds ?c3) ) (not (agent_holds bed) ) (and (in_motion ?b) (and (agent_holds ?c3) (and (and (agent_holds ?b) (and (agent_holds ?c3) (and (agent_holds ?b) (on ?c3 ?b) (in_motion ?b) ) ) ) (in_motion ?c3) ) ) ) (agent_holds ?b) ) (agent_holds ?c3) (and (on pillow ?c3) ) (touch ?b ?b) (in ?c3 ?b) (in_motion ?c3) ) ) ) ) ) (agent_holds ?c3) ) ) (on ?b ?c3) (open ?b) (not (agent_crouches ) ) (agent_holds ?b) (and (and (agent_holds ?c3) (agent_holds ?c3) ) (and (and (game_start ) (and (< 1 (distance ?b ?b)) (agent_holds ?b) ) ) (and (in_motion ?b) (and (on desk ?c3) (in ?c3 agent) ) ) ) ) ) (in_motion ?b) (same_type ?c3 ?c3) ) (in ?b ?b) ) ) ) )
              (hold-while (not (agent_holds ?b) ) (and (adjacent ?b ?b) (not (in_motion ?b) ) (agent_holds ?b) (and (not (not (and (toggled_on ?b) (agent_holds ?b) ) ) ) (in_motion ?b) (in_motion ?b) ) (in ?b ?b) (agent_holds ?b) (and (< (distance ?b ?b) (distance ?b ?b)) (not (in_motion desk) ) ) ) )
              (once (not (agent_holds ?b) ) )
            )
          )
        )
      )
    )
    (preference throwToBin
      (exists (?r - building)
        (then
          (once (in_motion ?r) )
          (hold (and (adjacent agent ?r) (= (distance ?r ?r) (distance_side ?r ?r ?r) 2) (= (distance ?r ?r) (distance ?r ?r)) ) )
          (once (and (and (< 5 (distance ?r ?r)) (object_orientation ?r rug) ) (not (in_motion ?r) ) (same_type ?r ?r) ) )
          (hold (and (on ?r upright) (and (on ?r upright) (on ?r ?r) (on ?r desk) ) ) )
        )
      )
    )
    (preference ballThrownThroughRampAndBlocksToBin
      (exists (?t1 - dodgeball)
        (at-end
          (adjacent ?t1 ?t1)
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (<= (count throwToBin:book) (external-forall-minimize (total-score) ) )
      (* (- (count throwToBin:red:doggie_bed:triangle_block) )
        10
      )
    )
    (= (+ (count-longest ballThrownThroughRampAndBlocksToBin) (+ (- 10 (count-once-per-objects ballThrownThroughRampAndBlocksToBin:golfball) ) 2 (count ballThrownThroughRampAndBlocksToBin:cube_block:blue_pyramid_block) )
      )
      (* (= (count-overlapping throwGolfballToBin:red) (* 18 3 (count ballThrownThroughRampAndBlocksToBin:basketball:book) (total-time) (* (> (* 1 (count throwToBin:dodgeball) )
                (count throwGolfballToBin:tall_cylindrical_block)
              )
              (- (* 15 (* (count-total throwGolfballToBin:dodgeball) (- 10 )
                  )
                )
              )
            )
            (* (count ballThrownThroughRampAndBlocksToBin:basketball) (count throwToBin:basketball) )
          )
        )
        (count throwToBin:cylindrical_block)
      )
    )
    (>= (+ (count-once-per-external-objects ballThrownThroughRampAndBlocksToBin:green) (* 3 (count throwGolfballToBin:book:pink:dodgeball) 3 )
      )
      (count ballThrownThroughRampAndBlocksToBin:blue_pyramid_block)
    )
  )
)
(:scoring
  (>= (count throwToBin:tall_cylindrical_block:pink_dodgeball) 6 )
)
)

(define (game game-id-941) (:domain many-objects-room-v1)
(:setup
  (forall (?s - hexagonal_bin)
    (forall (?b6 - hexagonal_bin)
      (and
        (exists (?w - (either triangular_ramp cube_block))
          (game-optional
            (not
              (in_motion ?w)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference nonBlockPlacedInBuilding
      (exists (?c - game_object ?c - curved_wooden_ramp)
        (at-end
          (not
            (and
              (or
                (on ?c ?c)
                (toggled_on floor)
              )
              (agent_holds ?c)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (count-once-per-objects nonBlockPlacedInBuilding:hexagonal_bin) 5 )
)
(:scoring
  (* (count-once-per-objects nonBlockPlacedInBuilding:dodgeball) 3 )
)
)

(define (game game-id-942) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (not
      (not
        (in_motion agent)
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttemptKnocksBlock
      (exists (?c - cube_block ?c2 - hexagonal_bin)
        (then
          (once (in_motion ?c2) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects throwAttemptKnocksBlock:golfball) (count-once throwAttemptKnocksBlock:dodgeball) )
)
(:scoring
  7
)
)

(define (game game-id-943) (:domain many-objects-room-v1)
(:setup
  (exists (?c1 - yellow_cube_block)
    (game-conserved
      (touch ?c1 ?c1)
    )
  )
)
(:constraints
  (and
    (preference redDodgeballThrownToBin
      (exists (?f - (either teddy_bear golfball) ?b2 - ball)
        (then
          (once (in_motion agent) )
          (once (in_motion ?b2) )
          (once (and (on floor bed) (in_motion desk) ) )
        )
      )
    )
    (preference objectThrownFromRug
      (exists (?g - golfball)
        (then
          (once (touch ?g desk) )
          (hold (agent_holds ?g) )
          (hold (in green_golfball agent) )
        )
      )
    )
    (preference dodgeballAndBasketballInBin
      (exists (?h - hexagonal_bin)
        (then
          (once (< 1 (distance ?h ?h)) )
          (once (adjacent door ?h) )
          (once (in ?h ?h) )
        )
      )
    )
  )
)
(:terminal
  (<= (+ 10 (count dodgeballAndBasketballInBin:alarm_clock) )
    (and
      4
    )
  )
)
(:scoring
  (external-forall-maximize
    (+ (* (* (* (count dodgeballAndBasketballInBin:beachball) (count redDodgeballThrownToBin:triangle_block) )
          (count dodgeballAndBasketballInBin:pink_dodgeball)
        )
        2
        (count redDodgeballThrownToBin:top_drawer)
        2
      )
      (count redDodgeballThrownToBin:purple:top_drawer)
    )
  )
)
)

(define (game game-id-944) (:domain many-objects-room-v1)
(:setup
  (exists (?p - ball)
    (game-optional
      (and
        (on upright ?p)
        (exists (?o1 - dodgeball ?o - triangular_ramp)
          (or
            (in ?o ?o)
            (in_motion ?o)
            (on agent ?p)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectInBuilding
      (exists (?b2 - dodgeball)
        (then
          (once (not (on ?b2 ?b2) ) )
          (hold (adjacent ?b2 ?b2) )
          (hold (same_object ?b2 ?b2) )
        )
      )
    )
  )
)
(:terminal
  (>= 9 (- 10 )
  )
)
(:scoring
  (count-once-per-objects objectInBuilding:golfball)
)
)

(define (game game-id-945) (:domain few-objects-room-v1)
(:setup
  (exists (?b ?l2 - triangular_ramp)
    (game-conserved
      (agent_holds ?b)
    )
  )
)
(:constraints
  (and
    (forall (?h - chair)
      (and
        (preference cubeThrownToBin
          (exists (?b - dodgeball)
            (then
              (once (same_color ?b ?h) )
              (hold (agent_holds agent) )
              (once (not (and (not (and (agent_holds ?b) (exists (?h - beachball ?d - chair) (on ?h ?h) ) ) ) (in ?h ?b) ) ) )
            )
          )
        )
        (preference dodgeballFromDeskToTarget
          (exists (?t2 - cube_block)
            (then
              (once (touch ?t2 ?h) )
            )
          )
        )
        (preference objectThrownFromRug
          (then
            (once (or (in_motion ?h) (exists (?l4 - ball) (agent_holds ?l4) ) ) )
            (once (and (on ?h room_center) (agent_holds ?h) ) )
            (once (object_orientation desk ?h) )
          )
        )
      )
    )
  )
)
(:terminal
  (> (count-overlapping dodgeballFromDeskToTarget:block:blue_dodgeball) (- (* (* (< 8 (* 3 )
          )
          (count dodgeballFromDeskToTarget:side_table)
          (* (external-forall-maximize (+ (count-once-per-objects dodgeballFromDeskToTarget:cube_block) (count-once-per-objects dodgeballFromDeskToTarget:book) (+ (count-overlapping objectThrownFromRug:dodgeball:red:dodgeball) (count cubeThrownToBin:beachball:green) )
                (* (* (not (* 10 2 )
                    )
                    (count objectThrownFromRug:dodgeball)
                    (- 2 )
                  )
                )
                (count-once-per-objects cubeThrownToBin:pink_dodgeball)
                4
              )
            )
            (* 2 (<= (* 4 (= (count dodgeballFromDeskToTarget:dodgeball) (* (+ 25 0 )
                      (count-shortest objectThrownFromRug:pink)
                    )
                  )
                )
                (count-once-per-objects objectThrownFromRug:cube_block:pyramid_block)
              )
            )
          )
          6
        )
        2
      )
    )
  )
)
(:scoring
  2
)
)

(define (game game-id-946) (:domain many-objects-room-v1)
(:setup
  (exists (?w - (either cd top_drawer cd game_object dodgeball cylindrical_block cube_block))
    (and
      (game-conserved
        (in ?w ?w)
      )
    )
  )
)
(:constraints
  (and
    (preference greenObjectMovedToRoomCenter
      (exists (?h - hexagonal_bin ?h - pyramid_block ?d - hexagonal_bin)
        (then
          (once (not (not (in_motion agent) ) ) )
          (hold-while (toggled_on ?d) (in_motion ?d) )
          (once (and (or (agent_holds ?d) ) (agent_holds ?d) (in bed ?d) ) )
        )
      )
    )
    (preference objectWithMatchingColor
      (exists (?h ?c ?h - cube_block)
        (then
          (hold (and (in_motion ?h) (in_motion agent) (and (in ?h ?c) (and (and (not (and (faces bed ?h) (adjacent_side ?h ?h ?c ?c) ) ) (in ?c agent) ) (in_motion ?c) ) (agent_holds ?h) ) ) )
          (once (in floor ?c) )
          (hold (in_motion ?h) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (* 1 (count greenObjectMovedToRoomCenter:cube_block) )
  )
)
(:scoring
  3
)
)

(define (game game-id-947) (:domain medium-objects-room-v1)
(:setup
  (exists (?h - teddy_bear)
    (forall (?d1 ?c - color)
      (and
        (forall (?o - dodgeball)
          (and
            (game-conserved
              (in ?c ?d1)
            )
            (forall (?r - curved_wooden_ramp ?o - shelf ?r2 - (either bed curved_wooden_ramp))
              (and
                (game-optional
                  (adjacent ?h ?d1)
                )
                (game-conserved
                  (between ?o ?d1 ?d1)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToRampToBin
      (exists (?c3 - block)
        (at-end
          (on ?c3 ?c3)
        )
      )
    )
    (preference ballThrownMissesEverything
      (exists (?b8 - hexagonal_bin)
        (then
          (once (in_motion ?b8) )
          (hold-while (and (not (adjacent_side ?b8 ?b8 ?b8) ) (not (not (not (on block ?b8) ) ) ) (agent_holds east_sliding_door) ) (rug_color_under ?b8 ?b8) )
          (once (exists (?o - game_object) (in_motion ?o) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (> 50 (- (count throwToRampToBin:basketball) )
    )
  )
)
(:scoring
  10
)
)

(define (game game-id-948) (:domain many-objects-room-v1)
(:setup
  (forall (?l2 - hexagonal_bin ?o - ball)
    (game-conserved
      (in_motion ?o)
    )
  )
)
(:constraints
  (and
    (preference otherObjectsOnDeskShelf
      (exists (?o1 - pillow)
        (then
          (hold-while (agent_holds ?o1) (exists (?d ?c ?c ?g ?b ?b ?d ?p ?c3 ?g - cube_block) (on agent front) ) )
          (once (and (not (not (not (not (in_motion ?o1) ) ) ) ) (same_color ?o1 ?o1) ) )
          (once (in ?o1 desk) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (* (* (count-once otherObjectsOnDeskShelf:pink) (count-once-per-objects otherObjectsOnDeskShelf:dodgeball) )
        20
      )
      (+ (count otherObjectsOnDeskShelf:purple) (count otherObjectsOnDeskShelf:dodgeball) (count otherObjectsOnDeskShelf:beachball) (count-once-per-objects otherObjectsOnDeskShelf:pink) (count otherObjectsOnDeskShelf:top_drawer) (count-overlapping otherObjectsOnDeskShelf:blue_dodgeball) 30 )
    )
    10
  )
)
(:scoring
  (+ 6 (count-once-per-objects otherObjectsOnDeskShelf:blue_pyramid_block) )
)
)

(define (game game-id-949) (:domain few-objects-room-v1)
(:setup
  (exists (?d - block)
    (exists (?d - ball)
      (game-optional
        (and
          (agent_holds ?d)
          (not
            (in_motion right)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference bigObjectThrownToBed
      (exists (?b5 - dodgeball)
        (then
          (hold (agent_holds ?b5) )
          (once (not (on agent top_drawer) ) )
          (once (or (not (in ?b5 ?b5) ) (agent_holds ?b5) ) )
        )
      )
    )
    (preference redDodgeballThrownToBin
      (exists (?b1 - building)
        (then
          (once (and (on ?b1 ?b1) (adjacent ?b1 desk) ) )
          (once (agent_holds ?b1) )
          (hold-while (in_motion ?b1) (above ?b1 ?b1) )
          (once (in_motion ?b1) )
          (once (same_color ?b1 desk) )
        )
      )
    )
    (preference ballKnocksTeddy
      (exists (?b5 ?c - cube_block)
        (then
          (once (not (adjacent_side ?b5 rug ?c) ) )
          (once (in_motion sideways) )
          (once (agent_holds agent) )
        )
      )
    )
  )
)
(:terminal
  (= (count-once ballKnocksTeddy:basketball:dodgeball) (* 5 3 )
  )
)
(:scoring
  (count-once-per-objects bigObjectThrownToBed:basketball:dodgeball)
)
)

(define (game game-id-950) (:domain medium-objects-room-v1)
(:setup
  (forall (?t ?r - drawer ?tb ?r ?o1 ?c - hexagonal_bin ?d - pillow ?l3 - (either lamp pyramid_block) ?l1 - flat_block)
    (forall (?w - ball ?h - cube_block)
      (game-conserved
        (in_motion agent)
      )
    )
  )
)
(:constraints
  (and
    (preference blockInTowerKnocked
      (exists (?b - hexagonal_bin ?g - beachball)
        (then
          (once (agent_holds ?g) )
          (hold (not (on ?g ?g) ) )
          (once (and (or (and (and (agent_holds door) (and (not (adjacent ?g ?g) ) (touch ?g ?g) ) ) (in_motion ?g) ) (and (not (on ?g ?g) ) (in_motion ?g) ) ) (equal_z_position ?g ?g) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (+ (- 5 )
      3
      (* 3 1 )
      (count-once-per-objects blockInTowerKnocked:dodgeball)
      (* (count-overlapping blockInTowerKnocked:dodgeball) (count-same-positions blockInTowerKnocked:beachball) )
      8
    )
  )
)
(:scoring
  (count-shortest blockInTowerKnocked:red)
)
)

(define (game game-id-951) (:domain medium-objects-room-v1)
(:setup
  (forall (?b - bridge_block)
    (forall (?b - ball)
      (game-conserved
        (in_motion room_center)
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballFromDeskToTarget
      (exists (?o4 - hexagonal_bin)
        (then
          (once (adjacent bridge_block ?o4) )
          (hold (not (exists (?h - (either blue_cube_block cellphone lamp mug)) (>= 10 (distance rug agent)) ) ) )
          (once (and (not (not (equal_x_position ?o4 ?o4) ) ) (adjacent ?o4 sideways) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (count-once-per-objects dodgeballFromDeskToTarget:basketball) )
)
(:scoring
  (count-unique-positions dodgeballFromDeskToTarget:top_drawer)
)
)

(define (game game-id-952) (:domain few-objects-room-v1)
(:setup
  (exists (?p1 - curved_wooden_ramp)
    (game-conserved
      (adjacent ?p1 ?p1)
    )
  )
)
(:constraints
  (and
    (preference ballInOrOnBin
      (exists (?d - hexagonal_bin)
        (then
          (once (agent_holds rug) )
          (once (and (opposite ?d ?d) (in_motion ?d) ) )
          (hold (agent_holds ?d) )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (* (* (count-once ballInOrOnBin:basketball) 300 )
        (total-time)
      )
      (count ballInOrOnBin:basketball:blue_pyramid_block)
    )
    (or
      (>= (count ballInOrOnBin:basketball:blue_dodgeball) (- (* 2 (+ (count ballInOrOnBin:golfball) 1 )
            3
          )
        )
      )
      (> (count ballInOrOnBin:cube_block) (count ballInOrOnBin:pink_dodgeball) )
      (> (- (count-once-per-external-objects ballInOrOnBin:basketball) )
        4
      )
    )
  )
)
(:scoring
  (total-score)
)
)

(define (game game-id-953) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?h - hexagonal_bin)
      (and
        (exists (?c2 - game_object ?d - (either golfball cube_block) ?o - cube_block)
          (game-conserved
            (in_motion ?h)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockPlacedInBuilding
      (exists (?b - (either doggie_bed cube_block))
        (then
          (once (< (distance south_wall ?b) 8) )
          (once (in_motion bed) )
          (once (or (agent_holds ?b) (not (agent_holds ?b) ) (not (agent_holds ?b) ) (exists (?t - (either cd pyramid_block)) (and (and (and (in_motion ?t) (broken ?t) (in_motion ?b) ) (same_object ?t ?b) ) (same_type ?t green) ) ) ) )
        )
      )
    )
    (preference pillowThrownToDoggieBed
      (exists (?d - ball ?b4 - dodgeball)
        (then
          (once (and (exists (?b5 - hexagonal_bin) (agent_holds ?b5) ) (not (in_motion agent) ) ) )
          (hold (not (and (same_color ?b4 ?b4) (rug_color_under ?b4 ?b4) ) ) )
          (hold (in_motion door) )
        )
      )
    )
  )
)
(:terminal
  (= 1 (count-once-per-objects blockPlacedInBuilding:golfball) )
)
(:scoring
  (- (count pillowThrownToDoggieBed:green) )
)
)

(define (game game-id-954) (:domain few-objects-room-v1)
(:setup
  (forall (?h - doggie_bed)
    (game-optional
      (and
        (agent_holds front_left_corner)
        (in_motion ?h)
      )
    )
  )
)
(:constraints
  (and
    (preference gameObjectToBin
      (exists (?t1 ?t - doggie_bed)
        (then
          (once (in_motion ?t1) )
          (hold-to-end (agent_holds ?t) )
          (hold (< (distance ?t ?t) (distance_side ?t1 ?t ?t)) )
        )
      )
    )
    (preference throwBallToDoggieBedOffWall
      (exists (?c - color)
        (then
          (hold (not (same_color ?c ?c) ) )
          (once (in_motion ?c) )
          (hold (agent_holds bed) )
          (hold (in ?c ?c) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (+ (count gameObjectToBin:beachball) (count-once-per-objects throwBallToDoggieBedOffWall:dodgeball:rug) )
      (count-longest throwBallToDoggieBedOffWall:purple)
    )
  )
)
(:scoring
  2
)
)

(define (game game-id-955) (:domain many-objects-room-v1)
(:setup
  (exists (?b8 - block)
    (and
      (game-optional
        (and
          (not
            (and
              (and
                (on agent ?b8)
                (in ?b8 ?b8)
              )
              (not
                (not
                  (and
                    (equal_x_position ?b8 ?b8)
                    (agent_holds ?b8)
                    (in_motion ?b8)
                  )
                )
              )
            )
          )
          (on ?b8 ?b8)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToBin
      (exists (?w - chair)
        (then
          (hold (in_motion ?w) )
          (once (on ?w ?w) )
          (hold-while (and (agent_holds ?w) (exists (?c2 - yellow_cube_block) (not (or (not (< 9 (distance ?w top_shelf)) ) (not (and (in_motion ?c2) (not (not (not (agent_holds ?c2) ) ) ) ) ) ) ) ) (in ?w floor) (agent_holds ?w) (and (and (and (in_motion bed) (on ?w ?w) ) (agent_holds ?w) ) (and (< (distance ?w ?w) 6) (not (object_orientation ?w ?w) ) ) ) (not (agent_holds ?w) ) ) (exists (?o3 - hexagonal_bin) (in_motion ?o3) ) (in_motion bed) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (* (* (* (* (count-longest throwToBin:dodgeball:beachball) (count throwToBin:dodgeball) )
            5
            1
          )
          (count throwToBin:basketball:hexagonal_bin)
        )
        3
      )
      (count-once-per-external-objects throwToBin:red:hexagonal_bin)
      (count throwToBin:golfball)
    )
    (count-once-per-objects throwToBin:hexagonal_bin)
  )
)
(:scoring
  4
)
)

(define (game game-id-956) (:domain few-objects-room-v1)
(:setup
  (exists (?w1 - dodgeball ?p2 - hexagonal_bin ?o ?c5 - color)
    (exists (?c - doggie_bed)
      (exists (?c - yellow_cube_block)
        (and
          (forall (?s - hexagonal_bin)
            (exists (?o - block)
              (game-optional
                (same_type ?c ?c)
              )
            )
          )
          (forall (?h - (either pen ball) ?tb ?t - dodgeball ?t - dodgeball ?d - cube_block)
            (game-conserved
              (agent_holds ?c)
            )
          )
          (forall (?b ?c2 ?b5 ?h ?h ?w - doggie_bed ?h - ball)
            (game-conserved
              (agent_holds ?c)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwTeddyOntoPillow
      (exists (?c ?t - (either triangular_ramp tall_cylindrical_block blue_cube_block) ?b - building)
        (at-end
          (not
            (and
              (not
                (in_motion ?b)
              )
              (in ?b agent)
              (same_type ?b ?b)
              (agent_holds ?b)
              (and
                (agent_holds ?b)
                (adjacent ?b ?b)
              )
              (same_object bed ?b)
              (in_motion ?b)
              (in desk ?b)
              (in_motion ?b)
              (and
                (in_motion agent)
                (touch top_drawer ?b)
              )
            )
          )
        )
      )
    )
    (forall (?c4 - bridge_block)
      (and
        (preference smallObjectThrownToBed
          (exists (?w - curved_wooden_ramp)
            (at-end
              (not
                (in_motion ?c4)
              )
            )
          )
        )
        (preference itemsBroken
          (exists (?g - (either cube_block bridge_block dodgeball cube_block cylindrical_block yellow_cube_block ball) ?o - ball)
            (then
              (any)
              (once (adjacent ?c4 ?c4) )
              (once (or (and (not (not (same_color ?o ?c4) ) ) (not (in ?c4 ?c4) ) ) (exists (?l3 - cylindrical_block) (and (not (agent_holds desk) ) (not (agent_holds ?o) ) ) ) ) )
            )
          )
        )
        (preference bigObjectThrownToBed
          (exists (?h - dodgeball ?h - ball ?h - cube_block)
            (then
              (once (equal_z_position ?c4 ?h) )
              (once (same_color agent ?c4) )
              (hold (and (= 1 (distance ?h ?c4)) (agent_holds ?h) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (external-forall-minimize (count smallObjectThrownToBed:blue_dodgeball) ) (count-same-positions itemsBroken:top_drawer) )
)
(:scoring
  (* 2 (count throwTeddyOntoPillow:blue_dodgeball) )
)
)

(define (game game-id-957) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (< 1 1)
  )
)
(:constraints
  (and
    (preference throwFromEdgeOfRug
      (exists (?h - dodgeball ?b1 - cylindrical_block)
        (then
          (once (forall (?h - hexagonal_bin) (on ?h ?h) ) )
          (hold (and (in ?b1 ?b1) (adjacent floor room_center) ) )
          (hold (agent_holds ?b1) )
        )
      )
    )
  )
)
(:terminal
  (or
    (<= (total-score) (* (* (count-measure throwFromEdgeOfRug:pyramid_block) (external-forall-maximize (count-once-per-external-objects throwFromEdgeOfRug:yellow) ) )
        (count throwFromEdgeOfRug:golfball:pink_dodgeball)
      )
    )
    (>= (count-once-per-objects throwFromEdgeOfRug:yellow) 2 )
  )
)
(:scoring
  (count-once throwFromEdgeOfRug:pink)
)
)

(define (game game-id-958) (:domain many-objects-room-v1)
(:setup
  (forall (?o - shelf)
    (game-conserved
      (not
        (in_motion ?o)
      )
    )
  )
)
(:constraints
  (and
    (preference watchOnShelf
      (exists (?r - game_object ?g - hexagonal_bin ?p1 - hexagonal_bin)
        (at-end
          (not
            (> (distance ?p1 ?p1) (x_position room_center))
          )
        )
      )
    )
    (preference blockInTowerKnockedByDodgeball
      (exists (?f - color)
        (then
          (hold (and (not (not (not (agent_holds ?f) ) ) ) (equal_x_position ?f north_wall) (or (touch bed ?f) ) ) )
          (once (in_motion ?f) )
          (hold (agent_holds ?f) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (count watchOnShelf:golfball:dodgeball:pink) )
)
(:scoring
  (- (external-forall-minimize (and 15 (count-once-per-objects watchOnShelf:pink_dodgeball) ) ) )
)
)

(define (game game-id-959) (:domain medium-objects-room-v1)
(:setup
  (forall (?h - hexagonal_bin)
    (exists (?h - teddy_bear ?g - hexagonal_bin)
      (and
        (forall (?c - ball ?x - hexagonal_bin ?d - hexagonal_bin)
          (game-conserved
            (and
              (on ?g upright)
              (and
                (on floor ?g)
                (in upright ?d)
                (not
                  (and
                    (not
                      (touch agent ?g)
                    )
                    (is_setup_object ?g)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - hexagonal_bin)
      (and
        (preference objectWithMatchingColor
          (exists (?d - (either golfball) ?s - dodgeball)
            (at-end
              (opposite ?s ?b)
            )
          )
        )
      )
    )
    (preference dodgeballHitsBinBottom
      (exists (?h - curved_wooden_ramp ?c - cube_block)
        (then
          (hold (in left agent) )
          (hold-to-end (< 0 1) )
          (hold (in_motion ?c) )
        )
      )
    )
  )
)
(:terminal
  (or
    (< 4 (* 7 (- (- 3 )
        )
      )
    )
    (or
      (>= (count-once-per-external-objects objectWithMatchingColor:doggie_bed:golfball) 1 )
    )
  )
)
(:scoring
  (count dodgeballHitsBinBottom:dodgeball)
)
)

(define (game game-id-960) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?b6 - dodgeball)
      (game-conserved
        (is_setup_object ?b6)
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - hexagonal_bin)
      (and
        (preference teddyBearHitsBall
          (exists (?p - hexagonal_bin)
            (then
              (hold (and (agent_holds ?p) (faces ?p ?p) (and (and (in desk ?b) (< (distance ?b ?b) 2) ) (adjacent agent ?p) ) (and (and (not (not (in_motion ?p) ) ) (not (in_motion ?p) ) (on ?b ?p) (and (game_over ) (and (in ?p door) (in ?b ?p) ) (in room_center ?p) ) ) (on ?b ?p) ) ) )
              (once (not (agent_holds ?b) ) )
              (once (agent_holds ?p) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= 1 (count teddyBearHitsBall:golfball) )
  )
)
(:scoring
  2
)
)

(define (game game-id-961) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (forall (?o2 - game_object)
        (game-conserved
          (= (distance ?o2 agent) (distance_side upright ?o2 ?o2))
        )
      )
      (forall (?c - yellow_cube_block)
        (and
          (game-optional
            (in_motion pink)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference watchOnShelf
      (exists (?r - dodgeball)
        (then
          (once (and (and (and (agent_holds ?r) (not (adjacent ?r desk) ) (not (and (touch ?r ?r) (in_motion ?r) ) ) (equal_x_position room_center ?r) (and (equal_z_position agent ?r) (open upright) ) (same_color ?r ?r) (in_motion ?r) ) (on ?r ?r) (above ?r ?r) (above ?r ?r) (in ?r room_center) (in_motion room_center) ) (exists (?db - game_object) (in_motion agent) ) (and (and (not (agent_holds ?r) ) (in_motion desk) ) (agent_holds ?r) ) ) )
          (once (agent_holds ?r) )
        )
      )
    )
  )
)
(:terminal
  (> (count-once watchOnShelf:red) (count-once-per-objects watchOnShelf:dodgeball) )
)
(:scoring
  (* 20 (count watchOnShelf:green) )
)
)

(define (game game-id-962) (:domain medium-objects-room-v1)
(:setup
  (not
    (exists (?t2 - game_object)
      (forall (?x - hexagonal_bin ?ob - game_object)
        (exists (?t1 - dodgeball)
          (game-optional
            (touch ?ob ?ob)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallFromOtherBallToBin
      (exists (?c - ball)
        (then
          (hold (touch bed ?c) )
          (once (agent_holds ?c) )
        )
      )
    )
    (preference throwAttemptKnocksBlock
      (exists (?w2 - dodgeball ?o - red_dodgeball ?l2 - teddy_bear)
        (then
          (once (agent_holds ?l2) )
          (once (agent_holds agent) )
          (once (not (agent_holds ?l2) ) )
        )
      )
    )
    (preference ballDroppedInBin
      (exists (?s - hexagonal_bin)
        (then
          (once (and (agent_holds ?s) (in_motion agent) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) 10 )
)
(:scoring
  (* 6 (total-score) )
)
)

(define (game game-id-963) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?f - game_object)
      (game-conserved
        (not
          (touch ?f rug)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrowAttempt
      (exists (?p - dodgeball)
        (at-end
          (and
            (and
              (and
                (object_orientation ?p ?p)
                (agent_holds ?p)
              )
              (< 2 (distance ?p desk))
            )
            (not
              (not
                (and
                  (in_motion ?p)
                  (agent_holds ?p)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (+ 5 (count ballThrowAttempt:rug:bed:dodgeball) )
      (count-total ballThrowAttempt:dodgeball)
    )
    4
  )
)
(:scoring
  (count-overlapping ballThrowAttempt:yellow_pyramid_block)
)
)

(define (game game-id-964) (:domain medium-objects-room-v1)
(:setup
  (not
    (and
      (exists (?t - game_object ?h ?d - ball ?c3 - hexagonal_bin)
        (game-conserved
          (adjacent upright ?c3)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToBin
      (exists (?h ?o3 - ball)
        (then
          (hold-while (and (adjacent upright ?o3) (agent_holds ?h) (and (same_object ?h back) (and (same_object ?o3 ?h) (same_type ?o3 ?h) ) ) ) (agent_holds rug) (rug_color_under ?o3 ?h) )
          (once (not (same_object ?h ?h) ) )
          (hold (and (agent_holds ?h) (touch ?h ?o3) ) )
        )
      )
    )
    (preference bounceBallToBin
      (exists (?b5 ?d ?d ?h ?bl ?h - hexagonal_bin ?b - (either pen pyramid_block))
        (then
          (once (not (on ?b ?b) ) )
          (once-measure (or (not (on ?b ?b) ) (in_motion desk) ) (distance ?b ?b) )
          (forall-sequence (?b - dodgeball ?p2 - (either triangle_block chair red) ?t - hexagonal_bin ?h ?b3 - dodgeball ?b - (either cd dodgeball))
            (then
              (once (on ?b ?b) )
              (once (and (not (in_motion desk) ) (open ?b) ) )
              (once (in_motion ?b) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (> (count-once-per-objects bounceBallToBin:red:yellow:pink) (* 7 (* (* (count bounceBallToBin:green) 2 )
          (+ 2 (count bounceBallToBin:red_pyramid_block:hexagonal_bin:purple) )
        )
      )
    )
    (and
      (>= (count-once-per-objects throwToBin:cube_block) 8 )
      (and
        (>= (count-unique-positions bounceBallToBin:beachball) (count-once throwToBin:dodgeball) )
        (and
          (and
            (>= (count-once-per-objects throwToBin:beachball) (count throwToBin:golfball) )
            (or
              (< (count-shortest throwToBin:dodgeball) (count-once-per-objects throwToBin:basketball) )
              (<= (count-once bounceBallToBin:green) 3 )
            )
            (> (total-score) (total-score) )
          )
          (<= (* (count-once-per-objects bounceBallToBin:hexagonal_bin) (count-longest throwToBin:golfball) (* (count-once-per-objects throwToBin:red) )
              (- (count-once-per-objects bounceBallToBin:golfball) )
            )
            (total-time)
          )
        )
        (>= (count throwToBin) (* (count throwToBin:dodgeball) 6 )
        )
      )
    )
  )
)
(:scoring
  (count-once bounceBallToBin:beachball)
)
)

(define (game game-id-965) (:domain many-objects-room-v1)
(:setup
  (exists (?h - drawer)
    (game-optional
      (same_type ?h ?h)
    )
  )
)
(:constraints
  (and
    (forall (?b4 - ball ?c1 - (either wall blue_cube_block) ?b8 - dodgeball)
      (and
        (preference ballThrownThroughRampToBin
          (exists (?b - triangular_ramp)
            (then
              (once (not (and (not (in_motion agent) ) (touch ?b8 ?b8) (in_motion ?b8) ) ) )
              (hold (and (on ?b ?b) (not (in_motion ?b) ) ) )
              (hold (adjacent ?b ?b8) )
            )
          )
        )
      )
    )
    (forall (?w2 - ball ?h - game_object ?d - doggie_bed ?r2 - hexagonal_bin)
      (and
        (preference throwBallToBinOffObject
          (exists (?t - ball)
            (at-end
              (not
                (and
                  (in desk bed)
                  (< (distance ball ?t) (distance ?t ?r2))
                )
              )
            )
          )
        )
      )
    )
    (preference golfballLandsInBinThroughRamp
      (exists (?l1 - blinds)
        (then
          (once (or (not (faces ?l1 ?l1) ) (object_orientation ?l1 ?l1) ) )
          (hold (on ?l1 ?l1) )
          (hold (agent_holds ?l1) )
        )
      )
    )
  )
)
(:terminal
  (>= (- 8 )
    (* (* (and (+ (* (count golfballLandsInBinThroughRamp:basketball) (- (count-once-per-objects ballThrownThroughRampToBin:blue) )
            )
            (count-once-per-objects throwBallToBinOffObject:beachball)
          )
        )
        (- (>= (* 5 (external-forall-maximize (count ballThrownThroughRampToBin:hexagonal_bin) ) )
            6
          )
        )
      )
    )
  )
)
(:scoring
  (count ballThrownThroughRampToBin:doggie_bed)
)
)

(define (game game-id-966) (:domain many-objects-room-v1)
(:setup
  (exists (?b ?g ?h - hexagonal_bin ?l1 - (either dodgeball laptop cd))
    (game-conserved
      (not
        (or
          (not
            (agent_holds ?l1)
          )
          (on room_center ?l1)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - (either desktop chair alarm_clock))
      (and
        (preference dodgeballsInPlace
          (exists (?d1 - hexagonal_bin)
            (then
              (hold-while (in_motion ?d) (and (in_motion ?d1) (not (adjacent block ?d1) ) ) )
              (once (on ?d1 ?d1) )
              (once (on ?d bed) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (- 50 )
    10
  )
)
(:scoring
  (count-once-per-objects dodgeballsInPlace:hexagonal_bin)
)
)

(define (game game-id-967) (:domain few-objects-room-v1)
(:setup
  (exists (?g - curved_wooden_ramp ?r - block)
    (game-optional
      (and
        (and
          (in ?r ?r)
          (agent_holds ?r)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwMovesBeachballWithoutKnockingTeddy
      (exists (?w2 ?b ?d - hexagonal_bin)
        (at-end
          (adjacent agent ?d)
        )
      )
    )
    (preference blockIncorrectlyPicked
      (exists (?h - hexagonal_bin)
        (then
          (once (in_motion room_center) )
          (forall-sequence (?h - doggie_bed)
            (then
              (hold (and (not (on agent ?h) ) (and (agent_holds ?h) (touch ?h ?h) ) ) )
              (once (agent_holds ?h) )
              (forall-sequence (?b9 - teddy_bear ?h - drawer)
                (then
                  (hold (and (adjacent ?h ?h) (forall (?c1 - hexagonal_bin) (in ?c1 west_wall) ) ) )
                  (hold (agent_holds desk) )
                  (once (agent_holds ?h) )
                )
              )
            )
          )
          (hold (agent_holds ?h) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (* (* (* (external-forall-minimize (count throwMovesBeachballWithoutKnockingTeddy:dodgeball:pyramid_block) ) 60 )
          3
          (count throwMovesBeachballWithoutKnockingTeddy:basketball)
        )
        (* 4 (count-once-per-objects blockIncorrectlyPicked:beachball) (* (count throwMovesBeachballWithoutKnockingTeddy:yellow) (count-once-per-objects throwMovesBeachballWithoutKnockingTeddy:dodgeball) )
          (* (count-measure throwMovesBeachballWithoutKnockingTeddy:yellow:basketball) (count-once-per-external-objects blockIncorrectlyPicked:block) )
        )
      )
      (* (* (count-once-per-objects blockIncorrectlyPicked:golfball:beachball) (count throwMovesBeachballWithoutKnockingTeddy:dodgeball) )
        (external-forall-minimize
          (> (external-forall-maximize 5 ) (= (- (count blockIncorrectlyPicked:yellow) )
              (* (count blockIncorrectlyPicked:purple) (count blockIncorrectlyPicked:dodgeball) )
            )
          )
        )
      )
    )
  )
)
(:scoring
  10
)
)

(define (game game-id-968) (:domain few-objects-room-v1)
(:setup
  (exists (?l1 - chair)
    (game-optional
      (in_motion desk)
    )
  )
)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?c3 ?w2 - (either hexagonal_bin cd))
        (then
          (once (agent_holds ?w2) )
        )
      )
    )
    (preference blocksInPlace
      (exists (?w2 - triangular_ramp ?c2 - chair ?c - block)
        (at-end
          (not
            (in_motion ?c)
          )
        )
      )
    )
  )
)
(:terminal
  (> (count-once-per-objects blocksInPlace:blue) 3 )
)
(:scoring
  5
)
)

(define (game game-id-969) (:domain many-objects-room-v1)
(:setup
  (exists (?h - hexagonal_bin ?p2 - curved_wooden_ramp)
    (game-optional
      (on ?p2 ?p2)
    )
  )
)
(:constraints
  (and
    (preference ballThrownHitsAgent
      (exists (?g - hexagonal_bin)
        (then
          (hold (and (not (not (adjacent ?g upright) ) ) (on ?g ?g) ) )
          (once (agent_holds ?g) )
          (hold (adjacent agent ?g) )
        )
      )
    )
  )
)
(:terminal
  (<= (+ (count ballThrownHitsAgent:block) (+ (count ballThrownHitsAgent:pink_dodgeball:yellow) (+ 2 (* (count-once-per-objects ballThrownHitsAgent:red:hexagonal_bin) 6 )
        )
      )
      (count ballThrownHitsAgent:beachball)
      3
      (count-increasing-measure ballThrownHitsAgent:purple)
      (+ 100 (+ (count ballThrownHitsAgent:orange) (* (+ 5 (- (- 5 )
              )
            )
            (count ballThrownHitsAgent:beachball:dodgeball)
          )
        )
      )
      2
    )
    3
  )
)
(:scoring
  (count-once-per-objects ballThrownHitsAgent:dodgeball)
)
)

(define (game game-id-970) (:domain medium-objects-room-v1)
(:setup
  (forall (?o2 - dodgeball)
    (game-conserved
      (in ?o2 agent)
    )
  )
)
(:constraints
  (and
    (preference blockInTowerKnockedByDodgeball
      (exists (?l - dodgeball)
        (at-end
          (agent_holds ?l)
        )
      )
    )
    (preference throwOverRamp
      (exists (?c6 - hexagonal_bin)
        (then
          (hold (opposite ?c6 ?c6) )
          (hold (agent_holds rug) )
          (once (and (and (not (not (and (not (in_motion room_center) ) (in_motion ?c6) (in_motion ?c6) (in_motion ?c6) (and (and (agent_holds bed) (not (and (and (or (on ?c6 ?c6) (in_motion ?c6) ) (agent_holds ?c6) ) (not (in agent ?c6) ) ) ) ) (in bed left) ) (and (and (touch ?c6 ?c6) (< 1 1) ) (same_type ?c6 ?c6) (is_setup_object ?c6) ) ) ) ) (not (and (in ?c6 ?c6) (game_start ) ) ) ) (not (in_motion blue) ) (agent_holds ?c6) (in_motion ?c6) (rug_color_under ?c6 ?c6) (on ?c6 ?c6) ) )
        )
      )
    )
  )
)
(:terminal
  (> (* (+ (count throwOverRamp:beachball) 5 )
      (- (* (count throwOverRamp:cylindrical_block:yellow_pyramid_block) (count-once-per-objects blockInTowerKnockedByDodgeball:basketball) (count blockInTowerKnockedByDodgeball:dodgeball) (count-once-per-objects throwOverRamp:golfball:pink) (* 300 180 (count-once-per-objects blockInTowerKnockedByDodgeball:beachball) (* 5 18 (* (count-once-per-objects blockInTowerKnockedByDodgeball:orange:green) (count blockInTowerKnockedByDodgeball:green) )
            )
          )
          (= (count blockInTowerKnockedByDodgeball:doggie_bed) (* (- (- 2 )
              )
              10
              10
              (* (count throwOverRamp:red) (total-time) )
            )
          )
        )
      )
      (* (/ (count blockInTowerKnockedByDodgeball:book) 2 ) (* (count throwOverRamp:beachball) (count blockInTowerKnockedByDodgeball:pyramid_block:pink) )
      )
    )
    300
  )
)
(:scoring
  (>= (total-time) (* (* 2 0 (* (count throwOverRamp:green) 2 )
        (+ (* (/ 5 (+ 10 (and (count-once blockInTowerKnockedByDodgeball:dodgeball) (* 180 2 )
                )
              )
            )
            (* (count-once-per-objects throwOverRamp:green) (or (total-time) (count throwOverRamp:tan) ) )
          )
          (<= (count blockInTowerKnockedByDodgeball:basketball) 8 )
          (* (count-once-per-objects blockInTowerKnockedByDodgeball:pink_dodgeball) (count-once-per-objects throwOverRamp:doggie_bed) )
          3
          (count-once blockInTowerKnockedByDodgeball:dodgeball)
          (count-total blockInTowerKnockedByDodgeball:book)
          (* (* (count-once-per-objects throwOverRamp:green:dodgeball) (count-once blockInTowerKnockedByDodgeball:dodgeball) )
            (not
              6
            )
          )
          (count-once-per-objects throwOverRamp:blue_dodgeball)
          (* 10 (and (+ (count blockInTowerKnockedByDodgeball:beachball) 5 )
              (* 5 (count throwOverRamp) (external-forall-maximize (count-once-per-objects blockInTowerKnockedByDodgeball:basketball) ) )
              2
            )
          )
        )
        (+ (* (count-once throwOverRamp:doggie_bed) (count throwOverRamp:dodgeball) (* (- (* (* (external-forall-maximize (count blockInTowerKnockedByDodgeball:green) ) (count-once blockInTowerKnockedByDodgeball:pink:purple) (+ (count-once-per-objects blockInTowerKnockedByDodgeball:dodgeball) (count blockInTowerKnockedByDodgeball:yellow:dodgeball:pink) 0 (count throwOverRamp:green) (count throwOverRamp:red) (* (count throwOverRamp:brown) (or (count throwOverRamp:beachball) (count blockInTowerKnockedByDodgeball:dodgeball) 5 ) )
                      (count-once-per-objects blockInTowerKnockedByDodgeball:hexagonal_bin)
                    )
                  )
                  (- 5 )
                )
              )
              (count blockInTowerKnockedByDodgeball:pink:dodgeball)
              (+ (or (count-unique-positions blockInTowerKnockedByDodgeball:yellow) ) 5 )
            )
          )
          (count throwOverRamp)
        )
        15
        (count throwOverRamp:pink:dodgeball)
      )
      (* (* (+ (count-once-per-objects blockInTowerKnockedByDodgeball) (<= (count throwOverRamp:basketball:purple) (count blockInTowerKnockedByDodgeball:red) )
          )
          (* (* (+ 30 3 3 )
              (count blockInTowerKnockedByDodgeball:book)
            )
            (count throwOverRamp)
          )
        )
        2
      )
    )
  )
)
)

(define (game game-id-971) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (game-optional
        (not
          (not
            (agent_holds desk)
          )
        )
      )
      (exists (?f - dodgeball ?t1 - flat_block)
        (and
          (game-conserved
            (agent_holds ?t1)
          )
          (exists (?b - hexagonal_bin)
            (exists (?b - triangular_ramp ?x - ball)
              (exists (?d1 - wall)
                (game-conserved
                  (in ?d1 ?d1)
                )
              )
            )
          )
        )
      )
      (exists (?c1 ?l4 - hexagonal_bin)
        (exists (?d - game_object ?h - cube_block ?o - building)
          (forall (?db - doggie_bed)
            (game-conserved
              (toggled_on ?c1)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference agentLeavesDogbedOrNoMoreBalls
      (exists (?o3 - wall)
        (at-end
          (in rug ?o3)
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (and
        (= (* (count agentLeavesDogbedOrNoMoreBalls:basketball) (count-once-per-objects agentLeavesDogbedOrNoMoreBalls:blue_dodgeball) )
          (* (count-once agentLeavesDogbedOrNoMoreBalls:blue_dodgeball) (external-forall-maximize 3 ) )
        )
        (or
          (>= 10 (count-once-per-external-objects agentLeavesDogbedOrNoMoreBalls:dodgeball) )
        )
      )
      (not
        (or
          (>= (count-once agentLeavesDogbedOrNoMoreBalls:white) (count-once agentLeavesDogbedOrNoMoreBalls:dodgeball:pink_dodgeball) )
          (>= (+ (>= 0 1 )
              (count agentLeavesDogbedOrNoMoreBalls:triangle_block)
              (count-once-per-objects agentLeavesDogbedOrNoMoreBalls:cube_block:dodgeball)
            )
            (count-shortest agentLeavesDogbedOrNoMoreBalls:pink)
          )
        )
      )
      (not
        (>= 5 (* (count-once-per-objects agentLeavesDogbedOrNoMoreBalls:blue_dodgeball) (+ 10 (count agentLeavesDogbedOrNoMoreBalls:golfball) )
          )
        )
      )
    )
  )
)
(:scoring
  2
)
)

(define (game game-id-972) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?w - triangular_ramp ?c3 - desk_shelf)
      (and
        (game-conserved
          (agent_holds ?c3)
        )
        (not
          (exists (?p1 - ball)
            (and
              (and
                (and
                  (or
                    (forall (?b - hexagonal_bin ?b - cube_block)
                      (and
                        (and
                          (game-conserved
                            (< 5 (distance agent ?p1))
                          )
                        )
                        (and
                          (forall (?o4 - desk_shelf)
                            (exists (?o3 - hexagonal_bin ?g ?b - dodgeball ?p3 - curved_wooden_ramp)
                              (game-optional
                                (and
                                  (not
                                    (touch ?p1 ?p1)
                                  )
                                  (in ?o4 agent)
                                )
                              )
                            )
                          )
                        )
                        (game-conserved
                          (above ?b bed)
                        )
                      )
                    )
                    (exists (?b5 - red_dodgeball)
                      (game-optional
                        (in_motion ?p1)
                      )
                    )
                    (game-optional
                      (and
                        (not
                          (exists (?c - ball)
                            (and
                              (in_motion ?p1)
                              (in_motion ?c3)
                            )
                          )
                        )
                        (agent_holds ?c3)
                      )
                    )
                  )
                )
              )
              (and
                (not
                  (and
                    (game-conserved
                      (not
                        (on ?c3 ?c3)
                      )
                    )
                    (and
                      (exists (?d2 - game_object)
                        (and
                          (game-conserved
                            (in ?c3 agent)
                          )
                          (exists (?b - ball)
                            (forall (?h - block)
                              (game-conserved
                                (adjacent rug rug)
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
        (exists (?h ?b8 - ball ?d - (either ball cube_block))
          (game-conserved
            (in_motion ?c3)
          )
        )
        (exists (?p - cube_block ?b - game_object ?o - ball)
          (game-optional
            (is_setup_object ?c3)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToDrawerOrBin
      (exists (?d - dodgeball ?d - chair)
        (then
          (hold (in ?d ?d) )
          (hold (adjacent ?d ?d) )
          (hold (in ?d ?d) )
        )
      )
    )
  )
)
(:terminal
  (>= 3 3 )
)
(:scoring
  (count-once-per-objects throwToDrawerOrBin:yellow)
)
)

(define (game game-id-973) (:domain few-objects-room-v1)
(:setup
  (exists (?o2 - building ?r1 - watch)
    (game-optional
      (equal_x_position bed ?r1)
    )
  )
)
(:constraints
  (and
    (forall (?d - dodgeball)
      (and
        (preference cubeBlockThrownToTopShelf
          (exists (?o - dodgeball)
            (then
              (once (in_motion ?d) )
              (once (and (not (not (not (in_motion ?d) ) ) ) (or (in_motion ?d) (touch ?d ?o) ) ) )
              (once (not (same_color ?d ?d) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (count-once-per-external-objects cubeBlockThrownToTopShelf) (count cubeBlockThrownToTopShelf:golfball:blue_dodgeball) )
  )
)
(:scoring
  (count-once-per-objects cubeBlockThrownToTopShelf)
)
)

(define (game game-id-974) (:domain many-objects-room-v1)
(:setup
  (exists (?l2 - cube_block ?b - hexagonal_bin ?w1 - teddy_bear ?h - hexagonal_bin ?d1 - game_object)
    (and
      (game-optional
        (not
          (and
            (< 3 (distance_side ?d1 ?d1 front))
            (in_motion ?d1)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwTeddyOntoPillow
      (exists (?c4 ?o3 ?c5 ?c6 ?db ?b - teddy_bear)
        (then
          (hold (adjacent ?b ?b) )
          (once (touch ?c5 brown) )
          (hold (in_motion ?c4) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= 9 (* (count throwTeddyOntoPillow:golfball) 3 )
    )
    (>= (count throwTeddyOntoPillow:yellow) (* (count-unique-positions throwTeddyOntoPillow:golfball) 10 )
    )
  )
)
(:scoring
  (+ 100 (count-once throwTeddyOntoPillow:pink_dodgeball) (count throwTeddyOntoPillow:golfball:orange) 3 15 1 )
)
)

(define (game game-id-975) (:domain few-objects-room-v1)
(:setup
  (exists (?h ?p3 - teddy_bear ?c - (either cellphone pyramid_block dodgeball) ?g - shelf ?b - triangular_ramp)
    (game-conserved
      (< 1 0.5)
    )
  )
)
(:constraints
  (and
    (forall (?d - cube_block ?w2 - (either yellow_cube_block pink mug) ?h - building)
      (and
        (preference cubeBlockInBuilding
          (exists (?s - wall)
            (then
              (hold-for 2 (< (distance ?s ?s) (distance ?h upside_down)) )
              (once (not (not (not (in ?h ?s) ) ) ) )
              (once (and (adjacent agent ?h) (game_start ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (- (total-time) )
  )
)
(:scoring
  (count-once cubeBlockInBuilding:dodgeball:hexagonal_bin)
)
)

(define (game game-id-976) (:domain medium-objects-room-v1)
(:setup
  (forall (?b7 - pillow ?b10 - cube_block)
    (exists (?o ?l2 - hexagonal_bin)
      (and
        (and
          (game-conserved
            (in_motion ?l2)
          )
          (game-conserved
            (< 10 1)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?l2 - hexagonal_bin)
      (and
        (preference throwTeddyOntoPillow
          (then
            (once (< (distance ?l2 ?l2) 0.5) )
            (once (touch ?l2 ?l2) )
            (once (not (in_motion ?l2) ) )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (count throwTeddyOntoPillow) (- (* (+ (count throwTeddyOntoPillow:basketball:dodgeball) (count-once-per-objects throwTeddyOntoPillow:dodgeball) )
          (* 20 (count throwTeddyOntoPillow:basketball) )
        )
      )
    )
    (>= (count-once-per-objects throwTeddyOntoPillow:dodgeball) (+ (count-measure throwTeddyOntoPillow:beachball) (count throwTeddyOntoPillow:dodgeball:pink) 3 )
    )
    (> (* (+ (total-time) (count-once-per-objects throwTeddyOntoPillow:red) )
        (count-once-per-objects throwTeddyOntoPillow:green)
      )
      (/
        (count-once-per-objects throwTeddyOntoPillow:beachball)
        (total-score)
      )
    )
  )
)
(:scoring
  (* 2 4 )
)
)

(define (game game-id-977) (:domain many-objects-room-v1)
(:setup
  (not
    (exists (?c1 ?b - doggie_bed)
      (exists (?o - dodgeball)
        (exists (?o - hexagonal_bin)
          (game-conserved
            (not
              (in_motion ?o)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?w2 - chair)
      (and
        (preference dodgeballFromBlockToBin
          (exists (?g - game_object)
            (then
              (once (agent_holds ?w2) )
              (once (< 0.5 4) )
              (hold-for 1 (exists (?b6 - (either cylindrical_block cellphone golfball pyramid_block) ?h - hexagonal_bin) (agent_holds ?g) ) )
            )
          )
        )
        (preference itemsTurnedOff
          (exists (?r - (either book dodgeball))
            (then
              (once (on ?w2 ?w2) )
              (once (and (and (in upright ?w2) (touch ?w2 ?r) ) (on ?r ?r) ) )
              (once (agent_holds ?r) )
            )
          )
        )
      )
    )
    (preference throwBallFromOtherBallToBin
      (exists (?l - (either pyramid_block flat_block) ?h ?d ?d2 ?b ?p3 - dodgeball)
        (then
          (hold (not (agent_holds desk) ) )
          (once (not (in ?d agent) ) )
          (once (opposite ?b desk) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) 3 )
)
(:scoring
  (count itemsTurnedOff:cylindrical_block)
)
)

(define (game game-id-978) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (exists (?b - (either top_drawer cellphone pen bridge_block cylindrical_block) ?g - hexagonal_bin)
        (and
          (game-optional
            (agent_holds back)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballFromDeskToTarget
      (exists (?o4 ?b8 - hexagonal_bin)
        (then
          (hold (exists (?d - shelf ?h - cube_block) (game_over ) ) )
          (once (and (in_motion agent) (agent_holds ?o4) ) )
          (hold (not (not (agent_holds ?o4) ) ) )
        )
      )
    )
    (preference matchingBuildingBuilt
      (exists (?b - game_object)
        (at-end
          (in ?b ?b)
        )
      )
    )
    (preference throwToBinFromOppositeWall
      (exists (?b - wall)
        (at-end
          (between ?b ?b ?b)
        )
      )
    )
  )
)
(:terminal
  (>= 1 (* (count dodgeballFromDeskToTarget:blue_dodgeball) (count-same-positions throwToBinFromOppositeWall:basketball:book) )
  )
)
(:scoring
  (* (count-once-per-objects throwToBinFromOppositeWall:beachball:purple) 4 )
)
)

(define (game game-id-979) (:domain many-objects-room-v1)
(:setup
  (exists (?c - dodgeball ?h - (either pen golfball laptop ball laptop dodgeball dodgeball))
    (forall (?d - bridge_block ?b4 - doggie_bed)
      (and
        (and
          (and
            (game-conserved
              (not
                (not
                  (and
                    (in ?h ?h)
                    (on ?h agent)
                  )
                )
              )
            )
            (exists (?x - dodgeball ?h - (either beachball dodgeball pyramid_block) ?d - (either book credit_card alarm_clock) ?c1 - block)
              (and
                (game-conserved
                  (and
                    (in room_center ?b4)
                    (not
                      (adjacent_side ?c1 desk bridge_block)
                    )
                  )
                )
                (and
                  (and
                    (and
                      (forall (?w2 ?t2 ?o ?c ?r - dodgeball)
                        (forall (?c1 - book)
                          (game-optional
                            (and
                              (and
                                (or
                                  (not
                                    (= 0.5 3)
                                  )
                                  (<= 1 (distance ?o ?h))
                                )
                                (and
                                  (not
                                    (on rug ?b4)
                                  )
                                  (and
                                    (and
                                      (in ?r ?b4)
                                      (in_motion ?o)
                                    )
                                    (not
                                      (on ?w2 ?w2)
                                    )
                                  )
                                )
                              )
                              (and
                                (< 0 (distance ?r room_center))
                                (not
                                  (in ?t2 ?c1)
                                )
                              )
                              (not
                                (and
                                  (in_motion ?o)
                                  (and
                                    (not
                                      (not
                                        (not
                                          (not
                                            (not
                                              (agent_holds ?w2)
                                            )
                                          )
                                        )
                                      )
                                    )
                                    (adjacent ?r ?w2)
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                      (forall (?p - hexagonal_bin ?b1 - (either hexagonal_bin dodgeball))
                        (game-conserved
                          (on room_center ?c1)
                        )
                      )
                    )
                    (game-conserved
                      (adjacent ?c1 bed)
                    )
                    (forall (?b - hexagonal_bin)
                      (game-optional
                        (in_motion front)
                      )
                    )
                  )
                )
              )
            )
          )
          (and
            (game-optional
              (is_setup_object bed)
            )
            (game-conserved
              (in ?h ?h)
            )
          )
          (exists (?c - teddy_bear)
            (exists (?o - (either yellow_cube_block cylindrical_block dodgeball))
              (forall (?o - (either blue_cube_block alarm_clock golfball))
                (game-conserved
                  (same_type ?o ?c)
                )
              )
            )
          )
        )
        (exists (?b - building ?f - dodgeball)
          (and
            (forall (?d - bridge_block ?f - hexagonal_bin)
              (and
                (game-conserved
                  (in_motion ?f)
                )
              )
            )
            (forall (?ob - hexagonal_bin)
              (game-optional
                (touch ?b4 ?h)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference thrownBallHitsBlock
      (exists (?h - hexagonal_bin)
        (then
          (once (adjacent ?h floor) )
          (once (in_motion desk) )
        )
      )
    )
  )
)
(:terminal
  (>= 15 (count thrownBallHitsBlock:beachball) )
)
(:scoring
  (* 3 (count thrownBallHitsBlock:hexagonal_bin:hexagonal_bin) )
)
)

(define (game game-id-980) (:domain many-objects-room-v1)
(:setup
  (exists (?b3 - game_object)
    (forall (?t - chair)
      (game-conserved
        (on ?b3 ?b3)
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?b6 - hexagonal_bin ?c2 - building)
        (then
          (hold (on ?c2 ?c2) )
          (once (and (< (distance door ?c2) 10) (exists (?c5 - ball) (and (touch south_wall ?c2) (on ?c2 ?c2) ) ) ) )
          (once (not (or (not (in_motion ?c2) ) (< (distance agent ?c2) (building_size ?c2)) ) ) )
          (once (not (< 1 (distance ?c2 ?c2)) ) )
        )
      )
    )
    (preference dodgeballFromBlockToBin
      (exists (?t - hexagonal_bin)
        (then
          (once (< (distance_side ?t ?t ?t ?t) 1) )
          (hold (not (in_motion ?t) ) )
          (once (not (in_motion ?t) ) )
        )
      )
    )
    (preference ballThrownMissesEverything
      (exists (?c4 - dodgeball)
        (then
          (hold (and (equal_x_position ?c4 ?c4) (agent_holds ?c4) ) )
          (once (and (in ?c4 ?c4) (in ?c4 ?c4) ) )
          (hold-while (not (above ?c4 ?c4) ) (agent_holds floor) )
          (hold (and (not (and (adjacent ?c4 floor) (in_motion ?c4) ) ) (not (not (and (game_over ) (and (and (in_motion upright) (exists (?p1 - cube_block) (rug_color_under ?p1 ?c4) ) ) (not (agent_holds ?c4) ) ) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (> (count-once-per-external-objects dodgeballFromBlockToBin:alarm_clock) (count-once-per-external-objects ballThrownMissesEverything) )
)
(:scoring
  (* (- (count dodgeballFromBlockToBin:book) )
    (+ (count throwAttempt:red) 1 )
    (* (* (* (count ballThrownMissesEverything:beachball) (count-overlapping ballThrownMissesEverything:golfball) )
        (- (* (* (+ (count throwAttempt:hexagonal_bin) 2 20 )
              (* (+ (count-once-per-objects throwAttempt:beachball) (count throwAttempt:alarm_clock:dodgeball) )
                (* (count dodgeballFromBlockToBin) (+ (* (count-once-per-objects dodgeballFromBlockToBin:golfball) 7 )
                    3
                  )
                )
              )
            )
            3
          )
        )
      )
      (count dodgeballFromBlockToBin:alarm_clock)
    )
    (count ballThrownMissesEverything:basketball)
    (* (external-forall-maximize (count dodgeballFromBlockToBin:cube_block) ) 2 (* (count ballThrownMissesEverything:brown) (count dodgeballFromBlockToBin:beachball) )
      (* (+ (count dodgeballFromBlockToBin:basketball) (* (count-unique-positions dodgeballFromBlockToBin:top_drawer) 15 )
          2
          (* (count throwAttempt:red) (* (* 8 (* (count-once throwAttempt:basketball) (* (count-measure throwAttempt:rug:dodgeball:golfball) 3 (external-forall-minimize (count dodgeballFromBlockToBin:green) ) (count-once ballThrownMissesEverything:beachball) (- 10 )
                    2
                  )
                )
                2
                5
                (count-once-per-objects ballThrownMissesEverything)
                5
              )
              (* (* (> (- (* (count-once-per-objects ballThrownMissesEverything:orange) )
                      2
                    )
                    (* (count-once-per-objects dodgeballFromBlockToBin:dodgeball) 2 (count dodgeballFromBlockToBin:golfball) )
                  )
                  (count-once-per-objects dodgeballFromBlockToBin:pink)
                )
                (count throwAttempt:dodgeball)
              )
              3
            )
            (* (count-once-per-objects throwAttempt:dodgeball) (count dodgeballFromBlockToBin:book) )
            (count throwAttempt:dodgeball:dodgeball:pink)
            (- (or (external-forall-minimize 5 ) 2 (* (* 2 (count ballThrownMissesEverything:golfball:hexagonal_bin) )
                  (count-total throwAttempt:basketball)
                )
              )
            )
            (-
              300
              (count-same-positions dodgeballFromBlockToBin:yellow)
            )
          )
        )
        (total-score)
      )
    )
    5
    (count dodgeballFromBlockToBin:orange:dodgeball)
  )
)
)

(define (game game-id-981) (:domain many-objects-room-v1)
(:setup
  (exists (?b - teddy_bear)
    (or
      (game-conserved
        (same_color sideways ?b)
      )
      (exists (?l1 - chair)
        (forall (?d2 ?d ?b ?d2 ?h ?c - drawer)
          (and
            (exists (?t2 ?h - shelf)
              (exists (?l1 - ball)
                (and
                  (exists (?b - dodgeball)
                    (game-conserved
                      (and
                        (and
                          (in_motion agent)
                          (in_motion ?b)
                          (not
                            (is_setup_object ?t2)
                          )
                        )
                        (or
                          (is_setup_object ?t2)
                          (adjacent ?t2 ?l1)
                          (on ?d2 ?t2)
                        )
                      )
                    )
                  )
                  (and
                    (game-optional
                      (in_motion brown)
                    )
                    (not
                      (forall (?c2 - hexagonal_bin)
                        (forall (?b - building ?h - building)
                          (game-optional
                            (in ?c ?t2)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
            (game-conserved
              (adjacent_side ?d ?d2 room_center)
            )
            (game-conserved
              (adjacent ?b ?h)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?p - ball)
      (and
        (preference failedThrowToBin
          (exists (?p - hexagonal_bin)
            (then
              (once (on ?p ?p) )
              (once (and (between desk ?p ?p) (in_motion ?p) (and (agent_holds ?p) (and (not (< (building_size ?p) 1) ) (forall (?l1 - triangular_ramp) (and (on ?p ?p) (< (distance ?p ?p) 1) ) ) ) ) ) )
              (hold (agent_holds ?p) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (not
      (>= 1 (* 1 3 )
      )
    )
  )
)
(:scoring
  (count failedThrowToBin:cylindrical_block)
)
)

(define (game game-id-982) (:domain medium-objects-room-v1)
(:setup
  (not
    (game-optional
      (on front desk)
    )
  )
)
(:constraints
  (and
    (forall (?b - doggie_bed ?b - hexagonal_bin ?c5 - hexagonal_bin ?x - dodgeball)
      (and
        (preference pinkObjectMovedToRoomCenter
          (exists (?h ?o - hexagonal_bin)
            (then
              (once (not (not (on ?x ?h) ) ) )
              (forall-sequence (?h ?b2 - hexagonal_bin)
                (then
                  (once (or (agent_holds ?b2) (not (not (touch ?b2 pink) ) ) ) )
                  (hold (and (and (agent_holds agent) (agent_holds ?o) ) (< (distance floor bed) (distance ?b2 ?b2)) ) )
                  (hold (and (in ?b2 ?b2) (in_motion pink) (< 1 (distance ?x ?x)) ) )
                )
              )
              (once (not (not (> (distance bed ?x) 1) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (count-longest pinkObjectMovedToRoomCenter:doggie_bed) )
)
(:scoring
  2
)
)

(define (game game-id-983) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (not
      (game_start )
    )
  )
)
(:constraints
  (and
    (preference objectLandsInBin
      (exists (?b5 - hexagonal_bin)
        (then
          (once (and (in_motion ?b5) (adjacent ?b5 ?b5) ) )
          (hold-while (in_motion ?b5) (on ?b5 ?b5) )
          (once (in_motion ?b5) )
        )
      )
    )
    (preference baseBlockInTowerAtEnd
      (exists (?t1 - teddy_bear)
        (then
          (once (in desk ?t1) )
          (once (in_motion ?t1) )
          (once (in_motion bed) )
        )
      )
    )
  )
)
(:terminal
  (or
    (= (* (+ (count baseBlockInTowerAtEnd:pink) )
        (* 5 )
      )
      (count-once objectLandsInBin:pink_dodgeball)
    )
    (> (count-overlapping objectLandsInBin:blue_cube_block) (* (count-once-per-objects baseBlockInTowerAtEnd:red) (* 6 3 )
      )
    )
  )
)
(:scoring
  (count objectLandsInBin:alarm_clock)
)
)

(define (game game-id-984) (:domain few-objects-room-v1)
(:setup
  (forall (?d - hexagonal_bin)
    (and
      (and
        (or
          (exists (?l3 - cube_block)
            (game-conserved
              (agent_holds ?d)
            )
          )
          (game-conserved
            (adjacent_side ?d pink_dodgeball ?d)
          )
        )
        (exists (?h - hexagonal_bin ?h - (either dodgeball dodgeball) ?h - hexagonal_bin)
          (game-conserved
            (not
              (not
                (agent_holds ?d)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference matchingBuildingBuilt
      (exists (?s - pyramid_block)
        (at-end
          (and
            (is_setup_object ?s)
            (and
              (and
                (agent_holds ?s)
                (in_motion ?s)
              )
              (>= 0 (distance ?s ?s))
            )
          )
        )
      )
    )
    (preference agentLeavesDogbedOrNoMoreBalls
      (exists (?d - (either cellphone))
        (then
          (hold (and (and (in_motion ?d) (in_motion ?d) ) (agent_holds ?d) (not (and (or (in_motion pink_dodgeball) (not (agent_holds ?d) ) ) (on ?d pink) ) ) ) )
          (once (or (same_object ?d ?d) (and (agent_holds ?d) (on ?d agent) ) ) )
          (once (on bed ?d) )
        )
      )
    )
  )
)
(:terminal
  (> (count-same-positions agentLeavesDogbedOrNoMoreBalls:green) (* (count-overlapping agentLeavesDogbedOrNoMoreBalls:yellow) (count agentLeavesDogbedOrNoMoreBalls:dodgeball:orange) )
  )
)
(:scoring
  (+ 2 (count-longest matchingBuildingBuilt:blue_dodgeball) )
)
)

(define (game game-id-985) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (forall (?b ?h ?o ?b ?d ?db - doggie_bed)
        (and
          (is_setup_object agent)
          (and
            (in_motion ?b)
            (and
              (and
                (not
                  (forall (?h - dodgeball)
                    (not
                      (is_setup_object ?db)
                    )
                  )
                )
                (in_motion ?db)
              )
              (toggled_on ?d)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectWithMatchingColor
      (exists (?s - curved_wooden_ramp)
        (then
          (once (on ?s ?s) )
          (hold (on ?s ?s) )
          (hold (adjacent ?s ?s) )
        )
      )
    )
    (preference ballThrownFromDoor
      (exists (?c - (either book))
        (at-end
          (in_motion ?c)
        )
      )
    )
    (preference nonBlockPlacedInBuilding
      (exists (?h - (either tall_cylindrical_block yellow))
        (then
          (once (in ?h ?h) )
          (hold (same_type ?h ?h) )
          (once (and (and (agent_holds ?h) (equal_z_position ?h ?h) ) (on agent ?h) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count objectWithMatchingColor:blue_dodgeball) 3 )
)
(:scoring
  (* (+ (- (* (* (- (count-once-per-objects objectWithMatchingColor:beachball) )
            (count-once-per-objects ballThrownFromDoor:beachball)
            (* 15 (* (count nonBlockPlacedInBuilding:hexagonal_bin) (total-time) )
            )
          )
          180
        )
      )
      (count-once ballThrownFromDoor:golfball)
      2
      3
    )
    16
  )
)
)

(define (game game-id-986) (:domain medium-objects-room-v1)
(:setup
  (exists (?o - chair ?b7 - ball ?l - hexagonal_bin)
    (game-conserved
      (in_motion ?l)
    )
  )
)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?s - hexagonal_bin)
        (then
          (once (in ?s ?s) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (and (count ballThrownToBin:pink_dodgeball:pink) 50 ) (count ballThrownToBin:pink_dodgeball:beachball) )
    (= (count-once-per-objects ballThrownToBin:hexagonal_bin) (count ballThrownToBin:pyramid_block) )
    (not
      (>= (* 0 (count ballThrownToBin:blue_cube_block) )
        (- 1 )
      )
    )
  )
)
(:scoring
  (and
    (= 5 (+ 40 )
    )
    2
    (count ballThrownToBin:yellow)
  )
)
)

(define (game game-id-987) (:domain few-objects-room-v1)
(:setup
  (and
    (game-optional
      (and
        (< 1 8)
      )
    )
  )
)
(:constraints
  (and
    (forall (?l - doggie_bed)
      (and
        (preference ballThrowAttempt
          (exists (?p - sliding_door)
            (then
              (once (and (agent_holds ?p) (in_motion ?p) ) )
              (hold (and (in_motion ?l) (agent_holds ?p) ) )
            )
          )
        )
        (preference thrownObjectHitsComputer
          (exists (?b3 ?r ?b7 - doggie_bed)
            (then
              (once (and (in_motion ?b7) (adjacent ?r ?r) ) )
              (hold (exists (?c6 - dodgeball) (agent_holds ?b3) ) )
              (hold (agent_holds ?r) )
            )
          )
        )
      )
    )
    (preference ballThrownToBed
      (exists (?s - (either side_table watch))
        (then
          (once (<= 4 (distance ?s ?s)) )
          (hold (and (and (in ?s ?s) (in ?s ?s) ) (not (not (< 1 (distance desk ?s)) ) ) (and (in_motion desk) (touch ?s desk) ) ) )
          (once (in_motion ?s) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 6 2 )
    2
  )
)
(:scoring
  5
)
)

(define (game game-id-988) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (game-optional
        (not
          (exists (?c2 - dodgeball)
            (and
              (and
                (adjacent ?c2 ?c2)
                (agent_holds ?c2)
              )
              (agent_holds ?c2)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference beachballOnRug
      (exists (?h - game_object)
        (then
          (hold-while (in_motion ?h) (not (not (and (on upright ?h) (and (in ?h ?h) (agent_holds rug) ) ) ) ) )
          (hold (adjacent agent agent) )
          (hold (adjacent ?h ?h) )
        )
      )
    )
    (preference ballThrownToWallToAgent
      (exists (?g - curved_wooden_ramp)
        (at-end
          (in_motion ?g)
        )
      )
    )
  )
)
(:terminal
  (>= (* (* (count beachballOnRug:dodgeball:basketball) (* 4 (count-once-per-objects ballThrownToWallToAgent) )
        (+ 10 (* (+ (count beachballOnRug:purple) 20 )
            (count beachballOnRug:pink)
          )
        )
      )
      (and
        3
        15
      )
    )
    (count ballThrownToWallToAgent:yellow)
  )
)
(:scoring
  4
)
)

(define (game game-id-989) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (not
      (in_motion floor)
    )
  )
)
(:constraints
  (and
    (preference golfballInBinFromPillow
      (exists (?c - game_object)
        (then
          (hold (< (distance ?c ?c) (distance ball ?c)) )
          (hold (agent_holds desk) )
          (once (agent_holds ?c) )
        )
      )
    )
    (preference ballKnocksTeddy
      (exists (?d - hexagonal_bin)
        (then
          (once (< 1 (distance ?d ?d)) )
          (hold (not (agent_holds ?d) ) )
          (once (not (not (not (not (agent_holds agent) ) ) ) ) )
        )
      )
    )
    (preference objectMovedRoomSide
      (exists (?bl - wall ?r2 - hexagonal_bin)
        (at-end
          (in_motion rug)
        )
      )
    )
  )
)
(:terminal
  (>= 10 2 )
)
(:scoring
  4
)
)

(define (game game-id-990) (:domain medium-objects-room-v1)
(:setup
  (exists (?h - doggie_bed ?h - (either yellow golfball cellphone alarm_clock pyramid_block wall dodgeball))
    (forall (?l - game_object)
      (game-optional
        (in_motion ?h)
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballsInPlace
      (exists (?w1 - curved_wooden_ramp)
        (at-end
          (not
            (and
              (agent_holds ?w1)
              (not
                (touch ?w1 room_center)
              )
              (not
                (on ?w1 ?w1)
              )
              (in_motion ?w1)
              (not
                (same_object ?w1 ?w1)
              )
              (agent_holds ?w1)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (count dodgeballsInPlace:golfball) )
)
(:scoring
  (count dodgeballsInPlace:yellow_cube_block)
)
)

(define (game game-id-991) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (exists (?b ?d - chair ?h ?s - dodgeball)
        (game-conserved
          (and
            (adjacent_side ?h ?h ?h ?h)
            (and
              (not
                (agent_holds ?s)
              )
              (on ?h ?h)
            )
          )
        )
      )
    )
    (exists (?d - shelf)
      (game-optional
        (not
          (agent_holds rug)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference baseBlockInTowerAtEnd
      (exists (?c - wall)
        (then
          (once (in_motion bed) )
          (once (not (not (on ?c ?c) ) ) )
          (once (opposite upright ?c) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count-once-per-objects baseBlockInTowerAtEnd:green) 20 )
    6
  )
)
(:scoring
  (count baseBlockInTowerAtEnd:pink:beachball)
)
)

(define (game game-id-992) (:domain few-objects-room-v1)
(:setup
  (forall (?c - hexagonal_bin ?c3 - (either dodgeball cube_block wall))
    (exists (?l1 - game_object ?b - hexagonal_bin)
      (game-conserved
        (in_motion ?b)
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - (either pillow key_chain) ?h - hexagonal_bin)
      (and
        (preference ballNeverThrown
          (exists (?b7 - (either floor dodgeball cd))
            (then
              (hold-while (and (exists (?b10 - blinds ?bl - building) (and (not (on ?h floor) ) (and (faces ?h bed) (and (and (same_object ?bl room_center) (not (same_color ?bl ?b7) ) ) (in ?h right) (agent_holds ?b7) ) ) ) ) (in_motion ?h) ) (>= 1 2) )
              (hold (< 1 (x_position top_drawer)) )
              (once (not (agent_holds ?h) ) )
            )
          )
        )
      )
    )
    (preference watchOnShelf
      (exists (?b - block)
        (then
          (hold (and (not (not (and (not (touch agent ?b) ) (exists (?b ?h - hexagonal_bin ?h ?o4 ?ob ?b6 ?b2 ?w1 - block) (in ?o4 ?ob) ) ) ) ) (and (and (and (in ?b ?b) (in ?b ?b) (opposite ?b bed) ) (exists (?h - hexagonal_bin ?o - curved_wooden_ramp ?b7 - doggie_bed ?b - dodgeball) (on ?b ?b) ) (on ?b ?b) ) (adjacent ?b ?b) ) ) )
          (once (not (adjacent ?b ?b) ) )
          (once (not (in ?b side_table) ) )
        )
      )
    )
    (preference objectLandsInBin
      (exists (?b - hexagonal_bin)
        (then
          (hold (not (faces ?b ?b) ) )
          (once (game_start ) )
          (once (and (on ?b ?b) (not (in ?b bed) ) ) )
        )
      )
    )
    (preference throwToDrawerOrBin
      (exists (?l4 ?d2 - dodgeball ?b - game_object)
        (then
          (once (equal_z_position green ?b) )
          (hold (in ?b ?b) )
          (once (agent_holds ?b) )
        )
      )
    )
    (forall (?d - beachball)
      (and
        (preference throwAttempt
          (exists (?d - curved_wooden_ramp)
            (at-end
              (agent_holds ?d)
            )
          )
        )
      )
    )
    (preference throwFromEdgeOfRug
      (exists (?b - dodgeball ?w1 - (either tall_cylindrical_block cube_block) ?d - hexagonal_bin)
        (then
          (hold (or (and (same_type agent ?d) (not (= 9 1) ) (in_motion ?d) (and (and (or (in ?d ?d) (in_motion agent) ) (in ?d ?d) ) (and (same_object ?d ?d) (not (forall (?db - dodgeball) (< (distance ?db pink_dodgeball) (distance rug ?d)) ) ) ) ) ) (not (in_motion ?d) ) (not (agent_holds agent) ) ) )
          (once (open ?d) )
          (hold (agent_holds ?d) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-same-positions throwAttempt:dodgeball) 10 )
)
(:scoring
  (count-once-per-objects ballNeverThrown:yellow)
)
)

(define (game game-id-993) (:domain few-objects-room-v1)
(:setup
  (forall (?l1 - hexagonal_bin ?h - chair)
    (game-conserved
      (not
        (on bed ?h)
      )
    )
  )
)
(:constraints
  (and
    (preference otherObjectsOnDeskShelf
      (exists (?o - (either golfball dodgeball))
        (then
          (once (not (exists (?c - sliding_door ?r - dodgeball ?b - cube_block) (agent_holds ?o) ) ) )
          (hold (and (adjacent ?o pink_dodgeball) (not (agent_holds ?o) ) (and (and (in ?o ?o) (faces brown agent) ) (on ?o ?o) (agent_holds rug) (in ?o room_center) ) ) )
          (hold (between ?o pillow ?o) )
        )
      )
    )
    (preference beachballOnRug
      (exists (?b - dodgeball ?w1 - dodgeball)
        (then
          (once (< 10 3) )
          (once (not (and (and (above ?w1 ?w1) (>= (distance ?w1 ?w1) 0.5) ) (exists (?bl - dodgeball) (faces ?w1 ?w1) ) ) ) )
          (once (not (touch ?w1 ?w1) ) )
        )
      )
    )
    (forall (?d2 - hexagonal_bin ?c - dodgeball)
      (and
        (preference ballKnocksTeddy
          (exists (?c6 - doggie_bed ?db - color)
            (then
              (once (agent_holds ?c) )
              (once (in_motion ?c) )
              (once (in_motion ?db) )
            )
          )
        )
      )
    )
    (forall (?t - chair ?g - hexagonal_bin)
      (and
        (preference ballOnBedAtEnd
          (then
            (once (agent_holds ?g) )
            (once (not (in_motion ?g) ) )
            (once (not (in_motion side_table) ) )
          )
        )
        (preference ballThrownFromDoor
          (exists (?c - doggie_bed)
            (then
              (once (agent_holds ?g) )
              (once (or (and (in ?g ?g) (and (and (agent_holds ?c) (not (not (same_color ?c ?c) ) ) (and (in_motion ?c) (and (agent_holds ?c) (touch ?c ?c) ) ) (same_color ?g front_left_corner) ) (and (touch room_center ?c) (in_motion ?c) ) ) (agent_holds ?g) ) (in_motion ?g) (not (< 1 1) ) ) )
              (once (agent_crouches ) )
            )
          )
        )
        (preference blockToBinFromRug
          (exists (?d - ball)
            (then
              (hold (broken ?d) )
              (once (and (in ?g ?d) (< 0.5 1) ) )
              (once (in ?g ?g) )
            )
          )
        )
      )
    )
    (preference blockInTowerKnockedByDodgeball
      (exists (?s - cube_block ?d1 - hexagonal_bin ?o5 - hexagonal_bin)
        (at-end
          (< (distance agent ?o5) 1)
        )
      )
    )
  )
)
(:terminal
  (> (count otherObjectsOnDeskShelf:side_table) -30 )
)
(:scoring
  (count-total ballThrownFromDoor:golfball)
)
)

(define (game game-id-994) (:domain few-objects-room-v1)
(:setup
  (exists (?c - (either tall_cylindrical_block mug))
    (exists (?h - (either doggie_bed main_light_switch dodgeball))
      (exists (?d - hexagonal_bin ?c4 - game_object)
        (and
          (forall (?g - hexagonal_bin ?h - game_object)
            (game-conserved
              (exists (?b - ball ?tb - block)
                (between ?c4 ?tb ?h)
              )
            )
          )
          (game-conserved
            (not
              (in_motion ?c4)
            )
          )
          (not
            (or
              (and
                (and
                  (game-optional
                    (not
                      (not
                        (and
                          (and
                            (not
                              (adjacent bed bed)
                            )
                            (in_motion ?c4)
                            (on ?c ?c4)
                            (not
                              (agent_holds ?c4)
                            )
                            (and
                              (agent_holds agent)
                              (and
                                (< (distance ?h ?h) 9)
                                (open ?c)
                              )
                            )
                            (< (distance ?h pink_dodgeball) 1)
                            (forall (?s - teddy_bear)
                              (exists (?d - hexagonal_bin)
                                (agent_holds ?c4)
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                  (exists (?h - pillow)
                    (game-conserved
                      (adjacent agent agent)
                    )
                  )
                )
              )
              (exists (?h - block ?b - dodgeball)
                (forall (?b - hexagonal_bin)
                  (forall (?t - curved_wooden_ramp)
                    (game-conserved
                      (game_start )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?b - triangular_ramp)
        (then
          (once (< (distance_side bed ?b ?b) (distance ?b ?b)) )
          (once (in desk ?b) )
          (hold-while (and (in_motion desk) (adjacent ?b desktop) ) (agent_holds ?b) )
        )
      )
    )
    (forall (?o - desk_shelf)
      (and
        (preference dodgeballThrownToBin
          (exists (?b6 - ball)
            (then
              (hold-for 4 (in_motion ?o) )
              (once (in_motion ?b6) )
              (hold (agent_holds ?b6) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (count-unique-positions ballThrownToBin:green:yellow:basketball) (count-once-per-external-objects ballThrownToBin:dodgeball) )
)
(:scoring
  (total-score)
)
)

(define (game game-id-995) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?b1 - hexagonal_bin)
      (and
        (forall (?tb - doggie_bed)
          (game-optional
            (on upright ?b1)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference itemsHidingScreens
      (exists (?d - (either blue_cube_block desktop) ?b - hexagonal_bin ?o4 - dodgeball ?l2 ?b4 - hexagonal_bin)
        (at-end
          (and
            (rug_color_under ?b4 ?b4)
            (and
              (agent_holds ?l2)
              (adjacent_side ?b4 ?l2 ?l2)
              (not
                (not
                  (touch ?l2 pink_dodgeball)
                )
              )
              (in_motion desk)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* 3 8 5 5 )
    (count-overlapping itemsHidingScreens:dodgeball)
  )
)
(:scoring
  (count-total itemsHidingScreens:beachball)
)
)

(define (game game-id-996) (:domain few-objects-room-v1)
(:setup
  (forall (?b ?h ?d ?b ?p ?o5 - teddy_bear ?g - cube_block)
    (and
      (game-optional
        (agent_holds ?g)
      )
    )
  )
)
(:constraints
  (and
    (preference itemsHidingScreens
      (exists (?l - doggie_bed)
        (then
          (forall-sequence (?g - dodgeball)
            (then
              (once (adjacent ?g ?g) )
              (once (agent_holds rug) )
              (once (not (game_over ) ) )
            )
          )
          (once (forall (?c6 - hexagonal_bin) (or (on ?l desk) ) ) )
          (once (and (not (not (adjacent_side ?l ?l ?l) ) ) (agent_holds ?l) ) )
        )
      )
    )
  )
)
(:terminal
  (> 4 10 )
)
(:scoring
  2
)
)

(define (game game-id-997) (:domain medium-objects-room-v1)
(:setup
  (exists (?b2 - chair)
    (game-optional
      (and
        (on ?b2 ?b2)
        (not
          (and
            (not
              (and
                (in room_center back)
                (adjacent ?b2 ?b2)
              )
            )
            (touch bed rug)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwKnocksBlock
      (exists (?d2 - (either floor cylindrical_block main_light_switch) ?w ?b4 ?o ?o - doggie_bed ?c - dodgeball)
        (then
          (once (or (same_type ?c agent) (< 1 9) (or (in_motion ?c) ) ) )
          (hold (and (and (< (distance ?c ?c) (distance ?c ?c)) (not (adjacent ?c desk) ) ) (same_object agent ?c) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count-once-per-objects throwKnocksBlock:red) (* (* (total-time) (count throwKnocksBlock:triangle_block) )
        (* (count-once-per-external-objects throwKnocksBlock:beachball) 15 )
      )
    )
    (count throwKnocksBlock:pink)
  )
)
(:scoring
  (count-once-per-objects throwKnocksBlock:blue_dodgeball)
)
)

(define (game game-id-998) (:domain medium-objects-room-v1)
(:setup
  (exists (?l2 - building ?h - dodgeball)
    (exists (?o ?d - (either hexagonal_bin dodgeball pyramid_block) ?g - dodgeball ?h - chair)
      (and
        (game-optional
          (on ?h ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference bigObjectThrownToBed
      (exists (?b9 - dodgeball ?c4 ?t1 - curved_wooden_ramp)
        (at-end
          (agent_holds desk)
        )
      )
    )
    (preference pinkObjectMovedToRoomCenter
      (exists (?s - building)
        (then
          (once (on ?s ?s) )
          (hold (not (faces agent ?s) ) )
          (once (in_motion ?s) )
        )
      )
    )
    (preference otherObjectsOnDeskShelf
      (exists (?r - hexagonal_bin)
        (then
          (once (and (exists (?w1 - block ?r - chair ?o - building) (not (not (and (and (in_motion room_center) (same_type desk ?r) ) (on ?o ?o) ) ) ) ) (object_orientation ?r ?r) ) )
          (once (and (not (and (= (distance ?r agent) 7) (agent_holds ?r) ) ) (and (not (in_motion pink_dodgeball) ) (in_motion floor) ) ) )
          (once (not (and (agent_holds ?r) (and (and (agent_holds ?r) (and (and (agent_holds agent) (in_motion ?r) ) (on ?r ?r) ) ) (and (is_setup_object agent) (adjacent ?r bed) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (> (count-once-per-objects otherObjectsOnDeskShelf:hexagonal_bin) 10 )
)
(:scoring
  (count pinkObjectMovedToRoomCenter:dodgeball)
)
)

(define (game game-id-999) (:domain many-objects-room-v1)
(:setup
  (forall (?o3 - building)
    (game-conserved
      (on desk ?o3)
    )
  )
)
(:constraints
  (and
    (preference binKnockedOver
      (exists (?s - building)
        (at-end
          (< 1 1)
        )
      )
    )
    (preference ballThrownToChair
      (exists (?h - pyramid_block ?d - wall ?r - beachball)
        (at-end
          (in_motion ?r)
        )
      )
    )
  )
)
(:terminal
  (> (+ 4 (count ballThrownToChair:golfball) )
    (* 50 )
  )
)
(:scoring
  (external-forall-maximize
    8
  )
)
)

(define (game game-id-1000) (:domain many-objects-room-v1)
(:setup
  (forall (?o - curved_wooden_ramp ?o2 - (either key_chain curved_wooden_ramp))
    (or
      (and
        (game-conserved
          (forall (?o2 - dodgeball ?r - hexagonal_bin)
            (on agent agent)
          )
        )
      )
      (game-conserved
        (in ?o2 ?o2)
      )
      (forall (?h - triangular_ramp ?r2 - hexagonal_bin ?c - (either golfball cellphone desktop) ?d - dodgeball)
        (exists (?d - game_object)
          (forall (?l2 - (either cube_block beachball))
            (forall (?c - ball)
              (game-conserved
                (exists (?s - game_object ?h ?f - hexagonal_bin ?l - wall)
                  (and
                    (and
                      (in ?l2 ?d)
                      (agent_holds ?l2)
                    )
                    (on ?c ?l2)
                    (adjacent pink ?c)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference redDodgeballThrownToBinWithoutTouchingFloor
      (exists (?d - hexagonal_bin ?b - hexagonal_bin)
        (then
          (once (in ?b ?b) )
          (once (in_motion agent) )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (count-once-per-objects redDodgeballThrownToBinWithoutTouchingFloor:top_drawer) )
)
(:scoring
  (count redDodgeballThrownToBinWithoutTouchingFloor:blue_dodgeball:red_pyramid_block)
)
)

(define (game game-id-1001) (:domain few-objects-room-v1)
(:setup
  (forall (?r - dodgeball)
    (exists (?o - beachball ?d2 - cube_block)
      (and
        (and
          (and
            (game-optional
              (on ?r ?r)
            )
          )
        )
        (game-conserved
          (and
            (same_color ?d2 ?d2)
            (and
              (in_motion ?r)
              (equal_x_position pink ?r)
            )
            (in_motion ?d2)
            (not
              (and
                (agent_holds ?r)
                (not
                  (agent_holds ?d2)
                )
              )
            )
          )
        )
        (exists (?b - hexagonal_bin)
          (exists (?o1 - dodgeball)
            (and
              (game-conserved
                (>= (distance ?d2 rug) (distance ?d2 ?r))
              )
              (exists (?c3 - hexagonal_bin ?b - (either pink dodgeball alarm_clock))
                (game-conserved
                  (agent_holds ?d2)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference thrownBallReachesEnd
      (exists (?b - hexagonal_bin ?b5 - doggie_bed)
        (then
          (hold (and (< 1 10) (not (not (exists (?b - building) (agent_holds ?b) ) ) ) ) )
          (once-measure (and (and (not (not (and (adjacent bridge_block ?b5) (in_motion ?b5) ) ) ) (and (in_motion ?b5) (< 1 (distance_side brown ?b5 ?b5 ?b5)) ) ) (in_motion ?b5) ) (x_position ?b5) )
          (hold (and (on ?b5 ?b5) (not (agent_holds ?b5) ) ) )
        )
      )
    )
    (preference smallItemsInPlace
      (exists (?s - building)
        (then
          (hold (and (in ?s desk) (touch ?s agent) ) )
          (once (adjacent_side desk ?s ?s) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once thrownBallReachesEnd:basketball:book) (count thrownBallReachesEnd:pink_dodgeball:pyramid_block) )
)
(:scoring
  300
)
)

(define (game game-id-1002) (:domain many-objects-room-v1)
(:setup
  (forall (?c - triangular_ramp)
    (game-conserved
      (on ?c ?c)
    )
  )
)
(:constraints
  (and
    (preference ballThrownFromRug
      (exists (?b - game_object)
        (then
          (once (and (equal_x_position ?b ?b) (agent_holds ?b) ) )
          (once (exists (?b - color ?b3 - (either lamp basketball)) (not (in ?b ?b3) ) ) )
          (hold (= (distance ?b front) 1) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 2 3 )
  )
)
(:scoring
  15
)
)

(define (game game-id-1003) (:domain many-objects-room-v1)
(:setup
  (forall (?w1 - hexagonal_bin ?c - doggie_bed)
    (exists (?db - hexagonal_bin ?d - dodgeball)
      (game-conserved
        (not
          (agent_holds ?d)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownFromRug
      (exists (?t - game_object)
        (then
          (hold (and (same_object ?t ?t) (and (forall (?b6 - cube_block ?w2 - (either blue_cube_block alarm_clock)) (same_type ?w2 ?w2) ) (not (same_color bed ?t) ) ) ) )
          (hold (and (in bed ?t) (not (not (in_motion ?t) ) ) ) )
          (hold (in_motion ?t) )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (count-once-per-objects ballThrownFromRug:top_drawer) (- (* (count-shortest ballThrownFromRug:red_pyramid_block) (count ballThrownFromRug:hexagonal_bin:pink_dodgeball) (count-once-per-objects ballThrownFromRug:book) 5 (count-once-per-objects ballThrownFromRug:red) )
      )
    )
    (>= (count-total ballThrownFromRug:blue_dodgeball) (+ (count ballThrownFromRug:dodgeball) (* 50 (not (count-unique-positions ballThrownFromRug:beachball) ) )
      )
    )
  )
)
(:scoring
  (external-forall-maximize
    (count ballThrownFromRug:purple:dodgeball)
  )
)
)

(define (game game-id-1004) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-conserved
      (object_orientation pink_dodgeball floor)
    )
  )
)
(:constraints
  (and
    (preference objectThrownFromRug
      (exists (?d1 - (either cube_block cd))
        (then
          (once (in_motion ?d1) )
          (hold (on ?d1 ?d1) )
          (once (on ?d1 agent) )
        )
      )
    )
    (preference bookOnDeskShelf
      (exists (?h - hexagonal_bin)
        (then
          (once (agent_holds ?h) )
          (once (touch ?h ?h) )
          (hold (and (agent_holds ?h) (and (<= (distance ?h ?h) (distance ?h ?h)) (on ?h ?h) ) ) )
        )
      )
    )
    (preference throwToBin
      (exists (?b - triangular_ramp)
        (at-end
          (opposite agent ?b)
        )
      )
    )
  )
)
(:terminal
  (> (* (+ (/ (count throwToBin:triangle_block) (external-forall-minimize (count objectThrownFromRug:green) ) ) (count-shortest throwToBin:yellow_pyramid_block) )
      5
    )
    (< (* (count-once objectThrownFromRug:basketball:top_drawer) (external-forall-maximize (count-once-per-objects bookOnDeskShelf:yellow) ) (count-once-per-objects bookOnDeskShelf:cube_block) )
      (total-score)
    )
  )
)
(:scoring
  8
)
)

(define (game game-id-1005) (:domain medium-objects-room-v1)
(:setup
  (exists (?o - cube_block)
    (exists (?l2 - (either pencil credit_card dodgeball pencil cube_block) ?b - (either cylindrical_block mug) ?w1 - hexagonal_bin)
      (game-conserved
        (and
          (in_motion ?o)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownFromObjectToBin
      (exists (?b6 - doggie_bed)
        (then
          (once (< (distance ?b6 ?b6) 5) )
          (hold (or (forall (?l - doggie_bed) (in ?b6 ?b6) ) (and (= 1 1) (in_motion green) ) ) )
          (hold-for 1 (not (< (distance ?b6 ?b6) (distance ?b6 ?b6)) ) )
        )
      )
    )
    (forall (?t1 - building)
      (and
        (preference blocksInPlace
          (exists (?b - drawer)
            (at-end
              (and
                (in ?t1 ?t1)
              )
            )
          )
        )
        (preference throwAttempt
          (exists (?c - dodgeball ?h - hexagonal_bin)
            (then
              (hold (and (not (in_motion ?t1) ) (on ?h ?h) ) )
              (once (and (and (rug_color_under bed ?t1) (in_motion ?h) ) (exists (?x - ball ?c - game_object) (touch front ?h) ) (in_motion ?t1) (exists (?g - chair) (and (agent_holds ?g) (touch ?t1 ?h) ) ) ) )
              (hold (and (not (not (same_object ?t1 ?h) ) ) (in bed agent) (in ?t1 ?h) (or (agent_holds agent) (and (agent_holds ?h) (or (not (touch ?h ?t1) ) (agent_holds door) ) (and (and (and (< 1 (distance ?t1 ?t1)) (in_motion room_center) ) (not (not (and (not (and (in_motion ?t1) (and (and (= (distance ?t1 ?h) 10 7) (not (forall (?c3 - hexagonal_bin) (not (in_motion agent) ) ) ) ) (and (in_motion ?t1) (and (is_setup_object ?h) (in agent ?t1) ) (and (not (and (and (on yellow ?t1) (object_orientation ?t1 ?t1) ) (and (not (and (agent_holds ?t1) ) ) (and (on ?t1 bed) (game_over ) ) (not (and (broken ?h) (not (in rug ?h) ) ) ) (forall (?p2 - dodgeball ?bl - curved_wooden_ramp) (and (above ?bl ?bl) (not (not (not (and (agent_holds ?bl) (and (not (not (is_setup_object ?t1) ) ) (in_motion ?h) ) ) ) ) ) ) ) ) (game_over ) (faces ?t1 ?t1) ) ) (agent_holds ?h) ) ) (and (adjacent ?h ?h) (in_motion rug) ) (in_motion agent) ) ) ) (in_motion bed) (in_motion ?t1) (not (adjacent_side agent green_golfball room_center) ) (or (< (distance upside_down ?t1) (distance ?h ?h)) (> 2 (distance ?h ?h)) ) (not (between ?h ?h ?h) ) (agent_holds ?h) ) ) ) ) (agent_holds agent) ) ) ) (and (not (agent_holds ?h) ) (not (in_motion ?t1) ) ) (agent_holds ?h) (agent_holds ?t1) (and (on ?t1 green_golfball) (in_motion ?t1) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 7 (* (count blocksInPlace:dodgeball) (* (count-once-per-objects throwAttempt:pyramid_block) (count-once-per-objects blocksInPlace:yellow_pyramid_block) )
        (count-once blocksInPlace:yellow)
      )
    )
    (>= 4 (- (count-once throwAttempt:orange) )
    )
  )
)
(:scoring
  (count ballThrownFromObjectToBin:purple:yellow:yellow_cube_block)
)
)

(define (game game-id-1006) (:domain many-objects-room-v1)
(:setup
  (forall (?b6 - building)
    (game-conserved
      (< 6 1)
    )
  )
)
(:constraints
  (and
    (forall (?d - (either lamp doggie_bed cylindrical_block mug))
      (and
        (preference blockInTowerKnockedByDodgeball
          (then
            (hold-for 3 (in_motion agent) )
            (once (on ?d ?d) )
            (once (not (on ?d ?d) ) )
          )
        )
      )
    )
    (preference objectsHidden
      (exists (?o2 - (either cube_block dodgeball dodgeball))
        (then
          (hold-for 10 (in ?o2 ?o2) )
          (once (not (on ?o2 ?o2) ) )
          (once (adjacent_side ?o2 agent ?o2 ?o2) )
        )
      )
    )
  )
)
(:terminal
  (>= (count objectsHidden:yellow_cube_block) (count-once-per-objects blockInTowerKnockedByDodgeball:basketball) )
)
(:scoring
  (count-once-per-objects objectsHidden)
)
)

(define (game game-id-1007) (:domain medium-objects-room-v1)
(:setup
  (exists (?l1 - game_object)
    (forall (?o1 - hexagonal_bin)
      (and
        (exists (?d - hexagonal_bin)
          (and
            (game-optional
              (and
                (in_motion ?d)
                (in ?l1 ?l1)
                (not
                  (opposite ?o1 ?l1)
                )
              )
            )
            (forall (?h - game_object ?b4 - (either dodgeball credit_card) ?f ?h - (either golfball cylindrical_block))
              (game-optional
                (game_start )
              )
            )
          )
        )
        (and
          (exists (?b4 - desktop)
            (exists (?b1 - hexagonal_bin)
              (exists (?d - hexagonal_bin ?l2 ?b - (either yellow_cube_block wall basketball))
                (forall (?d - cylindrical_block)
                  (game-optional
                    (< 1 3)
                  )
                )
              )
            )
          )
        )
        (exists (?c3 - beachball)
          (forall (?o - dodgeball ?d - hexagonal_bin ?p2 - hexagonal_bin)
            (exists (?r2 - (either cylindrical_block hexagonal_bin wall watch hexagonal_bin dodgeball floor) ?o2 - dodgeball)
              (forall (?c - ball ?c - cube_block)
                (game-conserved
                  (and
                    (or
                      (agent_holds desk)
                      (not
                        (in_motion ?l1)
                      )
                      (not
                        (not
                          (adjacent ?c ?o2)
                        )
                      )
                      (object_orientation ?c3 ?p2)
                    )
                    (not
                      (adjacent pink_dodgeball ?l1)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwGolfballToBin
      (exists (?w - flat_block)
        (then
          (once (not (in_motion ?w) ) )
          (hold (and (not (and (above rug room_center) (touch ?w ?w) ) ) (agent_holds agent) ) )
          (once (agent_holds ?w) )
          (once (agent_holds ?w) )
        )
      )
    )
    (preference ballOnBedAtEnd
      (exists (?h - teddy_bear)
        (then
          (once (touch ?h ?h) )
          (once (adjacent ?h ?h) )
          (once (same_type ?h ?h) )
        )
      )
    )
    (preference objectToBinOnFirstTry
      (exists (?d - dodgeball)
        (then
          (once (and (not (in_motion agent) ) (not (agent_holds ?d) ) ) )
          (once (and (in ?d top_shelf) (adjacent_side ?d ?d ?d) ) )
          (once (in_motion ?d) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects throwGolfballToBin:beachball:beachball) (count ballOnBedAtEnd:pink) )
)
(:scoring
  8
)
)

(define (game game-id-1008) (:domain many-objects-room-v1)
(:setup
  (and
    (game-optional
      (in_motion agent)
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?h - chair ?t - ball)
        (then
          (hold (= 1 8) )
          (once (adjacent ?t ?t) )
          (hold (agent_holds ?t) )
          (hold-for 2 (or (not (and (same_object ?t ?t) (and (on ?t ?t) (agent_holds ?t) ) (and (and (in_motion ?t) (adjacent desk room_center) (in desk ?t) (in_motion ?t) (not (not (and (not (on ?t ?t) ) (= 1 1) ) ) ) (in ?t ?t) ) (and (agent_holds ?t) (in_motion rug) ) ) ) ) (and (< (distance ?t ?t) (distance agent ?t)) (not (and (agent_holds ?t) (in_motion ?t) ) ) ) ) )
        )
      )
    )
    (forall (?h - (either dodgeball cd red) ?r - shelf)
      (and
        (preference baseBlockInTowerAtEnd
          (exists (?o2 - flat_block)
            (then
              (hold-while (< 8 5) (not (agent_holds agent) ) )
              (hold (and (and (agent_holds ?r) (in_motion ?o2) ) (adjacent ?r agent) ) )
              (once (in_motion ?o2) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (= (+ 10 (+ 10 (count-once-per-objects baseBlockInTowerAtEnd:blue_cube_block) )
      )
      (and
        (count-overlapping throwAttempt:blue_dodgeball)
        (count-once-per-objects baseBlockInTowerAtEnd:green)
      )
    )
    (count-longest baseBlockInTowerAtEnd:blue_dodgeball)
  )
)
(:scoring
  (count baseBlockInTowerAtEnd:beachball)
)
)

(define (game game-id-1009) (:domain medium-objects-room-v1)
(:setup
  (forall (?b10 - beachball ?b - (either doggie_bed cd))
    (and
      (game-conserved
        (or
          (not
            (not
              (forall (?c - chair)
                (in_motion ?c)
              )
            )
          )
          (exists (?o2 - beachball ?r2 - hexagonal_bin ?b2 - wall)
            (> 0.5 2)
          )
        )
      )
      (game-optional
        (in_motion ?b)
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballAndBasketballInBin
      (exists (?p ?o ?o ?r ?d2 ?l2 - hexagonal_bin ?p ?h - hexagonal_bin)
        (then
          (once (agent_holds ?p) )
          (once (agent_holds ?p) )
          (hold (not (and (in upright ?h) (and (in_motion ?p) (and (in_motion ?h) (agent_holds ?p) ) (and (not (= (distance ?h ?p) (distance ?p ?h)) ) (not (and (in ?h ?h) (on ?p side_table) ) ) ) (and (adjacent ?h room_center) (in_motion ?h) (not (and (exists (?x - building) (not (on agent ?p) ) ) (agent_holds ?p) ) ) (in_motion ?h) (above ?p ?p) (agent_holds ?p) ) (agent_holds ?h) (or (not (adjacent_side ?p ?p ?p) ) (in blue ?p) ) ) ) ) )
        )
      )
    )
    (forall (?r - wall ?h - hexagonal_bin)
      (and
        (preference throwTeddyOntoPillow
          (exists (?t - (either wall))
            (then
              (once (in_motion ?h) )
              (once (adjacent ?t ?h) )
              (once (agent_holds ?t) )
            )
          )
        )
      )
    )
    (forall (?c - chair)
      (and
        (preference blocksInPlace
          (exists (?c - (either golfball key_chain) ?f - block)
            (then
              (hold-while (or (in_motion pink_dodgeball) (not (agent_holds ?c) ) ) (and (and (agent_holds ?c) (not (agent_holds north_wall) ) (not (not (and (adjacent_side ?f ?c ?c) (agent_holds agent) ) ) ) ) (toggled_on rug) ) (and (on front ?f) (in ?c ?c) ) (not (on room_center ?c) ) )
              (once (in_motion rug) )
              (once (not (not (forall (?h ?d - dodgeball) (and (open ?f) (on ?f ?f) ) ) ) ) )
            )
          )
        )
      )
    )
    (forall (?o1 - yellow_cube_block ?c1 - teddy_bear ?w - dodgeball ?bl - hexagonal_bin)
      (and
        (preference throwAttemptFromDoor
          (exists (?c ?b9 ?o - hexagonal_bin)
            (then
              (once (and (in_motion ?o) (< (distance ?b9 ?c) (distance agent pink)) ) )
              (once (and (not (and (in_motion ?bl) (adjacent ?c ?o) ) ) (agent_holds ?o) ) )
              (hold (on ?b9 ?bl) )
            )
          )
        )
      )
    )
    (preference pillowMovedToRoomCenter
      (exists (?c - (either hexagonal_bin pink laptop triangular_ramp) ?f - block ?p - wall ?h - shelf)
        (then
          (once (in ?h ?h) )
          (forall-sequence (?c - ball)
            (then
              (hold-while (and (and (and (and (same_color ?c desk) (in_motion ?c) ) (not (not (touch ?c ?c) ) ) ) (in_motion ?h) (not (open ?h) ) (on rug ?c) (< (distance_side ?c ?c floor ?h) (distance agent ?c)) (= (distance_side ?h ?c desk) (distance_side agent ?h ?c)) (and (on ?h ?h) (and (not (in_motion ?h) ) (in_motion ?h) ) (agent_holds ?c) ) ) (rug_color_under upright ?c) (object_orientation door ?c) ) (not (agent_holds agent) ) )
              (once (not (agent_holds ?c) ) )
              (hold (not (not (not (exists (?b3 - (either main_light_switch golfball)) (faces ?b3 blue) ) ) ) ) )
            )
          )
          (once (agent_holds ?h) )
        )
      )
    )
  )
)
(:terminal
  (>= (count throwAttemptFromDoor:basketball) (count throwTeddyOntoPillow:beachball) )
)
(:scoring
  4
)
)

(define (game game-id-1010) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (forall (?b1 - teddy_bear)
      (open ?b1)
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?h - block)
        (at-end
          (agent_holds ?h)
        )
      )
    )
    (preference objectMoved
      (exists (?h - block)
        (then
          (once (not (not (< 1 (distance ?h ?h)) ) ) )
          (once (on pink_dodgeball ?h) )
          (once (in_motion ?h) )
        )
      )
    )
    (preference dodgeballFromDeskToTarget
      (exists (?o4 - curved_wooden_ramp ?d - ball)
        (then
          (hold-while (exists (?h - pyramid_block ?r - ball) (in_motion ?d) ) (in_motion ?d) (on ?d agent) (adjacent ?d ?d) )
          (hold (and (and (and (exists (?b - block) (in_motion ?d) ) (in ?d ?d) (agent_holds ?d) (on ?d ?d) ) ) (and (< (distance ?d ?d) (distance ?d rug)) (and (agent_holds ?d) (on ?d ?d) (= (distance ?d ?d) 6) ) ) ) )
          (hold (on ?d ?d) )
          (hold (same_color ?d ?d) )
        )
      )
    )
  )
)
(:terminal
  (>= (count objectMoved:basketball) (total-time) )
)
(:scoring
  (count-once-per-objects objectMoved:dodgeball)
)
)

(define (game game-id-1011) (:domain many-objects-room-v1)
(:setup
  (exists (?p - doggie_bed ?h - cube_block ?l1 - dodgeball)
    (game-conserved
      (adjacent ?l1 desk)
    )
  )
)
(:constraints
  (and
    (forall (?p3 - hexagonal_bin ?g - (either dodgeball golfball) ?l - bridge_block ?h - hexagonal_bin)
      (and
        (preference throwToRampToBin
          (then
            (once (or (in ?h floor) (or (and (and (or (on bed ?h) (on ?h ?h) (and (>= 9 1) (not (touch ?h ?h) ) (and (on ?h ?h) (in_motion ?h) (not (agent_holds agent) ) ) ) ) (and (in_motion ?h) (agent_crouches ) ) ) (adjacent ?h ?h) (agent_holds back) ) ) ) )
            (hold-while (agent_holds ?h) (in_motion ?h) )
            (once (in_motion ?h) )
          )
        )
      )
    )
    (forall (?b3 - building)
      (and
        (preference blockPlacedInBuilding
          (exists (?b - cube_block)
            (at-end
              (and
                (< 0.5 (distance ?b ?b))
                (agent_holds ?b)
                (in_motion top_shelf)
              )
            )
          )
        )
        (preference beachballBouncedOffRamp
          (exists (?c - doggie_bed)
            (then
              (hold (agent_holds ?b3) )
              (once (object_orientation ?b3 ?c) )
              (once (on ?b3 ?b3) )
            )
          )
        )
      )
    )
    (preference blockCorrectlyPicked
      (exists (?d - hexagonal_bin ?h ?o - chair)
        (at-end
          (and
            (agent_holds desk)
            (not
              (and
                (in_motion ?o)
                (or
                  (in_motion ?o)
                  (in_motion ?o)
                  (or
                    (on ?o ?o)
                    (and
                      (in_motion ?h)
                      (not
                        (is_setup_object ?o)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects beachballBouncedOffRamp:beachball) (* (and (+ (* 2 (count throwToRampToBin) )
          (count throwToRampToBin:golfball:blue)
          20
          (total-time)
        )
        (* (count blockCorrectlyPicked:yellow) 4 (count throwToRampToBin:golfball:yellow) (total-score) )
        (* (* (count-once-per-objects blockPlacedInBuilding:blue_cube_block) (count-once-per-objects throwToRampToBin:beachball) (count-once-per-objects blockPlacedInBuilding:dodgeball) 1 )
          (count blockCorrectlyPicked:pink)
        )
      )
      (+ (count blockPlacedInBuilding:blue_dodgeball:dodgeball) (* (* 9 (* (>= 7 3 )
              (* (count beachballBouncedOffRamp:cube_block) (count-increasing-measure blockPlacedInBuilding:book) )
              6
            )
            (- 20 )
          )
          (- (/ 7 (external-forall-maximize 1 ) ) )
        )
      )
    )
  )
)
(:scoring
  5
)
)

(define (game game-id-1012) (:domain few-objects-room-v1)
(:setup
  (exists (?c - hexagonal_bin)
    (game-conserved
      (not
        (and
          (not
            (agent_holds ?c)
          )
          (on ?c ?c)
          (and
            (and
              (and
                (in_motion ?c)
                (not
                  (= (distance ?c ?c) (distance ?c ?c) (distance_side ?c ?c ?c) 3)
                )
              )
              (not
                (on ?c ?c)
              )
            )
            (not
              (on ?c ?c)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballThrownToBinFromDesk
      (exists (?b2 - color)
        (then
          (once (agent_holds ?b2) )
          (once (touch ?b2 ?b2) )
          (once (on ?b2 ?b2) )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (+ 3 (- 7 (count dodgeballThrownToBinFromDesk:pink_dodgeball) ) )
  )
)
(:scoring
  (* 6 (- (count-longest dodgeballThrownToBinFromDesk:blue_dodgeball) )
  )
)
)

(define (game game-id-1013) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (exists (?f - dodgeball)
        (and
          (or
            (game-optional
              (and
                (on ?f ?f)
                (agent_holds ?f)
              )
            )
            (and
              (exists (?d - game_object)
                (game-optional
                  (not
                    (not
                      (in_motion ?f)
                    )
                  )
                )
              )
              (game-conserved
                (in_motion ?f)
              )
              (game-optional
                (not
                  (in ?f ?f)
                )
              )
            )
          )
          (game-conserved
            (and
              (and
                (on ?f ?f)
                (not
                  (and
                    (same_type ?f ?f)
                    (and
                      (and
                        (agent_holds agent)
                        (adjacent south_wall ?f)
                      )
                      (and
                        (and
                          (in bed ?f)
                        )
                        (not
                          (not
                            (not
                              (and
                                (game_over )
                                (not
                                  (not
                                    (and
                                      (in_motion ?f)
                                      (agent_crouches )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
              (agent_holds door)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownFromBehindBlock
      (exists (?b - triangular_ramp)
        (then
          (once (and (not (and (exists (?d ?h ?l - shelf) (same_type ?b ?b) ) (<= 1 0.5) ) ) (object_orientation ?b ?b) ) )
          (once (not (on agent agent) ) )
          (once (adjacent_side ?b ?b bridge_block) )
          (once (on floor ?b) )
        )
      )
    )
    (preference throwObjectToBin
      (exists (?b8 - (either main_light_switch laptop) ?l - hexagonal_bin ?c5 - teddy_bear)
        (then
          (once (rug_color_under ?c5 room_center) )
          (once (and (and (adjacent ?c5 ?c5) (game_over ) ) (and (and (in ?c5 ?c5) (agent_holds ?c5) ) (exists (?w2 - golfball) (agent_holds pillow) ) (and (exists (?h ?t2 ?h ?h ?o3 ?c - dodgeball) (in_motion agent) ) (and (not (agent_holds ?c5) ) ) ) ) ) )
          (once (agent_holds ?c5) )
          (once (on bed ?c5) )
          (hold (touch ?c5 ?c5) )
        )
      )
    )
    (preference ballNeverThrown
      (exists (?o2 - desktop ?b - hexagonal_bin)
        (at-end
          (agent_holds ?b)
        )
      )
    )
  )
)
(:terminal
  (not
    (<= (total-score) (count ballThrownFromBehindBlock:green:beachball:beachball) )
  )
)
(:scoring
  (count-once-per-external-objects ballThrownFromBehindBlock:pink_dodgeball)
)
)

(define (game game-id-1014) (:domain medium-objects-room-v1)
(:setup
  (exists (?l - cube_block)
    (game-conserved
      (in ?l ?l)
    )
  )
)
(:constraints
  (and
    (forall (?o - building ?l2 ?p2 - hexagonal_bin)
      (and
        (preference objectWithMatchingColor
          (exists (?b2 - color)
            (at-end
              (in_motion ?p2)
            )
          )
        )
        (preference throwBallToBin
          (exists (?h - cube_block)
            (at-end
              (and
                (agent_holds ?h)
                (agent_holds ?l2)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (count-once throwBallToBin:purple) )
)
(:scoring
  (* (count-once throwBallToBin:dodgeball) (* 3 3 )
    (count objectWithMatchingColor:yellow:golfball)
  )
)
)

(define (game game-id-1015) (:domain medium-objects-room-v1)
(:setup
  (exists (?d - (either game_object cd cube_block bridge_block watch pen pink) ?b - block)
    (and
      (or
        (exists (?b - block ?bl - hexagonal_bin)
          (game-conserved
            (and
              (in_motion agent)
              (and
                (in_motion ?bl)
                (in ?b ?bl)
                (and
                  (and
                    (in ?b ?bl)
                    (and
                      (and
                        (exists (?d - triangular_ramp ?b7 - cube_block)
                          (not
                            (in_motion ?bl)
                          )
                        )
                        (not
                          (in_motion right)
                        )
                      )
                      (and
                        (in ?bl ?bl)
                        (and
                          (in ?bl ?b)
                          (agent_holds ?bl)
                        )
                      )
                    )
                  )
                  (in_motion agent)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?w - pyramid_block)
      (and
        (preference matchingBuildingBuilt
          (then
            (once (same_type ?w ?w) )
            (once (open ?w) )
            (once (not (agent_holds ?w) ) )
          )
        )
        (preference objectMovedRoomSide
          (exists (?d - hexagonal_bin)
            (then
              (once (in_motion ?w) )
              (once (and (touch ?d ?w) (not (and (on ?d ?w) (< (distance ?w ?d) 1) ) ) ) )
              (once (and (in_motion agent) (or (equal_x_position ?d desk) (adjacent_side agent ?w ?w ?w) ) ) )
            )
          )
        )
        (preference ballOnBedAtEnd
          (exists (?tb - dodgeball)
            (then
              (once (is_setup_object ?w) )
              (once (and (and (not (exists (?c4 - dodgeball) (agent_holds ?c4) ) ) (adjacent ?tb agent) (agent_holds ?tb) (not (agent_holds ?w) ) (adjacent agent agent) (agent_holds ?w) (agent_holds ?tb) (and (not (and (same_object ?w ?w) (and (agent_holds ?tb) (exists (?d - block ?g - hexagonal_bin ?w1 - hexagonal_bin) (< 0 2) ) ) ) ) (or (in ?tb ?tb) (= 1 1) ) ) (forall (?h - (either flat_block doggie_bed)) (not (on ?w ?tb) ) ) (in_motion ?w) ) (and (on ?w yellow) (not (agent_holds ?tb) ) (< 1 6) ) ) )
              (once (not (and (agent_holds ?w) (in ?tb desk) (same_object ?w ?w) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 10 10 )
)
(:scoring
  (count matchingBuildingBuilt:dodgeball)
)
)

(define (game game-id-1016) (:domain many-objects-room-v1)
(:setup
  (exists (?c6 - doggie_bed ?p2 - curved_wooden_ramp)
    (and
      (forall (?o5 - game_object)
        (forall (?d2 - hexagonal_bin)
          (exists (?c - golfball)
            (game-conserved
              (not
                (and
                  (exists (?c - (either flat_block cylindrical_block hexagonal_bin))
                    (and
                      (on rug rug)
                      (equal_z_position room_center rug)
                    )
                  )
                  (in ?p2 ?p2)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference agentLeavesDogbedOrNoMoreBalls
      (exists (?h ?o1 - doggie_bed ?c1 - chair ?d2 - cube_block ?d2 - ball)
        (then
          (hold (toggled_on room_center) )
          (once (adjacent ?d2 ?d2) )
          (once (not (agent_holds ?d2) ) )
        )
      )
    )
  )
)
(:terminal
  (> 4 (/ 10 4 ) )
)
(:scoring
  (count agentLeavesDogbedOrNoMoreBalls:brown)
)
)

(define (game game-id-1017) (:domain many-objects-room-v1)
(:setup
  (forall (?t2 - (either alarm_clock yellow_cube_block book))
    (exists (?t1 ?d2 - hexagonal_bin)
      (and
        (exists (?h - doggie_bed)
          (forall (?c - golfball)
            (game-conserved
              (adjacent_side ?c ?t2 bed)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference greenObjectMovedToRoomCenter
      (exists (?l1 - dodgeball)
        (at-end
          (not
            (and
              (not
                (equal_z_position desk ?l1)
              )
              (not
                (agent_holds ?l1)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (>= (count greenObjectMovedToRoomCenter:pink_dodgeball) (* (* (* (>= (* (>= 6 (count greenObjectMovedToRoomCenter:dodgeball) )
                  (+ (* (count-once greenObjectMovedToRoomCenter:dodgeball) 5 (count greenObjectMovedToRoomCenter:dodgeball:blue_dodgeball:dodgeball) (count-once-per-objects greenObjectMovedToRoomCenter:basketball) 2 4 )
                    1
                  )
                )
                (* 10 (- 5 )
                  (count greenObjectMovedToRoomCenter:purple)
                )
              )
              10
            )
            3
            (count-once-per-objects greenObjectMovedToRoomCenter:blue_dodgeball)
            1
            (* (* 2 1 )
              (count-once-per-objects greenObjectMovedToRoomCenter:yellow)
              3
            )
            2
          )
          (external-forall-maximize
            (count-once greenObjectMovedToRoomCenter:yellow:red)
          )
        )
      )
      (or
        (>= (count greenObjectMovedToRoomCenter:wall) (count greenObjectMovedToRoomCenter:purple) )
      )
    )
  )
)
(:scoring
  9
)
)

(define (game game-id-1018) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?d - block)
      (game-conserved
        (and
          (agent_holds ?d)
        )
      )
    )
    (exists (?p - ball)
      (game-optional
        (touch ?p ?p)
      )
    )
  )
)
(:constraints
  (and
    (forall (?b1 ?bl - golfball)
      (and
        (preference nonBlockPlacedInBuilding
          (exists (?s - hexagonal_bin ?h - hexagonal_bin ?b - cube_block)
            (then
              (once (agent_holds ?bl) )
              (once (and (and (and (adjacent_side ?bl rug ?b1) (< 4 7) ) (in_motion ?b1) ) (and (and (exists (?c1 ?d - hexagonal_bin) (in_motion ?b) ) (and (< 1 1) (agent_holds ?b1) ) ) (in_motion ?b1) (agent_holds ?bl) ) ) )
              (hold (not (touch ?b ?b) ) )
            )
          )
        )
        (preference throwAttempt
          (exists (?r2 - block)
            (then
              (once (and (is_setup_object ?bl) (agent_holds ?bl) ) )
              (once (and (and (and (and (= 4 1) ) (object_orientation ?bl ?bl) ) (adjacent ?r2 room_center) ) (and (not (and (agent_holds ?bl) (agent_holds ?r2) ) ) (agent_holds ?r2) (on pink ?bl) ) ) )
              (once (not (on ?bl ?r2) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 30 10 )
    (>= (count throwAttempt:green) (count-once throwAttempt:red) )
  )
)
(:scoring
  (count-once-per-objects throwAttempt:basketball)
)
)

(define (game game-id-1019) (:domain medium-objects-room-v1)
(:setup
  (forall (?b - hexagonal_bin)
    (game-conserved
      (in_motion ?b)
    )
  )
)
(:constraints
  (and
    (preference throwObjectToBin
      (exists (?d - (either cube_block laptop) ?b3 - hexagonal_bin ?db - red_dodgeball)
        (then
          (hold (in_motion ?db) )
          (any)
          (once (in_motion ?db) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 10 (* 2 (count throwObjectToBin:dodgeball) )
    )
    2
  )
)
(:scoring
  (count-once-per-objects throwObjectToBin:yellow:basketball)
)
)

(define (game game-id-1020) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?b3 - cylindrical_block)
      (game-optional
        (touch bed ?b3)
      )
    )
    (forall (?b - game_object)
      (and
        (game-conserved
          (in brown ?b)
        )
        (and
          (game-conserved
            (agent_crouches )
          )
          (forall (?r1 - triangular_ramp)
            (game-conserved
              (not
                (agent_holds ?b)
              )
            )
          )
        )
        (game-conserved
          (in_motion desk)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToDrawerOrBin
      (exists (?o5 - block ?p - hexagonal_bin)
        (then
          (once (adjacent green ?p) )
          (once (< 10 1) )
          (once (in_motion ?p) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count-once-per-external-objects throwToDrawerOrBin:beachball:blue_dodgeball) 3 )
    (and
      (count throwToDrawerOrBin:golfball)
      (count throwToDrawerOrBin:book)
    )
  )
)
(:scoring
  (count throwToDrawerOrBin:triangle_block)
)
)

(define (game game-id-1021) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?b2 - building)
      (exists (?d - block)
        (game-optional
          (in ?b2 ?b2)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballHitsBinBottom
      (exists (?w - (either golfball))
        (at-end
          (or
            (not
              (not
                (and
                  (in_motion ?w)
                  (not
                    (and
                      (agent_holds ?w)
                      (touch ?w bottom_shelf)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
    (forall (?l - (either dodgeball book) ?h - curved_wooden_ramp ?d - book)
      (and
        (preference objectsHidden
          (exists (?t - (either pillow dodgeball) ?r - dodgeball)
            (then
              (hold (not (agent_holds ?r) ) )
              (once (not (agent_holds ?r) ) )
              (any)
            )
          )
        )
        (preference otherObjectsOnDeskShelf
          (exists (?g - ball)
            (then
              (forall-sequence (?b - hexagonal_bin)
                (then
                  (once (forall (?h - hexagonal_bin ?ob - hexagonal_bin ?b - block ?b - pillow) (adjacent ?d ?d) ) )
                  (once (on agent ?d) )
                  (once (not (agent_holds ?d) ) )
                )
              )
              (once (agent_holds room_center) )
              (once (same_type room_center ?d) )
            )
          )
        )
      )
    )
    (forall (?d - cube_block ?o4 - game_object ?r2 - pyramid_block)
      (and
        (preference itemsHidingScreens
          (exists (?b3 - dodgeball)
            (then
              (once (in_motion ?r2) )
              (once (not (and (and (in_motion floor) (adjacent ?b3 ?b3) ) (in ?r2 ?r2) ) ) )
              (hold (and (between ?b3 ?r2 ?r2) (touch ?b3 ?r2) (and (agent_holds ?b3) (< 1 (distance ?b3 ?r2)) (agent_holds ?r2) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-once-per-objects dodgeballHitsBinBottom:red:blue_dodgeball) (* (* 2 (count dodgeballHitsBinBottom:red) )
        (count otherObjectsOnDeskShelf:dodgeball)
      )
    )
    (>= 6 2 )
    (>= (count otherObjectsOnDeskShelf:dodgeball:purple) (count-once-per-objects otherObjectsOnDeskShelf:beachball:golfball) )
  )
)
(:scoring
  (count objectsHidden:tan)
)
)

(define (game game-id-1022) (:domain medium-objects-room-v1)
(:setup
  (exists (?r - curved_wooden_ramp ?w1 - chair)
    (exists (?p - hexagonal_bin)
      (and
        (and
          (game-conserved
            (adjacent floor ?p)
          )
          (game-conserved
            (in_motion ?p)
          )
        )
        (game-optional
          (<= 5 1)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownFromBehindBlock
      (exists (?c - ball ?b - red_pyramid_block)
        (then
          (hold (touch ?b rug) )
          (hold (adjacent ?b ?b) )
          (once (exists (?o4 - cube_block) (same_object front ?b) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 5 5 )
)
(:scoring
  (* (= 1 )
    (* (* (count-once-per-objects ballThrownFromBehindBlock) (+ 5 (count ballThrownFromBehindBlock:yellow) (count ballThrownFromBehindBlock:cube_block) )
      )
      (* (count-once-per-objects ballThrownFromBehindBlock:beachball) (count-once-per-objects ballThrownFromBehindBlock:red) )
    )
  )
)
)

(define (game game-id-1023) (:domain many-objects-room-v1)
(:setup
  (exists (?b3 - chair)
    (game-conserved
      (agent_holds ?b3)
    )
  )
)
(:constraints
  (and
    (forall (?r - (either dodgeball wall))
      (and
        (preference dodgeballThrownToBinFromDesk
          (exists (?c - ball)
            (at-end
              (and
                (exists (?b2 - hexagonal_bin)
                  (in_motion ?b2)
                )
                (agent_holds ?c)
              )
            )
          )
        )
      )
    )
    (preference throwBallToDoggieBedOffWall
      (exists (?b1 - hexagonal_bin ?b - building ?h - hexagonal_bin)
        (at-end
          (and
            (< 1 1)
            (not
              (and
                (and
                  (and
                    (in_motion ?h)
                    (not
                      (not
                        (and
                          (on ?h ?h)
                          (in bed ?h)
                          (same_color desk bed)
                        )
                      )
                    )
                  )
                  (not
                    (on ?h ?h)
                  )
                  (and
                    (not
                      (and
                        (on ?h ?h)
                        (in_motion ?h)
                      )
                    )
                    (not
                      (and
                        (in_motion ?h)
                        (and
                          (agent_holds ?h)
                          (adjacent ?h ?h)
                        )
                      )
                    )
                    (forall (?o ?b - teddy_bear)
                      (agent_holds ?o)
                    )
                    (and
                      (and
                        (in_motion ?h)
                        (< (x_position bed) 1)
                      )
                      (same_object ?h ?h)
                    )
                    (and
                      (in_motion ?h)
                      (in ?h ?h)
                    )
                    (rug_color_under ?h ?h)
                    (agent_holds ?h)
                  )
                )
                (in ?h bed)
              )
            )
            (equal_x_position ?h ?h)
            (agent_holds ?h)
            (not
              (object_orientation ?h ?h)
            )
            (agent_holds ?h)
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (= (count-once throwBallToDoggieBedOffWall:basketball) (external-forall-maximize (* (+ (< (count-overlapping dodgeballThrownToBinFromDesk:dodgeball) (count-once-per-objects dodgeballThrownToBinFromDesk:bed:green:doggie_bed) )
              (* (count dodgeballThrownToBinFromDesk:tall_cylindrical_block) (count-once-per-objects throwBallToDoggieBedOffWall:dodgeball) )
            )
            (count-once-per-objects dodgeballThrownToBinFromDesk:yellow)
          )
        )
      )
      (count throwBallToDoggieBedOffWall:pink)
    )
    (< (+ (count-once-per-objects throwBallToDoggieBedOffWall:pyramid_block) (* (- (count-once-per-objects throwBallToDoggieBedOffWall:block) )
          (count dodgeballThrownToBinFromDesk:pink)
          (count throwBallToDoggieBedOffWall:beachball)
        )
        (* (count-once-per-objects dodgeballThrownToBinFromDesk:dodgeball) (+ 5 3 )
          (and
            (- 3 )
            6
          )
        )
      )
      (* (count throwBallToDoggieBedOffWall:golfball) 2 )
    )
  )
)
(:scoring
  (* (and (* (- (* (count throwBallToDoggieBedOffWall:golfball) (* (- (count dodgeballThrownToBinFromDesk:red_pyramid_block) )
              (* (count-once-per-objects dodgeballThrownToBinFromDesk:basketball) 3 )
            )
          )
        )
        15
      )
      (>= (count throwBallToDoggieBedOffWall:doggie_bed:dodgeball:beachball) (count-once throwBallToDoggieBedOffWall:doggie_bed) )
    )
    (count dodgeballThrownToBinFromDesk:side_table)
    1
    2
  )
)
)
