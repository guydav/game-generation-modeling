(define (game game-id-0) (:domain medium-objects-room-v1)
(:setup
  (forall (?o4 - game_object ?c - cube_block)
    (exists (?r - hexagonal_bin ?c - hexagonal_bin)
      (game-optional
        (adjacent rug desk)
      )
    )
  )
)
(:constraints
  (and
    (preference itemInClosedDrawerAtEnd
      (exists (?d - wall)
        (at-end
          (> 5 8)
        )
      )
    )
  )
)
(:terminal
  (> (* (count-once-per-objects itemInClosedDrawerAtEnd:dodgeball) 3 )
    (* 1 (count-longest itemInClosedDrawerAtEnd:green) )
  )
)
(:scoring
  (count-once-per-objects itemInClosedDrawerAtEnd:dodgeball)
)
)



(define (game game-id-1) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (exists (?b - ball)
      (in_motion ?b)
    )
  )
)
(:constraints
  (and
    (forall (?o4 - (either cube_block hexagonal_bin))
      (and
        (preference agentLeavesDogbedOrNoMoreBalls
          (exists (?l - doggie_bed)
            (then
              (once (and (in ?l ?l) (in_motion ?l) ) )
              (once (in_motion ?o4) )
              (hold (in ?l ?l) )
            )
          )
        )
      )
    )
    (preference thrownBallReachesEnd
      (exists (?o3 ?d - hexagonal_bin)
        (then
          (once (adjacent_side ?d ?d east_sliding_door) )
          (once (in_motion rug) )
          (once (not (broken ?o3) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 1 (count-once thrownBallReachesEnd:book) )
    (<= 3 (count-once-per-objects agentLeavesDogbedOrNoMoreBalls:blue) )
    (>= (* (count thrownBallReachesEnd:pink) (* 0.5 (count thrownBallReachesEnd:pink:beachball) (count agentLeavesDogbedOrNoMoreBalls:basketball:blue_dodgeball) )
      )
      (* 30 7 )
    )
  )
)
(:scoring
  (count-once-per-objects thrownBallReachesEnd:dodgeball)
)
)



(define (game game-id-2) (:domain many-objects-room-v1)
(:setup
  (exists (?x - (either basketball pink))
    (exists (?c6 - hexagonal_bin)
      (game-conserved
        (not
          (in_motion ?c6)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockInTowerAtEnd
      (exists (?r1 - ball)
        (at-end
          (not
            (game_start )
          )
        )
      )
    )
    (preference throwOverRamp
      (exists (?b - game_object)
        (then
          (hold (equal_z_position ?b ?b) )
          (hold-while (not (adjacent ?b ?b) ) (adjacent rug ?b) (is_setup_object ?b) (and (in ?b ?b) (or (and (not (in_motion ?b) ) (= 8 9) ) (agent_holds agent) (not (is_setup_object ?b) ) ) ) )
          (hold-while (on rug desk) (and (touch ?b ?b) (adjacent pink_dodgeball ?b) ) )
        )
      )
    )
    (preference dodgeballHitsPillowWithoutTouchingBlock
      (exists (?w2 - chair)
        (then
          (once (and (not (agent_holds ?w2) ) (in_motion ?w2) ) )
          (hold-while (in pink_dodgeball ?w2) (not (on ?w2 ?w2) ) )
          (once (not (and (in ?w2 ?w2) (adjacent ?w2 agent) ) ) )
        )
      )
    )
  )
)
(:terminal
  (> (total-score) (/ 300 (count-once-per-objects blockInTowerAtEnd:dodgeball) ) )
)
(:scoring
  (>= (count dodgeballHitsPillowWithoutTouchingBlock:dodgeball:green:dodgeball) (count-once-per-objects blockInTowerAtEnd:basketball) )
)
)



(define (game game-id-3) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?c3 ?f - building ?r - (either cylindrical_block pyramid_block))
      (and
        (exists (?c - pillow ?o - triangular_ramp)
          (forall (?s - ball)
            (game-conserved
              (above ?o ?r)
            )
          )
        )
        (game-conserved
          (agent_holds ?r)
        )
      )
    )
    (exists (?t - beachball)
      (and
        (forall (?c - triangular_ramp ?d - hexagonal_bin)
          (and
            (exists (?b ?d1 ?h ?w ?o ?d - teddy_bear ?b3 - dodgeball ?w1 - cube_block ?p2 - hexagonal_bin ?o2 - golfball)
              (game-optional
                (forall (?b - dodgeball ?r1 - blue_cube_block)
                  (not
                    (on ?o2 ?r1)
                  )
                )
              )
            )
            (exists (?o ?h - pillow)
              (and
                (and
                  (forall (?b7 ?r - game_object ?h - teddy_bear ?b ?s - (either bridge_block main_light_switch cellphone) ?d - hexagonal_bin ?d - hexagonal_bin)
                    (exists (?g - wall)
                      (and
                        (exists (?b - ball ?t1 - hexagonal_bin)
                          (and
                            (not
                              (not
                                (game-optional
                                  (and
                                    (and
                                      (forall (?h - ball ?c2 - beachball)
                                        (and
                                          (and
                                            (in_motion ?t)
                                            (on ?t ?t1)
                                          )
                                          (in_motion ?t)
                                        )
                                      )
                                      (adjacent ?h ?d)
                                      (and
                                        (not
                                          (broken ?t)
                                        )
                                        (touch floor ?t)
                                        (and
                                          (and
                                            (on ?d ?t1)
                                            (and
                                              (and
                                                (on agent ?d)
                                                (not
                                                  (open ?h)
                                                )
                                                (in_motion agent)
                                              )
                                              (agent_holds ?h)
                                            )
                                          )
                                          (not
                                            (in_motion ?h)
                                          )
                                        )
                                      )
                                    )
                                    (in ?t1 ?g)
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                  (game-conserved
                    (and
                      (and
                        (not
                          (adjacent ?o ?h)
                        )
                        (not
                          (not
                            (in_motion ?t)
                          )
                        )
                      )
                      (in_motion ?o)
                      (and
                        (not
                          (agent_holds ?t)
                        )
                        (and
                          (adjacent ?d room_center)
                          (same_color ?d agent)
                          (in agent ?h)
                        )
                      )
                      (adjacent ?h ?t)
                    )
                  )
                  (game-conserved
                    (and
                      (not
                        (in_motion rug)
                      )
                      (in_motion ?o)
                    )
                  )
                )
                (game-conserved
                  (agent_holds ?t)
                )
              )
            )
            (game-conserved
              (on ?t ?t)
            )
          )
        )
        (game-conserved
          (on ?t ?t)
        )
      )
    )
    (and
      (and
        (exists (?b1 - hexagonal_bin)
          (game-conserved
            (forall (?c4 - teddy_bear)
              (not
                (in ?b1 desk)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference smallObjectThrownToBed
      (exists (?s - shelf)
        (then
          (hold (agent_holds ?s) )
          (once (agent_holds agent) )
          (once (and (not (broken bed) ) (not (on ?s ?s) ) ) )
        )
      )
    )
    (forall (?d ?h - red_dodgeball)
      (and
        (preference throwToBin
          (exists (?r - chair)
            (at-end
              (and
                (> (distance ?d ?h) (distance bottom_shelf agent))
                (in_motion ?r)
              )
            )
          )
        )
      )
    )
    (preference ballKnocksBlockFromRug
      (exists (?bl - game_object)
        (then
          (once (and (and (in_motion rug) (not (adjacent ?bl ?bl) ) ) (and (not (< (distance ?bl ?bl) (distance ?bl ?bl)) ) (and (agent_crouches ) (in_motion agent) ) ) ) )
          (once (touch ?bl room_center) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once ballKnocksBlockFromRug:dodgeball) (total-score) )
)
(:scoring
  (count-once ballKnocksBlockFromRug:dodgeball)
)
)



(define (game game-id-4) (:domain many-objects-room-v1)
(:setup
  (exists (?bl - flat_block ?r - (either dodgeball alarm_clock))
    (game-optional
      (agent_holds agent)
    )
  )
)
(:constraints
  (and
    (forall (?h - drawer)
      (and
        (preference blindsOpened
          (exists (?d - game_object)
            (then
              (hold (on agent ?d) )
              (once (exists (?bl - tall_cylindrical_block) (and (touch ?d ?h) (in_motion south_wall) ) ) )
              (once (or (= (distance ?h ?d) (distance ?d desk) (distance ?h ?d)) (and (in_motion ?d) (< (distance ?d ?h) 1) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-overlapping blindsOpened:basketball) (total-score) )
)
(:scoring
  (+ 8 (+ 18 (* 3 10 )
    )
  )
)
)



(define (game game-id-5) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?d - doggie_bed)
      (or
        (game-conserved
          (in ?d ?d)
        )
        (game-optional
          (agent_holds ?d)
        )
        (forall (?g - dodgeball)
          (and
            (exists (?p - dodgeball ?w2 - ball ?h - game_object)
              (game-optional
                (on ?d ?d)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference itemsTurnedOff
      (exists (?l3 - ball)
        (then
          (hold (in_motion room_center) )
          (hold-while (forall (?b2 - hexagonal_bin) (on front ?l3) ) (in_motion ?l3) (in_motion ?l3) )
          (once (agent_holds ?l3) )
        )
      )
    )
    (forall (?b - (either flat_block yellow_cube_block))
      (and
        (preference thrownBallHitsBlock
          (exists (?w2 - (either cylindrical_block cube_block pen) ?h - cube_block ?d - hexagonal_bin)
            (then
              (hold (and (not (not (rug_color_under ?b room_center) ) ) (and (< 3 (distance ?d ?b)) (touch ?b ?d) ) ) )
              (hold (in_motion desk) )
              (once (forall (?c - game_object) (and (in_motion ?b) (on agent ?b) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count thrownBallHitsBlock:block:red) (total-score) )
)
(:scoring
  (count thrownBallHitsBlock:hexagonal_bin)
)
)



(define (game game-id-6) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (and
      (agent_holds agent)
      (exists (?h - dodgeball)
        (not
          (agent_holds ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?tb - game_object)
      (and
        (preference throwBallToBinOffObject
          (exists (?d2 ?b1 ?o - ball)
            (then
              (hold-while (and (in ?o ?d2) (< 6 2) (< (distance ?b1 ?d2) 1) ) (faces ?d2 ?tb) (agent_holds ?b1) )
              (once (not (exists (?p2 - chair) (< (distance ?tb ?tb) (distance agent ?d2)) ) ) )
              (once (adjacent rug ?o) )
            )
          )
        )
      )
    )
    (preference smallObjectThrownToBed
      (exists (?h - ball ?h - (either cube_block laptop))
        (at-end
          (in_motion desk)
        )
      )
    )
    (preference blockOnBlockInTowerAtEnd
      (exists (?b - hexagonal_bin)
        (then
          (once (on ?b ?b) )
          (once (agent_holds room_center) )
          (hold-while (same_type ?b upright) (agent_holds ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects blockOnBlockInTowerAtEnd:pink) (+ (count blockOnBlockInTowerAtEnd:pyramid_block) 5 (+ (count smallObjectThrownToBed:basketball:beachball) (count-once throwBallToBinOffObject:dodgeball) (count-once-per-objects smallObjectThrownToBed:yellow_pyramid_block) 8 (count-once-per-objects smallObjectThrownToBed:hexagonal_bin) (count-once-per-external-objects blockOnBlockInTowerAtEnd:hexagonal_bin:beachball:hexagonal_bin) (external-forall-maximize (external-forall-maximize (count-total blockOnBlockInTowerAtEnd:doggie_bed) ) ) (count-once-per-objects throwBallToBinOffObject:beachball) 4 )
    )
  )
)
(:scoring
  (count smallObjectThrownToBed)
)
)



(define (game game-id-7) (:domain medium-objects-room-v1)
(:setup
  (exists (?h - wall)
    (exists (?l3 - hexagonal_bin ?t - hexagonal_bin)
      (forall (?s - (either cylindrical_block dodgeball))
        (and
          (game-conserved
            (on ?s ?s)
          )
          (game-optional
            (in ?s ?t)
          )
          (and
            (and
              (game-optional
                (adjacent ?h ?t)
              )
              (game-conserved
                (agent_holds desk)
              )
              (and
                (exists (?h - dodgeball)
                  (and
                    (game-conserved
                      (in ?s ?h)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference bounceBallToBin
      (exists (?b3 - drawer ?o2 - doggie_bed ?h ?b4 ?c ?l4 - curved_wooden_ramp)
        (then
          (hold (agent_holds ?c) )
          (hold (not (and (in_motion block) (in agent ?c) ) ) )
          (once (same_type ?c ?h) )
          (hold-while (agent_holds ?b4) (object_orientation ?b4 ?b4) )
        )
      )
    )
    (preference throwBallToBin
      (exists (?o ?p ?f - doggie_bed ?p - hexagonal_bin ?b9 - chair ?c - ball)
        (then
          (hold-while (not (agent_holds room_center) ) (and (in_motion ?c) (and (not (in ?c door) ) (not (in_motion ?c) ) ) ) (agent_holds ?c) )
          (once (exists (?b2 - teddy_bear) (and (in_motion ?c) (on ?c ?c) (not (and (in_motion ?c) (and (adjacent bed ?b2) (agent_holds room_center) (in_motion ?c) (and (agent_holds ?c) (on ?c ?c) ) (on blue ?c) (agent_holds ?b2) (in_motion ?b2) (in_motion ?c) ) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (count-once-per-objects throwBallToBin:yellow:purple) 50 )
      (or
        (or
          (and
            (>= (total-score) (count throwBallToBin:basketball) )
            (>= 2 (total-time) )
          )
          (>= (total-score) 3 )
          (< (total-time) (+ (count throwBallToBin:basketball) 50 (- 5 )
            )
          )
        )
      )
    )
    (= (count-once throwBallToBin:pink) (count-once bounceBallToBin:book) )
    (>= (count bounceBallToBin:blue_pyramid_block) (count-same-positions throwBallToBin:hexagonal_bin) )
  )
)
(:scoring
  (- (count bounceBallToBin:yellow_cube_block) )
)
)



(define (game game-id-8) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?o5 - dodgeball)
      (exists (?d - doggie_bed)
        (exists (?w2 - hexagonal_bin)
          (forall (?d - (either pyramid_block triangle_block bridge_block))
            (and
              (and
                (game-conserved
                  (is_setup_object agent)
                )
                (game-conserved
                  (touch ?o5 ?d)
                )
              )
              (and
                (and
                  (game-conserved
                    (exists (?h - dodgeball)
                      (on ?h ?d)
                    )
                  )
                )
                (and
                  (exists (?d2 - hexagonal_bin)
                    (exists (?l - ball)
                      (exists (?h - building ?ob - golfball)
                        (and
                          (or
                            (exists (?h - wall)
                              (and
                                (and
                                  (game-conserved
                                    (and
                                      (agent_holds ?h)
                                      (not
                                        (and
                                          (in_motion ?d2)
                                          (and
                                            (in_motion ?d2)
                                            (and
                                              (agent_holds ?o5)
                                            )
                                          )
                                        )
                                      )
                                      (not
                                        (and
                                          (in_motion ?l)
                                          (not
                                            (exists (?d - pillow)
                                              (agent_holds ?l)
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                  (forall (?t - (either beachball book) ?r - game_object ?c - dodgeball ?w2 - bridge_block)
                                    (forall (?t - chair ?w - hexagonal_bin)
                                      (game-conserved
                                        (agent_crouches )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                            (and
                              (forall (?b - game_object)
                                (forall (?h - red_dodgeball)
                                  (game-optional
                                    (agent_holds ?ob)
                                  )
                                )
                              )
                            )
                          )
                          (game-optional
                            (not
                              (adjacent ?ob ?d2)
                            )
                          )
                        )
                      )
                    )
                  )
                  (game-optional
                    (open ?w2)
                  )
                  (game-optional
                    (and
                      (in_motion ?w2)
                      (in_motion ?o5)
                    )
                  )
                )
                (and
                  (game-conserved
                    (agent_holds ?o5)
                  )
                  (forall (?b - block)
                    (forall (?b - pillow)
                      (or
                        (and
                          (and
                            (game-optional
                              (not
                                (agent_crouches )
                              )
                            )
                          )
                          (game-conserved
                            (not
                              (not
                                (object_orientation ?d floor)
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
              (not
                (game-conserved
                  (not
                    (game_over )
                  )
                )
              )
            )
          )
        )
      )
    )
    (and
      (and
        (forall (?c - (either pyramid_block desktop))
          (and
            (and
              (exists (?w2 - cube_block)
                (and
                  (game-conserved
                    (agent_holds ?c)
                  )
                )
              )
              (game-conserved
                (exists (?r2 - cube_block)
                  (not
                    (agent_holds ?c)
                  )
                )
              )
            )
          )
        )
      )
    )
    (exists (?g - ball)
      (exists (?o - building ?d - block)
        (game-conserved
          (not
            (in_motion ?g)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference redDodgeballThrownToBinWithoutTouchingFloor
      (exists (?b - dodgeball)
        (then
          (hold (agent_holds ?b) )
          (once (on bed agent) )
        )
      )
    )
  )
)
(:terminal
  (>= (count redDodgeballThrownToBinWithoutTouchingFloor:beachball) (count redDodgeballThrownToBinWithoutTouchingFloor:basketball) )
)
(:scoring
  (* (count redDodgeballThrownToBinWithoutTouchingFloor:orange) (count redDodgeballThrownToBinWithoutTouchingFloor:beachball) )
)
)



(define (game game-id-9) (:domain many-objects-room-v1)
(:setup
  (exists (?o - cylindrical_block)
    (exists (?ob - hexagonal_bin ?c - hexagonal_bin)
      (and
        (and
          (game-conserved
            (and
              (in_motion east_sliding_door)
              (not
                (and
                  (= (distance ?c ?c) 1)
                  (<= 8 7)
                  (agent_holds desk)
                )
              )
              (and
                (same_color ?c ?c)
                (agent_holds ?c)
              )
            )
          )
        )
        (game-conserved
          (in_motion ?o)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference binKnockedOver
      (exists (?d - (either teddy_bear desktop) ?h - wall ?s - hexagonal_bin)
        (then
          (once (adjacent ?s ?s) )
          (once (and (on ?s ?s) (open bed) (and (in_motion ?s) (in ?s ?s) ) ) )
          (hold (agent_holds brown) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (count-once-per-objects binKnockedOver:doggie_bed:green) (count binKnockedOver:orange) )
      (>= (+ 2 (count-once-per-objects binKnockedOver:beachball:pink_dodgeball) )
        (total-time)
      )
    )
    (= 3 (total-score) )
    (or
      (or
        (>= 1 20 )
        (= (count binKnockedOver:pink:red_pyramid_block) (+ (count binKnockedOver) (count binKnockedOver:alarm_clock:yellow) )
        )
        (or
          (or
            (>= (count-once-per-objects binKnockedOver:dodgeball) (* (* (count-once-per-objects binKnockedOver:red:triangle_block) (* (count binKnockedOver:golfball) (count-once-per-external-objects binKnockedOver:basketball) )
                )
                (+ (count binKnockedOver:beachball:pink_dodgeball) (* (+ (* (+ (count binKnockedOver:dodgeball) 5 )
                        (count-once-per-objects binKnockedOver:dodgeball)
                      )
                      8
                    )
                    (+ (* (+ (* (count-once binKnockedOver:pink) (+ (* 1 18 )
                              (-
                                (count-increasing-measure binKnockedOver:dodgeball)
                                (count-once-per-objects binKnockedOver:yellow)
                              )
                            )
                          )
                          10
                        )
                        (* 3 10 )
                      )
                      10
                    )
                  )
                )
              )
            )
          )
          (or
            (>= (count-once-per-objects binKnockedOver:yellow_cube_block) (count-once-per-objects binKnockedOver:green:beachball:beachball) )
            (>= (external-forall-maximize (count-overlapping binKnockedOver:hexagonal_bin:dodgeball) ) (+ 8 6 )
            )
          )
        )
      )
      (<= (count binKnockedOver:dodgeball) (count binKnockedOver:beachball) )
      (or
        (or
          (or
            (and
              (>= 3 (count binKnockedOver:rug:dodgeball) )
            )
            (or
              (<= (total-time) 3 )
              (>= (+ 10 (- 10 )
                  (count-once-per-external-objects binKnockedOver:blue_dodgeball:beachball)
                  3
                )
                6
              )
            )
          )
          (or
            (or
              (>= (* (* 8 30 )
                  30
                  5
                  (count binKnockedOver:dodgeball:purple)
                )
                (+ (count binKnockedOver:hexagonal_bin) 5 )
              )
            )
            (or
              (>= (total-time) (total-score) )
              (or
                (<= (total-score) (total-time) )
                (and
                  (or
                    (>= 2 30 )
                  )
                )
              )
            )
            (or
              (>= 2 3 )
              (>= (total-score) 10 )
              (= 2 (total-time) )
            )
            (>= (+ (count binKnockedOver:basketball) 3 )
              5
            )
          )
        )
        (>= (* (count binKnockedOver:blue_cube_block) (count-unique-positions binKnockedOver:purple) 30 (* 7 6 )
          )
          (* (count-once-per-objects binKnockedOver:pyramid_block) 9 (* 6 (+ (* 8 (count binKnockedOver:hexagonal_bin) )
                (count binKnockedOver:pink_dodgeball)
              )
            )
            (* 7 (>= 2 (count binKnockedOver:beachball:golfball) )
            )
          )
        )
      )
    )
  )
)
(:scoring
  (count-once binKnockedOver:cube_block)
)
)



(define (game game-id-10) (:domain few-objects-room-v1)
(:setup
  (forall (?p - game_object)
    (and
      (game-conserved
        (not
          (not
            (agent_holds ?p)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownFromRug
      (exists (?b - hexagonal_bin ?g - (either cylindrical_block alarm_clock side_table yellow_cube_block) ?o - tall_cylindrical_block ?l1 - dodgeball)
        (then
          (once (same_color ?l1 ?l1) )
          (once (in ?l1 ?l1) )
          (once (< 1 (distance ?l1 ?l1)) )
        )
      )
    )
    (preference blockInTowerKnocked
      (exists (?l2 - drawer)
        (then
          (once-measure (in_motion ?l2) (x_position ?l2) )
          (once (agent_holds ?l2) )
          (hold-while (and (agent_holds ?l2) (agent_holds ?l2) ) (not (above ?l2 agent) ) )
        )
      )
    )
  )
)
(:terminal
  (<= (+ (* (* (* 3 (count-once-per-objects blockInTowerKnocked:beachball) )
          (* (count ballThrownFromRug:dodgeball) 2 )
        )
        (* 6 (count-once-per-objects ballThrownFromRug:yellow) )
      )
      (count-overlapping ballThrownFromRug:dodgeball)
    )
    (external-forall-minimize
      (+ (count-once-per-objects ballThrownFromRug:blue_cube_block) (- (count ballThrownFromRug:golfball) )
      )
    )
  )
)
(:scoring
  (count-unique-positions ballThrownFromRug)
)
)



(define (game game-id-11) (:domain few-objects-room-v1)
(:setup
  (exists (?c ?o - ball ?c5 - cube_block)
    (game-optional
      (and
        (not
          (in_motion south_wall)
        )
        (not
          (adjacent ?c5 ?c5)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToBinFromOppositeWall
      (exists (?p1 - chair)
        (at-end
          (exists (?h - building)
            (not
              (same_type ?h ?h)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (external-forall-maximize (count throwToBinFromOppositeWall:hexagonal_bin) ) 5 )
    (count throwToBinFromOppositeWall:dodgeball:beachball)
  )
)
(:scoring
  (count-once-per-objects throwToBinFromOppositeWall:pink_dodgeball)
)
)



(define (game game-id-12) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (toggled_on agent)
  )
)
(:constraints
  (and
    (forall (?b4 - hexagonal_bin)
      (and
        (preference dropAttempt
          (exists (?l2 - curved_wooden_ramp ?o3 - dodgeball)
            (then
              (hold-while (agent_holds ?b4) (in ?b4 left) (and (not (agent_holds bed) ) (and (touch ?b4 ?b4) (and (agent_holds agent) (not (not (in_motion ?b4) ) ) ) (and (and (same_color ?o3 ?o3) (on bed ?o3) ) (not (adjacent desk ?b4) ) ) (agent_holds room_center) (and (> 1 (x_position ?b4)) ) (not (in floor ?b4) ) ) ) (and (not (in_motion ?b4) ) (equal_x_position ?b4 ?b4) (touch ?o3 ?b4) (not (and (object_orientation ?o3 agent) (agent_holds desk) (agent_holds ?b4) (agent_holds ?b4) ) ) ) )
              (hold (and (in ?o3 ?b4) (in_motion ?b4) (not (agent_holds ?b4) ) ) )
              (hold-while (on ?b4 desk) (or (agent_holds ?o3) (and (rug_color_under ?b4 ?b4) (in_motion ?b4) (in ?b4 ?b4) ) ) )
            )
          )
        )
      )
    )
    (preference pillowMovedToRoomCenter
      (exists (?d - (either mug pen cube_block))
        (then
          (hold (or (on ?d bed) ) )
          (once (and (and (and (not (and (agent_holds ?d) (in_motion ?d) ) ) (and (not (on ?d ?d) ) (not (not (on pink ?d) ) ) (in_motion side_table) ) ) (not (>= 6 6) ) ) (<= 1 (distance ?d agent)) (not (and (not (in ?d agent) ) (agent_holds ?d) ) ) (and (same_color ?d ?d) (same_color agent ?d) ) ) )
          (hold (and (on ?d ?d) (in_motion ?d) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) 50 )
)
(:scoring
  (count-once-per-objects pillowMovedToRoomCenter:purple)
)
)



(define (game game-id-13) (:domain many-objects-room-v1)
(:setup
  (forall (?b4 - game_object)
    (and
      (forall (?d - red_pyramid_block)
        (and
          (exists (?b - tall_cylindrical_block)
            (and
              (exists (?b7 - dodgeball)
                (exists (?f - hexagonal_bin ?h - dodgeball)
                  (forall (?c4 - chair ?c - bridge_block ?b5 - dodgeball ?h - drawer)
                    (exists (?tb - game_object)
                      (game-conserved
                        (and
                          (agent_holds ?h)
                          (on ?b ?h)
                        )
                      )
                    )
                  )
                )
              )
              (game-conserved
                (agent_holds ?b)
              )
              (exists (?t2 - (either main_light_switch tall_cylindrical_block cd))
                (and
                  (not
                    (exists (?w - cube_block)
                      (forall (?t - hexagonal_bin)
                        (game-conserved
                          (on ?t2 ?w)
                        )
                      )
                    )
                  )
                )
              )
              (exists (?b10 - (either ball golfball))
                (forall (?d - dodgeball ?r - ball)
                  (and
                    (game-conserved
                      (and
                        (< 1 (distance floor bed))
                        (touch ?b10 ?r)
                      )
                    )
                  )
                )
              )
              (and
                (exists (?c4 - cube_block)
                  (or
                    (and
                      (game-optional
                        (in_motion desk)
                      )
                      (and
                        (game-conserved
                          (adjacent ?c4 ?b4)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
      (exists (?b8 - game_object)
        (game-conserved
          (in_motion ?b8)
        )
      )
      (game-optional
        (in_motion ?b4)
      )
    )
  )
)
(:constraints
  (and
    (forall (?c2 - block)
      (and
        (preference ballThrownThroughRampToBin
          (exists (?c - ball)
            (then
              (hold (not (toggled_on ?c2) ) )
              (once (in_motion agent) )
              (once (agent_holds ?c2) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (external-forall-maximize (count-once-per-objects ballThrownThroughRampToBin:blue_pyramid_block:blue_cube_block) ) 50 )
)
(:scoring
  (* (+ (count ballThrownThroughRampToBin:beachball) (* (count-once-per-objects ballThrownThroughRampToBin:orange) (- 2 )
      )
    )
    2
  )
)
)



(define (game game-id-14) (:domain many-objects-room-v1)
(:setup
  (exists (?h ?f - dodgeball ?b3 - red_dodgeball ?l - dodgeball)
    (game-conserved
      (adjacent ?l ?l)
    )
  )
)
(:constraints
  (and
    (preference cubeBlockFromBedToShelf
      (exists (?c - hexagonal_bin)
        (then
          (hold (agent_holds ?c) )
          (once (and (in ?c ?c) (in_motion bed) ) )
          (hold (not (in_motion door) ) )
        )
      )
    )
    (preference ballNeverThrown
      (exists (?o - (either pyramid_block ball))
        (then
          (once (and (same_color ?o ?o) (and (touch ?o ?o) (on ?o ?o) ) (and (exists (?h - (either triangular_ramp golfball)) (on ?o agent) ) (touch ?o ?o) ) ) )
          (once (in agent ?o) )
          (hold (not (touch ?o ?o) ) )
          (once (same_type ?o ?o) )
        )
      )
    )
    (preference gameObjectToBin
      (exists (?w - (either book pyramid_block) ?h - hexagonal_bin)
        (at-end
          (< 1 (distance ?h ?h))
        )
      )
    )
  )
)
(:terminal
  (>= 5 (count ballNeverThrown:yellow) )
)
(:scoring
  (* 5 6 )
)
)



(define (game game-id-15) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (< 0.5 0)
  )
)
(:constraints
  (and
    (preference objectOnBed
      (exists (?d - ball)
        (then
          (once (and (not (in_motion agent) ) (and (same_type room_center agent) (agent_holds ?d) ) ) )
          (once (not (not (agent_holds ?d) ) ) )
          (once (not (< (distance_side agent ?d ?d) (distance agent room_center)) ) )
        )
      )
    )
    (forall (?h - color)
      (and
        (preference teddyBearHitsBall
          (at-end
            (= 0 2)
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (total-score) (* (count objectOnBed:beachball:blue_dodgeball) (external-forall-maximize (- (* 5 (count teddyBearHitsBall:dodgeball) )
          )
        )
        (+ (* (= 0.7 10 )
            (count teddyBearHitsBall:white)
          )
          (count-once objectOnBed:pink:yellow)
        )
      )
    )
    (< 10 2 )
  )
)
(:scoring
  (count-once objectOnBed:pink_dodgeball:yellow_cube_block)
)
)



(define (game game-id-16) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?p - cube_block ?s - hexagonal_bin ?o - beachball)
      (game-conserved
        (agent_holds ?o)
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - chair)
      (and
        (preference throwOverRamp
          (exists (?d1 - (either main_light_switch beachball) ?b - (either watch bridge_block cube_block))
            (then
              (once (in_motion ?b) )
              (once (not (above upright ?b) ) )
              (once (> 1 3) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (* (count-once-per-objects throwOverRamp:beachball:pink_dodgeball) (count-shortest throwOverRamp:dodgeball) )
      (total-time)
    )
  )
)
(:scoring
  (* (count-once-per-objects throwOverRamp:dodgeball) 2 (* 3 (+ (* (+ 10 (- (count throwOverRamp) )
          )
          (* 10 (= (count-once-per-objects throwOverRamp:side_table) (* 2 (count throwOverRamp:dodgeball:golfball) (count throwOverRamp:golfball:dodgeball) )
              10
            )
          )
          3
        )
        8
      )
    )
  )
)
)



(define (game game-id-17) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (toggled_on agent)
  )
)
(:constraints
  (and
    (preference ballThrownFromDoor
      (exists (?g - cube_block ?g - doggie_bed ?t1 - red_dodgeball)
        (then
          (once (not (not (>= 4 1) ) ) )
          (once (or (not (and (and (not (and (in_motion ?t1) (in_motion bed) ) ) (not (on ?t1 ?t1) ) ) (agent_holds ?t1) (in_motion ?t1) ) ) (on ?t1 ?t1) ) )
          (once (object_orientation agent ?t1) )
        )
      )
    )
  )
)
(:terminal
  (= (/ (* (count-once-per-objects ballThrownFromDoor:red) (count ballThrownFromDoor:dodgeball) )
      18
    )
    (* 2 (* 4 4 )
    )
  )
)
(:scoring
  (count ballThrownFromDoor)
)
)



(define (game game-id-18) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?b - game_object)
      (game-optional
        (on ?b ?b)
      )
    )
  )
)
(:constraints
  (and
    (preference golfballUnderBridgeWithoutTouchingBlock
      (exists (?b ?tb - shelf)
        (then
          (once (not (not (and (not (in_motion ?b) ) (in_motion ?b) ) ) ) )
          (once (agent_holds ?b) )
          (once (exists (?b - dodgeball) (not (in_motion ?b) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 0 3 )
)
(:scoring
  (count-shortest golfballUnderBridgeWithoutTouchingBlock:basketball)
)
)



(define (game game-id-19) (:domain few-objects-room-v1)
(:setup
  (exists (?d - hexagonal_bin)
    (game-conserved
      (in ?d agent)
    )
  )
)
(:constraints
  (and
    (forall (?tb - teddy_bear)
      (and
        (preference throwToBin
          (exists (?b - shelf ?d - dodgeball)
            (then
              (once (faces ?tb ?tb) )
              (once (or (on ?d pink_dodgeball) (in_motion ?d) ) )
              (once (on bed ?tb) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) 2 )
)
(:scoring
  (* (count-increasing-measure throwToBin:blue) (count-same-positions throwToBin:golfball) )
)
)



(define (game game-id-20) (:domain many-objects-room-v1)
(:setup
  (exists (?r - cylindrical_block)
    (and
      (and
        (forall (?l1 - dodgeball ?w1 - dodgeball ?l2 - hexagonal_bin ?l2 - ball)
          (and
            (exists (?p3 - dodgeball ?o2 - block ?d - hexagonal_bin)
              (exists (?c - shelf ?s - cube_block)
                (game-optional
                  (and
                    (adjacent ?s ?r)
                    (exists (?d - block ?r - dodgeball)
                      (agent_holds ?s)
                    )
                  )
                )
              )
            )
            (and
              (and
                (game-conserved
                  (on ?r ?l2)
                )
                (and
                  (exists (?h ?t ?bl ?x - ball)
                    (and
                      (game-optional
                        (agent_holds ?bl)
                      )
                    )
                  )
                  (and
                    (game-optional
                      (and
                        (in_motion desk)
                        (and
                          (not
                            (in ?l2 ?l2)
                          )
                          (agent_holds ?r)
                        )
                        (> (distance ?l2 ?r) (distance ?l2 ?l2))
                      )
                    )
                  )
                )
                (game-optional
                  (in_motion ?l2)
                )
              )
              (forall (?b - wall)
                (game-conserved
                  (and
                    (on room_center north_wall)
                    (on ?l2 ?b)
                  )
                )
              )
              (game-conserved
                (not
                  (object_orientation ?r upright)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference redDodgeballThrownToBin
      (exists (?c - ball)
        (then
          (once (and (not (same_type agent ?c) ) (touch ?c ?c) ) )
          (once (in_motion ?c) )
          (once (in_motion ?c) )
        )
      )
    )
    (forall (?c2 - ball)
      (and
        (preference failedThrowToBin
          (exists (?g - hexagonal_bin ?c ?t2 - (either alarm_clock))
            (then
              (once (not (agent_holds ?c) ) )
              (once (in_motion ?t2) )
              (once (and (touch ?t2 ?c) (equal_x_position ?c2 ?t2) ) )
            )
          )
        )
        (preference blockKnockedFromBuildingInBin
          (exists (?b5 - dodgeball)
            (then
              (once (agent_holds ?c2) )
              (once (exists (?b9 - dodgeball) (agent_holds ?c2) ) )
              (once (exists (?d2 - hexagonal_bin) (adjacent ?c2 rug) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (count redDodgeballThrownToBin:pink:yellow_pyramid_block) 10 )
)
(:scoring
  (count-once-per-objects blockKnockedFromBuildingInBin:dodgeball)
)
)



(define (game game-id-21) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (not
      (in_motion yellow)
    )
  )
)
(:constraints
  (and
    (preference blockThrowAttempt
      (exists (?l - doggie_bed)
        (then
          (once (not (and (between ?l ?l ?l) (not (in_motion ?l) ) ) ) )
          (hold-while (adjacent ?l ?l) (not (not (and (agent_holds ?l) (not (in_motion ?l) ) ) ) ) )
          (hold (equal_z_position bed ?l) )
        )
      )
    )
    (preference throwAttempt
      (exists (?h - hexagonal_bin)
        (then
          (once (not (agent_holds agent) ) )
          (once (not (faces ?h ?h) ) )
          (hold (>= (distance desk ?h) (distance upright desk)) )
        )
      )
    )
    (preference throwTeddyOntoPillow
      (exists (?s - dodgeball ?s - building)
        (then
          (once (agent_holds ?s) )
          (once (in_motion ?s) )
          (hold (forall (?b8 - (either bed basketball triangle_block)) (and (on ?s ?s) (faces ?s rug) ) ) )
        )
      )
    )
  )
)
(:terminal
  (<= (total-time) 25 )
)
(:scoring
  (count-once-per-objects throwAttempt:yellow:hexagonal_bin)
)
)



(define (game game-id-22) (:domain many-objects-room-v1)
(:setup
  (forall (?b - building)
    (game-conserved
      (and
        (in_motion ?b)
        (in_motion bed)
      )
    )
  )
)
(:constraints
  (and
    (preference gameObjectToBin
      (exists (?t - hexagonal_bin)
        (then
          (once (and (not (not (not (not (not (and (and (agent_holds ?t) (faces ?t ?t) ) (agent_holds green) ) ) ) ) ) ) (or (agent_holds ?t) (on ?t ?t) ) (and (adjacent ?t ?t) (< (distance ?t ?t) 3) ) (not (in_motion pink_dodgeball) ) ) )
          (once (and (>= (distance ?t ?t) 10) (exists (?h - curved_wooden_ramp) (same_object ?t agent) ) ) )
          (once (and (in_motion ?t) (in_motion sideways) (on blue rug) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count gameObjectToBin) (total-time) )
)
(:scoring
  (count gameObjectToBin:golfball)
)
)



(define (game game-id-23) (:domain few-objects-room-v1)
(:setup
  (exists (?h - shelf)
    (exists (?d - cube_block)
      (game-optional
        (adjacent ?h ?h)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownOntoTarget
      (exists (?s - dodgeball ?b - chair ?g - red_dodgeball ?c3 - hexagonal_bin)
        (then
          (once (in ?c3 ?c3) )
          (once (not (and (not (agent_holds agent) ) (not (not (on ?c3 ?c3) ) ) ) ) )
          (hold (exists (?w2 - hexagonal_bin ?l1 - shelf) (not (not (in_motion ?l1) ) ) ) )
        )
      )
    )
    (preference ballKnocksBlockFromRug
      (exists (?d - color ?o - block)
        (then
          (hold (< 1 1) )
          (hold (in_motion green_golfball) )
          (hold (and (and (not (agent_holds ?o) ) (agent_holds ?o) ) (in_motion ?o) ) )
        )
      )
    )
    (preference blockCorrectlyPicked
      (exists (?d - (either basketball cube_block) ?o1 - cube_block)
        (then
          (once (is_setup_object ?o1) )
          (hold (equal_z_position ?o1 ?o1) )
          (hold (agent_holds ?o1) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 5 (count-overlapping ballThrownOntoTarget:dodgeball) )
    (count-once ballThrownOntoTarget:yellow)
  )
)
(:scoring
  (* (count-once-per-objects ballKnocksBlockFromRug:wall:beachball) (count ballKnocksBlockFromRug:yellow:doggie_bed) )
)
)



(define (game game-id-24) (:domain few-objects-room-v1)
(:setup
  (exists (?b7 - wall ?c6 - dodgeball ?b - chair)
    (exists (?w - hexagonal_bin)
      (and
        (forall (?d - dodgeball)
          (forall (?b3 - hexagonal_bin)
            (and
              (exists (?b ?s - shelf ?c - dodgeball)
                (forall (?d - golfball ?b8 - dodgeball)
                  (and
                    (forall (?h - hexagonal_bin)
                      (exists (?o - block)
                        (and
                          (or
                            (game-conserved
                              (agent_holds ?o)
                            )
                            (and
                              (not
                                (and
                                  (game-conserved
                                    (in ?b3 ?o)
                                  )
                                )
                              )
                            )
                            (and
                              (game-optional
                                (agent_holds ?c)
                              )
                            )
                          )
                        )
                      )
                    )
                    (and
                      (or
                        (game-conserved
                          (exists (?h - ball)
                            (in_motion room_center)
                          )
                        )
                        (and
                          (game-optional
                            (not
                              (in_motion ?d)
                            )
                          )
                        )
                      )
                    )
                    (game-optional
                      (in_motion desk)
                    )
                    (game-conserved
                      (on ?w ?d)
                    )
                    (game-conserved
                      (on ?b desk)
                    )
                  )
                )
              )
              (game-conserved
                (and
                  (and
                    (agent_holds ?b)
                    (in_motion ?b)
                  )
                  (in_motion ?d)
                )
              )
            )
          )
        )
        (and
          (game-conserved
            (not
              (and
                (forall (?h - triangular_ramp ?l - (either yellow laptop))
                  (in ?b rug)
                )
                (in_motion ?b)
              )
            )
          )
          (exists (?s - building ?d - hexagonal_bin)
            (forall (?b - cube_block)
              (and
                (and
                  (exists (?p - hexagonal_bin ?w ?o ?p - (either book dodgeball))
                    (exists (?o4 - pillow)
                      (forall (?c4 - curved_wooden_ramp ?c2 ?t - (either laptop main_light_switch pyramid_block laptop lamp pillow flat_block))
                        (game-optional
                          (same_type ?b ?b)
                        )
                      )
                    )
                  )
                  (forall (?w2 - dodgeball ?o - block)
                    (and
                      (game-optional
                        (and
                          (= (distance ?b rug) (distance ?d ?o))
                          (touch ?o ?b)
                        )
                      )
                      (and
                        (forall (?o5 - hexagonal_bin)
                          (game-conserved
                            (not
                              (not
                                (on desk pink_dodgeball)
                              )
                            )
                          )
                        )
                      )
                      (and
                        (exists (?p3 - block ?h - hexagonal_bin ?d - dodgeball)
                          (game-optional
                            (and
                              (object_orientation ?d desk)
                              (between bed ?b ?w)
                            )
                          )
                        )
                      )
                      (game-conserved
                        (on ?d ?d)
                      )
                    )
                  )
                )
              )
            )
          )
          (exists (?d - hexagonal_bin)
            (game-conserved
              (on ?b rug)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b ?h - dodgeball)
      (and
        (preference bigObjectThrownToBed
          (exists (?o2 - teddy_bear)
            (then
              (hold (> (distance ?b ?b) 1) )
              (once (not (same_color ?h ?h) ) )
              (once (in_motion ?b) )
            )
          )
        )
      )
    )
    (preference objectInBuilding
      (exists (?h - block)
        (then
          (hold (on ?h ?h) )
          (hold (in ?h ?h) )
          (hold-while (in_motion ?h) (< 9 2) )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (total-time) (total-time) )
    (>= (+ (count-once-per-objects bigObjectThrownToBed:pyramid_block) (count-once-per-objects objectInBuilding:doggie_bed:beachball) )
      (count-once-per-objects bigObjectThrownToBed:yellow:dodgeball)
    )
  )
)
(:scoring
  (= (* 5 (count bigObjectThrownToBed:dodgeball:red) (* (count-increasing-measure objectInBuilding:red:yellow_pyramid_block:golfball) (+ (>= (count bigObjectThrownToBed:dodgeball:dodgeball) 6 )
          5
        )
      )
      (count bigObjectThrownToBed:beachball:hexagonal_bin)
      6
      (* (* (count objectInBuilding:pink) (* (count objectInBuilding:yellow) (count-once-per-objects bigObjectThrownToBed:dodgeball) (* (count-once-per-objects objectInBuilding:bed) 6 )
          )
        )
        (* 6 (count-once-per-external-objects objectInBuilding:basketball) )
      )
    )
  )
)
)



(define (game game-id-25) (:domain many-objects-room-v1)
(:setup
  (exists (?t2 - ball)
    (and
      (forall (?o1 - dodgeball)
        (and
          (or
            (and
              (game-conserved
                (< 1 2)
              )
            )
          )
        )
      )
      (and
        (exists (?c ?h ?h ?o5 ?ob ?o - (either dodgeball watch))
          (game-conserved
            (agent_holds ?o)
          )
        )
        (game-conserved
          (agent_holds ?t2)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToRampToBed
      (exists (?h - cube_block)
        (then
          (hold (and (adjacent ?h ?h) (in_motion ?h) (not (on bed ?h) ) (and (and (on ?h ?h) (and (agent_holds ?h) (on ?h ?h) ) ) (agent_holds ?h) ) (and (agent_holds ?h) (and (not (in_motion agent) ) (not (in ?h ?h) ) ) ) (exists (?o - hexagonal_bin) (in_motion ?h) ) ) )
          (once (and (in_motion ball) (agent_holds ?h) (agent_holds ?h) ) )
          (once (on ?h agent) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once ballThrownToRampToBed:wall:rug) 2 )
)
(:scoring
  (* (count ballThrownToRampToBed:blue_dodgeball:hexagonal_bin) 7 )
)
)



(define (game game-id-26) (:domain medium-objects-room-v1)
(:setup
  (exists (?l - chair ?h - pillow ?db - block ?r - (either golfball golfball) ?h ?b9 ?c ?l ?d ?t ?c ?p ?d ?l2 - hexagonal_bin)
    (game-conserved
      (and
        (not
          (adjacent ?p ?c)
        )
        (and
          (agent_holds back)
          (not
            (exists (?r - (either dodgeball hexagonal_bin))
              (above ?r ?d)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b10 ?o - (either blue_cube_block tall_cylindrical_block dodgeball))
      (and
        (preference otherObjectsOnDeskShelf
          (then
            (once (not (not (and (in_motion ?b10) (and (and (on ?b10 agent) (in_motion sideways) ) (in_motion ?b10) ) ) ) ) )
            (once (in_motion ?o) )
            (hold (and (and (between ?b10 ?o ?b10) (in ?b10 desk) ) (in_motion ?b10) ) )
          )
        )
      )
    )
  )
)
(:terminal
  (< (total-score) (- (external-forall-minimize (count-once otherObjectsOnDeskShelf:purple:pink_dodgeball) ) )
  )
)
(:scoring
  (count-once otherObjectsOnDeskShelf:beachball)
)
)



(define (game game-id-27) (:domain few-objects-room-v1)
(:setup
  (exists (?t - (either bridge_block alarm_clock))
    (exists (?b4 - hexagonal_bin)
      (and
        (forall (?o - dodgeball ?w2 - teddy_bear)
          (game-conserved
            (touch ?w2 ?t)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectWithMatchingColor
      (exists (?d - desktop)
        (then
          (once (and (not (touch bed ?d) ) (< 1 (distance ?d ?d)) ) )
          (once (and (rug_color_under ?d ?d) (and (on ?d ?d) (on ?d ?d) ) ) )
          (once (in ?d ?d) )
        )
      )
    )
  )
)
(:terminal
  (and
    (<= 3 3 )
  )
)
(:scoring
  (count-once-per-objects objectWithMatchingColor:tall_cylindrical_block:blue_cube_block)
)
)



(define (game game-id-28) (:domain many-objects-room-v1)
(:setup
  (forall (?l1 - hexagonal_bin)
    (game-optional
      (not
        (in ?l1 ?l1)
      )
    )
  )
)
(:constraints
  (and
    (forall (?w - game_object ?b - game_object)
      (and
        (preference basketMadeFromRug
          (exists (?h - dodgeball)
            (then
              (once (in_motion ?h) )
              (once (exists (?db - dodgeball) (and (touch ?b ?b) (not (not (on ?h ?db) ) ) ) ) )
              (once (not (and (agent_holds ?h) (or (agent_holds ?h) (not (in_motion ?h) ) ) ) ) )
            )
          )
        )
        (preference objectThrownFromRug
          (exists (?f - hexagonal_bin ?p2 - (either tall_cylindrical_block key_chain))
            (then
              (hold (in_motion ?b) )
              (once (agent_holds ?b) )
              (once (not (in_motion ?b) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects objectThrownFromRug:red) (- (count basketMadeFromRug:doggie_bed) )
  )
)
(:scoring
  (- (count basketMadeFromRug:basketball:basketball) )
)
)



(define (game game-id-29) (:domain many-objects-room-v1)
(:setup
  (exists (?b1 - hexagonal_bin ?r - game_object)
    (game-conserved
      (agent_holds ?r)
    )
  )
)
(:constraints
  (and
    (preference objectMovedRoomSide
      (exists (?b - dodgeball ?o2 - hexagonal_bin)
        (then
          (once (in top_drawer ?o2) )
          (once (adjacent ?o2 ?o2) )
          (once (between ?o2 agent ?o2) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count objectMovedRoomSide:golfball) (count-same-positions objectMovedRoomSide:dodgeball) )
    (> 10 8 )
  )
)
(:scoring
  (count objectMovedRoomSide:golfball)
)
)



(define (game game-id-30) (:domain medium-objects-room-v1)
(:setup
  (exists (?b - cube_block ?h - cube_block)
    (game-optional
      (and
        (agent_holds ?h)
        (>= 8 (distance ?h ?h))
      )
    )
  )
)
(:constraints
  (and
    (preference blockPickedUp
      (exists (?d2 - cube_block)
        (then
          (once (and (agent_holds ?d2) (on ?d2 ?d2) ) )
          (hold (same_color ?d2 agent) )
          (hold (agent_holds ?d2) )
        )
      )
    )
    (forall (?d - doggie_bed)
      (and
        (preference ballThrownToBin
          (exists (?h ?o4 ?h - beachball)
            (then
              (once (object_orientation ?d ?h) )
            )
          )
        )
        (preference rollBallToBin
          (exists (?o4 - (either pencil book pink))
            (then
              (once (and (not (same_object ?d ?d) ) (forall (?t - hexagonal_bin) (in_motion ?o4) ) (>= 0.5 (distance ?o4 ?o4)) ) )
              (hold (and (= (distance ?o4 ?o4) (distance ?d ?o4)) (not (on yellow ?o4) ) (not (agent_holds ?d) ) ) )
              (once (not (not (in_motion floor) ) ) )
            )
          )
        )
      )
    )
    (preference failedThrowAttempt
      (exists (?c2 - (either cd yellow_cube_block))
        (then
          (hold (agent_holds ?c2) )
          (once (not (and (and (in ?c2 ?c2) (not (and (agent_holds ?c2) (on ?c2 ?c2) ) ) (in_motion ?c2) (> (distance rug desk) 2) ) (game_start ) ) ) )
          (hold (< 1 8) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (* 4 (count-once ballThrownToBin:cube_block:red) )
      (count-once-per-external-objects blockPickedUp)
    )
    (> (external-forall-maximize (count-once blockPickedUp:beachball) ) 2 )
    (>= 6 (external-forall-minimize (count blockPickedUp:yellow) ) )
  )
)
(:scoring
  (* (count failedThrowAttempt:dodgeball) 3 )
)
)



(define (game game-id-31) (:domain medium-objects-room-v1)
(:setup
  (forall (?p - (either alarm_clock red))
    (and
      (exists (?d - dodgeball ?c1 - flat_block)
        (exists (?b4 ?b - hexagonal_bin)
          (and
            (and
              (exists (?t1 - building ?d1 - cube_block)
                (and
                  (and
                    (game-conserved
                      (agent_holds desk)
                    )
                  )
                  (game-conserved
                    (and
                      (broken ?d1)
                      (and
                        (on room_center east_sliding_door)
                        (agent_holds ?p)
                      )
                    )
                  )
                )
              )
              (game-optional
                (and
                  (adjacent_side ?b4 ?b4 ?p)
                  (and
                    (not
                      (adjacent ?b4 bed)
                    )
                    (and
                      (in_motion ?p)
                      (agent_holds agent)
                    )
                    (not
                      (and
                        (on ?c1 ?b4)
                        (agent_holds ?c1)
                      )
                    )
                  )
                  (agent_holds ?p)
                )
              )
            )
            (game-conserved
              (not
                (<= (distance ?c1 ?p) (distance ?p ?c1))
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c3 - building)
      (and
        (preference teddyBearLandsInBin
          (exists (?g - teddy_bear)
            (then
              (hold (in_motion ?g) )
              (hold (agent_holds ?g) )
              (once (on room_center ?g) )
            )
          )
        )
        (preference ballThrownIntoTarget
          (exists (?b5 - golfball ?h - cube_block)
            (at-end
              (in ?h ?h)
            )
          )
        )
      )
    )
    (preference blocksInPlace
      (exists (?c - (either yellow_cube_block hexagonal_bin top_drawer) ?t ?s - hexagonal_bin)
        (then
          (once (agent_holds ?s) )
          (once (on agent ?t) )
          (once-measure (adjacent pink_dodgeball ?t) (distance desk ?t) )
          (hold-while (or (same_color ?t ?t) (in_motion ?s) (not (and (in_motion ?s) (not (not (not (and (adjacent ?s pink_dodgeball) (and (and (and (not (not (on ?t ?s) ) ) (in_motion rug) ) (in_motion ?t) ) (on brown ?s) ) ) ) ) ) ) ) ) (in_motion bed) (not (exists (?b3 - hexagonal_bin ?c2 ?l4 - flat_block) (adjacent ?c2 brown) ) ) (and (agent_holds ?s) (agent_holds ?t) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count teddyBearLandsInBin:pink) (* (external-forall-minimize (+ 5 10 )
        )
        (external-forall-maximize
          (count ballThrownIntoTarget:pyramid_block)
        )
      )
    )
    (count-total teddyBearLandsInBin)
  )
)
(:scoring
  (external-forall-maximize
    (count ballThrownIntoTarget:beachball)
  )
)
)



(define (game game-id-32) (:domain many-objects-room-v1)
(:setup
  (exists (?o - pillow ?o5 - hexagonal_bin ?l2 - dodgeball)
    (and
      (game-conserved
        (same_type ?l2 ?l2)
      )
      (or
        (and
          (forall (?t1 - block)
            (game-conserved
              (in bed ?l2)
            )
          )
        )
      )
      (game-conserved
        (is_setup_object ?l2)
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - hexagonal_bin ?b - (either rug rug golfball))
      (and
        (preference ballThrownFromObjectToBin
          (exists (?t2 - hexagonal_bin)
            (then
              (hold (in_motion ?b) )
              (hold (not (touch ?t2 ?t2) ) )
              (once (and (in ?b bed) (not (object_orientation ?b ?t2) ) ) )
            )
          )
        )
        (preference otherObjectsOnDeskShelf
          (then
            (hold (on floor ?b) )
            (once (not (on ?b ?b) ) )
            (once (in_motion desk) )
          )
        )
      )
    )
    (forall (?c1 - block)
      (and
        (preference throwFromDoorToBin
          (exists (?s - wall ?b - dodgeball)
            (at-end
              (and
                (and
                  (and
                    (in ?c1 ?c1)
                    (same_color ?b ?c1)
                  )
                  (agent_holds ?c1)
                )
                (not
                  (agent_holds pink_dodgeball)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (* 100 (* 3 0.5 )
      )
      (* 20 (count ballThrownFromObjectToBin:yellow) (count throwFromDoorToBin:yellow:dodgeball) (count-once-per-objects otherObjectsOnDeskShelf:wall) (* 8 (* 30 (count otherObjectsOnDeskShelf:basketball) )
        )
        2
      )
    )
  )
)
(:scoring
  (* (count otherObjectsOnDeskShelf:beachball:yellow) 6 )
)
)



(define (game game-id-33) (:domain many-objects-room-v1)
(:setup
  (exists (?h - (either bed pen))
    (game-conserved
      (not
        (in_motion ?h)
      )
    )
  )
)
(:constraints
  (and
    (preference brownObjectMovedToRoomCenter
      (exists (?o - dodgeball)
        (at-end
          (agent_holds ?o)
        )
      )
    )
  )
)
(:terminal
  (= (count brownObjectMovedToRoomCenter:basketball) 2 )
)
(:scoring
  (* 1 (* (count-once brownObjectMovedToRoomCenter:bed) 10 )
  )
)
)



(define (game game-id-34) (:domain many-objects-room-v1)
(:setup
  (exists (?b4 ?l ?h ?t ?h ?b - ball ?b7 - hexagonal_bin)
    (game-conserved
      (agent_holds bed)
    )
  )
)
(:constraints
  (and
    (preference blindsOpened
      (exists (?c - dodgeball)
        (at-end
          (game_over )
        )
      )
    )
  )
)
(:terminal
  (>= 20 3 )
)
(:scoring
  (external-forall-maximize
    (- 5 )
  )
)
)



(define (game game-id-35) (:domain few-objects-room-v1)
(:setup
  (and
    (game-optional
      (game_over )
    )
  )
)
(:constraints
  (and
    (preference blockCorrectlyPicked
      (exists (?b - curved_wooden_ramp)
        (at-end
          (in_motion ?b)
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (- (count blockCorrectlyPicked:dodgeball) (+ (+ 2 0 )
          1
        )
      )
      5
    )
  )
)
(:scoring
  (count-overlapping blockCorrectlyPicked:beachball)
)
)



(define (game game-id-36) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?b3 - shelf ?b1 - game_object ?h - hexagonal_bin)
      (and
        (exists (?t - (either pyramid_block basketball mug))
          (forall (?b - building ?c - dodgeball)
            (game-optional
              (not
                (not
                  (not
                    (exists (?c1 - (either pillow bridge_block))
                      (on ?t ?t)
                    )
                  )
                )
              )
            )
          )
        )
        (game-conserved
          (faces ?h ?h)
        )
        (and
          (game-conserved
            (not
              (not
                (not
                  (in ?h ?h)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blindsOpened
      (exists (?t - drawer)
        (then
          (once (<= (distance ?t desk) 1) )
          (hold-while (agent_holds west_wall) (same_type ?t ?t) (agent_holds ?t) (not (agent_holds ?t) ) )
          (once (and (not (agent_holds ?t) ) (and (not (exists (?h - hexagonal_bin) (not (and (not (not (in_motion brown) ) ) (not (not (not (touch ?h ?h) ) ) ) ) ) ) ) (and (in ?t ?t) (in desk ?t) ) ) (adjacent ?t ?t) (agent_holds ?t) (not (in_motion ?t) ) (not (in_motion ?t) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects blindsOpened:basketball:green) (count-shortest blindsOpened:pink_dodgeball:blue_dodgeball) )
)
(:scoring
  (count blindsOpened:golfball)
)
)



(define (game game-id-37) (:domain few-objects-room-v1)
(:setup
  (exists (?f - dodgeball)
    (exists (?o - hexagonal_bin)
      (and
        (forall (?c4 - ball ?c - dodgeball ?c2 - teddy_bear)
          (and
            (game-conserved
              (and
                (on ?f ?o)
                (agent_holds ?o)
              )
            )
            (game-optional
              (on ?o room_center)
            )
            (forall (?p1 - color)
              (game-conserved
                (in_motion ?f)
              )
            )
          )
        )
        (exists (?t - hexagonal_bin)
          (game-optional
            (not
              (and
                (in_motion ?f)
                (in_motion door)
              )
            )
          )
        )
        (and
          (game-optional
            (not
              (< 6 4)
            )
          )
        )
        (forall (?f - (either pyramid_block pyramid_block))
          (and
            (game-conserved
              (not
                (agent_holds ?o)
              )
            )
          )
        )
        (game-conserved
          (in_motion room_center)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference greenObjectMovedToRoomCenter
      (exists (?h - doggie_bed ?b10 - curved_wooden_ramp)
        (then
          (hold (not (not (not (or (in bed ?b10) (not (not (touch desk ?b10) ) ) ) ) ) ) )
          (hold (on ?b10 ?b10) )
          (hold-while (= (distance room_center ?b10) 1 3) (in ?b10 desk) (adjacent side_table ?b10) )
        )
      )
    )
    (preference dodgeballHitsBin
      (exists (?b9 ?h ?p ?h - red_dodgeball ?h - game_object ?d1 - chair ?h - (either main_light_switch floor))
        (then
          (once (and (on agent ?h) (agent_holds bed) ) )
          (hold (in_motion rug) )
        )
      )
    )
  )
)
(:terminal
  (> (total-score) (count-once-per-objects greenObjectMovedToRoomCenter:block) )
)
(:scoring
  (count-once-per-objects greenObjectMovedToRoomCenter:beachball:dodgeball)
)
)



(define (game game-id-38) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?c - building ?h - doggie_bed ?h - building ?o5 - dodgeball ?h - (either ball))
      (and
        (game-conserved
          (on ?h ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockFromRugToDesk
      (exists (?tb - ball ?p2 - cube_block ?c5 - doggie_bed ?b - hexagonal_bin)
        (at-end
          (< (distance ?b rug) (building_size ?b))
        )
      )
    )
    (preference ballInOrOnBin
      (exists (?s - ball ?p3 - (either golfball desktop key_chain))
        (then
          (once (in_motion agent) )
          (once (on room_center ?p3) )
          (once (agent_holds ?p3) )
        )
      )
    )
    (forall (?b - dodgeball)
      (and
        (preference throwMovesBeachballWithoutKnockingTeddy
          (then
            (once (< 1 (distance ?b ?b)) )
            (hold-while (in_motion ?b) (not (and (in_motion ?b) (and (and (agent_holds brown) (above floor desk) ) (and (or (agent_holds ?b) (on ?b desk) (agent_holds agent) (not (in ?b ?b) ) ) (on ?b ?b) (adjacent room_center ?b) ) (and (in_motion agent) (not (not (not (in ?b ?b) ) ) ) (agent_holds ?b) (not (not (and (not (and (agent_holds ?b) (in_motion ?b) (touch ?b ?b) ) ) (and (exists (?h - hexagonal_bin ?w1 - hexagonal_bin) (touch ?w1 ?w1) ) (agent_holds ?b) ) ) ) ) (and (not (on ?b door) ) (in_motion upright) ) (agent_holds ?b) (in_motion ?b) ) ) ) ) (not (agent_holds ?b) ) )
            (hold (and (not (on ?b ?b) ) (not (in_motion agent) ) (not (in ?b ?b) ) (not (not (in_motion ?b) ) ) ) )
            (once (and (not (on ?b ?b) ) (in_motion ?b) ) )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects ballInOrOnBin:dodgeball:dodgeball) (total-score) )
)
(:scoring
  (count-once-per-external-objects throwMovesBeachballWithoutKnockingTeddy:yellow)
)
)



(define (game game-id-39) (:domain many-objects-room-v1)
(:setup
  (forall (?b - (either chair dodgeball cube_block))
    (game-optional
      (on ?b ?b)
    )
  )
)
(:constraints
  (and
    (forall (?b - hexagonal_bin ?b - game_object)
      (and
        (preference throwBallFromOtherBallToBin
          (exists (?b5 - hexagonal_bin)
            (then
              (once (on room_center desk) )
              (hold (and (same_color ?b5 top_shelf) (between agent desk ?b5) ) )
            )
          )
        )
      )
    )
    (forall (?d - desktop)
      (and
        (preference towerFallsWhileBuilding
          (exists (?b - pillow ?t - block ?b3 - (either doggie_bed book basketball) ?g - hexagonal_bin ?b - dodgeball)
            (then
              (once (on ?b bed) )
              (hold (and (and (< (distance_side ?b ?d ?d) 1) (agent_crouches ) ) (in_motion ?b) (in_motion agent) (touch ?b ?d) (agent_holds bed) (agent_holds ?b) (not (and (and (and (and (and (and (agent_holds ?b) (agent_holds ?d) ) (agent_holds block) (not (and (and (in_motion ?d) (< 1 (building_size ?d)) ) (not (agent_holds ?b) ) ) ) ) ) (and (not (and (not (same_color ?d ?d) ) (and (agent_holds rug) (and (exists (?l2 - book) (in_motion ?b) ) (on desk ?d) ) (on ?b ?b) (not (in ?d ?d) ) (not (between ?d ?b ?d) ) (agent_holds ?b) (exists (?c - block) (in_motion ?b) ) ) ) ) (agent_holds ?b) ) (not (in_motion ?b) ) ) (not (above ?b ?d) ) ) (in_motion ?d) ) ) (and (agent_holds floor) (agent_holds ?b) ) ) )
              (once (agent_holds ?d) )
            )
          )
        )
        (preference throwAttempt
          (exists (?l2 - hexagonal_bin)
            (then
              (once (agent_crouches ) )
              (hold (not (and (not (agent_holds rug) ) (not (and (on ?l2 front) (agent_holds ?l2) ) ) ) ) )
              (once (and (in_motion ?d) (and (not (not (on ?d agent) ) ) (on ?l2 ?d) ) ) )
            )
          )
        )
      )
    )
    (preference ballThrownThroughRampToBin
      (exists (?h ?c - game_object)
        (then
          (once (in_motion blue) )
          (once (and (agent_holds ?c) (adjacent side_table desk) (and (not (= 3) ) (in ?c desk) ) (not (equal_x_position ?c ?c) ) (agent_holds bed) (not (not (not (and (not (touch ?h door) ) (and (not (equal_z_position pink_dodgeball ?h) ) (not (not (in ?h ?h) ) ) ) ) ) ) ) ) )
          (once (in_motion ?c) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (total-score) )
)
(:scoring
  (count-unique-positions throwAttempt:dodgeball)
)
)



(define (game game-id-40) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?o - golfball ?c5 ?d - doggie_bed)
      (game-optional
        (not
          (not
            (touch ?d ?c5)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dropAttempt
      (exists (?d - hexagonal_bin ?d - triangular_ramp)
        (then
          (once (or (adjacent ?d desk) (agent_holds agent) ) )
        )
      )
    )
    (preference itemsTurnedOff
      (exists (?c - chair ?h - hexagonal_bin)
        (then
          (once (in_motion desk) )
          (hold (and (not (and (not (and (in ?h desk) (in_motion agent) ) ) (not (and (in_motion ?h) (on ?h ?h) ) ) ) ) (agent_holds ?h) ) )
          (once (agent_holds ?h) )
        )
      )
    )
  )
)
(:terminal
  (or
    (not
      (or
        (>= 9 (total-score) )
        (or
          (<= (total-score) (* 5 3 )
          )
          (<= (- 3 3 ) (total-time) )
        )
      )
    )
    (or
      (> (count-shortest itemsTurnedOff:hexagonal_bin) (* (count dropAttempt:red) 6 )
      )
      (>= 10 (count-once itemsTurnedOff:basketball:dodgeball:blue_cube_block) )
    )
    (> (+ (+ (count dropAttempt:green) -30 )
        30
      )
      (* (count itemsTurnedOff:side_table:dodgeball) (count-once-per-objects itemsTurnedOff) )
    )
  )
)
(:scoring
  (count itemsTurnedOff:doggie_bed)
)
)



(define (game game-id-41) (:domain medium-objects-room-v1)
(:setup
  (forall (?b - curved_wooden_ramp)
    (exists (?t - game_object)
      (game-conserved
        (in_motion ?t)
      )
    )
  )
)
(:constraints
  (and
    (preference nonBlockPlacedInBuilding
      (exists (?h - watch)
        (then
          (once (not (not (not (not (not (open ?h) ) ) ) ) ) )
          (once (adjacent ?h ?h) )
          (hold (agent_holds bed) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (total-score) 1 )
  )
)
(:scoring
  (external-forall-maximize
    (+ (+ (- (* 3 7 )
        )
        4
      )
      (external-forall-maximize
        (count nonBlockPlacedInBuilding:brown)
      )
    )
  )
)
)



(define (game game-id-42) (:domain medium-objects-room-v1)
(:setup
  (exists (?h - shelf)
    (game-conserved
      (and
        (in_motion ?h)
        (and
          (on ?h ?h)
          (and
            (not
              (in bed desk)
            )
            (< (distance ?h ?h) (distance ?h ?h))
            (and
              (in_motion ?h)
              (in_motion ?h)
            )
            (not
              (agent_holds ?h)
            )
          )
        )
        (agent_holds ?h)
      )
    )
  )
)
(:constraints
  (and
    (preference throwToRampToBin
      (exists (?o4 - building)
        (then
          (once (in_motion ?o4) )
          (hold (agent_holds ?o4) )
          (hold (same_color ?o4 pink_dodgeball) )
        )
      )
    )
    (preference throwKnocksBlock
      (exists (?h - hexagonal_bin)
        (then
          (once (and (is_setup_object agent) (toggled_on agent) ) )
          (hold-while (same_object south_wall ?h) (forall (?d - cube_block) (same_object ?d ?d) ) (forall (?g - curved_wooden_ramp ?c - hexagonal_bin) (in_motion front) ) )
          (once (not (and (agent_holds ?h) (above ?h ?h) (in ?h ?h) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (external-forall-maximize (count-total throwToRampToBin:dodgeball) ) )
)
(:scoring
  (count-once-per-objects throwKnocksBlock:dodgeball:doggie_bed)
)
)



(define (game game-id-43) (:domain medium-objects-room-v1)
(:setup
  (exists (?s - hexagonal_bin ?o - ball ?b10 - ball)
    (or
      (game-conserved
        (in_motion ?b10)
      )
      (exists (?w2 - triangular_ramp)
        (and
          (exists (?p2 - hexagonal_bin ?w2 - doggie_bed)
            (and
              (exists (?d - (either dodgeball laptop chair) ?w1 - dodgeball ?d - dodgeball)
                (forall (?b9 - hexagonal_bin ?w2 - ball)
                  (game-conserved
                    (not
                      (agent_holds room_center)
                    )
                  )
                )
              )
            )
          )
        )
      )
      (game-conserved
        (agent_holds ?b10)
      )
    )
  )
)
(:constraints
  (and
    (forall (?r - tall_cylindrical_block)
      (and
        (preference bookOnDeskShelf
          (exists (?x - (either pen alarm_clock))
            (at-end
              (adjacent_side ?r ?r ?r)
            )
          )
        )
      )
    )
    (forall (?c - curved_wooden_ramp ?h - flat_block)
      (and
        (preference golfballInBinFromPillow
          (exists (?h - cube_block)
            (at-end
              (not
                (touch ?h ?h)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (= (- 2 5 ) (* 3 300 )
    )
    (count bookOnDeskShelf:hexagonal_bin)
  )
)
(:scoring
  (- (count-once-per-objects bookOnDeskShelf:pink) )
)
)



(define (game game-id-44) (:domain many-objects-room-v1)
(:setup
  (exists (?b - cube_block)
    (and
      (and
        (game-conserved
          (agent_holds ?b)
        )
        (exists (?l2 - game_object ?db - cube_block)
          (game-optional
            (not
              (same_color ?b ?b)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttemptKnocksBlock
      (exists (?d - (either desktop golfball))
        (then
          (once-measure (agent_holds door) (distance_side floor ?d ?d) )
          (hold (not (agent_holds ?d) ) )
          (once (agent_holds agent) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 4 10 )
    (not
      (not
        (>= (count-once-per-objects throwAttemptKnocksBlock:yellow) 3 )
      )
    )
  )
)
(:scoring
  (* (>= (count throwAttemptKnocksBlock:yellow:top_drawer) (- (+ (* 18 (count-once-per-objects throwAttemptKnocksBlock:dodgeball) )
          10
        )
      )
    )
    (count-same-positions throwAttemptKnocksBlock:blue_dodgeball:green)
  )
)
)



(define (game game-id-45) (:domain few-objects-room-v1)
(:setup
  (exists (?h - desk_shelf)
    (exists (?t - cube_block)
      (game-conserved
        (agent_holds ?h)
      )
    )
  )
)
(:constraints
  (and
    (preference pillowMovedToRoomCenter
      (exists (?b9 ?db - hexagonal_bin)
        (then
          (hold-while (and (broken rug) (on ?db bed) ) (= (distance ?db room_center) 1) (game_over ) )
          (once (< (distance desk ?db) 10) )
          (hold-while (not (not (not (agent_holds ?b9) ) ) ) (and (and (and (agent_holds ?db) (agent_holds ?b9) ) ) (adjacent ?db agent) ) )
        )
      )
    )
    (preference throwToBinFromDistance
      (exists (?c3 - hexagonal_bin ?d2 ?t2 - flat_block)
        (at-end
          (and
            (in_motion ?d2)
            (in_motion ?t2)
          )
        )
      )
    )
    (forall (?c ?g - triangular_ramp ?o - hexagonal_bin)
      (and
        (preference castleBuilt
          (exists (?c2 - hexagonal_bin ?o4 - shelf ?r - game_object)
            (at-end
              (agent_holds ?r)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 10 3 )
)
(:scoring
  (* (count-increasing-measure throwToBinFromDistance:red) 8 (+ 0 100 )
    0
  )
)
)



(define (game game-id-46) (:domain medium-objects-room-v1)
(:setup
  (exists (?h - hexagonal_bin)
    (game-conserved
      (and
        (agent_holds door)
        (agent_holds ?h)
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballFromDeskToTarget
      (exists (?c - ball ?d ?c ?b2 ?c4 ?b10 ?w ?d ?c ?c ?h - hexagonal_bin)
        (then
          (once (in ?d ?b10) )
          (once (in_motion ?b10) )
          (hold (on ?d ?d) )
        )
      )
    )
  )
)
(:terminal
  (>= 3 1 )
)
(:scoring
  (count dodgeballFromDeskToTarget:pink)
)
)



(define (game game-id-47) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?w - block)
      (game-conserved
        (not
          (<= 6 (building_size ?w))
        )
      )
    )
    (and
      (forall (?b6 ?c6 - curved_wooden_ramp ?w - hexagonal_bin ?h - (either dodgeball cellphone dodgeball))
        (forall (?r1 - blinds ?d - cube_block)
          (forall (?b - red_dodgeball ?b - teddy_bear)
            (forall (?w1 - curved_wooden_ramp ?d1 - wall ?b - ball)
              (game-optional
                (agent_holds top_drawer)
              )
            )
          )
        )
      )
    )
    (forall (?o3 - (either pyramid_block side_table doggie_bed))
      (game-conserved
        (agent_holds bed)
      )
    )
  )
)
(:constraints
  (and
    (preference blockToBinFromRug
      (exists (?b - hexagonal_bin)
        (at-end
          (and
            (not
              (not
                (on agent ?b)
              )
            )
            (not
              (or
                (in_motion ?b)
                (not
                  (in_motion ?b)
                )
                (in_motion ?b)
              )
            )
          )
        )
      )
    )
    (preference throwFromDoorToBin
      (exists (?r2 ?d1 ?o ?b8 ?l4 - curved_wooden_ramp ?bl - hexagonal_bin)
        (then
          (once (adjacent ?bl room_center) )
        )
      )
    )
  )
)
(:terminal
  (>= (external-forall-maximize (count-once-per-objects throwFromDoorToBin:pink) ) (- 2 )
  )
)
(:scoring
  (count throwFromDoorToBin:cube_block)
)
)



(define (game game-id-48) (:domain many-objects-room-v1)
(:setup
  (forall (?h - beachball)
    (game-conserved
      (and
        (adjacent ?h ?h)
        (in_motion ?h)
      )
    )
  )
)
(:constraints
  (and
    (forall (?db - dodgeball ?o - hexagonal_bin)
      (and
        (preference objectWithMatchingColor
          (exists (?c6 - drawer)
            (then
              (once (in_motion agent) )
              (hold (< (distance front ?o) (distance ?c6 ?c6)) )
              (hold (equal_x_position ?c6 ?o) )
            )
          )
        )
        (preference pyramidBlockAtopTowerAtEnd
          (exists (?s ?l3 ?c3 - block ?w - wall ?t1 - cube_block)
            (then
              (hold (and (agent_holds ?t1) (on ?t1 ?t1) ) )
              (once (on ?t1 ?t1) )
              (hold (and (and (in ?o ?t1) (agent_holds agent) ) (agent_holds ?o) ) )
              (once (in ?o ?t1) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-once-per-external-objects pyramidBlockAtopTowerAtEnd:yellow) 3 )
    (or
      (and
        (or
          (and
            (>= (total-score) (total-time) )
            (>= 1 (count-once-per-objects objectWithMatchingColor:cube_block) )
            (> (* 40 (count-overlapping objectWithMatchingColor:pink_dodgeball:orange:book) )
              5
            )
          )
          (= 15 (* (count objectWithMatchingColor:dodgeball) 6 )
          )
          (and
            (and
              (or
                (>= (count-once-per-objects pyramidBlockAtopTowerAtEnd:beachball) 50 )
                (< (count pyramidBlockAtopTowerAtEnd:basketball:blue_pyramid_block) (count pyramidBlockAtopTowerAtEnd:purple:red_pyramid_block) )
                (>= (- (* (count pyramidBlockAtopTowerAtEnd:dodgeball) (* 5 10 30 1 (* (count-shortest pyramidBlockAtopTowerAtEnd:hexagonal_bin) (count objectWithMatchingColor:green) )
                        (count-once-per-objects pyramidBlockAtopTowerAtEnd:green)
                        (count pyramidBlockAtopTowerAtEnd:red)
                      )
                    )
                  )
                  (* (- (+ 5 (= 0.5 (count objectWithMatchingColor:book) )
                      )
                    )
                    5
                  )
                )
              )
              (>= 2 (external-forall-maximize (count pyramidBlockAtopTowerAtEnd:blue_dodgeball) ) )
            )
          )
        )
        (>= 2 (* (* 5 (count-once pyramidBlockAtopTowerAtEnd:golfball:pink) )
            (< 5 (count-once-per-objects objectWithMatchingColor:orange) )
          )
        )
      )
      (or
        (>= 3 (>= (+ 0 (* (count objectWithMatchingColor:red:pink_dodgeball) 2 )
              0
            )
            (* 300 (count pyramidBlockAtopTowerAtEnd:pink:green) )
          )
        )
        (>= 1 (total-score) )
      )
    )
  )
)
(:scoring
  (count pyramidBlockAtopTowerAtEnd:green:orange:beachball)
)
)



(define (game game-id-49) (:domain medium-objects-room-v1)
(:setup
  (exists (?x - ball)
    (forall (?b9 - pyramid_block)
      (game-conserved
        (and
          (in ?b9 bottom_shelf)
          (in_motion ?b9)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToDoggieBedOffWall
      (exists (?w1 - cube_block)
        (then
          (hold (agent_holds ?w1) )
          (once (and (exists (?c - dodgeball) (agent_holds ?c) ) (in_motion rug) ) )
          (once (not (> (distance agent ?w1) (distance ?w1 ?w1)) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count throwBallToDoggieBedOffWall:dodgeball) (count-once throwBallToDoggieBedOffWall:beachball:dodgeball) )
)
(:scoring
  (count throwBallToDoggieBedOffWall:blue_dodgeball)
)
)



(define (game game-id-50) (:domain many-objects-room-v1)
(:setup
  (exists (?t - hexagonal_bin)
    (exists (?g - (either laptop cd))
      (and
        (exists (?d - dodgeball ?c3 ?o - (either yellow cylindrical_block))
          (game-optional
            (= 9 (distance ?o ?c3))
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o4 - beachball)
      (and
        (preference itemsTurnedOff
          (then
            (hold (not (and (in left ?o4) (< 1 (distance ?o4 agent)) ) ) )
            (once (> 5 1) )
            (hold-while (and (in_motion ?o4) (toggled_on ?o4) ) (on ?o4 ?o4) (exists (?p - hexagonal_bin) (and (in_motion ?p) (on ?p ?p) ) ) (in ?o4 agent) )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (total-score) (total-score) )
  )
)
(:scoring
  (count-once-per-external-objects itemsTurnedOff:doggie_bed)
)
)



(define (game game-id-51) (:domain medium-objects-room-v1)
(:setup
  (forall (?p - building)
    (game-conserved
      (adjacent_side agent agent ?p ?p)
    )
  )
)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?h - hexagonal_bin ?tb - golfball)
        (then
          (once (on ?tb ?tb) )
          (once (agent_holds desk) )
          (hold (not (broken ?tb) ) )
        )
      )
    )
    (preference blindsOpened
      (exists (?t1 - cube_block)
        (at-end
          (in front ?t1)
        )
      )
    )
    (preference ballThrowAttempt
      (exists (?g - hexagonal_bin)
        (at-end
          (touch ?g ?g)
        )
      )
    )
  )
)
(:terminal
  (>= (count ballThrowAttempt:yellow:dodgeball) (count blindsOpened:beachball) )
)
(:scoring
  (* (+ 3 (* 6 50 )
    )
    (count blindsOpened:blue_dodgeball)
  )
)
)



(define (game game-id-52) (:domain many-objects-room-v1)
(:setup
  (exists (?b - (either alarm_clock blue_cube_block) ?c - game_object ?t - doggie_bed)
    (game-optional
      (above ?t ?t)
    )
  )
)
(:constraints
  (and
    (preference ballThrownThroughRampAndBlocksToBin
      (exists (?d - hexagonal_bin)
        (then
          (once (< (x_position ?d) 0) )
          (once (between ?d ?d ?d) )
          (hold (not (above ?d ?d) ) )
          (hold (in_motion ?d) )
        )
      )
    )
  )
)
(:terminal
  (> 10 (* (* 3 (< (count-once ballThrownThroughRampAndBlocksToBin:brown:basketball) (count ballThrownThroughRampAndBlocksToBin) )
      )
      4
    )
  )
)
(:scoring
  (count ballThrownThroughRampAndBlocksToBin:block)
)
)



(define (game game-id-53) (:domain many-objects-room-v1)
(:setup
  (forall (?b9 - ball)
    (and
      (exists (?r - (either teddy_bear ball laptop))
        (exists (?d - (either basketball pyramid_block) ?g ?c1 - hexagonal_bin)
          (and
            (exists (?d - doggie_bed)
              (game-optional
                (in ?r ?c1)
              )
            )
            (game-optional
              (on top_drawer floor)
            )
          )
        )
      )
      (and
        (forall (?l2 - golfball ?c3 - building)
          (game-conserved
            (above ?b9 bed)
          )
        )
        (forall (?t - dodgeball)
          (and
            (and
              (and
                (forall (?h - curved_wooden_ramp)
                  (and
                    (and
                      (and
                        (game-conserved
                          (exists (?o4 - ball)
                            (= (building_size ?h) 3 1)
                          )
                        )
                      )
                    )
                  )
                )
              )
              (game-conserved
                (on top_drawer ?t)
              )
            )
            (game-conserved
              (in_motion ?b9)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference pillowMovedToRoomCenter
      (exists (?o1 - doggie_bed)
        (then
          (once (agent_holds ?o1) )
          (hold (agent_holds ?o1) )
          (once (agent_holds ?o1) )
        )
      )
    )
    (preference objectMovedRoomSide
      (exists (?l1 - hexagonal_bin)
        (then
          (once (in desk bed) )
          (hold (not (in_motion floor) ) )
          (once (not (and (in_motion ?l1) (not (in_motion ?l1) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count pillowMovedToRoomCenter:pyramid_block) 10 )
)
(:scoring
  (count-once-per-objects objectMovedRoomSide:red)
)
)



(define (game game-id-54) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (not
      (agent_holds agent)
    )
  )
)
(:constraints
  (and
    (preference cubeBlockInBuilding
      (exists (?h - game_object ?o - hexagonal_bin)
        (then
          (hold (adjacent ?o ?o) )
        )
      )
    )
    (preference objectLandsInBin
      (exists (?d - ball ?o - hexagonal_bin)
        (then
          (once (in ?o bed) )
          (once (and (adjacent ?o ?o) (or (in_motion north_wall) (same_object ?o room_center) ) ) )
          (once (game_over ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (count-overlapping cubeBlockInBuilding:blue) (count cubeBlockInBuilding:wall) )
  )
)
(:scoring
  (count cubeBlockInBuilding:yellow:tall_cylindrical_block)
)
)



(define (game game-id-55) (:domain many-objects-room-v1)
(:setup
  (exists (?c3 - dodgeball)
    (and
      (and
        (forall (?l2 - hexagonal_bin)
          (and
            (game-conserved
              (in ?l2 ?c3)
            )
          )
        )
      )
      (or
        (exists (?b3 - block ?t - hexagonal_bin ?b - pillow)
          (game-conserved
            (in_motion ?c3)
          )
        )
        (and
          (game-optional
            (in_motion ?c3)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballInOrOnBin
      (exists (?d - game_object)
        (at-end
          (exists (?d - (either laptop golfball))
            (not
              (adjacent_side ?d ?d ?d)
            )
          )
        )
      )
    )
    (forall (?b - hexagonal_bin)
      (and
        (preference blockFromRugToDesk
          (exists (?l2 - building)
            (then
              (hold (on ?b ?b) )
              (once (and (agent_holds ?l2) (agent_holds ?b) ) )
              (hold (agent_holds rug) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 15 (count ballInOrOnBin:red) )
)
(:scoring
  (count-once-per-objects blockFromRugToDesk:blue)
)
)



(define (game game-id-56) (:domain many-objects-room-v1)
(:setup
  (and
    (not
      (exists (?l - hexagonal_bin)
        (forall (?ob - (either triangle_block cube_block))
          (exists (?h - teddy_bear)
            (game-optional
              (not
                (on side_table ?l)
              )
            )
          )
        )
      )
    )
    (exists (?p2 - triangular_ramp)
      (game-optional
        (agent_holds agent)
      )
    )
  )
)
(:constraints
  (and
    (preference throwToBinFromOppositeWall
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (opposite bed ?d) ) )
          (once (in_motion ?d) )
          (hold (agent_holds ?d) )
        )
      )
    )
  )
)
(:terminal
  (>= (count throwToBinFromOppositeWall:dodgeball) 8 )
)
(:scoring
  (* (count throwToBinFromOppositeWall:beachball) 3 )
)
)



(define (game game-id-57) (:domain few-objects-room-v1)
(:setup
  (forall (?f - building ?b - hexagonal_bin)
    (and
      (and
        (forall (?b1 - hexagonal_bin ?tb - teddy_bear)
          (game-optional
            (adjacent ?tb ?tb)
          )
        )
      )
      (exists (?g - building ?h - hexagonal_bin)
        (game-conserved
          (on ?b ?b)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToChair
      (exists (?p - triangular_ramp)
        (then
          (hold (< (x_position ?p) (distance_side ?p ?p ?p)) )
          (once (not (and (in_motion ?p) (and (on ?p ?p) (forall (?c - building) (agent_holds rug) ) (not (agent_holds ?p) ) ) ) ) )
          (hold (agent_holds ?p) )
        )
      )
    )
  )
)
(:terminal
  (>= (/ (* (* (* 2 5 100 (+ (* (* 3 (count ballThrownToChair:orange:golfball) 0 (* (* 6 (external-forall-maximize (* (count-once-per-objects ballThrownToChair:green) (count-once-per-objects ballThrownToChair:blue_dodgeball) )
                      )
                    )
                    5
                  )
                  1
                  8
                )
                (count-overlapping ballThrownToChair:beachball:beachball)
              )
              (count-once-per-objects ballThrownToChair:dodgeball)
              (external-forall-minimize
                (count-once-per-objects ballThrownToChair:cube_block)
              )
              (* 5 (+ (* 300 (count-once-per-objects ballThrownToChair:beachball) (count ballThrownToChair:orange) (count-once-per-objects ballThrownToChair:green) 4 (+ (count ballThrownToChair:red_pyramid_block) 300 )
                  )
                  (* (- 3 )
                    (+ 3 (count ballThrownToChair:red) )
                    (+ (count-once-per-objects ballThrownToChair:basketball) 2 )
                    100
                  )
                )
                (- (* 9 2 )
                )
                6
              )
              (count-once ballThrownToChair:yellow:blue_dodgeball)
              4
            )
          )
          5
        )
        10
        (* (count-once-per-objects ballThrownToChair:dodgeball) (- (* (+ 1 (* (count ballThrownToChair:cube_block) (count-once-per-objects ballThrownToChair:pyramid_block) )
              )
              (count-once-per-objects ballThrownToChair:blue_dodgeball:basketball)
            )
          )
        )
      )
      (+ (* (* (count-once-per-external-objects ballThrownToChair:dodgeball:beachball) 5 )
          3
          (* (count-once-per-objects ballThrownToChair:red) (count ballThrownToChair:beachball) )
          2
        )
        (count-once-per-objects ballThrownToChair:dodgeball)
      )
    )
    (count-measure ballThrownToChair:blue_cube_block)
  )
)
(:scoring
  (* 1 3 )
)
)



(define (game game-id-58) (:domain many-objects-room-v1)
(:setup
  (exists (?p - wall)
    (game-conserved
      (and
        (agent_holds ?p)
        (and
          (and
            (and
              (and
                (adjacent_side ?p ?p green ?p)
                (and
                  (not
                    (not
                      (in_motion desk)
                    )
                  )
                  (object_orientation agent ?p)
                )
              )
              (on ?p ?p)
              (agent_holds rug)
              (on ?p green)
              (faces ?p desk)
              (forall (?c - dodgeball)
                (and
                  (or
                    (and
                      (exists (?o5 - pillow)
                        (in ?o5 ?o5)
                      )
                      (not
                        (on ?p ?p)
                      )
                    )
                    (adjacent ?c bed)
                  )
                  (and
                    (agent_holds ?c)
                    (adjacent desk desk)
                  )
                  (not
                    (in_motion ?p)
                  )
                )
              )
            )
            (in ?p rug)
            (in ?p room_center)
            (and
              (agent_holds ?p)
              (is_setup_object ?p)
              (agent_holds ?p)
              (agent_holds ?p)
            )
          )
          (= 10 (distance ?p ?p))
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?b1 - hexagonal_bin)
        (then
          (hold (is_setup_object ?b1) )
          (once (in_motion desk) )
          (hold (and (agent_holds rug) (not (adjacent_side ?b1 ?b1 ?b1) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 1 (total-score) )
)
(:scoring
  (count-overlapping throwAttempt:orange)
)
)



(define (game game-id-59) (:domain many-objects-room-v1)
(:setup
  (or
    (forall (?d - block)
      (forall (?l4 - dodgeball)
        (exists (?h - (either yellow dodgeball) ?b - game_object)
          (game-optional
            (or
              (agent_holds ?d)
              (and
                (not
                  (on ?b desk)
                )
                (agent_holds bed)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference golfballUnderBridgeWithoutTouchingBlock
      (exists (?o - hexagonal_bin ?x - game_object ?c4 ?x - block ?b - teddy_bear ?d - (either pyramid_block pyramid_block))
        (then
          (once (agent_holds ?d) )
          (once (adjacent south_west_corner ?d) )
          (once (in_motion ?d) )
        )
      )
    )
  )
)
(:terminal
  (>= 7 (count-measure golfballUnderBridgeWithoutTouchingBlock:beachball:beachball) )
)
(:scoring
  (count-once-per-objects golfballUnderBridgeWithoutTouchingBlock:dodgeball)
)
)



(define (game game-id-60) (:domain many-objects-room-v1)
(:setup
  (forall (?c - hexagonal_bin)
    (game-conserved
      (on ?c floor)
    )
  )
)
(:constraints
  (and
    (forall (?d - hexagonal_bin)
      (and
        (preference ballThrownToBin
          (exists (?o3 - (either blue_cube_block cylindrical_block alarm_clock) ?p - wall ?h - (either laptop dodgeball golfball) ?c - (either triangular_ramp dodgeball tall_cylindrical_block))
            (then
              (hold (adjacent ?d ?c) )
              (hold (forall (?b - hexagonal_bin) (not (on ?c pillow) ) ) )
              (once (on bed ?c) )
            )
          )
        )
      )
    )
    (preference thrownObjectHitsComputer
      (exists (?b - ball ?h - (either yellow_cube_block wall pillow))
        (at-end
          (object_orientation blue ?h)
        )
      )
    )
  )
)
(:terminal
  (< 1 (+ (+ 3 (count-total thrownObjectHitsComputer:dodgeball) )
      (- (count ballThrownToBin:beachball) )
    )
  )
)
(:scoring
  (count-once-per-objects thrownObjectHitsComputer:cube_block:beachball)
)
)



(define (game game-id-61) (:domain medium-objects-room-v1)
(:setup
  (exists (?d - hexagonal_bin ?o ?t2 - (either mug cellphone dodgeball))
    (game-optional
      (on ?o ?o)
    )
  )
)
(:constraints
  (and
    (forall (?b8 - dodgeball)
      (and
        (preference ballThrowAttempt
          (exists (?r2 - doggie_bed)
            (then
              (hold (same_color ?r2 ?r2) )
              (once (agent_holds ?b8) )
              (hold-while (in_motion ?r2) (not (same_type ?r2 ?b8) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count ballThrowAttempt:doggie_bed) (* (count ballThrowAttempt:basketball) (external-forall-maximize (count-once-per-objects ballThrowAttempt:beachball) ) (+ (* (count-once-per-objects ballThrowAttempt:dodgeball) (* (count-measure ballThrowAttempt:blue_dodgeball:dodgeball) (count-once ballThrowAttempt) )
        )
        (count ballThrowAttempt:dodgeball)
      )
      3
      10
      (* (count ballThrowAttempt:purple) (count-once ballThrowAttempt:bed:hexagonal_bin) )
      (+ (<= (/ (count-once-per-objects ballThrowAttempt:dodgeball) 6 ) 3 )
        3
      )
      (* (count ballThrowAttempt:purple) (* (count-once-per-objects ballThrowAttempt:dodgeball) -30 )
      )
      (count ballThrowAttempt:blue_dodgeball)
    )
  )
)
(:scoring
  (count ballThrowAttempt:green:basketball)
)
)



(define (game game-id-62) (:domain few-objects-room-v1)
(:setup
  (forall (?t - beachball)
    (or
      (game-conserved
        (< 1 2)
      )
      (exists (?c2 - bridge_block)
        (and
          (and
            (forall (?b - cube_block)
              (and
                (exists (?p3 - building)
                  (and
                    (and
                      (or
                        (exists (?h - triangular_ramp)
                          (exists (?b - hexagonal_bin ?g - ball)
                            (forall (?d2 - (either desktop cube_block key_chain))
                              (and
                                (game-conserved
                                  (agent_holds agent)
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                    (game-conserved
                      (exists (?d - shelf)
                        (on ?t ?d)
                      )
                    )
                    (and
                      (exists (?l1 - shelf ?b5 - (either cellphone cube_block))
                        (exists (?d ?l2 - (either beachball golfball))
                          (game-optional
                            (adjacent_side ?p3 ?p3 ?b)
                          )
                        )
                      )
                      (and
                        (forall (?b - hexagonal_bin ?b1 - chair)
                          (game-conserved
                            (not
                              (= 3 (distance ?b1 ?b1))
                            )
                          )
                        )
                        (and
                          (game-conserved
                            (agent_holds tan)
                          )
                        )
                        (exists (?o - block)
                          (game-optional
                            (and
                              (in_motion ?p3)
                              (adjacent ?p3 rug)
                            )
                          )
                        )
                      )
                      (exists (?d - hexagonal_bin)
                        (forall (?b - curved_wooden_ramp)
                          (or
                            (and
                              (and
                                (and
                                  (game-optional
                                    (in ?p3 ?d)
                                  )
                                )
                              )
                              (exists (?g - drawer ?b7 - curved_wooden_ramp ?c - bridge_block ?ob - dodgeball)
                                (and
                                  (game-conserved
                                    (on ?p3 ?t)
                                  )
                                )
                              )
                            )
                            (game-conserved
                              (and
                                (agent_holds ?c2)
                                (not
                                  (open room_center)
                                )
                                (on ?d bed)
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
                (exists (?p3 - (either teddy_bear dodgeball))
                  (exists (?l - cube_block ?o1 - doggie_bed)
                    (and
                      (and
                        (and
                          (game-optional
                            (= (distance_side ?p3 west_wall ?o1) 5)
                          )
                          (and
                            (game-optional
                              (in ?b ?b)
                            )
                            (game-optional
                              (same_color bed ?p3)
                            )
                            (game-conserved
                              (in_motion ?t)
                            )
                          )
                          (game-conserved
                            (in_motion ?p3)
                          )
                          (game-optional
                            (agent_holds front)
                          )
                          (game-conserved
                            (exists (?o - block)
                              (exists (?b3 - sliding_door)
                                (agent_holds ?o)
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
          (and
            (game-conserved
              (in ?c2 ?c2)
            )
          )
        )
      )
      (exists (?o3 ?d - cube_block)
        (game-conserved
          (and
            (on ?d ?o3)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - dodgeball)
      (and
        (preference throwBallToBin
          (exists (?b - dodgeball ?g ?c - game_object)
            (then
              (hold (exists (?h - cube_block) (or (not (on ?c yellow) ) (game_over ) (game_over ) ) ) )
              (hold (in_motion ?c) )
              (once (adjacent_side ?c ?c ?b) )
            )
          )
        )
        (preference ballThrownToBed
          (exists (?w2 - dodgeball)
            (then
              (hold (not (game_start ) ) )
              (once (on ?b ?w2) )
              (hold-while (in ?b ?b) (and (agent_holds ?b) (and (in_motion ?w2) (open ?b) (and (adjacent door ?w2) (and (not (not (not (and (not (and (agent_holds desk) (> 5 7) (or (and (toggled_on ?w2) (not (and (not (on ?w2 ?b) ) (in_motion ?b) ) ) ) (adjacent ?b door) (and (same_type ?w2 ?b) (and (broken ?b) (and (adjacent ?b ?b) (forall (?c1 - cube_block) (and (and (agent_holds ?c1) (not (on agent ?c1) ) ) (in ?w2 ?b) (in_motion ?c1) ) ) ) ) (same_color desk ?b) ) ) ) ) (agent_holds desk) ) ) ) ) (in_motion ?b) ) ) ) ) )
            )
          )
        )
      )
    )
    (preference throwToRampToBin
      (exists (?r2 - (either cd blue_cube_block dodgeball blue_cube_block) ?l4 - block)
        (then
          (hold-while (and (adjacent ?l4 ?l4) (and (adjacent_side ?l4 ?l4 ?l4 ?l4) (agent_holds ?l4) ) (and (on back ?l4) (adjacent ?l4 ?l4) ) (in_motion desk) (agent_holds ?l4) ) (not (agent_holds ?l4) ) (and (agent_holds ?l4) (not (agent_holds ?l4) ) (exists (?d - dodgeball) (not (agent_holds ?l4) ) ) ) (agent_holds ?l4) )
          (hold (not (< 3 (x_position ?l4)) ) )
          (once (in_motion ?l4) )
        )
      )
    )
  )
)
(:terminal
  (> 8 5 )
)
(:scoring
  (+ (count ballThrownToBed:dodgeball) 2 (count-once-per-objects throwBallToBin:basketball:beachball) (* (* 2 7 )
      1
    )
  )
)
)



(define (game game-id-63) (:domain many-objects-room-v1)
(:setup
  (exists (?o4 - game_object ?b6 - hexagonal_bin)
    (exists (?s - shelf)
      (forall (?d - cube_block)
        (forall (?p - building ?c - tall_cylindrical_block)
          (and
            (and
              (exists (?o2 - game_object)
                (game-optional
                  (and
                    (in_motion ?s)
                    (and
                      (agent_holds ?s)
                      (and
                        (agent_holds ?s)
                        (and
                          (not
                            (and
                              (< (x_position ?b6) 1)
                              (not
                                (touch ?o2 ?s)
                              )
                            )
                          )
                          (agent_holds ?b6)
                        )
                      )
                    )
                  )
                )
              )
            )
            (forall (?o - game_object)
              (exists (?t2 - cube_block)
                (game-conserved
                  (not
                    (and
                      (in_motion ?t2)
                      (< 10 1)
                    )
                  )
                )
              )
            )
            (and
              (exists (?t - game_object)
                (game-conserved
                  (between ?b6 ?t ?d)
                )
              )
              (game-conserved
                (agent_holds ?d)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blueObjectMovedToRoomCenter
      (exists (?r ?p - dodgeball)
        (then
          (hold (is_setup_object desk) )
          (once (not (agent_holds ?r) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (total-time) 10 )
  )
)
(:scoring
  (count-once-per-objects blueObjectMovedToRoomCenter:beachball)
)
)



(define (game game-id-64) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (game-optional
        (not
          (not
            (forall (?p2 - pillow ?o ?b - dodgeball)
              (on ?o desk)
            )
          )
        )
      )
    )
    (game-conserved
      (is_setup_object yellow)
    )
  )
)
(:constraints
  (and
    (preference thrownObjectHitsComputer
      (exists (?d - shelf)
        (then
          (once (object_orientation ?d ?d) )
          (once (same_color agent bed) )
          (once (and (< (x_position ?d) 1) (agent_holds agent) ) )
        )
      )
    )
  )
)
(:terminal
  (<= (count-once-per-external-objects thrownObjectHitsComputer:pyramid_block) (count-once-per-objects thrownObjectHitsComputer) )
)
(:scoring
  (* (* 5 8 (count-once thrownObjectHitsComputer:basketball) )
    5
  )
)
)



(define (game game-id-65) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (exists (?s - cube_block)
      (exists (?c - (either pyramid_block))
        (agent_holds ?c)
      )
    )
  )
)
(:constraints
  (and
    (preference blocksInPlace
      (exists (?bl ?c - ball ?w - block)
        (then
          (hold (agent_holds ?w) )
          (hold-while (< (distance_side ?w ?w ?w ?w) 1) (> 1 7) )
        )
      )
    )
    (preference castleBuilt
      (exists (?b1 - dodgeball)
        (then
          (hold-while (exists (?o4 - ball) (in rug ?b1) ) (exists (?b2 ?o - dodgeball) (not (on ?b2 ?b2) ) ) )
          (once (and (not (not (and (touch right front_left_corner) (on ?b1 pink) (and (agent_holds ?b1) (not (not (not (adjacent_side ?b1 bed ?b1) ) ) ) (in_motion desk) ) (same_object ?b1 ?b1) (not (in_motion ?b1) ) (not (on rug ?b1) ) (not (in_motion ?b1) ) ) ) ) (and (rug_color_under ?b1 pillow) (on ?b1 ?b1) ) (and (not (same_object ?b1 ?b1) ) (not (< (distance ?b1 ?b1) (distance ?b1 ?b1)) ) ) ) )
          (hold (in ?b1 agent) )
        )
      )
    )
  )
)
(:terminal
  (not
    (<= (count-once-per-objects castleBuilt:beachball) (count blocksInPlace:doggie_bed) )
  )
)
(:scoring
  (external-forall-maximize
    (count-once-per-objects blocksInPlace:dodgeball)
  )
)
)



(define (game game-id-66) (:domain few-objects-room-v1)
(:setup
  (forall (?w2 - dodgeball)
    (exists (?f - dodgeball)
      (game-optional
        (not
          (not
            (and
              (and
                (in_motion ?w2)
                (in_motion ?w2)
              )
              (not
                (in ?f rug)
              )
              (not
                (in_motion ?w2)
              )
              (and
                (not
                  (and
                    (in ?f desk)
                    (in_motion ?w2)
                  )
                )
                (< 0.5 7)
              )
              (agent_holds floor)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference itemsTurnedOff
      (exists (?b - building)
        (at-end
          (in_motion ?b)
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects itemsTurnedOff:brown) 50 )
)
(:scoring
  (* (+ 15 10 )
    (count-once-per-objects itemsTurnedOff:basketball)
  )
)
)



(define (game game-id-67) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (game-conserved
        (exists (?d - hexagonal_bin)
          (same_object back room_center)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?w - hexagonal_bin)
      (and
        (preference dodgeballFromBlockToBin
          (exists (?l4 - pillow)
            (at-end
              (and
                (and
                  (object_orientation ?l4 ?l4)
                  (in_motion ?w)
                )
                (in_motion ?w)
              )
            )
          )
        )
        (preference objectsHidden
          (exists (?h - (either chair ball))
            (at-end
              (in_motion ?h)
            )
          )
        )
        (preference nonBlockPlacedInBuilding
          (exists (?b2 - teddy_bear)
            (then
              (hold (agent_holds ?b2) )
              (hold-while (exists (?w1 - hexagonal_bin) (on ?w1 ?b2) ) (in ?w ?b2) )
              (hold-while (and (rug_color_under ?w ?w) (= (building_size agent) (distance ?w ?b2)) ) (toggled_on ?b2) )
            )
          )
        )
      )
    )
    (forall (?r - hexagonal_bin)
      (and
        (preference ballThrownThroughRampAndBlocksToBin
          (exists (?p - dodgeball)
            (then
              (once (and (adjacent ?p ?p) (not (and (agent_holds ?p) (and (and (and (in_motion agent) (in_motion ?r) ) ) (adjacent floor ?p) ) ) ) ) )
              (once (exists (?d - (either book wall cube_block pyramid_block)) (agent_holds ?p) ) )
              (hold (not (agent_holds ?p) ) )
            )
          )
        )
        (preference redDodgeballThrownToBin
          (exists (?h - ball)
            (then
              (once (< (distance ?r ?r) (distance top_shelf bed)) )
              (once (not (not (and (and (in_motion pink_dodgeball) (and (not (and (agent_holds pink_dodgeball) ) ) (not (in_motion ?h) ) ) ) (and (agent_holds ?r) (on ?r ?h) ) (agent_holds ?r) ) ) ) )
              (once (adjacent ?h ?r) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects nonBlockPlacedInBuilding:golfball) 3 )
)
(:scoring
  (* (+ (* (count-shortest objectsHidden) (- 100 )
      )
      (* 2 5 (* (count nonBlockPlacedInBuilding:beachball) 7 )
      )
    )
    (+ (count objectsHidden:blue_dodgeball) (+ 6 (* (count-once redDodgeballThrownToBin:beachball) 10 )
        (external-forall-maximize
          (external-forall-minimize
            (count-once-per-objects redDodgeballThrownToBin:basketball)
          )
        )
      )
      (+ (* (count objectsHidden:purple:dodgeball) (* (count-once-per-external-objects ballThrownThroughRampAndBlocksToBin:dodgeball) (count-total nonBlockPlacedInBuilding:pink_dodgeball) )
        )
        (count dodgeballFromBlockToBin:yellow:blue_cube_block)
      )
      (count-once-per-objects dodgeballFromBlockToBin:pink_dodgeball:beachball)
      2
      (count-once-per-objects dodgeballFromBlockToBin:doggie_bed:pink)
      (count dodgeballFromBlockToBin:dodgeball)
      0.5
      50
    )
  )
)
)



(define (game game-id-68) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (not
      (not
        (not
          (in_motion back)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference thrownObjectHitsComputer
      (exists (?b - cylindrical_block ?b ?b - curved_wooden_ramp)
        (at-end
          (and
            (in_motion ?b)
            (and
              (exists (?c - game_object)
                (object_orientation ?c bed)
              )
              (agent_holds ?b)
            )
          )
        )
      )
    )
    (forall (?b - dodgeball)
      (and
        (preference nonBlockPlacedInBuilding
          (then
            (once (not (= 4 1) ) )
            (once-measure (and (agent_holds ?b) (agent_holds ?b) (not (and (touch desk ?b) ) ) ) (distance ?b ?b) )
            (once (not (and (not (agent_holds ?b) ) (agent_holds ?b) ) ) )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (= (* (count-increasing-measure thrownObjectHitsComputer:golfball:basketball) (= (count thrownObjectHitsComputer:yellow_pyramid_block) )
      )
      (count thrownObjectHitsComputer:green)
    )
  )
)
(:scoring
  (count thrownObjectHitsComputer:dodgeball)
)
)



(define (game game-id-69) (:domain medium-objects-room-v1)
(:setup
  (forall (?h ?ob - hexagonal_bin)
    (exists (?h - ball)
      (game-optional
        (>= (distance ?ob ?ob) (distance ?h ?h))
      )
    )
  )
)
(:constraints
  (and
    (preference agentLeavesDogbedOrNoMoreBalls
      (exists (?c - red_dodgeball ?h - (either yellow_cube_block pillow) ?b9 - (either golfball cube_block pyramid_block))
        (at-end
          (equal_z_position ?b9 ?b9)
        )
      )
    )
  )
)
(:terminal
  (> (count agentLeavesDogbedOrNoMoreBalls:red:yellow) 8 )
)
(:scoring
  (+ (count agentLeavesDogbedOrNoMoreBalls:pink_dodgeball:basketball) (/ (count agentLeavesDogbedOrNoMoreBalls:dodgeball) (count-once-per-objects agentLeavesDogbedOrNoMoreBalls:green) ) )
)
)



(define (game game-id-70) (:domain few-objects-room-v1)
(:setup
  (or
    (exists (?o1 - building)
      (game-conserved
        (not
          (not
            (agent_holds ?o1)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?w - ball)
      (and
        (preference ballThrownFromRug
          (exists (?d - dodgeball)
            (at-end
              (and
                (adjacent ?w bed)
                (and
                  (< (distance ?d ?d) (distance ?w ?w))
                  (or
                    (and
                      (and
                        (in_motion ?w)
                        (adjacent ?w ?d)
                      )
                      (or
                        (in_motion ?d)
                        (not
                          (not
                            (on ?d ?w)
                          )
                        )
                      )
                    )
                    (on ?w ?w)
                  )
                )
              )
            )
          )
        )
      )
    )
    (preference throwKnocksOverBear
      (exists (?o - game_object)
        (at-end
          (in_motion ?o)
        )
      )
    )
  )
)
(:terminal
  (>= (external-forall-maximize (* 5 9 )
    )
    (total-score)
  )
)
(:scoring
  (count-once-per-objects ballThrownFromRug:beachball:golfball)
)
)



(define (game game-id-71) (:domain few-objects-room-v1)
(:setup
  (exists (?b5 - (either golfball triangle_block))
    (exists (?b5 - color)
      (game-optional
        (not
          (on bed ?b5)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockIncorrectlyPicked
      (exists (?h - cube_block)
        (then
          (hold (agent_holds ?h) )
          (once (between ?h ?h rug) )
          (once (in_motion ?h) )
        )
      )
    )
    (preference teddyBearLandsInBin
      (at-end
        (in_motion rug)
      )
    )
    (preference ballThrownFromDoor
      (exists (?h - building)
        (then
          (once (agent_holds ?h) )
          (once (not (and (or (and (not (between ?h ?h ?h) ) (exists (?h - hexagonal_bin) (in_motion ?h) ) ) (agent_holds ?h) ) (on ?h ?h) ) ) )
          (once (and (in_motion ?h) (faces ?h ?h) (agent_holds bed) (in_motion ?h) (not (and (faces ?h ?h) (forall (?c4 - ball) (and (not (and (not (agent_holds agent) ) (= (distance ?h ?h) (distance ?c4 ?c4) (distance desk ?c4)) ) ) (same_type ?h ?h) (agent_holds rug) ) ) ) ) (and (in_motion ?h) (or (open ?h) (and (and (< 9 (distance ?h ?h)) (not (in_motion upright) ) ) (in_motion ?h) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (* 5 3 )
      (count teddyBearLandsInBin:yellow)
    )
    (>= 50 (count ballThrownFromDoor:yellow_cube_block) )
    (< (total-time) (count blockIncorrectlyPicked:pink) )
  )
)
(:scoring
  (count-once-per-objects teddyBearLandsInBin:beachball)
)
)



(define (game game-id-72) (:domain few-objects-room-v1)
(:setup
  (exists (?w2 - curved_wooden_ramp)
    (and
      (and
        (and
          (game-optional
            (in ?w2 ?w2)
          )
        )
        (forall (?s ?o - (either dodgeball pen alarm_clock) ?p ?o1 - building ?p3 - (either desktop golfball pillow cube_block key_chain floor laptop))
          (game-optional
            (faces ?p3 ?w2)
          )
        )
        (or
          (game-optional
            (agent_holds green_golfball)
          )
          (and
            (exists (?o - (either book pink))
              (game-conserved
                (not
                  (adjacent ?w2 ?w2)
                )
              )
            )
          )
        )
      )
      (exists (?o1 - building ?t1 - curved_wooden_ramp ?db ?s - building ?f - ball)
        (game-conserved
          (exists (?h - game_object)
            (not
              (and
                (agent_holds ?h)
                (game_start )
              )
            )
          )
        )
      )
      (exists (?w2 - ball)
        (game-optional
          (not
            (agent_holds ?w2)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?p2 - building)
      (and
        (preference redDodgeballThrownToBinWithoutTouchingFloor
          (then
            (hold-while (agent_holds ?p2) (and (and (in_motion ?p2) (touch ?p2 south_wall) ) (< 0 (distance ?p2 ?p2)) ) )
            (once (and (in_motion ?p2) (< (distance ?p2 ?p2) 1) ) )
            (hold (in_motion agent) )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (external-forall-maximize (count redDodgeballThrownToBinWithoutTouchingFloor:pink_dodgeball) ) (count redDodgeballThrownToBinWithoutTouchingFloor:yellow_cube_block) )
    (and
      (> (count redDodgeballThrownToBinWithoutTouchingFloor:yellow) (count-once-per-objects redDodgeballThrownToBinWithoutTouchingFloor:red) )
      (>= (= (count-once redDodgeballThrownToBinWithoutTouchingFloor:basketball:beachball) 10 )
        (count redDodgeballThrownToBinWithoutTouchingFloor:yellow)
      )
    )
  )
)
(:scoring
  (count-once-per-objects redDodgeballThrownToBinWithoutTouchingFloor:dodgeball:golfball)
)
)



(define (game game-id-73) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (< 1 3)
  )
)
(:constraints
  (and
    (forall (?o2 - curved_wooden_ramp)
      (and
        (preference ballThrownToRampToBed
          (exists (?d1 - ball)
            (then
              (hold (and (between agent bridge_block ?d1) (not (toggled_on ?d1) ) ) )
              (once (and (in desk ?o2) (adjacent ?o2 ?o2) ) )
              (hold-while (in ?d1 bottom_shelf) (on ?d1 ?d1) )
            )
          )
        )
        (preference blockInTowerKnockedByDodgeball
          (exists (?d - shelf)
            (then
              (once (exists (?b3 - (either mug cellphone)) (rug_color_under ?d ?b3) ) )
              (hold (not (on room_center left) ) )
              (hold (and (in ?o2 ?o2) (agent_holds agent) ) )
            )
          )
        )
        (preference pillowThrownToDoggieBed
          (exists (?o - (either mug curved_wooden_ramp))
            (then
              (once (and (and (in room_center agent) (agent_holds ?o2) ) (on agent ?o2) ) )
              (hold (and (in ?o2 agent) (same_type bed ?o2) ) )
              (once (on room_center ?o) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (* (count blockInTowerKnockedByDodgeball:pink_dodgeball:golfball) (* (count pillowThrownToDoggieBed:golfball:green) (count blockInTowerKnockedByDodgeball:golfball) (external-forall-maximize (- (+ (count-once-per-objects blockInTowerKnockedByDodgeball:side_table) (count-once-per-objects blockInTowerKnockedByDodgeball:blue_cube_block) )
          )
        )
      )
      7
      (* (count blockInTowerKnockedByDodgeball:pink_dodgeball) 5 0 )
      (* (* 15 10 )
        (* 7 (count blockInTowerKnockedByDodgeball:hexagonal_bin) -30 (* (* (< (+ (count-longest pillowThrownToDoggieBed) (count blockInTowerKnockedByDodgeball:green) (* 9 (* (+ (+ 15 (< 3 15 )
                          (count blockInTowerKnockedByDodgeball:basketball)
                          (* (count pillowThrownToDoggieBed:dodgeball) (count ballThrownToRampToBed:basketball) )
                          (+ (count blockInTowerKnockedByDodgeball:red) (* (count-once-per-objects blockInTowerKnockedByDodgeball:dodgeball) (count-once-per-objects pillowThrownToDoggieBed:basketball) )
                          )
                          (* (count-once-per-objects pillowThrownToDoggieBed:red) 10 (= 2 (+ 3 (* (+ 4 (* 4 (count ballThrownToRampToBed) )
                                  )
                                  (+ (+ (count-shortest blockInTowerKnockedByDodgeball:pink) (* 1 (+ (+ 10 (* 4 3 (count pillowThrownToDoggieBed:beachball) )
                                            300
                                            (external-forall-maximize
                                              (count blockInTowerKnockedByDodgeball:beachball)
                                            )
                                            5
                                            (+ 100 2 )
                                          )
                                          6
                                        )
                                        (count-once-per-objects blockInTowerKnockedByDodgeball:red)
                                        6
                                        5
                                        (- (* (count-once-per-objects blockInTowerKnockedByDodgeball:doggie_bed) (count ballThrownToRampToBed:green) )
                                        )
                                      )
                                    )
                                    (count-once-per-objects ballThrownToRampToBed:beachball:basketball)
                                  )
                                  (count-measure blockInTowerKnockedByDodgeball:pink)
                                  (* 3 (count ballThrownToRampToBed:book) )
                                  (-
                                    10
                                    (count ballThrownToRampToBed:doggie_bed)
                                  )
                                  8
                                  (+ (count blockInTowerKnockedByDodgeball:beachball) (count-unique-positions ballThrownToRampToBed:golfball) )
                                  (* (count blockInTowerKnockedByDodgeball:golfball) (external-forall-minimize (count-once-per-objects blockInTowerKnockedByDodgeball:purple) ) )
                                  0.5
                                )
                                1
                              )
                            )
                            100
                            (count-overlapping ballThrownToRampToBed:red)
                            (count-once-per-external-objects ballThrownToRampToBed:beachball:pink)
                            3
                          )
                        )
                        (count-unique-positions pillowThrownToDoggieBed:blue_dodgeball)
                      )
                      (* (count blockInTowerKnockedByDodgeball:pink:dodgeball:blue_cube_block) (= (* 20 (* 6 (count blockInTowerKnockedByDodgeball:beachball) )
                            2
                          )
                          (- 50 )
                        )
                      )
                      (count pillowThrownToDoggieBed:beachball)
                      (external-forall-maximize
                        (* 5 (+ (count blockInTowerKnockedByDodgeball:beachball) 8 )
                        )
                      )
                      (count blockInTowerKnockedByDodgeball:dodgeball:golfball)
                      (* 4 (> (* (count ballThrownToRampToBed:blue_dodgeball:tan) (* (* (- (count ballThrownToRampToBed:pink:side_table) )
                                (+ (count-once-per-objects ballThrownToRampToBed:blue_dodgeball) (* (* 10 (count-once-per-objects ballThrownToRampToBed:beachball) )
                                    (external-forall-maximize
                                      (count blockInTowerKnockedByDodgeball:yellow)
                                    )
                                  )
                                )
                              )
                              (count-same-positions pillowThrownToDoggieBed:beachball)
                            )
                          )
                          (- (+ (+ (* 15 (count blockInTowerKnockedByDodgeball:hexagonal_bin) )
                                (count ballThrownToRampToBed:top_drawer:basketball)
                              )
                              5
                            )
                          )
                        )
                      )
                      (* (count-once-per-objects pillowThrownToDoggieBed:blue_dodgeball) (- (count-shortest pillowThrownToDoggieBed:beachball:beachball) )
                        (count blockInTowerKnockedByDodgeball:dodgeball)
                      )
                      (count-once-per-objects blockInTowerKnockedByDodgeball:dodgeball)
                      (count ballThrownToRampToBed:rug)
                    )
                  )
                )
                (count-once pillowThrownToDoggieBed:dodgeball)
              )
              (* (count ballThrownToRampToBed:dodgeball) (count pillowThrownToDoggieBed:pink_dodgeball) )
            )
            (+ (* (+ 10 20 (count-once-per-objects pillowThrownToDoggieBed:basketball) (count-once-per-objects blockInTowerKnockedByDodgeball:blue_dodgeball) (= (count ballThrownToRampToBed:brown) 7 )
                  (- (+ 8 2 )
                  )
                  10
                  (* 2 100 )
                  (* (count-once pillowThrownToDoggieBed:dodgeball) (* 15 300 )
                  )
                )
                (count-once-per-objects pillowThrownToDoggieBed:green)
                (* 1 2 3 )
              )
              (* 1 3 )
            )
            (* 2 (count-once-per-objects ballThrownToRampToBed:beachball) )
          )
          50
          2
          (count-once-per-objects ballThrownToRampToBed:beachball)
        )
        (count pillowThrownToDoggieBed:pink)
      )
      7
      2
    )
  )
)
(:scoring
  (+ (>= 10 10 )
    (count-overlapping pillowThrownToDoggieBed:hexagonal_bin)
  )
)
)



(define (game game-id-74) (:domain few-objects-room-v1)
(:setup
  (exists (?o1 - dodgeball)
    (game-optional
      (in_motion ?o1)
    )
  )
)
(:constraints
  (and
    (forall (?t - cube_block)
      (and
        (preference throwGolfballToBin
          (exists (?o2 ?ob - hexagonal_bin ?l1 - ball)
            (at-end
              (on ?t ?t)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (+ (count throwGolfballToBin) (count-once throwGolfballToBin:beachball) (* 0 3 )
      (* (count throwGolfballToBin:beachball) (count throwGolfballToBin:beachball:red:green) )
      (/
        1
        5
      )
    )
  )
)
(:scoring
  (* (count-once throwGolfballToBin:basketball) (+ 4 (* (* (count-once-per-objects throwGolfballToBin:purple) (count throwGolfballToBin:basketball) )
        2
      )
    )
    3
  )
)
)



(define (game game-id-75) (:domain medium-objects-room-v1)
(:setup
  (not
    (exists (?o3 - hexagonal_bin)
      (and
        (and
          (and
            (and
              (game-conserved
                (game_over )
              )
            )
            (forall (?b9 - hexagonal_bin ?c - dodgeball)
              (and
                (game-conserved
                  (not
                    (and
                      (game_over )
                      (in_motion ?o3)
                      (and
                        (not
                          (touch agent ?o3)
                        )
                        (in_motion ?c)
                      )
                    )
                  )
                )
                (not
                  (game-conserved
                    (< 1 (distance ?o3 ?c))
                  )
                )
                (game-conserved
                  (agent_holds bed)
                )
              )
            )
          )
          (forall (?b10 - (either desktop golfball dodgeball))
            (game-optional
              (not
                (in_motion ?o3)
              )
            )
          )
          (game-conserved
            (and
              (on ?o3 ?o3)
              (agent_holds ?o3)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToBinFromOppositeWall
      (exists (?c6 - golfball)
        (then
          (hold (and (rug_color_under ?c6 ?c6) (and (exists (?b - triangular_ramp) (in_motion ?c6) ) (and (and (and (agent_holds front) (and (on ?c6 ?c6) (agent_holds agent) ) ) (object_orientation ?c6 ?c6) ) (in_motion ?c6) (adjacent_side ?c6 ?c6 ?c6) ) (and (touch pink_dodgeball ?c6) (< (distance room_center ?c6) (building_size ?c6)) (and (agent_holds ?c6) (not (on ?c6 ?c6) ) ) ) ) ) )
          (once (not (in_motion ?c6) ) )
        )
      )
    )
  )
)
(:terminal
  (> (+ (* 3 15 )
      (+ (* (+ (>= 3 (* 2 2 )
            )
            (* (count-once throwToBinFromOppositeWall:green) (external-forall-maximize (count throwToBinFromOppositeWall:red_pyramid_block) ) )
          )
          (* (- 2 )
            10
          )
        )
        (+ (count throwToBinFromOppositeWall:golfball:dodgeball:yellow) (count throwToBinFromOppositeWall:golfball) )
      )
    )
    2
  )
)
(:scoring
  (+ (external-forall-minimize (* 20 2 )
    )
    (count throwToBinFromOppositeWall:golfball)
  )
)
)



(define (game game-id-76) (:domain medium-objects-room-v1)
(:setup
  (exists (?o2 - (either laptop pyramid_block) ?h - curved_wooden_ramp)
    (game-conserved
      (and
        (adjacent ?h door)
        (and
          (and
            (and
              (and
                (< 2 3)
                (not
                  (agent_holds ?h)
                )
              )
              (object_orientation bed ?h)
            )
            (agent_holds bed)
          )
          (agent_holds bed)
          (not
            (not
              (< (distance ?h ?h) 6)
            )
          )
          (touch ?h ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference itemInClosedDrawerAtEnd
      (exists (?b4 ?d ?w2 - (either dodgeball hexagonal_bin bridge_block))
        (then
          (once (in_motion ?b4) )
          (once (in ?d ?b4) )
          (once (and (on ?d ?b4) (not (and (on agent room_center) (in ?w2 ?d) ) ) ) )
        )
      )
    )
    (preference ballThrownOntoTarget
      (exists (?h - dodgeball)
        (then
          (hold (not (not (and (not (agent_holds ?h) ) (and (and (in ?h ?h) (not (not (forall (?p1 - building ?b9 ?o3 ?d ?b ?c3 ?c1 - blue_cube_block) (not (in desk ?c3) ) ) ) ) ) (not (= (distance_side ?h ?h ?h ?h) 0.5) ) ) ) ) ) )
          (once (agent_holds ?h) )
          (once (or (and (agent_holds ?h) (adjacent ?h ?h) ) (and (not (and (and (not (not (and (game_over ) (in ?h ?h) ) ) ) (adjacent ?h ?h) ) (exists (?c - hexagonal_bin) (agent_holds ?c) ) ) ) (not (and (agent_holds ?h) (not (agent_holds ?h) ) (in_motion agent) ) ) ) (not (in_motion ?h) ) (in_motion north_wall) ) )
        )
      )
    )
    (preference blockInTowerAtEnd
      (exists (?b2 - hexagonal_bin)
        (then
          (hold (same_object ?b2 room_center) )
          (once (and (in_motion ?b2) (not (and (game_start ) (game_start ) (agent_holds ?b2) ) ) ) )
          (hold (and (and (on ?b2 front) (in_motion ?b2) (not (not (on back ?b2) ) ) ) (on ?b2 rug) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (<= (count-once itemInClosedDrawerAtEnd:dodgeball) 4 )
      (not
        (>= (count-increasing-measure blockInTowerAtEnd:dodgeball) (count itemInClosedDrawerAtEnd:doggie_bed) )
      )
    )
  )
)
(:scoring
  (count blockInTowerAtEnd:pink)
)
)



(define (game game-id-77) (:domain many-objects-room-v1)
(:setup
  (exists (?l - wall)
    (exists (?o3 - wall)
      (exists (?h - (either desktop book) ?s - hexagonal_bin)
        (and
          (game-conserved
            (in_motion ?l)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference matchingBuildingBuilt
      (exists (?f - golfball)
        (then
          (once (on ?f ?f) )
          (hold (on room_center ?f) )
          (once (touch ?f ?f) )
        )
      )
    )
    (forall (?l2 - hexagonal_bin ?c6 - triangular_ramp)
      (and
        (preference pillowThrownToDoggieBed
          (exists (?g - block ?s - ball)
            (at-end
              (agent_holds ?c6)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (= (= 9 7 )
      10
    )
  )
)
(:scoring
  (* (* (count-once pillowThrownToDoggieBed:pink_dodgeball:golfball:red) 3 )
  )
)
)



(define (game game-id-78) (:domain medium-objects-room-v1)
(:setup
  (and
    (not
      (forall (?b - color ?b2 - curved_wooden_ramp)
        (game-conserved
          (< (x_position ?b2) (distance floor ?b2))
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttemptKnocksBlock
      (exists (?c5 - (either golfball main_light_switch))
        (then
          (once (and (in_motion ?c5) (not (on ?c5 floor) ) ) )
          (hold (in bed ?c5) )
          (once (not (adjacent ?c5 ?c5) ) )
        )
      )
    )
    (preference throwBallToBin
      (exists (?c - building)
        (then
          (once (in ?c rug) )
          (once (not (and (and (not (and (and (in_motion ?c) (>= (distance ?c ?c) (x_position agent)) ) (touch ?c ?c) ) ) (in ?c ?c) ) (not (agent_holds ?c) ) ) ) )
          (hold (in ?c ?c) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= 300 (count-once-per-objects throwBallToBin:beachball) )
  )
)
(:scoring
  (count-once throwAttemptKnocksBlock:basketball:rug)
)
)



(define (game game-id-79) (:domain few-objects-room-v1)
(:setup
  (exists (?d ?p2 - block)
    (game-optional
      (and
        (not
          (agent_holds ?d)
        )
        (agent_holds rug)
        (not
          (and
            (not
              (and
                (not
                  (agent_holds agent)
                )
                (in ?d ?p2)
              )
            )
            (and
              (above ?p2 ?d)
              (agent_holds ?p2)
            )
          )
        )
        (above ?p2 ?p2)
        (and
          (in_motion ?d)
          (not
            (agent_holds ?p2)
          )
        )
        (same_color ?d ?d)
      )
    )
  )
)
(:constraints
  (and
    (preference throwToRampToBin
      (exists (?d - dodgeball)
        (then
          (once (not (agent_holds agent) ) )
          (hold (on floor ?d) )
          (once (adjacent_side side_table ?d ?d ?d) )
        )
      )
    )
    (forall (?h - hexagonal_bin ?l - hexagonal_bin ?p3 - building)
      (and
        (preference throwToBinFromOppositeWall
          (exists (?c2 - ball ?b5 - wall)
            (at-end
              (and
                (agent_holds desk)
                (or
                  (on ?b5 agent)
                  (adjacent ?b5 ?b5)
                )
              )
            )
          )
        )
        (preference blockInTowerAtEnd
          (exists (?d - cube_block)
            (then
              (once-measure (agent_holds ?p3) (building_size ?p3) )
              (hold (same_object agent ?d) )
              (once (not (touch agent ?p3) ) )
            )
          )
        )
        (preference blockPickedUp
          (exists (?b6 ?s - hexagonal_bin)
            (then
              (once (and (not (in_motion ?b6) ) (equal_z_position ?b6 ?s) (and (in_motion ?b6) (on ?b6 ?b6) ) ) )
              (hold (in ?p3 ?p3) )
              (hold (in_motion ?p3) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= (external-forall-maximize (count blockInTowerAtEnd:wall) ) (<= (count-increasing-measure throwToBinFromOppositeWall:pink:blue_cube_block) 5 )
  )
)
(:scoring
  (* (+ 5 )
    (* (count throwToRampToBin:dodgeball) 2 4 )
  )
)
)



(define (game game-id-80) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?c - hexagonal_bin)
      (game-conserved
        (and
          (agent_holds floor)
          (and
            (in_motion ?c)
            (and
              (and
                (not
                  (agent_holds ?c)
                )
                (< 1 (distance ?c ?c))
              )
              (and
                (not
                  (not
                    (in_motion ?c)
                  )
                )
                (forall (?o - red_dodgeball)
                  (and
                    (< 6 1)
                    (on ?c bed)
                  )
                )
                (in ?c ?c)
                (and
                  (in ?c ?c)
                  (not
                    (exists (?l - shelf)
                      (not
                        (not
                          (and
                            (and
                              (above agent agent)
                              (not
                                (on pink_dodgeball ?l)
                              )
                              (not
                                (and
                                  (not
                                    (game_start )
                                  )
                                  (not
                                    (toggled_on ?l)
                                  )
                                  (and
                                    (and
                                      (and
                                        (agent_holds ?l)
                                        (in_motion ?c)
                                        (not
                                          (not
                                            (and
                                              (game_start )
                                              (rug_color_under floor ?c)
                                            )
                                          )
                                        )
                                        (not
                                          (on ?c ?c)
                                        )
                                        (and
                                          (and
                                            (< 5 1)
                                          )
                                          (not
                                            (and
                                              (and
                                                (adjacent_side pink_dodgeball ?l ?c)
                                                (adjacent ?c ?c)
                                              )
                                              (and
                                                (and
                                                  (and
                                                    (agent_holds ?c)
                                                    (same_color ?l ?l)
                                                  )
                                                  (on ?c ?l)
                                                  (game_over )
                                                )
                                                (agent_holds ?c)
                                              )
                                            )
                                          )
                                        )
                                        (on ?c ?c)
                                        (and
                                          (in_motion ?c)
                                          (> (distance ?l ?c) (distance ?l ?c))
                                        )
                                      )
                                      (opposite bed ?l)
                                    )
                                    (not
                                      (exists (?d - shelf)
                                        (agent_holds rug)
                                      )
                                    )
                                  )
                                )
                              )
                            )
                            (agent_holds ?l)
                            (and
                              (not
                                (adjacent door bed)
                              )
                              (adjacent ?c ?c)
                            )
                            (and
                              (and
                                (not
                                  (agent_holds ?c)
                                )
                                (forall (?o - cube_block)
                                  (in ?o bed)
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
          (= (distance ?c pink_dodgeball) 1 (distance ?c ?c))
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballOnBedAtEnd
      (exists (?b - hexagonal_bin ?d2 - doggie_bed)
        (at-end
          (in_motion ?d2)
        )
      )
    )
  )
)
(:terminal
  (not
    (> (count ballOnBedAtEnd:dodgeball) (total-score) )
  )
)
(:scoring
  (+ 2 0.5 )
)
)



(define (game game-id-81) (:domain many-objects-room-v1)
(:setup
  (exists (?c2 - dodgeball)
    (exists (?w1 - game_object)
      (game-conserved
        (in_motion ?c2)
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballThrownToBinFromDesk
      (exists (?p ?d - hexagonal_bin ?l2 - yellow_cube_block)
        (then
          (once (agent_holds ?l2) )
          (hold (not (in_motion ?l2) ) )
          (hold (adjacent ?l2 ?l2) )
        )
      )
    )
    (preference blocksInPlace
      (exists (?c - ball)
        (then
          (hold (in_motion ?c) )
          (once (on ?c ?c) )
          (once (agent_holds ?c) )
        )
      )
    )
    (preference bookOnDeskShelf
      (exists (?db - (either cylindrical_block golfball) ?d - red_dodgeball)
        (then
          (once (and (agent_holds ?d) ) )
          (once (exists (?c2 - shelf) (on agent ?d) ) )
          (hold (not (not (in ?d ?d) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) 4 )
)
(:scoring
  (* (count-once bookOnDeskShelf:purple) (* 5 3 10 5 7 5 )
  )
)
)



(define (game game-id-82) (:domain many-objects-room-v1)
(:setup
  (exists (?d - triangular_ramp ?w1 - building)
    (game-optional
      (between room_center ?w1 desk)
    )
  )
)
(:constraints
  (and
    (preference cubeBlockFromBedToShelf
      (exists (?b - ball ?d - triangular_ramp)
        (at-end
          (on ?d ?d)
        )
      )
    )
  )
)
(:terminal
  (<= (* 3 (count cubeBlockFromBedToShelf) )
    (+ 4 (- 180 )
    )
  )
)
(:scoring
  (count cubeBlockFromBedToShelf:dodgeball:basketball)
)
)



(define (game game-id-83) (:domain many-objects-room-v1)
(:setup
  (exists (?w1 - dodgeball)
    (forall (?w2 - shelf)
      (game-optional
        (equal_z_position agent ?w1)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToRampToBed
      (exists (?o - chair)
        (then
          (once (or (broken floor) (faces pink_dodgeball ?o) ) )
          (hold (rug_color_under agent ?o) )
          (once (not (and (and (touch ?o bed) (exists (?b - hexagonal_bin) (and (not (and (adjacent ?b ?b) (in ?o desk) (not (< (distance ?b ?b) 5) ) ) ) (agent_holds ?b) ) ) ) (in_motion block) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (count-once-per-external-objects ballThrownToRampToBed:yellow_cube_block) (count ballThrownToRampToBed:blue_dodgeball) )
    (>= (external-forall-maximize (= 3 2 )
      )
      (total-score)
    )
    (>= (total-time) 5 )
    (> 3 (total-score) )
  )
)
(:scoring
  (= (count-once-per-external-objects ballThrownToRampToBed:blue_dodgeball) )
)
)



(define (game game-id-84) (:domain medium-objects-room-v1)
(:setup
  (forall (?b8 ?x ?h ?h ?w ?b3 - cube_block ?r - golfball)
    (game-optional
      (and
        (in_motion ?r)
        (and
          (not
            (equal_z_position block ?r)
          )
          (on ?r ?r)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference smallItemsInPlace
      (exists (?w1 - dodgeball)
        (then
          (once (in_motion ?w1) )
          (hold (and (and (agent_holds ?w1) (in_motion agent) (and (adjacent ?w1 ?w1) (= (distance ?w1 ?w1) (distance ?w1 ?w1)) (not (on desktop side_table) ) ) ) (not (not (agent_holds ?w1) ) ) (or (in_motion ?w1) (agent_holds ?w1) (not (agent_holds front) ) ) ) )
          (once (adjacent ?w1 ?w1) )
        )
      )
    )
    (forall (?b - building)
      (and
        (preference bounceBallToBin
          (exists (?r2 - game_object)
            (at-end
              (on ?r2 ?b)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (<= 5 10 )
  )
)
(:scoring
  (count smallItemsInPlace:golfball)
)
)



(define (game game-id-85) (:domain medium-objects-room-v1)
(:setup
  (exists (?l3 - (either dodgeball) ?h - teddy_bear ?o ?o ?b ?h ?h ?c - block)
    (or
      (exists (?b3 - (either tall_cylindrical_block cube_block) ?t - color)
        (game-optional
          (= 6 (distance ?b ?t))
        )
      )
      (game-conserved
        (agent_holds room_center)
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - dodgeball ?t - dodgeball)
      (and
        (preference ballThrownFromDoor
          (exists (?c3 - curved_wooden_ramp ?o2 - wall)
            (then
              (once (or (and (exists (?d - dodgeball) (rug_color_under ?t ?t) ) (not (not (and (and (agent_holds rug) (not (exists (?d - (either yellow_cube_block book) ?h - hexagonal_bin) (not (< 1 1) ) ) ) ) (in_motion agent) ) ) ) ) (= 0.5 1) ) )
              (hold (not (agent_holds ?o2) ) )
              (once (same_type ?o2 ?t) )
            )
          )
        )
        (preference ballThrowAttempt
          (exists (?h - shelf)
            (then
              (hold-while (agent_holds ?t) (touch bed ?t) (in ?h ?h) )
              (hold (in_motion ?h) )
              (once (in ?t rug) )
            )
          )
        )
      )
    )
    (preference blockInTowerAtEnd
      (exists (?d - wall)
        (then
          (once (not (and (or (agent_holds ?d) (on ?d ?d) (and (same_object ?d ?d) (and (and (in_motion ?d) (and (object_orientation ?d ?d) (and (not (not (<= (distance ?d ?d) (distance ?d ?d)) ) ) (< 1 (distance ?d ?d)) ) ) ) (and (and (in_motion ?d) (not (not (agent_holds ?d) ) ) (agent_holds ?d) ) (agent_holds ?d) ) ) ) ) (on upright ?d) ) ) )
          (once (or (and (adjacent_side ?d ?d ?d ?d) (in_motion ?d) ) (in_motion pink_dodgeball) ) )
          (once (in_motion ?d) )
        )
      )
    )
    (forall (?b10 - cube_block ?b - cube_block ?d - dodgeball ?h - game_object)
      (and
        (preference laptopAndBookInPlace
          (exists (?s - game_object ?c - dodgeball)
            (then
              (once (touch room_center ?h) )
              (hold (not (agent_holds ?h) ) )
              (once (and (agent_holds ?h) ) )
            )
          )
        )
        (preference binKnockedOver
          (exists (?h - triangular_ramp ?o ?r ?s ?o ?b3 ?t1 ?p2 ?o ?w2 ?o2 - teddy_bear ?t2 - chair)
            (at-end
              (in_motion ?h)
            )
          )
        )
      )
    )
    (preference ballThrownThroughRampToBin
      (exists (?p - shelf)
        (then
          (hold (not (agent_holds ?p) ) )
          (once (and (agent_holds ?p) (agent_holds ?p) ) )
          (once (in_motion ?p) )
        )
      )
    )
  )
)
(:terminal
  (not
    (= 3 3 )
  )
)
(:scoring
  (+ 0 (* (count binKnockedOver:dodgeball) 8 (* (* (count ballThrowAttempt:dodgeball) 5 )
        6
      )
    )
  )
)
)



(define (game game-id-86) (:domain medium-objects-room-v1)
(:setup
  (forall (?tb - cube_block)
    (game-optional
      (toggled_on ?tb)
    )
  )
)
(:constraints
  (and
    (preference throwFromEdgeOfRug
      (exists (?p2 - hexagonal_bin ?d - ball)
        (then
          (hold (and (and (agent_holds ?d) (> (building_size ?d) 4) (and (and (not (and (and (in_motion ?d) (not (or (and (adjacent upside_down ?d) (object_orientation ?d ?d) ) ) ) ) (agent_holds left) (not (same_type ?d desk) ) (in_motion ?d) ) ) (or (not (in_motion ?d) ) (agent_holds desk) ) ) (adjacent ?d ?d) ) (or (in ?d ?d) (adjacent ?d ?d) (rug_color_under ?d ?d) ) (not (and (agent_holds ?d) (same_type bed ?d) ) ) (and (exists (?r1 - hexagonal_bin) (exists (?b6 - hexagonal_bin ?c - golfball ?p - hexagonal_bin) (and (in ?d ?r1) (agent_holds ?d) ) ) ) (on ?d ?d) ) ) (touch ?d rug) ) )
          (hold (in_motion ?d) )
          (once (agent_holds ?d) )
        )
      )
    )
    (forall (?b - chair)
      (and
        (preference greenObjectMovedToRoomCenter
          (exists (?w2 - pillow)
            (then
              (hold (not (above ?w2 ?b) ) )
              (hold (and (same_type ?w2 ?b) (not (not (in_motion ?w2) ) ) (and (on ?w2 ?b) (in_motion ?w2) ) (exists (?b10 - (either yellow_cube_block flat_block)) (same_color agent upright) ) (adjacent ?b ?w2) (in ?b ?w2) (not (and (on agent ?w2) (agent_holds block) ) ) (not (above ?w2 ?b) ) ) )
              (once (in ?b ?b) )
            )
          )
        )
        (preference blockInTowerKnockedByDodgeball
          (exists (?d ?c5 ?b5 ?l3 ?w1 ?c - chair ?l - block ?d - building)
            (at-end
              (on ?b ?b)
            )
          )
        )
      )
    )
    (preference ballThrownToRug
      (exists (?b - beachball ?c - chair)
        (then
          (once (not (and (and (not (and (and (< (distance ?c ?c) 4) ) (in_motion brown) ) ) (adjacent ?c agent) ) ) ) )
          (once (in_motion ?c) )
          (once (between ?c agent ?c) )
        )
      )
    )
    (forall (?d - hexagonal_bin ?w2 - dodgeball)
      (and
        (preference blockInTowerAtEnd
          (exists (?b2 - hexagonal_bin ?h - pillow)
            (then
              (hold (in_motion desk) )
              (once (not (on ?h ?h) ) )
              (once (on ?h room_center) )
              (hold (and (agent_holds ?h) (touch ?w2 ?h) ) )
            )
          )
        )
        (preference blockIncorrectlyPicked
          (exists (?t1 - dodgeball ?b6 - triangular_ramp)
            (at-end
              (on ?w2 room_center)
            )
          )
        )
      )
    )
    (preference throwObjectToBin
      (exists (?b4 - block ?d - hexagonal_bin)
        (then
          (hold (between ?d ?d ?d) )
          (once (and (agent_holds ?d) (in_motion ?d) ) )
          (once (is_setup_object ?d) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (total-score) )
)
(:scoring
  (count greenObjectMovedToRoomCenter:blue_dodgeball:golfball:blue_dodgeball)
)
)



(define (game game-id-87) (:domain few-objects-room-v1)
(:setup
  (exists (?b - ball)
    (and
      (and
        (or
          (exists (?h - blue_cube_block ?p - hexagonal_bin ?tb - ball)
            (game-conserved
              (and
                (agent_holds ?b)
                (in ?b ?tb)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - (either cellphone dodgeball) ?o - wall)
      (and
        (preference throwKnocksOverBear
          (exists (?d - dodgeball)
            (then
              (hold (in_motion ?o) )
              (once (agent_holds ?d) )
              (hold (and (and (not (game_start ) ) (in_motion ?o) ) (and (adjacent ?o ?d) (< (x_position ?d) 9) ) ) )
              (once (in_motion desk) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> 5 10 )
)
(:scoring
  (* 9 2 )
)
)



(define (game game-id-88) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?b - (either golfball mug alarm_clock))
      (and
        (game-optional
          (on ?b ?b)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectOnBed
      (exists (?h ?t1 - cube_block ?c2 - (either triangle_block key_chain dodgeball))
        (at-end
          (and
            (and
              (= 6 2)
              (= 2 0.5)
              (agent_holds ?c2)
            )
            (agent_holds room_center)
          )
        )
      )
    )
    (forall (?tb - cube_block)
      (and
        (preference failedThrowToBin
          (exists (?b - ball)
            (then
              (once (> (distance_side ?b desk ?b ?b) (distance_side agent ?tb ?tb)) )
              (hold (not (and (not (same_color ?tb ?b) ) (in ?b ?tb) ) ) )
              (once (not (adjacent ?tb ?b) ) )
            )
          )
        )
        (preference greenObjectMovedToRoomCenter
          (at-end
            (or
              (game_over )
              (adjacent ?tb ?tb)
            )
          )
        )
      )
    )
    (forall (?h - beachball ?t2 - hexagonal_bin)
      (and
        (preference ballThrownFromObjectToBin
          (exists (?o - dodgeball)
            (then
              (once (and (in_motion ?t2) (and (not (not (agent_holds ?t2) ) ) (or (on ?t2 ?o) (not (and (in_motion ?t2) (not (not (same_color ?o ?t2) ) ) ) ) ) ) ) )
              (hold (and (and (and (agent_holds ?o) (not (in_motion ?t2) ) ) (on ?o ?o) ) (on ?o ?o) (in ?o ?t2) (on desk ?o) (and (and (in_motion ?t2) (and (and (or (agent_holds rug) (agent_holds ?t2) ) (agent_holds agent) ) (and (not (agent_holds ?o) ) (agent_holds ?o) ) ) ) (not (agent_holds ?o) ) ) (touch brown rug) (and (or (and (not (and (in ?o ?o) (exists (?t - teddy_bear ?b10 - dodgeball) (adjacent ?o ?o) ) ) ) (agent_holds ?t2) ) (and (in_motion agent) (< 4 1) (and (in_motion ?o) (not (adjacent ?t2 ?o) ) ) ) ) (not (equal_z_position ?o ?o) ) ) (not (in_motion ?t2) ) ) )
              (once (and (and (and (agent_holds ?o) (and (adjacent ?t2 agent) (agent_holds ?t2) ) ) (agent_holds ?o) (agent_holds ?t2) ) (same_color ?o ?o) (not (agent_holds ?o) ) (and (game_start ) (= 4 (distance ?t2 agent)) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (total-time) )
)
(:scoring
  (count ballThrownFromObjectToBin:basketball)
)
)



(define (game game-id-89) (:domain medium-objects-room-v1)
(:setup
  (forall (?l2 - block ?t1 ?r2 ?w1 - game_object ?b8 - cube_block ?o - hexagonal_bin)
    (and
      (exists (?d2 - hexagonal_bin)
        (exists (?r - dodgeball ?f - cube_block)
          (and
            (game-optional
              (= (distance desk ?f))
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference greenObjectMovedToRoomCenter
      (exists (?w1 - teddy_bear)
        (then
          (once (agent_holds ?w1) )
          (hold-while (and (and (on agent ?w1) (and (and (not (on desk ?w1) ) (not (> 7 (distance_side ?w1 agent agent ?w1)) ) ) (and (in_motion pink) (agent_holds ?w1) ) ) ) (not (on ?w1 ?w1) ) (on ?w1 ?w1) ) (and (not (on ?w1 ?w1) ) (not (agent_holds room_center) ) ) (and (agent_holds ?w1) (and (in_motion ?w1) (agent_holds rug) ) ) (exists (?b8 - (either pink pyramid_block)) (in_motion ?w1) ) )
          (hold (on ?w1 ?w1) )
          (once (in_motion ?w1) )
        )
      )
    )
    (preference agentLeavesDogbedOrNoMoreBalls
      (exists (?g - color)
        (then
          (once (agent_holds bed) )
          (once (in_motion ?g) )
          (hold (rug_color_under ?g ?g) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects agentLeavesDogbedOrNoMoreBalls:green) (total-score) )
)
(:scoring
  (* 10 6 )
)
)



(define (game game-id-90) (:domain medium-objects-room-v1)
(:setup
  (forall (?c - game_object)
    (game-conserved
      (exists (?b10 - building ?p - block)
        (in_motion ?p)
      )
    )
  )
)
(:constraints
  (and
    (preference cubeBlockThrowAttempt
      (exists (?c - (either desktop pillow))
        (at-end
          (agent_holds rug)
        )
      )
    )
  )
)
(:terminal
  (>= (count cubeBlockThrowAttempt:beachball) (count cubeBlockThrowAttempt:yellow) )
)
(:scoring
  (* 3 (count-once cubeBlockThrowAttempt:alarm_clock:pink) 0 )
)
)



(define (game game-id-91) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (exists (?d - (either alarm_clock rug desktop))
      (touch ?d ?d)
    )
  )
)
(:constraints
  (and
    (preference ballThrownThroughRampAndBlocksToBin
      (exists (?o - block)
        (then
          (hold (agent_holds desk) )
          (hold (on room_center ?o) )
        )
      )
    )
    (preference blindsOpened
      (exists (?c - curved_wooden_ramp)
        (at-end
          (agent_holds ?c)
        )
      )
    )
    (forall (?x - block)
      (and
        (preference ballOnBedAtEnd
          (exists (?b - hexagonal_bin)
            (then
              (once-measure (agent_holds agent) (distance bed ?b) )
              (once (adjacent ?x ?b) )
              (once (on ?x ?b) )
            )
          )
        )
      )
    )
    (preference basketMadeFromRug
      (exists (?o - game_object)
        (then
          (hold (in_motion ?o) )
          (hold (same_type room_center ?o) )
          (once (and (in desk ?o) (in green_golfball ?o) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 0 (total-score) )
)
(:scoring
  (count-once-per-objects basketMadeFromRug:blue_pyramid_block)
)
)



(define (game game-id-92) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (forall (?t - hexagonal_bin ?b ?c - triangular_ramp)
      (and
        (and
          (opposite ?b ?b)
        )
        (on ?c agent)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownFromObjectToBin
      (exists (?d - red_dodgeball)
        (then
          (hold-while (same_type ?d room_center) (equal_z_position ?d ?d) )
          (once-measure (agent_holds bed) (distance_side ?d upright bed room_center) )
          (hold (and (open bed) (in_motion ?d) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects ballThrownFromObjectToBin:beachball:blue_cube_block:pink) (count-longest ballThrownFromObjectToBin:dodgeball) )
)
(:scoring
  (* (external-forall-maximize (count-same-positions ballThrownFromObjectToBin:basketball:dodgeball) ) 2 )
)
)



(define (game game-id-93) (:domain medium-objects-room-v1)
(:setup
  (forall (?w - wall)
    (exists (?r - hexagonal_bin)
      (game-conserved
        (not
          (and
            (same_object ?w ?w)
            (in pink_dodgeball ?r)
            (in ?w room_center)
            (agent_holds ?r)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwGolfballToBin
      (exists (?r - game_object ?g - dodgeball ?w1 - teddy_bear)
        (then
          (once (or (object_orientation ?w1 ?w1) (and (and (not (agent_holds ?w1) ) (> 1 (distance_side ?w1 ?w1 ?w1)) (on ?w1 agent) (< 3 1) ) (not (and (agent_holds ?w1) (and (in_motion ?w1) (rug_color_under ?w1 ?w1) ) ) ) (same_type ?w1 ?w1) (and (agent_holds ?w1) (on ?w1 ?w1) ) ) ) )
          (once (not (on ?w1 ?w1) ) )
          (once (faces rug ?w1) )
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (>= (count-shortest throwGolfballToBin:dodgeball:basketball) 1 )
      (not
        (or
          (or
            (= (count-increasing-measure throwGolfballToBin:golfball) (+ 2 (count-same-positions throwGolfballToBin:dodgeball) )
            )
            (>= 1 10 )
          )
          (>= (total-time) (* 8 9 1 )
          )
        )
      )
    )
  )
)
(:scoring
  (* 8 10 )
)
)



(define (game game-id-94) (:domain medium-objects-room-v1)
(:setup
  (exists (?h - (either desktop pencil cylindrical_block))
    (exists (?f - game_object)
      (game-conserved
        (in_motion ?h)
      )
    )
  )
)
(:constraints
  (and
    (preference objectInBuilding
      (exists (?ob - ball ?b - curved_wooden_ramp)
        (then
          (hold-while (and (in_motion ?b) (not (< 1 (distance ?b ?b)) ) (or (not (not (and (equal_z_position ?b agent) (in_motion ?b) ) ) ) (and (in ?b ?b) (in_motion ?b) ) ) ) (in ?b desk) )
          (once (not (and (or (opposite ?b ?b) (in_motion agent) ) (on ?b ?b) ) ) )
          (hold (on ?b ?b) )
        )
      )
    )
  )
)
(:terminal
  (or
    (and
      (>= 1 (* (count objectInBuilding:hexagonal_bin:hexagonal_bin) (count-once objectInBuilding:basketball) 1 (count objectInBuilding) )
      )
      (> (count objectInBuilding:alarm_clock:purple:golfball) 100 )
      (>= 1 (count objectInBuilding:beachball:dodgeball) )
    )
    (or
      (and
        (or
          (or
            (>= (total-time) (count objectInBuilding:book) )
            (>= (* (- (count-once-per-objects objectInBuilding:dodgeball) )
                0.5
                10
              )
              (total-score)
            )
            (or
              (>= (count objectInBuilding:dodgeball) (+ (= (count-longest objectInBuilding:blue_dodgeball) (count objectInBuilding:basketball) )
                  (= (count-once objectInBuilding:pink:blue_pyramid_block) (count-shortest objectInBuilding:orange:top_drawer) )
                  (= 10 30 )
                )
              )
              (< (total-score) (* (= (- (* (count objectInBuilding:basketball:hexagonal_bin) (count-measure objectInBuilding:bed:golfball) )
                    )
                    5
                    2
                  )
                  (+ 1 (external-forall-maximize (count-once-per-objects objectInBuilding:blue_dodgeball) ) )
                )
              )
              (>= (count objectInBuilding:rug:doggie_bed) 1 )
              (>= 5 (< (* 7 7 )
                  (* (count objectInBuilding:beachball:red) 3 )
                )
              )
            )
            (or
              (>= 2 (total-score) )
              (>= (count objectInBuilding:beachball) (* (external-forall-maximize (count objectInBuilding:dodgeball) ) 100 (+ 4 (count objectInBuilding:beachball) )
                )
              )
            )
          )
          (>= 6 3 )
          (or
            (and
              (>= (* (count objectInBuilding:doggie_bed) (+ 1 (count objectInBuilding:dodgeball) )
                )
                (total-time)
              )
              (and
                (>= 15 4 )
                (< 8 (total-score) )
              )
            )
            (>= (- 6 )
              (count-once objectInBuilding:yellow_pyramid_block:basketball:doggie_bed)
            )
          )
        )
        (>= (= 15 10 )
          (total-time)
        )
      )
      (or
        (> 1 2 )
        (>= 10 (* 1 5 )
        )
        (>= (+ (+ 15 (count objectInBuilding:cube_block) )
            6
          )
          4
        )
        (= (count-overlapping objectInBuilding:book:dodgeball) (count-once-per-objects objectInBuilding:dodgeball) )
      )
    )
    (>= (count objectInBuilding:golfball:dodgeball) (count objectInBuilding:blue_dodgeball:book) )
  )
)
(:scoring
  (* (* (+ (count-once-per-objects objectInBuilding:golfball) 3 )
      (count objectInBuilding:orange)
    )
    (count objectInBuilding:yellow)
  )
)
)



(define (game game-id-95) (:domain medium-objects-room-v1)
(:setup
  (exists (?f - (either pink main_light_switch) ?r ?h ?p ?h ?o ?h - ball ?c - color ?g - triangular_ramp ?ob - hexagonal_bin)
    (game-optional
      (not
        (same_color bed ?ob)
      )
    )
  )
)
(:constraints
  (and
    (forall (?l - block)
      (and
        (preference blockPlacedInBuilding
          (exists (?b2 ?c3 - chair ?t - (either desktop cd) ?p1 ?b - block)
            (then
              (once (agent_holds ?p1) )
              (once (adjacent_side ?b ?b desk) )
              (hold (= 2 1) )
            )
          )
        )
        (preference throwAttempt
          (exists (?c - game_object)
            (then
              (hold-while (exists (?c4 - ball) (not (not (<= (distance ?c4 ?c) 0.5) ) ) ) (and (equal_z_position ?l floor) (not (in_motion agent) ) (agent_holds ?c) ) )
              (once (in ?c ?c) )
              (once (not (not (> (distance ?c agent) (distance ?c ?l)) ) ) )
            )
          )
        )
        (preference gameObjectToBin
          (exists (?c ?b10 ?w - building)
            (then
              (hold (and (agent_holds ?w) (not (and (and (object_orientation ?c ?w) (touch ?c ?c) ) (and (in_motion agent) (in_motion ?w) ) ) ) (or (on ?c ?w) ) ) )
              (once (in_motion ?l) )
              (once (on ?b10 ?l) )
            )
          )
        )
      )
    )
    (forall (?p1 - cube_block ?b2 - teddy_bear ?p - hexagonal_bin)
      (and
        (preference throwKnocksBlock
          (exists (?t - (either key_chain cellphone))
            (then
              (once (exists (?d - block) (and (or (in_motion ?t) (>= 8 9) ) (agent_holds ?t) ) ) )
              (once (and (not (between floor rug ?t) ) (in_motion ?t) ) )
              (once (equal_x_position ?p ?t) )
            )
          )
        )
      )
    )
    (preference throwToDrawerOrBin
      (exists (?h - cube_block)
        (at-end
          (in_motion ?h)
        )
      )
    )
    (preference nonBlockPlacedInBuilding
      (exists (?d - ball)
        (then
          (once (not (and (and (or (not (and (in_motion agent) (not (not (adjacent ?d ?d) ) ) ) ) (in_motion pink_dodgeball) ) (equal_z_position ?d ?d) (in ?d ?d) (on ?d ?d) (in ?d ?d) ) (and (not (and (between ?d agent ?d) (in ?d ?d) ) ) (and (adjacent ?d ?d) (adjacent ?d ?d) ) (in_motion ?d) (> (distance ?d ?d) 6) (not (exists (?o2 - (either pyramid_block cd)) (agent_holds ?o2) ) ) (in right ?d) ) ) ) )
          (once (in_motion ?d) )
          (once (in_motion ?d) )
          (once (on ?d desk) )
        )
      )
    )
    (forall (?r - hexagonal_bin ?o4 - (either dodgeball lamp cylindrical_block))
      (and
        (preference dodgeballFromRugToBin
          (exists (?h - curved_wooden_ramp)
            (then
              (hold (on ?h ?o4) )
              (once (agent_holds ?h) )
              (once (in_motion ?o4) )
            )
          )
        )
        (preference ballThrownFromObjectToBin
          (exists (?b - red_dodgeball ?c5 - hexagonal_bin)
            (then
              (hold (in_motion ?o4) )
              (once (adjacent floor ?c5) )
              (once (= (distance ?o4 ?c5) 1) )
            )
          )
        )
      )
    )
    (preference blockCorrectlyPicked
      (exists (?b5 - building)
        (at-end
          (not
            (and
              (in_motion ?b5)
              (agent_holds green_golfball)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 1 15 )
)
(:scoring
  (* (+ (count-once-per-external-objects dodgeballFromRugToBin:rug) (* (count dodgeballFromRugToBin:yellow) (count-once-per-objects ballThrownFromObjectToBin:block) (count ballThrownFromObjectToBin:yellow:yellow) )
    )
  )
)
)



(define (game game-id-96) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?h - ball ?o - wall)
      (game-optional
        (on ?o ?o)
      )
    )
  )
)
(:constraints
  (and
    (preference smallItemsInPlace
      (exists (?t2 - dodgeball)
        (then
          (hold-while (not (and (not (and (same_object ?t2 ?t2) (agent_holds ?t2) ) ) (adjacent_side ?t2 ?t2 ?t2) ) ) (agent_holds ?t2) )
          (once (not (broken ?t2) ) )
        )
      )
    )
    (preference towerFallsWhileBuilding
      (exists (?d - triangular_ramp)
        (then
          (once (not (in ?d ?d) ) )
          (once (in ?d ?d) )
          (once (between ?d bed ?d) )
        )
      )
    )
    (preference golfballUnderBridgeWithoutTouchingBlock
      (exists (?b - hexagonal_bin)
        (at-end
          (in_motion ?b)
        )
      )
    )
  )
)
(:terminal
  (or
    (and
      (>= (* (count smallItemsInPlace:doggie_bed) 180 )
        (* 5 (* (count smallItemsInPlace) 10 30 (count smallItemsInPlace:dodgeball:alarm_clock) 3 )
        )
      )
      (>= (total-time) (total-time) )
    )
    (>= 2 (* (count towerFallsWhileBuilding:green:triangle_block) (count smallItemsInPlace:dodgeball:yellow) (count-once-per-objects golfballUnderBridgeWithoutTouchingBlock:purple:green) )
    )
    (>= (total-score) (* (* 8 (count golfballUnderBridgeWithoutTouchingBlock:block:beachball) (* (* (count smallItemsInPlace:red:yellow_cube_block) (count-once-per-objects towerFallsWhileBuilding:blue_cube_block) )
            5
          )
          5
        )
        (external-forall-minimize
          (count-once smallItemsInPlace:dodgeball:pink_dodgeball)
        )
        (+ (count-once-per-objects smallItemsInPlace:cube_block) 2 )
        (external-forall-maximize
          (count-measure towerFallsWhileBuilding:dodgeball)
        )
        3
        (count golfballUnderBridgeWithoutTouchingBlock:cube_block)
        50
        (count towerFallsWhileBuilding:beachball)
        (count-once towerFallsWhileBuilding:hexagonal_bin:cylindrical_block)
      )
    )
  )
)
(:scoring
  (- 6 )
)
)



(define (game game-id-97) (:domain medium-objects-room-v1)
(:setup
  (exists (?c6 - wall ?c - hexagonal_bin)
    (and
      (game-optional
        (and
          (touch ?c ?c)
          (not
            (< (building_size ?c) (distance ?c ?c))
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b2 - (either basketball doggie_bed) ?d ?o1 ?l1 - teddy_bear ?h - curved_wooden_ramp)
      (and
        (preference pyramidBlockAtopTowerAtEnd
          (exists (?c - hexagonal_bin)
            (then
              (once (or (rug_color_under ?c ?h) ) )
              (once-measure (exists (?w1 - (either hexagonal_bin laptop)) (in_motion ?w1) ) (distance ?c ?h) )
              (hold-while (on ?h ?h) (on bed ?c) )
            )
          )
        )
        (preference throwBallFromOtherBallToBin
          (exists (?l - hexagonal_bin)
            (at-end
              (faces ?l ?l)
            )
          )
        )
      )
    )
    (preference ballThrownToBin
      (exists (?s - shelf ?c2 - hexagonal_bin)
        (then
          (hold (in_motion ?c2) )
          (once (on ?c2 ?c2) )
          (once (and (agent_holds ?c2) (not (in ?c2 desk) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (count ballThrownToBin:dodgeball) )
)
(:scoring
  (count-once-per-objects pyramidBlockAtopTowerAtEnd:beachball:pyramid_block)
)
)



(define (game game-id-98) (:domain few-objects-room-v1)
(:setup
  (exists (?o - block ?d - dodgeball)
    (game-optional
      (agent_holds ?d)
    )
  )
)
(:constraints
  (and
    (preference ballThrownToChair
      (exists (?h - hexagonal_bin)
        (at-end
          (in_motion ?h)
        )
      )
    )
  )
)
(:terminal
  (or
    (> (count-once-per-objects ballThrownToChair:red) (total-score) )
  )
)
(:scoring
  (count-once-per-objects ballThrownToChair:orange)
)
)



(define (game game-id-99) (:domain medium-objects-room-v1)
(:setup
  (exists (?d - triangular_ramp)
    (and
      (forall (?o - dodgeball)
        (exists (?o - ball)
          (and
            (exists (?b - hexagonal_bin)
              (forall (?d - block ?d - ball ?c4 - hexagonal_bin)
                (game-optional
                  (not
                    (and
                      (in_motion ?d)
                      (not
                        (< 0.5 4)
                      )
                    )
                  )
                )
              )
            )
            (exists (?b10 - teddy_bear)
              (game-optional
                (not
                  (in_motion ?o)
                )
              )
            )
            (and
              (game-conserved
                (and
                  (not
                    (in agent ?d)
                  )
                  (in rug ?d)
                )
              )
              (game-optional
                (in_motion ?d)
              )
              (exists (?p - teddy_bear)
                (forall (?h - dodgeball)
                  (exists (?o2 - (either cylindrical_block red laptop))
                    (exists (?r - color)
                      (and
                        (game-conserved
                          (faces ?o2 pillow)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwTeddyOntoPillow
      (exists (?c2 - wall)
        (then
          (once (not (not (not (not (and (agent_holds ?c2) ) ) ) ) ) )
          (once (and (and (and (in_motion ?c2) (in ?c2 ?c2) ) (not (adjacent ?c2 yellow) ) ) (adjacent bed ?c2) ) )
          (once (not (agent_holds ?c2) ) )
        )
      )
    )
    (forall (?b9 - cube_block)
      (and
        (preference ballThrownIntoTarget
          (exists (?c3 - hexagonal_bin)
            (then
              (once (same_type ?b9 ?b9) )
              (once-measure (< (distance_side ?c3 ?c3 ?b9) (distance ?b9 ?c3)) (distance ?c3 ?c3) )
              (hold (forall (?b - ball) (in ?b9 ?b) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (count throwTeddyOntoPillow:basketball:basketball) )
)
(:scoring
  (* (count-longest throwTeddyOntoPillow:golfball) (count ballThrownIntoTarget:red_pyramid_block:pink_dodgeball) )
)
)



(define (game game-id-100) (:domain many-objects-room-v1)
(:setup
  (forall (?c4 - (either desktop cube_block) ?c - ball ?x - hexagonal_bin)
    (exists (?l2 - game_object)
      (exists (?h - ball)
        (and
          (and
            (forall (?l - dodgeball)
              (and
                (game-optional
                  (and
                    (not
                      (touch ?l2 desk)
                    )
                    (toggled_on agent)
                  )
                )
                (game-conserved
                  (game_over )
                )
                (exists (?d - hexagonal_bin)
                  (game-optional
                    (and
                      (and
                        (in room_center ?d)
                        (on top_drawer agent)
                      )
                      (not
                        (not
                          (in_motion ?x)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectsHidden
      (exists (?b1 - (either cylindrical_block alarm_clock cube_block))
        (then
          (once (exists (?db - wall ?t - curved_wooden_ramp) (and (agent_holds ?t) (in_motion ?t) (in ?t ?b1) ) ) )
          (once (adjacent_side desk ?b1 ?b1 ?b1) )
          (once (and (and (faces ?b1 sideways) (and (agent_holds ?b1) (in_motion ?b1) ) (and (agent_holds ?b1) (in_motion ?b1) (agent_holds agent) ) (in ?b1 rug) ) (in_motion ?b1) (not (not (agent_holds floor) ) ) ) )
        )
      )
    )
    (preference itemsHidingScreens
      (exists (?d - (either bridge_block cube_block cube_block))
        (then
          (once (adjacent_side agent ?d desk ?d) )
          (hold (in_motion rug) )
          (once (and (in_motion ?d) (and (not (agent_holds ?d) ) (same_color ?d ?d) ) (not (faces upright ?d) ) (open agent) (adjacent ?d ?d) (and (or (not (in_motion ?d) ) (exists (?d - hexagonal_bin) (broken agent) ) ) (not (not (not (not (touch ?d ?d) ) ) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= 10 (count-once-per-objects itemsHidingScreens:dodgeball) )
  )
)
(:scoring
  (count-once objectsHidden:yellow)
)
)



(define (game game-id-101) (:domain many-objects-room-v1)
(:setup
  (exists (?b - game_object)
    (and
      (game-conserved
        (agent_holds ?b)
      )
      (and
        (and
          (game-optional
            (in_motion ?b)
          )
          (exists (?c6 - (either hexagonal_bin lamp flat_block))
            (forall (?b5 - dodgeball ?h - game_object)
              (and
                (game-conserved
                  (above agent ?c6)
                )
                (game-optional
                  (not
                    (in ?c6 ?c6)
                  )
                )
              )
            )
          )
        )
      )
      (exists (?o2 - dodgeball ?h - hexagonal_bin)
        (game-optional
          (between ?b ?b ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockToBinFromRug
      (exists (?b9 - game_object ?c6 ?b6 - golfball)
        (then
          (hold (in_motion ?c6) )
          (hold (not (< 0.5 (distance ?c6 ?b6)) ) )
          (once (agent_holds ?b6) )
        )
      )
    )
    (preference watchOnShelf
      (exists (?ob - dodgeball)
        (then
          (once (agent_holds ?ob) )
          (once (and (and (touch ?ob bed) (and (not (object_orientation ?ob ?ob) ) (open ?ob) (touch front ?ob) ) ) (agent_holds ?ob) (on bed ?ob) (is_setup_object ?ob) (in_motion ?ob) (not (same_type ?ob desk) ) ) )
          (hold (or (not (> (distance ?ob ?ob) 1) ) (agent_holds ?ob) (not (not (not (and (in_motion ?ob) (in_motion desk) (agent_holds rug) (agent_holds ?ob) ) ) ) ) ) )
        )
      )
    )
    (preference dodgeballThrownToBin
      (exists (?p - color)
        (then
          (once (not (and (agent_holds ?p) (not (adjacent ?p ?p) ) ) ) )
          (once (not (on ?p ?p) ) )
          (once (not (on ?p ?p) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (> (count dodgeballThrownToBin:pink) (* (+ (count-once-per-objects watchOnShelf:doggie_bed) 8 )
        (* (* 2 (count-once-per-objects watchOnShelf:purple:pink) )
          (count dodgeballThrownToBin:pink:dodgeball)
          2
          8
        )
      )
    )
  )
)
(:scoring
  (count-once-per-objects dodgeballThrownToBin:blue_pyramid_block:red)
)
)



(define (game game-id-102) (:domain few-objects-room-v1)
(:setup
  (forall (?p3 - curved_wooden_ramp ?w2 - hexagonal_bin)
    (game-conserved
      (agent_holds ?w2)
    )
  )
)
(:constraints
  (and
    (preference blockIncorrectlyPicked
      (exists (?b10 - doggie_bed)
        (then
          (hold (not (agent_holds floor) ) )
          (hold-while (and (not (same_object ?b10 ?b10) ) (and (not (touch upright ?b10) ) (and (agent_holds ?b10) (agent_holds ?b10) ) (on ?b10 bed) (and (exists (?c - golfball ?o1 - hexagonal_bin) (agent_holds ?o1) ) ) ) ) (agent_holds ?b10) )
          (once (and (not (touch agent ?b10) ) (on rug ?b10) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 3 3 )
)
(:scoring
  (count-shortest blockIncorrectlyPicked:yellow)
)
)



(define (game game-id-103) (:domain medium-objects-room-v1)
(:setup
  (forall (?c4 - (either wall basketball) ?b4 - hexagonal_bin)
    (forall (?b - dodgeball)
      (not
        (forall (?c6 - hexagonal_bin)
          (game-conserved
            (not
              (agent_holds pink_dodgeball)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blocksInPlace
      (exists (?c5 - building)
        (at-end
          (agent_holds ?c5)
        )
      )
    )
  )
)
(:terminal
  (>= 2 (total-score) )
)
(:scoring
  (count-increasing-measure blocksInPlace:golfball:golfball)
)
)



(define (game game-id-104) (:domain many-objects-room-v1)
(:setup
  (not
    (exists (?d - hexagonal_bin ?h - cube_block ?b - hexagonal_bin)
      (game-optional
        (agent_holds ?b)
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - (either pyramid_block tall_cylindrical_block))
      (and
        (preference ballOnBedAtEnd
          (exists (?l2 - ball ?b2 - dodgeball ?d - wall)
            (then
              (once (> 1 (distance ?d ?d)) )
              (hold (not (agent_holds ?d) ) )
              (once (agent_holds ?h) )
            )
          )
        )
      )
    )
    (preference cubeBlockThrowAttempt
      (exists (?l - dodgeball)
        (at-end
          (not
            (and
              (exists (?l4 - shelf)
                (not
                  (adjacent_side ?l ?l ?l4)
                )
              )
              (agent_holds ?l)
              (object_orientation blue ?l)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (= (* 2 (count cubeBlockThrowAttempt:wall:blue_pyramid_block) (count ballOnBedAtEnd:purple) 5 )
    (total-time)
  )
)
(:scoring
  (count-once-per-external-objects ballOnBedAtEnd:golfball:beachball)
)
)



(define (game game-id-105) (:domain medium-objects-room-v1)
(:setup
  (exists (?d - (either rug desktop))
    (game-conserved
      (in_motion ?d)
    )
  )
)
(:constraints
  (and
    (preference objectLandsInBin
      (exists (?c - hexagonal_bin ?l2 - ball ?h - cube_block)
        (then
          (hold (rug_color_under ?h ?h) )
          (hold (and (and (and (not (agent_holds ?h) ) (and (and (in ?h ?h) (not (adjacent room_center ?h) ) ) ) ) (and (not (in_motion ?h) ) (not (adjacent agent top_drawer) ) ) ) (in_motion ?h) ) )
          (once (agent_holds ?h) )
        )
      )
    )
    (forall (?t1 - hexagonal_bin ?c6 - dodgeball ?b - dodgeball)
      (and
        (preference ballThrownFromRug
          (then
            (hold (game_start ) )
            (once-measure (not (agent_holds ?b) ) (distance_side ?b rug ?b) )
          )
        )
      )
    )
    (preference agentLeavesDogbedOrNoMoreBalls
      (exists (?h - cube_block ?c - (either yellow_cube_block golfball))
        (then
          (hold-while (agent_holds ?c) (in_motion ?c) (in_motion pink) )
          (once (adjacent ?c ?c) )
          (once (exists (?b1 - dodgeball) (and (touch ?c desk) (not (in_motion ?b1) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count ballThrownFromRug) 4 )
    (or
      (>= (count-overlapping ballThrownFromRug:cube_block:orange) (count ballThrownFromRug:blue_dodgeball) )
      (< 4 (count agentLeavesDogbedOrNoMoreBalls:dodgeball) )
      (>= 10 5 )
      (and
        (>= 15 (total-score) )
      )
    )
  )
)
(:scoring
  (* (count objectLandsInBin:green:block) (count-once-per-objects agentLeavesDogbedOrNoMoreBalls:beachball) )
)
)



(define (game game-id-106) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (in_motion agent)
  )
)
(:constraints
  (and
    (preference bookOnDeskShelf
      (exists (?o - hexagonal_bin)
        (then
          (hold-while (agent_holds ?o) (on ?o ?o) )
          (hold (on back ?o) )
          (once (and (agent_holds ?o) (and (agent_holds ?o) (not (adjacent desk ?o) ) ) (in_motion ?o) (< 1 (distance ?o ?o)) (and (and (agent_holds ?o) (not (touch ?o ?o) ) ) (not (and (same_object ?o ?o) (agent_holds ?o) ) ) (adjacent_side ?o ?o ?o) ) (same_type ?o ?o) (on ?o ?o) (not (and (and (not (in_motion bed) ) (and (adjacent_side ?o ?o ?o room_center) (< 1 1) ) ) (exists (?l3 - dodgeball) (and (or (in_motion ?o) (agent_holds bed) ) (and (adjacent ?l3 ?o) (and (adjacent ?l3 floor) (< 1 (distance ?o ?o)) ) ) ) ) (in_motion ?o) (in_motion agent) (not (forall (?h - hexagonal_bin) (or (not (agent_holds agent) ) (in_motion ?o) (equal_x_position desk ?h) ) ) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (< 6 2 )
)
(:scoring
  (count bookOnDeskShelf:basketball)
)
)



(define (game game-id-107) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?b6 - desk_shelf)
      (game-conserved
        (and
          (and
            (agent_holds ?b6)
            (object_orientation agent ?b6)
            (in ?b6 rug)
          )
          (and
            (and
              (agent_holds ?b6)
              (in block ?b6)
            )
            (or
              (agent_holds ?b6)
              (< (distance ?b6 ?b6) 10)
            )
            (or
              (and
                (in_motion ?b6)
                (and
                  (agent_holds ?b6)
                )
              )
              (game_over )
            )
          )
          (in_motion ?b6)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b2 - (either chair beachball))
      (and
        (preference dodgeballHitsPillowWithoutTouchingBlock
          (exists (?t2 - hexagonal_bin)
            (then
              (hold (agent_holds ?t2) )
              (once (and (on ?t2 ?t2) (same_type ?t2 agent) ) )
              (once (< (distance desk room_center) (distance_side ?b2 ?t2 ?t2)) )
            )
          )
        )
      )
    )
    (forall (?g - hexagonal_bin)
      (and
        (preference ballKnocksBlockFromRug
          (exists (?l1 - building)
            (then
              (hold-while (not (not (opposite ?l1 ?l1) ) ) (exists (?t2 - doggie_bed ?c1 - game_object ?b - ball) (and (< (distance ?l1 ?b) 5) (in_motion ?g) ) ) )
              (once (not (on ?l1 ?l1) ) )
              (once (not (agent_holds ?g) ) )
            )
          )
        )
        (preference throwKnocksOverBear
          (then
            (once-measure (not (agent_holds green_golfball) ) (distance ?g ?g) )
            (once (touch ?g ?g) )
            (once (agent_holds ?g) )
            (once (agent_holds ?g) )
          )
        )
        (preference objectWithMatchingColor
          (exists (?c5 - chair)
            (then
              (once (and (same_color ?c5 ?g) (agent_holds ?g) ) )
              (once (in ?g ?c5) )
              (hold-while (not (agent_holds ?g) ) (not (and (not (agent_holds ?g) ) (on desk ?g) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (+ 10 10 )
      (* (count-once-per-objects throwKnocksOverBear:pink:dodgeball) (count ballKnocksBlockFromRug:blue_pyramid_block) )
    )
    (count throwKnocksOverBear:golfball)
  )
)
(:scoring
  (count throwKnocksOverBear:beachball)
)
)



(define (game game-id-108) (:domain many-objects-room-v1)
(:setup
  (exists (?c3 - (either chair dodgeball))
    (forall (?d - hexagonal_bin)
      (exists (?b - beachball ?d - building)
        (exists (?r1 - chair)
          (exists (?o3 - teddy_bear)
            (and
              (and
                (exists (?b10 ?o3 ?h ?c - building ?o - golfball)
                  (game-conserved
                    (adjacent_side ?r1 ?r1 ?r1)
                  )
                )
                (and
                  (game-optional
                    (in_motion ?c3)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?w1 - game_object)
      (and
        (preference gameBlockFound
          (exists (?b4 - hexagonal_bin ?c - hexagonal_bin ?b5 - block)
            (then
              (hold (agent_holds ?b5) )
              (hold (adjacent ?b5 ?b5) )
              (hold (agent_holds ?w1) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< 1 4 )
)
(:scoring
  (+ (count-once-per-objects gameBlockFound:golfball:pink) (count-once gameBlockFound:yellow_cube_block) )
)
)



(define (game game-id-109) (:domain many-objects-room-v1)
(:setup
  (forall (?c - doggie_bed ?h ?c6 - dodgeball)
    (forall (?h - block)
      (game-conserved
        (and
          (agent_holds bed)
          (agent_holds ?c6)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectThrownFromRug
      (exists (?h - teddy_bear)
        (then
          (once (and (> (distance ?h ?h) (distance ?h ?h)) (not (and (not (in_motion agent) ) (in_motion ?h) ) ) (and (agent_holds pink_dodgeball) (< 1 1) ) ) )
          (once (on rug ?h) )
          (hold (in_motion ?h) )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (* 5 )
  )
)
(:scoring
  (* 4 (- 0 )
  )
)
)



(define (game game-id-110) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?g - hexagonal_bin)
      (exists (?o2 - pillow)
        (forall (?b2 - shelf)
          (game-optional
            (agent_holds ?b2)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference itemsBroken
      (exists (?t - hexagonal_bin ?c5 - game_object)
        (then
          (once (in_motion ?c5) )
          (hold (on ?c5 ?c5) )
          (once (toggled_on ?c5) )
          (once (touch ?c5 pink) )
        )
      )
    )
  )
)
(:terminal
  (= (* 12 16 )
    (total-score)
  )
)
(:scoring
  (count-once-per-objects itemsBroken:purple:red)
)
)



(define (game game-id-111) (:domain medium-objects-room-v1)
(:setup
  (exists (?r - curved_wooden_ramp)
    (game-conserved
      (and
        (agent_holds ?r)
        (in_motion ?r)
      )
    )
  )
)
(:constraints
  (and
    (forall (?s - ball ?b4 - chair)
      (and
        (preference throwBallToDoggieBedOffWall
          (exists (?d - drawer)
            (at-end
              (< 1 3)
            )
          )
        )
      )
    )
    (preference throwAttemptFromBehindBlock
      (exists (?b - hexagonal_bin)
        (then
          (hold (agent_holds rug) )
          (hold (agent_holds ?b) )
          (hold (< (distance ?b ?b) (distance_side ?b ?b ?b)) )
        )
      )
    )
  )
)
(:terminal
  (<= (count-once-per-objects throwBallToDoggieBedOffWall:dodgeball:red) (count-once-per-objects throwAttemptFromBehindBlock:pink:basketball) )
)
(:scoring
  (count-once-per-objects throwBallToDoggieBedOffWall:yellow:hexagonal_bin)
)
)



(define (game game-id-112) (:domain few-objects-room-v1)
(:setup
  (exists (?bl - (either book cd laptop))
    (game-conserved
      (agent_holds ?bl)
    )
  )
)
(:constraints
  (and
    (forall (?o - hexagonal_bin ?d - pillow)
      (and
        (preference throwAttempt
          (exists (?s - (either rug alarm_clock) ?b7 - hexagonal_bin)
            (then
              (hold (not (not (not (and (in ?b7 back) (in_motion ?d) ) ) ) ) )
              (once (not (opposite ?b7 ?d) ) )
              (once (in_motion ?d) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count throwAttempt:pink) 3 )
)
(:scoring
  (count-once-per-objects throwAttempt:golfball:dodgeball)
)
)



(define (game game-id-113) (:domain medium-objects-room-v1)
(:setup
  (forall (?d - ball)
    (exists (?c - dodgeball)
      (forall (?g ?t ?h ?b ?t ?o - curved_wooden_ramp)
        (game-conserved
          (same_type bed ?g)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c5 - game_object)
      (and
        (preference castleBuilt
          (exists (?d - dodgeball ?p3 - color)
            (then
              (once (and (in_motion ?p3) (and (agent_holds agent) (not (in_motion ?p3) ) ) ) )
              (once (not (< 1 (distance desk ?c5)) ) )
              (hold (object_orientation ?c5 ?p3) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 7 2 )
)
(:scoring
  (count-overlapping castleBuilt:orange)
)
)



(define (game game-id-114) (:domain many-objects-room-v1)
(:setup
  (forall (?s - desk_shelf ?x - (either cellphone blue_cube_block cube_block) ?h - desktop)
    (forall (?c - (either golfball golfball))
      (forall (?o - hexagonal_bin)
        (forall (?p2 - hexagonal_bin)
          (game-optional
            (on ?c ?p2)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference itemsBroken
      (exists (?b3 ?b6 ?o3 ?h ?t ?h - ball)
        (then
          (once (in ?h ?b6) )
          (once-measure (agent_holds ?b3) (distance floor ?b3) )
          (hold-while (same_type ?h ?h) (game_start ) )
        )
      )
    )
    (preference golfballLandsInBinThroughRamp
      (exists (?b - curved_wooden_ramp)
        (then
          (once (touch door ?b) )
          (once (touch ?b ?b) )
          (once (is_setup_object ?b) )
        )
      )
    )
  )
)
(:terminal
  (> (count-once itemsBroken:dodgeball) 10 )
)
(:scoring
  (* (+ 2 2 )
    6
  )
)
)



(define (game game-id-115) (:domain medium-objects-room-v1)
(:setup
  (exists (?t - triangular_ramp)
    (and
      (forall (?h - cube_block)
        (game-optional
          (and
            (not
              (and
                (agent_holds ?h)
                (same_color ?t ?h)
                (and
                  (on ?h ?h)
                  (on bed ?t)
                )
              )
            )
            (< 1 0)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownFromObjectToBin
      (exists (?h ?d ?b2 - hexagonal_bin ?c - hexagonal_bin)
        (then
          (once (agent_holds ?c) )
          (hold-while (agent_holds ?c) (not (on ?c ?c) ) )
          (once (in_motion desk) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (count ballThrownFromObjectToBin:beachball) )
)
(:scoring
  (+ 5 (count ballThrownFromObjectToBin:yellow:yellow_cube_block) )
)
)



(define (game game-id-116) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (forall (?d - game_object)
      (adjacent ?d west_wall)
    )
  )
)
(:constraints
  (and
    (forall (?h ?w2 - flat_block ?tb - ball)
      (and
        (preference throwBallToBinOffObject
          (exists (?b1 - game_object)
            (then
              (hold-while (not (agent_crouches ) ) (and (adjacent_side ?tb agent upright) (and (not (in_motion back) ) (agent_holds ?tb) ) (in ?tb ?b1) ) )
              (once (in_motion ?b1) )
              (once (agent_holds ?tb) )
            )
          )
        )
        (preference dodgeballThrownToBinFromDesk
          (exists (?c4 - hexagonal_bin ?h ?t - beachball ?h ?r - hexagonal_bin)
            (then
              (once (on door ?h) )
              (once (or (and (opposite ?h agent) (and (in_motion ?h) (and (agent_holds desk) (and (not (on ?r brown) ) (agent_holds ?h) ) ) ) ) (in_motion ?r) ) )
              (hold (agent_holds ?h) )
            )
          )
        )
        (preference ballThrownFromRug
          (exists (?r1 - teddy_bear)
            (at-end
              (in_motion agent)
            )
          )
        )
      )
    )
    (preference ballKnocksBlockFromRug
      (exists (?h - (either bridge_block alarm_clock pyramid_block))
        (at-end
          (and
            (on ?h ?h)
            (in_motion ?h)
          )
        )
      )
    )
    (preference bookOnDeskShelf
      (exists (?b1 - hexagonal_bin)
        (then
          (once (not (not (opposite ?b1 ?b1) ) ) )
          (once (on desk ?b1) )
          (once-measure (in ?b1 ?b1) (distance bed ?b1) )
        )
      )
    )
  )
)
(:terminal
  (>= 8 (count-once-per-objects throwBallToBinOffObject:beachball:dodgeball) )
)
(:scoring
  (external-forall-maximize
    (count ballThrownFromRug:pink_dodgeball)
  )
)
)



(define (game game-id-117) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?h - cube_block)
      (game-conserved
        (in ?h ?h)
      )
    )
  )
)
(:constraints
  (and
    (preference ballDroppedInBin
      (exists (?r - hexagonal_bin ?bl - ball)
        (then
          (once (and (agent_holds ?bl) (and (in_motion ?bl) ) ) )
          (hold (exists (?h - building) (<= (distance agent ?bl) (building_size ?h)) ) )
          (once (and (and (adjacent rug bed) (agent_holds ?bl) ) ) )
        )
      )
    )
    (forall (?b10 - cube_block)
      (and
        (preference ballThrownToRampToBed
          (exists (?l - (either watch mug) ?p - curved_wooden_ramp)
            (then
              (once (in_motion ?b10) )
              (once (not (and (on ?b10 ?b10) (and (touch pillow ?b10) (and (in_motion desk) (not (not (agent_holds ?p) ) ) ) ) (and (not (or (adjacent ?p ?p) (not (on ?p ?p) ) ) ) (not (in_motion ?b10) ) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< (* 100 2 3 )
    (* (count-once ballDroppedInBin) (count-once-per-objects ballDroppedInBin:yellow) )
  )
)
(:scoring
  (count-overlapping ballThrownToRampToBed:pink:purple:hexagonal_bin)
)
)



(define (game game-id-118) (:domain few-objects-room-v1)
(:setup
  (forall (?ob - dodgeball)
    (game-conserved
      (touch ?ob agent)
    )
  )
)
(:constraints
  (and
    (forall (?f - shelf ?b - (either pink desktop))
      (and
        (preference itemsTurnedOff
          (exists (?b - game_object)
            (then
              (hold (>= 10 (distance ?b ?b)) )
              (hold-while (not (not (and (and (agent_holds drawer) (not (forall (?g - dodgeball) (touch ?b ?b) ) ) ) (not (not (agent_holds front) ) ) ) ) ) (not (not (exists (?o - cube_block) (agent_holds floor) ) ) ) )
              (once (and (on ?b floor) (> (distance ?b agent) (distance ?b ?b)) ) )
            )
          )
        )
      )
    )
    (preference gameObjectToBin
      (exists (?r2 - doggie_bed)
        (then
          (once (< 1 1) )
          (hold (on ?r2 ?r2) )
          (once (agent_holds ?r2) )
        )
      )
    )
  )
)
(:terminal
  (>= (count gameObjectToBin:book) (* (count-once-per-objects gameObjectToBin:red:purple) 2 )
  )
)
(:scoring
  (-
    (count-once-per-objects gameObjectToBin:golfball)
    (count-once-per-objects gameObjectToBin:blue_cube_block)
  )
)
)



(define (game game-id-119) (:domain medium-objects-room-v1)
(:setup
  (exists (?o2 - block)
    (exists (?o2 - (either cd dodgeball dodgeball))
      (game-conserved
        (in_motion main_light_switch)
      )
    )
  )
)
(:constraints
  (and
    (preference cubeBlockThrowAttempt
      (exists (?d - dodgeball)
        (then
          (once (and (touch ?d ?d) (agent_holds desk) ) )
          (once (adjacent ?d ?d) )
          (once (in ?d ?d) )
        )
      )
    )
    (preference gameObjectToBin
      (exists (?o - sliding_door)
        (then
          (once (agent_holds room_center) )
          (hold-while (on ?o ?o) (agent_holds ?o) )
          (hold-while (and (and (agent_holds ?o) (is_setup_object ?o) ) (adjacent ?o ?o) ) (agent_holds ?o) )
        )
      )
    )
  )
)
(:terminal
  (= (total-score) 10 )
)
(:scoring
  (count-once gameObjectToBin:golfball)
)
)



(define (game game-id-120) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (agent_holds desk)
  )
)
(:constraints
  (and
    (preference objectsHidden
      (exists (?o1 - bridge_block)
        (then
          (once (in_motion ?o1) )
          (once (in desk agent) )
          (once (not (adjacent_side ?o1 ?o1 door) ) )
        )
      )
    )
  )
)
(:terminal
  (> (total-score) (total-score) )
)
(:scoring
  (external-forall-maximize
    (= 7 (count objectsHidden:dodgeball:pink) )
  )
)
)



(define (game game-id-121) (:domain medium-objects-room-v1)
(:setup
  (exists (?p3 ?w - hexagonal_bin)
    (and
      (and
        (game-optional
          (adjacent ?p3 ?p3)
        )
      )
      (and
        (and
          (forall (?t - beachball)
            (and
              (game-optional
                (in_motion ?w)
              )
              (exists (?c5 - block)
                (game-conserved
                  (on ?w agent)
                )
              )
            )
          )
        )
        (not
          (game-optional
            (in ?p3 ?p3)
          )
        )
      )
      (and
        (and
          (game-optional
            (on ?w ?p3)
          )
          (exists (?bl - hexagonal_bin ?c3 - red_dodgeball)
            (and
              (game-conserved
                (same_object ?c3 ?c3)
              )
              (game-conserved
                (and
                  (agent_holds ?c3)
                  (in_motion ?c3)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b ?c ?o5 - (either main_light_switch cube_block))
      (and
        (preference teddyBearLandsInBin
          (exists (?db - (either cylindrical_block dodgeball))
            (then
              (once (faces ?o5 ?c) )
              (hold-while (= 5 1) (and (on agent desk) (and (and (on ?db rug) (not (agent_holds ?c) ) ) (agent_holds ?o5) ) (in_motion ?b) ) (forall (?w2 - game_object) (not (and (not (object_orientation rug ?w2) ) (not (adjacent ?db ?db) ) ) ) ) )
            )
          )
        )
      )
    )
    (preference dodgeballThrownToBinFromDesk
      (exists (?b3 - curved_wooden_ramp ?h ?c - block)
        (at-end
          (in_motion ?h)
        )
      )
    )
  )
)
(:terminal
  (<= (count dodgeballThrownToBinFromDesk:dodgeball) (* (* (* 5 (count-once-per-objects teddyBearLandsInBin:beachball:pink) )
        3
      )
      (* (count-once-per-objects dodgeballThrownToBinFromDesk:side_table) 1 )
      10
      3
      (count-once-per-external-objects dodgeballThrownToBinFromDesk:hexagonal_bin)
      (count teddyBearLandsInBin:beachball:dodgeball)
    )
  )
)
(:scoring
  (* (* (external-forall-maximize (- (count teddyBearLandsInBin:yellow) )
      )
      6
    )
    (= (* (count teddyBearLandsInBin:alarm_clock:green) (- (* 4 (count-once teddyBearLandsInBin:doggie_bed) )
        )
      )
      (count dodgeballThrownToBinFromDesk:green)
    )
    5
    (count-once-per-external-objects dodgeballThrownToBinFromDesk:pink)
    (count teddyBearLandsInBin:block:red_pyramid_block)
    (* (* (count-unique-positions dodgeballThrownToBinFromDesk:red) 3 )
      (* 15 (count dodgeballThrownToBinFromDesk:doggie_bed) 5 )
      3
    )
    2
    (* (count dodgeballThrownToBinFromDesk:dodgeball) (count dodgeballThrownToBinFromDesk:red) )
    (* 5 1 2 )
  )
)
)



(define (game game-id-122) (:domain many-objects-room-v1)
(:setup
  (exists (?l2 - hexagonal_bin ?t ?o ?p - sliding_door)
    (exists (?o - doggie_bed ?c2 - cube_block)
      (and
        (and
          (exists (?s - hexagonal_bin ?b - block)
            (and
              (forall (?b - doggie_bed ?h - game_object)
                (game-conserved
                  (forall (?p1 ?b ?g - cube_block)
                    (same_type ?t ?o)
                  )
                )
              )
              (exists (?d - (either mug tall_cylindrical_block) ?l1 - block)
                (or
                  (game-conserved
                    (and
                      (and
                        (forall (?c2 - doggie_bed ?c - hexagonal_bin)
                          (agent_holds ?b)
                        )
                        (adjacent ?b ?t)
                      )
                      (forall (?t - block ?o2 - cube_block ?bl - desktop)
                        (not
                          (on ?o ?c2)
                        )
                      )
                    )
                  )
                  (exists (?b - block ?s - dodgeball)
                    (exists (?d1 ?c - hexagonal_bin ?x - dodgeball)
                      (exists (?h - golfball)
                        (game-conserved
                          (< 5 0.5)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
        (game-optional
          (agent_holds ?o)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference cubeBlockThrowAttempt
      (exists (?b - tall_cylindrical_block)
        (then
          (hold (same_color desk ?b) )
          (hold (not (not (in ?b ?b) ) ) )
          (once (agent_holds ?b) )
        )
      )
    )
    (preference agentLeavesDogbedOrNoMoreBalls
      (exists (?d - (either dodgeball book) ?h - dodgeball)
        (then
          (hold (not (not (in_motion ?h) ) ) )
          (hold (and (and (agent_holds ?h) (and (and (in ?h ?h) (agent_holds door) ) (and (and (equal_z_position ?h ?h) (not (in_motion ?h) ) ) ) ) ) (exists (?d - flat_block) (on ?h ?h) ) ) )
          (once (not (object_orientation ?h ?h) ) )
        )
      )
    )
  )
)
(:terminal
  (< 5 (count-once-per-external-objects agentLeavesDogbedOrNoMoreBalls:red) )
)
(:scoring
  (* (count cubeBlockThrowAttempt:tall_cylindrical_block) (* (count-longest cubeBlockThrowAttempt:red) (* (count agentLeavesDogbedOrNoMoreBalls:dodgeball) (external-forall-maximize (count agentLeavesDogbedOrNoMoreBalls:dodgeball:purple) ) )
    )
  )
)
)



(define (game game-id-123) (:domain many-objects-room-v1)
(:setup
  (exists (?b7 ?db ?o3 ?b ?b - hexagonal_bin ?c - hexagonal_bin)
    (forall (?d - (either pyramid_block cd))
      (game-conserved
        (not
          (in_motion ?c)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference watchOnShelf
      (exists (?h - wall)
        (then
          (once (and (and (in_motion ?h) (not (on agent ?h) ) ) (game_start ) ) )
          (once (and (and (touch ?h ?h) (in_motion ?h) ) (and (and (and (in_motion ?h) (not (and (or (touch ?h agent) (on ?h brown) (in_motion ?h) ) (in ?h ?h) (and (in ?h ?h) (exists (?l2 - cube_block) (object_orientation ?l2 ?h) ) ) ) ) ) (and (agent_holds ?h) (in_motion bed) ) ) (open ?h) ) (not (agent_holds ?h) ) ) )
          (hold (on ?h ?h) )
        )
      )
    )
    (forall (?c4 - hexagonal_bin)
      (and
        (preference throwToDrawerOrBin
          (exists (?o2 - golfball ?c2 - hexagonal_bin)
            (then
              (once (on ?c4 ?c2) )
              (hold (or (not (in_motion ?c4) ) (on ?c2 ?c4) ) )
              (once (and (agent_holds ?c2) (in ?c4 ?c2) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (total-time) (+ 3 (count-once watchOnShelf:yellow) )
    )
    (or
      (< (* (- (+ (- (external-forall-maximize (* (+ 10 5 (count-once-per-objects watchOnShelf:golfball:golfball) (- (count throwToDrawerOrBin:hexagonal_bin:dodgeball) )
                      (count-once-per-objects throwToDrawerOrBin:pink_dodgeball)
                      (+ (external-forall-maximize (count watchOnShelf:dodgeball) ) 5 2 5 )
                    )
                    (+ (count-once watchOnShelf) 2 )
                  )
                )
              )
              5
            )
          )
          1
        )
        (count-once-per-objects watchOnShelf:doggie_bed)
      )
      (= (* 1 (count watchOnShelf:red_pyramid_block:cube_block) )
        (total-time)
      )
    )
  )
)
(:scoring
  (* 5 2 )
)
)



(define (game game-id-124) (:domain many-objects-room-v1)
(:setup
  (forall (?c - building)
    (and
      (game-conserved
        (in bed ?c)
      )
      (game-conserved
        (forall (?r2 - (either cube_block alarm_clock))
          (and
            (and
              (touch ?c ?r2)
              (agent_holds ?c)
            )
            (and
              (in_motion ?c)
              (in_motion rug)
              (is_setup_object agent)
              (agent_holds ?r2)
            )
          )
        )
      )
      (game-optional
        (agent_holds ?c)
      )
      (and
        (exists (?b3 ?b2 - color)
          (and
            (game-conserved
              (and
                (not
                  (in_motion ?b2)
                )
                (< 1 (distance ?b3 ?c))
                (in ?b3 ?c)
              )
            )
            (game-optional
              (and
                (and
                  (in_motion ?b3)
                  (agent_holds ?b3)
                )
                (same_color ?c upside_down)
              )
            )
          )
        )
      )
      (game-conserved
        (not
          (not
            (not
              (not
                (agent_holds bridge_block)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectInBuilding
      (exists (?c2 - cube_block)
        (then
          (once (in_motion ?c2) )
          (once (same_object ?c2 ?c2) )
          (once (agent_holds desk) )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (total-time) )
)
(:scoring
  (count objectInBuilding:hexagonal_bin)
)
)



(define (game game-id-125) (:domain medium-objects-room-v1)
(:setup
  (exists (?b5 - building)
    (game-conserved
      (equal_z_position bed ?b5)
    )
  )
)
(:constraints
  (and
    (preference dodgeballBouncesOnceToDoggieBed
      (exists (?b4 - dodgeball)
        (at-end
          (exists (?b - ball ?c - desk_shelf ?b - hexagonal_bin)
            (agent_holds ?b)
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (not
      (not
        (and
          (>= 7 (* (count-once-per-objects dodgeballBouncesOnceToDoggieBed:beachball) 18 )
          )
        )
      )
    )
    (not
      (>= (total-score) (total-score) )
    )
  )
)
(:scoring
  (count dodgeballBouncesOnceToDoggieBed:side_table)
)
)



(define (game game-id-126) (:domain medium-objects-room-v1)
(:setup
  (forall (?r1 - (either desktop dodgeball floor))
    (exists (?r - hexagonal_bin)
      (game-optional
        (and
          (in_motion ?r)
          (and
            (agent_holds ?r1)
            (and
              (not
                (touch ?r ?r)
              )
              (and
                (exists (?t2 - hexagonal_bin)
                  (on ?r1 ?r)
                )
                (agent_holds ?r1)
              )
            )
          )
          (not
            (in_motion bed)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference failedThrowAttempt
      (exists (?ob - building ?o1 - hexagonal_bin ?h - cube_block ?d - ball)
        (then
          (once (or (in_motion ?d) (and (and (and (or (on ?d ?d) (in ?d ?d) ) (rug_color_under ?d ?d) ) (on ?d floor) ) (in_motion ?d) ) (and (not (in_motion ?d) ) (in ?d ?d) ) ) )
          (once (not (not (and (in agent ?d) (not (and (not (in_motion ?d) ) (agent_holds ?d) (toggled_on ?d) ) ) ) ) ) )
        )
      )
    )
    (preference ballThrownFromRug
      (exists (?h - hexagonal_bin)
        (then
          (hold (in_motion ?h) )
          (hold (in ?h ?h) )
          (once (adjacent ?h door) )
        )
      )
    )
  )
)
(:terminal
  (<= (* (+ 3 50 )
      5
    )
    (total-time)
  )
)
(:scoring
  (* 3 (count failedThrowAttempt:dodgeball) )
)
)



(define (game game-id-127) (:domain many-objects-room-v1)
(:setup
  (not
    (and
      (forall (?t ?tb - ball)
        (game-optional
          (in_motion ?tb)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToChair
      (exists (?r - dodgeball)
        (then
          (once (in_motion ?r) )
          (hold (same_type ?r ?r) )
          (once (agent_holds ?r) )
        )
      )
    )
    (forall (?d ?b5 - shelf)
      (and
        (preference dodgeballThrownToBinFromDesk
          (exists (?l - cube_block ?c2 - cube_block)
            (at-end
              (and
                (and
                  (not
                    (in_motion ?d)
                  )
                  (not
                    (not
                      (not
                        (adjacent_side ?b5 ?c2 ?d)
                      )
                    )
                  )
                )
                (in ?b5 ?d)
              )
            )
          )
        )
        (preference throwAttempt
          (exists (?b3 - dodgeball ?p - tall_cylindrical_block)
            (then
              (once (in_motion ?b5) )
              (once (in_motion ?p) )
            )
          )
        )
        (preference smallItemsInPlace
          (exists (?w1 - curved_wooden_ramp ?w2 - building)
            (then
              (hold (not (on ?d ?d) ) )
              (hold (in_motion ?b5) )
              (once (same_color ?d ?b5) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (count throwAttempt:beachball) )
)
(:scoring
  (* 2 (* 2 (+ (count smallItemsInPlace:red_pyramid_block:red_pyramid_block) 6 )
    )
  )
)
)



(define (game game-id-128) (:domain many-objects-room-v1)
(:setup
  (exists (?c - hexagonal_bin)
    (and
      (game-optional
        (on ?c ?c)
      )
    )
  )
)
(:constraints
  (and
    (forall (?b10 - hexagonal_bin)
      (and
        (preference dodgeballHitsBinBottom
          (exists (?o2 - cube_block)
            (then
              (once (faces ?b10 ?b10) )
              (once (toggled_on ?b10) )
              (once (in_motion ?o2) )
            )
          )
        )
        (preference throwKnocksBlock
          (at-end
            (and
              (< (distance ?b10 agent) 6)
              (in_motion desk)
              (in ?b10 ?b10)
            )
          )
        )
        (preference throwToDrawerOrBin
          (exists (?b1 - hexagonal_bin)
            (then
              (hold-while (agent_holds ?b10) (in_motion ?b10) )
              (hold (on blue bed) )
              (once (on ?b10 ?b1) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) 10 )
)
(:scoring
  (* (count dodgeballHitsBinBottom:purple) (+ (count throwToDrawerOrBin:dodgeball) (external-forall-minimize (count throwKnocksBlock:golfball:yellow_pyramid_block) ) )
  )
)
)



(define (game game-id-129) (:domain few-objects-room-v1)
(:setup
  (exists (?l - hexagonal_bin ?r - curved_wooden_ramp)
    (game-conserved
      (agent_holds bridge_block)
    )
  )
)
(:constraints
  (and
    (forall (?s - hexagonal_bin ?h - teddy_bear ?c - (either cellphone cylindrical_block))
      (and
        (preference throwBallToDoggieBed
          (exists (?h ?b - dodgeball ?b2 - dodgeball)
            (at-end
              (in_motion ?c)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (total-score) (total-score) )
    (>= 1 (* 2 (count-same-positions throwBallToDoggieBed) )
    )
  )
)
(:scoring
  (* (count throwBallToDoggieBed:block:green) (count-once-per-external-objects throwBallToDoggieBed:rug:beachball) )
)
)



(define (game game-id-130) (:domain medium-objects-room-v1)
(:setup
  (exists (?c4 ?d ?o2 ?f ?d - shelf)
    (game-conserved
      (agent_holds ?c4)
    )
  )
)
(:constraints
  (and
    (preference otherObjectsOnDeskShelf
      (exists (?o2 - (either alarm_clock desktop bridge_block) ?s - doggie_bed ?c2 - shelf ?g ?g - cylindrical_block)
        (then
          (hold (not (adjacent ?g ?g) ) )
          (once (not (in_motion bed) ) )
          (hold (in_motion ?g) )
        )
      )
    )
    (forall (?d - curved_wooden_ramp)
      (and
        (preference cubeBlockThrownToTopShelf
          (exists (?p - wall ?c - dodgeball)
            (then
              (once (exists (?h - dodgeball) (not (on ?d ?c) ) ) )
              (hold (in_motion bridge_block) )
              (once (< (distance ?c floor) (distance ?d ?c)) )
            )
          )
        )
        (preference dodgeballThrownToBinFromDesk
          (exists (?w2 - (either cellphone golfball) ?h - triangular_ramp)
            (at-end
              (agent_holds ?h)
            )
          )
        )
        (preference objectToBinOnFirstTry
          (exists (?b8 - yellow_cube_block ?w2 - chair)
            (at-end
              (not
                (agent_holds ?d)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= (+ 5 (count-once-per-objects dodgeballThrownToBinFromDesk:yellow_pyramid_block) )
    (- (+ (* 3 (* (+ (* (+ (count-once-per-objects objectToBinOnFirstTry:yellow) (count dodgeballThrownToBinFromDesk:golfball:beachball) )
              )
              (* (+ 10 40 )
                (- (+ (* (external-forall-maximize (count objectToBinOnFirstTry:dodgeball) ) (* (* (* (count objectToBinOnFirstTry:blue_dodgeball) (external-forall-maximize (>= 8 (count otherObjectsOnDeskShelf:dodgeball) )
                            )
                          )
                          (count-once-per-objects cubeBlockThrownToTopShelf:dodgeball)
                        )
                        (+ (* 10 (count-once dodgeballThrownToBinFromDesk:wall:dodgeball) )
                          (* 4 10 )
                        )
                      )
                    )
                    (< 0 (count cubeBlockThrownToTopShelf:beachball) )
                  )
                )
              )
            )
            1
            (* 9 3 (* (count otherObjectsOnDeskShelf:green) 3 )
              (+ (* (count cubeBlockThrownToTopShelf:yellow_cube_block) 6 )
                (* (count-once cubeBlockThrownToTopShelf:pink) (count dodgeballThrownToBinFromDesk:basketball:blue_dodgeball) )
                (* 5 )
              )
            )
            (count objectToBinOnFirstTry:hexagonal_bin)
          )
        )
        (* (count-once objectToBinOnFirstTry:pink_dodgeball) 30 )
      )
    )
  )
)
(:scoring
  (= 10 (count-once-per-objects otherObjectsOnDeskShelf:hexagonal_bin:dodgeball) )
)
)



(define (game game-id-131) (:domain medium-objects-room-v1)
(:setup
  (exists (?r1 - chair)
    (exists (?b - ball)
      (game-conserved
        (agent_crouches )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballFromRugToBin
      (exists (?d2 - curved_wooden_ramp ?tb - hexagonal_bin)
        (then
          (hold (not (on desk ?tb) ) )
          (once (agent_holds agent) )
        )
      )
    )
    (forall (?b2 - hexagonal_bin)
      (and
        (preference smallObjectThrownToBed
          (exists (?h - building)
            (then
              (hold (same_type room_center ?b2) )
              (hold-while (and (and (and (and (in_motion agent) (in agent ?h) ) (> 8 3) ) ) (not (in ?b2 ?b2) ) ) (in agent ?h) )
              (once (on ?h ?h) )
              (once (agent_holds ?h) )
            )
          )
        )
        (preference cubeThrownToBin
          (exists (?c2 - hexagonal_bin ?o - cube_block)
            (then
              (once (not (not (not (and (in_motion ?o) (on ?b2 ?b2) ) ) ) ) )
              (hold (agent_holds ?b2) )
              (hold-while (not (agent_holds ?b2) ) (game_start ) )
            )
          )
        )
      )
    )
    (preference cubeBlockThrownToTopShelf
      (exists (?d - building)
        (at-end
          (in ?d ?d)
        )
      )
    )
  )
)
(:terminal
  (>= 4 (total-score) )
)
(:scoring
  (count smallObjectThrownToBed:pink)
)
)



(define (game game-id-132) (:domain few-objects-room-v1)
(:setup
  (exists (?w1 - triangular_ramp)
    (game-optional
      (and
        (exists (?t1 - block ?d ?ob - dodgeball)
          (agent_holds ?d)
        )
        (and
          (adjacent ?w1 agent)
          (< (distance ?w1 ?w1) (distance ?w1 desk))
          (and
            (agent_holds ?w1)
            (< 1 1)
            (game_start )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectMoved
      (exists (?r - dodgeball)
        (then
          (hold (not (agent_holds ?r) ) )
          (once (agent_holds ?r) )
          (once (equal_z_position ?r ?r) )
        )
      )
    )
    (preference dodgeballHitsBin
      (exists (?g - (either dodgeball lamp book) ?l - hexagonal_bin ?o5 - triangular_ramp ?c1 - building ?l1 - beachball)
        (then
          (once (and (not (agent_holds ?l1) ) (not (on ?l1 ?l1) ) ) )
          (once (touch ?l1 ?l1) )
          (hold (and (and (< 1 (distance_side ?l1 agent desk)) (agent_holds ?l1) (same_color desk ?l1) ) (open ?l1) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (<= (* (count-once-per-external-objects dodgeballHitsBin:dodgeball) (count dodgeballHitsBin:blue_pyramid_block) )
      (count-once-per-external-objects dodgeballHitsBin:doggie_bed:hexagonal_bin)
    )
    (and
      (>= (* (count-once dodgeballHitsBin:red) (count objectMoved:white) )
        (total-time)
      )
      (or
        (<= (- 30 )
          (total-score)
        )
        (< (count-once-per-objects dodgeballHitsBin:golfball) (count-once dodgeballHitsBin:tan) )
      )
    )
  )
)
(:scoring
  (+ (* (count objectMoved:basketball) (count dodgeballHitsBin:dodgeball:pink_dodgeball) )
    50
  )
)
)



(define (game game-id-133) (:domain many-objects-room-v1)
(:setup
  (exists (?ob - game_object ?o - ball ?tb - block ?d - cube_block)
    (and
      (game-conserved
        (and
          (> (distance ?d agent) 3)
          (agent_holds agent)
          (in_motion ?d)
          (and
            (on ?d ?d)
            (not
              (< (distance ?d ?d) (building_size ?d))
            )
            (not
              (and
                (exists (?b - hexagonal_bin)
                  (in ?d ?b)
                )
                (not
                  (game_over )
                )
              )
            )
          )
        )
      )
      (game-conserved
        (in side_table ?d)
      )
      (game-optional
        (in_motion ?d)
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballHitsPillowWithoutTouchingBlock
      (exists (?tb - hexagonal_bin)
        (then
          (once (agent_holds agent) )
          (hold-while (in_motion ?tb) (exists (?o - (either golfball yellow_cube_block) ?b - teddy_bear ?h - hexagonal_bin ?g - cube_block) (in_motion brown) ) (same_color ?tb ?tb) (not (in ?tb pink) ) )
          (hold-while (agent_holds ?tb) (in_motion ?tb) )
        )
      )
    )
  )
)
(:terminal
  (= 6 (count-once-per-objects dodgeballHitsPillowWithoutTouchingBlock:beachball:dodgeball) )
)
(:scoring
  (- 4 )
)
)



(define (game game-id-134) (:domain many-objects-room-v1)
(:setup
  (exists (?w1 - red_dodgeball)
    (exists (?o2 - dodgeball)
      (game-optional
        (in_motion agent)
      )
    )
  )
)
(:constraints
  (and
    (preference ballRolledOnRampToRug
      (exists (?b - (either golfball cellphone chair))
        (at-end
          (not
            (agent_holds ?b)
          )
        )
      )
    )
    (forall (?x - triangular_ramp ?t - ball ?h - wall ?b2 ?c ?h - doggie_bed)
      (and
        (preference throwAttempt
          (exists (?b - dodgeball)
            (then
              (once (or (in ?h ?c) (and (and (in_motion rug) (opposite agent ?b2) ) (in_motion ?b2) ) ) )
              (once (agent_holds ?b2) )
              (hold (and (not (and (and (not (forall (?g ?h - (either main_light_switch hexagonal_bin) ?d - (either basketball key_chain cellphone)) (or (in_motion ?h) (touch ?d ?b) ) ) ) (and (< (distance_side ?h ?b ?b2) 3) (and (in_motion ?b2) (in_motion ?h) ) ) ) (in_motion ?b) ) ) (not (agent_holds ?h) ) (and (and (open ?b2) (in ?b rug) ) (< (distance ?b ?b2) (distance ?b ?b)) ) ) )
            )
          )
        )
        (preference throwAttemptKnocksBlock
          (exists (?g - (either cylindrical_block golfball) ?c3 - dodgeball ?t - hexagonal_bin)
            (at-end
              (agent_holds ?t)
            )
          )
        )
        (preference objectsHidden
          (exists (?b - dodgeball)
            (then
              (once (> 3 3) )
              (once (agent_holds ?h) )
              (once (rug_color_under ?h ?h) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (+ (count ballRolledOnRampToRug:dodgeball) (count-once-per-objects throwAttemptKnocksBlock:red:golfball) )
      (* 10 3 )
    )
    50
  )
)
(:scoring
  (count-increasing-measure throwAttemptKnocksBlock:basketball)
)
)



(define (game game-id-135) (:domain few-objects-room-v1)
(:setup
  (exists (?h - doggie_bed ?s - cube_block)
    (exists (?b - hexagonal_bin)
      (and
        (and
          (forall (?p ?h ?b2 ?d - pyramid_block ?t ?b - pillow)
            (game-conserved
              (not
                (= 5 6)
              )
            )
          )
          (forall (?t2 - cylindrical_block ?b ?c3 - hexagonal_bin ?p - hexagonal_bin)
            (forall (?g - hexagonal_bin)
              (exists (?d - ball)
                (game-optional
                  (in ?d ?b)
                )
              )
            )
          )
        )
        (exists (?o1 - golfball)
          (game-conserved
            (= (distance floor ?s) (distance ?s ?s))
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?b - game_object)
        (then
          (once (same_color ?b ?b) )
          (hold (agent_crouches ) )
          (hold (game_over ) )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (count throwAttempt:yellow_pyramid_block) )
)
(:scoring
  (count-longest throwAttempt:tan)
)
)



(define (game game-id-136) (:domain many-objects-room-v1)
(:setup
  (forall (?b - dodgeball ?w2 - building)
    (game-conserved
      (above ?w2 ?w2)
    )
  )
)
(:constraints
  (and
    (preference throwAttemptKnocksBlock
      (exists (?b2 - cylindrical_block)
        (then
          (hold (object_orientation ?b2 ?b2) )
          (once (< 0 (distance room_center ?b2)) )
          (hold (or (adjacent_side agent ?b2 ?b2) ) )
        )
      )
    )
    (forall (?r - drawer ?c - hexagonal_bin)
      (and
        (preference pyramidBlockAtopTowerAtEnd
          (exists (?t2 - dodgeball)
            (then
              (once (>= 2 (distance agent ?c)) )
              (hold (> (distance ?t2 ?t2) (distance_side ?t2 room_center ?t2)) )
              (once (same_color ?t2 ?c) )
            )
          )
        )
        (preference ballThrownThroughRampAndBlocksToBin
          (exists (?c - (either yellow_cube_block book yellow_cube_block dodgeball) ?h - building)
            (then
              (once (not (in room_center ?c) ) )
              (once (agent_holds ?c) )
              (once (= (distance ?h ?c) 1) )
            )
          )
        )
        (preference ballDroppedInBin
          (exists (?h - dodgeball ?h - ball)
            (then
              (hold-while (touch ?h door) (not (and (and (and (not (in ?h ?c) ) (exists (?c1 ?w2 ?l3 ?p1 ?d ?o - block) (in_motion ?l3) ) ) ) (faces ?h door) (in ?h back) (adjacent ?h ?h) (on ?c ?h) (in ?h room_center) (and (agent_holds desk) (or (and (not (in_motion ?c) ) (not (on rug ?c) ) ) (exists (?b - dodgeball) (and (equal_x_position agent ?b) (agent_holds ?h) ) ) ) ) ) ) )
              (once (agent_holds agent) )
              (once (in ?c ?h) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< (total-score) 3 )
)
(:scoring
  (+ 2 3 )
)
)



(define (game game-id-137) (:domain medium-objects-room-v1)
(:setup
  (exists (?d1 - pillow)
    (game-conserved
      (agent_holds agent)
    )
  )
)
(:constraints
  (and
    (forall (?f - dodgeball)
      (and
        (preference ballRolledOnRampToRug
          (exists (?c - dodgeball ?db - block ?b - hexagonal_bin ?b1 - cylindrical_block)
            (then
              (once (in ?b1 floor) )
              (hold (= (distance ?b1 ?b1) (distance ?f ?f)) )
              (hold (and (not (in_motion ?b1) ) (agent_holds ?b1) ) )
            )
          )
        )
        (preference basketMadeFromRug
          (then
            (hold (same_color ?f ?f) )
            (hold (and (and (and (in_motion room_center) (adjacent_side ?f ?f ?f) (same_type ?f rug) ) (and (between ?f ?f bed) (not (in_motion ?f) ) (in ?f ?f) ) ) (adjacent_side agent agent ?f) ) )
            (hold (< 1 1) )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count ballRolledOnRampToRug:green:tan) (total-score) )
    (>= 6 (total-score) )
  )
)
(:scoring
  (* (external-forall-maximize (= (* 180 3 )
        (count-once-per-objects basketMadeFromRug:dodgeball)
        2
      )
    )
    (+ (* 15 50 )
      (count ballRolledOnRampToRug:green)
    )
  )
)
)



(define (game game-id-138) (:domain few-objects-room-v1)
(:setup
  (exists (?s - hexagonal_bin ?b5 - (either cellphone dodgeball))
    (game-optional
      (on bed ?b5)
    )
  )
)
(:constraints
  (and
    (preference ballDroppedInBin
      (exists (?b6 - block)
        (then
          (once (agent_holds ?b6) )
          (hold (agent_holds agent) )
          (once (in_motion ?b6) )
        )
      )
    )
    (forall (?o3 - dodgeball)
      (and
        (preference blockCorrectlyPicked
          (exists (?o2 - blue_cube_block)
            (at-end
              (agent_holds ?o2)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (count blockCorrectlyPicked:basketball) 30 )
  )
)
(:scoring
  (count ballDroppedInBin:basketball:orange)
)
)



(define (game game-id-139) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (exists (?l1 - building)
      (rug_color_under ?l1 ?l1)
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?c - game_object ?h - block ?b - hexagonal_bin)
        (then
          (hold (in ?b ?b) )
          (once (in_motion ?b) )
        )
      )
    )
    (preference golfballLandsInBinThroughRamp
      (exists (?tb - desk_shelf)
        (then
          (hold (in_motion ?tb) )
          (once (not (agent_holds pillow) ) )
          (hold-while (on ?tb ?tb) (agent_holds ?tb) )
        )
      )
    )
    (preference teddyBearHitsBall
      (exists (?l2 - triangular_ramp ?p1 ?h ?g - teddy_bear)
        (at-end
          (not
            (same_color ?h ?g)
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects golfballLandsInBinThroughRamp:blue_cube_block) (total-score) )
)
(:scoring
  (> (* 3 15 )
    3
  )
)
)



(define (game game-id-140) (:domain few-objects-room-v1)
(:setup
  (forall (?b - teddy_bear)
    (exists (?ob - hexagonal_bin ?b - hexagonal_bin ?b2 - (either doggie_bed dodgeball))
      (game-conserved
        (not
          (and
            (on ?b ?b2)
            (not
              (in_motion ?b)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference pinkObjectMovedToRoomCenter
      (exists (?d2 - chair)
        (then
          (once (in_motion ?d2) )
          (once (in_motion ?d2) )
          (once (and (adjacent rug ?d2) (in ?d2 ?d2) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* (* (> (count pinkObjectMovedToRoomCenter:cylindrical_block) (* 50 2 (< (* 2 (external-forall-minimize (count-once-per-external-objects pinkObjectMovedToRoomCenter:basketball) ) (> (count-once-per-objects pinkObjectMovedToRoomCenter:golfball) (count pinkObjectMovedToRoomCenter:pink) )
                  (count-once-per-objects pinkObjectMovedToRoomCenter:hexagonal_bin)
                  (count-increasing-measure pinkObjectMovedToRoomCenter)
                )
                (* (count-once-per-objects pinkObjectMovedToRoomCenter:red) 5 )
              )
              (-
                (+ (= (* 20 10 (> 8 (external-forall-maximize (+ (count-once-per-objects pinkObjectMovedToRoomCenter:dodgeball:yellow) (count pinkObjectMovedToRoomCenter:side_table) )
                        )
                      )
                    )
                    (+ 2 (count-longest pinkObjectMovedToRoomCenter:dodgeball) )
                    (count pinkObjectMovedToRoomCenter:dodgeball)
                  )
                  2
                )
                6
              )
            )
          )
          1
        )
        12
      )
      10
    )
    (or
      (or
        (or
          (>= (count pinkObjectMovedToRoomCenter:red) 2 )
          (>= (* (- 2 )
              15
            )
            (* (- (count pinkObjectMovedToRoomCenter:blue_dodgeball) )
              5
            )
          )
          (>= 0.5 (count pinkObjectMovedToRoomCenter:pink_dodgeball) )
        )
        (>= (count pinkObjectMovedToRoomCenter:dodgeball) 6 )
      )
    )
  )
)
(:scoring
  (count-once-per-objects pinkObjectMovedToRoomCenter:basketball)
)
)



(define (game game-id-141) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (forall (?w2 - ball ?o - color)
        (exists (?b - dodgeball)
          (game-optional
            (in agent ?o)
          )
        )
      )
    )
    (forall (?l - (either beachball alarm_clock blue_cube_block) ?d - cylindrical_block ?s - hexagonal_bin ?b4 ?d ?b4 - (either yellow))
      (and
        (game-optional
          (same_type ?b4 ?b4)
        )
        (game-conserved
          (in_motion pillow)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - shelf ?l - (either golfball beachball pyramid_block) ?d ?o4 - (either blue_cube_block tall_cylindrical_block bridge_block))
      (and
        (preference itemInClosedDrawerAtEnd
          (exists (?c - (either pyramid_block laptop triangular_ramp))
            (then
              (once (on ?c ?o4) )
              (once (in_motion rug) )
              (hold (not (not (not (not (not (in_motion ?o4) ) ) ) ) ) )
            )
          )
        )
        (preference golfballInBinFromPillow
          (exists (?o2 - chair)
            (then
              (once (equal_z_position ?d ?d) )
              (once (and (exists (?o - blue_pyramid_block ?b10 - ball ?b6 - pillow) (agent_holds ?d) ) (and (not (and (in_motion ?d) (in_motion ?o2) ) ) (not (in_motion ?o2) ) (on ?d ?o4) (in_motion ?o2) ) (between ?o4 front_left_corner ?d) (agent_holds ?d) ) )
              (once (in_motion ?d) )
            )
          )
        )
      )
    )
    (forall (?b5 - hexagonal_bin)
      (and
        (preference cubeThrownToBin
          (exists (?b - wall)
            (then
              (hold (or (and (and (in_motion ?b) (broken ?b5) ) (= 1 (distance front ?b) 1) ) (and (or (agent_holds ?b) (on ?b room_center) (in_motion ?b5) (agent_holds ?b5) ) (and (exists (?h - curved_wooden_ramp ?b - shelf) (not (and (touch agent floor) (and (in ?b5 bed) (is_setup_object ?b5) ) ) ) ) (not (not (in_motion ?b) ) ) ) ) ) )
              (once (in_motion ?b) )
              (hold (game_over ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= 30 (total-score) )
)
(:scoring
  (count-once-per-objects golfballInBinFromPillow:pink_dodgeball)
)
)



(define (game game-id-142) (:domain medium-objects-room-v1)
(:setup
  (forall (?bl - hexagonal_bin ?ob - curved_wooden_ramp)
    (game-conserved
      (agent_holds ?ob)
    )
  )
)
(:constraints
  (and
    (preference itemsHidingScreens
      (exists (?g - game_object)
        (then
          (once (exists (?s - (either golfball cube_block) ?b - beachball) (and (not (not (not (toggled_on ?b) ) ) ) (in_motion green_golfball) ) ) )
          (hold (game_over ) )
          (once (in_motion ?g) )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (- (count-once-per-objects itemsHidingScreens:basketball:basketball) )
      (- 2 )
    )
  )
)
(:scoring
  (count-once-per-objects itemsHidingScreens:triangle_block)
)
)



(define (game game-id-143) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (exists (?c - curved_wooden_ramp)
      (on ?c front)
    )
  )
)
(:constraints
  (and
    (forall (?b - ball ?h - teddy_bear ?r2 - drawer)
      (and
        (preference beachballBouncedOffRamp
          (exists (?b - doggie_bed ?l2 - game_object)
            (then
              (once (on ?l2 ?r2) )
              (hold (and (= (distance ?l2 ?r2) 1) (not (not (not (< (distance ?l2 ?l2) (x_position ?l2)) ) ) ) (not (and (and (not (and (not (touch pink_dodgeball ?r2) ) (rug_color_under green ?l2) ) ) (and (same_type ?l2 ?l2) (on ?l2 ?l2) ) ) (< 1 (distance ?l2 ?l2)) ) ) (on ?l2 ?r2) ) )
              (hold (open ?r2) )
            )
          )
        )
      )
    )
    (preference ballThrownHitsAgent
      (exists (?o1 - dodgeball)
        (then
          (once (and (and (= (distance desk ?o1) (distance ?o1 ?o1)) (< (building_size block) 10) ) (exists (?d - shelf) (not (above ?d ?o1) ) ) ) )
          (hold (touch ?o1 ?o1) )
          (hold (and (in_motion ?o1) (not (on agent ?o1) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count ballThrownHitsAgent:golfball) (+ (count-once-per-objects beachballBouncedOffRamp:basketball) 1 )
  )
)
(:scoring
  (>= (= (count-once-per-objects ballThrownHitsAgent:green:red_pyramid_block) (* (* (count-once beachballBouncedOffRamp:cylindrical_block) 2 )
        (count-overlapping beachballBouncedOffRamp:beachball)
      )
    )
    3
  )
)
)



(define (game game-id-144) (:domain medium-objects-room-v1)
(:setup
  (exists (?o2 - (either rug basketball))
    (and
      (game-conserved
        (agent_holds pink_dodgeball)
      )
      (exists (?b - shelf ?h - hexagonal_bin ?h - block)
        (and
          (exists (?b7 - hexagonal_bin ?tb - hexagonal_bin)
            (game-conserved
              (touch ?tb ?h)
            )
          )
        )
      )
      (and
        (forall (?d1 - (either golfball top_drawer))
          (game-conserved
            (not
              (agent_holds ?d1)
            )
          )
        )
        (game-optional
          (and
            (agent_holds ?o2)
            (and
              (not
                (on ?o2 ?o2)
              )
              (not
                (adjacent ?o2 ?o2)
              )
            )
          )
        )
        (not
          (game-optional
            (agent_holds ?o2)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectToBinOnFirstTry
      (exists (?c - cube_block ?o - curved_wooden_ramp)
        (then
          (once (and (in_motion ?o) (game_over ) (same_object ?o ?o) (in_motion ?o) ) )
          (once (not (not (< (distance bed ?o) (distance green_golfball ?o)) ) ) )
          (once (not (and (not (and (not (agent_holds ?o) ) (in_motion ?o) ) ) (not (agent_holds ?o) ) ) ) )
        )
      )
    )
    (forall (?ob - dodgeball)
      (and
        (preference cubeBlockFromBedToShelf
          (exists (?l - building)
            (then
              (once (and (on ?ob ?ob) ) )
              (once (not (not (agent_holds ?l) ) ) )
              (hold (>= 4 1) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (total-time) (total-time) )
)
(:scoring
  (* 6 (* (* (* (count cubeBlockFromBedToShelf:basketball:cube_block) (count objectToBinOnFirstTry:beachball) (* (* (count-same-positions objectToBinOnFirstTry:dodgeball) (- 3 )
            )
            (count cubeBlockFromBedToShelf:dodgeball:basketball:brown)
          )
          (count-overlapping objectToBinOnFirstTry:dodgeball)
          0.5
          (count objectToBinOnFirstTry:doggie_bed)
        )
        (>= 100 (* (count-once cubeBlockFromBedToShelf:green) (* 5 5 3 )
          )
        )
      )
      (count objectToBinOnFirstTry:dodgeball)
    )
  )
)
)



(define (game game-id-145) (:domain few-objects-room-v1)
(:setup
  (exists (?t2 ?b ?h - dodgeball ?h - red_dodgeball)
    (or
      (game-conserved
        (and
          (forall (?tb - hexagonal_bin ?o2 - game_object ?o - (either blue_cube_block dodgeball tall_cylindrical_block) ?c - shelf)
            (= 9 1)
          )
          (and
            (agent_holds ?h)
            (agent_crouches )
          )
          (same_color desk ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballFromRugToBin
      (exists (?h - curved_wooden_ramp ?p ?b1 - beachball)
        (then
          (hold (adjacent pillow ?b1) )
          (once (exists (?b9 - dodgeball) (not (and (not (in_motion agent) ) (on ?p ?b9) ) ) ) )
          (once (agent_holds ?p) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 40 (count-once dodgeballFromRugToBin:basketball) )
    (>= (total-score) (count-once-per-objects dodgeballFromRugToBin:beachball) )
  )
)
(:scoring
  (count dodgeballFromRugToBin:dodgeball:dodgeball)
)
)



(define (game game-id-146) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?c1 - hexagonal_bin)
      (or
        (game-conserved
          (agent_holds ?c1)
        )
        (and
          (game-conserved
            (in_motion ?c1)
          )
        )
      )
    )
    (forall (?g - (either laptop dodgeball))
      (and
        (exists (?h - golfball ?c4 - hexagonal_bin)
          (and
            (and
              (game-conserved
                (and
                  (not
                    (not
                      (and
                        (agent_holds ?c4)
                        (on ?g ?g)
                        (in_motion desk)
                      )
                    )
                  )
                  (in_motion ?g)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballFromDeskToTarget
      (exists (?o4 - blinds)
        (then
          (hold (exists (?b2 - ball ?b6 ?b2 - game_object) (and (not (not (not (agent_holds ?b2) ) ) ) (< 6 (distance ?o4 ?o4)) ) ) )
          (hold (and (adjacent ?o4 ?o4) (exists (?d - golfball) (same_color floor pink_dodgeball) ) ) )
          (once (and (same_color ?o4 ?o4) (is_setup_object ?o4) ) )
        )
      )
    )
    (forall (?d2 - (either dodgeball hexagonal_bin))
      (and
        (preference blockPlacedInBuilding
          (exists (?c ?b2 - cube_block ?c5 - (either alarm_clock yellow_cube_block))
            (then
              (once (and (in_motion agent) (touch ?c5 ?c5) (not (= (x_position ?c5) 1) ) ) )
              (hold (game_start ) )
              (once (same_color ?d2 door) )
            )
          )
        )
        (preference ballDroppedInBin
          (exists (?d - hexagonal_bin)
            (then
              (once (and (not (adjacent ?d ?d2) ) (in ?d ?d) ) )
              (hold (in_motion ?d2) )
              (once (adjacent bed front) )
            )
          )
        )
      )
    )
    (preference throwToBin
      (exists (?b7 - book ?w1 - hexagonal_bin)
        (then
          (hold (and (agent_holds ?w1) (or (on agent ?w1) (agent_holds ?w1) ) (not (not (and (and (agent_holds ?w1) (and (and (in rug ?w1) (agent_holds ?w1) ) (in_motion ?w1) ) (exists (?c1 - game_object) (in_motion ?w1) ) ) (and (not (open ?w1) ) (or (same_color ?w1 ?w1) (not (agent_holds ?w1) ) ) ) ) ) ) (same_object ?w1 ?w1) (agent_holds ?w1) (not (not (agent_holds ?w1) ) ) (faces ?w1 ?w1) (agent_holds ?w1) (on ?w1 ?w1) (not (not (agent_holds desk) ) ) ) )
          (hold (in_motion ?w1) )
          (once (in_motion agent) )
        )
      )
    )
    (preference throwToDrawerOrBin
      (exists (?b2 - ball)
        (then
          (once (in_motion ?b2) )
          (once (not (and (in_motion agent) (< 6 (distance ?b2 ?b2)) ) ) )
          (once (in ?b2 ?b2) )
        )
      )
    )
    (preference tanObjectMovedToRoomCenter
      (exists (?o - wall)
        (then
          (hold (in_motion agent) )
          (hold (and (is_setup_object floor) ) )
          (once (not (and (not (adjacent ?o ?o) ) (not (agent_holds ?o) ) ) ) )
          (once (in_motion front) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (+ (* (* (- (* (count tanObjectMovedToRoomCenter:cube_block) (count-once-per-objects ballDroppedInBin:dodgeball) )
          )
          20
        )
        8
      )
      (count ballDroppedInBin:blue_pyramid_block:blue_pyramid_block)
    )
  )
)
(:scoring
  (count-measure throwToDrawerOrBin:dodgeball:dodgeball)
)
)



(define (game game-id-147) (:domain many-objects-room-v1)
(:setup
  (forall (?w1 - building)
    (exists (?d - dodgeball)
      (and
        (game-optional
          (in_motion ?d)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - hexagonal_bin)
      (and
        (preference cubeBlockFromBedToShelf
          (exists (?d - chair)
            (then
              (hold (rug_color_under ?d ?h) )
              (once (rug_color_under ?h ?d) )
              (once (in_motion ?d) )
            )
          )
        )
      )
    )
    (preference dodgeballFromRugToBin
      (exists (?o3 - (either golfball) ?ob - hexagonal_bin)
        (then
          (once (and (in_motion door) (and (and (agent_holds floor) (not (game_over ) ) ) (in_motion ?ob) ) ) )
          (once (not (and (and (in_motion ?ob) (on ?ob ?ob) ) (and (between ?ob ?ob ?ob) (on ?ob ?ob) ) ) ) )
          (once (and (and (and (in_motion ?ob) (not (exists (?b4 - hexagonal_bin) (in ?b4 ?ob) ) ) ) (touch ?ob ?ob) ) (not (exists (?b - (either hexagonal_bin main_light_switch) ?l2 - game_object ?s - (either bridge_block pyramid_block)) (in_motion agent) ) ) (agent_holds ?ob) ) )
        )
      )
    )
    (preference beachballBouncedOffRamp
      (exists (?o - doggie_bed)
        (then
          (hold (faces ?o ?o) )
          (once (agent_holds ?o) )
          (once (rug_color_under ?o ?o) )
        )
      )
    )
  )
)
(:terminal
  (or
    (= (+ (count cubeBlockFromBedToShelf:basketball:basketball:cylindrical_block) 10 )
      300
    )
    (= (count-overlapping cubeBlockFromBedToShelf:basketball:pink:dodgeball) (total-score) )
  )
)
(:scoring
  (= (* 5 10 (count beachballBouncedOffRamp:dodgeball) )
    30
    (+ (external-forall-maximize (count-once-per-external-objects dodgeballFromRugToBin:golfball) ) (external-forall-maximize (* (* 4 3 )
          5
          (+ (count-same-positions beachballBouncedOffRamp:yellow) (count-once dodgeballFromRugToBin:dodgeball) )
        )
      )
    )
  )
)
)



(define (game game-id-148) (:domain many-objects-room-v1)
(:setup
  (exists (?b - hexagonal_bin ?b - building)
    (forall (?d2 - dodgeball)
      (forall (?d ?w - ball)
        (game-conserved
          (exists (?l - triangular_ramp)
            (and
              (not
                (and
                  (and
                    (and
                      (in_motion agent)
                      (not
                        (in_motion ?w)
                      )
                    )
                    (and
                      (on ?d2 pink)
                      (< 0.5 (x_position upright))
                    )
                  )
                  (agent_holds ?l)
                )
              )
              (exists (?o - curved_wooden_ramp)
                (in_motion ?d)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwKnocksBlock
      (exists (?b6 - building ?t - red_dodgeball ?o - dodgeball)
        (at-end
          (in_motion ?o)
        )
      )
    )
    (preference blockPickedUp
      (exists (?d - hexagonal_bin)
        (then
          (once (not (in_motion ?d) ) )
          (hold (and (in_motion blue) (not (in_motion ?d) ) ) )
          (hold-while (agent_holds ?d) (rug_color_under bed ?d) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count blockPickedUp:golfball:pink) (* (count blockPickedUp:dodgeball:red) )
    )
  )
)
(:scoring
  (count blockPickedUp:dodgeball:dodgeball)
)
)



(define (game game-id-149) (:domain many-objects-room-v1)
(:setup
  (exists (?h - color)
    (and
      (game-conserved
        (< (distance ?h ?h) 1)
      )
      (game-conserved
        (and
          (agent_holds west_wall)
          (game_over )
        )
      )
      (and
        (exists (?b - (either cylindrical_block laptop ball) ?h - chair ?h - (either game_object cube_block basketball) ?b - hexagonal_bin ?bl - dodgeball)
          (game-conserved
            (in_motion ?h)
          )
        )
        (and
          (or
            (game-conserved
              (and
                (in_motion ?h)
                (and
                  (and
                    (and
                      (and
                        (not
                          (in_motion desk)
                        )
                        (game_over )
                        (not
                          (or
                            (in ?h ?h)
                            (not
                              (is_setup_object ?h)
                            )
                          )
                        )
                      )
                      (< 1 0)
                    )
                    (on door ?h)
                  )
                  (not
                    (or
                      (in ?h ?h)
                      (and
                        (on ?h agent)
                        (and
                          (not
                            (agent_holds blue)
                          )
                          (and
                            (and
                              (not
                                (adjacent_side pink_dodgeball brown ?h)
                              )
                              (faces ?h ?h)
                            )
                            (and
                              (same_object ?h agent)
                              (not
                                (not
                                  (not
                                    (on ?h ?h)
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballInOrOnBin
      (exists (?b2 - cylindrical_block)
        (then
          (hold (adjacent_side agent ?b2 ?b2) )
          (once (agent_holds desk) )
          (once (in_motion ?b2) )
        )
      )
    )
    (preference throwBallToDoggieBedOffWall
      (exists (?c - cube_block)
        (then
          (hold (agent_holds ?c) )
          (once (on desk bed) )
          (once (not (not (agent_holds ?c) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (external-forall-maximize (- 180 (count-once-per-objects throwBallToDoggieBedOffWall:pink_dodgeball) ) ) 2 )
)
(:scoring
  (* (count throwBallToDoggieBedOffWall) 3 )
)
)



(define (game game-id-150) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?w1 - hexagonal_bin)
      (game-conserved
        (in_motion room_center)
      )
    )
  )
)
(:constraints
  (and
    (forall (?c ?o - beachball)
      (and
        (preference throwAttemptKnocksBlock
          (exists (?d1 - cylindrical_block)
            (then
              (hold (or (in_motion ?d1) ) )
              (once (and (forall (?w - hexagonal_bin ?d - dodgeball) (and (and (agent_holds ?o) (= (distance ?d ?d) 1 1) ) (and (not (not (in_motion agent) ) ) (not (agent_holds ?d1) ) (in_motion ?o) (and (> 10 (distance ?o agent)) (and (in ?d ?c) (not (agent_holds ?o) ) ) ) ) ) ) (and (< 6 1) (agent_holds ?c) ) ) )
              (hold (agent_holds agent) )
              (once (exists (?b - building) (not (not (rug_color_under desk ?c) ) ) ) )
            )
          )
        )
        (preference itemInClosedDrawerAtEnd
          (exists (?h - tall_cylindrical_block)
            (then
              (once (in_motion ?h) )
              (once (adjacent ?h ?h) )
              (once (in ?c agent) )
            )
          )
        )
        (preference objectMovedRoomSide
          (then
            (hold (on ?c ?c) )
            (hold (adjacent ?c ?o) )
            (once (and (in_motion brown) (in ?o top_drawer) ) )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 3 8 )
)
(:scoring
  (count itemInClosedDrawerAtEnd:red)
)
)



(define (game game-id-151) (:domain many-objects-room-v1)
(:setup
  (exists (?c5 - hexagonal_bin)
    (exists (?o - (either book cd) ?b - dodgeball)
      (forall (?b - hexagonal_bin)
        (exists (?o2 - hexagonal_bin)
          (and
            (forall (?p - (either game_object blue_cube_block) ?g - (either pyramid_block cylindrical_block))
              (game-conserved
                (touch ?b ?o2)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference teddyBearHitsBall
      (exists (?b - ball)
        (then
          (hold-while (not (adjacent ?b ?b) ) (agent_holds ?b) (in_motion ?b) )
          (once (and (on ?b ?b) (not (and (and (exists (?d - block) (not (and (= 1 5) (agent_holds brown) ) ) ) (touch ?b ?b) (agent_holds ?b) ) (and (not (is_setup_object agent) ) (not (rug_color_under ?b ?b) ) ) ) ) ) )
          (once (adjacent ?b ?b) )
          (hold (agent_holds ?b) )
          (once (and (and (agent_holds ?b) (and (adjacent ?b ?b) (on ?b ?b) ) ) (not (same_object ?b ?b) ) (on ?b ?b) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (* (count-once-per-objects teddyBearHitsBall:basketball) (count teddyBearHitsBall:dodgeball:dodgeball) )
      2
    )
  )
)
(:scoring
  (count-once-per-objects teddyBearHitsBall:yellow:purple)
)
)



(define (game game-id-152) (:domain medium-objects-room-v1)
(:setup
  (forall (?c2 - desktop ?h - dodgeball ?h - hexagonal_bin)
    (game-optional
      (adjacent ?h ?h)
    )
  )
)
(:constraints
  (and
    (preference dodgeballHitsBin
      (exists (?b - doggie_bed ?r - (either desktop blue_cube_block))
        (at-end
          (same_type ?r ?r)
        )
      )
    )
    (preference beachballBouncedOffRamp
      (exists (?o4 - flat_block ?h - cube_block)
        (then
          (once (and (on ?h ?h) (and (agent_holds ?h) (touch ?h ?h) ) (on ?h agent) (> (distance ?h ?h) 0.5) (in ?h ?h) (same_type ?h ?h) (and (in_motion ?h) (agent_holds ?h) ) ) )
          (hold (and (exists (?t - cube_block ?o - (either watch chair cube_block)) (agent_holds ?o) ) (not (agent_holds ?h) ) ) )
          (once (opposite door ?h) )
        )
      )
    )
    (forall (?h - green_triangular_ramp)
      (and
        (preference gameObjectToBin
          (exists (?b2 - game_object ?l2 - (either pillow bridge_block))
            (then
              (once (in_motion ?l2) )
              (hold (adjacent ?l2 ?l2) )
              (once (touch ?h ?h) )
            )
          )
        )
        (preference ballThrownHitsAgent
          (exists (?p2 - flat_block)
            (then
              (once (adjacent ?p2 ?p2) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (* (count beachballBouncedOffRamp:beachball) (* 10 (count-once gameObjectToBin:beachball) 2 )
    )
    (total-score)
  )
)
(:scoring
  (count-overlapping ballThrownHitsAgent:dodgeball)
)
)



(define (game game-id-153) (:domain few-objects-room-v1)
(:setup
  (exists (?b ?d - hexagonal_bin)
    (and
      (and
        (and
          (forall (?t1 ?r - shelf)
            (and
              (game-optional
                (equal_z_position front ?t1)
              )
            )
          )
          (game-conserved
            (and
              (not
                (agent_holds ?d)
              )
              (on ?d ?b)
            )
          )
          (exists (?o1 - (either curved_wooden_ramp dodgeball laptop))
            (forall (?o - building)
              (exists (?b6 - curved_wooden_ramp ?h - game_object)
                (game-conserved
                  (touch ?d ?d)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwMissesBin
      (exists (?r - game_object ?p ?b ?l1 ?x - hexagonal_bin ?d - hexagonal_bin)
        (then
          (hold (not (and (adjacent_side ?d side_table ?d) (not (not (on pink ?d) ) ) (not (between ?d ?d ?d) ) ) ) )
          (hold (and (agent_holds ?d) (not (not (not (and (and (and (not (agent_holds ?d) ) (and (not (equal_z_position agent ?d) ) (in ?d ?d) ) ) (not (not (not (game_start ) ) ) ) (in_motion ?d) ) (agent_holds ?d) ) ) ) ) (same_type ?d ?d) ) )
          (once (opposite ?d ?d) )
        )
      )
    )
    (forall (?h - (either golfball beachball))
      (and
        (preference throwGolfballToBin
          (exists (?p2 - tall_cylindrical_block)
            (then
              (once (and (or (in ?h ?p2) ) (in_motion ?h) ) )
              (hold (and (not (agent_holds ?h) ) (in_motion ?h) ) )
              (once (not (agent_crouches ) ) )
            )
          )
        )
        (preference golfballInBinFromPillow
          (exists (?c4 - hexagonal_bin ?r2 - ball)
            (then
              (once (and (and (above ?h agent) (exists (?p3 - dodgeball) (and (in_motion ?p3) (and (adjacent ?r2 ?r2) (not (agent_holds agent) ) ) ) ) (in_motion ?h) ) (>= (distance blue ?r2) 1) ) )
              (hold (on ?h bed) )
              (once (on ?h ?h) )
            )
          )
        )
        (preference rollBallToBin
          (then
            (once (between ?h agent door) )
          )
        )
      )
    )
  )
)
(:terminal
  (> 5 (count golfballInBinFromPillow:beachball) )
)
(:scoring
  (* (< 2 (count golfballInBinFromPillow:dodgeball:dodgeball) )
    (count-once rollBallToBin:pink:triangle_block)
    (* 5 (count-once-per-objects rollBallToBin:doggie_bed) )
  )
)
)



(define (game game-id-154) (:domain many-objects-room-v1)
(:setup
  (forall (?g - hexagonal_bin)
    (and
      (game-conserved
        (not
          (or
            (same_color ?g ?g)
            (agent_holds ?g)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o - cube_block)
      (and
        (preference throwToBin
          (exists (?h - building)
            (then
              (hold (not (and (not (not (agent_holds ?h) ) ) (agent_holds ?o) ) ) )
              (once (in_motion pink_dodgeball) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 6 (total-score) )
)
(:scoring
  (count-once throwToBin:basketball)
)
)



(define (game game-id-155) (:domain few-objects-room-v1)
(:setup
  (forall (?h - hexagonal_bin ?d - hexagonal_bin)
    (game-optional
      (and
        (and
          (and
            (same_object agent agent)
            (in_motion ?d)
          )
          (adjacent top_shelf ?d)
        )
        (exists (?h - pyramid_block)
          (not
            (touch right ?h)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b1 - ball)
      (and
        (preference blockPickedUp
          (exists (?o - game_object ?bl ?h - ball)
            (then
              (once (= 1 1) )
              (once (agent_holds ?bl) )
              (once (not (not (not (in agent ?h) ) ) ) )
            )
          )
        )
      )
    )
    (forall (?f - hexagonal_bin ?p - hexagonal_bin)
      (and
        (preference beachballOnRug
          (exists (?o - cylindrical_block ?b - hexagonal_bin)
            (then
              (once (< 7 (distance ?b agent)) )
              (once (same_type ?p ?b) )
              (once (agent_holds ?b) )
            )
          )
        )
        (preference blockInTowerKnocked
          (exists (?c - wall ?g - dodgeball)
            (at-end
              (in ?g bed)
            )
          )
        )
        (preference bookOnDeskShelf
          (exists (?p - hexagonal_bin ?o1 - curved_wooden_ramp)
            (then
              (once (in_motion ?p) )
              (once (not (not (or (on agent desk) ) ) ) )
              (once (same_type ?o1 ?o1) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (+ (* (count beachballOnRug:dodgeball) 10 )
        (count beachballOnRug:beachball)
        (count bookOnDeskShelf:doggie_bed)
      )
      (total-score)
    )
  )
)
(:scoring
  (- 20 )
)
)



(define (game game-id-156) (:domain medium-objects-room-v1)
(:setup
  (exists (?l3 - beachball)
    (game-optional
      (on ?l3 ?l3)
    )
  )
)
(:constraints
  (and
    (preference throwMovesBeachballWithoutKnockingTeddy
      (exists (?o - curved_wooden_ramp)
        (then
          (hold-while (adjacent_side agent brown ?o ?o) (in ?o ?o) )
          (once (on ?o ?o) )
          (once (and (not (not (is_setup_object ?o) ) ) (and (on ?o ?o) (not (and (in_motion ?o) (>= 1 (distance ?o desk)) ) ) ) ) )
        )
      )
    )
    (preference bigObjectThrownToBed
      (exists (?d - hexagonal_bin)
        (then
          (hold (in_motion room_center) )
          (once (in_motion ?d) )
          (hold (and (in_motion ?d) (broken door) (< (distance ?d agent) (distance front desk)) (in_motion ?d) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (total-time) (count throwMovesBeachballWithoutKnockingTeddy:blue_pyramid_block) )
    (>= (count-once bigObjectThrownToBed:dodgeball:pink) (count bigObjectThrownToBed:golfball) )
  )
)
(:scoring
  (count bigObjectThrownToBed:hexagonal_bin)
)
)



(define (game game-id-157) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (forall (?b - hexagonal_bin)
      (and
        (opposite ?b ?b)
        (object_orientation ?b ?b)
      )
    )
  )
)
(:constraints
  (and
    (preference baseBlockInTowerAtEnd
      (exists (?h - dodgeball)
        (then
          (once (not (in ?h ?h) ) )
          (once (in_motion blue) )
          (hold-while (and (exists (?h - cube_block ?h - (either laptop bridge_block alarm_clock)) (and (> 9 3) (not (exists (?d - dodgeball) (not (< (distance ?h agent) 2) ) ) ) ) ) (not (not (not (or (on ?h ?h) (in_motion ?h) ) ) ) ) ) (in_motion ?h) )
        )
      )
    )
    (preference cubeBlockThrowAttempt
      (exists (?w1 - dodgeball ?o ?t ?b ?d - ball ?t - red_dodgeball)
        (then
          (hold-while (in ?t desk) (same_type ?t rug) )
          (once (in_motion room_center) )
          (once (and (agent_holds ?t) (in ?t ?t) (< (distance bed desk) (distance ?t ?t)) ) )
        )
      )
    )
    (forall (?b - building ?h - hexagonal_bin ?p2 - dodgeball)
      (and
        (preference ballDroppedInBin
          (exists (?o - cube_block ?b ?l1 - (either ball cube_block))
            (then
              (once (and (in_motion ?p2) (in_motion ?l1) (not (between desk ?p2 floor) ) ) )
              (hold-while (adjacent front ?p2) (in_motion pink_dodgeball) )
              (once (on ?b ?b) )
            )
          )
        )
        (preference blockPickedUp
          (exists (?c - game_object)
            (then
              (once (in_motion ?c) )
              (once (in_motion agent) )
              (hold (on ?c floor) )
            )
          )
        )
        (preference thrownObjectHitsComputer
          (exists (?o3 - hexagonal_bin)
            (then
              (hold (not (agent_holds back) ) )
              (once (not (agent_holds ?o3) ) )
              (hold-while (on agent ?o3) (in_motion ?o3) (agent_holds ?o3) )
              (once (in_motion ?o3) )
            )
          )
        )
        (preference ballThrownThroughRampToBin
          (exists (?h - ball)
            (then
              (once (and (and (and (not (agent_holds ?p2) ) (not (in_motion ?h) ) ) (or (not (agent_holds blue) ) (and (and (on ?p2 ?p2) (on desk ?h) (in_motion ?h) (in ?p2 bed) (on ?h ?p2) (not (not (in_motion ?p2) ) ) (in_motion desk) (on ?h ?h) ) (in_motion ?h) ) (exists (?s ?c6 ?b ?t1 ?h - ball ?o - hexagonal_bin ?o - ball) (in_motion ?o) ) ) ) (agent_crouches ) ) )
              (once (between ?h ?h ?h) )
              (hold (above ?h agent) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects thrownObjectHitsComputer:green) 15 )
)
(:scoring
  (count-once-per-objects baseBlockInTowerAtEnd:basketball:yellow)
)
)



(define (game game-id-158) (:domain medium-objects-room-v1)
(:setup
  (exists (?c2 - hexagonal_bin)
    (game-conserved
      (agent_holds room_center)
    )
  )
)
(:constraints
  (and
    (preference tanObjectMovedToRoomCenter
      (exists (?g ?c - (either golfball) ?b - curved_wooden_ramp)
        (then
          (once (in_motion ?b) )
          (hold (in_motion ?b) )
          (hold (not (and (and (is_setup_object ?b) (is_setup_object bed) (adjacent_side ?b ?b front ?b) ) (and (in_motion bed) (on ?b ?b) ) ) ) )
        )
      )
    )
    (forall (?g - shelf)
      (and
        (preference cubeBlockInBuilding
          (exists (?c - doggie_bed)
            (then
              (hold (and (agent_holds ?g) (not (touch ?g ?c) ) (< (x_position room_center) 8) ) )
              (hold (and (agent_holds ?g) (and (in ?c ?g) (on desk ?g) ) (touch ?c ?g) ) )
              (once (and (in ?c rug) (and (in_motion ?g) (agent_holds ?g) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (+ (count-once-per-objects tanObjectMovedToRoomCenter:basketball) (count tanObjectMovedToRoomCenter:hexagonal_bin) (= (external-forall-maximize (* 1 2 5 (* (* (+ 5 (count cubeBlockInBuilding:yellow) (+ (count cubeBlockInBuilding) (count-once-per-objects cubeBlockInBuilding:golfball) )
                )
                (<= 3 (- 3 )
                )
              )
              (* 2 (* 30 (count tanObjectMovedToRoomCenter:beachball:purple) )
              )
              (+ (count-once-per-objects cubeBlockInBuilding:pink) (* (* (count-increasing-measure tanObjectMovedToRoomCenter) (+ (count cubeBlockInBuilding:green:pyramid_block) (count-same-positions tanObjectMovedToRoomCenter:pink_dodgeball) )
                  )
                  5
                )
              )
            )
            (+ 2 15 )
            (+ (- (count cubeBlockInBuilding:dodgeball:golfball) )
              4
              10
            )
          )
        )
      )
      (count cubeBlockInBuilding)
      (* (count tanObjectMovedToRoomCenter:golfball) 10 )
      1
    )
  )
)
(:scoring
  (count-once tanObjectMovedToRoomCenter:dodgeball)
)
)



(define (game game-id-159) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (exists (?w - cube_block ?c5 - doggie_bed)
        (exists (?r1 - (either yellow_cube_block desktop) ?bl - (either doggie_bed pillow))
          (and
            (game-optional
              (and
                (and
                  (and
                    (not
                      (agent_holds ?bl)
                    )
                    (and
                      (> 1 2)
                      (on ?bl ?c5)
                    )
                  )
                  (agent_holds ?c5)
                  (in ?c5 door)
                  (on ?c5 ?bl)
                )
                (and
                  (in_motion ?bl)
                  (agent_holds ?c5)
                )
                (on ?bl ?bl)
              )
            )
          )
        )
      )
      (exists (?p3 - hexagonal_bin)
        (or
          (forall (?d - flat_block)
            (game-conserved
              (rug_color_under agent ?d)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference golfballLandsInBinThroughRamp
      (exists (?s - desk_shelf ?s - game_object ?b5 - hexagonal_bin)
        (then
          (once (equal_z_position ?b5 desk) )
          (once (in_motion front) )
          (once (rug_color_under ?b5 ?b5) )
        )
      )
    )
  )
)
(:terminal
  (>= 8 (total-time) )
)
(:scoring
  (* (- (count-increasing-measure golfballLandsInBinThroughRamp) )
    (external-forall-maximize
      (count-once-per-objects golfballLandsInBinThroughRamp:dodgeball:hexagonal_bin)
    )
  )
)
)



(define (game game-id-160) (:domain many-objects-room-v1)
(:setup
  (forall (?c2 - ball)
    (game-conserved
      (and
        (agent_holds bed)
        (and
          (agent_holds ?c2)
          (in_motion ?c2)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballRolledOnRampToRug
      (exists (?r - curved_wooden_ramp)
        (then
          (hold (> (distance ?r ?r) 1) )
          (once (and (adjacent_side ?r ?r ?r agent) (and (and (agent_holds upside_down) (in_motion ?r) ) (on ?r ?r) ) ) )
          (hold (in bed ?r) )
        )
      )
    )
    (forall (?l3 - (either golfball doggie_bed cd cube_block))
      (and
        (preference failedThrowAttempt
          (exists (?r1 - shelf)
            (then
              (once (in_motion ?r1) )
              (once (in agent pink_dodgeball) )
            )
          )
        )
        (preference ballThrownToWallToAgent
          (exists (?d - building ?r2 - dodgeball)
            (at-end
              (agent_holds ?l3)
            )
          )
        )
        (preference golfballInBinFromPillow
          (exists (?o3 - teddy_bear)
            (then
              (once (between ?l3 ?l3 ?l3) )
              (once (not (in_motion ?o3) ) )
              (once (not (not (in_motion ?l3) ) ) )
            )
          )
        )
      )
    )
    (preference dodgeballFromBlockToBin
      (exists (?w2 - beachball)
        (then
          (hold (on ?w2 agent) )
          (hold (not (in_motion floor) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 2 4 )
  )
)
(:scoring
  (count ballThrownToWallToAgent:yellow)
)
)



(define (game game-id-161) (:domain few-objects-room-v1)
(:setup
  (exists (?p1 - hexagonal_bin)
    (game-conserved
      (is_setup_object room_center)
    )
  )
)
(:constraints
  (and
    (preference objectInBuilding
      (exists (?r - (either dodgeball floor))
        (then
          (once (not (game_start ) ) )
          (once (and (not (in_motion ?r) ) (exists (?w1 - beachball) (and (in ?w1 ?r) (in_motion green) ) ) ) )
          (once (agent_holds ?r) )
        )
      )
    )
  )
)
(:terminal
  (>= (count objectInBuilding:red) 15 )
)
(:scoring
  (- 3 )
)
)



(define (game game-id-162) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds front_left_corner)
  )
)
(:constraints
  (and
    (preference throwMissesBin
      (exists (?bl - hexagonal_bin)
        (at-end
          (equal_z_position ?bl ?bl)
        )
      )
    )
  )
)
(:terminal
  (or
    (> (count throwMissesBin:golfball:dodgeball) 40 )
    (not
      (<= 8 (count throwMissesBin:yellow:hexagonal_bin) )
    )
    (= (* (* (count-once throwMissesBin:hexagonal_bin) 3 )
        10
      )
      7
    )
  )
)
(:scoring
  (+ (< (count throwMissesBin:blue_dodgeball) 3 )
    (count throwMissesBin:hexagonal_bin:yellow)
  )
)
)



(define (game game-id-163) (:domain medium-objects-room-v1)
(:setup
  (exists (?o - dodgeball)
    (and
      (exists (?h - dodgeball)
        (and
          (and
            (game-optional
              (exists (?l4 - block ?d - game_object)
                (agent_holds ?h)
              )
            )
          )
        )
      )
      (game-conserved
        (and
          (or
            (in_motion ?o)
            (in_motion room_center)
          )
          (agent_holds ?o)
        )
      )
      (forall (?c2 - hexagonal_bin)
        (game-conserved
          (and
            (agent_holds ?c2)
            (agent_holds room_center)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference binKnockedOver
      (exists (?b - building)
        (at-end
          (and
            (and
              (on ?b ?b)
              (in_motion ?b)
            )
            (not
              (agent_holds desk)
            )
          )
        )
      )
    )
    (forall (?d - hexagonal_bin)
      (and
        (preference blockOnBlockInTowerAtEnd
          (exists (?b - (either pyramid_block cube_block main_light_switch hexagonal_bin cube_block dodgeball book))
            (then
              (once (< (distance ?d ?b) (distance ?d desk)) )
              (once (in_motion ?d) )
              (hold (and (in_motion ?b) (agent_holds pink_dodgeball) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (>= (+ 7 (- 4 )
        )
        (count-once-per-objects blockOnBlockInTowerAtEnd:alarm_clock)
      )
    )
  )
)
(:scoring
  (count-once-per-objects binKnockedOver:yellow)
)
)



(define (game game-id-164) (:domain medium-objects-room-v1)
(:setup
  (or
    (forall (?l ?b9 - building)
      (game-conserved
        (in_motion ?l)
      )
    )
    (exists (?o - dodgeball)
      (game-optional
        (on ?o ?o)
      )
    )
  )
)
(:constraints
  (and
    (preference blockToBinFromRug
      (exists (?s - building)
        (then
          (once (on ?s rug) )
          (hold (< (x_position ?s) 1) )
          (once (adjacent ?s ?s) )
        )
      )
    )
    (preference throwFromDoorToBin
      (exists (?b2 - (either main_light_switch curved_wooden_ramp))
        (then
          (once-measure (in_motion ?b2) (distance ?b2 desk) )
          (hold (object_orientation ?b2 ?b2) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= 100 (* (* (count-same-positions throwFromDoorToBin:golfball) (count throwFromDoorToBin:dodgeball) )
        (count-once-per-objects throwFromDoorToBin:pyramid_block:hexagonal_bin:hexagonal_bin)
        (count-once-per-objects blockToBinFromRug)
      )
    )
  )
)
(:scoring
  (* 1 (* 5 (count-increasing-measure throwFromDoorToBin:basketball:brown) )
  )
)
)



(define (game game-id-165) (:domain few-objects-room-v1)
(:setup
  (forall (?b - cube_block)
    (exists (?o4 - chair ?h - hexagonal_bin)
      (forall (?c5 - drawer)
        (game-optional
          (adjacent ?b ?b)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference bigObjectThrownToBed
      (exists (?d2 - hexagonal_bin)
        (then
          (hold (touch ?d2 ?d2) )
          (hold (on ?d2 bed) )
          (hold (toggled_on ?d2) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= 8 (+ 3 (* (count bigObjectThrownToBed:wall:pink) (count-once-per-objects bigObjectThrownToBed:hexagonal_bin) )
        2
      )
    )
  )
)
(:scoring
  (count bigObjectThrownToBed:dodgeball)
)
)



(define (game game-id-166) (:domain few-objects-room-v1)
(:setup
  (forall (?c2 - hexagonal_bin ?w1 - (either pen golfball))
    (game-conserved
      (and
        (and
          (agent_holds ?w1)
          (and
            (in_motion ?w1)
            (in ?w1 ?w1)
          )
          (on ?w1 ?w1)
        )
        (on rug ?w1)
        (and
          (in_motion ?w1)
          (agent_holds ?w1)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectToBinOnFirstTry
      (exists (?b10 - triangular_ramp)
        (then
          (once (same_color ?b10 agent) )
          (once (< 1 (distance ?b10 ?b10)) )
          (once (and (and (and (not (and (on ?b10 ?b10) (not (agent_holds ?b10) ) ) ) (agent_holds ?b10) ) (not (touch ?b10 ?b10) ) ) (in_motion ?b10) ) )
        )
      )
    )
    (preference failedThrowToBin
      (exists (?b8 - shelf ?t2 - curved_wooden_ramp)
        (then
          (hold (forall (?r - curved_wooden_ramp) (between ?r upright ?r) ) )
          (once (exists (?d - (either rug laptop)) (or (and (exists (?s - dodgeball) (on ?s ?d) ) (adjacent agent ?d) ) (and (not (and (in_motion agent) (object_orientation ?t2 ?d) ) ) (on rug side_table) (adjacent ?t2 ?t2) ) (agent_holds ?t2) ) ) )
          (once (forall (?h - wall) (and (and (on front ?h) (or (equal_x_position ?t2 ?h) (agent_holds ?h) ) ) (on ?t2 ?h) (in_motion ?h) (and (not (agent_holds ?t2) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (< (total-time) (* 10 (* (count-same-positions objectToBinOnFirstTry:basketball:hexagonal_bin) (count objectToBinOnFirstTry) )
    )
  )
)
(:scoring
  (count-once-per-objects objectToBinOnFirstTry:book)
)
)



(define (game game-id-167) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (agent_holds side_table)
  )
)
(:constraints
  (and
    (forall (?l - (either cylindrical_block wall) ?tb - dodgeball)
      (and
        (preference beachballBouncedOffRamp
          (exists (?l ?b - (either pillow ball))
            (then
              (hold (agent_holds ?tb) )
              (hold (same_type ?l ?l) )
              (once (opposite ?tb agent) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 2 (count-once-per-objects beachballBouncedOffRamp:pink) )
    (or
      (>= 3 (* (count-once-per-objects beachballBouncedOffRamp:golfball) 5 )
      )
      (not
        (>= (* 2 (count-once-per-objects beachballBouncedOffRamp:dodgeball) )
          2
        )
      )
    )
  )
)
(:scoring
  (count-once beachballBouncedOffRamp)
)
)



(define (game game-id-168) (:domain few-objects-room-v1)
(:setup
  (exists (?t - cube_block)
    (game-conserved
      (not
        (on ?t ?t)
      )
    )
  )
)
(:constraints
  (and
    (preference itemsBroken
      (exists (?l - (either golfball golfball dodgeball))
        (then
          (once (not (in_motion ?l) ) )
          (once (agent_holds ?l) )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (count itemsBroken:blue_dodgeball) )
)
(:scoring
  (count-overlapping itemsBroken:yellow:yellow_cube_block)
)
)



(define (game game-id-169) (:domain many-objects-room-v1)
(:setup
  (forall (?b8 - game_object)
    (exists (?h - game_object)
      (game-conserved
        (agent_holds ?b8)
      )
    )
  )
)
(:constraints
  (and
    (preference gameObjectToBin
      (exists (?h - (either floor beachball) ?d - hexagonal_bin)
        (then
          (once (in_motion ?d) )
          (hold (and (not (rug_color_under ?d ?d) ) (and (agent_holds ?d) (agent_holds pink_dodgeball) (in_motion ?d) (same_color ?d ?d) (adjacent_side ?d ?d desk) (same_color ?d rug) ) ) )
          (once (< (distance front ?d) 1) )
        )
      )
    )
    (forall (?b - block ?l4 ?s ?b ?b4 - doggie_bed ?b - dodgeball)
      (and
        (preference throwMovesBeachballWithoutKnockingTeddy
          (exists (?f - (either cylindrical_block pyramid_block watch))
            (then
              (hold (and (not (in agent ?b) ) (in ?b agent) ) )
              (hold (and (touch ?b ?f) ) )
              (hold (in_motion ?b) )
            )
          )
        )
        (preference dodgeballThrownToBin
          (exists (?l - ball)
            (at-end
              (and
                (adjacent room_center ?l)
                (in ?l ?l)
              )
            )
          )
        )
        (preference throwGolfballToBin
          (exists (?c - block ?b8 - shelf)
            (then
              (once (on green_golfball ?b8) )
              (once (and (exists (?b - (either dodgeball dodgeball)) (on ?b8 ?b) ) (in_motion desk) ) )
              (once (agent_holds ?b) )
            )
          )
        )
      )
    )
    (preference throwAttempt
      (exists (?r1 - doggie_bed)
        (then
          (once (not (adjacent pink ?r1) ) )
          (once (on ?r1 ?r1) )
          (hold (not (and (and (not (not (and (on ?r1 ?r1) (< 3 (distance ?r1 ?r1)) (and (agent_holds pink) (and (on ?r1 bed) (not (in_motion ?r1) ) (equal_x_position ?r1 ?r1) ) (forall (?d - cube_block ?bl - (either blue_cube_block book) ?o - hexagonal_bin) (agent_holds ?r1) ) ) (adjacent ?r1 ?r1) ) ) ) (and (exists (?o3 - (either beachball laptop cube_block)) (and (not (adjacent room_center ?o3) ) (and (exists (?h - ball) (forall (?b - blinds ?d - curved_wooden_ramp) (and (is_setup_object ?o3) (agent_holds agent) (not (on ?h agent) ) ) ) ) (in ?o3 bed) ) (adjacent_side drawer ?r1 ?r1) ) ) (in_motion ?r1) ) (exists (?o2 ?t2 - flat_block) (agent_holds ?t2) ) ) (touch ?r1 ?r1) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (= (count throwGolfballToBin:basketball) (* (count-increasing-measure throwAttempt:pink_dodgeball) (count throwGolfballToBin:green) 2 10 (* 8 9 (* (count-once-per-external-objects throwAttempt:basketball) (count throwAttempt:cylindrical_block) (count-once-per-objects throwMovesBeachballWithoutKnockingTeddy:rug) )
        )
        1
      )
    )
    (or
      (< (total-time) 1 )
      (>= (+ (* (* 18 (+ (* (* (* 0 5 (count gameObjectToBin:book) )
                    (* 1 (* 3 4 )
                    )
                  )
                  (- 4 )
                )
                6
              )
            )
            (count throwAttempt:basketball)
            (count-measure throwGolfballToBin:dodgeball)
            (count-once-per-objects gameObjectToBin:purple)
          )
        )
        (external-forall-maximize
          (count throwMovesBeachballWithoutKnockingTeddy)
        )
      )
    )
    (>= 4 (count-once-per-objects dodgeballThrownToBin:basketball:triangle_block) )
  )
)
(:scoring
  (= (- (count-once-per-objects gameObjectToBin:dodgeball:beachball) )
    50
  )
)
)



(define (game game-id-170) (:domain medium-objects-room-v1)
(:setup
  (forall (?b - dodgeball)
    (forall (?o - (either alarm_clock dodgeball cylindrical_block))
      (game-conserved
        (not
          (< 1 (distance ?b ?o))
        )
      )
    )
  )
)
(:constraints
  (and
    (preference cubeBlockThrownToTopShelf
      (exists (?h - color)
        (then
          (hold (agent_holds ?h) )
          (once (on ?h bed) )
          (once (and (agent_holds ?h) (on ?h agent) (adjacent agent ?h) ) )
        )
      )
    )
    (preference ballDroppedInBin
      (exists (?h - beachball)
        (then
          (once (touch ?h ?h) )
          (hold (not (< (x_position desk) (distance_side ?h ?h ?h ?h)) ) )
          (once (agent_holds ?h) )
        )
      )
    )
    (preference itemsHidingScreens
      (exists (?h ?d - red_pyramid_block)
        (then
          (once (in_motion ?h) )
          (once (exists (?h - hexagonal_bin ?h ?h - chair) (in_motion door) ) )
          (once (and (in_motion ?d) (in_motion ?h) (in ?h agent) (agent_holds ?h) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 10 9 )
)
(:scoring
  (+ (count-once ballDroppedInBin:dodgeball) (count cubeBlockThrownToTopShelf:pink_dodgeball:beachball) 4 )
)
)



(define (game game-id-171) (:domain few-objects-room-v1)
(:setup
  (forall (?d - hexagonal_bin)
    (exists (?g - triangular_ramp ?o - dodgeball)
      (and
        (game-optional
          (not
            (touch ?d ?o)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - red_dodgeball)
      (and
        (preference objectOnBed
          (exists (?h - block)
            (at-end
              (not
                (in_motion ?b)
              )
            )
          )
        )
        (preference throwAttempt
          (exists (?h ?d ?c ?o - building)
            (at-end
              (agent_holds ?d)
            )
          )
        )
      )
    )
    (preference ballInOrOnBin
      (exists (?b - ball)
        (then
          (once (on desk top_shelf) )
          (once (and (on ?b ?b) (in_motion desk) ) )
          (hold (in ?b ?b) )
        )
      )
    )
  )
)
(:terminal
  (< 15 (* 6 (count objectOnBed:dodgeball) )
  )
)
(:scoring
  (* (count ballInOrOnBin:dodgeball) 15 )
)
)



(define (game game-id-172) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?d2 - (either wall main_light_switch chair) ?h - building)
      (and
        (not
          (exists (?c4 - game_object ?b1 - (either book book))
            (exists (?w2 - (either pyramid_block blue_cube_block))
              (game-conserved
                (on ?b1 ?b1)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference castleBuilt
      (exists (?c - doggie_bed)
        (then
          (once (in_motion bed) )
          (once (and (not (and (agent_holds ?c) (and (not (agent_holds tan) ) (not (in_motion ?c) ) ) ) ) (in ?c ?c) ) )
          (once (and (not (object_orientation agent ?c) ) (not (on door ?c) ) ) )
        )
      )
    )
    (forall (?c - cylindrical_block)
      (and
        (preference failedThrowAttempt
          (exists (?o - block ?c3 - shelf)
            (at-end
              (and
                (adjacent ?c ?c)
                (same_object ?c3 ?c)
              )
            )
          )
        )
        (preference blockOnBlockInTowerAtEnd
          (exists (?h - (either book golfball))
            (at-end
              (= 2 (distance_side ?c ?h ?c))
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (<= (total-time) (count-shortest castleBuilt:dodgeball:pink) )
    (or
      (> (count castleBuilt:green) 8 )
      (<= 4 10 )
    )
  )
)
(:scoring
  (* (count-longest castleBuilt:green) (count-once-per-objects castleBuilt:pink_dodgeball) )
)
)



(define (game game-id-173) (:domain medium-objects-room-v1)
(:setup
  (forall (?r - hexagonal_bin)
    (game-conserved
      (in_motion ?r)
    )
  )
)
(:constraints
  (and
    (preference objectInBuilding
      (exists (?l3 - hexagonal_bin)
        (then
          (once (in_motion bed) )
          (hold (not (< 2 (distance agent ?l3)) ) )
          (once (agent_holds desk) )
          (hold (agent_holds ?l3) )
        )
      )
    )
    (forall (?s ?b3 - pillow)
      (and
        (preference throwAttempt
          (exists (?p1 - hexagonal_bin)
            (at-end
              (agent_holds ?s)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< 50 (count-once objectInBuilding:dodgeball) )
)
(:scoring
  (count throwAttempt:dodgeball:orange)
)
)



(define (game game-id-174) (:domain few-objects-room-v1)
(:setup
  (exists (?tb - block)
    (and
      (and
        (forall (?o - color ?r - cube_block)
          (forall (?h - block ?h - block)
            (game-conserved
              (and
                (touch ?r desk)
                (faces ?tb ?r)
              )
            )
          )
        )
        (and
          (not
            (and
              (forall (?b - cube_block)
                (and
                  (game-conserved
                    (not
                      (and
                        (not
                          (and
                            (faces ?tb left)
                            (agent_holds agent)
                            (> 5 4)
                          )
                        )
                        (< (distance_side pink_dodgeball ?b ?tb) 6)
                      )
                    )
                  )
                  (game-conserved
                    (rug_color_under ?tb ?b)
                  )
                )
              )
            )
          )
        )
        (exists (?h ?g - building ?r - game_object ?p - hexagonal_bin)
          (and
            (game-conserved
              (not
                (adjacent_side ?p ?tb ?tb)
              )
            )
            (and
              (game-conserved
                (in ?tb ?tb)
              )
            )
            (exists (?b3 - curved_wooden_ramp)
              (game-conserved
                (and
                  (not
                    (agent_holds ?p)
                  )
                  (in ?p ?p)
                )
              )
            )
          )
        )
      )
      (forall (?d2 - wall)
        (game-optional
          (not
            (adjacent ?tb ?d2)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c6 - dodgeball)
      (and
        (preference smallItemsInPlace
          (then
            (once (same_object ?c6 door) )
            (hold-while (open ?c6) (not (on ?c6 floor) ) )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (* 10 (- (count smallItemsInPlace:blue_dodgeball) )
      )
      (count smallItemsInPlace:beachball:pink_dodgeball)
    )
  )
)
(:scoring
  (count-overlapping smallItemsInPlace:golfball)
)
)



(define (game game-id-175) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds agent)
  )
)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?c3 ?ob - block)
        (then
          (once (or (and (< (distance agent ?c3) 1) (is_setup_object ?c3) ) (not (not (not (agent_holds ?c3) ) ) ) (and (in_motion ?ob) (in ?c3 ?ob) ) ) )
          (once (exists (?o1 - chair ?h ?r2 ?b ?b - (either cube_block wall golfball)) (and (agent_holds ?h) (in_motion ?r2) ) ) )
          (hold (agent_holds ?c3) )
        )
      )
    )
    (preference blockOnBlockInTowerAtEnd
      (exists (?db - hexagonal_bin ?h - pillow)
        (at-end
          (game_over )
        )
      )
    )
  )
)
(:terminal
  (>= (count throwBallToBin:dodgeball) (count-longest throwBallToBin:cube_block:hexagonal_bin) )
)
(:scoring
  (+ (* (count blockOnBlockInTowerAtEnd:yellow) (* (external-forall-maximize (count-once-per-objects throwBallToBin:dodgeball) ) (count-once-per-external-objects blockOnBlockInTowerAtEnd:golfball:dodgeball) )
    )
    (/
      3
      (* 5 (* (* (* (count throwBallToBin:orange:blue_dodgeball) (count-longest blockOnBlockInTowerAtEnd:green) )
            6
          )
          5
        )
      )
    )
  )
)
)



(define (game game-id-176) (:domain few-objects-room-v1)
(:setup
  (exists (?o2 - bridge_block ?b8 - hexagonal_bin)
    (and
      (game-conserved
        (not
          (object_orientation ?b8 ?b8)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference beachballBouncedOffRamp
      (exists (?h - hexagonal_bin)
        (then
          (hold (in_motion bed) )
          (once (on bed ?h) )
          (once (agent_holds ?h) )
        )
      )
    )
    (preference throwBallToBin
      (exists (?b4 - game_object)
        (then
          (once (touch ?b4 ?b4) )
          (once (not (not (not (and (agent_holds ?b4) (in_motion ?b4) ) ) ) ) )
          (once (not (adjacent floor agent) ) )
        )
      )
    )
    (preference objectThrownFromRug
      (exists (?b10 - dodgeball)
        (then
          (once (> 1 (distance ?b10 ?b10)) )
          (once (in_motion ?b10) )
          (once (faces ?b10 ?b10) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (+ 10 (count-once-per-objects objectThrownFromRug:basketball) )
      (* (* (count beachballBouncedOffRamp:block) (* (>= 5 (* (count beachballBouncedOffRamp:dodgeball:red:yellow_cube_block) (count beachballBouncedOffRamp:pink_dodgeball) )
            )
            2
          )
        )
        (-
          (* (/ (* 5 (count throwBallToBin:golfball) )
              (+ (count throwBallToBin:white:golfball) (count-once-per-objects throwBallToBin:basketball) 2 (count throwBallToBin:dodgeball) (count objectThrownFromRug:dodgeball) (count beachballBouncedOffRamp:pink_dodgeball:blue_pyramid_block:basketball) )
            )
            (count objectThrownFromRug:basketball)
          )
          30
        )
        20
      )
    )
    (+ (count throwBallToBin:dodgeball) (count-increasing-measure beachballBouncedOffRamp:red:beachball) )
  )
)
(:scoring
  (count objectThrownFromRug:beachball)
)
)



(define (game game-id-177) (:domain medium-objects-room-v1)
(:setup
  (exists (?b - drawer)
    (game-conserved
      (exists (?g - (either cube_block cd))
        (not
          (not
            (and
              (on ?g ?b)
              (adjacent ?g ?b)
              (not
                (agent_holds ?b)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference gameBlockFound
      (exists (?o3 - (either lamp pencil dodgeball laptop cube_block yellow_cube_block alarm_clock) ?b1 - cube_block ?bl - (either block hexagonal_bin bridge_block))
        (then
          (once-measure (not (on ?bl ?bl) ) (distance ?bl ?bl) )
          (hold (not (object_orientation ?bl ?bl) ) )
          (once (not (and (and (not (adjacent ?bl ?bl) ) (in_motion ?bl) (in ?bl ?bl) ) (and (not (and (in bridge_block ?bl) (= (distance ?bl ?bl) (building_size ?bl)) ) ) (in_motion ?bl) ) ) ) )
        )
      )
    )
    (forall (?b - cube_block ?o1 - cube_block)
      (and
        (preference dodgeballThrownToBin
          (exists (?h - yellow_cube_block)
            (at-end
              (in ?h blue)
            )
          )
        )
        (preference teddyBearHitsBall
          (exists (?ob - (either key_chain dodgeball pillow game_object bridge_block flat_block triangular_ramp))
            (then
              (once (agent_holds ?ob) )
              (once (agent_holds ?ob) )
              (hold (same_color desk ?o1) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (total-score) 100 )
)
(:scoring
  (count gameBlockFound:cube_block)
)
)



(define (game game-id-178) (:domain few-objects-room-v1)
(:setup
  (exists (?c5 - dodgeball)
    (exists (?p2 - building)
      (and
        (game-conserved
          (and
            (in_motion ?c5)
            (exists (?h - hexagonal_bin)
              (in_motion ?h)
            )
          )
        )
        (exists (?p1 - dodgeball)
          (and
            (game-optional
              (not
                (and
                  (and
                    (adjacent ?p1 agent)
                    (adjacent_side ?p1 ?c5 ?p2)
                  )
                  (agent_holds ?c5)
                )
              )
            )
            (and
              (exists (?d - dodgeball)
                (and
                  (and
                    (and
                      (exists (?d - ball ?l3 - golfball ?p - pyramid_block ?s - curved_wooden_ramp)
                        (exists (?c - triangular_ramp ?c3 - building)
                          (game-conserved
                            (between ?c5 ?d ?s)
                          )
                        )
                      )
                      (forall (?d - (either dodgeball doggie_bed))
                        (game-optional
                          (not
                            (and
                              (not
                                (not
                                  (< (distance ?p1 ?d) 0)
                                )
                              )
                              (adjacent ?c5 ?c5)
                            )
                          )
                        )
                      )
                    )
                    (exists (?p3 - block ?d - hexagonal_bin ?b - curved_wooden_ramp)
                      (game-optional
                        (and
                          (in ?d ?c5)
                          (touch bed ?p2)
                        )
                      )
                    )
                  )
                  (game-optional
                    (in ?p1 ?d)
                  )
                )
              )
              (exists (?c2 - cube_block)
                (not
                  (exists (?o4 - hexagonal_bin ?h - hexagonal_bin)
                    (exists (?h - ball)
                      (exists (?r - ball ?c - dodgeball)
                        (and
                          (not
                            (game-optional
                              (and
                                (faces rug top_drawer)
                                (< (distance ?c ?c2) 1)
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
              (game-optional
                (agent_holds ?p1)
              )
            )
            (forall (?l1 - triangular_ramp)
              (and
                (game-conserved
                  (and
                    (and
                      (in_motion ?p2)
                      (not
                        (and
                          (and
                            (and
                              (agent_holds ?p2)
                              (in ?c5 ?l1)
                            )
                            (not
                              (agent_holds ?p1)
                            )
                          )
                          (in_motion ?p2)
                        )
                      )
                      (equal_z_position brown ?p1)
                    )
                    (in_motion ?c5)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - ball)
      (and
        (preference throwBallToBin
          (exists (?o ?o3 - ball ?p - teddy_bear)
            (then
              (hold (and (opposite ?p brown) (object_orientation room_center pink_dodgeball) ) )
              (hold (and (not (and (exists (?c - dodgeball) (open ?p) ) (in ?d ?d) ) ) (in_motion door) ) )
            )
          )
        )
        (preference dodgeballsInPlace
          (exists (?d2 - dodgeball)
            (then
              (hold (and (and (> 5 (distance upside_down ?d2)) (between ?d ?d pink_dodgeball) (exists (?t - dodgeball) (not (rug_color_under ?t ?d2) ) ) ) (not (in_motion ?d2) ) ) )
              (once (and (in_motion back) (and (in_motion ?d2) ) (and (in_motion ?d) (and (agent_holds ?d) (on bed ?d2) ) ) ) )
              (hold-while (= 2 (distance_side ?d2 ?d2 ?d2 ?d)) (agent_holds ?d2) (in_motion ?d2) (exists (?b2 - building) (not (and (and (and (exists (?h - hexagonal_bin ?b3 - game_object) (not (in ?d ?d2) ) ) (rug_color_under ?d2 desk) ) (and (agent_holds ?d2) (adjacent ?d2 ?b2) ) ) (and (and (not (on ?d ?b2) ) (and (= 7 0.5) ) ) (in ?d2 ?d2) ) ) ) ) )
              (once (not (exists (?c - doggie_bed ?p - hexagonal_bin) (agent_holds ?d2) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< (count throwBallToBin:dodgeball) (total-score) )
)
(:scoring
  (count-measure dodgeballsInPlace:beachball)
)
)



(define (game game-id-179) (:domain few-objects-room-v1)
(:setup
  (exists (?b - ball ?b1 - hexagonal_bin)
    (forall (?o5 - teddy_bear)
      (game-conserved
        (touch room_center ?b1)
      )
    )
  )
)
(:constraints
  (and
    (forall (?r ?o - blue_cube_block)
      (and
        (preference throwToBin
          (exists (?bl - hexagonal_bin ?b - flat_block ?c - hexagonal_bin)
            (then
              (hold (touch ?r ?o) )
              (hold (in bed ?o) )
              (once (not (adjacent_side ?r ?c ?o) ) )
              (once (not (and (on bridge_block ?r) (opposite ?r ?c) (in ?c desk) (not (not (on ?r ?r) ) ) ) ) )
              (hold (not (on bed ?r) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (+ 5 (* 3 2 )
    )
    (* (count throwToBin:beachball) (= (- 1 )
        (* (- 2 )
          (count-once-per-objects throwToBin:basketball)
        )
      )
    )
  )
)
(:scoring
  (+ 2 3 )
)
)



(define (game game-id-180) (:domain few-objects-room-v1)
(:setup
  (forall (?r1 ?h - (either cylindrical_block curved_wooden_ramp))
    (and
      (game-optional
        (and
          (and
            (on ?r1 ?r1)
            (and
              (not
                (touch ?h ?r1)
              )
              (in ?h ?h)
              (in ?r1 ?r1)
              (agent_holds ?h)
            )
          )
          (on ?h ?r1)
          (on ?h ?r1)
          (not
            (and
              (not
                (not
                  (and
                    (on ?h ?r1)
                    (not
                      (touch ?h agent)
                    )
                    (<= 1 (distance ?h agent))
                  )
                )
              )
              (on desk ?r1)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference teddyBearHitsBall
      (exists (?r - hexagonal_bin)
        (then
          (hold (agent_holds blue) )
          (once (in ?r ?r) )
        )
      )
    )
    (preference itemsBroken
      (exists (?h - (either golfball doggie_bed))
        (then
          (once (in_motion ?h) )
          (hold (and (and (not (not (in_motion ?h) ) ) (and (agent_holds ?h) (agent_holds ?h) ) ) (not (same_type ?h ?h) ) (not (agent_holds top_drawer) ) (on pink_dodgeball ?h) (not (agent_holds ?h) ) (on ?h ?h) (agent_holds ?h) (faces ?h bed) ) )
          (once (not (adjacent_side block ?h ?h) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (total-time) )
)
(:scoring
  (- (count-unique-positions teddyBearHitsBall:basketball:basketball) )
)
)



(define (game game-id-181) (:domain medium-objects-room-v1)
(:setup
  (exists (?c2 ?l ?h ?p2 ?h ?b - shelf)
    (exists (?c2 - curved_wooden_ramp)
      (game-conserved
        (or
          (not
            (not
              (and
                (game_over )
                (in_motion bed)
                (< (distance ball ?p2) 1)
                (and
                  (object_orientation agent ?c2)
                  (in_motion ?h)
                )
              )
            )
          )
          (>= 1 (distance ?b ?p2))
          (agent_holds ?c2)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwGolfballToBin
      (exists (?d - hexagonal_bin ?o - doggie_bed ?d - doggie_bed ?b6 - ball)
        (then
          (hold (on agent ?b6) )
          (once (on ?b6 ?b6) )
          (hold-while (in_motion desk) (>= (distance ?b6 ?b6) 0) )
        )
      )
    )
  )
)
(:terminal
  (or
    (> 4 (count-once-per-objects throwGolfballToBin:basketball) )
    (not
      (>= 2 5 )
    )
  )
)
(:scoring
  (count throwGolfballToBin:alarm_clock)
)
)



(define (game game-id-182) (:domain medium-objects-room-v1)
(:setup
  (forall (?b2 ?h - ball)
    (forall (?o1 - desktop)
      (game-conserved
        (agent_holds ?o1)
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?b3 - doggie_bed ?g - wall)
        (then
          (hold (not (not (exists (?h - game_object) (not (in ?h ?g) ) ) ) ) )
          (once (in green_golfball ?g) )
          (hold (agent_holds ?g) )
        )
      )
    )
    (preference ballThrownFromObjectToBin
      (exists (?h - wall)
        (then
          (hold (and (agent_holds ?h) ) )
          (hold-while (< 1 (distance ?h ?h)) (and (exists (?db - hexagonal_bin) (< 3 0) ) (exists (?p2 - (either cylindrical_block wall)) (forall (?f - hexagonal_bin) (not (not (< (distance ?f desk) 1) ) ) ) ) ) )
          (once (not (and (or (< 2 10) (in door ?h) ) (forall (?d - curved_wooden_ramp) (and (in_motion ?d) (adjacent ?h ?d) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) 10 )
)
(:scoring
  (* (count ballThrownFromObjectToBin:hexagonal_bin) 4 )
)
)



(define (game game-id-183) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (not
      (not
        (game_over )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b8 - (either basketball basketball))
      (and
        (preference dodgeballHitsBinBottom
          (exists (?o1 - hexagonal_bin ?l3 - ball ?s ?b ?p - shelf)
            (at-end
              (not
                (not
                  (and
                    (agent_holds front)
                    (in_motion ?p)
                  )
                )
              )
            )
          )
        )
        (preference throwBallToBin
          (exists (?h - doggie_bed ?h - chair)
            (at-end
              (and
                (and
                  (in_motion agent)
                  (in_motion right)
                )
                (and
                  (and
                    (and
                      (toggled_on ?b8)
                      (not
                        (or
                          (same_type ?h ?b8)
                        )
                      )
                      (and
                        (agent_holds door)
                        (adjacent ?b8 ?b8)
                      )
                    )
                    (in ?b8 ?b8)
                    (in ?h ?b8)
                  )
                  (agent_holds ?h)
                )
              )
            )
          )
        )
      )
    )
    (preference woodenBlockMovedFromRugToDesk
      (exists (?r1 - color)
        (then
          (once (in_motion ?r1) )
          (once (< (distance bed bed) (distance ?r1 agent)) )
          (hold (and (in_motion ?r1) (not (in_motion ?r1) ) ) )
        )
      )
    )
    (forall (?c4 ?p2 - building)
      (and
        (preference throwAttempt
          (exists (?p1 - game_object)
            (then
              (once (agent_holds ?p2) )
              (once-measure (in_motion ?c4) (distance_side ?p2 ?p2 ?c4 ?c4) )
              (once (and (in south_west_corner ?p2) (not (touch ?p2 agent) ) (in_motion ?c4) ) )
            )
          )
        )
      )
    )
    (preference blockOnBlockInTowerAtEnd
      (exists (?c2 - hexagonal_bin)
        (then
          (once (>= 1 (distance ?c2 ?c2)) )
          (hold (adjacent ?c2 ?c2) )
          (once (agent_holds ?c2) )
        )
      )
    )
    (forall (?o4 - ball)
      (and
        (preference pillowThrownToDoggieBed
          (exists (?d - ball)
            (then
              (once (not (rug_color_under ?d ?o4) ) )
              (hold (rug_color_under pink_dodgeball ?o4) )
              (hold-while (adjacent ?d ?o4) (game_start ) (opposite ?o4 top_shelf) )
            )
          )
        )
        (preference redDodgeballThrownToBin
          (exists (?c6 - cube_block)
            (then
              (once (in_motion ?c6) )
              (once (adjacent ?o4 ?c6) )
              (once (agent_holds ?c6) )
            )
          )
        )
      )
    )
    (preference throwKnocksOverBear
      (exists (?o - hexagonal_bin)
        (then
          (hold (and (or (in_motion ?o) ) (and (agent_holds ?o) (and (in_motion ?o) (in_motion ?o) (agent_holds ?o) ) ) (not (not (and (and (in_motion ?o) (in_motion ?o) (not (above agent ?o) ) ) (in_motion ?o) ) ) ) ) )
          (once (not (and (agent_holds ?o) (equal_x_position door ?o) ) ) )
          (once (touch ?o ?o) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (total-score) (count throwBallToBin:pink) )
    (= (- (count dodgeballHitsBinBottom:rug) )
      6
    )
    (>= (count-total throwKnocksOverBear:doggie_bed) 0 )
  )
)
(:scoring
  (count-once throwBallToBin)
)
)



(define (game game-id-184) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (exists (?b - doggie_bed ?b - hexagonal_bin)
        (and
          (forall (?b9 - chair ?h - curved_wooden_ramp ?b - triangular_ramp)
            (exists (?h - bridge_block)
              (and
                (game-conserved
                  (adjacent_side bed ?b green_golfball)
                )
              )
            )
          )
          (game-conserved
            (game_start )
          )
          (exists (?h - hexagonal_bin)
            (and
              (game-conserved
                (object_orientation ?h floor)
              )
            )
          )
          (game-optional
            (agent_holds ?b)
          )
        )
      )
    )
    (exists (?t2 - red_dodgeball)
      (game-conserved
        (in_motion ?t2)
      )
    )
  )
)
(:constraints
  (and
    (preference blockFromRugToDesk
      (exists (?o5 - dodgeball)
        (then
          (once (not (same_color ?o5 ?o5) ) )
          (once (on ?o5 ?o5) )
          (once (agent_holds desk) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) 10 )
)
(:scoring
  (count-overlapping blockFromRugToDesk:dodgeball)
)
)



(define (game game-id-185) (:domain few-objects-room-v1)
(:setup
  (forall (?d - building)
    (game-optional
      (and
        (and
          (and
            (in_motion ?d)
            (and
              (and
                (in_motion bed)
                (on agent ?d)
              )
              (touch ?d desk)
            )
          )
          (and
            (forall (?d ?w2 - dodgeball)
              (on ?w2 ?w2)
            )
            (adjacent_side ?d ?d bed)
          )
        )
        (in_motion ?d)
      )
    )
  )
)
(:constraints
  (and
    (preference binKnockedOver
      (exists (?b6 - book ?r - red_dodgeball)
        (then
          (hold (adjacent agent agent) )
          (once (agent_holds ?r) )
          (hold (not (in_motion bed) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (< (+ 2 3 )
      (count binKnockedOver:purple)
    )
  )
)
(:scoring
  (count binKnockedOver:pyramid_block)
)
)



(define (game game-id-186) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (opposite agent agent)
  )
)
(:constraints
  (and
    (preference throwKnocksOverBear
      (exists (?b - shelf ?c - dodgeball)
        (then
          (once-measure (and (touch ?c ?c) (adjacent ?c ?c) (in_motion ?c) (not (not (agent_holds ?c) ) ) (adjacent ?c desk) (agent_holds ?c) (adjacent_side desk pink ?c) (in blue ?c) ) (building_size ?c) )
          (once (on ?c desk) )
          (hold (not (agent_holds ?c) ) )
        )
      )
    )
    (preference woodenBlockMovedFromRugToDesk
      (exists (?d - beachball)
        (then
          (once (agent_holds ?d) )
          (hold (agent_holds ?d) )
          (once (not (touch ?d ?d) ) )
        )
      )
    )
  )
)
(:terminal
  (= (* 50 (* (+ 7 2 )
        (count woodenBlockMovedFromRugToDesk:beachball:beachball)
        (* (* (* (count-once woodenBlockMovedFromRugToDesk:beachball) (- (count-once-per-objects throwKnocksOverBear:hexagonal_bin) (* (count woodenBlockMovedFromRugToDesk:hexagonal_bin) (count-once-per-objects throwKnocksOverBear:pyramid_block:dodgeball) )
              )
              (<= (count throwKnocksOverBear:dodgeball:blue_dodgeball) (+ (* (* (- 10 )
                      5
                    )
                    5
                    (count-same-positions throwKnocksOverBear:dodgeball:purple)
                  )
                  (* 6 3 )
                  (external-forall-maximize
                    (+ (* 2 (count woodenBlockMovedFromRugToDesk:blue_pyramid_block:beachball) )
                      300
                    )
                  )
                )
              )
              10
            )
            (count throwKnocksOverBear:dodgeball:cylindrical_block:dodgeball)
          )
          (count throwKnocksOverBear:tan:dodgeball)
        )
        (* 4 7 )
      )
    )
    3
  )
)
(:scoring
  (count woodenBlockMovedFromRugToDesk:yellow)
)
)



(define (game game-id-187) (:domain many-objects-room-v1)
(:setup
  (forall (?r - hexagonal_bin)
    (and
      (and
        (game-optional
          (in_motion ?r)
        )
        (and
          (exists (?o3 - hexagonal_bin)
            (forall (?s - book ?c - wall ?p1 - dodgeball ?w1 - hexagonal_bin)
              (game-conserved
                (or
                  (on agent ?o3)
                  (in_motion ?r)
                )
              )
            )
          )
        )
      )
      (and
        (and
          (and
            (game-optional
              (and
                (in_motion ?r)
                (agent_holds ?r)
              )
            )
          )
        )
        (exists (?d2 ?h - ball ?o - hexagonal_bin)
          (forall (?d - beachball)
            (forall (?bl - pyramid_block ?x - dodgeball ?r - hexagonal_bin)
              (exists (?l1 - dodgeball)
                (exists (?l1 - hexagonal_bin ?c5 - hexagonal_bin ?b4 - hexagonal_bin)
                  (forall (?b9 - curved_wooden_ramp ?c2 - cylindrical_block)
                    (game-conserved
                      (exists (?h - golfball)
                        (above ?l1 ?l1)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
      (exists (?d - wall)
        (and
          (game-conserved
            (on ?r pink_dodgeball)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballFromDeskToTarget
      (exists (?h - (either yellow_cube_block cellphone game_object) ?b6 - (either doggie_bed cellphone))
        (then
          (once (agent_holds ?b6) )
          (once (and (and (agent_holds ?b6) (<= (distance ?b6 ?b6) (distance ?b6 ?b6)) ) (not (on ?b6 ?b6) ) (agent_holds rug) ) )
          (once (on door ?b6) )
        )
      )
    )
    (forall (?t2 - game_object ?d - pyramid_block)
      (and
        (preference otherObjectsOnDeskShelf
          (exists (?b - hexagonal_bin ?g - building)
            (at-end
              (or
                (< (distance ?g ?d) 1)
                (in_motion desk)
                (on ?d ?g)
              )
            )
          )
        )
        (preference blockKnockedFromBuildingInBin
          (exists (?o1 - (either dodgeball golfball))
            (then
              (once (in_motion ?o1) )
              (hold (agent_holds ?d) )
              (once (not (agent_holds ?d) ) )
            )
          )
        )
      )
    )
    (preference blockPlacedInBuilding
      (exists (?l4 - game_object)
        (then
          (once (agent_holds ?l4) )
          (hold-while (on ?l4 desk) (adjacent ?l4 ?l4) (adjacent room_center ?l4) )
          (once (on blue ?l4) )
        )
      )
    )
  )
)
(:terminal
  (>= 3 3 )
)
(:scoring
  (+ (count-total blockPlacedInBuilding:red:alarm_clock) 10 )
)
)



(define (game game-id-188) (:domain many-objects-room-v1)
(:setup
  (exists (?l - ball ?h - hexagonal_bin)
    (and
      (forall (?b10 - ball ?r - hexagonal_bin)
        (exists (?b - (either pyramid_block cd))
          (game-conserved
            (agent_holds ?h)
          )
        )
      )
      (forall (?c - yellow_pyramid_block)
        (game-conserved
          (and
            (same_object ?c ?h)
            (< 10 5)
          )
        )
      )
      (forall (?o4 ?d ?c ?b4 ?o ?s ?w2 ?b ?r ?b2 - hexagonal_bin)
        (exists (?d1 - hexagonal_bin)
          (exists (?h - game_object)
            (forall (?o - hexagonal_bin)
              (exists (?h - dodgeball)
                (exists (?c - hexagonal_bin)
                  (game-optional
                    (and
                      (> (distance ?s ?d) 10)
                      (not
                        (in_motion ?o4)
                      )
                      (and
                        (on ?d bed)
                        (toggled_on ?h)
                      )
                      (in ?b4 ?b2)
                      (in_motion rug)
                      (and
                        (not
                          (on ?d1 upright)
                        )
                        (not
                          (game_over )
                        )
                      )
                      (and
                        (faces ?r ?d1)
                        (toggled_on blue)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?bl - wall ?l3 - cube_block)
      (and
        (preference blockToBinFromRug
          (exists (?b - pyramid_block)
            (then
              (once (and (and (= 0.5 (distance ?l3 floor) (distance ?b ?l3)) (agent_holds ?l3) ) (not (faces ?b ?l3) ) ) )
              (hold (agent_holds ?l3) )
            )
          )
        )
        (preference throwObjectToBin
          (exists (?g - blue_cube_block)
            (at-end
              (touch rug ?g)
            )
          )
        )
      )
    )
    (preference throwKnocksOverBear
      (exists (?b1 - (either alarm_clock pillow))
        (then
          (once (agent_holds ?b1) )
          (once (above desk ?b1) )
          (hold (agent_holds agent) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count blockToBinFromRug:dodgeball) 2 )
    (< (= (* (+ (<= (count throwObjectToBin:book) (count-once-per-objects throwKnocksOverBear:dodgeball:green) )
            (count-longest blockToBinFromRug:hexagonal_bin)
          )
          5
        )
        4
      )
      5
    )
  )
)
(:scoring
  (* (count throwObjectToBin:purple) (count throwKnocksOverBear:basketball) 8 (+ 16 )
    (count-once-per-objects throwKnocksOverBear:beachball:hexagonal_bin)
    (count-total throwObjectToBin)
  )
)
)



(define (game game-id-189) (:domain many-objects-room-v1)
(:setup
  (exists (?t - hexagonal_bin)
    (game-conserved
      (in_motion ?t)
    )
  )
)
(:constraints
  (and
    (preference dodgeballHitsBin
      (exists (?b4 ?o ?d ?x ?w2 ?b ?p ?b ?d ?t2 - hexagonal_bin)
        (then
          (once (or (in_motion ?p) (< 1 1) ) )
          (hold (not (not (not (agent_holds ?b4) ) ) ) )
          (hold (on desk ?b) )
        )
      )
    )
  )
)
(:terminal
  (or
    (<= (total-score) (- (external-forall-maximize (count-measure dodgeballHitsBin:beachball) ) )
    )
    (or
      (>= (* (* (external-forall-minimize (* (count dodgeballHitsBin:dodgeball:red) (* (* 2 (* (+ (count dodgeballHitsBin:dodgeball:pink_dodgeball) 50 )
                      (count dodgeballHitsBin:green)
                    )
                  )
                  (* (+ (+ 2 (+ 5 (* 50 (count dodgeballHitsBin:dodgeball:tall_cylindrical_block) (* (count dodgeballHitsBin:dodgeball:golfball) (* (count dodgeballHitsBin:dodgeball) (count dodgeballHitsBin:purple) (* 1 (count dodgeballHitsBin:yellow) )
                              )
                            )
                          )
                        )
                        1
                      )
                      (count-same-positions dodgeballHitsBin:dodgeball:brown)
                    )
                    5
                  )
                )
              )
            )
            (count-once dodgeballHitsBin:green)
          )
          300
        )
        180
      )
      (>= (count dodgeballHitsBin:red) 5 )
      (or
        (>= 1 (external-forall-maximize (external-forall-maximize (/ 5 (* (* 5 (count-unique-positions dodgeballHitsBin:pink) )
                  (+ (count-same-positions dodgeballHitsBin:green:hexagonal_bin) 50 )
                )
              )
            )
          )
        )
        (>= (+ (external-forall-maximize (+ (* (* 6 2 )
                  (* 5 3 (/ (external-forall-maximize (count-once-per-objects dodgeballHitsBin:yellow) ) (count-once-per-external-objects dodgeballHitsBin:dodgeball) ) )
                )
                (count dodgeballHitsBin)
              )
            )
            3
          )
          10
        )
        (and
          (or
            (or
              (or
                (or
                  (or
                    (>= (- 8 )
                      (+ (count-once dodgeballHitsBin:golfball) 3 )
                    )
                  )
                  (or
                    (> (* 5 30 )
                      (count dodgeballHitsBin:doggie_bed)
                    )
                  )
                )
                (>= (* 3 (count-once-per-objects dodgeballHitsBin:red_pyramid_block) )
                  (count dodgeballHitsBin:orange:yellow)
                )
              )
            )
          )
          (or
            (>= (- (* (* 6 (count dodgeballHitsBin:beachball) )
                  (= (* (count dodgeballHitsBin:dodgeball:pink) (external-forall-maximize (+ (external-forall-maximize (count dodgeballHitsBin:pink) ) )
                      )
                    )
                  )
                  (* (* 3 -30 )
                    (count dodgeballHitsBin:orange)
                    5
                  )
                )
                (count-once dodgeballHitsBin:golfball)
              )
              100
            )
          )
          (< (count-once-per-objects dodgeballHitsBin:pink) (* 2 (count-unique-positions dodgeballHitsBin:blue_dodgeball) )
          )
        )
      )
    )
  )
)
(:scoring
  (count dodgeballHitsBin:triangle_block)
)
)



(define (game game-id-190) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (broken desk)
  )
)
(:constraints
  (and
    (preference itemsTurnedOff
      (exists (?g ?b8 - pillow)
        (then
          (hold (in_motion ?b8) )
          (once (not (on ?b8 ?b8) ) )
          (hold (and (agent_holds ?g) (and (in ?g ?g) (on ?g ?b8) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (external-forall-maximize (external-forall-minimize (* 15 10 )
      )
    )
  )
)
(:scoring
  (+ (* (* 5 (+ (+ (+ 10 (count-once-per-external-objects itemsTurnedOff:side_table) (+ 4 2 )
              (count-measure itemsTurnedOff:dodgeball)
            )
            9
          )
          (count itemsTurnedOff:yellow)
        )
      )
      (count-once-per-objects itemsTurnedOff:orange)
      (count-once-per-objects itemsTurnedOff:triangle_block)
      1
    )
    (count-once-per-objects itemsTurnedOff:red:basketball)
    (* (count-longest itemsTurnedOff:yellow) 3 )
  )
)
)



(define (game game-id-191) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-conserved
      (not
        (< (distance agent desk) 8)
      )
    )
  )
)
(:constraints
  (and
    (preference cubeBlockThrownToTopShelf
      (exists (?w1 - wall)
        (then
          (hold (and (not (and (and (agent_holds ?w1) (agent_holds ?w1) ) (on ?w1 ?w1) ) ) (not (agent_holds agent) ) ) )
          (once (< 2 3) )
          (once (not (same_type ?w1 ?w1) ) )
        )
      )
    )
    (preference dropAttempt
      (exists (?d - block ?c - ball)
        (then
          (once (on ?c ?c) )
        )
      )
    )
    (preference throwToBinFromOppositeWall
      (exists (?d - doggie_bed)
        (at-end
          (not
            (in_motion agent)
          )
        )
      )
    )
  )
)
(:terminal
  (> (total-score) (* (= (count dropAttempt:beachball) (- 8 )
      )
      20
    )
  )
)
(:scoring
  (count-once-per-objects cubeBlockThrownToTopShelf:orange:blue)
)
)



(define (game game-id-192) (:domain many-objects-room-v1)
(:setup
  (exists (?l3 - hexagonal_bin)
    (and
      (forall (?r1 - (either key_chain alarm_clock hexagonal_bin bridge_block hexagonal_bin game_object laptop) ?b6 - hexagonal_bin)
        (exists (?b - cube_block)
          (game-optional
            (and
              (touch ?b ?b6)
              (not
                (on ?l3 ?b6)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?w1 - ball)
      (and
        (preference blockInTowerAtEnd
          (exists (?b8 - hexagonal_bin)
            (at-end
              (agent_holds ?w1)
            )
          )
        )
      )
    )
    (forall (?c2 - game_object)
      (and
        (preference ballNeverThrown
          (exists (?c4 - bridge_block)
            (then
              (once (in_motion ?c4) )
              (once (not (on ?c4 ?c4) ) )
              (hold-while (above ?c4 ?c2) (same_color floor ?c2) (game_over ) (in ?c2 ?c4) )
            )
          )
        )
      )
    )
    (forall (?g - ball ?o - game_object ?p1 - shelf)
      (and
        (preference beachballOnRug
          (exists (?c - (either golfball triangle_block))
            (then
              (once (> 4 0) )
              (once (agent_holds ?p1) )
              (hold (agent_holds ?p1) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (+ (count beachballOnRug:dodgeball) (count ballNeverThrown) )
      (count-overlapping blockInTowerAtEnd:beachball:beachball)
    )
    1
  )
)
(:scoring
  (* (count-once ballNeverThrown:dodgeball) 2 )
)
)



(define (game game-id-193) (:domain medium-objects-room-v1)
(:setup
  (forall (?c - dodgeball ?h - dodgeball)
    (exists (?r - pillow)
      (forall (?t1 - hexagonal_bin)
        (game-optional
          (agent_holds ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToRug
      (exists (?x - building)
        (then
          (hold (not (agent_holds ?x) ) )
          (hold-while (not (not (adjacent ?x agent) ) ) (in_motion ?x) )
          (hold (< (distance ?x ?x) (distance_side ?x ?x agent)) )
        )
      )
    )
    (forall (?b2 - ball)
      (and
        (preference thrownBallReachesEnd
          (exists (?f - cube_block)
            (at-end
              (or
                (in ?f ?b2)
                (not
                  (same_type ?f ?b2)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (< (count-once-per-objects thrownBallReachesEnd:basketball) 20 )
    )
    (<= 5 (+ (+ (count thrownBallReachesEnd:pink) 2 )
        (+ 3 (* (* 10 1 )
            4
          )
        )
      )
    )
  )
)
(:scoring
  (- (+ (count thrownBallReachesEnd:book) 5 )
  )
)
)



(define (game game-id-194) (:domain medium-objects-room-v1)
(:setup
  (exists (?w - dodgeball)
    (game-conserved
      (in_motion ?w)
    )
  )
)
(:constraints
  (and
    (preference redDodgeballThrownToBinWithoutTouchingFloor
      (exists (?b2 - (either basketball floor cellphone))
        (at-end
          (on ?b2 ?b2)
        )
      )
    )
    (forall (?b - hexagonal_bin)
      (and
        (preference ballThrownFromObjectToBin
          (exists (?o2 - wall ?l1 - doggie_bed)
            (then
              (hold-while (agent_holds ?b) (on pink_dodgeball ?l1) )
              (once (< (distance ?b ?b) (distance agent ?b)) )
              (hold (adjacent ?l1 ?l1) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* 2 (+ 10 (+ 1 (count ballThrownFromObjectToBin:rug) )
      )
    )
    5
  )
)
(:scoring
  (count redDodgeballThrownToBinWithoutTouchingFloor:pink_dodgeball:pink:basketball)
)
)



(define (game game-id-195) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - doggie_bed)
      (and
        (and
          (forall (?d - cube_block ?h - dodgeball)
            (game-conserved
              (not
                (not
                  (on ?h ?h)
                )
              )
            )
          )
        )
        (and
          (and
            (exists (?g - cube_block)
              (game-optional
                (agent_holds south_west_corner)
              )
            )
          )
          (and
            (forall (?b1 - dodgeball ?h - dodgeball)
              (and
                (exists (?l - cube_block)
                  (exists (?c - dodgeball ?d - (either golfball dodgeball))
                    (and
                      (game-optional
                        (on ?d ?h)
                      )
                      (forall (?c - game_object)
                        (exists (?l1 - (either cylindrical_block ball) ?c - cube_block ?t1 - dodgeball ?h - (either wall book) ?h - (either side_table alarm_clock pen cylindrical_block))
                          (not
                            (game-conserved
                              (agent_holds ?c)
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
    (exists (?p2 - hexagonal_bin ?c - hexagonal_bin)
      (and
        (game-optional
          (in_motion ?c)
        )
        (game-conserved
          (in ?c ?c)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o4 - (either alarm_clock))
      (and
        (preference ballThrownThroughRampToBin
          (exists (?b - (either book mug cube_block watch))
            (then
              (once (agent_holds ?o4) )
              (hold-while (agent_holds ?o4) (not (in_motion ?o4) ) )
              (once (and (not (and (and (on ?b ?b) (and (agent_holds back) (agent_holds ?b) ) ) (and (and (in ?b ?b) (not (not (> 3 1) ) ) ) (agent_holds ?o4) (not (on ?b agent) ) (agent_holds ?o4) ) (and (and (is_setup_object ?o4) (equal_z_position ?o4 ?b) ) (in_motion ?b) ) ) ) (and (faces ?o4 room_center) (above ?b ?o4) ) (agent_holds ?o4) ) )
            )
          )
        )
      )
    )
    (preference throwAttemptFromDoor
      (exists (?d - green_triangular_ramp ?h - block)
        (at-end
          (not
            (broken ?h)
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (not
      (> (total-time) 3 )
    )
  )
)
(:scoring
  (count-once-per-objects ballThrownThroughRampToBin:pink)
)
)



(define (game game-id-196) (:domain many-objects-room-v1)
(:setup
  (exists (?o4 - pillow)
    (not
      (and
        (forall (?d - (either golfball alarm_clock))
          (exists (?d1 - (either pink blue_cube_block))
            (exists (?s - block)
              (forall (?d1 - building)
                (game-optional
                  (and
                    (open floor)
                    (agent_holds ?d)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c6 - (either wall top_drawer) ?h - dodgeball)
      (and
        (preference throwGolfballToBin
          (exists (?r - blue_pyramid_block ?x - hexagonal_bin)
            (then
              (hold (in_motion ?h) )
              (hold (agent_holds ?h) )
              (once (agent_holds ?h) )
            )
          )
        )
        (preference castleBuilt
          (exists (?b - building)
            (then
              (hold-while (in ?b ?h) (agent_holds ?h) )
              (once (in_motion door) )
            )
          )
        )
        (preference blockInTowerKnockedByDodgeball
          (exists (?h - chair)
            (at-end
              (not
                (on ?h ?h)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count castleBuilt:doggie_bed:blue_pyramid_block) (count-once-per-objects blockInTowerKnockedByDodgeball) )
)
(:scoring
  (* (count throwGolfballToBin:hexagonal_bin) (count blockInTowerKnockedByDodgeball:blue_dodgeball) )
)
)



(define (game game-id-197) (:domain many-objects-room-v1)
(:setup
  (exists (?w2 - (either cylindrical_block lamp))
    (game-conserved
      (on ?w2 ?w2)
    )
  )
)
(:constraints
  (and
    (preference cubeBlockInBuilding
      (exists (?o - (either bridge_block book basketball))
        (then
          (once (adjacent agent desk) )
          (once (on ?o blue) )
          (hold (adjacent_side ?o ?o agent) )
        )
      )
    )
    (preference baseBlockInTowerAtEnd
      (exists (?b - dodgeball)
        (at-end
          (on agent ?b)
        )
      )
    )
    (forall (?c1 - hexagonal_bin)
      (and
        (preference thrownBallHitsBlock
          (exists (?p - (either yellow_cube_block yellow))
            (at-end
              (exists (?r1 - dodgeball)
                (agent_holds ?c1)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (total-score) (count thrownBallHitsBlock:dodgeball:dodgeball) )
)
(:scoring
  (+ 7 2 )
)
)



(define (game game-id-198) (:domain few-objects-room-v1)
(:setup
  (forall (?o1 - hexagonal_bin)
    (game-conserved
      (in_motion ?o1)
    )
  )
)
(:constraints
  (and
    (preference golfballInBinFromPillow
      (exists (?b - game_object)
        (at-end
          (adjacent ?b desk)
        )
      )
    )
    (preference smallItemsInPlace
      (exists (?tb - hexagonal_bin)
        (then
          (once (in_motion ?tb) )
          (hold (agent_holds agent) )
          (hold (in_motion ?tb) )
        )
      )
    )
    (forall (?o - curved_wooden_ramp)
      (and
        (preference failedThrowAttempt
          (exists (?g ?o ?bl ?b - (either ball yellow_cube_block))
            (then
              (hold (and (in_motion ?g) (not (in ?o ?g) ) (and (agent_holds ?bl) (and (and (not (is_setup_object ?b) ) (on ?o ?bl) ) (object_orientation brown ?b) (is_setup_object agent) ) ) (and (adjacent ?g ?b) (and (not (adjacent ?bl ?g) ) (= 1 1) (on agent ?g) ) ) ) )
              (once (on ?o ?bl) )
              (once (agent_holds ?bl) )
            )
          )
        )
        (preference blocksInPlace
          (at-end
            (agent_holds ?o)
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* 10 (count failedThrowAttempt:golfball) 100 )
    10
  )
)
(:scoring
  (count-once-per-objects golfballInBinFromPillow:beachball)
)
)



(define (game game-id-199) (:domain few-objects-room-v1)
(:setup
  (forall (?c - beachball)
    (and
      (game-conserved
        (in_motion ?c)
      )
    )
  )
)
(:constraints
  (and
    (forall (?r - (either beachball triangle_block dodgeball))
      (and
        (preference objectInBuilding
          (then
            (hold (on ?r ?r) )
            (hold (in_motion ?r) )
            (once (equal_x_position bed ?r) )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (not
      (not
        (<= (* (count objectInBuilding:hexagonal_bin:beachball) 3 )
          15
        )
      )
    )
    (>= (count objectInBuilding:brown:beachball) (total-time) )
    (or
      (or
        (or
          (>= (total-time) (count objectInBuilding:yellow_cube_block:alarm_clock) )
          (>= (count-unique-positions objectInBuilding:dodgeball) (+ 3 (count objectInBuilding) )
          )
        )
        (>= 4 (count-unique-positions objectInBuilding:yellow_cube_block) )
      )
      (not
        (>= (count-same-positions objectInBuilding:beachball:golfball) (- 4 )
        )
      )
      (>= (total-time) (total-score) )
    )
  )
)
(:scoring
  (- (count-unique-positions objectInBuilding:red) )
)
)



(define (game game-id-200) (:domain medium-objects-room-v1)
(:setup
  (forall (?h - hexagonal_bin)
    (and
      (forall (?t - curved_wooden_ramp)
        (game-optional
          (in ?t ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockFromRugToDesk
      (exists (?d2 - doggie_bed)
        (then
          (once (exists (?d - dodgeball) (in_motion agent) ) )
          (once (agent_holds ?d2) )
          (hold (on ?d2 ?d2) )
        )
      )
    )
  )
)
(:terminal
  (<= (count blockFromRugToDesk:basketball) 4 )
)
(:scoring
  (* 10 )
)
)



(define (game game-id-201) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (agent_holds agent)
  )
)
(:constraints
  (and
    (preference bounceBallToBin
      (exists (?o5 - ball ?d - building ?g - hexagonal_bin)
        (then
          (once (< 1 3) )
          (once (not (and (not (and (not (not (not (object_orientation agent ?g) ) ) ) (rug_color_under ?g ?g) (agent_holds ?g) ) ) (in ?g ?g) ) ) )
          (once (agent_holds ?g) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (external-forall-maximize (count-overlapping bounceBallToBin:golfball:doggie_bed) ) )
    (count bounceBallToBin:dodgeball:triangle_block)
  )
)
(:scoring
  (count bounceBallToBin:dodgeball)
)
)



(define (game game-id-202) (:domain medium-objects-room-v1)
(:setup
  (exists (?b3 - building)
    (exists (?p3 - dodgeball ?r1 - curved_wooden_ramp)
      (exists (?b - cylindrical_block ?c - game_object)
        (exists (?b2 - teddy_bear ?d - red_dodgeball)
          (game-optional
            (agent_holds ?d)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference castleBuilt
      (exists (?f - hexagonal_bin ?b2 - teddy_bear)
        (then
          (hold (and (equal_x_position agent green_golfball) (and (in ?b2 ?b2) (in_motion ?b2) (agent_holds ?b2) ) ) )
          (hold-while (rug_color_under room_center ?b2) (on ?b2 ?b2) )
          (once (not (and (on ?b2 ?b2) (and (object_orientation ?b2 ?b2) (agent_holds ?b2) (not (agent_holds desk) ) ) ) ) )
        )
      )
    )
    (preference dodgeballHitsPillowWithoutTouchingBlock
      (exists (?o - hexagonal_bin)
        (then
          (once (in_motion ?o) )
          (hold (on ?o desk) )
          (once (and (agent_holds ?o) (and (and (touch ?o ?o) (not (in_motion ?o) ) (touch ?o ?o) ) (toggled_on ?o) ) (and (exists (?o - block) (not (in_motion ?o) ) ) (adjacent drawer desk) ) (and (and (in_motion ?o) (< (distance_side upright agent ?o) 7) ) (adjacent ?o ?o) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (- (count-once castleBuilt:top_drawer) )
    (* 7 5 )
  )
)
(:scoring
  (/
    (count-once castleBuilt:golfball)
    (* (count dodgeballHitsPillowWithoutTouchingBlock:dodgeball) 3 6 )
  )
)
)



(define (game game-id-203) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds agent)
  )
)
(:constraints
  (and
    (preference cubeBlockInBuilding
      (exists (?p - hexagonal_bin)
        (then
          (once (in_motion ?p) )
          (hold (agent_holds ?p) )
          (once (not (in desk ?p) ) )
        )
      )
    )
    (preference throwTeddyOntoPillow
      (exists (?h - hexagonal_bin ?tb - dodgeball)
        (then
          (hold (agent_holds ?tb) )
          (once (and (in ?tb ?tb) (agent_holds ?tb) (not (in_motion ?tb) ) (and (not (adjacent front_left_corner floor) ) (< 2 (distance ?tb ?tb)) ) (and (and (not (and (= 2 0.5) ) ) (< (distance ?tb ?tb) 1) ) (agent_holds ?tb) (agent_holds ?tb) ) (agent_holds ?tb) ) )
          (hold-while (touch ?tb ?tb) (agent_holds bed) )
        )
      )
    )
  )
)
(:terminal
  (>= (count throwTeddyOntoPillow:red) (+ 2 2 (count cubeBlockInBuilding:basketball) 7 )
  )
)
(:scoring
  (count-once-per-objects throwTeddyOntoPillow:blue_dodgeball)
)
)



(define (game game-id-204) (:domain few-objects-room-v1)
(:setup
  (forall (?g - cube_block)
    (exists (?l2 - chair)
      (forall (?g - ball)
        (and
          (game-conserved
            (not
              (opposite ?l2 rug)
            )
          )
          (and
            (and
              (exists (?d - doggie_bed)
                (game-conserved
                  (on rug ?g)
                )
              )
            )
          )
          (game-conserved
            (not
              (on ?g ?g)
            )
          )
          (game-optional
            (equal_x_position ?l2 ?g)
          )
          (forall (?o - book ?b1 - chair)
            (forall (?h - (either yellow))
              (game-optional
                (adjacent_side ?h ?h upright)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference itemsTurnedOff
      (exists (?o - hexagonal_bin)
        (at-end
          (>= (distance ?o ?o) 1)
        )
      )
    )
  )
)
(:terminal
  (> (+ 3 10 (= (* 3 2 )
        10
      )
    )
    (total-time)
  )
)
(:scoring
  (count itemsTurnedOff:cube_block)
)
)



(define (game game-id-205) (:domain many-objects-room-v1)
(:setup
  (exists (?b - dodgeball)
    (game-conserved
      (not
        (on ?b ?b)
      )
    )
  )
)
(:constraints
  (and
    (forall (?g - hexagonal_bin ?r1 - dodgeball)
      (and
        (preference towerFallsWhileBuilding
          (exists (?c - (either cube_block pencil side_table) ?d2 - hexagonal_bin)
            (then
              (hold (opposite ?r1 ?r1) )
              (once (and (faces ?d2 ?r1) (on ?r1 ?d2) ) )
            )
          )
        )
      )
    )
    (preference ballOnBedAtEnd
      (exists (?r - dodgeball)
        (at-end
          (not
            (in_motion ?r)
          )
        )
      )
    )
    (preference binKnockedOver
      (exists (?b9 - triangular_ramp)
        (at-end
          (and
            (agent_holds ?b9)
            (in_motion ?b9)
            (and
              (and
                (not
                  (agent_holds green)
                )
                (and
                  (< 0.5 1)
                  (adjacent_side blue ?b9 ?b9)
                )
              )
              (not
                (not
                  (not
                    (in_motion ?b9)
                  )
                )
              )
              (agent_holds ?b9)
            )
            (faces ?b9 bed)
          )
        )
      )
    )
  )
)
(:terminal
  (> (count binKnockedOver:dodgeball) (total-score) )
)
(:scoring
  (* 5 10 )
)
)



(define (game game-id-206) (:domain medium-objects-room-v1)
(:setup
  (forall (?o - sliding_door)
    (game-conserved
      (agent_holds ?o)
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?r1 - (either golfball hexagonal_bin))
        (then
          (once (not (not (agent_holds agent) ) ) )
          (once (not (not (exists (?o - block) (not (and (agent_holds ?r1) (not (not (in_motion ?o) ) ) ) ) ) ) ) )
          (once (and (same_type ?r1 ?r1) (exists (?o3 - triangular_ramp ?d - game_object) (touch ?r1 ?d) ) ) )
        )
      )
    )
    (forall (?s - hexagonal_bin)
      (and
        (preference objectThrownFromRug
          (exists (?p2 - ball ?d - red_pyramid_block)
            (then
              (hold-while (not (in top_drawer agent) ) (< (distance ?s room_center) 1) )
              (hold (not (on ?s desk) ) )
              (once (on bed ?s) )
            )
          )
        )
      )
    )
    (preference objectLandsInBin
      (exists (?o - doggie_bed ?c - cube_block)
        (then
          (hold (< (distance ?c ?c) 1) )
          (once (in_motion ?c) )
          (once (same_type ?c ?c) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ 2 (count-once objectThrownFromRug:green) )
    (total-time)
  )
)
(:scoring
  (+ (external-forall-maximize (count-overlapping objectLandsInBin:yellow_pyramid_block) ) (count-overlapping objectLandsInBin:blue_dodgeball:beachball) )
)
)



(define (game game-id-207) (:domain few-objects-room-v1)
(:setup
  (forall (?c2 - (either book dodgeball))
    (and
      (and
        (game-optional
          (agent_holds ?c2)
        )
        (game-optional
          (not
            (not
              (on ?c2 ?c2)
            )
          )
        )
      )
      (game-conserved
        (in_motion ?c2)
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - shelf)
      (and
        (preference watchOnShelf
          (exists (?w - dodgeball ?b - game_object)
            (then
              (once (not (not (not (and (and (agent_holds ?b) ) (and (adjacent rug ?b) (in ?h bed) ) ) ) ) ) )
              (once (in ?h ?b) )
              (hold (not (adjacent_side ?h ?b ?b ?b) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (= (total-score) (total-score) )
)
(:scoring
  (count-once-per-objects watchOnShelf:bed:blue_dodgeball)
)
)



(define (game game-id-208) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?s - doggie_bed)
      (and
        (game-conserved
          (on ?s ?s)
        )
        (and
          (forall (?p1 - hexagonal_bin)
            (game-optional
              (is_setup_object door)
            )
          )
          (exists (?g - dodgeball)
            (and
              (exists (?b9 ?t2 - hexagonal_bin)
                (game-optional
                  (not
                    (not
                      (and
                        (agent_holds ?g)
                        (in_motion ?s)
                      )
                    )
                  )
                )
              )
              (forall (?c3 - (either chair alarm_clock key_chain))
                (exists (?db - (either cellphone cylindrical_block rug))
                  (game-conserved
                    (and
                      (agent_holds ?s)
                      (agent_holds rug)
                    )
                  )
                )
              )
            )
          )
        )
        (and
          (game-conserved
            (and
              (in_motion ?s)
              (agent_holds ?s)
            )
          )
        )
        (game-conserved
          (and
            (in ?s ?s)
            (touch ?s ?s)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference castleBuilt
      (exists (?h - (either yellow_cube_block wall))
        (then
          (once (on ?h ?h) )
          (once (< 10 (distance ?h ?h)) )
          (once (not (in_motion ?h) ) )
        )
      )
    )
    (preference ballKnocksBlockFromRug
      (exists (?d - dodgeball)
        (then
          (once (and (< 6 (distance front ?d)) (agent_holds ?d) ) )
          (hold (and (not (agent_crouches ) ) (and (<= 1 1) (in ?d ?d) ) ) )
          (hold (not (on desk ?d) ) )
        )
      )
    )
  )
)
(:terminal
  (< (count ballKnocksBlockFromRug:basketball) (* (- (count castleBuilt:pink_dodgeball) 18 ) 25 )
  )
)
(:scoring
  (count ballKnocksBlockFromRug:basketball)
)
)



(define (game game-id-209) (:domain medium-objects-room-v1)
(:setup
  (exists (?h - hexagonal_bin ?f - (either golfball flat_block) ?w1 - (either book key_chain) ?c6 - curved_wooden_ramp ?b9 - dodgeball)
    (or
      (game-conserved
        (and
          (and
            (agent_holds ?b9)
            (agent_holds ?b9)
          )
          (in_motion ?b9)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dropAttempt
      (exists (?p3 - wall)
        (then
          (once (and (agent_holds front) (on ?p3 upside_down) ) )
          (once (and (in_motion agent) (and (in_motion ?p3) (in_motion ?p3) ) ) )
          (once (and (in ?p3 ?p3) (touch ?p3 ?p3) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (count dropAttempt:hexagonal_bin) (total-time) )
      (or
        (> (total-score) (total-time) )
        (>= 3 (count dropAttempt:pink) )
      )
    )
  )
)
(:scoring
  (- (+ (- (* (* (* (count dropAttempt:red) 7 )
            (< (count-once dropAttempt:basketball:pink_dodgeball) (* (count dropAttempt:beachball) 18 )
            )
          )
          1
        )
      )
      (count-shortest dropAttempt:yellow)
    )
  )
)
)



(define (game game-id-210) (:domain medium-objects-room-v1)
(:setup
  (forall (?b - dodgeball)
    (exists (?d ?o - dodgeball ?d - golfball)
      (exists (?c2 ?o1 ?o ?d - hexagonal_bin ?s - hexagonal_bin)
        (game-conserved
          (and
            (not
              (agent_holds green)
            )
            (agent_holds ?b)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - color)
      (and
        (preference dodgeballHitsBinBottom
          (exists (?d1 - hexagonal_bin)
            (at-end
              (agent_holds ?d1)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (* (+ (count-increasing-measure dodgeballHitsBinBottom:yellow:golfball) (* 5 (count-once-per-objects dodgeballHitsBinBottom:tall_cylindrical_block:dodgeball) )
      )
      (count dodgeballHitsBinBottom:purple)
      (+ (+ (count-once-per-objects dodgeballHitsBinBottom:pink_dodgeball) (* (- (+ 5 (* (+ 2 300 (* 10 300 )
                  )
                  (count-once-per-external-objects dodgeballHitsBinBottom:brown)
                )
                (count-once-per-objects dodgeballHitsBinBottom:alarm_clock)
              )
            )
            (* (>= 5 (count dodgeballHitsBinBottom:beachball) )
              (count-once-per-objects dodgeballHitsBinBottom:green)
              40
            )
          )
        )
        (count dodgeballHitsBinBottom:dodgeball)
      )
      8
      5
    )
  )
)
(:scoring
  (* (* (* (count dodgeballHitsBinBottom:beachball) (* 3 (count-once-per-objects dodgeballHitsBinBottom:basketball) )
      )
      (count dodgeballHitsBinBottom:basketball)
    )
    5
  )
)
)



(define (game game-id-211) (:domain medium-objects-room-v1)
(:setup
  (forall (?c - pyramid_block ?w2 - doggie_bed)
    (exists (?t2 - shelf ?tb - hexagonal_bin)
      (game-optional
        (on ?w2 desk)
      )
    )
  )
)
(:constraints
  (and
    (preference ballKnocksBlockFromRug
      (exists (?h - wall ?d1 - hexagonal_bin ?t - (either bridge_block cube_block) ?w1 - hexagonal_bin)
        (then
          (once (agent_holds agent) )
          (once (agent_holds ?w1) )
          (once (agent_holds door) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (+ 5 (* (+ 3 (count ballKnocksBlockFromRug:beachball) (count ballKnocksBlockFromRug:dodgeball) )
          0
        )
      )
      3
    )
    (or
      (> (* (count ballKnocksBlockFromRug:beachball) 6 )
        4
      )
      (>= (total-score) 3 )
    )
    (> 50 (count ballKnocksBlockFromRug:beachball:dodgeball) )
  )
)
(:scoring
  (count ballKnocksBlockFromRug:red)
)
)



(define (game game-id-212) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (exists (?s - shelf)
      (in_motion ?s)
    )
  )
)
(:constraints
  (and
    (preference itemInClosedDrawerAtEnd
      (exists (?l1 - hexagonal_bin)
        (then
          (hold (agent_holds ?l1) )
          (once (in_motion ?l1) )
          (once (and (and (agent_holds ?l1) (or (and (not (on ?l1 ?l1) ) (and (and (adjacent_side ?l1 ?l1 ?l1) (not (and (touch room_center ?l1) (and (agent_holds ?l1) (and (on ?l1 ?l1) (not (same_color front ?l1) ) ) ) ) ) ) (not (in_motion ?l1) ) ) ) (agent_holds ?l1) ) ) (< (distance agent ?l1) (distance ?l1 ?l1)) ) )
        )
      )
    )
  )
)
(:terminal
  (<= 2 (total-time) )
)
(:scoring
  (+ (count-once-per-objects itemInClosedDrawerAtEnd:yellow_cube_block) 3 )
)
)



(define (game game-id-213) (:domain many-objects-room-v1)
(:setup
  (forall (?o - bridge_block)
    (and
      (exists (?d ?h - block ?w2 - hexagonal_bin)
        (forall (?o - hexagonal_bin)
          (game-optional
            (in_motion upright)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownHitsAgent
      (exists (?h - cylindrical_block)
        (then
          (once (in ?h agent) )
          (hold (opposite ?h upright) )
          (hold (agent_holds ?h) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (total-time) (count-once-per-objects ballThrownHitsAgent:dodgeball) )
    (<= (count-overlapping ballThrownHitsAgent) (total-score) )
  )
)
(:scoring
  (* (count ballThrownHitsAgent:basketball) (count-overlapping ballThrownHitsAgent:hexagonal_bin) )
)
)



(define (game game-id-214) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (and
        (and
          (exists (?b10 - doggie_bed)
            (game-conserved
              (on rug ?b10)
            )
          )
          (exists (?l3 - building)
            (game-conserved
              (agent_holds ?l3)
            )
          )
          (exists (?c - (either dodgeball key_chain cube_block) ?r - building)
            (game-optional
              (and
                (not
                  (exists (?d - hexagonal_bin)
                    (in_motion ?d)
                  )
                )
                (touch ?r ?r)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToDoggieBedOffWall
      (exists (?h - building)
        (at-end
          (exists (?b - chair)
            (in_motion ?b)
          )
        )
      )
    )
  )
)
(:terminal
  (> (count-once-per-objects throwBallToDoggieBedOffWall:beachball:hexagonal_bin) 0 )
)
(:scoring
  (count throwBallToDoggieBedOffWall:beachball)
)
)



(define (game game-id-215) (:domain many-objects-room-v1)
(:setup
  (exists (?b1 - doggie_bed)
    (game-conserved
      (agent_holds rug)
    )
  )
)
(:constraints
  (and
    (forall (?h - (either dodgeball golfball cube_block))
      (and
        (preference golfballUnderBridgeWithoutTouchingBlock
          (exists (?b10 - block ?o - red_dodgeball)
            (then
              (once (in ?o ?h) )
              (once (between ?h ?h ?h) )
              (once (on ?h ?h) )
            )
          )
        )
        (preference objectsHidden
          (exists (?o - hexagonal_bin)
            (then
              (once (not (not (in_motion ?o) ) ) )
            )
          )
        )
      )
    )
    (forall (?b - ball)
      (and
        (preference thrownObjectHitsComputer
          (exists (?r - blue_cube_block)
            (at-end
              (and
                (in_motion ?b)
                (not
                  (not
                    (adjacent upright ?b)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (< (count objectsHidden:cube_block) (total-score) )
  )
)
(:scoring
  (* 3 (+ (* 6 10 )
      (count-once-per-external-objects objectsHidden:dodgeball)
    )
  )
)
)



(define (game game-id-216) (:domain medium-objects-room-v1)
(:setup
  (exists (?c4 - hexagonal_bin)
    (and
      (forall (?c4 - book)
        (exists (?b - wall)
          (not
            (forall (?b - triangular_ramp)
              (exists (?h ?d - hexagonal_bin ?g - game_object)
                (game-conserved
                  (agent_holds ?b)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference itemsTurnedOff
      (exists (?c - pillow ?b - color)
        (at-end
          (< 7 1)
        )
      )
    )
  )
)
(:terminal
  (or
    (and
      (= 8 (* (count itemsTurnedOff:golfball) 5 5 5 (+ 3 10 )
        )
      )
    )
    (>= (count itemsTurnedOff:cube_block:yellow) 1 )
  )
)
(:scoring
  (count-overlapping itemsTurnedOff:pink_dodgeball:yellow)
)
)



(define (game game-id-217) (:domain many-objects-room-v1)
(:setup
  (exists (?p1 - game_object)
    (forall (?h - (either dodgeball side_table))
      (and
        (game-conserved
          (in ?p1 ?h)
        )
        (exists (?d ?c6 ?h ?b ?b ?c3 ?b4 ?d ?s ?c - (either cube_block book))
          (game-optional
            (and
              (and
                (is_setup_object ?h)
                (object_orientation ?s ?h)
                (in ?c ?c6)
              )
              (<= (distance ?c ?c3) (distance ?b ?s))
            )
          )
        )
        (and
          (game-optional
            (on ?h ?h)
          )
          (exists (?c2 - teddy_bear)
            (forall (?p - block)
              (or
                (or
                  (and
                    (game-conserved
                      (and
                        (in_motion ?c2)
                        (agent_holds ?h)
                      )
                    )
                  )
                  (game-conserved
                    (< 1 5)
                  )
                  (game-optional
                    (in bed ?p1)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockIncorrectlyPicked
      (exists (?d ?t - ball)
        (then
          (hold (same_type ?t ?t) )
          (hold (agent_holds agent) )
          (hold (game_over ) )
        )
      )
    )
    (preference throwKnocksOverBear
      (exists (?b - golfball ?b2 - hexagonal_bin)
        (then
          (once (and (in_motion ?b2) (on ?b2 ?b2) (not (same_type ?b2 bed) ) ) )
          (once (in_motion bed) )
          (once (toggled_on agent) )
        )
      )
    )
  )
)
(:terminal
  (> 9 (count blockIncorrectlyPicked:doggie_bed) )
)
(:scoring
  (+ (count blockIncorrectlyPicked:yellow:golfball) (* 8 4 )
    (count-once throwKnocksOverBear:blue_cube_block)
    50
  )
)
)



(define (game game-id-218) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?b3 - hexagonal_bin)
      (and
        (and
          (game-optional
            (in_motion door)
          )
          (game-conserved
            (on ?b3 floor)
          )
        )
      )
    )
    (and
      (and
        (and
          (and
            (exists (?o - cube_block)
              (exists (?h - teddy_bear)
                (game-conserved
                  (and
                    (in ?h ?o)
                    (in_motion ?h)
                    (or
                      (agent_holds ?o)
                      (equal_x_position ?h ?h)
                    )
                  )
                )
              )
            )
            (game-conserved
              (exists (?b2 ?g - block)
                (exists (?b - ball)
                  (and
                    (and
                      (= (distance rug rug) (distance ?b ?g))
                      (< (distance ?g desk) (distance ?b ?g))
                    )
                    (and
                      (exists (?o - cube_block ?c - beachball ?o2 - hexagonal_bin)
                        (or
                          (on ?b2 ?o2)
                          (and
                            (not
                              (not
                                (in ?g ?b2)
                              )
                            )
                            (agent_holds ?b)
                          )
                        )
                      )
                      (< 2 3)
                    )
                  )
                )
              )
            )
          )
          (and
            (forall (?p - hexagonal_bin ?b - (either cube_block pyramid_block))
              (forall (?p - curved_wooden_ramp)
                (or
                  (game-conserved
                    (< (distance ?p ?p) 1)
                  )
                  (forall (?b2 - hexagonal_bin ?o5 - (either top_drawer dodgeball))
                    (exists (?b - (either dodgeball top_drawer) ?c - teddy_bear)
                      (game-conserved
                        (not
                          (agent_holds ?c)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?b6 - building)
        (at-end
          (not
            (broken ?b6)
          )
        )
      )
    )
    (preference laptopAndBookInPlace
      (exists (?b5 - building)
        (then
          (once (in_motion ?b5) )
          (once (in agent ?b5) )
        )
      )
    )
    (forall (?w - hexagonal_bin)
      (and
        (preference ballThrownFromRug
          (exists (?r1 - hexagonal_bin)
            (then
              (once (agent_holds ?r1) )
              (once (not (not (not (and (touch ?r1 ?w) (exists (?c6 - doggie_bed ?b - hexagonal_bin) (and (not (in_motion main_light_switch) ) (in_motion ?r1) ) ) ) ) ) ) )
              (hold (in_motion ?w) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (> 4 1 )
    (>= 4 4 )
    (<= (total-score) 7 )
  )
)
(:scoring
  (count ballThrownFromRug:red)
)
)



(define (game game-id-219) (:domain many-objects-room-v1)
(:setup
  (forall (?c1 - pyramid_block)
    (game-conserved
      (on rug ?c1)
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?r - dodgeball)
        (then
          (hold (not (and (in rug agent) (agent_holds ?r) (or (adjacent ?r block) (agent_holds desk) ) ) ) )
          (once (game_start ) )
          (once (in ?r ?r) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects throwAttempt:green:dodgeball) (total-score) )
)
(:scoring
  (count throwAttempt:basketball)
)
)



(define (game game-id-220) (:domain few-objects-room-v1)
(:setup
  (forall (?h - ball)
    (game-optional
      (agent_holds ?h)
    )
  )
)
(:constraints
  (and
    (preference rollBallToBin
      (exists (?c3 - cube_block ?ob - game_object ?c1 - chair)
        (then
          (once (between ?c1 ?c1 desktop) )
          (once (and (agent_holds rug) (in ?c1 ?c1) ) )
          (once (adjacent_side agent ?c1 ?c1 ?c1) )
        )
      )
    )
    (forall (?g - dodgeball)
      (and
        (preference failedThrowToBin
          (exists (?b - hexagonal_bin ?b1 - hexagonal_bin)
            (then
              (hold (and (in_motion ?g) (agent_holds ?g) ) )
              (hold (not (not (same_type ?b1 right) ) ) )
              (once (< 1 1) )
            )
          )
        )
        (preference blocksInPlace
          (exists (?d - hexagonal_bin ?h ?b2 ?t ?b1 - hexagonal_bin)
            (at-end
              (in_motion room_center)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count blocksInPlace:dodgeball) (count-once blocksInPlace:hexagonal_bin:pink) )
)
(:scoring
  (count-same-positions rollBallToBin:basketball)
)
)



(define (game game-id-221) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (and
      (and
        (agent_crouches )
        (in_motion agent)
      )
      (agent_holds bed)
    )
  )
)
(:constraints
  (and
    (preference ballThrownToChair
      (exists (?l1 - bridge_block)
        (then
          (hold (same_color bed ?l1) )
          (once (not (and (in ?l1 ?l1) (and (in_motion desk) (or (in_motion ?l1) (agent_holds ?l1) ) (in_motion ?l1) ) ) ) )
          (once (and (on rug ?l1) (and (and (adjacent ?l1 ?l1) (in ?l1 ?l1) ) (in_motion ?l1) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (- 15 )
    (count-once ballThrownToChair:cube_block)
  )
)
(:scoring
  (count-once ballThrownToChair:golfball)
)
)



(define (game game-id-222) (:domain many-objects-room-v1)
(:setup
  (or
    (game-conserved
      (in_motion bed)
    )
    (exists (?o2 - hexagonal_bin ?w2 - doggie_bed)
      (game-conserved
        (same_color ?w2 bed)
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballHitsBinBottom
      (exists (?c3 - dodgeball)
        (then
          (hold-while (and (touch ?c3 ?c3) (in_motion back) ) (and (agent_holds ?c3) (adjacent desk ?c3) ) (and (and (not (on ?c3 ?c3) ) ) (not (and (in_motion ?c3) (agent_holds ?c3) ) ) ) )
          (once (>= (distance ?c3 desk) 1) )
          (hold (in ?c3 pink_dodgeball) )
        )
      )
    )
    (preference brownObjectMovedToRoomCenter
      (exists (?b - hexagonal_bin)
        (then
          (hold (agent_holds desk) )
          (once (in_motion ?b) )
          (hold-while (in_motion ?b) (is_setup_object ?b) (= 1 (distance ?b bed)) )
        )
      )
    )
    (preference ballThrownFromDoor
      (exists (?b ?r2 - ball)
        (then
          (once (agent_holds ?r2) )
          (hold (game_start ) )
          (once (forall (?b - wall ?o ?b ?o3 ?d ?d ?p1 ?l3 ?b2 ?o ?f - game_object) (not (and (on ?p1 ?l3) (in_motion ?r2) ) ) ) )
          (once (on ?b ?r2) )
        )
      )
    )
  )
)
(:terminal
  (and
    (> (external-forall-maximize (count ballThrownFromDoor:pink) ) 2 )
    (>= (* 100 (count-once ballThrownFromDoor:doggie_bed) )
      5
    )
    (>= (count brownObjectMovedToRoomCenter:beachball) (total-score) )
  )
)
(:scoring
  (count dodgeballHitsBinBottom:orange:red:dodgeball)
)
)



(define (game game-id-223) (:domain medium-objects-room-v1)
(:setup
  (exists (?b - wall)
    (forall (?b - (either hexagonal_bin cellphone game_object))
      (exists (?b ?o - ball)
        (game-conserved
          (agent_holds ?o)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference agentLeavesDogbedOrNoMoreBalls
      (exists (?o4 - hexagonal_bin)
        (then
          (once (adjacent ?o4 ?o4) )
          (hold (and (and (> (distance ?o4 ?o4) (distance ?o4 ?o4)) (rug_color_under ?o4 ?o4) (and (not (agent_holds blue) ) (game_start ) ) ) (adjacent ?o4 ?o4) (not (agent_holds ?o4) ) (not (in_motion ?o4) ) (and (in_motion ?o4) (not (equal_z_position ?o4 ?o4) ) (in_motion agent) ) (and (on ?o4 ?o4) (and (not (and (agent_crouches ) (adjacent_side ?o4 ?o4 agent) ) ) (in ?o4 ?o4) (not (and (and (and (exists (?o - doggie_bed ?b - building ?h - tall_cylindrical_block ?t1 - triangular_ramp ?p3 - hexagonal_bin) (in bed ?o4) ) (<= (distance pillow agent) (distance agent ?o4)) (on ?o4 ?o4) (and (not (agent_holds door) ) (toggled_on ?o4) ) (and (not (not (agent_holds ?o4) ) ) (< (distance ?o4 desk) 1) (equal_z_position room_center ?o4) ) (and (in_motion ?o4) (same_type ?o4 ?o4) ) ) (in_motion bed) ) ) ) ) ) ) )
          (once (agent_holds ?o4) )
        )
      )
    )
  )
)
(:terminal
  (<= (count agentLeavesDogbedOrNoMoreBalls:golfball) 5 )
)
(:scoring
  (count agentLeavesDogbedOrNoMoreBalls:dodgeball)
)
)



(define (game game-id-224) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (agent_holds desk)
  )
)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?w2 - (either key_chain chair) ?b4 - dodgeball)
        (then
          (once (and (in ?b4 ?b4) ) )
          (once (above ?b4 ?b4) )
          (once (not (in_motion desk) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects ballThrownToBin:pink_dodgeball:book) 10 )
)
(:scoring
  (count-once-per-objects ballThrownToBin:brown)
)
)



(define (game game-id-225) (:domain many-objects-room-v1)
(:setup
  (forall (?b5 - curved_wooden_ramp)
    (exists (?d - hexagonal_bin)
      (and
        (game-optional
          (on ?b5 ?b5)
        )
        (game-optional
          (or
            (adjacent ?b5 ?d)
            (not
              (and
                (equal_z_position agent ?d)
                (on ?d ?d)
              )
            )
          )
        )
        (forall (?b - cube_block ?g - color)
          (exists (?c - (either hexagonal_bin key_chain) ?f - block)
            (exists (?c4 - hexagonal_bin ?b ?b1 ?b2 - cube_block)
              (game-optional
                (agent_holds desk)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blocksInPlace
      (exists (?b8 - hexagonal_bin)
        (then
          (hold (not (not (not (exists (?s - red_dodgeball) (not (not (and (agent_holds ?s) (adjacent ?b8 desk) ) ) ) ) ) ) ) )
          (once (agent_holds ?b8) )
          (once (agent_holds rug) )
        )
      )
    )
    (forall (?r - block)
      (and
        (preference throwAttempt
          (exists (?d - building)
            (at-end
              (and
                (in_motion ?r)
                (opposite ?r ?r)
              )
            )
          )
        )
        (preference woodenBlockMovedFromRugToDesk
          (exists (?p - wall ?d - dodgeball)
            (then
              (once (and (in_motion ?d) (and (on ?r rug) (is_setup_object ?r) ) ) )
              (once (and (on ?r ?r) (not (in_motion ?r) ) ) )
              (hold (touch ?r ?d) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (- (- 8 )
    )
    (count throwAttempt:dodgeball)
  )
)
(:scoring
  (count-unique-positions woodenBlockMovedFromRugToDesk:green)
)
)



(define (game game-id-226) (:domain many-objects-room-v1)
(:setup
  (exists (?l - hexagonal_bin)
    (exists (?b2 ?b2 ?o3 ?b - wall)
      (and
        (exists (?h - dodgeball ?c - (either top_drawer yellow_cube_block))
          (and
            (forall (?o - dodgeball)
              (exists (?b - hexagonal_bin)
                (game-conserved
                  (in_motion ?c)
                )
              )
            )
            (and
              (and
                (game-conserved
                  (and
                    (not
                      (in ?o3 room_center)
                    )
                    (in top_shelf ?l)
                    (and
                      (not
                        (agent_holds ?o3)
                      )
                      (agent_holds ?o3)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?p - (either dodgeball))
      (and
        (preference pillowMovedToRoomCenter
          (exists (?b - hexagonal_bin)
            (then
              (hold (touch ?b ?b) )
              (once (< (x_position ?b) 7) )
              (hold-while (game_over ) (on agent ?b) )
            )
          )
        )
      )
    )
    (forall (?c - hexagonal_bin ?o - cube_block)
      (and
        (preference ballThrownMissesEverything
          (exists (?o - curved_wooden_ramp ?d - dodgeball)
            (at-end
              (not
                (not
                  (touch ?d ?d)
                )
              )
            )
          )
        )
      )
    )
    (preference otherObjectsOnDeskShelf
      (exists (?d - game_object ?d - beachball ?b5 - hexagonal_bin)
        (then
          (once (< 2 (distance ?b5 ?b5)) )
          (hold (adjacent ?b5 ?b5) )
          (hold (not (and (in_motion ?b5) (on ?b5 room_center) (and (exists (?l - cube_block) (not (not (and (equal_z_position ?b5 ?b5) (and (in_motion ?b5) (not (agent_holds ?b5) ) ) ) ) ) ) (> 1 (distance ?b5 ?b5)) ) (in ?b5 room_center) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects otherObjectsOnDeskShelf:dodgeball) (* (count otherObjectsOnDeskShelf:dodgeball:pink) (count-once-per-objects pillowMovedToRoomCenter:hexagonal_bin) )
  )
)
(:scoring
  (-
    (+ (= 3 (* 7 (- 2 )
        )
      )
      (= 10 (count-once pillowMovedToRoomCenter:basketball) )
    )
    5
  )
)
)



(define (game game-id-227) (:domain medium-objects-room-v1)
(:setup
  (exists (?b - game_object ?d - (either alarm_clock triangle_block desktop))
    (and
      (and
        (exists (?h - watch ?r - game_object)
          (and
            (game-optional
              (and
                (in_motion ?d)
                (in_motion ?d)
              )
            )
          )
        )
      )
      (not
        (forall (?b2 - block ?t2 - shelf)
          (and
            (exists (?b - hexagonal_bin)
              (game-optional
                (in_motion agent)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference smallItemsInPlace
      (exists (?h - hexagonal_bin ?h - teddy_bear)
        (at-end
          (agent_holds ?h)
        )
      )
    )
    (forall (?b5 - (either laptop wall) ?o1 - hexagonal_bin)
      (and
        (preference dodgeballHitsBin
          (exists (?b6 - hexagonal_bin ?w2 - (either triangle_block bridge_block credit_card) ?o ?t2 - golfball)
            (then
              (once (and (and (not (and (not (on ?o ?o1) ) (agent_holds ?t2) ) ) (agent_holds rug) ) (not (agent_holds green) ) (in_motion bed) (not (on bed ?o) ) ) )
              (hold (and (touch ?o1 ?o1) (in ?t2 ?t2) (not (agent_holds ?o) ) ) )
              (hold (object_orientation ?t2 ?o1) )
            )
          )
        )
        (preference dodgeballBouncesOnceToDoggieBed
          (exists (?b2 - (either cd cube_block golfball))
            (then
              (once (< 1 9) )
              (once (adjacent ?o1 ?b2) )
              (hold (not (not (not (and (rug_color_under ?o1 ?o1) (agent_holds ?b2) (game_over ) (not (object_orientation ?o1 ?b2) ) ) ) ) ) )
            )
          )
        )
        (preference throwKnocksOverBear
          (exists (?c - hexagonal_bin ?r - (either laptop golfball blue_cube_block flat_block laptop dodgeball blue_cube_block))
            (then
              (hold-while (on ?r ?o1) (and (not (not (adjacent room_center ?r) ) ) (agent_holds green) (agent_holds ?r) ) (not (and (on ?o1 ?o1) (on floor ?o1) ) ) )
              (once (and (and (in ?o1 ?o1) (is_setup_object ?o1) ) (not (not (equal_z_position agent desk) ) ) ) )
              (hold-while (and (not (and (not (not (adjacent ?o1 upright) ) ) (and (on ?r rug) (agent_holds bed) ) ) ) (agent_crouches ) (not (in_motion ?r) ) ) (exists (?b - ball) (rug_color_under ?o1 desk) ) (and (not (in_motion ?r) ) (agent_holds ?o1) ) (on ?o1 ?o1) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (/ (* 5 6 )
      (count dodgeballHitsBin:beachball:pyramid_block)
    )
    (count dodgeballBouncesOnceToDoggieBed:purple)
  )
)
(:scoring
  (count smallItemsInPlace:purple)
)
)



(define (game game-id-228) (:domain medium-objects-room-v1)
(:setup
  (or
    (and
      (not
        (and
          (forall (?l ?l - game_object ?g - triangular_ramp)
            (and
              (game-optional
                (in_motion ?g)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b2 - block ?d2 - building)
      (and
        (preference throwBallToBin
          (exists (?h - dodgeball)
            (then
              (hold (not (in_motion ?h) ) )
              (once (not (< 2 1) ) )
              (once (and (agent_holds ?h) (agent_holds ?d2) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 60 (count throwBallToBin) )
    (>= (count-once-per-objects throwBallToBin:cube_block) (count-measure throwBallToBin:white:pink) )
    (>= (total-score) (count-once-per-objects throwBallToBin:blue_pyramid_block:yellow) )
  )
)
(:scoring
  (count throwBallToBin:top_drawer:top_drawer:top_drawer)
)
)



(define (game game-id-229) (:domain many-objects-room-v1)
(:setup
  (exists (?db - cube_block)
    (game-conserved
      (game_start )
    )
  )
)
(:constraints
  (and
    (preference rollBallToBin
      (exists (?b5 ?b8 ?ob - (either pyramid_block))
        (then
          (hold (in ?b8 ?b8) )
          (once (in_motion ?b8) )
          (once (rug_color_under ?b8 ?b5) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (count rollBallToBin:pink) 6 )
    3
  )
)
(:scoring
  (* 300 180 10 (* (count rollBallToBin:alarm_clock) 4 40 )
  )
)
)



(define (game game-id-230) (:domain few-objects-room-v1)
(:setup
  (forall (?o1 - (either lamp pyramid_block blue_cube_block cellphone doggie_bed cellphone cube_block))
    (forall (?l3 - dodgeball ?c1 - cube_block ?c ?b - triangular_ramp)
      (game-conserved
        (on ?b ?o1)
      )
    )
  )
)
(:constraints
  (and
    (preference blockPickedUp
      (exists (?c5 - hexagonal_bin ?b - hexagonal_bin)
        (then
          (hold (or (agent_holds ?b) (and (and (or (and (and (< 3 (distance ?b floor)) (same_color ?b ?b) ) (agent_holds ?b) ) (and (object_orientation ?b ?b) (in_motion ?b) ) ) (in_motion ?b) ) (faces ?b ?b) ) ) )
          (hold (adjacent rug ?b) )
          (once (on ?b front) )
        )
      )
    )
    (preference cubeBlockThrownToTopShelf
      (exists (?o - (either cd doggie_bed))
        (then
          (hold (agent_holds bed) )
          (once (not (and (not (adjacent ?o ?o) ) (in_motion ?o) (and (and (agent_holds ?o) (not (not (in_motion ?o) ) ) ) ) (adjacent ?o ?o) ) ) )
          (once (adjacent_side agent ?o ?o) )
        )
      )
    )
    (preference ballThrownOntoTarget
      (exists (?h - (either laptop floor bridge_block))
        (then
          (once (or (< 4 3) (agent_holds ?h) ) )
        )
      )
    )
    (forall (?c4 - dodgeball)
      (and
        (preference throwAttemptKnocksBlock
          (exists (?b7 - triangular_ramp)
            (then
              (once (not (in ?b7 ?b7) ) )
              (hold (and (in_motion ?c4) (agent_holds ?b7) (< 1 (distance_side ?c4 ?b7 ?c4)) ) )
              (once (touch ?c4 ?b7) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 10 20 )
)
(:scoring
  (count-once-per-external-objects ballThrownOntoTarget:dodgeball)
)
)



(define (game game-id-231) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?d - teddy_bear ?d - hexagonal_bin)
      (exists (?c - hexagonal_bin)
        (not
          (or
            (game-optional
              (and
                (in ?c ?d)
                (same_type rug agent)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - hexagonal_bin)
      (and
        (preference baseBlockInTowerAtEnd
          (then
            (hold (in_motion agent) )
            (hold (and (agent_holds ?d) (is_setup_object ?d) (same_type agent ?d) ) )
            (once (exists (?c - dodgeball ?b - sliding_door) (agent_holds ?b) ) )
          )
        )
        (preference ballThrownFromRug
          (exists (?p2 - hexagonal_bin)
            (then
              (once (in ?p2 desk) )
              (hold (not (on ?p2 ?p2) ) )
              (once (agent_holds ?d) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 5 5 )
)
(:scoring
  (count ballThrownFromRug:dodgeball)
)
)



(define (game game-id-232) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (in_motion bed)
  )
)
(:constraints
  (and
    (preference throwFromDoorToBin
      (exists (?b2 - triangular_ramp)
        (then
          (once (and (not (in ?b2 ?b2) ) (not (same_object ?b2 room_center) ) ) )
          (once (not (agent_holds ?b2) ) )
          (once (game_over ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count throwFromDoorToBin:blue_dodgeball) (count throwFromDoorToBin:book:pink) )
    (count-once-per-objects throwFromDoorToBin:golfball:pink)
  )
)
(:scoring
  (= (count-once-per-external-objects throwFromDoorToBin:hexagonal_bin) 5 )
)
)



(define (game game-id-233) (:domain few-objects-room-v1)
(:setup
  (not
    (and
      (game-conserved
        (not
          (in_motion bed)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference itemsBroken
      (exists (?b - chair)
        (at-end
          (in_motion ?b)
        )
      )
    )
  )
)
(:terminal
  (>= (count itemsBroken:basketball) (* (count-shortest itemsBroken:beachball:basketball) 5 )
  )
)
(:scoring
  (count itemsBroken:basketball)
)
)



(define (game game-id-234) (:domain medium-objects-room-v1)
(:setup
  (forall (?s - ball ?h - (either cube_block pen) ?tb - ball ?d - (either cube_block pencil))
    (exists (?h - hexagonal_bin)
      (exists (?ob - (either lamp alarm_clock bridge_block))
        (game-conserved
          (and
            (not
              (and
                (agent_holds ?d)
                (on ?ob ?h)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?g - chair ?b10 - doggie_bed)
      (and
        (preference blockIncorrectlyPicked
          (then
            (once (same_type ?b10 ?b10) )
            (once (not (adjacent ?b10 pink_dodgeball) ) )
            (once (and (not (agent_holds ?b10) ) (adjacent agent ?b10) ) )
          )
        )
        (preference throwAttempt
          (exists (?r - hexagonal_bin)
            (then
              (hold (>= 1 2) )
              (once (touch ?r ?r) )
              (hold-while (forall (?h - dodgeball ?o2 - cube_block ?h - doggie_bed) (agent_holds ?h) ) (not (in_motion floor) ) )
            )
          )
        )
        (preference dodgeballsInPlace
          (exists (?b - ball)
            (then
              (once (in bed ?b) )
              (once (and (is_setup_object pink_dodgeball) (not (and (in_motion ?b) (agent_holds bed) ) ) ) )
              (hold (in_motion ?b10) )
            )
          )
        )
        (preference thrownBallReachesEnd
          (exists (?b - ball)
            (then
              (once (not (and (not (not (agent_holds desk) ) ) (not (equal_z_position ?b10 ?b10) ) ) ) )
              (hold (agent_holds ?b) )
              (hold-while (equal_x_position ?b ?b10) (agent_holds ?b10) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count thrownBallReachesEnd:blue_pyramid_block:basketball) (* 1 15 1 )
  )
)
(:scoring
  (count-once-per-objects throwAttempt:hexagonal_bin)
)
)



(define (game game-id-235) (:domain medium-objects-room-v1)
(:setup
  (exists (?t1 - chair)
    (game-conserved
      (forall (?d - game_object)
        (not
          (< (distance desk ?t1) 5)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - (either mug basketball cd) ?b - dodgeball ?ob ?b - ball)
      (and
        (preference blockCorrectlyPicked
          (then
            (once (touch ?b ?b) )
            (once (in_motion ?ob) )
            (hold (adjacent_side ?b ?ob ?b) )
          )
        )
        (preference ballThrownToRampToBed
          (exists (?c2 - teddy_bear)
            (then
              (hold (not (on door agent) ) )
              (once (adjacent ?c2 back) )
              (once (not (and (and (in_motion ?ob) (on ?ob ?b) (not (and (in_motion ?ob) (agent_holds ?ob) ) ) ) (on ?ob ?c2) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (>= (count blockCorrectlyPicked:pyramid_block:beachball) 3 )
    )
    (= (count ballThrownToRampToBed:pink) 2 )
  )
)
(:scoring
  (* 300 2 )
)
)



(define (game game-id-236) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (exists (?t - doggie_bed ?b2 - dodgeball)
        (and
          (game-conserved
            (agent_holds ?b2)
          )
          (game-conserved
            (in_motion ?b2)
          )
          (exists (?s - dodgeball)
            (and
              (forall (?h - triangular_ramp ?c3 - game_object)
                (game-conserved
                  (same_type ?s desk)
                )
              )
            )
          )
        )
      )
    )
    (and
      (exists (?h - building)
        (game-optional
          (not
            (agent_holds ?h)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference beachballOnRug
      (exists (?h - (either yellow_cube_block bridge_block beachball golfball watch wall hexagonal_bin))
        (at-end
          (toggled_on ?h)
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects beachballOnRug:golfball) 4 )
)
(:scoring
  (count-once beachballOnRug:doggie_bed)
)
)



(define (game game-id-237) (:domain few-objects-room-v1)
(:setup
  (forall (?d - curved_wooden_ramp)
    (or
      (exists (?b - (either dodgeball main_light_switch))
        (and
          (and
            (game-conserved
              (in ?d ?d)
            )
            (and
              (game-conserved
                (and
                  (between ?b agent ?d)
                  (> (distance ?d ?b) (distance ?d ?b))
                )
              )
              (game-optional
                (in ?d bed)
              )
              (exists (?b - hexagonal_bin ?b8 - block)
                (exists (?b5 - block)
                  (forall (?c5 - teddy_bear ?b3 - building)
                    (game-optional
                      (in ?b8 ?b8)
                    )
                  )
                )
              )
            )
          )
        )
      )
      (game-optional
        (agent_holds ?d)
      )
      (and
        (game-optional
          (not
            (in ?d block)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?w2 - curved_wooden_ramp)
      (and
        (preference redDodgeballThrownToBin
          (exists (?o - curved_wooden_ramp ?h - hexagonal_bin)
            (then
              (once (or (and (same_color ?w2 bed) (and (touch ?h top_drawer) (in_motion ?h) ) (not (agent_holds ?h) ) (in top_drawer ?w2) ) (adjacent_side ?w2 agent bed) ) )
              (once-measure (or (equal_z_position ?h ?h) (and (adjacent desk agent) (agent_holds left) ) ) (distance ?h ?h) )
              (once (in_motion door) )
            )
          )
        )
        (preference ballThrownFromBehindBlock
          (exists (?d2 - block)
            (then
              (once (not (< (distance ?d2 ?w2) 7) ) )
              (once (in_motion ?w2) )
              (hold (not (agent_holds ?w2) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (<= 15 (+ (count-once-per-objects redDodgeballThrownToBin:dodgeball:golfball) (count-once-per-external-objects redDodgeballThrownToBin:dodgeball) )
    )
    (> (+ 7 (* 3 (count redDodgeballThrownToBin:purple) )
      )
      (+ (* 5 (count redDodgeballThrownToBin:green:doggie_bed) )
        (count ballThrownFromBehindBlock:book)
      )
    )
    (< 6 (count-measure ballThrownFromBehindBlock:blue) )
  )
)
(:scoring
  (count-overlapping redDodgeballThrownToBin:basketball)
)
)



(define (game game-id-238) (:domain few-objects-room-v1)
(:setup
  (exists (?t - ball)
    (game-optional
      (in ?t ?t)
    )
  )
)
(:constraints
  (and
    (forall (?r - hexagonal_bin)
      (and
        (preference failedThrowAttempt
          (exists (?bl - hexagonal_bin)
            (then
              (hold (in_motion ?bl) )
              (hold (agent_holds ?bl) )
              (hold (in_motion ?bl) )
            )
          )
        )
        (preference ballRolledOnRampToRug
          (then
            (once (not (not (adjacent ?r bed) ) ) )
            (hold (and (in ?r ?r) (not (not (forall (?h ?o - chair ?b - dodgeball) (and (agent_holds ?r) (and (exists (?b2 - (either dodgeball book) ?ob - chair) (in_motion ?r) ) (< (distance_side ?r ?r ?r) 3) ) ) ) ) ) ) )
            (hold (not (exists (?d - ball ?o4 - doggie_bed) (in upright ?r) ) ) )
          )
        )
      )
    )
  )
)
(:terminal
  (> (* (- 2 )
      (* (count failedThrowAttempt:golfball) 3 )
    )
    (count-once-per-objects ballRolledOnRampToRug:pink_dodgeball)
  )
)
(:scoring
  (count-once-per-objects failedThrowAttempt:blue)
)
)



(define (game game-id-239) (:domain many-objects-room-v1)
(:setup
  (forall (?b8 - hexagonal_bin)
    (and
      (exists (?w - ball ?b - (either blue_cube_block golfball game_object bridge_block tall_cylindrical_block))
        (and
          (forall (?w1 - dodgeball ?b8 - (either pyramid_block blue_cube_block))
            (exists (?c - curved_wooden_ramp ?d - hexagonal_bin ?t - hexagonal_bin)
              (game-optional
                (and
                  (and
                    (and
                      (object_orientation agent ?b)
                      (< (distance ?b8 ?b8) (distance rug ?b8))
                    )
                    (object_orientation ?b8 ?b)
                  )
                  (in ?b8 agent)
                  (or
                    (agent_holds ?b8)
                    (not
                      (not
                        (agent_holds ?b8)
                      )
                    )
                    (in_motion ?b8)
                  )
                )
              )
            )
          )
        )
      )
      (game-conserved
        (adjacent_side agent floor ?b8)
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - cube_block)
      (and
        (preference objectInBuilding
          (exists (?g - hexagonal_bin ?h - hexagonal_bin)
            (then
              (hold (and (and (and (not (agent_holds ?h) ) (not (adjacent ?b ?h) ) ) (on ?b ?h) ) (and (and (and (not (in desk ?b) ) (on ?b ?h) (and (not (and (not (in_motion ?h) ) (and (agent_holds ?h) (and (not (not (agent_holds ?b) ) ) (> 1 1) (and (not (in ?b ?h) ) (and (in_motion ?b) (or (and (exists (?r2 - blue_cube_block ?o2 - teddy_bear) (agent_holds desk) ) (on ?h ?b) ) (open ?h) ) ) ) ) ) (agent_holds ?b) ) ) (agent_holds agent) ) ) (not (in ?h ?b) ) ) (and (= (distance top_shelf ?b)) (not (in ?b ?b) ) ) (agent_holds ?b) ) (in_motion ?h) ) )
              (once-measure (forall (?b1 - cube_block) (in_motion ?b1) ) (building_size ?h) )
              (once (and (object_orientation ?b ?b) (not (or (< (building_size ?b) 0.5) (on ?h ?h) ) ) (and (and (and (and (in ?h ?h) (not (on ?h room_center) ) ) (and (not (not (not (and (and (and (not (not (agent_holds ?h) ) ) (and (not (and (not (agent_holds ?h) ) (not (and (in ?h ?h) (agent_holds ?b) ) ) ) ) (is_setup_object ?h) (and (in_motion ?b) (and (not (not (not (same_object ?b ?b) ) ) ) (agent_holds ?b) ) ) ) ) (in_motion ?h) ) (adjacent agent ?h) ) ) ) ) (and (open ?b) (not (agent_holds agent) ) ) (in_motion ?h) (in_motion ?h) ) (or (and (in_motion ?h) (same_color ?h pink_dodgeball) ) (in ?h back) ) ) (game_over ) ) (agent_holds ?b) ) ) )
              (once (adjacent ?b ?h) )
            )
          )
        )
        (preference dodgeballHitsBin
          (exists (?h ?o - hexagonal_bin)
            (then
              (once (agent_holds ?b) )
              (hold (in ?h ?b) )
              (hold-while (toggled_on ?o) (agent_holds rug) )
            )
          )
        )
      )
    )
    (preference dodgeballThrownToBin
      (exists (?d - (either tall_cylindrical_block wall doggie_bed) ?o - game_object ?b - cube_block)
        (then
          (once (not (not (agent_holds agent) ) ) )
        )
      )
    )
    (preference laptopAndBookInPlace
      (exists (?h - ball)
        (then
          (once (< 1 1) )
          (hold (in_motion ?h) )
          (hold (not (agent_holds ?h) ) )
        )
      )
    )
  )
)
(:terminal
  (<= (count-once-per-external-objects dodgeballHitsBin:yellow:dodgeball) (* (+ (count dodgeballHitsBin:brown) (count-once objectInBuilding:pyramid_block) )
      (count objectInBuilding:pink)
      5
    )
  )
)
(:scoring
  (/
    (- 1 )
    2
  )
)
)



(define (game game-id-240) (:domain few-objects-room-v1)
(:setup
  (exists (?c - curved_wooden_ramp)
    (forall (?b - golfball ?l ?h - doggie_bed)
      (game-optional
        (same_type ?l ?l)
      )
    )
  )
)
(:constraints
  (and
    (forall (?p - hexagonal_bin ?c - dodgeball)
      (and
        (preference dodgeballHitsBinBottom
          (exists (?h - shelf)
            (then
              (once (equal_z_position ?c ?h) )
              (once (not (and (in ?h ?h) (on ?h ?c) ) ) )
              (once (and (on ?c ?c) (not (not (and (same_color rug ?c) (not (not (equal_x_position agent ?c) ) ) ) ) ) ) )
            )
          )
        )
        (preference objectThrownFromRug
          (exists (?s - block)
            (then
              (hold (not (not (on door ?c) ) ) )
              (once (exists (?c - blinds) (in_motion ?c) ) )
            )
          )
        )
      )
    )
    (preference greenObjectMovedToRoomCenter
      (exists (?o - hexagonal_bin)
        (then
          (hold (and (in_motion ?o) (adjacent ?o desk) (forall (?w - hexagonal_bin) (on ?w desk) ) ) )
          (once (in_motion ?o) )
          (once (adjacent ?o ?o) )
        )
      )
    )
  )
)
(:terminal
  (and
    (<= (count objectThrownFromRug:purple) 1 )
    (>= (total-score) 20 )
  )
)
(:scoring
  (count-once-per-objects objectThrownFromRug:basketball)
)
)



(define (game game-id-241) (:domain medium-objects-room-v1)
(:setup
  (exists (?d - hexagonal_bin ?b6 - hexagonal_bin)
    (forall (?c2 - (either floor yellow))
      (game-conserved
        (in_motion ?b6)
      )
    )
  )
)
(:constraints
  (and
    (preference throwMissesBin
      (exists (?b2 - (either cube_block dodgeball doggie_bed))
        (then
          (once (and (not (not (agent_holds rug) ) ) (in_motion agent) ) )
          (once (on ?b2 ?b2) )
          (once (and (<= 3 8) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-external-objects throwMissesBin:yellow) 15 )
)
(:scoring
  (/
    9
    (count-once-per-objects throwMissesBin:golfball)
  )
)
)



(define (game game-id-242) (:domain medium-objects-room-v1)
(:setup
  (exists (?b - hexagonal_bin ?b - pillow)
    (forall (?d - ball)
      (and
        (game-conserved
          (not
            (or
              (in_motion ?b)
              (open ?b)
            )
          )
        )
        (exists (?o4 - sliding_door ?t - dodgeball)
          (forall (?h - hexagonal_bin ?c2 - dodgeball ?r - doggie_bed)
            (and
              (forall (?d ?t - curved_wooden_ramp ?db - chair)
                (exists (?w1 - beachball)
                  (or
                    (exists (?p - red_dodgeball)
                      (and
                        (game-conserved
                          (and
                            (and
                              (and
                                (and
                                  (in ?w1 ?b)
                                  (not
                                    (in bed ?w1)
                                  )
                                )
                                (agent_holds ?b)
                              )
                              (agent_holds ?b)
                            )
                            (in_motion ?d)
                            (broken ?p)
                          )
                        )
                      )
                    )
                    (and
                      (game-conserved
                        (not
                          (not
                            (on upright ?r)
                          )
                        )
                      )
                    )
                  )
                )
              )
              (and
                (and
                  (exists (?c - cube_block ?tb - chair)
                    (game-conserved
                      (agent_holds door)
                    )
                  )
                  (game-conserved
                    (exists (?b - hexagonal_bin ?b - pillow ?g ?b6 - teddy_bear)
                      (and
                        (not
                          (between upright ?t ?b)
                        )
                        (not
                          (agent_holds ?b)
                        )
                        (broken ?b)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h ?w - ball)
      (and
        (preference throwToBinFromDistance
          (exists (?c6 ?b ?b ?c - hexagonal_bin)
            (then
              (once (on yellow ?c6) )
              (once (touch ?c desk) )
              (once (agent_holds ?c6) )
            )
          )
        )
      )
    )
    (preference ballKnocksBlockFromRug
      (exists (?d - hexagonal_bin)
        (at-end
          (= 4 1)
        )
      )
    )
  )
)
(:terminal
  (or
    (= (* (count-overlapping throwToBinFromDistance:pink) (count ballKnocksBlockFromRug:green) )
      30
    )
    (or
      (> (count-once-per-objects throwToBinFromDistance:beachball) (total-time) )
      (<= 15 (* (count ballKnocksBlockFromRug:pink_dodgeball) 20 )
      )
    )
  )
)
(:scoring
  (count-once-per-objects throwToBinFromDistance:blue:red)
)
)



(define (game game-id-243) (:domain few-objects-room-v1)
(:setup
  (exists (?t1 - teddy_bear)
    (game-conserved
      (not
        (exists (?p - hexagonal_bin ?f - building)
          (in ?f front)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b3 - building)
      (and
        (preference pillowMovedToRoomCenter
          (exists (?d ?d1 - hexagonal_bin)
            (then
              (hold-while (agent_holds ?d1) (exists (?d - game_object) (in ?d ?d1) ) (above ?d1 ?b3) )
              (once (in ?d1 ?d) )
              (once (in room_center bed) )
              (hold (agent_holds ?d1) )
              (once (and (not (on ?d ?d) ) (open ?b3) ) )
              (once (and (not (open door) ) (and (and (not (and (not (agent_holds ?d) ) (and (and (not (in_motion desk) ) (and (and (agent_holds ?d1) (in_motion ?d) (in_motion ?d) ) (= (distance ?b3 ?d) 1) ) (not (agent_holds ?b3) ) ) (in ?d ?d) (not (not (on desk ?d) ) ) ) ) ) (in_motion ?b3) ) (game_start ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (> 2 (count pillowMovedToRoomCenter:basketball:pyramid_block) )
    (>= 2 10 )
  )
)
(:scoring
  (count-once pillowMovedToRoomCenter:beachball)
)
)



(define (game game-id-244) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (not
      (agent_holds side_table)
    )
  )
)
(:constraints
  (and
    (preference ballThrownHitsAgent
      (exists (?h - ball ?d ?l1 - flat_block)
        (then
          (once (in_motion ?d) )
          (hold-while (in desk ?d) (adjacent ?l1 ?d) (and (and (adjacent ?l1 ?l1) (< (distance desk ?d) 1) ) (on agent ?d) (in ?d ?l1) ) (not (in_motion desk) ) )
          (once (adjacent ?d ?l1) )
        )
      )
    )
    (preference itemsTurnedOff
      (exists (?p2 - dodgeball ?b - hexagonal_bin)
        (then
          (once (in desk ?b) )
          (once (not (forall (?b - (either top_drawer)) (or (in front_left_corner ?b) (faces ?b ?b) (touch room_center ?b) ) ) ) )
          (hold (in_motion ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (count-once ballThrownHitsAgent:dodgeball) )
)
(:scoring
  (* (* (count itemsTurnedOff:dodgeball) 3 )
    (count-total itemsTurnedOff:rug)
  )
)
)



(define (game game-id-245) (:domain medium-objects-room-v1)
(:setup
  (exists (?b10 - dodgeball)
    (exists (?g - doggie_bed ?l2 - hexagonal_bin)
      (exists (?d - curved_wooden_ramp ?b - block)
        (game-conserved
          (not
            (not
              (not
                (not
                  (in_motion ?b10)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToBin
      (exists (?c - blue_cube_block ?s - hexagonal_bin)
        (then
          (hold-while (= 8 (building_size ?s)) (agent_holds ?s) )
          (hold (not (and (not (on ?s ?s) ) (not (is_setup_object rug) ) ) ) )
          (hold (touch ?s ?s) )
          (hold-while (adjacent ?s agent) (on ?s ?s) )
        )
      )
    )
  )
)
(:terminal
  (>= (- 5 )
    60
  )
)
(:scoring
  (* (+ (+ (= (+ (count-shortest throwToBin:yellow_pyramid_block) (count-once-per-external-objects throwToBin:yellow) 50 )
          (count throwToBin:dodgeball)
        )
        15
      )
      5
    )
    10
  )
)
)



(define (game game-id-246) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (forall (?b - desk_shelf)
      (in_motion ?b)
    )
  )
)
(:constraints
  (and
    (preference ballKnocksBlockFromRug
      (exists (?c ?t - (either yellow_cube_block rug) ?p - dodgeball)
        (then
          (hold-while (and (touch ?p ?p) (forall (?b - (either wall laptop)) (same_object ?b agent) ) ) (not (agent_holds ?p) ) (not (not (and (not (above desk ?p) ) (and (in_motion floor) (and (not (in_motion ?p) ) (in_motion ?p) ) ) (on ?p ?p) ) ) ) )
          (once (same_color ?p ?p) )
          (once (in_motion ?p) )
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (or
        (>= (count-once-per-objects ballKnocksBlockFromRug:red) (+ 2 (count ballKnocksBlockFromRug:pyramid_block) )
        )
        (or
          (>= (count ballKnocksBlockFromRug:basketball:pink_dodgeball:red) (count ballKnocksBlockFromRug:rug:purple) )
        )
      )
      (>= (count ballKnocksBlockFromRug:basketball) 1 )
    )
  )
)
(:scoring
  (count ballKnocksBlockFromRug:side_table)
)
)



(define (game game-id-247) (:domain few-objects-room-v1)
(:setup
  (exists (?g - hexagonal_bin ?h - building)
    (and
      (and
        (and
          (game-optional
            (not
              (not
                (toggled_on ?h)
              )
            )
          )
        )
        (game-optional
          (adjacent desktop ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballToBinFromBed
      (exists (?l - (either yellow_cube_block pen laptop) ?r1 - doggie_bed)
        (then
          (once-measure (in_motion desk) (distance ?r1 agent) )
          (hold (in ?r1 blue) )
          (once (touch ?r1 ?r1) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (>= (* (* 2 (<= (count ballToBinFromBed:basketball) (count-once-per-objects ballToBinFromBed:dodgeball) )
            )
            (count-longest ballToBinFromBed:dodgeball)
          )
          (<= 3 5 )
        )
        (total-score)
      )
      (< (total-time) (total-time) )
    )
    (and
      (>= (- (count ballToBinFromBed:dodgeball:dodgeball) (count ballToBinFromBed:dodgeball:dodgeball) ) (count-once-per-objects ballToBinFromBed:red) )
    )
  )
)
(:scoring
  (count-once-per-objects ballToBinFromBed:blue_cube_block)
)
)



(define (game game-id-248) (:domain many-objects-room-v1)
(:setup
  (forall (?h - game_object ?d - wall)
    (exists (?c3 - (either yellow golfball))
      (and
        (and
          (game-optional
            (not
              (in_motion ?c3)
            )
          )
        )
        (game-conserved
          (or
            (not
              (in agent ?c3)
            )
            (agent_holds ?c3)
            (not
              (in_motion rug)
            )
          )
        )
        (exists (?h - dodgeball ?h - hexagonal_bin)
          (game-optional
            (in agent ?d)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockOnBlockInTowerAtEnd
      (exists (?h ?d - book)
        (then
          (once-measure (not (not (or (agent_holds ?d) ) ) ) (distance ?d floor) )
          (once (touch ?d ?d) )
          (once (not (agent_holds ?h) ) )
        )
      )
    )
    (preference itemsHidingScreens
      (exists (?b - beachball)
        (then
          (once (< (distance ?b ?b) (distance ?b ?b)) )
          (once (<= 0.5 (building_size agent)) )
          (once (opposite ?b ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= 0 (count blockOnBlockInTowerAtEnd:dodgeball) )
)
(:scoring
  (* 50 (count-shortest blockOnBlockInTowerAtEnd:pink) )
)
)



(define (game game-id-249) (:domain few-objects-room-v1)
(:setup
  (forall (?t1 - sliding_door ?p - curved_wooden_ramp ?s - cube_block)
    (and
      (forall (?d - (either pyramid_block cellphone))
        (game-conserved
          (<= 1 (distance room_center ?s))
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwGolfballToBin
      (exists (?r2 - hexagonal_bin)
        (then
          (hold (on ?r2 agent) )
          (once (not (and (agent_holds ?r2) (in_motion ?r2) ) ) )
          (hold (agent_holds ?r2) )
        )
      )
    )
    (preference throwMissesBin
      (exists (?h - dodgeball ?c - hexagonal_bin)
        (then
          (once (agent_holds ?c) )
          (once (on ?c ?c) )
          (once (adjacent desk ?c) )
        )
      )
    )
    (forall (?c4 - shelf ?d - doggie_bed)
      (and
        (preference ballThrownToBin
          (exists (?c - wall)
            (then
              (hold (in_motion ?d) )
              (once (in_motion agent) )
              (once (in_motion ?c) )
            )
          )
        )
        (preference blockIncorrectlyPicked
          (exists (?s - (either pyramid_block teddy_bear doggie_bed))
            (then
              (once (in_motion room_center) )
              (once (exists (?b5 - (either cube_block dodgeball)) (in_motion desk) ) )
              (once (in ?s desk) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (* 1 (count-total throwMissesBin:blue_dodgeball:dodgeball) )
    0.5
  )
)
(:scoring
  (- 100 )
)
)



(define (game game-id-250) (:domain few-objects-room-v1)
(:setup
  (forall (?b5 - dodgeball ?c3 - red_dodgeball)
    (exists (?p2 - game_object ?b - ball)
      (game-conserved
        (in_motion ?c3)
      )
    )
  )
)
(:constraints
  (and
    (forall (?b7 - bridge_block ?c - cube_block)
      (and
        (preference dodgeballHitsPillowWithoutTouchingBlock
          (exists (?c1 ?b - block)
            (then
              (once (agent_holds ?c1) )
              (once (not (in_motion ?c1) ) )
              (hold (agent_holds ?c1) )
            )
          )
        )
        (preference throwBallToBin
          (exists (?l - pillow)
            (then
              (once (> 1 0.5) )
              (hold (and (on ?l ?l) (in_motion ?c) ) )
              (once (on ?c ?l) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (= 5 (count throwBallToBin:green) )
    )
  )
)
(:scoring
  (count dodgeballHitsPillowWithoutTouchingBlock:golfball:golfball)
)
)



(define (game game-id-251) (:domain few-objects-room-v1)
(:setup
  (forall (?o - dodgeball)
    (forall (?c1 - cube_block)
      (exists (?s - pillow)
        (and
          (exists (?b7 - ball)
            (and
              (exists (?b3 - doggie_bed ?h - ball ?r ?b2 - dodgeball)
                (and
                  (and
                    (and
                      (exists (?r - ball)
                        (forall (?c ?h - watch)
                          (not
                            (game-optional
                              (and
                                (and
                                  (not
                                    (not
                                      (agent_holds right)
                                    )
                                  )
                                  (equal_x_position ?s ?h)
                                )
                                (and
                                  (not
                                    (agent_holds agent)
                                  )
                                  (< 1 (building_size ?r))
                                )
                              )
                            )
                          )
                        )
                      )
                      (or
                        (game-optional
                          (not
                            (on ?b7 ?c1)
                          )
                        )
                      )
                      (forall (?t - dodgeball ?c - game_object ?b - cube_block)
                        (and
                          (game-optional
                            (agent_holds yellow)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
          (exists (?s - curved_wooden_ramp)
            (game-conserved
              (on ?o ?c1)
            )
          )
          (forall (?l3 - red_dodgeball)
            (forall (?o1 ?d2 - building)
              (and
                (and
                  (and
                    (forall (?d - block)
                      (game-optional
                        (on ?c1 ?s)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference teddyBearLandsInBin
      (exists (?c - (either teddy_bear golfball laptop) ?c6 - ball)
        (at-end
          (rug_color_under desk ?c6)
        )
      )
    )
  )
)
(:terminal
  (or
    (> (count-unique-positions teddyBearLandsInBin:yellow:top_drawer) 3 )
    (and
      (> (total-time) 2 )
    )
    (> (* (count-once-per-objects teddyBearLandsInBin:yellow:blue_dodgeball) 2 (external-forall-minimize (count teddyBearLandsInBin:basketball) ) (count-overlapping teddyBearLandsInBin:golfball) 5 (+ (count teddyBearLandsInBin:cube_block) (count teddyBearLandsInBin:red) )
      )
      (total-score)
    )
  )
)
(:scoring
  (+ (count teddyBearLandsInBin:doggie_bed:red) (* (+ 3 (* (* 4 10 (* (count-once-per-objects teddyBearLandsInBin:doggie_bed) 2 )
          )
          (count teddyBearLandsInBin:beachball)
          6
          7
        )
      )
      (count-once-per-objects teddyBearLandsInBin:hexagonal_bin)
    )
  )
)
)



(define (game game-id-252) (:domain many-objects-room-v1)
(:setup
  (or
    (exists (?b3 - ball)
      (game-conserved
        (and
          (and
            (< 7 (distance ?b3 ?b3))
            (not
              (not
                (not
                  (agent_holds ?b3)
                )
              )
            )
            (in_motion ?b3)
          )
          (agent_holds ?b3)
          (>= 10 (distance ?b3 west_wall))
          (exists (?o1 - cube_block)
            (toggled_on ?b3)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?p - hexagonal_bin ?o - hexagonal_bin ?d - dodgeball)
      (and
        (preference ballOnBedAtEnd
          (exists (?b ?p2 - chair)
            (then
              (once (< 4 1) )
              (hold-while (< (distance ?p2 ?d) (distance ?p2 ?d)) (and (in_motion ?p2) (adjacent_side ?d ?p2 ?d) (not (agent_holds ?p2) ) ) (touch ?b ?p2) (not (and (and (not (in ?p2 ?b) ) (and (same_object ?b ?d) (same_color rug ?d) (in_motion ?p2) ) ) (not (in_motion ?b) ) ) ) )
              (hold (>= 1 (distance ?p2 ?b)) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (* (count ballOnBedAtEnd:doggie_bed) (count-same-positions ballOnBedAtEnd:beachball) )
      0.7
    )
    (* (* (* (* 5 6 )
          (- (external-forall-maximize (count-once-per-objects ballOnBedAtEnd:book) ) )
        )
        (* 10 (= (- 2 )
            (count-once-per-objects ballOnBedAtEnd:basketball)
          )
        )
      )
      8
    )
  )
)
(:scoring
  (+ (* 30 2 4 (* 5 (* 2 (count ballOnBedAtEnd:dodgeball:cylindrical_block) )
      )
      (* (* (* 30 4 )
          (count ballOnBedAtEnd:block)
        )
        (* 0 (* (count ballOnBedAtEnd:bed) 8 )
        )
      )
      (count ballOnBedAtEnd:beachball)
    )
    (* 4 (* 9 40 )
    )
    60
  )
)
)



(define (game game-id-253) (:domain many-objects-room-v1)
(:setup
  (exists (?ob - hexagonal_bin)
    (forall (?w - drawer ?d - hexagonal_bin ?b - drawer)
      (and
        (and
          (game-conserved
            (in_motion ?ob)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballHitsPillowWithoutTouchingBlock
      (exists (?c3 ?b3 - hexagonal_bin)
        (then
          (hold-while (> (x_position ?b3) (distance ?c3 agent)) (in ?b3 agent) (not (between ?b3 ?c3 ?c3) ) )
          (once (and (equal_z_position ?c3 ?b3) (not (in_motion ?b3) ) ) )
          (once (= 1 8) )
        )
      )
    )
    (forall (?l4 - hexagonal_bin ?d - wall)
      (and
        (preference blocksInPlace
          (exists (?d1 - block)
            (then
              (once (on ?d1 ?d1) )
              (hold (in_motion ?d) )
            )
          )
        )
        (preference thrownObjectHitsComputer
          (exists (?l3 - hexagonal_bin)
            (then
              (hold-while (and (and (and (is_setup_object ?d) (and (in side_table ?l3) (in_motion desk) (and (in_motion ?l3) (in ?l3 ?l3) (on ?l3 west_wall) (and (in_motion agent) (and (on ?l3 ?d) (and (not (adjacent ?l3 ?l3) ) ) ) ) ) ) ) (and (< 4 (distance ?d ?d)) (not (between agent pink_dodgeball ?d) ) ) (in_motion ?d) ) (and (adjacent_side ?d ?d ?d) (not (adjacent ?l3 ?d) ) ) ) (adjacent ?d ?d) (and (adjacent desk ?l3) (not (agent_holds ?l3) ) ) (and (not (and (and (not (on ?l3 ?d) ) (not (agent_holds ?d) ) ) (and (and (in ?d ?d) (and (in ?d ?l3) (forall (?c4 - teddy_bear) (not (not (in_motion ?c4) ) ) ) ) ) (not (not (not (in_motion ?d) ) ) ) ) ) ) (adjacent ?l3 ?d) ) )
              (once-measure (not (and (agent_holds south_wall) (agent_holds ?l3) ) ) (distance ?d ?l3) )
              (once (and (adjacent floor ?d) (agent_holds upright) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count dodgeballHitsPillowWithoutTouchingBlock:red) (total-score) )
)
(:scoring
  (- (count-once-per-objects dodgeballHitsPillowWithoutTouchingBlock:alarm_clock) )
)
)



(define (game game-id-254) (:domain many-objects-room-v1)
(:setup
  (exists (?g - chair)
    (game-conserved
      (not
        (touch ?g ?g)
      )
    )
  )
)
(:constraints
  (and
    (preference tanObjectMovedToRoomCenter
      (exists (?h - beachball)
        (then
          (once (in ?h ?h) )
          (once (not (in_motion ?h) ) )
          (once (not (on ?h bed) ) )
        )
      )
    )
    (forall (?b - hexagonal_bin)
      (and
        (preference blockInTowerAtEnd
          (exists (?c - teddy_bear)
            (then
              (once (in ?b ?c) )
              (once (< 1 1) )
              (hold (and (in_motion ?b) (in_motion ?c) ) )
            )
          )
        )
        (preference ballThrownHitsAgent
          (exists (?l3 - dodgeball)
            (then
              (once (between ?b ?l3 ?b) )
              (hold (in_motion ?l3) )
              (hold (and (on agent ?b) (and (agent_holds ?l3) (and (not (and (not (and (and (in_motion ?l3) (in ?b rug) ) (< (distance ?l3 room_center) (distance ?b ?l3)) (broken ?l3) ) ) (not (or (on ?l3 ?b) (adjacent_side ?b desk ?b ?l3) (on ?b ?l3) ) ) ) ) (< (distance ?b ?b) (distance ?b ?l3)) ) ) ) )
            )
          )
        )
        (preference bookOnDeskShelf
          (exists (?c - hexagonal_bin)
            (at-end
              (exists (?o3 - hexagonal_bin)
                (in_motion ?b)
              )
            )
          )
        )
      )
    )
    (preference dropAttempt
      (exists (?c - curved_wooden_ramp)
        (then
          (once (not (same_color ?c ?c) ) )
          (once (and (in_motion ?c) (agent_holds bed) ) )
          (once (on ?c ?c) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (< (total-score) 1 )
    )
    (> (total-time) 3 )
    (= (total-score) (total-score) )
    (and
      (>= (* 5 (* (count tanObjectMovedToRoomCenter:green) (count-once blockInTowerAtEnd:yellow) )
        )
        (count-once-per-objects dropAttempt)
      )
    )
  )
)
(:scoring
  (count-once-per-objects tanObjectMovedToRoomCenter:dodgeball)
)
)



(define (game game-id-255) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (game-optional
        (forall (?t1 - hexagonal_bin)
          (and
            (< (distance ?t1 ?t1) 1)
            (adjacent ?t1 ?t1)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownThroughRampToBin
      (exists (?b8 ?b2 ?b4 ?o ?o2 - block ?d - hexagonal_bin)
        (then
          (once (on door ?d) )
          (hold (exists (?b - (either dodgeball cylindrical_block) ?d ?c - (either cube_block watch) ?s ?ob - building ?b - wall) (not (adjacent ?b ?d) ) ) )
          (once (in ?d ?d) )
        )
      )
    )
    (preference pillowMovedToRoomCenter
      (exists (?w - hexagonal_bin)
        (then
          (once (above desk ?w) )
          (hold-while (object_orientation top_drawer ?w) (and (not (in ?w ?w) ) (agent_holds ?w) (not (on ?w ?w) ) ) (agent_holds ?w) (not (not (and (in_motion agent) (and (opposite ?w ?w) (not (in ?w agent) ) ) ) ) ) )
          (once (and (between ?w ?w ?w) (in_motion ?w) (< (distance ?w ?w) (distance ?w ?w)) (equal_z_position ?w ?w) ) )
        )
      )
    )
    (forall (?h ?b2 - hexagonal_bin)
      (and
        (preference ballThrownMissesEverything
          (exists (?c2 - pillow ?b1 - green_triangular_ramp ?l3 ?p1 ?r - teddy_bear ?h - (either cylindrical_block hexagonal_bin cube_block) ?o - hexagonal_bin)
            (at-end
              (not
                (> 7 (distance ball ?o))
              )
            )
          )
        )
        (preference ballThrownIntoTarget
          (exists (?b2 - block ?c - building)
            (then
              (once (not (in_motion ?h) ) )
              (hold (and (not (object_orientation ?h ?c) ) (= (distance ?c ?b2) 7) ) )
              (once (agent_holds ?b2) )
            )
          )
        )
      )
    )
    (preference throwBallToBin
      (exists (?tb - red_dodgeball)
        (then
          (hold (not (and (and (> (distance west_wall agent) (distance_side ?tb ?tb ?tb)) (in_motion sideways) ) (agent_holds ?tb) ) ) )
          (hold (< (distance ?tb ?tb) (distance ?tb ?tb)) )
          (once (not (and (agent_holds ?tb) (not (opposite ?tb ?tb) ) ) ) )
        )
      )
    )
    (forall (?b1 - wall)
      (and
        (preference blueObjectMovedToRoomCenter
          (exists (?b9 - curved_wooden_ramp)
            (then
              (once (adjacent ?b9 ?b9) )
              (once (agent_holds ?b1) )
              (once (agent_crouches ) )
            )
          )
        )
      )
    )
    (preference blockPlacedInBuilding
      (exists (?b - dodgeball ?b ?b - hexagonal_bin)
        (at-end
          (touch agent ?b)
        )
      )
    )
  )
)
(:terminal
  (< (count ballThrownIntoTarget:dodgeball) (total-score) )
)
(:scoring
  (> 10 (count ballThrownThroughRampToBin:dodgeball) )
)
)



(define (game game-id-256) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?d - beachball ?c - blinds ?c - pyramid_block)
      (game-optional
        (agent_holds ?c)
      )
    )
  )
)
(:constraints
  (and
    (preference blockInTowerKnocked
      (exists (?c5 - (either golfball teddy_bear) ?o3 - hexagonal_bin ?b8 - hexagonal_bin)
        (at-end
          (in_motion agent)
        )
      )
    )
    (preference throwObjectToBin
      (exists (?h - hexagonal_bin ?t - hexagonal_bin)
        (then
          (hold (agent_holds ?t) )
          (once (agent_holds blinds) )
          (hold (and (not (in_motion ?t) ) (and (not (not (and (and (agent_holds ?t) (forall (?p3 - hexagonal_bin) (in pillow ?p3) ) ) (in_motion ?t) ) ) ) (or (object_orientation ?t desk) (in_motion ?t) ) ) ) )
        )
      )
    )
    (preference throwKnocksOverBear
      (exists (?r - ball)
        (at-end
          (and
            (not
              (in_motion ?r)
            )
            (and
              (exists (?c5 - dodgeball)
                (or
                  (broken ?c5)
                  (not
                    (in_motion ?c5)
                  )
                )
              )
              (and
                (in_motion ?r)
                (not
                  (in_motion ?r)
                )
                (and
                  (same_color ?r ?r)
                  (not
                    (agent_holds ?r)
                  )
                )
              )
            )
          )
        )
      )
    )
    (preference throwBallToBinOffObject
      (exists (?p2 - shelf)
        (then
          (once (< (distance ?p2 rug) (distance ?p2 ?p2)) )
          (hold-while (same_object ?p2 ?p2) (agent_holds ?p2) )
          (once (not (agent_holds agent) ) )
        )
      )
    )
    (preference blockThrowAttempt
      (exists (?t - building)
        (then
          (once (and (and (and (agent_holds ?t) (and (touch ?t ?t) (not (on ?t ?t) ) ) ) (agent_holds ?t) ) (not (< 7 8) ) ) )
          (hold-while (and (rug_color_under ?t ?t) (in ?t ?t) ) (not (touch ?t ?t) ) )
          (hold-while (and (agent_holds ?t) (> (distance rug ?t) 5) ) (exists (?o3 - dodgeball ?b - ball) (in_motion ?t) ) (not (and (and (not (on ?t ?t) ) (not (and (game_over ) (rug_color_under desk ?t) ) ) ) (< (distance ?t ?t) (distance ?t ?t)) ) ) (on ?t ?t) )
        )
      )
    )
    (preference throwFromBehindChairsInBin
      (exists (?s - hexagonal_bin)
        (at-end
          (< (distance ?s ?s) (distance ?s ?s))
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* (count blockInTowerKnocked:pink) (count-once-per-objects throwBallToBinOffObject:basketball) )
      180
    )
  )
)
(:scoring
  (count throwBallToBinOffObject:pink)
)
)



(define (game game-id-257) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-optional
      (not
        (and
          (not
            (in_motion ball)
          )
          (in_motion agent)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - dodgeball ?b8 - block)
      (and
        (preference laptopAndBookInPlace
          (exists (?b1 - dodgeball)
            (then
              (once (and (in_motion ?b1) (on ?b8 desk) ) )
              (once (adjacent ?b8 desk) )
              (hold (in_motion ?b8) )
              (once-measure (is_setup_object ?b1) (distance ?b1 ?b8) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (- 10 )
    5
  )
)
(:scoring
  (+ 2 (* (count-once-per-objects laptopAndBookInPlace:yellow) 20 )
  )
)
)



(define (game game-id-258) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds south_wall)
  )
)
(:constraints
  (and
    (preference castleBuilt
      (exists (?b ?b ?f ?d - curved_wooden_ramp ?h - golfball)
        (at-end
          (and
            (and
              (and
                (open ?h)
                (forall (?c4 - ball)
                  (and
                    (is_setup_object desk)
                    (exists (?p1 - drawer)
                      (and
                        (in green bed)
                        (not
                          (object_orientation ?h ?h)
                        )
                      )
                    )
                  )
                )
              )
              (in_motion ?h)
            )
            (agent_holds ?h)
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (count castleBuilt:tall_cylindrical_block) 4 )
    (>= (+ (count castleBuilt:dodgeball) (+ (+ (external-forall-minimize (< 9 5 )
            )
            5
          )
          (count castleBuilt:hexagonal_bin)
        )
      )
      (total-score)
    )
  )
)
(:scoring
  (count castleBuilt:brown)
)
)



(define (game game-id-259) (:domain medium-objects-room-v1)
(:setup
  (exists (?h - (either mug dodgeball mug))
    (game-optional
      (in_motion ?h)
    )
  )
)
(:constraints
  (and
    (preference blueObjectMovedToRoomCenter
      (exists (?c - red_dodgeball ?h - pillow ?h - chair ?b - green_triangular_ramp)
        (then
          (once (and (in_motion ?b) (agent_holds ?b) ) )
          (once (agent_holds ?b) )
          (hold (not (same_type ?b ?b) ) )
        )
      )
    )
    (preference throwFromDoorToBin
      (exists (?l - game_object ?d - building)
        (at-end
          (not
            (and
              (or
                (and
                  (exists (?b - color)
                    (adjacent ?b ?b)
                  )
                  (in ?d ?d)
                  (and
                    (forall (?b9 - shelf ?d - tall_cylindrical_block ?b - wall)
                      (and
                        (and
                          (on desk ?d)
                          (in_motion desk)
                        )
                        (same_object floor ?b)
                      )
                    )
                  )
                )
                (on ?d pink)
                (is_setup_object ?d)
                (in_motion ?d)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (or
        (< (total-time) 15 )
        (= (count blueObjectMovedToRoomCenter:dodgeball) (count throwFromDoorToBin:book) )
      )
      (> 3 (total-score) )
    )
  )
)
(:scoring
  (* (count blueObjectMovedToRoomCenter:dodgeball:basketball) (* 2 (count blueObjectMovedToRoomCenter:green) )
  )
)
)



(define (game game-id-260) (:domain few-objects-room-v1)
(:setup
  (exists (?c - dodgeball ?b ?r - chair)
    (and
      (or
        (exists (?b3 ?x - chair)
          (exists (?s - hexagonal_bin)
            (exists (?h - block)
              (game-optional
                (in_motion ?r)
              )
            )
          )
        )
        (game-conserved
          (in_motion pink_dodgeball)
        )
        (game-conserved
          (in ?b ?r)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownMissesEverything
      (exists (?d - chair)
        (then
          (once (exists (?d - hexagonal_bin) (on ?d agent) ) )
        )
      )
    )
  )
)
(:terminal
  (<= (total-time) (count-once ballThrownMissesEverything:beachball) )
)
(:scoring
  (* (* 2 (* (* 3 (count ballThrownMissesEverything:tan) (+ 2 (count-longest ballThrownMissesEverything:yellow) (= (count-once ballThrownMissesEverything:green:blue_pyramid_block) (* (* (count ballThrownMissesEverything:dodgeball) (+ 4 (count ballThrownMissesEverything:dodgeball) )
                )
                (count ballThrownMissesEverything:dodgeball)
              )
            )
            (* 3 (count-once-per-objects ballThrownMissesEverything:golfball:beachball) )
            5
            (- (+ (external-forall-maximize (* 180 (count-once ballThrownMissesEverything:dodgeball) )
                )
                300
              )
            )
          )
          1
          0
        )
        (count-once-per-objects ballThrownMissesEverything:dodgeball)
      )
    )
    (+ (+ (* -10 (count ballThrownMissesEverything:beachball) (* (count-once-per-objects ballThrownMissesEverything) 25 )
          3
          (count-total ballThrownMissesEverything:basketball)
        )
        (count ballThrownMissesEverything:golfball:yellow:beachball)
        2
        (count ballThrownMissesEverything:red_pyramid_block)
        3
        5
        (+ (* 16 3 )
          (count ballThrownMissesEverything:hexagonal_bin:yellow_pyramid_block)
        )
      )
      (* (count ballThrownMissesEverything:beachball) (count-once ballThrownMissesEverything:dodgeball:basketball) )
    )
  )
)
)



(define (game game-id-261) (:domain many-objects-room-v1)
(:setup
  (forall (?r - hexagonal_bin)
    (and
      (and
        (forall (?b - cube_block ?c - golfball)
          (and
            (game-optional
              (same_object room_center ?r)
            )
            (game-optional
              (in_motion ?r)
            )
            (game-conserved
              (on ?r rug)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference golfballInBinFromPillow
      (exists (?c - hexagonal_bin ?w ?b5 - building)
        (then
          (once (on ?w ?b5) )
          (hold (rug_color_under ?w rug) )
          (once (in_motion ?b5) )
        )
      )
    )
  )
)
(:terminal
  (<= 2 0.7 )
)
(:scoring
  (count golfballInBinFromPillow:beachball:cylindrical_block)
)
)



(define (game game-id-262) (:domain few-objects-room-v1)
(:setup
  (forall (?d - (either top_drawer dodgeball cd mug))
    (game-conserved
      (and
        (in_motion bed)
        (in_motion agent)
      )
    )
  )
)
(:constraints
  (and
    (forall (?c ?p1 ?b ?b ?h ?p3 - ball)
      (and
        (preference pinkObjectMovedToRoomCenter
          (exists (?h - (either mug cd))
            (then
              (hold (agent_holds ?p3) )
              (once (= (distance desk ?c) (distance ?p3 ?b) 1) )
              (hold (adjacent_side ?h ?p1 ?p3 ?p3) )
            )
          )
        )
        (preference blocksInPlace
          (then
            (once (not (and (touch ?h ?p3) (in ?p3 green_golfball) ) ) )
            (once (in_motion ?p3) )
            (once (not (not (and (not (and (in_motion ?c) (and (in_motion desk) (in_motion ?p1) ) ) ) (in ?b ?p3) ) ) ) )
            (once (and (agent_crouches ) (agent_holds ?b) (on ?b north_wall) ) )
          )
        )
      )
    )
    (forall (?b3 - dodgeball)
      (and
        (preference objectInBuilding
          (exists (?d - ball ?d - ball)
            (then
              (hold (and (agent_holds ?d) (in_motion ?d) (in_motion ?b3) ) )
              (once (<= (distance ?b3 ?d) (building_size ?d)) )
              (hold (in_motion ?b3) )
            )
          )
        )
      )
    )
    (preference cubeBlockThrowAttempt
      (exists (?c3 - dodgeball)
        (then
          (once (and (adjacent desk ?c3) (agent_holds ?c3) (agent_holds agent) ) )
          (hold (exists (?b10 - hexagonal_bin ?l4 - block) (and (< (distance top_shelf ?c3) (distance_side ?l4 ?l4 ?l4 ?c3)) (in_motion ?c3) ) ) )
          (once (adjacent_side ?c3 ?c3 agent) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 10 (total-time) )
  )
)
(:scoring
  (* (count cubeBlockThrowAttempt:beachball) (count-once-per-objects pinkObjectMovedToRoomCenter:beachball) )
)
)



(define (game game-id-263) (:domain few-objects-room-v1)
(:setup
  (forall (?d - pillow ?l1 - doggie_bed)
    (forall (?d - chair)
      (and
        (game-optional
          (on ?d ?d)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwMissesBin
      (exists (?b - ball ?l1 - blue_cube_block)
        (then
          (once (above ?l1 ?l1) )
          (once (not (in_motion ?l1) ) )
          (once (not (and (in_motion ?l1) (on ?l1 ?l1) (agent_holds ?l1) ) ) )
        )
      )
    )
    (preference throwFromBehindChairsInBin
      (exists (?o1 - cube_block)
        (then
          (once (exists (?d - (either pink watch)) (not (and (agent_holds bed) ) ) ) )
          (once (and (or (not (and (in_motion ?o1) (faces room_center ?o1) ) ) (in_motion ?o1) (and (above bed ?o1) (and (not (in ?o1 green) ) (forall (?h - hexagonal_bin) (in_motion ?o1) ) ) ) ) (not (same_type ?o1 room_center) ) (and (exists (?o - (either book pyramid_block)) (<= 1 (distance ?o ?o1)) ) (or (same_color ?o1 ?o1) (agent_holds ?o1) (and (on ?o1 ?o1) (game_start ) ) (and (not (not (and (in_motion agent) (< (distance_side ?o1 ?o1 ?o1) (distance ?o1 ?o1)) ) ) ) (same_object desk ?o1) ) ) (agent_holds ?o1) ) ) )
          (hold (not (not (not (and (on ?o1 ?o1) (exists (?o3 - dodgeball) (and (in_motion ?o1) (and (exists (?d - game_object) (< (distance_side ?o1 ?o3 main_light_switch ?d) 4) ) (agent_holds ?o3) (not (not (on ?o1 ?o3) ) ) ) ) ) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (= (total-score) (total-time) )
  )
)
(:scoring
  (count throwFromBehindChairsInBin:book)
)
)



(define (game game-id-264) (:domain few-objects-room-v1)
(:setup
  (exists (?d1 - ball ?o4 - hexagonal_bin ?t - dodgeball ?o - hexagonal_bin ?c - dodgeball)
    (exists (?b1 - game_object ?c5 - (either doggie_bed game_object key_chain))
      (game-optional
        (not
          (not
            (in_motion ?c5)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference beachballOnRug
      (exists (?s - game_object ?c2 - hexagonal_bin)
        (then
          (once (in_motion ?c2) )
          (once (touch ?c2 ?c2) )
          (hold (and (on ?c2 ?c2) (not (not (not (in_motion ?c2) ) ) ) (equal_x_position ?c2 ?c2) ) )
          (hold (>= (distance ?c2 ?c2) (x_position ?c2)) )
        )
      )
    )
    (preference objectToBinOnFirstTry
      (exists (?b9 - ball)
        (then
          (once (on rug ?b9) )
          (hold (and (agent_holds ?b9) (in_motion room_center) (in_motion ?b9) ) )
          (hold (in_motion ?b9) )
        )
      )
    )
    (preference woodenBlockMovedFromRugToDesk
      (exists (?s - dodgeball ?p1 - ball ?g - pillow)
        (then
          (hold (not (same_object ?g ?g) ) )
          (once (agent_holds ?g) )
          (once (not (toggled_on ?g) ) )
        )
      )
    )
    (preference throwAttempt
      (exists (?h - (either desktop pink hexagonal_bin))
        (then
          (hold (not (and (in_motion side_table) (in ?h room_center) ) ) )
          (once (and (not (agent_holds ?h) ) (agent_holds ?h) ) )
          (once (in_motion ?h) )
        )
      )
    )
    (preference blockOnBlockInTowerAtEnd
      (exists (?o - (either golfball) ?b4 - hexagonal_bin ?b - sliding_door)
        (at-end
          (and
            (and
              (not
                (and
                  (and
                    (touch ?b block)
                    (in_motion ?b)
                  )
                  (not
                    (in_motion ?b)
                  )
                )
              )
              (agent_holds ?b)
            )
            (in_motion agent)
            (in ?b ?b)
          )
        )
      )
    )
    (preference dodgeballHitsBinBottom
      (exists (?o - bridge_block)
        (at-end
          (in upright ?o)
        )
      )
    )
  )
)
(:terminal
  (<= 4 9 )
)
(:scoring
  (count blockOnBlockInTowerAtEnd:yellow)
)
)



(define (game game-id-265) (:domain few-objects-room-v1)
(:setup
  (forall (?l - shelf)
    (game-conserved
      (and
        (agent_holds desk)
        (on ?l agent)
      )
    )
  )
)
(:constraints
  (and
    (preference cubeBlockInBuilding
      (exists (?d - ball)
        (then
          (once (in ?d agent) )
          (once (and (<= 3 (distance ?d top_shelf)) (in_motion ?d) (< (distance door agent) (distance ?d ?d)) (in ?d ?d) ) )
          (once (game_start ) )
        )
      )
    )
    (forall (?c3 - ball ?h - dodgeball)
      (and
        (preference throwKnocksBlock
          (then
            (once (on ?h bed) )
            (hold (in ?h ?h) )
            (once (agent_holds pink_dodgeball) )
          )
        )
        (preference golfballLandsInBinThroughRamp
          (exists (?b - hexagonal_bin)
            (then
              (hold (in ?b ?b) )
              (hold (and (exists (?b - ball) (on ?b ?h) ) (and (not (agent_holds door) ) (or (broken ?b) (agent_holds ?b) ) ) ) )
              (hold (same_type ?h ?h) )
              (hold (agent_holds pink_dodgeball) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (count-once-per-objects cubeBlockInBuilding:pink) )
)
(:scoring
  (count throwKnocksBlock:blue_pyramid_block)
)
)



(define (game game-id-266) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?b - dodgeball)
      (game-optional
        (and
          (and
            (above ?b ?b)
            (not
              (on ?b agent)
            )
            (not
              (and
                (not
                  (on ?b ?b)
                )
                (agent_holds floor)
              )
            )
          )
          (not
            (< (x_position ?b) (distance ?b ?b))
          )
          (and
            (not
              (agent_holds ?b)
            )
            (> (distance ?b ?b) 1)
          )
          (and
            (not
              (or
                (in_motion ?b)
                (adjacent_side ?b ?b ?b)
              )
            )
            (and
              (agent_holds ?b)
              (in_motion ?b)
            )
          )
          (in_motion desk)
          (agent_holds ?b)
          (and
            (between ?b ?b agent)
            (opposite ?b ?b)
            (not
              (in_motion ?b)
            )
          )
          (or
            (and
              (in_motion ?b)
              (and
                (and
                  (in_motion ?b)
                  (> 7 (distance ?b ?b))
                )
                (agent_holds ?b)
              )
              (not
                (agent_holds ?b)
              )
              (and
                (in room_center ?b)
                (in_motion ?b)
              )
            )
            (is_setup_object ?b)
          )
          (not
            (agent_holds ?b)
          )
          (not
            (on ?b ?b)
          )
          (and
            (in_motion ?b)
            (not
              (exists (?b3 - ball ?o1 - building ?b - hexagonal_bin)
                (touch ?b bed)
              )
            )
            (on agent ?b)
            (and
              (and
                (not
                  (and
                    (in ?b ?b)
                    (agent_holds ?b)
                  )
                )
                (< (distance ?b ?b) 3)
              )
              (in_motion ?b)
              (same_color ?b ?b)
            )
          )
          (and
            (not
              (exists (?h ?w ?p ?h ?h ?d - building)
                (agent_holds ?d)
              )
            )
            (in_motion ?b)
            (in_motion room_center)
            (agent_holds ?b)
            (and
              (agent_holds ?b)
              (and
                (on ?b ?b)
                (not
                  (in ?b ?b)
                )
              )
            )
            (not
              (and
                (agent_holds ?b)
                (same_color ?b ?b)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference failedThrowToBin
      (exists (?b3 - ball)
        (at-end
          (forall (?b2 - chair)
            (and
              (not
                (not
                  (is_setup_object door)
                )
              )
              (not
                (and
                  (not
                    (not
                      (same_color ?b2 ?b2)
                    )
                  )
                  (agent_holds ?b2)
                  (exists (?h - hexagonal_bin ?c - hexagonal_bin)
                    (= 6 (distance ?b3 desktop))
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (> (total-score) 2 )
    (> 5 8 )
  )
)
(:scoring
  (external-forall-minimize
    (count-once-per-objects failedThrowToBin:triangle_block)
  )
)
)



(define (game game-id-267) (:domain few-objects-room-v1)
(:setup
  (or
    (exists (?t - hexagonal_bin)
      (game-conserved
        (= (distance ?t ?t))
      )
    )
    (game-conserved
      (< 2 10)
    )
  )
)
(:constraints
  (and
    (preference ballKnocksBlockFromRug
      (exists (?bl - ball)
        (then
          (hold (< (building_size ?bl) 1) )
          (hold (and (agent_holds ?bl) (agent_holds ?bl) (not (agent_holds ?bl) ) ) )
        )
      )
    )
    (preference throwToBin
      (exists (?c1 - (either cd pink lamp))
        (then
          (once (on ?c1 ?c1) )
          (once (in_motion agent) )
          (hold (not (and (in ?c1 ?c1) (in_motion green_golfball) (and (in_motion ?c1) (exists (?h - hexagonal_bin ?p3 - hexagonal_bin ?o - ball ?c4 - doggie_bed) (and (not (< 2 (distance ?c1 room_center)) ) (adjacent_side ?c4 ?c4 ?c4) ) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-external-objects ballKnocksBlockFromRug:purple:dodgeball) (count throwToBin:book:beachball) )
)
(:scoring
  (count-once-per-objects ballKnocksBlockFromRug:blue_dodgeball)
)
)



(define (game game-id-268) (:domain medium-objects-room-v1)
(:setup
  (forall (?b5 - cube_block)
    (game-optional
      (agent_holds ?b5)
    )
  )
)
(:constraints
  (and
    (preference throwToBin
      (exists (?c - hexagonal_bin ?h - (either cellphone laptop))
        (at-end
          (and
            (agent_holds ?h)
            (< 3 (distance ?h ?h))
            (in_motion ?h)
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count-once-per-objects throwToBin:blue_dodgeball:dodgeball) 8 )
    (count throwToBin:red_pyramid_block)
  )
)
(:scoring
  (count throwToBin:red_pyramid_block:yellow_pyramid_block:beachball)
)
)



(define (game game-id-269) (:domain few-objects-room-v1)
(:setup
  (exists (?c2 - flat_block)
    (game-conserved
      (in_motion ?c2)
    )
  )
)
(:constraints
  (and
    (preference dodgeballThrownToBin
      (exists (?g - hexagonal_bin ?h - chair)
        (then
          (once (agent_holds ?h) )
          (hold (in_motion floor) )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (+ (count dodgeballThrownToBin:golfball:pink_dodgeball) (* 3 (* (+ (external-forall-maximize (count-once-per-objects dodgeballThrownToBin:dodgeball:basketball) ) (count-once-per-objects dodgeballThrownToBin:pink_dodgeball) (external-forall-maximize (count dodgeballThrownToBin:dodgeball) ) )
          5
        )
      )
    )
  )
)
(:scoring
  (* (* 3 (count dodgeballThrownToBin:doggie_bed:beachball) )
    (count dodgeballThrownToBin:golfball)
    9
  )
)
)



(define (game game-id-270) (:domain many-objects-room-v1)
(:setup
  (exists (?b1 - hexagonal_bin ?d2 - hexagonal_bin)
    (exists (?x - cube_block ?d - hexagonal_bin)
      (and
        (game-conserved
          (open ?d2)
        )
        (exists (?o - hexagonal_bin ?o - book ?b2 - hexagonal_bin ?d - hexagonal_bin)
          (game-optional
            (in_motion ?d2)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToBinOffObject
      (exists (?d ?x - ball ?c4 - bridge_block)
        (then
          (once (not (not (and (not (and (touch ?c4 ?c4) (agent_holds ?c4) ) ) (rug_color_under ?c4 ?c4) (in_motion ?c4) (agent_holds room_center) (in_motion ?c4) (and (in_motion ?c4) (adjacent ?c4 agent) ) (agent_holds ?c4) ) ) ) )
          (once (agent_holds ?c4) )
          (hold (same_color ?c4 pink) )
        )
      )
    )
    (preference pyramidBlockAtopTowerAtEnd
      (exists (?c - hexagonal_bin)
        (then
          (once (not (not (not (not (in ?c ?c) ) ) ) ) )
          (hold (agent_holds ?c) )
          (once (and (agent_holds ?c) (and (not (in_motion ?c) ) (not (on ?c ?c) ) ) (not (in_motion ?c) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 3 (count-once-per-objects pyramidBlockAtopTowerAtEnd:hexagonal_bin) )
    (count-once throwBallToBinOffObject:dodgeball:pyramid_block)
  )
)
(:scoring
  (/
    5
    (* (* (* 4 (external-forall-maximize (+ (count-once-per-objects throwBallToBinOffObject:hexagonal_bin) (count throwBallToBinOffObject:golfball) )
          )
        )
        (* 2 2 )
      )
      (count throwBallToBinOffObject:dodgeball)
    )
  )
)
)



(define (game game-id-271) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (game_start )
  )
)
(:constraints
  (and
    (preference dropAttempt
      (exists (?h - dodgeball ?c5 - hexagonal_bin)
        (then
          (once (not (in_motion pink_dodgeball) ) )
          (hold (agent_holds ?c5) )
          (once (in_motion ?c5) )
        )
      )
    )
  )
)
(:terminal
  (or
    (and
      (or
        (>= 10 (count dropAttempt:doggie_bed) )
      )
      (not
        (>= (count dropAttempt:purple) (external-forall-maximize (+ (count-once-per-objects dropAttempt:dodgeball:purple) (count dropAttempt:pink_dodgeball) (- (external-forall-maximize (external-forall-minimize (count-once dropAttempt:dodgeball) ) ) )
              (* 4 4 )
              5
              4
            )
          )
        )
      )
    )
    (>= 2 9 )
  )
)
(:scoring
  (count dropAttempt:blue_dodgeball)
)
)



(define (game game-id-272) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?b2 - ball ?r - cube_block ?o3 - ball)
      (game-conserved
        (and
          (and
            (and
              (and
                (above ?o3 ?o3)
                (not
                  (on ?o3 ?o3)
                )
              )
              (and
                (not
                  (agent_holds top_drawer)
                )
              )
            )
            (in ?o3 ?o3)
          )
          (and
            (in_motion ?o3)
            (<= (distance_side ?o3 ?o3 ?o3) 4)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference failedThrowToBin
      (exists (?h - ball ?t - hexagonal_bin ?b ?h - hexagonal_bin)
        (then
          (hold (object_orientation ?b ?h) )
          (once (not (agent_holds ?b) ) )
        )
      )
    )
    (preference throwAttempt
      (exists (?t2 - hexagonal_bin)
        (then
          (once (on ?t2 ?t2) )
          (hold (not (same_type ?t2 ?t2) ) )
          (hold-while (in ?t2 bed) (= 1 (distance ?t2 ?t2)) (in ?t2 ?t2) )
        )
      )
    )
    (forall (?c4 - (either dodgeball blue_cube_block))
      (and
        (preference dodgeballFromDeskToTarget
          (exists (?c4 - ball)
            (then
              (hold (and (in_motion ?c4) (same_object ?c4 ?c4) ) )
              (once (and (and (on ?c4 ?c4) (agent_holds ?c4) ) (adjacent agent desk) ) )
              (once (in_motion ?c4) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (count throwAttempt:golfball:green) )
)
(:scoring
  (+ (count dodgeballFromDeskToTarget:beachball) (count throwAttempt:beachball) )
)
)



(define (game game-id-273) (:domain few-objects-room-v1)
(:setup
  (forall (?h - dodgeball ?l - wall)
    (exists (?d - hexagonal_bin)
      (and
        (not
          (game-optional
            (not
              (not
                (and
                  (and
                    (not
                      (in_motion ?l)
                    )
                    (in_motion ?d)
                  )
                  (and
                    (not
                      (not
                        (agent_holds ?l)
                      )
                    )
                    (< 1 1)
                  )
                )
              )
            )
          )
        )
        (not
          (and
            (exists (?t2 - (either laptop desktop) ?c - dodgeball)
              (exists (?c ?s - ball)
                (exists (?c2 - hexagonal_bin)
                  (and
                    (game-conserved
                      (on ?s room_center)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference gameObjectToBin
      (exists (?t - game_object ?h - dodgeball)
        (then
          (once (and (not (on ?h ?h) ) (opposite rug ?h) ) )
          (once (< (distance front_left_corner ?h) (distance ?h ?h)) )
          (once (exists (?w2 - hexagonal_bin ?g - ball ?d - block) (not (exists (?d - (either dodgeball bridge_block)) (and (and (in_motion ?h) (on ?d bed) (agent_holds bed) (and (not (agent_holds ?h) ) (and (on ?d room_center) (agent_holds ?h) (on rug ?d) (or (touch ?d ?d) (and (toggled_on agent) (on ?d desk) (not (or (not (and (not (is_setup_object floor) ) (and (adjacent ?d ?d) (in_motion ?h) ) ) ) (on ?h ?d) ) ) ) ) ) ) ) (not (and (< 1 1) (< 1 (distance ?h ?d)) ) ) (agent_holds ?h) ) ) ) ) )
        )
      )
    )
    (preference ballThrownThroughRampToBin
      (exists (?t - cube_block)
        (then
          (once (same_type ?t ?t) )
          (once (same_type ?t ?t) )
          (hold-while (in ?t ?t) (and (and (= 8 0.5 5) (on ?t ?t) ) (and (not (and (not (agent_holds ?t) ) (in ?t ?t) (game_start ) (in_motion ?t) (same_type ?t ?t) (rug_color_under ?t ?t) (and (not (and (in_motion ?t) (not (and (same_color ?t ?t) (or (= (distance ?t ?t) 1 1) (in_motion ?t) (agent_holds ?t) ) (in_motion ?t) ) ) ) ) (same_type agent ?t) ) (and (in_motion ?t) (same_color ?t ?t) (on ?t ?t) ) (exists (?o1 - (either doggie_bed dodgeball)) (in_motion ?o1) ) (agent_holds ?t) ) ) (on ?t ?t) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (count-total ballThrownThroughRampToBin) )
)
(:scoring
  (count ballThrownThroughRampToBin:purple)
)
)



(define (game game-id-274) (:domain medium-objects-room-v1)
(:setup
  (forall (?b5 - block ?b - color)
    (exists (?d1 ?b - hexagonal_bin)
      (and
        (game-optional
          (on brown ?b)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - dodgeball)
      (and
        (preference watchOnShelf
          (exists (?b8 - ball)
            (then
              (once (in_motion ?h) )
              (once (in_motion room_center) )
              (once (agent_holds ?h) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 30 50 )
)
(:scoring
  (* (+ (count-measure watchOnShelf:basketball) 15 )
    (= 3 4 )
    (* 3 7 )
    (* (count-once-per-objects watchOnShelf:pink) (* 5 7 )
    )
  )
)
)



(define (game game-id-275) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (exists (?b5 - (either pink blue_cube_block yellow_cube_block))
      (in_motion top_shelf)
    )
  )
)
(:constraints
  (and
    (preference ballRolledOnRampToRug
      (exists (?l4 - ball)
        (at-end
          (not
            (exists (?d - hexagonal_bin ?b - hexagonal_bin ?c5 - hexagonal_bin)
              (agent_holds bed)
            )
          )
        )
      )
    )
    (preference objectsHidden
      (exists (?w2 - color ?h - hexagonal_bin)
        (then
          (once (not (and (agent_holds bridge_block) (or (and (in_motion ?h) (not (and (agent_holds bed) (in_motion ?h) ) ) ) (adjacent ?h ?h) ) ) ) )
          (once (not (in_motion ?h) ) )
          (once (and (agent_holds ?h) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (* (+ (count-once-per-objects objectsHidden:basketball) (* (count-once-per-objects ballRolledOnRampToRug:dodgeball:dodgeball) (<= (count-once-per-objects objectsHidden:beachball) 2 )
          )
        )
        5
        3
        (* (* (count-once objectsHidden:tall_cylindrical_block) 9 )
          (* (- 5 )
            (count-once-per-objects ballRolledOnRampToRug:yellow_cube_block:beachball)
          )
        )
        10
      )
      (count-once-per-objects objectsHidden:pink_dodgeball)
    )
    (>= (count-once-per-objects objectsHidden:basketball) (count-once-per-objects ballRolledOnRampToRug:yellow_pyramid_block) )
  )
)
(:scoring
  (count objectsHidden:dodgeball)
)
)



(define (game game-id-276) (:domain many-objects-room-v1)
(:setup
  (exists (?d - dodgeball)
    (exists (?w - game_object)
      (exists (?t - building ?d - hexagonal_bin)
        (game-conserved
          (in_motion desk)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToBinFromDistance
      (exists (?d - (either dodgeball alarm_clock cube_block))
        (then
          (once (< 2 (distance ?d ?d)) )
          (once (agent_holds pink_dodgeball) )
          (once (agent_holds bed) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count throwToBinFromDistance:yellow:hexagonal_bin) (- 5 )
    )
    (+ (- (+ 40 5 3 )
      )
      (count throwToBinFromDistance:tall_cylindrical_block)
    )
  )
)
(:scoring
  (external-forall-minimize
    (count-once-per-objects throwToBinFromDistance:green)
  )
)
)



(define (game game-id-277) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (exists (?h - (either watch mug))
      (and
        (and
          (and
            (on ?h ?h)
            (< (distance ?h ?h) (x_position ?h))
            (and
              (and
                (in_motion ?h)
                (in ?h ?h)
              )
              (and
                (agent_holds ?h)
                (is_setup_object ?h)
              )
            )
          )
          (agent_holds ?h)
        )
        (in_motion ?h)
      )
    )
  )
)
(:constraints
  (and
    (preference throwMissesBin
      (exists (?b - golfball)
        (then
          (once (and (in_motion ?b) (faces bed ?b) (and (in_motion ?b) (< 6 (distance ?b ?b)) ) ) )
          (hold (not (on ?b ?b) ) )
          (hold (agent_holds ?b) )
        )
      )
    )
  )
)
(:terminal
  (<= (+ (+ 16 (count-once-per-objects throwMissesBin:dodgeball) )
      5
      (count throwMissesBin:purple:basketball)
      9
    )
    (total-score)
  )
)
(:scoring
  (* (count throwMissesBin:dodgeball) (+ (count throwMissesBin:basketball) (* 5 2 )
    )
  )
)
)



(define (game game-id-278) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds rug)
  )
)
(:constraints
  (and
    (preference ballThrownOntoTarget
      (exists (?t2 - hexagonal_bin ?h - game_object)
        (then
          (once (adjacent ?h ?h) )
          (once (in_motion ?h) )
          (once (is_setup_object pink) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (total-time) (count-once-per-objects ballThrownOntoTarget:pyramid_block:blue_pyramid_block) )
    (and
      (> 10 (* 20 3 )
      )
    )
    (>= 9 (count ballThrownOntoTarget:dodgeball:basketball) )
  )
)
(:scoring
  (count ballThrownOntoTarget:side_table)
)
)



(define (game game-id-279) (:domain medium-objects-room-v1)
(:setup
  (exists (?d - dodgeball ?d - doggie_bed)
    (exists (?p2 - book)
      (exists (?d - hexagonal_bin)
        (and
          (game-conserved
            (< 1 (distance ?p2 ?d))
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference matchingBuildingBuilt
      (exists (?b6 - chair)
        (at-end
          (adjacent ?b6 ?b6)
        )
      )
    )
    (preference ballThrownMissesEverything
      (exists (?l - doggie_bed ?b10 - (either blue_cube_block key_chain))
        (then
          (hold (agent_holds brown) )
          (hold (and (not (in west_wall ?b10) ) (agent_holds ?b10) ) )
          (hold (in agent ?b10) )
        )
      )
    )
    (preference throwFromBehindChairsInBin
      (exists (?w1 - hexagonal_bin)
        (then
          (hold (adjacent ?w1 rug) )
          (once (agent_holds ?w1) )
          (once (in room_center ?w1) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-shortest throwFromBehindChairsInBin:pink:book) 300 )
)
(:scoring
  (count matchingBuildingBuilt:blue_dodgeball)
)
)



(define (game game-id-280) (:domain many-objects-room-v1)
(:setup
  (exists (?r - ball)
    (exists (?b4 - hexagonal_bin ?c - dodgeball)
      (game-conserved
        (and
          (and
            (and
              (adjacent ?r ?r)
              (and
                (between ?r ?r ?c)
                (and
                  (adjacent_side ?c ?c ?r)
                  (not
                    (in ?c ?r)
                  )
                )
              )
            )
            (on ?c ?r)
          )
          (on ?r bed)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectLandsInBin
      (exists (?g - curved_wooden_ramp ?r - red_dodgeball ?b8 - dodgeball ?l4 - hexagonal_bin)
        (then
          (once-measure (not (in_motion ?l4) ) (distance ?l4 agent) )
          (hold (in_motion ?l4) )
          (once (in_motion ?l4) )
        )
      )
    )
    (forall (?c3 - game_object)
      (and
        (preference ballKnocksBlockFromRug
          (exists (?l - (either key_chain dodgeball))
            (then
              (hold-while (touch desk agent) (and (agent_holds ?l) (exists (?g - ball ?o - ball) (and (not (faces ?c3 ?l) ) (in ?o floor) ) ) ) )
              (once (not (equal_x_position desk ?c3) ) )
              (once (and (not (and (exists (?b7 - teddy_bear) (and (not (game_over ) ) (faces ?b7 ?l) ) ) (opposite ?c3 ?l) ) ) (adjacent ?l ?c3) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> 5 (count-once-per-objects ballKnocksBlockFromRug:golfball) )
)
(:scoring
  (count objectLandsInBin:yellow)
)
)



(define (game game-id-281) (:domain medium-objects-room-v1)
(:setup
  (exists (?b - pillow)
    (and
      (and
        (game-optional
          (in_motion room_center)
        )
        (and
          (and
            (game-conserved
              (not
                (= 1 1 (distance ?b ?b))
              )
            )
          )
          (game-conserved
            (not
              (agent_holds ?b)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference woodenBlockMovedFromRugToDesk
      (exists (?h ?o ?t ?b ?h - dodgeball)
        (then
          (hold (adjacent ?b ?b) )
          (once-measure (and (agent_holds ?t) (in_motion ?t) ) (distance agent ?h) )
          (hold (agent_holds ?t) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (total-score) (total-time) )
  )
)
(:scoring
  (* 1 (- 10 )
  )
)
)



(define (game game-id-282) (:domain medium-objects-room-v1)
(:setup
  (forall (?o - pillow ?h - dodgeball)
    (game-conserved
      (and
        (agent_holds ?h)
        (not
          (not
            (agent_holds ?h)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference golfballLandsInBinThroughRamp
      (exists (?t2 - (either mug))
        (then
          (hold (not (and (on ?t2 ?t2) (in ?t2 ?t2) ) ) )
          (once (and (and (not (agent_holds ?t2) ) (touch ?t2 ?t2) (same_type ?t2 ?t2) ) (not (and (in_motion desk) (not (agent_holds ?t2) ) ) ) ) )
          (once (agent_holds ?t2) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= 40 (<= 5 (* (= (* (+ 2 0 )
                (- (count-once-per-objects golfballLandsInBinThroughRamp:pink_dodgeball:dodgeball) )
                (* (count golfballLandsInBinThroughRamp:golfball:basketball) (count-once-per-objects golfballLandsInBinThroughRamp:purple:dodgeball) )
              )
              (count golfballLandsInBinThroughRamp:golfball)
            )
            (count golfballLandsInBinThroughRamp:golfball)
          )
        )
      )
      (> (total-score) (+ (count-unique-positions golfballLandsInBinThroughRamp:basketball) 8 )
      )
    )
    (= (+ 1 (* 5 (* (* (count-longest golfballLandsInBinThroughRamp:yellow) (+ 8 (count-once-per-objects golfballLandsInBinThroughRamp:dodgeball) 10 )
            )
            (count-measure golfballLandsInBinThroughRamp:basketball:pink)
            (count golfballLandsInBinThroughRamp:dodgeball)
            4
            5
            (* (+ 2 (- (count-longest golfballLandsInBinThroughRamp:pyramid_block:golfball:orange) )
              )
              (= 3 )
            )
          )
        )
      )
      (count-once-per-objects golfballLandsInBinThroughRamp:red)
    )
    (or
      (= (* 6 60 )
        (* (count-once-per-objects golfballLandsInBinThroughRamp:dodgeball:triangle_block) 300 )
      )
    )
  )
)
(:scoring
  (count-once-per-objects golfballLandsInBinThroughRamp:green)
)
)



(define (game game-id-283) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?c - hexagonal_bin)
      (forall (?c - ball ?b8 - ball)
        (game-optional
          (not
            (and
              (in_motion ?b8)
              (and
                (and
                  (< 1 10)
                  (in agent desk)
                )
                (and
                  (game_over )
                  (not
                    (adjacent agent ?b8)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectLandsInBin
      (exists (?h - doggie_bed)
        (then
          (once (and (in_motion agent) (touch south_west_corner ?h) (not (<= (distance ?h upright) 4) ) ) )
          (once (in_motion ?h) )
          (once (not (in_motion ?h) ) )
        )
      )
    )
    (forall (?c3 - block)
      (and
        (preference gameObjectToBin
          (exists (?h - cylindrical_block)
            (then
              (hold (and (not (or (agent_holds ?c3) (agent_holds ?h) ) ) (in_motion rug) ) )
              (once (= 1 9) )
              (once (and (in_motion ?h) (in_motion agent) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (< (count objectLandsInBin:basketball) 3 )
    (>= 12 9 )
    (>= (count objectLandsInBin:beachball:rug) (count-overlapping gameObjectToBin:basketball) )
  )
)
(:scoring
  (count objectLandsInBin:pink_dodgeball)
)
)



(define (game game-id-284) (:domain many-objects-room-v1)
(:setup
  (forall (?c - hexagonal_bin)
    (forall (?o - game_object)
      (exists (?g - building)
        (and
          (and
            (and
              (and
                (and
                  (game-optional
                    (not
                      (and
                        (not
                          (agent_holds agent)
                        )
                        (between rug ?c ?g)
                      )
                    )
                  )
                )
                (game-conserved
                  (agent_holds ?c)
                )
                (and
                  (game-conserved
                    (and
                      (agent_holds ?c)
                      (and
                        (and
                          (and
                            (same_object ?c ?g)
                            (not
                              (and
                                (and
                                  (in ?c desk)
                                  (< 8 1)
                                )
                                (and
                                  (agent_holds ?c)
                                  (and
                                    (adjacent_side floor agent ?c)
                                    (< (distance ?c ?g) (distance bed ?o))
                                  )
                                )
                              )
                            )
                            (agent_holds ?g)
                          )
                          (not
                            (exists (?b4 - ball ?t - building)
                              (and
                                (and
                                  (agent_holds ?o)
                                  (agent_holds ?g)
                                )
                                (forall (?h - (either dodgeball dodgeball ball) ?c2 - ball ?r - cube_block ?b - curved_wooden_ramp ?b - chair)
                                  (on ?t pillow)
                                )
                              )
                            )
                          )
                        )
                        (not
                          (touch agent ?c)
                        )
                      )
                      (and
                        (not
                          (< (distance ?o ?o) (distance ?g ?g))
                        )
                        (adjacent agent ?g)
                        (in_motion ?c)
                      )
                    )
                  )
                )
              )
            )
            (and
              (and
                (or
                  (exists (?c1 - wall)
                    (exists (?b10 - hexagonal_bin)
                      (game-optional
                        (not
                          (opposite ?c1 ?g)
                        )
                      )
                    )
                  )
                  (forall (?w1 - building ?h ?h - dodgeball)
                    (exists (?l4 - cube_block)
                      (forall (?d ?b1 - hexagonal_bin)
                        (exists (?b ?d1 ?o - ball ?d - hexagonal_bin)
                          (exists (?b - (either curved_wooden_ramp book blue_cube_block))
                            (game-conserved
                              (not
                                (not
                                  (agent_holds ?b1)
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                  (and
                    (and
                      (and
                        (exists (?p2 - hexagonal_bin)
                          (not
                            (exists (?d - hexagonal_bin ?w - (either laptop wall))
                              (forall (?b9 - dodgeball)
                                (exists (?c - chair)
                                  (and
                                    (exists (?b - hexagonal_bin)
                                      (forall (?h - cube_block)
                                        (forall (?c - hexagonal_bin)
                                          (game-conserved
                                            (agent_holds ?g)
                                          )
                                        )
                                      )
                                    )
                                    (forall (?b - drawer ?d1 - dodgeball ?o - color)
                                      (and
                                        (and
                                          (game-optional
                                            (and
                                              (not
                                                (on rug agent)
                                              )
                                              (and
                                                (same_color ?c ?w)
                                                (agent_holds west_wall)
                                                (not
                                                  (not
                                                    (in desk ?g)
                                                  )
                                                )
                                              )
                                              (and
                                                (agent_holds ?o)
                                                (and
                                                  (and
                                                    (and
                                                      (in ?c ?c)
                                                      (agent_holds ?p2)
                                                      (touch north_wall ?c)
                                                    )
                                                    (adjacent ?g ?c)
                                                  )
                                                  (and
                                                    (in_motion agent)
                                                    (agent_holds ?p2)
                                                  )
                                                )
                                                (< (distance ?o ?b9) (distance_side ?w agent agent))
                                              )
                                            )
                                          )
                                        )
                                        (and
                                          (exists (?t2 - hexagonal_bin)
                                            (game-conserved
                                              (and
                                                (= (distance ?c ?g))
                                                (in_motion ?g)
                                              )
                                            )
                                          )
                                          (game-optional
                                            (not
                                              (and
                                                (in_motion ?o)
                                              )
                                            )
                                          )
                                          (exists (?h - teddy_bear ?l - hexagonal_bin)
                                            (exists (?o - teddy_bear)
                                              (and
                                                (and
                                                  (game-optional
                                                    (and
                                                      (agent_holds ?o)
                                                      (and
                                                        (and
                                                          (agent_holds ?c)
                                                          (adjacent_side ?c ?o room_center)
                                                        )
                                                        (and
                                                          (on ?c ?g)
                                                          (touch agent ?b9)
                                                        )
                                                      )
                                                    )
                                                  )
                                                  (exists (?c - doggie_bed)
                                                    (game-optional
                                                      (agent_holds bed)
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                    (exists (?t - wall)
                                      (and
                                        (game-conserved
                                          (and
                                            (on ?c ?w)
                                            (in ?w ?t)
                                          )
                                        )
                                        (forall (?l - chair ?w2 - hexagonal_bin ?l - wall ?g - block)
                                          (forall (?b5 - hexagonal_bin ?c1 - hexagonal_bin)
                                            (exists (?h - hexagonal_bin)
                                              (game-optional
                                                (on ?t ?w)
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                    (game-optional
                                      (agent_holds agent)
                                    )
                                    (game-optional
                                      (not
                                        (in ?c ?b9)
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                    (exists (?b - (either pyramid_block cellphone))
                      (and
                        (and
                          (game-conserved
                            (not
                              (agent_holds bottom_shelf)
                            )
                          )
                        )
                      )
                    )
                  )
                )
                (exists (?h - block)
                  (and
                    (game-conserved
                      (in_motion ?c)
                    )
                  )
                )
              )
              (game-optional
                (not
                  (agent_holds desk)
                )
              )
              (and
                (game-optional
                  (game_start )
                )
              )
              (exists (?b - hexagonal_bin)
                (or
                  (and
                    (exists (?b4 - shelf)
                      (game-optional
                        (not
                          (in_motion ?b4)
                        )
                      )
                    )
                  )
                )
              )
              (game-optional
                (in ?c ?c)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwObjectToBin
      (exists (?l3 - hexagonal_bin ?c - dodgeball ?f - game_object)
        (then
          (hold (and (touch ?f ?f) (not (and (and (in_motion ?f) (in_motion ?f) ) (not (and (in_motion ?f) (not (in_motion ?f) ) (or (and (in_motion ?f) (not (on ?f ?f) ) ) ) ) ) ) ) ) )
          (once (and (and (on ?f ?f) (agent_holds ?f) ) (< (distance ?f room_center) 7) ) )
          (once (and (in_motion ?f) (< (distance_side ?f ?f rug ?f) 0.5) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) 10 )
)
(:scoring
  (count throwObjectToBin:pink)
)
)



(define (game game-id-285) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?p - pillow)
      (game-conserved
        (agent_holds desk)
      )
    )
  )
)
(:constraints
  (and
    (preference pinkObjectMovedToRoomCenter
      (exists (?d - curved_wooden_ramp ?l ?l ?b - bridge_block ?d ?d ?p2 ?f - dodgeball)
        (then
          (once (and (not (same_type ?p2 desk) ) (not (touch ?d ?d) ) ) )
        )
      )
    )
    (preference ballThrownThroughRampAndBlocksToBin
      (exists (?h - curved_wooden_ramp)
        (then
          (hold (and (on ?h upright) (in_motion ?h) (and (agent_holds ?h) (not (> 8 (distance ?h ?h)) ) ) ) )
          (once (and (> (distance rug ?h) (distance ?h ?h)) (adjacent_side ?h rug ?h) ) )
          (once (in ?h ?h) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (count-once-per-objects pinkObjectMovedToRoomCenter:alarm_clock) )
)
(:scoring
  (* (* (count ballThrownThroughRampAndBlocksToBin:beachball) 3 )
    5
  )
)
)



(define (game game-id-286) (:domain medium-objects-room-v1)
(:setup
  (forall (?b1 - hexagonal_bin)
    (game-conserved
      (not
        (adjacent ?b1 ?b1)
      )
    )
  )
)
(:constraints
  (and
    (forall (?t1 - hexagonal_bin)
      (and
        (preference throwToDrawerOrBin
          (exists (?p - hexagonal_bin)
            (then
              (hold-while (in_motion rug) (and (exists (?o1 - ball ?o - cube_block ?b - curved_wooden_ramp) (agent_holds ?b) ) (above ?t1 ?p) ) (and (touch ?t1 ?p) (in rug ?t1) ) )
              (once (agent_holds desk) )
              (once (adjacent agent ?p) )
            )
          )
        )
        (preference throwOverRamp
          (exists (?b - dodgeball ?d - color)
            (then
              (once (in ?d ?d) )
              (once (on ?d brown) )
              (hold (not (and (game_over ) (exists (?l2 - hexagonal_bin ?h - (either dodgeball basketball) ?c3 - cube_block) (not (and (in_motion ?c3) (and (and (not (in_motion ?t1) ) (in ?c3 agent) ) (and (agent_holds ?t1) (on ?d ?d) ) ) (in_motion ?t1) (on ?c3 ?d) (agent_holds door) (not (and (in ?c3 ?d) (opposite ?c3 ?c3) ) ) ) ) ) ) ) )
              (once (agent_holds bed) )
            )
          )
        )
      )
    )
    (preference objectToBinOnFirstTry
      (exists (?d - game_object ?t - hexagonal_bin ?f - cube_block)
        (then
          (hold (touch ?f ?f) )
          (hold (in_motion ?f) )
          (hold (< (distance ?f ?f) (distance floor ?f)) )
        )
      )
    )
    (forall (?o - beachball)
      (and
        (preference throwToRampToBin
          (exists (?c2 - hexagonal_bin)
            (then
              (hold (and (on ?o upright) (and (in ?c2 ?c2) (not (and (on agent ?o) (object_orientation blue ?c2) ) ) ) ) )
              (once (and (rug_color_under ?c2 ?c2) (and (and (same_type ?c2 green_golfball) (in_motion ?o) ) (not (not (not (not (broken ?c2) ) ) ) ) ) ) )
              (hold (and (in_motion pink) (is_setup_object ?o) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (total-time) )
)
(:scoring
  (+ 5 (+ 5 (count-once-per-objects objectToBinOnFirstTry:beachball) )
  )
)
)



(define (game game-id-287) (:domain many-objects-room-v1)
(:setup
  (exists (?p2 - hexagonal_bin)
    (game-conserved
      (not
        (on ?p2 ?p2)
      )
    )
  )
)
(:constraints
  (and
    (preference dropAttempt
      (exists (?p - (either dodgeball curved_wooden_ramp) ?h - block)
        (then
          (once (on ?h room_center) )
          (once (or (on ?h ?h) (and (and (<= (distance ?h bed) (building_size ?h)) (in_motion ?h) ) (faces ?h ?h) ) ) )
          (once (touch ?h desk) )
        )
      )
    )
    (forall (?c - hexagonal_bin)
      (and
        (preference dodgeballHitsPillowWithoutTouchingBlock
          (exists (?x - hexagonal_bin ?g - (either key_chain book golfball))
            (then
              (hold (not (in pink ?g) ) )
              (hold (not (and (in_motion ?c) (agent_holds ?g) ) ) )
              (hold-while (in_motion agent) (on ?c ?c) (in_motion ?g) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 9 (total-score) )
)
(:scoring
  (* 10 (count dropAttempt:basketball) (* (* (count-same-positions dodgeballHitsPillowWithoutTouchingBlock:blue_dodgeball) 6 )
      (= (count-once-per-external-objects dropAttempt:red) 16 )
    )
  )
)
)



(define (game game-id-288) (:domain many-objects-room-v1)
(:setup
  (forall (?b9 - hexagonal_bin ?d - hexagonal_bin)
    (exists (?o - hexagonal_bin ?b - hexagonal_bin)
      (game-conserved
        (not
          (adjacent ?d ?d)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?p1 - hexagonal_bin)
      (and
        (preference bounceBallToBin
          (exists (?b - teddy_bear)
            (then
              (once (in_motion ?b) )
              (hold (in_motion ?p1) )
              (hold (or (not (agent_holds ?p1) ) (and (< 0 1) (and (and (exists (?b - ball) (adjacent ?b back) ) (and (adjacent ?b desk) (agent_holds ?b) ) (agent_holds ?b) (in_motion ?p1) ) (opposite ?p1 room_center) ) (and (adjacent ?p1 ?b) (and (and (and (forall (?b - (either flat_block) ?l - color) (in_motion agent) ) (agent_holds ?p1) ) (or (< 1 2) ) ) (in_motion ?p1) ) ) ) ) )
              (hold (agent_holds desk) )
            )
          )
        )
      )
    )
    (forall (?c - hexagonal_bin)
      (and
        (preference agentLeavesDogbedOrNoMoreBalls
          (exists (?t - cube_block ?p ?b1 - hexagonal_bin)
            (then
              (once (agent_holds ?p) )
              (hold (agent_holds ?p) )
              (hold (not (not (adjacent ?c ?p) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (external-forall-maximize (count-once-per-objects agentLeavesDogbedOrNoMoreBalls:golfball:bed:dodgeball) ) (+ 10 (* (count bounceBallToBin:doggie_bed) (count agentLeavesDogbedOrNoMoreBalls:basketball) 10 )
    )
  )
)
(:scoring
  (count-once-per-objects bounceBallToBin:basketball)
)
)



(define (game game-id-289) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (agent_holds agent)
  )
)
(:constraints
  (and
    (preference cubeBlockInBuilding
      (exists (?h - hexagonal_bin)
        (then
          (once (rug_color_under ?h ?h) )
          (once (touch bed ?h) )
          (once (and (in_motion door) (not (exists (?d2 - hexagonal_bin) (and (not (agent_holds rug) ) (agent_holds ?d2) ) ) ) ) )
          (hold (and (in_motion ?h) (not (not (not (agent_holds ?h) ) ) ) (in_motion ?h) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (* (external-forall-maximize (* 5 (count cubeBlockInBuilding:dodgeball) )
        )
        (count cubeBlockInBuilding:brown)
      )
      10
    )
  )
)
(:scoring
  (count-once-per-objects cubeBlockInBuilding:bed)
)
)



(define (game game-id-290) (:domain few-objects-room-v1)
(:setup
  (exists (?g - block)
    (and
      (and
        (exists (?c - game_object ?h - hexagonal_bin)
          (game-conserved
            (on ?h ?g)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwMovesBeachballWithoutKnockingTeddy
      (exists (?t - shelf ?c1 - (either cylindrical_block main_light_switch yellow_cube_block))
        (then
          (once (and (not (and (in_motion agent) (not (in_motion ?c1) ) ) ) (and (adjacent room_center ?c1) (or (and (agent_holds ?c1) (exists (?c3 - hexagonal_bin ?w1 - pyramid_block) (in_motion desk) ) ) (in_motion ?c1) (adjacent ?c1 ?c1) ) ) ) )
          (once (adjacent agent ?c1) )
          (once (agent_holds room_center) )
        )
      )
    )
  )
)
(:terminal
  (= 1 (total-score) )
)
(:scoring
  (= (count throwMovesBeachballWithoutKnockingTeddy:golfball:golfball) 3 )
)
)



(define (game game-id-291) (:domain many-objects-room-v1)
(:setup
  (forall (?d - blue_pyramid_block)
    (exists (?x - cube_block ?b - hexagonal_bin)
      (game-conserved
        (not
          (in_motion ?b)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrowAttempt
      (exists (?b - block)
        (then
          (once (in ?b ?b) )
          (once (not (in_motion bed) ) )
          (once (open ?b) )
        )
      )
    )
    (preference ballThrownIntoTarget
      (exists (?c6 - chair)
        (then
          (hold-while (not (in_motion ?c6) ) (on ?c6 bed) )
          (hold (equal_x_position ?c6 ?c6) )
          (hold (in_motion ?c6) )
          (once (and (> (building_size door) 0.5) (in ?c6 agent) ) )
          (once (exists (?o1 ?t2 ?bl - pyramid_block ?r2 - ball) (in_motion ?c6) ) )
        )
      )
    )
    (forall (?b - cylindrical_block)
      (and
        (preference cubeBlockThrownToTopShelf
          (exists (?o - shelf ?o - shelf)
            (then
              (once (in_motion ?o) )
              (once (< (distance ?o ?o) 0.5) )
              (once (and (not (in_motion ?o) ) (exists (?l3 - hexagonal_bin ?b4 - hexagonal_bin) (or (and (in_motion desk) (not (not (on ?b4 ?b4) ) ) (and (and (not (adjacent ?o ?b4) ) (agent_holds south_wall) ) (and (not (agent_holds ?b4) ) (in_motion ?b4) ) ) ) (exists (?b5 - desktop ?l4 - chair ?t2 - block ?d1 - block) (> 5 1) ) (and (toggled_on ?o) (not (or (equal_x_position ?b ?b) (< (distance room_center ?b) (distance ?b ?o)) (< (distance_side desk ?o ?o) (distance ?b4 ?b4)) ) ) (not (opposite ?b bed) ) ) ) ) (exists (?x - dodgeball ?x - (either cube_block laptop)) (or (touch ?o agent) (in_motion ?b) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= 2 (* (* 100 (count cubeBlockThrownToTopShelf:basketball) )
      6
    )
  )
)
(:scoring
  (count ballThrownIntoTarget:tan)
)
)



(define (game game-id-292) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?b - red_dodgeball ?c - dodgeball ?o1 - game_object)
      (game-optional
        (on bed south_west_corner)
      )
    )
    (exists (?c - cube_block ?l4 - building)
      (game-conserved
        (on desk ?l4)
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballFromBlockToBin
      (exists (?x - color)
        (then
          (once (not (and (forall (?ob - dodgeball) (> 1 1) ) (agent_holds room_center) ) ) )
          (hold (in ?x green_golfball) )
          (once (in_motion ?x) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (count dodgeballFromBlockToBin:triangle_block:dodgeball) )
)
(:scoring
  (count-once-per-objects dodgeballFromBlockToBin:basketball:book:dodgeball)
)
)



(define (game game-id-293) (:domain medium-objects-room-v1)
(:setup
  (forall (?c2 - block)
    (and
      (and
        (game-conserved
          (in_motion rug)
        )
        (game-optional
          (on ?c2 ?c2)
        )
      )
      (game-optional
        (not
          (opposite ?c2 desk)
        )
      )
      (forall (?o - chair)
        (forall (?g ?h - game_object)
          (and
            (and
              (game-optional
                (on ?h ?g)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballHitsBin
      (exists (?t - (either bridge_block cylindrical_block))
        (at-end
          (game_start )
        )
      )
    )
    (preference dodgeballFromBlockToBin
      (exists (?r - hexagonal_bin ?o1 - curved_wooden_ramp ?h - doggie_bed)
        (then
          (once (exists (?db - (either cd laptop)) (in ?db ?db) ) )
          (hold (in_motion ?h) )
          (once (and (adjacent ?h ?h) (or (not (in_motion ?h) ) (and (and (and (and (agent_holds door) (exists (?h - chair ?c2 - hexagonal_bin) (agent_crouches ) ) (in bed ?h) ) (same_object ?h ?h) ) (< (distance ?h ?h) (building_size ?h)) (not (in_motion bed) ) ) (on ?h ?h) ) ) ) )
        )
      )
    )
    (preference pyramidBlockAtopTowerAtEnd
      (exists (?o - yellow_cube_block)
        (then
          (hold (not (and (in_motion ?o) (in_motion ?o) ) ) )
          (hold (not (not (and (and (in_motion ?o) (< 1 4) ) (and (not (in_motion ?o) ) (forall (?b3 - doggie_bed) (not (in_motion ?b3) ) ) ) (< (distance bed ?o) 4) ) ) ) )
          (hold (in_motion ?o) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (count dodgeballFromBlockToBin:pink_dodgeball) 15 20 )
    (total-time)
  )
)
(:scoring
  (+ (* (count pyramidBlockAtopTowerAtEnd:blue_dodgeball:book:doggie_bed) 4 2 )
    (count-once-per-objects dodgeballFromBlockToBin:basketball)
  )
)
)



(define (game game-id-294) (:domain few-objects-room-v1)
(:setup
  (exists (?r - curved_wooden_ramp)
    (and
      (game-optional
        (and
          (and
            (and
              (in_motion rug)
              (and
                (in_motion ?r)
                (agent_holds ?r)
                (in_motion bed)
              )
              (not
                (agent_holds ?r)
              )
            )
            (not
              (agent_holds ?r)
            )
          )
          (and
            (touch ?r room_center)
            (agent_holds agent)
          )
        )
      )
      (forall (?o5 - red_dodgeball)
        (game-conserved
          (in_motion ?r)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToRug
      (exists (?o - hexagonal_bin)
        (then
          (once (not (in_motion ?o) ) )
          (hold-while (agent_holds ?o) (<= (distance ?o ?o) (distance ?o ?o)) )
          (once (same_object ?o ?o) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (* (- 10 )
      (count ballThrownToRug:beachball)
    )
  )
)
(:scoring
  (count ballThrownToRug:book:golfball)
)
)



(define (game game-id-295) (:domain few-objects-room-v1)
(:setup
  (exists (?c5 ?p2 - dodgeball ?o5 - dodgeball ?b2 - block)
    (exists (?p1 - hexagonal_bin)
      (forall (?d - (either tall_cylindrical_block book) ?h - hexagonal_bin)
        (exists (?c - pyramid_block ?c - dodgeball)
          (game-conserved
            (agent_holds ?b2)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - block ?b - (either key_chain chair))
      (and
        (preference throwKnocksBlock
          (exists (?l2 - (either pink wall book cube_block))
            (then
              (once (and (and (agent_holds ?b) (> (distance ?b ?b) (distance ?b floor)) ) (on bed ?b) ) )
              (hold (and (not (agent_holds ?l2) ) (in_motion ?l2) ) )
            )
          )
        )
        (preference throwKnocksOverBear
          (exists (?d - golfball ?r - dodgeball ?r1 - hexagonal_bin)
            (then
              (once (not (and (and (in ?b rug) (and (in_motion ?r1) (and (and (rug_color_under room_center ?r1) (< (distance ?r1 ?b) 0.5) ) (and (adjacent_side ?b ?b ?r1) (and (on ?r1 ?r1) (in_motion ?b) (or (and (agent_holds agent) (in_motion ?r1) ) (agent_holds ?b) ) ) ) (and (not (not (agent_holds ?r1) ) ) (not (not (not (same_color ?b ?r1) ) ) ) ) ) ) ) (adjacent ?b desk) ) ) )
              (hold-while (adjacent ?r1 ?r1) (agent_holds agent) )
              (once (not (agent_holds ?b) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (count-once-per-objects throwKnocksOverBear:pink_dodgeball) (total-score) )
)
(:scoring
  (external-forall-maximize
    (* (external-forall-maximize (count-once throwKnocksOverBear:golfball) ) (* 2 (count-once-per-external-objects throwKnocksBlock:beachball) (* 2 (* (count throwKnocksBlock:dodgeball) (+ (count throwKnocksBlock:green) (* (+ (count-once-per-objects throwKnocksBlock:dodgeball) (* 1 (* (* 100 6 )
                      10
                    )
                  )
                )
                6
              )
            )
            (count-once-per-objects throwKnocksOverBear:dodgeball)
            (count throwKnocksOverBear:dodgeball:dodgeball)
            (count-total throwKnocksOverBear:dodgeball)
          )
        )
      )
      2
      (count throwKnocksBlock:bed:pink)
    )
  )
)
)



(define (game game-id-296) (:domain medium-objects-room-v1)
(:setup
  (forall (?c2 - hexagonal_bin)
    (exists (?r - curved_wooden_ramp)
      (exists (?ob ?w ?s ?h - hexagonal_bin ?d - red_dodgeball)
        (and
          (game-conserved
            (adjacent agent side_table)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?s - ball)
      (and
        (preference ballOnBedAtEnd
          (exists (?t1 ?h - hexagonal_bin ?b - dodgeball)
            (then
              (once (toggled_on door) )
              (once (touch ?s ?s) )
              (hold (exists (?b3 ?b4 - (either alarm_clock) ?b ?b - cube_block) (in ?s ?b) ) )
            )
          )
        )
        (preference bookOnDeskShelf
          (exists (?o - dodgeball ?p1 - ball)
            (then
              (hold (not (is_setup_object room_center) ) )
              (once (adjacent floor blue) )
              (once (and (not (not (in_motion ?p1) ) ) (adjacent ?s agent) (and (adjacent_side ?p1 floor ?p1) (in_motion ?p1) ) ) )
            )
          )
        )
        (preference otherObjectsOnDeskShelf
          (exists (?d - game_object)
            (then
              (hold (in_motion ?d) )
              (once (in ?d ?d) )
              (once (in ?s ?d) )
            )
          )
        )
      )
    )
    (preference cubeBlockThrownToTopShelf
      (exists (?d - curved_wooden_ramp)
        (at-end
          (adjacent ?d bed)
        )
      )
    )
    (preference pinkObjectMovedToRoomCenter
      (exists (?c - building)
        (then
          (hold (and (and (on ?c ?c) (on ?c ?c) ) (and (agent_crouches ) (in_motion ?c) ) ) )
          (once (on ?c ?c) )
          (once (in_motion ?c) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (* 1 (count ballOnBedAtEnd:hexagonal_bin) )
        (* (+ (count-total cubeBlockThrownToTopShelf:yellow_cube_block) (* (* (count-once-per-objects otherObjectsOnDeskShelf:doggie_bed) (count-measure bookOnDeskShelf:dodgeball:dodgeball:yellow) )
              (* (count pinkObjectMovedToRoomCenter:side_table:blue_pyramid_block:pink) (count ballOnBedAtEnd:green) (count pinkObjectMovedToRoomCenter:doggie_bed) )
            )
          )
          (count-once ballOnBedAtEnd:basketball)
        )
      )
      (> 3 (total-score) )
    )
    (>= (total-time) (= (* (* 20 5 (count bookOnDeskShelf:dodgeball:golfball) (count-once-per-objects otherObjectsOnDeskShelf) )
          (* (count pinkObjectMovedToRoomCenter:beachball) 3 15 )
        )
        (count cubeBlockThrownToTopShelf:purple)
      )
    )
  )
)
(:scoring
  (+ (count bookOnDeskShelf:dodgeball) 6 )
)
)



(define (game game-id-297) (:domain medium-objects-room-v1)
(:setup
  (exists (?t1 - game_object)
    (exists (?h - wall ?c - hexagonal_bin ?h - color)
      (exists (?l3 - (either cylindrical_block cylindrical_block) ?p - ball)
        (exists (?c4 - building)
          (game-conserved
            (not
              (faces rug ?t1)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballInOrOnBin
      (exists (?d1 - wall ?r - ball ?g - ball)
        (then
          (once (not (and (opposite ?g desk) (and (< 1 (distance_side floor ?g ?g)) (agent_holds ?g) ) ) ) )
          (once (agent_holds desktop) )
          (hold (and (in_motion brown) (exists (?o - block ?o - cube_block ?d ?o ?r1 - (either yellow_cube_block laptop red)) (agent_holds ?d) ) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (and
      (>= 3 (total-score) )
      (>= (total-time) 10 )
    )
    (< (count ballInOrOnBin:hexagonal_bin) (count ballInOrOnBin:pink:dodgeball:cube_block) )
    (or
      (>= (* (* (count-once-per-objects ballInOrOnBin:blue_dodgeball) 180 (count-once-per-external-objects ballInOrOnBin:golfball) 15 )
          (>= 2 (count-once ballInOrOnBin:side_table) )
        )
        5
      )
      (>= 1 9 )
    )
  )
)
(:scoring
  (count-measure ballInOrOnBin:beachball:dodgeball)
)
)



(define (game game-id-298) (:domain many-objects-room-v1)
(:setup
  (forall (?h - hexagonal_bin)
    (exists (?b - wall)
      (game-optional
        (and
          (not
            (above ?h blue)
          )
          (and
            (and
              (< 1 (distance ?b agent))
              (adjacent ?b ?h)
            )
            (not
              (and
                (on ?b ?h)
                (not
                  (agent_holds pink)
                )
                (in ?h ?h)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference teddyBearHitsBall
      (exists (?s - doggie_bed ?l - cube_block)
        (then
          (once (and (in_motion ?l) (< (distance ?l ?l) 1) ) )
          (hold (not (agent_holds ?l) ) )
        )
      )
    )
    (preference throwFromBehindChairsInBin
      (exists (?c4 - game_object)
        (then
          (hold (between ?c4 ?c4 desk) )
          (once (on ?c4 sideways) )
          (once (not (on ?c4 desk) ) )
        )
      )
    )
    (preference pillowThrownToDoggieBed
      (exists (?d - blue_pyramid_block ?h - game_object)
        (then
          (hold-while (in_motion ?h) (is_setup_object top_drawer) (agent_holds ?h) (agent_crouches ) )
          (hold (in_motion ?h) )
          (once (agent_holds ?h) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (= 5 (count throwFromBehindChairsInBin:golfball) )
      (= 3 3 )
    )
    (or
      (or
        (>= 3 4 )
        (>= 1 (+ (count pillowThrownToDoggieBed:pink) )
        )
      )
      (not
        (<= (count pillowThrownToDoggieBed:book) 10 )
      )
    )
    (>= 3 (count pillowThrownToDoggieBed:dodgeball) )
  )
)
(:scoring
  (count teddyBearHitsBall:beachball)
)
)



(define (game game-id-299) (:domain few-objects-room-v1)
(:setup
  (exists (?w2 - (either golfball laptop))
    (and
      (forall (?h - dodgeball)
        (exists (?b6 ?o - chair)
          (and
            (exists (?r2 - desk_shelf ?p ?l1 - dodgeball)
              (forall (?c - hexagonal_bin)
                (forall (?b - doggie_bed)
                  (game-optional
                    (not
                      (not
                        (in ?l1 ?b6)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockInTowerAtEnd
      (exists (?p - dodgeball)
        (at-end
          (in_motion bed)
        )
      )
    )
  )
)
(:terminal
  (>= (* (count-once-per-objects blockInTowerAtEnd:dodgeball:tan) (external-forall-minimize (- (* 15 (count blockInTowerAtEnd:yellow:green) )
        )
      )
    )
    (* (count-once-per-objects blockInTowerAtEnd:blue_dodgeball) (count-once blockInTowerAtEnd:cylindrical_block) )
  )
)
(:scoring
  (+ 60 2 )
)
)



(define (game game-id-300) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-conserved
      (forall (?b - tall_cylindrical_block ?d - golfball)
        (and
          (adjacent_side floor ?d ?d)
          (exists (?l - cube_block ?t - hexagonal_bin)
            (in ?d door)
          )
          (exists (?b - block)
            (agent_holds rug)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToRampToBed
      (exists (?h - dodgeball)
        (then
          (once (forall (?h - wall) (and (same_object ?h agent) (not (in ?h ?h) ) ) ) )
          (hold (> (distance ?h ?h) (distance ?h ?h)) )
          (hold (or (not (agent_holds ?h) ) (same_type ?h ?h) ) )
        )
      )
    )
    (preference nonBlockPlacedInBuilding
      (exists (?b - wall)
        (then
          (once (adjacent ?b ?b) )
          (hold (and (agent_holds ?b) (and (not (in_motion pink) ) (and (not (agent_holds agent) ) (and (agent_holds agent) (not (and (same_color ?b ?b) (in ?b ?b) (not (touch ?b pink_dodgeball) ) ) ) ) ) ) ) )
          (once (on ?b ?b) )
        )
      )
    )
    (preference blockInTowerKnocked
      (exists (?o - (either lamp credit_card))
        (then
          (once (on ?o ?o) )
          (hold-while (and (in ?o agent) (agent_holds ?o) (and (not (open ?o) ) (not (on ?o ?o) ) ) (and (not (not (not (and (in ?o ?o) (object_orientation ?o ?o) (in blue ?o) ) ) ) ) (and (and (in ?o ?o) (on ?o ?o) ) (agent_holds ?o) ) ) ) (not (= 4 (building_size ?o)) ) (faces ?o ?o) )
          (hold (and (agent_holds ?o) (agent_holds ?o) ) )
        )
      )
    )
  )
)
(:terminal
  (> (count nonBlockPlacedInBuilding:basketball:basketball) (count nonBlockPlacedInBuilding:dodgeball) )
)
(:scoring
  (= (count ballThrownToRampToBed:pink_dodgeball) (- (* 9 (external-forall-maximize (* -30 9 )
        )
        2
        (count ballThrownToRampToBed:red)
      )
    )
  )
)
)



(define (game game-id-301) (:domain medium-objects-room-v1)
(:setup
  (exists (?c1 - hexagonal_bin)
    (game-optional
      (and
        (agent_holds ?c1)
        (not
          (touch ?c1 east_sliding_door)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockInTowerKnocked
      (exists (?h - yellow_cube_block ?b - wall ?b ?c - building)
        (then
          (once (not (same_color ?b ?b) ) )
          (hold (on ?c ?b) )
          (hold-while (and (and (and (in ?c ?b) (and (< 1 (distance ?c ?c)) (touch desk ?c) ) ) (not (adjacent ?b ?c) ) ) (and (and (not (adjacent ?b ?c) ) ) (not (adjacent_side ?c ?c south_west_corner) ) ) (in_motion ?b) ) (agent_holds bed) )
        )
      )
    )
  )
)
(:terminal
  (= (count blockInTowerKnocked:dodgeball:pink) 4 )
)
(:scoring
  (* (count-once-per-objects blockInTowerKnocked:dodgeball) (count blockInTowerKnocked:beachball) )
)
)



(define (game game-id-302) (:domain many-objects-room-v1)
(:setup
  (forall (?ob - building ?w2 - doggie_bed)
    (exists (?o5 - hexagonal_bin)
      (and
        (game-conserved
          (agent_holds ?o5)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference failedThrowToBin
      (exists (?h - doggie_bed ?r - color)
        (then
          (hold (is_setup_object ?r) )
          (once (not (in bed ?r) ) )
          (hold (not (and (game_over ) (not (not (on ?r ?r) ) ) ) ) )
        )
      )
    )
    (preference ballThrownThroughRampAndBlocksToBin
      (exists (?b6 - dodgeball)
        (then
          (hold (and (agent_holds ?b6) (and (agent_holds floor) (agent_holds ?b6) ) ) )
          (once (not (and (forall (?b - (either main_light_switch alarm_clock)) (object_orientation ?b6 rug) ) (< 1 (distance ?b6 ?b6)) ) ) )
          (hold (and (exists (?p - wall) (in ?b6 ?b6) ) (< 1 9) (and (agent_holds ?b6) (and (and (forall (?h - hexagonal_bin) (agent_holds pink) ) (exists (?h - hexagonal_bin ?b - hexagonal_bin) (< (distance ?b6 ?b) 4) ) (< 1 7) ) (touch room_center floor) ) (not (not (agent_holds front) ) ) ) ) )
        )
      )
    )
    (preference beachballBouncedOffRamp
      (exists (?h - chair)
        (then
          (once (not (in_motion desk) ) )
          (hold-while (on ?h ?h) (in_motion ?h) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count beachballBouncedOffRamp:basketball) 50 )
    2
  )
)
(:scoring
  (count ballThrownThroughRampAndBlocksToBin:yellow:cylindrical_block)
)
)



(define (game game-id-303) (:domain few-objects-room-v1)
(:setup
  (exists (?c2 - hexagonal_bin)
    (and
      (forall (?o - red_pyramid_block ?c2 ?b1 - hexagonal_bin)
        (exists (?b - hexagonal_bin)
          (game-optional
            (game_start )
          )
        )
      )
      (game-optional
        (object_orientation ?c2 ?c2)
      )
    )
  )
)
(:constraints
  (and
    (preference throwKnocksBlock
      (exists (?h - ball ?h - shelf)
        (then
          (once (and (in_motion ?h) (in ?h ?h) ) )
          (once (and (on bed ?h) (and (and (in ?h ?h) (not (equal_x_position rug ?h) ) ) (and (in_motion ?h) (faces top_drawer ?h) ) (agent_holds ?h) ) ) )
          (hold (in_motion ?h) )
        )
      )
    )
    (preference bigObjectThrownToBed
      (exists (?h - teddy_bear ?d - triangular_ramp)
        (then
          (once (and (agent_holds ?d) (and (and (not (< 1 7) ) (not (same_type ?d ?d) ) ) (opposite ?d ?d) ) ) )
          (once (and (in_motion ?d) (not (is_setup_object upright) ) (in_motion ?d) ) )
          (hold (agent_holds bed) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 0.7 (total-time) )
  )
)
(:scoring
  (count-once bigObjectThrownToBed:dodgeball)
)
)



(define (game game-id-304) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?s - dodgeball)
      (and
        (exists (?c - (either dodgeball floor cd ball golfball chair dodgeball) ?c5 - shelf)
          (forall (?w - chair)
            (game-conserved
              (adjacent ?w desk)
            )
          )
        )
        (exists (?c - teddy_bear)
          (game-optional
            (>= 0.5 (distance bed ?s))
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b ?o3 ?h ?h - dodgeball)
      (and
        (preference pillowThrownToDoggieBed
          (exists (?b2 ?p - (either key_chain cube_block) ?h - ball)
            (then
              (once (and (in_motion ?b) (and (or (in_motion agent) (and (agent_holds ?o3) (between ?h agent ?b) ) ) (between ?b floor ?o3) ) ) )
              (once (agent_holds ?o3) )
              (hold (not (not (and (and (and (not (between ?h ?o3 ?o3) ) (agent_holds ?h) ) (or (touch ?o3 ?h) (game_start ) ) ) ) ) ) )
            )
          )
        )
        (preference dodgeballThrownToBin
          (exists (?c2 - (either dodgeball rug bridge_block) ?g - hexagonal_bin)
            (then
              (hold (and (not (in_motion agent) ) (in ?g floor) (on ?h ?h) ) )
              (once (or (in_motion floor) (in_motion ?b) ) )
              (once (in rug green_golfball) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= (count pillowThrownToDoggieBed:beachball) (count dodgeballThrownToBin:blue_dodgeball) )
)
(:scoring
  (count-once-per-objects pillowThrownToDoggieBed:basketball:wall)
)
)



(define (game game-id-305) (:domain many-objects-room-v1)
(:setup
  (exists (?c - hexagonal_bin ?h - hexagonal_bin)
    (forall (?h - ball)
      (game-conserved
        (and
          (on ?h ?h)
          (< 6 2)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?p1 - block ?o - wall)
      (and
        (preference watchOnShelf
          (exists (?b - game_object)
            (then
              (hold-while (exists (?h - curved_wooden_ramp ?d - chair ?d - triangular_ramp) (and (and (on ?b ?d) (on rug top_shelf) ) (and (in_motion ?o) (agent_holds ?o) ) ) ) (on ?o ?o) )
              (once (in_motion ?o) )
              (once (forall (?r - block) (and (on ?o ?o) (in_motion ?o) (in_motion ?r) (agent_holds ?r) (not (adjacent_side room_center ?r ?b ?b) ) (touch ?o ?r) (agent_holds bed) (and (agent_holds ?b) (same_object ?o ?b) (same_color ?r bed) (agent_holds ?b) ) (touch ?o desk) (not (and (and (in agent ?r) (not (agent_holds ?r) ) ) (and (agent_holds ?o) (not (and (and (same_type ?b rug) (adjacent ?o ?o) ) (agent_holds ?b) ) ) ) ) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= 6 (count watchOnShelf:purple) )
      (not
        (< 10 3 )
      )
      (not
        (> (total-time) (total-score) )
      )
    )
    (>= (external-forall-maximize (count watchOnShelf) ) (+ 7 (count-once-per-objects watchOnShelf:yellow) )
    )
    (>= (* 10 50 )
      (* (count watchOnShelf:pink_dodgeball:golfball) 3 )
    )
  )
)
(:scoring
  (+ (* 6 5 )
    (count watchOnShelf:block)
  )
)
)



(define (game game-id-306) (:domain many-objects-room-v1)
(:setup
  (exists (?b4 - hexagonal_bin ?d - hexagonal_bin ?d - building)
    (game-optional
      (in_motion ?d)
    )
  )
)
(:constraints
  (and
    (preference ballKnocksBlockFromRug
      (exists (?h - triangular_ramp)
        (then
          (once (and (object_orientation ?h ?h) (in_motion desk) ) )
          (once (not (not (and (and (not (in_motion ?h) ) (in_motion ?h) (forall (?d - dodgeball) (object_orientation room_center agent) ) ) (and (in_motion ?h) (in_motion ?h) ) ) ) ) )
          (once (in_motion rug) )
        )
      )
    )
    (preference ballThrownFromObjectToBin
      (exists (?l2 - cube_block ?d - dodgeball ?b - block ?l2 - flat_block)
        (then
          (once (in_motion ?l2) )
          (once (in_motion upright) )
          (once (and (agent_holds bed) (in ?l2 ?l2) ) )
        )
      )
    )
  )
)
(:terminal
  (> (- (count-total ballThrownFromObjectToBin:yellow_pyramid_block:green) )
    (total-score)
  )
)
(:scoring
  (* (count-unique-positions ballKnocksBlockFromRug:side_table) (count-once-per-objects ballThrownFromObjectToBin:orange) (* (+ (count ballKnocksBlockFromRug:hexagonal_bin) (<= 3 (* (+ (* (count-once-per-objects ballThrownFromObjectToBin:dodgeball) (* (+ (* (* (count-once-per-objects ballKnocksBlockFromRug:cube_block) (+ 1 3 )
                      )
                      (* (>= (* (< (count-once-per-objects ballKnocksBlockFromRug:dodgeball) (- (count-once-per-objects ballKnocksBlockFromRug:red:alarm_clock:beachball) )
                            )
                            (count-total ballThrownFromObjectToBin:basketball)
                          )
                          15
                        )
                        (count-overlapping ballKnocksBlockFromRug:dodgeball)
                      )
                      (count ballKnocksBlockFromRug:block:purple)
                    )
                    3
                  )
                  (* 2 (external-forall-maximize (count ballThrownFromObjectToBin:white) ) )
                  (* 1 (count ballKnocksBlockFromRug:pink_dodgeball) )
                )
                (* (external-forall-minimize (count ballThrownFromObjectToBin:pyramid_block:hexagonal_bin) ) 2 )
              )
              (count-once-per-objects ballThrownFromObjectToBin:blue_dodgeball:pink)
              (count-shortest ballKnocksBlockFromRug:dodgeball)
            )
            (* (count-measure ballKnocksBlockFromRug:hexagonal_bin:pink) 3 )
          )
        )
      )
      5
    )
  )
)
)



(define (game game-id-307) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (not
      (in_motion bed)
    )
  )
)
(:constraints
  (and
    (preference beachballOnRug
      (exists (?c5 - green_triangular_ramp ?db - doggie_bed ?h - (either yellow golfball dodgeball))
        (at-end
          (on ?h ?h)
        )
      )
    )
    (preference objectOnBed
      (exists (?o - hexagonal_bin ?c - color)
        (then
          (once (adjacent ?c ?c) )
          (once (and (and (exists (?o4 - hexagonal_bin) (in_motion agent) ) (and (exists (?d - (either game_object wall triangle_block)) (and (and (adjacent ?c ?d) (agent_holds ?d) (on ?d ?d) ) (and (touch bed ?c) (in ?d ?d) ) ) ) (not (and (same_color ?c ?c) (equal_x_position ?c ?c) (in_motion ?c) ) ) ) ) (not (in_motion ?c) ) ) )
          (once (and (in_motion ?c) (not (agent_holds ?c) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 10 2 )
)
(:scoring
  (* 5 1 )
)
)



(define (game game-id-308) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (forall (?c4 - block)
        (forall (?b - dodgeball)
          (game-optional
            (agent_holds brown)
          )
        )
      )
      (exists (?r2 - golfball ?b - (either desktop dodgeball))
        (forall (?d1 - dodgeball ?b - dodgeball ?w2 - hexagonal_bin)
          (game-conserved
            (touch ?w2 ?b)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - hexagonal_bin)
      (and
        (preference laptopAndBookInPlace
          (exists (?t - shelf ?c3 - (either blue_cube_block laptop bridge_block))
            (at-end
              (on rug ?c3)
            )
          )
        )
        (preference ballKnocksBlockFromRug
          (exists (?h - shelf ?r - hexagonal_bin)
            (at-end
              (agent_holds ?h)
            )
          )
        )
        (preference ballThrownToRug
          (exists (?c - cube_block)
            (at-end
              (not
                (adjacent ?h ?c)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (>= (count-once-per-objects laptopAndBookInPlace:red:dodgeball) 10 )
      (>= (total-time) 3 )
      (>= (count laptopAndBookInPlace:hexagonal_bin) (count ballThrownToRug:blue_dodgeball) )
    )
  )
)
(:scoring
  (+ 3 9 )
)
)



(define (game game-id-309) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (exists (?h - (either blue_cube_block) ?o5 - ball)
      (and
        (and
          (and
            (in ?o5 ?o5)
            (in_motion rug)
          )
          (in_motion ?o5)
        )
        (forall (?r2 - hexagonal_bin)
          (in_motion ?r2)
        )
        (and
          (and
            (and
              (exists (?c6 - ball ?b ?c ?t - block)
                (agent_holds desk)
              )
              (not
                (in_motion back)
              )
            )
            (adjacent ?o5 ?o5)
            (and
              (agent_holds ?o5)
              (in_motion ?o5)
            )
            (and
              (and
                (not
                  (in_motion ?o5)
                )
                (and
                  (not
                    (agent_holds ?o5)
                  )
                )
                (< (distance ?o5 agent) 0.5)
                (or
                  (and
                    (touch ?o5 ?o5)
                    (and
                      (same_color ?o5 ?o5)
                      (or
                        (not
                          (on bed ?o5)
                        )
                        (or
                          (and
                            (on desk ?o5)
                            (not
                              (adjacent ?o5 ?o5)
                            )
                          )
                          (in_motion ?o5)
                          (or
                            (and
                              (on ?o5 ?o5)
                              (agent_holds ?o5)
                            )
                            (between ?o5 agent ?o5)
                          )
                        )
                      )
                    )
                  )
                  (and
                    (and
                      (< (distance ?o5 ?o5) 1)
                      (in_motion ?o5)
                    )
                    (equal_x_position ?o5 ?o5)
                    (adjacent bed ?o5)
                  )
                )
                (in_motion ?o5)
                (agent_holds ?o5)
                (not
                  (and
                    (in_motion ?o5)
                    (adjacent_side ?o5 ?o5 door)
                  )
                )
                (agent_holds ?o5)
                (in_motion ?o5)
                (on ?o5 ?o5)
              )
              (not
                (agent_holds ?o5)
              )
              (in_motion ?o5)
            )
            (agent_holds rug)
            (adjacent front_left_corner ?o5)
            (same_object room_center top_shelf)
            (toggled_on ?o5)
            (in ?o5 ?o5)
            (not
              (agent_holds ?o5)
            )
          )
          (and
            (in_motion ?o5)
            (agent_holds rug)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?d1 - (either main_light_switch cylindrical_block dodgeball cube_block key_chain key_chain cube_block))
      (and
        (preference failedThrowToBin
          (exists (?x - hexagonal_bin)
            (then
              (once (agent_holds desk) )
              (once (same_object ?x door) )
              (once (in_motion ?x) )
            )
          )
        )
        (preference throwAttempt
          (exists (?d - hexagonal_bin ?o4 - curved_wooden_ramp)
            (then
              (once (agent_holds ?d1) )
              (hold (and (agent_holds ?d1) (in_motion ?o4) ) )
              (hold (and (not (equal_z_position desk back) ) (adjacent desk ?d1) ) )
              (once (not (agent_holds ?d1) ) )
            )
          )
        )
      )
    )
    (preference blockToBinFromRug
      (exists (?o5 - hexagonal_bin)
        (then
          (hold (in_motion ?o5) )
          (hold-while (and (and (on ?o5 ?o5) (same_color ?o5 ?o5) (agent_holds agent) (agent_holds ?o5) ) (and (or (adjacent_side ?o5 room_center ?o5) (not (touch ?o5 ?o5) ) ) (or (not (and (and (agent_holds ?o5) (or (agent_holds desk) (and (not (in_motion ?o5) ) (and (adjacent_side desk bed ?o5 ?o5) (and (agent_holds ?o5) (in_motion ?o5) ) ) ) ) (in ?o5 ?o5) ) (and (agent_holds ?o5) (and (agent_holds ?o5) (forall (?c - hexagonal_bin) (< 1 (distance ?o5 rug)) ) ) ) ) ) (adjacent front_left_corner ?o5) (is_setup_object ?o5) ) ) ) (rug_color_under ?o5 ?o5) (agent_holds ?o5) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once failedThrowToBin:golfball) (count blockToBinFromRug:purple) )
)
(:scoring
  (count blockToBinFromRug:side_table)
)
)



(define (game game-id-310) (:domain many-objects-room-v1)
(:setup
  (exists (?l1 ?c ?c ?b4 - dodgeball)
    (and
      (game-conserved
        (not
          (and
            (and
              (and
                (or
                  (in_motion ?l1)
                  (and
                    (in_motion ?c)
                    (touch ?l1 ?c)
                    (not
                      (in_motion ?b4)
                    )
                  )
                  (and
                    (on ?l1 ?l1)
                    (and
                      (and
                        (and
                          (< (distance ?l1 ?b4) 7)
                          (< 1 0)
                        )
                        (agent_holds agent)
                      )
                      (and
                        (not
                          (agent_holds ?l1)
                        )
                        (and
                          (not
                            (on ?b4 rug)
                          )
                          (and
                            (agent_holds ?b4)
                            (not
                              (is_setup_object desk)
                            )
                            (and
                              (agent_holds agent)
                              (and
                                (not
                                  (rug_color_under pink ?b4)
                                )
                                (and
                                  (and
                                    (< 5 0)
                                    (or
                                      (faces desk left)
                                      (broken ?b4)
                                    )
                                    (agent_crouches )
                                  )
                                  (in_motion ?b4)
                                )
                              )
                              (adjacent room_center ?c)
                            )
                          )
                        )
                      )
                      (in_motion ?b4)
                    )
                  )
                )
                (in ?b4 ?c)
              )
              (on ?b4 ?l1)
            )
            (and
              (<= 8 1)
              (not
                (and
                  (in_motion ?b4)
                  (not
                    (exists (?r - hexagonal_bin)
                      (and
                        (forall (?b ?o - (either doggie_bed chair cylindrical_block))
                          (in_motion ?b)
                        )
                        (< (distance ?b4 ?b4) 3)
                        (in_motion ?l1)
                        (agent_holds agent)
                      )
                    )
                  )
                )
              )
            )
            (in_motion ?l1)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToBinFromDistance
      (exists (?h - game_object)
        (then
          (once (not (touch ?h ?h) ) )
          (once (not (adjacent ?h desk) ) )
          (hold-while (on ?h desk) (not (game_over ) ) )
        )
      )
    )
  )
)
(:terminal
  (<= 8 (total-time) )
)
(:scoring
  (+ (count throwToBinFromDistance:bed:dodgeball) (count throwToBinFromDistance:dodgeball:yellow) (count throwToBinFromDistance:bed) 1 (count-same-positions throwToBinFromDistance:golfball) (* (>= 6 15 )
      2
      2
    )
  )
)
)



(define (game game-id-311) (:domain many-objects-room-v1)
(:setup
  (forall (?r - doggie_bed)
    (game-conserved
      (exists (?h - hexagonal_bin ?b - hexagonal_bin)
        (rug_color_under bed desk)
      )
    )
  )
)
(:constraints
  (and
    (preference ballOnBedAtEnd
      (exists (?t - flat_block ?b ?c - building ?h - cube_block)
        (then
          (once (and (and (agent_holds ?h) (not (equal_x_position ?h ?h) ) ) (in_motion ?h) ) )
          (once (not (is_setup_object ?h) ) )
          (once (and (in_motion ?h) (in_motion ?h) (not (and (agent_holds ?h) (not (agent_holds bed) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (count-once-per-objects ballOnBedAtEnd:dodgeball) (total-score) )
    (or
      (> (* (count ballOnBedAtEnd:book) (count ballOnBedAtEnd:pink_dodgeball:basketball) )
        (* (count ballOnBedAtEnd:basketball) (* 6 (count ballOnBedAtEnd:yellow) )
        )
      )
      (> 2 (+ 8 (- (* (count ballOnBedAtEnd:orange:golfball) (external-forall-minimize (* (external-forall-minimize (external-forall-maximize (- 20 )
                    )
                  )
                  2
                  7
                )
              )
            )
          )
        )
      )
    )
    (>= 3 (total-time) )
  )
)
(:scoring
  (count ballOnBedAtEnd:hexagonal_bin:hexagonal_bin:purple)
)
)



(define (game game-id-312) (:domain many-objects-room-v1)
(:setup
  (exists (?h - pillow)
    (game-conserved
      (and
        (= (distance ?h ?h) (distance ?h rug))
        (adjacent ?h agent)
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - doggie_bed ?d - red_dodgeball ?p - dodgeball)
      (and
        (preference binKnockedOver
          (then
            (once (agent_holds ?p) )
            (hold (agent_holds ?p) )
            (hold (not (exists (?d - hexagonal_bin) (not (in ?p ?p) ) ) ) )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 15 (- 9 )
  )
)
(:scoring
  (count-once-per-objects binKnockedOver:beachball:red)
)
)



(define (game game-id-313) (:domain medium-objects-room-v1)
(:setup
  (forall (?h - (either book bridge_block))
    (game-conserved
      (not
        (rug_color_under ?h ?h)
      )
    )
  )
)
(:constraints
  (and
    (preference throwToBin
      (exists (?h - hexagonal_bin ?h - (either wall yellow))
        (then
          (hold (agent_holds pink) )
          (hold (agent_holds ?h) )
          (once (same_color ?h ?h) )
          (hold-while (and (faces ?h ?h) (or (not (agent_holds ?h) ) (and (equal_x_position ?h ?h) (in_motion ?h) ) ) ) (in_motion ?h) )
          (once (not (agent_holds ?h) ) )
        )
      )
    )
    (forall (?l - (either wall cd))
      (and
        (preference redDodgeballThrownToBinWithoutTouchingFloor
          (exists (?g - (either pyramid_block curved_wooden_ramp cube_block))
            (then
              (hold (in_motion room_center) )
              (once (same_color ?g desk) )
              (once (not (agent_holds ?g) ) )
            )
          )
        )
        (preference cubeBlockInBuilding
          (exists (?db - doggie_bed)
            (then
              (once (in_motion ?l) )
              (once (agent_holds ?db) )
              (once (in_motion ?db) )
            )
          )
        )
      )
    )
    (forall (?o4 - shelf ?d - blue_cube_block)
      (and
        (preference throwBallToBinOffObject
          (exists (?d - hexagonal_bin ?d - game_object)
            (then
              (once (exists (?d - desk_shelf) (and (and (or (agent_holds desk) (= (distance_side ?d ?d ?d bed) 1) ) (and (in ?d ?d) (not (agent_holds ?d) ) ) ) (not (agent_crouches ) ) ) ) )
              (once (agent_holds ?d) )
              (hold (agent_holds ?d) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count throwBallToBinOffObject:green:dodgeball) 5 )
)
(:scoring
  (+ 4 (* (* (- (count-once-per-objects cubeBlockInBuilding:beachball) )
        (+ 180 6 )
      )
      10
      (* (count-once-per-external-objects redDodgeballThrownToBinWithoutTouchingFloor:golfball) 5 )
    )
    (count-once-per-objects throwBallToBinOffObject:alarm_clock)
    2
  )
)
)



(define (game game-id-314) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?f - (either hexagonal_bin tall_cylindrical_block))
      (and
        (and
          (game-conserved
            (and
              (not
                (not
                  (not
                    (game_over )
                  )
                )
              )
              (and
                (not
                  (exists (?h ?h ?b ?h ?bl ?h ?g ?o2 ?c3 ?f - yellow_pyramid_block)
                    (equal_z_position ?b ?bl)
                  )
                )
                (on ?f front)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownHitsAgent
      (exists (?g - hexagonal_bin)
        (then
          (once (adjacent ?g rug) )
          (once (= 1 2) )
          (hold (not (and (in_motion ?g) (agent_holds ?g) (above door ?g) ) ) )
        )
      )
    )
    (preference itemsTurnedOff
      (exists (?r - hexagonal_bin ?b - block)
        (then
          (once (in_motion ?b) )
          (hold (and (on floor ?b) (in_motion sideways) ) )
          (once (touch ?b room_center) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects itemsTurnedOff:green) 4 )
)
(:scoring
  (count itemsTurnedOff:golfball:pyramid_block)
)
)



(define (game game-id-315) (:domain few-objects-room-v1)
(:setup
  (forall (?p - cube_block ?h - hexagonal_bin ?l - dodgeball)
    (exists (?b - chair ?o1 - dodgeball ?b3 - dodgeball ?o5 - block)
      (game-conserved
        (in_motion ?o5)
      )
    )
  )
)
(:constraints
  (and
    (preference throwKnocksBlock
      (exists (?f - (either pyramid_block basketball tall_cylindrical_block) ?w1 - dodgeball)
        (at-end
          (and
            (on ?w1 ?w1)
            (not
              (on ?w1 ?w1)
            )
            (on ?w1 rug)
          )
        )
      )
    )
    (preference dodgeballAndBasketballInBin
      (exists (?d ?h - (either cellphone pyramid_block tall_cylindrical_block))
        (at-end
          (on ?d desk)
        )
      )
    )
    (preference cubeBlockInBuilding
      (exists (?p ?o - (either yellow_cube_block yellow cd))
        (at-end
          (game_over )
        )
      )
    )
  )
)
(:terminal
  (< (count-once-per-objects cubeBlockInBuilding:dodgeball) (count-total cubeBlockInBuilding:dodgeball) )
)
(:scoring
  (count cubeBlockInBuilding:dodgeball)
)
)



(define (game game-id-316) (:domain few-objects-room-v1)
(:setup
  (forall (?b8 - chair ?c5 - curved_wooden_ramp)
    (game-conserved
      (not
        (and
          (agent_holds ?c5)
          (not
            (and
              (and
                (in_motion ?c5)
                (agent_holds ?c5)
              )
              (on ?c5 ?c5)
              (and
                (in agent ?c5)
                (on ?c5 ?c5)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToRampToBin
      (exists (?c1 - building)
        (then
          (hold (not (not (adjacent_side ?c1 bed ?c1) ) ) )
          (once (and (in_motion ?c1) (in_motion ?c1) ) )
          (once (not (not (touch ?c1 ?c1) ) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (+ 10 4 )
      (external-forall-maximize
        (+ (* (count throwToRampToBin:rug) 3 )
          2
        )
      )
    )
  )
)
(:scoring
  (count-once throwToRampToBin:dodgeball)
)
)



(define (game game-id-317) (:domain few-objects-room-v1)
(:setup
  (exists (?r - block)
    (and
      (exists (?h - dodgeball)
        (forall (?b - game_object ?g - (either ball blue_cube_block))
          (exists (?b8 - cube_block ?w1 - dodgeball ?c1 - building)
            (and
              (and
                (forall (?p1 - shelf)
                  (game-conserved
                    (and
                      (in ?p1 ?c1)
                      (> 3 1)
                    )
                  )
                )
                (game-optional
                  (on ?r ?c1)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballHitsPillowWithoutTouchingBlock
      (exists (?c - wall)
        (then
          (hold-while (and (agent_holds desk) (not (broken ?c) ) ) (in ?c ?c) )
          (hold (not (not (same_color ?c ?c) ) ) )
          (hold (in ?c ?c) )
        )
      )
    )
    (preference ballThrownFromBehindBlock
      (exists (?t1 - dodgeball)
        (at-end
          (not
            (agent_holds ?t1)
          )
        )
      )
    )
  )
)
(:terminal
  (>= (external-forall-maximize (count-once-per-objects dodgeballHitsPillowWithoutTouchingBlock) ) (count-once-per-objects ballThrownFromBehindBlock:dodgeball:hexagonal_bin) )
)
(:scoring
  (external-forall-maximize
    (* (count-once-per-objects ballThrownFromBehindBlock:dodgeball:pink) (count-once ballThrownFromBehindBlock:blue_dodgeball) (external-forall-maximize (count-total dodgeballHitsPillowWithoutTouchingBlock:dodgeball) ) )
  )
)
)



(define (game game-id-318) (:domain many-objects-room-v1)
(:setup
  (forall (?g - pyramid_block)
    (forall (?c5 - chair ?g - ball)
      (game-conserved
        (and
          (> (distance_side ?g ?g agent) 0.5)
          (is_setup_object ?g)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToDoggieBedOffWall
      (exists (?h - hexagonal_bin ?ob - (either bridge_block rug cellphone yellow wall) ?w - cube_block)
        (then
          (once (not (not (and (agent_holds ?w) (in ?w ?w) (forall (?c4 - chair) (and (and (forall (?h ?l - (either book cellphone)) (on ?c4 ?w) ) (agent_holds sideways) ) (agent_holds ?w) (adjacent ?w ?c4) (in ?w desk) ) ) ) ) ) )
          (once (in_motion pink) )
          (once (in_motion ?w) )
        )
      )
    )
    (forall (?g - yellow_cube_block ?w - block)
      (and
        (preference throwKnocksBlock
          (exists (?b - hexagonal_bin)
            (then
              (hold (agent_holds ?w) )
              (once (on ?w ?b) )
              (once (and (in_motion desk) (and (not (in_motion agent) ) (in_motion ?w) (not (in_motion ?w) ) (on ?w pink_dodgeball) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< (total-score) (total-score) )
)
(:scoring
  (count-once-per-objects throwKnocksBlock:pink:dodgeball)
)
)



(define (game game-id-319) (:domain many-objects-room-v1)
(:setup
  (forall (?l2 - hexagonal_bin)
    (forall (?d - dodgeball)
      (and
        (forall (?c - (either game_object golfball))
          (exists (?w - building)
            (game-conserved
              (agent_holds ?d)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?c - sliding_door ?b - dodgeball)
        (at-end
          (and
            (agent_holds ?b)
            (not
              (on ?b ?b)
            )
          )
        )
      )
    )
    (preference ballThrownHitsAgent
      (exists (?s - teddy_bear ?h - triangular_ramp ?l - dodgeball)
        (then
          (once (and (not (in_motion room_center) ) (agent_holds floor) ) )
          (hold (in_motion ?l) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (= 20 3 )
      10
    )
    (>= 6 9 )
  )
)
(:scoring
  (count throwBallToBin:doggie_bed)
)
)



(define (game game-id-320) (:domain few-objects-room-v1)
(:setup
  (exists (?p1 - shelf)
    (and
      (game-conserved
        (agent_holds ?p1)
      )
      (forall (?d - hexagonal_bin)
        (exists (?h - (either dodgeball dodgeball) ?b2 - pillow)
          (and
            (exists (?b ?r - dodgeball)
              (exists (?r - tall_cylindrical_block)
                (exists (?s - beachball ?b8 - (either mug book doggie_bed) ?b - teddy_bear ?d - (either cube_block golfball))
                  (exists (?o - dodgeball ?w - block)
                    (game-optional
                      (in_motion ?b)
                    )
                  )
                )
              )
            )
          )
        )
      )
      (game-optional
        (rug_color_under ?p1 ?p1)
      )
    )
  )
)
(:constraints
  (and
    (preference objectOnBed
      (exists (?c1 - chair ?p2 - hexagonal_bin)
        (at-end
          (or
            (in_motion ?p2)
            (not
              (not
                (in_motion room_center)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> 10 (* (* 4 (* (count objectOnBed:beachball) (* (- (count-measure objectOnBed:pink) )
            (+ 1 -10 )
          )
        )
      )
      (count objectOnBed:red)
      (* (count objectOnBed:dodgeball:yellow) 5 )
      (* (count objectOnBed:book) (count-once-per-objects objectOnBed:purple) )
      2
      3
      (* 2 10 )
      (count-once-per-objects objectOnBed:triangle_block)
      5
    )
  )
)
(:scoring
  (* 6 )
)
)



(define (game game-id-321) (:domain many-objects-room-v1)
(:setup
  (forall (?l - hexagonal_bin)
    (exists (?w - hexagonal_bin)
      (game-optional
        (not
          (= (distance ?l agent) (distance ?w ?l))
        )
      )
    )
  )
)
(:constraints
  (and
    (preference nonBlockPlacedInBuilding
      (exists (?ob - cube_block ?r1 - hexagonal_bin)
        (at-end
          (agent_holds ?r1)
        )
      )
    )
  )
)
(:terminal
  (>= (* 50 30 )
    6
  )
)
(:scoring
  (+ (count-measure nonBlockPlacedInBuilding:golfball) (count-total nonBlockPlacedInBuilding:beachball) )
)
)



(define (game game-id-322) (:domain few-objects-room-v1)
(:setup
  (exists (?l ?p3 ?c ?c5 - game_object)
    (exists (?b - (either dodgeball pillow dodgeball))
      (and
        (and
          (and
            (or
              (game-conserved
                (and
                  (agent_holds ?c)
                  (agent_holds ?c)
                )
              )
              (and
                (and
                  (game-conserved
                    (in ?c ?p3)
                  )
                )
                (game-optional
                  (in_motion ?l)
                )
                (game-conserved
                  (agent_holds ?p3)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - hexagonal_bin ?h - game_object)
      (and
        (preference throwAttempt
          (exists (?o2 - hexagonal_bin)
            (then
              (once (not (object_orientation desk ?o2) ) )
              (once (not (in_motion ?h) ) )
              (hold (agent_holds desk) )
            )
          )
        )
        (preference dodgeballThrownToBinFromDesk
          (exists (?h - dodgeball)
            (then
              (hold-while (not (agent_holds ?h) ) (exists (?c - building ?f ?t ?g - dodgeball) (< 1 (distance_side ?h ?g bed)) ) (exists (?b - game_object ?d - pillow) (object_orientation ?h ?h) ) (and (not (adjacent ?h ?h) ) (not (> 10 8) ) ) )
              (once (touch ?h ?h) )
              (once (in_motion ?h) )
            )
          )
        )
        (preference blueObjectMovedToRoomCenter
          (exists (?g - building)
            (then
              (once (in_motion front) )
              (once (< 1 (distance ?g floor)) )
              (once (above ?h agent) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count blueObjectMovedToRoomCenter:pyramid_block) (+ (* (external-forall-maximize (+ 1 (count throwAttempt:dodgeball) )
        )
        10
      )
      (count-once-per-objects blueObjectMovedToRoomCenter:beachball:golfball)
    )
  )
)
(:scoring
  (count-shortest blueObjectMovedToRoomCenter:red:dodgeball)
)
)



(define (game game-id-323) (:domain medium-objects-room-v1)
(:setup
  (exists (?c6 - doggie_bed)
    (and
      (game-optional
        (agent_holds ?c6)
      )
    )
  )
)
(:constraints
  (and
    (preference golfballUnderBridgeWithoutTouchingBlock
      (exists (?o2 ?b6 - dodgeball)
        (then
          (once (and (in_motion ?o2) (in_motion desk) ) )
          (once (object_orientation ?o2 room_center) )
        )
      )
    )
  )
)
(:terminal
  (>= 1 (count-once-per-objects golfballUnderBridgeWithoutTouchingBlock:pink:beachball) )
)
(:scoring
  (count golfballUnderBridgeWithoutTouchingBlock:yellow_pyramid_block)
)
)



(define (game game-id-324) (:domain many-objects-room-v1)
(:setup
  (exists (?b1 - red_dodgeball)
    (exists (?b - red_dodgeball ?b5 - bridge_block)
      (exists (?h - pillow ?d - chair ?g - pillow ?b3 - (either pen hexagonal_bin) ?r - golfball)
        (exists (?b - hexagonal_bin)
          (game-conserved
            (adjacent ?b5 ?b1)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrowAttempt
      (exists (?o - dodgeball)
        (then
          (once (not (same_color room_center ?o) ) )
        )
      )
    )
    (preference throwBallToBin
      (exists (?o2 - pyramid_block)
        (then
          (once (same_object pink ?o2) )
          (once (and (not (in ?o2 ?o2) ) (agent_holds bed) ) )
        )
      )
    )
    (preference redDodgeballThrownToBinWithoutTouchingFloor
      (exists (?c ?h - shelf ?d - hexagonal_bin)
        (then
          (once-measure (agent_holds ?d) (x_position ?d) )
          (hold (in block ?d) )
          (once (and (in_motion ?d) (in_motion ?d) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 8 (count ballThrowAttempt:beachball:yellow) )
)
(:scoring
  (external-forall-maximize
    (+ 5 (count ballThrowAttempt:golfball) )
  )
)
)



(define (game game-id-325) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (game_over )
  )
)
(:constraints
  (and
    (preference blockOnBlockInTowerAtEnd
      (exists (?d - hexagonal_bin)
        (then
          (hold (broken agent) )
          (once (touch ?d bed) )
        )
      )
    )
    (preference ballRolledOnRampToRug
      (exists (?b - chair ?c5 - dodgeball)
        (at-end
          (and
            (same_color ?c5 ?c5)
            (in_motion ?c5)
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count blockOnBlockInTowerAtEnd) (>= (* 8 6 )
      5
    )
  )
)
(:scoring
  (count-once-per-objects blockOnBlockInTowerAtEnd:basketball:beachball)
)
)



(define (game game-id-326) (:domain medium-objects-room-v1)
(:setup
  (exists (?b6 - teddy_bear)
    (exists (?d - (either hexagonal_bin mug hexagonal_bin flat_block))
      (and
        (and
          (exists (?w2 - chair)
            (exists (?h - building)
              (and
                (game-conserved
                  (game_start )
                )
              )
            )
          )
        )
        (forall (?b2 ?h - (either cube_block cylindrical_block dodgeball cellphone ball) ?h - game_object)
          (game-optional
            (and
              (in_motion ?b6)
              (adjacent_side ?d ?b6 front)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference nonBlockPlacedInBuilding
      (exists (?h - (either book doggie_bed) ?w2 - hexagonal_bin)
        (then
          (hold-while (agent_holds agent) (in_motion ?w2) (in_motion ?w2) )
          (once (agent_holds ?w2) )
          (once (not (in_motion ?w2) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (count nonBlockPlacedInBuilding:basketball:dodgeball) (total-time) )
    (> (total-score) (* 3 (count nonBlockPlacedInBuilding:dodgeball:dodgeball) )
    )
    (> (total-time) 3 )
  )
)
(:scoring
  (* 2 9 )
)
)



(define (game game-id-327) (:domain many-objects-room-v1)
(:setup
  (exists (?c - (either wall) ?h - hexagonal_bin ?h - dodgeball)
    (exists (?p2 - cube_block)
      (forall (?b6 - ball)
        (and
          (and
            (game-conserved
              (> 6 1)
            )
            (game-optional
              (adjacent_side bed ?h ?b6)
            )
          )
          (game-conserved
            (agent_holds brown)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballToBinFromBed
      (exists (?b - (either key_chain flat_block))
        (then
          (hold (agent_holds agent) )
          (hold (agent_holds ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (= 3 (* 3 (* (count-once ballToBinFromBed:red) 5 )
        )
      )
      (count-total ballToBinFromBed:side_table)
      (count-once-per-objects ballToBinFromBed:cube_block)
      (count-increasing-measure ballToBinFromBed:pyramid_block)
      (count ballToBinFromBed:dodgeball)
      (* 3 (count ballToBinFromBed:purple:dodgeball:purple) )
      (* 10 (count-once-per-objects ballToBinFromBed:orange) )
      (count ballToBinFromBed:beachball:side_table)
      (count-once-per-objects ballToBinFromBed:blue_cube_block)
    )
    20
  )
)
(:scoring
  (+ 300 (- (+ (count-once-per-objects ballToBinFromBed:golfball) )
    )
  )
)
)



(define (game game-id-328) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?b3 - dodgeball)
      (not
        (game-optional
          (and
            (in_motion ?b3)
            (and
              (not
                (in_motion ?b3)
              )
              (on ?b3 floor)
              (and
                (in_motion ?b3)
                (and
                  (not
                    (and
                      (not
                        (touch front ?b3)
                      )
                      (and
                        (in ?b3 ?b3)
                        (in_motion ?b3)
                      )
                    )
                  )
                  (and
                    (and
                      (and
                        (in_motion ?b3)
                        (in_motion ?b3)
                      )
                      (not
                        (and
                          (in_motion rug)
                          (and
                            (and
                              (and
                                (not
                                  (adjacent ?b3 ?b3)
                                )
                                (and
                                  (in_motion ?b3)
                                  (open ?b3)
                                  (agent_holds ?b3)
                                  (and
                                    (adjacent ?b3 ?b3)
                                    (not
                                      (equal_z_position ?b3 ?b3)
                                    )
                                  )
                                  (agent_holds ?b3)
                                  (in ?b3 ?b3)
                                )
                                (agent_holds ?b3)
                                (not
                                  (not
                                    (or
                                      (not
                                        (not
                                          (in_motion ?b3)
                                        )
                                      )
                                      (and
                                        (object_orientation bridge_block floor)
                                        (and
                                          (is_setup_object floor)
                                          (not
                                            (in ?b3 ?b3)
                                          )
                                        )
                                      )
                                      (and
                                        (and
                                          (not
                                            (agent_holds ?b3)
                                          )
                                          (on ?b3 ?b3)
                                        )
                                        (agent_holds pillow)
                                      )
                                    )
                                  )
                                )
                                (in_motion ?b3)
                                (and
                                  (same_type ?b3 ?b3)
                                )
                                (and
                                  (not
                                    (and
                                      (and
                                        (same_color room_center ?b3)
                                        (on ?b3 ?b3)
                                        (in_motion ?b3)
                                      )
                                      (adjacent agent agent)
                                    )
                                  )
                                  (and
                                    (in_motion ?b3)
                                    (agent_holds ?b3)
                                  )
                                  (broken ?b3)
                                )
                                (in ?b3 room_center)
                                (and
                                  (and
                                    (in_motion ?b3)
                                    (not
                                      (not
                                        (in ?b3 ?b3)
                                      )
                                    )
                                  )
                                  (in ?b3 upside_down)
                                )
                                (agent_holds agent)
                                (agent_holds sideways)
                                (agent_holds ?b3)
                              )
                              (adjacent_side pink desk desk ?b3)
                            )
                          )
                          (and
                            (touch ?b3 bed)
                            (in_motion ?b3)
                            (in_motion ?b3)
                          )
                        )
                      )
                    )
                    (in_motion bed)
                    (on ?b3 ?b3)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttemptFromDoor
      (exists (?b6 - (either pencil beachball))
        (then
          (once (agent_crouches ) )
          (once (and (and (and (adjacent ?b6 ?b6) (not (>= 1 (distance ?b6 ?b6)) ) ) (not (and (is_setup_object ?b6) (and (not (not (on bed ?b6) ) ) (in_motion ?b6) ) (opposite ?b6 ?b6) ) ) ) (object_orientation ?b6 ?b6) (and (touch ?b6 ?b6) (and (agent_holds upright) (exists (?s - (either yellow_cube_block wall desktop)) (adjacent_side ?b6 ?b6 ?s) ) ) ) ) )
          (hold-while (faces ?b6 ?b6) (in_motion ?b6) (agent_holds ?b6) (faces ?b6 ?b6) )
        )
      )
    )
  )
)
(:terminal
  (< 3 (total-time) )
)
(:scoring
  (+ 1 (+ (* (count throwAttemptFromDoor:brown) (* 10 (count throwAttemptFromDoor:yellow) )
        (count-longest throwAttemptFromDoor:pyramid_block)
        (count-once-per-external-objects throwAttemptFromDoor:golfball:yellow)
      )
      (* (count-shortest throwAttemptFromDoor:block:yellow_cube_block) (count throwAttemptFromDoor:yellow:basketball) )
    )
    (> (external-forall-maximize (* (count throwAttemptFromDoor:beachball) (count-once throwAttemptFromDoor:golfball) )
      )
      (count-unique-positions throwAttemptFromDoor:doggie_bed)
    )
    (+ (- 3 )
      (count throwAttemptFromDoor:red)
    )
    -30
  )
)
)



(define (game game-id-329) (:domain medium-objects-room-v1)
(:setup
  (exists (?s - golfball)
    (forall (?o - green_triangular_ramp ?b - (either book doggie_bed))
      (game-conserved
        (in_motion agent)
      )
    )
  )
)
(:constraints
  (and
    (forall (?w1 - building ?h - ball)
      (and
        (preference ballThrownToBin
          (exists (?l3 - beachball)
            (then
              (hold (not (in_motion ?h) ) )
              (once (agent_holds ?h) )
              (hold (agent_holds ?l3) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> 2 (+ 2 3 )
  )
)
(:scoring
  (count ballThrownToBin:beachball)
)
)



(define (game game-id-330) (:domain few-objects-room-v1)
(:setup
  (exists (?c1 - (either dodgeball cylindrical_block hexagonal_bin) ?g - dodgeball)
    (game-conserved
      (in_motion ?g)
    )
  )
)
(:constraints
  (and
    (preference ballThrownOntoTarget
      (exists (?h ?b6 - color ?o - dodgeball)
        (then
          (hold-while (agent_holds ?o) (on ?o ?o) )
          (once (< 5 0.5) )
          (hold-while (and (touch ?o upright) (exists (?o1 - hexagonal_bin ?b - (either dodgeball cd)) (broken ?b) ) (and (and (or (in rug ?o) (in_motion ?o) ) (and (on ?o ?o) (and (in_motion ?o) (same_color ?o ?o) ) ) ) (not (and (and (and (agent_holds ?o) (not (not (in_motion ?o) ) ) ) (and (in_motion ?o) (in ?o ?o) ) ) (in_motion door) ) ) (in ?o ?o) ) ) (opposite ?o room_center) )
        )
      )
    )
  )
)
(:terminal
  (and
    (> 10 30 )
    (> (total-time) 4 )
    (>= (* 8 (- (* (<= (count-once-per-objects ballThrownOntoTarget:basketball:red) 1 )
            (* (* (count ballThrownOntoTarget:orange) (+ (count-unique-positions ballThrownOntoTarget:red:golfball) (* (- (count-once ballThrownOntoTarget:yellow) )
                    7
                    5
                  )
                )
              )
              (+ 1 (count-once-per-objects ballThrownOntoTarget:yellow_pyramid_block) )
              (external-forall-maximize
                (count-once ballThrownOntoTarget:dodgeball:beachball:wall)
              )
            )
          )
        )
      )
      (count ballThrownOntoTarget:golfball)
    )
  )
)
(:scoring
  (* (* (count-once ballThrownOntoTarget:red_pyramid_block) (count ballThrownOntoTarget:dodgeball) )
    (count ballThrownOntoTarget:basketball:dodgeball)
  )
)
)



(define (game game-id-331) (:domain many-objects-room-v1)
(:setup
  (exists (?r1 - hexagonal_bin)
    (exists (?g - hexagonal_bin)
      (and
        (and
          (and
            (forall (?x - cube_block)
              (game-conserved
                (on right ?r1)
              )
            )
          )
        )
        (game-conserved
          (agent_holds ?r1)
        )
        (and
          (exists (?o2 ?b - hexagonal_bin ?o - (either mug golfball) ?w - building ?c3 - chair)
            (and
              (and
                (exists (?r - hexagonal_bin)
                  (and
                    (forall (?b7 - cube_block)
                      (exists (?t2 - cylindrical_block ?h - (either cylindrical_block yellow_cube_block) ?b - bridge_block)
                        (game-conserved
                          (not
                            (touch ?b7 ?r1)
                          )
                        )
                      )
                    )
                  )
                )
                (exists (?o2 - cube_block)
                  (game-conserved
                    (adjacent ?o2 agent)
                  )
                )
              )
              (game-optional
                (opposite ?g ?c3)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - hexagonal_bin ?b - teddy_bear)
      (and
        (preference dodgeballFromRugToBin
          (exists (?d - hexagonal_bin ?w2 - hexagonal_bin)
            (then
              (once (game_start ) )
              (once (in_motion ?b) )
              (once (adjacent ?b ?w2) )
              (once (object_orientation ?w2 ?w2) )
            )
          )
        )
      )
    )
    (preference dodgeballsInPlace
      (exists (?d - hexagonal_bin)
        (then
          (hold (not (in_motion ?d) ) )
          (once (and (< (distance_side ?d ?d ?d) 1) (in agent bed) ) )
          (hold (not (on room_center ?d) ) )
        )
      )
    )
  )
)
(:terminal
  (= (count-once-per-objects dodgeballsInPlace:beachball:blue_cube_block) (count dodgeballFromRugToBin:hexagonal_bin) )
)
(:scoring
  (count dodgeballFromRugToBin:yellow)
)
)



(define (game game-id-332) (:domain many-objects-room-v1)
(:setup
  (exists (?b - pyramid_block)
    (game-conserved
      (agent_holds door)
    )
  )
)
(:constraints
  (and
    (forall (?h - dodgeball ?c - curved_wooden_ramp ?b3 - color)
      (and
        (preference dodgeballHitsPillowWithoutTouchingBlock
          (exists (?r - curved_wooden_ramp)
            (then
              (once (not (touch ?b3 ?r) ) )
              (once (not (and (opposite ?r ?r) (in_motion desk) ) ) )
              (hold (agent_holds ?r) )
              (hold (not (adjacent_side ?b3 ?r ?r ?b3) ) )
            )
          )
        )
        (preference pillowThrownToDoggieBed
          (then
            (once (not (and (< 10 1) (in_motion ?b3) ) ) )
            (once (game_start ) )
            (once (on ?b3 ?b3) )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (+ (count-once-per-objects dodgeballHitsPillowWithoutTouchingBlock:basketball:beachball) 15 )
      2
    )
    (or
      (= 2 (total-time) )
      (>= (total-score) 10 )
      (>= (count pillowThrownToDoggieBed:golfball:purple) (count dodgeballHitsPillowWithoutTouchingBlock:basketball) )
    )
  )
)
(:scoring
  (count dodgeballHitsPillowWithoutTouchingBlock:yellow:pink_dodgeball:dodgeball)
)
)



(define (game game-id-333) (:domain many-objects-room-v1)
(:setup
  (exists (?r - dodgeball)
    (exists (?c - hexagonal_bin)
      (and
        (game-conserved
          (in_motion ?c)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockInTowerKnockedByDodgeball
      (exists (?d - doggie_bed)
        (at-end
          (on ?d agent)
        )
      )
    )
    (forall (?c2 - building)
      (and
        (preference cubeBlockThrowAttempt
          (exists (?o2 ?r - hexagonal_bin ?h - pillow)
            (at-end
              (and
                (game_start )
                (and
                  (in ?h desk)
                  (in_motion ?h)
                  (game_start )
                )
              )
            )
          )
        )
        (preference throwToBinFromOppositeWall
          (exists (?g - desktop)
            (then
              (once (on ?c2 ?c2) )
              (hold (agent_holds ?c2) )
              (hold (exists (?l - cylindrical_block) (= (distance ?g ?c2) 1) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (count-once-per-objects throwToBinFromOppositeWall:book) )
)
(:scoring
  (count-measure throwToBinFromOppositeWall:pink:dodgeball)
)
)



(define (game game-id-334) (:domain few-objects-room-v1)
(:setup
  (exists (?tb - hexagonal_bin ?h - hexagonal_bin)
    (game-optional
      (agent_holds ?h)
    )
  )
)
(:constraints
  (and
    (preference smallItemsInPlace
      (exists (?d2 - dodgeball)
        (at-end
          (and
            (on ?d2 room_center)
            (on ?d2 ?d2)
            (and
              (not
                (and
                  (not
                    (forall (?b - ball ?bl - hexagonal_bin)
                      (and
                        (exists (?b2 ?h - building)
                          (exists (?d - hexagonal_bin)
                            (adjacent ?d ?d)
                          )
                        )
                        (in_motion drawer)
                        (not
                          (and
                            (agent_holds ?bl)
                            (between agent door pink)
                          )
                        )
                        (adjacent ?bl ?d2)
                        (on ?d2 ?d2)
                        (on ?d2 ?d2)
                      )
                    )
                  )
                  (and
                    (and
                      (in_motion ?d2)
                      (is_setup_object ?d2)
                    )
                    (agent_holds ?d2)
                  )
                )
              )
              (not
                (open ?d2)
              )
            )
          )
        )
      )
    )
    (preference pillowMovedToRoomCenter
      (exists (?h - game_object)
        (at-end
          (on ?h desk)
        )
      )
    )
    (forall (?c - hexagonal_bin)
      (and
        (preference itemsTurnedOff
          (exists (?d - beachball)
            (then
              (once (opposite bed south_west_corner) )
              (once (forall (?l - curved_wooden_ramp ?c ?d1 - ball) (not (in_motion ?d) ) ) )
              (once (not (not (and (not (exists (?h - drawer ?c1 - block ?c - (either pink pillow) ?g - chair ?f - hexagonal_bin) (agent_holds ?c) ) ) (in_motion ?d) (and (not (in_motion ?c) ) (not (in_motion ?c) ) ) (not (same_object ?d bottom_shelf) ) ) ) ) )
            )
          )
        )
        (preference baseBlockInTowerAtEnd
          (exists (?c - curved_wooden_ramp)
            (then
              (once (not (in_motion ?c) ) )
              (hold-while (not (in_motion ?c) ) (not (not (on ?c ?c) ) ) (> (distance ?c room_center) 1) (and (agent_holds pink) (= 1) ) )
              (hold (and (not (on ?c ?c) ) (in_motion floor) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count smallItemsInPlace:side_table:basketball) 3 )
)
(:scoring
  (count-once-per-objects baseBlockInTowerAtEnd:dodgeball)
)
)



(define (game game-id-335) (:domain many-objects-room-v1)
(:setup
  (exists (?h - ball)
    (and
      (and
        (and
          (game-optional
            (< 0.5 1)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference redDodgeballThrownToBin
      (exists (?h - (either dodgeball doggie_bed beachball))
        (then
          (once (and (agent_holds ?h) (and (and (in_motion ?h) (agent_holds floor) ) (not (on ?h ?h) ) (between ?h ?h ?h) ) ) )
          (hold (same_object ?h ?h) )
          (once (game_over ) )
          (hold (agent_holds ?h) )
        )
      )
    )
    (forall (?h - dodgeball)
      (and
        (preference throwFromBehindChairsInBin
          (exists (?h - beachball)
            (then
              (once (and (in_motion door) (in_motion ?h) ) )
              (once (and (and (< 1 (distance floor ?h)) (< 3 (distance_side ?h ?h ?h ?h)) ) (agent_holds ?h) ) )
              (once (< (distance agent ?h) (distance ?h ?h)) )
            )
          )
        )
        (preference cubeBlockThrownToTopShelf
          (exists (?g - game_object)
            (then
              (once (and (agent_holds ?g) (on ?h ?g) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count redDodgeballThrownToBin:triangle_block) 4 )
)
(:scoring
  (count-once-per-objects throwFromBehindChairsInBin:golfball)
)
)



(define (game game-id-336) (:domain few-objects-room-v1)
(:setup
  (exists (?r - (either cd wall))
    (game-conserved
      (and
        (adjacent ?r agent)
        (same_type ?r ?r)
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - dodgeball)
      (and
        (preference throwOverRamp
          (exists (?b - game_object ?o - hexagonal_bin)
            (then
              (once (and (faces ?b ?b) (object_orientation ?b ?o) (and (in_motion ?o) (and (agent_holds ?o) (and (not (in ?o ?o) ) (exists (?s - hexagonal_bin ?b ?h - (either desktop dodgeball)) (agent_holds room_center) ) ) ) (on ?b ?o) ) ) )
              (once (and (adjacent_side bed ?b desk) (and (not (not (and (and (on ?o desk) (in_motion sideways) ) (on upside_down ?b) ) ) ) (and (adjacent agent ?o) (and (< 1 (distance ?o ?b)) (same_type ?o ?o) ) ) (not (agent_holds ?o) ) ) (not (not (on ?b ?b) ) ) ) )
              (once (agent_holds ?b) )
            )
          )
        )
      )
    )
    (preference dodgeballFromDeskToTarget
      (exists (?h - hexagonal_bin)
        (at-end
          (adjacent ?h bed)
        )
      )
    )
    (preference blockInTowerKnocked
      (exists (?o - block ?s - hexagonal_bin)
        (then
          (hold (not (not (and (adjacent ?s ?s) (agent_holds ?s) ) ) ) )
          (hold (in ?s ?s) )
          (hold (agent_holds ?s) )
        )
      )
    )
  )
)
(:terminal
  (<= 3 (* (external-forall-maximize (count dodgeballFromDeskToTarget:basketball) ) (+ (* (/ (external-forall-maximize (count throwOverRamp) ) 7 ) (count blockInTowerKnocked:basketball:doggie_bed) )
        (* (external-forall-maximize (* (count-once-per-objects dodgeballFromDeskToTarget:beachball) 3 )
          )
          5
        )
      )
    )
  )
)
(:scoring
  (* (* 20 5 5 )
    3
  )
)
)



(define (game game-id-337) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (not
      (= 1 1)
    )
  )
)
(:constraints
  (and
    (preference gameBlockFound
      (exists (?b - game_object ?h - (either pink wall) ?d - doggie_bed)
        (then
          (hold-while (and (in_motion room_center) (agent_holds ?d) (and (and (and (agent_holds ?d) (not (< 1 (distance ?d ?d)) ) ) (touch ?d ?d) ) (above ?d agent) ) ) (agent_holds ?d) )
          (once (not (not (and (on agent pink_dodgeball) (in_motion ?d) (agent_holds ?d) ) ) ) )
          (once (in ?d ?d) )
        )
      )
    )
    (preference ballThrownMissesEverything
      (exists (?d1 - game_object)
        (then
          (once (in side_table ?d1) )
          (hold-while (adjacent ?d1 ?d1) (not (in_motion ?d1) ) )
          (hold-while (on ?d1 ?d1) (and (< 6 (distance blinds ?d1)) (adjacent ?d1 ?d1) ) )
        )
      )
    )
    (preference ballThrownToBin
      (exists (?h - hexagonal_bin ?p - dodgeball)
        (at-end
          (touch ?p ?p)
        )
      )
    )
  )
)
(:terminal
  (>= 300 (count ballThrownToBin:purple:pink_dodgeball) )
)
(:scoring
  (+ 4 2 )
)
)



(define (game game-id-338) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (forall (?c - teddy_bear ?o - hexagonal_bin)
        (game-conserved
          (on ?o ?o)
        )
      )
      (and
        (forall (?b - dodgeball)
          (game-optional
            (on ?b ?b)
          )
        )
      )
    )
    (exists (?x - hexagonal_bin)
      (game-optional
        (and
          (on desk ?x)
          (and
            (exists (?s - triangular_ramp)
              (in_motion ?x)
            )
            (in_motion ?x)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?r - hexagonal_bin)
      (and
        (preference objectMovedRoomSide
          (exists (?c6 - dodgeball ?b - hexagonal_bin)
            (then
              (once (in ?b ?r) )
              (once (same_type ?r ?r) )
              (once (and (and (adjacent ?b ?b) (and (and (in_motion ?r) (on ?b ?r) (not (not (and (not (agent_holds ?r) ) (in_motion ?b) ) ) ) ) (and (not (same_color ?b ?r) ) ) ) ) (adjacent ?b ?b) ) )
            )
          )
        )
        (preference ballKnocksBlockFromRug
          (exists (?c1 - yellow_pyramid_block)
            (at-end
              (and
                (in_motion upright)
                (touch ?r ?r)
                (not
                  (on ?c1 ?c1)
                )
                (not
                  (and
                    (agent_holds ?r)
                    (agent_holds ?c1)
                  )
                )
              )
            )
          )
        )
      )
    )
    (preference throwTeddyOntoPillow
      (exists (?h - hexagonal_bin ?w1 - wall)
        (then
          (once (or (not (in_motion desk) ) (or (= (distance bed green_golfball) (distance ?w1 ?w1)) (and (not (agent_holds ?w1) ) (and (not (not (not (in ?w1 ?w1) ) ) ) (between ?w1 ?w1 ?w1) ) ) ) (not (or (not (on ?w1 ?w1) ) (agent_holds ?w1) ) ) (not (in ?w1 ?w1) ) ) )
          (once (exists (?g - (either key_chain lamp)) (agent_holds bed) ) )
          (once (is_setup_object ?w1) )
        )
      )
    )
  )
)
(:terminal
  (<= (total-time) (count throwTeddyOntoPillow:basketball) )
)
(:scoring
  (<= (external-forall-minimize (count objectMovedRoomSide:cube_block) ) 3 )
)
)



(define (game game-id-339) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?o ?d - (either watch))
      (exists (?d - dodgeball ?h - game_object ?c - (either cube_block cellphone) ?b - dodgeball ?ob - dodgeball)
        (and
          (and
            (game-conserved
              (> 2 (distance agent ?d))
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference teddyBearLandsInBin
      (exists (?x - hexagonal_bin ?p ?o1 - triangular_ramp ?d - hexagonal_bin)
        (then
          (once (on agent ?d) )
          (hold-while (and (and (and (and (< 1 (distance ?d ?d)) (adjacent_side ?d ?d ?d ?d) ) (in_motion ?d) ) (>= (distance bed ?d) 1) ) (not (not (> 1 9) ) ) ) (and (adjacent ?d ?d) (same_color ?d ?d) (not (not (not (on ?d agent) ) ) ) ) )
          (once (not (and (agent_holds floor) (on ?d ?d) ) ) )
        )
      )
    )
    (preference dodgeballThrownToBinFromDesk
      (exists (?g - ball)
        (then
          (hold (in_motion ?g) )
          (hold-while (agent_holds ?g) (in_motion agent) (in_motion pillow) (and (on ?g desk) (in_motion ?g) ) )
          (once (in_motion ?g) )
        )
      )
    )
  )
)
(:terminal
  (or
    (<= 10 (count dodgeballThrownToBinFromDesk:beachball) )
  )
)
(:scoring
  (count-once-per-objects dodgeballThrownToBinFromDesk:dodgeball:dodgeball:dodgeball)
)
)



(define (game game-id-340) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?b1 - bridge_block)
      (and
        (game-conserved
          (agent_holds door)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockCorrectlyPicked
      (exists (?f - cube_block ?d - curved_wooden_ramp)
        (then
          (hold (in_motion ?d) )
          (once (or (agent_holds ?d) (in_motion room_center) (not (and (agent_holds ?d) (not (exists (?c1 - curved_wooden_ramp) (adjacent_side upright ?c1 ?c1) ) ) ) ) ) )
          (once (and (not (in ?d ?d) ) (same_object ?d ?d) ) )
        )
      )
    )
    (forall (?b - (either key_chain ball))
      (and
        (preference dodgeballFromRugToBin
          (exists (?b ?d - hexagonal_bin)
            (then
              (once (in agent bed) )
              (hold (and (agent_holds ?d) (forall (?o - dodgeball) (same_color bed ?d) ) (agent_holds ?b) ) )
              (once (and (and (agent_holds ?b) (on ?d ?d) ) (> (x_position ?d) (distance ?b ?d)) (in_motion ?d) ) )
            )
          )
        )
      )
    )
    (preference ballThrownFromRug
      (exists (?o4 - teddy_bear ?s ?c - teddy_bear)
        (then
          (hold (same_type ?s ?s) )
          (once (agent_holds ?c) )
          (hold-while (= 5 (distance_side desk bed desk floor)) (and (and (agent_holds ?c) (and (on ?c ?s) (exists (?p - game_object ?x - triangular_ramp) (not (in_motion ?s) ) ) ) ) (= 6 6) (not (adjacent ?s ?c) ) ) )
        )
      )
    )
    (preference ballDroppedInBin
      (exists (?r2 - hexagonal_bin)
        (at-end
          (not
            (not
              (not
                (<= 3 (distance ?r2 ?r2))
              )
            )
          )
        )
      )
    )
    (preference towerFallsWhileBuilding
      (exists (?l2 - dodgeball)
        (then
          (once (equal_x_position ?l2 ?l2) )
          (once (not (on ?l2 ?l2) ) )
          (once (same_color ?l2 ?l2) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-longest towerFallsWhileBuilding:dodgeball) 10 )
)
(:scoring
  (* 3 2 30 2 )
)
)



(define (game game-id-341) (:domain many-objects-room-v1)
(:setup
  (forall (?h - hexagonal_bin)
    (game-conserved
      (or
        (toggled_on ?h)
        (not
          (not
            (and
              (in_motion ?h)
              (not
                (agent_holds ?h)
              )
              (< (distance ?h ?h) (distance ?h ?h))
              (not
                (adjacent ?h agent)
              )
              (adjacent ?h ?h)
              (not
                (and
                  (on room_center green_golfball)
                  (not
                    (agent_holds ?h)
                  )
                )
              )
              (exists (?c - block)
                (in_motion ?c)
              )
              (in ?h ?h)
              (on ?h ?h)
              (and
                (and
                  (adjacent ?h ?h)
                  (not
                    (not
                      (not
                        (same_object ?h ?h)
                      )
                    )
                  )
                )
                (and
                  (on ?h ?h)
                  (touch ?h ?h)
                  (on ?h ?h)
                )
              )
            )
          )
        )
        (on ?h ?h)
      )
    )
  )
)
(:constraints
  (and
    (forall (?tb - wall)
      (and
        (preference throwFromEdgeOfRug
          (exists (?h - pyramid_block)
            (then
              (hold (and (in_motion ?h) (on ?h agent) ) )
              (hold-while (exists (?o4 - triangular_ramp) (in_motion ?tb) ) (not (game_start ) ) (on ?h ?tb) (agent_holds rug) )
              (once (not (and (> (distance_side ?h ?tb ?h bed) 1) (in_motion ?tb) (on ?tb ?h) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* 50 1 )
    (count throwFromEdgeOfRug:pink)
  )
)
(:scoring
  (count throwFromEdgeOfRug:blue_dodgeball)
)
)



(define (game game-id-342) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?b3 - chair ?h - golfball)
      (game-conserved
        (agent_holds agent)
      )
    )
  )
)
(:constraints
  (and
    (preference ballOnBedAtEnd
      (exists (?b - hexagonal_bin)
        (then
          (once (in ?b ?b) )
          (hold (not (on rug ?b) ) )
        )
      )
    )
  )
)
(:terminal
  (> (count-once-per-objects ballOnBedAtEnd:blue_dodgeball) (* 3 (count-once ballOnBedAtEnd:basketball:basketball) )
  )
)
(:scoring
  (+ (+ 8 4 )
    15
    (count-once-per-external-objects ballOnBedAtEnd:golfball)
    (count ballOnBedAtEnd:dodgeball)
    2
    (count-once-per-objects ballOnBedAtEnd:yellow:red)
  )
)
)



(define (game game-id-343) (:domain few-objects-room-v1)
(:setup
  (or
    (exists (?p2 - dodgeball ?o - dodgeball)
      (exists (?h - (either pyramid_block book book))
        (and
          (forall (?b4 - doggie_bed)
            (game-optional
              (agent_holds pillow)
            )
          )
          (exists (?g ?w2 ?bl ?g - (either dodgeball wall) ?ob - sliding_door ?w - ball)
            (exists (?r - dodgeball)
              (and
                (game-conserved
                  (and
                    (and
                      (not
                        (and
                          (adjacent_side ?r ?w ?r)
                          (<= (x_position ?h) (distance ?w ?r))
                          (exists (?b - cylindrical_block)
                            (not
                              (rug_color_under ?w ?b)
                            )
                          )
                          (adjacent ?w ?w)
                        )
                      )
                      (broken ?h)
                    )
                    (in_motion ?w)
                    (adjacent_side ?r rug ?w)
                    (exists (?l4 - ball)
                      (on floor ?h)
                    )
                    (agent_holds ?o)
                    (agent_holds ?w)
                  )
                )
                (exists (?h - triangular_ramp)
                  (exists (?b - (either golfball key_chain tall_cylindrical_block mug))
                    (and
                      (game-conserved
                        (in_motion ?b)
                      )
                      (game-optional
                        (adjacent ?h ?b)
                      )
                      (and
                        (game-conserved
                          (in ?w ?b)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
          (forall (?w - pyramid_block)
            (game-conserved
              (and
                (and
                  (and
                    (and
                      (touch ?h ?w)
                      (or
                        (game_over )
                        (agent_holds desk)
                      )
                      (broken room_center)
                    )
                    (in_motion ?h)
                  )
                  (agent_holds ?w)
                  (not
                    (and
                      (in_motion ?o)
                      (not
                        (on ?w ?o)
                      )
                      (agent_holds rug)
                    )
                  )
                  (and
                    (and
                      (in ?h ?o)
                      (adjacent_side ?o ?h front)
                    )
                    (and
                      (and
                        (and
                          (in_motion ?w)
                          (exists (?d - (either basketball laptop))
                            (adjacent_side ?d ?d desk ?d)
                          )
                        )
                        (> 10 1)
                      )
                      (and
                        (between ?w desk ?w)
                        (broken ?w)
                      )
                    )
                  )
                  (on desk ?o)
                  (exists (?d - hexagonal_bin ?h ?h ?o1 - ball)
                    (not
                      (agent_holds ?w)
                    )
                  )
                  (in_motion ?h)
                )
                (or
                  (agent_holds rug)
                  (on ?h room_center)
                  (agent_holds ?h)
                )
              )
            )
          )
        )
      )
    )
    (exists (?h - curved_wooden_ramp)
      (exists (?b8 - color)
        (game-conserved
          (not
            (not
              (touch rug agent)
            )
          )
        )
      )
    )
    (exists (?c - game_object)
      (exists (?c4 - cube_block)
        (and
          (game-conserved
            (and
              (in_motion ?c4)
              (touch ?c back)
            )
          )
          (game-conserved
            (not
              (in_motion ?c4)
            )
          )
          (exists (?w1 - (either pink dodgeball triangle_block) ?c6 ?p1 - beachball)
            (and
              (and
                (game-conserved
                  (not
                    (not
                      (game_over )
                    )
                  )
                )
              )
              (exists (?r - flat_block ?o - beachball ?p1 - drawer ?h - (either hexagonal_bin yellow))
                (game-conserved
                  (adjacent_side ?c4 ?c6 ?p1)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference itemInClosedDrawerAtEnd
      (exists (?c - (either dodgeball dodgeball pyramid_block rug golfball) ?c - hexagonal_bin)
        (at-end
          (and
            (touch ?c ?c)
            (in_motion ?c)
          )
        )
      )
    )
    (forall (?b - hexagonal_bin)
      (and
        (preference cubeBlockInBuilding
          (exists (?tb - pillow ?g - game_object)
            (at-end
              (< 1 10)
            )
          )
        )
        (preference failedThrowAttempt
          (at-end
            (and
              (same_type ?b desk)
              (same_color ?b ?b)
            )
          )
        )
      )
    )
    (preference throwAttemptFromBehindBlock
      (exists (?b6 - shelf)
        (then
          (once (agent_holds ?b6) )
          (hold (not (broken ?b6) ) )
          (once (agent_holds ?b6) )
        )
      )
    )
  )
)
(:terminal
  (<= (* 1 5 )
    10
  )
)
(:scoring
  (count-once throwAttemptFromBehindBlock:red)
)
)



(define (game game-id-344) (:domain medium-objects-room-v1)
(:setup
  (forall (?c2 - block)
    (exists (?c1 - (either doggie_bed))
      (game-conserved
        (not
          (< 9 (distance ?c1 ?c2))
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?b - building)
        (then
          (hold (not (agent_holds ?b) ) )
          (once (same_type agent ?b) )
          (hold (not (agent_holds ?b) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (- (count-once-per-objects throwAttempt:wall:red) )
    (total-time)
  )
)
(:scoring
  (count-increasing-measure throwAttempt:dodgeball:beachball)
)
)



(define (game game-id-345) (:domain medium-objects-room-v1)
(:setup
  (exists (?d - hexagonal_bin ?c5 - dodgeball)
    (game-conserved
      (and
        (on ?c5 ?c5)
        (in_motion ?c5)
        (agent_holds ?c5)
      )
    )
  )
)
(:constraints
  (and
    (preference throwToBin
      (exists (?db - (either basketball laptop cylindrical_block hexagonal_bin hexagonal_bin golfball golfball))
        (then
          (once (and (agent_holds ?db) (in_motion ?db) ) )
          (once (not (and (not (agent_holds ?db) ) (touch ?db rug) ) ) )
          (hold (and (not (in_motion ?db) ) (and (agent_holds ?db) (not (and (agent_crouches ) (rug_color_under ?db ?db) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (and
      (> 2 5 )
      (or
        (>= (count-once throwToBin:basketball) (total-score) )
        (>= 300 (count-once-per-objects throwToBin:blue_cube_block) )
      )
    )
  )
)
(:scoring
  (count throwToBin:yellow_cube_block:golfball)
)
)



(define (game game-id-346) (:domain medium-objects-room-v1)
(:setup
  (exists (?w - tall_cylindrical_block ?w2 - drawer ?b - chair)
    (forall (?p2 - ball ?p - wall)
      (and
        (game-conserved
          (not
            (on ?b ?p)
          )
        )
        (exists (?b4 - hexagonal_bin)
          (game-conserved
            (agent_holds ?p)
          )
        )
        (exists (?b1 - chair)
          (and
            (and
              (game-conserved
                (in_motion ?p)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?r - beachball)
      (and
        (preference throwAttempt
          (exists (?l - (either golfball cylindrical_block) ?g - (either dodgeball book))
            (then
              (hold (and (and (rug_color_under ?r ?g) (not (not (in_motion ?r) ) ) ) (same_color ?g ?g) ) )
              (once (agent_holds ?r) )
              (hold (faces ?r ?g) )
            )
          )
        )
        (preference throwOverRamp
          (exists (?c2 ?b ?l3 ?x - hexagonal_bin)
            (at-end
              (not
                (and
                  (not
                    (not
                      (on ?c2 ?l3)
                    )
                  )
                  (on ?x ?l3)
                )
              )
            )
          )
        )
      )
    )
    (forall (?w1 - cube_block ?d - hexagonal_bin)
      (and
        (preference blockIncorrectlyPicked
          (exists (?h - hexagonal_bin ?b - color)
            (then
              (once (on ?d ?b) )
              (once (touch ?d ?d) )
              (once (< (distance_side rug agent rug) 8) )
            )
          )
        )
        (preference towerFallsWhileBuilding
          (exists (?r1 - block ?c - building)
            (then
              (once (in_motion ?d) )
              (once (in door upright) )
              (hold (and (in_motion ?c) (not (equal_z_position ?c ?d) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (* 1 10 )
    (* 3 (+ (count throwAttempt:yellow_cube_block:red) (count throwOverRamp:beachball:pink_dodgeball) )
    )
  )
)
(:scoring
  (count-once-per-objects blockIncorrectlyPicked:dodgeball)
)
)



(define (game game-id-347) (:domain few-objects-room-v1)
(:setup
  (and
    (game-conserved
      (exists (?bl ?c1 - dodgeball)
        (and
          (agent_holds ?bl)
          (in_motion ?c1)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c - tan_cube_block ?r - hexagonal_bin)
      (and
        (preference teddyBearHitsBall
          (exists (?h - ball ?b - game_object ?b - ball)
            (then
              (once (on ?b ?r) )
              (once (not (adjacent ?r ?r) ) )
              (once (adjacent_side desk ?r ?b ?r) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-measure teddyBearHitsBall:basketball:beachball) (count teddyBearHitsBall:basketball) )
)
(:scoring
  (count teddyBearHitsBall:pink)
)
)



(define (game game-id-348) (:domain medium-objects-room-v1)
(:setup
  (forall (?c ?g - hexagonal_bin)
    (and
      (forall (?o2 - hexagonal_bin ?l1 - (either laptop dodgeball pink pink) ?l2 - curved_wooden_ramp ?d - chair ?b - hexagonal_bin)
        (exists (?l4 - desktop)
          (game-optional
            (agent_holds desk)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - ball)
      (and
        (preference itemsTurnedOff
          (exists (?w2 - wall ?c4 - building)
            (at-end
              (agent_holds ?c4)
            )
          )
        )
      )
    )
    (forall (?h - blue_pyramid_block)
      (and
        (preference objectLandsInBin
          (exists (?l1 - ball)
            (then
              (once (and (in ?h bed) (and (or (and (not (in ?h ?h) ) (agent_holds ?l1) ) (and (and (in_motion desk) (agent_holds back) ) (in_motion ?h) (and (not (> 1 (distance ?l1 ?l1)) ) (on ?l1 ?l1) (or (agent_holds ?h) (in_motion ?h) (and (agent_holds ?l1) (object_orientation ?h agent) ) ) ) ) ) (not (not (agent_holds bed) ) ) ) ) )
              (once (agent_holds ?l1) )
              (hold (agent_holds ?h) )
            )
          )
        )
      )
    )
    (preference throwToBinFromDistance
      (exists (?c - ball)
        (then
          (hold (< 7 5) )
          (once (in_motion door) )
          (once (= 1 (distance ?c ?c)) )
        )
      )
    )
  )
)
(:terminal
  (and
    (not
      (>= 4 (count-once-per-objects itemsTurnedOff:basketball) )
    )
    (>= 2 (count-once-per-objects throwToBinFromDistance:green) )
  )
)
(:scoring
  (+ (count objectLandsInBin:book:hexagonal_bin) 9 )
)
)



(define (game game-id-349) (:domain few-objects-room-v1)
(:setup
  (exists (?h - pillow)
    (exists (?b6 ?h - dodgeball)
      (not
        (forall (?b - block)
          (game-conserved
            (in_motion ?b6)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?p - triangular_ramp)
      (and
        (preference pyramidBlockAtopTowerAtEnd
          (exists (?l3 - shelf)
            (then
              (hold (not (not (not (on ?p ?p) ) ) ) )
              (hold-while (and (not (and (in ?l3 ?l3) (same_color ?l3 ?p) ) ) (agent_holds ?l3) ) (in ?l3 ?l3) (or (or (not (and (touch ?p brown) (touch ?p desk) ) ) (not (in_motion upright) ) ) (in_motion room_center) ) )
              (once (not (agent_holds agent) ) )
            )
          )
        )
      )
    )
    (forall (?r - dodgeball)
      (and
        (preference cubeBlockThrowAttempt
          (exists (?l1 - hexagonal_bin)
            (then
              (hold (not (not (adjacent_side ?r side_table ?r) ) ) )
              (once (not (in ?l1 ?l1) ) )
              (once (not (in ?l1 ?r) ) )
            )
          )
        )
      )
    )
    (forall (?b - building)
      (and
        (preference blockPickedUp
          (exists (?f - hexagonal_bin ?d - dodgeball)
            (then
              (once (in bed ?b) )
              (hold (< 7 2) )
              (hold (< (distance pink_dodgeball upright) 1) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (+ 1 (* (+ (count blockPickedUp:yellow:green) (count blockPickedUp:yellow) 10 )
        (count blockPickedUp:yellow)
        (< (count blockPickedUp:red) (count-once cubeBlockThrowAttempt:beachball) )
      )
    )
  )
)
(:scoring
  (* 2 8 )
)
)



(define (game game-id-350) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?c3 - hexagonal_bin)
      (or
        (game-optional
          (and
            (and
              (or
                (on ?c3 ?c3)
                (in_motion ?c3)
              )
              (not
                (not
                  (exists (?p - game_object)
                    (< (distance ?p ?p) (distance desk bed))
                  )
                )
              )
              (and
                (agent_holds agent)
                (= 4 2)
              )
              (agent_holds ?c3)
              (on ?c3 ?c3)
            )
            (on ?c3 pink_dodgeball)
          )
        )
        (forall (?b - flat_block ?b - building)
          (exists (?h - game_object)
            (game-conserved
              (< 1 (distance_side ?b desk ?b))
            )
          )
        )
        (forall (?t2 - watch ?d1 - dodgeball)
          (game-conserved
            (in ?c3 ?c3)
          )
        )
      )
    )
    (exists (?p2 - curved_wooden_ramp ?l2 - hexagonal_bin)
      (game-conserved
        (touch ?l2 rug)
      )
    )
    (exists (?d ?c ?c ?o2 ?g - color)
      (game-optional
        (in_motion agent)
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?t2 - color)
        (at-end
          (in_motion ?t2)
        )
      )
    )
    (preference ballThrownToRug
      (exists (?h - (either blue_cube_block dodgeball cellphone book dodgeball))
        (then
          (once (agent_holds ?h) )
          (once (and (< 8 (distance ?h room_center)) (in_motion ?h) (on ?h back) ) )
          (hold (not (same_object bed floor) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 6 (* (* 40 2 )
      (* (- 9 )
        (* (count throwAttempt:yellow:alarm_clock) (count throwAttempt:cube_block) )
        (* (external-forall-minimize (+ (count throwAttempt:dodgeball:purple) (+ 30 6 (count-increasing-measure ballThrownToRug:blue_dodgeball) )
            )
          )
          40
        )
        (* (+ (count-once-per-objects ballThrownToRug:beachball) (> 2 (* (count-once-per-objects throwAttempt:yellow) 4 (count ballThrownToRug:red) (count throwAttempt:basketball) (count-once-per-objects throwAttempt:pink) (count-unique-positions throwAttempt:dodgeball) )
            )
            (* (+ (* (* (* (count ballThrownToRug:basketball) 3 )
                    (count-once-per-objects ballThrownToRug:blue_dodgeball:tall_cylindrical_block)
                    50
                    (+ 2 2 (* (count-once-per-objects throwAttempt:pink:doggie_bed) (* 2 (count-once-per-objects ballThrownToRug:yellow) )
                      )
                    )
                  )
                  (count-longest ballThrownToRug:pink)
                )
                (< (* 5 0 0 )
                  (count throwAttempt)
                )
              )
              10
              (* (+ (+ 5 3 )
                  9
                )
                (+ (count-once-per-external-objects ballThrownToRug:dodgeball:yellow) (count throwAttempt:yellow:alarm_clock) )
              )
              2
              (- (count throwAttempt:hexagonal_bin) )
              (+ 6 (count ballThrownToRug:green) )
            )
          )
          2
          (count-longest throwAttempt:golfball)
        )
      )
    )
  )
)
(:scoring
  (count ballThrownToRug:book)
)
)



(define (game game-id-351) (:domain many-objects-room-v1)
(:setup
  (exists (?p1 - curved_wooden_ramp)
    (and
      (not
        (game-conserved
          (agent_holds ?p1)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - dodgeball)
      (and
        (preference throwToBin
          (exists (?t - yellow_pyramid_block)
            (at-end
              (same_color ?h ?h)
            )
          )
        )
      )
    )
    (preference ballInOrOnBin
      (exists (?b - hexagonal_bin ?c - hexagonal_bin)
        (then
          (hold (same_color ?c ?c) )
          (once (exists (?c1 - doggie_bed) (in_motion pink_dodgeball) ) )
          (once (in_motion ?c) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (total-time) (total-time) )
  )
)
(:scoring
  (count-once-per-objects ballInOrOnBin:pink)
)
)



(define (game game-id-352) (:domain few-objects-room-v1)
(:setup
  (forall (?b7 - sliding_door ?d - game_object)
    (game-optional
      (in rug ?d)
    )
  )
)
(:constraints
  (and
    (preference cubeBlockInBuilding
      (exists (?b - golfball)
        (then
          (once (not (adjacent bed ?b) ) )
          (hold (agent_holds ?b) )
          (hold (and (and (and (= (building_size ?b) 4) (and (not (agent_holds pink_dodgeball) ) (agent_holds desk) ) (in ?b agent) ) (and (is_setup_object ?b) (and (not (on ?b ?b) ) (< (x_position ?b) (distance_side ?b ?b ?b)) (< 1 (distance ?b ?b)) (in_motion ?b) (and (agent_holds ?b) (forall (?p1 - hexagonal_bin) (same_type agent agent) ) ) (and (open ?b) (agent_holds upside_down) (on ?b ?b) (adjacent ?b ?b) ) ) (same_object ?b ?b) (adjacent_side ?b ?b ?b) (in ?b ?b) (equal_x_position agent ?b) (in ?b ?b) (in_motion south_west_corner) (on ?b ?b) (not (in_motion agent) ) ) ) (not (agent_holds ?b) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count cubeBlockInBuilding:dodgeball:block:hexagonal_bin) (total-time) )
)
(:scoring
  (* 8 (count-once cubeBlockInBuilding) )
)
)



(define (game game-id-353) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (game-conserved
        (in_motion main_light_switch)
      )
      (exists (?h - dodgeball ?g - (either cube_block tall_cylindrical_block))
        (exists (?b - hexagonal_bin)
          (and
            (and
              (exists (?c - hexagonal_bin)
                (game-conserved
                  (on ?g agent)
                )
              )
            )
          )
        )
      )
    )
    (exists (?b ?p1 - block)
      (and
        (game-optional
          (in_motion desk)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - ball)
      (and
        (preference greenObjectMovedToRoomCenter
          (exists (?l2 - ball)
            (then
              (hold-while (not (adjacent_side ?d ?d agent) ) (on agent ?d) )
              (hold-while (not (< (distance ?l2 ?d) (distance green ?l2)) ) (not (in_motion ?l2) ) )
              (once (and (agent_holds block) (and (on ?d ?l2) (in_motion ?d) (and (adjacent ?l2 desk) (not (and (on agent ?d) (same_type ?l2 ?d) ) ) (not (and (agent_holds ?l2) (not (<= (distance ?d ?l2) (distance_side ?d ?l2 ?d ?l2)) ) ) ) ) ) ) )
            )
          )
        )
      )
    )
    (preference gameObjectToBin
      (exists (?b - ball ?l1 - dodgeball)
        (then
          (once (in_motion ?l1) )
          (hold (adjacent ?l1 ?l1) )
          (once (in_motion ?l1) )
        )
      )
    )
    (preference thrownObjectHitsComputer
      (exists (?o - game_object)
        (then
          (once (and (and (and (agent_holds ?o) (game_start ) ) (not (on ?o bed) ) ) (on agent ?o) ) )
          (hold-while (rug_color_under green desk) (in_motion bed) )
          (once (in_motion ?o) )
        )
      )
    )
  )
)
(:terminal
  (< (count thrownObjectHitsComputer:dodgeball:pyramid_block) 10 )
)
(:scoring
  (count gameObjectToBin:brown)
)
)



(define (game game-id-354) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?w1 - ball ?o5 - block ?r - block)
      (forall (?d - tall_cylindrical_block ?h - cube_block)
        (game-conserved
          (adjacent agent ?r)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o - cube_block)
      (and
        (preference cubeBlockThrowAttempt
          (then
            (once (not (same_object ?o ?o) ) )
            (once (in_motion agent) )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 8 8 )
)
(:scoring
  (* 3 (count-increasing-measure cubeBlockThrowAttempt:hexagonal_bin) )
)
)



(define (game game-id-355) (:domain many-objects-room-v1)
(:setup
  (not
    (forall (?p3 - building ?c - pillow)
      (game-conserved
        (not
          (in ?c ?c)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockCorrectlyPicked
      (exists (?b - hexagonal_bin)
        (at-end
          (and
            (adjacent ?b ?b)
            (< 7 (distance agent ?b))
          )
        )
      )
    )
    (preference objectOnBed
      (exists (?b - ball ?h - dodgeball)
        (then
          (once (and (and (not (agent_holds ?h) ) (in_motion ?h) (and (agent_holds ?h) (agent_holds ?h) (not (in_motion ?h) ) (in_motion ?h) (adjacent agent ?h) (in ?h ?h) ) ) (and (and (and (and (agent_holds ?h) (on ?h ?h) (in ?h ?h) (< 1 1) (in_motion rug) (in_motion ?h) ) (and (< (distance ?h ?h) (distance ?h ?h)) (in ?h ?h) ) ) (and (in_motion ?h) (and (and (and (in_motion room_center) (and (in_motion ?h) (< 4 1) ) (not (touch sideways ?h) ) ) (adjacent_side ?h rug ?h) ) (and (and (in desk ?h) (not (between desk ?h ?h) ) (and (agent_holds ?h) (in_motion ?h) (agent_holds room_center) ) (and (same_color ?h desk) (and (not (not (not (not (< 3 1) ) ) ) ) (and (adjacent ?h ?h) (and (agent_holds ?h) (agent_holds ?h) ) ) (not (and (in_motion ?h) (not (not (not (in ?h ?h) ) ) ) ) ) ) ) ) (adjacent ?h ?h) ) ) ) ) (in_motion upright) ) (on ?h rug) (and (not (in_motion ?h) ) (rug_color_under agent ?h) ) ) )
          (once (in_motion ?h) )
          (hold (not (above ?h ?h) ) )
        )
      )
    )
  )
)
(:terminal
  (> (total-time) 3 )
)
(:scoring
  (* 10 6 )
)
)



(define (game game-id-356) (:domain few-objects-room-v1)
(:setup
  (forall (?d - dodgeball ?b - chair)
    (exists (?c6 - game_object)
      (game-optional
        (and
          (agent_holds ?b)
          (and
            (same_color agent blue)
            (and
              (between ?c6 ?c6 ?c6)
              (< 1 (distance ?b ?c6))
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - green_triangular_ramp ?o3 - pyramid_block)
      (and
        (preference objectLandsInBin
          (exists (?o - blue_cube_block)
            (at-end
              (in_motion ?o)
            )
          )
        )
      )
    )
    (preference dodgeballAndBasketballInBin
      (exists (?d1 - wall)
        (at-end
          (agent_holds ?d1)
        )
      )
    )
    (preference ballRolledOnRampToRug
      (exists (?d - ball)
        (then
          (once (or (and (in ?d bed) (on ?d ?d) ) (and (same_color upright ?d) (in_motion ?d) ) ) )
          (hold (on agent door) )
          (once (agent_holds ?d) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects dodgeballAndBasketballInBin:golfball) 4 )
)
(:scoring
  (count objectLandsInBin:yellow:pink_dodgeball)
)
)



(define (game game-id-357) (:domain medium-objects-room-v1)
(:setup
  (exists (?b - beachball ?b - hexagonal_bin)
    (and
      (forall (?b - tall_cylindrical_block)
        (exists (?l2 - dodgeball)
          (exists (?p1 ?h - (either doggie_bed golfball))
            (and
              (or
                (game-optional
                  (in_motion ?h)
                )
                (game-optional
                  (and
                    (not
                      (agent_holds ?b)
                    )
                    (in_motion ?l2)
                  )
                )
                (game-optional
                  (and
                    (in_motion ?l2)
                    (and
                      (agent_holds ?h)
                      (in ?h ?l2)
                    )
                  )
                )
              )
              (forall (?b - dodgeball)
                (game-conserved
                  (and
                    (agent_holds ?b)
                    (agent_holds ?l2)
                  )
                )
              )
            )
          )
        )
      )
      (and
        (game-conserved
          (exists (?c2 - cube_block ?r1 - (either cd pencil) ?o - cube_block)
            (not
              (not
                (not
                  (and
                    (and
                      (not
                        (and
                          (adjacent_side ?b ?b ?o)
                          (not
                            (touch ?o ?o)
                          )
                        )
                      )
                      (and
                        (agent_holds ?b)
                        (exists (?o2 - (either game_object floor) ?r1 - cube_block)
                          (and
                            (on ?b desk)
                            (in_motion desk)
                          )
                        )
                      )
                    )
                    (in_motion ?b)
                  )
                )
              )
            )
          )
        )
        (exists (?b - curved_wooden_ramp)
          (exists (?c3 - building)
            (exists (?s - game_object ?b4 - building)
              (and
                (forall (?d2 - cube_block ?b - hexagonal_bin)
                  (game-optional
                    (or
                      (adjacent ?b4 ?b4)
                    )
                  )
                )
              )
            )
          )
        )
        (and
          (and
            (or
              (forall (?b4 - hexagonal_bin ?t2 ?o - color ?c - curved_wooden_ramp ?w1 - building)
                (and
                  (and
                    (or
                      (game-optional
                        (same_type ?w1 ?w1)
                      )
                      (and
                        (and
                          (game-conserved
                            (adjacent_side agent ?w1 desk ?w1)
                          )
                        )
                      )
                    )
                    (game-conserved
                      (< 6 (distance ?b ?w1))
                    )
                  )
                )
              )
            )
          )
          (and
            (and
              (and
                (exists (?s - dodgeball ?b ?c ?c - (either basketball block))
                  (exists (?l - sliding_door)
                    (game-conserved
                      (and
                        (not
                          (and
                            (agent_holds ?c)
                            (not
                              (in ?b ?c)
                            )
                          )
                        )
                        (in ?b ?c)
                      )
                    )
                  )
                )
              )
              (game-conserved
                (on ?b ?b)
              )
            )
          )
          (game-optional
            (in_motion ?b)
          )
        )
      )
      (and
        (game-conserved
          (agent_crouches )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference woodenBlockMovedFromRugToDesk
      (exists (?h - teddy_bear)
        (then
          (once (adjacent ?h ?h) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (+ (count woodenBlockMovedFromRugToDesk:dodgeball) (count-once-per-objects woodenBlockMovedFromRugToDesk:dodgeball) )
      (- 3 )
    )
    (count-once-per-objects woodenBlockMovedFromRugToDesk:dodgeball)
  )
)
(:scoring
  (count woodenBlockMovedFromRugToDesk:basketball)
)
)



(define (game game-id-358) (:domain medium-objects-room-v1)
(:setup
  (forall (?r - building)
    (and
      (and
        (not
          (exists (?b - dodgeball ?d - building)
            (exists (?g ?b9 ?r ?b5 ?o ?c - hexagonal_bin)
              (or
                (exists (?o - building)
                  (and
                    (game-conserved
                      (agent_holds agent)
                    )
                  )
                )
              )
            )
          )
        )
        (forall (?b - game_object)
          (exists (?o4 - cube_block ?b5 - doggie_bed ?d ?b6 ?b ?p1 ?o3 ?d - game_object ?c1 - hexagonal_bin ?d - shelf)
            (not
              (game-optional
                (not
                  (on bed room_center)
                )
              )
            )
          )
        )
        (and
          (and
            (game-conserved
              (agent_holds ?r)
            )
            (game-conserved
              (adjacent_side ?r ?r agent)
            )
            (exists (?b ?p - wall)
              (exists (?h - hexagonal_bin ?b - golfball)
                (and
                  (game-conserved
                    (adjacent ?b ?b)
                  )
                  (game-conserved
                    (agent_holds ?b)
                  )
                  (and
                    (exists (?b - curved_wooden_ramp ?l2 - pillow)
                      (game-conserved
                        (agent_holds green_golfball)
                      )
                    )
                  )
                )
              )
            )
          )
          (and
            (exists (?w - doggie_bed ?c ?b - doggie_bed ?c2 ?f - hexagonal_bin)
              (and
                (exists (?h - building)
                  (and
                    (game-optional
                      (not
                        (on ?r ?c2)
                      )
                    )
                  )
                )
                (game-conserved
                  (< 2 (distance ?f ?r))
                )
                (not
                  (game-conserved
                    (in_motion ?f)
                  )
                )
                (forall (?o - cube_block)
                  (exists (?tb - block)
                    (and
                      (and
                        (forall (?c6 - cube_block ?s - hexagonal_bin)
                          (forall (?d1 - cube_block)
                            (game-conserved
                              (agent_holds ?tb)
                            )
                          )
                        )
                      )
                    )
                  )
                )
                (game-conserved
                  (in_motion main_light_switch)
                )
              )
            )
            (exists (?d - shelf)
              (game-conserved
                (and
                  (agent_holds ?d)
                  (exists (?d1 - flat_block)
                    (not
                      (adjacent_side room_center ?d1 ?d ?d1)
                    )
                  )
                  (on ?r ?d)
                )
              )
            )
          )
        )
      )
      (or
        (exists (?p2 - hexagonal_bin ?t2 - hexagonal_bin)
          (exists (?r - (either beachball lamp))
            (game-optional
              (in_motion desk)
            )
          )
        )
      )
      (and
        (and
          (game-conserved
            (and
              (agent_holds ?r)
              (game_start )
              (in_motion ?r)
            )
          )
          (or
            (and
              (game-optional
                (and
                  (not
                    (not
                      (not
                        (on ?r ?r)
                      )
                    )
                  )
                  (agent_holds desk)
                )
              )
              (exists (?b - hexagonal_bin)
                (and
                  (forall (?c ?ob - (either cylindrical_block cube_block yellow_cube_block))
                    (forall (?c - curved_wooden_ramp ?b - game_object)
                      (game-conserved
                        (not
                          (not
                            (not
                              (agent_holds ?b)
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
          (game-optional
            (in_motion bed)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToBinFromDistance
      (exists (?t2 - ball)
        (then
          (once (not (agent_holds ?t2) ) )
          (once (in_motion ?t2) )
          (once (in ?t2 ?t2) )
        )
      )
    )
    (preference ballThrownToWallToAgent
      (exists (?h - (either book alarm_clock))
        (then
          (once (on ?h ?h) )
          (hold (in_motion agent) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-same-positions throwToBinFromDistance:purple) (total-score) )
)
(:scoring
  (+ (+ (count-once-per-objects throwToBinFromDistance) (count-once-per-objects throwToBinFromDistance:doggie_bed:doggie_bed) )
    (= (count-overlapping ballThrownToWallToAgent:beachball:purple) )
  )
)
)



(define (game game-id-359) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (agent_holds room_center)
  )
)
(:constraints
  (and
    (forall (?h - (either wall pyramid_block pillow))
      (and
        (preference dropAttempt
          (exists (?c - (either cd doggie_bed desktop) ?o2 - (either floor))
            (then
              (hold (in_motion floor) )
              (once (not (and (touch ?h ?h) (and (< 2 (distance ?o2 agent)) (not (and (agent_holds ?h) (same_type ?h ?o2) (and (game_over ) (in agent door) ) ) ) ) ) ) )
            )
          )
        )
        (preference objectMoved
          (exists (?b9 - dodgeball)
            (then
              (once (and (and (in_motion ?h) (not (and (= (x_position ?h) 0 (distance ?h ?h)) (not (agent_holds rug) ) ) ) (in ?b9 ?b9) ) (exists (?h - game_object) (and (touch ?b9 ?h) (exists (?b - hexagonal_bin ?r1 - (either dodgeball golfball dodgeball)) (agent_holds ?b9) ) ) ) (in desk ?b9) ) )
              (hold (not (in_motion ?h) ) )
              (once (exists (?o2 - teddy_bear ?h - dodgeball) (same_object floor ?h) ) )
            )
          )
        )
        (preference blockThrowAttempt
          (exists (?c3 - cube_block)
            (then
              (hold-while (or (exists (?o3 - (either bridge_block game_object) ?c - dodgeball) (< 5 1) ) (and (and (and (and (and (in_motion ?c3) (same_type ?h floor) (above ?h ?c3) ) (in_motion ?h) ) (and (exists (?h ?tb - triangular_ramp ?l4 - (either book cellphone)) (and (agent_holds ?l4) (agent_holds ?h) ) ) (and (agent_holds ?h) (and (not (not (and (and (and (not (rug_color_under door ?c3) ) (agent_crouches ) (in_motion ?h) ) (game_over ) ) (agent_holds ?c3) ) ) ) (in ?h ?c3) ) ) ) (on agent ?c3) ) (and (agent_holds ?h) (not (agent_holds ?h) ) (not (in ?h ?c3) ) ) (equal_x_position ?c3 ?h) ) (agent_holds agent) (same_object bed desk) (on ?h ?c3) ) ) (in desk ?h) (on ?c3 ?h) )
              (once (in_motion ?h) )
              (hold-while (not (not (agent_holds floor) ) ) (or (adjacent side_table ?h) (on ?c3 agent) ) )
            )
          )
        )
      )
    )
    (preference ballOnBedAtEnd
      (exists (?b - game_object ?c5 - dodgeball)
        (then
          (hold (and (and (in pink_dodgeball ?c5) (<= (distance ?c5 ?c5) (distance ?c5 ?c5)) ) (and (on ?c5 ?c5) (in_motion ?c5) (agent_holds desk) ) ) )
          (once-measure (and (exists (?c ?t1 ?r ?l3 - shelf) (not (agent_holds ?t1) ) ) (agent_holds ?c5) (and (in_motion ?c5) (agent_holds ?c5) (on ?c5 ?c5) (in_motion agent) ) ) (x_position ?c5) )
          (once (same_type ?c5 ?c5) )
        )
      )
    )
  )
)
(:terminal
  (<= 1 (total-score) )
)
(:scoring
  (- 8 )
)
)



(define (game game-id-360) (:domain medium-objects-room-v1)
(:setup
  (forall (?b2 - game_object)
    (game-conserved
      (agent_holds ?b2)
    )
  )
)
(:constraints
  (and
    (forall (?c - shelf ?h - block ?s - doggie_bed)
      (and
        (preference throwKnocksOverBear
          (exists (?h - golfball)
            (then
              (once (on ?h ?s) )
              (hold (adjacent_side ?s desk ?s ?h) )
              (once (not (agent_holds room_center) ) )
              (hold (between ?s ?h ?h) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (and
      (>= (count-same-positions throwKnocksOverBear:green) (count-once-per-objects throwKnocksOverBear:dodgeball:basketball) )
      (or
        (< (total-score) (total-score) )
        (>= 18 0 )
      )
      (>= (+ (* 2 2 3 10 )
          (+ 15 (+ 1 20 )
          )
        )
        (count-once-per-objects throwKnocksOverBear:blue_dodgeball)
      )
    )
    (<= (* (- (count-once throwKnocksOverBear:golfball) )
        (- 10 )
        (* (count throwKnocksOverBear:dodgeball) (* (count throwKnocksOverBear:golfball) 2 )
        )
      )
      (total-time)
    )
    (or
      (> 300 (count throwKnocksOverBear:orange) )
      (>= (/ (* 3 (+ (count-once-per-objects throwKnocksOverBear:golfball) (+ (* (- (count-once-per-objects throwKnocksOverBear:book) )
                  10
                )
                5
              )
            )
          )
          (* 1 (count-longest throwKnocksOverBear:hexagonal_bin) )
        )
        (count-once throwKnocksOverBear:red_pyramid_block)
      )
    )
  )
)
(:scoring
  (- (* 10 3 )
  )
)
)



(define (game game-id-361) (:domain many-objects-room-v1)
(:setup
  (forall (?b6 - doggie_bed ?g - dodgeball)
    (game-conserved
      (not
        (in ?g ?g)
      )
    )
  )
)
(:constraints
  (and
    (preference ballNeverThrown
      (exists (?db - hexagonal_bin)
        (then
          (once (exists (?d - dodgeball) (< 1 (distance_side ?d ?db agent)) ) )
          (once (touch agent desk) )
          (once (not (on ?db ?db) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count ballNeverThrown:wall) (count-once-per-objects ballNeverThrown:pink) )
)
(:scoring
  (count ballNeverThrown:basketball)
)
)



(define (game game-id-362) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?b - dodgeball)
      (game-conserved
        (agent_holds desk)
      )
    )
  )
)
(:constraints
  (and
    (forall (?l - hexagonal_bin)
      (and
        (preference thrownObjectHitsComputer
          (exists (?h - hexagonal_bin)
            (at-end
              (on ?h ?l)
            )
          )
        )
      )
    )
    (forall (?p - doggie_bed)
      (and
        (preference blockToBinFromRug
          (then
            (once (agent_crouches ) )
            (once (touch ?p ?p) )
            (once (and (adjacent ?p ?p) (and (agent_holds rug) (agent_holds ?p) ) ) )
          )
        )
        (preference ballThrownOntoTarget
          (exists (?d - dodgeball ?d - hexagonal_bin ?g ?b - ball)
            (then
              (once (not (in_motion ?g) ) )
              (hold (and (toggled_on ?g) (agent_holds ?g) ) )
              (hold (and (in ?g ?b) (agent_holds ?p) ) )
            )
          )
        )
      )
    )
    (preference dodgeballFromBlockToBin
      (exists (?c - sliding_door)
        (then
          (once (and (or (in_motion ?c) (touch ?c ?c) ) (agent_holds ?c) ) )
          (hold (and (not (same_type ?c ?c) ) (< (distance agent ?c) 1) ) )
          (once (adjacent_side top_drawer ?c bridge_block) )
        )
      )
    )
  )
)
(:terminal
  (> (total-score) (count-once dodgeballFromBlockToBin:doggie_bed) )
)
(:scoring
  (+ 0 (count-once dodgeballFromBlockToBin:beachball) )
)
)



(define (game game-id-363) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (and
        (game-optional
          (in_motion agent)
        )
        (forall (?b - (either tall_cylindrical_block blue_cube_block))
          (not
            (forall (?h - hexagonal_bin ?p2 - (either golfball blue_cube_block))
              (and
                (exists (?g - dodgeball)
                  (and
                    (exists (?w1 - hexagonal_bin ?l - ball)
                      (game-conserved
                        (agent_holds ?p2)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference cubeBlockInBuilding
      (exists (?s - block)
        (at-end
          (and
            (game_over )
            (or
              (not
                (and
                  (on ?s ?s)
                  (on floor ?s)
                )
              )
              (adjacent blue ?s)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-once cubeBlockInBuilding:pink) 5 )
  )
)
(:scoring
  (* (count cubeBlockInBuilding:hexagonal_bin) (count-overlapping cubeBlockInBuilding:golfball) (count-once-per-objects cubeBlockInBuilding:pink_dodgeball:tan) )
)
)



(define (game game-id-364) (:domain medium-objects-room-v1)
(:setup
  (exists (?p2 - shelf)
    (exists (?b2 ?t ?c ?w1 - dodgeball ?d - cube_block)
      (and
        (game-conserved
          (< (distance room_center ?p2) (distance ?d ?d))
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballNeverThrown
      (exists (?b - beachball)
        (then
          (once (exists (?x - hexagonal_bin) (agent_holds pink_dodgeball) ) )
          (once (and (not (agent_holds ?b) ) (on ?b ?b) ) )
          (hold (agent_holds ?b) )
        )
      )
    )
  )
)
(:terminal
  (<= (count ballNeverThrown:pink:green) (total-score) )
)
(:scoring
  (+ 10 60 )
)
)



(define (game game-id-365) (:domain many-objects-room-v1)
(:setup
  (exists (?t2 - dodgeball)
    (game-optional
      (adjacent_side desk ?t2 ?t2)
    )
  )
)
(:constraints
  (and
    (preference thrownBallReachesEnd
      (exists (?o3 - beachball)
        (then
          (once (not (not (in ?o3 agent) ) ) )
          (hold-while (not (not (equal_x_position ?o3 ?o3) ) ) (agent_holds agent) )
          (once (and (not (agent_holds ?o3) ) ) )
        )
      )
    )
    (preference blockPickedUp
      (exists (?l - block)
        (at-end
          (not
            (equal_z_position ?l west_wall)
          )
        )
      )
    )
    (forall (?b3 - (either red hexagonal_bin book laptop cd))
      (and
        (preference throwFromEdgeOfRug
          (at-end
            (on ?b3 ?b3)
          )
        )
        (preference gameObjectToBin
          (exists (?t2 - hexagonal_bin)
            (then
              (once (game_over ) )
              (hold-while (<= 1 (distance ?t2 ?b3)) (agent_holds ?b3) )
              (once (not (agent_holds ?b3) ) )
              (once (agent_holds ?b3) )
              (hold-while (in_motion ?t2) (adjacent ?b3 rug) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (* (count blockPickedUp:pink:beachball) 1 )
  )
)
(:scoring
  (count-once thrownBallReachesEnd:dodgeball:basketball)
)
)



(define (game game-id-366) (:domain few-objects-room-v1)
(:setup
  (exists (?d - triangular_ramp ?g - (either book ball) ?l4 - teddy_bear)
    (exists (?b10 - chair)
      (and
        (forall (?h - hexagonal_bin)
          (exists (?l2 ?c2 ?g - curved_wooden_ramp ?b5 - tan_cube_block ?t - wall)
            (exists (?h - game_object)
              (and
                (and
                  (game-conserved
                    (not
                      (in_motion ?l4)
                    )
                  )
                )
                (forall (?d - hexagonal_bin)
                  (exists (?o ?o ?h ?r ?b6 ?h - dodgeball)
                    (game-optional
                      (in_motion ?r)
                    )
                  )
                )
                (game-conserved
                  (on ?t ?h)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?c5 - (either pink laptop basketball))
        (at-end
          (not
            (not
              (not
                (agent_holds ?c5)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count ballThrownToBin:dodgeball) (count-once-per-objects ballThrownToBin:yellow) )
    (total-score)
  )
)
(:scoring
  (* (< (count ballThrownToBin:blue_dodgeball) 20 )
    2
  )
)
)



(define (game game-id-367) (:domain medium-objects-room-v1)
(:setup
  (forall (?bl - blue_cube_block ?b ?d2 ?d ?b - yellow_pyramid_block ?s - wall)
    (game-conserved
      (not
        (and
          (or
            (not
              (in ?s ?s)
            )
            (not
              (and
                (in_motion ?s)
                (agent_holds ?s)
              )
            )
          )
          (in_motion ?s)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballToBinFromBed
      (exists (?c6 - ball ?b6 - (either blue_cube_block golfball dodgeball wall))
        (then
          (hold (and (and (on ?b6 ?b6) (and (and (agent_holds ?b6) (not (and (in_motion ?b6) (agent_holds ?b6) ) ) ) (in_motion floor) ) (not (not (is_setup_object ?b6) ) ) ) (not (same_color ?b6 ?b6) ) (in_motion ?b6) (agent_holds ?b6) ) )
          (hold (adjacent ?b6 ?b6) )
          (hold (and (in ?b6 ?b6) (in_motion rug) ) )
        )
      )
    )
    (preference redDodgeballThrownToBinWithoutTouchingFloor
      (exists (?p - game_object ?t - (either chair alarm_clock))
        (then
          (hold-while (and (agent_crouches ) (adjacent_side ?t ?t ?t) (in_motion ?t) (in_motion ?t) (on ?t ?t) (not (and (in_motion ?t) (agent_holds ?t) (in_motion ?t) ) ) ) (and (agent_holds ?t) (in ?t agent) ) )
          (once (rug_color_under ?t ?t) )
        )
      )
    )
  )
)
(:terminal
  (or
    (= (count-once ballToBinFromBed:green) (count redDodgeballThrownToBinWithoutTouchingFloor:hexagonal_bin) )
    (>= (count redDodgeballThrownToBinWithoutTouchingFloor:beachball) 1 )
  )
)
(:scoring
  (count-once redDodgeballThrownToBinWithoutTouchingFloor:red)
)
)



(define (game game-id-368) (:domain medium-objects-room-v1)
(:setup
  (forall (?o - dodgeball ?g ?o ?d - block)
    (game-optional
      (in ?g ?o)
    )
  )
)
(:constraints
  (and
    (preference basketMadeFromRug
      (exists (?h - hexagonal_bin ?c4 - curved_wooden_ramp)
        (then
          (hold (in ?c4 ?c4) )
          (hold (not (>= (x_position ?c4) 8) ) )
          (once (on agent ?c4) )
        )
      )
    )
    (preference towerFallsWhileBuilding
      (exists (?db - (either pink alarm_clock doggie_bed))
        (then
          (once (touch ?db ?db) )
          (once (not (= 9 (distance ?db tan)) ) )
          (once (not (game_start ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (* (count basketMadeFromRug:hexagonal_bin:beachball) (external-forall-minimize (+ (* (count towerFallsWhileBuilding:hexagonal_bin) (+ 1 (* (* (= (count-overlapping towerFallsWhileBuilding:basketball) (count-once-per-objects basketMadeFromRug:blue_dodgeball) )
                    60
                  )
                  (count basketMadeFromRug:alarm_clock)
                )
              )
            )
            (count-shortest towerFallsWhileBuilding:beachball)
          )
        )
      )
      6
    )
    (not
      (or
        (> (total-score) (< 50 (count-once-per-objects towerFallsWhileBuilding:beachball) )
        )
        (or
          (<= (count-once-per-objects towerFallsWhileBuilding:yellow_cube_block) (total-score) )
          (or
            (>= (total-score) (* (* (+ 5 (* (count towerFallsWhileBuilding:yellow) 2 )
                  )
                  7
                )
                2
              )
            )
            (>= (+ 3 4 (count-once-per-objects towerFallsWhileBuilding:golfball) )
              3
            )
            (not
              (or
                (and
                  (>= 5 (count basketMadeFromRug:blue_dodgeball) )
                  (>= (* (* (* 3 8 )
                        (* (> (* (count-once-per-objects basketMadeFromRug:beachball) (+ (* (* (count-once-per-objects towerFallsWhileBuilding:doggie_bed) (+ 100 (count-once-per-objects basketMadeFromRug:pink) )
                                    (count basketMadeFromRug:dodgeball:blue_cube_block)
                                    10
                                    (* (count-once-per-objects towerFallsWhileBuilding:blue_pyramid_block:top_drawer) (* (* (* (- 1 )
                                            (* 2 (count-same-positions towerFallsWhileBuilding:yellow_pyramid_block) )
                                          )
                                        )
                                        (+ 50 0.5 )
                                      )
                                      (count towerFallsWhileBuilding:basketball:green)
                                      (count basketMadeFromRug:dodgeball:red)
                                    )
                                    15
                                  )
                                  (* 2 (* (* 4 (+ 10 10 (count-once-per-objects basketMadeFromRug:yellow:block) )
                                      )
                                      (<= 3 (count basketMadeFromRug:golfball) )
                                    )
                                  )
                                )
                                (* (count-same-positions basketMadeFromRug:dodgeball) (count towerFallsWhileBuilding:block) )
                                -30
                              )
                              (count basketMadeFromRug:dodgeball)
                            )
                            (count-once towerFallsWhileBuilding:yellow)
                          )
                          7
                        )
                      )
                      30
                    )
                    (* (+ 1 (< (count-once-per-objects towerFallsWhileBuilding:dodgeball:golfball) (count towerFallsWhileBuilding:beachball:tan) )
                      )
                      2
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:scoring
  (* (count towerFallsWhileBuilding:yellow_pyramid_block) (count-once basketMadeFromRug:alarm_clock) )
)
)



(define (game game-id-369) (:domain few-objects-room-v1)
(:setup
  (exists (?s ?b5 - (either game_object hexagonal_bin))
    (game-conserved
      (on ?s ?s)
    )
  )
)
(:constraints
  (and
    (forall (?l - curved_wooden_ramp ?d - dodgeball)
      (and
        (preference beachballBouncedOffRamp
          (exists (?o - ball ?h - hexagonal_bin)
            (at-end
              (open ?d)
            )
          )
        )
        (preference dodgeballFromDeskToTarget
          (exists (?h - teddy_bear)
            (then
              (once (is_setup_object ?h) )
              (once (on ?h ?h) )
              (once (not (not (in_motion green) ) ) )
            )
          )
        )
      )
    )
    (preference tanObjectMovedToRoomCenter
      (exists (?t - block ?x - bridge_block ?p - red_dodgeball)
        (then
          (hold (not (> 1 8) ) )
          (hold (above agent ?p) )
          (once (in_motion ?p) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects beachballBouncedOffRamp:hexagonal_bin) 5 )
)
(:scoring
  (count-shortest beachballBouncedOffRamp:brown:basketball)
)
)



(define (game game-id-370) (:domain many-objects-room-v1)
(:setup
  (forall (?p - pyramid_block)
    (forall (?b6 - (either pyramid_block doggie_bed dodgeball))
      (exists (?db - shelf)
        (and
          (game-optional
            (not
              (or
                (in_motion ?p)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference castleBuilt
      (exists (?o5 - ball)
        (then
          (once (not (not (and (equal_z_position ?o5 ?o5) (on ?o5 ?o5) ) ) ) )
          (once (agent_holds ?o5) )
          (once (not (in ?o5 ?o5) ) )
        )
      )
    )
  )
)
(:terminal
  (> 3 (count-once-per-external-objects castleBuilt) )
)
(:scoring
  (* (count castleBuilt:beachball) (* (+ 5 (count-once-per-objects castleBuilt:yellow) )
      (count-once-per-objects castleBuilt:cube_block)
    )
  )
)
)



(define (game game-id-371) (:domain many-objects-room-v1)
(:setup
  (exists (?c ?b8 - ball ?o ?h ?o2 ?p ?t - wall)
    (and
      (forall (?o - cube_block)
        (and
          (not
            (and
              (game-optional
                (in_motion ?h)
              )
            )
          )
          (and
            (game-optional
              (in_motion ?t)
            )
            (forall (?p - game_object)
              (and
                (and
                  (exists (?w1 - hexagonal_bin)
                    (and
                      (and
                        (exists (?c - ball ?w1 ?o1 - game_object)
                          (game-conserved
                            (in_motion ?t)
                          )
                        )
                        (exists (?b - red_pyramid_block)
                          (and
                            (and
                              (exists (?c2 - cube_block)
                                (exists (?h - (either game_object floor credit_card))
                                  (forall (?w - hexagonal_bin ?c6 - chair ?g - (either cube_block wall yellow_cube_block))
                                    (game-conserved
                                      (adjacent_side rug room_center ?o2 ?t)
                                    )
                                  )
                                )
                              )
                              (game-conserved
                                (not
                                  (in_motion ?t)
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                  (exists (?h - hexagonal_bin)
                    (exists (?b - hexagonal_bin ?r ?g ?d1 - ball)
                      (exists (?o - hexagonal_bin)
                        (and
                          (exists (?c - beachball ?b - cube_block)
                            (game-optional
                              (rug_color_under ?o2 ?g)
                            )
                          )
                          (and
                            (game-optional
                              (on ?o2 ?t)
                            )
                          )
                          (game-conserved
                            (agent_holds ?t)
                          )
                        )
                      )
                    )
                  )
                )
                (forall (?r - game_object ?g ?h - ball)
                  (exists (?c1 ?d1 - triangular_ramp)
                    (game-optional
                      (in_motion ?d1)
                    )
                  )
                )
              )
            )
          )
        )
      )
      (game-conserved
        (not
          (adjacent ?o ?p)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference beachballOnRug
      (exists (?s - (either pyramid_block pillow) ?b - beachball)
        (then
          (hold (in_motion ?b) )
          (once (not (on ?b ?b) ) )
          (hold-while (on ?b ?b) (not (not (in_motion ?b) ) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (>= (* 8 (+ (+ 5 5 )
            (* (count-unique-positions beachballOnRug:orange:white) (count-once beachballOnRug:basketball) )
            (count beachballOnRug:purple:green:red_pyramid_block)
            -30
            (* (- (* (+ (count beachballOnRug:beachball) 2 )
                  (count beachballOnRug:beachball)
                )
              )
              (= 3 (+ (count beachballOnRug) (+ (* (* 10 (count beachballOnRug:pink_dodgeball) )
                      1
                    )
                    4
                    2
                  )
                )
              )
            )
            2
            (count beachballOnRug:hexagonal_bin)
            (count-once-per-objects beachballOnRug:beachball:golfball:green)
            (count beachballOnRug:dodgeball:blue_dodgeball:dodgeball)
          )
        )
        5
      )
    )
  )
)
(:scoring
  (count beachballOnRug)
)
)



(define (game game-id-372) (:domain few-objects-room-v1)
(:setup
  (exists (?b10 - doggie_bed)
    (forall (?f - hexagonal_bin)
      (forall (?d - pyramid_block)
        (and
          (forall (?h - block)
            (exists (?b9 - pyramid_block)
              (and
                (game-optional
                  (on ?d ?b10)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?ob - ball)
      (and
        (preference ballKnocksTeddy
          (exists (?b8 - game_object ?d - ball)
            (then
              (hold (same_color ?d ?ob) )
              (once (and (not (in_motion ?d) ) (on room_center ?ob) ) )
              (once (same_color ?ob ?d) )
            )
          )
        )
        (preference blockKnockedFromBuildingInBin
          (exists (?d1 - (either doggie_bed key_chain lamp))
            (then
              (hold (on ?d1 ?ob) )
              (once (touch ?ob ?ob) )
              (hold-while (and (not (and (or (same_color ?ob ?ob) ) (agent_holds ?d1) ) ) (< 5 5) ) (on desk agent) )
            )
          )
        )
        (preference pillowMovedToRoomCenter
          (exists (?c - game_object ?p1 - desk_shelf ?c1 - hexagonal_bin)
            (then
              (once (and (same_object ?ob ?c1) (not (exists (?b - hexagonal_bin) (not (in ?ob ?b) ) ) ) ) )
              (hold (not (and (in_motion ?ob) (exists (?h - dodgeball ?h - hexagonal_bin) (and (not (game_start ) ) (rug_color_under ?c1 ?c1) (not (not (and (in_motion ?c1) (not (and (not (not (agent_holds ?ob) ) ) (and (and (and (in_motion ?ob) (agent_holds floor) ) (forall (?o - (either cube_block key_chain)) (not (and (and (agent_holds ?c1) (not (in_motion ?o) ) (in ?c1 ?ob) ) (agent_holds ?h) ) ) ) ) (on ?h ?c1) (object_orientation ?h ?h) ) ) ) ) ) ) ) ) ) ) )
              (once (not (agent_holds floor) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (total-time) 0.7 )
    (not
      (>= (count blockKnockedFromBuildingInBin) 50 )
    )
  )
)
(:scoring
  (count blockKnockedFromBuildingInBin:blue_cube_block:tall_cylindrical_block)
)
)



(define (game game-id-373) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (touch pink_dodgeball pink_dodgeball)
  )
)
(:constraints
  (and
    (preference ballThrownIntoTarget
      (exists (?w - ball)
        (then
          (once (agent_holds ?w) )
          (hold (and (on floor ?w) (not (in_motion ?w) ) ) )
          (once (agent_holds ?w) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (* 300 5 )
      (count-once ballThrownIntoTarget:dodgeball)
    )
    (total-time)
  )
)
(:scoring
  (* (count-once-per-objects ballThrownIntoTarget:doggie_bed:beachball) 2 )
)
)



(define (game game-id-374) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (in_motion desk)
  )
)
(:constraints
  (and
    (forall (?b - (either basketball main_light_switch))
      (and
        (preference pillowThrownToDoggieBed
          (exists (?b - (either mug triangle_block))
            (then
              (once (and (not (and (not (< (distance ?b ?b) 1) ) ) ) (agent_holds ?b) ) )
              (once (is_setup_object ?b) )
              (once (adjacent ?b ?b) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (* 0 5 )
  )
)
(:scoring
  (count-increasing-measure pillowThrownToDoggieBed:dodgeball:pink)
)
)



(define (game game-id-375) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?h - hexagonal_bin)
      (exists (?w2 - teddy_bear)
        (and
          (exists (?c2 - (either dodgeball cd) ?h - block)
            (game-optional
              (agent_holds ?h)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - dodgeball ?d ?c2 - teddy_bear)
      (and
        (preference dropAttempt
          (at-end
            (same_type ?d ?c2)
          )
        )
        (preference throwBallToDoggieBedOffWall
          (exists (?b - doggie_bed)
            (then
              (once (in ?c2 ?c2) )
              (hold (same_type ?c2 rug) )
              (once (and (and (in ?d ?c2) (and (and (>= 2 1) (not (and (not (not (on ?b ?c2) ) ) (not (not (not (agent_holds ?d) ) ) ) ) ) ) (<= 1 (distance ?b ?b)) (in_motion desk) (not (equal_x_position desk ?d) ) (touch ?b ?d) (and (agent_holds ?b) (and (not (and (touch ?c2 ?d) (and (not (< 1 2) ) (adjacent agent ?c2) ) (exists (?b - curved_wooden_ramp ?p - curved_wooden_ramp) (in_motion ?b) ) ) ) (not (in_motion ?b) ) ) ) (touch ?c2 front) ) (not (rug_color_under ?b ?d) ) (and (agent_holds ?d) (and (not (agent_holds desk) ) (is_setup_object ?c2) ) ) ) (and (in_motion brown) (agent_holds ?b) ) ) )
            )
          )
        )
      )
    )
    (preference ballThrownFromRug
      (exists (?w2 - ball)
        (at-end
          (and
            (and
              (adjacent desk ?w2)
              (and
                (not
                  (agent_holds ?w2)
                )
                (is_setup_object ?w2)
              )
              (in ?w2 desk)
              (touch ?w2 ?w2)
            )
            (in ?w2 ?w2)
          )
        )
      )
    )
  )
)
(:terminal
  (> 2 (count dropAttempt:purple) )
)
(:scoring
  (external-forall-maximize
    (count dropAttempt:beachball)
  )
)
)



(define (game game-id-376) (:domain few-objects-room-v1)
(:setup
  (exists (?h - pillow ?b7 - (either cube_block game_object cellphone))
    (game-conserved
      (on ?b7 ?b7)
    )
  )
)
(:constraints
  (and
    (preference ballThrowAttempt
      (exists (?b - building ?t2 - hexagonal_bin)
        (then
          (once (on ?t2 ?t2) )
          (hold-while (agent_holds ?t2) (agent_holds door) )
          (once (in_motion ?t2) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) 10 )
)
(:scoring
  (count-once-per-objects ballThrowAttempt:dodgeball)
)
)



(define (game game-id-377) (:domain medium-objects-room-v1)
(:setup
  (exists (?b10 - hexagonal_bin ?r - chair ?h - game_object ?s - cube_block)
    (and
      (forall (?d - hexagonal_bin)
        (game-optional
          (and
            (and
              (and
                (not
                  (and
                    (agent_holds ?s)
                  )
                )
                (or
                  (above ?s ?s)
                  (and
                    (and
                      (in_motion room_center)
                      (exists (?ob ?b - dodgeball ?b6 ?b - hexagonal_bin ?w - dodgeball)
                        (in_motion ?w)
                      )
                    )
                    (same_type ?s ?s)
                  )
                  (in_motion ?d)
                )
                (adjacent bed ?d)
              )
              (agent_holds ?s)
            )
            (object_orientation ?s ?d)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blocksInPlace
      (exists (?c - beachball)
        (then
          (once (agent_holds ?c) )
          (once (agent_holds ?c) )
          (once (forall (?l - flat_block) (not (on ?l ?c) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects blocksInPlace:pink) (total-time) )
)
(:scoring
  (count blocksInPlace:green:tan)
)
)



(define (game game-id-378) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (open bed)
  )
)
(:constraints
  (and
    (preference dodgeballBouncesOnceToDoggieBed
      (exists (?h ?c - beachball)
        (then
          (once (touch agent south_west_corner) )
          (once (in_motion ?h) )
          (hold (< 3 (x_position room_center)) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (total-score) (total-score) )
  )
)
(:scoring
  (count dodgeballBouncesOnceToDoggieBed:basketball:purple)
)
)



(define (game game-id-379) (:domain medium-objects-room-v1)
(:setup
  (forall (?t1 - doggie_bed)
    (exists (?c2 - curved_wooden_ramp)
      (game-conserved
        (faces ?c2 ?c2)
      )
    )
  )
)
(:constraints
  (and
    (forall (?ob - chair)
      (and
        (preference throwAttempt
          (exists (?bl - ball)
            (then
              (once (and (and (< 1 1) (in_motion bed) ) (not (in ?ob green_golfball) ) ) )
              (once (agent_holds ?ob) )
              (once (in ?bl ?bl) )
            )
          )
        )
        (preference throwBallToDoggieBed
          (exists (?b10 - hexagonal_bin ?d - pyramid_block ?c - cube_block ?d - building)
            (at-end
              (in_motion desk)
            )
          )
        )
      )
    )
    (preference throwKnocksBlock
      (exists (?h - dodgeball)
        (then
          (once (in_motion ?h) )
          (once (on agent agent) )
          (hold (not (on ?h ?h) ) )
          (hold (not (opposite ?h ?h) ) )
        )
      )
    )
    (preference golfballUnderBridgeWithoutTouchingBlock
      (exists (?c3 - ball ?b2 - (either side_table laptop laptop) ?t - dodgeball)
        (then
          (once (and (not (and (between ?t ?t ?t) (and (agent_holds ?t) (agent_holds ?t) ) (in_motion ?t) ) ) (in_motion ?t) ) )
          (once (on ?t ?t) )
          (once (and (and (touch ?t ?t) (and (adjacent agent ?t) (in_motion ?t) (not (rug_color_under ?t ?t) ) (< 1 (distance ?t ?t)) (not (agent_holds ?t) ) (and (in_motion ?t) (agent_holds ?t) (on ?t ?t) (in ?t ?t) (and (agent_holds floor) (not (touch ?t ?t) ) ) (on ?t ?t) ) (not (in_motion block) ) (and (and (adjacent ?t ?t) ) (and (agent_holds bottom_shelf) (in bed rug) (not (< (distance ?t bed) 3) ) (exists (?b10 - doggie_bed ?h ?r - dodgeball ?c - pillow) (< (distance ?c door) 4) ) ) ) ) ) (in_motion rug) ) )
        )
      )
    )
    (preference ballToBinFromBed
      (exists (?d - (either dodgeball tall_cylindrical_block))
        (at-end
          (not
            (and
              (exists (?h - doggie_bed ?b - (either lamp dodgeball) ?b - hexagonal_bin)
                (in_motion ?d)
              )
              (or
                (agent_holds ?d)
                (on ?d bed)
              )
            )
          )
        )
      )
    )
    (preference throwMovesBeachballWithoutKnockingTeddy
      (exists (?h - hexagonal_bin)
        (then
          (once (forall (?g - hexagonal_bin ?h - (either blue_cube_block alarm_clock)) (rug_color_under ?h ?h) ) )
          (hold (and (above ?h top_drawer) (and (in_motion ?h) (not (not (exists (?p2 - ball) (in_motion bed) ) ) ) ) ) )
          (once (adjacent ?h ?h) )
        )
      )
    )
    (preference objectLandsInBin
      (exists (?b - ball)
        (then
          (once (< (distance ?b ?b) 9) )
          (once-measure (in_motion ?b) (distance ?b ?b) )
          (hold (and (< 1 (distance agent ?b)) (< (distance ?b bed) 1) (and (in_motion agent) (same_type ?b ?b) ) ) )
        )
      )
    )
  )
)
(:terminal
  (<= (count ballToBinFromBed:beachball:basketball) (count throwKnocksBlock:basketball:golfball:top_drawer) )
)
(:scoring
  (count-once-per-objects throwBallToDoggieBed:dodgeball:hexagonal_bin)
)
)



(define (game game-id-380) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (= 8 1)
  )
)
(:constraints
  (and
    (forall (?c5 ?r - yellow_pyramid_block)
      (and
        (preference throwBallToBinOffObject
          (then
            (once (on room_center ?r) )
            (once (and (not (not (adjacent desk pink_dodgeball) ) ) (in ?c5 ?c5) ) )
          )
        )
        (preference throwBallToDoggieBed
          (exists (?r - block ?c3 - hexagonal_bin ?o - hexagonal_bin)
            (at-end
              (agent_holds ?o)
            )
          )
        )
        (preference objectsHidden
          (exists (?d ?l - dodgeball)
            (then
              (once (agent_holds ?r) )
              (once (in ?c5 ?r) )
              (once (in_motion ?d) )
            )
          )
        )
        (preference throwToBin
          (exists (?h - cube_block)
            (at-end
              (not
                (exists (?r - (either pillow dodgeball bridge_block))
                  (and
                    (in_motion ?h)
                    (agent_holds ?c5)
                  )
                )
              )
            )
          )
        )
      )
    )
    (preference ballThrownToRampToBed
      (exists (?h - ball)
        (then
          (once (agent_holds ?h) )
          (once (and (not (and (and (exists (?p2 - hexagonal_bin ?o1 - ball) (not (and (in_motion ?h) (and (touch rug ?o1) (and (agent_holds ?o1) (in_motion ?o1) (not (on ?h floor) ) ) ) ) ) ) (agent_holds ?h) ) (agent_holds ?h) ) ) (agent_holds blue) ) )
          (once (agent_holds ?h) )
        )
      )
    )
    (forall (?b - sliding_door)
      (and
        (preference dropAttempt
          (exists (?l2 - cube_block)
            (at-end
              (in_motion room_center)
            )
          )
        )
        (preference blockCorrectlyPicked
          (exists (?h - dodgeball)
            (at-end
              (and
                (not
                  (on ?b ?b)
                )
                (and
                  (in_motion ?h)
                  (and
                    (agent_holds ?h)
                    (not
                      (in_motion ?b)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 1 3 )
)
(:scoring
  (count ballThrownToRampToBed:dodgeball)
)
)



(define (game game-id-381) (:domain medium-objects-room-v1)
(:setup
  (exists (?o1 - hexagonal_bin)
    (or
      (game-conserved
        (and
          (not
            (or
              (or
                (is_setup_object ?o1)
                (not
                  (not
                    (adjacent ?o1 ?o1)
                  )
                )
              )
              (agent_holds ?o1)
              (on ?o1 ?o1)
            )
          )
          (and
            (in ?o1 ?o1)
            (adjacent top_shelf ?o1)
            (forall (?c - shelf)
              (equal_z_position desk upright)
            )
            (= 7 1)
            (and
              (not
                (not
                  (on ?o1 ?o1)
                )
              )
              (on ?o1 ?o1)
              (in_motion ?o1)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference thrownObjectHitsComputer
      (exists (?w1 - game_object)
        (at-end
          (not
            (exists (?b10 - hexagonal_bin)
              (agent_holds ?b10)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (or
        (not
          (or
            (> (count thrownObjectHitsComputer:golfball:dodgeball) (total-score) )
            (>= (count-same-positions thrownObjectHitsComputer:yellow) (total-time) )
          )
        )
        (or
          (> (count-once thrownObjectHitsComputer:pink) (external-forall-maximize (/ (count thrownObjectHitsComputer:pink:green) (count thrownObjectHitsComputer:yellow:beachball) ) ) )
          (>= 6 (count thrownObjectHitsComputer:cube_block) )
          (>= (total-time) (* 4 (count thrownObjectHitsComputer:wall) (* (external-forall-maximize (count thrownObjectHitsComputer:dodgeball:red) ) 1 )
              15
              (count-once-per-objects thrownObjectHitsComputer)
            )
          )
        )
        (>= (count-once-per-objects thrownObjectHitsComputer:yellow) 10 )
      )
      (> (external-forall-maximize (count-once thrownObjectHitsComputer:dodgeball) ) 6 )
      (> (count thrownObjectHitsComputer:dodgeball:red) 2 )
    )
  )
)
(:scoring
  (count-longest thrownObjectHitsComputer:dodgeball)
)
)



(define (game game-id-382) (:domain medium-objects-room-v1)
(:setup
  (exists (?o5 - dodgeball)
    (and
      (forall (?g - golfball ?db - (either hexagonal_bin wall))
        (forall (?b - cube_block ?b - block ?d - block)
          (exists (?c - doggie_bed ?b - game_object ?tb - block)
            (forall (?h ?h - curved_wooden_ramp)
              (forall (?o - (either alarm_clock blue_cube_block desktop))
                (and
                  (exists (?tb - block)
                    (game-conserved
                      (< (distance desk ?tb) (distance ?d ?tb))
                    )
                  )
                )
              )
            )
          )
        )
      )
      (forall (?h - color)
        (game-conserved
          (in_motion ?o5)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - triangular_ramp)
      (and
        (preference throwBallToDoggieBedOffWall
          (exists (?b7 - teddy_bear)
            (then
              (hold (not (not (and (not (not (not (and (between ?b ?b desk) (agent_holds agent) ) ) ) ) (in_motion ?b) ) ) ) )
              (once (agent_holds ?b7) )
              (once (in_motion ?b) )
            )
          )
        )
      )
    )
    (preference dodgeballBouncesOnceToDoggieBed
      (exists (?db - hexagonal_bin ?d - (either triangle_block chair))
        (then
          (hold (toggled_on top_drawer) )
          (once (agent_holds ?d) )
          (hold (touch ?d ?d) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 5 3 5 5 )
    (* (+ (count-once-per-objects dodgeballBouncesOnceToDoggieBed:rug) 4 )
      2
    )
  )
)
(:scoring
  (* (count dodgeballBouncesOnceToDoggieBed:dodgeball) 50 )
)
)



(define (game game-id-383) (:domain few-objects-room-v1)
(:setup
  (exists (?o - cube_block)
    (and
      (game-conserved
        (and
          (adjacent ?o ?o)
          (not
            (in ?o agent)
          )
          (not
            (agent_holds ?o)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectInBuilding
      (exists (?d2 ?o4 - game_object)
        (then
          (hold (in_motion ?d2) )
          (hold-while (in ?d2 ?o4) (< (distance ?o4 ?d2) 7) )
          (once (open blue) )
        )
      )
    )
    (preference throwBallToDoggieBed
      (exists (?h - teddy_bear ?h ?h - cylindrical_block ?db - game_object)
        (then
          (once (and (adjacent ?db ?db) (in_motion ?db) ) )
          (once (equal_z_position room_center agent) )
          (once (agent_holds ?db) )
        )
      )
    )
  )
)
(:terminal
  (>= (count objectInBuilding:green) (- 3 )
  )
)
(:scoring
  (count-overlapping objectInBuilding:doggie_bed)
)
)



(define (game game-id-384) (:domain medium-objects-room-v1)
(:setup
  (forall (?h - doggie_bed ?h - (either pillow cylindrical_block pillow wall) ?h - curved_wooden_ramp)
    (game-optional
      (not
        (not
          (agent_holds south_west_corner)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToRug
      (exists (?b - shelf)
        (at-end
          (touch ?b ?b)
        )
      )
    )
  )
)
(:terminal
  (>= 1 16 )
)
(:scoring
  (* (count ballThrownToRug:blue_dodgeball) )
)
)



(define (game game-id-385) (:domain many-objects-room-v1)
(:setup
  (forall (?d - pyramid_block)
    (exists (?b - dodgeball)
      (forall (?h - game_object ?b - desktop)
        (game-conserved
          (and
            (not
              (and
                (adjacent front ?b)
                (> 1 2)
              )
            )
            (on room_center ?d)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?o - hexagonal_bin)
        (then
          (hold (agent_holds desk) )
          (hold (and (between ?o ?o ?o) (agent_holds ?o) ) )
        )
      )
    )
  )
)
(:terminal
  (> (total-time) (+ (count-once-per-external-objects throwAttempt:pink) (= (* (count-once-per-objects throwAttempt:purple) (+ (+ (count throwAttempt:hexagonal_bin) (+ 2 8 )
              (external-forall-maximize
                (* (count throwAttempt:dodgeball) )
              )
            )
            (* (* (+ (count-once-per-objects throwAttempt:red) 180 )
                (- (count-shortest throwAttempt:pink:pink_dodgeball) )
              )
              (- 9 )
            )
          )
        )
        3
      )
    )
  )
)
(:scoring
  (count throwAttempt:yellow)
)
)



(define (game game-id-386) (:domain few-objects-room-v1)
(:setup
  (forall (?bl - (either game_object cylindrical_block))
    (and
      (and
        (not
          (and
            (game-conserved
              (in_motion ?bl)
            )
            (game-optional
              (game_start )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference itemsTurnedOff
      (exists (?h - hexagonal_bin ?l - game_object)
        (at-end
          (forall (?l2 - dodgeball)
            (in_motion bed)
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count itemsTurnedOff:book) (count itemsTurnedOff:basketball) )
)
(:scoring
  (* 10 (- 1 )
    (+ (count-measure itemsTurnedOff:basketball:yellow) (count itemsTurnedOff:triangle_block) )
    6
  )
)
)



(define (game game-id-387) (:domain few-objects-room-v1)
(:setup
  (forall (?g - game_object ?c1 - building ?w1 ?l4 - (either dodgeball cd desktop) ?t - dodgeball)
    (forall (?l2 - shelf ?c5 - curved_wooden_ramp)
      (and
        (forall (?l1 - hexagonal_bin ?b - (either triangular_ramp lamp))
          (game-optional
            (not
              (and
                (agent_holds ?t)
                (not
                  (agent_holds ?c5)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?c1 - cube_block)
        (then
          (once (not (not (not (not (and (not (or (agent_holds ?c1) (agent_holds ?c1) ) ) (not (not (agent_holds room_center) ) ) (in ?c1 ?c1) ) ) ) ) ) )
          (once (agent_holds ?c1) )
          (hold-while (same_object back ?c1) (and (not (in_motion ?c1) ) (game_over ) ) )
        )
      )
    )
    (preference itemInClosedDrawerAtEnd
      (exists (?p2 - hexagonal_bin)
        (then
          (once (and (and (not (= 1 1) ) (exists (?p - shelf) (not (not (agent_holds floor) ) ) ) ) (not (< (distance ?p2 ?p2) (distance_side desk ?p2 ?p2 west_wall)) ) ) )
          (hold (agent_holds ?p2) )
          (hold (and (agent_holds ?p2) (touch ?p2 ?p2) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-same-positions itemInClosedDrawerAtEnd:blue_dodgeball:pink_dodgeball) 7 )
)
(:scoring
  (count-same-positions throwAttempt:green)
)
)



(define (game game-id-388) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (in rug desk)
    )
    (forall (?l2 - hexagonal_bin)
      (or
        (exists (?p - ball)
          (exists (?h - desk_shelf)
            (and
              (exists (?h - dodgeball ?t - (either dodgeball doggie_bed))
                (not
                  (and
                    (game-optional
                      (faces ?h ?t)
                    )
                  )
                )
              )
            )
          )
        )
        (and
          (game-conserved
            (in_motion ?l2)
          )
        )
        (exists (?d ?d - dodgeball)
          (exists (?tb - (either key_chain hexagonal_bin))
            (and
              (forall (?c - building ?d - beachball)
                (exists (?b - wall)
                  (and
                    (game-optional
                      (in_motion ?l2)
                    )
                    (or
                      (not
                        (game-conserved
                          (open ?d)
                        )
                      )
                      (game-optional
                        (in ?tb ?l2)
                      )
                      (forall (?o3 - block ?c - (either credit_card triangular_ramp hexagonal_bin) ?c3 - dodgeball)
                        (forall (?h - dodgeball)
                          (game-conserved
                            (and
                              (adjacent ?tb ?tb)
                              (in ?d ?h)
                              (and
                                (in drawer ?tb)
                                (not
                                  (faces ?b ?h)
                                )
                              )
                              (same_object ?c3 top_shelf)
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
    (exists (?p - doggie_bed)
      (forall (?b1 - cube_block ?w - dodgeball)
        (game-conserved
          (agent_holds ?w)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - bridge_block)
      (and
        (preference ballOnBedAtEnd
          (exists (?b - hexagonal_bin ?d ?o3 - hexagonal_bin ?w - (either cellphone bridge_block laptop yellow_cube_block flat_block dodgeball pyramid_block) ?t - hexagonal_bin)
            (at-end
              (same_type ?t ?b)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (total-time) )
)
(:scoring
  (count-shortest ballOnBedAtEnd:dodgeball:pink_dodgeball)
)
)



(define (game game-id-389) (:domain medium-objects-room-v1)
(:setup
  (forall (?b8 ?c4 - hexagonal_bin ?b6 - color)
    (game-conserved
      (touch ?b6 ?b6)
    )
  )
)
(:constraints
  (and
    (preference cubeBlockFromBedToShelf
      (exists (?h - cube_block)
        (then
          (once (not (and (and (and (touch agent ?h) (agent_holds ?h) ) (touch ?h ?h) ) (agent_holds ?h) (in_motion ?h) (is_setup_object ?h) ) ) )
          (once (and (agent_holds ?h) (not (on front ?h) ) ) )
          (hold (opposite ?h agent) )
        )
      )
    )
  )
)
(:terminal
  (> (count-once-per-objects cubeBlockFromBedToShelf:pyramid_block) 0 )
)
(:scoring
  (+ (count-longest cubeBlockFromBedToShelf:red:dodgeball) 5 )
)
)



(define (game game-id-390) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?b3 - cube_block)
      (game-optional
        (not
          (rug_color_under blue ?b3)
        )
      )
    )
    (exists (?h - cube_block ?s - cube_block)
      (exists (?c - cube_block ?w2 - drawer)
        (game-optional
          (and
            (and
              (agent_holds ?w2)
              (in_motion ?w2)
            )
            (on ?s desk)
            (touch agent ?w2)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballDroppedInBin
      (exists (?g - ball)
        (then
          (once (not (in_motion ?g) ) )
          (once (not (agent_holds ?g) ) )
          (once (not (and (agent_holds ?g) ) ) )
        )
      )
    )
    (preference ballToBinFromBed
      (exists (?l3 - teddy_bear)
        (then
          (hold (and (exists (?c1 ?g - (either mug blue_cube_block) ?b8 - hexagonal_bin) (agent_holds ?b8) ) (in ?l3 ?l3) (forall (?c - hexagonal_bin ?o1 - (either pyramid_block dodgeball)) (in_motion ?o1) ) (and (in_motion bed) (not (not (touch ?l3 ?l3) ) ) (in_motion ?l3) ) ) )
          (hold (and (and (and (in ?l3 ?l3) (above agent ?l3) (on ?l3 ?l3) ) (and (in_motion ?l3) (on ?l3 ?l3) (agent_holds ?l3) ) (in_motion floor) ) (and (on ?l3 bed) (in_motion ?l3) (in_motion ?l3) ) ) )
          (hold-while (object_orientation bed ?l3) (and (and (same_object desk agent) (not (in ?l3 ?l3) ) ) (forall (?g - curved_wooden_ramp) (and (agent_holds ?l3) (in_motion desk) ) ) (and (not (on ?l3 ?l3) ) (and (adjacent_side ?l3 ?l3 desk desk) (and (not (and (and (and (adjacent ?l3 ?l3) (in ?l3 ?l3) ) (in_motion ?l3) ) (agent_holds ?l3) ) ) (and (< 1 7) ) ) (and (in ?l3 ?l3) (not (adjacent_side ?l3 ?l3 ?l3) ) ) (in ?l3 ?l3) (touch ?l3 ?l3) (> 10 (distance ?l3 ?l3)) (not (game_over ) ) (in_motion ?l3) (is_setup_object ?l3) (adjacent_side ?l3 ?l3 ?l3) ) ) ) (is_setup_object agent) (on desk ?l3) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (* 5 (= (* 2 (count ballDroppedInBin:wall) )
          (>= (- (* (* (count-once-per-objects ballDroppedInBin:pink) (+ (* (> 5 (count ballDroppedInBin:orange:blue_pyramid_block) )
                      5
                    )
                    (count ballToBinFromBed:green)
                  )
                )
                (+ 9 (count-measure ballDroppedInBin:red:beachball) 10 )
              )
            )
            5
          )
          (* (* (count ballToBinFromBed:basketball) (* 5 (* (external-forall-maximize (* 6 (count-once ballToBinFromBed:golfball) )
                  )
                  (* (count ballToBinFromBed:dodgeball:dodgeball) )
                )
              )
            )
            2
          )
        )
      )
      (count ballDroppedInBin:pink_dodgeball)
    )
    (count-once-per-objects ballToBinFromBed:yellow_pyramid_block)
  )
)
(:scoring
  (count-unique-positions ballToBinFromBed:hexagonal_bin)
)
)



(define (game game-id-391) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds desk)
  )
)
(:constraints
  (and
    (forall (?o - dodgeball)
      (and
        (preference throwBallToBin
          (exists (?b6 - hexagonal_bin)
            (then
              (once (not (not (in_motion ?b6) ) ) )
              (once (agent_holds ?b6) )
              (once (object_orientation desk ?b6) )
              (once (not (agent_holds ?o) ) )
            )
          )
        )
        (preference blocksInPlace
          (exists (?d - wall)
            (then
              (once (in ?o ?o) )
              (hold (object_orientation pink ?d) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (count-measure blocksInPlace:yellow) (count-once-per-objects throwBallToBin:pink) )
    20
  )
)
(:scoring
  (count-once-per-objects blocksInPlace:tall_cylindrical_block)
)
)



(define (game game-id-392) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (adjacent bed bed)
  )
)
(:constraints
  (and
    (preference blockToBinFromRug
      (exists (?c4 ?b ?d ?b ?h ?d - curved_wooden_ramp)
        (then
          (hold (and (agent_holds floor) (forall (?h - cube_block ?w - drawer) (same_type ?d ?b) ) (agent_holds ?d) (< (distance ?d ?d) 8) (and (adjacent_side blue ?d ?d) (and (and (and (in_motion ?d) (not (exists (?s - ball ?b - hexagonal_bin ?b - sliding_door) (agent_holds ?b) ) ) (and (agent_holds ?b) (and (in_motion blue) (in_motion ?d) ) ) (on ?c4 ?c4) (and (not (and (not (agent_crouches ) ) (open ?b) ) ) (and (and (< (distance ?d ?h) 1) (not (not (in ?h ?c4) ) ) ) (and (not (on ?c4 ?d) ) (on ?h desk) ) ) ) (same_color ?c4 ?b) ) (agent_holds ?b) ) (on ?d ?b) ) (in_motion ?h) ) (on ?c4 ?c4) ) )
          (once (and (touch agent ?b) (exists (?d - dodgeball) (< (distance_side ?b ?c4 ?h ?d) 6) ) (and (not (in_motion ?d) ) (and (not (in ?b ?c4) ) (rug_color_under ?b ?h) ) (in ?c4 ?b) ) (in_motion ?d) ) )
          (once (not (in_motion ?c4) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (and
        (>= (* (count blockToBinFromRug:cube_block) -30 )
          20
        )
        (= (count-once-per-objects blockToBinFromRug:dodgeball) (count-total blockToBinFromRug:basketball) )
      )
      (or
        (>= (- 20 )
          (* (count blockToBinFromRug:red) (* (+ (count blockToBinFromRug:dodgeball) (+ 5 (count blockToBinFromRug:dodgeball) )
              )
              3
              5
              1
              5
              (count-once-per-objects blockToBinFromRug:triangle_block:blue_dodgeball)
            )
          )
        )
        (>= (count blockToBinFromRug:pink_dodgeball) (count-increasing-measure blockToBinFromRug:basketball) )
      )
      (> (= (external-forall-maximize (* (- 12 (* (count-once-per-objects blockToBinFromRug:orange:basketball) 5 )
              )
              (count-once-per-external-objects blockToBinFromRug:cube_block:basketball)
              (* 3 (count-once-per-objects blockToBinFromRug:beachball:basketball) 0.7 (- (count blockToBinFromRug:dodgeball:yellow) )
              )
            )
          )
          (> 3 20 )
        )
        (total-score)
      )
    )
  )
)
(:scoring
  (count blockToBinFromRug:rug)
)
)



(define (game game-id-393) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?h - teddy_bear)
      (forall (?d ?l4 - doggie_bed ?p ?d ?b6 ?f - block)
        (and
          (game-conserved
            (agent_holds ?f)
          )
          (game-conserved
            (> 7 (distance ?b6 ?f))
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference towerFallsWhileBuilding
      (exists (?d - block)
        (then
          (once (in_motion ?d) )
          (hold (< 3 1) )
          (once (in_motion upright) )
        )
      )
    )
    (preference throwAttempt
      (exists (?r - block ?c - building)
        (then
          (hold (on ?c ?c) )
          (once (on rug ?c) )
          (once (not (and (not (touch ?c ?c) ) (agent_holds ?c) ) ) )
        )
      )
    )
    (preference ballThrowAttempt
      (exists (?b - golfball)
        (then
          (hold (agent_holds ?b) )
          (once (not (in_motion bed) ) )
          (hold (exists (?l1 - game_object) (touch ?l1 ?b) ) )
        )
      )
    )
    (preference objectWithMatchingColor
      (exists (?o - dodgeball ?d - dodgeball ?b - drawer)
        (then
          (once (= (distance ?b pink) (distance ?b ?b)) )
          (once (agent_holds floor) )
          (once (in right ?b) )
        )
      )
    )
    (preference throwObjectToBin
      (exists (?f - sliding_door)
        (then
          (once (= 1 (distance ?f ?f)) )
          (once (not (adjacent ?f floor) ) )
          (once (and (and (and (and (or (agent_holds agent) (not (adjacent ?f ?f) ) ) (same_type ?f ?f) (and (touch door ?f) (not (in ?f ?f) ) (in ?f ?f) (adjacent ?f bed) ) (not (not (adjacent_side ?f yellow ?f) ) ) ) (not (adjacent ?f ?f) ) (rug_color_under ?f upright) (not (not (not (agent_holds ?f) ) ) ) ) (in ?f agent) (< 1 1) ) (and (is_setup_object ?f) (not (on ?f ?f) ) ) ) )
          (once (or (in_motion ?f) ) )
        )
      )
    )
    (preference objectOnBed
      (exists (?w1 - doggie_bed)
        (then
          (hold (and (not (not (and (in_motion ?w1) (same_color ?w1 ?w1) ) ) ) (not (not (agent_holds green_golfball) ) ) ) )
          (once (in_motion desk) )
          (once (adjacent room_center desk) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (count throwObjectToBin:beachball) )
)
(:scoring
  (= (count-once-per-objects objectOnBed:white:purple) (* 5 2 )
  )
)
)



(define (game game-id-394) (:domain few-objects-room-v1)
(:setup
  (exists (?l2 - (either ball dodgeball) ?t - doggie_bed)
    (game-conserved
      (and
        (agent_holds desk)
        (adjacent ?t ?t)
      )
    )
  )
)
(:constraints
  (and
    (preference objectWithMatchingColor
      (exists (?ob - beachball)
        (then
          (once (adjacent ?ob ?ob) )
          (once (not (forall (?w - cube_block) (on ?ob bed) ) ) )
          (hold (agent_holds agent) )
        )
      )
    )
  )
)
(:terminal
  (>= (count objectWithMatchingColor:blue_pyramid_block:basketball) (count objectWithMatchingColor:basketball) )
)
(:scoring
  (count-once objectWithMatchingColor:blue_dodgeball)
)
)



(define (game game-id-395) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?b - (either wall tall_cylindrical_block))
      (game-conserved
        (in ?b ?b)
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballHitsBin
      (exists (?d1 - green_triangular_ramp ?t - (either tall_cylindrical_block cylindrical_block) ?r ?b ?b - (either yellow_cube_block bridge_block) ?w2 - chair)
        (at-end
          (in_motion ?w2)
        )
      )
    )
    (forall (?g - game_object ?w - doggie_bed)
      (and
        (preference ballKnocksBlockFromRug
          (exists (?b - hexagonal_bin)
            (then
              (once (exists (?p1 - doggie_bed) (in_motion ?w) ) )
              (once (agent_holds ?w) )
              (hold (not (agent_holds ?b) ) )
            )
          )
        )
      )
    )
    (preference cubeBlockThrownToTopShelf
      (exists (?db ?d - doggie_bed)
        (then
          (once (in_motion ?db) )
          (once (adjacent ?d ?d) )
          (once (opposite ?d ?d) )
        )
      )
    )
  )
)
(:terminal
  (>= (count dodgeballHitsBin:beachball) (total-score) )
)
(:scoring
  (count-overlapping ballKnocksBlockFromRug:pink)
)
)



(define (game game-id-396) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?l - cube_block)
      (exists (?b3 - triangular_ramp)
        (and
          (and
            (forall (?l4 - hexagonal_bin)
              (and
                (game-optional
                  (and
                    (and
                      (not
                        (agent_holds ?b3)
                      )
                      (agent_holds ?l)
                    )
                    (and
                      (not
                        (in_motion room_center)
                      )
                      (and
                        (opposite ?l ?l)
                        (in ?b3 ?l4)
                        (or
                          (in_motion ?b3)
                          (on ?b3 ?l4)
                          (and
                            (adjacent ?b3 ?l)
                            (not
                              (and
                                (and
                                  (and
                                    (on ?b3 ?b3)
                                    (and
                                      (agent_holds ?l4)
                                      (on ?l ?l4)
                                    )
                                  )
                                  (object_orientation desk ?b3)
                                )
                                (in ?l4 ?l4)
                              )
                            )
                          )
                        )
                      )
                      (agent_holds ?b3)
                      (on agent rug)
                      (on ?l ?l4)
                      (above ?l4 ?b3)
                      (agent_holds ?b3)
                      (not
                        (< 1 9)
                      )
                      (and
                        (>= 1 1)
                        (> 3 (distance ?b3 ?l4))
                      )
                      (in_motion ?b3)
                      (and
                        (agent_holds ?l4)
                        (and
                          (exists (?o ?c6 - hexagonal_bin ?r - dodgeball ?b2 - game_object)
                            (and
                              (not
                                (in_motion ?l4)
                              )
                              (in_motion ?l4)
                            )
                          )
                          (on ?b3 bed)
                        )
                      )
                      (touch ?l4 ?l4)
                    )
                    (same_color ?l ?b3)
                  )
                )
                (game-conserved
                  (on ?b3 ?l)
                )
                (game-conserved
                  (on ?l ?l)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference failedThrowToBin
      (exists (?h - (either blue_cube_block key_chain))
        (then
          (once (and (and (agent_holds ?h) (rug_color_under agent ?h) ) (agent_holds ?h) ) )
          (once (agent_holds ?h) )
          (once (not (on front_left_corner ?h) ) )
        )
      )
    )
  )
)
(:terminal
  (< (total-score) (+ (+ (count-once failedThrowToBin:green) (count-once-per-objects failedThrowToBin:golfball) )
      10
    )
  )
)
(:scoring
  (* 15 (count-once-per-objects failedThrowToBin:golfball) )
)
)



(define (game game-id-397) (:domain many-objects-room-v1)
(:setup
  (exists (?s - hexagonal_bin)
    (exists (?b2 - chair)
      (and
        (game-conserved
          (exists (?c2 - curved_wooden_ramp)
            (agent_holds ?s)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectThrownFromRug
      (exists (?b9 - chair ?t - hexagonal_bin)
        (then
          (once (and (opposite ?t ?t) (not (and (not (not (in_motion ?t) ) ) (and (and (in bed ?t) (in_motion ?t) ) (and (< 2 1) (and (not (in_motion ?t) ) (agent_crouches ) (in bed ?t) ) ) (agent_holds upright) ) (exists (?c5 - ball ?d - (either teddy_bear yellow_cube_block pen)) (in ?d floor) ) ) ) ) )
          (hold (in_motion ?t) )
          (once (< 1 1) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (count objectThrownFromRug:golfball:basketball) )
)
(:scoring
  (< (* 15 (count-longest objectThrownFromRug:beachball) )
    (* (count-once-per-objects objectThrownFromRug:pyramid_block) (+ 5 4 )
    )
  )
)
)



(define (game game-id-398) (:domain many-objects-room-v1)
(:setup
  (forall (?o3 - game_object)
    (game-optional
      (touch desk ?o3)
    )
  )
)
(:constraints
  (and
    (preference failedThrowAttempt
      (exists (?c6 - golfball)
        (then
          (once (not (not (touch ?c6 ?c6) ) ) )
          (once (and (and (broken ?c6) (game_start ) ) (agent_holds ?c6) ) )
          (once (and (not (or (in_motion ?c6) (agent_holds desk) ) ) (not (and (rug_color_under ?c6 ?c6) (not (> 1 (distance pink_dodgeball ?c6)) ) (agent_holds ?c6) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 2 (+ (count-overlapping failedThrowAttempt:beachball) 2 )
    )
    (total-time)
  )
)
(:scoring
  (* 4 (+ 10 300 )
  )
)
)



(define (game game-id-399) (:domain few-objects-room-v1)
(:setup
  (forall (?l1 - hexagonal_bin)
    (game-optional
      (and
        (not
          (same_color ?l1 ?l1)
        )
        (in_motion ?l1)
      )
    )
  )
)
(:constraints
  (and
    (preference blockFromRugToDesk
      (exists (?c - curved_wooden_ramp)
        (then
          (once (not (and (not (and (agent_holds ?c) (agent_holds ?c) ) ) (in ?c ?c) ) ) )
          (hold (agent_holds ?c) )
          (once (in agent ?c) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (- 5 )
  )
)
(:scoring
  (+ (* (+ (+ (* 2 (* 2 (* 6 (count blockFromRugToDesk:top_drawer) (+ 1 (count blockFromRugToDesk:beachball) )
              )
            )
          )
          3
        )
        5
        5
      )
      3
    )
    2
  )
)
)



(define (game game-id-400) (:domain many-objects-room-v1)
(:setup
  (exists (?b10 - (either dodgeball golfball cube_block blue_cube_block wall cellphone game_object))
    (forall (?b - dodgeball ?b - building ?t1 - hexagonal_bin)
      (exists (?b - block)
        (game-conserved
          (and
            (and
              (and
                (agent_holds front)
                (not
                  (agent_holds ?b10)
                )
              )
              (= 2 1)
              (> 1 (distance ?t1 agent))
            )
            (not
              (in_motion ?b)
            )
            (not
              (in_motion ?t1)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockInTowerAtEnd
      (exists (?h - block)
        (at-end
          (object_orientation back ?h)
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 3 2 )
    (<= (count-once-per-objects blockInTowerAtEnd:beachball) (count-once blockInTowerAtEnd:green) )
  )
)
(:scoring
  (* (count-once-per-objects blockInTowerAtEnd:basketball) 6 )
)
)



(define (game game-id-401) (:domain many-objects-room-v1)
(:setup
  (or
    (exists (?d - hexagonal_bin ?o - (either pyramid_block mug))
      (and
        (and
          (exists (?h - golfball ?b1 - chair)
            (and
              (exists (?b10 - hexagonal_bin)
                (and
                  (exists (?b2 - (either game_object dodgeball))
                    (exists (?h - hexagonal_bin)
                      (forall (?b3 - ball ?h - hexagonal_bin)
                        (forall (?o4 - ball)
                          (and
                            (exists (?h - ball)
                              (exists (?b8 - hexagonal_bin ?b - wall ?c2 - (either cube_block yellow_cube_block) ?h - game_object)
                                (exists (?o3 - hexagonal_bin)
                                  (exists (?p1 - cube_block)
                                    (forall (?d - building ?d - red_pyramid_block)
                                      (forall (?c - drawer)
                                        (and
                                          (forall (?c - building)
                                            (exists (?d - (either dodgeball cellphone))
                                              (exists (?d - hexagonal_bin)
                                                (and
                                                  (game-optional
                                                    (and
                                                      (in_motion ?o)
                                                      (and
                                                        (and
                                                          (on ?o4 ?p1)
                                                          (not
                                                            (not
                                                              (not
                                                                (on ?d south_west_corner)
                                                              )
                                                            )
                                                          )
                                                        )
                                                        (and
                                                          (not
                                                            (same_color ?b10 ?b2)
                                                          )
                                                          (not
                                                            (and
                                                              (in_motion ?b10)
                                                              (not
                                                                (in_motion ?c)
                                                              )
                                                            )
                                                          )
                                                          (in_motion ?b10)
                                                        )
                                                        (>= 1 (distance_side ?b1 floor bed))
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
          (game-conserved
            (same_object desk agent)
          )
          (exists (?b - doggie_bed)
            (exists (?p - dodgeball)
              (and
                (exists (?b - color ?b - game_object ?o - shelf)
                  (and
                    (exists (?s - cube_block)
                      (game-optional
                        (in_motion floor)
                      )
                    )
                  )
                )
                (game-conserved
                  (not
                    (in_motion bed)
                  )
                )
              )
            )
          )
        )
        (exists (?o - hexagonal_bin ?w - hexagonal_bin)
          (forall (?h ?l2 ?b ?h - (either game_object key_chain cd))
            (and
              (forall (?t - hexagonal_bin)
                (forall (?c - (either mug cd blue_cube_block) ?o - (either key_chain))
                  (and
                    (exists (?h - golfball ?c - shelf)
                      (game-conserved
                        (agent_holds ?t)
                      )
                    )
                    (and
                      (and
                        (game-optional
                          (exists (?b - drawer)
                            (not
                              (faces ?h ?b)
                            )
                          )
                        )
                      )
                      (exists (?s - hexagonal_bin)
                        (game-conserved
                          (on block ?w)
                        )
                      )
                    )
                  )
                )
              )
              (game-optional
                (not
                  (on top_drawer door)
                )
              )
            )
          )
        )
        (and
          (and
            (and
              (exists (?b - block ?o3 - hexagonal_bin)
                (exists (?r1 - doggie_bed)
                  (game-optional
                    (or
                      (and
                        (in_motion ?o3)
                        (in_motion agent)
                      )
                      (exists (?o - game_object)
                        (not
                          (agent_holds ?o)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
    (game-conserved
      (in_motion agent)
    )
  )
)
(:constraints
  (and
    (preference itemInClosedDrawerAtEnd
      (exists (?d - curved_wooden_ramp ?b2 - cube_block ?h - beachball)
        (then
          (once (in ?h ?h) )
          (once (equal_z_position ?h ?h) )
          (once (not (in_motion ?h) ) )
        )
      )
    )
    (preference pillowMovedToRoomCenter
      (exists (?o1 - dodgeball)
        (then
          (once (on agent ?o1) )
          (hold (in_motion ?o1) )
          (hold (in desk ?o1) )
        )
      )
    )
    (forall (?d - dodgeball)
      (and
        (preference blocksInPlace
          (exists (?h - hexagonal_bin ?h - hexagonal_bin)
            (then
              (hold (agent_holds ?d) )
              (once (on ?d ?d) )
              (once (adjacent ?h ?h) )
            )
          )
        )
        (preference matchingBuildingBuilt
          (exists (?c - hexagonal_bin ?p1 - hexagonal_bin)
            (then
              (hold-while (on desk ?p1) (on ?p1 room_center) )
              (once (not (not (on desk room_center) ) ) )
              (once (touch ?d bed) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= 2 (* (* 2 (count-shortest itemInClosedDrawerAtEnd) )
      1
    )
  )
)
(:scoring
  (count-once-per-objects pillowMovedToRoomCenter:doggie_bed)
)
)



(define (game game-id-402) (:domain many-objects-room-v1)
(:setup
  (forall (?o - (either doggie_bed laptop golfball teddy_bear))
    (and
      (forall (?r ?db ?c1 ?b4 ?r - dodgeball)
        (game-conserved
          (< (distance ?r agent) (distance ?o ?db))
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c6 - building ?l3 - wall)
      (and
        (preference throwAttempt
          (then
            (once (equal_z_position ?l3 ?l3) )
            (once (on ?l3 ?l3) )
            (once (in_motion ?l3) )
          )
        )
      )
    )
    (preference teddyBearHitsBall
      (exists (?o - dodgeball)
        (then
          (hold-while (not (in floor pink_dodgeball) ) (in_motion rug) )
          (hold (not (on ?o ?o) ) )
        )
      )
    )
  )
)
(:terminal
  (<= (* (+ (count throwAttempt:basketball:orange) (* (count teddyBearHitsBall:beachball) (= 3 (count-once-per-external-objects teddyBearHitsBall:blue_cube_block) 300 )
          (= (count teddyBearHitsBall:dodgeball) (* (count-once-per-objects teddyBearHitsBall) (* (count teddyBearHitsBall:beachball:yellow) (count teddyBearHitsBall:book) )
            )
          )
          (* (count teddyBearHitsBall:dodgeball) 3 )
          (count-once-per-objects throwAttempt:red)
        )
      )
      (external-forall-minimize
        (* 5 (count throwAttempt:alarm_clock) )
      )
    )
    (+ 15 (count teddyBearHitsBall:pink:doggie_bed) )
  )
)
(:scoring
  (* (- 4 )
    9
  )
)
)



(define (game game-id-403) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (forall (?o - ball ?g ?t - block)
        (exists (?d - hexagonal_bin ?p3 - cube_block)
          (forall (?d - cube_block)
            (game-conserved
              (on room_center ?g)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?l - hexagonal_bin)
      (and
        (preference castleBuilt
          (exists (?w - chair)
            (then
              (hold (or (in_motion ?l) ) )
              (once (agent_holds ?w) )
              (once (and (and (same_type ?w ?w) (not (not (touch ?l ?l) ) ) ) (and (or (in ?w east_sliding_door) (touch ?l ?l) (in_motion south_west_corner) ) (not (and (in_motion ?l) (not (touch agent ?l) ) (> 1 0.5) (in_motion ?l) ) ) ) ) )
            )
          )
        )
        (preference ballThrowAttempt
          (exists (?r2 - (either dodgeball credit_card ball))
            (then
              (once (not (in_motion ?r2) ) )
              (once (and (and (< (distance ?r2 ?l) 1) (agent_holds ?l) ) (in_motion ?r2) (adjacent_side green_golfball ?l ?l ?r2) ) )
              (once (not (in_motion ?r2) ) )
            )
          )
        )
      )
    )
    (forall (?t - chair)
      (and
        (preference throwBallToDoggieBed
          (exists (?c4 - doggie_bed)
            (at-end
              (in_motion agent)
            )
          )
        )
        (preference beachballOnRug
          (exists (?d - hexagonal_bin)
            (then
              (hold (not (not (and (exists (?b ?r ?db ?d - pillow ?b9 - game_object) (not (and (not (and (not (object_orientation ?d ?b9) ) ) ) (in bed ?b9) ) ) ) (and (and (and (in_motion ?t) (and (and (= (building_size agent) (distance ?d agent) 1) (not (adjacent_side upright ?d ?d) ) ) (faces desk ?d) (in ?d agent) ) ) (in_motion ?d) (and (same_object ?d left) (touch ?d pink_dodgeball) ) ) (exists (?c - game_object) (agent_holds rug) ) ) (< (distance ?t ?t) (distance upright floor)) ) ) ) )
              (once (open ?t) )
              (hold (in ?d ?d) )
            )
          )
        )
      )
    )
    (forall (?l2 ?o - (either blue_cube_block yellow basketball yellow_cube_block alarm_clock flat_block key_chain))
      (and
        (preference throwToBinFromDistance
          (at-end
            (and
              (not
                (adjacent ?l2 ?o)
              )
              (same_color ?l2 ?o)
            )
          )
        )
        (preference blockInTowerKnocked
          (exists (?d - cube_block ?h - dodgeball)
            (at-end
              (in_motion ?l2)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (and
      (>= (* 2 (count-once-per-objects beachballOnRug:wall:golfball) )
        (total-score)
      )
    )
  )
)
(:scoring
  (count throwBallToDoggieBed:basketball)
)
)



(define (game game-id-404) (:domain few-objects-room-v1)
(:setup
  (forall (?h - beachball ?l - dodgeball)
    (forall (?d - hexagonal_bin ?o - (either side_table dodgeball ball))
      (exists (?l2 - ball)
        (exists (?b - block ?b3 - dodgeball)
          (game-conserved
            (agent_holds ?l2)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?l - hexagonal_bin)
      (and
        (preference blocksInPlace
          (exists (?d - game_object ?h - cube_block)
            (at-end
              (agent_holds ?l)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (- 4 6 ) (total-score) )
  )
)
(:scoring
  (count-once-per-objects blocksInPlace:hexagonal_bin)
)
)



(define (game game-id-405) (:domain medium-objects-room-v1)
(:setup
  (exists (?c1 - cube_block ?ob - building)
    (and
      (and
        (game-conserved
          (same_type agent ?ob)
        )
      )
      (forall (?p2 - game_object ?s - cube_block)
        (game-conserved
          (and
            (not
              (in_motion ?ob)
            )
            (same_color ?ob ?ob)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrowAttempt
      (exists (?c - dodgeball ?w2 - golfball)
        (then
          (once (in ?w2 ?w2) )
          (once (in_motion ?w2) )
          (once (on rug ?w2) )
        )
      )
    )
    (preference throwToBinFromDistance
      (exists (?t - curved_wooden_ramp)
        (at-end
          (agent_holds ?t)
        )
      )
    )
  )
)
(:terminal
  (= 1 1 )
)
(:scoring
  (count-once-per-objects ballThrowAttempt:pink_dodgeball:dodgeball)
)
)



(define (game game-id-406) (:domain many-objects-room-v1)
(:setup
  (exists (?o ?c2 - block)
    (exists (?d - dodgeball)
      (game-optional
        (not
          (in_motion ?o)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectInBuilding
      (exists (?h - golfball)
        (then
          (hold (opposite ?h bed) )
          (once (agent_holds ?h) )
          (hold (or (and (exists (?b - teddy_bear) (agent_holds agent) ) (agent_holds bed) ) (on ?h ?h) (agent_holds ?h) ) )
        )
      )
    )
    (forall (?d - curved_wooden_ramp)
      (and
        (preference ballThrownFromObjectToBin
          (then
            (hold (adjacent_side ?d ?d ?d) )
            (once (<= (x_position ?d) (distance ?d ?d)) )
            (hold (agent_holds ?d) )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (= 4 (+ 8 3 )
    )
  )
)
(:scoring
  (* 1 10 )
)
)



(define (game game-id-407) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?c - hexagonal_bin)
      (exists (?d - shelf)
        (game-conserved
          (on back ?c)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference rollBallToBin
      (exists (?c - yellow_cube_block)
        (then
          (once (in ?c agent) )
          (once (not (same_type floor ?c) ) )
          (once (and (touch ?c ?c) (not (not (agent_holds ?c) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 30 (total-score) )
    (>= 2 2 )
    (> (total-score) (count-same-positions rollBallToBin:dodgeball) )
  )
)
(:scoring
  (count-once-per-objects rollBallToBin:hexagonal_bin)
)
)



(define (game game-id-408) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (not
      (agent_holds door)
    )
  )
)
(:constraints
  (and
    (forall (?l2 - (either desktop bed dodgeball))
      (and
        (preference smallItemsInPlace
          (exists (?b9 - hexagonal_bin)
            (then
              (once (and (same_color ?b9 ?l2) (not (and (on ?l2 ?l2) (adjacent ?b9 ?b9) ) ) ) )
              (once (agent_holds ?l2) )
              (once (forall (?c - dodgeball) (not (in ?l2 bed) ) ) )
            )
          )
        )
        (preference ballThrownToBin
          (exists (?w2 - (either cd golfball cylindrical_block))
            (then
              (once (on ?l2 ?w2) )
              (once (not (not (not (adjacent back agent) ) ) ) )
              (once (same_color ?w2 ?l2) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count ballThrownToBin:basketball) 10 )
    (count-increasing-measure ballThrownToBin:pink)
  )
)
(:scoring
  (count-once-per-objects ballThrownToBin:pyramid_block)
)
)



(define (game game-id-409) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?d - (either blue_cube_block) ?c4 - ball)
      (game-optional
        (and
          (adjacent_side ?c4 ?c4 ?c4 ?c4)
          (in ?c4 ?c4)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference pyramidBlockAtopTowerAtEnd
      (exists (?d - pillow)
        (then
          (once (and (not (agent_holds ?d) ) (adjacent room_center agent) (agent_holds ?d) (on agent ?d) ) )
          (once (agent_holds ?d) )
          (once (not (forall (?c - dodgeball ?b - dodgeball ?g - teddy_bear) (and (adjacent ?g ?g) (not (= 9 (distance bridge_block ?g)) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (<= (count pyramidBlockAtopTowerAtEnd:white) 5 )
)
(:scoring
  (* 15 7 )
)
)



(define (game game-id-410) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (forall (?b8 - wall)
        (game-conserved
          (in ?b8 ?b8)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectToBinOnFirstTry
      (exists (?d - (either wall pillow game_object))
        (then
          (once (in_motion ?d) )
          (once (equal_z_position ?d rug) )
          (once (in_motion ?d) )
        )
      )
    )
    (forall (?o2 - cube_block)
      (and
        (preference basketMadeFromRug
          (exists (?p - (either laptop pencil cd doggie_bed))
            (then
              (once (agent_holds ?p) )
              (once (in bed top_shelf) )
              (once (in ?p ?p) )
            )
          )
        )
        (preference ballThrownToRampToBed
          (exists (?b6 - cube_block)
            (then
              (once (agent_holds ?o2) )
              (hold (in_motion ?b6) )
              (hold-while (not (and (not (and (agent_holds ?b6) (is_setup_object desk) ) ) (agent_holds ?o2) ) ) (touch ?b6 ?o2) (agent_holds ?o2) )
              (hold (not (and (> (distance ?b6 ?b6) (distance_side ?o2 bed ?o2)) (on ?o2 ?b6) ) ) )
            )
          )
        )
      )
    )
    (forall (?h - dodgeball)
      (and
        (preference objectWithMatchingColor
          (exists (?o - shelf ?o1 - hexagonal_bin)
            (then
              (once (and (< 0.5 3) (not (on agent ?h) ) ) )
              (hold (and (exists (?w - (either desktop doggie_bed) ?o2 - beachball) (not (in_motion desk) ) ) (and (same_color ?h ?h) (not (agent_crouches ) ) ) ) )
              (once (not (in_motion ?o1) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects basketMadeFromRug:pyramid_block) 9 )
)
(:scoring
  (count ballThrownToRampToBed:golfball:white)
)
)



(define (game game-id-411) (:domain few-objects-room-v1)
(:setup
  (exists (?r - dodgeball)
    (and
      (game-optional
        (not
          (not
            (not
              (agent_holds agent)
            )
          )
        )
      )
      (game-optional
        (broken ?r)
      )
    )
  )
)
(:constraints
  (and
    (preference bookOnDeskShelf
      (exists (?d - curved_wooden_ramp)
        (then
          (once (and (in ?d ?d) (in_motion ?d) (and (agent_holds ?d) (agent_holds ?d) ) ) )
          (hold (not (not (and (and (and (on ?d room_center) (and (and (in green_golfball ?d) (and (in_motion ?d) (not (and (agent_holds ?d) (agent_holds ?d) ) ) (on ?d front) ) ) (and (and (and (and (not (and (agent_holds ?d) (exists (?w1 - hexagonal_bin) (agent_holds ?d) ) ) ) (not (not (in ?d ?d) ) ) ) (in_motion room_center) ) (and (agent_holds ?d) (in ?d ?d) ) ) (or (not (not (or (and (adjacent ?d ?d) (adjacent ?d ?d) ) (and (not (on ?d ?d) ) (and (exists (?h - ball) (and (and (and (and (agent_holds ?d) (agent_holds ?d) ) (and (not (agent_holds ?h) ) (agent_holds ?d) ) ) (agent_holds pillow) (and (not (exists (?b4 - (either yellow_cube_block dodgeball)) (not (in_motion ?h) ) ) ) (in_motion ?d) (agent_holds ?h) ) ) (adjacent rug desk) ) ) (on ?d ?d) ) ) ) ) ) (forall (?d - ball ?d - dodgeball ?h - pillow) (< 1 3) ) ) (in_motion ?d) ) ) ) (agent_holds ?d) ) (on ?d bed) ) ) ) )
          (once (and (in_motion ?d) (and (adjacent west_wall ?d) (in_motion ?d) ) ) )
        )
      )
    )
    (forall (?l2 - golfball)
      (and
        (preference throwAttempt
          (exists (?b - cube_block)
            (then
              (once (and (not (agent_holds ?l2) ) (not (agent_holds room_center) ) (in_motion ?b) ) )
              (once (< (distance ?b ?l2) 5) )
              (hold (not (agent_holds ?b) ) )
            )
          )
        )
        (preference pillowThrownToDoggieBed
          (exists (?l1 - red_pyramid_block ?c2 - hexagonal_bin ?p3 - pillow)
            (then
              (once (and (not (and (in_motion room_center) (in_motion ?p3) (and (not (not (and (touch ?l2 ?p3) (and (not (not (in_motion ?l2) ) ) (and (equal_z_position ?p3 ?p3) (> (distance ?l2 ?p3) (distance desk ?l2)) ) ) ) ) ) (in_motion bed) ) (< (distance ?p3 green_golfball) 1) ) ) (not (< (distance agent ?p3) 4) ) ) )
              (once (and (on ?l2 ?l2) (on agent ?p3) ) )
              (once (on agent ?p3) )
              (hold (agent_holds room_center) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (> 2 (= (+ 3 (count throwAttempt:green) )
      )
    )
    (>= 0 (* (count-once pillowThrownToDoggieBed:beachball) (* 2 10 (count-once-per-objects bookOnDeskShelf) )
      )
    )
  )
)
(:scoring
  (count throwAttempt:blue:dodgeball)
)
)



(define (game game-id-412) (:domain medium-objects-room-v1)
(:setup
  (forall (?b9 - (either desktop key_chain) ?c - (either yellow_cube_block desktop bridge_block) ?h - hexagonal_bin)
    (game-conserved
      (in ?h ?h)
    )
  )
)
(:constraints
  (and
    (forall (?o2 - hexagonal_bin ?g ?c - building)
      (and
        (preference dodgeballHitsBinBottom
          (exists (?d - building)
            (at-end
              (and
                (and
                  (in yellow ?c)
                  (touch ?d ?d)
                )
                (and
                  (in_motion ?g)
                  (adjacent door ?g)
                )
                (same_color ?d ?c)
                (and
                  (not
                    (in_motion ?g)
                  )
                  (agent_holds agent)
                )
              )
            )
          )
        )
      )
    )
    (forall (?t - dodgeball)
      (and
        (preference throwToBinFromOppositeWall
          (exists (?h - hexagonal_bin ?d - chair)
            (then
              (hold (equal_x_position ?t ?t) )
              (hold (agent_holds floor) )
              (once-measure (on agent room_center) (distance ?d desk) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* 3 2 )
    20
  )
)
(:scoring
  (count dodgeballHitsBinBottom:golfball:golfball)
)
)



(define (game game-id-413) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?c - color ?d2 - hexagonal_bin)
      (forall (?d - flat_block)
        (forall (?c - hexagonal_bin ?d - (either cd dodgeball))
          (game-conserved
            (in_motion ?d)
          )
        )
      )
    )
    (exists (?ob - wall ?h - block ?h ?s - shelf)
      (and
        (game-optional
          (not
            (in ?s ?s)
          )
        )
      )
    )
    (exists (?h - block)
      (game-conserved
        (and
          (in_motion ?h)
          (agent_holds ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToRampToBin
      (exists (?d - teddy_bear)
        (then
          (once (in_motion ?d) )
        )
      )
    )
  )
)
(:terminal
  (or
    (and
      (>= (* (count throwToRampToBin:pink:cube_block) (count throwToRampToBin:beachball) )
        (total-time)
      )
    )
    (> (count throwToRampToBin:basketball) (count-once-per-objects throwToRampToBin:beachball:pink_dodgeball) )
  )
)
(:scoring
  (external-forall-maximize
    (* 10 60 )
  )
)
)



(define (game game-id-414) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds door)
  )
)
(:constraints
  (and
    (preference blockFromRugToDesk
      (exists (?b - ball)
        (then
          (once (agent_holds ?b) )
          (hold (not (forall (?c - block) (adjacent bed ?c) ) ) )
          (hold (in_motion ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= (count blockFromRugToDesk:basketball) (* (* (+ 2 6 )
        (+ (* 1 (count blockFromRugToDesk:yellow) )
          (count blockFromRugToDesk:dodgeball:basketball)
        )
      )
      10
    )
  )
)
(:scoring
  (count blockFromRugToDesk:hexagonal_bin)
)
)



(define (game game-id-415) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (exists (?b1 - ball ?s - dodgeball)
      (agent_holds ?s)
    )
  )
)
(:constraints
  (and
    (preference ballThrowAttempt
      (exists (?b - hexagonal_bin ?d - (either bridge_block book))
        (then
          (once (in_motion ?d) )
          (once (not (and (adjacent ?d ?d) (agent_holds ?d) (not (adjacent door ?d) ) ) ) )
          (once (or (in_motion bed) (agent_holds ?d) ) )
        )
      )
    )
    (forall (?bl - hexagonal_bin)
      (and
        (preference redDodgeballThrownToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (not (not (and (same_type ?h ?bl) (agent_holds ?bl) ) ) ) )
              (once (agent_crouches ) )
              (once (agent_holds ?bl) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (not
      (and
        (>= (count redDodgeballThrownToBin:dodgeball) (count-total redDodgeballThrownToBin:triangle_block) )
        (or
          (>= 9 (* (+ (/ 4 (- 1 )
                )
                (count-same-positions ballThrowAttempt:dodgeball)
                (* 6 50 )
              )
              4
              (count redDodgeballThrownToBin:hexagonal_bin:pyramid_block)
            )
          )
          (>= (count-shortest redDodgeballThrownToBin:brown:doggie_bed:hexagonal_bin) (count ballThrowAttempt:basketball) )
          (and
            (< (count-shortest ballThrowAttempt:doggie_bed) 3 )
            (>= (count-once-per-objects ballThrowAttempt:blue_dodgeball) (count redDodgeballThrownToBin:beachball:dodgeball) )
            (> (total-score) (count ballThrowAttempt:golfball:beachball:basketball) )
          )
          (>= (count-once ballThrowAttempt:beachball) (total-time) )
        )
        (< 5 2 )
      )
    )
    (or
      (>= (count ballThrowAttempt:orange:beachball) 0 )
      (>= (count-once-per-objects redDodgeballThrownToBin:beachball:beachball) (total-score) )
    )
    (>= (total-time) (count redDodgeballThrownToBin:alarm_clock:green) )
  )
)
(:scoring
  (+ 6 2 )
)
)



(define (game game-id-416) (:domain few-objects-room-v1)
(:setup
  (exists (?l2 - curved_wooden_ramp)
    (game-conserved
      (agent_holds ?l2)
    )
  )
)
(:constraints
  (and
    (forall (?c2 - hexagonal_bin)
      (and
        (preference ballThrownToRampToBed
          (then
            (once (not (not (not (faces green_golfball ?c2) ) ) ) )
            (once (in agent ?c2) )
            (hold (or (not (in_motion ?c2) ) (same_color ?c2 ?c2) ) )
          )
        )
      )
    )
    (forall (?o2 - curved_wooden_ramp ?h - red_dodgeball)
      (and
        (preference smallObjectThrownToBed
          (exists (?b3 - bridge_block ?f - shelf ?c1 - hexagonal_bin)
            (at-end
              (not
                (and
                  (adjacent ?h ?c1)
                  (in_motion ?c1)
                )
              )
            )
          )
        )
        (preference ballOnBedAtEnd
          (exists (?h ?c ?b2 - teddy_bear)
            (then
              (once (not (in_motion ?b2) ) )
              (hold (or (in ?b2 pillow) (and (equal_x_position ?h ?c) (in ?c ?b2) ) ) )
              (once (equal_z_position ?b2 ?c) )
            )
          )
        )
      )
    )
    (preference throwGolfballToBin
      (exists (?t1 - dodgeball)
        (then
          (once (and (and (in_motion ?t1) (on room_center ?t1) ) (not (in_motion ?t1) ) ) )
          (once (exists (?d - hexagonal_bin) (agent_holds ?t1) ) )
          (hold (in_motion agent) )
        )
      )
    )
  )
)
(:terminal
  (>= (- (* (+ (count-once-per-objects ballOnBedAtEnd:yellow) 2 )
        (count throwGolfballToBin:beachball)
      )
    )
    (count throwGolfballToBin:basketball)
  )
)
(:scoring
  (* (count-once-per-objects throwGolfballToBin:doggie_bed) (* (count ballOnBedAtEnd:green) 10 )
  )
)
)



(define (game game-id-417) (:domain many-objects-room-v1)
(:setup
  (forall (?c3 - desk_shelf)
    (game-conserved
      (rug_color_under door ?c3)
    )
  )
)
(:constraints
  (and
    (preference throwBallToDoggieBed
      (exists (?b ?c - game_object)
        (then
          (hold (not (in ?c ?b) ) )
          (once (or (not (and (or (not (same_object desk ?c) ) (adjacent ?c ?b) (touch ?c ?c) ) (agent_holds ?c) (and (on ?b ?c) (and (touch ?b ?b) (agent_holds ?c) ) (same_type rug ?c) ) ) ) (on ?b ?c) ) )
          (once (not (agent_holds ?b) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 2 15 )
    (* (count-overlapping throwBallToDoggieBed:basketball) (= 3 1 )
    )
  )
)
(:scoring
  (count throwBallToDoggieBed:dodgeball)
)
)



(define (game game-id-418) (:domain medium-objects-room-v1)
(:setup
  (exists (?db - curved_wooden_ramp ?c - cube_block ?b - shelf)
    (game-optional
      (game_over )
    )
  )
)
(:constraints
  (and
    (preference ballThrownMissesEverything
      (exists (?l3 - (either pyramid_block pyramid_block dodgeball) ?d - (either beachball credit_card))
        (then
          (once (not (or (not (in ?d desk) ) (or (and (adjacent pink agent) (not (not (not (agent_holds ?d) ) ) ) ) (< 1 8) ) ) ) )
          (hold (or (exists (?d - book ?p2 - shelf) (on ?p2 side_table) ) (agent_holds ?d) ) )
          (once (agent_holds room_center) )
        )
      )
    )
    (preference dodgeballHitsBinBottom
      (exists (?o2 - wall)
        (then
          (hold-while (agent_holds ?o2) (and (not (and (is_setup_object ?o2) (agent_holds ?o2) ) ) (exists (?p1 - cube_block) (object_orientation ?o2 ?o2) ) (adjacent ?o2 front) ) (or (rug_color_under ?o2 ?o2) (on ?o2 agent) ) )
          (hold (not (agent_holds ?o2) ) )
          (once (and (and (in_motion ?o2) (agent_holds ?o2) (and (touch agent ?o2) (adjacent ?o2 west_wall) ) ) (not (not (and (> (distance ?o2 desk) (distance ?o2 ?o2)) (in_motion ?o2) (and (on ?o2 blue) (adjacent ?o2 bed) ) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (> (total-score) (count ballThrownMissesEverything:green) )
)
(:scoring
  (count-overlapping dodgeballHitsBinBottom:beachball)
)
)



(define (game game-id-419) (:domain medium-objects-room-v1)
(:setup
  (exists (?c - dodgeball)
    (exists (?b5 - game_object)
      (game-optional
        (in_motion ?c)
      )
    )
  )
)
(:constraints
  (and
    (preference dropAttempt
      (exists (?l - building ?c - pillow ?t - block ?h - cube_block)
        (then
          (once (agent_holds ?h) )
          (once (agent_holds ?h) )
          (once (and (not (in_motion ?h) ) (in_motion ?h) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (- (count-once dropAttempt:beachball:basketball) )
  )
)
(:scoring
  (/
    4
    50
  )
)
)



(define (game game-id-420) (:domain medium-objects-room-v1)
(:setup
  (exists (?c - cube_block)
    (forall (?tb - hexagonal_bin ?w - curved_wooden_ramp)
      (and
        (game-conserved
          (not
            (in_motion ?w)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - shelf ?b - triangular_ramp)
      (and
        (preference itemsTurnedOff
          (exists (?b - cube_block)
            (then
              (hold (and (in_motion ?b) (agent_holds ?b) ) )
              (once (is_setup_object ?b) )
              (hold (game_over ) )
            )
          )
        )
        (preference throwAttempt
          (exists (?b - hexagonal_bin)
            (then
              (once (in ?b ?b) )
              (hold (adjacent_side ?b agent bed) )
              (hold (not (touch bed upside_down) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (= (total-time) 1 )
)
(:scoring
  (* (count itemsTurnedOff) (* (+ 2 1 )
      10
    )
  )
)
)



(define (game game-id-421) (:domain few-objects-room-v1)
(:setup
  (exists (?b - ball)
    (game-conserved
      (rug_color_under desk ?b)
    )
  )
)
(:constraints
  (and
    (preference dodgeballFromBlockToBin
      (exists (?b - curved_wooden_ramp)
        (at-end
          (in_motion ?b)
        )
      )
    )
    (preference agentLeavesDogbedOrNoMoreBalls
      (exists (?d - building)
        (then
          (once-measure (and (same_color ?d desk) (and (agent_holds main_light_switch) (above ?d ?d) ) ) (distance ?d room_center) )
          (once (and (agent_holds ?d) (and (not (in agent south_west_corner) ) (is_setup_object ?d) ) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (or
        (>= (- 3 )
          (* 3 15 )
        )
        (>= 1 (total-time) )
      )
    )
    (>= (total-time) 10 )
  )
)
(:scoring
  (count-once-per-objects agentLeavesDogbedOrNoMoreBalls:beachball)
)
)



(define (game game-id-422) (:domain many-objects-room-v1)
(:setup
  (exists (?b - hexagonal_bin)
    (game-optional
      (agent_holds ?b)
    )
  )
)
(:constraints
  (and
    (preference pinkObjectMovedToRoomCenter
      (exists (?r1 ?b9 ?x - cube_block)
        (at-end
          (= (distance_side ?x side_table ?r1) (distance ?b9 ?r1))
        )
      )
    )
    (preference golfballLandsInBinThroughRamp
      (exists (?l3 ?h - dodgeball)
        (at-end
          (not
            (< 9 6)
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (or
        (> 5 (* (* (+ 5 (count golfballLandsInBinThroughRamp:basketball:alarm_clock:red) )
              (count-once pinkObjectMovedToRoomCenter:red)
              2
            )
            12
          )
        )
        (>= (* 3 (* (* (* (count-once-per-objects golfballLandsInBinThroughRamp:beachball:rug) 6 )
                (+ 5 (count-once-per-objects pinkObjectMovedToRoomCenter:beachball) )
              )
              3
            )
          )
          (count-once-per-objects golfballLandsInBinThroughRamp:cylindrical_block)
        )
        (or
          (>= 6 1 )
          (and
            (>= 1 (count-once-per-objects golfballLandsInBinThroughRamp:dodgeball:cube_block) )
            (or
              (or
                (>= (+ 7 (* (count-once-per-objects golfballLandsInBinThroughRamp:triangle_block) )
                  )
                  (total-score)
                )
                (>= (count-once-per-external-objects pinkObjectMovedToRoomCenter:blue_dodgeball:yellow:dodgeball) (total-score) )
              )
            )
            (and
              (>= (* (* 3 (count-longest golfballLandsInBinThroughRamp:dodgeball) )
                  (+ 30 (count-unique-positions golfballLandsInBinThroughRamp:cylindrical_block) )
                )
                (+ (count-increasing-measure pinkObjectMovedToRoomCenter:red) 1 (count-once-per-objects golfballLandsInBinThroughRamp:blue_pyramid_block) (+ (* (external-forall-maximize (count pinkObjectMovedToRoomCenter:golfball) ) (count pinkObjectMovedToRoomCenter:side_table) (* (count-once golfballLandsInBinThroughRamp:basketball) (= 3 10 )
                      )
                    )
                    (count-once-per-objects pinkObjectMovedToRoomCenter:golfball)
                  )
                )
              )
            )
          )
        )
        (>= (+ (* 7 (* (count-shortest pinkObjectMovedToRoomCenter:hexagonal_bin:blue_dodgeball) (count-once pinkObjectMovedToRoomCenter:dodgeball) )
            )
            (count pinkObjectMovedToRoomCenter:green:dodgeball)
          )
          2
        )
      )
      (>= 1 (count-once-per-objects pinkObjectMovedToRoomCenter:hexagonal_bin) )
      (= 15 (- (count pinkObjectMovedToRoomCenter:basketball) )
      )
    )
  )
)
(:scoring
  (count-once golfballLandsInBinThroughRamp:beachball)
)
)



(define (game game-id-423) (:domain many-objects-room-v1)
(:setup
  (exists (?h - dodgeball)
    (and
      (game-optional
        (and
          (not
            (adjacent ?h ?h)
          )
          (in ?h ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?s - dodgeball ?b3 - hexagonal_bin)
        (then
          (hold (in ?b3 ?b3) )
          (once (not (and (agent_holds ?b3) (not (in ?b3 ?b3) ) ) ) )
          (once (< 0.5 (building_size ?b3)) )
        )
      )
    )
  )
)
(:terminal
  (>= (external-forall-maximize (+ (* 4 3 (count throwBallToBin:bed) )
        5
      )
    )
    4
  )
)
(:scoring
  (count throwBallToBin:brown:blue_dodgeball)
)
)



(define (game game-id-424) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (in_motion bed)
  )
)
(:constraints
  (and
    (preference ballThrownFromObjectToBin
      (exists (?d - (either blue_cube_block golfball dodgeball))
        (then
          (once (and (touch front ?d) (not (in_motion ?d) ) ) )
          (once (not (in_motion ?d) ) )
          (once (in_motion ?d) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (count ballThrownFromObjectToBin:basketball) 5 (* 9 (* 6 (- (count-once-per-objects ballThrownFromObjectToBin:basketball) )
          2
          (count-once ballThrownFromObjectToBin:beachball:pink)
          (count ballThrownFromObjectToBin:blue_pyramid_block:purple)
          (count-once-per-external-objects ballThrownFromObjectToBin:yellow)
        )
      )
    )
    (count-once-per-objects ballThrownFromObjectToBin:basketball:doggie_bed)
  )
)
(:scoring
  (count ballThrownFromObjectToBin:green)
)
)



(define (game game-id-425) (:domain few-objects-room-v1)
(:setup
  (forall (?p2 - curved_wooden_ramp)
    (game-conserved
      (and
        (not
          (not
            (not
              (and
                (not
                  (and
                    (in_motion ?p2)
                    (in_motion ?p2)
                    (rug_color_under ?p2 ?p2)
                    (agent_holds room_center)
                  )
                )
                (not
                  (agent_holds ?p2)
                )
                (and
                  (and
                    (not
                      (in ?p2 ?p2)
                    )
                    (and
                      (< (distance rug ball) (distance_side ?p2 ?p2 bed))
                      (touch ?p2 bed)
                    )
                  )
                  (agent_holds ?p2)
                )
              )
            )
          )
        )
        (and
          (not
            (on ?p2 ?p2)
          )
          (on ?p2 ?p2)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?g - game_object ?l2 - hexagonal_bin ?b - beachball)
      (and
        (preference teddyBearLandsInBin
          (exists (?d - hexagonal_bin ?d - (either desktop lamp cylindrical_block))
            (then
              (once (on ?d ?b) )
              (once (in_motion ?d) )
              (hold (or (adjacent_side ?d ?d ?d) (and (rug_color_under ?b ?d) (and (in_motion pink) (and (on ?d ?b) (in_motion ?b) ) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (<= 2 (external-forall-minimize (count teddyBearLandsInBin:yellow_cube_block) ) )
    (>= (* (count-once teddyBearLandsInBin:red:pink) 8 )
      (* (* (* (* 5 (count teddyBearLandsInBin:dodgeball:beachball) (* (count teddyBearLandsInBin:yellow) 10 )
              30
              (count-once-per-objects teddyBearLandsInBin:golfball)
              10
              (count teddyBearLandsInBin:blue)
              4
              (- (count-once-per-objects teddyBearLandsInBin:beachball:green) )
              (* 10 (count-once-per-objects teddyBearLandsInBin:beachball) )
              0
              (- (+ 3 5 )
              )
            )
            (* 50 (* 5 (* (* (* 3 7 )
                    (count-measure teddyBearLandsInBin:blue_pyramid_block)
                  )
                  (+ (count-total teddyBearLandsInBin:cylindrical_block) 15 )
                )
              )
            )
          )
          (count-once-per-objects teddyBearLandsInBin:dodgeball:beachball)
        )
        (- 10 )
      )
    )
  )
)
(:scoring
  (count teddyBearLandsInBin:green:beachball:alarm_clock)
)
)



(define (game game-id-426) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?c5 - wall ?d - hexagonal_bin)
      (exists (?p1 - shelf)
        (exists (?h - hexagonal_bin)
          (exists (?h - dodgeball)
            (and
              (and
                (and
                  (forall (?b - hexagonal_bin ?l - hexagonal_bin)
                    (and
                      (game-optional
                        (and
                          (not
                            (in_motion ?d)
                          )
                          (and
                            (adjacent ?h ?l)
                            (adjacent_side room_center ?d ?h ?p1)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballsInPlace
      (exists (?c4 - hexagonal_bin)
        (then
          (once (agent_holds ?c4) )
          (once (on desk ?c4) )
          (once (or (exists (?c1 - dodgeball) (> (distance ?c4 top_shelf) (distance ?c4 ?c4)) ) (opposite ?c4 desk) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (= 180 (count-once-per-objects dodgeballsInPlace:blue_dodgeball) )
      (total-score)
    )
  )
)
(:scoring
  (* 3 (count-once-per-objects dodgeballsInPlace:yellow) )
)
)



(define (game game-id-427) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (and
        (exists (?g - ball ?r - ball)
          (game-conserved
            (and
              (and
                (agent_holds ?r)
                (and
                  (in_motion ?r)
                  (in_motion ?r)
                  (in ?r ?r)
                )
              )
              (and
                (and
                  (not
                    (object_orientation ?r ?r)
                  )
                  (and
                    (not
                      (in_motion ?r)
                    )
                    (on ?r agent)
                  )
                  (exists (?l1 ?db - dodgeball ?d2 - cube_block)
                    (agent_holds ?r)
                  )
                )
                (toggled_on ?r)
              )
            )
          )
        )
        (exists (?o3 - wall)
          (not
            (game-conserved
              (not
                (agent_crouches )
              )
            )
          )
        )
      )
    )
    (exists (?l1 - ball ?d - red_dodgeball)
      (exists (?h - hexagonal_bin ?g - hexagonal_bin)
        (game-conserved
          (touch ?g ?d)
        )
      )
    )
    (game-conserved
      (in_motion back)
    )
  )
)
(:constraints
  (and
    (forall (?c6 - hexagonal_bin)
      (and
        (preference ballToBinFromBed
          (exists (?h - dodgeball)
            (then
              (hold (and (adjacent ?c6 rug) (< 8 (distance ?h ?h)) (agent_holds ?h) (adjacent desk ?h) ) )
              (hold (in_motion agent) )
              (once (not (same_color ?h ?h) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects ballToBinFromBed:pyramid_block) 2 )
)
(:scoring
  (count-once-per-objects ballToBinFromBed:pink_dodgeball:purple)
)
)



(define (game game-id-428) (:domain medium-objects-room-v1)
(:setup
  (exists (?b - hexagonal_bin)
    (and
      (exists (?l - hexagonal_bin ?r2 - (either basketball hexagonal_bin floor))
        (game-conserved
          (and
            (is_setup_object ?r2)
            (> 7 1)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - cube_block)
      (and
        (preference cubeThrownToBin
          (exists (?l - teddy_bear)
            (at-end
              (exists (?w1 - (either book))
                (in_motion ?l)
              )
            )
          )
        )
      )
    )
    (forall (?c - shelf)
      (and
        (preference bigObjectThrownToBed
          (exists (?w2 - building)
            (then
              (hold (>= (distance_side pink_dodgeball ?c ?c) 0.5) )
              (hold (on ?w2 ?c) )
              (hold-while (< (building_size ?w2) 5) (and (exists (?h ?b6 - beachball) (in_motion ?c) ) (in ?w2 agent) ) (object_orientation ?c ?c) )
              (hold (and (and (agent_holds ?w2) (agent_holds ?w2) ) (agent_holds ?w2) ) )
              (hold (and (or (same_type ?c door) ) (game_over ) (and (and (not (and (not (adjacent agent ?w2) ) (agent_holds ?w2) (not (and (in_motion room_center) (< 1 (distance ?c ?c)) ) ) ) ) (on ?c ?w2) ) (or (and (touch ?c ?w2) (and (not (on bridge_block ?c) ) (< (x_position ?c) (distance ?w2 ?c)) ) ) (not (agent_holds ?c) ) (on ?w2 ?w2) ) ) ) )
            )
          )
        )
      )
    )
    (forall (?d - cube_block ?h - wall)
      (and
        (preference ballKnocksTeddy
          (exists (?o5 - dodgeball)
            (then
              (hold (and (agent_holds ?h) (< (distance ?h ?o5) (x_position ?o5)) (on ?h ?h) ) )
              (hold (in_motion ?o5) )
              (once (and (and (and (agent_holds ?o5) (not (on ?h ?h) ) (< (x_position ?o5) 1) (in ?o5 ?o5) ) (not (agent_holds ?o5) ) ) (in ?o5 ?o5) (on door agent) (touch ?o5 ?o5) (same_type agent ?o5) (in_motion ?h) (and (is_setup_object ?h) (and (on ?o5 ?o5) (agent_holds room_center) ) ) (and (adjacent floor ?h) (touch ?o5 ?h) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (<= 4 (count ballKnocksTeddy:cylindrical_block:alarm_clock) )
  )
)
(:scoring
  (count bigObjectThrownToBed:triangle_block)
)
)



(define (game game-id-429) (:domain many-objects-room-v1)
(:setup
  (exists (?b - game_object)
    (game-conserved
      (in_motion bed)
    )
  )
)
(:constraints
  (and
    (preference objectLandsInBin
      (exists (?o5 - yellow_pyramid_block)
        (then
          (once (in_motion agent) )
          (hold (not (not (between ?o5 right ?o5) ) ) )
          (hold (and (exists (?d ?c - curved_wooden_ramp) (not (agent_holds ?o5) ) ) (in desk room_center) (and (agent_holds ?o5) (in_motion ?o5) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (< (total-time) 3 )
    (or
      (and
        (or
          (>= (count objectLandsInBin:dodgeball:basketball) (total-score) )
          (>= (count-once-per-objects objectLandsInBin:cylindrical_block) (count objectLandsInBin:pink_dodgeball:pink_dodgeball) )
        )
        (> (count objectLandsInBin:yellow) (count objectLandsInBin:yellow) )
      )
      (>= (count-once-per-objects objectLandsInBin:basketball) 1 )
    )
  )
)
(:scoring
  (count-once-per-objects objectLandsInBin:side_table)
)
)



(define (game game-id-430) (:domain few-objects-room-v1)
(:setup
  (forall (?b - (either desktop curved_wooden_ramp pyramid_block) ?d - chair)
    (and
      (game-conserved
        (in ?d ?d)
      )
      (forall (?t - blinds)
        (game-conserved
          (< (distance ?t ?d) (distance ?d ?d))
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - teddy_bear)
      (and
        (preference itemInClosedDrawerAtEnd
          (exists (?b - shelf)
            (then
              (hold (and (exists (?g - hexagonal_bin) (and (on ?g ?b) (in_motion ?b) ) ) (in ?b green) ) )
              (once (agent_holds ?d) )
              (hold (< (distance ?d ?b) (distance agent front)) )
            )
          )
        )
      )
    )
    (preference bigObjectThrownToBed
      (exists (?h - hexagonal_bin ?o - game_object)
        (then
          (hold (agent_holds ?o) )
          (once (in_motion ?o) )
          (once (in_motion ?o) )
        )
      )
    )
    (preference ballThrownToRug
      (exists (?ob - hexagonal_bin)
        (then
          (hold-while (not (< 2 3) ) (in_motion ?ob) (in ?ob ?ob) (and (< (distance ?ob agent) (distance ?ob ?ob)) (= (distance ?ob ?ob) 6) ) )
          (hold (adjacent ?ob ?ob) )
          (hold (agent_holds ?ob) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (* (+ 5 (* 6 (count itemInClosedDrawerAtEnd:book:beachball) )
        )
      )
      15
    )
    0
  )
)
(:scoring
  (* (* 6 (count-same-positions itemInClosedDrawerAtEnd:pink) 10 )
    (-
      1
      (count-once itemInClosedDrawerAtEnd:green:golfball)
    )
  )
)
)



(define (game game-id-431) (:domain medium-objects-room-v1)
(:setup
  (forall (?x - teddy_bear ?l4 - hexagonal_bin)
    (game-conserved
      (object_orientation ?l4 ?l4)
    )
  )
)
(:constraints
  (and
    (preference dodgeballAndBasketballInBin
      (exists (?h - color ?t - dodgeball)
        (then
          (once (agent_holds bed) )
          (hold (agent_holds ?t) )
          (hold (in_motion ?t) )
        )
      )
    )
  )
)
(:terminal
  (<= (* (external-forall-minimize (count-once-per-objects dodgeballAndBasketballInBin:blue_dodgeball) ) (count-longest dodgeballAndBasketballInBin:book:green) 5 (count dodgeballAndBasketballInBin:cube_block) )
    10
  )
)
(:scoring
  (+ 2 15 (+ (* 10 10 )
      (* (= (+ 2 (* (count dodgeballAndBasketballInBin:top_drawer) 3 )
          )
        )
        (count dodgeballAndBasketballInBin:green)
        6
      )
    )
  )
)
)



(define (game game-id-432) (:domain few-objects-room-v1)
(:setup
  (forall (?b - cube_block)
    (and
      (not
        (and
          (game-optional
            (not
              (and
                (agent_holds ?b)
                (on ?b agent)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectToBinOnFirstTry
      (exists (?db - (either cube_block alarm_clock teddy_bear) ?c - blue_cube_block ?b2 - chair)
        (then
          (once (touch ?b2 ?b2) )
          (once (equal_x_position ?b2 ?b2) )
          (hold (= (distance ?b2 ?b2) (distance ?b2 ?b2)) )
        )
      )
    )
    (forall (?g - curved_wooden_ramp ?s - (either dodgeball cellphone))
      (and
        (preference tanObjectMovedToRoomCenter
          (exists (?d - (either alarm_clock cellphone) ?h - dodgeball)
            (then
              (hold (not (agent_holds agent) ) )
              (hold (and (and (not (adjacent ?h door) ) (not (and (not (on ?s agent) ) (agent_holds ?h) ) ) ) (agent_holds ?s) ) )
              (once (and (and (not (and (adjacent ?h ?h) (agent_holds ?s) ) ) (agent_holds ?h) ) (adjacent ?h ?h) (and (agent_holds ?h) (not (in ?s ?h) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* 3 6 )
    (total-score)
  )
)
(:scoring
  (* 4 2 )
)
)



(define (game game-id-433) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (> 2 10)
  )
)
(:constraints
  (and
    (preference golfballInBinFromPillow
      (exists (?c3 - game_object)
        (at-end
          (in ?c3 ?c3)
        )
      )
    )
    (preference ballThrownOntoTarget
      (exists (?d - cube_block ?s - cube_block)
        (then
          (hold (and (not (in_motion floor) ) (and (and (same_color ?s ?s) (and (agent_holds ?s) (and (and (in_motion ?s) (not (and (not (> 1 (distance desk ?s)) ) (touch ?s ?s) ) ) (and (= (distance ?s ?s) 1) (agent_holds upright) ) ) (in ?s ?s) ) ) (agent_holds ?s) ) (object_orientation ?s ?s) ) ) )
          (once (and (not (agent_holds ?s) ) (broken ?s) ) )
          (hold (agent_holds ?s) )
        )
      )
    )
  )
)
(:terminal
  (or
    (< 5 (count-overlapping ballThrownOntoTarget:rug) )
    (not
      (> (+ (count ballThrownOntoTarget:golfball) 10 )
        (+ 3 50 )
      )
    )
  )
)
(:scoring
  (+ (count golfballInBinFromPillow:yellow_cube_block:hexagonal_bin) (count golfballInBinFromPillow:side_table) )
)
)



(define (game game-id-434) (:domain few-objects-room-v1)
(:setup
  (exists (?b - wall)
    (forall (?w - ball ?l - cube_block)
      (game-optional
        (and
          (agent_holds ?b)
          (not
            (and
              (and
                (not
                  (same_color ?l ?l)
                )
                (on ?l bottom_shelf)
              )
              (not
                (in ?l ?l)
              )
              (and
                (agent_holds agent)
                (in_motion ?l)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToBin
      (exists (?d - chair)
        (then
          (once (in_motion green_golfball) )
          (once (and (between ?d ?d ?d) (agent_holds ?d) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (total-score) (total-score) )
  )
)
(:scoring
  (count throwToBin:yellow)
)
)



(define (game game-id-435) (:domain few-objects-room-v1)
(:setup
  (exists (?p3 - beachball ?c ?o2 - dodgeball)
    (forall (?w1 - cube_block ?h - hexagonal_bin)
      (and
        (game-optional
          (and
            (agent_holds ?o2)
            (agent_holds ?o2)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballThrownToBinFromDesk
      (exists (?c6 - block ?h - ball)
        (then
          (hold (and (not (and (and (agent_holds ?h) (rug_color_under desk floor) ) (and (< 2 10) (same_type ?h ?h) (adjacent_side ?h ?h ?h) ) ) ) (in_motion ?h) ) )
          (hold-while (not (in_motion ?h) ) (and (agent_holds left) (not (in ?h ?h) ) ) )
          (once (adjacent_side ?h upright ?h ?h) )
        )
      )
    )
    (preference ballThrownToBin
      (exists (?o - (either floor cylindrical_block))
        (then
          (hold (in_motion ?o) )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (total-score) (* 5 )
    )
    (or
      (and
        (>= (total-time) (total-score) )
      )
      (> 8 (total-score) )
    )
    (< (= 5 2 )
      (total-time)
    )
    (>= (= 2 5 )
      6
    )
  )
)
(:scoring
  (count ballThrownToBin:yellow)
)
)



(define (game game-id-436) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (in_motion pink)
  )
)
(:constraints
  (and
    (preference ballDroppedInBin
      (exists (?b5 - hexagonal_bin)
        (then
          (once (agent_holds ?b5) )
          (hold (agent_holds ?b5) )
          (once (rug_color_under ?b5 ?b5) )
          (hold (agent_holds ?b5) )
        )
      )
    )
    (forall (?l2 - ball)
      (and
        (preference teddyBearLandsInBin
          (exists (?h - (either block dodgeball))
            (then
              (once (< 4 5) )
              (once (on ?l2 ?l2) )
            )
          )
        )
        (preference blindsOpened
          (exists (?d - (either laptop cube_block cd))
            (then
              (hold (and (in_motion ?d) (not (in ?l2 ?l2) ) ) )
              (once (exists (?l2 - hexagonal_bin) (on agent ?l2) ) )
              (once (in_motion ?l2) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (total-score) )
)
(:scoring
  (- (count-overlapping ballDroppedInBin:blue_dodgeball:blue_dodgeball) )
)
)



(define (game game-id-437) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (game-conserved
        (in_motion side_table)
      )
    )
  )
)
(:constraints
  (and
    (preference bookOnDeskShelf
      (exists (?r1 - (either yellow yellow_cube_block))
        (then
          (once (not (opposite ?r1 ?r1) ) )
          (once (and (on ?r1 agent) (< 9 (distance ?r1 ?r1)) ) )
          (hold-while (> 4 1) (on bed ?r1) )
        )
      )
    )
    (preference failedThrowAttempt
      (exists (?c - (either yellow_cube_block pen))
        (at-end
          (toggled_on ?c)
        )
      )
    )
    (forall (?s - ball)
      (and
        (preference ballThrowAttempt
          (exists (?h - game_object)
            (then
              (once (and (in ?s ?h) (= (building_size ?s)) (< (distance ?h ?h) (x_position agent)) ) )
              (once (touch blinds agent) )
            )
          )
        )
        (preference woodenBlockMovedFromRugToDesk
          (exists (?c - golfball)
            (then
              (once (agent_holds ?c) )
              (once (in bed ?c) )
              (once (< 3 0) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) 3 )
)
(:scoring
  (count-once-per-objects failedThrowAttempt:orange)
)
)



(define (game game-id-438) (:domain few-objects-room-v1)
(:setup
  (forall (?o1 - cube_block)
    (and
      (not
        (game-optional
          (not
            (agent_holds ?o1)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttemptFromDoor
      (exists (?s - block ?s - dodgeball)
        (then
          (once (in_motion ?s) )
          (hold (not (on ?s ?s) ) )
          (once (and (on ?s rug) (in_motion ?s) (exists (?o - building ?f - building ?h - building) (or (in desk ?s) (forall (?c - game_object) (in_motion ?c) ) ) ) ) )
          (hold (not (and (on ?s ?s) (agent_holds ?s) ) ) )
          (hold (not (agent_holds ?s) ) )
        )
      )
    )
  )
)
(:terminal
  (> (count-once-per-external-objects throwAttemptFromDoor:red:yellow) (* (- (+ (count-shortest throwAttemptFromDoor) (<= 1 2 )
          (count throwAttemptFromDoor:red)
          0
          7
        )
      )
      (* (* (- (count-shortest throwAttemptFromDoor:basketball) )
          (* (- 10 (count throwAttemptFromDoor:basketball) ) 16 )
        )
        3
      )
    )
  )
)
(:scoring
  (count-same-positions throwAttemptFromDoor:doggie_bed)
)
)



(define (game game-id-439) (:domain medium-objects-room-v1)
(:setup
  (forall (?c1 - cube_block ?b2 - watch)
    (forall (?b5 - (either pen golfball golfball) ?d2 - ball ?h - hexagonal_bin)
      (game-optional
        (and
          (same_object ?h ?b2)
          (not
            (> 5 (distance ?b2 ?b2))
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?d - dodgeball)
        (then
          (hold (and (in ?d ?d) (not (not (agent_holds agent) ) ) ) )
          (once (agent_holds pink) )
          (once (in_motion ?d) )
          (once (in_motion east_sliding_door) )
          (once (agent_holds ?d) )
        )
      )
    )
    (forall (?w1 - dodgeball)
      (and
        (preference bigObjectThrownToBed
          (exists (?h - hexagonal_bin)
            (then
              (once (agent_holds front) )
              (once (on ?h ?h) )
              (once (in_motion drawer) )
              (once (in_motion desk) )
            )
          )
        )
        (preference itemsTurnedOff
          (then
            (hold (agent_holds ?w1) )
            (once (object_orientation ?w1 ?w1) )
            (once (= 10 1) )
          )
        )
      )
    )
  )
)
(:terminal
  (> (count-once-per-external-objects throwBallToBin:pink) (total-score) )
)
(:scoring
  (count throwBallToBin:dodgeball:pink_dodgeball)
)
)



(define (game game-id-440) (:domain many-objects-room-v1)
(:setup
  (not
    (forall (?f - ball)
      (game-conserved
        (not
          (same_color ?f ?f)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballFromDeskToTarget
      (exists (?c - curved_wooden_ramp ?o - ball)
        (then
          (hold (on ?o ?o) )
          (once (and (or (not (not (and (same_type ?o front_left_corner) (exists (?b3 - wall ?h - drawer ?c - curved_wooden_ramp ?c5 - pillow) (in_motion ?o) ) ) ) ) (agent_holds ?o) (adjacent ?o ?o) ) (<= 1 (distance ?o ?o)) ) )
          (once (or (in_motion bed) (agent_holds ?o) ) )
        )
      )
    )
    (forall (?b1 - cube_block)
      (and
        (preference throwMovesBeachballWithoutKnockingTeddy
          (exists (?b - hexagonal_bin)
            (then
              (hold (in_motion ?b1) )
              (once (and (>= (distance_side brown ?b ?b1) 1) (and (and (not (in ?b ?b1) ) (not (toggled_on ?b) ) ) (and (not (in ?b1 ?b) ) (on ?b1 bed) (on ?b1 ?b1) (and (equal_z_position ?b bed) (agent_holds ?b) ) (touch ?b bed) (same_type agent left) (in_motion ?b1) (in_motion agent) ) ) ) )
              (once (and (in ?b1 ?b) (= (distance_side ?b ?b ?b ?b) (distance ?b1 ?b)) ) )
            )
          )
        )
      )
    )
    (preference agentLeavesDogbedOrNoMoreBalls
      (exists (?l3 - game_object)
        (at-end
          (and
            (adjacent ?l3 ?l3)
            (and
              (not
                (agent_holds ?l3)
              )
              (on ?l3 rug)
              (not
                (same_type ?l3 rug)
              )
              (not
                (in ?l3 door)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (total-score) )
)
(:scoring
  (external-forall-maximize
    (count dodgeballFromDeskToTarget:hexagonal_bin:dodgeball)
  )
)
)



(define (game game-id-441) (:domain few-objects-room-v1)
(:setup
  (exists (?o ?d - dodgeball ?c4 - building)
    (exists (?h - curved_wooden_ramp)
      (exists (?d - ball)
        (game-conserved
          (not
            (touch ?h room_center)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?g - hexagonal_bin)
      (and
        (preference throwToBinFromDistance
          (exists (?o1 ?b - hexagonal_bin)
            (then
              (once (in ?g rug) )
              (hold (adjacent ?b room_center) )
              (once (and (in_motion ?o1) (and (not (in ?o1 ?b) ) (and (and (on ?b ?o1) (agent_holds ?g) ) (adjacent ?o1 ?b) (not (and (in_motion ?o1) (and (not (agent_holds ?g) ) (forall (?tb - dodgeball) (not (in ?tb ?g) ) ) (agent_holds ?g) ) ) ) ) ) ) )
              (hold (in_motion ?b) )
            )
          )
        )
      )
    )
    (preference itemsBroken
      (exists (?c4 ?h - building ?p2 - yellow_pyramid_block)
        (then
          (once (in_motion agent) )
          (hold (agent_crouches ) )
          (once (in_motion ?p2) )
        )
      )
    )
    (preference ballNeverThrown
      (exists (?h - block)
        (at-end
          (object_orientation ?h ?h)
        )
      )
    )
  )
)
(:terminal
  (and
    (>= 3 2 )
  )
)
(:scoring
  (count-once-per-external-objects itemsBroken:yellow)
)
)



(define (game game-id-442) (:domain few-objects-room-v1)
(:setup
  (exists (?t1 - building ?d - (either laptop cellphone))
    (exists (?b - teddy_bear)
      (game-conserved
        (on ?b ?b)
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - desk_shelf ?l4 - hexagonal_bin)
      (and
        (preference thrownBallReachesEnd
          (exists (?h - ball)
            (then
              (once (and (not (same_type ?l4 ?h) ) (on ?h ?h) ) )
              (once (forall (?r - teddy_bear) (and (not (not (same_type bed ?h) ) ) (not (agent_holds ?l4) ) ) ) )
              (once (< 2 (distance ?l4 ?l4)) )
            )
          )
        )
        (preference objectThrownFromRug
          (exists (?h - block)
            (then
              (once (not (touch ?h ?h) ) )
              (once (not (and (on south_wall ?l4) (on ?h ?l4) (agent_holds ?h) (agent_holds ?h) ) ) )
              (once (and (and (and (object_orientation ?h ?l4) (in ?l4 agent) ) (agent_holds ?h) ) (and (on agent door) (not (agent_holds ?h) ) ) ) )
            )
          )
        )
      )
    )
    (preference dodgeballFromDeskToTarget
      (exists (?d ?o ?h - hexagonal_bin)
        (then
          (once (in agent ?h) )
          (hold (same_type agent ?h) )
          (once (and (and (in_motion ?d) (in ?h ?d) ) (agent_holds bed) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count thrownBallReachesEnd) (count thrownBallReachesEnd:yellow_cube_block) )
)
(:scoring
  (count dodgeballFromDeskToTarget:beachball)
)
)



(define (game game-id-443) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?b3 - building)
      (and
        (game-optional
          (and
            (object_orientation ?b3 ?b3)
            (and
              (in_motion ?b3)
              (in_motion ?b3)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?b6 - dodgeball ?c3 - doggie_bed)
        (then
          (once (and (same_color agent rug) (and (not (and (and (agent_holds ?c3) (not (touch agent bed) ) (and (not (and (on bed ?c3) (in_motion ?c3) (and (or (agent_holds ?c3) (not (on ?c3 bed) ) ) (not (in_motion ?c3) ) ) ) ) (in_motion ?c3) (in ?c3 ?c3) (adjacent floor ?c3) ) ) (not (on ?c3 floor) ) ) ) (not (and (not (and (in_motion ?c3) (adjacent ?c3 ?c3) ) ) (in ?c3 ?c3) ) ) (and (on ?c3 ?c3) (and (agent_holds ?c3) (agent_holds ?c3) (agent_holds pink_dodgeball) (and (in_motion ?c3) (not (agent_holds ?c3) ) (and (on ?c3 ?c3) (agent_holds ?c3) ) (and (agent_holds ?c3) (agent_holds ?c3) (agent_holds ?c3) ) ) ) ) ) ) )
          (hold (and (and (not (adjacent front ?c3) ) (touch ?c3 ?c3) (agent_holds upside_down) ) (forall (?h - hexagonal_bin) (not (not (same_color ?h ?c3) ) ) ) ) )
          (hold (touch ?c3 ?c3) )
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (and
        (and
          (>= (+ (count-once-per-objects ballThrownToBin:dodgeball) 100 (count-overlapping ballThrownToBin:dodgeball) )
            (total-time)
          )
        )
        (>= (total-time) (+ (count-once-per-objects ballThrownToBin:red) 20 (= (external-forall-maximize (* (count-once-per-objects ballThrownToBin:dodgeball) 5 )
              )
              (+ 10 (count-once-per-objects ballThrownToBin:book:basketball) )
            )
          )
        )
      )
      (>= 5 (count-once-per-external-objects ballThrownToBin:pink_dodgeball) )
      (>= 5 (count-once ballThrownToBin:yellow) )
    )
  )
)
(:scoring
  (+ (* 60 3 )
    180
  )
)
)



(define (game game-id-444) (:domain few-objects-room-v1)
(:setup
  (forall (?b2 - hexagonal_bin)
    (game-conserved
      (> (distance desk ?b2) 4)
    )
  )
)
(:constraints
  (and
    (preference towerFallsWhileBuilding
      (exists (?db - hexagonal_bin)
        (then
          (once (not (and (and (and (in_motion ?db) (= (distance room_center ?db) 1) ) (exists (?h - dodgeball) (and (is_setup_object ?db) (adjacent_side bed agent ?db ?db) ) ) ) (in_motion ?db) (adjacent ?db ?db) (and (not (not (and (not (in_motion ?db) ) (on ?db ?db) ) ) ) (agent_holds ?db) ) ) ) )
          (once (in ?db ?db) )
          (once (and (in_motion ?db) (agent_holds ?db) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (- 0 )
    (total-time)
  )
)
(:scoring
  (count-measure towerFallsWhileBuilding:book:hexagonal_bin)
)
)



(define (game game-id-445) (:domain medium-objects-room-v1)
(:setup
  (forall (?h - game_object)
    (forall (?x - cube_block)
      (game-optional
        (and
          (in ?h bridge_block)
          (and
            (on agent ?x)
            (on ?h main_light_switch)
          )
          (on ?h ?x)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?l3 - cube_block)
      (and
        (preference throwToDrawerOrBin
          (then
            (hold (adjacent_side ?l3 ?l3 ?l3) )
            (once (on ?l3 ?l3) )
            (hold (agent_holds ?l3) )
          )
        )
        (preference dodgeballFromDeskToTarget
          (exists (?s - (either beachball hexagonal_bin book))
            (then
              (once (agent_holds bed) )
              (hold (and (agent_holds ?s) (in ?s ?s) ) )
              (once (object_orientation ?s ?l3) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (external-forall-minimize (= 5 (* (* 5 15 )
          (count dodgeballFromDeskToTarget:basketball:blue_pyramid_block)
        )
      )
    )
    5
  )
)
(:scoring
  (count dodgeballFromDeskToTarget:basketball)
)
)



(define (game game-id-446) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (in_motion room_center)
  )
)
(:constraints
  (and
    (preference cubeBlockInBuilding
      (exists (?b ?h - (either golfball book yellow_cube_block dodgeball alarm_clock laptop cylindrical_block))
        (then
          (once (agent_holds ?h) )
          (once (agent_holds agent) )
          (once (in_motion ?h) )
        )
      )
    )
    (preference ballNeverThrown
      (exists (?r - doggie_bed)
        (then
          (hold (and (in agent ?r) (not (not (on rug pink_dodgeball) ) ) ) )
          (hold (not (not (in_motion ?r) ) ) )
          (once (not (adjacent ?r ?r) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) 3 )
)
(:scoring
  (* 6 )
)
)



(define (game game-id-447) (:domain few-objects-room-v1)
(:setup
  (exists (?b7 - (either desktop cylindrical_block yellow_cube_block))
    (game-conserved
      (and
        (or
          (on ?b7 ?b7)
          (not
            (object_orientation brown ?b7)
          )
        )
        (in_motion ?b7)
        (not
          (toggled_on ?b7)
        )
        (forall (?h - ball)
          (in_motion ?b7)
        )
        (and
          (not
            (same_type ?b7 ?b7)
          )
          (and
            (in_motion ?b7)
            (in ?b7 room_center)
          )
        )
        (or
          (agent_holds ?b7)
          (adjacent ?b7 ?b7)
        )
        (not
          (and
            (= (distance ?b7 desk) 1)
            (not
              (in_motion ?b7)
            )
            (in_motion ?b7)
          )
        )
        (not
          (and
            (not
              (and
                (same_object ?b7 ?b7)
                (and
                  (not
                    (in_motion ?b7)
                  )
                  (agent_holds ?b7)
                  (in bed ?b7)
                )
              )
            )
            (in_motion ?b7)
            (agent_holds ?b7)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference nonBlockPlacedInBuilding
      (exists (?r - (either dodgeball hexagonal_bin))
        (then
          (once (not (not (on ?r ?r) ) ) )
          (hold (not (and (in room_center ?r) (is_setup_object ?r) ) ) )
          (once (agent_holds ?r) )
        )
      )
    )
  )
)
(:terminal
  (<= (- (count nonBlockPlacedInBuilding) )
    (total-score)
  )
)
(:scoring
  (* (count nonBlockPlacedInBuilding:dodgeball) 18 )
)
)



(define (game game-id-448) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?o1 - (either cellphone) ?w1 - wall)
      (exists (?b5 - (either pencil dodgeball) ?p2 ?d - hexagonal_bin ?d - doggie_bed)
        (forall (?b8 - golfball)
          (game-optional
            (not
              (and
                (in bed ?w1)
                (and
                  (same_object ?d pink_dodgeball)
                  (agent_holds ?b8)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballKnocksBlockFromRug
      (exists (?h - drawer ?c1 - dodgeball ?c2 - (either dodgeball cylindrical_block cd))
        (then
          (hold (agent_holds ?c2) )
          (once (in ?c2 ?c2) )
          (once (or (agent_holds ?c2) (in_motion bed) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-overlapping ballKnocksBlockFromRug:blue_pyramid_block:dodgeball) (count-once-per-objects ballKnocksBlockFromRug:pink_dodgeball) )
)
(:scoring
  (count-once-per-objects ballKnocksBlockFromRug:dodgeball)
)
)



(define (game game-id-449) (:domain many-objects-room-v1)
(:setup
  (forall (?p3 ?h ?b ?c1 ?h ?d ?c1 ?b2 ?d ?h - ball ?p - hexagonal_bin)
    (exists (?t - wall)
      (exists (?d - block)
        (game-conserved
          (on ?t ?p)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - (either mug cd))
      (and
        (preference dodgeballThrownToBin
          (exists (?o - dodgeball ?p1 - game_object)
            (then
              (once (object_orientation ?p1 ?p1) )
              (once (and (on ?p1 ?b) (not (not (agent_holds ?p1) ) ) ) )
              (hold-while (open ?p1) (agent_holds agent) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 15 (total-time) )
)
(:scoring
  (= (count dodgeballThrownToBin:wall) (count dodgeballThrownToBin:dodgeball:basketball) )
)
)



(define (game game-id-450) (:domain few-objects-room-v1)
(:setup
  (exists (?b - hexagonal_bin ?w1 - (either pyramid_block bridge_block))
    (and
      (forall (?b - dodgeball ?c6 - block)
        (forall (?c - ball)
          (exists (?c3 - cylindrical_block ?ob - doggie_bed)
            (and
              (game-optional
                (agent_holds agent)
              )
            )
          )
        )
      )
      (and
        (game-conserved
          (and
            (in_motion ?w1)
            (and
              (< (distance_side ?w1 desk ?w1) 1)
              (< 1 1)
            )
          )
        )
      )
      (forall (?s - hexagonal_bin)
        (and
          (and
            (game-optional
              (agent_holds ?w1)
            )
            (game-conserved
              (on ?s ?s)
            )
            (exists (?o2 - game_object)
              (and
                (and
                  (forall (?b8 - hexagonal_bin)
                    (game-conserved
                      (exists (?h - red_pyramid_block)
                        (and
                          (and
                            (in_motion ?s)
                            (or
                              (not
                                (touch ?s ?s)
                              )
                              (agent_holds rug)
                              (touch ?b8 rug)
                              (not
                                (and
                                  (or
                                    (in_motion ?s)
                                    (agent_holds ?w1)
                                  )
                                  (on top_drawer ?w1)
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
                (exists (?c - golfball)
                  (exists (?r - ball)
                    (game-conserved
                      (on ?c ?c)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?ob - hexagonal_bin)
      (and
        (preference matchingBuildingBuilt
          (exists (?b - dodgeball)
            (then
              (once (not (= (distance ?b ?b) (distance ?ob pink_dodgeball)) ) )
              (once (in_motion ?ob) )
              (hold (in_motion ?ob) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> 5 7 )
)
(:scoring
  (count matchingBuildingBuilt:yellow)
)
)



(define (game game-id-451) (:domain few-objects-room-v1)
(:setup
  (forall (?t - ball)
    (or
      (game-optional
        (on ?t ?t)
      )
      (exists (?c ?b - hexagonal_bin ?b3 - pyramid_block)
        (forall (?b5 - ball ?h - beachball)
          (game-conserved
            (agent_holds ?h)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference cubeBlockFromBedToShelf
      (exists (?r - ball)
        (then
          (once (< (distance ?r ?r) (distance_side ?r agent ?r)) )
          (once (and (or (toggled_on ?r) (not (and (touch ?r rug) (and (agent_holds ?r) (and (is_setup_object ?r) (in ?r upright) ) ) ) ) (and (agent_holds ?r) (and (above ?r ?r) (not (not (not (in_motion ?r) ) ) ) (equal_x_position ?r ?r) (touch ?r ?r) (in_motion ?r) (and (agent_holds ?r) (in ?r south_wall) ) ) ) ) (in_motion top_shelf) ) )
          (once (not (adjacent ?r ?r) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (count-once-per-external-objects cubeBlockFromBedToShelf:green) )
)
(:scoring
  (* (count-once-per-objects cubeBlockFromBedToShelf:golfball:golfball:basketball) 0 )
)
)



(define (game game-id-452) (:domain many-objects-room-v1)
(:setup
  (exists (?d - hexagonal_bin ?c4 - dodgeball)
    (game-optional
      (in_motion ?c4)
    )
  )
)
(:constraints
  (and
    (preference ballThrownThroughRampToBin
      (exists (?b - cube_block)
        (then
          (hold-while (and (and (in ?b ?b) (on ?b ?b) ) (< 1 2) ) (in ?b ?b) )
          (once (in ?b ?b) )
          (once (and (touch ?b ?b) (< 0 2) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (= (count ballThrownThroughRampToBin:pink:blue_pyramid_block:basketball) (< (count-overlapping ballThrownThroughRampToBin:bed:pyramid_block) (+ (count ballThrownThroughRampToBin:beachball:yellow) 3 )
      )
      (-
        (count ballThrownThroughRampToBin:dodgeball)
        1
      )
    )
    (count ballThrownThroughRampToBin:yellow:dodgeball:basketball)
  )
)
(:scoring
  (count ballThrownThroughRampToBin:tan)
)
)



(define (game game-id-453) (:domain many-objects-room-v1)
(:setup
  (exists (?b - curved_wooden_ramp ?l3 ?t1 - block)
    (and
      (forall (?b1 - dodgeball)
        (exists (?h ?o2 ?h - pyramid_block ?t1 - (either golfball pen))
          (and
            (game-conserved
              (not
                (same_type ?t1 ?l3)
              )
            )
            (exists (?t2 - game_object ?o3 - hexagonal_bin)
              (and
                (game-conserved
                  (adjacent ?l3 ?b1)
                )
                (and
                  (game-conserved
                    (agent_holds ?t1)
                  )
                )
                (exists (?c - (either pyramid_block cube_block) ?c - triangular_ramp ?c - hexagonal_bin)
                  (exists (?d - (either book golfball golfball hexagonal_bin pink dodgeball floor) ?b6 - red_dodgeball)
                    (exists (?h - ball)
                      (game-conserved
                        (and
                          (in_motion ?t1)
                          (in room_center ?o3)
                        )
                      )
                    )
                  )
                )
              )
            )
            (forall (?o ?h ?b ?w1 ?b ?t - block)
              (game-conserved
                (not
                  (rug_color_under ?h ?t)
                )
              )
            )
            (game-conserved
              (object_orientation ?b1 ?t1)
            )
          )
        )
      )
      (forall (?o5 - hexagonal_bin)
        (and
          (game-conserved
            (agent_holds agent)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballOnBedAtEnd
      (exists (?bl - dodgeball)
        (at-end
          (not
            (same_color ?bl ?bl)
          )
        )
      )
    )
  )
)
(:terminal
  (> 3 15 )
)
(:scoring
  (count-once-per-external-objects ballOnBedAtEnd:yellow)
)
)



(define (game game-id-454) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (exists (?o - (either cellphone cube_block))
        (game-conserved
          (exists (?p - hexagonal_bin)
            (in_motion ?o)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballKnocksTeddy
      (exists (?t1 - game_object)
        (at-end
          (same_type ?t1 ?t1)
        )
      )
    )
    (preference gameBlockFound
      (exists (?t2 - tan_cube_block)
        (then
          (hold (in_motion ?t2) )
          (hold-while (same_object ?t2 ?t2) (on ?t2 bed) )
          (once (in_motion ?t2) )
        )
      )
    )
  )
)
(:terminal
  (>= (count ballKnocksTeddy:beachball) (total-score) )
)
(:scoring
  (* 3 (external-forall-maximize (+ (external-forall-maximize (external-forall-maximize (external-forall-maximize (* (count gameBlockFound:yellow:yellow) 5 (count gameBlockFound:basketball:golfball) (count-once gameBlockFound:basketball:beachball) 50 (- (count-once ballKnocksTeddy:dodgeball) )
              )
            )
          )
        )
        (+ (count gameBlockFound:blue_cube_block) (count-once-per-objects gameBlockFound:purple:red) )
        (* (count gameBlockFound:basketball) (+ (external-forall-minimize (- (count-unique-positions ballKnocksTeddy:yellow) )
            )
            5
            (* 15 (+ 5 8 3 )
            )
            15
            8
          )
        )
      )
    )
  )
)
)



(define (game game-id-455) (:domain many-objects-room-v1)
(:setup
  (forall (?b ?c - ball ?w1 - (either chair teddy_bear pen))
    (game-conserved
      (in_motion agent)
    )
  )
)
(:constraints
  (and
    (preference binKnockedOver
      (exists (?c4 - shelf)
        (then
          (once (and (agent_holds desk) (not (and (object_orientation ?c4 ?c4) (in ?c4 ?c4) ) ) ) )
          (once (agent_holds ?c4) )
          (once (not (in_motion ?c4) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (and
      (>= (+ (* 10 10 3 (count-once-per-external-objects binKnockedOver:basketball) )
          (* 5 (count binKnockedOver) )
        )
        (+ 3 (+ (* (count binKnockedOver:cube_block:tall_cylindrical_block) (+ 1 3 2 (- (count-longest binKnockedOver:dodgeball) )
              )
            )
            (external-forall-minimize
              (+ (count-once-per-objects binKnockedOver:yellow) (* 9 (- 6 )
                )
              )
            )
          )
        )
      )
      (or
        (>= 10 0 )
        (> 3 (count binKnockedOver:alarm_clock) )
        (>= (total-time) (total-score) )
      )
      (< 3 (total-score) )
    )
    (= 2 3 )
  )
)
(:scoring
  (count binKnockedOver:blue_dodgeball)
)
)



(define (game game-id-456) (:domain few-objects-room-v1)
(:setup
  (forall (?w - teddy_bear)
    (game-optional
      (in ?w ?w)
    )
  )
)
(:constraints
  (and
    (preference dodgeballThrownToBinFromDesk
      (exists (?b - color)
        (then
          (hold (not (not (and (not (not (agent_holds floor) ) ) (adjacent ?b ?b) ) ) ) )
          (once (same_type ?b ?b) )
          (hold-while (and (open ?b) (and (not (or (in floor ?b) ) ) (and (and (and (not (in_motion ?b) ) (touch bed ?b) ) (adjacent ?b bed) (in ?b ?b) ) (and (in_motion ?b) (and (agent_holds ?b) (<= (distance ?b ?b) 6) ) ) (> 2 1) (not (in_motion ?b) ) ) ) ) (not (and (agent_holds ?b) (not (on bed door) ) ) ) )
        )
      )
    )
    (preference thrownBallReachesEnd
      (exists (?b - shelf)
        (then
          (hold-while (agent_holds ?b) (forall (?h - hexagonal_bin) (in_motion ?b) ) )
          (hold (and (not (and (in_motion bed) (and (forall (?o - (either cellphone pillow credit_card cd)) (and (not (and (and (object_orientation ?o ?o) (adjacent ?b bed) (exists (?t2 - ball) (on ?t2 ?t2) ) (agent_holds ?b) (adjacent room_center ?o) (not (and (agent_holds ?b) (agent_holds ?o) ) ) ) (and (< (distance ?o desk) 1) (not (adjacent desk ?b) ) ) ) ) (and (not (in_motion ?b) ) (and (< 6 1) (touch ?b ?o) (touch ?b agent) ) ) ) ) (touch room_center ?b) ) ) ) (not (>= 2 (x_position agent)) ) ) )
          (once (in ?b yellow) )
        )
      )
    )
    (preference throwAttempt
      (exists (?t - hexagonal_bin)
        (then
          (once (and (agent_holds ?t) (and (not (agent_holds ?t) ) (not (and (not (and (and (> 3 4) (in_motion bed) ) (in_motion ?t) ) ) (agent_holds back) ) ) ) ) )
          (once (agent_crouches ) )
          (once (adjacent_side ?t ?t ?t) )
        )
      )
    )
    (preference throwGolfballToBin
      (exists (?c - curved_wooden_ramp ?b - dodgeball)
        (then
          (hold (on desk bed) )
          (hold (not (agent_holds back) ) )
          (once (on ?b ?b) )
        )
      )
    )
    (preference throwInBin
      (exists (?t1 - triangular_ramp)
        (then
          (hold (< (distance ?t1 ?t1) (building_size ?t1)) )
          (once (between ?t1 ?t1 ?t1) )
          (hold-while (and (in ?t1 ?t1) (in_motion ?t1) (and (and (adjacent_side ?t1 ?t1 ?t1) (agent_holds ?t1) ) (and (and (and (not (is_setup_object ?t1) ) (agent_holds ?t1) ) (and (in_motion room_center) (agent_holds ?t1) ) ) (agent_holds room_center) (and (and (agent_holds rug) (on ?t1 ?t1) ) (not (same_color ?t1 bed) ) ) ) ) ) (in back ?t1) )
        )
      )
    )
    (forall (?b - (either cube_block))
      (and
        (preference beachballOnRug
          (exists (?o - (either dodgeball game_object))
            (at-end
              (and
                (between ?b ?o ?o)
                (exists (?c - wall)
                  (agent_holds ?c)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< (count-once-per-objects dodgeballThrownToBinFromDesk) (= (count dodgeballThrownToBinFromDesk) 5 )
  )
)
(:scoring
  (count-once-per-objects thrownBallReachesEnd:green)
)
)



(define (game game-id-457) (:domain medium-objects-room-v1)
(:setup
  (forall (?c3 - building)
    (forall (?s - hexagonal_bin ?c6 - curved_wooden_ramp ?h - shelf ?r - building)
      (game-conserved
        (not
          (on desk ?c3)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b1 - ball)
      (and
        (preference laptopAndBookInPlace
          (exists (?c - hexagonal_bin)
            (at-end
              (in_motion ?c)
            )
          )
        )
        (preference ballThrownFromRug
          (exists (?l - ball)
            (then
              (hold (not (agent_holds ?b1) ) )
              (hold-while (agent_holds desktop) (not (on ?b1 ?b1) ) (and (agent_holds desk) (in_motion ?b1) (in_motion ?b1) ) (and (and (= 1 (distance room_center ?l)) (equal_z_position agent ?l) ) (not (in_motion tan) ) ) )
              (once (not (= (distance_side ?b1 ?l ?b1) 1) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (count-once-per-objects laptopAndBookInPlace:red:hexagonal_bin) )
)
(:scoring
  (count ballThrownFromRug:blue:triangle_block)
)
)



(define (game game-id-458) (:domain medium-objects-room-v1)
(:setup
  (exists (?x - cube_block)
    (game-conserved
      (toggled_on bed)
    )
  )
)
(:constraints
  (and
    (forall (?d - (either bridge_block cd))
      (and
        (preference thrownBallReachesEnd
          (exists (?g - chair)
            (then
              (hold (and (agent_holds room_center) (not (not (broken ?d) ) ) ) )
            )
          )
        )
        (preference throwAttempt
          (exists (?o - teddy_bear)
            (then
              (once (in_motion ?d) )
              (once (adjacent agent ?o) )
              (once (adjacent_side ?d front rug) )
            )
          )
        )
        (preference blueObjectMovedToRoomCenter
          (exists (?s - hexagonal_bin)
            (at-end
              (in ?s ?s)
            )
          )
        )
      )
    )
    (forall (?c4 - hexagonal_bin)
      (and
        (preference ballThrownToChair
          (exists (?d - wall)
            (then
              (once (agent_holds ?c4) )
              (hold (agent_holds ?c4) )
            )
          )
        )
        (preference thrownBallHitsBlock
          (exists (?o5 - building)
            (then
              (hold-while (in_motion ?o5) (in ?c4 ?c4) (not (agent_holds floor) ) )
              (once (not (not (agent_holds ?c4) ) ) )
              (once (not (agent_holds agent) ) )
            )
          )
        )
        (preference blockOnBlockInTowerAtEnd
          (exists (?p2 - curved_wooden_ramp)
            (at-end
              (agent_holds ?c4)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-overlapping ballThrownToChair:basketball) (count thrownBallHitsBlock:pink) )
)
(:scoring
  (* (+ 5 (count thrownBallHitsBlock:hexagonal_bin) )
    2
    (- 8 )
    5
    40
    (* 10 (* (+ 10 50 )
        7
        (-
          (external-forall-minimize
            (count thrownBallHitsBlock:white)
          )
          (* 10 (= (count-once blueObjectMovedToRoomCenter:basketball) (+ 10 (* (count thrownBallReachesEnd:yellow) (count blueObjectMovedToRoomCenter:dodgeball) )
                (* 12 (count thrownBallHitsBlock:yellow:yellow:golfball) )
              )
            )
            3
          )
        )
      )
    )
    3
    2
    (* 20 (count-once-per-external-objects throwAttempt:green:red) (count-once-per-objects thrownBallHitsBlock:green) (* (* 3 (* 18 2 )
        )
        (* (count-once-per-objects blueObjectMovedToRoomCenter:red:pink) 40 )
      )
    )
  )
)
)



(define (game game-id-459) (:domain medium-objects-room-v1)
(:setup
  (exists (?h - cube_block)
    (game-optional
      (not
        (and
          (object_orientation ?h ?h)
          (and
            (not
              (in_motion ?h)
            )
            (and
              (and
                (not
                  (agent_holds rug)
                )
                (agent_holds ?h)
              )
              (not
                (and
                  (in_motion ?h)
                  (in_motion rug)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference cubeThrownToBin
      (exists (?b5 - hexagonal_bin)
        (then
          (once (adjacent ?b5 ?b5) )
          (hold (adjacent ?b5 ?b5) )
          (once (or (agent_holds ?b5) (and (not (in ?b5 floor) ) (on floor ?b5) ) ) )
          (hold (on pink_dodgeball ?b5) )
        )
      )
    )
    (preference throwOverRamp
      (exists (?b1 - game_object ?l2 - bridge_block)
        (then
          (once (in_motion ?l2) )
          (hold-while (adjacent ?l2 top_drawer) (agent_holds ?l2) )
          (hold (agent_holds ?l2) )
        )
      )
    )
  )
)
(:terminal
  (>= 18 (* (* (count cubeThrownToBin:dodgeball) 2 )
      (- (* 2 40 )
      )
      (count throwOverRamp:blue_cube_block)
    )
  )
)
(:scoring
  (* (+ (count throwOverRamp:golfball) (count cubeThrownToBin:beachball) (count throwOverRamp:doggie_bed:dodgeball:beachball) )
    (* (count cubeThrownToBin:beachball:golfball) (+ (+ (count-once-per-objects cubeThrownToBin:dodgeball) 3 )
        3
        20
        3
      )
      (count cubeThrownToBin:beachball)
    )
  )
)
)



(define (game game-id-460) (:domain many-objects-room-v1)
(:setup
  (exists (?o4 - hexagonal_bin ?o2 - drawer)
    (and
      (and
        (and
          (and
            (and
              (game-conserved
                (not
                  (not
                    (and
                      (not
                        (not
                          (on ?o2 ?o2)
                        )
                      )
                      (in_motion pink_dodgeball)
                    )
                  )
                )
              )
              (game-conserved
                (in_motion bed)
              )
            )
            (game-conserved
              (and
                (not
                  (not
                    (and
                      (same_type ?o2 ?o2)
                      (and
                        (on ?o2 ?o2)
                        (not
                          (not
                            (adjacent pink_dodgeball ?o2)
                          )
                        )
                      )
                    )
                  )
                )
                (not
                  (on ?o2 ?o2)
                )
              )
            )
            (forall (?p1 - dodgeball ?t - block)
              (and
                (or
                  (exists (?d - dodgeball)
                    (exists (?h - ball ?h - (either wall yellow_cube_block))
                      (forall (?b1 - chair)
                        (and
                          (forall (?g - chair ?c - (either game_object alarm_clock))
                            (and
                              (exists (?b - dodgeball)
                                (game-optional
                                  (in_motion desk)
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                  (and
                    (exists (?b - wall)
                      (game-conserved
                        (on back ?o2)
                      )
                    )
                  )
                  (and
                    (and
                      (game-optional
                        (agent_holds ?o2)
                      )
                      (game-optional
                        (game_start )
                      )
                      (game-conserved
                        (not
                          (agent_holds bed)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
        (and
          (and
            (and
              (and
                (forall (?b - (either dodgeball))
                  (and
                    (forall (?o2 - (either yellow cube_block) ?d - (either laptop blue_cube_block))
                      (forall (?r1 - bridge_block)
                        (and
                          (and
                            (and
                              (exists (?p1 - wall)
                                (game-conserved
                                  (not
                                    (not
                                      (> 10 9)
                                    )
                                  )
                                )
                              )
                            )
                          )
                          (forall (?h - red_pyramid_block ?h ?d - curved_wooden_ramp)
                            (exists (?w1 - dodgeball)
                              (exists (?h - wall)
                                (game-optional
                                  (in ?r1 ?h)
                                )
                              )
                            )
                          )
                          (exists (?c2 - (either golfball rug))
                            (exists (?s - chair ?h - (either cube_block key_chain))
                              (and
                                (game-optional
                                  (and
                                    (exists (?b4 - building)
                                      (= 1 (distance bed desk))
                                    )
                                    (in_motion ?d)
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                    (forall (?b1 ?d ?h ?o ?g - (either cube_block pyramid_block yellow))
                      (and
                        (forall (?b - hexagonal_bin)
                          (and
                            (game-conserved
                              (< 1 (distance ?g ?b))
                            )
                          )
                        )
                      )
                    )
                    (game-optional
                      (agent_holds ?o2)
                    )
                  )
                )
              )
            )
          )
        )
        (game-optional
          (agent_holds ?o2)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?w2 - building)
      (and
        (preference cubeBlockThrownToTopShelf
          (exists (?d1 - hexagonal_bin)
            (then
              (hold (same_type pink ?d1) )
              (hold (not (< 1 (distance ?w2 blue)) ) )
              (once (and (and (same_type ?w2 ?w2) (on ?d1 ?w2) ) (adjacent_side desk ?w2 ?d1) (faces rug ?d1) ) )
            )
          )
        )
        (preference towerFallsWhileBuilding
          (exists (?c - chair)
            (then
              (once (same_color ?c ?c) )
              (once (in pink_dodgeball ?w2) )
              (once (rug_color_under ?c desk) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (- (count cubeBlockThrownToTopShelf:blue_cube_block) )
      (* (count cubeBlockThrownToTopShelf:dodgeball) (count cubeBlockThrownToTopShelf:pink_dodgeball) (count towerFallsWhileBuilding:hexagonal_bin) )
    )
  )
)
(:scoring
  (* (* 1 (+ (count cubeBlockThrownToTopShelf:dodgeball:alarm_clock) 7 )
      (count-once-per-objects cubeBlockThrownToTopShelf:dodgeball:beachball)
      5
      2
      (* (+ (count-once-per-objects towerFallsWhileBuilding:purple:hexagonal_bin) 3 )
      )
    )
    (count-once-per-objects towerFallsWhileBuilding:dodgeball)
  )
)
)



(define (game game-id-461) (:domain few-objects-room-v1)
(:setup
  (exists (?h - hexagonal_bin)
    (forall (?r - dodgeball ?o3 ?c - blue_cube_block)
      (game-conserved
        (in_motion ?h)
      )
    )
  )
)
(:constraints
  (and
    (preference throwKnocksBlock
      (exists (?l2 - cube_block ?db - dodgeball)
        (then
          (hold (in_motion ?db) )
          (once (agent_holds blue) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (* (external-forall-minimize (* (count-once-per-objects throwKnocksBlock:red_pyramid_block) 16 )
        )
        4
      )
      (count throwKnocksBlock:bed)
      (+ (* 3 2 3 (* 3 (count-once throwKnocksBlock:pink:yellow) )
        )
        20
      )
    )
    (count-once-per-objects throwKnocksBlock:cube_block)
  )
)
(:scoring
  (count throwKnocksBlock:yellow_cube_block)
)
)



(define (game game-id-462) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?o3 - hexagonal_bin ?b - (either dodgeball cd alarm_clock))
      (exists (?s - game_object)
        (game-conserved
          (not
            (agent_holds ?s)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectMovedRoomSide
      (exists (?b - (either triangle_block alarm_clock) ?o - hexagonal_bin)
        (then
          (once (on ?o ?o) )
          (once (and (not (in_motion ?o) ) (and (touch ?o ?o) (equal_z_position ?o ?o) ) ) )
          (once (same_color ?o ?o) )
        )
      )
    )
    (preference throwInBin
      (exists (?b3 - teddy_bear)
        (at-end
          (and
            (exists (?r1 - doggie_bed)
              (and
                (agent_holds ?r1)
                (and
                  (in_motion ?b3)
                  (and
                    (in_motion ?r1)
                    (and
                      (not
                        (not
                          (not
                            (in pink_dodgeball floor)
                          )
                        )
                      )
                      (agent_holds ?r1)
                    )
                  )
                )
                (in_motion ?b3)
              )
            )
            (agent_holds ?b3)
            (and
              (touch ?b3 agent)
              (rug_color_under ?b3 ?b3)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (> 4 (count-same-positions objectMovedRoomSide:basketball) )
      (or
        (or
          (>= (* 4 (* 10 (* 100 (count throwInBin:green:beachball) )
              )
            )
            (total-time)
          )
        )
        (>= (count-increasing-measure throwInBin:pink_dodgeball) (total-score) )
        (> (* 2 3 50 )
          (count objectMovedRoomSide:brown:dodgeball:dodgeball)
        )
      )
    )
    (>= 2 (+ 3 (/ 5 (* (count throwInBin:yellow_cube_block:dodgeball) 6 )
        )
        0
      )
    )
    (>= 1 (total-time) )
  )
)
(:scoring
  (count objectMovedRoomSide:pink)
)
)



(define (game game-id-463) (:domain many-objects-room-v1)
(:setup
  (exists (?c - (either dodgeball))
    (game-optional
      (not
        (same_color rug ?c)
      )
    )
  )
)
(:constraints
  (and
    (preference bigObjectThrownToBed
      (exists (?b2 - (either dodgeball cube_block bridge_block) ?h - hexagonal_bin)
        (then
          (hold (not (not (not (not (not (and (and (and (not (is_setup_object ?h) ) (agent_holds ?h) ) (in_motion ?h) ) (< (distance ?h ?h) (distance desk ?h)) ) ) ) ) ) ) )
          (once (in_motion ?h) )
          (hold (adjacent ?h ?h) )
        )
      )
    )
  )
)
(:terminal
  (>= 7 4 )
)
(:scoring
  (count-once-per-objects bigObjectThrownToBed:blue_dodgeball)
)
)



(define (game game-id-464) (:domain many-objects-room-v1)
(:setup
  (forall (?l4 - (either flat_block doggie_bed))
    (exists (?d - ball)
      (game-optional
        (and
          (in_motion ?d)
          (not
            (and
              (and
                (or
                  (same_color ?d ?d)
                  (and
                    (not
                      (in ?d ?l4)
                    )
                    (adjacent_side ?l4 ?l4 desk ?d)
                    (and
                      (exists (?b - (either game_object pillow))
                        (exists (?h - (either cellphone key_chain))
                          (or
                            (not
                              (on ?b ?d)
                            )
                            (and
                              (not
                                (<= 3 (distance desk ?b))
                              )
                              (not
                                (and
                                  (and
                                    (not
                                      (< (distance ?b ?l4) (distance ?h room_center))
                                    )
                                    (and
                                      (same_color ?l4 ?l4)
                                      (not
                                        (on ?l4 ?b)
                                      )
                                    )
                                  )
                                  (game_over )
                                  (and
                                    (in bed ?b)
                                    (same_object ?d ?b)
                                  )
                                )
                              )
                              (faces ?d ?b)
                            )
                            (not
                              (and
                                (not
                                  (in_motion ?h)
                                )
                                (agent_holds ?d)
                                (exists (?d - (either golfball flat_block pencil blue_cube_block) ?b4 ?t - beachball)
                                  (in_motion ?b4)
                                )
                              )
                            )
                          )
                        )
                      )
                      (not
                        (equal_x_position ?d ?d)
                      )
                      (not
                        (agent_holds agent)
                      )
                      (and
                        (touch ?d ?d)
                        (agent_holds ?d)
                        (touch desk ?d)
                      )
                    )
                    (and
                      (exists (?o - pyramid_block)
                        (in_motion ?l4)
                      )
                      (on room_center ?l4)
                    )
                    (not
                      (touch agent ?l4)
                    )
                    (and
                      (not
                        (adjacent ?l4 ?d)
                      )
                      (on ?l4 ?d)
                    )
                    (agent_crouches )
                  )
                )
                (and
                  (< (distance ?d ?l4) 1)
                  (and
                    (agent_holds ?l4)
                    (not
                      (and
                        (and
                          (< 6 (x_position ?l4))
                          (in ?d room_center)
                        )
                        (< 9 (distance room_center ?d))
                      )
                    )
                    (adjacent ?l4 ?l4)
                    (agent_holds ?l4)
                  )
                )
              )
              (in ?l4 ?d)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownThroughRampAndBlocksToBin
      (exists (?w1 - triangular_ramp)
        (at-end
          (same_type ?w1 bed)
        )
      )
    )
    (preference otherObjectsOnDeskShelf
      (exists (?p - game_object)
        (then
          (hold (and (on ?p ?p) (and (adjacent_side ?p ?p ?p) (in ?p ?p) ) (and (in_motion ?p) (not (not (on top_shelf ?p) ) ) (and (touch ?p ?p) (in_motion ?p) ) ) ) )
          (hold (in ?p ?p) )
          (hold (< (distance_side ?p agent ?p) (distance_side room_center room_center drawer)) )
        )
      )
    )
    (preference throwObjectToBin
      (exists (?h - hexagonal_bin ?c2 - hexagonal_bin ?o1 - (either pyramid_block cd desktop))
        (then
          (once (and (agent_holds ?o1) (touch ?o1 ?o1) ) )
          (once (>= 8 (distance_side ?o1 ?o1 desk ?o1)) )
          (once (on side_table ?o1) )
        )
      )
    )
    (preference blueObjectMovedToRoomCenter
      (exists (?w - dodgeball ?p1 - (either teddy_bear))
        (then
          (once (agent_holds ?p1) )
          (once (on bridge_block ?p1) )
          (hold (not (in_motion ?p1) ) )
        )
      )
    )
    (preference objectLandsInBin
      (exists (?ob - game_object)
        (then
          (once (in_motion ?ob) )
          (once (in_motion ?ob) )
          (once (adjacent_side ?ob ?ob rug) )
        )
      )
    )
    (preference throwBallToDoggieBed
      (exists (?o4 - cube_block)
        (then
          (hold-while (and (and (adjacent ?o4 ?o4) (on ?o4 ?o4) ) (and (agent_holds ?o4) (or (in_motion ?o4) (and (in_motion agent) (agent_holds ?o4) (not (not (exists (?w2 - pyramid_block ?o - wall) (agent_holds desk) ) ) ) ) ) ) ) (in ?o4 ?o4) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (- (count otherObjectsOnDeskShelf:golfball) )
      (count blueObjectMovedToRoomCenter:tall_cylindrical_block)
    )
    (< 2 3 )
  )
)
(:scoring
  (count otherObjectsOnDeskShelf:blue_pyramid_block:golfball)
)
)



(define (game game-id-465) (:domain medium-objects-room-v1)
(:setup
  (forall (?b10 - hexagonal_bin)
    (game-conserved
      (in_motion ?b10)
    )
  )
)
(:constraints
  (and
    (preference blockPickedUp
      (exists (?p - building)
        (then
          (once (in_motion ?p) )
          (hold (and (in_motion ?p) (not (and (and (agent_holds top_shelf) (not (agent_holds ?p) ) ) (agent_holds ?p) (same_color ?p ?p) ) ) ) )
          (hold (not (< (distance ?p ?p) 3) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 8 (- (count blockPickedUp:dodgeball) )
  )
)
(:scoring
  (count-once-per-objects blockPickedUp:cylindrical_block)
)
)



(define (game game-id-466) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?r - (either cellphone key_chain))
      (and
        (game-conserved
          (agent_holds rug)
        )
        (exists (?c4 ?b10 - ball)
          (and
            (exists (?b - hexagonal_bin)
              (forall (?g - chair ?p3 - beachball)
                (and
                  (exists (?d - building ?b5 - game_object)
                    (exists (?t - beachball ?b - golfball)
                      (or
                        (game-optional
                          (not
                            (not
                              (< 1 1)
                            )
                          )
                        )
                      )
                    )
                  )
                  (exists (?w2 - hexagonal_bin)
                    (exists (?p - chair)
                      (forall (?x - hexagonal_bin)
                        (and
                          (game-optional
                            (not
                              (same_color back ?r)
                            )
                          )
                        )
                      )
                    )
                  )
                  (exists (?h - triangular_ramp)
                    (game-optional
                      (not
                        (not
                          (agent_holds ?h)
                        )
                      )
                    )
                  )
                )
              )
            )
            (game-optional
              (agent_holds door)
            )
          )
        )
        (and
          (and
            (exists (?b - (either doggie_bed dodgeball))
              (exists (?o - ball)
                (forall (?d - hexagonal_bin ?p2 - hexagonal_bin ?h - hexagonal_bin ?d - dodgeball)
                  (exists (?d - (either side_table key_chain) ?c1 - doggie_bed)
                    (forall (?b4 - block ?c - cube_block)
                      (and
                        (game-optional
                          (< (distance ?b ?b) (distance yellow ?c1))
                        )
                        (and
                          (forall (?w1 - hexagonal_bin)
                            (forall (?r - (either laptop hexagonal_bin) ?c1 - bridge_block ?b4 - hexagonal_bin)
                              (exists (?c ?d - dodgeball ?c4 - hexagonal_bin ?ob - cube_block)
                                (and
                                  (exists (?b - wall)
                                    (exists (?o - block ?s - hexagonal_bin)
                                      (game-conserved
                                        (not
                                          (game_start )
                                        )
                                      )
                                    )
                                  )
                                  (game-conserved
                                    (object_orientation ?c1 room_center)
                                  )
                                )
                              )
                            )
                          )
                          (not
                            (forall (?b - game_object)
                              (forall (?s - ball)
                                (game-conserved
                                  (not
                                    (agent_holds pink)
                                  )
                                )
                              )
                            )
                          )
                          (forall (?b - hexagonal_bin)
                            (game-optional
                              (forall (?c - (either mug cellphone pyramid_block))
                                (agent_holds ?c1)
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToRug
      (exists (?h - game_object ?r - dodgeball)
        (then
          (hold (in ?r ?r) )
          (hold (on ?r ?r) )
          (once (in_motion ?r) )
        )
      )
    )
    (forall (?h - curved_wooden_ramp)
      (and
        (preference itemsTurnedOff
          (exists (?r - hexagonal_bin)
            (then
              (once (in ?r ?r) )
              (hold-while (on ?h room_center) (and (and (and (on ?r back) (in ?r ?h) ) (and (in agent ?r) (on ?h ?r) ) ) (exists (?l - hexagonal_bin ?b2 ?r - hexagonal_bin) (and (forall (?t2 - doggie_bed ?g - (either flat_block book) ?b ?c - dodgeball) (and (in pink ?c) (not (and (agent_holds ?h) (and (and (< (distance_side ?b2 ?b2 south_west_corner) (distance ?h ?b)) (on ?c ?c) ) (in ?b2 ?b) ) ) ) (not (and (touch ?b2 ?h) (agent_holds ?h) ) ) ) ) (in_motion ?r) (agent_holds door) ) ) (not (< (distance ?r ?h) (distance ?h ?r)) ) ) )
              (hold (and (and (not (agent_holds ?h) ) (forall (?b - dodgeball ?d - ball) (in ?d desk) ) ) (adjacent_side ?h ?h floor) (and (object_orientation ?h ?r) (agent_holds pink_dodgeball) (open ?h) ) (in_motion ?h) ) )
            )
          )
        )
      )
    )
    (preference basketMadeFromRug
      (exists (?t1 - pillow ?p - red_dodgeball ?o3 - dodgeball)
        (then
          (once (in_motion ?o3) )
          (once (and (on ?o3 ?o3) (and (or (in_motion ?o3) (and (not (exists (?o - dodgeball ?t - flat_block) (and (agent_holds ?t) (and (and (agent_holds ?t) (not (and (in_motion ?t) (and (in agent ?t) (faces ?t desk) (in_motion ?o3) ) ) ) ) (and (in_motion ?o3) (game_over ) (and (agent_holds ?t) (in_motion ?t) ) ) ) ) ) ) (and (and (object_orientation ?o3 ?o3) (not (adjacent ?o3 ?o3) ) ) (agent_holds agent) (agent_holds ?o3) (not (same_color ?o3 agent) ) (in_motion ?o3) (adjacent ?o3 ?o3) ) ) ) (adjacent pink_dodgeball ?o3) (not (in_motion ?o3) ) ) (and (agent_holds ?o3) (in_motion ?o3) ) ) )
          (once (not (in_motion ?o3) ) )
        )
      )
    )
    (preference matchingBuildingBuilt
      (exists (?p - dodgeball)
        (at-end
          (in_motion ?p)
        )
      )
    )
    (preference bigObjectThrownToBed
      (exists (?o - block)
        (then
          (once (in_motion rug) )
          (once (in ?o ?o) )
          (once (on ?o ?o) )
        )
      )
    )
    (preference blockPlacedInBuilding
      (exists (?b - ball ?h - hexagonal_bin ?d - block ?d - game_object)
        (then
          (hold (and (adjacent_side ?d ?d ?d) (exists (?l - (either side_table alarm_clock alarm_clock)) (forall (?d - building ?c - cube_block) (not (agent_holds ?d) ) ) ) ) )
          (once (in_motion ?d) )
          (hold (in_motion ?d) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (- (count bigObjectThrownToBed:hexagonal_bin:hexagonal_bin:dodgeball) (- 7 )
    )
  )
)
(:scoring
  (count-once-per-objects ballThrownToRug:book:golfball:pink)
)
)



(define (game game-id-467) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?p - block ?b3 - (either golfball cylindrical_block))
      (exists (?b2 - hexagonal_bin ?d - (either blue_cube_block golfball))
        (and
          (game-conserved
            (on ?d ?b3)
          )
          (game-optional
            (in_motion ?d)
          )
          (forall (?h - (either floor beachball))
            (game-conserved
              (in ?b3 ?d)
            )
          )
          (and
            (game-conserved
              (and
                (on ?b3 ?d)
                (agent_holds ?b3)
                (in_motion ?b3)
              )
            )
          )
          (and
            (forall (?p2 - (either doggie_bed laptop blue_cube_block pen cellphone yellow pyramid_block))
              (game-optional
                (< 1 9)
              )
            )
            (game-conserved
              (equal_z_position ?d ?b3)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference matchingBuildingBuilt
      (exists (?bl - color)
        (then
          (hold (and (and (in_motion ?bl) (exists (?h - dodgeball) (and (same_object ?h bed) (agent_holds ?bl) (agent_holds bed) ) ) (not (not (and (on ?bl ?bl) (agent_holds ?bl) ) ) ) ) (agent_holds ?bl) ) )
          (once (same_color ?bl ?bl) )
          (once (on ?bl desk) )
        )
      )
    )
    (preference throwMovesBeachballWithoutKnockingTeddy
      (exists (?b - hexagonal_bin)
        (then
          (hold (and (in_motion ?b) (agent_holds ?b) (agent_holds ?b) (same_type ?b ?b) ) )
          (hold (< (distance ?b ?b) 4) )
          (hold (in_motion ?b) )
        )
      )
    )
  )
)
(:terminal
  (= 8 3 )
)
(:scoring
  (count-once-per-external-objects matchingBuildingBuilt:golfball)
)
)



(define (game game-id-468) (:domain few-objects-room-v1)
(:setup
  (forall (?b - ball ?l1 - hexagonal_bin ?b4 - (either cylindrical_block alarm_clock))
    (and
      (game-optional
        (< (distance ?b4 ?b4) 1)
      )
    )
  )
)
(:constraints
  (and
    (preference baseBlockInTowerAtEnd
      (exists (?l - building)
        (then
          (hold-while (agent_holds ?l) (in_motion door) )
          (hold (agent_holds ?l) )
          (hold (in ?l room_center) )
        )
      )
    )
    (preference throwToBinFromOppositeWall
      (exists (?c3 - desk_shelf ?b - cube_block)
        (then
          (once (not (agent_holds ?b) ) )
          (hold (> (distance top_drawer ?b) (distance ?b room_center)) )
        )
      )
    )
    (forall (?b10 - cube_block)
      (and
        (preference binKnockedOver
          (exists (?c - (either yellow doggie_bed cylindrical_block desktop cd tall_cylindrical_block alarm_clock))
            (then
              (hold (in_motion desk) )
              (once (and (not (above ?b10 ?c) ) (in_motion ?b10) ) )
              (hold (adjacent rug ?b10) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (count baseBlockInTowerAtEnd:blue_dodgeball:yellow) (total-score) )
)
(:scoring
  (count-once-per-objects throwToBinFromOppositeWall:dodgeball)
)
)



(define (game game-id-469) (:domain medium-objects-room-v1)
(:setup
  (exists (?h - game_object)
    (and
      (game-optional
        (= (distance agent desk) (distance ?h ?h))
      )
    )
  )
)
(:constraints
  (and
    (preference ballInOrOnBin
      (exists (?o - hexagonal_bin ?o - curved_wooden_ramp ?d - ball)
        (then
          (once (on bed ?d) )
          (once (agent_holds ?d) )
          (once (on ?d ?d) )
        )
      )
    )
    (preference dodgeballAndBasketballInBin
      (exists (?c - cylindrical_block ?b - game_object)
        (then
          (once (< 1 3) )
          (once (and (on ?b ?b) (in_motion ?b) ) )
        )
      )
    )
  )
)
(:terminal
  (< (* 2 18 )
    (* 9 (- (- 4 )
      )
    )
  )
)
(:scoring
  (* 3 )
)
)



(define (game game-id-470) (:domain medium-objects-room-v1)
(:setup
  (forall (?h - (either hexagonal_bin yellow_cube_block dodgeball yellow_cube_block))
    (forall (?b2 - hexagonal_bin)
      (exists (?r - chair ?l - hexagonal_bin)
        (exists (?b - cube_block ?b - (either laptop cube_block))
          (forall (?b3 - curved_wooden_ramp)
            (or
              (exists (?c2 - hexagonal_bin)
                (and
                  (forall (?c - dodgeball ?c - (either book dodgeball))
                    (and
                      (and
                        (and
                          (game-conserved
                            (not
                              (not
                                (not
                                  (< (distance door ?c) (distance ?c2 ?c))
                                )
                              )
                            )
                          )
                        )
                        (game-conserved
                          (on ?l ?c)
                        )
                        (game-conserved
                          (< (distance_side front ?l ?l ?h) 2)
                        )
                      )
                      (and
                        (forall (?b4 - doggie_bed)
                          (and
                            (exists (?f - building)
                              (and
                                (and
                                  (and
                                    (and
                                      (exists (?h - (either pyramid_block ball cube_block) ?p - teddy_bear ?l1 - hexagonal_bin ?r - building ?c - hexagonal_bin)
                                        (game-conserved
                                          (and
                                            (not
                                              (faces ?l ?b)
                                            )
                                            (not
                                              (agent_holds ?h)
                                            )
                                          )
                                        )
                                      )
                                    )
                                    (exists (?d - dodgeball)
                                      (game-conserved
                                        (agent_holds agent)
                                      )
                                    )
                                    (exists (?bl - dodgeball ?t1 - blinds ?x - shelf)
                                      (and
                                        (forall (?d - block)
                                          (exists (?bl - (either pyramid_block cube_block) ?o ?d ?t ?b ?h - block)
                                            (exists (?b2 - ball ?c1 - (either alarm_clock golfball bridge_block blue_cube_block) ?d - ball)
                                              (and
                                                (and
                                                  (exists (?h - chair)
                                                    (exists (?l - yellow_cube_block)
                                                      (and
                                                        (and
                                                          (exists (?c3 - dodgeball)
                                                            (and
                                                              (game-conserved
                                                                (adjacent_side ?b2 bed ?o)
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                  (and
                                                    (game-conserved
                                                      (same_type ?c ?t)
                                                    )
                                                  )
                                                  (forall (?h - hexagonal_bin)
                                                    (game-conserved
                                                      (on ?c ?b2)
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                  (and
                                    (and
                                      (game-conserved
                                        (exists (?c - (either cellphone blue_cube_block dodgeball))
                                          (in_motion ?b3)
                                        )
                                      )
                                      (forall (?o - (either key_chain triangular_ramp))
                                        (exists (?c2 - dodgeball)
                                          (and
                                            (game-optional
                                              (agent_holds ?c)
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                  (game-conserved
                                    (not
                                      (exists (?c1 - pillow)
                                        (agent_holds floor)
                                      )
                                    )
                                  )
                                )
                                (game-conserved
                                  (agent_holds ?b)
                                )
                                (exists (?c ?g ?h ?o - teddy_bear ?d - dodgeball)
                                  (and
                                    (or
                                      (game-conserved
                                        (and
                                          (and
                                            (and
                                              (in_motion ?b3)
                                              (and
                                                (not
                                                  (or
                                                    (and
                                                      (not
                                                        (on ?b4 desk)
                                                      )
                                                      (and
                                                        (and
                                                          (and
                                                            (and
                                                              (agent_holds ?b4)
                                                              (in ?h ?l)
                                                            )
                                                            (and
                                                              (agent_holds desk)
                                                              (in_motion ?c2)
                                                            )
                                                            (< 2 (building_size ?b))
                                                            (object_orientation ?c2 ?b2)
                                                            (= 0.5 (x_position ?c) (distance ?c2 ?b))
                                                            (agent_holds ?h)
                                                            (and
                                                              (not
                                                                (adjacent ?b ?h)
                                                              )
                                                              (> (distance pink_dodgeball ?b4) (distance ?b ?f))
                                                            )
                                                          )
                                                          (toggled_on ?f)
                                                        )
                                                        (and
                                                          (< (distance ?d ?c) (distance ?b ?h))
                                                          (= (distance ?b2 ?b4) (distance_side ?c2 ?c ?f))
                                                          (not
                                                            (in_motion ?h)
                                                          )
                                                          (or
                                                            (not
                                                              (touch ?h ?f)
                                                            )
                                                            (agent_holds ?d)
                                                          )
                                                          (not
                                                            (< (x_position block) 5)
                                                          )
                                                          (<= 1 1)
                                                        )
                                                      )
                                                    )
                                                    (not
                                                      (not
                                                        (not
                                                          (on ?b ?b3)
                                                        )
                                                      )
                                                    )
                                                    (on ?f ?b2)
                                                  )
                                                )
                                                (in_motion ?b4)
                                              )
                                            )
                                            (in ?d ?c2)
                                          )
                                          (and
                                            (in_motion ?l)
                                            (object_orientation ?d ?b3)
                                          )
                                          (adjacent ?f ?c2)
                                        )
                                      )
                                      (forall (?db - ball)
                                        (and
                                          (exists (?d - ball ?d1 - wall)
                                            (exists (?d - teddy_bear)
                                              (exists (?h - curved_wooden_ramp)
                                                (game-optional
                                                  (exists (?p2 - curved_wooden_ramp)
                                                    (in_motion ?c)
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                    (and
                                      (and
                                        (game-conserved
                                          (on ?b2 ?b2)
                                        )
                                        (and
                                          (not
                                            (exists (?s - wall)
                                              (forall (?d - (either doggie_bed alarm_clock) ?o - game_object ?t - dodgeball)
                                                (and
                                                  (forall (?r - sliding_door)
                                                    (forall (?o - building)
                                                      (and
                                                        (forall (?r1 - hexagonal_bin)
                                                          (and
                                                            (exists (?p - hexagonal_bin ?p3 - game_object ?h - cube_block)
                                                              (forall (?h - ball)
                                                                (game-conserved
                                                                  (and
                                                                    (and
                                                                      (and
                                                                        (in floor ?b3)
                                                                        (agent_holds agent)
                                                                      )
                                                                      (or
                                                                        (adjacent agent ?b3)
                                                                        (and
                                                                          (not
                                                                            (not
                                                                              (on ?f agent)
                                                                            )
                                                                          )
                                                                          (agent_holds top_shelf)
                                                                        )
                                                                      )
                                                                    )
                                                                    (not
                                                                      (not
                                                                        (faces yellow ?l)
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                  (game-conserved
                                                    (not
                                                      (in_motion ?b)
                                                    )
                                                  )
                                                  (exists (?h - ball ?t1 ?b10 - golfball)
                                                    (forall (?b - doggie_bed)
                                                      (and
                                                        (forall (?t1 - block ?h - ball)
                                                          (and
                                                            (game-optional
                                                              (agent_holds ?l)
                                                            )
                                                            (game-optional
                                                              (adjacent ?c2 ?h)
                                                            )
                                                            (game-optional
                                                              (not
                                                                (exists (?b - block)
                                                                  (and
                                                                    (toggled_on ?s)
                                                                    (in_motion ?b4)
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                        (and
                                                          (and
                                                            (exists (?d - hexagonal_bin)
                                                              (and
                                                                (exists (?o ?w ?b3 ?d ?c ?h - hexagonal_bin)
                                                                  (forall (?h - cube_block)
                                                                    (game-optional
                                                                      (and
                                                                        (game_over )
                                                                        (agent_holds ?b4)
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                          (game-conserved
                                                            (in_motion ?s)
                                                          )
                                                          (game-conserved
                                                            (not
                                                              (on agent ?t1)
                                                            )
                                                          )
                                                        )
                                                        (game-conserved
                                                          (agent_holds ?t)
                                                        )
                                                      )
                                                    )
                                                  )
                                                  (and
                                                    (forall (?o ?p1 ?b - dodgeball ?r ?b2 - game_object)
                                                      (and
                                                        (exists (?w1 - ball)
                                                          (exists (?h - hexagonal_bin ?o2 - color)
                                                            (and
                                                              (and
                                                                (game-optional
                                                                  (not
                                                                    (same_object ?b3 agent)
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                          (game-conserved
                                            (on ?c ?h)
                                          )
                                          (and
                                            (forall (?t - teddy_bear)
                                              (and
                                                (and
                                                  (exists (?d - beachball)
                                                    (exists (?p1 - cube_block ?o - hexagonal_bin ?t - ball)
                                                      (game-conserved
                                                        (in ?c ?b3)
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                        (and
                                          (exists (?c ?o5 - pillow)
                                            (forall (?o - (either basketball dodgeball))
                                              (game-conserved
                                                (not
                                                  (not
                                                    (and
                                                      (not
                                                        (and
                                                          (not
                                                            (and
                                                              (not
                                                                (agent_holds ?o)
                                                              )
                                                              (agent_holds ?b3)
                                                            )
                                                          )
                                                          (on ?l ?d)
                                                          (agent_holds room_center)
                                                          (agent_holds ?h)
                                                          (on brown ?h)
                                                          (agent_holds ?c)
                                                        )
                                                      )
                                                      (not
                                                        (and
                                                          (adjacent desk ?f)
                                                          (not
                                                            (and
                                                              (in_motion bed)
                                                              (agent_holds bed)
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                      (forall (?h - pillow)
                                        (exists (?h - hexagonal_bin ?b - cube_block)
                                          (game-optional
                                            (not
                                              (not
                                                (and
                                                  (< (distance ?d bed) (distance ?d ?c2))
                                                  (agent_holds ?b)
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                            (exists (?w1 - pillow)
                              (not
                                (game-conserved
                                  (not
                                    (same_color ?c ?c)
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                      (game-optional
                        (in bed ?c)
                      )
                    )
                  )
                )
              )
              (game-optional
                (agent_holds ?h)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference rollBallToBin
      (exists (?d - blue_pyramid_block)
        (at-end
          (on ?d ?d)
        )
      )
    )
    (preference dodgeballThrownToBin
      (exists (?h - hexagonal_bin ?b5 - doggie_bed)
        (at-end
          (on ?b5 ?b5)
        )
      )
    )
  )
)
(:terminal
  (= (total-time) 3 )
)
(:scoring
  (* (+ (= (- (<= (count-once-per-objects dodgeballThrownToBin:pink_dodgeball) (count-once-per-objects dodgeballThrownToBin:beachball) )
          10
        )
        3
      )
      (count-once-per-objects dodgeballThrownToBin:book:golfball)
    )
    7
  )
)
)



(define (game game-id-471) (:domain medium-objects-room-v1)
(:setup
  (forall (?o ?c ?h ?c5 ?d ?c - beachball)
    (and
      (game-conserved
        (and
          (agent_holds ?c)
          (and
            (not
              (equal_x_position ?c ?h)
            )
            (and
              (agent_holds agent)
              (exists (?tb - building)
                (same_color ?c agent)
              )
              (< (distance ?c5 ?h) 1)
            )
          )
        )
      )
      (exists (?h - hexagonal_bin)
        (forall (?p3 - dodgeball)
          (game-optional
            (agent_holds ?p3)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c2 - hexagonal_bin)
      (and
        (preference golfballUnderBridgeWithoutTouchingBlock
          (exists (?o - drawer)
            (then
              (hold (in_motion right) )
              (once (agent_holds ?o) )
              (hold-while (and (adjacent bed ?c2) (adjacent ?o ?c2) ) (and (in ?o ?o) (same_object ?c2 ?c2) (in ?c2 ?c2) (in_motion ?o) (touch ?o ?o) (and (> 1 (distance ?o ?o)) (faces agent ?c2) ) ) (not (in yellow ?o) ) )
              (hold (adjacent ?c2 ?c2) )
              (once (and (and (in_motion ?c2) (and (in_motion ?o) (and (adjacent pink_dodgeball ?c2) (in_motion ?o) ) ) ) (forall (?c1 - (either golfball pyramid_block blue_cube_block)) (and (in_motion ?c1) (agent_holds ?o) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (> 20 (+ (count golfballUnderBridgeWithoutTouchingBlock:red) (count-increasing-measure golfballUnderBridgeWithoutTouchingBlock:red) (count golfballUnderBridgeWithoutTouchingBlock:blue_dodgeball:yellow) )
    )
  )
)
(:scoring
  (count-measure golfballUnderBridgeWithoutTouchingBlock:dodgeball)
)
)



(define (game game-id-472) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?b5 - hexagonal_bin ?o - (either yellow_cube_block cylindrical_block main_light_switch))
      (forall (?o5 - game_object)
        (game-conserved
          (agent_holds ?o5)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blueObjectMovedToRoomCenter
      (exists (?ob - hexagonal_bin)
        (at-end
          (and
            (and
              (same_color ?ob ?ob)
              (not
                (on ?ob ?ob)
              )
              (in_motion ?ob)
              (agent_holds ?ob)
            )
            (in_motion ?ob)
          )
        )
      )
    )
    (preference gameObjectToBin
      (exists (?b - game_object)
        (then
          (once (not (and (in_motion bed) (adjacent ?b ?b) ) ) )
          (once (opposite door agent) )
          (once (agent_holds ?b) )
        )
      )
    )
    (forall (?c - dodgeball ?h - triangular_ramp ?c5 - hexagonal_bin)
      (and
        (preference thrownBallHitsBlock
          (exists (?b ?b7 ?b4 - ball)
            (at-end
              (and
                (on ?c5 ?c5)
              )
            )
          )
        )
        (preference woodenBlockMovedFromRugToDesk
          (exists (?d - pyramid_block)
            (then
              (once (and (agent_holds agent) (not (< (distance agent bed) 0.5) ) ) )
              (hold (and (agent_holds ?c5) (not (adjacent ?d right) ) ) )
              (once (in_motion ?c5) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) 3 )
)
(:scoring
  (count gameObjectToBin:pink:pink_dodgeball)
)
)



(define (game game-id-473) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?g - (either dodgeball basketball))
      (exists (?r1 - game_object ?o4 - (either pillow wall desktop blue_cube_block))
        (or
          (game-conserved
            (in_motion west_wall)
          )
          (and
            (game-conserved
              (exists (?c - ball)
                (in_motion ?o4)
              )
            )
            (forall (?b - cube_block)
              (exists (?h - block ?ob - golfball)
                (and
                  (forall (?b10 - pillow ?b2 - ball)
                    (forall (?h - shelf ?b - dodgeball)
                      (exists (?h - block ?o - doggie_bed)
                        (forall (?d - dodgeball ?t - building)
                          (and
                            (exists (?h - dodgeball)
                              (exists (?r - hexagonal_bin)
                                (and
                                  (game-conserved
                                    (in_motion ?b2)
                                  )
                                  (forall (?h - block ?p - desk_shelf ?f - doggie_bed)
                                    (game-conserved
                                      (in ?g ?b2)
                                    )
                                  )
                                  (exists (?h - flat_block)
                                    (exists (?b - beachball)
                                      (forall (?s - red_dodgeball ?b5 - (either tall_cylindrical_block cube_block red))
                                        (and
                                          (forall (?b9 - dodgeball)
                                            (and
                                              (game-optional
                                                (in_motion floor)
                                              )
                                            )
                                          )
                                          (game-optional
                                            (agent_holds ?b)
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                  (game-conserved
                    (agent_holds ?o4)
                  )
                )
              )
            )
          )
        )
      )
    )
    (forall (?d2 ?c1 ?r1 - (either golfball) ?o4 ?f ?b1 - cube_block)
      (forall (?h - (either bed basketball) ?l1 - golfball ?h - ball)
        (and
          (and
            (forall (?d ?b5 - hexagonal_bin)
              (and
                (game-conserved
                  (on ?f ?b1)
                )
                (game-conserved
                  (and
                    (and
                      (on ?f ?o4)
                      (not
                        (exists (?w1 - hexagonal_bin ?b - game_object ?b ?o - game_object ?d - game_object)
                          (not
                            (in_motion ?b1)
                          )
                        )
                      )
                      (in_motion ?h)
                    )
                    (and
                      (in_motion ?b5)
                      (exists (?r2 - triangular_ramp ?h ?d - bridge_block ?d ?r - cube_block)
                        (equal_x_position ?b5 ?f)
                      )
                    )
                  )
                )
                (exists (?d - chair ?d - (either doggie_bed hexagonal_bin pyramid_block))
                  (and
                    (exists (?c - cube_block ?r1 - wall)
                      (game-optional
                        (not
                          (not
                            (adjacent_side ?d ?h ?r1)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockIncorrectlyPicked
      (exists (?o2 - game_object ?c - teddy_bear)
        (then
          (once (agent_holds ?c) )
          (once (on ?c ?c) )
          (once (not (in_motion ?c) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (total-score) )
)
(:scoring
  (count-once-per-objects blockIncorrectlyPicked:blue_dodgeball)
)
)



(define (game game-id-474) (:domain medium-objects-room-v1)
(:setup
  (exists (?tb - (either basketball dodgeball pillow) ?c6 - cube_block)
    (forall (?o3 - cube_block)
      (game-conserved
        (in_motion ?o3)
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballHitsBinBottom
      (exists (?b - pyramid_block)
        (then
          (once (and (open ?b) (agent_holds ?b) ) )
          (once (not (in ?b ?b) ) )
          (once (in_motion ?b) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (> (count-once-per-objects dodgeballHitsBinBottom) 50 )
      (not
        (>= (count dodgeballHitsBinBottom:pink_dodgeball) (* 3 (count dodgeballHitsBinBottom:blue_dodgeball:golfball:blue_dodgeball) )
        )
      )
    )
    (>= (+ (count dodgeballHitsBinBottom:golfball) (count dodgeballHitsBinBottom:golfball:golfball) )
      6
    )
  )
)
(:scoring
  (* 20 4 )
)
)



(define (game game-id-475) (:domain medium-objects-room-v1)
(:setup
  (exists (?c - hexagonal_bin)
    (game-conserved
      (on ?c ?c)
    )
  )
)
(:constraints
  (and
    (forall (?o2 - triangular_ramp)
      (and
        (preference ballThrownOntoTarget
          (exists (?t - triangular_ramp ?r - ball)
            (then
              (hold (agent_holds desk) )
              (once (in_motion ?o2) )
              (hold (not (in rug ?o2) ) )
            )
          )
        )
      )
    )
    (preference beachballOnRug
      (exists (?b - (either chair bridge_block) ?h - pyramid_block)
        (then
          (once (in_motion upside_down) )
          (once (and (not (agent_holds room_center) ) (adjacent ?h rug) ) )
          (once (agent_holds ?h) )
        )
      )
    )
    (forall (?x - building)
      (and
        (preference ballThrownToChair
          (exists (?h - hexagonal_bin)
            (then
              (hold (not (in ?x ?h) ) )
              (once (and (not (in_motion ?h) ) (agent_holds room_center) ) )
              (once (is_setup_object ?x) )
            )
          )
        )
        (preference ballRolledOnRampToRug
          (exists (?r - curved_wooden_ramp)
            (then
              (hold (in_motion ?r) )
              (once (agent_holds ?r) )
              (hold (game_start ) )
            )
          )
        )
        (preference cubeThrownToBin
          (exists (?d2 - ball ?b - dodgeball)
            (then
              (once (same_color upright desk) )
              (once (not (in ?x desk) ) )
              (once (not (adjacent ?b door) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-same-positions cubeThrownToBin:beachball) (total-score) )
    (> (count cubeThrownToBin:dodgeball) (+ (* 0 )
        (* (count-once-per-objects ballRolledOnRampToRug:golfball) 5 )
      )
    )
  )
)
(:scoring
  (count cubeThrownToBin:top_drawer)
)
)



(define (game game-id-476) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (in_motion front)
  )
)
(:constraints
  (and
    (forall (?b9 - cube_block)
      (and
        (preference ballThrownIntoTarget
          (then
            (once (adjacent_side ?b9 ?b9 bed) )
            (once (not (touch ?b9 ?b9) ) )
            (once (in ?b9 ?b9) )
          )
        )
        (preference itemsTurnedOff
          (exists (?c3 - hexagonal_bin)
            (then
              (hold-while (agent_holds bed) (in_motion room_center) (not (same_color ?c3 ?c3) ) )
              (hold-while (and (or (agent_holds ?b9) (not (and (and (agent_holds ?c3) (same_color ?c3 ?b9) ) (on ?b9 ?c3) ) ) ) (not (not (game_over ) ) ) ) (not (on ?b9 ?b9) ) )
            )
          )
        )
        (preference throwFromEdgeOfRug
          (exists (?tb - (either game_object cylindrical_block))
            (at-end
              (or
                (not
                  (not
                    (and
                      (not
                        (agent_holds ?b9)
                      )
                      (agent_holds ?b9)
                      (not
                        (agent_holds ?tb)
                      )
                      (between ?tb ?b9 ?b9)
                    )
                  )
                )
                (agent_holds ?b9)
                (touch ?b9 agent)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 6 (count-once throwFromEdgeOfRug:top_drawer) )
)
(:scoring
  (count ballThrownIntoTarget:green)
)
)



(define (game game-id-477) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (< 1 1)
    )
    (forall (?p - dodgeball)
      (game-optional
        (in ?p ?p)
      )
    )
    (and
      (forall (?c2 - (either dodgeball cube_block))
        (game-conserved
          (not
            (agent_holds ?c2)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockKnockedFromBuildingInBin
      (exists (?l ?b ?b ?t1 - chair)
        (then
          (once (in ?b ?t1) )
          (hold (in_motion ?l) )
          (hold (not (not (adjacent_side ?b ?b ?l) ) ) )
        )
      )
    )
    (preference dodgeballThrownToBin
      (exists (?c - (either pencil alarm_clock))
        (then
          (hold (or (< 1 (distance ?c ?c)) (not (exists (?t - game_object) (agent_holds ?t) ) ) ) )
          (once (between ?c ?c ?c) )
          (once (agent_holds ?c) )
          (hold (exists (?d - ball) (agent_holds ?d) ) )
          (hold (touch ?c ?c) )
        )
      )
    )
    (preference throwInBin
      (exists (?g - hexagonal_bin ?o3 - pyramid_block)
        (then
          (hold (agent_holds pink_dodgeball) )
          (once (agent_holds ?o3) )
          (hold (and (same_color ?o3 ?o3) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-external-objects dodgeballThrownToBin:yellow:top_drawer) (count blockKnockedFromBuildingInBin:basketball:dodgeball) )
)
(:scoring
  (* (+ (* 15 1 )
      2
    )
    2
  )
)
)



(define (game game-id-478) (:domain medium-objects-room-v1)
(:setup
  (forall (?t - hexagonal_bin)
    (forall (?h - (either dodgeball laptop))
      (forall (?l1 - hexagonal_bin)
        (exists (?w - (either pink yellow_cube_block))
          (exists (?c - ball)
            (and
              (game-conserved
                (agent_holds ?l1)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b2 - hexagonal_bin)
      (and
        (preference ballThrownToRampToBed
          (exists (?h - (either yellow_cube_block key_chain alarm_clock pyramid_block cellphone hexagonal_bin book) ?t - building)
            (then
              (hold (agent_holds rug) )
              (once (in_motion ?b2) )
              (once (and (in_motion bed) (and (above ?t ?b2) (or (adjacent ?t ?t) (exists (?b - ball ?b6 - beachball) (and (in_motion ?t) (not (and (not (agent_holds ?b6) ) (agent_holds ?b2) ) ) (and (on ?t ?t) (and (not (in_motion desk) ) (agent_holds ?b2) ) ) ) ) ) (on ?b2 ?b2) (same_type agent agent) (and (not (agent_holds ?b2) ) (and (not (is_setup_object ?b2) ) (not (and (on rug ?t) (in ?b2 ?b2) ) ) (agent_holds ?t) ) ) (agent_holds ?t) ) (on ?b2 ?b2) (>= 3 (x_position ?b2)) (and (above ?b2 ?t) ) (and (exists (?b ?h - ball) (on ?h upside_down) ) (object_orientation pink ?b2) (in_motion ?t) (not (on ?t ?t) ) ) (on ?t ?b2) (and (< 1 5) (not (in door ?b2) ) ) (in ?b2 room_center) (or (not (and (not (agent_holds ?b2) ) (and (and (on ?t ?b2) (agent_holds ?t) ) (agent_holds ?t) ) ) ) (adjacent pink_dodgeball ?b2) (in_motion ?b2) ) (adjacent rug ?t) (forall (?h - building ?b3 - hexagonal_bin ?c6 - game_object ?c6 - ball) (not (on ?c6 ?b2) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (+ 10 (count-once ballThrownToRampToBed:alarm_clock) 10 (count-once ballThrownToRampToBed:beachball) (count-once ballThrownToRampToBed:beachball) )
      8
    )
    (>= (total-time) (* 5 2 10 )
    )
  )
)
(:scoring
  (count-once ballThrownToRampToBed:dodgeball)
)
)



(define (game game-id-479) (:domain few-objects-room-v1)
(:setup
  (exists (?c - block ?h - building)
    (exists (?o ?ob - game_object)
      (game-optional
        (< (distance agent ?ob) (distance ?h ?ob))
      )
    )
  )
)
(:constraints
  (and
    (preference blockInTowerKnocked
      (exists (?h - curved_wooden_ramp)
        (at-end
          (not
            (= (distance ?h ?h) (distance desk bed))
          )
        )
      )
    )
    (preference dodgeballHitsPillowWithoutTouchingBlock
      (exists (?bl - hexagonal_bin ?d - block)
        (then
          (once (agent_holds ?d) )
          (once (on ?d ?d) )
          (once (in_motion agent) )
        )
      )
    )
  )
)
(:terminal
  (> 1 (count-once-per-objects blockInTowerKnocked:yellow_cube_block) )
)
(:scoring
  (- (+ (> (* 5 (count blockInTowerKnocked:red:doggie_bed:blue) )
        (* (* (- 3 )
            1
          )
          2
          (* (/ (count blockInTowerKnocked:golfball) (* (count-once-per-objects blockInTowerKnocked:green) 15 )
            )
            3
          )
          (- 2 )
          (count-once-per-objects dodgeballHitsPillowWithoutTouchingBlock:pink_dodgeball)
          5
          (count dodgeballHitsPillowWithoutTouchingBlock:beachball)
          (* (external-forall-maximize (count-once-per-objects dodgeballHitsPillowWithoutTouchingBlock:dodgeball) ) 2 )
          (<= 8 3 )
          (external-forall-maximize
            (* (* (* 3 )
                (* 10 (* 3 (count dodgeballHitsPillowWithoutTouchingBlock:hexagonal_bin) )
                )
              )
              (count-once-per-objects dodgeballHitsPillowWithoutTouchingBlock:basketball)
              2
              (count-shortest blockInTowerKnocked:doggie_bed)
              (* (* (count-same-positions dodgeballHitsPillowWithoutTouchingBlock:basketball) 15 1 (- (count blockInTowerKnocked:pink:alarm_clock) )
                  (count-once-per-external-objects blockInTowerKnocked)
                  (count blockInTowerKnocked:yellow)
                  (count blockInTowerKnocked:beachball)
                  (count-once-per-objects blockInTowerKnocked:dodgeball)
                  (= (count-once-per-external-objects blockInTowerKnocked:basketball) 3 )
                  10
                  (count dodgeballHitsPillowWithoutTouchingBlock:doggie_bed)
                  10
                )
                (* (count-once-per-objects blockInTowerKnocked:top_drawer) )
                2
              )
              (count blockInTowerKnocked:green)
              10
              (* (count dodgeballHitsPillowWithoutTouchingBlock:golfball:basketball) (count dodgeballHitsPillowWithoutTouchingBlock:hexagonal_bin) (count blockInTowerKnocked:yellow) (* 10 10 )
                (count-once dodgeballHitsPillowWithoutTouchingBlock:basketball)
                5
                (count-once-per-external-objects blockInTowerKnocked:dodgeball:dodgeball)
                (* (- 2 )
                  (count dodgeballHitsPillowWithoutTouchingBlock:beachball:beachball)
                )
                4
              )
              (count-once dodgeballHitsPillowWithoutTouchingBlock:tan:basketball)
            )
          )
          (count-longest dodgeballHitsPillowWithoutTouchingBlock:blue_dodgeball:golfball)
          3
        )
      )
      (count-once-per-objects dodgeballHitsPillowWithoutTouchingBlock:beachball)
    )
  )
)
)



(define (game game-id-480) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (game-conserved
        (in pink_dodgeball room_center)
      )
    )
    (forall (?b - dodgeball)
      (and
        (game-conserved
          (and
            (above ?b ?b)
            (not
              (and
                (on ?b ?b)
                (not
                  (on ?b ?b)
                )
              )
            )
          )
        )
        (forall (?c - ball)
          (game-optional
            (in_motion ?c)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?w - doggie_bed ?p - pillow)
      (and
        (preference objectThrownFromRug
          (exists (?d - hexagonal_bin)
            (then
              (hold-while (and (and (in_motion agent) (and (adjacent ?p ?p) (in_motion ?p) ) ) (touch ?p floor) (and (and (in_motion ?d) (in_motion upright) ) (in_motion ?p) ) ) (not (adjacent ?p ?d) ) )
              (once (and (and (not (toggled_on ?p) ) (in_motion ?d) ) (in_motion ?d) ) )
              (once (not (not (not (in_motion ?p) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (- (count-once-per-objects objectThrownFromRug:doggie_bed) )
    (count objectThrownFromRug:red)
  )
)
(:scoring
  (+ (= (count-once objectThrownFromRug:purple) (count objectThrownFromRug:basketball:blue_dodgeball) )
    (* 5 (* 2 7 )
    )
  )
)
)



(define (game game-id-481) (:domain many-objects-room-v1)
(:setup
  (forall (?b - chair ?f - hexagonal_bin)
    (forall (?b4 - dodgeball ?d - dodgeball)
      (and
        (forall (?h - dodgeball ?ob - hexagonal_bin)
          (game-conserved
            (faces bed ?d)
          )
        )
        (game-conserved
          (agent_holds ?f)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockFromRugToDesk
      (exists (?w - dodgeball)
        (then
          (once-measure (and (not (= 1 1) ) (and (in_motion ?w) (agent_holds room_center) ) ) (distance rug ?w) )
          (once (not (on ?w blinds) ) )
          (once (not (or (agent_holds ?w) (and (and (in ?w desk) ) (agent_holds ?w) ) ) ) )
        )
      )
    )
    (preference tanObjectMovedToRoomCenter
      (exists (?l2 ?w2 - tan_cube_block ?w1 - cylindrical_block)
        (then
          (once (is_setup_object ?w1) )
          (once (is_setup_object ?w1) )
          (once (equal_z_position ?w1 ?w1) )
        )
      )
    )
    (preference otherObjectsOnDeskShelf
      (exists (?w - hexagonal_bin)
        (then
          (once (and (toggled_on ?w) (< (distance_side ?w ?w ?w) 4) (not (and (and (not (on ?w ?w) ) (agent_holds ?w) ) (game_over ) ) ) ) )
          (hold (in_motion ?w) )
          (hold (and (in_motion ?w) ) )
        )
      )
    )
    (preference gameObjectToBin
      (exists (?o - triangular_ramp)
        (then
          (once (agent_holds ?o) )
          (hold-while (and (and (agent_holds ?o) (agent_holds agent) (in_motion door) ) (agent_holds ?o) (agent_holds ?o) ) (and (agent_holds rug) (forall (?b - blinds) (and (and (in_motion agent) (and (in_motion ?o) (touch ?o floor) ) ) (agent_holds ?b) ) ) ) (in_motion ?o) )
          (hold (not (in_motion ?o) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (external-forall-maximize (count otherObjectsOnDeskShelf) ) )
)
(:scoring
  (+ (count tanObjectMovedToRoomCenter:dodgeball:golfball) (count-increasing-measure tanObjectMovedToRoomCenter:pink_dodgeball) )
)
)



(define (game game-id-482) (:domain many-objects-room-v1)
(:setup
  (forall (?b - hexagonal_bin)
    (and
      (game-conserved
        (agent_holds ?b)
      )
      (and
        (game-conserved
          (and
            (on upright ?b)
            (agent_holds ?b)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?o2 - (either dodgeball cylindrical_block) ?ob - (either cube_block dodgeball))
        (then
          (once (agent_holds ?ob) )
          (hold (not (= (distance ?ob ?ob) 9) ) )
          (once (not (= (distance yellow ?ob) 9) ) )
        )
      )
    )
    (preference throwMovesBeachballWithoutKnockingTeddy
      (exists (?b - tan_cube_block ?o2 - beachball)
        (at-end
          (not
            (< 1 1)
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (external-forall-minimize (count-once-per-objects throwMovesBeachballWithoutKnockingTeddy:dodgeball) ) )
)
(:scoring
  (count-once-per-objects throwMovesBeachballWithoutKnockingTeddy:brown:red)
)
)



(define (game game-id-483) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (exists (?o1 ?h - cylindrical_block)
        (and
          (and
            (and
              (forall (?w1 - building ?l - (either dodgeball) ?l2 - dodgeball)
                (exists (?o - dodgeball)
                  (forall (?h - hexagonal_bin)
                    (game-optional
                      (agent_holds ?o1)
                    )
                  )
                )
              )
            )
            (exists (?h - doggie_bed)
              (exists (?h - ball)
                (exists (?b4 - game_object)
                  (exists (?b ?c1 - teddy_bear)
                    (forall (?h - hexagonal_bin ?h - dodgeball)
                      (game-conserved
                        (agent_holds ?b4)
                      )
                    )
                  )
                )
              )
            )
            (game-conserved
              (touch ?o1 ?o1)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - building)
      (and
        (preference pillowThrownToDoggieBed
          (exists (?b1 - hexagonal_bin ?r - book ?c - block ?o - hexagonal_bin ?l ?b - hexagonal_bin)
            (then
              (once (<= (distance green ?l) (distance ?h ?l)) )
              (once (agent_holds ?l) )
              (once (and (in_motion ?l) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count pillowThrownToDoggieBed:pink) (count-once-per-objects pillowThrownToDoggieBed:basketball) )
)
(:scoring
  (count-once-per-objects pillowThrownToDoggieBed:yellow)
)
)



(define (game game-id-484) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?o - tall_cylindrical_block)
      (game-optional
        (< (building_size ?o) (distance ?o ?o))
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - game_object)
      (and
        (preference throwToRampToBin
          (at-end
            (adjacent_side ?d ?d ?d ?d)
          )
        )
      )
    )
  )
)
(:terminal
  (<= (* 10 3 )
    1
  )
)
(:scoring
  (count-once-per-objects throwToRampToBin:orange)
)
)



(define (game game-id-485) (:domain medium-objects-room-v1)
(:setup
  (not
    (exists (?o - hexagonal_bin)
      (exists (?s - game_object ?bl - dodgeball)
        (game-optional
          (is_setup_object desk)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?h - hexagonal_bin ?c4 - hexagonal_bin ?r1 - hexagonal_bin ?c ?d - hexagonal_bin ?h ?b - curved_wooden_ramp)
        (then
          (once (exists (?l - drawer ?b6 - hexagonal_bin ?t ?l2 - dodgeball) (in_motion top_drawer) ) )
          (hold (and (and (and (in_motion ?b) (in ?h ?b) ) (in ?b desk) (not (not (agent_holds front_left_corner) ) ) ) (on ?h green_golfball) ) )
          (once (not (agent_holds ?h) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (> 5 (count throwBallToBin:rug) )
    (>= 5 (count-measure throwBallToBin:dodgeball) )
    (>= 9 8 )
  )
)
(:scoring
  (* 0 (+ (count-once-per-objects throwBallToBin:red) 15 (count throwBallToBin:pyramid_block) )
    (+ 5 15 )
    5
    3
    6
  )
)
)



(define (game game-id-486) (:domain medium-objects-room-v1)
(:setup
  (exists (?d - ball)
    (game-conserved
      (adjacent ?d ?d)
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?o ?w2 - red_dodgeball)
        (then
          (once (in_motion ?o) )
          (once (in_motion ?o) )
          (once (and (in ?o ?w2) (not (not (and (on ?w2 agent) (in_motion room_center) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (count throwAttempt:cube_block) )
)
(:scoring
  (count throwAttempt:dodgeball)
)
)



(define (game game-id-487) (:domain many-objects-room-v1)
(:setup
  (not
    (forall (?c6 - color)
      (and
        (exists (?h - hexagonal_bin)
          (exists (?c - pillow)
            (exists (?b9 - red_dodgeball)
              (game-optional
                (and
                  (not
                    (not
                      (agent_holds ?c)
                    )
                  )
                  (on ?c6 ?h)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference golfballLandsInBinThroughRamp
      (exists (?g ?h - hexagonal_bin)
        (at-end
          (agent_holds agent)
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 4 (total-time) )
    (= (* (* (* (count golfballLandsInBinThroughRamp:basketball) (count golfballLandsInBinThroughRamp:blue_dodgeball) (count-once-per-external-objects golfballLandsInBinThroughRamp:blue_dodgeball) (count golfballLandsInBinThroughRamp:hexagonal_bin) (+ (* (+ (* 180 60 )
                  1
                )
                10
              )
              (count golfballLandsInBinThroughRamp:triangle_block)
            )
            (* 4 (count golfballLandsInBinThroughRamp:red_pyramid_block) )
            10
            (external-forall-maximize
              (* 5 2 )
            )
            (count golfballLandsInBinThroughRamp:pink_dodgeball)
            (- (* (+ (count golfballLandsInBinThroughRamp:purple) (count golfballLandsInBinThroughRamp:golfball) )
                (count-once-per-external-objects golfballLandsInBinThroughRamp:dodgeball:dodgeball)
              )
            )
            15
            10
          )
          (+ (count-once golfballLandsInBinThroughRamp:yellow_pyramid_block) (count-once-per-objects golfballLandsInBinThroughRamp:pink_dodgeball:dodgeball) )
        )
        (+ (- (count golfballLandsInBinThroughRamp:doggie_bed) )
          300
        )
      )
      (total-score)
    )
    (< (count-once golfballLandsInBinThroughRamp:alarm_clock) 4 )
  )
)
(:scoring
  (+ 3 2 1 )
)
)



(define (game game-id-488) (:domain medium-objects-room-v1)
(:setup
  (forall (?b - hexagonal_bin)
    (and
      (game-optional
        (not
          (agent_holds ?b)
        )
      )
      (forall (?b - hexagonal_bin ?b1 - pillow ?h - beachball)
        (game-optional
          (not
            (agent_holds rug)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference pillowMovedToRoomCenter
      (exists (?d - pyramid_block)
        (then
          (once-measure (= 1 1) (building_size ?d) )
          (once (in_motion ?d) )
          (once (agent_holds ?d) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 3 (* 1 (count-once-per-external-objects pillowMovedToRoomCenter:yellow) )
    )
    (count-once-per-objects pillowMovedToRoomCenter:dodgeball)
  )
)
(:scoring
  (count-once-per-objects pillowMovedToRoomCenter:blue_dodgeball)
)
)



(define (game game-id-489) (:domain medium-objects-room-v1)
(:setup
  (exists (?o - ball)
    (forall (?d ?s - bridge_block ?c1 - ball)
      (and
        (exists (?bl - hexagonal_bin)
          (game-conserved
            (and
              (in_motion ?bl)
              (in_motion ?bl)
            )
          )
        )
        (and
          (and
            (and
              (and
                (exists (?b3 - building)
                  (and
                    (forall (?l3 - triangular_ramp ?l - blue_cube_block)
                      (game-conserved
                        (not
                          (agent_holds agent)
                        )
                      )
                    )
                    (game-optional
                      (in pink ?b3)
                    )
                    (forall (?b - teddy_bear ?p - ball)
                      (exists (?d - game_object)
                        (game-conserved
                          (< 10 (distance door ?o))
                        )
                      )
                    )
                  )
                )
                (game-optional
                  (not
                    (in_motion ?c1)
                  )
                )
                (and
                  (game-optional
                    (not
                      (on ?c1 ?c1)
                    )
                  )
                )
                (exists (?c1 - hexagonal_bin)
                  (exists (?l2 - building)
                    (game-conserved
                      (and
                        (on ?c1 ?l2)
                        (touch desk ?o)
                      )
                    )
                  )
                )
              )
              (exists (?o1 - drawer ?d - game_object)
                (forall (?c5 - ball ?d - chair ?p - curved_wooden_ramp)
                  (and
                    (and
                      (and
                        (forall (?r - hexagonal_bin)
                          (game-conserved
                            (not
                              (<= 1 (distance ?o ?c1))
                            )
                          )
                        )
                        (game-conserved
                          (= (distance ?p ?o) (distance ?p ?c1) (distance ?o ?c1))
                        )
                        (and
                          (game-optional
                            (on ?o ?o)
                          )
                          (exists (?w - cube_block ?c - teddy_bear)
                            (and
                              (and
                                (forall (?l1 - chair ?b5 - curved_wooden_ramp)
                                  (and
                                    (and
                                      (forall (?l - teddy_bear ?c - hexagonal_bin)
                                        (game-conserved
                                          (not
                                            (agent_holds ?o)
                                          )
                                        )
                                      )
                                      (or
                                        (and
                                          (game-conserved
                                            (and
                                              (and
                                                (exists (?d - shelf)
                                                  (and
                                                    (and
                                                      (agent_holds ?d)
                                                      (agent_holds ?c)
                                                    )
                                                    (not
                                                      (not
                                                        (not
                                                          (agent_holds agent)
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                                (agent_holds ?d)
                                                (touch ?d ?c)
                                              )
                                              (agent_holds ?b5)
                                            )
                                          )
                                          (not
                                            (game-conserved
                                              (not
                                                (touch ?b5 ?p)
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                              (exists (?o - (either ball key_chain))
                                (game-optional
                                  (not
                                    (in_motion agent)
                                  )
                                )
                              )
                            )
                          )
                        )
                        (game-conserved
                          (and
                            (on ?c1 ?d)
                            (not
                              (in_motion ?p)
                            )
                          )
                        )
                      )
                      (exists (?b - hexagonal_bin ?h - doggie_bed)
                        (game-conserved
                          (and
                            (in_motion floor)
                            (and
                              (and
                                (not
                                  (adjacent ?p ?c1)
                                )
                                (agent_holds ?d)
                              )
                              (touch ?o agent)
                            )
                            (< 4 (distance desk ?o))
                          )
                        )
                      )
                      (game-optional
                        (agent_holds ?d)
                      )
                    )
                    (game-conserved
                      (and
                        (agent_holds ?p)
                        (agent_holds ?c1)
                        (in_motion top_shelf)
                        (in_motion ?o)
                        (and
                          (agent_holds rug)
                          (not
                            (agent_holds ?c1)
                          )
                        )
                        (and
                          (not
                            (and
                              (and
                                (>= (distance ?c1 ?p) (distance desk ?c1))
                                (not
                                  (agent_holds ?p)
                                )
                              )
                              (agent_holds room_center)
                            )
                          )
                          (agent_holds ?o)
                        )
                        (agent_holds ?p)
                        (agent_holds ?p)
                        (agent_holds ?o)
                        (in_motion agent)
                      )
                    )
                  )
                )
              )
              (and
                (forall (?d - (either cube_block lamp rug))
                  (and
                    (game-optional
                      (and
                        (in_motion ?d)
                        (on ?d agent)
                      )
                    )
                    (exists (?b - blinds)
                      (game-conserved
                        (agent_holds ?d)
                      )
                    )
                    (and
                      (game-conserved
                        (agent_holds ?c1)
                      )
                      (game-conserved
                        (in_motion rug)
                      )
                    )
                  )
                )
              )
              (game-optional
                (agent_holds ?c1)
              )
            )
            (game-conserved
              (in_motion ?c1)
            )
            (exists (?s - game_object)
              (and
                (game-conserved
                  (agent_holds ?s)
                )
                (forall (?h - hexagonal_bin ?ob - (either yellow_cube_block desktop))
                  (exists (?b ?l ?h ?t ?o4 ?p ?d ?t ?r ?g - game_object)
                    (and
                      (game-conserved
                        (in_motion ?g)
                      )
                    )
                  )
                )
                (game-conserved
                  (same_object ?o ?o)
                )
              )
            )
          )
          (game-conserved
            (not
              (on ?o ?c1)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o4 - hexagonal_bin)
      (and
        (preference dodgeballFromRugToBin
          (exists (?o1 - hexagonal_bin ?d - dodgeball)
            (then
              (once (agent_holds ?o4) )
              (once (on ?o4 floor) )
              (once (or (adjacent ?d ?o4) (not (in_motion ?o4) ) ) )
            )
          )
        )
        (preference dodgeballFromBlockToBin
          (exists (?p - drawer ?o5 - hexagonal_bin)
            (then
              (hold (not (adjacent_side ?o5 side_table ?o5) ) )
              (once (agent_holds ?o4) )
              (once (same_color ?o5 ?o4) )
            )
          )
        )
        (preference throwKnocksOverBear
          (exists (?c - hexagonal_bin)
            (at-end
              (forall (?f - curved_wooden_ramp)
                (not
                  (not
                    (and
                      (< (distance ?o4 west_wall) 1)
                      (agent_holds ?c)
                    )
                  )
                )
              )
            )
          )
        )
        (preference throwGolfballToBin
          (exists (?b - wall)
            (at-end
              (in_motion room_center)
            )
          )
        )
      )
    )
    (preference thrownBallReachesEnd
      (exists (?p3 - doggie_bed)
        (then
          (once (and (agent_holds desk) (not (in ?p3 ?p3) ) ) )
          (hold (on ?p3 ?p3) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 1 (count throwGolfballToBin:pink) )
    (> (count-once thrownBallReachesEnd:dodgeball) (+ (count dodgeballFromRugToBin:red) 4 )
    )
    (<= (external-forall-minimize (count throwGolfballToBin:blue_cube_block) ) (count dodgeballFromRugToBin:beachball) )
  )
)
(:scoring
  (>= (* (* (count-once-per-objects throwKnocksOverBear:pink) (* 2 (* (count dodgeballFromRugToBin:pink) (count-once-per-objects throwGolfballToBin:yellow) )
        )
      )
      8
    )
    (count-longest dodgeballFromRugToBin:golfball)
  )
)
)



(define (game game-id-490) (:domain few-objects-room-v1)
(:setup
  (exists (?s - cube_block ?b5 ?h ?o4 - hexagonal_bin ?h - curved_wooden_ramp)
    (game-conserved
      (and
        (exists (?o1 - ball)
          (in_motion ?o1)
        )
        (touch ?h desk)
      )
    )
  )
)
(:constraints
  (and
    (preference bounceBallToBin
      (exists (?r - (either cellphone pyramid_block cellphone))
        (then
          (once (and (not (and (in agent ?r) (and (not (not (is_setup_object ?r) ) ) (not (and (on ?r agent) (on ?r bed) ) ) (in_motion door) ) ) ) (in_motion ?r) (between ?r ?r ?r) ) )
          (once (and (and (exists (?p3 - wall) (in ?p3 ?p3) ) (in_motion ?r) ) (and (agent_holds ?r) (not (and (and (touch ?r agent) (agent_holds ?r) (exists (?b4 - hexagonal_bin) (in_motion rug) ) (not (or (agent_holds agent) (not (object_orientation ?r desk) ) ) ) ) (opposite ?r ?r) ) ) ) ) )
          (once (not (not (in_motion desk) ) ) )
        )
      )
    )
    (preference ballThrownThroughRampToBin
      (exists (?b ?h - block ?b5 - dodgeball)
        (then
          (once (or (agent_holds ?b5) (touch yellow ?b5) ) )
          (hold (and (not (not (in_motion ?b5) ) ) (or (touch ?b5 ?b5) (adjacent ?b5 top_drawer) (< 0.5 1) ) ) )
          (hold (in_motion top_shelf) )
        )
      )
    )
  )
)
(:terminal
  (> 6 (+ 0 3 )
  )
)
(:scoring
  (* 3 (external-forall-maximize (count bounceBallToBin:blue_dodgeball) ) )
)
)



(define (game game-id-491) (:domain many-objects-room-v1)
(:setup
  (forall (?b6 - curved_wooden_ramp)
    (game-conserved
      (agent_holds ?b6)
    )
  )
)
(:constraints
  (and
    (preference matchingBuildingBuilt
      (exists (?b - teddy_bear ?h - hexagonal_bin)
        (at-end
          (> (distance ?h ?h) (distance upside_down ?h))
        )
      )
    )
  )
)
(:terminal
  (= 3 (count-once-per-objects matchingBuildingBuilt:dodgeball:pyramid_block) )
)
(:scoring
  (count matchingBuildingBuilt:blue_cube_block)
)
)



(define (game game-id-492) (:domain many-objects-room-v1)
(:setup
  (exists (?d - wall)
    (forall (?h - (either tall_cylindrical_block yellow_cube_block) ?c3 - hexagonal_bin ?h ?s - (either beachball laptop key_chain cylindrical_block))
      (game-optional
        (touch ?d ?s)
      )
    )
  )
)
(:constraints
  (and
    (forall (?bl - (either golfball cd blue_cube_block lamp))
      (and
        (preference blockFromRugToDesk
          (exists (?c - red_dodgeball ?r2 - building ?p2 - building ?p - cube_block)
            (then
              (hold (not (in_motion agent) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 30 3 )
  )
)
(:scoring
  (count-once-per-objects blockFromRugToDesk:cube_block)
)
)



(define (game game-id-493) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (< 1 0)
  )
)
(:constraints
  (and
    (forall (?b - hexagonal_bin)
      (and
        (preference baseBlockInTowerAtEnd
          (exists (?p - pillow)
            (then
              (hold (on ?p ?p) )
              (hold (or (object_orientation ?b ?p) (adjacent ?b ?b) ) )
              (hold (agent_holds ?p) )
              (once (in ?b ?b) )
              (once (above ?b bed) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (count-once-per-objects baseBlockInTowerAtEnd:pink_dodgeball) )
)
(:scoring
  (+ (count-longest baseBlockInTowerAtEnd:book:dodgeball) (* 7 3 )
  )
)
)



(define (game game-id-494) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?b1 - cube_block ?h - (either floor tall_cylindrical_block))
      (forall (?b ?o ?b - (either basketball cd))
        (forall (?h ?r ?o - hexagonal_bin)
          (exists (?w1 - cube_block ?b - blue_cube_block ?h - dodgeball)
            (game-optional
              (not
                (not
                  (adjacent ?b ?b)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - curved_wooden_ramp ?l1 - dodgeball)
      (and
        (preference teddyBearHitsBall
          (at-end
            (agent_holds ?l1)
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (> (external-forall-maximize (+ (= (* (count teddyBearHitsBall:blue_cube_block) (count teddyBearHitsBall:red:cylindrical_block) 100 )
            )
            (* (* 2 (* (count teddyBearHitsBall:brown) 7 )
                1
                (* (count-once-per-external-objects teddyBearHitsBall:beachball) (/ (* (<= (count-once-per-objects teddyBearHitsBall:pink) (count-once teddyBearHitsBall:red:hexagonal_bin:golfball) )
                      3
                    )
                    (count teddyBearHitsBall:beachball:green)
                  )
                )
                5
                3
              )
              15
            )
          )
        )
        (* (* 3 50 )
          5
        )
      )
      (<= (total-time) (count teddyBearHitsBall:tan) )
      (or
        (or
          (>= (total-time) 9 )
          (>= (* 6 5 )
            (* (count-once-per-external-objects teddyBearHitsBall:beachball) (count teddyBearHitsBall:dodgeball) )
          )
        )
        (or
          (> 3 (count teddyBearHitsBall:pyramid_block) )
          (or
            (> (+ (count-once-per-objects teddyBearHitsBall:book) 1 )
              2
            )
            (>= (* (count-once-per-objects teddyBearHitsBall:dodgeball:golfball) (count teddyBearHitsBall:dodgeball) )
              (total-score)
            )
          )
        )
      )
    )
  )
)
(:scoring
  (* (+ 5 0 )
    (- (count-overlapping teddyBearHitsBall:pink) )
  )
)
)



(define (game game-id-495) (:domain many-objects-room-v1)
(:setup
  (exists (?b - desk_shelf ?l4 - doggie_bed)
    (exists (?b - hexagonal_bin)
      (game-conserved
        (not
          (not
            (and
              (in rug ?b)
              (and
                (and
                  (= (distance ?b ?l4) (distance floor ?l4))
                  (in_motion ?b)
                )
                (in ?l4 ?l4)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c - hexagonal_bin)
      (and
        (preference itemsBroken
          (exists (?h - hexagonal_bin)
            (then
              (hold (same_color ?c ?c) )
              (hold (and (not (not (in_motion ?h) ) ) (in_motion ?h) ) )
              (hold (or (agent_holds ?c) (not (in_motion ?c) ) ) )
            )
          )
        )
        (preference throwAttemptFromDoor
          (exists (?l3 ?o5 - (either doggie_bed block cube_block))
            (then
              (hold (or (on ?l3 ?c) (not (or (on ?o5 room_center) (between ?c ?c ?o5) ) ) ) )
              (once (and (adjacent ?c ?o5) (game_start ) (in ?l3 desk) ) )
              (once (and (not (not (and (not (< 4 (distance brown room_center)) ) (in_motion ?l3) ) ) ) (and (not (in_motion ?c) ) (not (agent_holds pink) ) ) ) )
            )
          )
        )
      )
    )
    (preference throwBallToDoggieBedOffWall
      (exists (?c - cube_block)
        (then
          (once (in_motion ?c) )
          (once (> (distance_side room_center agent ?c) (distance ?c door)) )
          (hold (on ?c room_center) )
        )
      )
    )
  )
)
(:terminal
  (>= (<= (* (count throwAttemptFromDoor:dodgeball) (= (count-total itemsBroken:orange:pink) 10 )
      )
      3
    )
    (total-score)
  )
)
(:scoring
  (* (+ 4 (* (count itemsBroken) (* (= (count-unique-positions itemsBroken:pink_dodgeball) 2 3 )
          (- (count throwBallToDoggieBedOffWall:basketball) )
        )
      )
    )
    (- 3 )
  )
)
)



(define (game game-id-496) (:domain medium-objects-room-v1)
(:setup
  (forall (?d - (either teddy_bear dodgeball))
    (and
      (and
        (game-optional
          (adjacent ?d ?d)
        )
        (and
          (game-conserved
            (and
              (not
                (not
                  (in_motion ?d)
                )
              )
              (same_type ?d agent)
            )
          )
          (game-conserved
            (in_motion ?d)
          )
        )
        (game-conserved
          (< 10 2)
        )
      )
      (exists (?d2 - (either bed golfball) ?d - ball)
        (exists (?c5 - dodgeball)
          (exists (?d - yellow_cube_block ?bl - hexagonal_bin)
            (game-conserved
              (agent_holds agent)
            )
          )
        )
      )
      (game-optional
        (touch ?d ?d)
      )
    )
  )
)
(:constraints
  (and
    (preference ballInOrOnBin
      (exists (?c - game_object ?x - dodgeball ?s - cube_block ?b9 - hexagonal_bin)
        (then
          (once (and (game_start ) (same_object ?b9 ?b9) ) )
          (once (and (agent_holds rug) (< (distance ?b9 ?b9) 2) ) )
          (once (and (not (touch ?b9 ?b9) ) (agent_holds ?b9) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (- (count ballInOrOnBin:beachball) (- 2 )
    )
    (+ (- (count-once-per-objects ballInOrOnBin:dodgeball) )
      (count ballInOrOnBin:basketball)
    )
  )
)
(:scoring
  (count ballInOrOnBin:dodgeball)
)
)



(define (game game-id-497) (:domain many-objects-room-v1)
(:setup
  (exists (?s - hexagonal_bin ?tb - (either hexagonal_bin chair))
    (forall (?b - color)
      (game-conserved
        (and
          (touch ?b ?tb)
          (adjacent ?tb ?tb)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballHitsBinBottom
      (exists (?h - game_object)
        (then
          (once (agent_holds rug) )
          (once (agent_holds ?h) )
          (once (exists (?c2 - (either alarm_clock)) (and (exists (?b6 - dodgeball ?r1 - doggie_bed ?o - doggie_bed ?l2 - ball) (not (in_motion ?h) ) ) (= 7 (distance ?c2 pink)) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (total-score) )
)
(:scoring
  (count-once-per-objects dodgeballHitsBinBottom:book:bed)
)
)



(define (game game-id-498) (:domain few-objects-room-v1)
(:setup
  (exists (?s - game_object ?w - cube_block)
    (game-optional
      (adjacent ?w ?w)
    )
  )
)
(:constraints
  (and
    (preference smallObjectThrownToBed
      (exists (?d1 - game_object)
        (then
          (once (in_motion ?d1) )
          (once (on ?d1 right) )
          (once (and (agent_holds ?d1) (and (faces ?d1 ?d1) (< 5 1) ) ) )
        )
      )
    )
    (forall (?h - ball)
      (and
        (preference ballThrownThroughRampToBin
          (then
            (hold (not (on ?h ?h) ) )
            (once (or (not (not (adjacent ?h ?h) ) ) ) )
            (once (and (and (and (in_motion upright) (game_over ) ) (agent_holds ?h) ) (in_motion ?h) ) )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (not
        (> (count smallObjectThrownToBed:blue_pyramid_block) 2 )
      )
      (and
        (> (- (count ballThrownThroughRampToBin:cube_block) )
          (- (external-forall-maximize (* (> (count-once-per-objects ballThrownThroughRampToBin:pink) (external-forall-maximize (+ (count ballThrownThroughRampToBin:golfball) (* (count ballThrownThroughRampToBin:yellow) (* (count-once-per-objects ballThrownThroughRampToBin:purple:blue) (+ 5 6 5 )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
        (< (+ 5 (count ballThrownThroughRampToBin:block) )
          (count-once-per-objects ballThrownThroughRampToBin:pink_dodgeball)
        )
        (>= (count smallObjectThrownToBed:blue_cube_block:beachball) (count-once-per-objects ballThrownThroughRampToBin:dodgeball) )
      )
      (not
        (>= (* 20 (count smallObjectThrownToBed:yellow) )
          (count ballThrownThroughRampToBin:hexagonal_bin)
        )
      )
    )
  )
)
(:scoring
  (count-once-per-objects ballThrownThroughRampToBin:yellow:golfball)
)
)



(define (game game-id-499) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (exists (?c - (either dodgeball pyramid_block golfball))
        (forall (?o3 - game_object)
          (game-conserved
            (= 5 2)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToBin
      (exists (?b - hexagonal_bin ?w2 - game_object)
        (then
          (once (in_motion ?w2) )
          (once (not (and (not (in_motion ?w2) ) (and (not (not (in_motion rug) ) ) (agent_holds ?w2) (equal_z_position ?w2 ?w2) ) (not (agent_holds ?w2) ) (on ?w2 desk) (and (not (in_motion ?w2) ) (between ?w2 ?w2 ?w2) ) (and (in_motion ?w2) (on ?w2 ?w2) (agent_holds desk) (is_setup_object agent) ) (in_motion ?w2) (and (< (distance ?w2 ?w2) 8) ) (and (game_start ) (agent_holds desk) ) (adjacent_side ?w2 ?w2 ?w2 ?w2) (in_motion ?w2) (and (agent_holds ?w2) (and (and (in_motion ?w2) (touch ?w2 ?w2) ) (adjacent ?w2 ?w2) ) ) ) ) )
          (hold (and (< 2 (distance ?w2 ?w2)) (agent_holds ?w2) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (- 10 )
      (count throwToBin:red)
    )
  )
)
(:scoring
  (* (count-once throwToBin:pink) 15 )
)
)



(define (game game-id-500) (:domain medium-objects-room-v1)
(:setup
  (exists (?c6 - block ?c1 - ball)
    (exists (?p ?h ?c - color)
      (exists (?b4 - book)
        (game-optional
          (and
            (agent_holds ?b4)
            (in_motion ?c1)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - hexagonal_bin ?o3 - curved_wooden_ramp ?w1 - (either pillow blue_cube_block) ?c - (either pyramid_block basketball))
      (and
        (preference throwBallToDoggieBed
          (exists (?o1 - dodgeball ?h ?d - hexagonal_bin)
            (at-end
              (agent_holds south_west_corner)
            )
          )
        )
        (preference throwFromBehindChairsInBin
          (exists (?c - hexagonal_bin ?p2 - ball)
            (then
              (hold (in agent ?c) )
              (hold (or (on ?c ?p2) (not (and (same_color ?p2 ?c) (adjacent_side ?p2 ?p2 ?c) ) ) ) )
              (once (on ?p2 ?c) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* 10 30 )
    (count-once throwBallToDoggieBed:beachball)
  )
)
(:scoring
  (* 3 10 )
)
)



(define (game game-id-501) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - color ?h ?o - block)
      (exists (?b - doggie_bed)
        (game-conserved
          (not
            (not
              (agent_holds ?b)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference smallItemsInPlace
      (exists (?p2 - block)
        (then
          (once (not (on ?p2 desk) ) )
          (hold (not (and (and (and (< 5 2) (in ?p2 ?p2) ) (and (on rug ?p2) (faces ?p2 ?p2) ) ) (in ?p2 ?p2) ) ) )
          (hold (and (in_motion ?p2) (< (distance ?p2 front) (distance ?p2 ?p2)) ) )
        )
      )
    )
    (preference binKnockedOver
      (exists (?l1 - hexagonal_bin)
        (at-end
          (agent_holds ?l1)
        )
      )
    )
  )
)
(:terminal
  (>= -30 (total-score) )
)
(:scoring
  (count-once-per-objects binKnockedOver:tall_cylindrical_block:yellow:pyramid_block)
)
)



(define (game game-id-502) (:domain many-objects-room-v1)
(:setup
  (exists (?d - dodgeball ?b - ball)
    (game-optional
      (agent_holds ?b)
    )
  )
)
(:constraints
  (and
    (forall (?d - chair ?d - dodgeball)
      (and
        (preference throwAttemptFromDoor
          (exists (?db - hexagonal_bin)
            (at-end
              (on ?db ?d)
            )
          )
        )
      )
    )
    (preference ballRolledOnRampToRug
      (exists (?d - hexagonal_bin ?h - hexagonal_bin)
        (then
          (hold-while (and (in_motion door) (= (distance ?h ?h) 2) ) (on ?h agent) )
          (hold (agent_holds ?h) )
          (hold (and (< (distance ?h ?h) (distance agent ?h)) (exists (?p3 - game_object) (touch agent ?h) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 8 7 )
)
(:scoring
  (count throwAttemptFromDoor:yellow)
)
)



(define (game game-id-503) (:domain medium-objects-room-v1)
(:setup
  (forall (?o1 - (either dodgeball alarm_clock) ?h - (either bridge_block bridge_block dodgeball laptop))
    (exists (?h - dodgeball)
      (game-conserved
        (in_motion ?h)
      )
    )
  )
)
(:constraints
  (and
    (preference pinkObjectMovedToRoomCenter
      (exists (?t - curved_wooden_ramp)
        (at-end
          (not
            (and
              (and
                (not
                  (agent_holds ?t)
                )
                (agent_holds ?t)
              )
              (in_motion ?t)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects pinkObjectMovedToRoomCenter:blue_pyramid_block:blue) (+ (count pinkObjectMovedToRoomCenter:pink) 5 )
  )
)
(:scoring
  (count pinkObjectMovedToRoomCenter:green)
)
)



(define (game game-id-504) (:domain few-objects-room-v1)
(:setup
  (forall (?h - dodgeball)
    (forall (?p - ball ?r - block)
      (exists (?w1 - hexagonal_bin ?bl - ball)
        (game-conserved
          (agent_holds ?r)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blocksInPlace
      (exists (?h - hexagonal_bin)
        (then
          (hold (not (and (on rug desk) ) ) )
          (once (on ?h ?h) )
          (once (and (in front ?h) (not (object_orientation pillow door) ) ) )
        )
      )
    )
  )
)
(:terminal
  (< 18 (count-once blocksInPlace:pink_dodgeball) )
)
(:scoring
  (* (count-once-per-objects blocksInPlace:yellow) 15 )
)
)



(define (game game-id-505) (:domain few-objects-room-v1)
(:setup
  (exists (?w1 - (either floor bridge_block) ?tb - building ?h - dodgeball)
    (not
      (exists (?s - (either teddy_bear))
        (game-conserved
          (agent_holds ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballsInPlace
      (exists (?h - curved_wooden_ramp ?h - dodgeball)
        (at-end
          (in_motion desk)
        )
      )
    )
  )
)
(:terminal
  (>= (+ 4 (+ (count-overlapping dodgeballsInPlace:yellow) (count dodgeballsInPlace) )
      3
    )
    (total-score)
  )
)
(:scoring
  (count-total dodgeballsInPlace:hexagonal_bin)
)
)



(define (game game-id-506) (:domain few-objects-room-v1)
(:setup
  (exists (?h - pillow)
    (game-conserved
      (>= (distance_side ?h agent ?h) (distance ?h ?h))
    )
  )
)
(:constraints
  (and
    (forall (?h - hexagonal_bin ?d - dodgeball)
      (and
        (preference objectMovedRoomSide
          (then
            (once (not (in ?d ?d) ) )
            (once (in ?d ?d) )
            (once (and (forall (?b3 - curved_wooden_ramp ?b5 - teddy_bear ?b1 - hexagonal_bin) (exists (?r2 - dodgeball) (and (or (on ?b1 ?b1) (and (in ?d desk) (agent_holds upright) (not (and (in room_center ?d) ) ) ) ) (not (on ?d ?d) ) ) ) ) (agent_holds ?d) ) )
          )
        )
        (preference ballThrownToBin
          (exists (?l - (either cellphone ball))
            (at-end
              (and
                (and
                  (equal_z_position ?l ?l)
                  (forall (?l1 - ball ?d2 - hexagonal_bin)
                    (on ?d2 ?d)
                  )
                  (< 1 (distance ?d ?l))
                )
                (and
                  (agent_holds ?l)
                  (agent_holds floor)
                  (not
                    (not
                      (not
                        (or
                          (not
                            (and
                              (and
                                (object_orientation ?l ?l)
                                (and
                                  (not
                                    (and
                                      (not
                                        (agent_holds green_golfball)
                                      )
                                      (touch blinds ?d)
                                    )
                                  )
                                  (in_motion door)
                                )
                              )
                              (not
                                (agent_holds floor)
                              )
                              (and
                                (not
                                  (adjacent ?l ?l)
                                )
                                (on desk ?l)
                              )
                            )
                          )
                          (in ?d ?l)
                        )
                      )
                    )
                  )
                  (not
                    (agent_holds agent)
                  )
                  (and
                    (adjacent ?l desk)
                    (in_motion ?d)
                    (and
                      (in desk ?d)
                      (not
                        (not
                          (in_motion ?l)
                        )
                      )
                    )
                  )
                  (equal_x_position pink_dodgeball ?l)
                  (adjacent agent ?d)
                  (not
                    (adjacent ?l ?d)
                  )
                )
              )
            )
          )
        )
        (preference teddyBearLandsInBin
          (exists (?c - ball ?o - (either wall teddy_bear))
            (then
              (once (touch ?o ?o) )
              (hold (>= (distance ?o ?o) (distance ?o ?o)) )
              (once (not (in_motion ?d) ) )
              (once (on ?o ?o) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (and
      (>= (count-once-per-objects objectMovedRoomSide:cube_block:pink_dodgeball:doggie_bed) 3 )
      (> (total-time) 3 )
    )
  )
)
(:scoring
  (* (count-once-per-external-objects ballThrownToBin:pink) (+ (* (+ (count objectMovedRoomSide:dodgeball:golfball) 20 )
        (* (* (* 20 (count ballThrownToBin:dodgeball) )
            (- 4 )
          )
          2
        )
      )
      1
    )
  )
)
)



(define (game game-id-507) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - wall)
      (exists (?d - shelf)
        (game-conserved
          (on room_center ?d)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o - cube_block)
      (and
        (preference greenObjectMovedToRoomCenter
          (exists (?b - triangular_ramp ?b2 - building)
            (at-end
              (not
                (agent_holds ?b2)
              )
            )
          )
        )
        (preference teddyBearHitsBall
          (exists (?c2 - tall_cylindrical_block)
            (at-end
              (in ?c2 ?c2)
            )
          )
        )
      )
    )
    (forall (?o1 - block)
      (and
        (preference blockFromRugToDesk
          (exists (?d - hexagonal_bin ?h - teddy_bear)
            (then
              (once (not (on ?o1 bed) ) )
              (once (in_motion ?o1) )
              (once (on ?h ?h) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (= 15 (count teddyBearHitsBall:beachball) )
      (total-score)
    )
  )
)
(:scoring
  (count-once-per-objects blockFromRugToDesk:golfball:blue)
)
)



(define (game game-id-508) (:domain few-objects-room-v1)
(:setup
  (exists (?h - wall ?b - block)
    (game-optional
      (and
        (on ?b desk)
        (not
          (not
            (in ?b ?b)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwMovesBeachballWithoutKnockingTeddy
      (exists (?o1 - building)
        (at-end
          (and
            (in ?o1 ?o1)
            (agent_holds ?o1)
          )
        )
      )
    )
  )
)
(:terminal
  (= (total-score) (count-once-per-objects throwMovesBeachballWithoutKnockingTeddy:red:beachball) )
)
(:scoring
  (count-overlapping throwMovesBeachballWithoutKnockingTeddy:blue_dodgeball)
)
)



(define (game game-id-509) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?h ?b ?t2 ?b ?o2 ?p1 - blue_cube_block)
      (or
        (exists (?h - ball)
          (forall (?h - ball)
            (game-conserved
              (broken agent)
            )
          )
        )
        (exists (?h - (either cd desktop cube_block) ?d - dodgeball)
          (exists (?h - (either desktop dodgeball) ?b - shelf ?b8 - hexagonal_bin)
            (game-optional
              (in ?b ?b8)
            )
          )
        )
      )
    )
    (exists (?h - (either doggie_bed dodgeball) ?c1 - dodgeball)
      (exists (?o - block)
        (forall (?d - dodgeball)
          (and
            (and
              (game-conserved
                (not
                  (and
                    (and
                      (agent_holds ?d)
                      (in_motion ?o)
                      (same_type ?c1 ?o)
                    )
                    (exists (?o3 - dodgeball)
                      (adjacent floor upright)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
    (not
      (and
        (forall (?w - ball)
          (or
            (exists (?c ?b - shelf)
              (exists (?d - building)
                (and
                  (exists (?h - block ?c3 ?c6 - hexagonal_bin)
                    (exists (?b4 - cylindrical_block)
                      (exists (?b6 - color)
                        (game-conserved
                          (rug_color_under agent south_wall)
                        )
                      )
                    )
                  )
                  (forall (?d ?b3 ?h ?o2 - game_object)
                    (game-optional
                      (not
                        (and
                          (agent_holds ?c)
                          (agent_crouches )
                        )
                      )
                    )
                  )
                  (forall (?c - building ?l1 - dodgeball ?t2 - (either triangle_block pyramid_block))
                    (exists (?o1 - teddy_bear ?b1 - dodgeball)
                      (or
                        (game-conserved
                          (in ?b1 ?c)
                        )
                        (exists (?c - block ?b - hexagonal_bin)
                          (exists (?o - building ?s - hexagonal_bin)
                            (forall (?t - cylindrical_block)
                              (forall (?l3 - wall)
                                (exists (?c1 - (either alarm_clock laptop main_light_switch dodgeball))
                                  (game-conserved
                                    (rug_color_under ?l3 ?t2)
                                  )
                                )
                              )
                            )
                          )
                        )
                        (game-conserved
                          (> 1 1)
                        )
                      )
                    )
                  )
                )
              )
            )
            (exists (?h - teddy_bear)
              (forall (?b - dodgeball)
                (and
                  (and
                    (and
                      (and
                        (exists (?w - drawer)
                          (and
                            (forall (?h - block)
                              (and
                                (forall (?c ?d - color ?bl - shelf ?d - (either wall mug yellow lamp mug alarm_clock alarm_clock) ?r1 - triangular_ramp)
                                  (forall (?h - hexagonal_bin)
                                    (exists (?bl - hexagonal_bin ?h ?w1 ?h - game_object)
                                      (and
                                        (forall (?c6 - hexagonal_bin)
                                          (game-conserved
                                            (exists (?o5 - building ?s - hexagonal_bin)
                                              (not
                                                (rug_color_under desk ?h)
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b ?c - (either beachball hexagonal_bin) ?d - hexagonal_bin ?o3 ?s - cylindrical_block)
      (and
        (preference nonBlockPlacedInBuilding
          (then
            (hold (same_type desk ?o3) )
            (once (agent_holds ?s) )
          )
        )
      )
    )
  )
)
(:terminal
  (= 3 (count nonBlockPlacedInBuilding:rug:dodgeball) )
)
(:scoring
  (* 10 (<= 5 3 )
  )
)
)



(define (game game-id-510) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?r - (either basketball side_table))
      (and
        (forall (?o2 - (either chair pencil))
          (exists (?b2 - ball)
            (forall (?d ?d ?r ?c6 ?b8 ?w - hexagonal_bin)
              (and
                (and
                  (forall (?h - hexagonal_bin ?b3 - building)
                    (forall (?t - building ?g - (either dodgeball cube_block))
                      (game-conserved
                        (not
                          (in_motion ?b2)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
        (game-conserved
          (same_color ?r front)
        )
        (game-conserved
          (agent_holds ?r)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o2 - building)
      (and
        (preference itemsHidingScreens
          (exists (?l - hexagonal_bin ?p1 - ball)
            (then
              (once (in_motion ?o2) )
              (once (between agent desk desk) )
            )
          )
        )
      )
    )
    (preference ballInOrOnBin
      (exists (?b - cube_block)
        (then
          (once (game_start ) )
          (once (not (in ?b ?b) ) )
          (once (and (and (in_motion rug) (in_motion ?b) ) (agent_holds ?b) (on ?b ?b) (not (in bed ?b) ) ) )
        )
      )
    )
    (forall (?l - hexagonal_bin)
      (and
        (preference pyramidBlockAtopTowerAtEnd
          (exists (?x - ball)
            (then
              (hold (and (agent_holds ?x) (and (and (in_motion ?l) (< (distance ?l ?l) 4) ) (exists (?w1 - teddy_bear ?r - beachball) (and (and (on ?r desk) (in_motion pillow) ) (not (on room_center ?l) ) ) ) ) ) )
              (hold-while (adjacent ?l ?l) (agent_holds ?x) (adjacent pink_dodgeball ?x) )
              (once (and (not (faces ?l floor) ) (and (not (agent_holds ?x) ) (in_motion ?l) (in_motion rug) ) ) )
            )
          )
        )
      )
    )
    (forall (?h - golfball ?f - dodgeball)
      (and
        (preference blockCorrectlyPicked
          (exists (?c ?c - pyramid_block)
            (then
              (once (not (not (not (agent_holds agent) ) ) ) )
              (once (not (exists (?x - hexagonal_bin) (not (equal_z_position ?x ?x) ) ) ) )
              (hold (in_motion ?f) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count pyramidBlockAtopTowerAtEnd:block) (count blockCorrectlyPicked:block) )
    (>= (count-once-per-objects ballInOrOnBin:yellow) 5 )
  )
)
(:scoring
  (- (count-once-per-external-objects ballInOrOnBin:beachball:yellow:pink) )
)
)



(define (game game-id-511) (:domain few-objects-room-v1)
(:setup
  (exists (?c - hexagonal_bin ?g - bridge_block)
    (not
      (and
        (and
          (forall (?h ?h - curved_wooden_ramp ?r - hexagonal_bin ?p3 - (either beachball golfball))
            (game-conserved
              (agent_holds ?p3)
            )
          )
        )
        (game-conserved
          (not
            (not
              (on ?g ?g)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?t2 - shelf)
      (and
        (preference ballToBinFromBed
          (exists (?o - hexagonal_bin)
            (then
              (hold-while (not (or (in_motion ?o) (on front ?t2) ) ) (not (agent_holds ?t2) ) )
              (once (and (and (agent_holds ?o) (in agent ?o) ) (>= (distance_side ?o front ?t2 rug) (distance ?t2 ?t2)) ) )
              (hold (in_motion ?o) )
            )
          )
        )
        (preference blocksInPlace
          (exists (?o3 ?h - hexagonal_bin)
            (at-end
              (or
                (and
                  (agent_crouches )
                  (and
                    (exists (?h - cube_block ?o - building)
                      (in_motion ?t2)
                    )
                    (touch ?h ?t2)
                  )
                )
                (same_color ?t2 ?o3)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 8 (count-once-per-objects blocksInPlace:dodgeball:basketball:dodgeball) )
)
(:scoring
  (* (count ballToBinFromBed:purple:blue_dodgeball:beachball) (count-once blocksInPlace:beachball) )
)
)



(define (game game-id-512) (:domain medium-objects-room-v1)
(:setup
  (forall (?t - golfball)
    (forall (?h - triangular_ramp)
      (exists (?o - doggie_bed)
        (and
          (and
            (game-conserved
              (and
                (exists (?r - ball ?tb - (either dodgeball cylindrical_block doggie_bed book))
                  (in_motion ?h)
                )
                (and
                  (touch agent agent)
                  (not
                    (adjacent ?o ?h)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?f - ball)
      (and
        (preference throwAttempt
          (exists (?h - red_dodgeball)
            (then
              (hold-while (not (< 1 1) ) (agent_holds ?h) )
              (hold (agent_holds ?f) )
              (once (in_motion ?f) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (+ 3 (+ (count-unique-positions throwAttempt) )
    )
    (total-score)
  )
)
(:scoring
  (* (count throwAttempt:cube_block:yellow:basketball) (- (count throwAttempt:dodgeball) )
  )
)
)



(define (game game-id-513) (:domain medium-objects-room-v1)
(:setup
  (exists (?s - golfball)
    (and
      (and
        (and
          (forall (?b4 - (either game_object golfball))
            (game-optional
              (agent_holds ?s)
            )
          )
        )
      )
      (forall (?g - cube_block ?d2 - block)
        (exists (?o - cube_block)
          (forall (?h - dodgeball ?o - hexagonal_bin)
            (forall (?d ?c - pillow ?o - hexagonal_bin)
              (and
                (forall (?r - dodgeball)
                  (game-conserved
                    (in ?d2 ?s)
                  )
                )
                (exists (?h - hexagonal_bin ?b - (either pink pillow cellphone))
                  (and
                    (or
                      (and
                        (and
                          (game-conserved
                            (on rug bed)
                          )
                          (and
                            (and
                              (and
                                (and
                                  (and
                                    (game-optional
                                      (and
                                        (in_motion ?s)
                                        (agent_holds agent)
                                      )
                                    )
                                  )
                                )
                                (forall (?h - dodgeball ?b - (either book key_chain pyramid_block cd))
                                  (forall (?s - hexagonal_bin)
                                    (game-conserved
                                      (in_motion ?d2)
                                    )
                                  )
                                )
                              )
                              (and
                                (game-conserved
                                  (in_motion ?d2)
                                )
                                (game-conserved
                                  (and
                                    (in_motion ?o)
                                    (touch ?d2 upright)
                                  )
                                )
                              )
                            )
                          )
                        )
                        (game-conserved
                          (in ?d2 ?b)
                        )
                        (game-conserved
                          (agent_holds ?b)
                        )
                      )
                    )
                    (and
                      (forall (?o ?b - (either chair laptop))
                        (game-optional
                          (in_motion ?o)
                        )
                      )
                    )
                    (exists (?h - (either cube_block cellphone pencil))
                      (and
                        (exists (?b - game_object ?d - building)
                          (and
                            (not
                              (game-conserved
                                (in_motion ?b)
                              )
                            )
                          )
                        )
                        (and
                          (game-optional
                            (same_object ?b ?d2)
                          )
                        )
                        (game-conserved
                          (agent_holds ?b)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockThrowAttempt
      (exists (?h - wall)
        (at-end
          (and
            (< (distance ?h ?h) 1)
            (not
              (on ?h ?h)
            )
          )
        )
      )
    )
    (preference throwAttempt
      (exists (?b1 - game_object)
        (then
          (once (>= 1 (distance ?b1 ?b1)) )
          (hold (in_motion ?b1) )
          (hold (agent_holds ?b1) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (count-overlapping throwAttempt:pyramid_block:golfball) )
)
(:scoring
  (count blockThrowAttempt:beachball)
)
)



(define (game game-id-514) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?t - dodgeball)
      (game-optional
        (not
          (not
            (touch ?t ?t)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToWallToAgent
      (exists (?b - hexagonal_bin)
        (at-end
          (and
            (exists (?r1 - hexagonal_bin ?l1 - hexagonal_bin)
              (in desk upright)
            )
            (not
              (in_motion ?b)
            )
          )
        )
      )
    )
    (preference throwToBin
      (exists (?ob - (either desktop cd))
        (then
          (once (and (agent_holds ?ob) (and (and (and (not (agent_holds front) ) (and (in_motion ?ob) (exists (?b - (either floor tall_cylindrical_block pyramid_block)) (not (not (<= (distance ?ob ?ob) (distance ?b block)) ) ) ) ) ) (same_color ?ob ?ob) ) (between ?ob ?ob ?ob) ) ) )
          (hold (and (not (in_motion ?ob) ) (in ?ob ?ob) (or (or (on ?ob rug) (equal_x_position ?ob ?ob) ) (in_motion top_drawer) ) (agent_holds ?ob) (game_start ) (not (broken ?ob) ) (in_motion ?ob) (adjacent ?ob agent) (agent_holds pink) (and (and (not (on ?ob ?ob) ) (< 1 (distance_side agent ?ob ?ob)) (agent_holds ?ob) ) (not (and (agent_holds ?ob) (and (or (adjacent green_golfball pink_dodgeball) ) (agent_holds ?ob) ) (agent_holds ?ob) ) ) ) (adjacent_side ?ob agent ?ob) (adjacent ?ob ?ob) ) )
          (hold (not (on ?ob top_shelf) ) )
        )
      )
    )
    (preference throwBallFromOtherBallToBin
      (exists (?h - wall ?d - block)
        (then
          (once (not (and (> (distance door ?d) 7) ) ) )
          (once (on ?d ?d) )
          (hold (touch ?d ?d) )
        )
      )
    )
  )
)
(:terminal
  (or
    (and
      (>= 6 (* (+ (+ (count-shortest throwBallFromOtherBallToBin:blue_dodgeball) (+ (* 3 )
                (* (count-once-per-objects ballThrownToWallToAgent:beachball:dodgeball:golfball) (count-once-per-objects throwBallFromOtherBallToBin:hexagonal_bin) )
              )
            )
            (count ballThrownToWallToAgent:basketball)
            (* (count-increasing-measure throwBallFromOtherBallToBin:basketball:dodgeball) (count throwToBin) )
            (+ 100 6 (- (- (count ballThrownToWallToAgent:yellow_cube_block:green) )
              )
              2
              (count throwToBin:yellow_cube_block)
              10
              (+ 6 5 )
              2
              (count-once-per-objects throwToBin:golfball)
            )
            (count-shortest ballThrownToWallToAgent:orange)
            3
            (count-once throwBallFromOtherBallToBin:pink:pink)
            (count-shortest throwToBin:dodgeball:yellow)
            (count throwBallFromOtherBallToBin:blue_dodgeball)
            (* (count-once-per-objects throwToBin:hexagonal_bin) 5 )
            (* (- (external-forall-maximize (* 0.7 1 (count throwToBin:beachball) (count-once-per-objects throwBallFromOtherBallToBin:yellow_pyramid_block:block) (external-forall-maximize (* 4 (count-once throwBallFromOtherBallToBin:red:tall_cylindrical_block) )
                    )
                    (* (+ (- 1 )
                        (* 300 (* (+ 20 (count throwBallFromOtherBallToBin:purple) )
                            40
                          )
                          (count-once-per-objects throwToBin:orange)
                        )
                      )
                      10
                    )
                  )
                )
              )
              (* (count ballThrownToWallToAgent:green) 10 )
            )
            (- 6 )
          )
          (count-once throwToBin:golfball)
          4
          (* 3 1 6 )
        )
      )
      (>= (total-score) (total-time) )
    )
    (or
      (>= (count-once throwBallFromOtherBallToBin:beachball:golfball) (total-time) )
      (>= (count-longest throwToBin:pink) (* 5 5 )
      )
      (and
        (>= 4 (count-once-per-objects throwBallFromOtherBallToBin:dodgeball) )
        (= (+ 2 (count throwBallFromOtherBallToBin:blue_dodgeball:dodgeball) )
          5
        )
        (> (total-time) 50 )
      )
    )
  )
)
(:scoring
  (count-overlapping throwToBin:yellow)
)
)



(define (game game-id-515) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds agent)
  )
)
(:constraints
  (and
    (preference objectToBinOnFirstTry
      (exists (?r2 - pyramid_block)
        (then
          (once (agent_holds ?r2) )
          (hold-while (adjacent_side ?r2 ?r2 ?r2) (not (exists (?b1 - ball) (touch ?b1 ?b1) ) ) )
          (once (and (agent_holds door) (and (not (and (in ?r2 ?r2) (in_motion ?r2) ) ) (and (not (in_motion ?r2) ) (< (distance ?r2 upside_down) (distance ?r2 ?r2)) ) ) ) )
        )
      )
    )
    (preference blockPlacedInBuilding
      (exists (?d - ball ?d - triangular_ramp)
        (then
          (once (on agent ?d) )
          (once (agent_holds ?d) )
          (once (and (not (not (agent_holds ?d) ) ) ) )
          (hold-while (not (in_motion ?d) ) (and (not (adjacent_side ?d upright desk) ) (agent_holds agent) (not (adjacent_side front front desk ?d) ) (on ?d ?d) (agent_crouches ) (in_motion ?d) ) (agent_holds ?d) )
        )
      )
    )
    (preference throwAttempt
      (exists (?d - hexagonal_bin)
        (then
          (once (not (not (not (agent_holds ?d) ) ) ) )
          (hold (not (in_motion pink) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (total-score) (* (+ (* (external-forall-maximize (* (count-once-per-objects blockPlacedInBuilding:cylindrical_block) (* (count blockPlacedInBuilding:cube_block) (- 5 )
                )
              )
            )
            (+ 6 (* 10 (count blockPlacedInBuilding:cube_block:basketball:dodgeball) )
              (count-once throwAttempt:basketball)
            )
            (- 7 )
            3
            (count objectToBinOnFirstTry:basketball)
            3
          )
          5
        )
        (count-increasing-measure objectToBinOnFirstTry:beachball)
      )
    )
    (and
      (>= (external-forall-maximize (count objectToBinOnFirstTry:blue_dodgeball) ) 9 )
      (>= 5 (- (+ (count-once-per-external-objects throwAttempt) 3 )
        )
      )
      (>= (count-once blockPlacedInBuilding:beachball) (count throwAttempt) )
    )
  )
)
(:scoring
  (count-once-per-objects blockPlacedInBuilding:orange:doggie_bed)
)
)



(define (game game-id-516) (:domain few-objects-room-v1)
(:setup
  (exists (?w1 - dodgeball)
    (forall (?l - ball)
      (and
        (exists (?b - shelf)
          (exists (?c1 - dodgeball ?c ?h ?g ?b ?h ?h ?c6 ?p3 ?l ?r1 - hexagonal_bin)
            (forall (?w - game_object)
              (game-conserved
                (and
                  (in_motion ?g)
                  (not
                    (adjacent ?l agent)
                  )
                  (on ?r1 ?l)
                  (in_motion ?h)
                )
              )
            )
          )
        )
        (game-optional
          (on ?l green_golfball)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - chair)
      (and
        (preference failedThrowToBin
          (exists (?c ?r - hexagonal_bin)
            (then
              (hold (in_motion ?r) )
              (once (agent_holds ?r) )
            )
          )
        )
        (preference dodgeballHitsPillowWithoutTouchingBlock
          (exists (?b - hexagonal_bin)
            (then
              (once (and (adjacent ?b ?b) (in_motion ?b) ) )
              (hold (and (touch blue ?b) (and (and (exists (?b - cube_block) (agent_holds ?b) ) (and (adjacent ?b ?b) (or (and (adjacent agent ?b) (not (adjacent ?b ?b) ) (agent_holds agent) ) (adjacent rug ?b) ) ) ) (and (<= 9 6) (adjacent ?b ?b) (and (exists (?d - wall) (agent_holds ?b) ) (same_color ?b ?b) ) (exists (?w - dodgeball) (not (and (not (not (and (agent_holds desk) (or (and (and (> (distance ?b ?w) (distance ?b ?b)) (not (open ?b) ) ) (in_motion ?b) ) (on ?w room_center) ) (on ?w ?w) ) ) ) (or (in ?b bed) (in_motion ?b) ) ) ) ) ) ) (adjacent ?b agent) (exists (?c - dodgeball) (and (touch ?c ?b) (not (and (not (agent_holds ?c) ) (agent_holds ?c) (and (between ?b ?b ?b) (in_motion ?b) (on ?b ?c) ) ) ) ) ) (not (in front_left_corner ?b) ) (and (not (in_motion rug) ) (rug_color_under top_shelf ?b) ) (in_motion ?b) (and (in_motion agent) (not (not (not (not (agent_holds ?b) ) ) ) ) ) (and (in_motion floor) (< 4 (distance ?b ?b)) ) (and (in_motion ?b) (and (not (open green) ) (on ?b door) ) ) (in_motion ?b) (and (agent_holds desk) (opposite ?b upright) ) ) )
              (once (same_color rug ?b) )
            )
          )
        )
      )
    )
    (forall (?s - hexagonal_bin ?b - game_object)
      (and
        (preference brownObjectMovedToRoomCenter
          (exists (?b - (either blue_cube_block book cellphone))
            (at-end
              (and
                (in_motion ?b)
                (on ?b ?b)
              )
            )
          )
        )
      )
    )
    (preference objectToBinOnFirstTry
      (exists (?d - chair)
        (at-end
          (agent_holds pink_dodgeball)
        )
      )
    )
    (preference cubeBlockThrowAttempt
      (exists (?bl - (either blue_cube_block doggie_bed))
        (then
          (once (exists (?h - curved_wooden_ramp ?d - doggie_bed) (on ?bl desk) ) )
          (once (not (agent_holds ?bl) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (total-score) (count brownObjectMovedToRoomCenter) )
    (>= (total-score) 1 )
    (not
      (>= (- (count-once-per-objects objectToBinOnFirstTry:blue_cube_block) 6 ) (* (count-once-per-objects objectToBinOnFirstTry:red:yellow) 10 )
      )
    )
    (>= 2 10 )
  )
)
(:scoring
  (count dodgeballHitsPillowWithoutTouchingBlock:basketball:dodgeball)
)
)



(define (game game-id-517) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (forall (?p - doggie_bed)
      (< (distance ?p ?p) (distance ?p ?p))
    )
  )
)
(:constraints
  (and
    (preference objectMoved
      (exists (?d - (either side_table bridge_block hexagonal_bin))
        (at-end
          (adjacent ?d ?d)
        )
      )
    )
    (preference throwAttempt
      (exists (?s - dodgeball)
        (then
          (hold (on ?s ?s) )
          (hold (and (or (on ?s ?s) (and (< (distance ?s ?s) 8) (game_over ) ) ) (and (and (> 2 (distance ?s ?s)) (in door ?s) ) (and (agent_holds desk) (and (= (distance rug ?s) (building_size bed) 5) (< (distance ?s rug) 5) (in_motion brown) ) ) ) (not (adjacent ?s ?s) ) (is_setup_object ?s) ) )
          (once (not (not (agent_holds ?s) ) ) )
        )
      )
    )
    (preference blindsOpened
      (exists (?h - teddy_bear ?c - dodgeball)
        (then
          (once (in_motion ?c) )
          (hold (>= (distance ?c ?c) 2) )
        )
      )
    )
  )
)
(:terminal
  (>= 7 (count-unique-positions blindsOpened:hexagonal_bin) )
)
(:scoring
  (count-once throwAttempt:blue_dodgeball:green)
)
)



(define (game game-id-518) (:domain many-objects-room-v1)
(:setup
  (exists (?p2 - golfball ?o - (either key_chain cube_block))
    (game-conserved
      (agent_holds bed)
    )
  )
)
(:constraints
  (and
    (forall (?h - ball ?b - block)
      (and
        (preference castleBuilt
          (exists (?p2 - hexagonal_bin)
            (then
              (once (and (adjacent ?p2 ?b) (in_motion agent) ) )
              (hold (< 1 (distance brown ?p2)) )
              (once (on ?b ?p2) )
            )
          )
        )
        (preference cubeBlockThrowAttempt
          (exists (?o - chair)
            (then
              (hold (touch ?o bed) )
              (hold (object_orientation ?o ?o) )
              (once (and (not (not (in ?b ?o) ) ) (in ?b ?o) (>= 0.5 6) ) )
              (once (in_motion bed) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (count-once-per-objects cubeBlockThrowAttempt:red) 10 )
    (and
      (> (count castleBuilt:beachball) (* (count-once-per-objects castleBuilt:dodgeball) (+ (* 5 1 )
            (count castleBuilt:yellow)
            (count cubeBlockThrowAttempt:orange)
          )
        )
      )
      (>= (count cubeBlockThrowAttempt:golfball) 7 )
      (>= (- 10 )
        (count cubeBlockThrowAttempt:doggie_bed)
      )
    )
    (> (* 2 1 10 (* (external-forall-minimize (count-once-per-external-objects castleBuilt:blue_dodgeball:green) ) 5 (- (count-once-per-objects cubeBlockThrowAttempt:cube_block:yellow) )
          (count-once-per-objects castleBuilt:purple)
          (count castleBuilt:doggie_bed:golfball)
        )
        (count-once castleBuilt:red:dodgeball)
        15
      )
      (total-time)
    )
  )
)
(:scoring
  (* (+ 2 (count castleBuilt:dodgeball:basketball) )
    10
  )
)
)



(define (game game-id-519) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?o1 - flat_block)
      (game-conserved
        (game_start )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c - hexagonal_bin ?b - hexagonal_bin)
      (and
        (preference throwFromEdgeOfRug
          (then
            (hold (on agent ?b) )
            (once (and (and (agent_holds ?b) (and (and (agent_holds ?b) (equal_z_position pillow ?b) ) (and (object_orientation ?b ?b) (not (and (not (is_setup_object ?b) ) ) ) ) ) ) (opposite desk desk) ) )
            (hold-while (or (on desk ?b) (and (game_over ) (touch ?b ?b) ) ) (and (not (and (adjacent ?b ?b) (faces ?b ?b) (not (toggled_on agent) ) ) ) (and (opposite ?b ?b) (not (and (adjacent ?b ?b) (not (agent_holds ?b) ) (and (in_motion ?b) (exists (?o ?b1 ?t ?b ?d ?t2 - cube_block ?c3 - hexagonal_bin) (in_motion ?b) ) ) (not (game_over ) ) ) ) ) ) )
          )
        )
        (preference ballThrownToBin
          (exists (?b - hexagonal_bin ?b - game_object)
            (then
              (once (and (and (< (distance ?b room_center) 2) (< (distance desk ?b) 6) ) (agent_holds ?b) ) )
              (once (same_color ?b ?b) )
              (once (and (touch ?b ?b) (on ?b ?b) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (>= (total-time) (= 2 8 )
      )
      (or
        (or
          (< (total-score) (total-time) )
          (>= (* (count ballThrownToBin:cube_block) (count throwFromEdgeOfRug:dodgeball) )
            10
          )
        )
        (< 15 (count-longest throwFromEdgeOfRug:golfball:dodgeball) )
        (or
          (< 7 6 )
          (>= (total-time) (+ 3 (count-once-per-objects ballThrownToBin:green:green) )
          )
        )
      )
    )
  )
)
(:scoring
  (count-once-per-objects ballThrownToBin:pink:dodgeball)
)
)



(define (game game-id-520) (:domain medium-objects-room-v1)
(:setup
  (exists (?d - hexagonal_bin)
    (game-optional
      (not
        (in_motion ?d)
      )
    )
  )
)
(:constraints
  (and
    (forall (?r - hexagonal_bin)
      (and
        (preference throwMissesBin
          (exists (?d - dodgeball)
            (then
              (hold (on ?d upside_down) )
              (once (and (in ?d bottom_shelf) (not (touch rug agent) ) ) )
              (once (not (not (in pink ?d) ) ) )
            )
          )
        )
        (preference cubeBlockThrownToTopShelf
          (exists (?w1 ?b - hexagonal_bin)
            (then
              (once (in ?b ?b) )
              (once (in_motion ?w1) )
              (hold-while (and (< (distance ?w1 ?r) 1) (in_motion ?r) ) (= (distance ?w1 ?b)) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count cubeBlockThrownToTopShelf:green) 3 )
    (count-once-per-objects throwMissesBin:blue)
  )
)
(:scoring
  (count cubeBlockThrownToTopShelf:dodgeball)
)
)



(define (game game-id-521) (:domain medium-objects-room-v1)
(:setup
  (exists (?o1 - hexagonal_bin)
    (game-optional
      (in desk ?o1)
    )
  )
)
(:constraints
  (and
    (forall (?t2 - (either block dodgeball pyramid_block))
      (and
        (preference cubeBlockInBuilding
          (then
            (once (on ?t2 ?t2) )
            (once (not (and (agent_holds ?t2) ) ) )
            (once (in_motion upside_down) )
          )
        )
        (preference bounceBallToBin
          (exists (?d - dodgeball)
            (then
              (hold (adjacent ?d ?t2) )
              (once (in ?d ?d) )
              (hold (object_orientation ?t2 floor) )
            )
          )
        )
        (preference ballThrownThroughRampAndBlocksToBin
          (exists (?h - (either cube_block pink) ?p - beachball)
            (then
              (once (in_motion ?t2) )
              (hold (and (on ?p ?t2) (and (and (agent_holds ?t2) (in_motion ?p) ) (exists (?r - book) (in_motion ?r) ) ) ) )
              (once (not (not (not (agent_holds rug) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count bounceBallToBin:dodgeball:yellow) (count cubeBlockInBuilding:cube_block) )
)
(:scoring
  (count cubeBlockInBuilding:green)
)
)



(define (game game-id-522) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (same_type main_light_switch agent)
  )
)
(:constraints
  (and
    (preference ballDroppedInBin
      (exists (?r - doggie_bed)
        (then
          (once (on main_light_switch rug) )
          (once (in_motion ?r) )
          (once (on ?r ?r) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ 5 10 )
    (total-score)
  )
)
(:scoring
  (count ballDroppedInBin:blue_pyramid_block)
)
)



(define (game game-id-523) (:domain medium-objects-room-v1)
(:setup
  (exists (?r - dodgeball)
    (game-conserved
      (not
        (forall (?b - ball)
          (agent_holds ?b)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwMissesBin
      (exists (?o2 - (either top_drawer blue_cube_block cd))
        (then
          (hold-while (not (and (is_setup_object ?o2) (and (and (and (agent_holds ?o2) (in_motion agent) ) (and (< 8 1) (in ?o2 ?o2) (not (on bed ?o2) ) (not (>= (x_position ?o2) 4) ) ) ) (in_motion agent) ) ) ) (not (not (in ?o2 ?o2) ) ) )
          (once (not (in south_wall ?o2) ) )
          (once (in_motion agent) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (total-score) )
)
(:scoring
  (count throwMissesBin:dodgeball)
)
)



(define (game game-id-524) (:domain medium-objects-room-v1)
(:setup
  (exists (?c - beachball)
    (game-optional
      (not
        (not
          (forall (?t ?c - pyramid_block)
            (exists (?b8 - hexagonal_bin)
              (in ?t ?c)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToDoggieBed
      (exists (?c - dodgeball ?d2 - ball)
        (then
          (once (< 9 4) )
          (once (not (in_motion ?d2) ) )
          (hold-while (not (on ?d2 ?d2) ) (in ?d2 ?d2) )
        )
      )
    )
  )
)
(:terminal
  (>= (count throwBallToDoggieBed:red) (count throwBallToDoggieBed:yellow) )
)
(:scoring
  (* (+ (count throwBallToDoggieBed:purple) (count-once-per-objects throwBallToDoggieBed:golfball) )
    (- 3 )
  )
)
)



(define (game game-id-525) (:domain few-objects-room-v1)
(:setup
  (exists (?o1 - block)
    (game-optional
      (agent_holds ?o1)
    )
  )
)
(:constraints
  (and
    (preference objectThrownFromRug
      (exists (?b - hexagonal_bin)
        (then
          (hold (in_motion ?b) )
        )
      )
    )
    (preference pyramidBlockAtopTowerAtEnd
      (exists (?d - (either book blue_cube_block))
        (then
          (hold (in ?d ?d) )
          (hold-while (agent_holds ?d) (adjacent ?d ?d) )
          (hold (in_motion ?d) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (total-time) (* (* (count-once-per-objects objectThrownFromRug:pink_dodgeball) (- 2 )
        )
        -30
      )
    )
    (>= (count objectThrownFromRug:pink_dodgeball) 3 )
    (>= 3 8 )
  )
)
(:scoring
  (- 10 )
)
)



(define (game game-id-526) (:domain many-objects-room-v1)
(:setup
  (exists (?g - (either bridge_block dodgeball chair) ?d - doggie_bed ?b6 - game_object ?l2 - hexagonal_bin ?c3 - (either hexagonal_bin))
    (not
      (game-optional
        (in bed ?c3)
      )
    )
  )
)
(:constraints
  (and
    (forall (?o1 - hexagonal_bin)
      (and
        (preference blockInTowerAtEnd
          (exists (?b5 ?b - (either tall_cylindrical_block desktop laptop))
            (then
              (once (in_motion ?b) )
              (hold (not (adjacent room_center ?b) ) )
              (once (exists (?d - building ?b6 - hexagonal_bin) (not (in_motion ?o1) ) ) )
              (once (exists (?h - shelf) (in_motion agent) ) )
              (hold (= (distance desk ?b)) )
              (hold (not (and (in_motion ?b) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (total-score) (+ (+ (* 7 5 (+ (* (count blockInTowerAtEnd:beachball:basketball) 1 )
            5
          )
          (count blockInTowerAtEnd:alarm_clock)
        )
        (* 3 (* (= 7 (count-once blockInTowerAtEnd:blue_pyramid_block:brown) )
            (count-longest blockInTowerAtEnd:tan)
          )
        )
      )
      0.7
    )
  )
)
(:scoring
  (+ 4 (count-unique-positions blockInTowerAtEnd:side_table) )
)
)



(define (game game-id-527) (:domain many-objects-room-v1)
(:setup
  (exists (?db - hexagonal_bin)
    (game-optional
      (and
        (open ?db)
        (agent_holds ?db)
      )
    )
  )
)
(:constraints
  (and
    (preference ballToBinFromBed
      (exists (?l4 - hexagonal_bin)
        (then
          (hold (not (and (< 1 (distance ?l4 ?l4)) (not (= (distance ?l4 ?l4) 4) ) ) ) )
          (hold (in ?l4 ?l4) )
          (hold (not (agent_holds ?l4) ) )
        )
      )
    )
    (preference matchingBuildingBuilt
      (exists (?c - (either flat_block cd))
        (then
          (once (forall (?l2 - cube_block ?b - pillow) (not (not (< 1 1) ) ) ) )
          (once (and (or (in_motion ?c) (agent_crouches ) (toggled_on top_drawer) ) (and (not (on ?c ?c) ) (not (not (agent_holds ?c) ) ) ) ) )
          (once (in agent agent) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (total-score) (count-once-per-objects ballToBinFromBed:book) )
    (>= (total-score) (count matchingBuildingBuilt:dodgeball) )
    (or
      (>= (count-once-per-objects ballToBinFromBed:dodgeball:dodgeball) (total-time) )
      (>= 0 25 )
    )
    (<= (count matchingBuildingBuilt:wall:pyramid_block) 50 )
  )
)
(:scoring
  (* (count matchingBuildingBuilt:yellow:blue_cube_block:wall) (count ballToBinFromBed:dodgeball) (count matchingBuildingBuilt:tan) )
)
)



(define (game game-id-528) (:domain many-objects-room-v1)
(:setup
  (exists (?c - curved_wooden_ramp)
    (and
      (game-conserved
        (on ?c ?c)
      )
      (game-conserved
        (not
          (is_setup_object ?c)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - drawer ?l - (either dodgeball pyramid_block) ?w1 - hexagonal_bin ?w - block)
      (and
        (preference ballThrownIntoTarget
          (exists (?p - hexagonal_bin ?r2 - cube_block)
            (then
              (once (and (in_motion top_drawer) (in ?w ?w) ) )
              (once (adjacent ?r2 ?r2) )
              (hold-while (touch ?w agent) (and (and (not (on room_center ?w) ) (and (rug_color_under ?r2 ?r2) (on ?w ?w) (on ?w ?r2) ) ) (not (exists (?o5 - (either alarm_clock pyramid_block) ?d - hexagonal_bin) (agent_holds ?d) ) ) (agent_holds ?r2) ) )
            )
          )
        )
        (preference pillowThrownToDoggieBed
          (exists (?b6 - (either basketball cellphone))
            (then
              (once (not (not (is_setup_object ?w) ) ) )
              (hold (and (and (and (> (distance ?b6 ?w) (distance ?w ?w)) (touch ?w ?b6) (> 8 8) ) (same_type agent ?b6) ) (or (not (on floor door) ) (adjacent_side ?b6 ?b6 ?w ?w) ) ) )
              (hold (on ?b6 ?w) )
            )
          )
        )
      )
    )
    (forall (?s - hexagonal_bin ?h - bridge_block)
      (and
        (preference binKnockedOver
          (exists (?h - game_object ?b - dodgeball ?s - chair)
            (then
              (once (and (agent_holds ?s) (and (not (in_motion ?h) ) (and (not (on ?s ?s) ) (and (on ?h ?s) (in_motion agent) ) ) ) ) )
              (once (not (agent_holds room_center) ) )
              (hold-while (adjacent ?s desk) (on ?h ?h) )
            )
          )
        )
        (preference dodgeballAndBasketballInBin
          (exists (?c1 - cube_block)
            (then
              (once (agent_holds room_center) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (+ (count binKnockedOver:beachball) 1 )
  )
)
(:scoring
  (= 10 (count ballThrownIntoTarget:beachball:basketball) )
)
)



(define (game game-id-529) (:domain few-objects-room-v1)
(:setup
  (exists (?d - building ?l2 - hexagonal_bin)
    (forall (?c4 - game_object ?db - building)
      (exists (?h - curved_wooden_ramp)
        (forall (?g - teddy_bear)
          (game-conserved
            (in_motion ?db)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference binKnockedOver
      (exists (?p - (either dodgeball golfball blue_cube_block))
        (then
          (once (in ?p ?p) )
          (once (touch ?p ?p) )
          (hold (agent_holds bed) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= 15 (count-once-per-objects binKnockedOver:blue_dodgeball) )
  )
)
(:scoring
  (count-once-per-objects binKnockedOver:yellow)
)
)



(define (game game-id-530) (:domain medium-objects-room-v1)
(:setup
  (forall (?d ?l4 - dodgeball ?d - ball)
    (forall (?w - chair ?c ?l1 ?b ?h - (either cube_block beachball cd))
      (game-optional
        (and
          (not
            (and
              (not
                (and
                  (in_motion room_center)
                  (adjacent bed rug)
                )
              )
              (in_motion ?l1)
              (and
                (is_setup_object ?b)
                (and
                  (and
                    (in_motion ?c)
                    (in_motion ?h)
                  )
                  (> 1 1)
                )
                (adjacent ?c ?c)
              )
              (and
                (agent_holds ?d)
                (in_motion ?b)
              )
            )
          )
          (not
            (and
              (in ?h ?d)
              (< (distance desk ?h) (building_size ?l1))
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - cylindrical_block)
      (and
        (preference throwBallToDoggieBed
          (exists (?l1 - dodgeball ?l1 - game_object)
            (then
              (once (and (in_motion ?b) (in_motion ?b) (agent_holds ?b) ) )
              (once (in_motion ?l1) )
              (once (and (agent_holds ?b) (not (agent_holds desk) ) ) )
            )
          )
        )
        (preference gameBlockFound
          (exists (?bl - teddy_bear)
            (then
              (once (object_orientation ?bl ?b) )
              (once (agent_holds room_center) )
              (once (and (agent_holds pink_dodgeball) (on ?bl ?bl) ) )
            )
          )
        )
        (preference blockOnBlockInTowerAtEnd
          (exists (?g - game_object)
            (then
              (hold (in ?b ?b) )
              (once (agent_holds ?g) )
            )
          )
        )
        (preference ballRolledOnRampToRug
          (exists (?o - red_dodgeball ?f - pyramid_block)
            (then
              (hold (in_motion ?b) )
              (once (in blue ?f) )
              (once (agent_holds ?f) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (< (total-score) (external-forall-maximize (count blockOnBlockInTowerAtEnd:basketball) ) )
      (< (total-score) (total-time) )
    )
  )
)
(:scoring
  (count blockOnBlockInTowerAtEnd:red)
)
)



(define (game game-id-531) (:domain few-objects-room-v1)
(:setup
  (exists (?o - dodgeball ?c4 - hexagonal_bin)
    (game-conserved
      (not
        (equal_z_position ?c4 ?c4)
      )
    )
  )
)
(:constraints
  (and
    (preference throwMovesBeachballWithoutKnockingTeddy
      (exists (?o3 - block)
        (then
          (hold (not (agent_holds ?o3) ) )
          (once (and (faces ?o3 pink_dodgeball) (same_color bed back) ) )
          (once (= 0.5 (distance ?o3 ?o3) 1) )
        )
      )
    )
    (preference thrownBallHitsBlock
      (exists (?o4 - wall)
        (at-end
          (not
            (not
              (on ?o4 rug)
            )
          )
        )
      )
    )
    (forall (?ob - cube_block)
      (and
        (preference ballDroppedInBin
          (then
            (once (exists (?o1 ?t - hexagonal_bin) (not (on upright ?t) ) ) )
            (once (agent_holds ?ob) )
            (once (and (not (not (and (in ?ob bed) (agent_holds ?ob) ) ) ) (and (agent_holds ?ob) (agent_holds ?ob) (in_motion ?ob) (and (agent_holds ?ob) (< 1 (distance ?ob ?ob)) ) (and (not (not (and (on ?ob ?ob) (in_motion ?ob) ) ) ) (in_motion ?ob) ) (touch ?ob ?ob) ) (exists (?h - pillow) (in_motion room_center) ) (not (and (not (and (exists (?o - ball) (and (in rug rug) (faces bed agent) ) ) (and (object_orientation ?ob ?ob) (and (in_motion ?ob) (in ?ob ?ob) ) ) ) ) (not (same_color ?ob agent) ) ) ) ) )
          )
        )
      )
    )
    (preference ballThrownToRampToBed
      (exists (?c - (either chair alarm_clock))
        (at-end
          (same_color ?c bed)
        )
      )
    )
    (preference throwOverRamp
      (exists (?r - hexagonal_bin ?b4 ?p1 - hexagonal_bin ?o ?l3 ?d ?c6 ?p2 ?l3 - flat_block)
        (then
          (once (exists (?h ?ob - dodgeball) (not (agent_holds ?c6) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count ballDroppedInBin:basketball) (* 10 (count thrownBallHitsBlock:basketball:purple) (count ballDroppedInBin:beachball) )
  )
)
(:scoring
  (* 5 (* 6 -10 )
    (count-once-per-objects ballThrownToRampToBed:red:blue_pyramid_block:beachball)
    0
  )
)
)



(define (game game-id-532) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?r ?b4 - hexagonal_bin)
      (exists (?c - shelf)
        (exists (?h - hexagonal_bin ?d - doggie_bed ?r ?bl - desk_shelf)
          (and
            (exists (?d - hexagonal_bin)
              (exists (?h - hexagonal_bin ?r1 - ball)
                (game-optional
                  (in ?d ?bl)
                )
              )
            )
            (game-optional
              (on ?r ?r)
            )
            (and
              (game-optional
                (not
                  (rug_color_under ?c ?b4)
                )
              )
              (and
                (exists (?r - building ?b4 - hexagonal_bin)
                  (and
                    (forall (?s - block ?w - shelf)
                      (game-conserved
                        (touch ?r ?w)
                      )
                    )
                  )
                )
                (game-conserved
                  (in desk ?r)
                )
                (exists (?b ?b6 - doggie_bed)
                  (forall (?b - dodgeball ?c - red_dodgeball)
                    (game-conserved
                      (not
                        (not
                          (not
                            (agent_holds pink_dodgeball)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToBinFromDistance
      (exists (?o - (either dodgeball tall_cylindrical_block))
        (then
          (once (< (distance ?o front) (distance ?o ?o)) )
          (once (on ?o desk) )
          (hold (and (< (distance ?o ?o) (distance ?o ?o)) (not (or (and (agent_holds ?o) (and (and (and (agent_holds ?o) (not (agent_holds ?o) ) ) (touch ?o ?o) (in_motion upright) (open ?o) (on agent ?o) (and (on ?o ?o) (on ?o ?o) (agent_holds ?o) ) ) (not (and (and (not (adjacent ?o ?o) ) (on ?o ?o) ) (and (not (adjacent ?o ?o) ) (not (agent_holds ?o) ) ) ) ) ) ) (agent_holds ?o) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (not
        (< (count-once-per-external-objects throwToBinFromDistance:dodgeball) (* (* 4 2 )
            (* 3 (count throwToBinFromDistance:hexagonal_bin:cube_block) )
          )
        )
      )
      (>= (* (* (* 2 (count-once-per-objects throwToBinFromDistance:basketball) )
            1
            (count throwToBinFromDistance:beachball)
          )
          2
        )
        2
      )
      (<= (- (* (* (count throwToBinFromDistance:blue_pyramid_block) 3 )
            (count-once-per-objects throwToBinFromDistance:blue_dodgeball)
          )
        )
        (count-increasing-measure throwToBinFromDistance:yellow:beachball)
      )
    )
    (>= 10 (total-score) )
  )
)
(:scoring
  (* (* 2 3 10 (count throwToBinFromDistance:golfball) 9 7 )
    (count-overlapping throwToBinFromDistance:purple)
  )
)
)



(define (game game-id-533) (:domain medium-objects-room-v1)
(:setup
  (forall (?d - building ?h - dodgeball)
    (game-optional
      (< (distance ?h ?h) (distance ?h ?h))
    )
  )
)
(:constraints
  (and
    (forall (?bl - chair ?d - doggie_bed)
      (and
        (preference objectWithMatchingColor
          (exists (?b - chair ?p2 - dodgeball)
            (then
              (once (agent_holds ?d) )
              (hold (and (not (not (in ?p2 agent) ) ) (adjacent_side floor ?d ?d) ) )
              (once (agent_holds ?d) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (= (count-once-per-objects objectWithMatchingColor:orange:green) (- 15 )
  )
)
(:scoring
  (count objectWithMatchingColor:green)
)
)



(define (game game-id-534) (:domain few-objects-room-v1)
(:setup
  (exists (?o - cube_block)
    (game-conserved
      (in_motion ?o)
    )
  )
)
(:constraints
  (and
    (preference cubeBlockThrownToTopShelf
      (exists (?r1 - yellow_cube_block)
        (then
          (once (in_motion ?r1) )
          (once (agent_holds ?r1) )
          (hold (not (adjacent desk ?r1) ) )
        )
      )
    )
    (preference throwFromEdgeOfRug
      (exists (?g - building ?d - color ?d2 - curved_wooden_ramp)
        (then
          (once (on agent ?d2) )
          (once (in_motion ?d2) )
          (hold (and (in_motion ?d2) (or (in_motion side_table) (and (agent_holds ?d2) (agent_holds agent) ) ) ) )
          (hold (not (on desk desk) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (and
      (and
        (>= (count-once-per-objects cubeBlockThrownToTopShelf:red_pyramid_block) (+ (count-same-positions cubeBlockThrownToTopShelf:alarm_clock) 6 )
        )
        (>= 3 5 )
        (>= 5 (total-time) )
      )
      (or
        (or
          (and
            (or
              (not
                (> (total-time) (* (+ (count-overlapping throwFromEdgeOfRug) (count cubeBlockThrownToTopShelf:yellow) )
                    (* 3 (count-once-per-objects cubeBlockThrownToTopShelf:blue_dodgeball:dodgeball) )
                  )
                )
              )
              (>= (* (* 3 (count-once-per-objects throwFromEdgeOfRug:blue_dodgeball) )
                  50
                )
                (total-score)
              )
            )
            (not
              (>= (* 5 10 )
                30
              )
            )
            (= (total-time) (count cubeBlockThrownToTopShelf:blue_pyramid_block:dodgeball) )
          )
          (= (count-increasing-measure throwFromEdgeOfRug:yellow) (total-score) )
        )
        (>= (total-time) 20 )
      )
      (>= 3 2 )
    )
  )
)
(:scoring
  (* 8 (count throwFromEdgeOfRug:beachball) )
)
)



(define (game game-id-535) (:domain many-objects-room-v1)
(:setup
  (exists (?b - teddy_bear)
    (not
      (not
        (and
          (and
            (game-conserved
              (equal_x_position ?b ?b)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?p3 - hexagonal_bin)
      (and
        (preference ballThrownOntoTarget
          (exists (?b - game_object)
            (then
              (once (in_motion ?b) )
              (once (or (in_motion ?p3) (in_motion ?p3) ) )
              (once (not (exists (?c6 - cylindrical_block) (and (in_motion ?c6) (agent_holds ?p3) ) ) ) )
            )
          )
        )
      )
    )
    (preference bigObjectThrownToBed
      (exists (?d ?d - (either golfball) ?tb - hexagonal_bin)
        (then
          (once (above ?tb ?tb) )
        )
      )
    )
  )
)
(:terminal
  (>= 1 (count-once-per-objects ballThrownOntoTarget:golfball) )
)
(:scoring
  (count-once bigObjectThrownToBed:beachball)
)
)



(define (game game-id-536) (:domain few-objects-room-v1)
(:setup
  (exists (?h - dodgeball ?d2 - wall)
    (exists (?r - game_object)
      (and
        (and
          (and
            (and
              (exists (?h - hexagonal_bin ?s - (either golfball book ball))
                (game-conserved
                  (and
                    (not
                      (not
                        (and
                          (adjacent ?s ?r)
                          (= (distance ?r brown) (distance room_center ?s))
                          (touch ?r ?d2)
                        )
                      )
                    )
                    (rug_color_under ?s door)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o4 - (either cd yellow cd flat_block) ?b - dodgeball ?o - cube_block)
      (and
        (preference ballThrownToWallToAgent
          (exists (?bl - hexagonal_bin)
            (at-end
              (agent_holds desk)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (<= (* (count ballThrownToWallToAgent) (count-once-per-objects ballThrownToWallToAgent:dodgeball:alarm_clock) )
        2
      )
    )
  )
)
(:scoring
  (count ballThrownToWallToAgent:hexagonal_bin:red)
)
)



(define (game game-id-537) (:domain many-objects-room-v1)
(:setup
  (exists (?p - hexagonal_bin ?o - hexagonal_bin)
    (and
      (and
        (exists (?w1 - cube_block)
          (or
            (forall (?c - (either golfball bed))
              (game-conserved
                (toggled_on ?o)
              )
            )
            (exists (?s - flat_block ?c - hexagonal_bin)
              (game-conserved
                (and
                  (not
                    (and
                      (in_motion bed)
                      (and
                        (and
                          (open ?o)
                          (in_motion ?o)
                        )
                      )
                    )
                  )
                  (not
                    (and
                      (on ?w1 ?w1)
                      (in ?o room_center)
                    )
                  )
                )
              )
            )
            (game-optional
              (in_motion ?o)
            )
          )
        )
        (exists (?o - hexagonal_bin ?d ?c4 - game_object)
          (forall (?b4 - game_object)
            (game-conserved
              (not
                (in_motion desk)
              )
            )
          )
        )
        (forall (?f - teddy_bear)
          (exists (?c - hexagonal_bin ?h - cube_block ?c2 - building)
            (and
              (game-conserved
                (and
                  (on right ?c2)
                  (in agent ?o)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballHitsBin
      (exists (?b - hexagonal_bin)
        (then
          (hold (in_motion ?b) )
          (once (and (in ?b ?b) (agent_holds room_center) ) )
          (once (agent_holds ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= 50 (total-score) )
)
(:scoring
  (count dodgeballHitsBin:purple)
)
)



(define (game game-id-538) (:domain few-objects-room-v1)
(:setup
  (forall (?w - yellow_pyramid_block)
    (game-optional
      (not
        (and
          (broken floor)
          (in_motion agent)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - pillow ?d - flat_block)
      (and
        (preference towerFallsWhileBuilding
          (exists (?d - pyramid_block)
            (then
              (once (in ?d ?d) )
              (hold (and (adjacent ?d desk) (same_object ?d ?d) ) )
              (once (and (not (in_motion ?d) ) (not (not (agent_holds ?d) ) ) ) )
            )
          )
        )
      )
    )
    (forall (?b3 - (either tall_cylindrical_block pencil))
      (and
        (preference thrownObjectHitsComputer
          (exists (?h - hexagonal_bin)
            (then
              (hold (= 5 (distance ?h agent)) )
              (once (agent_crouches ) )
              (once (rug_color_under ?h ?h) )
            )
          )
        )
        (preference blockIncorrectlyPicked
          (exists (?w2 - dodgeball)
            (then
              (hold (same_color desk ?b3) )
              (once (and (adjacent_side ?b3 room_center ?w2 ?b3) (agent_holds agent) ) )
              (hold (in_motion ?w2) )
            )
          )
        )
        (preference throwOverRamp
          (exists (?d - dodgeball ?o - hexagonal_bin)
            (at-end
              (is_setup_object ?o)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* 6 3 )
    2
  )
)
(:scoring
  (+ (count-once-per-objects blockIncorrectlyPicked:book) 2 )
)
)



(define (game game-id-539) (:domain few-objects-room-v1)
(:setup
  (or
    (forall (?b9 - (either beachball pen pink cellphone pen cube_block side_table))
      (and
        (game-conserved
          (agent_holds ?b9)
        )
      )
    )
    (exists (?c4 - (either cd book) ?b9 - (either alarm_clock book))
      (or
        (game-optional
          (agent_holds agent)
        )
        (game-optional
          (in_motion upright)
        )
        (game-conserved
          (in_motion ?b9)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballInOrOnBin
      (exists (?h - dodgeball ?h - game_object)
        (then
          (hold (in_motion ?h) )
          (once (and (in_motion ?h) (exists (?h - shelf) (agent_holds ?h) ) ) )
          (once (in_motion ?h) )
        )
      )
    )
    (preference ballThrownToBin
      (exists (?c - curved_wooden_ramp)
        (then
          (once (equal_z_position ?c ?c) )
          (hold (same_type ?c ?c) )
          (once (and (agent_holds ?c) (and (and (in ?c room_center) (object_orientation ?c ?c) ) (and (not (forall (?p3 - (either pyramid_block teddy_bear)) (adjacent rug agent) ) ) (touch ?c ?c) ) ) ) )
        )
      )
    )
    (preference throwOverRamp
      (exists (?s - chair)
        (then
          (once (agent_holds ?s) )
          (once (> (distance_side ?s ?s ?s) (building_size ?s)) )
          (hold (in_motion ?s) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 3 (count ballThrownToBin:dodgeball) )
    (total-score)
  )
)
(:scoring
  (count ballThrownToBin:dodgeball)
)
)



(define (game game-id-540) (:domain many-objects-room-v1)
(:setup
  (exists (?d - color)
    (and
      (forall (?b - hexagonal_bin ?s - game_object)
        (and
          (and
            (game-conserved
              (and
                (not
                  (and
                    (on ?s ?s)
                    (in ?s ?d)
                  )
                )
                (on ?d ?d)
                (agent_holds ?d)
                (agent_holds ?d)
              )
            )
            (or
              (exists (?l1 - chair ?b1 - hexagonal_bin)
                (game-optional
                  (agent_holds ?s)
                )
              )
            )
            (game-conserved
              (not
                (in_motion ?s)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballBouncesOnceToDoggieBed
      (exists (?l1 - game_object)
        (then
          (once (and (touch desk ?l1) (and (is_setup_object ?l1) (or (and (on ?l1 ?l1) (on rug ?l1) ) (and (in_motion ?l1) (in_motion ?l1) ) ) ) ) )
          (once (exists (?h - wall) (on rug ?l1) ) )
          (hold (not (in_motion ?l1) ) )
        )
      )
    )
    (preference objectToBinOnFirstTry
      (exists (?b1 - (either triangular_ramp yellow floor) ?b2 - ball)
        (then
          (hold (on ?b2 rug) )
          (once (opposite ?b2 ?b2) )
          (hold (is_setup_object ?b2) )
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (and
        (>= (* (count-once-per-objects objectToBinOnFirstTry:purple) (count dodgeballBouncesOnceToDoggieBed:bed:blue_dodgeball) (count objectToBinOnFirstTry:blue_cube_block) )
          (count dodgeballBouncesOnceToDoggieBed:golfball)
        )
        (or
          (>= 180 (* (count-once objectToBinOnFirstTry:pink_dodgeball) (+ 5 (= (+ (= 2 )
                    (count-total objectToBinOnFirstTry:golfball)
                  )
                  (* 2 (count objectToBinOnFirstTry:dodgeball) )
                )
              )
              10
            )
          )
          (not
            (>= (total-time) 3 )
          )
        )
        (>= (- (* (= 18 5 (count dodgeballBouncesOnceToDoggieBed:purple) )
            )
          )
          (total-score)
        )
      )
      (not
        (>= 7 (total-score) )
      )
    )
  )
)
(:scoring
  (count-once-per-external-objects dodgeballBouncesOnceToDoggieBed:red)
)
)



(define (game game-id-541) (:domain few-objects-room-v1)
(:setup
  (exists (?f - drawer)
    (not
      (not
        (and
          (exists (?c2 - cube_block)
            (exists (?b5 - building ?b - dodgeball)
              (forall (?b6 - dodgeball)
                (game-conserved
                  (agent_holds ?b6)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToBin
      (exists (?b10 ?c - triangular_ramp ?o4 ?p1 ?h - blue_cube_block ?db - (either bridge_block pink) ?b4 ?w - (either golfball desktop) ?b - hexagonal_bin)
        (then
          (once (and (and (agent_holds door) (adjacent ?b ?b) ) (and (in_motion ?b) (< 1 (x_position ?b)) (on ?b ?b) (agent_holds floor) (exists (?b7 - cylindrical_block) (adjacent ?b7 ?b) ) (in_motion rug) (and (and (in_motion ?b) (on ?b ?b) ) (< (distance_side ?b ?b ?b ?b) (distance ?b ?b)) ) (agent_holds ?b) (agent_holds ?b) (on ?b ?b) ) ) )
          (once (not (and (in_motion ?b) (and (not (touch tan top_shelf) ) (agent_holds ?b) ) ) ) )
          (hold-while (forall (?s - game_object) (adjacent ?b ?s) ) (and (not (in_motion ?b) ) (in_motion ?b) ) )
        )
      )
    )
    (preference itemsBroken
      (exists (?b - game_object ?b6 ?o - wall)
        (then
          (once (in_motion ?b6) )
          (once (< 8 (distance ?o ?b6)) )
          (hold (not (agent_holds ?b6) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count throwToBin:blue_dodgeball) (= (count itemsBroken:purple) (* (- (count-once-per-objects throwToBin:basketball:dodgeball) )
        (* 50 (* (+ 8 -10 )
            (+ 15 5 (+ 5 1 )
            )
          )
        )
      )
    )
  )
)
(:scoring
  (* (* 3 (count itemsBroken:pink) )
    (count throwToBin:dodgeball)
  )
)
)



(define (game game-id-542) (:domain many-objects-room-v1)
(:setup
  (exists (?d2 - dodgeball)
    (exists (?c - doggie_bed)
      (forall (?c3 ?o - hexagonal_bin)
        (exists (?d - (either yellow_cube_block dodgeball))
          (game-optional
            (object_orientation ?c3 floor)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference pinkObjectMovedToRoomCenter
      (exists (?b - hexagonal_bin)
        (then
          (once (not (in_motion ?b) ) )
          (hold (opposite ?b ?b) )
          (once (and (not (not (in_motion ?b) ) ) (equal_z_position ?b ?b) ) )
        )
      )
    )
    (preference otherObjectsOnDeskShelf
      (exists (?t1 - doggie_bed ?h - cube_block ?db - doggie_bed ?c - (either dodgeball dodgeball))
        (then
          (once (and (exists (?p2 - dodgeball) (agent_holds ?p2) ) (on desk ?c) ) )
          (once (in ?c ball) )
          (once (not (agent_holds ?c) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count pinkObjectMovedToRoomCenter:pink:pyramid_block) 3 )
)
(:scoring
  (+ (count otherObjectsOnDeskShelf:dodgeball:basketball) 3 )
)
)



(define (game game-id-543) (:domain medium-objects-room-v1)
(:setup
  (exists (?c - ball)
    (forall (?d - building ?c3 - (either laptop key_chain desktop))
      (game-optional
        (in_motion ?c3)
      )
    )
  )
)
(:constraints
  (and
    (forall (?o - dodgeball)
      (and
        (preference thrownBallReachesEnd
          (exists (?d - building ?l3 - dodgeball ?p - golfball)
            (then
              (hold (between ?p ?p ?p) )
              (once (and (touch ?o ?o) (agent_holds ?p) ) )
              (once (touch ?o ?p) )
            )
          )
        )
        (preference blockCorrectlyPicked
          (exists (?b2 ?b - shelf)
            (then
              (once (same_type ?o ?o) )
              (once (< 2 (distance bed ?o)) )
              (once (not (above ?b2 ?b2) ) )
            )
          )
        )
        (preference castleBuilt
          (exists (?w2 - game_object)
            (then
              (once (on ?o ?w2) )
              (once (<= 4 2) )
              (once (and (exists (?d - ball ?h - (either pencil dodgeball)) (in_motion rug) ) (agent_holds desk) ) )
            )
          )
        )
      )
    )
    (preference greenObjectMovedToRoomCenter
      (exists (?db - game_object ?h - triangular_ramp)
        (then
          (once (is_setup_object ?h) )
          (hold (in agent ?h) )
          (once (adjacent ?h ?h) )
        )
      )
    )
  )
)
(:terminal
  (> (count castleBuilt) (count-once-per-objects blockCorrectlyPicked:pink) )
)
(:scoring
  (external-forall-maximize
    (* 10 (+ (count greenObjectMovedToRoomCenter:alarm_clock) (count castleBuilt:hexagonal_bin) 40 (count greenObjectMovedToRoomCenter:basketball) (* (* (count greenObjectMovedToRoomCenter:golfball) 40 )
          (count-overlapping blockCorrectlyPicked:yellow_cube_block)
          (count blockCorrectlyPicked:yellow)
          (count-unique-positions thrownBallReachesEnd:beachball)
        )
        (count castleBuilt:basketball)
        300
      )
    )
  )
)
)



(define (game game-id-544) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?b - color ?g - pillow)
      (and
        (game-conserved
          (not
            (and
              (and
                (in_motion ?g)
                (in ?g pillow)
                (agent_crouches )
              )
              (in_motion ?g)
            )
          )
        )
        (forall (?db - cylindrical_block ?g - hexagonal_bin)
          (and
            (exists (?c3 - hexagonal_bin)
              (game-conserved
                (in floor ?c3)
              )
            )
            (and
              (exists (?c3 - curved_wooden_ramp)
                (exists (?b3 - ball)
                  (and
                    (game-conserved
                      (object_orientation ?c3 ?g)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwOverRamp
      (exists (?b - dodgeball)
        (then
          (once (in_motion ?b) )
          (hold (touch ?b desk) )
          (once (or (agent_holds ?b) (touch ?b ?b) ) )
        )
      )
    )
  )
)
(:terminal
  (> 3 (count throwOverRamp:golfball) )
)
(:scoring
  (count throwOverRamp:dodgeball)
)
)



(define (game game-id-545) (:domain many-objects-room-v1)
(:setup
  (forall (?b2 - pillow ?t - doggie_bed)
    (and
      (game-conserved
        (in ?t pink_dodgeball)
      )
    )
  )
)
(:constraints
  (and
    (forall (?b4 - curved_wooden_ramp)
      (and
        (preference throwBallToBin
          (exists (?b3 - doggie_bed)
            (then
              (hold (agent_holds ?b3) )
              (once-measure (in ?b4 ?b3) (x_position ?b3) )
              (once (and (agent_holds rug) (in_motion ?b3) ) )
            )
          )
        )
        (preference objectThrownFromRug
          (exists (?b2 - dodgeball)
            (at-end
              (not
                (touch ?b2 ?b2)
              )
            )
          )
        )
      )
    )
    (preference nonBlockPlacedInBuilding
      (exists (?w2 - curved_wooden_ramp)
        (then
          (once (in_motion yellow) )
          (once (= (distance ?w2 ?w2) 1 1) )
          (hold-while (exists (?b9 - dodgeball ?t2 - game_object) (broken ?t2) ) (not (and (not (and (opposite ?w2 ?w2) (in ?w2 ?w2) ) ) (is_setup_object ?w2) ) ) )
        )
      )
    )
  )
)
(:terminal
  (< (+ 300 (count-once-per-external-objects nonBlockPlacedInBuilding:golfball) (= 3 )
      2
      (count-once-per-objects nonBlockPlacedInBuilding:yellow)
      (count-once-per-external-objects nonBlockPlacedInBuilding:basketball)
    )
    (count-shortest objectThrownFromRug:green:pyramid_block)
  )
)
(:scoring
  (* 6 3 )
)
)



(define (game game-id-546) (:domain medium-objects-room-v1)
(:setup
  (exists (?h - (either alarm_clock chair dodgeball basketball))
    (and
      (game-conserved
        (and
          (on ?h ?h)
          (agent_holds ?h)
          (on ?h bed)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballToBinFromBed
      (exists (?g - building)
        (then
          (once (in ?g ?g) )
          (once (= (distance ?g ?g) (distance ?g brown)) )
          (hold (not (not (not (agent_holds ?g) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 10 (+ 3 (count-shortest ballToBinFromBed:triangle_block) )
    )
    (>= (count ballToBinFromBed:pink) (count-once-per-objects ballToBinFromBed:basketball:blue_dodgeball) )
  )
)
(:scoring
  (* (* (* 100 50 (+ 6 (count ballToBinFromBed:golfball) 9 (count-once-per-objects ballToBinFromBed:pink) )
      )
      6
    )
    (count ballToBinFromBed:bed:beachball)
  )
)
)



(define (game game-id-547) (:domain many-objects-room-v1)
(:setup
  (exists (?b2 - curved_wooden_ramp)
    (game-conserved
      (agent_holds rug)
    )
  )
)
(:constraints
  (and
    (preference ballOnBedAtEnd
      (exists (?b ?c3 - building)
        (then
          (hold (on desk ?b) )
          (hold-while (not (same_type desk ?c3) ) (not (and (not (not (agent_holds ?c3) ) ) (in_motion ?c3) ) ) )
          (hold (same_color ?c3 ?c3) )
        )
      )
    )
    (preference throwKnocksOverBear
      (exists (?c1 - wall ?d - game_object)
        (then
          (once (in ?d agent) )
          (once (and (not (on ?d ?d) ) (on ?d ?d) ) )
          (hold (agent_holds ?d) )
        )
      )
    )
    (forall (?ob - hexagonal_bin ?s - block)
      (and
        (preference throwMovesBeachballWithoutKnockingTeddy
          (exists (?o - hexagonal_bin ?r - bridge_block)
            (then
              (once (on ?s ?r) )
              (hold (in_motion agent) )
              (once (> 1 2) )
            )
          )
        )
      )
    )
    (preference blockPickedUp
      (exists (?c - (either alarm_clock cube_block) ?g - doggie_bed)
        (then
          (once (in ?g ?g) )
          (hold (agent_holds ?g) )
          (once (in_motion green_golfball) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (total-score) (count-once-per-objects throwKnocksOverBear:beachball) )
    (< (count ballOnBedAtEnd:triangle_block) (total-score) )
  )
)
(:scoring
  (* (count throwMovesBeachballWithoutKnockingTeddy:pink) 6 (* 6 (count ballOnBedAtEnd:red:tan) )
  )
)
)



(define (game game-id-548) (:domain many-objects-room-v1)
(:setup
  (not
    (or
      (exists (?b4 - doggie_bed ?b8 - (either dodgeball ball) ?o - game_object)
        (and
          (forall (?r - golfball ?r - triangular_ramp)
            (forall (?d - dodgeball)
              (and
                (and
                  (and
                    (game-conserved
                      (in_motion ?o)
                    )
                    (and
                      (and
                        (game-conserved
                          (in_motion ?o)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
          (exists (?b10 - hexagonal_bin)
            (or
              (exists (?h - cube_block)
                (game-optional
                  (not
                    (exists (?d - ball ?h - (either book cd))
                      (not
                        (not
                          (not
                            (and
                              (and
                                (not
                                  (not
                                    (same_type ?h ?o)
                                  )
                                )
                                (on ?o ?b10)
                              )
                              (in_motion ?b10)
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
              (and
                (exists (?h - shelf)
                  (game-conserved
                    (in_motion ?o)
                  )
                )
              )
              (and
                (and
                  (and
                    (game-optional
                      (in ?o ?b10)
                    )
                  )
                )
                (game-conserved
                  (not
                    (in_motion bed)
                  )
                )
              )
            )
          )
          (exists (?h - triangular_ramp)
            (exists (?h - block ?r - block)
              (game-conserved
                (on ?h agent)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c2 - hexagonal_bin ?d - dodgeball ?o2 - dodgeball)
      (and
        (preference blockInTowerKnockedByDodgeball
          (exists (?h - cube_block)
            (then
              (once (in_motion rug) )
              (once (in door ?o2) )
              (hold-while (in ?h ?h) (on agent ?h) )
            )
          )
        )
      )
    )
    (preference throwBallFromOtherBallToBin
      (exists (?h - dodgeball)
        (then
          (once (adjacent agent ?h) )
          (once (and (not (equal_x_position ?h ?h) ) (not (not (on ?h ?h) ) ) ) )
          (hold (< 1 0) )
        )
      )
    )
  )
)
(:terminal
  (>= (count throwBallFromOtherBallToBin:beachball:dodgeball) (total-time) )
)
(:scoring
  (+ 4 (count blockInTowerKnockedByDodgeball:yellow) )
)
)



(define (game game-id-549) (:domain few-objects-room-v1)
(:setup
  (exists (?b ?h - dodgeball ?t ?h - red_dodgeball ?l - dodgeball)
    (exists (?o ?b - cube_block ?h - (either credit_card wall))
      (game-optional
        (in_motion ?l)
      )
    )
  )
)
(:constraints
  (and
    (preference throwToBin
      (exists (?w - game_object)
        (then
          (once (in ?w ?w) )
          (once (faces ?w ?w) )
          (hold-while (agent_holds upright) (not (not (in_motion ?w) ) ) )
        )
      )
    )
  )
)
(:terminal
  (<= 2 (total-time) )
)
(:scoring
  (count-once-per-objects throwToBin:beachball:red)
)
)



(define (game game-id-550) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (not
      (agent_crouches )
    )
  )
)
(:constraints
  (and
    (preference rollBallToBin
      (exists (?b - building)
        (then
          (hold (on ?b ?b) )
          (hold-while (not (in ?b front) ) (on desk ?b) )
          (hold-while (in_motion ?b) (and (on ?b ?b) (not (and (between room_center ?b ?b) (agent_holds ?b) ) ) ) )
        )
      )
    )
    (forall (?o - teddy_bear)
      (and
        (preference dropAttempt
          (then
            (hold (in_motion ?o) )
            (hold (not (same_color ?o floor) ) )
            (once (exists (?o4 - block) (and (agent_holds ?o) (or (and (agent_holds ?o4) (toggled_on ?o4) ) ) ) ) )
          )
        )
        (preference thrownBallHitsBlock
          (then
            (once (on green_golfball ?o) )
            (once (game_over ) )
            (hold (object_orientation ?o top_drawer) )
          )
        )
        (preference nonBlockPlacedInBuilding
          (exists (?b - (either alarm_clock alarm_clock top_drawer))
            (then
              (hold-while (not (and (on ?o ?o) (in_motion upright) ) ) (in ?b ?o) )
              (once (or (not (in_motion ?b) ) (in_motion ?b) (agent_holds ?b) ) )
              (once (and (not (in_motion ?o) ) (in ?o ?o) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< (count nonBlockPlacedInBuilding:block) (= (* 15 (count-once-per-objects thrownBallHitsBlock:orange) )
      5
    )
  )
)
(:scoring
  (* 5 (external-forall-minimize (count dropAttempt:beachball:dodgeball) ) (count-once-per-objects dropAttempt:beachball) )
)
)



(define (game game-id-551) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (and
        (exists (?p - cube_block ?d - hexagonal_bin ?b10 - hexagonal_bin ?h - doggie_bed ?b - triangular_ramp)
          (exists (?b6 - flat_block ?h - pillow)
            (forall (?h - (either credit_card lamp) ?g - hexagonal_bin)
              (exists (?c6 - building)
                (game-optional
                  (adjacent floor ?h)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwKnocksOverBear
      (exists (?l1 - (either laptop blue_cube_block))
        (then
          (once (agent_holds ?l1) )
          (hold-while (in ?l1 ?l1) (in_motion ?l1) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (count throwKnocksOverBear:basketball) )
)
(:scoring
  (count-once-per-objects throwKnocksOverBear:beachball)
)
)



(define (game game-id-552) (:domain few-objects-room-v1)
(:setup
  (exists (?l2 - (either alarm_clock doggie_bed) ?b - hexagonal_bin)
    (and
      (exists (?b - hexagonal_bin)
        (or
          (and
            (game-conserved
              (and
                (not
                  (agent_holds ?b)
                )
                (not
                  (not
                    (not
                      (not
                        (on ?b agent)
                      )
                    )
                  )
                )
              )
            )
            (exists (?tb - hexagonal_bin)
              (game-conserved
                (agent_holds top_drawer)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballKnocksTeddy
      (exists (?b - (either mug))
        (at-end
          (in ?b door)
        )
      )
    )
    (forall (?l - hexagonal_bin)
      (and
        (preference redDodgeballThrownToBinWithoutTouchingFloor
          (exists (?b - block ?b3 - building)
            (then
              (once (same_type ?l ?l) )
              (once (in ?l ?l) )
              (hold-while (or (agent_holds ?l) (not (is_setup_object floor) ) ) (forall (?b5 - cube_block) (not (agent_holds ?b5) ) ) (same_color ?b3 ?l) )
            )
          )
        )
        (preference golfballLandsInBinThroughRamp
          (exists (?b7 - (either dodgeball cd dodgeball) ?l2 - game_object)
            (at-end
              (rug_color_under ?l2 ?l2)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< (total-score) (total-score) )
)
(:scoring
  (* (- (count redDodgeballThrownToBinWithoutTouchingFloor:cylindrical_block) )
    (count-once-per-objects ballKnocksTeddy:side_table:basketball)
  )
)
)



(define (game game-id-553) (:domain few-objects-room-v1)
(:setup
  (forall (?o2 - dodgeball ?s ?p1 ?ob - (either book doggie_bed basketball cellphone) ?b1 - (either cylindrical_block block basketball))
    (exists (?r - teddy_bear ?h - hexagonal_bin)
      (game-conserved
        (and
          (game_start )
          (in_motion ?h)
          (faces agent ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference cubeBlockThrowAttempt
      (exists (?o2 - dodgeball)
        (then
          (hold-while (in_motion ?o2) (< (building_size ?o2) (distance ?o2 ?o2)) )
          (hold-while (< 1 2) (<= 1 1) )
          (once (and (not (not (agent_holds ?o2) ) ) (and (and (and (and (not (not (agent_holds ?o2) ) ) (on desk ?o2) ) (and (and (not (on ?o2 ?o2) ) (on ?o2 room_center) ) (agent_holds bed) ) ) (= 9 3) (in desk ?o2) (on ?o2 ?o2) (on ?o2 ?o2) ) (not (agent_holds ?o2) ) (and (on ?o2 ?o2) (not (not (in_motion agent) ) ) ) ) (and (not (and (= (distance desk back) 0.5) (and (>= 1 (distance floor ?o2)) (open agent) ) (in_motion ?o2) (not (adjacent ?o2 ?o2) ) ) ) (in_motion ?o2) ) ) )
          (once (and (agent_holds ?o2) (< (distance ?o2 ?o2) (distance_side ?o2 ?o2 ?o2)) ) )
          (hold (game_over ) )
          (once (agent_holds ?o2) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (> 18 5 )
  )
)
(:scoring
  (* (count-once-per-objects cubeBlockThrowAttempt:golfball) (external-forall-maximize (* (count-once-per-objects cubeBlockThrowAttempt:pink) (* (count-longest cubeBlockThrowAttempt:blue_dodgeball) (count cubeBlockThrowAttempt:red:doggie_bed) )
      )
    )
  )
)
)



(define (game game-id-554) (:domain medium-objects-room-v1)
(:setup
  (forall (?h - (either dodgeball dodgeball) ?b ?w - ball ?b4 ?l - building)
    (exists (?s - curved_wooden_ramp)
      (game-optional
        (agent_holds ?s)
      )
    )
  )
)
(:constraints
  (and
    (preference smallObjectThrownToBed
      (exists (?tb - dodgeball ?b ?s - curved_wooden_ramp)
        (then
          (hold (adjacent ?s ?b) )
          (hold (not (not (exists (?d - ball) (on south_wall ?d) ) ) ) )
          (hold (and (agent_holds ?s) (and (and (in_motion ?b) (and (exists (?b7 - dodgeball ?tb - dodgeball ?p1 - (either doggie_bed)) (not (not (in_motion ?b) ) ) ) (agent_holds floor) ) ) (adjacent_side ?s door ?b) (game_start ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count smallObjectThrownToBed:yellow_pyramid_block) 2 )
)
(:scoring
  (* (count smallObjectThrownToBed:dodgeball) 1 )
)
)



(define (game game-id-555) (:domain medium-objects-room-v1)
(:setup
  (exists (?h - wall ?l - (either hexagonal_bin dodgeball dodgeball))
    (game-conserved
      (not
        (and
          (agent_crouches )
          (in_motion south_west_corner)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockPickedUp
      (exists (?b ?b - hexagonal_bin)
        (at-end
          (agent_holds ?b)
        )
      )
    )
  )
)
(:terminal
  (or
    (> (count blockPickedUp:pink:yellow) (total-time) )
    (>= (count blockPickedUp:triangle_block) 2 )
  )
)
(:scoring
  (count-once-per-objects blockPickedUp:pink)
)
)



(define (game game-id-556) (:domain few-objects-room-v1)
(:setup
  (forall (?d - (either blue_cube_block cellphone) ?b3 - doggie_bed)
    (and
      (game-optional
        (equal_z_position ?b3 ?b3)
      )
    )
  )
)
(:constraints
  (and
    (forall (?ob - bridge_block)
      (and
        (preference objectsHidden
          (exists (?g - doggie_bed)
            (then
              (hold (on ?g ?g) )
              (once (same_color ?g floor) )
              (once (agent_holds ?g) )
            )
          )
        )
      )
    )
    (forall (?o - (either dodgeball laptop))
      (and
        (preference thrownBallReachesEnd
          (exists (?p - hexagonal_bin)
            (at-end
              (in ?p ?o)
            )
          )
        )
        (preference throwToBin
          (exists (?b4 - golfball)
            (then
              (once (and (adjacent ?o ?o) (in ?o ?b4) (and (on ?b4 ?b4) ) (adjacent ?o ?o) ) )
              (once (or (equal_x_position ?b4 ?b4) (not (not (agent_holds ?o) ) ) ) )
              (hold-while (not (not (adjacent ?o ?o) ) ) (in_motion ?b4) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (= (+ (* (count thrownBallReachesEnd:yellow_cube_block) )
    )
    (total-score)
  )
)
(:scoring
  (* 0 4 )
)
)



(define (game game-id-557) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (exists (?b - hexagonal_bin)
      (not
        (not
          (and
            (adjacent_side ?b ?b ?b)
            (on ?b ?b)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?w - cube_block)
      (and
        (preference golfballLandsInBinThroughRamp
          (exists (?b - cube_block ?o - cube_block)
            (then
              (once (in ?w ?w) )
              (once (on ?o ?o) )
              (once (and (not (adjacent ?w ?o) ) (not (and (agent_holds floor) (not (exists (?h - hexagonal_bin ?w - cube_block) (agent_holds ?w) ) ) ) ) ) )
            )
          )
        )
        (preference nonBlockPlacedInBuilding
          (exists (?h - teddy_bear ?c - hexagonal_bin)
            (at-end
              (not
                (not
                  (is_setup_object ?c)
                )
              )
            )
          )
        )
      )
    )
    (preference throwAttempt
      (exists (?l4 - game_object)
        (then
          (once (agent_holds room_center) )
          (hold (adjacent blinds bed) )
          (once (adjacent ?l4 bed) )
        )
      )
    )
  )
)
(:terminal
  (<= 2 (external-forall-maximize (count nonBlockPlacedInBuilding:side_table) ) )
)
(:scoring
  (count golfballLandsInBinThroughRamp:red)
)
)



(define (game game-id-558) (:domain many-objects-room-v1)
(:setup
  (exists (?b - (either hexagonal_bin dodgeball cube_block))
    (game-conserved
      (not
        (and
          (and
            (rug_color_under ?b ?b)
            (agent_holds ?b)
          )
          (in_motion ?b)
          (in_motion ?b)
          (in_motion ?b)
          (agent_holds ?b)
          (object_orientation ?b ?b)
          (not
            (< 1 0)
          )
          (not
            (in_motion ?b)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?t2 ?l - shelf)
      (and
        (preference blockInTowerAtEnd
          (exists (?d - beachball ?c - (either lamp book pyramid_block))
            (then
              (once (and (on ?t2 ?t2) (in_motion ?l) ) )
              (once (not (in door ?l) ) )
              (once (on ?t2 agent) )
              (once (not (and (game_over ) (agent_holds ?c) ) ) )
            )
          )
        )
        (preference throwGolfballToBin
          (exists (?w2 - doggie_bed)
            (then
              (hold (exists (?b - sliding_door) (not (and (and (in bed ?w2) (on ?w2 ?l) ) (same_color ?w2 ?w2) ) ) ) )
              (once (and (not (between ?l ?w2 ?l) ) (in_motion ?l) (agent_holds left) ) )
              (hold-while (equal_z_position ?w2 ?t2) (and (and (in_motion ?l) (in_motion floor) ) (is_setup_object ?w2) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (or
        (>= (>= 3 (external-forall-maximize (count-once-per-objects throwGolfballToBin:green) ) )
          (count blockInTowerAtEnd:cube_block:yellow)
        )
        (< (total-score) 15 )
      )
      (>= 1 (* 1 (count blockInTowerAtEnd:golfball) 2 (- (count blockInTowerAtEnd:pink:yellow) )
        )
      )
    )
  )
)
(:scoring
  (count blockInTowerAtEnd:dodgeball)
)
)



(define (game game-id-559) (:domain many-objects-room-v1)
(:setup
  (exists (?h - cube_block)
    (forall (?c - chair)
      (forall (?c - block)
        (game-conserved
          (and
            (> 1 1)
            (not
              (on ?c ?c)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockCorrectlyPicked
      (exists (?b - (either bridge_block floor))
        (then
          (hold (in_motion ?b) )
          (once (not (adjacent ?b ?b) ) )
          (once (in_motion ?b) )
        )
      )
    )
    (preference throwTeddyOntoPillow
      (exists (?o - cube_block ?d - red_dodgeball ?r - block)
        (then
          (once (and (same_type ?r ?r) (not (not (on ?r ?r) ) ) ) )
          (once (in_motion ?r) )
          (hold (adjacent ?r agent) )
        )
      )
    )
    (preference ballKnocksTeddy
      (exists (?b - game_object)
        (at-end
          (not
            (agent_holds ?b)
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (count-once-per-objects throwTeddyOntoPillow:golfball:pink_dodgeball) (count-once-per-objects throwTeddyOntoPillow:green) )
  )
)
(:scoring
  (count ballKnocksTeddy:golfball)
)
)



(define (game game-id-560) (:domain many-objects-room-v1)
(:setup
  (exists (?c - doggie_bed)
    (game-conserved
      (and
        (not
          (not
            (in_motion ?c)
          )
        )
        (and
          (in_motion desk)
          (and
            (in agent ?c)
            (in_motion ?c)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwKnocksOverBear
      (exists (?c4 - cube_block)
        (then
          (once (on desk agent) )
          (hold (not (object_orientation door agent) ) )
          (hold (in_motion ?c4) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (total-time) (count throwKnocksOverBear:doggie_bed) )
    (>= (* (+ 50 (count-once throwKnocksOverBear:pyramid_block) )
        3
      )
      (< (count throwKnocksOverBear:alarm_clock) (+ (count throwKnocksOverBear:basketball) (count throwKnocksOverBear:dodgeball) )
      )
    )
  )
)
(:scoring
  (* 15 (count throwKnocksOverBear:dodgeball) 3 )
)
)



(define (game game-id-561) (:domain many-objects-room-v1)
(:setup
  (exists (?r - yellow_pyramid_block ?w1 - color)
    (and
      (game-conserved
        (in_motion ?w1)
      )
      (and
        (game-conserved
          (and
            (not
              (agent_holds ?w1)
            )
            (and
              (in_motion ?w1)
              (agent_holds ?w1)
            )
          )
        )
      )
      (and
        (forall (?d - game_object)
          (forall (?o - (either ball laptop))
            (forall (?d - game_object)
              (forall (?c - game_object)
                (exists (?b1 - cube_block)
                  (forall (?d - triangular_ramp ?o2 - pyramid_block)
                    (game-conserved
                      (and
                        (and
                          (in ?o2 ?d)
                          (and
                            (not
                              (or
                                (not
                                  (in_motion ?o)
                                )
                                (agent_holds ?b1)
                              )
                            )
                            (in_motion ?d)
                          )
                          (touch agent door)
                          (not
                            (game_over )
                          )
                          (not
                            (same_type ?w1 agent)
                          )
                          (in_motion ?b1)
                        )
                        (agent_holds ?w1)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToBinFromDistance
      (exists (?o - dodgeball)
        (then
          (once (adjacent_side desk ?o room_center) )
          (hold (not (not (on agent ?o) ) ) )
          (once (and (equal_x_position ?o ?o) (in_motion blue) (touch ?o ?o) ) )
        )
      )
    )
    (preference ballThrownToBin
      (exists (?d1 - hexagonal_bin ?tb - hexagonal_bin ?b - sliding_door)
        (then
          (once (and (agent_holds ?b) (in_motion ?b) ) )
          (once (toggled_on agent) )
          (once (object_orientation ?b ?b) )
        )
      )
    )
    (forall (?d2 - hexagonal_bin ?d2 - wall)
      (and
        (preference redDodgeballThrownToBinWithoutTouchingFloor
          (exists (?b - cube_block)
            (then
              (once (on agent ?b) )
              (once (touch ?d2 ?d2) )
              (hold (in_motion ?d2) )
            )
          )
        )
        (preference laptopAndBookInPlace
          (exists (?r - block ?c6 - (either cylindrical_block lamp pyramid_block golfball))
            (then
              (once (in_motion ?c6) )
              (hold (on ?c6 green_golfball) )
              (once (in ?d2 ?c6) )
            )
          )
        )
        (preference throwToDrawerOrBin
          (exists (?ob - curved_wooden_ramp)
            (then
              (once (same_type ?ob ?d2) )
              (once (not (in_motion ?d2) ) )
              (once (not (and (and (not (touch ?ob ?ob) ) (adjacent ?d2 ?d2) ) (not (not (is_setup_object ?ob) ) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (count laptopAndBookInPlace:alarm_clock) )
)
(:scoring
  (* (+ (* 6 (count throwToDrawerOrBin:beachball) 20 )
      5
    )
    (- (+ (count ballThrownToBin:dodgeball) 1 )
    )
  )
)
)



(define (game game-id-562) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (exists (?d - shelf ?b - doggie_bed)
        (and
          (and
            (and
              (forall (?l1 - (either cd flat_block) ?o3 - dodgeball)
                (exists (?o - pillow)
                  (game-conserved
                    (same_color ?b ?o3)
                  )
                )
              )
              (game-conserved
                (in_motion ?b)
              )
              (and
                (forall (?h - building)
                  (and
                    (exists (?b6 - hexagonal_bin)
                      (and
                        (game-optional
                          (not
                            (touch ?h ?b6)
                          )
                        )
                      )
                    )
                    (game-conserved
                      (agent_holds agent)
                    )
                    (forall (?b - curved_wooden_ramp)
                      (or
                        (forall (?c - hexagonal_bin)
                          (not
                            (game-conserved
                              (and
                                (not
                                  (and
                                    (in_motion ?b)
                                    (in_motion ?b)
                                  )
                                )
                                (not
                                  (and
                                    (and
                                      (agent_holds front)
                                      (agent_holds sideways)
                                    )
                                    (and
                                      (or
                                        (or
                                          (agent_holds ?b)
                                          (and
                                            (on ?h ?h)
                                            (in_motion desk)
                                            (in_motion ?c)
                                            (above ?c ?h)
                                            (agent_holds ?c)
                                            (not
                                              (not
                                                (on ?c ?h)
                                              )
                                            )
                                            (and
                                              (agent_holds ?h)
                                              (on bed ?h)
                                            )
                                            (and
                                              (agent_holds ?b)
                                              (and
                                                (not
                                                  (agent_holds desk)
                                                )
                                                (agent_holds rug)
                                              )
                                            )
                                            (not
                                              (in_motion ?c)
                                            )
                                            (and
                                              (on bed ?b)
                                              (in_motion ?b)
                                              (equal_z_position agent ?c)
                                            )
                                          )
                                          (in ?h top_drawer)
                                        )
                                        (not
                                          (not
                                            (agent_holds ?b)
                                          )
                                        )
                                      )
                                      (in_motion agent)
                                      (in_motion ?b)
                                    )
                                  )
                                )
                                (and
                                  (in_motion ?c)
                                  (and
                                    (faces ?b ?b)
                                    (game_start )
                                    (not
                                      (is_setup_object desktop)
                                    )
                                    (object_orientation ?c room_center)
                                    (agent_holds ?c)
                                    (and
                                      (not
                                        (not
                                          (not
                                            (above ?b ?b)
                                          )
                                        )
                                      )
                                    )
                                    (and
                                      (agent_holds ?h)
                                      (not
                                        (in_motion ?b)
                                      )
                                    )
                                    (and
                                      (not
                                        (in_motion agent)
                                      )
                                      (= 1 4)
                                    )
                                    (agent_holds ?b)
                                    (on ?b ?h)
                                  )
                                  (on ?h agent)
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
          (exists (?r - hexagonal_bin ?d - block ?w - (either yellow_cube_block golfball))
            (game-conserved
              (agent_holds ?b)
            )
          )
          (forall (?r2 - chair)
            (game-conserved
              (in_motion ?b)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectLandsInBin
      (exists (?b - hexagonal_bin ?h - building ?b7 - hexagonal_bin)
        (then
          (once (< 1 (distance ?b7 ?b7)) )
          (once (not (not (<= 1 (distance bed bed)) ) ) )
          (once (agent_holds ?b7) )
          (once (in_motion ?b7) )
          (hold (and (and (adjacent ?b7 ?b7) (agent_holds ?b7) ) (in ?b7 ?b7) (not (not (and (and (agent_holds ?b7) (not (equal_z_position agent ?b7) ) (in bed agent) ) (not (agent_holds ?b7) ) (not (and (on ?b7 room_center) (not (exists (?b10 - (either hexagonal_bin book)) (agent_holds ?b10) ) ) (agent_holds ?b7) ) ) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (= (total-score) (total-time) )
    (>= 10 (count-once-per-objects objectLandsInBin:yellow) )
  )
)
(:scoring
  (count objectLandsInBin:green)
)
)



(define (game game-id-563) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?b10 - dodgeball)
      (exists (?d - hexagonal_bin ?b4 - chair)
        (game-conserved
          (adjacent desk ?b10)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference golfballLandsInBinThroughRamp
      (exists (?w2 - building ?d ?b - hexagonal_bin ?ob - cube_block)
        (then
          (once (in_motion ?ob) )
          (hold (in ?ob ?ob) )
        )
      )
    )
    (preference dodgeballFromRugToBin
      (exists (?d - (either dodgeball flat_block))
        (then
          (once (and (not (in ?d ?d) ) (and (in_motion ?d) (on ?d ?d) (agent_holds ?d) (and (agent_holds agent) (forall (?r - hexagonal_bin ?r - hexagonal_bin ?b ?b - (either golfball) ?b3 ?b4 - doggie_bed) (on ?b3 ?b3) ) ) ) ) )
          (once (not (in desk agent) ) )
          (hold (in_motion ?d) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects golfballLandsInBinThroughRamp:yellow_pyramid_block) 1 )
)
(:scoring
  (count golfballLandsInBinThroughRamp:dodgeball)
)
)



(define (game game-id-564) (:domain medium-objects-room-v1)
(:setup
  (forall (?h - hexagonal_bin)
    (and
      (forall (?c6 - pillow)
        (game-conserved
          (not
            (exists (?o4 - triangular_ramp)
              (toggled_on ?c6)
            )
          )
        )
      )
      (and
        (game-optional
          (agent_holds ?h)
        )
        (forall (?b5 - cube_block)
          (and
            (game-conserved
              (not
                (not
                  (in_motion ?b5)
                )
              )
            )
          )
        )
      )
      (forall (?r - (either laptop doggie_bed))
        (game-conserved
          (and
            (not
              (game_start )
            )
            (in_motion ?h)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blindsOpened
      (exists (?c - triangular_ramp)
        (then
          (once (not (on desk agent) ) )
          (hold (agent_holds desk) )
          (once (not (between ?c west_wall ?c) ) )
        )
      )
    )
    (preference ballThrownToRampToBed
      (exists (?p - game_object ?r2 - triangular_ramp)
        (at-end
          (agent_holds ?r2)
        )
      )
    )
  )
)
(:terminal
  (or
    (> (count ballThrownToRampToBed:golfball:dodgeball) (+ 1 (+ (* 5 (+ (+ (- 2 )
                (count blindsOpened:pyramid_block)
              )
              (count blindsOpened:green:hexagonal_bin)
            )
          )
          (count-same-positions blindsOpened:dodgeball)
          (* 5 (* (count ballThrownToRampToBed:basketball) (- (* (* (count-once blindsOpened:beachball) (count blindsOpened:hexagonal_bin:beachball) )
                  (+ (* (count-once-per-objects ballThrownToRampToBed:basketball:blue_dodgeball) (external-forall-minimize (count-once-per-objects blindsOpened:bed) ) )
                    15
                  )
                )
              )
            )
            (* (- 5 )
              (* (* (* (* (external-forall-maximize (count-overlapping ballThrownToRampToBed:purple) ) (* (count blindsOpened:green) 4 )
                    )
                    6
                  )
                  3
                )
                (* (* (* (count-once-per-objects blindsOpened:purple) 10 (+ (+ (* 10 (>= (* (count-once-per-objects blindsOpened:green) (- 1 )
                              )
                              (* 8 (count-once blindsOpened:wall) )
                            )
                          )
                          (* (count blindsOpened:green) (count-shortest blindsOpened) )
                          5
                        )
                        1
                        (count-once-per-objects ballThrownToRampToBed:doggie_bed:basketball)
                      )
                      (+ (count ballThrownToRampToBed:dodgeball) 1 )
                    )
                    (count blindsOpened:green)
                  )
                  1
                  (count ballThrownToRampToBed:tan)
                )
              )
            )
            (* (+ (+ 1 7 (count ballThrownToRampToBed:golfball:pink_dodgeball) (count-once-per-objects ballThrownToRampToBed:dodgeball) 100 10 (* 10 )
                  (count-once-per-objects blindsOpened:yellow:cube_block)
                  (* (count-overlapping ballThrownToRampToBed:pink) 3 )
                  2
                  2
                  18
                )
                (count-once ballThrownToRampToBed:green)
              )
              180
            )
            (* (* (* 10 (count ballThrownToRampToBed:book:yellow) )
                (- 8 )
              )
              (count ballThrownToRampToBed:green:purple)
            )
            (+ (count ballThrownToRampToBed:basketball) 2 (count ballThrownToRampToBed:pink) (= 5 (count-once-per-objects ballThrownToRampToBed:dodgeball:basketball) (+ 10 (* (+ (external-forall-maximize (+ 5 (count ballThrownToRampToBed:dodgeball) 0 )
                      )
                      (- (- (count-unique-positions blindsOpened:yellow) )
                      )
                      (* (* (count ballThrownToRampToBed:dodgeball) (count blindsOpened:purple) )
                        (= (- 3 )
                          25
                        )
                      )
                      10
                      (count-once-per-objects ballThrownToRampToBed:beachball)
                      (count-once-per-objects blindsOpened:blue_dodgeball)
                    )
                    3
                  )
                )
              )
              10
            )
          )
          15
          (count-once-per-external-objects ballThrownToRampToBed:basketball)
          (count ballThrownToRampToBed:dodgeball)
        )
      )
    )
    (>= (count-once-per-objects blindsOpened:dodgeball) 10 )
    (>= (- 6 )
      (count-once-per-objects blindsOpened:hexagonal_bin:pyramid_block)
    )
    (or
      (>= (count ballThrownToRampToBed:brown) (total-time) )
      (> (count-once-per-objects blindsOpened:golfball) (count-once-per-objects ballThrownToRampToBed:blue_dodgeball) )
      (or
        (>= (total-score) 3 )
      )
    )
  )
)
(:scoring
  (count blindsOpened:doggie_bed)
)
)



(define (game game-id-565) (:domain medium-objects-room-v1)
(:setup
  (exists (?o1 - dodgeball)
    (game-conserved
      (in_motion ?o1)
    )
  )
)
(:constraints
  (and
    (preference cubeBlockInBuilding
      (exists (?p1 ?d - (either book pyramid_block dodgeball))
        (then
          (once (touch ?p1 ?d) )
          (once (on ?d ?p1) )
          (once (or (in_motion room_center) (and (agent_holds ?p1) ) ) )
        )
      )
    )
  )
)
(:terminal
  (> (* (count cubeBlockInBuilding:dodgeball) 5 )
    (* (count-same-positions cubeBlockInBuilding:yellow) )
  )
)
(:scoring
  (* (count-shortest cubeBlockInBuilding:beachball) 2 (+ 8 (* (count-once-per-objects cubeBlockInBuilding:beachball) (* (count-longest cubeBlockInBuilding:doggie_bed) (* 2 2 )
        )
      )
      (count cubeBlockInBuilding:blue_dodgeball)
      (count-once cubeBlockInBuilding:dodgeball)
      (count cubeBlockInBuilding:golfball)
    )
    (* (count cubeBlockInBuilding:dodgeball) (count-measure cubeBlockInBuilding:basketball) )
    (count-once-per-external-objects cubeBlockInBuilding:basketball)
    (external-forall-maximize
      (count-once cubeBlockInBuilding:basketball)
    )
    (+ (* 6 3 )
      5
    )
  )
)
)



(define (game game-id-566) (:domain medium-objects-room-v1)
(:setup
  (not
    (exists (?b3 ?c - dodgeball)
      (game-conserved
        (and
          (not
            (adjacent_side ?b3 door ?b3)
          )
          (and
            (and
              (and
                (agent_holds ?b3)
                (not
                  (in rug ?b3)
                )
                (above ?c ?c)
              )
              (exists (?c6 - hexagonal_bin)
                (in ?c ?c6)
              )
              (agent_holds desk)
              (and
                (in_motion ?c)
                (in_motion ?c)
              )
            )
            (in_motion ?b3)
            (touch ?c ?c)
            (agent_holds ?c)
            (agent_holds ?b3)
            (not
              (in ?c ?b3)
            )
            (and
              (< (distance ?c ?b3) 1)
              (on ?b3 ?b3)
            )
            (on ?c ?b3)
          )
          (adjacent ?b3 ?b3)
          (in_motion ?c)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o - pillow ?h - (either book yellow_cube_block) ?h - building)
      (and
        (preference ballKnocksTeddy
          (exists (?c - dodgeball)
            (then
              (hold (in rug bed) )
              (once (adjacent rug ?h) )
              (once (in ?h agent) )
            )
          )
        )
        (preference throwMissesBin
          (exists (?l - cube_block ?c - cube_block ?d - dodgeball)
            (then
              (once (and (rug_color_under agent ?d) (is_setup_object ?d) (agent_crouches ) ) )
              (once (in_motion ?d) )
              (hold (in ?d ?d) )
            )
          )
        )
        (preference matchingBuildingBuilt
          (exists (?t2 - doggie_bed)
            (then
              (once (in_motion ?t2) )
              (once (agent_holds ?h) )
              (hold (and (not (and (or (adjacent ?h ?h) (and (broken ?h) ) ) (not (agent_holds ?h) ) ) ) (agent_holds ?t2) ) )
            )
          )
        )
        (preference throwToBinFromOppositeWall
          (exists (?c ?b - hexagonal_bin)
            (then
              (once (agent_holds ?b) )
              (once (or (and (and (agent_holds rug) (on agent ?b) ) (agent_holds agent) (object_orientation ?c ?c) ) (adjacent ?h ?h) (in_motion ?h) ) )
              (once (not (agent_holds agent) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (and
      (and
        (>= (count ballKnocksTeddy:dodgeball) (count-once matchingBuildingBuilt:beachball) )
      )
      (>= (< 10 (* (external-forall-minimize (count-once-per-external-objects matchingBuildingBuilt:purple) ) (count throwToBinFromOppositeWall:bed:beachball) )
        )
        (+ 5 (external-forall-minimize (count throwToBinFromOppositeWall:dodgeball:basketball) ) (count ballKnocksTeddy:top_drawer) )
      )
      (> (+ (* (count throwToBinFromOppositeWall:yellow:green) (* (count throwToBinFromOppositeWall:yellow) (count-once throwMissesBin:cube_block) )
            (count-measure matchingBuildingBuilt:golfball)
            10
            (* (count-longest matchingBuildingBuilt:beachball) (count-once-per-objects matchingBuildingBuilt:dodgeball) )
            (count-once-per-objects ballKnocksTeddy:beachball)
          )
          300
        )
        2
      )
    )
    (not
      (> (* (+ 3 4 )
          10
        )
        (count throwToBinFromOppositeWall:dodgeball)
      )
    )
  )
)
(:scoring
  (count-unique-positions matchingBuildingBuilt:beachball)
)
)



(define (game game-id-567) (:domain medium-objects-room-v1)
(:setup
  (exists (?t1 - cube_block ?b1 - shelf)
    (game-conserved
      (and
        (and
          (agent_holds ?b1)
          (in_motion ?b1)
        )
        (not
          (not
            (not
              (and
                (agent_holds ?b1)
                (and
                  (agent_holds ?b1)
                  (not
                    (not
                      (forall (?w - hexagonal_bin)
                        (adjacent ?b1 ?w)
                      )
                    )
                  )
                  (not
                    (in_motion ?b1)
                  )
                )
                (and
                  (in_motion ?b1)
                  (in_motion ?b1)
                )
                (in_motion pink_dodgeball)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?p3 - teddy_bear)
        (at-end
          (and
            (adjacent pink ?p3)
            (agent_holds desk)
            (in_motion rug)
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (count ballThrownToBin:beachball:purple) )
)
(:scoring
  (count-unique-positions ballThrownToBin:dodgeball)
)
)



(define (game game-id-568) (:domain many-objects-room-v1)
(:setup
  (exists (?c - game_object)
    (game-conserved
      (agent_holds ?c)
    )
  )
)
(:constraints
  (and
    (preference throwToRampToBin
      (exists (?b10 - color)
        (then
          (once (and (in_motion ?b10) (adjacent_side ?b10 ?b10 desk) ) )
          (hold-while (not (faces ?b10 ?b10) ) (not (agent_holds ?b10) ) (on ?b10 ?b10) (not (forall (?r - hexagonal_bin) (in ?r ?b10) ) ) )
          (hold (in_motion main_light_switch) )
        )
      )
    )
    (preference objectMovedRoomSide
      (exists (?b - block ?h - hexagonal_bin)
        (then
          (hold (between ?h west_wall ?h) )
          (once (forall (?b4 - hexagonal_bin ?d - block) (in_motion ?h) ) )
          (once (in ?h ?h) )
        )
      )
    )
  )
)
(:terminal
  (= (* (count-overlapping objectMovedRoomSide:dodgeball) (count-shortest objectMovedRoomSide:basketball:blue_dodgeball) )
    (external-forall-maximize
      (* 1 (count objectMovedRoomSide:dodgeball:golfball:doggie_bed) )
    )
  )
)
(:scoring
  (count-once objectMovedRoomSide:green:red)
)
)



(define (game game-id-569) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds agent)
  )
)
(:constraints
  (and
    (preference dodgeballFromBlockToBin
      (exists (?b - hexagonal_bin ?ob - hexagonal_bin)
        (then
          (once (<= 7 1) )
          (hold (in_motion ?ob) )
          (once (not (in_motion ?ob) ) )
        )
      )
    )
    (forall (?h - building)
      (and
        (preference ballNeverThrown
          (exists (?h - hexagonal_bin ?t - red_pyramid_block ?b1 - hexagonal_bin)
            (at-end
              (and
                (agent_holds ?b1)
                (= (distance ?h agent) (distance_side ?h agent ?h ?b1))
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count ballNeverThrown:blue_dodgeball:purple) (+ (* 0 1 )
      )
    )
    (or
      (= (count ballNeverThrown:red) 10 )
    )
    (not
      (<= (count ballNeverThrown:red) (- (* (+ (count-once dodgeballFromBlockToBin:pink_dodgeball) (- 5 )
            )
            3
          )
        )
      )
    )
  )
)
(:scoring
  (* 3 10 )
)
)



(define (game game-id-570) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (in_motion agent)
  )
)
(:constraints
  (and
    (forall (?db - triangular_ramp ?c - dodgeball)
      (and
        (preference objectThrownFromRug
          (exists (?h - game_object ?b8 - dodgeball)
            (then
              (once (not (in ?c ?c) ) )
              (once (agent_holds ?b8) )
              (once (not (and (not (in_motion ?c) ) (and (>= 5 (distance ?b8 ?c)) (agent_holds ?b8) (is_setup_object ?b8) ) (on ?c ?c) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (not
      (or
        (or
          (> (count objectThrownFromRug:blue_dodgeball) (* 1 (count-once-per-objects objectThrownFromRug:pink) (+ (* (* (count-once-per-objects objectThrownFromRug:purple:blue_pyramid_block) (count-overlapping objectThrownFromRug:red) )
                  (count objectThrownFromRug:dodgeball)
                )
                (count objectThrownFromRug:pink_dodgeball:white)
              )
            )
          )
        )
        (> (* (* 5 (* (count-once-per-objects objectThrownFromRug:bed:blue_dodgeball:golfball) 4 (count-once-per-objects objectThrownFromRug:dodgeball) )
            )
            50
          )
          (* 6 (* (+ 4 5 7 (count objectThrownFromRug:purple) (count objectThrownFromRug:basketball) (external-forall-maximize (* 1 (+ 7 2 )
                  )
                )
                (count objectThrownFromRug:dodgeball)
                18
                20
              )
              (count objectThrownFromRug:hexagonal_bin)
            )
            10
          )
        )
        (not
          (<= 5 (external-forall-maximize (count objectThrownFromRug:dodgeball) ) )
        )
      )
    )
    (<= (count-longest objectThrownFromRug:dodgeball) (* (+ (count objectThrownFromRug:golfball:dodgeball) )
        (count objectThrownFromRug:red)
        (* (count objectThrownFromRug:golfball) (* 25 50 )
        )
      )
    )
    (>= (* 20 5 )
      (count-once-per-objects objectThrownFromRug:pink)
    )
    (< (total-time) 4 )
  )
)
(:scoring
  (count-once objectThrownFromRug:alarm_clock:hexagonal_bin)
)
)



(define (game game-id-571) (:domain few-objects-room-v1)
(:setup
  (forall (?d2 - dodgeball)
    (forall (?l - hexagonal_bin)
      (forall (?c2 ?o ?h ?o ?c1 ?h - hexagonal_bin)
        (exists (?g - hexagonal_bin ?c - beachball)
          (forall (?b3 - hexagonal_bin)
            (exists (?w2 - cube_block)
              (exists (?d - curved_wooden_ramp ?l - ball)
                (exists (?g - (either dodgeball) ?d - ball)
                  (forall (?g - game_object)
                    (forall (?b - chair)
                      (and
                        (game-conserved
                          (on ?w2 ?c1)
                        )
                        (forall (?c5 - cylindrical_block ?b6 - shelf)
                          (and
                            (game-optional
                              (same_color ?b3 ?c1)
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - game_object)
      (and
        (preference teddyBearLandsInBin
          (then
            (once (same_type ?h desk) )
            (once (or (in ?h ?h) (not (in_motion bed) ) (agent_holds ?h) (is_setup_object agent) ) )
            (once (agent_holds ?h) )
          )
        )
      )
    )
    (preference blockToBinFromRug
      (exists (?h - chair)
        (then
          (once (in_motion ?h) )
          (once (not (on ?h ?h) ) )
          (once (broken ?h) )
        )
      )
    )
  )
)
(:terminal
  (not
    (> (total-score) (count-once-per-objects teddyBearLandsInBin:hexagonal_bin) )
  )
)
(:scoring
  (count-measure blockToBinFromRug:green)
)
)



(define (game game-id-572) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (not
      (in_motion agent)
    )
  )
)
(:constraints
  (and
    (preference golfballLandsInBinThroughRamp
      (exists (?g - dodgeball)
        (then
          (hold (and (forall (?b8 - color) (in_motion ?g) ) (toggled_on ?g) (and (on ?g ?g) (agent_holds ?g) ) ) )
          (hold (in bed ?g) )
          (once (= 1 1) )
        )
      )
    )
    (forall (?h - (either tall_cylindrical_block cube_block mug pink) ?c - (either dodgeball teddy_bear cellphone))
      (and
        (preference throwInBin
          (exists (?o1 - hexagonal_bin ?b10 - (either laptop triangle_block cd))
            (then
              (hold (and (agent_holds ?c) (agent_holds green_golfball) ) )
              (hold (< (distance ?c ?c) 10) )
              (hold-while (agent_holds ?b10) (agent_holds ?b10) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= 6 (+ (count-once-per-objects throwInBin:top_drawer:yellow) (count-once-per-objects golfballLandsInBinThroughRamp:pink:basketball:basketball) )
  )
)
(:scoring
  (* (count throwInBin:dodgeball) (count-once-per-objects throwInBin:blue_dodgeball) )
)
)



(define (game game-id-573) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-conserved
      (same_object desk door)
    )
  )
)
(:constraints
  (and
    (forall (?c - dodgeball ?h - (either book dodgeball wall))
      (and
        (preference pillowMovedToRoomCenter
          (then
            (once (not (not (and (exists (?r - hexagonal_bin) (in_motion ?h) ) (and (same_object agent green_golfball) (in ?h green_golfball) ) (faces ?h ?h) (agent_holds ?h) ) ) ) )
            (once (agent_holds ?h) )
            (once (not (in_motion ?h) ) )
          )
        )
      )
    )
  )
)
(:terminal
  (<= (count-measure pillowMovedToRoomCenter:dodgeball:dodgeball) (total-score) )
)
(:scoring
  (count pillowMovedToRoomCenter:dodgeball)
)
)



(define (game game-id-574) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - ball ?f - hexagonal_bin)
      (forall (?p2 - block ?p2 - (either golfball golfball))
        (and
          (game-conserved
            (rug_color_under agent ?p2)
          )
        )
      )
    )
    (exists (?b ?b ?g ?d ?b ?b - hexagonal_bin ?h - ball ?d - dodgeball ?o1 - hexagonal_bin)
      (game-conserved
        (and
          (not
            (and
              (agent_holds room_center)
              (in_motion ?o1)
            )
          )
          (not
            (not
              (not
                (exists (?c - game_object)
                  (and
                    (agent_holds ?o1)
                    (< 1 9)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference itemsHidingScreens
      (exists (?p3 - block ?o3 - block)
        (then
          (once (in_motion bed) )
          (hold (and (and (on desk ?o3) (< 0.5 (distance block ?o3)) (in ?o3 ?o3) (adjacent_side ?o3 ?o3 ?o3 rug) (in_motion ?o3) (and (and (and (in ?o3 ?o3) (in rug ?o3) (and (agent_holds ?o3) (in_motion ?o3) ) (in ?o3 room_center) (not (exists (?p - ball) (in_motion ?p) ) ) (touch ?o3 ?o3) (not (not (on ?o3 ?o3) ) ) (< (distance door ?o3) (distance desk ?o3)) (not (not (and (touch agent ?o3) ) ) ) (not (rug_color_under room_center ?o3) ) ) (on ?o3 ?o3) (and (in_motion ?o3) (in_motion ?o3) (touch ?o3 ?o3) (in_motion ?o3) ) ) (and (and (in_motion ?o3) (and (on ?o3 ?o3) (and (and (touch ?o3 ?o3) (on ?o3 ?o3) ) (< (distance_side ?o3 ?o3 ?o3) 1) ) ) ) (< (distance desk ?o3) (distance_side ?o3 blue desk)) ) (and (not (in bed ?o3) ) (faces pink_dodgeball ?o3) (exists (?h - beachball) (touch ?h room_center) ) (between ?o3 ?o3 ?o3) (< 1 (distance ?o3 floor)) (or (and (and (and (not (and (in ?o3 side_table) (or (not (not (in_motion ?o3) ) ) (touch desk ?o3) ) ) ) (not (and (and (touch ?o3 ?o3) (not (< 10 2) ) (not (and (touch upright ?o3) (or (agent_holds ?o3) (>= (distance ?o3 front) 3) (same_object ?o3 ?o3) ) ) ) ) (in_motion ?o3) ) ) ) (and (on sideways ?o3) (touch ?o3 ?o3) ) ) (adjacent ?o3 floor) ) (and (game_start ) (< (distance ?o3 ?o3) 6) ) ) (agent_holds ?o3) (on ?o3 floor) (faces ?o3 ?o3) (and (game_start ) (in room_center ?o3) ) ) ) ) (is_setup_object ?o3) (touch front_left_corner ?o3) ) )
          (once (agent_holds desk) )
        )
      )
    )
    (preference rollBallToBin
      (exists (?c - (either yellow_cube_block dodgeball) ?h - teddy_bear)
        (then
          (once (and (agent_holds ?h) (in_motion ?h) ) )
          (once (not (touch ?h ?h) ) )
          (once (agent_holds ?h) )
        )
      )
    )
    (preference bookOnDeskShelf
      (exists (?r - golfball ?b2 - block)
        (at-end
          (on room_center ?b2)
        )
      )
    )
  )
)
(:terminal
  (>= (* 5 (count-once-per-objects rollBallToBin:pink) )
    (total-time)
  )
)
(:scoring
  (count bookOnDeskShelf:purple:white)
)
)



(define (game game-id-575) (:domain medium-objects-room-v1)
(:setup
  (exists (?c - building)
    (game-conserved
      (equal_x_position ?c ?c)
    )
  )
)
(:constraints
  (and
    (preference ballInOrOnBin
      (exists (?b - ball)
        (then
          (once (exists (?h ?w - ball ?d - (either cylindrical_block curved_wooden_ramp cube_block)) (and (exists (?o3 - (either cylindrical_block pyramid_block cd yellow_cube_block book alarm_clock alarm_clock)) (in ?d bed) ) (and (and (agent_holds ?d) (agent_holds ?b) ) ) ) ) )
          (hold (not (not (or (< 2 7) ) ) ) )
          (once (between top_shelf ?b ?b) )
        )
      )
    )
    (forall (?c - ball)
      (and
        (preference ballOnBedAtEnd
          (exists (?h - hexagonal_bin)
            (then
              (hold-while (in ?c ?h) (not (in_motion ?h) ) )
              (once (and (and (and (exists (?b10 - block) (and (and (in ?h ?c) (object_orientation ?c ?c) ) (on ?h rug) ) ) (in_motion ?h) ) (not (not (in ?c ?c) ) ) ) (agent_holds ?c) (is_setup_object ?c) ) )
              (once (on ?c floor) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (count-once-per-objects ballOnBedAtEnd:dodgeball:hexagonal_bin) (count-once-per-objects ballOnBedAtEnd:dodgeball) )
    (>= 5 (total-time) )
  )
)
(:scoring
  (count-increasing-measure ballOnBedAtEnd:red:blue_pyramid_block:dodgeball)
)
)



(define (game game-id-576) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?p - hexagonal_bin)
      (exists (?h - shelf ?w - (either triangular_ramp ball blue_cube_block))
        (and
          (game-optional
            (in ?p ?p)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference teddyBearLandsInBin
      (exists (?d - wall)
        (then
          (once (agent_holds ?d) )
          (once (in_motion ?d) )
          (hold (in ?d ?d) )
        )
      )
    )
    (preference itemsTurnedOff
      (exists (?h ?b6 ?h ?b ?b7 ?c - hexagonal_bin)
        (then
          (once (and (not (< 1 1) ) (in_motion agent) ) )
          (hold (exists (?d - (either alarm_clock hexagonal_bin mug)) (adjacent_side ?b7 ?b7 ?c) ) )
          (hold (between ?b6 agent ?c) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (total-score) (* (count-once-per-objects itemsTurnedOff:side_table) 10 (* (count teddyBearLandsInBin) 40 )
      )
    )
    (>= 5 (count-once-per-objects itemsTurnedOff:golfball) )
  )
)
(:scoring
  (+ (* 6 (count teddyBearLandsInBin:book) )
    (= (> (* 10 (count-once-per-objects itemsTurnedOff:white) )
        4
      )
      7
    )
    (count teddyBearLandsInBin:blue_dodgeball)
  )
)
)



(define (game game-id-577) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (agent_holds top_shelf)
  )
)
(:constraints
  (and
    (preference ballThrownFromDoor
      (exists (?ob - block ?b1 - teddy_bear ?c4 - (either laptop cd desktop))
        (at-end
          (not
            (and
              (touch ?c4 agent)
              (in_motion ?c4)
              (and
                (not
                  (and
                    (in_motion ?c4)
                    (adjacent_side ?c4 ?c4 rug)
                  )
                )
                (< (distance ?c4 ?c4) 2)
              )
            )
          )
        )
      )
    )
    (preference throwToBinFromOppositeWall
      (exists (?h - (either pillow side_table cube_block pyramid_block bridge_block pink flat_block))
        (at-end
          (in_motion ?h)
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (total-score) )
)
(:scoring
  (* (count throwToBinFromOppositeWall:dodgeball:blue_dodgeball) (* (* 180 (count ballThrownFromDoor:yellow_pyramid_block:dodgeball) )
    )
  )
)
)



(define (game game-id-578) (:domain medium-objects-room-v1)
(:setup
  (forall (?r - dodgeball)
    (game-conserved
      (equal_z_position ?r ?r)
    )
  )
)
(:constraints
  (and
    (preference blockIncorrectlyPicked
      (exists (?o4 - hexagonal_bin)
        (then
          (hold (agent_holds ?o4) )
          (hold (and (and (and (and (in ?o4 door) ) (in_motion rug) ) (and (<= 6 1) (on ?o4 agent) (touch ?o4 ?o4) ) ) (in_motion ?o4) ) )
          (once (not (in ?o4 ?o4) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (> (+ 1 3 )
      (total-score)
    )
  )
)
(:scoring
  (count blockIncorrectlyPicked:block:dodgeball)
)
)



(define (game game-id-579) (:domain few-objects-room-v1)
(:setup
  (forall (?c - block)
    (game-conserved
      (same_object ?c ?c)
    )
  )
)
(:constraints
  (and
    (forall (?d - dodgeball)
      (and
        (preference objectInBuilding
          (exists (?o - hexagonal_bin)
            (then
              (once (in_motion ?o) )
              (once (forall (?h ?c2 - (either floor mug cube_block)) (agent_holds ?c2) ) )
              (once (on ?d tan) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (count-once-per-objects objectInBuilding:basketball) )
)
(:scoring
  (* 5 12 (+ (count-once-per-external-objects objectInBuilding:green:pink:dodgeball) 2 (count-once-per-objects objectInBuilding:top_drawer) 3 2 (external-forall-minimize (+ (count objectInBuilding:green) 8 )
      )
    )
    2
    3
    (count objectInBuilding:beachball)
  )
)
)



(define (game game-id-580) (:domain few-objects-room-v1)
(:setup
  (exists (?w - building)
    (game-optional
      (and
        (and
          (in_motion ?w)
          (or
            (and
              (and
                (and
                  (in_motion pink)
                  (agent_holds ?w)
                  (faces ?w ?w)
                )
                (and
                  (in_motion ?w)
                  (in ?w ?w)
                )
              )
              (not
                (in ?w agent)
              )
              (and
                (and
                  (not
                    (adjacent_side ?w rug ?w)
                  )
                  (and
                    (in_motion upright)
                  )
                  (not
                    (in desk ?w)
                  )
                )
                (< (distance pink ?w) 0.5)
              )
            )
            (on ?w ?w)
          )
        )
        (same_type ?w ?w)
      )
    )
  )
)
(:constraints
  (and
    (preference throwToBinFromDistance
      (exists (?b - red_pyramid_block ?h - dodgeball ?x - building)
        (at-end
          (not
            (touch ?x ?x)
          )
        )
      )
    )
    (forall (?c3 - game_object)
      (and
        (preference objectWithMatchingColor
          (exists (?b1 - hexagonal_bin)
            (then
              (once (in_motion ?c3) )
              (once (adjacent ?b1 ?c3) )
              (once (and (same_color ?c3 ?c3) (in_motion ?c3) (and (touch ?c3 ?b1) (on ?c3 ?b1) ) (< 2 2) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count throwToBinFromDistance:green) 2 )
)
(:scoring
  (+ 100 (count-once-per-objects objectWithMatchingColor:red:blue_pyramid_block) )
)
)



(define (game game-id-581) (:domain few-objects-room-v1)
(:setup
  (exists (?o4 - shelf)
    (and
      (exists (?h - drawer ?c - dodgeball)
        (game-optional
          (< (distance ?o4 ?c) 10)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?s - building)
      (and
        (preference throwBallToDoggieBedOffWall
          (exists (?d - block)
            (at-end
              (above ?d ?d)
            )
          )
        )
        (preference throwToRampToBin
          (exists (?o1 - dodgeball)
            (then
              (hold (agent_holds ?s) )
              (once (and (exists (?t - hexagonal_bin) (not (touch ?s ?o1) ) ) (in_motion ?o1) ) )
              (once (equal_x_position ?o1 ?o1) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> 10 (total-score) )
)
(:scoring
  (count throwBallToDoggieBedOffWall:yellow)
)
)



(define (game game-id-582) (:domain medium-objects-room-v1)
(:setup
  (forall (?b2 - game_object)
    (forall (?b - hexagonal_bin)
      (game-optional
        (agent_holds ?b)
      )
    )
  )
)
(:constraints
  (and
    (preference beachballBouncedOffRamp
      (exists (?r2 - block ?l - hexagonal_bin)
        (then
          (once (not (same_object ?l bottom_shelf) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (count-longest beachballBouncedOffRamp:cube_block:pink) 3 )
      (>= (count-once-per-objects beachballBouncedOffRamp:dodgeball:basketball) (total-score) )
    )
    (or
      (>= 5 2 )
    )
    (or
      (>= (* 1 8 )
        10
      )
      (or
        (>= 3 (- (count-once-per-objects beachballBouncedOffRamp:golfball) )
        )
      )
    )
  )
)
(:scoring
  (* (+ 5 (+ 7 1 )
    )
    4
  )
)
)



(define (game game-id-583) (:domain few-objects-room-v1)
(:setup
  (forall (?b10 - teddy_bear)
    (forall (?t1 ?d - flat_block ?o4 - chair ?t - (either book) ?d - chair)
      (game-conserved
        (= (distance ?b10 ?d) 7 (distance ?d room_center))
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - teddy_bear)
      (and
        (preference blindsOpened
          (exists (?b6 - block)
            (at-end
              (in_motion right)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (count blindsOpened:tall_cylindrical_block) (count-once-per-external-objects blindsOpened:green:orange) )
)
(:scoring
  (* (count blindsOpened:dodgeball) 10 )
)
)



(define (game game-id-584) (:domain medium-objects-room-v1)
(:setup
  (exists (?o - watch ?c ?g - shelf)
    (exists (?l - hexagonal_bin)
      (forall (?l - hexagonal_bin)
        (exists (?o ?t - curved_wooden_ramp)
          (and
            (game-optional
              (and
                (on ?o ?t)
                (adjacent ?g ?t)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwInBin
      (exists (?ob - building)
        (then
          (once (in_motion ?ob) )
          (hold (not (in_motion ?ob) ) )
          (once (on ?ob agent) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects throwInBin:beachball) 1 )
)
(:scoring
  (* (count-once-per-objects throwInBin:yellow_cube_block) (count-once-per-objects throwInBin:rug) )
)
)



(define (game game-id-585) (:domain medium-objects-room-v1)
(:setup
  (exists (?c5 - wall)
    (exists (?l - desk_shelf)
      (exists (?g - hexagonal_bin ?tb - (either book basketball yellow_cube_block book pyramid_block))
        (and
          (forall (?h - cube_block ?o5 - hexagonal_bin)
            (not
              (game-optional
                (< (distance ?l ?tb) 6)
              )
            )
          )
          (and
            (game-optional
              (agent_holds ?l)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballAndBasketballInBin
      (exists (?ob - wall)
        (then
          (once (touch ?ob ?ob) )
          (hold (on ?ob ?ob) )
          (hold (or (and (touch agent ?ob) (on ?ob ?ob) (adjacent ?ob ?ob) ) (in_motion ?ob) ) )
        )
      )
    )
    (preference cubeBlockInBuilding
      (exists (?l - green_triangular_ramp ?h - block)
        (then
          (once (on ?h ?h) )
          (once (< (distance ?h ?h) 0.5) )
          (hold (in_motion ?h) )
        )
      )
    )
    (preference ballThrownToWallToAgent
      (exists (?d - (either cd pyramid_block))
        (then
          (once (on agent ?d) )
          (once (in_motion ?d) )
          (once-measure (faces ?d ?d) (distance ?d ?d) )
        )
      )
    )
  )
)
(:terminal
  (>= (count ballThrownToWallToAgent:triangle_block:basketball) 5 )
)
(:scoring
  (count-once-per-objects cubeBlockInBuilding:cube_block:white)
)
)



(define (game game-id-586) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?b - beachball ?bl - hexagonal_bin ?o - block)
      (and
        (and
          (game-conserved
            (not
              (not
                (and
                  (not
                    (not
                      (> 1 (distance ?o ?o))
                    )
                  )
                  (touch ?o north_wall)
                  (on ?o ?o)
                  (and
                    (not
                      (agent_holds room_center)
                    )
                    (adjacent ?o ?o)
                    (not
                      (agent_holds ?o)
                    )
                  )
                  (on ?o bed)
                  (not
                    (on ?o ?o)
                  )
                )
              )
            )
          )
          (forall (?h - curved_wooden_ramp)
            (exists (?w2 - dodgeball)
              (and
                (game-conserved
                  (in_motion ?o)
                )
                (exists (?s - building)
                  (exists (?b2 - golfball)
                    (exists (?d - dodgeball ?d - (either lamp tall_cylindrical_block))
                      (and
                        (game-conserved
                          (faces ?h ?o)
                        )
                      )
                    )
                  )
                )
                (and
                  (game-conserved
                    (not
                      (and
                        (agent_holds ?h)
                        (not
                          (not
                            (agent_holds ?o)
                          )
                        )
                        (and
                          (exists (?bl - dodgeball ?h - hexagonal_bin)
                            (on agent ?o)
                          )
                          (and
                            (in_motion pink_dodgeball)
                            (not
                              (on ?h ?h)
                            )
                            (and
                              (on ?o ?h)
                              (and
                                (adjacent ?h ?w2)
                                (above ?o ?w2)
                                (and
                                  (not
                                    (touch ?w2 ?o)
                                  )
                                  (not
                                    (agent_holds ?o)
                                  )
                                )
                              )
                            )
                            (in_motion ?w2)
                            (agent_holds ?w2)
                            (opposite ?o ?o)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
          (exists (?c - desktop ?t - shelf ?h - building ?o - (either key_chain golfball) ?o5 - hexagonal_bin)
            (and
              (or
                (game-optional
                  (on agent ?o)
                )
                (game-optional
                  (touch ?o5 ?o)
                )
              )
              (game-optional
                (not
                  (same_color ?o5 ?o)
                )
              )
            )
          )
        )
        (game-optional
          (in_motion ?o)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?s - hexagonal_bin)
      (and
        (preference redDodgeballThrownToBin
          (then
            (once (not (agent_holds ?s) ) )
            (hold (equal_x_position ?s rug) )
            (hold (or (in_motion ?s) (and (adjacent ?s ?s) (in_motion ?s) ) ) )
          )
        )
        (preference throwGolfballToBin
          (exists (?d - doggie_bed)
            (then
              (hold (in_motion agent) )
              (once (adjacent_side ?s ?d bed) )
              (hold (in_motion ?d) )
            )
          )
        )
      )
    )
    (preference throwBallFromOtherBallToBin
      (exists (?w1 - hexagonal_bin ?p2 - curved_wooden_ramp)
        (at-end
          (and
            (>= 2 (distance ?p2 ?p2))
            (same_type desk ?p2)
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects redDodgeballThrownToBin:yellow:basketball) (count redDodgeballThrownToBin:beachball) )
)
(:scoring
  (* 9 (count-overlapping throwGolfballToBin:pink) )
)
)



(define (game game-id-587) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?d - hexagonal_bin)
      (and
        (exists (?g - block)
          (exists (?h - golfball)
            (game-conserved
              (not
                (and
                  (in ?h ?h)
                  (and
                    (and
                      (not
                        (and
                          (not
                            (and
                              (game_start )
                              (not
                                (not
                                  (agent_holds ?h)
                                )
                              )
                            )
                          )
                          (on top_drawer ?h)
                        )
                      )
                      (not
                        (and
                          (on ?d ?g)
                          (in ?d ?h)
                        )
                      )
                      (and
                        (on ?d ?h)
                        (and
                          (not
                            (in ?d ?d)
                          )
                          (agent_holds desktop)
                        )
                      )
                    )
                    (and
                      (and
                        (equal_x_position ?d bed)
                        (not
                          (in_motion ?h)
                        )
                      )
                      (and
                        (in_motion ?d)
                        (not
                          (and
                            (adjacent_side ?h ?h ?d)
                            (or
                              (and
                                (on ?g ?d)
                                (> 1 1)
                                (and
                                  (not
                                    (not
                                      (< (distance agent ?g) 6)
                                    )
                                  )
                                )
                                (or
                                  (in_motion bed)
                                  (agent_holds ?d)
                                )
                              )
                              (not
                                (touch blue ?h)
                              )
                              (in_motion bed)
                            )
                          )
                        )
                      )
                    )
                  )
                  (on ?d ?d)
                  (< 10 1)
                  (on ?g ?g)
                  (and
                    (and
                      (on ?g agent)
                      (touch ?h ?h)
                      (and
                        (on bed ?g)
                        (faces ?g ?g)
                      )
                      (in_motion top_shelf)
                    )
                    (object_orientation ?h ?g)
                  )
                )
              )
            )
          )
        )
        (game-conserved
          (in bed ?d)
        )
        (exists (?h ?d ?p2 ?p - cube_block)
          (and
            (game-conserved
              (not
                (not
                  (not
                    (not
                      (and
                        (exists (?h - blue_pyramid_block)
                          (rug_color_under desk ?h)
                        )
                        (and
                          (and
                            (equal_x_position ?p ?p2)
                            (faces bed ?d)
                          )
                          (and
                            (and
                              (in ?h ?d)
                              (agent_holds room_center)
                            )
                            (and
                              (on ?h desk)
                              (on ?d ?d)
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
            (game-conserved
              (not
                (and
                  (and
                    (in_motion ?p2)
                    (agent_holds ?p2)
                  )
                  (and
                    (is_setup_object ?d)
                    (not
                      (and
                        (and
                          (touch floor ?p2)
                          (agent_holds agent)
                        )
                      )
                    )
                    (on ?p2 ?d)
                    (and
                      (and
                        (and
                          (and
                            (not
                              (and
                                (agent_holds ?p2)
                                (touch agent agent)
                              )
                            )
                            (and
                              (in_motion ?p)
                              (and
                                (not
                                  (same_color ?d ?h)
                                )
                                (not
                                  (adjacent_side pink desk ?p)
                                )
                              )
                            )
                          )
                          (on ?p side_table)
                        )
                        (= (distance ?d ?h))
                      )
                      (exists (?c - building ?h - (either dodgeball book))
                        (on front ?p)
                      )
                    )
                  )
                )
              )
            )
            (game-conserved
              (and
                (in ?d ?d)
                (on ?d ?p2)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallFromOtherBallToBin
      (exists (?b ?h ?h - color ?l - (either pyramid_block dodgeball laptop))
        (at-end
          (same_object room_center rug)
        )
      )
    )
    (preference dodgeballThrownToBin
      (exists (?l2 - red_dodgeball)
        (then
          (hold (not (and (open ?l2) (agent_holds ?l2) (is_setup_object ?l2) ) ) )
          (hold (and (in ?l2 agent) (and (and (and (not (rug_color_under ?l2 bed) ) (adjacent ?l2 ?l2) ) (on ?l2 ?l2) ) (touch rug ?l2) ) ) )
          (hold (in ?l2 ?l2) )
        )
      )
    )
  )
)
(:terminal
  (> (count dodgeballThrownToBin:beachball) (total-time) )
)
(:scoring
  (/
    (count throwBallFromOtherBallToBin:blue_pyramid_block)
    (* (count throwBallFromOtherBallToBin:yellow) 2 )
  )
)
)



(define (game game-id-588) (:domain many-objects-room-v1)
(:setup
  (exists (?o4 ?b6 ?c - hexagonal_bin)
    (not
      (forall (?h - (either hexagonal_bin dodgeball hexagonal_bin) ?r - game_object)
        (game-conserved
          (agent_holds agent)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttemptFromBehindBlock
      (exists (?w - cylindrical_block)
        (then
          (hold (not (between room_center door desk) ) )
          (hold (and (and (adjacent_side ?w ?w ?w) (agent_holds desk) (or (adjacent ?w ?w) (not (agent_holds ?w) ) ) ) (not (adjacent ?w ?w) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (> (total-score) (* 5 (count-once throwAttemptFromBehindBlock:dodgeball) (+ 6 (count throwAttemptFromBehindBlock:hexagonal_bin) )
        )
      )
      (>= (count-once-per-objects throwAttemptFromBehindBlock:golfball:green) (total-score) )
      (or
        (or
          (< (count-once-per-objects throwAttemptFromBehindBlock:dodgeball:blue_dodgeball) 6 )
          (not
            (>= (total-time) (total-time) )
          )
        )
        (>= (count throwAttemptFromBehindBlock:red) 100 )
      )
    )
    (<= (count-once-per-objects throwAttemptFromBehindBlock:blue) 10 )
  )
)
(:scoring
  (+ (count-once-per-objects throwAttemptFromBehindBlock:dodgeball:basketball) 5 (+ 3 3 )
  )
)
)



(define (game game-id-589) (:domain few-objects-room-v1)
(:setup
  (forall (?bl - hexagonal_bin ?b1 - shelf)
    (and
      (game-conserved
        (on ?b1 ?b1)
      )
    )
  )
)
(:constraints
  (and
    (preference blockOnBlockInTowerAtEnd
      (exists (?w1 - (either golfball dodgeball))
        (then
          (once (not (not (equal_z_position ?w1 ?w1) ) ) )
          (once (adjacent ?w1 ?w1) )
          (hold (not (in_motion bed) ) )
        )
      )
    )
    (forall (?s - wall)
      (and
        (preference ballThrownThroughRampToBin
          (exists (?d - curved_wooden_ramp ?h - hexagonal_bin)
            (then
              (once (on ?s ?s) )
              (once (and (on agent ?h) (agent_holds ?s) ) )
              (once (agent_holds ?h) )
            )
          )
        )
        (preference throwToDrawerOrBin
          (exists (?o - ball ?h - (either game_object))
            (then
              (once (and (in_motion ?h) (in ?s ?s) ) )
              (hold (agent_holds ?h) )
              (once (and (in_motion ?s) (and (on north_wall ?s) (and (and (and (in_motion ?s) (and (agent_holds top_drawer) (not (on ?s ?h) ) ) ) (agent_holds ?h) (not (not (in_motion ?s) ) ) ) (on ?s floor) (and (not (in_motion ?s) ) (not (agent_crouches ) ) ) (and (agent_crouches ) (>= 0.5 (distance ?h ?s)) ) (and (touch blue desk) (not (in_motion agent) ) ) (rug_color_under ?h ?s) (touch ?h agent) (and (in ?s ?h) (agent_holds ?h) ) ) (and (game_over ) (and (not (< 6 (distance rug ?h)) ) (and (and (in_motion ?h) (in_motion rug) ) (touch ?s ?s) ) ) (on ?s agent) ) (and (on ?h ?h) (equal_z_position ?h ?h) (in_motion ?s) (on ?h floor) (agent_holds ?h) (and (and (agent_holds agent) (and (adjacent_side ?s ?s ?s ?s) (in_motion agent) (same_object ?s ?s) ) ) (touch ?h ?s) (in ?s bed) ) (touch bed ?s) ) (and (agent_holds ?h) (agent_crouches ) (in_motion bed) (in ?s desk) (agent_holds ?h) (not (in_motion ?h) ) ) (not (and (agent_holds ?s) (in_motion agent) (agent_holds ?s) ) ) ) (between ?s ?s bed) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (not
      (or
        (or
          (or
            (>= (- 4 )
              18
            )
            (or
              (>= (total-score) 1 )
              (>= (count-once-per-objects blockOnBlockInTowerAtEnd:beachball) 20 )
            )
            (>= 2 3 )
          )
          (>= 1 (total-score) )
        )
        (>= (* 4 (count-once blockOnBlockInTowerAtEnd:beachball) 300 (count-once-per-objects blockOnBlockInTowerAtEnd:beachball) 3 (external-forall-minimize (count throwToDrawerOrBin:blue_pyramid_block) ) (>= 10 50 )
            9
            (- (count-increasing-measure blockOnBlockInTowerAtEnd:book:book) )
            50
            (count-once-per-objects throwToDrawerOrBin:basketball:rug:dodgeball)
            5
          )
          5
        )
        (>= 4 (total-time) )
      )
    )
    (> (- 5 )
      (+ 2 50 )
    )
    (and
      (>= (total-time) (total-time) )
      (>= 3 (+ (external-forall-minimize (* (* (count-increasing-measure blockOnBlockInTowerAtEnd:hexagonal_bin:rug) 2 )
              3
            )
          )
          10
        )
      )
      (>= 100 3 )
    )
  )
)
(:scoring
  (- (count-once-per-objects blockOnBlockInTowerAtEnd:red:yellow) )
)
)



(define (game game-id-590) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?b6 - building)
      (forall (?c6 - wall ?f - building)
        (exists (?h ?d ?d - cube_block ?b - cube_block)
          (game-conserved
            (and
              (adjacent agent ?b6)
              (and
                (in ?b ?b6)
                (< (distance ?b6 ?f) (distance ?f ?b))
                (and
                  (agent_holds ?b6)
                  (in_motion ?b6)
                )
                (is_setup_object ?b6)
                (not
                  (and
                    (not
                      (in_motion ?b)
                    )
                    (in_motion ?b)
                  )
                )
                (in_motion ?f)
                (on desk ?b)
                (agent_holds ?f)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blueObjectMovedToRoomCenter
      (exists (?d - dodgeball)
        (at-end
          (faces ?d ?d)
        )
      )
    )
  )
)
(:terminal
  (>= (count blueObjectMovedToRoomCenter:basketball) (count-once-per-objects blueObjectMovedToRoomCenter:golfball) )
)
(:scoring
  (count blueObjectMovedToRoomCenter:blue_dodgeball:blue_dodgeball)
)
)



(define (game game-id-591) (:domain few-objects-room-v1)
(:setup
  (not
    (forall (?o4 - dodgeball)
      (exists (?d - red_dodgeball)
        (exists (?w1 - wall)
          (game-conserved
            (in ?o4 ?o4)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectLandsInBin
      (exists (?c - golfball ?t - hexagonal_bin ?h - (either pyramid_block dodgeball pillow))
        (then
          (hold (same_color ?h ?h) )
          (once (agent_crouches ) )
          (hold (on ?h agent) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* (count-once-per-objects objectLandsInBin:pink_dodgeball) (count objectLandsInBin:basketball:blue_pyramid_block) )
      (count objectLandsInBin:yellow_cube_block)
    )
    (> 6 (total-score) )
    (or
      (>= 3 (count-measure objectLandsInBin:basketball) )
    )
  )
)
(:scoring
  (+ 3 10 (= (count-overlapping objectLandsInBin:basketball) (+ 10 (count-once-per-objects objectLandsInBin:dodgeball:yellow_cube_block) )
    )
  )
)
)



(define (game game-id-592) (:domain medium-objects-room-v1)
(:setup
  (exists (?l2 - beachball)
    (exists (?l3 - dodgeball)
      (forall (?h - game_object ?b4 - (either key_chain cylindrical_block))
        (game-optional
          (not
            (not
              (adjacent ?b4 ?b4)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference teddyBearHitsBall
      (exists (?h - doggie_bed ?x - ball)
        (at-end
          (on pink_dodgeball ?x)
        )
      )
    )
    (preference throwAttemptFromDoor
      (exists (?w - block ?d - doggie_bed ?t2 - cube_block ?b5 - dodgeball)
        (then
          (once (on ?b5 ?b5) )
          (once (on ?b5 ?b5) )
          (once (agent_holds ?b5) )
        )
      )
    )
    (preference throwAttempt
      (exists (?d - building ?g - hexagonal_bin ?d - hexagonal_bin)
        (then
          (once (game_over ) )
          (once (and (agent_holds ?d) ) )
          (once (and (exists (?c - ball) (in_motion ?c) ) (agent_holds ?d) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 0.7 30 )
)
(:scoring
  (* (external-forall-maximize (* 3 (+ 5 (count teddyBearHitsBall:beachball:dodgeball) )
        (count throwAttempt:pink:purple)
        3
        (* 5 (count teddyBearHitsBall:dodgeball:blue_pyramid_block) )
        (count throwAttemptFromDoor:doggie_bed:dodgeball:top_drawer)
        (count-once throwAttempt:dodgeball)
        (count-once throwAttemptFromDoor:blue_cube_block)
        10
      )
    )
    5
    5
  )
)
)



(define (game game-id-593) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?t2 - wall ?b6 - color)
      (exists (?c1 - tall_cylindrical_block)
        (and
          (exists (?c - cube_block ?p - (either cellphone dodgeball))
            (game-conserved
              (adjacent ?b6 ?b6)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballHitsPillowWithoutTouchingBlock
      (exists (?r - doggie_bed)
        (then
          (once-measure (and (touch ?r ?r) (touch ?r ?r) ) (distance ?r ?r) )
          (hold-while (not (in ?r ?r) ) (agent_holds ?r) )
          (hold-while (and (on ?r agent) (in ?r ?r) ) (broken ?r) (in rug ?r) )
        )
      )
    )
    (forall (?f - (either dodgeball cube_block laptop basketball))
      (and
        (preference dodgeballFromBlockToBin
          (exists (?d - ball)
            (then
              (once (agent_holds ?d) )
              (once (= 1 0.5 (distance top_drawer ?d) (distance ?f bed)) )
              (once (agent_holds bed) )
            )
          )
        )
      )
    )
    (preference dodgeballFromDeskToTarget
      (exists (?c3 - beachball ?h - curved_wooden_ramp)
        (then
          (once (in_motion ?h) )
        )
      )
    )
  )
)
(:terminal
  (<= (count dodgeballHitsPillowWithoutTouchingBlock:green) (* 10 (external-forall-maximize (count dodgeballHitsPillowWithoutTouchingBlock:red_pyramid_block:yellow) ) (count dodgeballFromDeskToTarget:beachball) (count-longest dodgeballFromDeskToTarget:red:dodgeball) )
  )
)
(:scoring
  (count-once-per-objects dodgeballFromDeskToTarget:pink_dodgeball)
)
)



(define (game game-id-594) (:domain many-objects-room-v1)
(:setup
  (exists (?d - block ?tb - cylindrical_block ?b - hexagonal_bin)
    (game-conserved
      (exists (?l - dodgeball)
        (in ?l rug)
      )
    )
  )
)
(:constraints
  (and
    (preference dropAttempt
      (exists (?d - golfball)
        (then
          (once (not (faces ?d ?d) ) )
          (once (> 1 0.5) )
          (hold (same_type ?d ?d) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (* (* (* 1 (count-once-per-objects dropAttempt:doggie_bed:golfball) (count dropAttempt:basketball) )
        (external-forall-maximize
          (external-forall-minimize
            (external-forall-minimize
              (count dropAttempt:dodgeball:blue_dodgeball)
            )
          )
        )
      )
      5
    )
  )
)
(:scoring
  (count-once dropAttempt)
)
)



(define (game game-id-595) (:domain medium-objects-room-v1)
(:setup
  (exists (?b8 - (either dodgeball cube_block pen))
    (exists (?l2 - hexagonal_bin ?o - (either main_light_switch laptop cd) ?h - curved_wooden_ramp ?p2 - yellow_cube_block)
      (and
        (game-conserved
          (not
            (not
              (adjacent ?b8 room_center)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference failedThrowAttempt
      (exists (?c4 - hexagonal_bin)
        (then
          (hold (agent_holds ?c4) )
          (hold (and (and (in_motion ?c4) (in_motion ?c4) ) (object_orientation ?c4 ?c4) ) )
          (hold (not (not (on desk ?c4) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (+ 10 (* (count failedThrowAttempt:yellow_cube_block) (= 3 6 )
        )
        (count-once failedThrowAttempt:rug)
        (+ (count-once-per-objects failedThrowAttempt:yellow:yellow) (count-once-per-objects failedThrowAttempt:beachball) )
      )
      (* (* 20 10 2 6 )
        (count failedThrowAttempt:pyramid_block)
      )
    )
    (and
      (or
        (and
          (or
            (= (* (* (count-overlapping failedThrowAttempt:beachball) (* (* (count failedThrowAttempt:yellow_cube_block:basketball) (count-same-positions failedThrowAttempt:doggie_bed) )
                    (count-once-per-objects failedThrowAttempt:beachball:dodgeball)
                  )
                )
                (count failedThrowAttempt:green)
              )
              (total-time)
            )
            (>= (total-score) (count failedThrowAttempt:doggie_bed) )
            (> (total-time) (count failedThrowAttempt:blue) )
          )
          (> 6 (+ (count failedThrowAttempt:green) )
          )
          (>= (* (* (count-once-per-objects failedThrowAttempt:pink_dodgeball) (+ (* 5 5 )
                  (count failedThrowAttempt:golfball)
                )
              )
              (+ (count failedThrowAttempt:pink) (count-once-per-objects failedThrowAttempt:pyramid_block) )
            )
            (total-time)
          )
        )
        (not
          (or
            (>= (total-score) 0.7 )
            (or
              (>= (* (count-once-per-objects failedThrowAttempt:pink_dodgeball) 10 )
                3
              )
              (> (* (count failedThrowAttempt:dodgeball) 3 )
                (total-score)
              )
              (>= (count failedThrowAttempt:yellow) (count-same-positions failedThrowAttempt:beachball) )
            )
            (not
              (>= (+ (count-once failedThrowAttempt:pink) (* 3 (count failedThrowAttempt:beachball) )
                )
                6
              )
            )
          )
        )
      )
      (or
        (or
          (> (count-once failedThrowAttempt:red) (count-once-per-objects failedThrowAttempt:triangle_block:dodgeball) )
          (or
            (>= 2 15 )
            (>= (count-once failedThrowAttempt:green) 3 )
            (or
              (> (total-score) 4 )
              (>= (count failedThrowAttempt:dodgeball) (* 12 1 )
              )
              (<= (* (external-forall-minimize (count failedThrowAttempt:red:beachball) ) 4 )
                (count failedThrowAttempt:basketball:pink:dodgeball)
              )
            )
          )
        )
        (< (* (count-longest failedThrowAttempt:yellow) (- 6 )
            3
            (+ (* (+ 3 5 )
                9
              )
              (* (external-forall-maximize (count failedThrowAttempt:yellow) ) (* (count failedThrowAttempt:beachball:pink_dodgeball) 6 )
              )
              (count failedThrowAttempt:basketball:golfball)
              (external-forall-minimize
                (external-forall-maximize
                  (+ 3 (= (= (* (>= (- (+ 8 )
                            )
                            3
                          )
                          (count failedThrowAttempt:golfball)
                          (count failedThrowAttempt:yellow)
                        )
                      )
                    )
                  )
                )
              )
              2
              (count failedThrowAttempt:yellow)
              1
              0
              300
              (count failedThrowAttempt:green)
              5
              15
            )
            (count failedThrowAttempt:beachball)
            (* (count failedThrowAttempt:yellow:pink:yellow) (count failedThrowAttempt:golfball:hexagonal_bin) )
          )
          5
        )
        (> (count failedThrowAttempt:yellow_cube_block) 10 )
      )
    )
    (< (count failedThrowAttempt:alarm_clock) 1 )
  )
)
(:scoring
  (count-once failedThrowAttempt:golfball)
)
)



(define (game game-id-596) (:domain few-objects-room-v1)
(:setup
  (exists (?h - hexagonal_bin ?c - dodgeball)
    (and
      (exists (?o5 - doggie_bed)
        (game-optional
          (and
            (in_motion agent)
            (< (distance ?c ?o5) 3)
          )
        )
      )
      (and
        (and
          (exists (?db - dodgeball ?w2 - (either laptop cd))
            (and
              (and
                (game-optional
                  (touch ?c desk)
                )
              )
              (forall (?h - cylindrical_block)
                (and
                  (and
                    (forall (?r - hexagonal_bin)
                      (game-conserved
                        (< (distance ?h ?w2) (distance ?h ?c))
                      )
                    )
                    (game-conserved
                      (not
                        (not
                          (not
                            (toggled_on ?w2)
                          )
                        )
                      )
                    )
                  )
                )
              )
              (forall (?b - (either cylindrical_block wall))
                (exists (?o - beachball)
                  (exists (?db - ball)
                    (and
                      (and
                        (game-conserved
                          (and
                            (and
                              (adjacent ?o desk)
                              (toggled_on agent)
                            )
                            (in_motion ?db)
                            (not
                              (agent_holds ?db)
                            )
                            (on ?c ?o)
                            (or
                              (and
                                (in room_center ?w2)
                                (not
                                  (agent_holds ?b)
                                )
                              )
                              (= (distance room_center desk) (x_position ?c))
                              (and
                                (in_motion ?c)
                                (and
                                  (same_object ?o ?w2)
                                  (in ?o ?db)
                                )
                                (agent_holds desk)
                                (and
                                  (in bed ?o)
                                  (not
                                    (on agent ?o)
                                  )
                                )
                                (on front ?o)
                                (above ?w2 ?b)
                                (>= 5 (distance ?w2 ?c))
                                (agent_holds ?c)
                              )
                            )
                            (in ?db desk)
                          )
                        )
                        (exists (?c - (either cellphone golfball) ?g - dodgeball)
                          (exists (?w ?l1 - (either blue_cube_block cd dodgeball))
                            (game-optional
                              (and
                                (not
                                  (not
                                    (not
                                      (exists (?h - game_object)
                                        (exists (?r - hexagonal_bin ?b10 - dodgeball)
                                          (and
                                            (and
                                              (and
                                                (equal_x_position ?w2 west_wall)
                                                (and
                                                  (on ?g ?h)
                                                  (and
                                                    (in_motion ?b10)
                                                    (not
                                                      (and
                                                        (and
                                                          (and
                                                            (in_motion ?h)
                                                            (and
                                                              (game_over )
                                                              (in_motion ?l1)
                                                              (< (distance ?db ?h) (distance ?h ?h))
                                                              (not
                                                                (agent_holds desk)
                                                              )
                                                            )
                                                            (agent_holds ?o)
                                                          )
                                                          (agent_holds ?w)
                                                          (and
                                                            (is_setup_object ?db)
                                                            (touch ?c ?g)
                                                          )
                                                          (exists (?o2 - dodgeball ?c1 - shelf ?b3 - dodgeball ?c - hexagonal_bin ?bl - bridge_block)
                                                            (in_motion ?bl)
                                                          )
                                                        )
                                                        (between ?c agent ?l1)
                                                      )
                                                    )
                                                    (on ?l1 ?g)
                                                  )
                                                )
                                                (same_color desk back)
                                              )
                                              (in_motion ?b10)
                                              (< 0 2)
                                            )
                                            (agent_holds ?c)
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                                (agent_holds ?db)
                                (on ?db ?l1)
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
          (exists (?h - hexagonal_bin)
            (and
              (forall (?l3 - dodgeball)
                (game-optional
                  (in ?l3 ?l3)
                )
              )
            )
          )
          (exists (?o - cube_block ?b - cube_block ?h - (either laptop laptop) ?r - game_object ?d - dodgeball)
            (exists (?c1 - color)
              (game-optional
                (open ?c1)
              )
            )
          )
        )
        (exists (?c2 - game_object ?h - ball)
          (and
            (game-optional
              (in_motion ?h)
            )
          )
        )
      )
      (forall (?c - hexagonal_bin ?o3 ?p2 - block)
        (exists (?b1 - shelf ?c ?c3 - (either cellphone cylindrical_block) ?h - (either pink desktop))
          (exists (?p3 - chair ?db - hexagonal_bin)
            (and
              (exists (?c - (either pyramid_block desktop chair) ?h - flat_block)
                (game-optional
                  (not
                    (same_type ?o3 agent)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b ?c1 - game_object ?b9 - block)
      (and
        (preference throwBallToBinOffObject
          (exists (?b - dodgeball)
            (then
              (hold (not (in_motion ?b) ) )
              (hold (and (not (in_motion ?b) ) (adjacent_side ?b9 ?b ?b9) ) )
              (once (agent_holds ?b9) )
            )
          )
        )
      )
    )
    (forall (?c2 - hexagonal_bin)
      (and
        (preference beachballBouncedOffRamp
          (exists (?t - game_object ?d - hexagonal_bin)
            (then
              (hold (on ?c2 ?d) )
              (once (agent_holds ?d) )
              (once (not (in agent ?c2) ) )
              (hold (in_motion ?d) )
            )
          )
        )
        (preference throwFromBehindChairsInBin
          (exists (?c - ball)
            (then
              (hold (object_orientation ?c2 upright) )
              (hold (in_motion floor) )
              (hold (on agent green_golfball) )
            )
          )
        )
        (preference dodgeballFromRugToBin
          (exists (?h - doggie_bed)
            (then
              (once (is_setup_object ?h) )
              (once (game_start ) )
              (hold-while (not (not (and (object_orientation ?h rug) (in ?c2 ?h) ) ) ) (touch ?h ?h) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> 5 (count throwFromBehindChairsInBin:yellow) )
)
(:scoring
  (> 100 (count-total dodgeballFromRugToBin:beachball) )
)
)



(define (game game-id-597) (:domain few-objects-room-v1)
(:setup
  (forall (?c5 - triangular_ramp ?b - (either pyramid_block alarm_clock))
    (game-optional
      (in ?b ?b)
    )
  )
)
(:constraints
  (and
    (forall (?l2 - ball)
      (and
        (preference tanObjectMovedToRoomCenter
          (exists (?c2 - dodgeball ?r - game_object ?d - building)
            (then
              (hold (in agent ?d) )
            )
          )
        )
        (preference blockInTowerAtEnd
          (exists (?d ?o2 - block ?w2 - (either rug cube_block) ?x - ball)
            (then
              (once (and (or (on ?x ?l2) (on ?l2 ?l2) ) (not (is_setup_object ?x) ) ) )
              (hold (and (not (and (same_color ?x ?x) (not (not (adjacent top_shelf ?x) ) ) ) ) (and (agent_holds ?x) (not (object_orientation west_wall ?l2) ) ) ) )
              (once (not (and (in ?x ?l2) (equal_x_position ?l2 bed) ) ) )
            )
          )
        )
      )
    )
    (preference ballDroppedInBin
      (exists (?o - block ?w1 - dodgeball)
        (then
          (once (toggled_on ?w1) )
          (hold (agent_holds ?w1) )
          (once (on ?w1 ?w1) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (and
        (>= (count tanObjectMovedToRoomCenter:hexagonal_bin) 3 )
        (>= (count blockInTowerAtEnd:blue_dodgeball) 10 )
      )
    )
    (and
      (or
        (>= -10 (- (count tanObjectMovedToRoomCenter:orange) )
        )
      )
      (or
        (>= (* (count-same-positions ballDroppedInBin:orange) (* 6 9 )
          )
          3
        )
        (>= (* 5 50 )
          (/
            (* 30 (* (count blockInTowerAtEnd:blue:dodgeball) 10 )
            )
            5
          )
        )
      )
      (or
        (>= (* 4 (+ (+ (* (count tanObjectMovedToRoomCenter:golfball) (count ballDroppedInBin:doggie_bed:red) (count-once-per-objects tanObjectMovedToRoomCenter:hexagonal_bin) )
                (* (count blockInTowerAtEnd:basketball:cube_block) 2 )
              )
              5
              (* (+ (- 2 )
                  5
                )
                (* (count ballDroppedInBin:pink) (count blockInTowerAtEnd:brown:dodgeball) )
              )
              (count-once-per-external-objects tanObjectMovedToRoomCenter:yellow)
              1
              5
            )
          )
          (total-score)
        )
        (not
          (= 3 0 )
        )
      )
    )
  )
)
(:scoring
  (count tanObjectMovedToRoomCenter:alarm_clock:dodgeball)
)
)



(define (game game-id-598) (:domain medium-objects-room-v1)
(:setup
  (exists (?p3 - ball)
    (and
      (forall (?b - red_dodgeball)
        (and
          (and
            (game-conserved
              (toggled_on ?p3)
            )
            (game-conserved
              (agent_holds room_center)
            )
            (forall (?l4 - hexagonal_bin)
              (game-conserved
                (not
                  (agent_holds ?b)
                )
              )
            )
          )
          (forall (?b4 - (either key_chain laptop))
            (forall (?h - (either mug bridge_block))
              (game-optional
                (agent_holds ?b4)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o - dodgeball ?b ?b - hexagonal_bin)
      (and
        (preference throwToBinFromDistance
          (exists (?o - color)
            (at-end
              (and
                (in_motion ?b)
                (on ?b ?b)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (count throwToBinFromDistance:dodgeball) )
)
(:scoring
  (count-once-per-objects throwToBinFromDistance:green:blue_pyramid_block)
)
)



(define (game game-id-599) (:domain many-objects-room-v1)
(:setup
  (exists (?t - hexagonal_bin)
    (forall (?o - cube_block ?w - teddy_bear ?b - hexagonal_bin)
      (game-optional
        (agent_holds ?b)
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToDoggieBed
      (exists (?s - (either laptop beachball))
        (then
          (hold (< (distance ?s ?s) 1) )
          (once (same_object ?s ?s) )
          (once (not (and (and (and (on ?s ?s) (agent_holds ?s) ) (or (not (in_motion ?s) ) (or (and (not (between right ?s desk) ) (and (and (on ?s ?s) (and (forall (?d - teddy_bear) (agent_holds ?d) ) (agent_holds ?s) ) ) (exists (?h - hexagonal_bin) (and (not (in_motion ?s) ) (agent_holds ?s) ) ) ) ) (and (on ?s ?s) (and (not (in_motion ?s) ) ) ) ) ) (not (not (agent_holds ?s) ) ) ) (and (and (and (open ?s) (agent_holds ?s) ) (in_motion ?s) ) (in ?s ?s) ) (not (agent_holds ?s) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-increasing-measure throwBallToDoggieBed:blue_dodgeball) (count throwBallToDoggieBed:hexagonal_bin) )
)
(:scoring
  (* (count throwBallToDoggieBed:dodgeball:blue_dodgeball) )
)
)



(define (game game-id-600) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (and
        (forall (?b - dodgeball)
          (game-optional
            (and
              (not
                (agent_holds ?b)
              )
              (agent_holds ?b)
            )
          )
        )
        (exists (?d - blinds ?b7 - dodgeball)
          (and
            (exists (?b8 - shelf)
              (forall (?r - hexagonal_bin ?o - red_dodgeball)
                (game-conserved
                  (not
                    (adjacent ?b8 ?b7)
                  )
                )
              )
            )
            (forall (?b3 - wall)
              (and
                (game-conserved
                  (in ?b7 ?b7)
                )
              )
            )
            (forall (?d1 - hexagonal_bin)
              (game-optional
                (and
                  (on front ?d1)
                  (and
                    (and
                      (in front_left_corner agent)
                      (in ?b7 ?b7)
                      (agent_holds ?b7)
                      (and
                        (not
                          (exists (?g - triangular_ramp)
                            (and
                              (same_color ?b7 ?d1)
                              (adjacent ?b7 ?d1)
                            )
                          )
                        )
                        (and
                          (open ?b7)
                          (agent_holds ?d1)
                        )
                      )
                    )
                    (not
                      (in ?b7 desk)
                    )
                    (in_motion agent)
                  )
                  (in_motion ?b7)
                )
              )
            )
          )
        )
      )
    )
    (game-optional
      (exists (?o - teddy_bear)
        (adjacent ?o agent)
      )
    )
  )
)
(:constraints
  (and
    (preference rollBallToBin
      (exists (?b5 ?c - hexagonal_bin ?c2 - red_pyramid_block ?r2 - triangular_ramp ?g - dodgeball ?b2 - cube_block)
        (then
          (once (in_motion ?b2) )
          (once (not (not (not (and (in_motion ?b2) (in_motion ?b2) ) ) ) ) )
          (once (and (agent_holds ?b2) (on ?b2 ?b2) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 3 (count-shortest rollBallToBin:dodgeball) (count-once-per-objects rollBallToBin:white) 2 )
    20
  )
)
(:scoring
  (count-once-per-objects rollBallToBin:basketball)
)
)



(define (game game-id-601) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (< 1 2)
    )
  )
)
(:constraints
  (and
    (preference throwKnocksBlock
      (exists (?o - ball)
        (at-end
          (faces room_center ?o)
        )
      )
    )
  )
)
(:terminal
  (or
    (> (count-once-per-objects throwKnocksBlock:blue_pyramid_block) 10 )
    (>= (+ (count throwKnocksBlock:golfball:basketball) (* (count-overlapping throwKnocksBlock:blue_cube_block) 3 (count throwKnocksBlock:green) )
      )
      (total-time)
    )
  )
)
(:scoring
  (count throwKnocksBlock:hexagonal_bin)
)
)



(define (game game-id-602) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (<= 3 1)
  )
)
(:constraints
  (and
    (preference cubeBlockThrowAttempt
      (exists (?b - hexagonal_bin)
        (then
          (once (= 0 1) )
          (once (agent_holds ?b) )
          (once (agent_holds ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (* 3 (count-once-per-objects cubeBlockThrowAttempt) 5 (external-forall-maximize (* (count-once-per-objects cubeBlockThrowAttempt:alarm_clock:dodgeball) 0.5 (* (+ 3 (count-unique-positions cubeBlockThrowAttempt:green) )
            (count-once-per-external-objects cubeBlockThrowAttempt:block)
          )
        )
      )
      50
    )
  )
)
(:scoring
  (* (* (count-overlapping cubeBlockThrowAttempt:basketball) (* 4 (count-once-per-objects cubeBlockThrowAttempt:dodgeball:red) )
    )
    (* (>= 0.5 (count-once-per-external-objects cubeBlockThrowAttempt:brown:hexagonal_bin:doggie_bed) )
      1
    )
  )
)
)



(define (game game-id-603) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?d ?d - hexagonal_bin)
      (exists (?b - hexagonal_bin)
        (forall (?h - dodgeball ?ob - chair)
          (not
            (and
              (game-conserved
                (same_color ?d ?d)
              )
              (game-conserved
                (in_motion ?ob)
              )
              (and
                (exists (?s ?s ?h - cube_block)
                  (game-conserved
                    (not
                      (not
                        (and
                          (same_color pink_dodgeball ?ob)
                          (in_motion west_wall)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
    (exists (?tb - (either credit_card doggie_bed teddy_bear) ?w1 ?s - dodgeball)
      (and
        (game-conserved
          (and
            (and
              (exists (?b - game_object ?h - dodgeball)
                (not
                  (and
                    (game_over )
                    (agent_holds ?h)
                  )
                )
              )
              (in ?w1 bed)
            )
            (in ?s ?w1)
          )
        )
        (exists (?f - doggie_bed ?h - hexagonal_bin ?h - dodgeball ?w - (either rug bridge_block pyramid_block dodgeball blue_cube_block))
          (forall (?b - block ?b - ball)
            (forall (?h - game_object ?b - drawer)
              (and
                (and
                  (exists (?r2 - chair)
                    (exists (?l4 - ball)
                      (forall (?d - hexagonal_bin)
                        (and
                          (exists (?t - hexagonal_bin)
                            (game-conserved
                              (adjacent_side ?w1 ?w ?s)
                            )
                          )
                        )
                      )
                    )
                  )
                  (exists (?r1 - ball)
                    (and
                      (and
                        (forall (?c2 - building)
                          (exists (?h - chair ?w - hexagonal_bin)
                            (exists (?bl - building)
                              (game-optional
                                (and
                                  (and
                                    (above ?b ?bl)
                                    (agent_holds ?s)
                                  )
                                  (< 1 (distance ?c2 ?w1))
                                )
                              )
                            )
                          )
                        )
                        (game-conserved
                          (on drawer ?w1)
                        )
                      )
                    )
                  )
                )
                (forall (?o ?p2 ?b ?l1 ?f ?o - bridge_block)
                  (forall (?t - dodgeball ?d - hexagonal_bin)
                    (game-optional
                      (and
                        (adjacent ?w ?p2)
                        (between ?w top_shelf ?f)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?h - hexagonal_bin ?l - dodgeball)
        (then
          (once (on ?l ?l) )
          (hold-while (and (and (and (in_motion desk) (exists (?d - ball) (and (adjacent bed ?d) (between ?l ?l desk) ) ) (and (in_motion ?l) (not (and (agent_holds ?l) (not (not (adjacent_side ?l agent ?l) ) ) ) ) ) ) (agent_holds ?l) ) (and (and (touch ?l ?l) (not (adjacent agent ?l) ) ) (in ?l ?l) ) ) (and (and (touch ?l ?l) (in_motion ?l) ) (agent_holds ?l) (agent_holds top_drawer) ) )
          (once (adjacent ?l ?l) )
        )
      )
    )
    (preference throwGolfballToBin
      (exists (?o - ball)
        (then
          (once (and (on agent ?o) ) )
          (once (agent_holds ?o) )
          (hold-while (and (agent_holds ?o) (agent_holds ?o) (agent_holds ?o) ) (not (not (touch ?o ?o) ) ) (adjacent ?o ?o) )
        )
      )
    )
  )
)
(:terminal
  (not
    (and
      (>= (total-time) (count-increasing-measure throwGolfballToBin:alarm_clock) )
    )
  )
)
(:scoring
  (+ (* 15 8 (count-once throwAttempt:beachball:green:yellow_cube_block) (count-once-per-objects throwAttempt:beachball) 2 (count throwGolfballToBin:beachball) )
    (- 8 )
  )
)
)



(define (game game-id-604) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?l3 - game_object)
      (and
        (game-conserved
          (in_motion ?l3)
        )
      )
    )
    (and
      (not
        (forall (?h - game_object)
          (exists (?d - doggie_bed)
            (or
              (game-conserved
                (in_motion ?d)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - dodgeball)
      (and
        (preference dodgeballFromDeskToTarget
          (then
            (once (agent_holds ?h) )
            (once (not (and (and (in_motion ?h) (same_type ?h ?h) (not (and (in_motion ?h) (and (and (not (same_object ?h ?h) ) (not (< 1 (building_size ?h)) ) ) (in_motion ?h) ) (in_motion front) (rug_color_under room_center ?h) ) ) ) (adjacent_side ?h ?h ?h) ) ) )
            (hold-while (in_motion ?h) (and (and (not (in ?h ?h) ) (not (in_motion rug) ) ) (agent_holds ?h) ) (object_orientation ?h desk) (in ?h ?h) )
          )
        )
      )
    )
    (preference blockInTowerKnockedByDodgeball
      (exists (?s - hexagonal_bin)
        (then
          (once (not (in ?s ?s) ) )
          (once (< (distance ?s ?s) 9) )
          (hold (agent_holds ?s) )
        )
      )
    )
    (preference woodenBlockMovedFromRugToDesk
      (exists (?h - chair ?g - teddy_bear)
        (then
          (once (and (agent_holds ?g) (and (agent_holds rug) (in_motion south_west_corner) ) (not (agent_holds pink) ) (not (in ?g ?g) ) ) )
          (once (agent_holds ?g) )
          (once (and (not (adjacent brown ?g) ) (not (and (and (agent_holds pink) (object_orientation ?g ?g) ) (in_motion ?g) (not (agent_holds ?g) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (>= (total-score) (+ (count woodenBlockMovedFromRugToDesk:dodgeball) 8 )
      )
      (or
        (>= (total-time) 10 )
      )
    )
  )
)
(:scoring
  (+ 1 (count dodgeballFromDeskToTarget:beachball) )
)
)



(define (game game-id-605) (:domain medium-objects-room-v1)
(:setup
  (exists (?p1 ?h - (either pencil bridge_block))
    (game-optional
      (and
        (on ?p1 ?h)
        (on ?p1 ?p1)
        (touch ?h ?p1)
      )
    )
  )
)
(:constraints
  (and
    (preference throwToBinFromOppositeWall
      (exists (?b7 - dodgeball)
        (then
          (hold (on ?b7 ?b7) )
          (once (on ?b7 ?b7) )
          (once (agent_holds ?b7) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 3 (count throwToBinFromOppositeWall:golfball:white) )
    (* 7 (external-forall-maximize (* (count-once-per-objects throwToBinFromOppositeWall:beachball) (external-forall-minimize (* (count throwToBinFromOppositeWall:pink) 10 )
          )
        )
      )
    )
  )
)
(:scoring
  (* (* (count-total throwToBinFromOppositeWall:red) (* 5 1 )
    )
    (* 50 (count throwToBinFromOppositeWall:basketball) )
  )
)
)



(define (game game-id-606) (:domain few-objects-room-v1)
(:setup
  (forall (?l3 - shelf)
    (game-conserved
      (and
        (not
          (and
            (adjacent ?l3 bed)
            (between bridge_block ?l3 ?l3)
          )
        )
        (on ?l3 ?l3)
        (same_color ?l3 ?l3)
      )
    )
  )
)
(:constraints
  (and
    (forall (?o - drawer)
      (and
        (preference throwFromDoorToBin
          (exists (?c6 - ball)
            (then
              (hold (agent_holds ?c6) )
            )
          )
        )
        (preference smallItemsInPlace
          (then
            (once (touch ?o brown) )
            (hold (not (adjacent ?o pink_dodgeball) ) )
            (hold (same_type ?o ?o) )
          )
        )
      )
    )
    (preference bookOnDeskShelf
      (exists (?d - game_object ?x - game_object)
        (then
          (hold (same_color ?x ?x) )
          (hold (agent_holds pink_dodgeball) )
          (once (and (agent_holds ?x) (and (agent_holds ?x) (adjacent ?x ?x) (agent_holds ?x) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (- (count smallItemsInPlace:beachball) )
    (count bookOnDeskShelf:red)
  )
)
(:scoring
  (* (count-once-per-objects smallItemsInPlace:golfball) (* 5 10 )
  )
)
)



(define (game game-id-607) (:domain medium-objects-room-v1)
(:setup
  (forall (?w2 - hexagonal_bin ?b - red_pyramid_block)
    (and
      (and
        (forall (?c2 - shelf)
          (forall (?o - hexagonal_bin)
            (game-conserved
              (agent_holds ?o)
            )
          )
        )
        (game-conserved
          (adjacent room_center ?b)
        )
        (exists (?w - dodgeball)
          (game-conserved
            (above ?b ?b)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectWithMatchingColor
      (exists (?c - doggie_bed ?c3 - dodgeball)
        (then
          (once (in_motion ?c3) )
          (hold (exists (?l - ball) (in_motion desk) ) )
          (hold (in_motion ?c3) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once objectWithMatchingColor:green) (count-same-positions objectWithMatchingColor:yellow:golfball:basketball) )
)
(:scoring
  (count objectWithMatchingColor)
)
)



(define (game game-id-608) (:domain few-objects-room-v1)
(:setup
  (forall (?s - bridge_block)
    (game-conserved
      (exists (?t - dodgeball)
        (rug_color_under pink ?s)
      )
    )
  )
)
(:constraints
  (and
    (forall (?b3 - pyramid_block)
      (and
        (preference watchOnShelf
          (exists (?h - block)
            (then
              (hold (and (on ?h ?b3) (in_motion rug) ) )
              (once (exists (?h - (either doggie_bed)) (and (on back left) (< 9 1) ) ) )
              (hold (and (in_motion ?h) (agent_holds ?h) (not (adjacent ?b3 ?b3) ) ) )
            )
          )
        )
      )
    )
    (forall (?c6 - shelf)
      (and
        (preference nonBlockPlacedInBuilding
          (exists (?d - dodgeball)
            (then
              (once (in ?d bed) )
              (once (not (faces ?d ?c6) ) )
              (hold (and (on ?d ?c6) (touch ?c6 ?d) ) )
            )
          )
        )
        (preference throwBallToDoggieBed
          (exists (?b - cube_block)
            (at-end
              (and
                (and
                  (in_motion bed)
                  (between ?c6 ?c6 desk)
                )
                (on east_sliding_door ?b)
                (in_motion ?b)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* 15 5 )
    (total-score)
  )
)
(:scoring
  (* 10 (count nonBlockPlacedInBuilding:orange) )
)
)



(define (game game-id-609) (:domain few-objects-room-v1)
(:setup
  (exists (?r - dodgeball)
    (game-optional
      (agent_holds ?r)
    )
  )
)
(:constraints
  (and
    (preference pillowThrownToDoggieBed
      (exists (?h - cube_block)
        (at-end
          (agent_holds ?h)
        )
      )
    )
    (preference throwAttemptFromBehindBlock
      (exists (?c1 - ball)
        (then
          (once (not (not (not (in_motion desk) ) ) ) )
          (once (and (not (and (= 1 1) (in_motion ?c1) (not (and (in ?c1 ?c1) (not (in_motion ?c1) ) ) ) (toggled_on bed) ) ) (in_motion ?c1) ) )
          (once (in_motion agent) )
        )
      )
    )
    (forall (?c - game_object ?r - hexagonal_bin ?p1 - (either yellow cellphone book))
      (and
        (preference objectMovedRoomSide
          (exists (?h - book)
            (then
              (hold (agent_holds desk) )
              (hold (< 9 (distance ?h ?p1)) )
              (hold (in ?p1 ?p1) )
              (once (and (and (not (on green_golfball ?p1) ) (agent_holds ?p1) ) (in ?h front) ) )
            )
          )
        )
      )
    )
    (forall (?c4 - ball)
      (and
        (preference throwToDrawerOrBin
          (exists (?p1 - dodgeball)
            (at-end
              (touch ?p1 ?c4)
            )
          )
        )
      )
    )
    (preference blindsOpened
      (exists (?c - (either book))
        (at-end
          (agent_holds ?c)
        )
      )
    )
  )
)
(:terminal
  (>= (+ (count-once-per-objects throwAttemptFromBehindBlock:basketball) (external-forall-maximize (* (count-once objectMovedRoomSide) (count-once-per-objects blindsOpened:yellow) )
      )
    )
    (* (count objectMovedRoomSide:hexagonal_bin) (count throwAttemptFromBehindBlock:beachball) )
  )
)
(:scoring
  (count-increasing-measure objectMovedRoomSide:side_table:beachball)
)
)



(define (game game-id-610) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (forall (?h - dodgeball)
        (and
          (and
            (and
              (or
                (game-conserved
                  (not
                    (exists (?h - game_object)
                      (and
                        (= 1 (distance agent agent) 1)
                        (and
                          (in ?h ?h)
                          (on ?h ?h)
                        )
                      )
                    )
                  )
                )
                (and
                  (exists (?r - building)
                    (and
                      (game-optional
                        (not
                          (in ?h ?r)
                        )
                      )
                      (game-conserved
                        (rug_color_under desk ?h)
                      )
                      (exists (?t2 - triangular_ramp ?b - hexagonal_bin)
                        (and
                          (exists (?c2 - block)
                            (forall (?o - (either dodgeball bed) ?w - wall)
                              (exists (?d - curved_wooden_ramp)
                                (forall (?d - hexagonal_bin ?ob - hexagonal_bin)
                                  (and
                                    (game-optional
                                      (not
                                        (in_motion agent)
                                      )
                                    )
                                    (forall (?c - hexagonal_bin)
                                      (exists (?b3 - hexagonal_bin)
                                        (exists (?l1 - chair ?c - chair)
                                          (game-conserved
                                            (and
                                              (< (distance ?c ?r) (distance ?b3 pink))
                                              (same_color ?r ?r)
                                              (not
                                                (and
                                                  (adjacent front ?b3)
                                                  (in_motion ?c)
                                                  (not
                                                    (agent_holds ?b)
                                                  )
                                                  (or
                                                    (not
                                                      (and
                                                        (game_start )
                                                        (not
                                                          (not
                                                            (and
                                                              (equal_z_position door ?c)
                                                              (in agent ?ob)
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                    (and
                                                      (on ?b ?b)
                                                      (adjacent_side ?b3 ?b3 ?b3 ?c)
                                                    )
                                                    (agent_holds ?r)
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                    (and
                                      (game-conserved
                                        (and
                                          (not
                                            (agent_holds ?h)
                                          )
                                          (agent_holds bed)
                                        )
                                      )
                                      (and
                                        (and
                                          (forall (?h - dodgeball ?w - green_triangular_ramp)
                                            (and
                                              (exists (?d ?d - (either alarm_clock bridge_block))
                                                (game-conserved
                                                  (and
                                                    (and
                                                      (< 2 (distance ?b agent))
                                                    )
                                                    (not
                                                      (in_motion rug)
                                                    )
                                                  )
                                                )
                                              )
                                              (and
                                                (exists (?l4 - hexagonal_bin ?d ?d ?l - flat_block)
                                                  (and
                                                    (game-optional
                                                      (exists (?f - hexagonal_bin)
                                                        (on ?d desk)
                                                      )
                                                    )
                                                    (game-optional
                                                      (in_motion ?b)
                                                    )
                                                  )
                                                )
                                                (game-conserved
                                                  (equal_z_position ?d ?r)
                                                )
                                                (exists (?p3 - ball)
                                                  (game-optional
                                                    (on ?p3 agent)
                                                  )
                                                )
                                              )
                                            )
                                          )
                                          (and
                                            (game-conserved
                                              (in_motion ?d)
                                            )
                                          )
                                          (game-conserved
                                            (object_orientation ?r ?h)
                                          )
                                        )
                                      )
                                      (and
                                        (exists (?h - pillow ?h - hexagonal_bin)
                                          (game-optional
                                            (agent_holds ?c2)
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
              (forall (?bl - hexagonal_bin ?h - cube_block)
                (game-optional
                  (in_motion ?h)
                )
              )
              (exists (?h - hexagonal_bin)
                (game-conserved
                  (agent_holds desk)
                )
              )
              (game-conserved
                (= (distance ?h bed) (distance ?h ?h))
              )
              (game-conserved
                (in_motion ?h)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference itemInClosedDrawerAtEnd
      (exists (?b5 - hexagonal_bin ?p3 - doggie_bed)
        (at-end
          (and
            (same_object ?p3 ?p3)
            (object_orientation agent ?p3)
            (not
              (in_motion ?p3)
            )
          )
        )
      )
    )
    (preference ballThrownToBed
      (exists (?l - hexagonal_bin)
        (then
          (once (game_over ) )
          (once (in_motion ?l) )
          (once (not (and (and (< 2 (distance floor ?l)) (and (not (adjacent ?l ?l) ) (and (agent_holds ?l) (not (in_motion ?l) ) ) (agent_holds desk) ) ) (agent_holds bed) (adjacent ?l ?l) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (external-forall-maximize (count ballThrownToBed:beachball:pink) ) 5 )
)
(:scoring
  (external-forall-maximize
    (count ballThrownToBed:blue_dodgeball)
  )
)
)



(define (game game-id-611) (:domain medium-objects-room-v1)
(:setup
  (exists (?c - pyramid_block)
    (exists (?h - hexagonal_bin)
      (and
        (forall (?b - dodgeball)
          (and
            (forall (?c - blue_pyramid_block ?s - dodgeball ?b9 - ball)
              (exists (?p - cube_block)
                (game-conserved
                  (exists (?o2 - shelf ?t - chair ?l1 - hexagonal_bin)
                    (agent_holds ?l1)
                  )
                )
              )
            )
            (exists (?h - chair)
              (game-optional
                (on ?h ?b)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference cubeBlockThrownToTopShelf
      (exists (?b8 - triangular_ramp ?d - ball)
        (then
          (hold (in_motion ?d) )
          (hold (in_motion ?d) )
          (once (on ?d ?d) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (* (count cubeBlockThrownToTopShelf:red) (+ (count cubeBlockThrownToTopShelf:basketball:hexagonal_bin) 7 )
        (+ (+ (* (* 10 10 )
              (* 10 1 )
            )
            (count cubeBlockThrownToTopShelf:green)
          )
          (* (* (+ 4 (- 5 )
              )
              (count cubeBlockThrownToTopShelf:red:red:beachball)
              5
            )
            4
          )
        )
      )
      10
    )
    (total-score)
  )
)
(:scoring
  (* 20 (count-once cubeBlockThrownToTopShelf:alarm_clock:doggie_bed) (count-once-per-objects cubeBlockThrownToTopShelf:blue_dodgeball:rug) (count-overlapping cubeBlockThrownToTopShelf:dodgeball) (* 30 (+ (* 2 5 )
        (* (count-overlapping cubeBlockThrownToTopShelf:basketball:orange) (count-once-per-objects cubeBlockThrownToTopShelf:side_table:orange) )
      )
      (* (* (count cubeBlockThrownToTopShelf:golfball) (external-forall-maximize (count cubeBlockThrownToTopShelf:beachball) ) )
        5
      )
    )
  )
)
)



(define (game game-id-612) (:domain few-objects-room-v1)
(:setup
  (forall (?c1 - (either beachball yellow pen) ?h - dodgeball)
    (game-conserved
      (and
        (on ?h ?h)
        (in ?h ?h)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?r ?l1 ?t ?b6 - (either golfball book))
        (at-end
          (touch ?b6 ?b6)
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (external-forall-maximize (count ballThrownToBin:orange) ) )
)
(:scoring
  (count ballThrownToBin:brown)
)
)



(define (game game-id-613) (:domain many-objects-room-v1)
(:setup
  (forall (?o1 - hexagonal_bin ?s - block)
    (game-optional
      (not
        (and
          (broken ?s)
          (agent_holds ?s)
          (and
            (agent_holds ?s)
            (on desk ?s)
          )
          (in_motion floor)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballBouncesOnceToDoggieBed
      (exists (?o5 ?c - cube_block)
        (then
          (hold (on ?c ?o5) )
          (once (and (adjacent_side floor ?c ?o5) (not (not (equal_z_position ?o5 ?c) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count dodgeballBouncesOnceToDoggieBed:pink:side_table:red) (count dodgeballBouncesOnceToDoggieBed:brown) )
    (= (external-forall-maximize (count dodgeballBouncesOnceToDoggieBed:blue_dodgeball:dodgeball) ) (- (count dodgeballBouncesOnceToDoggieBed) )
    )
    (and
      (> (count dodgeballBouncesOnceToDoggieBed:dodgeball) 2 )
      (>= 3 (count dodgeballBouncesOnceToDoggieBed:blue_dodgeball) )
      (or
        (>= 15 (count dodgeballBouncesOnceToDoggieBed:yellow:golfball) )
      )
    )
  )
)
(:scoring
  (count dodgeballBouncesOnceToDoggieBed:dodgeball)
)
)



(define (game game-id-614) (:domain medium-objects-room-v1)
(:setup
  (exists (?t - building ?r - doggie_bed)
    (and
      (forall (?c - (either doggie_bed tall_cylindrical_block))
        (forall (?b - hexagonal_bin ?p1 - red_dodgeball ?b4 - block ?r1 - shelf ?h - game_object)
          (game-conserved
            (not
              (agent_holds desk)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference bigObjectThrownToBed
      (exists (?h - chair ?o - ball ?c2 - game_object ?h - ball ?r1 - ball)
        (at-end
          (and
            (and
              (not
                (and
                  (agent_holds ?r1)
                  (agent_holds blue)
                  (and
                    (between ?r1 rug ?r1)
                    (and
                      (in_motion ?r1)
                      (adjacent blinds ?r1)
                    )
                    (and
                      (and
                        (exists (?h - block)
                          (and
                            (toggled_on ?h)
                            (not
                              (on ?h ?h)
                            )
                          )
                        )
                        (agent_holds ?r1)
                      )
                      (same_color ?r1 ?r1)
                    )
                    (agent_holds ?r1)
                  )
                )
              )
              (touch ?r1 ?r1)
            )
            (in_motion ?r1)
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (<= (* (count-once-per-objects bigObjectThrownToBed:blue) (count bigObjectThrownToBed:yellow) )
      50
    )
    (> 2 (count bigObjectThrownToBed:dodgeball:dodgeball) )
  )
)
(:scoring
  (- 6 )
)
)



(define (game game-id-615) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?b6 - hexagonal_bin)
      (exists (?t ?l2 ?b1 - ball ?o - hexagonal_bin)
        (exists (?b - ball)
          (and
            (game-conserved
              (not
                (and
                  (agent_holds ?b6)
                  (and
                    (and
                      (and
                        (on agent floor)
                        (object_orientation room_center ?o)
                      )
                      (exists (?g - hexagonal_bin)
                        (not
                          (on ?b6 ?b6)
                        )
                      )
                    )
                    (not
                      (in_motion ?o)
                    )
                  )
                  (not
                    (in ?b6 ?b)
                  )
                )
              )
            )
            (game-optional
              (adjacent_side ?o ?o agent)
            )
            (game-optional
              (and
                (and
                  (is_setup_object ?b)
                  (not
                    (and
                      (equal_z_position ?o desk)
                      (and
                        (is_setup_object ?o)
                        (and
                          (in_motion ?o)
                          (in_motion ?b)
                        )
                      )
                    )
                  )
                )
                (toggled_on ?b6)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownMissesEverything
      (exists (?c ?b6 - hexagonal_bin ?h - block ?b2 - doggie_bed)
        (then
          (once (agent_holds ?b2) )
          (once (and (agent_holds desk) (adjacent_side back ?b2 ?b2 ?b2) (in ?b2 ?b2) ) )
          (once (agent_holds room_center) )
        )
      )
    )
    (preference blockPlacedInBuilding
      (exists (?b10 - (either cd blue_cube_block teddy_bear dodgeball))
        (at-end
          (agent_holds ?b10)
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 300 (total-score) )
    (or
      (or
        (<= (* (* 10 (count-once-per-objects blockPlacedInBuilding:pink_dodgeball:dodgeball) )
            (* 3 (external-forall-minimize (* (count ballThrownMissesEverything:yellow:cylindrical_block) 5 )
              )
            )
          )
          (count ballThrownMissesEverything:yellow:blue_dodgeball:green)
        )
        (< (* (* (count-once blockPlacedInBuilding:yellow) (count-once blockPlacedInBuilding) )
            (count ballThrownMissesEverything:dodgeball)
          )
          (count-overlapping blockPlacedInBuilding:basketball:purple:pink)
        )
        (or
          (>= 2 6 )
          (>= 18 (* (+ 3 (count-once-per-objects blockPlacedInBuilding:golfball) (* (count-once-per-objects blockPlacedInBuilding:yellow) (+ (count-measure blockPlacedInBuilding:dodgeball) (count-once-per-objects ballThrownMissesEverything:dodgeball) )
                )
                (+ 2 6 180 (count blockPlacedInBuilding:pink_dodgeball) 2 (+ 15 (+ (count blockPlacedInBuilding:green) (count blockPlacedInBuilding:pink_dodgeball:blue_dodgeball) )
                  )
                )
              )
              (+ 7 (count ballThrownMissesEverything:basketball:book) )
            )
          )
        )
      )
      (<= (+ (+ (count ballThrownMissesEverything:beachball) 3 3 )
          (* (count ballThrownMissesEverything:pink) (+ 2 (external-forall-maximize (* (count-overlapping blockPlacedInBuilding:yellow_cube_block) 2 )
              )
              (* 6 (count ballThrownMissesEverything:pink_dodgeball) )
              (count ballThrownMissesEverything:basketball:beachball)
            )
          )
        )
        (total-time)
      )
    )
    (> (total-time) (count blockPlacedInBuilding:cylindrical_block) )
  )
)
(:scoring
  (+ (count blockPlacedInBuilding:beachball:pink) (+ (* (count-once blockPlacedInBuilding:golfball) 1 )
      10
    )
  )
)
)



(define (game game-id-616) (:domain many-objects-room-v1)
(:setup
  (forall (?b - doggie_bed)
    (forall (?w2 ?d - triangular_ramp)
      (game-optional
        (in_motion ?d)
      )
    )
  )
)
(:constraints
  (and
    (preference thrownBallHitsBlock
      (exists (?h - hexagonal_bin)
        (at-end
          (in_motion ?h)
        )
      )
    )
    (preference pyramidBlockAtopTowerAtEnd
      (exists (?c1 - triangular_ramp ?o4 - block ?t - triangular_ramp)
        (then
          (once (in_motion ?t) )
          (once (< 4 1) )
          (once (and (on ?t ?t) (not (adjacent ?t ?t) ) (< 2 1) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) 1 )
)
(:scoring
  (count-once-per-objects pyramidBlockAtopTowerAtEnd:pink)
)
)



(define (game game-id-617) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - dodgeball)
      (game-conserved
        (in_motion door)
      )
    )
  )
)
(:constraints
  (and
    (forall (?t1 - hexagonal_bin)
      (and
        (preference throwBallFromOtherBallToBin
          (exists (?h - dodgeball)
            (then
              (once (in_motion ?t1) )
              (once (not (not (on ?t1 ?h) ) ) )
              (hold-while (not (and (on ?h ?t1) (in ?t1 ?h) (in_motion agent) ) ) (agent_holds agent) )
            )
          )
        )
      )
    )
    (forall (?c2 ?c - (either alarm_clock chair) ?f - teddy_bear ?b - teddy_bear)
      (and
        (preference tanObjectMovedToRoomCenter
          (exists (?c - doggie_bed)
            (at-end
              (in_motion desk)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (external-forall-maximize (+ (* 20 (count-shortest tanObjectMovedToRoomCenter:blue_cube_block) )
        50
      )
    )
    (* (* 1 5 )
    )
  )
)
(:scoring
  (> 3 (external-forall-maximize (* (count-same-positions tanObjectMovedToRoomCenter:hexagonal_bin) (* 5 5 )
        (external-forall-maximize
          (* 1 (count-once-per-objects tanObjectMovedToRoomCenter:yellow) (+ 3 (* (count tanObjectMovedToRoomCenter) (* (/ (* (* 3 (* 15 )
                      )
                      (count-overlapping tanObjectMovedToRoomCenter:doggie_bed)
                      (count-total throwBallFromOtherBallToBin:yellow_cube_block)
                      (count tanObjectMovedToRoomCenter:blue_dodgeball)
                      (* (count-once throwBallFromOtherBallToBin:golfball) (count-once-per-objects tanObjectMovedToRoomCenter:basketball:golfball) )
                      (* (* (count tanObjectMovedToRoomCenter:blue_cube_block) 2 )
                        (* (* 1 (count-once-per-objects throwBallFromOtherBallToBin:dodgeball) )
                          5
                        )
                      )
                      (count throwBallFromOtherBallToBin:pink_dodgeball)
                      (count tanObjectMovedToRoomCenter:blue_pyramid_block)
                      (count throwBallFromOtherBallToBin:dodgeball)
                    )
                    3
                  )
                  (* 3 2 )
                )
              )
            )
            5
            3
          )
        )
        4
      )
    )
  )
)
)



(define (game game-id-618) (:domain medium-objects-room-v1)
(:setup
  (forall (?h - triangular_ramp)
    (exists (?b - chair ?l2 - curved_wooden_ramp)
      (and
        (exists (?d - dodgeball ?g - chair ?r - pillow ?w - hexagonal_bin)
          (game-optional
            (and
              (and
                (not
                  (in_motion desk)
                )
                (in_motion ?l2)
                (> (building_size ?w) (distance_side room_center front ?l2 ?h))
                (and
                  (between ?l2 ?w desk)
                  (= (distance sideways ?h) 1)
                )
              )
              (toggled_on ?h)
              (adjacent_side ?h agent ?h ?l2)
            )
          )
        )
        (and
          (game-conserved
            (adjacent floor agent)
          )
        )
        (game-conserved
          (agent_holds ?l2)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockPickedUp
      (exists (?p - hexagonal_bin ?h - dodgeball)
        (then
          (hold (touch ?h desk) )
          (once (not (touch desk ?h) ) )
          (once (not (not (in ?h ?h) ) ) )
        )
      )
    )
    (preference ballKnocksTeddy
      (exists (?d - triangular_ramp ?o1 - block)
        (then
          (hold-while (and (adjacent agent ?o1) (agent_holds ?o1) (agent_holds ?o1) (in_motion ?o1) ) (and (not (on ?o1 ?o1) ) (toggled_on ?o1) ) )
          (once (not (not (and (agent_holds ?o1) (agent_holds ?o1) ) ) ) )
          (hold (agent_holds ?o1) )
        )
      )
    )
  )
)
(:terminal
  (not
    (not
      (not
        (not
          (> (total-time) (total-score) )
        )
      )
    )
  )
)
(:scoring
  (count-once blockPickedUp:cube_block)
)
)



(define (game game-id-619) (:domain few-objects-room-v1)
(:setup
  (exists (?b7 ?w1 - color)
    (exists (?h - block)
      (exists (?tb - hexagonal_bin)
        (game-optional
          (and
            (and
              (adjacent ?h bed)
              (in ?w1 agent)
              (and
                (on ?w1 ?w1)
                (not
                  (not
                    (and
                      (in ?h ?w1)
                      (not
                        (agent_holds ?b7)
                      )
                      (or
                        (on ?w1 ?tb)
                        (in_motion ?b7)
                      )
                    )
                  )
                )
                (in ?h ?h)
              )
              (adjacent ?b7 ?w1)
              (agent_holds ?h)
              (and
                (on ?w1 ?h)
                (agent_holds ?w1)
              )
              (not
                (or
                  (on ?b7 ?h)
                  (forall (?w1 - desktop)
                    (and
                      (agent_holds ?tb)
                      (not
                        (and
                          (= 1 (distance_side ?tb ?h ?w1))
                          (adjacent ?w1 room_center)
                        )
                      )
                      (and
                        (and
                          (on ?h ?w1)
                          (agent_holds ?b7)
                        )
                        (adjacent ?b7 ?b7)
                      )
                      (in ?h ?b7)
                    )
                  )
                )
              )
            )
            (touch room_center ?h)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference otherObjectsOnDeskShelf
      (exists (?h - hexagonal_bin)
        (then
          (once (not (in_motion ?h) ) )
          (once (not (not (exists (?l - chair) (in_motion ?h) ) ) ) )
          (once (in_motion desk) )
        )
      )
    )
    (forall (?h - ball)
      (and
        (preference throwAttemptFromBehindBlock
          (exists (?d - block ?h - hexagonal_bin)
            (then
              (hold (in_motion ?h) )
              (once (game_start ) )
              (once (in_motion rug) )
            )
          )
        )
        (preference throwMovesBeachballWithoutKnockingTeddy
          (exists (?x - hexagonal_bin ?c1 - cube_block ?b8 - (either laptop red) ?bl - building)
            (then
              (once (and (and (adjacent desk ?bl) (not (and (agent_holds ?bl) (adjacent ?h agent) ) ) (in ?h ?h) ) (in_motion ?bl) (adjacent ?bl ?bl) ) )
              (hold (in_motion ?h) )
              (once (< (distance agent ?h) 1) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (> 10 (* (external-forall-maximize (count-once-per-objects throwAttemptFromBehindBlock:red) ) (count-longest otherObjectsOnDeskShelf:top_drawer) 5 3 (count-unique-positions throwAttemptFromBehindBlock:red) (* 20 1 )
      )
    )
    (and
      (>= (total-score) (- (* (+ (count-unique-positions otherObjectsOnDeskShelf:blue_dodgeball) (* (count otherObjectsOnDeskShelf:purple) (count-once-per-external-objects throwMovesBeachballWithoutKnockingTeddy:pink_dodgeball) )
            )
            (* (* 3 18 )
              (+ 5 (* 10 3 )
              )
              (count-once-per-objects otherObjectsOnDeskShelf:basketball)
              4
              (* (+ 15 (* 2 (count throwMovesBeachballWithoutKnockingTeddy:dodgeball:dodgeball) )
                )
                (count-once-per-objects throwMovesBeachballWithoutKnockingTeddy:blue_dodgeball:bed)
              )
              30
            )
          )
        )
      )
    )
    (> 7 (* (count throwAttemptFromBehindBlock:dodgeball:blue_pyramid_block) 20 )
    )
  )
)
(:scoring
  (count-once-per-objects throwMovesBeachballWithoutKnockingTeddy:dodgeball)
)
)



(define (game game-id-620) (:domain medium-objects-room-v1)
(:setup
  (exists (?t - (either laptop hexagonal_bin cube_block))
    (exists (?c1 - tall_cylindrical_block ?b - dodgeball ?o1 - building)
      (game-conserved
        (touch ?o1 ?t)
      )
    )
  )
)
(:constraints
  (and
    (preference ballToBinFromBed
      (exists (?b9 - wall ?c - doggie_bed)
        (then
          (once (not (not (agent_holds ?c) ) ) )
          (once (not (in_motion ?c) ) )
          (hold-while (on ?c agent) (not (and (agent_holds ?c) (and (and (touch ?c ?c) (on ?c ?c) ) (agent_holds ?c) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 4 (count-once-per-objects ballToBinFromBed:red) )
)
(:scoring
  (count-once-per-objects ballToBinFromBed:pink)
)
)



(define (game game-id-621) (:domain many-objects-room-v1)
(:setup
  (forall (?d - tan_cube_block ?b - curved_wooden_ramp)
    (or
      (game-conserved
        (< (distance_side ?b ?b ?b) (distance ?b ?b))
      )
      (game-conserved
        (on ?b ?b)
      )
      (and
        (game-conserved
          (exists (?l - hexagonal_bin)
            (exists (?o - color)
              (and
                (or
                  (and
                    (above pink_dodgeball ?b)
                    (not
                      (exists (?o - dodgeball)
                        (agent_holds ?o)
                      )
                    )
                  )
                  (agent_holds ?b)
                )
                (on ?b ?l)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwOverRamp
      (exists (?w - pyramid_block)
        (then
          (hold-while (on ?w ?w) (agent_holds agent) )
          (hold (is_setup_object ?w) )
          (once (not (< 1 (distance ?w ?w)) ) )
        )
      )
    )
  )
)
(:terminal
  (> (count-once throwOverRamp:dodgeball) 5 )
)
(:scoring
  (count throwOverRamp:hexagonal_bin:brown)
)
)



(define (game game-id-622) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?b9 - block)
      (exists (?b7 - cube_block ?d - hexagonal_bin)
        (exists (?o ?d ?o3 ?c ?b ?c2 - sliding_door ?l - cube_block ?d - hexagonal_bin)
          (exists (?b2 - dodgeball)
            (game-conserved
              (agent_holds ?b2)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b1 - chair)
      (and
        (preference throwToRampToBin
          (then
            (hold (in_motion ?b1) )
            (once (is_setup_object ?b1) )
            (hold (on ?b1 ?b1) )
          )
        )
      )
    )
    (preference smallItemsInPlace
      (exists (?o2 - building)
        (then
          (once (exists (?b - teddy_bear ?s - hexagonal_bin) (in_motion ?o2) ) )
          (hold (and (and (and (in_motion ?o2) (same_type door ?o2) ) (and (not (in_motion ?o2) ) (agent_holds ?o2) (and (agent_holds ?o2) (not (game_start ) ) ) ) ) (agent_holds ?o2) ) )
          (hold (on block bed) )
        )
      )
    )
    (preference throwAttemptKnocksBlock
      (exists (?b10 - cylindrical_block)
        (at-end
          (open rug)
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (* (count-same-positions throwAttemptKnocksBlock:pink:blue_dodgeball) (count throwToRampToBin:orange) )
      (count smallItemsInPlace:cube_block:hexagonal_bin:alarm_clock)
    )
  )
)
(:scoring
  (count-once throwToRampToBin:dodgeball)
)
)



(define (game game-id-623) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?t - chair)
      (game-conserved
        (or
          (agent_holds agent)
          (< (distance bed pink_dodgeball) 1)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference agentLeavesDogbedOrNoMoreBalls
      (exists (?o1 - building ?c - ball)
        (then
          (once (agent_holds ?c) )
          (hold (not (on ?c ?c) ) )
          (once (on ?c room_center) )
        )
      )
    )
  )
)
(:terminal
  (>= (count agentLeavesDogbedOrNoMoreBalls:golfball) 4 )
)
(:scoring
  (* (external-forall-maximize (* (count-once-per-objects agentLeavesDogbedOrNoMoreBalls:basketball) 6 )
    )
    (count-once-per-objects agentLeavesDogbedOrNoMoreBalls:red)
  )
)
)



(define (game game-id-624) (:domain medium-objects-room-v1)
(:setup
  (forall (?r - hexagonal_bin ?r - (either cylindrical_block wall yellow cylindrical_block))
    (exists (?c - hexagonal_bin ?b - ball)
      (and
        (and
          (forall (?b - chair)
            (forall (?h - cube_block ?s - desk_shelf ?r - (either desktop key_chain))
              (and
                (and
                  (exists (?o1 - ball)
                    (exists (?b7 - game_object ?b9 - ball)
                      (and
                        (game-conserved
                          (not
                            (agent_holds ?b9)
                          )
                        )
                        (game-conserved
                          (in_motion sideways)
                        )
                        (game-conserved
                          (agent_holds rug)
                        )
                      )
                    )
                  )
                  (and
                    (game-conserved
                      (is_setup_object bed)
                    )
                  )
                  (game-optional
                    (forall (?r - hexagonal_bin)
                      (is_setup_object pink)
                    )
                  )
                  (exists (?d - hexagonal_bin)
                    (forall (?t1 - curved_wooden_ramp ?h ?c3 - dodgeball)
                      (forall (?d - blue_cube_block)
                        (and
                          (exists (?b - hexagonal_bin)
                            (and
                              (or
                                (game-conserved
                                  (agent_holds ?c3)
                                )
                                (exists (?t - game_object)
                                  (game-conserved
                                    (<= (distance ?r ?d) (distance ?t ?c3))
                                  )
                                )
                              )
                            )
                          )
                          (exists (?b - hexagonal_bin ?h - hexagonal_bin ?d - game_object)
                            (and
                              (game-optional
                                (not
                                  (and
                                    (not
                                      (not
                                        (game_start )
                                      )
                                    )
                                    (not
                                      (not
                                        (and
                                          (not
                                            (in_motion ?b)
                                          )
                                          (and
                                            (and
                                              (and
                                                (agent_holds ?c3)
                                                (rug_color_under side_table ?d)
                                              )
                                              (agent_holds ?c3)
                                            )
                                            (touch ?d ?h)
                                          )
                                        )
                                      )
                                    )
                                    (on ?b ?h)
                                  )
                                )
                              )
                              (game-conserved
                                (and
                                  (and
                                    (in ?r ?b)
                                    (not
                                      (not
                                        (not
                                          (not
                                            (not
                                              (and
                                                (and
                                                  (and
                                                    (in_motion ?b)
                                                    (and
                                                      (= 1 (distance ?c3 ?d))
                                                      (agent_holds ?b)
                                                    )
                                                    (opposite ?r ?c3)
                                                  )
                                                  (agent_holds ?d)
                                                )
                                                (exists (?c ?b10 - (either red cube_block) ?c2 - hexagonal_bin)
                                                  (not
                                                    (not
                                                      (above ?r ?b)
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                  (agent_holds desk)
                                )
                              )
                            )
                          )
                          (not
                            (game-conserved
                              (and
                                (on ?d agent)
                                (agent_holds ?b)
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
                (forall (?p1 - sliding_door ?c3 - cylindrical_block)
                  (and
                    (forall (?r - hexagonal_bin ?h - cylindrical_block)
                      (game-conserved
                        (and
                          (in_motion ?b)
                          (in ?r desktop)
                          (and
                            (not
                              (and
                                (on top_shelf bed)
                                (same_color ?r ?b)
                              )
                            )
                            (on ?r ?b)
                            (exists (?b10 - hexagonal_bin)
                              (in_motion ?r)
                            )
                            (on floor ?b)
                          )
                        )
                      )
                    )
                    (exists (?r - hexagonal_bin)
                      (and
                        (game-optional
                          (and
                            (adjacent ?r ?c3)
                            (in_motion bed)
                          )
                        )
                      )
                    )
                  )
                )
                (exists (?b3 - ball)
                  (and
                    (and
                      (and
                        (game-conserved
                          (in_motion ?r)
                        )
                      )
                    )
                    (game-optional
                      (in_motion ?b3)
                    )
                  )
                )
              )
            )
          )
        )
        (forall (?d - (either yellow laptop pyramid_block pyramid_block triangle_block cube_block golfball))
          (game-conserved
            (and
              (broken ?r)
              (in_motion ?r)
            )
          )
        )
        (game-optional
          (in ?r ?r)
        )
        (game-conserved
          (exists (?d1 - hexagonal_bin)
            (on floor ?d1)
          )
        )
        (forall (?l2 - game_object)
          (and
            (exists (?h - (either bed pyramid_block) ?h - hexagonal_bin ?b7 - dodgeball ?o3 - teddy_bear)
              (exists (?o - ball)
                (and
                  (game-conserved
                    (< 3 (distance ?o floor))
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?g - hexagonal_bin ?o - hexagonal_bin)
      (and
        (preference throwFromDoorToBin
          (exists (?c2 - (either rug cd) ?g - game_object)
            (then
              (hold (and (and (in door ?g) (agent_holds ?o) ) (in_motion ?g) ) )
              (hold (in ?o ?o) )
              (once (and (and (agent_holds ?g) (in ?g ?g) ) (not (and (and (and (not (and (not (in_motion ?o) ) (agent_holds ?g) ) ) (in ?g ?g) ) (and (in ?g ?o) (agent_holds ?o) ) ) (and (in_motion ?o) (agent_crouches ) ) ) ) ) )
              (once (and (not (or (and (between ?g ?g ?g) (not (not (on ?o ?o) ) ) ) (not (in bridge_block ?g) ) ) ) (adjacent ?o ?g) (on ?o ?o) ) )
              (hold (opposite ?g ?g) )
            )
          )
        )
      )
    )
    (forall (?r - (either book curved_wooden_ramp))
      (and
        (preference ballThrownToBin
          (exists (?d - hexagonal_bin)
            (then
              (hold (and (or (not (not (touch ?d ?d) ) ) (in_motion ?d) (and (in_motion ?d) (and (in agent ?r) (and (not (agent_holds pink) ) (agent_holds desk) ) ) ) ) (not (not (and (agent_holds ?r) (not (not (in_motion ?r) ) ) (rug_color_under ?d ?r) ) ) ) (adjacent agent agent) (on ?d ?r) ) )
              (once (on upright ?d) )
              (once (and (and (adjacent_side pink_dodgeball ?d room_center) (and (and (in_motion ?r) (on ?r ?r) ) (between ?r ?d agent) (not (agent_holds ?d) ) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* (* (- 2 )
          (* 1 (* (* (count ballThrownToBin:hexagonal_bin) (count-once throwFromDoorToBin:doggie_bed) )
              (+ (* (count-total ballThrownToBin:red_pyramid_block) (+ (- (* (count-unique-positions throwFromDoorToBin:hexagonal_bin) (count-once-per-objects ballThrownToBin:beachball) )
                    )
                    (count throwFromDoorToBin:hexagonal_bin)
                  )
                )
                (count throwFromDoorToBin:basketball)
                (count-once-per-objects throwFromDoorToBin:dodgeball)
              )
            )
            (count throwFromDoorToBin:dodgeball:blue_dodgeball)
            2
          )
          (+ (count-once-per-external-objects throwFromDoorToBin:hexagonal_bin:purple) (count throwFromDoorToBin:blue) )
        )
        (external-forall-maximize
          (count-once ballThrownToBin:purple)
        )
      )
      10
    )
    (>= (total-score) (total-time) )
    (< 3 (total-time) )
  )
)
(:scoring
  (* (* (count ballThrownToBin:yellow) 3 )
    5
  )
)
)



(define (game game-id-625) (:domain many-objects-room-v1)
(:setup
  (forall (?b - hexagonal_bin ?t1 - (either tall_cylindrical_block main_light_switch) ?x - curved_wooden_ramp)
    (game-conserved
      (agent_holds ?x)
    )
  )
)
(:constraints
  (and
    (forall (?w2 - (either book dodgeball yellow) ?b - hexagonal_bin)
      (and
        (preference basketMadeFromRug
          (exists (?b - (either pillow cube_block) ?t - hexagonal_bin ?h - hexagonal_bin ?w - golfball)
            (then
              (once (not (in ?w blue) ) )
              (hold (on upright ?w) )
              (hold (not (same_type ?w room_center) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (- (count-once-per-objects basketMadeFromRug:beachball) (+ (- 2 (* 3 3 (+ 7 )
            2
          )
        )
        5
        10
        5
        3
        0
      )
    )
    (* 10 )
  )
)
(:scoring
  (count-once-per-external-objects basketMadeFromRug:block:dodgeball)
)
)



(define (game game-id-626) (:domain many-objects-room-v1)
(:setup
  (exists (?t1 - (either bridge_block ball yellow))
    (exists (?h - ball)
      (exists (?t - hexagonal_bin)
        (exists (?h ?w1 - block)
          (game-conserved
            (in_motion ?t1)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectsHidden
      (exists (?b - curved_wooden_ramp)
        (then
          (once (not (above rug ?b) ) )
          (once (in_motion ?b) )
          (once (not (agent_holds ?b) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count objectsHidden:golfball) 2 )
    (>= 5 50 )
  )
)
(:scoring
  (count-once-per-external-objects objectsHidden:basketball)
)
)



(define (game game-id-627) (:domain medium-objects-room-v1)
(:setup
  (exists (?c1 - ball)
    (and
      (and
        (exists (?c5 - hexagonal_bin)
          (game-optional
            (on bed ?c1)
          )
        )
      )
      (forall (?h - game_object ?d - curved_wooden_ramp)
        (game-optional
          (= 10)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference nonBlockPlacedInBuilding
      (exists (?h - ball)
        (then
          (once (on ?h ?h) )
          (once (adjacent ?h floor) )
          (once (agent_holds ?h) )
        )
      )
    )
    (forall (?l3 - cube_block)
      (and
        (preference dodgeballThrownToBinFromDesk
          (exists (?d - ball)
            (then
              (once (and (in_motion ?l3) (in_motion ?d) (not (and (and (touch ?l3 ?d) (on ?d ?l3) (equal_z_position ?l3 ?l3) ) (not (and (agent_holds ?l3) (and (equal_x_position bed ?l3) (agent_holds ?l3) ) (in_motion ?d) (agent_holds desk) (agent_holds ?d) (not (not (object_orientation ?d ?l3) ) ) (object_orientation ?l3 ?d) (not (and (not (agent_holds ?d) ) (or (not (< 4 (distance ?d ?l3)) ) (not (< (distance ?l3 ?l3) (distance floor ?d)) ) ) (< (distance ?l3 bed) 8) ) ) (and (in ?d ?l3) (in_motion ?l3) ) (is_setup_object ?d) (on ?d ?l3) (same_object ?l3 ?d) ) ) (object_orientation ?d ?d) (and (on ?d ?l3) (not (in ?l3 ?l3) ) ) ) ) ) )
              (once (> 8 (distance ?d ?l3)) )
              (once (not (and (in_motion ?d) (and (agent_holds desk) (opposite ?d ?l3) ) ) ) )
            )
          )
        )
      )
    )
    (preference golfballInBinFromPillow
      (exists (?p - pyramid_block)
        (then
          (once (in_motion front) )
          (once (> (distance ?p ?p) 7) )
          (once (in_motion ?p) )
        )
      )
    )
    (forall (?w - shelf)
      (and
        (preference blockInTowerAtEnd
          (exists (?d ?h ?c ?b ?b9 - hexagonal_bin ?b6 - shelf)
            (then
              (hold (in_motion ?b6) )
              (hold-while (between ?b6 ?w ?b6) (on ?w ?b6) )
              (hold (not (and (agent_holds desk) (equal_z_position ?w ?b6) ) ) )
            )
          )
        )
      )
    )
    (preference blindsOpened
      (exists (?o - hexagonal_bin)
        (then
          (once (in_motion ?o) )
          (hold (agent_holds ?o) )
          (hold (on ?o ?o) )
        )
      )
    )
  )
)
(:terminal
  (> (count-measure nonBlockPlacedInBuilding:dodgeball) (count blindsOpened:beachball) )
)
(:scoring
  (* (count-once-per-objects nonBlockPlacedInBuilding:top_drawer:pink:dodgeball) 15 )
)
)



(define (game game-id-628) (:domain few-objects-room-v1)
(:setup
  (exists (?o - cylindrical_block)
    (game-conserved
      (in ?o pink)
    )
  )
)
(:constraints
  (and
    (preference throwToRampToBin
      (exists (?x - curved_wooden_ramp)
        (then
          (once (and (agent_holds ?x) (and (not (in ?x ?x) ) (same_color ?x ?x) ) ) )
          (hold (and (agent_holds ?x) (and (agent_holds ?x) (and (and (same_color ?x ?x) (< (distance agent ?x) 6) (agent_holds ?x) ) (and (agent_holds ?x) (not (and (touch agent ?x) (in_motion desk) (not (not (not (in ?x door) ) ) ) ) ) (object_orientation agent ?x) ) ) ) ) )
          (hold (and (and (in_motion ?x) (and (faces ?x ?x) (between ?x ?x ?x) ) (agent_holds ?x) ) (not (agent_holds ?x) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (and
      (>= (- (* (+ 1 (count throwToRampToBin:yellow) )
            (* 3 )
            3
            (count-once-per-objects throwToRampToBin:green)
          )
          2
        )
        (* 5 6 )
      )
      (>= 9 (count-once-per-objects throwToRampToBin:cylindrical_block:basketball) )
    )
    (or
      (or
        (>= (- (count-unique-positions throwToRampToBin:dodgeball:dodgeball:basketball) )
          (count throwToRampToBin:dodgeball)
        )
        (>= (count throwToRampToBin:yellow:golfball) (* (* (* (external-forall-maximize (count-once-per-objects throwToRampToBin:purple) ) (count-once-per-objects throwToRampToBin:doggie_bed) )
              (= 3 (+ (* 20 (count-once throwToRampToBin:dodgeball) )
                  (<= (count throwToRampToBin:hexagonal_bin) (= (count-once-per-external-objects throwToRampToBin:dodgeball) 5 (* (count-once-per-objects throwToRampToBin:dodgeball:beachball) (<= 7 1 )
                      )
                    )
                  )
                  (= (count throwToRampToBin:pink) 5 )
                )
              )
              5
              (* (+ (count-once-per-objects throwToRampToBin:dodgeball:basketball) 2 )
                6
                (count throwToRampToBin:golfball:pyramid_block)
              )
              (* (+ 7 15 )
                (count throwToRampToBin:yellow_cube_block)
                (count-once-per-objects throwToRampToBin:golfball:doggie_bed:doggie_bed)
                2
              )
            )
            1
          )
        )
        (>= (= 5 (count-once throwToRampToBin:beachball:hexagonal_bin) )
          (total-score)
        )
      )
      (>= 2 (total-score) )
    )
  )
)
(:scoring
  (>= (count throwToRampToBin:golfball) 3 )
)
)



(define (game game-id-629) (:domain few-objects-room-v1)
(:setup
  (exists (?b8 ?d - triangular_ramp ?d - block)
    (game-conserved
      (not
        (and
          (on ?d ?d)
          (game_over )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwInBin
      (exists (?t - dodgeball)
        (at-end
          (and
            (agent_holds ?t)
            (in_motion ?t)
          )
        )
      )
    )
    (forall (?o4 - hexagonal_bin ?h - (either yellow_cube_block key_chain wall game_object tall_cylindrical_block))
      (and
        (preference objectMoved
          (exists (?o ?d - cube_block)
            (then
              (once (and (is_setup_object ?d) (not (on ?d ?o) ) ) )
              (hold (agent_holds ?o) )
              (hold (in_motion ?d) )
              (once (agent_holds ?d) )
              (once (agent_holds rug) )
            )
          )
        )
        (preference ballThrownThroughRampAndBlocksToBin
          (exists (?ob - (either dodgeball mug dodgeball))
            (then
              (once (adjacent agent bed) )
              (hold (or (adjacent ?ob ?h) ) )
              (once (and (and (agent_holds ?h) (> 2 (distance bed room_center)) (in desk ?ob) ) (rug_color_under bed ?ob) (= (distance_side ?ob agent agent) 1) ) )
              (once (not (agent_holds ?h) ) )
            )
          )
        )
      )
    )
    (preference throwFromEdgeOfRug
      (exists (?d - cube_block)
        (then
          (once (not (and (on ?d ?d) (and (touch ?d agent) (on ?d ?d) ) ) ) )
          (once (not (same_object room_center bed) ) )
          (once (agent_holds agent) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (total-time) )
)
(:scoring
  (count throwFromEdgeOfRug:red:dodgeball)
)
)



(define (game game-id-630) (:domain few-objects-room-v1)
(:setup
  (exists (?t - sliding_door)
    (game-optional
      (in_motion ?t)
    )
  )
)
(:constraints
  (and
    (forall (?b ?l1 ?l1 ?h ?d2 ?l2 - chair)
      (and
        (preference throwAttempt
          (exists (?b - dodgeball)
            (then
              (once (on ?d2 ?l1) )
              (once (and (rug_color_under ?l2 ?d2) (forall (?b - cube_block) (not (> (distance ?l1 ?l2) (distance ?l1 ?b)) ) ) ) )
              (once (not (agent_holds ?d2) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (external-forall-maximize (count throwAttempt:blue_dodgeball) ) (count throwAttempt:purple) )
)
(:scoring
  (count throwAttempt:top_drawer)
)
)



(define (game game-id-631) (:domain many-objects-room-v1)
(:setup
  (exists (?c5 - hexagonal_bin)
    (or
      (and
        (forall (?b - (either cube_block triangular_ramp))
          (and
            (game-optional
              (agent_holds ?b)
            )
            (exists (?b ?ob - dodgeball)
              (and
                (and
                  (game-conserved
                    (and
                      (or
                        (between ?ob ?c5 ?c5)
                        (adjacent_side bed ?ob ?ob ?c5)
                      )
                      (and
                        (agent_holds ?b)
                        (on rug ?ob)
                        (not
                          (faces ?c5 ?c5)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
      (and
        (exists (?x - ball)
          (forall (?h - dodgeball)
            (or
              (exists (?o1 - hexagonal_bin)
                (game-optional
                  (faces ?x ?x)
                )
              )
              (game-conserved
                (agent_holds ?c5)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballOnBedAtEnd
      (exists (?d ?b ?b10 ?h ?d ?b2 - cube_block ?g - red_dodgeball)
        (then
          (hold (exists (?d - ball) (above front agent) ) )
          (hold (equal_x_position ?g ?g) )
          (once (touch ?g room_center) )
        )
      )
    )
  )
)
(:terminal
  (> (* 5 7 )
    3
  )
)
(:scoring
  (count ballOnBedAtEnd:pink_dodgeball:tan)
)
)



(define (game game-id-632) (:domain few-objects-room-v1)
(:setup
  (exists (?c - hexagonal_bin)
    (game-conserved
      (not
        (in ?c ?c)
      )
    )
  )
)
(:constraints
  (and
    (preference blockToBinFromRug
      (exists (?g ?h - blue_cube_block)
        (then
          (hold (and (not (agent_holds ?h) ) (in_motion ?g) ) )
          (once (not (not (not (in_motion bed) ) ) ) )
          (once (adjacent ?g ?h) )
          (hold (not (adjacent_side ?g floor pink_dodgeball) ) )
          (once (agent_holds agent) )
        )
      )
    )
    (forall (?x - building)
      (and
        (preference ballKnocksBlockFromRug
          (exists (?b - wall)
            (then
              (once (in_motion ?x) )
              (once (agent_holds front) )
              (once (not (in ?x rug) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (count ballKnocksBlockFromRug:red) 1 )
)
(:scoring
  (+ (count blockToBinFromRug:green) (count-once-per-objects ballKnocksBlockFromRug:basketball) )
)
)



(define (game game-id-633) (:domain many-objects-room-v1)
(:setup
  (or
    (game-conserved
      (< 6 1)
    )
  )
)
(:constraints
  (and
    (preference dodgeballBouncesOnceToDoggieBed
      (exists (?h - ball ?c - golfball)
        (then
          (once (not (agent_holds ?c) ) )
          (hold (agent_holds ?c) )
          (once (not (touch ?c pink_dodgeball) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (external-forall-maximize (count dodgeballBouncesOnceToDoggieBed:green) ) )
)
(:scoring
  (count-shortest dodgeballBouncesOnceToDoggieBed:pink:golfball)
)
)



(define (game game-id-634) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (and
      (in sideways agent)
      (exists (?b1 - (either lamp wall beachball pen beachball key_chain hexagonal_bin) ?bl - hexagonal_bin)
        (>= (distance ?bl ?bl) (distance ?bl ?bl))
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?r2 - (either cd basketball cellphone cube_block) ?b2 - dodgeball)
        (then
          (once (agent_holds agent) )
          (hold (in top_shelf ?b2) )
          (once (agent_holds desk) )
        )
      )
    )
  )
)
(:terminal
  (or
    (= (count ballThrownToBin:purple) (+ 50 5 (count-once-per-objects ballThrownToBin:dodgeball) )
    )
  )
)
(:scoring
  (+ (+ (+ (+ 10 (count ballThrownToBin:doggie_bed) )
        (count ballThrownToBin:golfball)
        (count ballThrownToBin:basketball)
      )
      (* (count-once-per-objects ballThrownToBin:basketball) (+ 3 5 )
      )
    )
    10
    (count-measure ballThrownToBin:blue_pyramid_block)
  )
)
)



(define (game game-id-635) (:domain many-objects-room-v1)
(:setup
  (forall (?c - building ?c2 - chair)
    (and
      (and
        (and
          (and
            (exists (?c1 - curved_wooden_ramp ?b4 - shelf ?d - (either laptop dodgeball book cd basketball cellphone dodgeball) ?b5 - shelf)
              (and
                (game-optional
                  (not
                    (adjacent ?b5 rug)
                  )
                )
              )
            )
            (exists (?b3 - ball ?p2 - ball)
              (forall (?h - hexagonal_bin)
                (and
                  (and
                    (game-conserved
                      (in_motion top_shelf)
                    )
                  )
                  (game-optional
                    (< 1 4)
                  )
                )
              )
            )
          )
          (game-optional
            (and
              (and
                (in_motion ?c2)
                (not
                  (< (distance ?c2 ?c2) (distance ?c2 ?c2))
                )
              )
              (on ?c2 ?c2)
            )
          )
        )
      )
      (game-conserved
        (on ?c2 ?c2)
      )
    )
  )
)
(:constraints
  (and
    (preference cubeBlockThrowAttempt
      (exists (?c - shelf)
        (then
          (once (and (= 9 1) (and (and (in_motion ?c) (and (in_motion ?c) (on ?c ?c) ) ) (agent_holds ?c) ) (agent_holds ?c) ) )
          (once (in_motion ?c) )
          (once (and (touch ?c ?c) (in_motion ?c) ) )
        )
      )
    )
    (preference throwObjectToBin
      (exists (?tb - dodgeball)
        (then
          (once (in ?tb ?tb) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) 2 )
)
(:scoring
  (count-once-per-objects throwObjectToBin:basketball)
)
)



(define (game game-id-636) (:domain few-objects-room-v1)
(:setup
  (exists (?r - wall)
    (game-conserved
      (in floor ?r)
    )
  )
)
(:constraints
  (and
    (preference throwAttemptFromBehindBlock
      (exists (?c3 - teddy_bear ?r2 - block)
        (then
          (hold (in ?r2 ?r2) )
          (hold (not (not (opposite ?r2 ?r2) ) ) )
          (once (not (game_start ) ) )
        )
      )
    )
    (preference throwAttemptFromDoor
      (exists (?h - (either dodgeball dodgeball))
        (then
          (once (agent_holds ?h) )
          (once (and (agent_holds ?h) (same_color ?h ?h) ) )
          (hold (and (or (in_motion agent) (on ?h ?h) ) (and (and (agent_holds ?h) (same_object ?h ?h) ) (touch blue ?h) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (* (* 8 (+ (* 10 (count-overlapping throwAttemptFromDoor:yellow) (* (count-once-per-objects throwAttemptFromBehindBlock:side_table) (count throwAttemptFromDoor:dodgeball) )
            (count-once-per-objects throwAttemptFromBehindBlock:beachball:yellow:dodgeball)
            (count-once throwAttemptFromDoor:dodgeball)
            5
            (external-forall-maximize
              (external-forall-maximize
                (count throwAttemptFromDoor:book)
              )
            )
            (count-once-per-objects throwAttemptFromDoor:yellow)
            2
          )
          (* 1 3 )
        )
      )
      (* 2 (count-once throwAttemptFromDoor:red) )
    )
  )
)
(:scoring
  (count-once-per-objects throwAttemptFromBehindBlock:red:basketball)
)
)



(define (game game-id-637) (:domain many-objects-room-v1)
(:setup
  (exists (?b - building)
    (and
      (and
        (or
          (and
            (forall (?h - ball ?b - cube_block)
              (exists (?l - game_object)
                (game-conserved
                  (and
                    (and
                      (and
                        (not
                          (forall (?t2 - ball)
                            (agent_holds ?l)
                          )
                        )
                        (agent_holds agent)
                      )
                      (agent_holds pink)
                    )
                    (between ?l ?l ?b)
                  )
                )
              )
            )
            (forall (?t2 - pillow ?b - dodgeball ?d - wall)
              (exists (?h - cube_block ?d - (either bridge_block dodgeball alarm_clock))
                (exists (?h - ball ?o - shelf ?d ?p3 ?o2 ?c ?db - doggie_bed)
                  (forall (?b3 ?h ?tb ?c6 - (either block basketball triangular_ramp hexagonal_bin))
                    (game-optional
                      (< 2 (distance_side ?o2 ?c ?h))
                    )
                  )
                )
              )
            )
          )
          (and
            (game-optional
              (agent_holds ?b)
            )
            (forall (?d - block)
              (forall (?c - hexagonal_bin)
                (and
                  (and
                    (forall (?l1 - hexagonal_bin)
                      (game-optional
                        (same_object ?d back)
                      )
                    )
                    (game-optional
                      (and
                        (equal_x_position ?c ?c)
                        (agent_holds ?c)
                      )
                    )
                  )
                )
              )
            )
            (game-optional
              (on ?b ?b)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToDrawerOrBin
      (exists (?s - cube_block)
        (then
          (once (or (not (adjacent ?s ?s) ) (and (exists (?o - dodgeball ?h - (either cellphone dodgeball) ?c1 - block ?w - hexagonal_bin) (not (touch ?s ?s) ) ) (agent_holds ?s) (not (not (touch bed ?s) ) ) ) ) )
          (once (agent_holds ?s) )
          (once (in_motion ?s) )
        )
      )
    )
  )
)
(:terminal
  (>= 15 (total-time) )
)
(:scoring
  (external-forall-maximize
    (* 5 (* 2 -30 )
    )
  )
)
)



(define (game game-id-638) (:domain many-objects-room-v1)
(:setup
  (exists (?h - flat_block)
    (forall (?s - cube_block)
      (game-conserved
        (and
          (and
            (agent_holds ?h)
            (not
              (not
                (agent_holds ?h)
              )
            )
          )
          (agent_holds ?s)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectsHidden
      (exists (?h - wall)
        (then
          (hold-while (not (agent_holds ?h) ) (on room_center ?h) )
          (once (agent_holds desk) )
          (once (in_motion ?h) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= 10 2 )
    (not
      (>= (* (count objectsHidden:side_table) (count objectsHidden:yellow) )
        (* 18 (- (count objectsHidden:doggie_bed:basketball) )
          10
          1
          (count objectsHidden:alarm_clock:doggie_bed)
          (count-overlapping objectsHidden)
          (count-once-per-objects objectsHidden:pink_dodgeball:dodgeball)
        )
      )
    )
  )
)
(:scoring
  (count-once objectsHidden:green)
)
)



(define (game game-id-639) (:domain many-objects-room-v1)
(:setup
  (forall (?l1 - hexagonal_bin)
    (and
      (and
        (exists (?o - game_object ?h - cube_block ?l2 - triangular_ramp)
          (game-optional
            (and
              (in_motion ?l2)
              (and
                (< 1 (distance ?l2 ?l1))
                (in_motion ?l2)
              )
            )
          )
        )
        (exists (?bl - hexagonal_bin)
          (exists (?b1 - curved_wooden_ramp ?c6 ?o5 - hexagonal_bin ?g - game_object)
            (and
              (game-optional
                (and
                  (not
                    (and
                      (< (distance ?bl ?bl) 1)
                      (adjacent door ?bl)
                    )
                  )
                  (in ?g ?g)
                )
              )
            )
          )
        )
        (and
          (exists (?c - block)
            (and
              (exists (?d - curved_wooden_ramp)
                (game-optional
                  (in_motion ?l1)
                )
              )
              (and
                (game-conserved
                  (agent_holds ?l1)
                )
              )
            )
          )
          (game-conserved
            (in ?l1 rug)
          )
          (game-optional
            (touch door ?l1)
          )
        )
      )
      (forall (?h - pyramid_block ?l - golfball)
        (game-conserved
          (in_motion ?l)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blueObjectMovedToRoomCenter
      (exists (?d - hexagonal_bin)
        (then
          (once (and (on ?d ?d) (and (agent_holds ?d) (agent_holds ?d) ) ) )
          (once (in ?d agent) )
          (hold (and (in_motion desk) (agent_holds brown) (< 1 (distance_side ?d ?d ?d ?d)) ) )
        )
      )
    )
    (preference golfballLandsInBinThroughRamp
      (exists (?h - flat_block)
        (then
          (once (not (not (on ?h ?h) ) ) )
          (once (open ?h) )
          (once (and (not (and (touch ?h ?h) (in_motion ?h) (in_motion ?h) (in_motion ?h) ) ) (agent_holds ?h) ) )
        )
      )
    )
    (preference greenObjectMovedToRoomCenter
      (exists (?l4 - color)
        (at-end
          (same_object bed ?l4)
        )
      )
    )
  )
)
(:terminal
  (not
    (<= 3 (count blueObjectMovedToRoomCenter:dodgeball) )
  )
)
(:scoring
  (count-total golfballLandsInBinThroughRamp:pink)
)
)



(define (game game-id-640) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?o1 - ball)
      (game-optional
        (agent_holds ?o1)
      )
    )
    (exists (?c - block ?p - building)
      (game-optional
        (not
          (agent_holds front)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownThroughRampToBin
      (exists (?b1 - doggie_bed)
        (at-end
          (< (distance ?b1 ?b1) (distance ?b1 desk))
        )
      )
    )
    (preference throwGolfballToBin
      (exists (?o1 - (either hexagonal_bin pyramid_block tall_cylindrical_block))
        (then
          (once (and (and (and (in ?o1 ?o1) (> 1 5) (and (in_motion ?o1) ) ) (not (on ?o1 ?o1) ) ) (not (and (exists (?l3 - book) (in_motion ?o1) ) (in_motion bed) (adjacent ?o1 ?o1) ) ) ) )
          (hold (and (agent_holds ?o1) ) )
          (once (and (in agent ?o1) (same_object ?o1 ?o1) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 180 (count ballThrownThroughRampToBin:golfball) )
)
(:scoring
  (count-once-per-objects ballThrownThroughRampToBin:pyramid_block)
)
)



(define (game game-id-641) (:domain many-objects-room-v1)
(:setup
  (exists (?b - teddy_bear)
    (game-optional
      (not
        (= 1 1)
      )
    )
  )
)
(:constraints
  (and
    (forall (?p2 - (either cube_block laptop))
      (and
        (preference pinkObjectMovedToRoomCenter
          (exists (?c - bridge_block)
            (then
              (once (in_motion ?c) )
              (hold-while (is_setup_object ?c) (and (and (agent_holds ?p2) (in_motion ?c) (on ?p2 ?c) ) ) (not (open ?p2) ) (not (between ?c ?p2 ?p2) ) )
              (once (< (distance ?c bed) (distance_side ?p2 ?c agent)) )
              (hold (and (is_setup_object desk) (adjacent ?p2 ?c) (and (> (distance ?c door) 5) (not (in ?p2 ?c) ) ) ) )
            )
          )
        )
        (preference thrownBallReachesEnd
          (exists (?s - (either key_chain alarm_clock pyramid_block))
            (at-end
              (not
                (game_over )
              )
            )
          )
        )
      )
    )
    (preference ballRolledOnRampToRug
      (exists (?b3 - cube_block)
        (at-end
          (in ?b3 ?b3)
        )
      )
    )
  )
)
(:terminal
  (> (count-once-per-objects thrownBallReachesEnd:green:pink) 5 )
)
(:scoring
  (* (* (+ (* (count-once-per-objects ballRolledOnRampToRug) (* (* 1 (count thrownBallReachesEnd:beachball:dodgeball) )
            18
            (+ 2 5 )
          )
        )
        (count-once-per-objects ballRolledOnRampToRug:dodgeball)
      )
      (count ballRolledOnRampToRug:blue_cube_block)
      (external-forall-maximize
        (count-shortest pinkObjectMovedToRoomCenter:green)
      )
      5
    )
    3
  )
)
)



(define (game game-id-642) (:domain few-objects-room-v1)
(:setup
  (exists (?b - (either cellphone hexagonal_bin cube_block))
    (exists (?o3 - (either blue_cube_block blue_cube_block golfball))
      (exists (?c - (either pyramid_block hexagonal_bin bridge_block cd cylindrical_block golfball laptop))
        (and
          (forall (?p3 ?d ?c2 ?o3 ?h ?p - hexagonal_bin ?l4 ?o - wall ?b - green_triangular_ramp)
            (and
              (game-optional
                (faces ?o3 ?b)
              )
              (and
                (and
                  (exists (?c4 - hexagonal_bin ?d - hexagonal_bin)
                    (game-conserved
                      (adjacent ?c ?b)
                    )
                  )
                )
              )
            )
          )
          (exists (?o4 - dodgeball)
            (and
              (exists (?c5 - cube_block ?o3 - dodgeball ?h - cube_block)
                (forall (?r1 - (either book tall_cylindrical_block))
                  (game-optional
                    (and
                      (<= (distance ?b ?o4) 1)
                      (agent_holds ?r1)
                    )
                  )
                )
              )
              (exists (?l1 - golfball)
                (and
                  (game-conserved
                    (in_motion ?b)
                  )
                )
              )
            )
          )
          (forall (?d - building ?r2 - bridge_block)
            (game-optional
              (> (distance ?c room_center) 0.5)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (and (above ?d ?d) (and (on ?d agent) (exists (?c - (either golfball book) ?c5 - doggie_bed) (in ?d ?c5) ) ) (not (agent_holds ?d) ) ) )
          (once (same_type ?d desk) )
          (hold (agent_holds ?d) )
        )
      )
    )
  )
)
(:terminal
  (>= 10 8 )
)
(:scoring
  (+ 15 (* (* (count throwAttempt:hexagonal_bin) (+ 3 (* 3 (count-once-per-objects throwAttempt:dodgeball:cube_block) )
        )
      )
      1
    )
  )
)
)



(define (game game-id-643) (:domain few-objects-room-v1)
(:setup
  (forall (?b ?s ?b7 - (either basketball laptop floor))
    (forall (?t1 - doggie_bed ?b9 ?h - teddy_bear)
      (exists (?o - (either cellphone chair))
        (game-optional
          (and
            (in_motion agent)
            (touch ?b7 ?b7)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownOntoTarget
      (exists (?d - teddy_bear)
        (then
          (once (agent_holds ?d) )
          (once (agent_holds door) )
          (once (in_motion ?d) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (or
        (or
          (>= 5 2 )
          (and
            (>= (count-once ballThrownOntoTarget:book) (* (count ballThrownOntoTarget:basketball) (+ (external-forall-maximize (count-once ballThrownOntoTarget:dodgeball) ) 5 5 )
              )
            )
            (> (count ballThrownOntoTarget) (total-time) )
            (>= (total-score) (count ballThrownOntoTarget:cube_block) )
          )
        )
        (<= 5 1 )
        (>= 6 10 )
      )
      (> 16 10 )
    )
    (> (total-time) (* 9 (external-forall-maximize (count ballThrownOntoTarget:hexagonal_bin:dodgeball) ) )
    )
  )
)
(:scoring
  (count ballThrownOntoTarget:blue_cube_block:dodgeball)
)
)



(define (game game-id-644) (:domain many-objects-room-v1)
(:setup
  (exists (?o - teddy_bear)
    (exists (?d - hexagonal_bin ?r - hexagonal_bin ?x - pyramid_block)
      (and
        (exists (?r1 - dodgeball)
          (game-conserved
            (on ?x ?x)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballThrownToBin
      (exists (?c ?b ?h ?c6 - doggie_bed)
        (then
          (hold (adjacent ?b room_center) )
          (once (agent_holds ?c6) )
          (once (not (in_motion ?h) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (total-score) 3 )
  )
)
(:scoring
  (count dodgeballThrownToBin:green)
)
)



(define (game game-id-645) (:domain many-objects-room-v1)
(:setup
  (exists (?c - cube_block)
    (exists (?h ?h - chair ?b1 - hexagonal_bin)
      (and
        (exists (?b9 - ball)
          (and
            (forall (?t - hexagonal_bin)
              (not
                (exists (?b - (either blue_cube_block hexagonal_bin tall_cylindrical_block) ?b ?b7 - dodgeball)
                  (not
                    (and
                      (forall (?b - ball ?o - pillow ?r1 - building)
                        (game-optional
                          (above ?t ?b1)
                        )
                      )
                      (forall (?h - dodgeball)
                        (exists (?r - game_object)
                          (forall (?bl - doggie_bed ?d - block ?h - doggie_bed ?g - green_triangular_ramp)
                            (game-conserved
                              (in ?r ?b7)
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
        (forall (?b - building)
          (forall (?b1 - cube_block)
            (and
              (game-conserved
                (and
                  (in_motion ?b1)
                  (in_motion ?c)
                  (in ?b ?c)
                  (touch south_west_corner ?b)
                )
              )
              (and
                (and
                  (and
                    (game-conserved
                      (adjacent desk door)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?w2 - dodgeball ?c - (either rug cube_block beachball))
      (and
        (preference smallObjectThrownToBed
          (exists (?r - hexagonal_bin)
            (then
              (hold (>= (distance ?r ?c) 10) )
              (hold (and (and (in_motion ?r) (and (on ?r ?r) (and (agent_holds ?c) (and (not (agent_holds ?r) ) (agent_holds rug) ) (and (touch ?r ?r) (and (and (in_motion ?r) (and (and (not (agent_holds ?r) ) (in_motion ?c) ) (not (and (and (and (and (or (not (on ?c ?r) ) (agent_holds ?c) ) (exists (?o2 - hexagonal_bin) (not (adjacent ?r ?o2) ) ) ) (in door pink_dodgeball) ) ) (in_motion ?c) ) ) ) ) (adjacent ?r ?c) (in rug ?r) (not (on ?c ?c) ) ) ) (not (not (agent_holds ?c) ) ) (not (and (or (and (and (in_motion ?c) (or (and (agent_holds ?c) (same_type ?r ?r) ) (not (equal_x_position agent bed) ) (toggled_on ?c) ) ) (and (and (not (in_motion ?r) ) (in_motion back) ) (exists (?b - triangular_ramp ?b10 - hexagonal_bin) (> 6 1) ) ) (in_motion ?c) ) (in_motion ?c) ) (and (in_motion agent) (and (not (agent_holds ?r) ) (in_motion ?r) (in ?r agent) (in_motion ?r) ) ) ) ) (not (object_orientation bed ?c) ) (on ?c ?r) (is_setup_object ?c) ) (not (agent_holds ?c) ) ) (not (in ?r ?c) ) (agent_holds drawer) ) (not (and (in_motion bed) (in ?r agent) (not (not (in_motion ?c) ) ) ) ) ) )
              (once (not (not (and (not (agent_holds ?r) ) (not (and (and (in_motion ?r) (in_motion ?c) ) (and (toggled_on ?c) (in_motion pillow) ) (in_motion ?c) (agent_holds ?c) ) ) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (not
      (not
        (= (* (count-once smallObjectThrownToBed:blue) 1 )
          4
        )
      )
    )
    (or
      (or
        (> (* 8 60 (count smallObjectThrownToBed:pink) (count-once-per-objects smallObjectThrownToBed:basketball) 10 5 0 )
          (* (+ 50 (+ (* (count-increasing-measure smallObjectThrownToBed:dodgeball) (* (* 2 (count-increasing-measure smallObjectThrownToBed:pink) )
                    (* (count-once smallObjectThrownToBed) 2 )
                  )
                )
                2
              )
              (* 3 15 )
              2
              (count-once-per-external-objects smallObjectThrownToBed:beachball:triangle_block)
            )
            (count-once-per-objects smallObjectThrownToBed:hexagonal_bin)
          )
        )
        (> 30 15 )
        (and
          (and
            (>= 1 0 )
            (> (count smallObjectThrownToBed:purple) (count-once-per-objects smallObjectThrownToBed:red) )
          )
          (> (total-score) (/ (>= (* (- (* 6 (count-longest smallObjectThrownToBed:dodgeball) 2 )
                  )
                  3
                  (+ (* 2 (count-longest smallObjectThrownToBed:dodgeball:beachball) )
                    (count-once smallObjectThrownToBed:blue_dodgeball)
                    (count-shortest smallObjectThrownToBed:dodgeball)
                    (count-once-per-objects smallObjectThrownToBed:blue_dodgeball)
                  )
                )
                1
              )
              (+ (count-once-per-external-objects smallObjectThrownToBed:wall:red) (external-forall-minimize (count smallObjectThrownToBed:basketball) ) )
            )
          )
          (>= 2 (total-score) )
        )
        (> (count smallObjectThrownToBed:doggie_bed) (total-time) )
      )
      (> 10 (- (count smallObjectThrownToBed:hexagonal_bin) )
      )
    )
  )
)
(:scoring
  (count-once smallObjectThrownToBed:purple:red:dodgeball)
)
)



(define (game game-id-646) (:domain few-objects-room-v1)
(:setup
  (forall (?h - ball ?d2 - (either cube_block laptop) ?r1 - (either bed cube_block))
    (game-conserved
      (and
        (not
          (exists (?db - hexagonal_bin ?c - wall)
            (not
              (not
                (in_motion ?c)
              )
            )
          )
        )
        (on agent ?r1)
      )
    )
  )
)
(:constraints
  (and
    (preference ballDroppedInBin
      (exists (?p - doggie_bed)
        (then
          (hold (not (is_setup_object ?p) ) )
          (once (agent_holds ?p) )
          (once (> (distance ?p rug) (distance ?p ?p)) )
          (once (and (not (not (game_over ) ) ) (exists (?c - chair) (in_motion ?c) ) (on ?p ?p) (in_motion ?p) ) )
          (hold (equal_x_position ?p ?p) )
        )
      )
    )
    (forall (?d - chair)
      (and
        (preference dodgeballThrownToBin
          (exists (?c - ball ?l4 - block ?d - red_dodgeball ?p - dodgeball)
            (then
              (once (opposite bed ?d) )
              (once (in ?p agent) )
              (once (adjacent_side rug bed ?d ?d) )
            )
          )
        )
        (preference pyramidBlockAtopTowerAtEnd
          (exists (?d - doggie_bed ?b1 - doggie_bed)
            (then
              (once (not (not (adjacent ?b1 ?b1) ) ) )
              (once (agent_holds ?d) )
              (once (in_motion ?b1) )
            )
          )
        )
        (preference throwTeddyOntoPillow
          (exists (?h - hexagonal_bin)
            (at-end
              (in ?d ?d)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (total-score) )
)
(:scoring
  (* 300 (count-once-per-objects throwTeddyOntoPillow:golfball) )
)
)



(define (game game-id-647) (:domain few-objects-room-v1)
(:setup
  (and
    (game-conserved
      (agent_holds pink_dodgeball)
    )
  )
)
(:constraints
  (and
    (preference failedThrowToBin
      (exists (?b - game_object ?d - pyramid_block)
        (then
          (hold (agent_holds ?d) )
          (hold (in_motion ?d) )
          (once (in_motion ?d) )
          (once (not (in_motion ?d) ) )
          (hold (and (in top_shelf ?d) (and (and (and (not (in_motion ?d) ) (in_motion ?d) ) (and (in_motion ?d) (in ?d desk) ) ) (exists (?g - hexagonal_bin) (same_object ?g ?g) ) (equal_z_position ?d agent) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ 5 0.7 )
    (total-score)
  )
)
(:scoring
  (count failedThrowToBin:dodgeball)
)
)



(define (game game-id-648) (:domain medium-objects-room-v1)
(:setup
  (forall (?h - block)
    (forall (?d - cube_block)
      (game-optional
        (< (distance ?h agent) (distance bed bed))
      )
    )
  )
)
(:constraints
  (and
    (preference cubeBlockThrowAttempt
      (exists (?w1 ?c6 - dodgeball ?c - ball ?w - game_object ?o - (either golfball tall_cylindrical_block) ?h - game_object)
        (then
          (once (not (not (and (agent_holds ball) (touch desk ?h) ) ) ) )
          (once (in_motion ?h) )
          (once (agent_holds ?h) )
        )
      )
    )
  )
)
(:terminal
  (<= (total-score) (+ (count cubeBlockThrowAttempt:pink) 5 )
  )
)
(:scoring
  (count-once-per-objects cubeBlockThrowAttempt:hexagonal_bin)
)
)



(define (game game-id-649) (:domain many-objects-room-v1)
(:setup
  (exists (?c ?d - hexagonal_bin ?r - hexagonal_bin)
    (game-conserved
      (on ?r ?r)
    )
  )
)
(:constraints
  (and
    (forall (?b - (either pencil cylindrical_block watch))
      (and
        (preference objectsHidden
          (then
            (once (not (on ?b ?b) ) )
            (once (not (not (agent_holds ?b) ) ) )
            (once (on ?b ?b) )
          )
        )
        (preference matchingBuildingBuilt
          (exists (?p1 - dodgeball ?b2 - hexagonal_bin ?l4 - doggie_bed)
            (then
              (hold (same_type ?b ?l4) )
              (once (and (and (not (and (not (agent_holds door) ) (or (agent_holds ?l4) (agent_holds ?l4) ) ) ) (equal_x_position ?l4 agent) ) (exists (?d - hexagonal_bin) (agent_holds ?d) ) (equal_x_position ?l4 ?b) ) )
              (once (broken ?b) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (external-forall-maximize (count-overlapping matchingBuildingBuilt:dodgeball:dodgeball) ) (count-once-per-objects matchingBuildingBuilt:beachball) )
)
(:scoring
  (* 1 (external-forall-minimize (count-once objectsHidden:side_table:doggie_bed) ) )
)
)



(define (game game-id-650) (:domain many-objects-room-v1)
(:setup
  (exists (?o2 - (either cellphone red))
    (forall (?p ?l1 - block)
      (exists (?d - watch)
        (exists (?t2 - beachball)
          (game-conserved
            (not
              (agent_holds ?p)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?h - pillow)
        (then
          (once (and (agent_holds ?h) (and (agent_holds ?h) (and (in agent agent) (or (not (same_color ?h desk) ) (agent_holds ?h) ) ) ) ) )
          (hold (not (equal_z_position ?h agent) ) )
          (once (in_motion ?h) )
        )
      )
    )
    (preference dodgeballHitsPillowWithoutTouchingBlock
      (exists (?s - hexagonal_bin ?bl - (either main_light_switch))
        (then
          (hold (adjacent west_wall agent) )
          (once (is_setup_object ?bl) )
          (once (not (same_color brown ?bl) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (= (* (* 5 (* (* (+ (count dodgeballHitsPillowWithoutTouchingBlock:yellow:red) (- 2 )
              )
              (count ballThrownToBin:basketball)
            )
            (count dodgeballHitsPillowWithoutTouchingBlock:yellow)
          )
          8
        )
        (- (count dodgeballHitsPillowWithoutTouchingBlock:yellow) )
      )
      1
    )
    3
  )
)
(:scoring
  (external-forall-maximize
    (count-overlapping ballThrownToBin:pyramid_block)
  )
)
)



(define (game game-id-651) (:domain few-objects-room-v1)
(:setup
  (forall (?b - hexagonal_bin)
    (game-conserved
      (< (distance ?b ?b) (distance room_center ?b))
    )
  )
)
(:constraints
  (and
    (preference pinkObjectMovedToRoomCenter
      (exists (?c - (either dodgeball yellow_cube_block lamp) ?o - hexagonal_bin ?s ?c2 - building)
        (then
          (once (adjacent_side ?s ?s ?c2) )
          (once (not (agent_holds ?c2) ) )
          (once (in_motion ?s) )
        )
      )
    )
    (forall (?o - building)
      (and
        (preference objectWithMatchingColor
          (exists (?t - game_object ?h - triangular_ramp)
            (then
              (once (or (in ?h door) (not (adjacent ?h ?o) ) ) )
              (hold-while (not (and (on ?h ?o) (in ?o agent) ) ) (and (and (agent_holds south_west_corner) (on rug bed) ) (and (agent_holds ?h) (not (and (not (and (in_motion bed) (not (game_over ) ) (<= (distance ?o ?o) 1) ) ) (same_object ?h ?o) ) ) ) ) )
              (hold (equal_x_position ?h ?o) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (* 5 (count objectWithMatchingColor:pink:yellow) )
      4
    )
    (>= (total-score) (count-once-per-external-objects objectWithMatchingColor:cube_block) )
  )
)
(:scoring
  (count-once pinkObjectMovedToRoomCenter:yellow)
)
)



(define (game game-id-652) (:domain medium-objects-room-v1)
(:setup
  (exists (?o3 - (either doggie_bed cube_block triangle_block))
    (exists (?l3 - (either cd doggie_bed hexagonal_bin))
      (and
        (game-optional
          (and
            (and
              (in_motion ?o3)
              (opposite ?o3 ?o3)
            )
            (not
              (above upside_down ?l3)
            )
          )
        )
        (game-conserved
          (in ?o3 ?o3)
        )
        (forall (?c - flat_block ?d - cube_block ?l1 - dodgeball)
          (and
            (game-optional
              (in_motion ?o3)
            )
            (forall (?t - dodgeball)
              (game-conserved
                (in_motion ?t)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference watchOnShelf
      (exists (?d - pillow)
        (then
          (once (touch pink ?d) )
          (hold (not (and (and (agent_holds ?d) (> 2 (distance ?d rug)) ) (on ?d ?d) ) ) )
          (once (and (not (exists (?h - wall ?c ?c ?b7 ?o1 - hexagonal_bin) (in_motion ?d) ) ) (< (distance front ?d) 5) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 7 25 )
)
(:scoring
  (< (* 50 (count watchOnShelf:golfball) )
    (+ (* (count-once-per-objects watchOnShelf:basketball) (count-measure watchOnShelf:dodgeball) (count watchOnShelf) )
      100
    )
  )
)
)



(define (game game-id-653) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (or
      (not
        (agent_holds upright)
      )
    )
  )
)
(:constraints
  (and
    (preference greenObjectMovedToRoomCenter
      (exists (?d - hexagonal_bin)
        (then
          (hold (and (on ?d ?d) (not (and (and (in rug ?d) (and (and (agent_holds ?d) (touch ?d upside_down) ) (in ?d ?d) (between bed ?d ?d) ) ) (agent_holds ?d) ) ) ) )
          (once (on ?d west_wall) )
          (once (not (and (not (faces ?d ?d) ) (not (and (not (and (not (not (not (in_motion ?d) ) ) ) (and (agent_holds ?d) (object_orientation ?d ?d) ) ) ) (on ?d room_center) ) ) ) ) )
        )
      )
    )
    (preference dodgeballAndBasketballInBin
      (exists (?d - block)
        (then
          (once (and (agent_holds ?d) (in_motion ?d) ) )
          (hold (not (not (and (agent_holds rug) (above ?d ?d) ) ) ) )
          (once (agent_holds ?d) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (total-time) (count greenObjectMovedToRoomCenter:pink_dodgeball) )
    (= 18 2 )
    (or
      (not
        (or
          (< 3 (count-once dodgeballAndBasketballInBin:basketball:green) )
          (>= (count dodgeballAndBasketballInBin:dodgeball:golfball:orange) 2 )
          (or
            (= (total-score) (total-score) )
            (or
              (> (* (count-once-per-objects dodgeballAndBasketballInBin:beachball) 2 )
                (= 3 0 )
              )
              (not
                (>= (count dodgeballAndBasketballInBin:blue_dodgeball) 10 )
              )
            )
          )
          (<= (total-score) (+ 180 (* (count greenObjectMovedToRoomCenter:hexagonal_bin) 5 (count-once-per-external-objects greenObjectMovedToRoomCenter:beachball) )
            )
          )
        )
      )
    )
  )
)
(:scoring
  (count-total dodgeballAndBasketballInBin:dodgeball:dodgeball)
)
)



(define (game game-id-654) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (agent_holds rug)
  )
)
(:constraints
  (and
    (preference objectInBuilding
      (exists (?l1 - dodgeball)
        (then
          (hold (not (toggled_on floor) ) )
          (once (< 1 7) )
          (once (and (in ?l1 ?l1) (broken ?l1) ) )
        )
      )
    )
    (forall (?d - ball ?r1 - pillow)
      (and
        (preference dodgeballFromRugToBin
          (then
            (once (in rug ?r1) )
            (hold (agent_holds brown) )
            (once (and (agent_holds ?r1) (faces ?r1 ?r1) ) )
          )
        )
        (preference dodgeballAndBasketballInBin
          (exists (?p2 - wall ?b - blue_pyramid_block)
            (then
              (once (and (and (agent_holds ?r1) (touch floor ?b) ) (on desk desk) ) )
              (hold-while (game_start ) (agent_holds ?b) )
              (hold (and (adjacent ?b ?b) (on ?r1 bed) ) )
            )
          )
        )
      )
    )
    (preference dodgeballThrownToBin
      (exists (?h - ball)
        (then
          (hold (in_motion ?h) )
          (once (object_orientation ?h ?h) )
          (once (is_setup_object ?h) )
        )
      )
    )
  )
)
(:terminal
  (> 1 (- (count-once-per-objects dodgeballThrownToBin:purple) )
  )
)
(:scoring
  (* (count-once-per-objects dodgeballFromRugToBin) 9 5 5 )
)
)



(define (game game-id-655) (:domain medium-objects-room-v1)
(:setup
  (exists (?b - pillow)
    (and
      (or
        (game-conserved
          (and
            (not
              (agent_holds ?b)
            )
            (agent_holds ?b)
          )
        )
        (and
          (and
            (game-conserved
              (adjacent ?b ?b)
            )
          )
        )
        (exists (?c5 - hexagonal_bin)
          (exists (?o - ball ?d - game_object)
            (game-conserved
              (and
                (and
                  (adjacent ?c5 ?c5)
                  (and
                    (agent_holds room_center)
                    (on agent ?d)
                    (agent_holds ?b)
                    (not
                      (agent_holds ?d)
                    )
                    (object_orientation ?c5 ?b)
                    (open ?b)
                    (adjacent_side agent ?c5 ?b)
                  )
                )
                (exists (?b2 - bridge_block)
                  (and
                    (agent_holds room_center)
                  )
                )
                (not
                  (not
                    (not
                      (on pink_dodgeball door)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwGolfballToBin
      (exists (?c - cube_block ?c6 - pillow)
        (then
          (hold (game_over ) )
          (hold (and (not (not (in ?c6 ?c6) ) ) (equal_z_position ?c6 ?c6) (broken ?c6) ) )
          (once (agent_holds agent) )
        )
      )
    )
    (preference laptopAndBookInPlace
      (exists (?h - red_dodgeball ?d - hexagonal_bin ?o5 - hexagonal_bin)
        (then
          (once-measure (agent_holds floor) (distance ?o5 ?o5) )
          (once (toggled_on agent) )
        )
      )
    )
  )
)
(:terminal
  (and
    (< (> 5 (* 5 5 )
      )
      (total-score)
    )
    (<= (total-time) 5 )
  )
)
(:scoring
  (count laptopAndBookInPlace:orange)
)
)



(define (game game-id-656) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (exists (?h - cube_block)
        (and
          (game-conserved
            (toggled_on room_center)
          )
        )
      )
    )
    (and
      (or
        (game-conserved
          (exists (?h - chair)
            (in ?h ?h)
          )
        )
        (game-conserved
          (exists (?o - ball)
            (not
              (and
                (on ?o ?o)
                (< (distance ?o ?o) 1)
                (adjacent ?o bed)
                (in_motion ?o)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockInTowerAtEnd
      (exists (?w1 ?b - wall)
        (then
          (once (adjacent agent ?b) )
          (hold (and (object_orientation ?w1 ?b) (equal_z_position ?w1 agent) ) )
          (once (touch ?b ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (count-once-per-objects blockInTowerAtEnd) (/ (count blockInTowerAtEnd:dodgeball) (+ 1 (count-once blockInTowerAtEnd:green:hexagonal_bin) )
      )
    )
    (* 2 (count blockInTowerAtEnd:pink:purple) )
  )
)
(:scoring
  (count blockInTowerAtEnd:beachball)
)
)



(define (game game-id-657) (:domain medium-objects-room-v1)
(:setup
  (forall (?o - dodgeball ?b1 - flat_block)
    (game-optional
      (in_motion ?b1)
    )
  )
)
(:constraints
  (and
    (preference nonBlockPlacedInBuilding
      (exists (?b - color)
        (then
          (once (< 1 (distance_side ?b ?b ?b)) )
          (once (agent_crouches ) )
          (once (adjacent ?b ?b) )
        )
      )
    )
  )
)
(:terminal
  (<= (+ (* 5 (count-overlapping nonBlockPlacedInBuilding:doggie_bed) )
      (count-once-per-objects nonBlockPlacedInBuilding:golfball)
    )
    300
  )
)
(:scoring
  (* 5 (count nonBlockPlacedInBuilding:yellow_cube_block) )
)
)



(define (game game-id-658) (:domain medium-objects-room-v1)
(:setup
  (exists (?b10 - game_object ?h - (either cylindrical_block teddy_bear))
    (and
      (and
        (game-conserved
          (exists (?t - dodgeball ?w - cube_block ?b ?t - game_object)
            (not
              (equal_x_position ?t ?b)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballKnocksBlockFromRug
      (exists (?l1 - hexagonal_bin ?tb - (either golfball golfball))
        (then
          (once (not (agent_crouches ) ) )
          (once (not (on floor ?tb) ) )
          (hold (agent_holds ?tb) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-measure ballKnocksBlockFromRug:yellow) (count-once-per-objects ballKnocksBlockFromRug:red) )
)
(:scoring
  (count-once ballKnocksBlockFromRug:bed)
)
)



(define (game game-id-659) (:domain many-objects-room-v1)
(:setup
  (exists (?b1 - game_object)
    (game-optional
      (adjacent ?b1 side_table)
    )
  )
)
(:constraints
  (and
    (preference ballThrownThroughRampToBin
      (exists (?p - teddy_bear)
        (then
          (once (in_motion ?p) )
          (hold (agent_holds ?p) )
          (hold (not (touch ?p front) ) )
        )
      )
    )
    (preference throwInBin
      (exists (?o2 - hexagonal_bin)
        (then
          (hold-while (not (and (adjacent ?o2 ?o2) (not (not (and (in_motion ?o2) (in_motion ?o2) ) ) ) ) ) (or (< (distance ?o2 door) (distance ?o2 ?o2)) (agent_holds ?o2) ) )
          (hold (agent_holds ?o2) )
          (once (not (and (in_motion ?o2) (in_motion ?o2) ) ) )
        )
      )
    )
    (preference basketMadeFromRug
      (exists (?t1 - ball)
        (at-end
          (and
            (in_motion ?t1)
            (agent_holds ?t1)
            (and
              (forall (?h ?b7 - (either dodgeball alarm_clock))
                (in_motion ?b7)
              )
              (not
                (and
                  (faces agent ?t1)
                  (and
                    (same_object ?t1 agent)
                    (agent_holds ?t1)
                  )
                )
              )
              (not
                (on yellow ?t1)
              )
            )
          )
        )
      )
    )
    (preference brownObjectMovedToRoomCenter
      (exists (?l2 - blue_cube_block)
        (at-end
          (and
            (agent_holds agent)
            (not
              (is_setup_object pink)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (count throwInBin:beachball) (count-once ballThrownThroughRampToBin:dodgeball) )
    (>= (total-score) (total-score) )
  )
)
(:scoring
  (count brownObjectMovedToRoomCenter:golfball:dodgeball:beachball)
)
)



(define (game game-id-660) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (exists (?o - (either cellphone dodgeball))
      (in_motion bed)
    )
  )
)
(:constraints
  (and
    (forall (?o1 - hexagonal_bin)
      (and
        (preference throwInBin
          (exists (?t2 - hexagonal_bin)
            (then
              (hold-while (and (in agent ?o1) (is_setup_object desk) (on ?o1 ?o1) (not (in_motion ?t2) ) ) (and (is_setup_object ?o1) (on ?o1 ?t2) (not (in ?t2 ?o1) ) ) )
              (once (exists (?h - hexagonal_bin) (not (adjacent front ?o1) ) ) )
              (once (adjacent ?o1 ?t2) )
            )
          )
        )
        (preference castleBuilt
          (exists (?d - building)
            (at-end
              (in_motion rug)
            )
          )
        )
        (preference dodgeballAndBasketballInBin
          (exists (?b - curved_wooden_ramp)
            (then
              (once (in_motion ?o1) )
              (hold (agent_holds ?b) )
              (once (in rug room_center) )
              (once (in_motion ?b) )
            )
          )
        )
      )
    )
    (forall (?b - ball)
      (and
        (preference throwBallToBin
          (exists (?d - block)
            (then
              (once (and (on ?d ?d) (on ?b ?b) (touch ?b ?b) ) )
              (hold (agent_holds room_center) )
              (hold-while (same_type agent ?d) (exists (?d - red_dodgeball ?p - (either dodgeball tall_cylindrical_block)) (and (object_orientation ?d ?d) (rug_color_under ?b ?p) ) ) )
            )
          )
        )
        (preference ballOnBedAtEnd
          (exists (?s - hexagonal_bin)
            (then
              (hold (not (same_type ?s ?s) ) )
              (once (and (in_motion ?s) (same_type ?s ?b) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= 10 (count-once ballOnBedAtEnd:hexagonal_bin) )
    (>= (count-once-per-objects throwInBin:cube_block) (count-once-per-objects dodgeballAndBasketballInBin:yellow_cube_block:dodgeball) )
  )
)
(:scoring
  (+ (count-once-per-objects dodgeballAndBasketballInBin:yellow) (count-once throwBallToBin:blue_cube_block) )
)
)



(define (game game-id-661) (:domain few-objects-room-v1)
(:setup
  (exists (?ob - hexagonal_bin ?b4 - beachball)
    (game-optional
      (and
        (on ?b4 bed)
        (same_type ?b4 ?b4)
      )
    )
  )
)
(:constraints
  (and
    (preference cubeThrownToBin
      (exists (?d1 - ball)
        (then
          (hold-while (agent_holds ?d1) (and (adjacent bed ?d1) (agent_holds ?d1) (in_motion ?d1) ) (and (agent_holds ?d1) (agent_holds block) ) (exists (?o - ball ?f - building) (in_motion ?d1) ) )
          (once (agent_holds pink_dodgeball) )
          (once (and (agent_holds desk) (in_motion ?d1) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (count cubeThrownToBin:yellow:book) )
)
(:scoring
  (count-once-per-external-objects cubeThrownToBin:pink_dodgeball)
)
)



(define (game game-id-662) (:domain few-objects-room-v1)
(:setup
  (exists (?s - hexagonal_bin)
    (and
      (exists (?ob - (either mug dodgeball doggie_bed) ?b - dodgeball ?d - dodgeball)
        (exists (?b ?g ?b10 ?r2 ?ob ?c2 - hexagonal_bin ?d2 - curved_wooden_ramp)
          (game-optional
            (not
              (and
                (in_motion ?s)
                (adjacent ?s ?d)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockPlacedInBuilding
      (exists (?b3 - curved_wooden_ramp)
        (then
          (once (not (not (on ?b3 upright) ) ) )
          (once (or (and (not (object_orientation ?b3 ?b3) ) (not (not (agent_holds back) ) ) ) (and (not (same_type ?b3 pink_dodgeball) ) (not (not (in_motion ?b3) ) ) ) (and (< 1 (distance desk ?b3)) (in_motion agent) ) ) )
          (once (and (or (rug_color_under ?b3 ?b3) ) (adjacent ?b3 ?b3) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count blockPlacedInBuilding:beachball:pink_dodgeball) (count blockPlacedInBuilding:hexagonal_bin:golfball) )
)
(:scoring
  (count-once-per-objects blockPlacedInBuilding:dodgeball)
)
)



(define (game game-id-663) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (toggled_on pink_dodgeball)
  )
)
(:constraints
  (and
    (preference throwToBinFromDistance
      (exists (?s - ball ?o - game_object)
        (then
          (once (and (in_motion ?o) (and (< 3 0) (in_motion ?o) ) ) )
          (once (not (adjacent_side agent ?o ?o ?o) ) )
          (hold (agent_holds ?o) )
        )
      )
    )
    (preference throwAttempt
      (exists (?o - drawer ?d2 - hexagonal_bin)
        (then
          (once (not (in_motion ?d2) ) )
          (once (not (agent_holds ?d2) ) )
          (once (forall (?h - chair) (on floor front) ) )
        )
      )
    )
  )
)
(:terminal
  (> (count-once-per-objects throwAttempt:dodgeball) 3 )
)
(:scoring
  (* (count-unique-positions throwToBinFromDistance:yellow) (count throwToBinFromDistance:orange) )
)
)



(define (game game-id-664) (:domain many-objects-room-v1)
(:setup
  (not
    (exists (?d - (either flat_block cube_block cube_block))
      (game-conserved
        (not
          (in ?d ?d)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToBinOffObject
      (exists (?h - dodgeball)
        (then
          (once (on ?h ?h) )
          (hold-while (not (exists (?b3 - doggie_bed) (adjacent ?h front) ) ) (not (in_motion bed) ) )
          (once (in_motion ?h) )
        )
      )
    )
  )
)
(:terminal
  (not
    (= (- 300 )
      (count-once-per-objects throwBallToBinOffObject:yellow)
    )
  )
)
(:scoring
  (count throwBallToBinOffObject:dodgeball)
)
)



(define (game game-id-665) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (not
      (agent_holds desk)
    )
  )
)
(:constraints
  (and
    (forall (?o2 - ball)
      (and
        (preference rollBallToBin
          (exists (?b8 - hexagonal_bin)
            (then
              (once (and (on ?b8 ?b8) (adjacent_side room_center bed room_center) ) )
              (once (not (agent_holds brown) ) )
              (once (in_motion ?o2) )
            )
          )
        )
        (preference ballNeverThrown
          (exists (?h - (either lamp triangular_ramp))
            (at-end
              (in_motion ?o2)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (= (+ 10 (* (<= (count rollBallToBin:cube_block:dodgeball) 300 )
          (* 6 5 )
        )
      )
      (count-unique-positions rollBallToBin:rug:beachball)
    )
  )
)
(:scoring
  (- (* 1 2 )
  )
)
)



(define (game game-id-666) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?o3 - tall_cylindrical_block)
      (and
        (game-conserved
          (forall (?l - chair)
            (touch ?l ?l)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - hexagonal_bin ?h - hexagonal_bin)
      (and
        (preference ballThrownToWallToAgent
          (exists (?h ?t - teddy_bear)
            (then
              (once (not (and (adjacent agent ?t) (or (adjacent ?h ?h) (exists (?b10 - doggie_bed) (and (and (in ?t ?t) (between ?b10 pink_dodgeball agent) ) (not (not (agent_holds ?t) ) ) ) ) ) (adjacent ?t ?t) (in_motion ?t) ) ) )
              (hold-while (in_motion bed) (and (on ?h ?h) (same_type ?h ?h) ) )
              (once (and (in_motion ?h) (and (not (and (and (and (agent_holds ?h) (agent_holds ?h) ) (not (in_motion ?t) ) ) (and (in ?t ?t) (in_motion ?h) ) ) ) (touch ?t ?h) ) ) )
            )
          )
        )
        (preference pyramidBlockAtopTowerAtEnd
          (exists (?d - building ?b2 - block ?r - ball)
            (then
              (once (not (not (exists (?b1 - game_object) (game_start ) ) ) ) )
              (hold (exists (?p1 - drawer) (< 5 1) ) )
              (once (agent_holds ?h) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 4 (total-score) )
    (< (total-score) (total-score) )
  )
)
(:scoring
  (external-forall-maximize
    (count ballThrownToWallToAgent:blue_dodgeball)
  )
)
)



(define (game game-id-667) (:domain few-objects-room-v1)
(:setup
  (forall (?l - hexagonal_bin ?b - flat_block ?r - hexagonal_bin)
    (game-conserved
      (on ?r ?r)
    )
  )
)
(:constraints
  (and
    (forall (?b7 - golfball ?b - tan_cube_block)
      (and
        (preference failedThrowToBin
          (exists (?t ?b1 ?b7 ?l2 ?o ?t2 - (either cellphone dodgeball))
            (then
              (hold (not (= 1 1 0 (distance_side ?t2 ?o ?l2)) ) )
              (hold (game_start ) )
              (hold (not (agent_holds ?b1) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (count-once-per-objects failedThrowToBin:basketball) 5 )
)
(:scoring
  (* (* (count failedThrowToBin:beachball) (= (count failedThrowToBin:hexagonal_bin) (* 4 (count failedThrowToBin:pink:purple:pyramid_block) )
      )
    )
    (* 1 5 )
  )
)
)



(define (game game-id-668) (:domain few-objects-room-v1)
(:setup
  (exists (?d - hexagonal_bin)
    (game-conserved
      (adjacent ?d ?d)
    )
  )
)
(:constraints
  (and
    (preference itemsHidingScreens
      (exists (?d - hexagonal_bin)
        (then
          (hold (forall (?h - dodgeball ?p - dodgeball) (not (in_motion ?p) ) ) )
          (hold (not (agent_holds ?d) ) )
          (hold (and (not (touch ?d ?d) ) (touch ?d ?d) ) )
        )
      )
    )
    (forall (?t2 - cube_block ?o3 - hexagonal_bin)
      (and
        (preference smallObjectThrownToBed
          (exists (?b7 - teddy_bear)
            (then
              (once (not (and (touch ?b7 ?b7) (in room_center ?o3) (adjacent_side agent bed ?b7) ) ) )
              (once (touch top_drawer ?o3) )
              (once (agent_holds ?b7) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (total-score) (count-once-per-objects itemsHidingScreens:pink) )
)
(:scoring
  (+ (/ (count itemsHidingScreens:dodgeball) 9 ) (count itemsHidingScreens:dodgeball) )
)
)



(define (game game-id-669) (:domain medium-objects-room-v1)
(:setup
  (forall (?p2 - dodgeball)
    (game-conserved
      (agent_holds ?p2)
    )
  )
)
(:constraints
  (and
    (preference bookOnDeskShelf
      (exists (?h - hexagonal_bin ?d - dodgeball)
        (then
          (once (exists (?b - dodgeball) (game_start ) ) )
          (hold (adjacent ?d ?d) )
          (once (adjacent ?d ?d) )
        )
      )
    )
    (forall (?c - (either book cube_block cylindrical_block))
      (and
        (preference ballThrownThroughRampToBin
          (exists (?d ?h - hexagonal_bin)
            (then
              (once (and (and (not (on ?d ?d) ) (and (not (not (agent_holds ?c) ) ) (and (on ?h ?h) (touch ?c floor) ) ) (exists (?b ?d ?b6 ?h ?b1 ?ob - game_object ?t1 - (either cd lamp)) (in_motion ?t1) ) ) (not (game_over ) ) (agent_holds bed) ) )
              (once (and (agent_holds ?c) (on ?h front_left_corner) (and (not (not (agent_holds ?d) ) ) (> 2 1) ) (and (agent_holds bed) (in ?d ?d) ) (not (in_motion front) ) (agent_holds ?d) (exists (?h - dodgeball ?b2 - hexagonal_bin) (and (not (agent_holds ?d) ) (not (and (exists (?g - hexagonal_bin ?s - dodgeball ?d - dodgeball) (not (not (adjacent agent ?h) ) ) ) (agent_holds ?c) (on ?d agent) ) ) ) ) (on ?c ?h) ) )
              (once (in ?h ?d) )
              (once (not (game_over ) ) )
              (hold (same_type ?c ?h) )
            )
          )
        )
      )
    )
    (forall (?o1 - building)
      (and
        (preference cubeBlockThrowAttempt
          (exists (?h - blue_cube_block ?d - (either laptop golfball side_table))
            (then
              (once (touch ?o1 ?d) )
              (hold (not (not (not (exists (?p1 - (either pen cd cylindrical_block)) (< (distance agent ?o1) 8) ) ) ) ) )
              (once (in_motion ?d) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count ballThrownThroughRampToBin:doggie_bed) (count bookOnDeskShelf:dodgeball:golfball) )
    (count ballThrownThroughRampToBin:cylindrical_block:hexagonal_bin:cylindrical_block)
  )
)
(:scoring
  (* 10 (+ 3 )
  )
)
)



(define (game game-id-670) (:domain many-objects-room-v1)
(:setup
  (forall (?b10 - building)
    (exists (?b - wall)
      (exists (?w1 - cylindrical_block ?p3 - dodgeball)
        (forall (?h - pillow)
          (and
            (game-optional
              (on ?b10 ?b10)
            )
            (game-optional
              (not
                (exists (?l1 - pillow ?p - dodgeball)
                  (and
                    (agent_holds door)
                    (agent_holds ?p3)
                    (not
                      (adjacent ?p3 ?b)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballToBinFromBed
      (exists (?h - triangular_ramp)
        (at-end
          (adjacent_side ?h ?h ?h ?h)
        )
      )
    )
  )
)
(:terminal
  (> (count-once-per-objects ballToBinFromBed:blue_pyramid_block) 10 )
)
(:scoring
  (count-once-per-objects ballToBinFromBed:red:basketball)
)
)



(define (game game-id-671) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?b10 ?r - shelf)
      (exists (?w1 - ball ?o5 ?c ?h ?c2 - hexagonal_bin)
        (and
          (or
            (and
              (game-conserved
                (not
                  (exists (?b1 - curved_wooden_ramp)
                    (in ?c ?r)
                  )
                )
              )
              (or
                (and
                  (and
                    (and
                      (and
                        (exists (?o - hexagonal_bin)
                          (and
                            (and
                              (forall (?o - dodgeball)
                                (exists (?h - hexagonal_bin)
                                  (exists (?b1 ?r ?p1 - hexagonal_bin ?l2 - hexagonal_bin)
                                    (forall (?c - dodgeball ?h - desk_shelf ?o - dodgeball)
                                      (game-conserved
                                        (on ?b10 ?c2)
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                      (and
                        (forall (?d - hexagonal_bin)
                          (and
                            (game-conserved
                              (in_motion ?r)
                            )
                            (forall (?b - block)
                              (forall (?b - (either laptop beachball))
                                (game-conserved
                                  (and
                                    (and
                                      (in ?b10 ?c2)
                                      (forall (?b2 - chair)
                                        (agent_holds ?b10)
                                      )
                                    )
                                    (in_motion ?c)
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                      (game-conserved
                        (not
                          (agent_holds agent)
                        )
                      )
                    )
                  )
                )
                (exists (?g - doggie_bed)
                  (and
                    (game-optional
                      (< 1 (distance ?c ?r))
                    )
                    (exists (?b - cube_block ?o - ball ?c2 - curved_wooden_ramp ?h ?o1 - pillow ?d - wall)
                      (exists (?h - ball)
                        (forall (?h - doggie_bed)
                          (game-optional
                            (in_motion agent)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
            (forall (?c - hexagonal_bin)
              (exists (?c6 - hexagonal_bin)
                (and
                  (or
                    (forall (?r - dodgeball ?p - hexagonal_bin)
                      (and
                        (forall (?c4 - teddy_bear)
                          (game-conserved
                            (in_motion ?c)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
            (exists (?b3 - dodgeball)
              (game-conserved
                (exists (?h ?p - hexagonal_bin ?c - hexagonal_bin)
                  (and
                    (not
                      (between ?b3 ?r ?c2)
                    )
                    (agent_holds ?b3)
                  )
                )
              )
            )
          )
          (and
            (game-conserved
              (not
                (on agent desk)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference beachballOnRug
      (exists (?ob - cube_block)
        (then
          (hold (not (not (not (agent_holds ?ob) ) ) ) )
          (hold (toggled_on ?ob) )
          (once (and (exists (?d2 - (either cylindrical_block cd) ?h - hexagonal_bin ?bl - red_dodgeball) (in ?ob ?bl) ) (not (and (in_motion ?ob) (not (agent_holds ?ob) ) ) ) (and (in_motion ?ob) (exists (?b - (either bridge_block cube_block)) (and (is_setup_object rug) (on ?ob ?ob) ) ) (in_motion ?ob) ) (in_motion agent) ) )
        )
      )
    )
    (forall (?b - hexagonal_bin)
      (and
        (preference ballDroppedInBin
          (exists (?b3 - (either book chair hexagonal_bin) ?h - ball)
            (then
              (once (in_motion ?h) )
              (hold (agent_holds ?b) )
              (once (in_motion ?b) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< (= (count-once-per-objects beachballOnRug:rug:purple:green) (+ (+ (count beachballOnRug:golfball:blue_pyramid_block) (>= 10 6 )
        )
        (count-once beachballOnRug:doggie_bed)
        (* (count ballDroppedInBin:doggie_bed) (count beachballOnRug:pink:basketball) )
      )
    )
    (+ 3 7 )
  )
)
(:scoring
  (* (count ballDroppedInBin:pyramid_block) 6 )
)
)



(define (game game-id-672) (:domain few-objects-room-v1)
(:setup
  (forall (?c1 - ball ?d - hexagonal_bin)
    (and
      (game-conserved
        (in ?d blue)
      )
      (and
        (and
          (game-conserved
            (in_motion agent)
          )
          (or
            (game-conserved
              (in_motion ?d)
            )
          )
        )
        (or
          (and
            (exists (?b4 - doggie_bed)
              (forall (?t - chair)
                (game-conserved
                  (on ?b4 ?t)
                )
              )
            )
          )
          (exists (?b9 - dodgeball)
            (game-conserved
              (not
                (and
                  (not
                    (in_motion ?b9)
                  )
                  (object_orientation block ?b9)
                )
              )
            )
          )
          (forall (?h - doggie_bed ?r - (either dodgeball yellow_cube_block alarm_clock credit_card alarm_clock cube_block pink))
            (exists (?p1 ?b9 - ball ?o1 - doggie_bed ?b2 - hexagonal_bin)
              (game-optional
                (not
                  (agent_holds ?d)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?h - curved_wooden_ramp ?b - hexagonal_bin)
        (then
          (once (and (not (is_setup_object pink) ) (and (not (not (touch ?b agent) ) ) (agent_holds ?b) ) (adjacent ?b ?b) (exists (?l4 - beachball) (and (not (exists (?d - (either desktop dodgeball pyramid_block)) (on ?l4 agent) ) ) (touch ?l4 floor) ) ) ) )
          (once (agent_holds ?b) )
        )
      )
    )
  )
)
(:terminal
  (> (+ (* 3 3 )
      3
    )
    (count-once throwAttempt:pink)
  )
)
(:scoring
  (count throwAttempt:beachball)
)
)



(define (game game-id-673) (:domain few-objects-room-v1)
(:setup
  (forall (?b ?g - hexagonal_bin)
    (game-conserved
      (agent_holds desk)
    )
  )
)
(:constraints
  (and
    (preference blocksInPlace
      (exists (?t - building ?b1 - dodgeball)
        (at-end
          (agent_holds ?b1)
        )
      )
    )
    (preference gameObjectToBin
      (exists (?t - hexagonal_bin)
        (then
          (once (< 1 1) )
          (hold-while (on ?t ?t) (not (agent_holds ?t) ) (agent_holds agent) (and (in_motion agent) (in_motion ?t) ) )
          (once (and (< (x_position ?t) (distance ?t ?t)) (> 10 5) (in ?t agent) (agent_holds ?t) ) )
        )
      )
    )
  )
)
(:terminal
  (> 3 (* 15 (external-forall-minimize (count gameObjectToBin:dodgeball:yellow) ) )
  )
)
(:scoring
  (count blocksInPlace:red)
)
)



(define (game game-id-674) (:domain many-objects-room-v1)
(:setup
  (exists (?h ?g - hexagonal_bin ?c1 - ball)
    (game-optional
      (in ?c1 ?c1)
    )
  )
)
(:constraints
  (and
    (preference blockIncorrectlyPicked
      (exists (?p - (either desktop flat_block))
        (then
          (once (not (in_motion pink_dodgeball) ) )
          (once (in_motion ?p) )
          (once (not (not (not (not (on ?p ?p) ) ) ) ) )
        )
      )
    )
    (forall (?b1 - pillow ?c1 - chair)
      (and
        (preference castleBuilt
          (exists (?b8 - hexagonal_bin)
            (then
              (once (and (not (and (and (in ?b8 ?b8) (in ?b8 ?b8) ) (< 2 (distance ?c1 ?c1)) ) ) (not (on ?b8 ?b8) ) ) )
              (once (and (agent_holds ?b8) (game_start ) ) )
              (once (forall (?c - pillow) (in_motion ?b8) ) )
            )
          )
        )
      )
    )
    (preference cubeBlockInBuilding
      (exists (?b1 - (either flat_block cube_block))
        (at-end
          (in ?b1 ?b1)
        )
      )
    )
  )
)
(:terminal
  (>= (* 10 10 )
    (count blockIncorrectlyPicked:blue_dodgeball:yellow)
  )
)
(:scoring
  (count blockIncorrectlyPicked:yellow)
)
)



(define (game game-id-675) (:domain medium-objects-room-v1)
(:setup
  (exists (?h - (either yellow_cube_block mug) ?b8 - cube_block)
    (not
      (and
        (game-conserved
          (not
            (in_motion ?b8)
          )
        )
        (exists (?o - (either dodgeball))
          (and
            (game-conserved
              (not
                (same_type ?b8 ?o)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?d ?tb - dodgeball)
      (and
        (preference throwAttemptFromDoor
          (exists (?h - desk_shelf)
            (then
              (once (adjacent_side ?tb ?h ?h) )
              (hold (agent_holds agent) )
              (once (in_motion bed) )
            )
          )
        )
      )
    )
    (preference gameBlockFound
      (exists (?t2 - hexagonal_bin)
        (then
          (once (in_motion ?t2) )
          (once (in_motion ?t2) )
          (once (exists (?l - game_object) (in_motion ?l) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (not
        (or
          (= 6 (count-same-positions gameBlockFound:dodgeball) )
          (or
            (= (count-once-per-objects gameBlockFound:golfball) (count gameBlockFound:beachball) )
            (>= (total-score) (total-time) )
          )
        )
      )
      (>= (total-time) (total-time) )
      (>= 5 (- 2 )
      )
      (not
        (>= (total-score) (total-score) )
      )
    )
    (>= 5 (* 0 5 )
    )
    (>= 3 (count-once-per-objects gameBlockFound:purple) )
  )
)
(:scoring
  (+ (- 2 )
    4
  )
)
)



(define (game game-id-676) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (forall (?b6 - building ?g - game_object)
      (in bed ?g)
    )
  )
)
(:constraints
  (and
    (forall (?b10 ?h - (either chair pyramid_block))
      (and
        (preference throwAttempt
          (exists (?x - pillow)
            (at-end
              (or
                (agent_holds left)
                (on ?b10 ?b10)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (= (count throwAttempt:yellow) 4 )
)
(:scoring
  (count-once-per-objects throwAttempt:triangle_block)
)
)



(define (game game-id-677) (:domain many-objects-room-v1)
(:setup
  (exists (?b2 - dodgeball ?bl - building)
    (and
      (and
        (game-optional
          (in_motion desk)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?b - cube_block)
        (then
          (hold (and (and (on ?b agent) (not (adjacent_side ?b ?b ?b) ) ) (and (< (x_position ?b) 4) ) (and (same_type ?b ?b) (exists (?d - hexagonal_bin) (not (in_motion ?b) ) ) ) ) )
          (hold-while (in_motion top_shelf) (in ?b ?b) )
          (once (agent_holds ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (+ (count throwBallToBin:alarm_clock) (count throwBallToBin:top_drawer:purple:basketball) )
      4
      2
      (- 4 )
    )
    8
  )
)
(:scoring
  (count-measure throwBallToBin:yellow)
)
)



(define (game game-id-678) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?x - hexagonal_bin ?o - hexagonal_bin ?b - block)
      (game-conserved
        (exists (?o - golfball)
          (between ?b ?o ?b)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o - (either lamp bridge_block flat_block bridge_block))
      (and
        (preference dodgeballThrownToBin
          (exists (?o2 - drawer)
            (then
              (hold (not (agent_holds ?o) ) )
            )
          )
        )
        (preference basketMadeFromRug
          (exists (?ob - ball)
            (then
              (once (agent_holds ?ob) )
              (once (agent_holds ?ob) )
              (once (and (not (on ?ob ?o) ) (and (same_type ?o ?ob) (in_motion ?o) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (total-time) )
)
(:scoring
  (count basketMadeFromRug:yellow:yellow_cube_block)
)
)



(define (game game-id-679) (:domain medium-objects-room-v1)
(:setup
  (forall (?l - dodgeball)
    (game-conserved
      (in_motion ?l)
    )
  )
)
(:constraints
  (and
    (preference dodgeballFromRugToBin
      (exists (?c3 - game_object)
        (at-end
          (same_type desk bed)
        )
      )
    )
  )
)
(:terminal
  (>= 12 (external-forall-maximize (count-once-per-objects dodgeballFromRugToBin:basketball) ) )
)
(:scoring
  (* (count-once dodgeballFromRugToBin:dodgeball) (* (* (+ (count dodgeballFromRugToBin:orange) (external-forall-maximize (* (- (* 3 (count dodgeballFromRugToBin:dodgeball) )
              )
              3
              (count dodgeballFromRugToBin:beachball)
            )
          )
        )
        (count dodgeballFromRugToBin:rug)
      )
      2
      0
      (count dodgeballFromRugToBin:yellow)
    )
  )
)
)



(define (game game-id-680) (:domain many-objects-room-v1)
(:setup
  (forall (?c - ball)
    (game-conserved
      (exists (?h - (either cylindrical_block golfball tall_cylindrical_block))
        (and
          (and
            (on ?h ?c)
            (and
              (and
                (and
                  (< 1 8)
                  (and
                    (and
                      (adjacent_side ?c ?c ?h)
                      (and
                        (and
                          (not
                            (agent_holds ?h)
                          )
                          (in_motion ?h)
                        )
                        (< (distance bed ?c) 9)
                      )
                    )
                    (agent_holds ?c)
                  )
                  (in ?h ?h)
                )
                (adjacent rug ?c)
              )
              (in_motion ?h)
            )
          )
          (and
            (same_color agent ?c)
            (and
              (agent_holds brown)
              (not
                (and
                  (agent_holds floor)
                  (agent_holds ?h)
                )
              )
              (in_motion rug)
            )
            (and
              (and
                (exists (?h - dodgeball)
                  (not
                    (not
                      (not
                        (and
                          (on front ?c)
                          (and
                            (not
                              (exists (?o - bridge_block)
                                (= 3)
                              )
                            )
                            (agent_holds bed)
                          )
                          (in_motion ?c)
                          (not
                            (in_motion ?c)
                          )
                        )
                      )
                    )
                  )
                )
                (>= 6 1)
              )
              (not
                (agent_holds desk)
              )
            )
            (and
              (and
                (agent_holds ?h)
                (on ?h bed)
              )
              (on bed ?h)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c2 - block ?o1 - game_object ?b7 - block)
      (and
        (preference greenObjectMovedToRoomCenter
          (exists (?o5 - cube_block ?p1 - beachball)
            (then
              (hold (agent_holds ?p1) )
              (once (rug_color_under ?b7 ?p1) )
              (hold (not (same_color desk agent) ) )
            )
          )
        )
      )
    )
    (forall (?b - hexagonal_bin)
      (and
        (preference itemsBroken
          (exists (?h - hexagonal_bin ?h - game_object)
            (then
              (hold-while (in ?b ?b) (and (not (and (agent_holds ?b) (not (agent_holds ?b) ) ) ) (agent_holds ?b) ) (and (not (object_orientation ?b agent) ) (and (not (not (and (rug_color_under agent ?h) (not (agent_holds ?h) ) ) ) ) (adjacent ?b ?b) (in_motion ?b) (not (in_motion ?h) ) ) ) )
              (once (and (and (and (adjacent_side ?h ?b desk) (not (touch ?b ?b) ) ) (not (not (in_motion ?b) ) ) ) (forall (?b6 - game_object) (agent_holds ?b) ) ) )
              (once (not (not (agent_holds ?h) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-total greenObjectMovedToRoomCenter:beachball) (count-once itemsBroken:red) )
)
(:scoring
  (* 6 (* (* 15 (count-once-per-objects itemsBroken:yellow) )
      (count itemsBroken:golfball:hexagonal_bin)
    )
  )
)
)



(define (game game-id-681) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (exists (?b9 - dodgeball)
        (and
          (game-conserved
            (not
              (in ?b9 ?b9)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballDroppedInBin
      (exists (?b - chair)
        (then
          (once (in_motion ?b) )
          (once (in_motion ?b) )
          (once (same_color desk ?b) )
        )
      )
    )
    (preference throwBallToDoggieBed
      (exists (?l2 - game_object)
        (then
          (hold (in_motion ?l2) )
          (once (and (in_motion ?l2) (broken ?l2) ) )
          (once (not (and (agent_holds ?l2) (agent_holds ?l2) ) ) )
        )
      )
    )
    (preference blockKnockedFromBuildingInBin
      (exists (?o2 - ball)
        (at-end
          (and
            (and
              (same_type ?o2 agent)
              (and
                (and
                  (not
                    (and
                      (equal_z_position ?o2 ?o2)
                      (and
                        (not
                          (not
                            (adjacent_side ?o2 ?o2 ?o2)
                          )
                        )
                      )
                    )
                  )
                  (>= (distance agent door) (distance ?o2 ?o2))
                )
                (adjacent_side ?o2 ?o2 ?o2 ?o2)
                (on floor ?o2)
              )
              (not
                (< (distance ?o2 ?o2) 1)
              )
            )
            (not
              (adjacent ?o2 ?o2)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (count ballDroppedInBin) )
)
(:scoring
  (* 3 6 3 (count throwBallToDoggieBed:pink_dodgeball) (* (* 300 (= (* (+ (count-once blockKnockedFromBuildingInBin:white) (count-once-per-objects throwBallToDoggieBed:golfball) )
            (+ (count-once-per-objects ballDroppedInBin:yellow) 5 7 )
          )
        )
        3
      )
      5
    )
    3
  )
)
)



(define (game game-id-682) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?b - (either doggie_bed pyramid_block))
      (game-optional
        (exists (?b5 - color)
          (agent_holds ?b5)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference cubeBlockFromBedToShelf
      (exists (?w1 - hexagonal_bin)
        (then
          (hold (touch ?w1 back) )
          (once (and (agent_holds ?w1) (not (on ?w1 agent) ) (= (distance_side ?w1 agent ?w1 ?w1)) ) )
          (hold (not (and (adjacent desk ?w1) (on ?w1 ?w1) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (total-time) )
)
(:scoring
  (count cubeBlockFromBedToShelf)
)
)



(define (game game-id-683) (:domain medium-objects-room-v1)
(:setup
  (exists (?b - (either ball))
    (not
      (game-optional
        (and
          (< (x_position ?b) 3)
          (> 6 1)
          (and
            (and
              (is_setup_object agent)
              (and
                (agent_holds ?b)
                (rug_color_under agent room_center)
              )
              (not
                (agent_holds ?b)
              )
            )
            (in agent ?b)
            (agent_holds ?b)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dropAttempt
      (exists (?b - book)
        (then
          (hold (agent_holds ?b) )
          (hold (faces ?b ?b) )
          (hold (agent_holds ?b) )
          (once (agent_holds ?b) )
          (once (agent_holds desk) )
          (once (in_motion ?b) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (total-score) 3 )
  )
)
(:scoring
  (count dropAttempt:yellow)
)
)



(define (game game-id-684) (:domain few-objects-room-v1)
(:setup
  (forall (?l - hexagonal_bin ?d - dodgeball)
    (and
      (game-optional
        (not
          (in bed ?d)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttemptFromDoor
      (exists (?g - dodgeball)
        (then
          (once (and (in ?g ?g) (agent_holds desk) ) )
          (once (equal_z_position pink_dodgeball ?g) )
          (once (not (in_motion pink_dodgeball) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (* 10 3 )
      (count-once-per-objects throwAttemptFromDoor:green:basketball)
    )
    15
  )
)
(:scoring
  (count-once-per-objects throwAttemptFromDoor:yellow)
)
)



(define (game game-id-685) (:domain medium-objects-room-v1)
(:setup
  (exists (?p - flat_block)
    (and
      (game-conserved
        (agent_holds upside_down)
      )
      (and
        (game-optional
          (and
            (in ?p desk)
            (in_motion ?p)
          )
        )
        (game-conserved
          (exists (?r - block)
            (exists (?c - doggie_bed)
              (agent_holds ?c)
            )
          )
        )
      )
      (exists (?l - red_dodgeball ?c - shelf)
        (exists (?b9 ?f - beachball)
          (and
            (game-conserved
              (rug_color_under ?f agent)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrowAttempt
      (exists (?g - building ?d - (either cylindrical_block pyramid_block))
        (then
          (once (in_motion ?d) )
          (hold (game_start ) )
          (once (in_motion ?d) )
        )
      )
    )
  )
)
(:terminal
  (>= (count ballThrowAttempt:orange) (count-measure ballThrowAttempt:basketball:green:red) )
)
(:scoring
  (- (count-measure ballThrowAttempt:yellow:orange) )
)
)



(define (game game-id-686) (:domain many-objects-room-v1)
(:setup
  (exists (?c - (either laptop yellow))
    (and
      (game-conserved
        (not
          (on ?c ?c)
        )
      )
      (game-optional
        (exists (?db - ball)
          (not
            (and
              (not
                (agent_holds ?db)
              )
              (not
                (in_motion ?db)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - teddy_bear)
      (and
        (preference golfballUnderBridgeWithoutTouchingBlock
          (exists (?r - dodgeball ?h - game_object)
            (then
              (hold (> 4 (distance agent agent)) )
              (once (and (agent_holds ?h) (and (not (not (in_motion ?h) ) ) (not (and (adjacent ?h ?h) (agent_holds ?h) ) ) ) ) )
              (once (and (agent_holds ?h) (< (distance ?h bed) (distance ?h ?h)) ) )
            )
          )
        )
        (preference thrownBallHitsBlock
          (exists (?o - dodgeball ?p1 - ball)
            (at-end
              (not
                (game_over )
              )
            )
          )
        )
        (preference dodgeballAndBasketballInBin
          (exists (?c1 - dodgeball ?c4 ?b3 ?c6 - ball)
            (at-end
              (not
                (and
                  (and
                    (not
                      (< 1 (x_position ?c6))
                    )
                    (same_color ?c4 ?b3)
                    (touch agent ?c4)
                  )
                  (and
                    (object_orientation agent ?b3)
                    (in ?c4 ?b3)
                  )
                )
              )
            )
          )
        )
      )
    )
    (preference binKnockedOver
      (exists (?c1 - ball)
        (at-end
          (in_motion ?c1)
        )
      )
    )
  )
)
(:terminal
  (>= (external-forall-maximize (* (* (count-longest dodgeballAndBasketballInBin:blue_dodgeball:basketball) (* (* 20 1 )
            (* 3 (* 2 (count binKnockedOver:blue_pyramid_block) )
            )
          )
        )
        (* (- 3 )
          300
        )
        (count golfballUnderBridgeWithoutTouchingBlock:green)
      )
    )
    5
  )
)
(:scoring
  (count thrownBallHitsBlock:doggie_bed)
)
)



(define (game game-id-687) (:domain medium-objects-room-v1)
(:setup
  (not
    (forall (?h - sliding_door ?l - (either cylindrical_block cube_block))
      (exists (?c6 - chair)
        (exists (?d - hexagonal_bin ?c - hexagonal_bin)
          (game-optional
            (on agent ?l)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballKnocksBlockFromRug
      (exists (?ob - (either top_drawer yellow_cube_block key_chain ball alarm_clock))
        (then
          (hold (not (agent_holds ?ob) ) )
          (hold (in_motion ?ob) )
          (once (< 2 1) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (total-time) 2 )
    (not
      (>= (count ballKnocksBlockFromRug:dodgeball:yellow) (count ballKnocksBlockFromRug:blue_cube_block) )
    )
  )
)
(:scoring
  (count ballKnocksBlockFromRug:bed)
)
)



(define (game game-id-688) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (in_motion ball)
  )
)
(:constraints
  (and
    (preference throwMovesBeachballWithoutKnockingTeddy
      (exists (?h - block)
        (at-end
          (and
            (exists (?h ?o ?w - (either wall laptop pillow laptop))
              (agent_holds ?h)
            )
            (exists (?c - (either teddy_bear golfball) ?h ?g - block ?p1 - hexagonal_bin)
              (and
                (and
                  (in_motion ?p1)
                  (<= (distance agent ?h) (distance ?p1 ?h))
                )
                (opposite ?p1 agent)
                (and
                  (exists (?l4 - game_object)
                    (agent_holds pink)
                  )
                )
              )
            )
            (adjacent bed ?h)
          )
        )
      )
    )
    (preference bookOnDeskShelf
      (exists (?t - (either laptop cube_block rug) ?o - triangular_ramp)
        (then
          (hold (in_motion ?o) )
          (once (and (agent_holds ?o) (same_color ?o ?o) ) )
          (hold (< 0.5 1) )
        )
      )
    )
  )
)
(:terminal
  (> (+ 6 (count-once-per-objects throwMovesBeachballWithoutKnockingTeddy) )
    20
  )
)
(:scoring
  (count throwMovesBeachballWithoutKnockingTeddy:orange)
)
)



(define (game game-id-689) (:domain medium-objects-room-v1)
(:setup
  (exists (?h - dodgeball)
    (forall (?h - cube_block)
      (and
        (game-conserved
          (touch ?h ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - wall)
      (and
        (preference blockToBinFromRug
          (exists (?c - hexagonal_bin ?h - cube_block)
            (then
              (hold (and (in_motion ?h) (rug_color_under ?h pink_dodgeball) ) )
              (once (not (same_type ?h ?h) ) )
              (hold (agent_holds agent) )
              (once (in_motion ?h) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= (count-once-per-external-objects blockToBinFromRug:yellow_cube_block) (total-time) )
)
(:scoring
  (count blockToBinFromRug:pink_dodgeball:dodgeball:dodgeball)
)
)



(define (game game-id-690) (:domain few-objects-room-v1)
(:setup
  (exists (?tb - drawer)
    (and
      (forall (?t2 - teddy_bear)
        (exists (?l2 - desktop ?l - wall)
          (and
            (game-conserved
              (agent_holds ?t2)
            )
          )
        )
      )
      (and
        (and
          (game-conserved
            (is_setup_object blue)
          )
        )
      )
      (game-optional
        (and
          (on ?tb bed)
          (agent_holds ?tb)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference laptopAndBookInPlace
      (exists (?c4 - (either key_chain) ?d2 - doggie_bed)
        (at-end
          (equal_z_position ?d2 desk)
        )
      )
    )
    (preference greenObjectMovedToRoomCenter
      (exists (?b - (either cellphone cd))
        (then
          (hold (and (in_motion ?b) (agent_holds ?b) (rug_color_under agent ?b) ) )
          (hold (exists (?l - block) (on ?b floor) ) )
          (once (in_motion ?b) )
        )
      )
    )
  )
)
(:terminal
  (< (total-score) (count-once-per-objects greenObjectMovedToRoomCenter:basketball:golfball) )
)
(:scoring
  (count-once-per-objects greenObjectMovedToRoomCenter:dodgeball)
)
)



(define (game game-id-691) (:domain many-objects-room-v1)
(:setup
  (exists (?t1 - cube_block ?f - dodgeball ?h - hexagonal_bin)
    (and
      (and
        (exists (?o2 - (either triangle_block book key_chain) ?t - drawer)
          (game-optional
            (not
              (on ?h agent)
            )
          )
        )
      )
      (exists (?b5 - building ?w1 - dodgeball)
        (and
          (and
            (exists (?c ?h ?d - (either cd golfball) ?g - hexagonal_bin)
              (game-optional
                (exists (?c3 - game_object)
                  (in room_center ?w1)
                )
              )
            )
          )
        )
      )
      (game-conserved
        (not
          (agent_holds ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttemptFromBehindBlock
      (exists (?b6 - building ?b - teddy_bear ?b - beachball)
        (then
          (once (and (not (agent_holds ?b) ) (between ?b ?b bed) ) )
          (hold (in_motion room_center) )
          (hold (agent_crouches ) )
        )
      )
    )
    (forall (?b5 - wall)
      (and
        (preference basketMadeFromRug
          (exists (?h - hexagonal_bin)
            (then
              (once (agent_holds ?b5) )
              (once (touch front ?h) )
              (once (forall (?o ?d - dodgeball) (in_motion ?o) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= (total-time) (count basketMadeFromRug:yellow) )
)
(:scoring
  (+ (+ 5 (count basketMadeFromRug:golfball) (* (count throwAttemptFromBehindBlock:green) (count basketMadeFromRug:dodgeball) )
    )
    (count basketMadeFromRug:basketball)
  )
)
)



(define (game game-id-692) (:domain few-objects-room-v1)
(:setup
  (forall (?b4 - (either dodgeball alarm_clock cube_block hexagonal_bin) ?c2 - hexagonal_bin)
    (not
      (forall (?c3 - hexagonal_bin ?r1 - hexagonal_bin)
        (game-conserved
          (not
            (not
              (in_motion ?c2)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference pyramidBlockAtopTowerAtEnd
      (exists (?b3 - (either cd floor) ?c - ball)
        (then
          (once (in_motion ?c) )
          (hold-while (and (same_object agent upright) (<= 1 (distance ?c ?c)) (between ?c ?c ?c) (adjacent_side ?c ?c ?c) ) (not (adjacent_side desk ?c ?c) ) (between rug top_shelf brown) (agent_holds desk) )
        )
      )
    )
    (preference objectWithMatchingColor
      (exists (?b - shelf ?o - hexagonal_bin)
        (then
          (once (on ?o ?o) )
          (hold (not (on ?o ?o) ) )
          (once (in_motion ?o) )
        )
      )
    )
    (forall (?r - dodgeball)
      (and
        (preference beachballOnRug
          (exists (?t2 - beachball ?h - hexagonal_bin)
            (then
              (once (not (in_motion ?h) ) )
              (once (and (same_object ?h ?h) (not (not (not (agent_holds door) ) ) ) ) )
              (hold (not (in ?h agent) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (= (count pyramidBlockAtopTowerAtEnd:hexagonal_bin) 3 )
  )
)
(:scoring
  (count beachballOnRug:blue_dodgeball)
)
)



(define (game game-id-693) (:domain few-objects-room-v1)
(:setup
  (exists (?t - hexagonal_bin ?p3 - chair)
    (forall (?o1 - pyramid_block)
      (game-conserved
        (in_motion ?p3)
      )
    )
  )
)
(:constraints
  (and
    (forall (?b3 - cube_block)
      (and
        (preference throwToRampToBin
          (exists (?b - game_object)
            (at-end
              (in pink ?b3)
            )
          )
        )
      )
    )
    (preference cubeBlockThrownToTopShelf
      (exists (?l - curved_wooden_ramp)
        (then
          (once (on ?l bed) )
          (hold (not (in_motion ?l) ) )
          (once (and (not (not (agent_holds bed) ) ) (not (and (and (in_motion ?l) (agent_holds ?l) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (total-score) )
)
(:scoring
  (count-same-positions cubeBlockThrownToTopShelf:golfball)
)
)



(define (game game-id-694) (:domain few-objects-room-v1)
(:setup
  (exists (?w2 - dodgeball)
    (and
      (and
        (game-conserved
          (on ?w2 rug)
        )
        (forall (?b - (either bridge_block top_drawer pillow yellow key_chain ball book) ?l - hexagonal_bin)
          (game-conserved
            (not
              (agent_holds agent)
            )
          )
        )
        (and
          (exists (?b - (either triangle_block pillow))
            (and
              (game-conserved
                (= 1 (distance ?b ?w2))
              )
            )
          )
          (and
            (game-conserved
              (agent_holds ?w2)
            )
          )
        )
      )
      (and
        (exists (?w2 - hexagonal_bin)
          (forall (?b - ball)
            (forall (?c5 - shelf)
              (game-conserved
                (and
                  (and
                    (in_motion room_center)
                    (and
                      (and
                        (agent_crouches )
                        (agent_crouches )
                      )
                      (on ?c5 ?w2)
                    )
                  )
                  (in_motion ?b)
                )
              )
            )
          )
        )
      )
      (forall (?b - game_object ?r - block ?c - hexagonal_bin ?o - teddy_bear)
        (forall (?b - (either dodgeball cube_block dodgeball main_light_switch))
          (game-conserved
            (in ?b ?b)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockPlacedInBuilding
      (exists (?s - block ?d1 - (either key_chain cd) ?h - pillow)
        (then
          (hold (same_object ?h ?h) )
          (hold (in ?h ?h) )
        )
      )
    )
    (preference throwAttemptKnocksBlock
      (exists (?b - building)
        (then
          (once (and (and (and (not (and (<= (distance front ?b) (distance ?b ?b)) (and (game_over ) (not (and (adjacent agent ?b) (not (agent_holds ?b) ) ) ) ) ) ) (same_color ?b ?b) ) (not (or (on ?b ?b) (adjacent blinds ?b) (in_motion ?b) ) ) (< 1 4) ) (not (in_motion ?b) ) ) )
          (hold (exists (?ob ?r ?l ?w1 - doggie_bed) (agent_holds east_sliding_door) ) )
          (hold (on ?b ?b) )
        )
      )
    )
    (preference failedThrowToBin
      (exists (?h - (either blue_cube_block yellow_cube_block) ?o ?h - bridge_block)
        (then
          (hold (and (in ?o ?h) (agent_holds ?h) ) )
          (hold-while (not (in_motion ?h) ) (in_motion ?h) )
          (hold (agent_holds ?o) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (total-score) (count blockPlacedInBuilding:yellow) )
    (> (+ (count-once-per-objects failedThrowToBin:bed) (count-once-per-objects blockPlacedInBuilding:pyramid_block:orange) )
      (* (count-once-per-objects failedThrowToBin:book) 6 2 (* 10 (count throwAttemptKnocksBlock:basketball) )
        2
        (count-once-per-external-objects failedThrowToBin:red)
      )
    )
  )
)
(:scoring
  (+ (count throwAttemptKnocksBlock:beachball:golfball:yellow) (count throwAttemptKnocksBlock:hexagonal_bin) )
)
)



(define (game game-id-695) (:domain medium-objects-room-v1)
(:setup
  (exists (?r1 - hexagonal_bin ?b - red_dodgeball)
    (game-optional
      (agent_holds ?b)
    )
  )
)
(:constraints
  (and
    (forall (?w1 - cube_block)
      (and
        (preference thrownBallReachesEnd
          (exists (?c - cube_block ?r1 - dodgeball)
            (at-end
              (not
                (on desk ?r1)
              )
            )
          )
        )
        (preference blockPickedUp
          (exists (?h - drawer)
            (then
              (once (not (between front ?h agent) ) )
              (hold (in_motion ?w1) )
              (once (in ?w1 ?w1) )
            )
          )
        )
        (preference throwInBin
          (exists (?o - pyramid_block)
            (then
              (hold (in_motion ?o) )
              (once (same_color ?o ?o) )
              (hold-while (agent_holds ?w1) (on ?o ?o) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (- (count-once-per-objects blockPickedUp:book) )
    (total-score)
  )
)
(:scoring
  (count-once-per-objects thrownBallReachesEnd:green)
)
)



(define (game game-id-696) (:domain medium-objects-room-v1)
(:setup
  (forall (?c2 - ball)
    (game-conserved
      (and
        (and
          (agent_holds ?c2)
          (in ?c2 ?c2)
        )
        (in_motion ?c2)
        (in_motion back)
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - hexagonal_bin)
      (and
        (preference binKnockedOver
          (exists (?d - doggie_bed)
            (then
              (once (and (agent_holds desk) (not (and (agent_holds ?d) (not (in_motion ?d) ) ) ) ) )
              (hold (not (< 1 (x_position floor)) ) )
              (once (agent_crouches ) )
            )
          )
        )
        (preference objectInBuilding
          (exists (?c ?r2 - hexagonal_bin ?l4 - (either side_table floor pillow))
            (then
              (once (and (and (in_motion desk) (on ?d ?l4) ) (not (adjacent_side room_center ?l4 ?l4) ) (not (< 0.5 (distance ?d ?d)) ) (= 1 (distance ?l4 ?d)) ) )
              (hold (not (and (= 2 1) (not (not (in_motion ?l4) ) ) ) ) )
              (once-measure (and (is_setup_object ?d) (and (opposite rug ?l4) (in ?l4 ?l4) (and (and (is_setup_object ?l4) (and (and (not (in ?l4 desk) ) (in_motion ?d) ) (on ?d ?l4) (agent_holds ?d) (and (adjacent ?d ?l4) (< 9 (distance ?l4 front_left_corner)) ) (agent_holds ?d) (and (< 1 (distance ?l4 ?d)) (or (adjacent_side ?d ?l4 ?d) (object_orientation ?d ?d) ) ) (and (touch ?l4 desk) (not (on ?d ?l4) ) ) ) (not (in_motion door) ) (in_motion bed) ) (in ?d ?l4) ) ) ) (distance ?l4 desk) )
            )
          )
        )
      )
    )
    (preference brownObjectMovedToRoomCenter
      (exists (?s ?t1 ?c ?h ?b ?b8 - cylindrical_block)
        (at-end
          (game_start )
        )
      )
    )
  )
)
(:terminal
  (>= 1 (count-once-per-objects binKnockedOver:dodgeball) )
)
(:scoring
  (* 3 10 )
)
)



(define (game game-id-697) (:domain few-objects-room-v1)
(:setup
  (exists (?o - hexagonal_bin)
    (game-optional
      (in ?o ?o)
    )
  )
)
(:constraints
  (and
    (forall (?s - cylindrical_block)
      (and
        (preference itemInClosedDrawerAtEnd
          (exists (?b - ball)
            (then
              (once (not (and (exists (?r - pyramid_block) (in_motion ?b) ) (and (exists (?l2 - color) (agent_holds ?s) ) (in_motion ?s) (not (in_motion ?s) ) ) ) ) )
              (once (and (not (not (and (exists (?t2 - (either beachball cube_block)) (adjacent ?s rug) ) (not (and (same_color agent ?b) (and (not (on agent desk) ) (on ?s ?s) ) ) ) (and (in_motion ?b) (agent_holds bed) ) ) ) ) (and (not (and (and (adjacent_side ?s agent ?b) (exists (?o ?c - doggie_bed) (in_motion ?b) ) ) (not (agent_holds ?b) ) ) ) (or (= (distance ?s ?s) 6) (not (agent_holds pink) ) ) (not (agent_holds ?s) ) (toggled_on ?b) (in_motion ?s) (in_motion ?b) ) ) )
              (hold (and (same_color ?s ?s) ) )
            )
          )
        )
        (preference pinkObjectMovedToRoomCenter
          (then
            (once (agent_holds desk) )
            (once (and (agent_holds ?s) (not (object_orientation ?s ?s) ) (in_motion front) ) )
          )
        )
      )
    )
    (preference nonBlockPlacedInBuilding
      (exists (?c - triangular_ramp)
        (then
          (once (not (and (not (and (in_motion ?c) (adjacent ?c ?c) ) ) (agent_holds ?c) ) ) )
          (once (and (>= (distance_side ?c ?c ?c) (distance ?c ?c)) (on pink_dodgeball ?c) ) )
          (hold-while (in_motion ?c) (adjacent ?c ?c) (on ?c ?c) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (total-time) (count-once-per-objects pinkObjectMovedToRoomCenter:yellow) )
    (or
      (>= (* 10 (* (count-once-per-external-objects itemInClosedDrawerAtEnd:hexagonal_bin:brown) (count pinkObjectMovedToRoomCenter:blue_cube_block:pink) (count-once pinkObjectMovedToRoomCenter:dodgeball) (* (+ 3 (+ 3 (* (count-once itemInClosedDrawerAtEnd:red) 6 )
                )
              )
              1
            )
            2
          )
        )
        (count-shortest pinkObjectMovedToRoomCenter:hexagonal_bin)
      )
      (>= (total-time) (* 50 (* (+ (external-forall-maximize (count nonBlockPlacedInBuilding:doggie_bed) ) 2 )
            (* 3 (count-once-per-objects pinkObjectMovedToRoomCenter:doggie_bed) 2 )
          )
        )
      )
      (>= (count pinkObjectMovedToRoomCenter:golfball:pink_dodgeball) (total-time) )
    )
    (or
      (>= (count-once-per-objects pinkObjectMovedToRoomCenter:hexagonal_bin) (count-once nonBlockPlacedInBuilding:basketball:dodgeball) )
      (>= (count-once-per-objects nonBlockPlacedInBuilding:basketball:doggie_bed:yellow_pyramid_block) (count pinkObjectMovedToRoomCenter:pink_dodgeball) )
      (or
        (or
          (> (count itemInClosedDrawerAtEnd:blue_dodgeball:doggie_bed) (count nonBlockPlacedInBuilding:dodgeball) )
          (>= (total-time) (- (* 5 1 )
            )
          )
          (>= (count-once-per-external-objects itemInClosedDrawerAtEnd:cube_block:basketball) (total-score) )
        )
        (> (* (count-once-per-objects nonBlockPlacedInBuilding:yellow:basketball) (count-once nonBlockPlacedInBuilding:beachball:dodgeball) )
          (external-forall-maximize
            (count-once-per-objects itemInClosedDrawerAtEnd:doggie_bed)
          )
        )
      )
    )
  )
)
(:scoring
  (count-once-per-objects itemInClosedDrawerAtEnd:blue_dodgeball)
)
)



(define (game game-id-698) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (in_motion agent)
  )
)
(:constraints
  (and
    (preference towerFallsWhileBuilding
      (exists (?t1 ?r ?b1 ?w1 - pyramid_block)
        (then
          (hold (and (in_motion ?b1) (in_motion ?t1) ) )
          (once (not (in_motion ?t1) ) )
          (hold-while (agent_holds top_drawer) (in_motion ?w1) )
        )
      )
    )
  )
)
(:terminal
  (>= (- (count towerFallsWhileBuilding:dodgeball) (count towerFallsWhileBuilding:pink:dodgeball) ) (count-unique-positions towerFallsWhileBuilding:cylindrical_block) )
)
(:scoring
  (count towerFallsWhileBuilding:blue_cube_block)
)
)



(define (game game-id-699) (:domain many-objects-room-v1)
(:setup
  (exists (?d - wall)
    (and
      (game-optional
        (on ?d ?d)
      )
    )
  )
)
(:constraints
  (and
    (preference bookOnDeskShelf
      (exists (?c2 - hexagonal_bin)
        (then
          (hold-while (agent_holds floor) (same_color ?c2 ?c2) (equal_x_position ?c2 ?c2) (and (in_motion ?c2) (not (on ?c2 ?c2) ) ) )
          (once (not (and (not (not (exists (?w2 - doggie_bed ?o - ball) (in_motion ?c2) ) ) ) (agent_holds floor) ) ) )
          (once (agent_holds side_table) )
        )
      )
    )
    (preference throwAttempt
      (exists (?b8 - cube_block)
        (then
          (hold (not (agent_holds ?b8) ) )
          (hold (not (or (or (and (not (agent_holds room_center) ) (and (agent_holds ?b8) (and (agent_holds ?b8) (not (in ?b8 desk) ) ) ) ) (and (not (in_motion ?b8) ) (agent_holds bed) ) ) (and (exists (?t - flat_block ?o2 - cylindrical_block) (and (not (object_orientation bed ?o2) ) (on ?b8 rug) ) ) (agent_holds ?b8) ) ) ) )
          (hold (in_motion ?b8) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (total-score) (count bookOnDeskShelf:blue_cube_block) )
  )
)
(:scoring
  (count throwAttempt:dodgeball)
)
)



(define (game game-id-700) (:domain many-objects-room-v1)
(:setup
  (exists (?h ?c - hexagonal_bin)
    (game-conserved
      (in ?h agent)
    )
  )
)
(:constraints
  (and
    (forall (?b - hexagonal_bin ?o2 - pillow)
      (and
        (preference pillowThrownToDoggieBed
          (exists (?r1 ?d - game_object ?t - hexagonal_bin)
            (then
              (hold (and (or (and (and (faces upright ?t) (not (toggled_on ?o2) ) ) (and (agent_holds ?t) ) (and (not (faces ?o2 ?o2) ) (not (agent_holds ?t) ) ) ) (not (not (same_color pink_dodgeball ?o2) ) ) (agent_holds ?t) ) (agent_holds ?o2) ) )
              (once (not (not (in_motion ?t) ) ) )
              (hold (agent_holds ?t) )
            )
          )
        )
        (preference tanObjectMovedToRoomCenter
          (exists (?c - yellow_cube_block ?w - building)
            (then
              (once (and (and (same_color ?w ?w) (forall (?d - shelf) (not (<= (distance ?w ?w) 1) ) ) ) (and (on ?o2 ?w) (agent_holds desk) ) ) )
              (once (touch rug ?w) )
              (hold (and (agent_holds ?o2) (agent_holds ?o2) ) )
            )
          )
        )
        (preference dodgeballFromDeskToTarget
          (exists (?b - wall)
            (at-end
              (not
                (and
                  (not
                    (and
                      (and
                        (and
                          (and
                            (not
                              (agent_holds ?o2)
                            )
                          )
                          (not
                            (on ?o2 ?b)
                          )
                        )
                        (not
                          (in_motion ?o2)
                        )
                      )
                      (and
                        (not
                          (agent_holds ?o2)
                        )
                        (in ?b ?b)
                        (in_motion ?b)
                        (< (distance ?o2 ?b) (distance desk ?b))
                      )
                      (forall (?r - hexagonal_bin)
                        (agent_holds ?o2)
                      )
                    )
                  )
                  (agent_holds ?o2)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (+ 10 2 )
      (total-time)
    )
  )
)
(:scoring
  (count-once tanObjectMovedToRoomCenter:pink)
)
)



(define (game game-id-701) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (in_motion green_golfball)
  )
)
(:constraints
  (and
    (forall (?b9 - cube_block)
      (and
        (preference blindsOpened
          (at-end
            (on ?b9 ?b9)
          )
        )
        (preference throwAttemptKnocksBlock
          (exists (?c1 - (either triangle_block basketball tall_cylindrical_block))
            (then
              (once (on agent ?c1) )
              (once (on ?b9 ?b9) )
              (once (touch ?b9 room_center) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 4 7 )
)
(:scoring
  (* (count throwAttemptKnocksBlock:white:purple) 1 )
)
)



(define (game game-id-702) (:domain medium-objects-room-v1)
(:setup
  (forall (?c - beachball)
    (game-conserved
      (and
        (agent_crouches )
      )
    )
  )
)
(:constraints
  (and
    (preference cubeThrownToBin
      (exists (?b - dodgeball)
        (then
          (once (exists (?w - drawer ?c - hexagonal_bin ?b9 - dodgeball ?h - dodgeball) (not (not (in door ?b) ) ) ) )
          (hold (adjacent ?b ?b) )
          (once (touch ?b ?b) )
        )
      )
    )
  )
)
(:terminal
  (<= (count-once-per-objects cubeThrownToBin:hexagonal_bin:yellow) 10 )
)
(:scoring
  (* (count-once-per-objects cubeThrownToBin:yellow) (* 1 (count cubeThrownToBin:cube_block) )
  )
)
)



(define (game game-id-703) (:domain medium-objects-room-v1)
(:setup
  (exists (?p - curved_wooden_ramp ?b - triangular_ramp ?b - dodgeball ?b10 - hexagonal_bin)
    (game-conserved
      (and
        (and
          (and
            (in_motion ?b10)
            (game_start )
          )
          (and
            (in_motion ?b10)
          )
        )
        (agent_holds ?b10)
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallFromOtherBallToBin
      (exists (?b6 - (either laptop cube_block) ?h - book)
        (at-end
          (adjacent ?h agent)
        )
      )
    )
  )
)
(:terminal
  (> 100 (count-once throwBallFromOtherBallToBin:dodgeball) )
)
(:scoring
  (+ 10 (count-once throwBallFromOtherBallToBin:dodgeball) )
)
)



(define (game game-id-704) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds pink_dodgeball)
  )
)
(:constraints
  (and
    (forall (?t - dodgeball ?c5 - (either blue_cube_block yellow_cube_block cylindrical_block))
      (and
        (preference failedThrowAttempt
          (exists (?g - sliding_door)
            (then
              (once (adjacent_side ?g ?g ?g) )
              (once (not (agent_holds ?g) ) )
              (once (agent_holds ?g) )
            )
          )
        )
      )
    )
    (forall (?b - dodgeball)
      (and
        (preference towerFallsWhileBuilding
          (exists (?h - dodgeball)
            (then
              (hold-while (and (and (and (in_motion ?h) (same_type ?h pink_dodgeball) ) (and (and (touch ?b ?b) (agent_holds side_table) ) (in_motion ?b) ) ) (not (in ?b ?h) ) (and (agent_holds ?h) (not (in ?b ?h) ) ) ) (agent_holds ?h) )
              (once (in ?h ?b) )
              (once (and (agent_holds ?h) (not (agent_crouches ) ) ) )
            )
          )
        )
        (preference itemsTurnedOff
          (exists (?b7 - golfball)
            (then
              (hold (faces ?b7 ?b) )
              (hold (not (and (on ?b7 ?b) (and (agent_holds ?b7) (not (in_motion front) ) ) (agent_holds ?b) ) ) )
              (hold (touch ?b ?b7) )
            )
          )
        )
        (preference cubeBlockInBuilding
          (exists (?d1 - dodgeball)
            (at-end
              (or
                (in_motion ?d1)
                (not
                  (< 10 (distance ?d1 bed))
                )
              )
            )
          )
        )
      )
    )
    (forall (?o - building)
      (and
        (preference bigObjectThrownToBed
          (then
            (once (not (in_motion ?o) ) )
            (once (and (agent_holds ?o) (not (not (agent_holds desk) ) ) ) )
            (once (and (agent_holds blue) (in ?o ?o) ) )
          )
        )
        (preference ballNeverThrown
          (exists (?d - shelf)
            (then
              (once (agent_holds ?d) )
              (once (on ?d desk) )
              (once (and (on ?o ?o) (not (in_motion ?o) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (total-score) 3 )
)
(:scoring
  (count cubeBlockInBuilding:dodgeball)
)
)



(define (game game-id-705) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?w2 - doggie_bed)
      (exists (?l3 - wall ?o - (either book))
        (exists (?o2 - game_object ?h - color)
          (and
            (game-optional
              (or
                (and
                  (exists (?o - building ?b8 - dodgeball)
                    (on ?o ?b8)
                  )
                  (on ?w2 ?h)
                )
                (in_motion door)
              )
            )
            (game-conserved
              (< 1 (distance ?o bed))
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownThroughRampAndBlocksToBin
      (exists (?h - building)
        (then
          (once (object_orientation ?h ?h) )
          (once (exists (?b6 - game_object ?s - beachball) (not (in_motion ?s) ) ) )
          (once (agent_holds ?h) )
        )
      )
    )
  )
)
(:terminal
  (not
    (> 20 (count-once-per-objects ballThrownThroughRampAndBlocksToBin:beachball) )
  )
)
(:scoring
  (count ballThrownThroughRampAndBlocksToBin:hexagonal_bin:yellow)
)
)



(define (game game-id-706) (:domain many-objects-room-v1)
(:setup
  (not
    (exists (?b - curved_wooden_ramp)
      (forall (?l2 - hexagonal_bin)
        (exists (?c - hexagonal_bin)
          (game-conserved
            (object_orientation ?l2 ?c)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToBinFromDistance
      (exists (?l ?b ?h - dodgeball)
        (then
          (once (adjacent_side agent ?b ?b) )
          (hold-while (not (in_motion bridge_block) ) (exists (?p ?p3 ?b ?r1 ?h ?b5 - hexagonal_bin ?t - hexagonal_bin) (in ?b ?t) ) (in_motion ?b) (same_color ?h ?b) )
          (hold-while (agent_holds agent) (adjacent ?h ?h) (not (and (is_setup_object bed) (not (and (not (on ?b ?l) ) (agent_holds ?h) (in_motion door) (in ?h agent) (on desk ?l) (agent_holds ?h) ) ) ) ) )
        )
      )
    )
    (forall (?o - block)
      (and
        (preference throwAttemptFromBehindBlock
          (exists (?b5 - (either golfball wall))
            (then
              (once (and (and (toggled_on ?b5) (agent_holds ?b5) ) (on agent ?o) ) )
              (hold-while (agent_holds ?b5) (adjacent ?o ?b5) (in_motion ?o) )
              (once (in_motion ?b5) )
            )
          )
        )
        (preference throwKnocksOverBear
          (exists (?c - (either doggie_bed golfball))
            (then
              (once (on green ?o) )
              (once (in ?o room_center) )
              (once (and (and (on room_center ?c) (in_motion ?c) (forall (?g - hexagonal_bin) (adjacent_side ?o ?o ?o) ) ) (in_motion ?c) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (/ 0.5 (* (count-once throwAttemptFromBehindBlock:blue_dodgeball:beachball) (external-forall-minimize (count throwKnocksOverBear:pink) ) )
      )
      (external-forall-maximize
        (count throwAttemptFromBehindBlock:beachball)
      )
    )
    (> (total-time) (total-score) )
    (or
      (or
        (or
          (>= 8 (total-score) )
          (>= 3 100 )
        )
      )
      (>= (total-score) (count-once-per-objects throwToBinFromDistance:yellow) )
      (> (count throwKnocksOverBear:alarm_clock) 15 )
    )
  )
)
(:scoring
  (count-once-per-objects throwKnocksOverBear:pink)
)
)



(define (game game-id-707) (:domain few-objects-room-v1)
(:setup
  (exists (?c3 - (either yellow pyramid_block cd cellphone))
    (game-conserved
      (agent_holds ?c3)
    )
  )
)
(:constraints
  (and
    (forall (?h - hexagonal_bin)
      (and
        (preference thrownBallHitsBlock
          (exists (?b - hexagonal_bin ?d2 - hexagonal_bin)
            (then
              (hold-while (not (in_motion south_west_corner) ) (and (not (and (not (agent_holds ?h) ) (not (agent_holds ?h) ) ) ) (adjacent ?d2 ?d2) ) )
              (hold-while (in_motion ?h) (and (on room_center room_center) (agent_holds ?d2) ) )
              (once (object_orientation ?h room_center) )
            )
          )
        )
      )
    )
    (forall (?bl - hexagonal_bin)
      (and
        (preference blockOnBlockInTowerAtEnd
          (exists (?c3 - curved_wooden_ramp)
            (then
              (hold (and (and (agent_holds ?c3) (not (between ?c3 ?c3 rug) ) ) (not (not (adjacent ?bl ?c3) ) ) ) )
              (hold (and (= 6) (same_color floor ?c3) ) )
              (once (and (and (and (agent_holds block) (or (> (distance ?c3 ?bl) (distance bed ?c3)) (and (and (agent_holds ?bl) (and (adjacent ?c3 ?bl) (in ?c3 ?c3) (< (distance ?bl ?bl) (distance ?bl room_center)) ) (is_setup_object desk) ) (and (exists (?h - block) (agent_holds ?c3) ) (and (not (and (and (not (adjacent ?c3 bed) ) (agent_holds ?bl) ) (touch ?c3 ?c3) ) ) (and (exists (?o - chair) (and (open ?c3) (adjacent_side ?bl ?c3 ?o) ) ) (not (is_setup_object pink) ) ) ) ) (not (adjacent ?c3 ?c3) ) (in_motion desk) ) (agent_holds ?c3) ) (agent_holds ?c3) ) (in_motion ?bl) ) (agent_holds ?c3) ) )
            )
          )
        )
      )
    )
    (forall (?g - hexagonal_bin)
      (and
        (preference cubeBlockThrownToTopShelf
          (exists (?c - hexagonal_bin)
            (then
              (hold (on ?c ?g) )
              (once (in_motion ?c) )
              (once (not (on ?c ?g) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (- (/ (+ (* (count-once-per-external-objects cubeBlockThrownToTopShelf:dodgeball) 2 )
          60
          (count blockOnBlockInTowerAtEnd)
          (count-shortest cubeBlockThrownToTopShelf:book:dodgeball:basketball)
        )
        (* (- (count blockOnBlockInTowerAtEnd:cube_block) (count blockOnBlockInTowerAtEnd:golfball) ) (* 2 5 )
        )
      )
    )
    (count cubeBlockThrownToTopShelf:dodgeball)
  )
)
(:scoring
  (* 20 5 )
)
)



(define (game game-id-708) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (exists (?b - ball)
      (in ?b ?b)
    )
  )
)
(:constraints
  (and
    (forall (?h - dodgeball)
      (and
        (preference pinkObjectMovedToRoomCenter
          (exists (?p - ball)
            (then
              (hold (in_motion ?h) )
              (hold (in_motion ?p) )
              (once (agent_holds ?h) )
            )
          )
        )
        (preference ballThrownThroughRampAndBlocksToBin
          (exists (?o - doggie_bed ?r - ball)
            (then
              (once (on ?h ?h) )
              (once (and (agent_holds ?r) (not (and (and (and (rug_color_under agent ?r) (and (in ?r ?r) (exists (?s - hexagonal_bin) (not (in_motion ?r) ) ) ) ) (< 2 (distance ?r ?h)) ) (on agent ?r) (not (and (in ?h ?h) ) ) (and (not (agent_holds ?h) ) (agent_holds ?h) (not (not (in_motion west_wall) ) ) ) (same_color ?h ?r) (and (and (agent_holds ?h) (in_motion ?r) ) (exists (?b1 - teddy_bear ?p3 - hexagonal_bin) (in_motion ?h) ) ) (faces ?h ?r) (agent_holds desk) ) ) ) )
              (hold (not (exists (?w - hexagonal_bin ?r - (either cylindrical_block hexagonal_bin)) (between agent ?h ?h) ) ) )
              (once-measure (not (on ?h ?h) ) (distance ?r ?h) )
              (hold (in_motion ?r) )
              (hold (agent_holds ?r) )
            )
          )
        )
        (preference ballThrownToWallToAgent
          (exists (?b - hexagonal_bin)
            (then
              (once (and (adjacent ?b ?b) (not (and (in_motion ?h) (not (not (adjacent ?b ?h) ) ) ) ) ) )
              (hold-while (and (touch ?h ?h) (and (agent_holds front) (adjacent_side ?b door ?b ?h) ) ) (and (in_motion desk) (and (agent_holds ?h) (touch ?h agent) (< 10 (distance ?b ?h)) ) ) (> (distance ?b agent) 1) (not (in_motion ?b) ) )
              (once (object_orientation ?h agent) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (total-score) (count ballThrownToWallToAgent:beachball) )
    (= (total-score) (total-score) )
  )
)
(:scoring
  (* 10 (- (external-forall-maximize (- 10 )
      )
    )
  )
)
)



(define (game game-id-709) (:domain few-objects-room-v1)
(:setup
  (exists (?b - dodgeball)
    (game-optional
      (adjacent desk ?b)
    )
  )
)
(:constraints
  (and
    (preference throwToRampToBin
      (exists (?b8 - cylindrical_block ?c5 - wall)
        (then
          (once (on ?c5 room_center) )
          (once (and (in_motion ?c5) (in_motion ?c5) ) )
          (once (in_motion ?c5) )
          (hold (in ?c5 ?c5) )
          (once (between ?c5 bed ?c5) )
        )
      )
    )
    (forall (?b ?ob ?b ?p2 - flat_block ?c - curved_wooden_ramp)
      (and
        (preference objectMovedRoomSide
          (exists (?h - cube_block)
            (then
              (hold-while (agent_holds floor) (agent_holds rug) )
              (hold (in ?c ?h) )
            )
          )
        )
        (preference towerFallsWhileBuilding
          (exists (?h - golfball ?w2 - dodgeball)
            (at-end
              (agent_holds ?w2)
            )
          )
        )
      )
    )
    (preference throwAttempt
      (exists (?h ?o - ball ?b10 - dodgeball)
        (then
          (hold (and (on agent ?b10) (not (agent_holds rug) ) (not (and (faces ?b10 ?b10) (on ?b10 ?b10) ) ) (and (not (rug_color_under ?b10 ?b10) ) (and (in_motion ?b10) (not (exists (?b ?s ?d ?c3 - hexagonal_bin) (agent_holds ?d) ) ) ) ) ) )
          (hold-while (and (= (distance ?b10 ?b10) 1) (in_motion bed) ) (and (on ?b10 ?b10) (same_color ?b10 ?b10) (< (building_size ?b10) 6) ) (open ?b10) )
          (hold-while (on ?b10 room_center) (agent_holds desk) )
          (once (and (on ?b10 ?b10) (agent_holds ?b10) (in_motion ?b10) ) )
        )
      )
    )
    (preference objectInBuilding
      (exists (?b2 - doggie_bed)
        (then
          (once (agent_holds ?b2) )
          (hold-while (on ?b2 ?b2) (on ?b2 room_center) (not (not (not (in ?b2 ?b2) ) ) ) (not (agent_holds ?b2) ) )
          (hold (same_color ?b2 rug) )
          (hold (agent_holds front) )
          (hold (not (not (and (and (in_motion ?b2) (not (in_motion upright) ) (agent_holds ?b2) ) (agent_holds ?b2) (touch ?b2 ?b2) ) ) ) )
          (once (object_orientation ?b2 ?b2) )
        )
      )
    )
  )
)
(:terminal
  (> 10 (total-time) )
)
(:scoring
  (* (+ (count-measure towerFallsWhileBuilding:purple:blue_dodgeball) 40 )
    1
    (+ 1 2 )
  )
)
)



(define (game game-id-710) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (in_motion desk)
  )
)
(:constraints
  (and
    (forall (?o1 - dodgeball ?h - pillow)
      (and
        (preference throwBallToDoggieBedOffWall
          (exists (?b4 - dodgeball)
            (then
              (once (not (and (exists (?r - (either cd floor game_object)) (exists (?h - (either pillow pyramid_block) ?o2 - block) (agent_holds ?b4) ) ) ) ) )
              (hold (and (and (touch ?b4 ?b4) (not (in_motion ?h) ) (and (in_motion ?b4) (not (in_motion bed) ) ) ) (object_orientation ?b4 ?h) (not (exists (?h - doggie_bed ?b - triangular_ramp) (in_motion green_golfball) ) ) ) )
              (hold-while (not (agent_holds ?h) ) (and (not (agent_holds ?h) ) (and (< 2 (distance ?h agent)) (forall (?c2 - hexagonal_bin ?h - shelf ?b5 - hexagonal_bin) (not (on ?b5 pink) ) ) ) (touch ?h ?h) (game_over ) (and (not (agent_holds agent) ) (in_motion ?b4) ) (and (not (above ?h ?h) ) (and (in_motion ?b4) (not (on ?h ?h) ) ) ) (faces ?b4 ?h) (on ?h ?h) (and (in agent ?b4) ) (on ?b4 agent) ) )
            )
          )
        )
        (preference throwBallToBinOffObject
          (exists (?r1 - cube_block)
            (then
              (once (< (distance ?h ?r1) 1) )
              (once (not (in_motion desk) ) )
              (once (toggled_on room_center) )
            )
          )
        )
      )
    )
    (preference dropAttempt
      (exists (?s - ball)
        (then
          (hold (in_motion ?s) )
          (hold (not (not (and (not (in_motion ?s) ) ) ) ) )
          (once (in_motion ?s) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 2 )
)
(:scoring
  (count-once throwBallToBinOffObject:basketball)
)
)



(define (game game-id-711) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (and
      (not
        (agent_holds bed)
      )
    )
  )
)
(:constraints
  (and
    (preference throwMissesBin
      (exists (?b - (either basketball bridge_block))
        (then
          (once (in_motion ?b) )
          (once (in_motion top_shelf) )
          (once (in_motion green_golfball) )
        )
      )
    )
    (preference woodenBlockMovedFromRugToDesk
      (exists (?w1 - block)
        (then
          (once (in_motion ?w1) )
          (hold-while (in_motion ?w1) (agent_holds ?w1) )
          (once (and (in ?w1 ?w1) (and (exists (?h - game_object ?d - shelf) (< (distance ?w1 ?w1) 6) ) (and (or (agent_holds ?w1) (agent_holds front_left_corner) ) (and (and (agent_holds rug) (in_motion ?w1) ) (above ?w1 ?w1) ) ) ) ) )
        )
      )
    )
    (preference smallObjectThrownToBed
      (exists (?g - dodgeball ?b10 - game_object ?b - (either cd pyramid_block))
        (then
          (once (and (and (between ?b rug ?b) (and (in ?b ?b) (agent_holds ?b) ) ) (touch ?b ?b) ) )
          (hold-while (not (and (not (agent_holds ?b) ) (in_motion ?b) ) ) (in agent upside_down) )
          (once (is_setup_object ?b) )
        )
      )
    )
  )
)
(:terminal
  (<= (count-once-per-objects woodenBlockMovedFromRugToDesk:golfball) (total-score) )
)
(:scoring
  (= 3 )
)
)



(define (game game-id-712) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (and
        (exists (?b - dodgeball)
          (game-conserved
            (and
              (and
                (not
                  (and
                    (agent_holds agent)
                    (not
                      (in_motion ?b)
                    )
                  )
                )
                (agent_holds front)
              )
              (in ?b ?b)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h ?p2 - (either bridge_block key_chain))
      (and
        (preference throwAttemptFromDoor
          (then
            (once (not (agent_holds ?h) ) )
            (once (not (agent_holds ?h) ) )
            (once (and (and (broken ?h) (agent_holds ?h) ) (agent_holds agent) ) )
          )
        )
      )
    )
    (preference throwOverRamp
      (exists (?b - cube_block)
        (then
          (hold (not (not (in ?b desk) ) ) )
          (hold (adjacent agent ?b) )
          (once (not (rug_color_under ?b ?b) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count throwAttemptFromDoor:dodgeball:yellow_pyramid_block) (count throwOverRamp:red) )
)
(:scoring
  (- (external-forall-maximize (count throwOverRamp:beachball) ) )
)
)



(define (game game-id-713) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (exists (?o - drawer)
      (or
        (in_motion agent)
        (agent_holds ?o)
      )
    )
  )
)
(:constraints
  (and
    (preference golfballLandsInBinThroughRamp
      (exists (?t2 - hexagonal_bin ?c - (either cylindrical_block ball))
        (then
          (hold (in_motion ?c) )
          (once (agent_holds ?c) )
          (once (not (on ?c ?c) ) )
        )
      )
    )
    (forall (?r1 - hexagonal_bin ?h - (either hexagonal_bin alarm_clock key_chain))
      (and
        (preference throwMovesBeachballWithoutKnockingTeddy
          (exists (?d2 - chair ?r2 - ball)
            (then
              (once (not (and (not (and (and (agent_holds ?h) (in ?h ?h) ) (in_motion ?h) ) ) (< (distance ?r2 rug) (distance ?r2 ?h)) ) ) )
              (once (agent_holds ?h) )
              (once-measure (and (is_setup_object ?h) (not (not (in_motion ?r2) ) ) ) (distance_side ?h ?r2 ?r2 pink) )
            )
          )
        )
        (preference woodenBlockMovedFromRugToDesk
          (exists (?b - dodgeball ?l4 - game_object ?t - chair)
            (then
              (once (and (and (and (adjacent top_drawer ?t) (in_motion ?t) ) (not (in_motion ?h) ) ) (same_color ?h ?t) ) )
              (once-measure (not (in_motion ?h) ) (distance ?h ?h) )
              (once (not (same_object ?h ?h) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> 3 10 )
)
(:scoring
  (- (= 10 10 )
  )
)
)



(define (game game-id-714) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (agent_holds room_center)
    )
    (exists (?l4 - sliding_door ?b - game_object)
      (game-optional
        (in ?b ?b)
      )
    )
  )
)
(:constraints
  (and
    (preference ballKnocksTeddy
      (exists (?d2 - curved_wooden_ramp)
        (then
          (hold (rug_color_under ?d2 ?d2) )
          (once (and (and (agent_holds floor) (and (and (not (in_motion ?d2) ) (agent_holds ?d2) ) (not (agent_holds pink_dodgeball) ) ) ) (on ?d2 ?d2) ) )
          (once (exists (?d - hexagonal_bin) (agent_holds ?d) ) )
        )
      )
    )
    (forall (?d - doggie_bed ?h - (either book dodgeball))
      (and
        (preference towerFallsWhileBuilding
          (exists (?b - triangular_ramp)
            (at-end
              (agent_holds front)
            )
          )
        )
        (preference ballThrownFromDoor
          (exists (?c1 - dodgeball)
            (then
              (once (not (and (in_motion agent) (and (forall (?d - teddy_bear) (and (and (and (in_motion ?d) (in_motion ?d) ) (in_motion desk) ) (and (in_motion ?d) (in_motion ?d) ) ) ) (not (not (adjacent_side upright desk rug) ) ) ) (not (not (game_start ) ) ) ) ) )
              (once (adjacent ?h ?h) )
              (once (agent_holds ?h) )
              (hold-while (< (distance ?c1 desk) (distance ?c1 ?h)) (and (agent_holds upright) (> 1 3) ) (and (in_motion ?c1) (touch ?c1 ?h) (in_motion ?h) (in_motion ?h) (not (and (agent_holds agent) (not (and (in_motion ?c1) (agent_holds ?h) (in room_center upright) ) ) ) ) ) (touch floor ?h) )
            )
          )
        )
      )
    )
    (forall (?o5 - (either dodgeball dodgeball dodgeball))
      (and
        (preference blockInTowerKnockedByDodgeball
          (exists (?h - teddy_bear ?b4 - hexagonal_bin)
            (then
              (hold (in_motion ?b4) )
              (hold (in agent ?b4) )
              (hold (and (on ?o5 ?o5) (and (and (and (game_over ) (touch ?b4 ?b4) ) (agent_holds bed) ) (agent_holds ?o5) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count-once-per-objects blockInTowerKnockedByDodgeball:beachball) (count towerFallsWhileBuilding:dodgeball) )
    5
  )
)
(:scoring
  (count-once towerFallsWhileBuilding:book:dodgeball)
)
)



(define (game game-id-715) (:domain many-objects-room-v1)
(:setup
  (exists (?f - dodgeball)
    (forall (?b7 - wall)
      (game-conserved
        (in agent ?f)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToChair
      (exists (?l3 - hexagonal_bin ?c ?h - hexagonal_bin)
        (then
          (hold-while (not (in_motion ?c) ) (not (adjacent ?h ?c) ) )
          (hold (on agent ?h) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-measure ballThrownToChair:basketball) (count-once-per-external-objects ballThrownToChair:dodgeball) )
)
(:scoring
  (count ballThrownToChair:beachball)
)
)



(define (game game-id-716) (:domain few-objects-room-v1)
(:setup
  (forall (?r ?b1 - doggie_bed)
    (and
      (game-conserved
        (and
          (agent_holds ?b1)
          (open ?r)
        )
      )
      (game-conserved
        (on right ?r)
      )
    )
  )
)
(:constraints
  (and
    (forall (?h ?c3 - game_object ?b - shelf)
      (and
        (preference blockPickedUp
          (exists (?h - ball ?w2 - ball)
            (then
              (once (and (< (x_position ?b) (distance ?w2 ?w2)) (not (is_setup_object ?w2) ) (opposite ?b ?b) (and (< (distance ?w2 ?w2) 0) (not (> 0 (distance ?b agent)) ) (and (in_motion ?w2) (in agent ?w2) ) ) ) )
              (hold (on ?w2 ?b) )
              (once (in rug ?w2) )
            )
          )
        )
        (preference woodenBlockMovedFromRugToDesk
          (exists (?h - dodgeball)
            (then
              (hold (agent_holds room_center) )
              (once-measure (on ?b ?b) (distance ?h desk) )
              (hold-while (or (or (agent_holds ?h) (and (< (distance ?b desk) (distance ?h ?h)) ) ) (in ?b ?b) ) (on bed agent) (not (not (in_motion ?b) ) ) (in_motion ?b) )
              (once (agent_holds ?h) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (total-time) (+ (count blockPickedUp:golfball:pink) (* 5 (* 4 2 )
        )
      )
    )
    (>= (total-score) 10 )
    (= 10 (total-score) )
  )
)
(:scoring
  (count blockPickedUp:beachball)
)
)



(define (game game-id-717) (:domain many-objects-room-v1)
(:setup
  (forall (?h - triangular_ramp)
    (forall (?c - (either dodgeball laptop main_light_switch) ?t - dodgeball)
      (and
        (game-conserved
          (agent_holds ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference itemsHidingScreens
      (exists (?l - blinds ?r ?h - cube_block)
        (then
          (once (and (not (agent_holds ?r) ) (adjacent_side agent bottom_shelf ?h ?h) ) )
          (hold-while (agent_holds ?r) (in_motion ?h) (not (on ?r ?h) ) (not (in_motion ?h) ) )
          (hold (= 1 4) )
          (once (in_motion ?h) )
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (not
        (> 9 (count-once itemsHidingScreens:purple) )
      )
      (>= (* (* 6 1 )
          (>= (count-measure itemsHidingScreens:beachball:pink_dodgeball) 4 )
        )
        (* (count itemsHidingScreens) (- (count itemsHidingScreens:dodgeball) )
        )
      )
      (or
        (< 10 (count itemsHidingScreens:beachball) )
        (<= (* (count-increasing-measure itemsHidingScreens) (count itemsHidingScreens:purple) )
          (total-score)
        )
        (>= 2 10 )
      )
    )
  )
)
(:scoring
  (external-forall-maximize
    (* 9 (* (count-once-per-objects itemsHidingScreens:alarm_clock:pink) (count itemsHidingScreens:pink) )
    )
  )
)
)



(define (game game-id-718) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds agent)
  )
)
(:constraints
  (and
    (preference ballThrownToWallToAgent
      (exists (?p2 - dodgeball)
        (then
          (once (in_motion ?p2) )
          (hold (and (and (touch ?p2 ?p2) (in_motion ?p2) ) (= (distance agent ?p2) 1) ) )
          (once (between ?p2 ?p2 ?p2) )
        )
      )
    )
  )
)
(:terminal
  (> 30 (count-once-per-objects ballThrownToWallToAgent:pink_dodgeball:dodgeball) )
)
(:scoring
  (* 1 )
)
)



(define (game game-id-719) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (exists (?b - golfball ?b - doggie_bed)
        (and
          (game-conserved
            (touch ?b ?b)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToDoggieBedOffWall
      (exists (?b - wall)
        (at-end
          (and
            (in_motion left)
            (and
              (in_motion ?b)
              (agent_holds ?b)
            )
          )
        )
      )
    )
    (preference blockIncorrectlyPicked
      (exists (?b2 - teddy_bear ?d2 - (either flat_block yellow_cube_block))
        (then
          (once (agent_holds ?d2) )
          (once (touch agent ?d2) )
          (once (between bed ?d2 ?d2) )
          (hold (in ?d2 sideways) )
        )
      )
    )
    (preference bigObjectThrownToBed
      (exists (?b - hexagonal_bin)
        (then
          (hold (in_motion floor) )
          (once (and (agent_holds ?b) (and (in_motion ?b) (not (in ?b ?b) ) (in_motion top_shelf) ) (not (< 2 1) ) (in_motion ?b) (in_motion ?b) (rug_color_under desk desk) (agent_holds ?b) ) )
          (once (in_motion ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= (count bigObjectThrownToBed:pink) (total-score) )
)
(:scoring
  (count-once-per-objects bigObjectThrownToBed:pink_dodgeball)
)
)



(define (game game-id-720) (:domain few-objects-room-v1)
(:setup
  (exists (?d - cylindrical_block ?c - chair ?s - curved_wooden_ramp)
    (and
      (and
        (and
          (and
            (exists (?r - hexagonal_bin)
              (exists (?b3 ?b7 - hexagonal_bin ?p2 - hexagonal_bin)
                (game-conserved
                  (in_motion ?s)
                )
              )
            )
          )
          (exists (?t - wall ?d - hexagonal_bin)
            (not
              (and
                (game-conserved
                  (in ?d ?d)
                )
                (or
                  (game-optional
                    (on ?d ?d)
                  )
                )
              )
            )
          )
        )
        (forall (?f - dodgeball)
          (and
            (and
              (exists (?o5 - hexagonal_bin ?b ?b1 - doggie_bed ?b - dodgeball)
                (exists (?h - hexagonal_bin)
                  (exists (?l2 - doggie_bed)
                    (game-conserved
                      (in_motion ?s)
                    )
                  )
                )
              )
              (forall (?h - hexagonal_bin)
                (forall (?d - (either yellow_cube_block cube_block))
                  (and
                    (game-optional
                      (on ?d ?d)
                    )
                  )
                )
              )
            )
          )
        )
        (exists (?c - dodgeball)
          (exists (?t - dodgeball)
            (game-optional
              (adjacent ?c floor)
            )
          )
        )
      )
      (and
        (and
          (game-optional
            (and
              (in_motion ?s)
              (on ?s door)
            )
          )
          (forall (?c4 - block)
            (forall (?l - cube_block)
              (exists (?b5 - block)
                (not
                  (and
                    (game-conserved
                      (not
                        (is_setup_object room_center)
                      )
                    )
                  )
                )
              )
            )
          )
          (game-optional
            (not
              (same_color ?s rug)
            )
          )
          (game-conserved
            (in_motion ?s)
          )
          (game-optional
            (and
              (agent_holds bed)
              (and
                (not
                  (on ?s pillow)
                )
                (and
                  (forall (?c - hexagonal_bin)
                    (or
                      (in_motion ?s)
                      (not
                        (and
                          (not
                            (agent_holds ?c)
                          )
                          (not
                            (object_orientation floor agent)
                          )
                        )
                      )
                    )
                  )
                  (in ?s ?s)
                )
              )
            )
          )
        )
        (game-conserved
          (in ?s main_light_switch)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference pyramidBlockAtopTowerAtEnd
      (exists (?c - pillow)
        (then
          (hold (agent_holds ?c) )
          (once (between ?c door ?c) )
          (hold (in_motion ?c) )
        )
      )
    )
    (preference blockIncorrectlyPicked
      (exists (?r - doggie_bed)
        (then
          (once (exists (?o3 - shelf ?o3 ?h - game_object ?ob - (either game_object flat_block)) (not (agent_holds ?ob) ) ) )
          (hold-while (< 1 1) (game_over ) (agent_holds ?r) )
          (once (agent_holds desk) )
        )
      )
    )
  )
)
(:terminal
  (= (count pyramidBlockAtopTowerAtEnd:green) 2 )
)
(:scoring
  (* 1 (= (count-once-per-objects blockIncorrectlyPicked:tan:blue_pyramid_block) 3 )
  )
)
)



(define (game game-id-721) (:domain many-objects-room-v1)
(:setup
  (exists (?c2 - ball ?b10 - (either cylindrical_block desktop main_light_switch))
    (forall (?d2 - (either pencil cylindrical_block))
      (game-optional
        (in_motion ?d2)
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - doggie_bed)
      (and
        (preference objectWithMatchingColor
          (exists (?c - cylindrical_block)
            (at-end
              (and
                (in_motion ?b)
                (in_motion ?c)
              )
            )
          )
        )
      )
    )
    (preference blockToBinFromRug
      (exists (?b ?h - ball)
        (then
          (once (and (adjacent ?h bed) (in_motion ?b) (and (not (equal_z_position ?b ?h) ) (in_motion ?h) (and (adjacent rug agent) (agent_holds ?h) (not (and (same_color ?b ?h) (faces ?b block) ) ) ) (not (or (touch ?h ?h) (agent_holds upside_down) ) ) (touch ?b ?h) (< 1 (distance_side rug ?b room_center)) (or (not (on ?h ?h) ) (on ?h ?b) ) (agent_holds floor) (touch ?h ?b) (and (agent_holds ?h) (and (in ?h ?h) (and (in_motion green) (not (not (on ?h ?b) ) ) (same_color ?b ?h) ) ) (not (agent_holds floor) ) ) ) ) )
          (once (in_motion ?b) )
          (hold (and (agent_holds bed) (<= (distance ?h ?h) (distance ?b ?b)) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ 2 (count objectWithMatchingColor:basketball) )
    18
  )
)
(:scoring
  (= 7 (* 10 5 (count-once-per-objects objectWithMatchingColor:pyramid_block) 10 )
  )
)
)



(define (game game-id-722) (:domain many-objects-room-v1)
(:setup
  (forall (?ob - game_object)
    (exists (?b4 ?l4 - hexagonal_bin)
      (and
        (forall (?c - building)
          (and
            (exists (?d2 - dodgeball)
              (game-conserved
                (agent_holds ?l4)
              )
            )
            (game-optional
              (on ?l4 ?b4)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockKnockedFromBuildingInBin
      (exists (?db - pyramid_block)
        (then
          (hold (agent_holds ?db) )
          (hold (on room_center ?db) )
          (once (and (on ?db ?db) (on ?db ?db) (exists (?r1 - hexagonal_bin ?b6 - color) (in_motion ?db) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (external-forall-minimize (count-once-per-objects blockKnockedFromBuildingInBin:dodgeball) ) 5 )
)
(:scoring
  (count blockKnockedFromBuildingInBin:dodgeball:beachball)
)
)



(define (game game-id-723) (:domain few-objects-room-v1)
(:setup
  (exists (?b - doggie_bed ?h - red_dodgeball ?h - pyramid_block)
    (and
      (and
        (game-conserved
          (not
            (game_over )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - hexagonal_bin ?t - dodgeball)
      (and
        (preference cubeThrownToBin
          (exists (?b - wall)
            (then
              (once (agent_holds ?t) )
              (once (agent_holds desk) )
              (once (and (object_orientation rug ?t) (rug_color_under ?t ?b) ) )
            )
          )
        )
        (preference gameObjectToBin
          (then
            (once (and (and (touch ?t ?t) (< 1 (distance ?t ?t)) ) (adjacent ?t rug) ) )
            (hold (agent_holds ?t) )
            (once (not (and (rug_color_under ?t ?t) (in_motion ?t) ) ) )
          )
        )
        (preference ballRolledOnRampToRug
          (exists (?c6 - ball)
            (at-end
              (not
                (agent_holds ?c6)
              )
            )
          )
        )
      )
    )
    (preference ballThrownThroughRampToBin
      (exists (?b - hexagonal_bin)
        (at-end
          (broken ?b)
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (count cubeThrownToBin:basketball) )
)
(:scoring
  (* 10 (* 10 (count-once-per-objects gameObjectToBin:dodgeball) )
  )
)
)



(define (game game-id-724) (:domain many-objects-room-v1)
(:setup
  (forall (?f - hexagonal_bin ?c1 - hexagonal_bin)
    (and
      (forall (?c6 - block)
        (game-optional
          (in_motion ?c1)
        )
      )
      (forall (?b - hexagonal_bin ?t - flat_block)
        (not
          (game-conserved
            (adjacent ?t ?c1)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference bookOnDeskShelf
      (exists (?b9 - ball)
        (then
          (hold (not (object_orientation ?b9 ?b9) ) )
          (hold (not (in_motion ?b9) ) )
          (once (and (and (adjacent ?b9 ?b9) (and (not (and (agent_holds ?b9) (not (> (distance_side ?b9 ?b9 ?b9 pink_dodgeball) (distance ?b9 left)) ) ) ) (in_motion ?b9) ) (agent_holds ?b9) ) (in_motion ?b9) (and (not (agent_holds ?b9) ) (and (on ?b9 desk) (agent_holds ?b9) ) ) (exists (?d - hexagonal_bin) (and (and (not (not (on ?b9 pillow) ) ) (adjacent ?d ?d) ) (agent_holds ?d) ) ) (<= (distance brown ?b9) 1) (game_over ) (and (on bottom_shelf ?b9) (game_start ) ) ) )
        )
      )
    )
    (preference failedThrowToBin
      (exists (?d - (either book wall dodgeball) ?t1 ?h - building)
        (then
          (hold-while (not (in ?h ?h) ) (and (and (touch ?h rug) (and (and (between ?h ?t1 ?h) (adjacent top_drawer ?h) ) (agent_holds ?h) ) ) (adjacent_side ?h ?t1 ?t1 ?t1) ) (agent_holds ?t1) )
          (once (in_motion pink) )
          (once (in_motion ?t1) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects bookOnDeskShelf:dodgeball:dodgeball) (total-time) )
)
(:scoring
  (count-once failedThrowToBin:red)
)
)



(define (game game-id-725) (:domain medium-objects-room-v1)
(:setup
  (exists (?b4 - golfball)
    (forall (?o1 - (either cylindrical_block cube_block) ?o4 - ball)
      (game-conserved
        (on ?b4 ?b4)
      )
    )
  )
)
(:constraints
  (and
    (preference ballKnocksBlockFromRug
      (exists (?o - pillow ?h - wall)
        (then
          (hold (and (not (and (not (and (and (and (and (and (not (agent_holds ?h) ) (in_motion ?h) ) (not (and (not (not (in_motion ?h) ) ) (in ?h rug) ) ) ) (agent_holds ?h) ) (> (distance ?h ?h) 1) ) (and (equal_z_position ?h ?h) (in_motion ?h) (not (not (and (agent_holds ?h) (in_motion agent) ) ) ) (in_motion ?h) ) ) ) (not (and (and (in_motion ?h) (in_motion ?h) ) (agent_holds ?h) ) ) ) ) (and (and (adjacent ?h ?h) (not (on ?h blinds) ) ) (same_color floor ?h) ) ) )
          (hold (above ?h ?h) )
          (once (not (or (game_over ) (touch desk ?h) ) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (count-once-per-objects ballKnocksBlockFromRug:yellow) (* (count-same-positions ballKnocksBlockFromRug:triangle_block) 9 (* 3 2 (* (count-once-per-objects ballKnocksBlockFromRug:tall_cylindrical_block) (+ 1 300 )
          )
          (count-once-per-objects ballKnocksBlockFromRug:basketball)
          (* 2 10 )
          2
        )
        6
      )
    )
  )
)
(:scoring
  (* (* 10 (external-forall-maximize (count ballKnocksBlockFromRug:yellow) ) )
    5
  )
)
)



(define (game game-id-726) (:domain few-objects-room-v1)
(:setup
  (exists (?d - ball)
    (game-conserved
      (in blue ?d)
    )
  )
)
(:constraints
  (and
    (preference ballThrownThroughRampAndBlocksToBin
      (exists (?o1 - hexagonal_bin ?t - building)
        (then
          (once (toggled_on ?t) )
          (hold (on ?t ?t) )
          (once (agent_holds ?t) )
        )
      )
    )
    (preference ballThrownFromObjectToBin
      (exists (?c2 - drawer)
        (then
          (hold (on ?c2 ?c2) )
          (once (< (distance ?c2 ?c2) (distance ?c2 ?c2)) )
          (once (not (<= (building_size ?c2) 2) ) )
        )
      )
    )
    (preference dodgeballAndBasketballInBin
      (exists (?d - building)
        (then
          (once (not (agent_holds south_wall) ) )
          (hold-while (and (touch ?d ?d) (not (<= (distance ?d ?d) 2) ) ) (< (distance desk ?d) (distance ?d ?d)) (= 6 (distance_side ?d pink_dodgeball rug)) )
          (once (not (in agent bed) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (and
      (>= (total-time) (* 5 (- (* 9 6 8 )
          )
        )
      )
      (< (total-score) (total-time) )
    )
  )
)
(:scoring
  (* (<= 3 1 )
    (count ballThrownFromObjectToBin:golfball)
  )
)
)



(define (game game-id-727) (:domain many-objects-room-v1)
(:setup
  (forall (?b - wall ?o ?c4 - shelf)
    (forall (?p - bridge_block)
      (game-conserved
        (adjacent_side ?c4 ?c4 ?c4 bed)
      )
    )
  )
)
(:constraints
  (and
    (forall (?r - dodgeball ?tb - red_dodgeball)
      (and
        (preference blockKnockedFromBuildingInBin
          (exists (?r - triangular_ramp)
            (then
              (once (not (on agent ?tb) ) )
              (once (in_motion ?r) )
              (hold (not (adjacent_side ?r ?tb ?r) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (* 15 3 )
      (count blockKnockedFromBuildingInBin:purple)
    )
    (< 2 5 )
  )
)
(:scoring
  (* (count-once blockKnockedFromBuildingInBin:dodgeball:blue_cube_block) (count blockKnockedFromBuildingInBin:basketball:yellow) )
)
)



(define (game game-id-728) (:domain medium-objects-room-v1)
(:setup
  (exists (?b7 - teddy_bear)
    (and
      (and
        (game-conserved
          (not
            (in_motion ?b7)
          )
        )
      )
      (game-conserved
        (agent_holds pink_dodgeball)
      )
      (exists (?l1 - dodgeball)
        (game-conserved
          (exists (?s - hexagonal_bin)
            (on desk ?s)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballFromBlockToBin
      (exists (?f - hexagonal_bin ?l3 - ball)
        (then
          (once (agent_crouches ) )
          (once (in_motion rug) )
          (once (in_motion ?l3) )
          (once (not (agent_holds room_center) ) )
          (hold (agent_holds ?l3) )
        )
      )
    )
    (preference throwMissesBin
      (exists (?r2 - doggie_bed)
        (at-end
          (and
            (on ?r2 ?r2)
            (on pink_dodgeball ?r2)
            (agent_holds ?r2)
            (not
              (not
                (on ?r2 ?r2)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 4 (count-once-per-objects throwMissesBin:red) )
)
(:scoring
  (count-once-per-objects dodgeballFromBlockToBin:triangle_block:basketball)
)
)



(define (game game-id-729) (:domain few-objects-room-v1)
(:setup
  (and
    (game-optional
      (in_motion front)
    )
    (exists (?p2 ?p - dodgeball)
      (game-optional
        (in_motion ?p)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToWallToAgent
      (exists (?h - cube_block)
        (then
          (once (exists (?d - cube_block ?d - flat_block) (not (not (or (on ?h ?h) (and (on ?d ?h) ) ) ) ) ) )
          (once (not (in ?h ?h) ) )
          (hold-while (and (same_type rug ?h) (and (on ?h ?h) ) (or (not (on ?h ?h) ) (and (< (distance ?h bridge_block) 2) (agent_holds ?h) (in ?h ?h) ) ) ) (exists (?b - hexagonal_bin) (not (same_type ?h ?h) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (count ballThrownToWallToAgent:pink) )
)
(:scoring
  (count ballThrownToWallToAgent:dodgeball)
)
)



(define (game game-id-730) (:domain medium-objects-room-v1)
(:setup
  (exists (?p2 - hexagonal_bin)
    (or
      (exists (?h - block)
        (game-conserved
          (and
            (agent_holds ?p2)
            (exists (?l2 - (either flat_block hexagonal_bin top_drawer))
              (toggled_on ?l2)
            )
          )
        )
      )
      (forall (?o4 - hexagonal_bin)
        (game-conserved
          (in_motion ?o4)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwMovesBeachballWithoutKnockingTeddy
      (exists (?c - ball)
        (then
          (once (not (on ?c ?c) ) )
          (once (on right room_center) )
          (once (in_motion ?c) )
        )
      )
    )
    (preference golfballLandsInBinThroughRamp
      (exists (?f - hexagonal_bin)
        (then
          (once (not (on ?f ?f) ) )
          (once (in ?f ?f) )
          (once (not (agent_holds ?f) ) )
        )
      )
    )
    (preference ballThrownToBed
      (exists (?d - (either wall pyramid_block) ?b - triangular_ramp)
        (then
          (hold (in_motion ?b) )
          (once (and (in_motion ?b) (not (and (on ?b agent) (in_motion ?b) ) ) (on ?b ?b) ) )
          (once (agent_holds ?b) )
        )
      )
    )
    (forall (?d - watch)
      (and
        (preference dodgeballBouncesOnceToDoggieBed
          (then
            (once (on ?d agent) )
            (once (not (above ?d ?d) ) )
            (once (on ?d ?d) )
          )
        )
      )
    )
    (preference objectMoved
      (exists (?o2 - hexagonal_bin ?o - tall_cylindrical_block ?l - (either doggie_bed wall teddy_bear))
        (then
          (once (on ?l ?l) )
          (once (agent_holds ?l) )
          (once (exists (?p3 - ball) (in_motion ?l) ) )
        )
      )
    )
    (preference objectToBinOnFirstTry
      (exists (?o - doggie_bed)
        (then
          (hold (not (and (in_motion ?o) (adjacent ?o ?o) (not (agent_holds ?o) ) ) ) )
          (once (agent_holds ?o) )
          (once (in bed ?o) )
        )
      )
    )
  )
)
(:terminal
  (>= (<= (* 15 1 )
      (* 2 (count-once-per-objects golfballLandsInBinThroughRamp:green) 0.5 )
    )
    (count-once-per-objects dodgeballBouncesOnceToDoggieBed:golfball:purple)
  )
)
(:scoring
  (* 2 (count dodgeballBouncesOnceToDoggieBed:golfball) )
)
)



(define (game game-id-731) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?r - (either floor cellphone))
      (exists (?d - (either golfball alarm_clock))
        (not
          (and
            (and
              (game-conserved
                (in_motion ?d)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockKnockedFromBuildingInBin
      (exists (?t2 - red_pyramid_block)
        (then
          (hold-while (is_setup_object ?t2) (in ?t2 bed) )
          (once (in_motion ?t2) )
          (hold (on ?t2 ?t2) )
          (hold-while (in_motion ?t2) (and (agent_holds ?t2) (and (agent_holds ?t2) (or (in_motion ?t2) (not (< (distance ?t2 ?t2) (distance floor ?t2)) ) (equal_z_position ?t2 front) (not (and (and (= (distance rug room_center) 1) (in ?t2 ?t2) (and (and (not (in_motion ?t2) ) (not (agent_holds ?t2) ) ) (and (agent_holds ?t2) (in_motion ?t2) ) (< 1 1) ) (and (and (in_motion ?t2) (and (on ?t2 block) (and (agent_holds ?t2) (and (between ?t2 door ?t2) (not (touch ?t2 ?t2) ) (on ?t2 ?t2) ) ) ) (and (adjacent ?t2 floor) (touch ?t2 ?t2) ) (and (opposite ?t2 ?t2) (object_orientation ?t2 ?t2) ) ) (and (not (not (in bed ?t2) ) ) (not (agent_holds ?t2) ) (adjacent ?t2 agent) ) (agent_holds ?t2) (agent_holds desk) ) ) (not (same_type ?t2 ?t2) ) (in rug bed) ) ) ) ) ) (not (in ?t2 ?t2) ) )
        )
      )
    )
    (preference throwToRampToBin
      (exists (?b - cube_block ?r1 - block)
        (then
          (once (adjacent ?r1 ?r1) )
          (hold-while (in_motion ?r1) (agent_holds ?r1) )
          (once (not (in_motion ?r1) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 8 6 )
)
(:scoring
  (* 5 (count throwToRampToBin:pink_dodgeball) )
)
)



(define (game game-id-732) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (exists (?o2 - block)
        (game-optional
          (on ?o2 ?o2)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference pinkObjectMovedToRoomCenter
      (exists (?b - hexagonal_bin)
        (at-end
          (on desk ?b)
        )
      )
    )
    (forall (?b - hexagonal_bin)
      (and
        (preference ballThrownToBed
          (exists (?l3 - cube_block)
            (at-end
              (agent_holds ?l3)
            )
          )
        )
      )
    )
    (forall (?c4 - hexagonal_bin ?t - dodgeball)
      (and
        (preference castleBuilt
          (exists (?c - game_object)
            (then
              (hold (agent_holds ?t) )
              (once (not (agent_holds agent) ) )
              (once (on agent ?t) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= 5 (total-score) )
)
(:scoring
  (* 2 (count-once-per-objects castleBuilt:dodgeball:basketball) )
)
)



(define (game game-id-733) (:domain few-objects-room-v1)
(:setup
  (exists (?b - ball ?tb - doggie_bed)
    (exists (?w2 - block ?b - blue_pyramid_block ?h - hexagonal_bin ?b ?l4 - ball ?b - hexagonal_bin)
      (game-optional
        (in_motion ?tb)
      )
    )
  )
)
(:constraints
  (and
    (preference beachballOnRug
      (exists (?b7 - wall ?p3 - (either cylindrical_block mug cube_block))
        (then
          (hold (and (and (agent_holds bed) (adjacent_side ?p3 bed ?p3) ) (and (agent_holds bed) (not (agent_holds ?p3) ) ) (and (and (in_motion ?p3) ) (not (in_motion ?p3) ) ) (in_motion ?p3) ) )
          (once (agent_holds desk) )
          (hold (in_motion bridge_block) )
        )
      )
    )
    (forall (?b5 - dodgeball ?c3 - hexagonal_bin)
      (and
        (preference throwInBin
          (exists (?o5 - pillow)
            (then
              (hold (and (in_motion door) (adjacent blue ?c3) ) )
              (once (not (not (in ?c3 ?o5) ) ) )
              (hold (in_motion left) )
            )
          )
        )
      )
    )
    (preference throwBallToDoggieBedOffWall
      (exists (?o2 - doggie_bed)
        (then
          (once (not (object_orientation ?o2 ?o2) ) )
          (once (game_start ) )
          (once (in_motion ?o2) )
          (hold (not (not (agent_holds ?o2) ) ) )
          (once (agent_holds ?o2) )
        )
      )
    )
    (preference greenObjectMovedToRoomCenter
      (exists (?b - hexagonal_bin)
        (then
          (once (in_motion ?b) )
          (once (and (object_orientation blue pink_dodgeball) (above ?b ?b) ) )
          (hold-while (on ?b ?b) (game_over ) )
        )
      )
    )
    (forall (?w2 - dodgeball)
      (and
        (preference ballThrowAttempt
          (exists (?b10 - ball)
            (then
              (once (in_motion top_drawer) )
              (hold (not (touch ?w2 ?b10) ) )
              (once (agent_holds ?w2) )
            )
          )
        )
      )
    )
    (preference bookOnDeskShelf
      (exists (?c3 - wall)
        (then
          (hold (> 1 (distance ?c3 ?c3)) )
          (hold (and (and (above green_golfball back) (in_motion ?c3) ) (< (distance_side ?c3 green ?c3) 2) (object_orientation ?c3 bed) (not (on ?c3 agent) ) (and (not (not (in_motion ?c3) ) ) (in_motion ?c3) ) (< (distance agent ?c3) (distance ?c3 ?c3)) (not (not (not (faces ?c3 ?c3) ) ) ) (exists (?h - hexagonal_bin) (not (< 1 4) ) ) ) )
          (once (in_motion ?c3) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (total-score) (* (count-once-per-objects throwBallToDoggieBedOffWall:dodgeball) (count-once-per-objects bookOnDeskShelf:red) )
    )
    (>= (total-time) (count-unique-positions bookOnDeskShelf:pink_dodgeball) )
  )
)
(:scoring
  (* (- (* 30 10 )
    )
    (count greenObjectMovedToRoomCenter:yellow_cube_block)
  )
)
)



(define (game game-id-734) (:domain few-objects-room-v1)
(:setup
  (exists (?b - golfball ?t - hexagonal_bin)
    (and
      (exists (?b - game_object ?b5 - building)
        (game-conserved
          (and
            (not
              (not
                (and
                  (in ?t ?b5)
                  (in_motion ?t)
                )
              )
            )
            (and
              (not
                (in agent ?b5)
              )
              (and
                (not
                  (touch ?t ?t)
                )
                (= (distance ?b5 ?b5) 1)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?tb ?c5 ?s ?h ?ob ?b10 - hexagonal_bin)
      (and
        (preference smallItemsInPlace
          (exists (?d - dodgeball ?d - red_dodgeball)
            (at-end
              (< (distance ?b10 ?s) (distance ?c5 ?s))
            )
          )
        )
      )
    )
    (preference blockOnBlockInTowerAtEnd
      (exists (?o1 - cube_block)
        (then
          (once (agent_holds ?o1) )
          (once (exists (?o4 - cube_block) (not (and (in_motion ?o1) (and (agent_holds ?o1) (agent_holds ?o1) (on rug ?o4) ) ) ) ) )
          (hold (exists (?h - chair) (not (in ?h ?o1) ) ) )
          (once (<= 2 7) )
          (hold (agent_holds ?o1) )
        )
      )
    )
    (forall (?t - chair ?d ?w2 ?t ?d - wall ?o ?c4 - building ?db - shelf)
      (and
        (preference ballInOrOnBin
          (then
            (hold (not (and (on ?db ?db) (in_motion ?db) ) ) )
            (once-measure (object_orientation ?db agent) (x_position desk) )
            (once (< (distance back ?db) 6) )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (* 7 )
  )
)
(:scoring
  (count smallItemsInPlace:pink_dodgeball)
)
)



(define (game game-id-735) (:domain medium-objects-room-v1)
(:setup
  (exists (?b - doggie_bed)
    (game-conserved
      (and
        (agent_holds agent)
        (and
          (agent_holds ?b)
          (touch ?b ?b)
          (not
            (opposite ?b ?b)
          )
        )
        (agent_holds ?b)
      )
    )
  )
)
(:constraints
  (and
    (forall (?r - red_dodgeball ?s - blinds)
      (and
        (preference matchingBuildingBuilt
          (exists (?w2 - (either block golfball dodgeball cd))
            (then
              (once (touch desk front_left_corner) )
              (once (on ?s ?w2) )
              (hold (game_start ) )
            )
          )
        )
        (preference dodgeballHitsBin
          (exists (?p - hexagonal_bin)
            (then
              (once (and (and (not (adjacent bed ?s) ) (not (not (touch ?p desk) ) ) ) (in_motion ?s) ) )
              (hold (and (not (in_motion agent) ) ) )
            )
          )
        )
      )
    )
    (preference ballThrownToChair
      (exists (?w2 - dodgeball)
        (at-end
          (and
            (and
              (in ?w2 ?w2)
              (adjacent ?w2 ?w2)
            )
            (not
              (and
                (and
                  (in_motion ?w2)
                  (touch ?w2 ?w2)
                )
                (not
                  (and
                    (and
                      (exists (?x ?r - golfball ?b ?o - hexagonal_bin)
                        (same_type ?b ?o)
                      )
                      (agent_holds ?w2)
                    )
                    (in_motion ?w2)
                  )
                )
                (and
                  (in_motion ?w2)
                  (in agent desk)
                  (agent_holds ?w2)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects matchingBuildingBuilt:dodgeball) 10 )
)
(:scoring
  (count-longest matchingBuildingBuilt:brown:basketball)
)
)



(define (game game-id-736) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (exists (?h - dodgeball)
        (agent_holds ?h)
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - cylindrical_block)
      (and
        (preference blockInTowerKnockedByDodgeball
          (exists (?b - teddy_bear)
            (then
              (once (on ?b ?b) )
              (hold (broken ?b) )
              (hold-while (game_over ) (and (not (agent_holds ?b) ) (and (in_motion ?b) (agent_holds ?b) ) ) (agent_holds ?b) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 3 (+ 20 6 )
    )
    (not
      (>= (total-score) (= (* 10 (- (count blockInTowerKnockedByDodgeball:top_drawer) )
          )
          (- (* (* 180 (count blockInTowerKnockedByDodgeball) )
              6
            )
          )
        )
      )
    )
  )
)
(:scoring
  (- (count-same-positions blockInTowerKnockedByDodgeball:dodgeball) )
)
)



(define (game game-id-737) (:domain medium-objects-room-v1)
(:setup
  (exists (?w2 - book ?g - (either desktop cylindrical_block) ?l - color)
    (and
      (exists (?c6 - hexagonal_bin)
        (and
          (and
            (and
              (game-conserved
                (in_motion ?c6)
              )
              (forall (?o - (either alarm_clock triangle_block flat_block flat_block yellow))
                (and
                  (and
                    (and
                      (exists (?o2 - doggie_bed)
                        (game-conserved
                          (not
                            (same_type ?o2 ?l)
                          )
                        )
                      )
                    )
                  )
                  (and
                    (game-conserved
                      (not
                        (not
                          (adjacent pink_dodgeball pillow)
                        )
                      )
                    )
                    (game-optional
                      (< (x_position agent) (distance ?l tan))
                    )
                    (and
                      (forall (?o1 - hexagonal_bin ?c4 - red_dodgeball)
                        (exists (?l2 - ball ?d ?d1 ?l - pyramid_block ?c - game_object ?b - triangular_ramp ?b - cube_block)
                          (and
                            (exists (?b2 - dodgeball ?c4 - ball)
                              (game-optional
                                (in ?c4 ?o)
                              )
                            )
                          )
                        )
                      )
                      (forall (?h - flat_block ?c - wall)
                        (and
                          (game-conserved
                            (in_motion ?l)
                          )
                          (exists (?p - hexagonal_bin)
                            (game-conserved
                              (broken ?l)
                            )
                          )
                          (and
                            (exists (?g - curved_wooden_ramp)
                              (and
                                (forall (?r2 - (either golfball hexagonal_bin) ?b2 - game_object ?c3 - doggie_bed)
                                  (exists (?o - pillow)
                                    (and
                                      (and
                                        (and
                                          (and
                                            (forall (?h - (either cellphone golfball))
                                              (forall (?c - teddy_bear ?d - (either basketball game_object))
                                                (and
                                                  (exists (?b - hexagonal_bin)
                                                    (game-conserved
                                                      (agent_holds agent)
                                                    )
                                                  )
                                                  (forall (?t2 - hexagonal_bin)
                                                    (game-optional
                                                      (adjacent_side bed bed ?g bed)
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                            (exists (?h - dodgeball)
                                              (and
                                                (game-conserved
                                                  (and
                                                    (on ?c3 ?h)
                                                    (and
                                                      (is_setup_object ?h)
                                                      (on ?h ?c6)
                                                    )
                                                  )
                                                )
                                                (game-conserved
                                                  (> (distance rug ?c6) 1)
                                                )
                                              )
                                            )
                                          )
                                          (game-conserved
                                            (< 1 1)
                                          )
                                          (exists (?d - hexagonal_bin ?b - building)
                                            (exists (?x - (either golfball pillow))
                                              (game-optional
                                                (in_motion ?c6)
                                              )
                                            )
                                          )
                                        )
                                      )
                                      (exists (?h - building)
                                        (and
                                          (exists (?r2 - dodgeball)
                                            (game-conserved
                                              (in_motion agent)
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                                (game-conserved
                                  (not
                                    (not
                                      (in_motion floor)
                                    )
                                  )
                                )
                                (forall (?c6 - chair)
                                  (or
                                    (exists (?b - game_object)
                                      (forall (?d - dodgeball)
                                        (exists (?x - (either doggie_bed hexagonal_bin dodgeball))
                                          (and
                                            (exists (?g - chair ?d - (either golfball dodgeball cube_block))
                                              (exists (?l2 ?h - (either key_chain doggie_bed) ?b2 - doggie_bed)
                                                (game-conserved
                                                  (is_setup_object ?b2)
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                            (and
                              (game-conserved
                                (not
                                  (adjacent_side ?c ?o agent)
                                )
                              )
                            )
                          )
                          (not
                            (and
                              (game-conserved
                                (in ?c pink_dodgeball)
                              )
                              (exists (?d2 - teddy_bear)
                                (game-conserved
                                  (in ?o ?c)
                                )
                              )
                            )
                          )
                          (and
                            (exists (?d - building)
                              (game-conserved
                                (not
                                  (in ?l pink_dodgeball)
                                )
                              )
                            )
                          )
                        )
                      )
                      (forall (?o3 - hexagonal_bin)
                        (exists (?b - watch)
                          (or
                            (and
                              (exists (?l2 - cube_block)
                                (exists (?p - doggie_bed)
                                  (game-optional
                                    (not
                                      (not
                                        (open ?l2)
                                      )
                                    )
                                  )
                                )
                              )
                            )
                            (game-conserved
                              (not
                                (and
                                  (on agent ?l)
                                  (in_motion ?l)
                                  (not
                                    (and
                                      (between ?b ?c6 ?o3)
                                      (in_motion ?o)
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
              (game-conserved
                (in ?c6 ?l)
              )
            )
          )
          (exists (?b ?b - hexagonal_bin)
            (game-optional
              (adjacent ?b ?c6)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectsHidden
      (exists (?b - hexagonal_bin)
        (then
          (once (and (in blue ?b) (and (exists (?c5 - wall ?b - (either desktop)) (not (not (>= (distance ?b ?b) (distance agent ?b)) ) ) ) (not (and (not (in_motion ?b) ) (not (game_over ) ) (rug_color_under ?b ?b) ) ) (agent_holds agent) (and (and (not (agent_holds ?b) ) (agent_holds sideways) ) (and (in_motion bed) (exists (?d - building) (not (on bed ?d) ) ) ) ) (agent_holds bed) (and (in_motion ?b) (same_color floor ?b) ) (in_motion ?b) ) (on ?b ?b) ) )
          (once (agent_holds floor) )
          (hold-while (same_object ?b ?b) (in ?b ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (total-time) )
)
(:scoring
  (* 1 (count objectsHidden:yellow_cube_block:blue_dodgeball) 2 8 )
)
)



(define (game game-id-738) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?h - dodgeball)
      (exists (?c - dodgeball)
        (not
          (and
            (and
              (exists (?w1 - red_dodgeball ?r2 - game_object)
                (game-conserved
                  (agent_holds ?h)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockInTowerKnockedByDodgeball
      (exists (?w2 - (either tall_cylindrical_block doggie_bed bridge_block) ?r - wall ?b - teddy_bear)
        (at-end
          (agent_holds ?b)
        )
      )
    )
    (preference throwBallToBinOffObject
      (exists (?o - hexagonal_bin ?g - block ?t2 - hexagonal_bin)
        (then
          (hold (on ?t2 agent) )
          (once (agent_holds ?t2) )
          (once (and (agent_holds ?t2) (or (open ?t2) (agent_holds ?t2) (in ?t2 ?t2) (in_motion ?t2) ) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (count-measure throwBallToBinOffObject:golfball) 8 )
  )
)
(:scoring
  (count blockInTowerKnockedByDodgeball:yellow_cube_block)
)
)



(define (game game-id-739) (:domain many-objects-room-v1)
(:setup
  (exists (?l3 ?c - triangular_ramp ?c - hexagonal_bin)
    (and
      (game-optional
        (on ?c ?c)
      )
    )
  )
)
(:constraints
  (and
    (forall (?c4 - doggie_bed)
      (and
        (preference smallItemsInPlace
          (exists (?x - cube_block)
            (then
              (hold (game_over ) )
              (once (agent_holds ?x) )
              (once (not (and (not (agent_holds ?c4) ) (agent_holds ?x) (not (= (distance ?x ?c4) 4) ) ) ) )
            )
          )
        )
      )
    )
    (forall (?d2 - dodgeball ?d - hexagonal_bin ?o5 - ball)
      (and
        (preference blockThrowAttempt
          (exists (?c - hexagonal_bin)
            (then
              (once (in_motion ?o5) )
              (once (game_start ) )
              (hold (agent_holds ?c) )
            )
          )
        )
        (preference dodgeballFromRugToBin
          (exists (?w - hexagonal_bin)
            (at-end
              (in_motion door)
            )
          )
        )
      )
    )
    (forall (?t - ball)
      (and
        (preference ballThrownToBin
          (exists (?p ?s ?b - hexagonal_bin)
            (at-end
              (open floor)
            )
          )
        )
        (preference smallObjectThrownToBed
          (exists (?c - (either triangle_block cellphone key_chain))
            (then
              (hold (not (and (not (adjacent ?t ?c) ) (in ?t desk) ) ) )
              (hold (on ?t ?c) )
              (once (and (not (in_motion door) ) (agent_crouches ) ) )
              (once (in_motion ?t) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> 15 (count smallItemsInPlace:pink_dodgeball) )
)
(:scoring
  (* 6 10 )
)
)



(define (game game-id-740) (:domain many-objects-room-v1)
(:setup
  (exists (?h - ball ?l - (either laptop pillow tall_cylindrical_block))
    (and
      (and
        (game-conserved
          (in_motion ?l)
        )
      )
      (game-optional
        (touch ?l ?l)
      )
      (exists (?o - hexagonal_bin ?g ?d ?d - pillow ?l2 - doggie_bed)
        (game-conserved
          (and
            (not
              (touch ?l2 desk)
            )
            (on ?l ?l2)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference castleBuilt
      (exists (?c ?b - dodgeball)
        (then
          (hold (agent_holds ?c) )
          (once (in_motion desk) )
          (once (< 1 5) )
        )
      )
    )
    (preference ballThrownThroughRampAndBlocksToBin
      (exists (?o4 - building)
        (then
          (hold (and (forall (?c6 - (either blue_cube_block flat_block hexagonal_bin)) (< 0.5 1) ) (agent_holds ?o4) ) )
          (hold (on bed brown) )
          (once (not (< 2 (distance desk ?o4)) ) )
          (hold (adjacent ?o4 ?o4) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (count ballThrownThroughRampAndBlocksToBin:red) )
)
(:scoring
  (count-unique-positions ballThrownThroughRampAndBlocksToBin:rug)
)
)



(define (game game-id-741) (:domain medium-objects-room-v1)
(:setup
  (exists (?d - building)
    (or
      (game-conserved
        (in ?d ?d)
      )
      (and
        (and
          (exists (?b - chair)
            (and
              (game-conserved
                (and
                  (and
                    (agent_holds ?d)
                    (in_motion ?d)
                  )
                  (not
                    (agent_holds bed)
                  )
                  (on ?b ?b)
                )
              )
            )
          )
          (game-conserved
            (and
              (not
                (not
                  (and
                    (agent_holds ?d)
                    (agent_holds ?d)
                    (agent_holds ?d)
                    (in_motion ?d)
                    (and
                      (and
                        (in_motion ?d)
                        (not
                          (in ?d door)
                        )
                      )
                      (exists (?p1 - hexagonal_bin ?l - building ?h - cube_block)
                        (in_motion ?d)
                      )
                    )
                    (and
                      (< 3 (distance ?d ?d))
                      (> (distance ?d ?d) (distance ?d ?d))
                    )
                  )
                )
              )
              (= (distance ?d ?d) (distance_side front ?d ?d ?d))
              (exists (?r1 - curved_wooden_ramp ?b - building)
                (agent_holds ?b)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectMoved
      (exists (?d - doggie_bed)
        (at-end
          (exists (?l3 - dodgeball)
            (not
              (on ?l3 ?d)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 20 10 )
)
(:scoring
  (count-once-per-objects objectMoved:dodgeball:yellow)
)
)



(define (game game-id-742) (:domain few-objects-room-v1)
(:setup
  (forall (?d ?d - cube_block ?o - hexagonal_bin)
    (game-conserved
      (in_motion ?o)
    )
  )
)
(:constraints
  (and
    (forall (?c1 - block)
      (and
        (preference throwObjectToBin
          (exists (?d - (either cylindrical_block bridge_block))
            (then
              (hold (adjacent_side ?c1 bed ?c1 desk) )
              (once (on agent room_center) )
              (hold (adjacent agent pink_dodgeball) )
            )
          )
        )
        (preference cubeBlockFromBedToShelf
          (exists (?d1 - (either tall_cylindrical_block floor pyramid_block))
            (then
              (hold-while (in ?d1 ?c1) (on ?c1 ?c1) )
              (once (toggled_on ?d1) )
              (hold-while (is_setup_object ?c1) (and (agent_holds ?d1) (exists (?h - ball ?r - (either bridge_block golfball pink book)) (forall (?b6 - building) (not (agent_holds ?d1) ) ) ) (or (and (and (agent_holds ?c1) (and (> (distance ?d1 ?d1) 6) (and (not (and (on pink_dodgeball right) (in_motion ?d1) ) ) (in_motion ?c1) (and (in agent ?d1) (and (and (exists (?b7 - hexagonal_bin ?r1 - hexagonal_bin ?h - color) (in_motion ?d1) ) (in_motion ?d1) (not (adjacent agent ?c1) ) ) (in_motion ?c1) ) ) ) ) ) (not (touch ?d1 ?d1) ) ) (in_motion ?c1) ) ) (not (touch ?c1 ?d1) ) (not (agent_holds ?c1) ) )
            )
          )
        )
        (preference ballThrownToBed
          (exists (?b - (either laptop dodgeball pencil))
            (then
              (once (is_setup_object ?b) )
              (hold (same_type ?b ?b) )
              (once (touch ?c1 ?b) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* 16 (count-once-per-objects cubeBlockFromBedToShelf:basketball) )
    (count-once-per-objects ballThrownToBed:golfball)
  )
)
(:scoring
  (- (+ (count-once-per-objects ballThrownToBed:pink) (count-overlapping throwObjectToBin:golfball) )
  )
)
)



(define (game game-id-743) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (exists (?h ?w2 - game_object)
        (game-conserved
          (agent_holds north_wall)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference itemsBroken
      (exists (?b - hexagonal_bin ?c - tan_cube_block)
        (at-end
          (not
            (not
              (in ?c ?c)
            )
          )
        )
      )
    )
    (forall (?c - hexagonal_bin ?ob - chair ?h - (either pen pencil))
      (and
        (preference pillowMovedToRoomCenter
          (exists (?o - pillow)
            (then
              (hold (on rug ?o) )
              (hold-while (exists (?b1 - ball) (in_motion ?o) ) (same_type ?h ?h) )
              (once (and (and (in_motion ?h) (not (not (and (in_motion pillow) (broken agent) ) ) ) ) (not (on ?h ?o) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (or
        (>= 2 (count-same-positions itemsBroken:dodgeball:dodgeball) )
      )
      (>= (total-time) (count-once-per-objects pillowMovedToRoomCenter:pyramid_block) )
      (>= (external-forall-minimize (* (* (* (count-once-per-objects itemsBroken:blue) (count pillowMovedToRoomCenter:hexagonal_bin:yellow) )
              (count-measure itemsBroken:dodgeball)
            )
            60
          )
        )
        10
      )
    )
    (>= (- 10 )
      9
    )
  )
)
(:scoring
  (* (* (+ 7 (count pillowMovedToRoomCenter:hexagonal_bin) )
      (count-longest itemsBroken:pyramid_block)
    )
    2
  )
)
)



(define (game game-id-744) (:domain medium-objects-room-v1)
(:setup
  (forall (?d - chair)
    (game-optional
      (agent_holds ?d)
    )
  )
)
(:constraints
  (and
    (forall (?s - hexagonal_bin ?w1 ?o2 ?b - wall)
      (and
        (preference castleBuilt
          (at-end
            (between ?w1 ?w1 ?w1)
          )
        )
      )
    )
    (forall (?tb ?h - color)
      (and
        (preference ballThrownToRug
          (exists (?b - game_object ?b - chair)
            (then
              (hold (not (and (same_color sideways ?tb) (in_motion ?h) ) ) )
              (hold (adjacent_side ?h ?h agent) )
              (once (in_motion ?tb) )
            )
          )
        )
        (preference blockInTowerKnockedByDodgeball
          (exists (?b2 - hexagonal_bin)
            (then
              (hold-while (not (in_motion ?b2) ) (object_orientation ?h ?b2) )
              (once (forall (?l3 - (either golfball dodgeball) ?h - (either golfball dodgeball dodgeball side_table cellphone wall book) ?r - ball ?c1 - sliding_door) (touch ?h ?b2) ) )
              (once (and (in_motion ?tb) (in_motion ?b2) ) )
            )
          )
        )
      )
    )
    (forall (?x - ball)
      (and
        (preference dropAttempt
          (at-end
            (agent_holds ?x)
          )
        )
        (preference throwAttemptKnocksBlock
          (exists (?h - pillow)
            (then
              (once (in_motion ?h) )
              (hold (and (in_motion ?x) (not (exists (?c2 - ball ?p - (either pillow desktop pyramid_block wall dodgeball)) (same_object ?p ?h) ) ) ) )
              (once (agent_crouches ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (= (total-score) (total-time) )
)
(:scoring
  (* (+ 5 (* 10 (count-once-per-objects blockInTowerKnockedByDodgeball:triangle_block) (count-once ballThrownToRug:orange) )
      (* (count ballThrownToRug:pink:basketball) (count-once-per-objects blockInTowerKnockedByDodgeball:beachball) 5 (* (count blockInTowerKnockedByDodgeball:pink_dodgeball) (* 5 (count-once-per-objects dropAttempt:basketball) )
        )
        10
      )
      6
      (+ 10 40 )
      (* (* (count dropAttempt:dodgeball:dodgeball) (* (count ballThrownToRug:purple:golfball) (count-once-per-objects castleBuilt:cube_block) )
        )
        5
      )
    )
    2
  )
)
)



(define (game game-id-745) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?d - cube_block ?h - hexagonal_bin ?o4 - golfball)
      (game-conserved
        (agent_holds ?o4)
      )
    )
  )
)
(:constraints
  (and
    (preference cubeBlockThrowAttempt
      (exists (?db - dodgeball)
        (then
          (once (or (in ?db ?db) ) )
          (hold (agent_holds pink_dodgeball) )
          (once (not (between ?db ?db ?db) ) )
        )
      )
    )
    (forall (?d - cube_block)
      (and
        (preference blockIncorrectlyPicked
          (exists (?b4 - hexagonal_bin)
            (then
              (hold (on ?b4 rug) )
              (once (in_motion ?b4) )
              (once (not (above ?b4 ?d) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (total-time) (count cubeBlockThrowAttempt:orange) )
    (and
      (> (* (count-total cubeBlockThrowAttempt:cylindrical_block) (count-shortest cubeBlockThrowAttempt:beachball) )
        9
      )
      (>= 10 3 )
      (< (total-score) 6 )
    )
    (<= (* 10 4 )
      (* (* 180 10 )
        5
      )
    )
  )
)
(:scoring
  (+ 6 (count-same-positions cubeBlockThrowAttempt:golfball) )
)
)



(define (game game-id-746) (:domain few-objects-room-v1)
(:setup
  (exists (?c - hexagonal_bin)
    (game-conserved
      (in_motion ?c)
    )
  )
)
(:constraints
  (and
    (preference throwOverRamp
      (exists (?h - building)
        (then
          (once (exists (?ob - hexagonal_bin ?g - game_object) (exists (?l2 - hexagonal_bin ?b10 - blue_cube_block) (touch ?b10 ?h) ) ) )
          (hold-while (= 1 1) (same_color ?h ?h) )
          (once (and (opposite ?h ?h) (in ?h ?h) (same_color ?h ?h) (exists (?b7 - building) (is_setup_object ?h) ) ) )
          (once (not (not (touch agent ?h) ) ) )
        )
      )
    )
    (forall (?h ?h - cube_block)
      (and
        (preference golfballInBinFromPillow
          (exists (?h - (either chair golfball pillow))
            (at-end
              (agent_holds ?h)
            )
          )
        )
      )
    )
    (preference smallObjectThrownToBed
      (exists (?bl - (either bridge_block dodgeball) ?d - hexagonal_bin)
        (then
          (once (in ?d ?d) )
          (hold (not (and (and (in_motion ?d) (in_motion ?d) (agent_holds blue) ) (in ?d ?d) (on ?d ?d) ) ) )
          (once (equal_x_position ?d ?d) )
        )
      )
    )
  )
)
(:terminal
  (>= (count throwOverRamp:dodgeball:cylindrical_block) 3 )
)
(:scoring
  (count smallObjectThrownToBed:golfball)
)
)



(define (game game-id-747) (:domain many-objects-room-v1)
(:setup
  (exists (?g ?h ?d - hexagonal_bin)
    (and
      (game-conserved
        (touch rug ?d)
      )
    )
  )
)
(:constraints
  (and
    (preference blockKnockedFromBuildingInBin
      (exists (?r - game_object ?c - flat_block)
        (at-end
          (and
            (and
              (in_motion ?c)
              (and
                (not
                  (and
                    (< (distance ?c ?c) 1)
                    (exists (?c4 - (either wall bed book))
                      (and
                        (rug_color_under ?c4 ?c)
                        (in_motion ?c4)
                      )
                    )
                  )
                )
                (on ?c ?c)
              )
              (in_motion ?c)
            )
            (agent_holds west_wall)
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (count blockKnockedFromBuildingInBin:alarm_clock) (total-score) )
    (>= (+ 1 3 )
      8
    )
    (>= (- 2 )
      (count blockKnockedFromBuildingInBin:yellow)
    )
  )
)
(:scoring
  (count blockKnockedFromBuildingInBin:doggie_bed)
)
)



(define (game game-id-748) (:domain medium-objects-room-v1)
(:setup
  (exists (?h - (either blue_cube_block golfball bridge_block))
    (and
      (exists (?s - ball ?b1 - hexagonal_bin)
        (forall (?d - pillow)
          (exists (?l2 - ball)
            (exists (?o - hexagonal_bin)
              (and
                (exists (?r - cube_block)
                  (game-conserved
                    (and
                      (< (distance desk ?o) 1)
                      (not
                        (not
                          (not
                            (in_motion bottom_shelf)
                          )
                        )
                      )
                      (on ?h ?b1)
                    )
                  )
                )
                (not
                  (forall (?o - ball ?o3 - curved_wooden_ramp)
                    (game-conserved
                      (on ?h ?o)
                    )
                  )
                )
                (forall (?l - shelf ?h - hexagonal_bin ?b3 - pyramid_block)
                  (game-conserved
                    (agent_holds ?o)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blocksInPlace
      (exists (?w - dodgeball)
        (at-end
          (agent_crouches )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (* (count blocksInPlace:blue_dodgeball) (- 15 )
        3
        1
        (+ (count blocksInPlace:dodgeball) 2 )
        10
      )
      (total-time)
    )
  )
)
(:scoring
  (count-once-per-external-objects blocksInPlace:beachball:pink_dodgeball)
)
)



(define (game game-id-749) (:domain few-objects-room-v1)
(:setup
  (forall (?t - hexagonal_bin)
    (exists (?o - dodgeball)
      (forall (?l4 - dodgeball ?c - wall)
        (game-conserved
          (not
            (in_motion ?c)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToDrawerOrBin
      (exists (?p1 - golfball)
        (at-end
          (> (distance ?p1 ?p1) 8)
        )
      )
    )
  )
)
(:terminal
  (>= 2 (count throwToDrawerOrBin:green) )
)
(:scoring
  (* (count-measure throwToDrawerOrBin:pink) (count throwToDrawerOrBin:green) )
)
)



(define (game game-id-750) (:domain few-objects-room-v1)
(:setup
  (forall (?d - dodgeball)
    (game-conserved
      (agent_holds ?d)
    )
  )
)
(:constraints
  (and
    (preference blockInTowerKnockedByDodgeball
      (exists (?c - hexagonal_bin ?w ?s - (either triangle_block) ?p - dodgeball)
        (then
          (once (and (and (not (agent_holds agent) ) ) (not (in ?p ?p) ) ) )
          (hold (in_motion ?p) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ 3 3 (count-once-per-objects blockInTowerKnockedByDodgeball:beachball:dodgeball) 3 (count blockInTowerKnockedByDodgeball:dodgeball) (* 10 3 (= 3 (count blockInTowerKnockedByDodgeball:dodgeball) )
      )
    )
    (total-score)
  )
)
(:scoring
  (* 10 (* (* 2 (* (* (count-once-per-objects blockInTowerKnockedByDodgeball:yellow) (count-measure blockInTowerKnockedByDodgeball:dodgeball) )
          (* (count-once-per-objects blockInTowerKnockedByDodgeball:hexagonal_bin) 2 )
        )
        (* (count blockInTowerKnockedByDodgeball:golfball) (count-once blockInTowerKnockedByDodgeball:doggie_bed:pink:pink_dodgeball) 10 )
      )
      (count-shortest blockInTowerKnockedByDodgeball:green:dodgeball)
    )
  )
)
)



(define (game game-id-751) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (not
      (exists (?ob - (either pink tall_cylindrical_block pyramid_block))
        (not
          (opposite ?ob ?ob)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?c4 - teddy_bear ?b1 - hexagonal_bin)
        (at-end
          (and
            (< (distance_side ?b1 ?b1 ?b1) 1)
            (agent_holds ?b1)
            (rug_color_under ?b1 agent)
            (on ?b1 north_wall)
          )
        )
      )
    )
  )
)
(:terminal
  (> 3 (* 2 (count-once-per-objects ballThrownToBin:pyramid_block) 9 (- (* (count ballThrownToBin:yellow) 6 )
      )
    )
  )
)
(:scoring
  (count-once-per-objects ballThrownToBin:green)
)
)



(define (game game-id-752) (:domain medium-objects-room-v1)
(:setup
  (exists (?d - (either teddy_bear cylindrical_block lamp hexagonal_bin) ?c5 - hexagonal_bin)
    (game-optional
      (and
        (in_motion desk)
        (forall (?p2 - wall)
          (on ?c5 ?c5)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballRolledOnRampToRug
      (exists (?d - cube_block)
        (then
          (once (agent_holds ?d) )
          (once (agent_crouches ) )
          (once (agent_holds ?d) )
        )
      )
    )
  )
)
(:terminal
  (= (external-forall-maximize (count-once-per-external-objects ballRolledOnRampToRug:red_pyramid_block) ) 1 )
)
(:scoring
  (count ballRolledOnRampToRug:beachball:rug)
)
)



(define (game game-id-753) (:domain many-objects-room-v1)
(:setup
  (or
    (forall (?c2 - doggie_bed)
      (and
        (and
          (or
            (game-conserved
              (and
                (game_start )
                (on ?c2 ?c2)
              )
            )
            (and
              (game-conserved
                (object_orientation ?c2 ?c2)
              )
              (and
                (game-conserved
                  (and
                    (forall (?l2 - hexagonal_bin ?c4 - wall ?b - shelf)
                      (agent_holds ?c2)
                    )
                    (and
                      (not
                        (and
                          (and
                            (in_motion bed)
                            (and
                              (agent_holds ?c2)
                              (and
                                (agent_holds ?c2)
                                (touch bed rug)
                              )
                            )
                          )
                          (and
                            (and
                              (in ?c2 ?c2)
                              (not
                                (<= 1 3)
                              )
                              (and
                                (in_motion ?c2)
                                (agent_holds ?c2)
                                (not
                                  (exists (?b - hexagonal_bin)
                                    (in_motion ?b)
                                  )
                                )
                                (in_motion ?c2)
                              )
                            )
                            (or
                              (in_motion ?c2)
                              (not
                                (and
                                  (in_motion ?c2)
                                  (not
                                    (and
                                      (on ?c2 ?c2)
                                      (in ?c2 ?c2)
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                      (not
                        (not
                          (rug_color_under agent desk)
                        )
                      )
                    )
                    (and
                      (in ?c2 ?c2)
                      (adjacent ?c2 ?c2)
                    )
                    (in_motion ?c2)
                    (not
                      (and
                        (adjacent_side ?c2 door agent)
                        (< (distance ?c2 ?c2) (distance rug ?c2))
                        (object_orientation ?c2 ?c2)
                        (in_motion ?c2)
                        (not
                          (agent_holds block)
                        )
                        (in_motion ?c2)
                        (in ?c2 ?c2)
                        (not
                          (and
                            (or
                              (and
                                (not
                                  (in_motion ?c2)
                                )
                                (not
                                  (agent_holds ?c2)
                                )
                              )
                              (not
                                (agent_holds bed)
                              )
                            )
                            (is_setup_object ?c2)
                          )
                        )
                      )
                    )
                    (not
                      (and
                        (object_orientation ?c2 ?c2)
                        (< (distance_side ?c2 ?c2 ?c2) 6)
                      )
                    )
                    (agent_holds ?c2)
                  )
                )
              )
            )
            (game-conserved
              (and
                (in_motion ?c2)
                (agent_holds ?c2)
                (agent_holds ?c2)
              )
            )
          )
        )
        (and
          (and
            (and
              (game-conserved
                (not
                  (agent_holds ?c2)
                )
              )
            )
            (forall (?o2 - color)
              (forall (?bl - hexagonal_bin ?d - hexagonal_bin)
                (exists (?d - (either curved_wooden_ramp dodgeball))
                  (forall (?h - block)
                    (exists (?h - (either cube_block golfball) ?c6 - hexagonal_bin)
                      (not
                        (forall (?b - dodgeball ?p2 - game_object ?b7 - hexagonal_bin ?b - curved_wooden_ramp)
                          (game-conserved
                            (agent_holds ?o2)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
          (forall (?o4 - dodgeball)
            (game-conserved
              (same_type bed agent)
            )
          )
          (game-conserved
            (agent_holds ?c2)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference itemsTurnedOff
      (exists (?h - (either pencil block))
        (then
          (hold (not (agent_holds ?h) ) )
          (hold (not (on ?h ?h) ) )
          (hold-while (< (distance ?h agent) (distance ?h back)) (and (in_motion ?h) (not (not (not (in_motion bed) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (> (* (* 1 1 )
        (* (count-once itemsTurnedOff:blue_pyramid_block) (count itemsTurnedOff:dodgeball) )
      )
      2
    )
  )
)
(:scoring
  (+ 20 3 10 )
)
)



(define (game game-id-754) (:domain medium-objects-room-v1)
(:setup
  (exists (?p - hexagonal_bin)
    (game-optional
      (in_motion ?p)
    )
  )
)
(:constraints
  (and
    (preference blockKnockedFromBuildingInBin
      (exists (?l1 - game_object)
        (then
          (hold (in_motion ?l1) )
          (hold-while (agent_holds ?l1) (and (= (building_size ?l1) (distance ?l1 ?l1)) (and (and (adjacent ?l1 ?l1) (in_motion ?l1) ) (and (in_motion rug) (in ?l1 bed) ) ) ) (game_over ) (in_motion rug) )
          (once (exists (?d - dodgeball) (and (agent_holds ?l1) (on ?d ?l1) (and (in_motion ?d) (not (not (not (> 1 (distance ?l1 ?l1)) ) ) ) ) ) ) )
        )
      )
    )
    (preference ballRolledOnRampToRug
      (exists (?d - hexagonal_bin)
        (then
          (once-measure (not (not (and (in_motion ?d) (and (not (and (in bed ?d) ) ) (broken ?d) ) (not (adjacent agent desk) ) ) ) ) (distance ?d ?d) )
          (hold (on ?d ?d) )
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (or
        (>= 5 (count-measure blockKnockedFromBuildingInBin:green:pink:top_drawer) )
        (>= 1 (count ballRolledOnRampToRug:orange:dodgeball) )
      )
      (>= (* 3 (count-once-per-objects blockKnockedFromBuildingInBin:basketball) )
        (+ 2 5 )
      )
    )
    (>= (* (* (count ballRolledOnRampToRug:red) 5 (external-forall-maximize (count-total blockKnockedFromBuildingInBin:doggie_bed:beachball) ) (count-once-per-objects blockKnockedFromBuildingInBin:pink) )
        (* 6 (count-once ballRolledOnRampToRug:golfball) (+ 2 (* (count ballRolledOnRampToRug:beachball) 30 )
          )
          (+ 2 (- (* (* 9 (+ 10 3 )
                  (count blockKnockedFromBuildingInBin:hexagonal_bin:purple)
                )
                (* 2 (count-once-per-objects ballRolledOnRampToRug:red:basketball) )
              )
            )
          )
        )
        3
        (count-once-per-objects ballRolledOnRampToRug:dodgeball)
        (count-once-per-objects ballRolledOnRampToRug:dodgeball)
        (count-once-per-objects blockKnockedFromBuildingInBin:blue)
        (count-once-per-objects ballRolledOnRampToRug:alarm_clock)
        5
        3
      )
      (count-once-per-external-objects ballRolledOnRampToRug:yellow)
    )
  )
)
(:scoring
  (* (count ballRolledOnRampToRug:yellow) 3 )
)
)



(define (game game-id-755) (:domain medium-objects-room-v1)
(:setup
  (forall (?s - color ?h ?d - hexagonal_bin)
    (game-conserved
      (not
        (rug_color_under ?d floor)
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - drawer ?b3 - curved_wooden_ramp)
      (and
        (preference objectWithMatchingColor
          (exists (?o5 - cube_block)
            (then
              (once (touch front ?b3) )
              (hold (not (touch ?b3 ?o5) ) )
              (once (on ?o5 pink) )
            )
          )
        )
        (preference objectLandsInBin
          (exists (?b5 - dodgeball)
            (then
              (hold (not (adjacent desk ?b5) ) )
              (hold (touch ?b5 ?b3) )
              (hold (not (and (equal_x_position ?b3 ?b5) (= 1 0.5) ) ) )
            )
          )
        )
      )
    )
    (forall (?w1 - block)
      (and
        (preference itemsBroken
          (exists (?b4 - hexagonal_bin)
            (then
              (hold (adjacent ?w1 ?b4) )
              (hold (is_setup_object top_drawer) )
              (once (in_motion ?b4) )
            )
          )
        )
        (preference dodgeballHitsPillowWithoutTouchingBlock
          (then
            (once (in_motion right) )
            (once (on ?w1 ?w1) )
            (once (and (rug_color_under ?w1 ?w1) (same_color ?w1 ?w1) ) )
          )
        )
        (preference itemsHidingScreens
          (exists (?h - game_object)
            (at-end
              (adjacent ?h ?w1)
            )
          )
        )
      )
    )
    (preference throwBallToDoggieBedOffWall
      (exists (?d ?b - red_pyramid_block ?o - ball)
        (then
          (once (agent_holds ?o) )
          (hold (not (exists (?h - (either yellow_cube_block key_chain) ?c - (either basketball hexagonal_bin)) (agent_holds ?c) ) ) )
          (once (equal_z_position ?o ?o) )
        )
      )
    )
  )
)
(:terminal
  (>= 0 (* (count-once-per-objects itemsHidingScreens:pink) (count objectWithMatchingColor:basketball) )
  )
)
(:scoring
  (* (count-measure objectWithMatchingColor:bed) 15 )
)
)



(define (game game-id-756) (:domain many-objects-room-v1)
(:setup
  (forall (?o ?c - game_object)
    (exists (?p - (either floor beachball))
      (exists (?d - curved_wooden_ramp ?c - pillow ?c - curved_wooden_ramp ?o5 - cylindrical_block)
        (game-conserved
          (in ?o5 ?c)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference basketMadeFromRug
      (exists (?d ?d - wall)
        (then
          (hold (and (not (not (and (not (not (and (rug_color_under ?d agent) (not (on ?d ?d) ) ) ) ) (or (not (not (not (on ?d ?d) ) ) ) (and (not (in_motion door) ) (on ?d ?d) ) ) ) ) ) (in desk bed) ) )
          (once (in_motion ?d) )
          (hold (not (and (forall (?b1 - game_object) (agent_holds room_center) ) (broken ?d) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (or
        (>= 5 (count-once basketMadeFromRug:pink) )
        (>= (total-time) (count basketMadeFromRug:blue_dodgeball) )
      )
    )
  )
)
(:scoring
  (- (* 5 (count basketMadeFromRug:yellow) )
  )
)
)



(define (game game-id-757) (:domain medium-objects-room-v1)
(:setup
  (exists (?c4 - dodgeball ?b - (either desktop blue_cube_block))
    (forall (?h - hexagonal_bin ?o - hexagonal_bin)
      (exists (?l1 - hexagonal_bin ?h - pyramid_block ?d - hexagonal_bin)
        (game-conserved
          (agent_holds ?b)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference gameBlockFound
      (exists (?o - hexagonal_bin)
        (then
          (once (and (and (= 1 6) (not (agent_holds ?o) ) ) (adjacent ?o ?o) ) )
          (hold (< (distance top_shelf ?o) 1) )
          (hold (in_motion ?o) )
        )
      )
    )
  )
)
(:terminal
  (or
    (= 6 4 )
    (< (* (* (count gameBlockFound:basketball) 1 40 )
        (* (* (count gameBlockFound:triangle_block) 2 2 30 )
          (count gameBlockFound:pyramid_block:yellow)
        )
      )
      6
    )
  )
)
(:scoring
  (* 8 (* (- (count-once-per-objects gameBlockFound:blue_cube_block) )
      10
    )
  )
)
)



(define (game game-id-758) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?c - hexagonal_bin)
      (and
        (forall (?h - wall)
          (and
            (and
              (exists (?b3 - ball)
                (forall (?b10 - (either dodgeball pencil laptop))
                  (not
                    (and
                      (and
                        (game-optional
                          (not
                            (agent_holds ?h)
                          )
                        )
                        (forall (?h - cube_block ?h - chair ?bl - pillow)
                          (game-optional
                            (and
                              (and
                                (in_motion ?b10)
                                (agent_holds ?c)
                                (in_motion desk)
                              )
                              (not
                                (not
                                  (not
                                    (not
                                      (not
                                        (not
                                          (and
                                            (and
                                              (agent_holds desk)
                                              (agent_holds ?bl)
                                            )
                                            (not
                                              (in ?c ?bl)
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                      (game-optional
                        (and
                          (or
                            (rug_color_under ?h ?c)
                            (agent_holds ?b10)
                          )
                          (agent_holds ?h)
                        )
                      )
                    )
                  )
                )
              )
            )
            (exists (?h - (either chair laptop laptop cd ball golfball cellphone))
              (exists (?h - block)
                (exists (?h ?p - wall)
                  (game-optional
                    (not
                      (not
                        (not
                          (in_motion ?h)
                        )
                      )
                    )
                  )
                )
              )
            )
            (and
              (exists (?d - ball)
                (game-conserved
                  (on ?h ?d)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToBin
      (exists (?h - (either top_drawer side_table key_chain))
        (then
          (once (adjacent ?h ?h) )
          (hold (and (not (in_motion ?h) ) (agent_holds ?h) ) )
          (hold (in_motion ?h) )
        )
      )
    )
    (preference tanObjectMovedToRoomCenter
      (exists (?h - hexagonal_bin)
        (then
          (once (in_motion ?h) )
          (once (and (and (agent_holds ?h) (above ?h ?h) (object_orientation ?h ?h) ) (and (agent_holds ?h) (and (in ?h agent) (touch rug rug) ) (on ?h ?h) ) ) )
          (once-measure (exists (?p - building) (in_motion agent) ) (distance ?h ?h) )
          (once (and (in ?h ?h) (in_motion bed) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (external-forall-maximize (count-overlapping throwToBin:dodgeball) ) (count-increasing-measure throwToBin:yellow) )
    (count tanObjectMovedToRoomCenter:beachball)
  )
)
(:scoring
  (external-forall-maximize
    (* 1 2 0 )
  )
)
)



(define (game game-id-759) (:domain many-objects-room-v1)
(:setup
  (exists (?d - chair)
    (forall (?h - dodgeball)
      (forall (?c1 - dodgeball ?d - dodgeball)
        (game-conserved
          (and
            (and
              (on ?d ?d)
              (in_motion ?d)
            )
            (not
              (not
                (in_motion ?h)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference golfballInBinFromPillow
      (exists (?bl - hexagonal_bin ?h - building)
        (then
          (once (> 5 5) )
          (hold-while (broken ?h) (not (not (or (and (same_object ?h ?h) (and (and (agent_holds ?h) (and (and (and (in_motion ?h) (same_type ?h ?h) ) (not (in ?h ?h) ) (in_motion ?h) ) (and (in_motion upside_down) (rug_color_under ?h ?h) ) ) ) (agent_holds agent) ) (agent_holds floor) (not (not (on ?h ?h) ) ) ) (on ?h agent) ) ) ) )
          (hold (in ?h ?h) )
        )
      )
    )
  )
)
(:terminal
  (> 10 6 )
)
(:scoring
  (count-once-per-objects golfballInBinFromPillow:dodgeball:basketball)
)
)



(define (game game-id-760) (:domain many-objects-room-v1)
(:setup
  (exists (?bl - (either dodgeball dodgeball game_object) ?o - cube_block)
    (forall (?s - (either pencil cellphone blue_cube_block))
      (and
        (game-optional
          (in ?s ?o)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference redDodgeballThrownToBinWithoutTouchingFloor
      (exists (?d - doggie_bed ?g - game_object)
        (then
          (hold-while (game_over ) (not (in_motion ?g) ) (not (in agent ?g) ) (< (distance desk desk) 3) )
          (once (agent_holds ?g) )
          (once (< 7 (distance ?g ?g)) )
        )
      )
    )
    (preference ballToBinFromBed
      (exists (?b ?s - hexagonal_bin)
        (at-end
          (not
            (< (distance agent ?b) (building_size ?b))
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* (* (count-once-per-objects redDodgeballThrownToBinWithoutTouchingFloor:golfball) (- (* (+ 3 2 )
              (external-forall-maximize
                (* (* (count-longest ballToBinFromBed:yellow:dodgeball) (count-once-per-objects redDodgeballThrownToBinWithoutTouchingFloor:golfball) )
                  (count-once-per-objects ballToBinFromBed:dodgeball)
                )
              )
            )
          )
        )
        5
        (external-forall-maximize
          (- 100 )
        )
        3
        (count-once-per-objects ballToBinFromBed)
        5
        5
        (* 15 (+ (count-once-per-external-objects ballToBinFromBed:basketball:yellow) (count-once-per-objects ballToBinFromBed:cylindrical_block:basketball) )
        )
        5
      )
      (* 3 (* (+ (count ballToBinFromBed:green) (count redDodgeballThrownToBinWithoutTouchingFloor:golfball) )
          1
        )
      )
    )
    (>= (count-once-per-objects redDodgeballThrownToBinWithoutTouchingFloor:red:basketball) (/ (count redDodgeballThrownToBinWithoutTouchingFloor:book:basketball) (count-total ballToBinFromBed:dodgeball) ) )
  )
)
(:scoring
  (+ 10 5 )
)
)



(define (game game-id-761) (:domain few-objects-room-v1)
(:setup
  (exists (?r - chair)
    (game-optional
      (adjacent ?r pink_dodgeball)
    )
  )
)
(:constraints
  (and
    (preference objectWithMatchingColor
      (exists (?o5 - cube_block ?c2 - dodgeball)
        (then
          (once (and (rug_color_under ?c2 desk) (and (agent_holds ?c2) (agent_holds ?c2) ) (in ?c2 ?c2) ) )
          (once (not (and (adjacent ?c2 ?c2) (on room_center ?c2) ) ) )
          (hold (and (adjacent ?c2 ?c2) (in ?c2 ?c2) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (<= (total-score) (count-once-per-objects objectWithMatchingColor:bed) )
    (>= (* 5 (count objectWithMatchingColor:beachball:pink_dodgeball) )
      (total-time)
    )
    (> 9 (+ 4 (* (count-once-per-objects objectWithMatchingColor:dodgeball:doggie_bed) (count objectWithMatchingColor:yellow_cube_block) (count objectWithMatchingColor:green) )
        (count objectWithMatchingColor:yellow_cube_block)
      )
    )
    (or
      (>= (+ (count-once-per-objects objectWithMatchingColor:dodgeball:basketball) (count-once objectWithMatchingColor:yellow) )
        (total-time)
      )
      (>= (* 5 (count objectWithMatchingColor:golfball) (* 10 (count objectWithMatchingColor:basketball) )
        )
        8
      )
      (>= (count-longest objectWithMatchingColor:doggie_bed) (count objectWithMatchingColor:red) )
      (or
        (>= (total-score) 4 )
        (or
          (>= 5 (count objectWithMatchingColor) )
          (> (count objectWithMatchingColor:golfball) (total-time) )
          (>= (total-score) (count objectWithMatchingColor:purple) )
        )
      )
    )
  )
)
(:scoring
  (+ 6 2 2 (count objectWithMatchingColor:dodgeball) )
)
)



(define (game game-id-762) (:domain few-objects-room-v1)
(:setup
  (forall (?t1 - game_object ?p1 - dodgeball ?b - game_object)
    (exists (?g - game_object ?bl - hexagonal_bin)
      (game-optional
        (and
          (and
            (not
              (and
                (not
                  (adjacent ?b ?bl)
                )
                (touch agent ?b)
              )
            )
            (in_motion ?b)
            (game_over )
          )
          (is_setup_object ?b)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o - building ?b - building)
      (and
        (preference ballNeverThrown
          (exists (?b ?b10 ?b - hexagonal_bin)
            (at-end
              (object_orientation ?b ?b10)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= (* 2 (count ballNeverThrown:book) 9 (count ballNeverThrown:dodgeball:dodgeball) (< (* (count ballNeverThrown:wall) (count-once-per-objects ballNeverThrown:pink:dodgeball) (count-once ballNeverThrown:basketball) )
        (count ballNeverThrown:dodgeball)
      )
      1
    )
    (count ballNeverThrown:yellow_cube_block)
  )
)
(:scoring
  (+ (count-once-per-objects ballNeverThrown:hexagonal_bin) 7 )
)
)



(define (game game-id-763) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (exists (?h - hexagonal_bin)
        (game-optional
          (adjacent ?h bed)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwMissesBin
      (exists (?d - ball)
        (then
          (hold-while (not (agent_holds ?d) ) (agent_holds desk) )
          (once (not (in ?d ?d) ) )
          (once (< (distance ?d ?d) (distance ?d pink_dodgeball)) )
        )
      )
    )
    (forall (?h - hexagonal_bin)
      (and
        (preference objectInBuilding
          (exists (?g - flat_block)
            (at-end
              (in_motion ?g)
            )
          )
        )
      )
    )
    (forall (?s - hexagonal_bin ?h - ball ?d - hexagonal_bin)
      (and
        (preference ballThrowAttempt
          (exists (?p2 - cube_block ?b - (either cd golfball))
            (then
              (once (> 2 1) )
              (hold (>= 0.5 1) )
              (hold (in_motion ?d) )
            )
          )
        )
      )
    )
    (preference gameBlockFound
      (exists (?c1 - chair)
        (then
          (once (and (and (and (not (is_setup_object desk) ) (not (and (not (agent_holds ?c1) ) (and (agent_holds ?c1) (agent_holds ?c1) (in_motion ?c1) ) (and (agent_holds ?c1) (in ?c1 ?c1) (in_motion agent) ) ) ) ) (on ?c1 desk) ) (in ?c1 ?c1) (in_motion ?c1) (not (= 1 5) ) (agent_holds side_table) (exists (?p2 - chair) (not (agent_holds ?p2) ) ) (in ?c1 ?c1) ) )
          (once (not (> 1 4) ) )
          (once (agent_holds ?c1) )
        )
      )
    )
    (forall (?w1 ?d - hexagonal_bin)
      (and
        (preference woodenBlockMovedFromRugToDesk
          (exists (?h - ball)
            (at-end
              (and
                (not
                  (in_motion ?w1)
                )
                (and
                  (and
                    (and
                      (not
                        (and
                          (not
                            (not
                              (in_motion agent)
                            )
                          )
                          (agent_holds ?w1)
                          (in ?d ?h)
                        )
                      )
                      (in_motion ?d)
                    )
                    (not
                      (not
                        (not
                          (not
                            (and
                              (not
                                (on ?d ?d)
                              )
                              (and
                                (not
                                  (in_motion ?h)
                                )
                                (in_motion rug)
                                (agent_holds ?h)
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                  (in_motion ?h)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 5 50 )
)
(:scoring
  (* (count throwMissesBin:blue_cube_block) (>= 2 (* 3 (count-total gameBlockFound) )
    )
  )
)
)



(define (game game-id-764) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (exists (?d1 - dodgeball)
        (game-conserved
          (object_orientation ?d1 ?d1)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blueObjectMovedToRoomCenter
      (exists (?o - cube_block)
        (at-end
          (on agent bed)
        )
      )
    )
    (forall (?c - red_dodgeball)
      (and
        (preference rollBallToBin
          (exists (?b4 - game_object ?h - ball ?l - curved_wooden_ramp)
            (then
              (once (and (< 2 (distance green_golfball ?c)) (adjacent ?c ?l) ) )
              (once (between ?l ?c ?l) )
              (hold (and (not (and (on desk ?l) (in_motion ?l) (and (and (and (not (agent_holds ?c) ) (not (not (and (and (agent_holds desk) (exists (?b - hexagonal_bin) (not (in_motion ?b) ) ) (not (and (agent_holds floor) (not (agent_holds agent) ) (not (agent_holds ?l) ) (in front ?l) (adjacent ?l ?l) ) ) ) (open ?l) (and (not (in_motion ?c) ) (on ?c ?c) ) ) ) ) ) (not (and (agent_holds ?c) (= 1 2) (on ?l ?l) (and (or (not (in ?c ?l) ) (in ?l bed) ) (in_motion ?l) ) (and (in ?c ?l) (agent_holds ?c) ) (same_object ?l ?l) ) ) ) (not (and (and (not (agent_holds ?c) ) (agent_holds ?c) ) (not (not (in_motion ?c) ) ) (not (adjacent ?l ?l) ) ) ) ) (agent_holds rug) ) ) (agent_holds ?l) (not (touch ?l ?c) ) (and (agent_holds bed) (in_motion desk) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (total-score) (count-increasing-measure rollBallToBin:hexagonal_bin:basketball) )
      (> (total-time) 9 )
    )
    (>= (+ (count rollBallToBin:orange) (count rollBallToBin:green) 10 )
      (count-once-per-objects rollBallToBin:dodgeball)
    )
  )
)
(:scoring
  (- 2 )
)
)



(define (game game-id-765) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?c - hexagonal_bin ?l3 - chair)
      (game-optional
        (adjacent ?l3 ?l3)
      )
    )
    (exists (?d - dodgeball)
      (game-optional
        (in_motion ?d)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToChair
      (exists (?d - dodgeball ?b ?g - chair ?l2 - game_object ?h - teddy_bear)
        (then
          (hold (between ?h ?h ?h) )
          (hold-while (exists (?b - curved_wooden_ramp) (agent_holds ?h) ) (and (in_motion ?h) (exists (?o - cylindrical_block) (agent_holds rug) ) ) (on ?h ?h) (in ?h ?h) )
          (once (not (on top_shelf ?h) ) )
        )
      )
    )
  )
)
(:terminal
  (> (* 5 (+ (count ballThrownToChair:dodgeball) )
    )
    (* (= (* 60 (+ 4 (count ballThrownToChair:cylindrical_block:book) )
          (* (count ballThrownToChair:dodgeball) 0 )
        )
        (* (* (>= (* (count ballThrownToChair:pink) 3 )
              10
            )
            1
          )
          3
        )
      )
      (count ballThrownToChair:yellow)
    )
  )
)
(:scoring
  (count-once-per-external-objects ballThrownToChair)
)
)



(define (game game-id-766) (:domain many-objects-room-v1)
(:setup
  (exists (?g - cube_block)
    (and
      (game-conserved
        (and
          (not
            (agent_holds ?g)
          )
          (in_motion ?g)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectThrownFromRug
      (exists (?b - block)
        (then
          (hold (in ?b blue) )
          (hold (in_motion desk) )
          (once (not (in_motion rug) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (not
      (and
        (>= (count-once-per-objects objectThrownFromRug:golfball) (count-once-per-objects objectThrownFromRug:green:dodgeball) )
        (> 3 3 )
        (= 5 (total-score) )
      )
    )
  )
)
(:scoring
  (- (count objectThrownFromRug:tan) )
)
)



(define (game game-id-767) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (game_over )
  )
)
(:constraints
  (and
    (preference woodenBlockMovedFromRugToDesk
      (exists (?c - block ?o ?h - hexagonal_bin)
        (then
          (once (in_motion ?o) )
          (once (in_motion ?h) )
          (once (in ?h ?o) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (+ 3 5 )
      10
    )
  )
)
(:scoring
  (count-once woodenBlockMovedFromRugToDesk:dodgeball)
)
)



(define (game game-id-768) (:domain many-objects-room-v1)
(:setup
  (exists (?b8 - cube_block ?b - cube_block)
    (game-conserved
      (agent_holds ?b)
    )
  )
)
(:constraints
  (and
    (preference thrownBallHitsBlock
      (exists (?g - dodgeball ?r2 - curved_wooden_ramp)
        (then
          (once (touch ?r2 ?r2) )
        )
      )
    )
  )
)
(:terminal
  (> (count thrownBallHitsBlock:dodgeball) (count thrownBallHitsBlock:hexagonal_bin) )
)
(:scoring
  (= 9 (* 1 5 )
  )
)
)



(define (game game-id-769) (:domain few-objects-room-v1)
(:setup
  (or
    (exists (?r - hexagonal_bin ?t - (either pen pyramid_block) ?b - game_object)
      (exists (?h - block)
        (game-conserved
          (and
            (< 1 (distance tan ?b))
            (agent_holds ?b)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?h - hexagonal_bin ?b4 ?h - cylindrical_block ?o5 - hexagonal_bin)
        (then
          (once (on ?o5 ?o5) )
          (once (agent_crouches ) )
          (hold (not (and (and (in_motion ?o5) (agent_holds ?o5) ) (same_object ?o5 ?o5) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count throwAttempt:pink) 2 )
)
(:scoring
  (count throwAttempt:pink_dodgeball)
)
)



(define (game game-id-770) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (forall (?h - ball)
        (forall (?d ?c ?h - (either cellphone blue_cube_block) ?d - (either dodgeball cylindrical_block golfball pyramid_block))
          (forall (?h - teddy_bear)
            (exists (?w2 - wall)
              (forall (?w1 - chair ?l4 - doggie_bed)
                (game-optional
                  (in ?d ?w2)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference failedThrowToBin
      (exists (?x - pillow)
        (then
          (hold (agent_holds ?x) )
          (hold (exists (?p1 - curved_wooden_ramp) (in_motion ?x) ) )
          (once (and (and (agent_holds ?x) (> (distance ?x pink_dodgeball) (distance ?x ?x)) (not (same_color ?x room_center) ) (same_object ?x ?x) ) (in_motion desk) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (+ (count failedThrowToBin:pink) (* (count-once-per-objects failedThrowToBin:dodgeball:white) (external-forall-maximize (count-once-per-objects failedThrowToBin:dodgeball:purple) ) )
    )
  )
)
(:scoring
  (count-once-per-objects failedThrowToBin:beachball)
)
)



(define (game game-id-771) (:domain medium-objects-room-v1)
(:setup
  (forall (?b1 - doggie_bed ?c - game_object)
    (forall (?c - dodgeball)
      (and
        (and
          (and
            (exists (?h - teddy_bear)
              (and
                (exists (?x ?c5 - hexagonal_bin)
                  (game-optional
                    (exists (?h - block ?c - curved_wooden_ramp)
                      (in ?c ?c)
                    )
                  )
                )
              )
            )
          )
        )
        (forall (?o - ball)
          (and
            (exists (?s - building ?w - chair ?d - cube_block ?b - cube_block)
              (and
                (and
                  (and
                    (exists (?b - wall)
                      (game-conserved
                        (> (distance ?b bed) 1)
                      )
                    )
                  )
                  (and
                    (and
                      (game-conserved
                        (agent_holds ?o)
                      )
                      (game-conserved
                        (and
                          (open ?o)
                          (agent_holds desk)
                        )
                      )
                    )
                  )
                )
                (game-conserved
                  (and
                    (opposite ?b ?c)
                    (and
                      (agent_crouches )
                      (not
                        (or
                          (and
                            (on bed ?c)
                            (agent_holds ?b)
                            (not
                              (object_orientation ?o ?o)
                            )
                          )
                          (agent_holds ?o)
                        )
                      )
                    )
                  )
                )
                (game-conserved
                  (adjacent ?c ?c)
                )
              )
            )
          )
        )
        (and
          (exists (?g - building)
            (exists (?b - hexagonal_bin)
              (and
                (and
                  (game-conserved
                    (not
                      (< (distance ?c ?c) (distance_side ?g ?c ?c))
                    )
                  )
                )
                (game-optional
                  (in_motion ?c)
                )
                (game-optional
                  (faces ?c ?c)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - hexagonal_bin)
      (and
        (preference blockOnBlockInTowerAtEnd
          (exists (?c3 - hexagonal_bin)
            (then
              (once (in_motion ?b) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (total-score) (- (count blockOnBlockInTowerAtEnd:golfball) )
  )
)
(:scoring
  (+ (count blockOnBlockInTowerAtEnd:dodgeball) 4 )
)
)



(define (game game-id-772) (:domain many-objects-room-v1)
(:setup
  (exists (?d - (either blue_cube_block tall_cylindrical_block))
    (forall (?h - chair)
      (exists (?o3 - game_object)
        (and
          (exists (?b - hexagonal_bin)
            (and
              (game-conserved
                (not
                  (on ?b ?h)
                )
              )
            )
          )
          (exists (?l - curved_wooden_ramp)
            (game-conserved
              (not
                (and
                  (in_motion ?l)
                  (in_motion ?l)
                )
              )
            )
          )
          (game-optional
            (in_motion ?h)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference greenObjectMovedToRoomCenter
      (exists (?b ?h ?c ?s - chair)
        (then
          (hold-while (in_motion ?h) (or (not (= (distance ?c ?s) 0.5) ) (exists (?b - (either cube_block cube_block ball laptop)) (or (on ?c desk) (not (in_motion ?c) ) ) ) (and (equal_z_position ?b ?s) (is_setup_object ?c) ) ) )
          (once (equal_x_position ?c ?s) )
          (once (adjacent ?s ?c) )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (count greenObjectMovedToRoomCenter:beachball) )
)
(:scoring
  (count-overlapping greenObjectMovedToRoomCenter:dodgeball:green)
)
)



(define (game game-id-773) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds agent)
  )
)
(:constraints
  (and
    (preference failedThrowToBin
      (exists (?o4 - block ?r2 ?d ?p1 - building ?h - curved_wooden_ramp ?r - dodgeball)
        (then
          (once (not (and (not (agent_holds ?r) ) (not (and (not (agent_holds ?r) ) (in_motion ?r) ) ) ) ) )
          (hold (in_motion ?r) )
          (hold-while (not (agent_holds ?r) ) (agent_holds agent) )
        )
      )
    )
    (preference pyramidBlockAtopTowerAtEnd
      (exists (?d - curved_wooden_ramp)
        (then
          (hold (agent_holds ?d) )
          (hold (agent_holds ?d) )
          (once (exists (?p - dodgeball ?f - block) (agent_holds ?d) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (not
      (or
        (>= 15 (count-once-per-objects pyramidBlockAtopTowerAtEnd:dodgeball:blue_dodgeball) )
        (> 3 (count pyramidBlockAtopTowerAtEnd:blue_dodgeball) )
        (>= (* (= 9 3 )
            (count failedThrowToBin:yellow)
            3
            (count failedThrowToBin:pink:golfball)
          )
          (count-once-per-objects failedThrowToBin:basketball)
        )
      )
    )
    (or
      (<= (count-same-positions pyramidBlockAtopTowerAtEnd:beachball) 5 )
      (> 5 (external-forall-minimize (<= (count pyramidBlockAtopTowerAtEnd) (* 10 (count failedThrowToBin:red:hexagonal_bin) )
          )
        )
      )
      (>= (count pyramidBlockAtopTowerAtEnd:dodgeball) (external-forall-maximize (count pyramidBlockAtopTowerAtEnd:dodgeball) ) )
    )
  )
)
(:scoring
  (* (+ (count pyramidBlockAtopTowerAtEnd:pink:beachball) (+ (count-once-per-objects failedThrowToBin:pink) (external-forall-maximize (* (count-once-per-objects pyramidBlockAtopTowerAtEnd:blue_pyramid_block) 5 )
        )
      )
      (count-once-per-objects pyramidBlockAtopTowerAtEnd:yellow:dodgeball)
    )
    (external-forall-minimize
      (* 9 (* 5 (count failedThrowToBin:pink) )
      )
    )
  )
)
)



(define (game game-id-774) (:domain medium-objects-room-v1)
(:setup
  (exists (?d - hexagonal_bin ?c2 - game_object)
    (and
      (game-conserved
        (in_motion ?c2)
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballHitsBin
      (exists (?o - game_object)
        (then
          (once (agent_holds room_center) )
          (hold (on south_west_corner agent) )
          (hold (agent_holds ?o) )
        )
      )
    )
    (preference ballDroppedInBin
      (exists (?b6 - block ?p1 ?d - game_object)
        (at-end
          (and
            (on ?p1 ?p1)
            (in ?d ?p1)
          )
        )
      )
    )
    (forall (?r - (either cube_block book cd alarm_clock tall_cylindrical_block book credit_card))
      (and
        (preference itemsBroken
          (exists (?h - dodgeball ?l4 - (either block main_light_switch doggie_bed) ?h - cube_block ?d - cube_block)
            (then
              (once (not (and (in ?d ?d) (>= 9 (building_size agent)) ) ) )
              (hold (and (agent_crouches ) (not (or (in ?d ?r) (< (x_position ?r) 2) ) ) ) )
              (hold (in_motion ?d) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (* (* (external-forall-maximize (* 2 (* (* 1 (+ (* (count-once-per-objects ballDroppedInBin:yellow_pyramid_block) (count ballDroppedInBin:golfball) )
                  (* 1 (= (count-once-per-external-objects itemsBroken:basketball) (count itemsBroken:red_pyramid_block) )
                  )
                )
                (count dodgeballHitsBin:beachball)
                1
              )
              (* 10 (count-once-per-objects dodgeballHitsBin:beachball) )
            )
          )
        )
        40
        3
      )
      7
    )
  )
)
(:scoring
  (* (count-once-per-objects itemsBroken:red:blue_cube_block) 10 )
)
)



(define (game game-id-775) (:domain medium-objects-room-v1)
(:setup
  (exists (?h - (either dodgeball))
    (exists (?o - hexagonal_bin)
      (exists (?c4 - hexagonal_bin)
        (exists (?o5 - cube_block)
          (and
            (forall (?w2 - hexagonal_bin ?l1 - hexagonal_bin)
              (exists (?d - wall)
                (game-conserved
                  (adjacent sideways ?h)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?x - curved_wooden_ramp ?w1 - dodgeball)
      (and
        (preference pillowThrownToDoggieBed
          (exists (?c1 - hexagonal_bin ?b5 - chair)
            (then
              (hold (in_motion ?b5) )
              (once (on ?b5 ?b5) )
              (hold-while (agent_holds ?w1) (exists (?o3 - dodgeball ?d - cube_block ?b ?w ?o1 ?w1 - game_object) (not (< (distance ?b bed) 3) ) ) (agent_holds ?w1) (in_motion ?w1) )
            )
          )
        )
        (preference objectWithMatchingColor
          (at-end
            (agent_holds ?w1)
          )
        )
        (preference nonBlockPlacedInBuilding
          (exists (?b - block ?s - dodgeball)
            (at-end
              (agent_holds agent)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (* (+ (count pillowThrownToDoggieBed:doggie_bed) (count objectWithMatchingColor:top_drawer) )
        1
      )
      (count pillowThrownToDoggieBed:dodgeball)
      (count-once-per-objects nonBlockPlacedInBuilding:golfball)
    )
    (count-unique-positions pillowThrownToDoggieBed:dodgeball)
  )
)
(:scoring
  (* (* 4 (* 1 1 )
    )
    7
    6
  )
)
)



(define (game game-id-776) (:domain many-objects-room-v1)
(:setup
  (forall (?h - triangular_ramp)
    (game-conserved
      (in_motion ?h)
    )
  )
)
(:constraints
  (and
    (preference ballThrownFromRug
      (exists (?d - hexagonal_bin)
        (then
          (once (on green_golfball ?d) )
          (hold (or (in_motion ?d) (agent_holds pink_dodgeball) ) )
          (once (and (and (agent_holds agent) (and (in_motion desk) (in ?d ?d) (not (on room_center ?d) ) (agent_holds ?d) ) ) (< (distance ?d ?d) (distance agent ?d)) (equal_x_position ?d ?d) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (= (count-once-per-objects ballThrownFromRug) (* (* (count-once-per-objects ballThrownFromRug:pink:pink) (count ballThrownFromRug:alarm_clock) (* (count-once ballThrownFromRug:pyramid_block) 8 )
          (* 2 6 )
        )
        (count ballThrownFromRug:green)
      )
    )
  )
)
(:scoring
  (count-once-per-objects ballThrownFromRug:beachball)
)
)



(define (game game-id-777) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (and
        (exists (?c1 - beachball)
          (game-conserved
            (touch ?c1 ?c1)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?r ?s - hexagonal_bin)
      (and
        (preference ballThrowAttempt
          (exists (?w2 - game_object)
            (then
              (once (opposite ?w2 ?s) )
              (hold (in_motion ?r) )
              (once (on ?w2 ?w2) )
              (once (and (adjacent ?w2 ?r) (in_motion ?r) (in_motion ?s) ) )
            )
          )
        )
      )
    )
    (forall (?s - pillow)
      (and
        (preference bounceBallToBin
          (exists (?h - block)
            (at-end
              (in bed ?s)
            )
          )
        )
        (preference ballKnocksBlockFromRug
          (exists (?t - chair)
            (then
              (once (in ?s ?s) )
              (hold (in_motion ?t) )
              (once (agent_holds ?t) )
            )
          )
        )
      )
    )
    (preference throwToRampToBin
      (exists (?o - dodgeball)
        (then
          (once (< (distance ?o ?o) 0.5) )
          (once (agent_holds ?o) )
          (hold (and (in front ?o) (and (agent_holds ?o) (in_motion ?o) ) ) )
          (once (in_motion agent) )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (* 10 10 (count throwToRampToBin:basketball) )
  )
)
(:scoring
  (count throwToRampToBin:yellow:golfball)
)
)



(define (game game-id-778) (:domain many-objects-room-v1)
(:setup
  (exists (?b10 - curved_wooden_ramp ?ob - (either wall hexagonal_bin) ?g - cube_block ?d - (either basketball pink))
    (game-conserved
      (in_motion ?d)
    )
  )
)
(:constraints
  (and
    (preference ballThrownFromRug
      (exists (?l2 - hexagonal_bin ?t ?p ?c ?bl - building)
        (then
          (once (and (not (not (> 1 (distance ?bl desk)) ) ) (not (touch ?c ?bl) ) (= (distance bed ?c) 1) ) )
          (hold (and (< (distance ?c ?p) (distance ?p ?t)) (not (not (in_motion ?p) ) ) ) )
          (once (object_orientation ?p ?p) )
          (once (in_motion desk) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= 2 3 )
  )
)
(:scoring
  (+ 3 (external-forall-maximize (count-measure ballThrownFromRug:book) ) )
)
)



(define (game game-id-779) (:domain few-objects-room-v1)
(:setup
  (exists (?c1 - block ?h - hexagonal_bin)
    (and
      (game-optional
        (in_motion ?h)
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - game_object)
      (and
        (preference objectToBinOnFirstTry
          (exists (?o - hexagonal_bin ?l - hexagonal_bin ?h - (either pink wall red))
            (then
              (once (not (agent_holds ?h) ) )
              (once (and (agent_holds ?h) (on ?h door) ) )
              (once (adjacent_side ?h agent front) )
            )
          )
        )
        (preference ballThrownToRampToBed
          (exists (?w - shelf ?h - hexagonal_bin)
            (then
              (once (game_start ) )
              (hold (and (> 3 1) (agent_holds ?h) ) )
              (hold (not (on rug ?h) ) )
              (once (on ?h ?h) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count objectToBinOnFirstTry:hexagonal_bin) (count-once-per-objects ballThrownToRampToBed:dodgeball:beachball) )
)
(:scoring
  (count objectToBinOnFirstTry:blue_dodgeball:pink)
)
)



(define (game game-id-780) (:domain many-objects-room-v1)
(:setup
  (exists (?b - building ?o1 - hexagonal_bin)
    (game-conserved
      (in_motion ?o1)
    )
  )
)
(:constraints
  (and
    (preference objectWithMatchingColor
      (exists (?l3 - ball ?p2 - hexagonal_bin)
        (at-end
          (and
            (in_motion ?p2)
            (agent_holds brown)
            (adjacent ?p2 agent)
          )
        )
      )
    )
    (preference failedThrowAttempt
      (exists (?h - curved_wooden_ramp)
        (then
          (hold (adjacent ?h agent) )
          (once (and (on agent ?h) (broken ?h) ) )
          (once (and (not (not (above desk ?h) ) ) (and (broken ?h) (and (and (agent_holds ?h) (and (in ?h ?h) (not (adjacent ?h rug) ) (not (in_motion ?h) ) (and (< (distance ?h ?h) 1) (in ?h ?h) ) (not (agent_holds top_shelf) ) (in_motion ?h) (not (exists (?h - (either bridge_block dodgeball)) (in desk ?h) ) ) ) ) (not (not (adjacent bed ?h) ) ) ) ) ) )
          (once (and (adjacent ?h ?h) (in_motion ?h) ) )
        )
      )
    )
    (preference throwBallToBinOffObject
      (exists (?b - (either cellphone cube_block))
        (at-end
          (and
            (not
              (not
                (and
                  (and
                    (in_motion bed)
                    (not
                      (not
                        (agent_holds ?b)
                      )
                    )
                  )
                  (not
                    (or
                      (not
                        (touch ?b agent)
                      )
                    )
                  )
                  (in north_wall ?b)
                  (and
                    (in pink ?b)
                    (object_orientation ?b ?b)
                  )
                )
              )
            )
            (not
              (object_orientation ?b ?b)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (+ (+ (* 4 10 )
        (count-once-per-objects throwBallToBinOffObject:pyramid_block:basketball)
      )
      (count throwBallToBinOffObject:yellow:bed)
    )
    (total-score)
  )
)
(:scoring
  (count-total throwBallToBinOffObject:yellow)
)
)



(define (game game-id-781) (:domain medium-objects-room-v1)
(:setup
  (forall (?b6 - game_object)
    (and
      (forall (?h - curved_wooden_ramp)
        (game-conserved
          (on floor ?h)
        )
      )
      (exists (?g - (either key_chain cube_block alarm_clock))
        (and
          (game-conserved
            (not
              (not
                (and
                  (touch ?b6 ?g)
                  (not
                    (forall (?h - chair)
                      (not
                        (on ?h pink_dodgeball)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o5 - (either cd dodgeball))
      (and
        (preference objectThrownFromRug
          (exists (?tb - doggie_bed ?r - hexagonal_bin)
            (then
              (once (same_color ?o5 ?o5) )
              (hold (= 3 1) )
              (once (not (not (agent_holds ?o5) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> 30 (- 0 )
  )
)
(:scoring
  (* (count-total objectThrownFromRug:basketball:block) (count objectThrownFromRug:doggie_bed) (count-total objectThrownFromRug:yellow) )
)
)



(define (game game-id-782) (:domain medium-objects-room-v1)
(:setup
  (exists (?o - building ?b - (either basketball pink bridge_block lamp cube_block dodgeball basketball) ?h - hexagonal_bin)
    (game-optional
      (and
        (is_setup_object agent)
        (not
          (exists (?h - pillow)
            (exists (?h - (either cylindrical_block blue_cube_block))
              (agent_holds ?h)
            )
          )
        )
        (not
          (>= 1 1)
        )
        (< (distance_side ?h ?h ?h ?h) 10)
        (agent_holds ?h)
        (< 1 1)
        (on ?h ?h)
      )
    )
  )
)
(:constraints
  (and
    (preference golfballUnderBridgeWithoutTouchingBlock
      (exists (?r2 ?c1 ?r2 - (either lamp))
        (at-end
          (touch pillow ?r2)
        )
      )
    )
    (forall (?p - shelf ?p - block)
      (and
        (preference blocksInPlace
          (exists (?o1 - hexagonal_bin)
            (at-end
              (not
                (in_motion ?p)
              )
            )
          )
        )
        (preference throwMovesBeachballWithoutKnockingTeddy
          (exists (?o - teddy_bear)
            (then
              (once (exists (?x - hexagonal_bin) (or (exists (?h - golfball ?l2 - book) (and (not (not (or (exists (?b6 - bridge_block) (exists (?c1 - dodgeball ?b4 - (either beachball doggie_bed)) (on bed ?b4) ) ) (on ?l2 rug) ) ) ) (in_motion ?l2) ) ) (in_motion ?p) ) ) )
              (once (agent_holds ?p) )
              (once (rug_color_under ?p agent) )
            )
          )
        )
        (preference blockFromRugToDesk
          (exists (?d ?h - hexagonal_bin)
            (at-end
              (and
                (and
                  (on ?d ?h)
                  (in_motion ?d)
                  (in_motion ?h)
                )
                (exists (?c1 - wall)
                  (and
                    (not
                      (or
                        (in ?d ?c1)
                        (agent_holds ?c1)
                      )
                    )
                    (is_setup_object ?h)
                  )
                )
              )
            )
          )
        )
      )
    )
    (preference golfballInBinFromPillow
      (exists (?d - hexagonal_bin ?b - ball)
        (at-end
          (in_motion agent)
        )
      )
    )
  )
)
(:terminal
  (>= (+ 30 2 )
    2
  )
)
(:scoring
  (count-once golfballInBinFromPillow:orange)
)
)



(define (game game-id-783) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (same_type bed agent)
  )
)
(:constraints
  (and
    (preference ballThrownToWallToAgent
      (exists (?b7 - hexagonal_bin)
        (at-end
          (not
            (and
              (agent_holds ?b7)
              (and
                (same_object ?b7 ?b7)
                (in_motion pink_dodgeball)
                (not
                  (adjacent floor ?b7)
                )
              )
            )
          )
        )
      )
    )
    (preference throwToRampToBin
      (exists (?h - wall)
        (then
          (once (< (building_size ?h) 1) )
          (once (and (and (forall (?p2 - ball ?b2 - hexagonal_bin ?h - dodgeball) (agent_holds ?h) ) (in_motion ?h) ) (agent_holds ?h) ) )
          (hold-while (opposite ?h ?h) (= (distance ?h ?h) (distance floor ?h)) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (total-time) (* 100 6 )
    )
    (>= (= (count-longest throwToRampToBin:green) (count throwToRampToBin:red) )
      (* (* (count-once-per-objects throwToRampToBin:dodgeball:yellow_cube_block) 3 (count throwToRampToBin:yellow:yellow_pyramid_block) 60 4 (count ballThrownToWallToAgent:orange:basketball) 2 (count ballThrownToWallToAgent:pink) 40 (count throwToRampToBin:purple) 10 2 )
        (count-once-per-objects throwToRampToBin:dodgeball)
      )
    )
  )
)
(:scoring
  (count throwToRampToBin:dodgeball)
)
)



(define (game game-id-784) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?b8 - hexagonal_bin)
      (game-conserved
        (and
          (and
            (agent_holds ?b8)
          )
          (agent_holds agent)
          (in_motion desk)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownThroughRampToBin
      (exists (?d2 - (either laptop key_chain))
        (then
          (once (on ?d2 ?d2) )
          (hold (in_motion ?d2) )
          (hold (<= 1 (x_position desk)) )
        )
      )
    )
  )
)
(:terminal
  (> 5 (total-score) )
)
(:scoring
  (count ballThrownThroughRampToBin:basketball)
)
)



(define (game game-id-785) (:domain few-objects-room-v1)
(:setup
  (forall (?g ?h - dodgeball)
    (and
      (and
        (and
          (game-conserved
            (in_motion ?g)
          )
          (and
            (and
              (exists (?b - hexagonal_bin)
                (game-conserved
                  (agent_holds ?h)
                )
              )
              (and
                (exists (?o - cylindrical_block ?bl - (either pen pyramid_block))
                  (game-conserved
                    (between ?g ?g ?g)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference cubeThrownToBin
      (exists (?b ?b6 - (either tall_cylindrical_block golfball))
        (then
          (hold (touch blue ?b6) )
          (hold (agent_holds ?b6) )
          (once (in_motion ?b) )
        )
      )
    )
    (forall (?r - red_dodgeball)
      (and
        (preference ballThrownMissesEverything
          (exists (?w1 - dodgeball ?p - dodgeball)
            (then
              (once (agent_holds ?r) )
              (once (on ?p ?p) )
              (once (agent_holds ?r) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 1 0.7 )
)
(:scoring
  (- 5 )
)
)



(define (game game-id-786) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?b10 - building)
      (and
        (and
          (game-optional
            (and
              (and
                (not
                  (equal_z_position ?b10 ?b10)
                )
                (not
                  (not
                    (on floor ?b10)
                  )
                )
              )
              (in_motion room_center)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectInBuilding
      (exists (?h - wall)
        (then
          (once (not (not (agent_holds brown) ) ) )
          (hold (not (agent_holds ?h) ) )
          (once (touch ?h ?h) )
        )
      )
    )
    (preference blocksInPlace
      (exists (?c - golfball)
        (then
          (once (not (adjacent_side ?c ?c ?c) ) )
          (once (agent_holds ?c) )
          (once (agent_holds ?c) )
        )
      )
    )
  )
)
(:terminal
  (not
    (and
      (<= 2 (count blocksInPlace:dodgeball) )
      (>= 100 (count objectInBuilding:pink) )
    )
  )
)
(:scoring
  (* 10 (* (* (* 3 (count-once objectInBuilding:red) )
        (count-total objectInBuilding:dodgeball:dodgeball:beachball)
      )
      (count blocksInPlace:wall)
    )
  )
)
)



(define (game game-id-787) (:domain medium-objects-room-v1)
(:setup
  (exists (?o ?d - hexagonal_bin ?d - hexagonal_bin ?l1 - curved_wooden_ramp ?c - block)
    (and
      (exists (?s - (either tall_cylindrical_block bridge_block))
        (game-conserved
          (touch ?c ?c)
        )
      )
      (and
        (exists (?b9 - cube_block)
          (exists (?b - hexagonal_bin)
            (forall (?g - (either alarm_clock top_drawer) ?h ?h - ball)
              (forall (?r ?c1 - building)
                (game-conserved
                  (and
                    (on ?c1 ?b9)
                    (agent_holds ?c1)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballNeverThrown
      (exists (?b1 - ball)
        (then
          (once (< (distance ?b1 ?b1) (distance ?b1 ?b1)) )
          (once (agent_crouches ) )
          (once (adjacent ?b1 ?b1) )
        )
      )
    )
  )
)
(:terminal
  (>= 10 3 )
)
(:scoring
  (+ (count-unique-positions ballNeverThrown:cube_block) 300 )
)
)



(define (game game-id-788) (:domain few-objects-room-v1)
(:setup
  (exists (?p - hexagonal_bin)
    (exists (?g - bridge_block)
      (game-conserved
        (in_motion ?p)
      )
    )
  )
)
(:constraints
  (and
    (preference beachballOnRug
      (exists (?o ?c5 - curved_wooden_ramp ?l4 - wall)
        (then
          (hold (in ?l4 ?l4) )
          (once (on ?l4 ?l4) )
          (once (game_start ) )
        )
      )
    )
  )
)
(:terminal
  (>= 0 (+ (* (count-overlapping beachballOnRug:basketball) (+ (count beachballOnRug:beachball:blue_dodgeball) (+ 6 (* (count beachballOnRug:dodgeball) 5 )
          )
        )
      )
      1
    )
  )
)
(:scoring
  (- (external-forall-maximize (+ (count beachballOnRug:yellow) (count-once beachballOnRug:dodgeball:dodgeball) )
    )
  )
)
)



(define (game game-id-789) (:domain medium-objects-room-v1)
(:setup
  (exists (?r1 - (either yellow_cube_block alarm_clock cellphone))
    (and
      (forall (?w1 - ball)
        (exists (?d2 - beachball)
          (game-conserved
            (and
              (and
                (agent_holds ?r1)
                (agent_holds blue)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToRug
      (exists (?c4 - game_object)
        (then
          (hold (not (>= (distance_side ?c4 ?c4 ?c4 floor) (distance ?c4 ?c4)) ) )
          (once (not (in ?c4 ?c4) ) )
          (once (exists (?d - pillow) (and (on ?c4 ?d) (in_motion front) (in_motion ?d) (and (and (not (and (and (exists (?ob - hexagonal_bin ?l4 - shelf ?h - game_object) (in_motion ?c4) ) (not (agent_holds ?d) ) ) (is_setup_object ?c4) ) ) (< (distance ?d ?c4) (distance room_center ?d)) (in desk ?d) (and (adjacent floor ?c4) (or (not (and (not (in_motion ?d) ) (or (and (not (in agent ?d) ) (in_motion ?d) ) (not (and (agent_holds ?c4) (game_over ) ) ) ) ) ) (< 1 3) ) ) (equal_z_position ?c4 ?d) (agent_holds ?c4) ) (not (on front agent) ) ) (in_motion ?c4) (not (agent_holds ?c4) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (< (total-score) (count ballThrownToRug) )
)
(:scoring
  (count-once-per-objects ballThrownToRug)
)
)



(define (game game-id-790) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?h - hexagonal_bin ?l2 - hexagonal_bin ?h - blinds)
      (exists (?b - building)
        (exists (?c - chair ?d - (either key_chain lamp))
          (and
            (game-conserved
              (agent_holds ?b)
            )
            (forall (?w - dodgeball ?l2 - block)
              (game-conserved
                (not
                  (not
                    (<= 1 1)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference teddyBearLandsInBin
      (exists (?c3 - cylindrical_block)
        (then
          (once (< (distance ?c3 ?c3) (distance ?c3 ?c3)) )
          (once (not (and (not (= (x_position ?c3) (distance ?c3 ?c3)) ) ) ) )
          (once (in_motion ?c3) )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (* (+ (* (count teddyBearLandsInBin:beachball) 3 )
        20
      )
      2
    )
  )
)
(:scoring
  (* 15 (count teddyBearLandsInBin:green:blue_pyramid_block) )
)
)



(define (game game-id-791) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-conserved
      (in_motion bed)
    )
  )
)
(:constraints
  (and
    (preference thrownBallHitsBlock
      (exists (?r - ball)
        (at-end
          (agent_holds ?r)
        )
      )
    )
  )
)
(:terminal
  (> (count thrownBallHitsBlock:red) (count-overlapping thrownBallHitsBlock:dodgeball:yellow) )
)
(:scoring
  (- 5 )
)
)



(define (game game-id-792) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (is_setup_object room_center)
  )
)
(:constraints
  (and
    (preference dodgeballHitsBinBottom
      (exists (?o - (either triangle_block beachball) ?l3 ?b - (either cylindrical_block alarm_clock))
        (then
          (once (in_motion desk) )
          (once (in desk ?l3) )
          (hold (in ?l3 ?l3) )
        )
      )
    )
    (forall (?r - dodgeball)
      (and
        (preference matchingBuildingBuilt
          (exists (?h ?b2 - beachball)
            (then
              (hold (not (faces ?r ?r) ) )
              (hold (adjacent ?h ?b2) )
              (once (not (adjacent_side ?b2 ?r ?r) ) )
            )
          )
        )
      )
    )
    (preference ballRolledOnRampToRug
      (exists (?h - triangular_ramp ?r - hexagonal_bin)
        (then
          (once (and (same_type ?r ?r) (< (distance ?r ?r) 9) ) )
          (once (agent_holds desk) )
          (hold (and (in ?r agent) (not (not (and (not (in_motion front) ) (and (or (agent_holds ?r) (agent_holds ?r) ) (not (agent_holds ?r) ) ) (in ?r back) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (- 1 )
    (total-score)
  )
)
(:scoring
  (= 6 3 (/ (+ 8 10 )
      (count matchingBuildingBuilt:pink)
    )
  )
)
)



(define (game game-id-793) (:domain medium-objects-room-v1)
(:setup
  (exists (?db - game_object)
    (forall (?b - block)
      (exists (?o1 - wall)
        (and
          (game-conserved
            (agent_holds bed)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?f ?g ?h ?w ?t2 ?b - dodgeball ?o1 - dodgeball)
      (and
        (preference throwToBin
          (exists (?c1 - ball)
            (then
              (hold (or (adjacent ?o1 ?o1) (on bed ?c1) (and (and (exists (?s ?f - game_object ?d ?l - cube_block) (not (on ?l ?l) ) ) (in desk ?o1) (and (and (not (agent_holds ?o1) ) (game_start ) ) (and (on ?c1 ?o1) (on front ?c1) (same_type door ?o1) ) ) ) (and (game_over ) (and (and (agent_holds ?c1) (and (not (in_motion ?o1) ) (in_motion ?c1) ) (not (and (or (not (on ?c1 ?c1) ) (not (broken ?o1) ) ) (not (and (adjacent ?c1 ?o1) (and (and (> (distance ?c1 pink_dodgeball) 1) (open ?o1) ) (agent_holds ?c1) ) ) ) (agent_holds ?c1) ) ) (agent_holds ?c1) ) (in_motion floor) ) ) ) ) )
              (hold (and (and (in_motion ?c1) (agent_holds ?o1) ) (in agent door) (opposite ?o1 ?c1) ) )
              (hold (agent_holds ?c1) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> 3 (count-once-per-objects throwToBin:beachball:basketball) )
)
(:scoring
  (count-once-per-objects throwToBin:basketball:basketball)
)
)



(define (game game-id-794) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (game-conserved
        (< 2 0)
      )
    )
    (forall (?b - curved_wooden_ramp)
      (game-conserved
        (on ?b agent)
      )
    )
  )
)
(:constraints
  (and
    (preference dropAttempt
      (exists (?r - hexagonal_bin)
        (then
          (once (on front desk) )
          (hold (not (in_motion ?r) ) )
          (once (and (on ?r ?r) (agent_holds ?r) (agent_holds agent) ) )
        )
      )
    )
    (preference throwToRampToBin
      (exists (?p2 - cube_block ?r1 ?h - (either cylindrical_block cube_block) ?h - ball)
        (then
          (once (and (rug_color_under rug ?h) (adjacent front ?h) ) )
          (once (not (and (or (adjacent_side ?h ?h ?h) (on ?h ?h) ) (and (adjacent ?h desk) (and (agent_holds ?h) (on bridge_block ?h) ) ) ) ) )
          (hold (in_motion ?h) )
        )
      )
    )
    (preference ballThrownToRug
      (exists (?b - doggie_bed)
        (then
          (once (toggled_on desk) )
          (once (on ?b ?b) )
          (once (in_motion ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (* (count ballThrownToRug:red) 3 )
      50
    )
    (total-score)
  )
)
(:scoring
  (count-once-per-objects throwToRampToBin:basketball:yellow)
)
)



(define (game game-id-795) (:domain many-objects-room-v1)
(:setup
  (forall (?r2 - pyramid_block)
    (and
      (and
        (game-conserved
          (touch ?r2 ?r2)
        )
      )
      (forall (?s - (either cube_block dodgeball))
        (game-conserved
          (on rug rug)
        )
      )
      (exists (?w1 - (either laptop tall_cylindrical_block laptop))
        (exists (?h - building ?o - building ?t ?s ?p ?o ?o1 ?c2 - yellow_pyramid_block)
          (game-conserved
            (on ?r2 ?r2)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrowAttempt
      (exists (?l - hexagonal_bin)
        (then
          (once (agent_holds agent) )
          (once (and (not (in_motion ?l) ) (and (in_motion ?l) (agent_holds ?l) ) ) )
          (once (touch west_wall ?l) )
        )
      )
    )
    (preference dodgeballThrownToBinFromDesk
      (exists (?r ?c ?p3 ?c2 - building ?h - (either desktop block))
        (at-end
          (agent_holds ?h)
        )
      )
    )
    (preference golfballUnderBridgeWithoutTouchingBlock
      (exists (?t ?p ?c1 - chair)
        (then
          (once (not (and (agent_holds ?c1) (on ?t ?p) (in ?t ?p) ) ) )
          (once (adjacent ?t ?t) )
          (hold (adjacent ?p ?p) )
        )
      )
    )
  )
)
(:terminal
  (not
    (< 10 9 )
  )
)
(:scoring
  (count-once-per-objects ballThrowAttempt:beachball:purple)
)
)



(define (game game-id-796) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (forall (?c - (either mug rug))
        (exists (?d - (either alarm_clock pyramid_block mug))
          (game-optional
            (rug_color_under ?d agent)
          )
        )
      )
      (exists (?p3 - game_object ?h - game_object ?b - block ?ob - dodgeball ?o1 - hexagonal_bin)
        (exists (?o5 - (either cellphone hexagonal_bin top_drawer))
          (exists (?t1 - sliding_door)
            (game-conserved
              (and
                (exists (?p ?h - ball ?d - block)
                  (adjacent ?d ?o1)
                )
                (and
                  (and
                    (game_start )
                    (agent_holds ?o5)
                  )
                  (not
                    (not
                      (not
                        (in_motion agent)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - dodgeball ?f - building)
      (and
        (preference blockCorrectlyPicked
          (then
            (once (on ?f ?f) )
            (once (in ?f ?f) )
            (hold-while (game_over ) (not (and (broken ?f) (same_object bed ?f) ) ) (same_color ?f ?f) (on bed ?f) )
          )
        )
      )
    )
    (preference blockToBinFromRug
      (exists (?p - dodgeball ?h - dodgeball)
        (then
          (hold (same_color ?h ?h) )
          (once (and (in_motion ?h) (and (and (object_orientation top_shelf desk) (and (not (and (not (and (agent_holds ?h) (agent_holds ?h) ) ) (agent_holds ?h) ) ) (< 1 7) ) ) (agent_holds bed) ) ) )
          (once (and (not (same_color ?h ?h) ) (equal_z_position ?h ?h) ) )
          (hold (adjacent_side ?h ?h ?h) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 8 50 )
    (>= (total-time) 6 )
    (or
      (>= (count-once-per-objects blockCorrectlyPicked:rug:yellow) (total-time) )
      (or
        (> (= (* (count blockToBinFromRug:yellow) 6 )
            (count blockToBinFromRug:yellow)
          )
          (total-score)
        )
        (>= (count-once-per-objects blockCorrectlyPicked:hexagonal_bin) 7 )
      )
      (or
        (>= (count-once blockToBinFromRug:yellow) 50 )
        (or
          (or
            (>= (count-once blockCorrectlyPicked:red) 10 )
            (>= (count blockToBinFromRug:pink_dodgeball) (count blockCorrectlyPicked:alarm_clock) )
          )
        )
        (>= (count blockCorrectlyPicked:pink:doggie_bed) (* 30 2 )
        )
      )
    )
    (<= 1 (* 4 (count blockCorrectlyPicked:dodgeball) )
    )
  )
)
(:scoring
  (count-once-per-objects blockCorrectlyPicked:green)
)
)



(define (game game-id-797) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?t1 - dodgeball)
      (and
        (and
          (forall (?c6 - dodgeball)
            (game-optional
              (in agent pink_dodgeball)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference matchingBuildingBuilt
      (exists (?t2 - block)
        (then
          (once (in_motion ?t2) )
          (once-measure (in_motion ?t2) (distance ?t2 room_center) )
          (hold (not (not (touch door ?t2) ) ) )
        )
      )
    )
    (forall (?s - doggie_bed)
      (and
        (preference golfballInBinFromPillow
          (exists (?b - dodgeball)
            (then
              (hold (not (same_color ?b ?b) ) )
              (hold (in_motion ?s) )
              (hold (in_motion ?b) )
            )
          )
        )
        (preference pyramidBlockAtopTowerAtEnd
          (at-end
            (exists (?bl - cube_block)
              (in ?s ?s)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< (total-score) (count pyramidBlockAtopTowerAtEnd:golfball) )
)
(:scoring
  (+ (count matchingBuildingBuilt:basketball) 3 )
)
)



(define (game game-id-798) (:domain medium-objects-room-v1)
(:setup
  (exists (?b6 - dodgeball)
    (forall (?b - hexagonal_bin)
      (and
        (forall (?s - sliding_door)
          (and
            (exists (?t - (either cd key_chain))
              (and
                (exists (?b - ball)
                  (exists (?b5 - dodgeball ?t - dodgeball ?c2 - hexagonal_bin)
                    (forall (?c - chair)
                      (game-optional
                        (forall (?d - beachball ?r - game_object ?g - building ?s - game_object)
                          (in_motion ?c2)
                        )
                      )
                    )
                  )
                )
              )
            )
            (game-conserved
              (and
                (in_motion ?b6)
                (in ?b ?b6)
              )
            )
            (game-conserved
              (agent_holds ?b6)
            )
          )
        )
        (game-conserved
          (agent_holds ?b6)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - tan_cube_block)
      (and
        (preference cubeBlockFromBedToShelf
          (exists (?h - sliding_door ?t - (either wall laptop))
            (then
              (once (touch ?t ?t) )
              (once (and (and (exists (?l - triangular_ramp) (not (is_setup_object ?t) ) ) (not (on ?h agent) ) (adjacent ?h pink) ) (on ?t ?t) ) )
              (hold-while (and (and (agent_crouches ) (object_orientation ?t ?t) ) (in_motion ?t) (and (same_type door ?h) (not (and (in ?h ?t) (between ?t ?h blue) (same_type ?h ?t) ) ) ) (agent_holds ?t) ) (agent_holds ?t) )
            )
          )
        )
      )
    )
    (forall (?ob - curved_wooden_ramp)
      (and
        (preference throwAttempt
          (then
            (once (open ?ob) )
            (hold (agent_holds ?ob) )
            (once (game_start ) )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count cubeBlockFromBedToShelf:purple:green) 2 )
)
(:scoring
  (= (- 2 )
    (count throwAttempt:golfball)
  )
)
)



(define (game game-id-799) (:domain medium-objects-room-v1)
(:setup
  (exists (?d - hexagonal_bin)
    (exists (?c1 - hexagonal_bin)
      (and
        (game-conserved
          (and
            (agent_holds ?c1)
            (and
              (above ?d ?d)
              (and
                (agent_holds ?c1)
                (and
                  (agent_holds ?d)
                  (in_motion ?d)
                )
              )
            )
          )
        )
        (game-optional
          (agent_holds ?c1)
        )
        (and
          (and
            (forall (?h - dodgeball ?c1 - (either laptop laptop laptop))
              (game-conserved
                (< (distance ?c1 rug) (distance ?c1 ?c1))
              )
            )
          )
          (game-optional
            (not
              (agent_holds desk)
            )
          )
        )
        (game-optional
          (and
            (agent_holds ?c1)
            (and
              (object_orientation ?d bed)
              (on ?c1 ?c1)
            )
          )
        )
        (game-conserved
          (and
            (not
              (not
                (<= (distance_side ?c1 room_center bed) (distance ?d ?c1))
              )
            )
            (in_motion ?c1)
            (is_setup_object ?d)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference bookOnDeskShelf
      (exists (?d - (either cylindrical_block red dodgeball red doggie_bed dodgeball yellow_cube_block))
        (then
          (once (game_start ) )
          (hold (and (in_motion ?d) (touch ?d agent) ) )
          (once (exists (?d - color) (agent_holds ?d) ) )
        )
      )
    )
    (preference ballThrownToBed
      (exists (?db - building)
        (then
          (once (in ?db bed) )
          (once (or (in_motion agent) ) )
          (hold (not (not (in ?db room_center) ) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= 2 (count-once-per-objects ballThrownToBed:bed) )
  )
)
(:scoring
  (count-once-per-objects bookOnDeskShelf:blue)
)
)



(define (game game-id-800) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (on agent pink)
  )
)
(:constraints
  (and
    (forall (?t1 - (either cube_block ball cube_block) ?c3 - cube_block)
      (and
        (preference throwBallToDoggieBedOffWall
          (exists (?b ?r ?t - blue_cube_block)
            (then
              (once (equal_x_position desk ?r) )
              (once (agent_crouches ) )
              (once (and (on agent agent) ) )
            )
          )
        )
      )
    )
    (preference ballThrownToRampToBed
      (exists (?b - (either basketball desktop) ?r - building ?db - hexagonal_bin)
        (then
          (once (and (and (in_motion ?db) (and (not (not (in_motion ?db) ) ) (and (agent_holds ?db) (in_motion ?db) (and (agent_holds agent) ) ) ) ) (exists (?w2 - hexagonal_bin ?c - hexagonal_bin) (in_motion ?c) ) (is_setup_object desk) ) )
          (once (and (on ?db ?db) (on ?db ?db) ) )
          (hold (in_motion ?db) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= 3 6 )
    (>= (count-once-per-objects ballThrownToRampToBed:dodgeball) 9 )
  )
)
(:scoring
  (* (* (* (count-once throwBallToDoggieBedOffWall:pink_dodgeball) (* 1 (count-once-per-objects throwBallToDoggieBedOffWall:beachball) )
      )
      15
    )
    (* (count ballThrownToRampToBed:red) 7 )
  )
)
)



(define (game game-id-801) (:domain medium-objects-room-v1)
(:setup
  (exists (?o4 - blinds)
    (and
      (and
        (game-optional
          (not
            (agent_holds agent)
          )
        )
      )
      (and
        (forall (?bl - hexagonal_bin)
          (and
            (exists (?f - wall)
              (exists (?h - dodgeball)
                (game-conserved
                  (in_motion ?bl)
                )
              )
            )
          )
        )
        (exists (?t - (either mug side_table))
          (and
            (game-conserved
              (and
                (and
                  (> 1 (distance ?t ?t))
                  (not
                    (< 1 (distance ?o4 ?o4))
                  )
                )
                (or
                  (agent_holds ?o4)
                  (and
                    (in_motion ?t)
                    (>= 2 (distance ?o4 door))
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownOntoTarget
      (exists (?b - (either dodgeball hexagonal_bin triangle_block))
        (then
          (hold (not (< 1 (distance ?b ?b)) ) )
          (hold (in ?b ?b) )
          (once (in ?b ?b) )
        )
      )
    )
  )
)
(:terminal
  (and
    (<= 50 (- (+ 3 3 )
      )
    )
  )
)
(:scoring
  (count ballThrownOntoTarget)
)
)



(define (game game-id-802) (:domain few-objects-room-v1)
(:setup
  (exists (?h - hexagonal_bin ?t - cube_block)
    (exists (?c6 - cube_block)
      (forall (?r - hexagonal_bin)
        (game-conserved
          (same_color ?t ?r)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?g - (either cube_block alarm_clock tall_cylindrical_block))
      (and
        (preference blockToBinFromRug
          (exists (?b1 - hexagonal_bin)
            (at-end
              (in_motion ?g)
            )
          )
        )
        (preference cubeBlockThrownToTopShelf
          (exists (?h - hexagonal_bin ?b - doggie_bed ?l - hexagonal_bin)
            (then
              (once (not (and (in_motion ?l) (and (on ?g ?g) (< (distance ?l ?l) 3) ) ) ) )
              (once (in_motion ?l) )
              (hold (not (in_motion bed) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 1 (* 5 10 )
  )
)
(:scoring
  (count-once cubeBlockThrownToTopShelf:beachball)
)
)



(define (game game-id-803) (:domain many-objects-room-v1)
(:setup
  (exists (?c - hexagonal_bin ?r - ball)
    (game-conserved
      (agent_holds ?r)
    )
  )
)
(:constraints
  (and
    (preference golfballUnderBridgeWithoutTouchingBlock
      (exists (?b - (either lamp pyramid_block))
        (then
          (once (agent_holds ?b) )
          (once (and (in_motion bed) (adjacent ?b ?b) (and (> (distance_side ?b ?b front_left_corner) 1) (on rug floor) ) ) )
          (once (and (and (touch agent ?b) (not (and (adjacent ?b ?b) (adjacent_side ?b rug ?b ?b) ) ) ) (not (not (on ?b ?b) ) ) ) )
        )
      )
    )
    (forall (?b - block ?l2 - dodgeball)
      (and
        (preference throwMissesBin
          (exists (?w - shelf)
            (then
              (hold (not (not (on ?w ?l2) ) ) )
              (once (agent_holds ?l2) )
              (once (object_orientation ?l2 ?w) )
            )
          )
        )
        (preference throwGolfballToBin
          (exists (?d - (either golfball chair blue_cube_block))
            (then
              (once (and (opposite ?l2 ?d) (object_orientation ?d rug) ) )
              (hold (not (agent_holds ?l2) ) )
              (hold (and (and (and (agent_holds ?d) ) (in ?l2 ?l2) ) (on ?d ?l2) (on ?l2 ?l2) (agent_holds ?d) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (and
      (and
        (>= (total-time) 30 )
        (or
          (< 1 15 )
          (>= (+ 15 3 )
            (* 6 (* (count throwMissesBin:dodgeball) (count-overlapping golfballUnderBridgeWithoutTouchingBlock:dodgeball) )
            )
          )
        )
        (or
          (>= (* 3 2 )
            (= 3 15 )
          )
          (<= 3 2 )
        )
      )
      (= (- 5 )
        (count throwGolfballToBin:green:dodgeball:blue)
      )
      (>= (* 2 (external-forall-maximize (* 10 (count-once-per-objects throwGolfballToBin:golfball:golfball) (- (count-total throwGolfballToBin:basketball) )
            )
          )
        )
        2
      )
    )
    (>= (count throwGolfballToBin:basketball) 3 )
  )
)
(:scoring
  (+ (count-once-per-objects throwGolfballToBin:dodgeball) 3 )
)
)



(define (game game-id-804) (:domain many-objects-room-v1)
(:setup
  (exists (?o - teddy_bear)
    (game-optional
      (not
        (not
          (in_motion ?o)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?l2 - dodgeball ?o - drawer)
      (and
        (preference throwToBin
          (exists (?h - block ?o - cube_block)
            (then
              (once (not (and (on ?o ?o) (in_motion ?o) ) ) )
              (once (in bed desk) )
              (once (and (and (in_motion ?o) (and (in ?o ?o) ) ) (same_type room_center ?o) ) )
            )
          )
        )
        (preference dodgeballFromDeskToTarget
          (exists (?c - (either blue_cube_block cd))
            (at-end
              (exists (?b4 - dodgeball ?l1 - ball)
                (agent_holds ?l1)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (count-once-per-objects dodgeballFromDeskToTarget:yellow:pink) (count-shortest throwToBin:pyramid_block) )
)
(:scoring
  (- (count throwToBin:golfball) )
)
)



(define (game game-id-805) (:domain medium-objects-room-v1)
(:setup
  (exists (?c - cube_block)
    (game-conserved
      (and
        (between ?c ?c ?c)
        (not
          (not
            (not
              (exists (?p2 - wall)
                (in_motion agent)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToWallToAgent
      (exists (?o - hexagonal_bin)
        (at-end
          (and
            (adjacent ?o ?o)
            (and
              (agent_holds agent)
              (in_motion ?o)
              (not
                (agent_holds ?o)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (>= 2 8 )
      (or
        (or
          (>= (count-once-per-objects ballThrownToWallToAgent:golfball) (total-time) )
          (>= (* (count ballThrownToWallToAgent:pink:dodgeball) 1 )
            (count ballThrownToWallToAgent:golfball)
          )
        )
        (>= (* (* 20 3 )
            3
          )
          (* (count-overlapping ballThrownToWallToAgent:bed) (count-once-per-objects ballThrownToWallToAgent:pink_dodgeball:beachball) )
        )
      )
    )
  )
)
(:scoring
  (count ballThrownToWallToAgent:top_drawer)
)
)



(define (game game-id-806) (:domain many-objects-room-v1)
(:setup
  (exists (?b5 - hexagonal_bin ?w2 - hexagonal_bin)
    (forall (?c - (either key_chain triangle_block) ?o - hexagonal_bin)
      (and
        (and
          (game-conserved
            (not
              (agent_holds ?w2)
            )
          )
          (and
            (and
              (game-optional
                (agent_holds ?w2)
              )
            )
            (game-optional
              (same_color ?o ?w2)
            )
          )
          (and
            (exists (?r ?h ?b ?l3 ?b ?db - hexagonal_bin ?w2 - dodgeball)
              (forall (?h - cube_block)
                (game-conserved
                  (and
                    (or
                      (agent_holds ?h)
                    )
                    (in ?o ?h)
                  )
                )
              )
            )
            (exists (?w1 - chair)
              (forall (?bl - dodgeball)
                (forall (?b - hexagonal_bin)
                  (and
                    (and
                      (and
                        (game-conserved
                          (in_motion ?b)
                        )
                      )
                    )
                    (and
                      (exists (?c3 ?b4 - hexagonal_bin ?b10 - hexagonal_bin)
                        (game-conserved
                          (and
                            (in_motion ?w2)
                            (in_motion ?o)
                          )
                        )
                      )
                      (and
                        (forall (?o1 - dodgeball ?t - hexagonal_bin)
                          (forall (?c ?g - hexagonal_bin)
                            (game-optional
                              (or
                                (and
                                  (faces ?o green_golfball)
                                  (agent_holds agent)
                                )
                                (and
                                  (not
                                    (touch ?bl ?w1)
                                  )
                                  (and
                                    (on ?g ?c)
                                    (same_type ?t ?b)
                                  )
                                  (< (distance ?c ?o) (distance agent ?bl))
                                )
                              )
                            )
                          )
                        )
                        (exists (?o - hexagonal_bin ?o - hexagonal_bin)
                          (game-optional
                            (on ?w1 ?w2)
                          )
                        )
                      )
                      (and
                        (game-conserved
                          (in_motion ?bl)
                        )
                        (game-conserved
                          (not
                            (exists (?g - game_object)
                              (and
                                (not
                                  (< 8 1)
                                )
                                (same_type ?bl ?g)
                              )
                            )
                          )
                        )
                        (and
                          (or
                            (game-optional
                              (touch back ?o)
                            )
                          )
                        )
                      )
                    )
                    (and
                      (exists (?h - cube_block)
                        (game-conserved
                          (and
                            (not
                              (in_motion ?w2)
                            )
                            (in ?o ?w1)
                          )
                        )
                      )
                      (forall (?c - building)
                        (and
                          (game-optional
                            (not
                              (not
                                (agent_holds ?c)
                              )
                            )
                          )
                          (game-optional
                            (not
                              (and
                                (same_color ?w1 ?b)
                                (adjacent ?w2 ?c)
                                (agent_holds ?w2)
                              )
                            )
                          )
                        )
                      )
                      (game-optional
                        (not
                          (agent_holds desk)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
        (and
          (exists (?c - hexagonal_bin)
            (and
              (game-conserved
                (on ?w2 ?o)
              )
            )
          )
          (forall (?b4 - hexagonal_bin)
            (exists (?d - dodgeball)
              (game-conserved
                (not
                  (in_motion ?d)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference cubeBlockThrownToTopShelf
      (exists (?b2 - color)
        (then
          (hold (< 1 (distance_side agent agent ?b2)) )
          (once (and (not (on ?b2 bed) ) (in_motion ?b2) ) )
          (hold (in_motion ?b2) )
        )
      )
    )
    (preference cubeBlockFromBedToShelf
      (exists (?o5 - triangular_ramp)
        (then
          (hold-while (= 5 (distance ?o5 ?o5)) (on ?o5 ?o5) )
          (once (in ?o5 ?o5) )
          (once (and (and (in_motion ?o5) (forall (?w2 - ball) (< 1 3) ) ) (toggled_on ?o5) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (> (- (count cubeBlockFromBedToShelf:dodgeball) )
      2
    )
  )
)
(:scoring
  (+ 5 (count-overlapping cubeBlockFromBedToShelf:dodgeball) )
)
)



(define (game game-id-807) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?r1 - chair ?b - hexagonal_bin)
      (game-conserved
        (on ?b ?b)
      )
    )
    (forall (?w1 - (either dodgeball cellphone))
      (game-conserved
        (and
          (and
            (in_motion ?w1)
            (adjacent ?w1 ?w1)
            (on room_center ?w1)
          )
          (on ?w1 ?w1)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockThrowAttempt
      (exists (?o3 - dodgeball)
        (then
          (once (and (in_motion ?o3) (not (in ?o3 ?o3) ) ) )
          (hold-while (not (not (equal_z_position ?o3 ?o3) ) ) (and (and (above ?o3 ?o3) (in_motion main_light_switch) ) (agent_holds ?o3) (agent_holds south_west_corner) ) )
          (once (and (and (in ?o3 ?o3) (object_orientation desk ?o3) ) (in bed ?o3) ) )
        )
      )
    )
    (preference binKnockedOver
      (exists (?b9 - game_object ?d - (either key_chain beachball wall) ?o - triangular_ramp ?c6 - dodgeball ?b - book)
        (then
          (once (game_over ) )
          (once (< 1 (distance_side agent ?b ?b ?b)) )
          (once (in ?b ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (count-once binKnockedOver:dodgeball) )
)
(:scoring
  (count blockThrowAttempt:dodgeball)
)
)



(define (game game-id-808) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?s - (either alarm_clock dodgeball))
      (and
        (game-optional
          (agent_holds side_table)
        )
        (game-optional
          (not
            (and
              (agent_holds ?s)
              (adjacent ?s ?s)
            )
          )
        )
        (game-conserved
          (touch pink_dodgeball ?s)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference redDodgeballThrownToBinWithoutTouchingFloor
      (exists (?g - (either dodgeball blue_cube_block) ?b - dodgeball)
        (then
          (hold (touch ?b ?b) )
          (hold (adjacent ?b ?b) )
          (hold (agent_holds ?b) )
        )
      )
    )
  )
)
(:terminal
  (> (+ (external-forall-maximize (* (+ (count redDodgeballThrownToBinWithoutTouchingFloor:golfball) 40 (count-once-per-objects redDodgeballThrownToBinWithoutTouchingFloor:basketball) (count redDodgeballThrownToBinWithoutTouchingFloor:doggie_bed) )
          (count redDodgeballThrownToBinWithoutTouchingFloor:basketball:yellow:yellow)
        )
      )
      (* (* (count redDodgeballThrownToBinWithoutTouchingFloor:white) (* (count-once-per-external-objects redDodgeballThrownToBinWithoutTouchingFloor:pink_dodgeball:book) (count-longest redDodgeballThrownToBinWithoutTouchingFloor) )
        )
        10
      )
    )
    15
  )
)
(:scoring
  (count-once redDodgeballThrownToBinWithoutTouchingFloor:side_table)
)
)



(define (game game-id-809) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (exists (?ob - dodgeball ?s - ball)
        (and
          (game-conserved
            (same_object ?h ?s)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference failedThrowToBin
      (exists (?o3 - wall)
        (then
          (once (agent_holds ?o3) )
          (once (is_setup_object ?o3) )
          (hold (and (not (agent_holds ?o3) ) (and (agent_holds ?o3) (not (in_motion ?o3) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (count failedThrowToBin:beachball) )
)
(:scoring
  (count failedThrowToBin:dodgeball:beachball)
)
)



(define (game game-id-810) (:domain many-objects-room-v1)
(:setup
  (exists (?c4 - dodgeball ?w2 - chair)
    (game-conserved
      (not
        (in_motion ?w2)
      )
    )
  )
)
(:constraints
  (and
    (preference objectInBuilding
      (exists (?o - wall)
        (then
          (once (and (agent_holds ?o) (not (and (agent_holds ?o) (and (in_motion ?o) (between ?o ?o ?o) (agent_holds ?o) (agent_holds ?o) ) (adjacent ?o ?o) ) ) ) )
          (hold (faces rug ?o) )
          (once (same_type ?o ?o) )
        )
      )
    )
    (preference golfballLandsInBinThroughRamp
      (exists (?h - golfball)
        (then
          (hold (not (and (agent_crouches ) (in_motion ?h) ) ) )
          (once (= 7) )
          (once (agent_holds ?h) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once golfballLandsInBinThroughRamp:golfball) (* (count-once golfballLandsInBinThroughRamp:red) 5 )
  )
)
(:scoring
  (count-unique-positions golfballLandsInBinThroughRamp:beachball)
)
)



(define (game game-id-811) (:domain few-objects-room-v1)
(:setup
  (and
    (game-conserved
      (and
        (exists (?l2 - hexagonal_bin ?c3 - teddy_bear)
          (agent_holds desk)
        )
        (agent_holds front)
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballFromRugToBin
      (exists (?b10 - ball)
        (at-end
          (< (distance ?b10 ?b10) (x_position agent))
        )
      )
    )
  )
)
(:terminal
  (>= (external-forall-maximize (count-once-per-objects dodgeballFromRugToBin:dodgeball) ) (external-forall-maximize (count-once-per-objects dodgeballFromRugToBin:purple:yellow) ) )
)
(:scoring
  (* 15 (/ 3 4 ) (count dodgeballFromRugToBin) (count-once dodgeballFromRugToBin:beachball) )
)
)



(define (game game-id-812) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (<= 1 8)
  )
)
(:constraints
  (and
    (preference itemsBroken
      (exists (?c2 - curved_wooden_ramp ?b - hexagonal_bin)
        (at-end
          (< 2 (building_size ?b))
        )
      )
    )
  )
)
(:terminal
  (>= (* (count itemsBroken:blue_pyramid_block) (external-forall-maximize (* (count itemsBroken:beachball:orange) 5 )
      )
    )
    (total-score)
  )
)
(:scoring
  (count-same-positions itemsBroken:hexagonal_bin:basketball)
)
)



(define (game game-id-813) (:domain many-objects-room-v1)
(:setup
  (exists (?x - triangular_ramp)
    (game-conserved
      (and
        (in_motion ?x)
        (and
          (not
            (in ?x ?x)
          )
          (on ?x ?x)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blindsOpened
      (exists (?b5 - hexagonal_bin ?t ?b4 - dodgeball)
        (then
          (hold (not (not (<= 3 4) ) ) )
          (once (not (exists (?h - beachball) (faces rug ?t) ) ) )
          (once (and (< 0 1) (on agent ?b4) ) )
        )
      )
    )
    (forall (?h - dodgeball)
      (and
        (preference ballDroppedInBin
          (exists (?o5 - hexagonal_bin)
            (then
              (hold (not (not (and (on ?h ?o5) (not (not (and (not (not (in_motion ?o5) ) ) (agent_holds upright) ) ) ) ) ) ) )
              (hold (adjacent ?o5 ?h) )
              (once (agent_holds ?h) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 20 3 )
)
(:scoring
  (count-once-per-objects ballDroppedInBin:pink)
)
)



(define (game game-id-814) (:domain medium-objects-room-v1)
(:setup
  (not
    (exists (?b10 - (either dodgeball basketball))
      (game-conserved
        (agent_holds ?b10)
      )
    )
  )
)
(:constraints
  (and
    (preference blockOnBlockInTowerAtEnd
      (exists (?h - game_object)
        (then
          (once (in_motion ?h) )
          (once (in ?h ?h) )
          (once (agent_holds sideways) )
        )
      )
    )
  )
)
(:terminal
  (>= (count blockOnBlockInTowerAtEnd:golfball) (- 2 )
  )
)
(:scoring
  (count blockOnBlockInTowerAtEnd:yellow)
)
)



(define (game game-id-815) (:domain medium-objects-room-v1)
(:setup
  (forall (?b3 - curved_wooden_ramp ?w1 - pillow)
    (and
      (game-conserved
        (in_motion ?w1)
      )
      (game-conserved
        (not
          (and
            (not
              (= 1 1)
            )
            (not
              (touch ?w1 ?w1)
            )
          )
        )
      )
      (game-conserved
        (and
          (and
            (in back agent)
            (agent_holds agent)
          )
          (opposite ?w1 door)
        )
      )
      (game-optional
        (and
          (on ?w1 ?w1)
          (in_motion ?w1)
        )
      )
      (game-optional
        (agent_holds ?w1)
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?r1 - dodgeball)
        (then
          (hold (same_type ?r1 ?r1) )
          (once (on ?r1 ?r1) )
          (once (not (opposite ?r1 rug) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 10 2 )
)
(:scoring
  (count-shortest throwBallToBin:book:pink_dodgeball)
)
)



(define (game game-id-816) (:domain many-objects-room-v1)
(:setup
  (forall (?o3 - (either floor cylindrical_block))
    (game-conserved
      (exists (?b7 - hexagonal_bin ?o1 - hexagonal_bin ?o1 - hexagonal_bin ?c1 - hexagonal_bin)
        (in_motion agent)
      )
    )
  )
)
(:constraints
  (and
    (preference cubeThrownToBin
      (exists (?p2 - doggie_bed)
        (at-end
          (in_motion ?p2)
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-once-per-external-objects cubeThrownToBin:basketball) (count-increasing-measure cubeThrownToBin:yellow_pyramid_block) )
    (>= (* 2 (count-once cubeThrownToBin:yellow) )
      1
    )
  )
)
(:scoring
  (count cubeThrownToBin:beachball:beachball)
)
)



(define (game game-id-817) (:domain many-objects-room-v1)
(:setup
  (exists (?o - curved_wooden_ramp ?b - hexagonal_bin)
    (exists (?c - (either pink golfball key_chain))
      (and
        (forall (?w - building)
          (and
            (and
              (exists (?h - hexagonal_bin ?b9 - block ?d - dodgeball)
                (game-conserved
                  (object_orientation bed rug)
                )
              )
              (exists (?b - building ?h - hexagonal_bin)
                (game-optional
                  (adjacent ?h ?c)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c5 - dodgeball)
      (and
        (preference pyramidBlockAtopTowerAtEnd
          (exists (?d - doggie_bed ?r - hexagonal_bin)
            (then
              (once (same_color ?r ?c5) )
              (once (adjacent_side ?r ?r ?r) )
              (once (agent_holds ?r) )
            )
          )
        )
        (preference blockInTowerKnockedByDodgeball
          (exists (?d1 - chair)
            (then
              (hold (agent_holds bed) )
              (hold (not (adjacent agent ?c5) ) )
              (once (agent_holds ?c5) )
            )
          )
        )
      )
    )
    (forall (?o3 - (either dodgeball dodgeball credit_card cd))
      (and
        (preference throwTeddyOntoPillow
          (exists (?c4 - dodgeball)
            (then
              (hold (object_orientation ?c4 ?c4) )
              (hold (< 0.5 (distance ?o3 ?c4)) )
              (once (agent_holds ?c4) )
              (once (in_motion ?c4) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 1 (count pyramidBlockAtopTowerAtEnd:green:pink_dodgeball) )
)
(:scoring
  (count throwTeddyOntoPillow:orange)
)
)



(define (game game-id-818) (:domain few-objects-room-v1)
(:setup
  (exists (?o2 - dodgeball ?h - color)
    (forall (?g - dodgeball)
      (exists (?d - dodgeball ?w - cube_block)
        (and
          (game-conserved
            (not
              (in_motion ?h)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference bookOnDeskShelf
      (exists (?b9 - hexagonal_bin)
        (at-end
          (in_motion rug)
        )
      )
    )
    (preference dodgeballFromBlockToBin
      (exists (?c - ball ?h - dodgeball)
        (then
          (hold (or (and (not (not (in_motion desk) ) ) (not (in agent ?h) ) ) (rug_color_under ?h pillow) ) )
          (once (touch ?h bed) )
          (once (in_motion ?h) )
        )
      )
    )
    (preference throwObjectToBin
      (exists (?s - (either alarm_clock yellow_cube_block))
        (then
          (once (and (not (not (and (agent_holds ?s) (and (not (and (in ?s ?s) (in_motion ?s) ) ) (on ?s ?s) ) (and (and (and (in_motion ?s) ) (not (agent_holds ?s) ) (not (< (distance_side room_center desk tan) 5) ) ) (agent_holds block) ) ) ) ) (agent_crouches ) ) )
          (once (not (exists (?h - hexagonal_bin ?s - block) (in_motion ?s) ) ) )
          (once (agent_holds ?s) )
        )
      )
    )
    (forall (?c6 - doggie_bed)
      (and
        (preference greenObjectMovedToRoomCenter
          (at-end
            (on ?c6 ?c6)
          )
        )
        (preference blueObjectMovedToRoomCenter
          (exists (?d - ball)
            (then
              (once (in_motion ?d) )
              (hold (agent_holds rug) )
              (hold (agent_holds upright) )
            )
          )
        )
        (preference dodgeballsInPlace
          (exists (?o - color)
            (at-end
              (on ?o ?c6)
            )
          )
        )
        (preference dodgeballHitsBin
          (exists (?c5 - dodgeball ?b ?w - (either bridge_block yellow))
            (at-end
              (game_over )
            )
          )
        )
      )
    )
    (forall (?g ?h - curved_wooden_ramp)
      (and
        (preference teddyBearHitsBall
          (exists (?b9 - (either hexagonal_bin side_table))
            (then
              (once (and (and (not (agent_holds rug) ) (faces ?b9 ?g) ) (in_motion ?g) ) )
              (hold-while (not (on upright ?g) ) (same_color desk ?h) )
              (once (= 0.5 1) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count-once-per-objects throwObjectToBin:pink_dodgeball) (* 2 10 )
    )
    4
  )
)
(:scoring
  (count dodgeballHitsBin:dodgeball:red)
)
)



(define (game game-id-819) (:domain few-objects-room-v1)
(:setup
  (not
    (exists (?c - hexagonal_bin)
      (and
        (forall (?c2 ?h - hexagonal_bin)
          (exists (?d - tall_cylindrical_block ?h ?b ?o - ball)
            (game-conserved
              (and
                (agent_holds floor)
                (agent_holds ?b)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference redDodgeballThrownToBin
      (exists (?o2 - (either golfball ball blue_cube_block) ?b7 - color ?r - cube_block)
        (then
          (once (touch ?r desk) )
          (once (same_type ?r bed) )
          (hold (not (in ?r floor) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 9 (count redDodgeballThrownToBin:cube_block) )
  )
)
(:scoring
  (count redDodgeballThrownToBin:brown)
)
)



(define (game game-id-820) (:domain medium-objects-room-v1)
(:setup
  (exists (?w2 - building)
    (game-optional
      (= (x_position ?w2) (x_position agent) 8)
    )
  )
)
(:constraints
  (and
    (preference blindsOpened
      (exists (?db - (either cellphone yellow_cube_block laptop))
        (then
          (hold (agent_holds ?db) )
          (once (not (same_color ?db ?db) ) )
          (once (in_motion desk) )
        )
      )
    )
  )
)
(:terminal
  (>= (count blindsOpened:pink) (count blindsOpened:red:book) )
)
(:scoring
  (* (* 2 )
    (* 1 (* 4 (external-forall-maximize (count blindsOpened:pink) ) )
    )
  )
)
)



(define (game game-id-821) (:domain many-objects-room-v1)
(:setup
  (exists (?b3 - flat_block ?b - game_object)
    (exists (?b - dodgeball)
      (game-optional
        (in ?b ?b)
      )
    )
  )
)
(:constraints
  (and
    (preference ballDroppedInBin
      (exists (?t - hexagonal_bin)
        (then
          (once (not (not (adjacent ?t ?t) ) ) )
          (hold (agent_holds ?t) )
          (once (broken front) )
        )
      )
    )
    (forall (?h - (either cellphone pink cd))
      (and
        (preference smallItemsInPlace
          (exists (?tb - (either pyramid_block dodgeball))
            (then
              (once (in_motion ?h) )
              (hold (and (in_motion ?h) (or (and (and (agent_holds ?h) (not (not (= 1 1) ) ) ) (above ?tb agent) ) ) (and (in ?h ?h) (in_motion ?h) (and (not (and (agent_holds ?tb) (> (distance ?h ?tb) (distance floor ?tb)) ) ) (and (in_motion ?h) (on ?tb bed) ) ) ) ) )
              (hold (and (agent_holds ?tb) (opposite ?h ?h) ) )
            )
          )
        )
      )
    )
    (preference blockThrowAttempt
      (exists (?o4 - chair)
        (then
          (hold (> (distance ?o4 ?o4) (distance floor ?o4)) )
          (hold (> (distance ?o4 desk) 3) )
          (hold-while (and (in ?o4 ?o4) (and (and (same_type ?o4 bed) (and (in_motion ?o4) (agent_holds ?o4) ) ) (in_motion bed) ) ) (not (and (not (in_motion agent) ) (not (not (agent_holds desk) ) ) ) ) (exists (?l - dodgeball) (< (distance_side ?o4 ?o4 ?o4) (distance ?l ?o4)) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects smallItemsInPlace:basketball) 3 )
)
(:scoring
  (count-once-per-objects ballDroppedInBin:red)
)
)



(define (game game-id-822) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (and
        (exists (?t ?h - hexagonal_bin)
          (exists (?w2 - ball)
            (and
              (and
                (and
                  (exists (?b - game_object)
                    (and
                      (forall (?b - ball)
                        (and
                          (and
                            (game-optional
                              (not
                                (in_motion ?b)
                              )
                            )
                          )
                        )
                      )
                      (exists (?o - hexagonal_bin)
                        (exists (?w1 - ball)
                          (and
                            (and
                              (and
                                (exists (?g - (either book wall cube_block))
                                  (and
                                    (exists (?o - (either doggie_bed yellow_cube_block))
                                      (and
                                        (forall (?o - dodgeball)
                                          (game-conserved
                                            (in ?g ?o)
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                  (game-optional
                    (and
                      (not
                        (agent_holds ?t)
                      )
                      (and
                        (= (distance ?h front) 1)
                        (and
                          (in_motion ?h)
                          (in_motion ?w2)
                        )
                      )
                    )
                  )
                  (and
                    (forall (?ob - game_object ?o2 - triangular_ramp)
                      (not
                        (exists (?h - hexagonal_bin)
                          (and
                            (forall (?r2 - dodgeball)
                              (and
                                (and
                                  (exists (?s - pyramid_block ?d - chair ?d - (either cd dodgeball) ?h - dodgeball)
                                    (game-conserved
                                      (agent_holds ?o2)
                                    )
                                  )
                                )
                                (game-conserved
                                  (not
                                    (not
                                      (game_start )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
                (forall (?b - hexagonal_bin)
                  (game-conserved
                    (= 6 1)
                  )
                )
              )
            )
          )
        )
        (and
          (exists (?o2 - dodgeball)
            (game-conserved
              (game_start )
            )
          )
        )
        (and
          (exists (?b6 - doggie_bed)
            (and
              (and
                (and
                  (exists (?o - (either pyramid_block cube_block cube_block) ?b1 - ball)
                    (game-conserved
                      (agent_holds desk)
                    )
                  )
                )
                (and
                  (and
                    (exists (?d - hexagonal_bin ?d2 - building)
                      (or
                        (game-optional
                          (< (distance ?d2 ?d2) (building_size ?d2))
                        )
                        (game-conserved
                          (not
                            (and
                              (in_motion agent)
                              (not
                                (in ?d2 ?b6)
                              )
                            )
                          )
                        )
                      )
                    )
                    (and
                      (game-optional
                        (adjacent bed ?b6)
                      )
                      (game-conserved
                        (and
                          (agent_holds ?b6)
                          (>= 0.5 (distance ?b6 ?b6))
                        )
                      )
                      (and
                        (game-conserved
                          (agent_holds ?b6)
                        )
                      )
                    )
                  )
                  (game-conserved
                    (in agent ?b6)
                  )
                  (exists (?b - triangular_ramp)
                    (game-conserved
                      (agent_crouches )
                    )
                  )
                )
                (exists (?o3 - block ?t1 - hexagonal_bin)
                  (and
                    (exists (?t2 - hexagonal_bin)
                      (and
                        (exists (?c5 - dodgeball)
                          (and
                            (exists (?d - red_dodgeball ?d - game_object ?p - chair)
                              (exists (?o4 ?h ?o5 - teddy_bear)
                                (game-optional
                                  (faces blue ?t1)
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                    (game-conserved
                      (and
                        (not
                          (< 2 1)
                        )
                        (< (distance ?t1 ?t1) 0.5)
                      )
                    )
                  )
                )
              )
              (exists (?t1 - tall_cylindrical_block ?r2 - hexagonal_bin)
                (forall (?c5 - hexagonal_bin ?w1 - dodgeball)
                  (exists (?o - desktop ?h - dodgeball ?b - curved_wooden_ramp ?t2 ?r2 - hexagonal_bin)
                    (or
                      (game-optional
                        (in desk bed)
                      )
                    )
                  )
                )
              )
              (exists (?h ?o4 - cube_block ?o - chair)
                (and
                  (game-optional
                    (and
                      (touch ?b6 floor)
                      (not
                        (not
                          (and
                            (not
                              (same_color ?b6 ?o)
                            )
                            (agent_holds ?o)
                            (not
                              (not
                                (not
                                  (not
                                    (adjacent ?b6 ?o)
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                      (opposite ?o room_center)
                    )
                  )
                  (and
                    (and
                      (game-conserved
                        (agent_holds ?b6)
                      )
                      (and
                        (game-conserved
                          (in_motion agent)
                        )
                        (and
                          (game-conserved
                            (touch ?b6 ?b6)
                          )
                          (and
                            (and
                              (exists (?b - building)
                                (exists (?b9 - game_object ?b7 - building ?d - doggie_bed)
                                  (forall (?c - color)
                                    (game-conserved
                                      (and
                                        (agent_holds ?o)
                                        (not
                                          (not
                                            (agent_holds ?b)
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                          (forall (?b7 - game_object)
                            (game-optional
                              (and
                                (= 4 1)
                                (adjacent ?b7 ?b7)
                              )
                            )
                          )
                        )
                      )
                      (exists (?b5 - red_dodgeball ?o - cube_block ?c - doggie_bed)
                        (game-conserved
                          (in ?o ?c)
                        )
                      )
                    )
                  )
                  (game-optional
                    (in_motion ?o)
                  )
                  (exists (?p - cube_block)
                    (forall (?d - (either laptop book) ?h - ball)
                      (game-optional
                        (and
                          (in ?b6 ?h)
                          (exists (?b - ball ?o1 - hexagonal_bin ?l - dodgeball)
                            (touch ?p room_center)
                          )
                        )
                      )
                    )
                  )
                )
              )
              (and
                (game-conserved
                  (agent_holds ?b6)
                )
              )
              (game-conserved
                (not
                  (agent_holds ?b6)
                )
              )
            )
          )
          (exists (?b9 - ball)
            (forall (?h - doggie_bed)
              (game-conserved
                (in_motion desk)
              )
            )
          )
        )
      )
    )
    (exists (?c4 - hexagonal_bin ?b - chair)
      (game-optional
        (adjacent ?b ?b)
      )
    )
  )
)
(:constraints
  (and
    (forall (?c2 - block)
      (and
        (preference cubeBlockThrowAttempt
          (exists (?p2 - (either blue_cube_block triangular_ramp))
            (then
              (once (in_motion ?c2) )
              (hold (agent_holds ?c2) )
              (once (equal_z_position ?p2 ?c2) )
            )
          )
        )
        (preference beachballOnRug
          (exists (?o - dodgeball ?o1 - dodgeball)
            (then
              (once (and (in_motion ?o1) (and (not (and (not (adjacent agent upright) ) (in_motion ?c2) ) ) (and (and (in_motion ?c2) (in_motion ?c2) ) (forall (?b9 - game_object) (and (and (exists (?d - hexagonal_bin ?s - tall_cylindrical_block) (agent_holds ?c2) ) (in_motion ?o1) ) (and (faces pink_dodgeball ?c2) (and (and (in_motion ?b9) (in_motion ?c2) ) (in_motion agent) ) ) ) ) ) (in_motion ?o1) (on ?c2 ?c2) ) ) )
              (once (not (agent_holds ?c2) ) )
              (once (not (and (in_motion ?o1) (not (and (= 1) (in_motion ?o1) ) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (= (count-once-per-objects cubeBlockThrowAttempt:cube_block) (count beachballOnRug:beachball:red) )
)
(:scoring
  (count beachballOnRug:orange)
)
)



(define (game game-id-823) (:domain medium-objects-room-v1)
(:setup
  (exists (?o - golfball ?r - ball ?t - (either dodgeball mug pillow) ?p - curved_wooden_ramp)
    (forall (?b - (either bed red cellphone))
      (game-conserved
        (and
          (in_motion ?p)
          (on ?b desk)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference golfballUnderBridgeWithoutTouchingBlock
      (exists (?c1 - hexagonal_bin)
        (then
          (hold (on bed ?c1) )
          (once (not (on ?c1 ?c1) ) )
          (hold (< 1 2) )
        )
      )
    )
  )
)
(:terminal
  (and
    (> (+ (count golfballUnderBridgeWithoutTouchingBlock:triangle_block) 4 )
      (total-score)
    )
    (or
      (< (+ (count golfballUnderBridgeWithoutTouchingBlock:green) 3 )
        3
      )
      (or
        (>= (count-once-per-objects golfballUnderBridgeWithoutTouchingBlock:hexagonal_bin) 6 )
        (>= (* (count-once-per-objects golfballUnderBridgeWithoutTouchingBlock:pink) (count golfballUnderBridgeWithoutTouchingBlock:blue_cube_block:book) )
          (* (- (count-once golfballUnderBridgeWithoutTouchingBlock:pink) )
            (count-once-per-objects golfballUnderBridgeWithoutTouchingBlock:bed)
          )
        )
      )
    )
  )
)
(:scoring
  (count-once-per-objects golfballUnderBridgeWithoutTouchingBlock:green)
)
)



(define (game game-id-824) (:domain many-objects-room-v1)
(:setup
  (forall (?o ?o1 - triangular_ramp)
    (exists (?o1 - (either chair cellphone))
      (or
        (game-conserved
          (agent_holds pink_dodgeball)
        )
        (and
          (and
            (exists (?r - teddy_bear)
              (and
                (and
                  (and
                    (game-optional
                      (on ?o1 ?o)
                    )
                  )
                  (game-optional
                    (forall (?b3 - shelf ?bl - hexagonal_bin)
                      (on ?r ?r)
                    )
                  )
                )
              )
            )
          )
          (exists (?bl - dodgeball)
            (game-optional
              (in_motion agent)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference baseBlockInTowerAtEnd
      (exists (?l4 - ball ?d - cube_block ?t - hexagonal_bin)
        (then
          (once (adjacent ?t ?t) )
          (hold (is_setup_object ?t) )
          (once (and (agent_holds floor) (agent_holds ?t) ) )
        )
      )
    )
    (preference smallItemsInPlace
      (exists (?t1 - ball)
        (then
          (once (and (and (open ?t1) (on ?t1 ?t1) ) (in_motion ?t1) (or (not (in_motion ?t1) ) (not (adjacent ?t1 ?t1) ) ) ) )
          (once (not (and (same_color rug ?t1) (or (toggled_on ?t1) (not (agent_holds ?t1) ) ) (on ?t1 ?t1) ) ) )
          (once (is_setup_object ?t1) )
          (hold (game_start ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (* 2 (<= 40 (count smallItemsInPlace:golfball) )
      )
      6
      (count-once-per-external-objects baseBlockInTowerAtEnd:pink)
      (count-same-positions smallItemsInPlace:alarm_clock:pink_dodgeball)
      (count smallItemsInPlace)
    )
    0.5
  )
)
(:scoring
  (count smallItemsInPlace:pink)
)
)



(define (game game-id-825) (:domain few-objects-room-v1)
(:setup
  (forall (?h - doggie_bed)
    (forall (?t - hexagonal_bin)
      (game-conserved
        (game_over )
      )
    )
  )
)
(:constraints
  (and
    (preference throwFromDoorToBin
      (exists (?b2 - ball)
        (then
          (hold (not (not (exists (?p - hexagonal_bin ?c5 - shelf) (agent_holds ?b2) ) ) ) )
          (once (in_motion yellow) )
          (once (not (in_motion ?b2) ) )
        )
      )
    )
  )
)
(:terminal
  (<= (* 5 (* 10 4 )
    )
    (count throwFromDoorToBin:triangle_block)
  )
)
(:scoring
  (count throwFromDoorToBin:blue_dodgeball:pink_dodgeball)
)
)



(define (game game-id-826) (:domain few-objects-room-v1)
(:setup
  (exists (?o3 - hexagonal_bin ?b1 - flat_block)
    (forall (?d - ball ?h - hexagonal_bin)
      (and
        (game-optional
          (agent_holds ?b1)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference smallItemsInPlace
      (exists (?o1 - chair)
        (at-end
          (< 1 1)
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects smallItemsInPlace:hexagonal_bin) (count-longest smallItemsInPlace:yellow) )
)
(:scoring
  (count smallItemsInPlace:rug)
)
)



(define (game game-id-827) (:domain few-objects-room-v1)
(:setup
  (exists (?bl ?h - hexagonal_bin ?d - hexagonal_bin)
    (not
      (exists (?c - hexagonal_bin)
        (game-optional
          (and
            (and
              (between ?c ?d ?d)
              (agent_holds room_center)
              (on ?d agent)
            )
            (on ?d pink_dodgeball)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference failedThrowToBin
      (exists (?b7 - game_object ?o2 - hexagonal_bin)
        (then
          (hold (agent_holds ?o2) )
          (once (not (and (agent_holds agent) (agent_crouches ) ) ) )
          (once (not (and (and (and (and (adjacent_side ?o2 ?o2 ?o2) (>= (distance ?o2 ?o2) (distance ?o2 desk)) (on ?o2 ?o2) ) (and (< 1 (distance ?o2 ?o2)) (in ?o2 ?o2) (in_motion ?o2) ) ) (forall (?p1 - cylindrical_block) (on ?p1 ?p1) ) ) (touch ?o2 ?o2) ) ) )
        )
      )
    )
    (forall (?c2 - building)
      (and
        (preference greenObjectMovedToRoomCenter
          (at-end
            (not
              (not
                (in ?c2 ?c2)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (count-once greenObjectMovedToRoomCenter:dodgeball) )
)
(:scoring
  (count-overlapping failedThrowToBin:cylindrical_block)
)
)



(define (game game-id-828) (:domain many-objects-room-v1)
(:setup
  (forall (?l1 - block)
    (or
      (exists (?d - dodgeball)
        (game-conserved
          (in_motion ?l1)
        )
      )
      (and
        (exists (?ob - chair)
          (exists (?p3 - hexagonal_bin)
            (exists (?b - (either blue_cube_block basketball))
              (exists (?p - ball)
                (and
                  (game-conserved
                    (in_motion ?p)
                  )
                  (and
                    (game-optional
                      (and
                        (on ?p3 ?p3)
                        (not
                          (not
                            (rug_color_under top_drawer ?l1)
                          )
                        )
                      )
                    )
                    (forall (?h - green_triangular_ramp ?c - hexagonal_bin ?b7 - cube_block ?c - (either dodgeball chair cube_block))
                      (and
                        (or
                          (and
                            (forall (?p - curved_wooden_ramp ?d - hexagonal_bin ?o - (either basketball basketball))
                              (game-conserved
                                (or
                                  (and
                                    (agent_holds green_golfball)
                                    (in_motion ?p3)
                                    (not
                                      (in_motion rug)
                                    )
                                    (agent_holds bed)
                                  )
                                  (not
                                    (on ?ob room_center)
                                  )
                                )
                              )
                            )
                            (game-conserved
                              (adjacent_side ?p3 ?p3 ?c ?c)
                            )
                          )
                          (or
                            (game-conserved
                              (on ?p ?l1)
                            )
                          )
                        )
                      )
                    )
                    (exists (?l - teddy_bear ?o1 - hexagonal_bin)
                      (forall (?d - building ?o1 - teddy_bear)
                        (exists (?w1 - ball)
                          (forall (?c - hexagonal_bin)
                            (exists (?c - hexagonal_bin ?b - triangular_ramp)
                              (and
                                (and
                                  (game-conserved
                                    (opposite ?w1 rug)
                                  )
                                )
                                (game-conserved
                                  (and
                                    (and
                                      (same_color ?p3 ?c)
                                      (and
                                        (or
                                          (in_motion ?ob)
                                          (in_motion ?l1)
                                          (or
                                            (agent_holds ?ob)
                                            (not
                                              (or
                                                (exists (?d - hexagonal_bin)
                                                  (agent_holds ?p)
                                                )
                                                (or
                                                  (not
                                                    (in_motion ?p)
                                                  )
                                                  (= (distance ?b ?w1) (distance ?p3 ?p))
                                                )
                                              )
                                            )
                                            (not
                                              (>= 2 9)
                                            )
                                          )
                                        )
                                        (not
                                          (same_color room_center ?l1)
                                        )
                                      )
                                    )
                                    (and
                                      (in ?w1 ?o1)
                                      (not
                                        (on ?b desk)
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                  (game-optional
                    (between ?l1 ?ob agent)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - hexagonal_bin)
      (and
        (preference ballRolledOnRampToRug
          (exists (?b2 - (either cellphone main_light_switch))
            (then
              (hold (and (not (not (on ?b room_center) ) ) (not (not (not (in_motion upright) ) ) ) ) )
              (once (same_color ?b ?b2) )
              (hold (not (not (not (in_motion ?b) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (external-forall-maximize (* 10 20 )
    )
    2
  )
)
(:scoring
  (count ballRolledOnRampToRug:pink:beachball)
)
)



(define (game game-id-829) (:domain medium-objects-room-v1)
(:setup
  (exists (?r - block ?h - curved_wooden_ramp)
    (game-conserved
      (not
        (agent_holds ?h)
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - hexagonal_bin ?h - game_object ?c4 - wall)
      (and
        (preference throwAttemptFromBehindBlock
          (exists (?g ?h ?b ?l3 ?o1 - (either cd pyramid_block cube_block key_chain cube_block floor laptop))
            (then
              (hold (touch ?l3 ?o1) )
              (once (and (in_motion ?g) (not (in_motion ?h) ) (and (in ?o1 ?l3) (adjacent ?l3 green_golfball) ) ) )
              (once (on ?g ?b) )
            )
          )
        )
        (preference basketMadeFromRug
          (then
            (once (and (not (on ?c4 ?c4) ) (and (in_motion ?c4) (agent_holds ?c4) ) ) )
            (once (not (agent_crouches ) ) )
            (once (in ?c4 ?c4) )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count throwAttemptFromBehindBlock:basketball) 7 )
)
(:scoring
  (- (count throwAttemptFromBehindBlock:dodgeball) )
)
)



(define (game game-id-830) (:domain medium-objects-room-v1)
(:setup
  (forall (?r - curved_wooden_ramp)
    (or
      (and
        (game-conserved
          (in_motion ?r)
        )
        (game-optional
          (faces ?r ?r)
        )
        (and
          (and
            (exists (?p - (either dodgeball wall cellphone))
              (game-conserved
                (= (distance ?r desk) (distance ?r ?p))
              )
            )
            (exists (?t1 - shelf)
              (exists (?ob - (either main_light_switch blue_cube_block))
                (game-optional
                  (and
                    (< (distance ?r ?t1) 1)
                    (< 5 (distance bed ?ob))
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwKnocksOverBear
      (exists (?r - drawer)
        (then
          (hold-while (in_motion ?r) (touch ?r ?r) (adjacent ?r ?r) )
          (once (adjacent_side ?r ?r floor ?r) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (count-once-per-objects throwKnocksOverBear:basketball) )
)
(:scoring
  (+ (* (= 15 (count-increasing-measure throwKnocksOverBear:beachball) (count-once-per-objects throwKnocksOverBear:basketball) )
      (count throwKnocksOverBear:golfball:orange)
    )
    6
  )
)
)



(define (game game-id-831) (:domain few-objects-room-v1)
(:setup
  (forall (?h - hexagonal_bin ?h - teddy_bear)
    (game-optional
      (on agent ?h)
    )
  )
)
(:constraints
  (and
    (preference throwToDrawerOrBin
      (exists (?h - hexagonal_bin)
        (at-end
          (agent_holds desk)
        )
      )
    )
    (preference throwMissesBin
      (exists (?b2 - hexagonal_bin)
        (then
          (once (in_motion ?b2) )
          (once (in_motion desk) )
          (hold (agent_holds ?b2) )
        )
      )
    )
    (preference throwBallToDoggieBed
      (exists (?r2 - (either pillow dodgeball))
        (then
          (once (in ?r2 ?r2) )
          (once (on pink ?r2) )
          (once (not (agent_holds bed) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) 3 )
)
(:scoring
  (count throwToDrawerOrBin:pink_dodgeball:yellow)
)
)



(define (game game-id-832) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (exists (?d - hexagonal_bin)
      (in_motion ?d)
    )
  )
)
(:constraints
  (and
    (preference dodgeballThrownToBinFromDesk
      (exists (?l2 - block)
        (then
          (once (not (not (on ?l2 ?l2) ) ) )
          (once (and (exists (?h - hexagonal_bin) (in bed agent) ) (in ?l2 agent) ) )
          (once (in agent agent) )
        )
      )
    )
  )
)
(:terminal
  (>= 25 6 )
)
(:scoring
  (/
    5
    3
  )
)
)



(define (game game-id-833) (:domain many-objects-room-v1)
(:setup
  (exists (?b ?t ?c1 ?r ?g ?r - game_object)
    (game-conserved
      (and
        (not
          (in ?c1 brown)
        )
        (not
          (adjacent ?c1 ?c1)
        )
        (and
          (in_motion ?c1)
          (touch ?c1 ?c1)
          (object_orientation ?b ?c1)
          (same_color ?c1 ?b)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockPlacedInBuilding
      (exists (?d - building)
        (then
          (once (in ?d ?d) )
          (once (faces ?d ?d) )
          (hold (not (and (and (and (agent_holds ?d) (agent_holds ?d) ) (in_motion ?d) ) (exists (?g - (either dodgeball pen)) (and (in_motion ?g) (not (not (exists (?h - dodgeball) (and (on ?g ?g) (in ?g ?d) ) ) ) ) (adjacent ?g ?d) (not (rug_color_under ?g ?d) ) ) ) (in_motion agent) (agent_holds ?d) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 20 (count blockPlacedInBuilding:red:yellow_cube_block:basketball) )
)
(:scoring
  (* (- 9 )
    (* 1 (external-forall-minimize (+ (count blockPlacedInBuilding:pink_dodgeball) (count-once-per-objects blockPlacedInBuilding:basketball) )
      )
    )
  )
)
)



(define (game game-id-834) (:domain few-objects-room-v1)
(:setup
  (forall (?b - desk_shelf ?c3 - (either dodgeball wall cube_block))
    (and
      (game-optional
        (adjacent ?c3 ?c3)
      )
      (game-conserved
        (or
          (agent_holds ?c3)
          (agent_holds ?c3)
        )
      )
      (and
        (and
          (game-conserved
            (equal_z_position ?c3 ?c3)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?l1 - cube_block ?h - (either cylindrical_block yellow key_chain basketball))
      (and
        (preference dodgeballHitsPillowWithoutTouchingBlock
          (exists (?w1 - doggie_bed ?g - (either bridge_block dodgeball))
            (then
              (once (in_motion ?h) )
              (once (on ?h ?g) )
              (once (adjacent ?h north_wall) )
            )
          )
        )
      )
    )
    (forall (?p2 - cylindrical_block)
      (and
        (preference ballRolledOnRampToRug
          (exists (?l - dodgeball ?tb ?bl - triangular_ramp)
            (then
              (hold-while (> (distance ?tb desk) (x_position rug)) (adjacent ?tb ?bl) )
              (once (agent_holds ?tb) )
              (hold (in_motion desk) )
            )
          )
        )
      )
    )
    (forall (?c - hexagonal_bin)
      (and
        (preference throwAttempt
          (exists (?b2 - (either basketball hexagonal_bin cd))
            (then
              (once (and (agent_holds ?b2) (not (is_setup_object ?b2) ) ) )
              (once (in_motion agent) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (* (+ (count throwAttempt:hexagonal_bin) (count-once-per-external-objects dodgeballHitsPillowWithoutTouchingBlock:beachball) )
        (count-increasing-measure ballRolledOnRampToRug:red)
        (- (count ballRolledOnRampToRug:pink) )
        (count throwAttempt:hexagonal_bin)
      )
      9
    )
  )
)
(:scoring
  (* (* (* (external-forall-maximize (count ballRolledOnRampToRug:hexagonal_bin:golfball:red) ) (* (external-forall-maximize (count throwAttempt:golfball:cube_block) ) (count-once-per-objects ballRolledOnRampToRug:golfball) 5 )
        (count dodgeballHitsPillowWithoutTouchingBlock:green)
      )
      0
    )
    (count-once-per-objects ballRolledOnRampToRug:pink)
  )
)
)



(define (game game-id-835) (:domain many-objects-room-v1)
(:setup
  (exists (?r1 - doggie_bed)
    (game-conserved
      (in_motion ?r1)
    )
  )
)
(:constraints
  (and
    (forall (?b1 ?d2 - dodgeball ?d - game_object ?w2 - teddy_bear)
      (and
        (preference dodgeballHitsBin
          (then
            (once (or (on ?w2 ?w2) (and (same_color ?w2 ?w2) (agent_holds ?w2) (adjacent_side ?w2 ?w2 ?w2) ) ) )
            (once (agent_holds pink_dodgeball) )
            (once (< 6 8) )
          )
        )
        (preference golfballInBinFromPillow
          (exists (?c ?b ?f ?d ?db - teddy_bear)
            (at-end
              (not
                (and
                  (adjacent ?w2 ?d)
                  (object_orientation ?d ?d)
                )
              )
            )
          )
        )
      )
    )
    (preference throwToBinFromOppositeWall
      (exists (?r1 - hexagonal_bin ?t - ball ?g - hexagonal_bin)
        (then
          (once (not (adjacent ?g ?g) ) )
          (hold (adjacent_side ?g ?g ?g ?g) )
          (once (in_motion ?g) )
        )
      )
    )
  )
)
(:terminal
  (> (* (count throwToBinFromOppositeWall:pyramid_block) (count-once throwToBinFromOppositeWall:alarm_clock) )
    (total-time)
  )
)
(:scoring
  (count-once-per-objects throwToBinFromOppositeWall:yellow_cube_block)
)
)



(define (game game-id-836) (:domain many-objects-room-v1)
(:setup
  (exists (?r ?b6 ?h - building ?l1 - pyramid_block ?b - (either pyramid_block tall_cylindrical_block tall_cylindrical_block))
    (forall (?b3 - hexagonal_bin ?h - doggie_bed)
      (game-conserved
        (and
          (in_motion ?b)
          (on ?b ?b)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballThrownToBinFromDesk
      (exists (?c5 - (either dodgeball book))
        (then
          (hold (touch ?c5 ?c5) )
        )
      )
    )
    (preference throwAttempt
      (exists (?b - shelf)
        (at-end
          (agent_holds ?b)
        )
      )
    )
    (preference dodgeballHitsPillowWithoutTouchingBlock
      (exists (?b5 - wall)
        (then
          (hold-while (exists (?c - block ?b - hexagonal_bin) (object_orientation ?b5 ?b) ) (equal_z_position ?b5 ?b5) )
          (hold (in_motion ?b5) )
          (once (above ?b5 ?b5) )
          (once (in ?b5 ?b5) )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (count dodgeballThrownToBinFromDesk:pink_dodgeball) )
)
(:scoring
  (count dodgeballThrownToBinFromDesk:red)
)
)



(define (game game-id-837) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (in_motion desk)
  )
)
(:constraints
  (and
    (preference dodgeballAndBasketballInBin
      (exists (?l1 - hexagonal_bin ?r - hexagonal_bin)
        (then
          (once (adjacent ?r agent) )
          (once (in_motion ?r) )
          (once (not (and (same_color ?r ?r) (and (in_motion ?r) (agent_holds ?r) (in agent ?r) (adjacent_side ?r ?r upright) ) (adjacent ?r ?r) ) ) )
          (hold (and (and (on ?r ?r) (agent_holds rug) ) (<= (distance_side ?r ?r ?r room_center) 7) ) )
          (once (not (not (not (agent_holds ?r) ) ) ) )
          (once (forall (?b - hexagonal_bin) (in ?r rug) ) )
        )
      )
    )
    (forall (?c4 - hexagonal_bin)
      (and
        (preference itemsHidingScreens
          (exists (?o - (either cube_block cube_block) ?h - hexagonal_bin ?s - (either laptop book) ?s - block)
            (then
              (once (< (distance ?s ?c4) (distance agent ?c4)) )
              (hold (agent_holds bed) )
              (once (agent_holds ?s) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 5 (count itemsHidingScreens:book:blue_dodgeball) )
    (>= 3 (count itemsHidingScreens:yellow_cube_block) )
  )
)
(:scoring
  (- (count dodgeballAndBasketballInBin:yellow) )
)
)



(define (game game-id-838) (:domain many-objects-room-v1)
(:setup
  (forall (?h - cylindrical_block ?b6 - shelf)
    (forall (?b - block)
      (exists (?g - shelf)
        (game-conserved
          (in ?g ?b)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwFromEdgeOfRug
      (exists (?h - doggie_bed)
        (at-end
          (and
            (not
              (not
                (not
                  (agent_holds top_shelf)
                )
              )
            )
            (and
              (not
                (not
                  (not
                    (and
                      (and
                        (game_start )
                        (and
                          (and
                            (in_motion ?h)
                            (>= 1 (distance rug ?h))
                          )
                          (forall (?o - ball ?h - hexagonal_bin ?d - block ?o2 - (either main_light_switch cellphone cube_block golfball) ?o2 - cube_block)
                            (in_motion ?h)
                          )
                        )
                      )
                      (not
                        (and
                          (or
                            (in ?h ?h)
                            (in_motion ?h)
                          )
                          (in_motion ?h)
                        )
                      )
                    )
                  )
                )
              )
              (agent_holds ?h)
            )
          )
        )
      )
    )
    (forall (?l1 - (either dodgeball hexagonal_bin))
      (and
        (preference failedThrowToBin
          (exists (?b6 - cube_block ?o ?s ?b1 - curved_wooden_ramp)
            (then
              (once (touch ?s ?l1) )
              (hold (not (not (not (broken main_light_switch) ) ) ) )
              (once (on ?l1 ?o) )
            )
          )
        )
        (preference dropAttempt
          (exists (?b - (either doggie_bed dodgeball))
            (then
              (once (in_motion ?b) )
              (once (on ?l1 ?l1) )
              (once (and (agent_holds ?b) (< (distance ?b ?b) (distance ?l1 ?l1)) (exists (?l1 - ball) (in ?b agent) ) ) )
            )
          )
        )
        (preference blockPickedUp
          (exists (?bl - hexagonal_bin ?d ?b ?l - dodgeball)
            (then
              (once (in ?d agent) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= (count failedThrowToBin:dodgeball) 5 )
)
(:scoring
  (count-same-positions dropAttempt:beachball)
)
)



(define (game game-id-839) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (exists (?c - teddy_bear)
      (in_motion ?c)
    )
  )
)
(:constraints
  (and
    (preference dodgeballAndBasketballInBin
      (exists (?b - ball)
        (then
          (once (exists (?l3 - desktop ?o - (either basketball alarm_clock)) (in_motion blue) ) )
          (once (in_motion upside_down) )
          (once (in ?b ?b) )
        )
      )
    )
  )
)
(:terminal
  (<= (count-longest dodgeballAndBasketballInBin:yellow_pyramid_block) (count dodgeballAndBasketballInBin:red) )
)
(:scoring
  (+ (count dodgeballAndBasketballInBin:beachball) (+ 5 (* 5 2 )
    )
  )
)
)



(define (game game-id-840) (:domain medium-objects-room-v1)
(:setup
  (forall (?h - (either basketball))
    (game-conserved
      (adjacent ?h ?h)
    )
  )
)
(:constraints
  (and
    (preference ballKnocksBlockFromRug
      (exists (?p1 - dodgeball)
        (then
          (once (and (opposite agent agent) (agent_holds agent) (agent_holds ?p1) ) )
          (once (same_color ?p1 ?p1) )
          (once (and (object_orientation sideways ?p1) (agent_holds ?p1) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once ballKnocksBlockFromRug:dodgeball) (total-score) )
)
(:scoring
  (external-forall-maximize
    (<= (count-unique-positions ballKnocksBlockFromRug:triangle_block) 50 )
  )
)
)



(define (game game-id-841) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?o2 - color ?c4 - game_object)
      (game-conserved
        (in_motion ?c4)
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballsInPlace
      (exists (?c6 - wall)
        (then
          (once (and (in ?c6 ?c6) (and (and (not (not (agent_holds ?c6) ) ) (exists (?h - hexagonal_bin ?b - pyramid_block) (in_motion ?b) ) (same_color ?c6 ?c6) (in_motion ?c6) (not (in ?c6 ?c6) ) (< (distance ?c6 ?c6) 1) ) (in_motion desk) ) ) )
          (hold (and (and (in_motion desk) (in_motion ?c6) ) (is_setup_object agent) (agent_holds ?c6) ) )
          (once (and (agent_holds ?c6) (and (not (in_motion ?c6) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* (* (+ (count-once-per-objects dodgeballsInPlace:green) (count-once dodgeballsInPlace) 5 )
          (+ 5 (+ 2 (count-unique-positions dodgeballsInPlace:golfball:beachball) )
          )
        )
        7
      )
      (count dodgeballsInPlace:pink_dodgeball)
    )
    (>= (count-once-per-objects dodgeballsInPlace:dodgeball) (total-time) )
  )
)
(:scoring
  (count dodgeballsInPlace:beachball)
)
)



(define (game game-id-842) (:domain many-objects-room-v1)
(:setup
  (forall (?d - hexagonal_bin ?o - pillow)
    (exists (?h - hexagonal_bin)
      (and
        (game-conserved
          (in ?h room_center)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttemptFromBehindBlock
      (exists (?g - game_object)
        (at-end
          (in_motion ?g)
        )
      )
    )
  )
)
(:terminal
  (> (external-forall-minimize (count throwAttemptFromBehindBlock:beachball) ) (count throwAttemptFromBehindBlock:golfball) )
)
(:scoring
  (count throwAttemptFromBehindBlock:dodgeball)
)
)



(define (game game-id-843) (:domain medium-objects-room-v1)
(:setup
  (forall (?b - game_object)
    (exists (?t1 - chair ?g - ball)
      (and
        (game-optional
          (= 2 4)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference beachballBouncedOffRamp
      (exists (?d - red_dodgeball)
        (then
          (once (between ?d green_golfball ?d) )
          (once (on door ?d) )
          (once (and (same_object desk ?d) (on ?d ?d) ) )
        )
      )
    )
    (preference ballNeverThrown
      (exists (?r - game_object)
        (at-end
          (in_motion ?r)
        )
      )
    )
    (forall (?g - dodgeball)
      (and
        (preference throwKnocksOverBear
          (exists (?d - (either mug yellow_cube_block cube_block))
            (then
              (hold (agent_holds ?d) )
              (hold (exists (?t - wall) (< 1 1) ) )
              (once (adjacent ?d ?g) )
            )
          )
        )
        (preference ballInOrOnBin
          (exists (?c6 - (either chair book doggie_bed))
            (then
              (once (in_motion ?c6) )
              (once (agent_holds ?c6) )
              (hold-while (in ?c6 ?c6) (in ?g ?g) (> 10 8) (not (on ?c6 ?c6) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (external-forall-maximize (count-once-per-objects ballInOrOnBin) ) )
)
(:scoring
  (* 3 (+ (= 4 (count-once-per-external-objects ballInOrOnBin:dodgeball) )
      (* (count-once throwKnocksOverBear:golfball:doggie_bed) (count ballInOrOnBin:pink_dodgeball:alarm_clock) )
    )
  )
)
)



(define (game game-id-844) (:domain many-objects-room-v1)
(:setup
  (exists (?o1 - doggie_bed ?o - hexagonal_bin)
    (and
      (forall (?t - hexagonal_bin)
        (game-optional
          (is_setup_object ?o)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?l1 ?b - hexagonal_bin)
      (and
        (preference teddyBearLandsInBin
          (exists (?l ?b ?o3 ?h - game_object)
            (then
              (once (in_motion ?l) )
              (hold (> 1 5) )
              (hold-while (agent_holds desk) (in_motion ?l) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (count-once-per-external-objects teddyBearLandsInBin:red) (external-forall-minimize (count-once-per-objects teddyBearLandsInBin:pink_dodgeball) ) )
)
(:scoring
  (* 10 1 )
)
)



(define (game game-id-845) (:domain medium-objects-room-v1)
(:setup
  (exists (?p2 - building ?c2 - block)
    (and
      (game-conserved
        (above desk ?c2)
      )
    )
  )
)
(:constraints
  (and
    (preference thrownBallHitsBlock
      (exists (?b - yellow_cube_block ?w1 - hexagonal_bin ?b - doggie_bed)
        (then
          (once (in_motion room_center) )
          (hold (opposite ?b ?b) )
          (hold (adjacent ?b ?b) )
        )
      )
    )
    (preference blindsOpened
      (exists (?c - game_object)
        (then
          (once (not (in_motion ?c) ) )
          (once (agent_holds ?c) )
          (hold (exists (?h - wall) (agent_holds ?c) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (> 30 (* (count blindsOpened:yellow_pyramid_block:red_pyramid_block) (count blindsOpened:blue_cube_block) )
    )
    (<= (+ 3 (* (* 4 9 )
          (- 0 )
        )
        (* 4 4 )
        3
      )
      (total-time)
    )
    (or
      (not
        (or
          (and
            (or
              (>= (count-once-per-objects blindsOpened:dodgeball:beachball) (count-once-per-objects thrownBallHitsBlock:blue_dodgeball) )
              (>= (* (external-forall-maximize (count-once-per-objects thrownBallHitsBlock:dodgeball) ) 10 )
                (+ 15 (count blindsOpened:red) )
              )
              (= (total-score) 50 )
            )
            (or
              (>= 10 (count-once-per-objects thrownBallHitsBlock:hexagonal_bin) )
            )
          )
          (or
            (>= (count-once-per-objects blindsOpened:green) (- 5 )
            )
            (>= (* 6 10 (count blindsOpened:blue_dodgeball) )
              (count blindsOpened:basketball:basketball)
            )
            (>= (total-score) (total-score) )
          )
        )
      )
      (>= (external-forall-maximize (* 10 2 )
        )
        2
      )
    )
  )
)
(:scoring
  (+ (count-once thrownBallHitsBlock:blue_pyramid_block) 4 )
)
)



(define (game game-id-846) (:domain few-objects-room-v1)
(:setup
  (exists (?b - hexagonal_bin)
    (exists (?b2 - block ?w1 - sliding_door)
      (forall (?l3 - dodgeball ?c - (either doggie_bed cube_block))
        (game-conserved
          (and
            (toggled_on ?w1)
            (touch ?w1 ?b)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToBed
      (exists (?o - block)
        (then
          (once (not (agent_holds upright) ) )
          (once (in_motion ?o) )
          (once (is_setup_object ?o) )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (count ballThrownToBed:dodgeball) )
)
(:scoring
  (- (count-once-per-objects ballThrownToBed) )
)
)



(define (game game-id-847) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?c - block ?l4 - cylindrical_block)
      (game-conserved
        (and
          (exists (?d - triangular_ramp ?d - (either hexagonal_bin pen))
            (in_motion ?d)
          )
          (same_type room_center ?l4)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockPlacedInBuilding
      (exists (?p - block)
        (then
          (once (and (not (and (agent_holds ?p) (< (distance ?p sideways) (distance ?p ?p)) ) ) (= (distance ?p ?p) 5) (and (above ?p ?p) (and (on ?p room_center) (adjacent ?p ?p) ) ) ) )
          (once (not (and (agent_holds ?p) (and (not (agent_holds floor) ) (in ?p ?p) ) (and (same_color ?p ?p) (not (not (or (and (on ?p floor) (in_motion ?p) (agent_holds ?p) (agent_holds ?p) (or (adjacent_side ?p ?p ?p) (and (in_motion front) (agent_holds ?p) ) ) (agent_holds ?p) ) (not (> (distance door ?p) 1) ) ) ) ) ) ) ) )
          (hold-while (in_motion ?p) (in_motion ?p) )
        )
      )
    )
    (preference binKnockedOver
      (exists (?o - hexagonal_bin)
        (then
          (hold-while (in_motion ?o) (not (and (touch ?o ?o) (< 3 (distance bed bed)) ) ) (adjacent ?o ?o) (agent_holds ?o) )
        )
      )
    )
  )
)
(:terminal
  (< (total-score) (* (count blockPlacedInBuilding:pink_dodgeball:basketball) (* 5 (count-once-per-objects binKnockedOver:beachball) )
    )
  )
)
(:scoring
  (external-forall-maximize
    (count blockPlacedInBuilding:dodgeball)
  )
)
)



(define (game game-id-848) (:domain many-objects-room-v1)
(:setup
  (forall (?o3 - cube_block ?b10 - block ?h - dodgeball ?t1 - dodgeball)
    (forall (?b5 - cube_block ?h - dodgeball ?o2 - teddy_bear ?h - game_object)
      (game-conserved
        (in_motion ?t1)
      )
    )
  )
)
(:constraints
  (and
    (preference throwFromEdgeOfRug
      (exists (?s - dodgeball)
        (then
          (once (opposite ?s ?s) )
          (once (rug_color_under ?s ?s) )
        )
      )
    )
    (forall (?d - block)
      (and
        (preference throwAttemptFromDoor
          (exists (?o - hexagonal_bin)
            (at-end
              (agent_holds ?o)
            )
          )
        )
      )
    )
    (preference binKnockedOver
      (exists (?t ?p - (either pen cylindrical_block pen))
        (then
          (once (open ?p) )
          (once (on agent ?t) )
          (hold (not (not (forall (?o3 - (either basketball yellow_cube_block bridge_block)) (exists (?d ?o - hexagonal_bin) (exists (?p3 - curved_wooden_ramp ?g - dodgeball) (not (on ?g ?o3) ) ) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 15 (count-increasing-measure throwAttemptFromDoor:alarm_clock) )
)
(:scoring
  (+ 3 (- 8 )
  )
)
)



(define (game game-id-849) (:domain many-objects-room-v1)
(:setup
  (forall (?o - building)
    (game-conserved
      (not
        (in_motion ?o)
      )
    )
  )
)
(:constraints
  (and
    (preference blockInTowerKnocked
      (exists (?b5 - desktop ?w - cube_block)
        (then
          (once (in_motion ?w) )
          (once (and (in_motion ?w) (not (agent_holds ?w) ) ) )
          (once (agent_holds bed) )
        )
      )
    )
  )
)
(:terminal
  (> (* 180 10 )
    10
  )
)
(:scoring
  (= (* (* 0 (count-once-per-objects blockInTowerKnocked:dodgeball) (count-once-per-external-objects blockInTowerKnocked:red) )
      3
      (count-once-per-objects blockInTowerKnocked:basketball)
    )
  )
)
)



(define (game game-id-850) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?d ?c ?o1 ?c3 ?r2 ?h - game_object)
      (and
        (exists (?d - pyramid_block ?w2 ?h - (either pen curved_wooden_ramp) ?h - (either dodgeball cylindrical_block bed))
          (and
            (and
              (and
                (game-optional
                  (not
                    (agent_holds ?c3)
                  )
                )
                (game-conserved
                  (and
                    (in ?h door)
                    (same_color ?c ?d)
                  )
                )
              )
            )
            (and
              (game-optional
                (not
                  (exists (?b10 ?c - curved_wooden_ramp)
                    (in_motion desk)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference thrownObjectHitsComputer
      (exists (?b6 - curved_wooden_ramp)
        (then
          (hold (and (in_motion ?b6) (and (in agent ?b6) (not (in_motion ?b6) ) ) ) )
          (once (in_motion agent) )
          (hold (on green_golfball ?b6) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 0.5 (count thrownObjectHitsComputer:green) )
    (count-once-per-objects thrownObjectHitsComputer)
  )
)
(:scoring
  (external-forall-minimize
    (count-unique-positions thrownObjectHitsComputer:green)
  )
)
)



(define (game game-id-851) (:domain few-objects-room-v1)
(:setup
  (exists (?t ?d ?b2 - block)
    (and
      (and
        (game-optional
          (in_motion ?t)
        )
      )
      (game-conserved
        (faces ?t ?t)
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - hexagonal_bin)
      (and
        (preference ballKnocksTeddy
          (exists (?d - hexagonal_bin ?l4 - (either laptop) ?r - hexagonal_bin)
            (then
              (once (and (touch rug rug) (in ?b ?b) (agent_holds ?r) ) )
              (hold-while (rug_color_under ?b ?b) (not (and (and (not (agent_holds ?b) ) (exists (?h - hexagonal_bin ?o3 - (either side_table laptop) ?s - curved_wooden_ramp) (and (not (not (agent_holds desk) ) ) (forall (?ob - building ?o2 - teddy_bear) (and (in_motion ?s) (agent_holds rug) ) ) ) ) ) (agent_holds rug) ) ) (in_motion ?b) )
              (hold (in ?b ?b) )
            )
          )
        )
        (preference ballThrownToBin
          (exists (?h - pillow)
            (then
              (once (in_motion ?b) )
              (hold-while (and (agent_holds ?b) (and (touch ?h ?b) (in_motion ?b) ) ) (agent_holds ?b) (agent_holds ?b) (agent_holds ?b) )
              (once (in_motion ?h) )
            )
          )
        )
      )
    )
    (preference throwBallToDoggieBedOffWall
      (exists (?c - cube_block ?c5 - dodgeball)
        (at-end
          (and
            (not
              (in_motion ?c5)
            )
            (exists (?b - (either tall_cylindrical_block dodgeball yellow_cube_block))
              (agent_holds ?c5)
            )
          )
        )
      )
    )
    (preference throwAttemptFromDoor
      (exists (?d - teddy_bear ?d - (either tall_cylindrical_block golfball))
        (then
          (hold (and (same_color bed ?d) (on ?d pink_dodgeball) ) )
          (once (adjacent ?d ?d) )
          (hold (rug_color_under ?d ?d) )
        )
      )
    )
  )
)
(:terminal
  (>= 1 (total-score) )
)
(:scoring
  (external-forall-maximize
    (count ballThrownToBin:dodgeball:bed:rug)
  )
)
)



(define (game game-id-852) (:domain medium-objects-room-v1)
(:setup
  (forall (?f - (either hexagonal_bin lamp pyramid_block))
    (game-conserved
      (in_motion ?f)
    )
  )
)
(:constraints
  (and
    (preference pyramidBlockAtopTowerAtEnd
      (exists (?c ?b - (either lamp yellow_cube_block))
        (at-end
          (rug_color_under ?c agent)
        )
      )
    )
  )
)
(:terminal
  (>= (count-same-positions pyramidBlockAtopTowerAtEnd:green) (count pyramidBlockAtopTowerAtEnd:basketball) )
)
(:scoring
  (count pyramidBlockAtopTowerAtEnd:doggie_bed:dodgeball)
)
)



(define (game game-id-853) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (in_motion agent)
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?o ?r1 - doggie_bed)
        (then
          (hold-while (not (touch ?o ?o) ) (and (agent_holds ?o) (and (and (in ?r1 ?r1) (or (agent_holds ?r1) (not (and (not (agent_holds desk) ) (adjacent_side ?o room_center ?r1 ?r1) ) ) ) ) (not (> 1 (distance ?o ?r1)) ) (not (agent_holds desk) ) (in_motion ?o) ) ) )
          (hold (and (agent_holds ?o) (touch ?o top_shelf) ) )
          (once (agent_holds ?r1) )
        )
      )
    )
  )
)
(:terminal
  (>= (count throwAttempt:block) 60 )
)
(:scoring
  (count-once-per-objects throwAttempt:green:hexagonal_bin)
)
)



(define (game game-id-854) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?b - cube_block)
      (forall (?r1 - dodgeball)
        (exists (?h - pyramid_block ?g - hexagonal_bin)
          (exists (?d2 - ball)
            (game-conserved
              (in_motion ?b)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c - hexagonal_bin)
      (and
        (preference towerFallsWhileBuilding
          (exists (?c - hexagonal_bin)
            (then
              (once (is_setup_object ?c) )
              (once (and (and (not (not (in_motion ?c) ) ) (and (and (in ?c rug) (and (agent_holds desk) (agent_holds top_drawer) ) ) (= (distance ?c bed) 1) ) ) (and (or (and (agent_holds rug) (exists (?w2 - building ?w2 - block) (in_motion ?w2) ) ) (in ?c ?c) ) (not (and (on ?c ?c) (agent_holds ?c) ) ) ) ) )
              (hold-while (agent_holds floor) (adjacent ?c ?c) )
              (once (or (on ?c ?c) (exists (?w1 - dodgeball) (agent_holds ?w1) ) (in_motion ?c) ) )
            )
          )
        )
        (preference bigObjectThrownToBed
          (exists (?c - curved_wooden_ramp ?c - block ?tb ?h - building ?c ?c1 - block)
            (then
              (hold-while (and (not (and (in_motion agent) (> (distance pink_dodgeball ?c) 4) ) ) (and (in_motion ?c1) (adjacent_side ?c ?c1 floor blue) ) ) (in desk ?c) )
              (once (and (on ?c ?c) (and (or (not (agent_holds ?c1) ) (in_motion green_golfball) ) (above ?c1 ?c1) ) ) )
              (hold (agent_holds ?c) )
            )
          )
        )
      )
    )
    (forall (?b6 - hexagonal_bin)
      (and
        (preference blockKnockedFromBuildingInBin
          (exists (?s - drawer ?c5 - hexagonal_bin)
            (at-end
              (and
                (same_type ?b6 back)
                (touch ?b6 ?c5)
              )
            )
          )
        )
        (preference basketMadeFromRug
          (exists (?t ?b - (either yellow_cube_block blue_cube_block cube_block))
            (at-end
              (in ?t ?t)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (- 6 )
    (+ (+ 6 (count-once-per-objects towerFallsWhileBuilding:basketball) 1 )
      (count basketMadeFromRug)
    )
  )
)
(:scoring
  (count-unique-positions towerFallsWhileBuilding:doggie_bed:basketball)
)
)



(define (game game-id-855) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (in_motion agent)
  )
)
(:constraints
  (and
    (preference binKnockedOver
      (exists (?h - hexagonal_bin)
        (at-end
          (and
            (not
              (touch ?h ?h)
            )
            (agent_holds pink)
            (agent_holds ?h)
            (on ?h ?h)
          )
        )
      )
    )
    (preference itemInClosedDrawerAtEnd
      (exists (?b - hexagonal_bin ?w1 - curved_wooden_ramp)
        (then
          (once (not (agent_holds ?w1) ) )
          (hold (agent_crouches ) )
          (once (not (and (in_motion bed) (or (agent_holds ?w1) (< 1 7) ) ) ) )
        )
      )
    )
    (preference throwAttemptFromDoor
      (exists (?b ?r ?c6 - hexagonal_bin)
        (then
          (hold-while (and (forall (?c4 - dodgeball) (in_motion ?c4) ) (and (exists (?r ?b ?g ?h ?d ?d - cube_block) (not (in_motion ?g) ) ) (= (distance ?c6 ?r) 4 (distance ?c6 floor) 2) ) ) (not (in_motion ?r) ) )
          (once (and (in_motion ?r) (in_motion bed) ) )
          (once (adjacent ?b desk) )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (count throwAttemptFromDoor:yellow) )
)
(:scoring
  (external-forall-maximize
    (count throwAttemptFromDoor:golfball:white)
  )
)
)



(define (game game-id-856) (:domain many-objects-room-v1)
(:setup
  (forall (?s - (either yellow_cube_block golfball tall_cylindrical_block))
    (game-conserved
      (not
        (agent_holds ?s)
      )
    )
  )
)
(:constraints
  (and
    (forall (?db - golfball)
      (and
        (preference throwBallToBin
          (exists (?w - curved_wooden_ramp ?h ?b - dodgeball)
            (then
              (once (agent_holds room_center) )
              (once (and (rug_color_under ?db ?db) (not (is_setup_object ?b) ) ) )
              (once (in top_drawer ?h) )
            )
          )
        )
      )
    )
    (forall (?c - hexagonal_bin)
      (and
        (preference ballToBinFromBed
          (exists (?l3 - game_object ?b - building)
            (then
              (once (< (distance agent ?b) (distance_side ?b ?b ?c)) )
              (hold (in_motion ?b) )
              (once (agent_holds ?c) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (not
        (> (count ballToBinFromBed:basketball) (+ (* (+ 10 8 )
              10
            )
            2
          )
        )
      )
      (>= (count ballToBinFromBed:dodgeball) (external-forall-maximize (external-forall-maximize (+ (count throwBallToBin:basketball) (external-forall-minimize (* (+ 2 (count-once-per-objects throwBallToBin:pink_dodgeball:golfball) )
                  8
                )
              )
            )
          )
        )
      )
      (>= (total-time) (+ (= (count-once-per-objects throwBallToBin:red) (count throwBallToBin:yellow) )
          (count ballToBinFromBed:dodgeball:basketball)
        )
      )
    )
    (= (count throwBallToBin:dodgeball) (count-once-per-objects ballToBinFromBed:orange) )
  )
)
(:scoring
  (count throwBallToBin:basketball:basketball)
)
)



(define (game game-id-857) (:domain medium-objects-room-v1)
(:setup
  (forall (?h - hexagonal_bin ?b5 - beachball)
    (game-optional
      (agent_holds ?b5)
    )
  )
)
(:constraints
  (and
    (preference smallObjectThrownToBed
      (exists (?b6 - (either laptop rug) ?b2 ?p2 ?h - block)
        (then
          (once (not (on ?b2 ?b2) ) )
          (once (rug_color_under ?b2 ?p2) )
          (once (in_motion ?h) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (total-time) )
)
(:scoring
  (count-once-per-objects smallObjectThrownToBed:red:book)
)
)



(define (game game-id-858) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?h - (either golfball triangle_block yellow))
      (or
        (game-conserved
          (on bed ?h)
        )
        (forall (?l4 - dodgeball)
          (and
            (forall (?t - dodgeball)
              (exists (?o1 ?b - dodgeball ?w ?d ?b ?c - cube_block ?t - dodgeball)
                (and
                  (exists (?tb - hexagonal_bin ?r2 - hexagonal_bin)
                    (exists (?w1 - ball)
                      (game-conserved
                        (in_motion ?w1)
                      )
                    )
                  )
                  (game-optional
                    (in_motion ?h)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - ball ?c4 ?d ?l2 ?c3 ?c ?w - dodgeball)
      (and
        (preference cubeBlockThrownToTopShelf
          (exists (?t - doggie_bed)
            (then
              (once (in ?w ?c3) )
              (once (agent_holds ?l2) )
              (once (not (and (not (in_motion ?c4) ) (not (in ?c3 ?c) ) (in_motion ?w) ) ) )
            )
          )
        )
      )
    )
    (preference ballThrownMissesEverything
      (exists (?d - hexagonal_bin ?c3 - golfball)
        (then
          (hold (in_motion upside_down) )
          (hold (and (in_motion ?c3) (< (distance desk ?c3) (distance ?c3 ?c3)) ) )
          (hold (open ?c3) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (* (count-once-per-objects cubeBlockThrownToTopShelf:white) 3 )
      (count-once-per-objects cubeBlockThrownToTopShelf)
      (count ballThrownMissesEverything:beachball)
      300
      (count-once-per-objects ballThrownMissesEverything:bed)
      300
    )
    5
  )
)
(:scoring
  (* (count-once-per-objects ballThrownMissesEverything:pyramid_block:beachball) (* (* (count cubeBlockThrownToTopShelf:pink:brown) (count-once-per-objects cubeBlockThrownToTopShelf:doggie_bed) )
      0.5
    )
  )
)
)



(define (game game-id-859) (:domain many-objects-room-v1)
(:setup
  (exists (?r - red_dodgeball)
    (forall (?t - (either basketball mug cube_block ball book dodgeball cube_block))
      (game-conserved
        (on ?r ?r)
      )
    )
  )
)
(:constraints
  (and
    (forall (?p - (either golfball yellow dodgeball credit_card))
      (and
        (preference dropAttempt
          (exists (?b - cube_block)
            (then
              (hold (> (distance ?b front) (distance ?b ?b)) )
              (hold (and (and (same_object ?b ?b) (touch ?b desk) (in_motion ?p) ) (same_color pink_dodgeball ?b) (not (agent_holds ?p) ) ) )
              (once (rug_color_under desk ?b) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (- (count dropAttempt:block) (* 5 (count dropAttempt:pink_dodgeball) 3 (* (count-once dropAttempt:golfball) (count-once-per-external-objects dropAttempt:book:hexagonal_bin) )
      )
    )
    (total-score)
  )
)
(:scoring
  (- (count-same-positions dropAttempt:dodgeball) )
)
)



(define (game game-id-860) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (exists (?d - block)
        (game-conserved
          (on ?d ?d)
        )
      )
    )
    (forall (?o5 - (either curved_wooden_ramp dodgeball key_chain))
      (game-conserved
        (adjacent ?o5 sideways)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToBed
      (exists (?l2 - hexagonal_bin)
        (at-end
          (and
            (and
              (agent_holds ?l2)
              (not
                (agent_holds ?l2)
              )
            )
            (and
              (in_motion ?l2)
              (not
                (or
                  (and
                    (agent_holds bed)
                    (touch ?l2 agent)
                  )
                  (and
                    (in_motion ?l2)
                    (not
                      (in side_table ?l2)
                    )
                  )
                )
              )
            )
            (agent_holds floor)
          )
        )
      )
    )
  )
)
(:terminal
  (> (total-score) (total-time) )
)
(:scoring
  (* 0 40 )
)
)



(define (game game-id-861) (:domain many-objects-room-v1)
(:setup
  (forall (?c1 - (either block doggie_bed dodgeball))
    (and
      (and
        (game-conserved
          (and
            (same_color bed ?c1)
            (and
              (touch ?c1 room_center)
              (in_motion ?c1)
              (exists (?o3 - sliding_door)
                (on ?o3 agent)
              )
            )
          )
        )
      )
      (game-conserved
        (agent_holds ?c1)
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballThrownToBin
      (exists (?h - (either doggie_bed golfball))
        (then
          (once (agent_holds ?h) )
          (once (in_motion ?h) )
          (once (forall (?c1 - curved_wooden_ramp) (on desk ?h) ) )
        )
      )
    )
    (preference ballThrownHitsAgent
      (exists (?b - game_object ?s - (either wall pen yellow_cube_block))
        (then
          (once (not (exists (?b6 - teddy_bear ?b2 ?c5 ?d ?l ?o5 ?l - red_pyramid_block) (< 2 (distance_side ?b2 ?b2 ?b2)) ) ) )
          (hold-while (agent_holds ?s) (and (in ?s ?s) (not (adjacent ?s ?s) ) ) (and (agent_holds ?s) (and (in_motion ?s) (touch ?s ?s) ) ) )
          (once (and (agent_holds ?s) (not (in ?s desk) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 10 (count ballThrownHitsAgent:yellow_cube_block) )
    (>= (+ (count-once-per-objects dodgeballThrownToBin:dodgeball:beachball:red) (+ (count ballThrownHitsAgent:pink) (* (- (count ballThrownHitsAgent) )
            180
          )
          4
        )
        (* (count-same-positions dodgeballThrownToBin:dodgeball) (count dodgeballThrownToBin:dodgeball) )
      )
      (total-score)
    )
  )
)
(:scoring
  (count-once-per-external-objects dodgeballThrownToBin:orange:green)
)
)



(define (game game-id-862) (:domain many-objects-room-v1)
(:setup
  (not
    (forall (?b - (either cellphone key_chain cellphone) ?b2 - (either dodgeball golfball golfball) ?x - (either teddy_bear cylindrical_block))
      (exists (?b2 - pyramid_block)
        (game-conserved
          (on desk ?x)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToDrawerOrBin
      (exists (?o - game_object)
        (then
          (hold (and (same_color ?o ?o) (and (agent_holds ?o) (in ?o ?o) (in_motion ?o) ) (and (game_start ) (and (agent_holds ?o) (and (not (adjacent ?o ?o) ) (not (agent_holds ?o) ) ) ) ) ) )
          (once (exists (?r1 - ball ?h - hexagonal_bin) (agent_holds floor) ) )
          (once (and (and (agent_holds ?o) (opposite ?o ?o) ) (not (agent_holds ?o) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count throwToDrawerOrBin:dodgeball:beachball) 3 )
)
(:scoring
  (= 3 (* 5 1 3 )
  )
)
)



(define (game game-id-863) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?l - dodgeball)
      (game-conserved
        (or
          (in_motion bed)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference thrownBallHitsBlock
      (exists (?d - game_object)
        (then
          (hold (and (in_motion ?d) (on ?d ?d) ) )
          (once (agent_holds ?d) )
          (once (touch ?d ?d) )
          (once (agent_holds rug) )
        )
      )
    )
    (forall (?b - hexagonal_bin ?t - ball)
      (and
        (preference matchingBuildingBuilt
          (then
            (hold (not (agent_holds ?t) ) )
            (once (same_color ?t ?t) )
          )
        )
        (preference throwToBinFromDistance
          (exists (?d - game_object)
            (then
              (once (and (on ?d ?t) (agent_holds ?t) ) )
              (hold-while (or (not (not (not (and (not (open ?t) ) (agent_holds desk) (and (and (and (in desk ?t) (open ?t) ) (not (and (agent_holds ?d) (= 4 (distance rug ?d)) (exists (?ob - cube_block) (same_object agent ?d) ) (in ?t ?d) ) ) ) (adjacent ?d agent) ) ) ) ) ) (in_motion ?d) ) (agent_holds ?t) )
              (once (in_motion ?d) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (count-once-per-objects thrownBallHitsBlock:dodgeball) )
)
(:scoring
  (* (* (count matchingBuildingBuilt:dodgeball) 2 (count-once-per-objects matchingBuildingBuilt:hexagonal_bin) )
    15
  )
)
)



(define (game game-id-864) (:domain few-objects-room-v1)
(:setup
  (exists (?h - drawer)
    (game-conserved
      (adjacent pink ?h)
    )
  )
)
(:constraints
  (and
    (preference basketMadeFromRug
      (exists (?c1 - sliding_door ?h - (either teddy_bear hexagonal_bin) ?c ?c1 - hexagonal_bin)
        (then
          (once (and (and (agent_holds ?c) (in ?c ?c) ) (in_motion ?c) ) )
          (once (on bed ?c1) )
          (once (and (in_motion ?c1) (same_type ?c ?c1) (not (on desk ?c) ) ) )
        )
      )
    )
    (preference ballInOrOnBin
      (exists (?h ?c - block ?o - ball ?o1 - hexagonal_bin ?d - red_dodgeball)
        (then
          (once (agent_holds agent) )
          (hold (not (agent_holds agent) ) )
          (once (and (agent_holds ?d) (in_motion ?d) ) )
        )
      )
    )
    (preference ballRolledOnRampToRug
      (exists (?o - beachball)
        (then
          (once (agent_holds agent) )
          (once (in_motion rug) )
          (once (or (in_motion ?o) (and (in_motion ?o) (in_motion ?o) ) ) )
        )
      )
    )
  )
)
(:terminal
  (> (+ (* (count-increasing-measure ballInOrOnBin:basketball:blue_cube_block:beachball) 2 )
      6
    )
    (+ 3 (count ballRolledOnRampToRug:basketball) )
  )
)
(:scoring
  (external-forall-minimize
    (* 2 3 2 (count ballRolledOnRampToRug:dodgeball) (* 8 5 )
      2
      (* (count basketMadeFromRug:doggie_bed) 3 )
      10
      (* 2 (count-once ballRolledOnRampToRug:dodgeball:red) )
      3
      (count ballInOrOnBin:beachball)
      3
    )
  )
)
)



(define (game game-id-865) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?d - dodgeball ?c2 - (either yellow_cube_block pyramid_block) ?l2 - hexagonal_bin)
      (and
        (game-conserved
          (not
            (not
              (agent_holds bed)
            )
          )
        )
        (game-conserved
          (in_motion ?l2)
        )
        (and
          (game-conserved
            (not
              (agent_holds bed)
            )
          )
          (exists (?c4 - ball ?b - beachball ?c - game_object)
            (exists (?c4 - doggie_bed)
              (game-conserved
                (touch ?c ?c4)
              )
            )
          )
        )
      )
    )
    (forall (?o - game_object)
      (forall (?w - ball ?l4 - curved_wooden_ramp)
        (game-conserved
          (in ?o ?l4)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference failedThrowToBin
      (exists (?o - ball)
        (then
          (once (>= (distance ?o ?o) (distance_side ?o desk door)) )
          (once (and (in_motion ?o) (agent_holds ?o) (and (and (in ?o ?o) (not (and (not (touch ?o ?o) ) (in_motion floor) ) ) ) (or (on rug ?o) (in_motion ?o) ) ) ) )
          (hold-while (and (and (not (on ?o desk) ) (agent_holds ?o) ) (and (exists (?w - (either floor dodgeball cube_block)) (in_motion ?w) ) (not (same_type ?o ?o) ) (in_motion ?o) ) (and (touch ?o bed) (< (distance ?o ?o) 1) ) ) (not (touch desk ?o) ) (adjacent ?o agent) (and (and (in ?o ?o) (not (forall (?w2 - (either mug)) (adjacent ?w2 ?w2) ) ) ) (in_motion ?o) (exists (?h - block ?bl ?b - hexagonal_bin) (in_motion ?bl) ) ) )
          (hold (in_motion desk) )
          (once (adjacent ?o ?o) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (or
        (<= (count-total failedThrowToBin:basketball) 2 )
        (or
          (or
            (>= (total-score) (* 3 2 (* 5 2 1 )
              )
            )
            (>= (* 20 (* (* 3 30 )
                  (count failedThrowToBin)
                )
              )
              (* 50 0 )
            )
            (>= (count failedThrowToBin:dodgeball) (total-score) )
          )
          (>= (+ (count-once-per-objects failedThrowToBin:basketball) (count failedThrowToBin:yellow_cube_block) )
            (count failedThrowToBin:dodgeball)
          )
          (>= 10 4 )
        )
      )
      (>= 5 (count-once-per-objects failedThrowToBin:pyramid_block) )
      (>= (total-score) (total-score) )
    )
    (= (+ (count-once failedThrowToBin:red:alarm_clock) 8 )
      (* (count-longest failedThrowToBin:tall_cylindrical_block:dodgeball) (count failedThrowToBin) )
    )
  )
)
(:scoring
  (count-overlapping failedThrowToBin:green)
)
)



(define (game game-id-866) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?w1 - chair ?w - hexagonal_bin ?ob - flat_block)
      (forall (?o5 - curved_wooden_ramp ?t - building)
        (game-conserved
          (and
            (and
              (adjacent ?t ?ob)
              (not
                (not
                  (not
                    (and
                      (agent_holds ?ob)
                      (in ?ob front_left_corner)
                    )
                  )
                )
              )
            )
            (agent_holds ?t)
            (in_motion agent)
          )
        )
      )
    )
    (exists (?w1 - hexagonal_bin)
      (not
        (game-conserved
          (in ?w1 ?w1)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToBin
      (exists (?ob - hexagonal_bin ?w - red_dodgeball)
        (at-end
          (is_setup_object ?w)
        )
      )
    )
  )
)
(:terminal
  (< (count throwToBin:dodgeball) (count throwToBin:dodgeball) )
)
(:scoring
  (+ (external-forall-maximize (* 10 (count throwToBin:book) 6 )
    )
    (< 5 (count throwToBin:golfball) )
    (* (+ 2 15 )
      6
    )
  )
)
)



(define (game game-id-867) (:domain medium-objects-room-v1)
(:setup
  (not
    (exists (?w2 - watch)
      (game-conserved
        (agent_holds upright)
      )
    )
  )
)
(:constraints
  (and
    (preference itemsHidingScreens
      (exists (?h - ball ?c - ball)
        (then
          (hold (not (and (agent_holds room_center) (on ?c ?c) ) ) )
          (once (not (forall (?c - hexagonal_bin) (and (or (and (agent_holds ?c) (and (and (in_motion ?c) (between ?c ?c ?c) ) (not (on ?c ?c) ) ) ) ) (same_type ?c ?c) ) ) ) )
          (once (not (and (not (rug_color_under front ?c) ) (on ?c ?c) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (- (count-once-per-objects itemsHidingScreens:beachball) )
      (count-once-per-objects itemsHidingScreens:wall:blue_cube_block)
    )
    (or
      (not
        (< (count itemsHidingScreens:tan) 3 )
      )
    )
    (>= 3 (* 8 25 )
    )
  )
)
(:scoring
  (* 8 2 )
)
)



(define (game game-id-868) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?o - block ?c4 ?p2 - (either dodgeball yellow_cube_block))
      (game-optional
        (agent_holds ?c4)
      )
    )
  )
)
(:constraints
  (and
    (forall (?c - dodgeball)
      (and
        (preference otherObjectsOnDeskShelf
          (exists (?o - ball)
            (then
              (hold (broken ?o) )
              (once (adjacent agent agent) )
              (hold (on ?c ?c) )
              (once (and (agent_holds ?c) (not (agent_holds ?o) ) (not (on ?o door) ) ) )
            )
          )
        )
        (preference throwBallToDoggieBed
          (exists (?h - dodgeball ?l2 - dodgeball ?t - chair)
            (then
              (once (object_orientation rug pink) )
              (once (adjacent_side agent ?c agent) )
              (once (in ?c front) )
            )
          )
        )
        (preference throwToBin
          (exists (?r1 - game_object)
            (then
              (once (and (not (in ?c ?r1) ) (and (agent_holds east_sliding_door) (in_motion ?c) ) ) )
              (hold (and (in_motion agent) (and (in_motion rug) (not (not (and (and (not (and (object_orientation ?c ?r1) (in ?r1 ?r1) (in_motion ?r1) ) ) (and (in_motion agent) (in_motion ?c) ) ) (not (in_motion ?c) ) ) ) ) ) (and (not (agent_holds rug) ) (not (and (agent_holds ?r1) (and (not (in_motion agent) ) ) ) ) ) (not (not (not (agent_crouches ) ) ) ) ) )
              (hold (in ?c ?r1) )
            )
          )
        )
      )
    )
    (preference objectOnBed
      (exists (?o4 - hexagonal_bin ?b9 - curved_wooden_ramp ?c5 - dodgeball)
        (then
          (hold (and (and (same_color ?c5 ?c5) (on ?c5 agent) ) (on ?c5 ?c5) (not (and (and (and (not (not (and (not (and (in_motion ?c5) (in_motion agent) ) ) (on ?c5 agent) ) ) ) (not (and (between ?c5 floor ?c5) (and (agent_holds ?c5) (in_motion ?c5) (touch ?c5 agent) ) ) ) ) (not (on ?c5 ?c5) ) ) (in_motion ?c5) ) ) (agent_holds ?c5) ) )
          (once (between ?c5 ?c5 ?c5) )
          (once (forall (?b - book) (and (same_color ?b ?c5) (and (agent_holds ?b) (and (and (in_motion desk) (and (touch ?c5 ?b) (not (not (on ?c5 ?c5) ) ) (not (not (and (and (and (between ?b ?b north_wall) (= 1 1) ) (in_motion ?c5) (and (in ?b ?b) (same_type ?c5 ?b) (in_motion agent) ) ) (in_motion ?b) (and (agent_crouches ) (game_start ) ) (between ?c5 floor desk) (agent_holds ?b) (agent_holds ?c5) ) ) ) (agent_holds ?c5) ) (not (and (in ?b agent) (not (< (x_position agent) (distance ?c5 ?b)) ) ) ) ) (in_motion ?b) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (total-score) )
)
(:scoring
  (count otherObjectsOnDeskShelf:tan)
)
)



(define (game game-id-869) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?b - hexagonal_bin ?h - teddy_bear)
      (game-conserved
        (and
          (touch ?h ?h)
          (agent_holds ?h)
        )
      )
    )
    (exists (?g - (either hexagonal_bin doggie_bed side_table) ?h - dodgeball)
      (and
        (exists (?b - doggie_bed ?b6 ?o - (either doggie_bed golfball wall))
          (game-optional
            (not
              (agent_holds desk)
            )
          )
        )
        (exists (?g - curved_wooden_ramp ?d - (either cd) ?b - dodgeball ?w2 - pyramid_block)
          (exists (?b6 - (either cellphone chair))
            (game-conserved
              (same_color ?h ?h)
            )
          )
        )
        (game-conserved
          (in_motion ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToBin
      (exists (?b5 - block ?r1 - hexagonal_bin ?b - game_object)
        (then
          (once (agent_holds ?b) )
          (once (not (in_motion ?b) ) )
          (once (agent_holds ?b) )
        )
      )
    )
    (preference blockCorrectlyPicked
      (exists (?d ?h ?c - cube_block)
        (then
          (once (agent_holds ?h) )
          (once (agent_holds ?h) )
          (once (agent_holds ?c) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (= (* (* 5 (count blockCorrectlyPicked:blue_dodgeball:rug) )
          (count throwToBin:basketball)
          (+ 3 (count blockCorrectlyPicked:orange) )
          3
          (- 50 )
          16
        )
        3
      )
      (+ 4 (* (count-once-per-objects blockCorrectlyPicked:dodgeball) 6 )
        (count-once-per-objects throwToBin:beachball:beachball)
      )
    )
    (= (+ 3 )
      6
    )
  )
)
(:scoring
  (count-once-per-objects throwToBin:green:beachball)
)
)



(define (game game-id-870) (:domain many-objects-room-v1)
(:setup
  (exists (?b5 - hexagonal_bin)
    (game-conserved
      (in_motion ?b5)
    )
  )
)
(:constraints
  (and
    (forall (?b4 - dodgeball ?r1 - hexagonal_bin)
      (and
        (preference blockToBinFromRug
          (exists (?d - game_object ?bl - yellow_cube_block)
            (at-end
              (and
                (adjacent ?bl block)
                (opposite ?r1 ?r1)
                (in bed agent)
                (not
                  (in_motion ?r1)
                )
                (< (distance ?r1 ?bl) 1)
                (agent_holds ?r1)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (* 10 (count-once-per-objects blockToBinFromRug:red) (count-once-per-objects blockToBinFromRug:blue_cube_block:pink) 300 )
    6
  )
)
(:scoring
  (* 2 3 2 )
)
)



(define (game game-id-871) (:domain many-objects-room-v1)
(:setup
  (exists (?db - (either beachball basketball hexagonal_bin))
    (or
      (forall (?c - drawer)
        (exists (?w1 ?s - dodgeball ?d - ball ?tb - (either cd cellphone) ?d - ball ?s - game_object)
          (and
            (forall (?r2 - (either hexagonal_bin book) ?h - dodgeball)
              (game-conserved
                (> 10 (distance ?c west_wall))
              )
            )
            (forall (?l2 - triangular_ramp ?s - shelf ?b5 - (either top_drawer pencil key_chain))
              (exists (?o - (either laptop book game_object))
                (forall (?h - dodgeball)
                  (game-conserved
                    (agent_holds room_center)
                  )
                )
              )
            )
            (forall (?r - ball ?b - (either golfball key_chain cube_block))
              (forall (?l1 - block)
                (exists (?c6 - doggie_bed)
                  (exists (?d - dodgeball)
                    (game-optional
                      (exists (?h - cube_block)
                        (and
                          (not
                            (and
                              (in_motion ?d)
                              (and
                                (and
                                  (and
                                    (exists (?o3 - game_object)
                                      (agent_holds ?b)
                                    )
                                    (not
                                      (not
                                        (not
                                          (exists (?p2 - dodgeball)
                                            (in blue agent)
                                          )
                                        )
                                      )
                                    )
                                  )
                                  (in floor ?c6)
                                )
                                (and
                                  (object_orientation ?l1 ?h)
                                  (adjacent_side upright ?h ?h)
                                )
                              )
                            )
                          )
                          (adjacent ?d ?b)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectMovedRoomSide
      (exists (?h - teddy_bear)
        (then
          (once (= 0 (distance rug left)) )
          (once (and (in ?h ?h) (agent_holds ?h) ) )
          (hold-while (exists (?b - (either dodgeball blue_cube_block top_drawer) ?b7 - building ?h - cube_block) (opposite agent ?h) ) (on bed ?h) )
        )
      )
    )
    (preference throwToBinFromDistance
      (exists (?h - dodgeball)
        (then
          (hold (and (agent_holds ?h) (in_motion ?h) ) )
          (once (in_motion agent) )
          (once (agent_holds ?h) )
        )
      )
    )
  )
)
(:terminal
  (not
    (> 7 2 )
  )
)
(:scoring
  (count throwToBinFromDistance:beachball)
)
)



(define (game game-id-872) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (exists (?g - hexagonal_bin)
      (on ?g ?g)
    )
  )
)
(:constraints
  (and
    (preference throwGolfballToBin
      (exists (?b2 - building ?o3 - dodgeball)
        (at-end
          (not
            (in_motion room_center)
          )
        )
      )
    )
    (preference throwInBin
      (exists (?d - ball)
        (at-end
          (on room_center ?d)
        )
      )
    )
  )
)
(:terminal
  (or
    (< (count throwGolfballToBin:yellow) (total-time) )
  )
)
(:scoring
  (+ 100 (count-once-per-objects throwGolfballToBin:dodgeball:wall) )
)
)



(define (game game-id-873) (:domain few-objects-room-v1)
(:setup
  (forall (?l - pillow)
    (and
      (game-conserved
        (agent_holds ?l)
      )
      (exists (?h - wall ?x - dodgeball ?c - ball)
        (exists (?p - desktop)
          (game-conserved
            (not
              (not
                (in_motion ?l)
              )
            )
          )
        )
      )
      (game-optional
        (in_motion ?l)
      )
    )
  )
)
(:constraints
  (and
    (preference tanObjectMovedToRoomCenter
      (exists (?h - dodgeball)
        (then
          (hold-while (on ?h ?h) (agent_holds floor) )
          (hold (on ?h ?h) )
          (once (in_motion ?h) )
        )
      )
    )
    (preference itemsTurnedOff
      (exists (?b ?d2 ?p ?r2 ?c2 ?c3 - curved_wooden_ramp)
        (then
          (hold (on room_center ?d2) )
          (hold (and (and (and (and (object_orientation rug ?p) (and (agent_holds ?c3) (>= 10 8) ) ) (opposite brown ?c3) ) (on ?d2 ?b) ) (and (not (and (and (< 1 5) (touch ?p ?p) ) (in ?c3 upright) (not (forall (?h - hexagonal_bin) (in_motion ?c2) ) ) ) ) (not (not (or (not (rug_color_under ?d2 ?d2) ) (and (not (and (agent_holds ?b) (in_motion desk) ) ) (and (is_setup_object ?d2) (agent_holds ?d2) ) ) ) ) ) (and (= (distance ?p ?b) 1) (forall (?d - triangular_ramp ?h ?w2 - doggie_bed) (and (touch ?c3 ?r2) (adjacent_side ?p ?h ?p ?w2) (touch ?h ?d2) (and (not (in_motion ?c2) ) (not (agent_holds room_center) ) ) ) ) ) ) ) )
          (once (not (and (and (same_object ?r2 ?r2) (in_motion ?c3) ) (in_motion ?d2) ) ) )
        )
      )
    )
    (preference redDodgeballThrownToBin
      (exists (?h - (either main_light_switch golfball) ?l - (either cube_block book alarm_clock floor bed))
        (at-end
          (not
            (in_motion bed)
          )
        )
      )
    )
  )
)
(:terminal
  (> 2 (total-score) )
)
(:scoring
  (* (count itemsTurnedOff:dodgeball) 10 )
)
)



(define (game game-id-874) (:domain medium-objects-room-v1)
(:setup
  (forall (?g - hexagonal_bin ?t - dodgeball)
    (not
      (forall (?h - doggie_bed)
        (and
          (and
            (game-conserved
              (< 10 1)
            )
            (game-optional
              (agent_holds ?h)
            )
            (game-conserved
              (and
                (exists (?w1 - cube_block)
                  (not
                    (and
                      (in ?t ?t)
                      (not
                        (agent_holds ?h)
                      )
                      (not
                        (exists (?c - hexagonal_bin)
                          (agent_holds agent)
                        )
                      )
                    )
                  )
                )
                (not
                  (forall (?b5 - dodgeball ?d - triangular_ramp)
                    (agent_holds ?h)
                  )
                )
              )
            )
            (game-optional
              (agent_holds ?t)
            )
            (forall (?c - (either wall triangle_block) ?h - beachball)
              (game-optional
                (is_setup_object ?h)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference pillowThrownToDoggieBed
      (exists (?o1 - dodgeball)
        (then
          (hold-while (touch ?o1 ?o1) (and (< (distance ?o1 floor) 4) (not (and (agent_holds ?o1) (and (same_type ?o1 ?o1) (not (< 8 (distance ?o1 ?o1)) ) ) ) ) ) (not (and (agent_holds ?o1) (or (not (and (on ?o1 ?o1) (and (on ?o1 ?o1) (in_motion ?o1) (in bed ?o1) ) ) ) (in_motion ?o1) ) ) ) )
          (once (in ?o1 ?o1) )
          (hold (not (not (not (not (and (and (rug_color_under ?o1 ?o1) (touch agent ?o1) ) (in ?o1 ?o1) (adjacent ?o1 ?o1) (in_motion ?o1) (on bed rug) (in_motion ?o1) ) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count pillowThrownToDoggieBed:dodgeball) (count pillowThrownToDoggieBed:beachball:purple) )
)
(:scoring
  (+ 8 (count-once-per-objects pillowThrownToDoggieBed:green:yellow:green) )
)
)



(define (game game-id-875) (:domain medium-objects-room-v1)
(:setup
  (forall (?b7 - doggie_bed ?o - beachball)
    (forall (?b6 - color)
      (game-conserved
        (not
          (in ?o ?b6)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownThroughRampToBin
      (exists (?h - (either cellphone golfball))
        (then
          (hold (and (and (same_type ?h ?h) (not (agent_holds ?h) ) (not (in_motion ?h) ) ) (and (in ?h ?h) (agent_holds ?h) ) ) )
          (once (not (and (and (= 10 5 (building_size ?h)) (not (= (distance rug ?h) (building_size ?h) 1) ) ) (in_motion ?h) ) ) )
          (once (not (and (and (in ?h agent) (and (forall (?o - hexagonal_bin) (game_start ) ) ) (in_motion ?h) ) (< 1 8) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count ballThrownThroughRampToBin:basketball) 8 )
)
(:scoring
  (count-once-per-objects ballThrownThroughRampToBin:beachball)
)
)



(define (game game-id-876) (:domain many-objects-room-v1)
(:setup
  (exists (?b - doggie_bed)
    (exists (?c ?bl ?t1 ?c ?w1 - flat_block)
      (exists (?b8 - cube_block ?r - dodgeball)
        (forall (?b10 - (either block dodgeball))
          (game-optional
            (not
              (and
                (not
                  (in_motion agent)
                )
                (agent_holds ?b)
                (open ?bl)
                (and
                  (exists (?l - shelf)
                    (or
                      (in_motion ?b10)
                      (in_motion ?b)
                      (agent_holds ?b)
                    )
                  )
                  (in ?b ?t1)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockInTowerAtEnd
      (exists (?l - (either dodgeball))
        (then
          (once (on ?l ?l) )
          (once (opposite ?l ?l) )
          (once (or (and (not (and (in_motion ?l) (not (in_motion desk) ) ) ) (not (not (is_setup_object room_center) ) ) ) (not (not (above ?l bed) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 6 (total-score) )
)
(:scoring
  (+ (* 7 (/ (count-once-per-external-objects blockInTowerAtEnd:dodgeball) (count-once-per-objects blockInTowerAtEnd:alarm_clock:hexagonal_bin) ) )
    (count blockInTowerAtEnd:pink_dodgeball:golfball)
  )
)
)



(define (game game-id-877) (:domain medium-objects-room-v1)
(:setup
  (exists (?h - tall_cylindrical_block)
    (forall (?o2 - chair)
      (game-conserved
        (in agent upright)
      )
    )
  )
)
(:constraints
  (and
    (preference tanObjectMovedToRoomCenter
      (exists (?b - curved_wooden_ramp)
        (then
          (once (not (and (agent_holds bed) (and (< (distance ?b ?b) (distance ?b ?b)) (open ?b) ) ) ) )
          (once (on bed brown) )
          (once (game_start ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (total-score) )
)
(:scoring
  (count-once tanObjectMovedToRoomCenter:basketball)
)
)



(define (game game-id-878) (:domain many-objects-room-v1)
(:setup
  (not
    (exists (?r - color)
      (forall (?d - cube_block)
        (forall (?d - hexagonal_bin ?p - teddy_bear)
          (exists (?w2 - chair ?b - teddy_bear ?r - (either dodgeball lamp hexagonal_bin) ?b ?p3 - hexagonal_bin ?d2 - hexagonal_bin)
            (game-optional
              (and
                (object_orientation ?p ?d)
                (on ?p ?d2)
                (not
                  (not
                    (faces ?d ?d)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - (either ball chair dodgeball))
      (and
        (preference greenObjectMovedToRoomCenter
          (exists (?h - curved_wooden_ramp)
            (then
              (once (game_start ) )
              (hold (and (not (agent_crouches ) ) (and (in ?h ?h) (in ?b ?b) ) ) )
              (once (on ?h ?h) )
            )
          )
        )
        (preference blueObjectMovedToRoomCenter
          (then
            (hold (on rug rug) )
            (once-measure (agent_holds ?b) (distance room_center agent) )
            (once (and (and (agent_holds ?b) (not (not (not (agent_holds desk) ) ) ) ) (agent_holds ?b) ) )
          )
        )
      )
    )
    (forall (?o2 - (either cd))
      (and
        (preference itemInClosedDrawerAtEnd
          (then
            (once (adjacent ?o2 bed) )
            (hold (forall (?h ?b1 - hexagonal_bin ?p - dodgeball) (agent_holds ?p) ) )
          )
        )
        (preference throwToRampToBin
          (exists (?d - red_dodgeball)
            (then
              (once (and (not (rug_color_under ?o2 ?d) ) (not (agent_holds ?d) ) ) )
              (hold (not (in_motion ?d) ) )
              (once (agent_holds agent) )
            )
          )
        )
        (preference dodgeballHitsBinBottom
          (exists (?g - cube_block)
            (then
              (hold-while (touch desk ?o2) (in_motion ?o2) (on ?g ?o2) )
              (once (and (not (not (and (in_motion ?o2) (and (agent_holds bed) (in_motion ?g) (in ?o2 east_sliding_door) ) ) ) ) (on ?o2 ?g) ) )
              (hold (agent_holds rug) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (< (count-once-per-objects greenObjectMovedToRoomCenter:pink) (total-time) )
      (or
        (and
          (>= (count greenObjectMovedToRoomCenter:basketball) (total-time) )
          (> (+ (count blueObjectMovedToRoomCenter:purple:tall_cylindrical_block) (external-forall-maximize (external-forall-maximize (+ 1 5 )
                )
              )
            )
            2
          )
          (or
            (or
              (not
                (<= (total-time) (* 10 10 (- (+ (count-once-per-objects dodgeballHitsBinBottom:doggie_bed) 6 )
                    )
                    (* (count-once-per-external-objects throwToRampToBin:alarm_clock) (+ 5 8 )
                      10
                    )
                    (count-once-per-objects itemInClosedDrawerAtEnd:basketball)
                    (* (count-once-per-objects dodgeballHitsBinBottom:wall) (- (count-once-per-objects blueObjectMovedToRoomCenter:dodgeball) )
                    )
                    (+ 3 (* (count throwToRampToBin:red) 9 )
                      (external-forall-maximize
                        (* (+ (+ (* (* (count-once throwToRampToBin:pink_dodgeball) (+ 3 (* (count-once-per-objects throwToRampToBin:red) (>= (count itemInClosedDrawerAtEnd) (* 10 (+ 30 7 )
                                          (count-overlapping itemInClosedDrawerAtEnd:green)
                                          (+ 1 (count dodgeballHitsBinBottom:basketball:beachball) )
                                        )
                                      )
                                    )
                                  )
                                )
                                (count itemInClosedDrawerAtEnd:brown)
                              )
                              4
                            )
                            9
                            (* 5 (count greenObjectMovedToRoomCenter:red) )
                          )
                        )
                      )
                    )
                    6
                    (count dodgeballHitsBinBottom:yellow)
                  )
                )
              )
              (or
                (>= (- 10 )
                  (count-measure greenObjectMovedToRoomCenter:basketball)
                )
              )
            )
            (or
              (or
                (> (count dodgeballHitsBinBottom:beachball) (total-time) )
              )
              (and
                (>= (count greenObjectMovedToRoomCenter:beachball:dodgeball) (external-forall-maximize (count greenObjectMovedToRoomCenter:dodgeball) ) )
              )
              (< 3 (* 60 6 )
              )
            )
            (>= (count throwToRampToBin:dodgeball) (count throwToRampToBin:doggie_bed) )
          )
        )
        (not
          (and
            (>= 2 (* 2 (* 5 (count dodgeballHitsBinBottom:yellow:yellow) )
              )
            )
          )
        )
        (or
          (not
            (or
              (>= (* (count-once-per-objects dodgeballHitsBinBottom:beachball:yellow_cube_block) 5 )
                (count dodgeballHitsBinBottom:dodgeball)
              )
              (>= (count-unique-positions itemInClosedDrawerAtEnd:yellow) (total-time) )
            )
          )
          (< 5 (count-once throwToRampToBin:golfball) )
        )
      )
    )
    (>= (total-time) 10 )
  )
)
(:scoring
  (>= (+ (count-shortest dodgeballHitsBinBottom:book:dodgeball) (count throwToRampToBin:brown) )
    (count greenObjectMovedToRoomCenter:blue_cube_block)
  )
)
)



(define (game game-id-879) (:domain few-objects-room-v1)
(:setup
  (forall (?s - ball)
    (and
      (game-conserved
        (in_motion ?s)
      )
    )
  )
)
(:constraints
  (and
    (preference blockCorrectlyPicked
      (exists (?x - hexagonal_bin)
        (then
          (once (agent_holds ?x) )
          (hold (agent_holds ?x) )
          (once (not (in desk ?x) ) )
        )
      )
    )
    (preference blockPickedUp
      (exists (?d - hexagonal_bin)
        (at-end
          (and
            (agent_holds ?d)
            (agent_holds ?d)
          )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (+ (count blockCorrectlyPicked:basketball) 2 4 (count blockCorrectlyPicked:yellow:doggie_bed) )
  )
)
(:scoring
  (+ (+ (+ (count-unique-positions blockCorrectlyPicked:green) (count blockCorrectlyPicked:yellow) 10 (+ -30 (+ (external-forall-maximize (- 3 )
            )
            (* (count blockPickedUp:yellow) (* 3 (* 0 (count blockPickedUp:yellow) )
              )
            )
          )
        )
      )
      2
      (count blockCorrectlyPicked:doggie_bed:dodgeball)
      (- (< (* 6 (external-forall-maximize (external-forall-maximize (count-unique-positions blockCorrectlyPicked:basketball) ) ) )
          2
        )
      )
      (* 16 5 )
      (count blockPickedUp:red)
    )
    5
  )
)
)



(define (game game-id-880) (:domain many-objects-room-v1)
(:setup
  (and
    (not
      (exists (?d ?d1 ?t ?g - hexagonal_bin)
        (and
          (and
            (and
              (or
                (game-optional
                  (forall (?o4 - teddy_bear)
                    (< 1 9)
                  )
                )
              )
              (forall (?b - curved_wooden_ramp)
                (game-optional
                  (in_motion ?b)
                )
              )
              (and
                (and
                  (exists (?t2 - hexagonal_bin ?l - game_object)
                    (forall (?b3 - chair ?b7 - doggie_bed ?c2 - blue_cube_block)
                      (and
                        (game-optional
                          (agent_holds ?d)
                        )
                        (game-optional
                          (game_over )
                        )
                        (game-conserved
                          (and
                            (between ?d1 ?d1 ?d)
                            (and
                              (and
                                (in agent rug)
                                (on ?g ?d)
                                (equal_z_position ?c2 ?t)
                              )
                              (not
                                (in door ?d1)
                              )
                              (exists (?d - chair)
                                (opposite back agent)
                              )
                              (adjacent ?t green_golfball)
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
            (and
              (game-conserved
                (in_motion upright)
              )
              (game-conserved
                (adjacent left ?t)
              )
              (forall (?bl - doggie_bed ?x - shelf ?b - game_object)
                (game-conserved
                  (agent_holds ?g)
                )
              )
            )
            (game-optional
              (agent_holds ?d1)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?p3 - game_object)
      (and
        (preference throwMovesBeachballWithoutKnockingTeddy
          (exists (?h - game_object)
            (then
              (once (on ?h ?p3) )
              (once (adjacent_side ?p3 ?p3 ?p3 ?h) )
              (once (agent_holds ?p3) )
            )
          )
        )
      )
    )
    (preference watchOnShelf
      (exists (?b - dodgeball)
        (then
          (once (not (in ?b ?b) ) )
          (once (touch ?b ?b) )
          (once (is_setup_object ?b) )
        )
      )
    )
  )
)
(:terminal
  (and
    (<= (count throwMovesBeachballWithoutKnockingTeddy:hexagonal_bin) 5 )
  )
)
(:scoring
  (count-once-per-objects throwMovesBeachballWithoutKnockingTeddy:red_pyramid_block)
)
)



(define (game game-id-881) (:domain many-objects-room-v1)
(:setup
  (exists (?b - (either tall_cylindrical_block laptop beachball))
    (game-conserved
      (not
        (in_motion desk)
      )
    )
  )
)
(:constraints
  (and
    (preference blockKnockedFromBuildingInBin
      (exists (?d - hexagonal_bin)
        (then
          (once (not (and (exists (?h - (either hexagonal_bin alarm_clock book)) (not (on ?h desk) ) ) (not (in ?d ?d) ) (and (and (agent_holds blue) (in_motion ?d) ) (in_motion ?d) ) (not (not (same_color ?d bed) ) ) ) ) )
          (hold (not (exists (?r - doggie_bed) (agent_crouches ) ) ) )
          (once (and (touch ?d desk) (in_motion ?d) ) )
        )
      )
    )
  )
)
(:terminal
  (> (count blockKnockedFromBuildingInBin:beachball:beachball) (external-forall-maximize (* 4 (= (+ 1 (count-unique-positions blockKnockedFromBuildingInBin:cube_block) )
          3
        )
      )
    )
  )
)
(:scoring
  (count blockKnockedFromBuildingInBin:beachball:golfball)
)
)



(define (game game-id-882) (:domain few-objects-room-v1)
(:setup
  (exists (?b - blinds ?b - block)
    (game-conserved
      (and
        (< 3 0.5)
        (adjacent_side ?b ?b rug)
        (on ?b ?b)
      )
    )
  )
)
(:constraints
  (and
    (forall (?p - triangular_ramp ?l2 - hexagonal_bin ?b - pillow)
      (and
        (preference failedThrowToBin
          (exists (?w - hexagonal_bin)
            (then
              (once (not (agent_holds door) ) )
              (once (adjacent_side desk ?b agent) )
              (hold (and (agent_holds agent) (and (on ?w ?b) (not (not (agent_holds right) ) ) (< (distance ?b ?b) (distance agent ?w)) ) ) )
            )
          )
        )
        (preference dodgeballAndBasketballInBin
          (exists (?d2 - triangular_ramp)
            (at-end
              (agent_holds desk)
            )
          )
        )
      )
    )
    (preference blockToBinFromRug
      (exists (?s - flat_block)
        (then
          (hold-while (adjacent ?s ?s) (rug_color_under bed ?s) )
          (once (in_motion desk) )
          (once (in_motion ?s) )
        )
      )
    )
    (forall (?o - (either pencil teddy_bear))
      (and
        (preference objectLandsInBin
          (exists (?p3 - ball ?r2 - hexagonal_bin)
            (then
              (once (in_motion ?r2) )
              (once (in ?r2 ?o) )
              (once (agent_holds ?o) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (and
      (>= (count dodgeballAndBasketballInBin:purple) (total-score) )
      (not
        (> 10 (total-score) )
      )
    )
  )
)
(:scoring
  (count dodgeballAndBasketballInBin:beachball:blue_dodgeball:white)
)
)



(define (game game-id-883) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (and
      (in_motion agent)
      (not
        (= 1 3 5)
      )
    )
  )
)
(:constraints
  (and
    (forall (?b2 - dodgeball)
      (and
        (preference ballThrownFromDoor
          (exists (?r1 - (either dodgeball alarm_clock))
            (then
              (hold (agent_holds ?b2) )
              (hold (agent_holds ?r1) )
            )
          )
        )
        (preference failedThrowToBin
          (exists (?r - (either pencil cd))
            (then
              (once (forall (?l - (either cube_block cube_block)) (and (not (or (< (distance ?b2 ?l) 1) (in_motion right) (< 1 (distance ?r ?r)) ) ) (adjacent_side ?b2 room_center ?l) ) ) )
              (hold-while (in ?r bed) (game_over ) (on ?r ?b2) (in_motion ?r) )
            )
          )
        )
        (preference dropAttempt
          (exists (?p1 - cylindrical_block)
            (then
              (once (in_motion ?p1) )
              (hold-while (adjacent ?b2 ?p1) (on agent ?p1) (not (and (above ?p1 ?p1) (adjacent ?p1 ?b2) ) ) )
              (once (and (not (on ?p1 ?p1) ) (not (on ?p1 ?b2) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< 4 (* (* 20 (>= 0 (count-once-per-objects dropAttempt:yellow) )
      )
      4
    )
  )
)
(:scoring
  (count-once ballThrownFromDoor:dodgeball)
)
)



(define (game game-id-884) (:domain few-objects-room-v1)
(:setup
  (forall (?o4 - (either golfball golfball book))
    (and
      (forall (?h - game_object)
        (exists (?ob - watch)
          (game-conserved
            (not
              (and
                (agent_holds ?h)
                (adjacent rug ?ob)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference bounceBallToBin
      (exists (?o - (either cube_block doggie_bed cylindrical_block wall cd) ?tb - chair)
        (then
          (once (and (on agent ?tb) ) )
          (hold (exists (?b1 - ball) (in_motion ?tb) ) )
          (once (agent_holds ?tb) )
        )
      )
    )
    (preference rollBallToBin
      (exists (?f - wall)
        (at-end
          (not
            (not
              (in_motion ?f)
            )
          )
        )
      )
    )
    (forall (?h - wall)
      (and
        (preference cubeBlockFromBedToShelf
          (then
            (hold (and (adjacent_side ?h ?h ?h) (not (and (and (agent_holds room_center) (agent_holds ?h) ) (and (not (forall (?o - hexagonal_bin) (not (exists (?d2 - ball) (not (< 6 (distance bed ?o)) ) ) ) ) ) (touch pink_dodgeball ?h) ) ) ) ) )
            (hold (in_motion ?h) )
            (hold (on ?h ?h) )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (total-score) )
)
(:scoring
  (+ 3 (count rollBallToBin:dodgeball) )
)
)



(define (game game-id-885) (:domain medium-objects-room-v1)
(:setup
  (exists (?d - hexagonal_bin)
    (exists (?g - hexagonal_bin ?b7 ?b - doggie_bed)
      (forall (?d - hexagonal_bin)
        (and
          (game-conserved
            (in_motion ?d)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToRug
      (exists (?o1 - (either doggie_bed hexagonal_bin))
        (then
          (hold (adjacent door ?o1) )
          (hold (not (and (and (agent_holds rug) (agent_holds ?o1) ) (agent_holds bed) ) ) )
          (once (= 1 (distance_side floor side_table ?o1 rug)) )
        )
      )
    )
  )
)
(:terminal
  (>= (external-forall-maximize (* 3 (count-once-per-objects ballThrownToRug:dodgeball) )
    )
    (total-time)
  )
)
(:scoring
  (- (count-once ballThrownToRug:beachball) )
)
)



(define (game game-id-886) (:domain many-objects-room-v1)
(:setup
  (not
    (forall (?d - (either key_chain ball dodgeball))
      (game-conserved
        (or
          (agent_holds ?d)
          (in ?d pink_dodgeball)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballKnocksTeddy
      (exists (?c ?o2 - ball)
        (then
          (hold (agent_crouches ) )
          (once (agent_holds ?o2) )
          (once (agent_holds ?c) )
        )
      )
    )
    (preference ballKnocksBlockFromRug
      (exists (?tb ?b - game_object ?d - wall)
        (then
          (once (and (adjacent agent ?d) (on ?d ?d) (agent_holds desk) ) )
          (once (not (< (distance ?d ?d) 5) ) )
          (once (agent_holds ?d) )
        )
      )
    )
    (forall (?b - curved_wooden_ramp)
      (and
        (preference throwBallFromOtherBallToBin
          (exists (?t2 - bridge_block ?b3 - teddy_bear)
            (then
              (hold (above ?b3 ?b) )
              (once (and (not (in_motion ?b3) ) (and (not (agent_holds ?b3) ) (and (and (exists (?h - golfball) (above ?b3 ?h) ) (is_setup_object upright) (forall (?b6 - hexagonal_bin ?d - hexagonal_bin) (between ?d ?d ?b3) ) ) (in ?b3 ?b3) (in_motion ?b) (on ?b ?b) (not (in_motion desk) ) (< 0 1) (and (not (agent_holds ?b) ) (and (in_motion ?b) (in_motion ?b) (not (same_color ?b3 ?b) ) ) (or (on ?b3 ?b3) (touch ?b ?b3) ) ) ) ) (exists (?b2 - game_object) (not (not (not (in ?b2 ?b2) ) ) ) ) (in_motion ?b) ) )
              (hold (and (agent_holds ?b3) (in ?b3 ?b3) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (external-forall-maximize (count-unique-positions throwBallFromOtherBallToBin:dodgeball:dodgeball:yellow) ) (+ (count throwBallFromOtherBallToBin:hexagonal_bin) 9 )
    )
    (count-once-per-objects ballKnocksTeddy:dodgeball:hexagonal_bin)
  )
)
(:scoring
  (* 50 8 )
)
)



(define (game game-id-887) (:domain medium-objects-room-v1)
(:setup
  (exists (?h - dodgeball)
    (game-conserved
      (on ?h ?h)
    )
  )
)
(:constraints
  (and
    (preference objectOnBed
      (exists (?d - game_object ?c1 ?h - hexagonal_bin)
        (at-end
          (same_color ?c1 ?h)
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (* 10 300 )
  )
)
(:scoring
  (external-forall-maximize
    (count-once-per-external-objects objectOnBed:hexagonal_bin)
  )
)
)



(define (game game-id-888) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?t - curved_wooden_ramp)
      (and
        (game-conserved
          (not
            (<= (distance ?t ?t) 1)
          )
        )
        (game-optional
          (toggled_on ?t)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?db - cube_block)
      (and
        (preference blockIncorrectlyPicked
          (exists (?bl - game_object)
            (then
              (once (and (on ?db ?db) (in ?bl ?bl) ) )
              (once (and (not (on ?bl room_center) ) (or (not (on ?db agent) ) (adjacent ?db ?bl) ) (adjacent ?db bed) (in_motion ?bl) (in_motion ?db) (in ?db bed) (forall (?b - dodgeball) (in_motion desk) ) ) )
              (once (not (exists (?d - hexagonal_bin ?h - (either dodgeball golfball)) (not (in ?bl rug) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 10 5 )
)
(:scoring
  (+ (count blockIncorrectlyPicked:pink) 5 )
)
)



(define (game game-id-889) (:domain many-objects-room-v1)
(:setup
  (exists (?h - ball)
    (game-optional
      (on ?h ?h)
    )
  )
)
(:constraints
  (and
    (forall (?c - dodgeball ?o1 - dodgeball)
      (and
        (preference throwGolfballToBin
          (exists (?b - hexagonal_bin)
            (then
              (once (agent_holds ?o1) )
              (once (not (same_type top_drawer ?b) ) )
              (hold (agent_holds ?b) )
              (once (agent_holds ?o1) )
            )
          )
        )
      )
    )
    (preference gameObjectToBin
      (exists (?h - ball)
        (then
          (hold-while (or (not (agent_holds desk) ) (< 1 1) (on agent ?h) (adjacent ?h ?h) ) (and (not (and (in_motion ?h) (in_motion ?h) (and (and (> (distance ?h ?h) (distance ?h ?h)) (not (adjacent ?h desk) ) ) (and (agent_holds ?h) (agent_holds ?h) (and (agent_holds ?h) (agent_holds ?h) (toggled_on ?h) ) ) ) ) ) (game_start ) (touch ?h ?h) ) (adjacent agent room_center) )
          (once (agent_holds desk) )
          (hold-while (and (game_start ) (agent_holds agent) ) (not (not (agent_holds ?h) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects gameObjectToBin:orange) 10 )
)
(:scoring
  (count-once gameObjectToBin:block:red)
)
)



(define (game game-id-890) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (in_motion bed)
  )
)
(:constraints
  (and
    (forall (?h - dodgeball)
      (and
        (preference blockPlacedInBuilding
          (at-end
            (not
              (in ?h ?h)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 1 (count-once-per-objects blockPlacedInBuilding:dodgeball) )
)
(:scoring
  (count-once-per-objects blockPlacedInBuilding:tan)
)
)



(define (game game-id-891) (:domain many-objects-room-v1)
(:setup
  (exists (?b8 - block)
    (game-conserved
      (not
        (on ?b8 ?b8)
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?w - doggie_bed)
        (at-end
          (agent_holds ?w)
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-total throwAttempt:hexagonal_bin) (count throwAttempt:golfball) )
    (> (count throwAttempt:basketball) (count-once throwAttempt:dodgeball:golfball) )
  )
)
(:scoring
  (count throwAttempt:dodgeball:golfball)
)
)



(define (game game-id-892) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?db - hexagonal_bin)
      (game-conserved
        (on bed ?db)
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - cylindrical_block)
      (and
        (preference objectOnBed
          (exists (?d - triangular_ramp)
            (then
              (once (and (not (on ?b ?b) ) (and (exists (?c - block ?d1 - cube_block ?b - ball ?o2 - dodgeball) (in ?d ?d) ) (touch room_center ?b) ) (in agent rug) ) )
              (once (and (<= 1 7) (and (and (and (in_motion ?b) (adjacent_side ?d ?b ?b) ) (adjacent ?b bed) ) (agent_holds ?d) ) ) )
              (hold (in_motion ?d) )
            )
          )
        )
        (preference throwBallFromOtherBallToBin
          (exists (?ob ?h - teddy_bear ?b1 - beachball ?s - cube_block)
            (then
              (once (in agent ?s) )
              (once (opposite ?b ?s) )
              (once (on ?s ?b) )
            )
          )
        )
        (preference objectInBuilding
          (exists (?h ?b4 - block)
            (then
              (once (same_color ?b ?h) )
              (once (agent_holds ?h) )
              (once (and (< 1 (distance ?b4 rug)) (on ?b4 ?b4) (on ?b ?b4) (not (in_motion ?b) ) ) )
            )
          )
        )
      )
    )
    (preference rollBallToBin
      (exists (?r - curved_wooden_ramp)
        (then
          (once (adjacent ?r ?r) )
          (once (same_object door ?r) )
          (once (not (not (not (in_motion ?r) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (- (count throwBallFromOtherBallToBin) )
      (* (* (+ (* (count-once-per-objects rollBallToBin:beachball) 10 )
            10
            5
          )
          (+ (count-once throwBallFromOtherBallToBin:doggie_bed:dodgeball) 6 )
        )
        3
        (* (count objectInBuilding:red:doggie_bed) (* (count objectInBuilding:blue_cube_block) 6 )
        )
      )
    )
    (>= (count rollBallToBin:basketball) (total-score) )
  )
)
(:scoring
  (count-once-per-objects objectOnBed:purple)
)
)



(define (game game-id-893) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?d - ball)
      (game-conserved
        (agent_holds room_center)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToWallToAgent
      (exists (?p3 - ball ?w - shelf)
        (then
          (hold-while (agent_holds ?w) (agent_holds ?w) )
          (once (in_motion ?w) )
          (once-measure (not (exists (?b - chair ?l4 - triangular_ramp) (adjacent ?l4 ?l4) ) ) (distance ?w ?w) )
        )
      )
    )
    (forall (?l - game_object)
      (and
        (preference blockCorrectlyPicked
          (exists (?h - hexagonal_bin)
            (then
              (once (and (< 3 2) (not (in_motion ?h) ) ) )
              (once (and (agent_holds ?l) (not (and (and (on pink_dodgeball ?l) (in_motion ?l) (in_motion ?h) ) (not (agent_holds ?l) ) (agent_holds ?h) ) ) (<= 5 (distance ?l ?h)) ) )
              (once (not (on pink_dodgeball ?l) ) )
            )
          )
        )
      )
    )
    (forall (?h - hexagonal_bin)
      (and
        (preference thrownBallHitsBlock
          (exists (?s - hexagonal_bin ?c - (either yellow_cube_block pen alarm_clock cube_block golfball hexagonal_bin tall_cylindrical_block))
            (then
              (hold-while (> 1 (distance ?c agent)) (>= (distance ?c ?h) (distance ?c ?h)) (not (not (and (<= (distance ?h agent) 1) (in bridge_block ?c) ) ) ) )
              (hold (and (in_motion ?c) (in room_center ?h) ) )
              (hold (in_motion ?h) )
            )
          )
        )
        (preference cubeThrownToBin
          (exists (?t1 - cube_block)
            (then
              (once (not (or (on ?t1 room_center) (and (on desk ?h) (not (= 3 (distance ?t1 ?h) (distance ?h ?t1)) ) (not (not (not (<= (distance room_center ?h) 1) ) ) ) (in ?t1 ?h) ) (and (agent_holds ?h) (in_motion agent) (not (agent_holds ?t1) ) ) ) ) )
              (once (not (not (not (adjacent green_golfball ?h) ) ) ) )
              (hold-while (between ?t1 ?h bed) (and (not (and (and (agent_holds bottom_shelf) (same_color ?h ?h) (in_motion ?h) ) ) ) (not (not (and (on ?t1 ?t1) (not (= 0 (distance ?t1 ?h)) ) ) ) ) (not (on ?h ?t1) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 2 5 )
)
(:scoring
  (count blockCorrectlyPicked:basketball)
)
)



(define (game game-id-894) (:domain many-objects-room-v1)
(:setup
  (exists (?f - game_object ?r - hexagonal_bin)
    (game-optional
      (exists (?h - doggie_bed ?c6 - blue_cube_block)
        (and
          (in_motion ?c6)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballFromRugToBin
      (exists (?p ?t ?t ?h - hexagonal_bin ?p - hexagonal_bin)
        (then
          (once (not (or (agent_holds ?p) (not (not (and (or (not (adjacent ?p ?p) ) (not (agent_holds ?p) ) (game_start ) ) (in_motion desk) (agent_holds ?p) ) ) ) ) ) )
          (hold-while (not (and (on ?p ?p) (and (not (adjacent ?p ?p) ) (and (and (in_motion ?p) (not (and (and (agent_holds ?p) (agent_holds ?p) ) (and (agent_holds ?p) ) ) ) ) (not (and (and (same_type ?p bridge_block) (and (not (and (on ?p ?p) (exists (?d1 - building ?c - wall) (in_motion ?p) ) ) ) (in_motion ?p) (in_motion side_table) ) ) (and (in_motion ?p) (is_setup_object ?p) ) ) ) ) ) ) ) (agent_holds ?p) )
          (hold (on desk ?p) )
        )
      )
    )
    (preference bounceBallToBin
      (exists (?o - (either bed alarm_clock))
        (then
          (once (not (in_motion ?o) ) )
          (once-measure (not (adjacent_side ?o ?o ?o) ) (distance ?o ?o) )
          (once (and (not (not (and (not (in_motion ?o) ) (and (and (on ?o ?o) ) (and (and (on ?o ?o) (adjacent ?o ?o) ) (is_setup_object ?o) ) ) ) ) ) (not (not (on ?o ?o) ) ) ) )
        )
      )
    )
    (preference throwOverRamp
      (exists (?b10 - drawer ?w1 - doggie_bed ?b8 - hexagonal_bin)
        (at-end
          (and
            (not
              (not
                (rug_color_under bed ?b8)
              )
            )
            (forall (?h - block)
              (same_object ?h ?b8)
            )
          )
        )
      )
    )
    (preference dodgeballThrownToBin
      (exists (?b - hexagonal_bin)
        (then
          (hold (not (same_object ?b ?b) ) )
          (once (not (in_motion ?b) ) )
          (hold-while (in_motion room_center) (adjacent_side room_center bed ?b) )
        )
      )
    )
    (preference gameBlockFound
      (exists (?o2 - building)
        (then
          (once (not (agent_holds desk) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-once dodgeballFromRugToBin:doggie_bed) (* (count-once-per-objects dodgeballThrownToBin:golfball) 3 )
    )
    (not
      (>= (+ 3 (count throwOverRamp:blue_dodgeball:basketball:red) )
        (total-time)
      )
    )
  )
)
(:scoring
  (count gameBlockFound:triangle_block:basketball:beachball)
)
)



(define (game game-id-895) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?db ?d - game_object)
      (and
        (game-optional
          (> (distance back ?d) 1)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference smallItemsInPlace
      (exists (?r - cube_block)
        (then
          (once (equal_x_position ?r ?r) )
          (once (adjacent_side ?r ?r ?r ?r) )
          (hold (same_type ?r room_center) )
        )
      )
    )
    (preference dodgeballFromRugToBin
      (exists (?b - dodgeball)
        (then
          (once (and (between ?b ?b ?b) (not (not (not (in_motion ?b) ) ) ) ) )
          (hold (and (and (and (not (and (agent_holds ?b) (not (and (and (not (and (adjacent door back) (not (agent_holds ?b) ) (< (distance desk ?b) (distance_side ?b ?b ?b)) (not (in ?b ?b) ) ) ) (and (on ?b desk) (not (not (in agent ?b) ) ) ) ) (agent_holds ?b) ) ) ) ) (in_motion ?b) ) (and (in_motion ?b) (and (not (agent_holds ?b) ) (agent_holds ?b) ) ) ) (on north_wall desk) ) )
          (hold-while (agent_holds ?b) (forall (?r2 - wall) (in_motion ?b) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (total-score) )
)
(:scoring
  (count-measure smallItemsInPlace:pink_dodgeball)
)
)



(define (game game-id-896) (:domain many-objects-room-v1)
(:setup
  (exists (?l3 - game_object)
    (exists (?b - hexagonal_bin ?r1 - cube_block)
      (and
        (exists (?r ?b - hexagonal_bin ?b5 - (either mug cd))
          (and
            (exists (?h - cube_block ?d - cube_block ?r - book)
              (game-optional
                (not
                  (same_object ?r drawer)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference binKnockedOver
      (exists (?g - dodgeball)
        (then
          (once (and (not (< (distance ?g room_center) 1) ) (agent_holds agent) ) )
          (hold-while (and (in_motion ?g) (in_motion ?g) (adjacent back ?g) (in_motion ?g) (and (not (in_motion agent) ) (in ?g front) ) (not (adjacent ?g ?g) ) ) (not (and (agent_holds ?g) (agent_holds agent) ) ) )
          (once (agent_holds ?g) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= 20 (* 1 30 )
    )
  )
)
(:scoring
  (* 300 (* 2 10 )
  )
)
)



(define (game game-id-897) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?o1 - red_pyramid_block ?c - cylindrical_block)
      (and
        (game-conserved
          (adjacent_side ?c rug ?c)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference pillowThrownToDoggieBed
      (exists (?l3 - dodgeball ?db - color)
        (then
          (once (< 4 (distance_side ?db ?db ?db ?db)) )
          (once (not (agent_holds room_center) ) )
          (once (in ?db ?db) )
        )
      )
    )
    (preference throwFromBehindChairsInBin
      (exists (?b - hexagonal_bin)
        (then
          (hold (in_motion ?b) )
          (hold (>= 0.5 0) )
          (once (and (not (not (>= 8 (distance ?b ?b)) ) ) (on ?b ?b) ) )
        )
      )
    )
    (preference throwMissesBin
      (exists (?d - (either dodgeball block))
        (then
          (hold (not (in ?d bridge_block) ) )
          (hold (and (not (on ?d ?d) ) (not (not (agent_holds ?d) ) ) ) )
          (once (and (object_orientation room_center ?d) (and (agent_holds ?d) (agent_holds ?d) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* (count-once-per-objects pillowThrownToDoggieBed:dodgeball:dodgeball) 3 )
      (* (* (count-once-per-objects throwFromBehindChairsInBin:pink:side_table) (* (count-unique-positions pillowThrownToDoggieBed:pink_dodgeball:yellow) (/ 7 (* (count pillowThrownToDoggieBed:green:golfball) 300 1 )
            )
          )
          2
        )
        (* 3 (+ (* 5 (count-unique-positions throwMissesBin:golfball) )
            (- (count pillowThrownToDoggieBed:doggie_bed) )
          )
        )
        (* -30 (* (* 5 (* 5 (* (* (count throwFromBehindChairsInBin:dodgeball) 2 )
                  50
                )
              )
            )
            5
          )
        )
        (count pillowThrownToDoggieBed:dodgeball:basketball)
        (* (count-unique-positions throwMissesBin:pyramid_block:hexagonal_bin:hexagonal_bin) (count-once-per-objects pillowThrownToDoggieBed:yellow) )
        (= 25 5 )
      )
    )
    (<= (count pillowThrownToDoggieBed:beachball) (* (* (count-once-per-objects pillowThrownToDoggieBed:pink:orange) (count pillowThrownToDoggieBed:dodgeball) 10 )
        1
      )
    )
  )
)
(:scoring
  (= (count-once-per-objects pillowThrownToDoggieBed:top_drawer) 6 )
)
)



(define (game game-id-898) (:domain few-objects-room-v1)
(:setup
  (exists (?o2 - (either triangle_block floor basketball))
    (game-conserved
      (agent_holds ?o2)
    )
  )
)
(:constraints
  (and
    (preference agentLeavesDogbedOrNoMoreBalls
      (exists (?t - chair)
        (then
          (hold (or (adjacent ?t ?t) (in_motion desk) ) )
        )
      )
    )
    (preference objectInBuilding
      (exists (?b - (either game_object golfball key_chain))
        (then
          (once (and (on pink_dodgeball bed) (agent_holds bed) ) )
          (once (on ?b pink_dodgeball) )
          (once (not (not (in_motion agent) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) 6 )
)
(:scoring
  (count agentLeavesDogbedOrNoMoreBalls:dodgeball:golfball)
)
)



(define (game game-id-899) (:domain many-objects-room-v1)
(:setup
  (forall (?l4 - curved_wooden_ramp)
    (exists (?o - block ?p ?h ?c4 ?p ?h ?w ?r1 ?h ?w1 ?c - doggie_bed)
      (game-conserved
        (rug_color_under ?c4 ?w1)
      )
    )
  )
)
(:constraints
  (and
    (preference brownObjectMovedToRoomCenter
      (exists (?h - block)
        (then
          (hold (in ?h ?h) )
          (once (and (< (distance ?h ?h) (distance ?h ?h)) (and (< (distance agent bed) 1) (in ?h ?h) ) ) )
          (once (in ?h ?h) )
        )
      )
    )
    (preference ballThrownToBed
      (exists (?o - (either tall_cylindrical_block dodgeball))
        (then
          (once (in ?o ?o) )
          (hold (on ?o desk) )
          (once-measure (not (between ?o ?o ?o) ) (x_position ?o) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count ballThrownToBed:pink) (count-shortest brownObjectMovedToRoomCenter:alarm_clock) )
  )
)
(:scoring
  (count-once-per-objects ballThrownToBed:hexagonal_bin)
)
)



(define (game game-id-900) (:domain few-objects-room-v1)
(:setup
  (forall (?w2 - building)
    (or
      (game-conserved
        (not
          (not
            (agent_holds ?w2)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockPickedUp
      (exists (?c - ball)
        (then
          (once (adjacent bed ?c) )
          (hold (not (game_over ) ) )
          (hold (< (distance ?c pink) 1) )
        )
      )
    )
  )
)
(:terminal
  (= (+ 18 (count blockPickedUp:hexagonal_bin:dodgeball) 3 )
    (- (count blockPickedUp:yellow) )
  )
)
(:scoring
  (count blockPickedUp:pink)
)
)



(define (game game-id-901) (:domain many-objects-room-v1)
(:setup
  (exists (?d - hexagonal_bin ?h - hexagonal_bin ?b - block ?h - hexagonal_bin ?b - ball)
    (and
      (and
        (game-conserved
          (and
            (not
              (agent_holds ?b)
            )
            (agent_holds ?b)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwFromDoorToBin
      (exists (?l1 - triangular_ramp ?o - (either book wall))
        (then
          (once (or (in_motion ?o) (not (open floor) ) ) )
          (hold (not (in desk ?o) ) )
          (once (and (adjacent_side ?o ?o ?o) (adjacent ?o ?o) (opposite ?o ?o) ) )
        )
      )
    )
    (preference dropAttempt
      (exists (?h - block)
        (then
          (once (on ?h ?h) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= 3 (count dropAttempt:dodgeball) )
  )
)
(:scoring
  (* (count dropAttempt:green) 6 )
)
)



(define (game game-id-902) (:domain medium-objects-room-v1)
(:setup
  (forall (?h - hexagonal_bin ?bl - building ?c2 - game_object)
    (game-conserved
      (on ?c2 ?c2)
    )
  )
)
(:constraints
  (and
    (preference dodgeballsInPlace
      (exists (?h - dodgeball ?l - dodgeball)
        (then
          (once (and (in_motion ?l) (is_setup_object ?l) ) )
          (once (and (< (distance ?l ?l) (distance desk desk)) (is_setup_object ?l) ) )
          (once (or (and (and (and (in ?l ?l) (game_over ) ) (in ?l ?l) ) (on rug ?l) ) (on ?l ?l) ) )
        )
      )
    )
    (preference throwInBin
      (exists (?d - cube_block)
        (then
          (hold (touch ?d agent) )
          (hold-while (< 1 4) (forall (?w - wall ?l4 ?t1 - hexagonal_bin) (and (and (in_motion bridge_block) (in pillow ?d) ) (agent_holds ?l4) ) ) (or (not (object_orientation ?d ?d) ) (adjacent ?d desk) ) (faces ?d ?d) )
          (hold (not (in ?d agent) ) )
        )
      )
    )
    (preference throwToBin
      (exists (?g - dodgeball ?h - (either cube_block floor dodgeball))
        (then
          (once (not (not (adjacent_side ?h ?h agent) ) ) )
          (once (agent_holds door) )
          (once (and (agent_holds ?h) (not (in_motion ?h) ) ) )
        )
      )
    )
  )
)
(:terminal
  (> (* (count-overlapping throwToBin:book) (count-once-per-objects throwInBin:pink_dodgeball) )
    2
  )
)
(:scoring
  (* 3 3 )
)
)



(define (game game-id-903) (:domain many-objects-room-v1)
(:setup
  (forall (?h - pyramid_block)
    (exists (?t2 - dodgeball)
      (exists (?b - drawer)
        (exists (?b - dodgeball)
          (and
            (forall (?l1 - cube_block ?o2 - (either blue_cube_block curved_wooden_ramp))
              (game-optional
                (on ?t2 ?h)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference bookOnDeskShelf
      (exists (?h - ball)
        (at-end
          (opposite ?h ?h)
        )
      )
    )
    (preference throwKnocksOverBear
      (exists (?b - pyramid_block)
        (at-end
          (in_motion ?b)
        )
      )
    )
    (preference throwObjectToBin
      (exists (?d - game_object)
        (at-end
          (agent_holds ?d)
        )
      )
    )
  )
)
(:terminal
  (>= 6 (* 2 9 )
  )
)
(:scoring
  (+ 6 5 (count-once bookOnDeskShelf:red) (external-forall-maximize (count-once throwObjectToBin:cylindrical_block) ) )
)
)



(define (game game-id-904) (:domain many-objects-room-v1)
(:setup
  (exists (?d - dodgeball ?b7 - ball)
    (game-conserved
      (adjacent ?b7 floor)
    )
  )
)
(:constraints
  (and
    (preference ballThrownFromObjectToBin
      (exists (?p1 - building)
        (then
          (once (rug_color_under rug ?p1) )
          (once (not (in_motion door) ) )
        )
      )
    )
  )
)
(:terminal
  (> 300 (count-once-per-objects ballThrownFromObjectToBin:yellow) )
)
(:scoring
  (count ballThrownFromObjectToBin:beachball)
)
)



(define (game game-id-905) (:domain medium-objects-room-v1)
(:setup
  (forall (?h - (either game_object blue_cube_block basketball) ?b - hexagonal_bin ?t2 - (either dodgeball doggie_bed))
    (game-conserved
      (not
        (object_orientation ?t2 ?t2)
      )
    )
  )
)
(:constraints
  (and
    (preference ballKnocksBlockFromRug
      (exists (?p1 - ball)
        (at-end
          (and
            (exists (?c2 - (either basketball key_chain))
              (not
                (on ?p1 ?c2)
              )
            )
            (on agent pink_dodgeball)
          )
        )
      )
    )
    (preference otherObjectsOnDeskShelf
      (exists (?h - block)
        (then
          (once (agent_holds ?h) )
          (once (> (distance ?h ?h) 1) )
          (once (in_motion ?h) )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (total-time) )
)
(:scoring
  (count-same-positions ballKnocksBlockFromRug:yellow)
)
)



(define (game game-id-906) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (exists (?b - (either cellphone))
        (exists (?b1 - teddy_bear ?d - dodgeball)
          (forall (?b - color ?b - game_object ?t - building ?r - shelf)
            (game-conserved
              (adjacent ?d room_center)
            )
          )
        )
      )
      (game-conserved
        (game_start )
      )
      (game-conserved
        (agent_holds rug)
      )
    )
  )
)
(:constraints
  (and
    (preference beachballBouncedOffRamp
      (exists (?b - cube_block ?o1 - curved_wooden_ramp)
        (at-end
          (agent_holds ?o1)
        )
      )
    )
  )
)
(:terminal
  (>= (external-forall-maximize (count-total beachballBouncedOffRamp:red) ) (total-time) )
)
(:scoring
  (count-once-per-objects beachballBouncedOffRamp:hexagonal_bin)
)
)



(define (game game-id-907) (:domain few-objects-room-v1)
(:setup
  (forall (?c5 - (either cellphone dodgeball))
    (or
      (exists (?g - block)
        (forall (?p1 ?b - chair)
          (and
            (and
              (forall (?l - wall)
                (game-optional
                  (adjacent ?b ?b)
                )
              )
              (and
                (and
                  (not
                    (forall (?l2 - pillow)
                      (exists (?h - curved_wooden_ramp ?o - hexagonal_bin)
                        (and
                          (exists (?o - wall ?w1 - curved_wooden_ramp)
                            (exists (?s - hexagonal_bin)
                              (forall (?tb - hexagonal_bin)
                                (and
                                  (game-optional
                                    (same_type ?w1 ?c5)
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
                (forall (?r1 - curved_wooden_ramp)
                  (game-optional
                    (on ?c5 ?b)
                  )
                )
              )
            )
            (and
              (forall (?h ?c - hexagonal_bin)
                (game-conserved
                  (and
                    (agent_holds ?h)
                  )
                )
              )
            )
          )
        )
      )
      (game-conserved
        (and
          (touch ?c5 ?c5)
          (not
            (not
              (and
                (adjacent rug bridge_block)
                (in_motion ?c5)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o4 - game_object ?f - doggie_bed)
      (and
        (preference ballThrowAttempt
          (exists (?b - doggie_bed)
            (then
              (once (adjacent bed ?b) )
              (once (and (in ?f desk) (on ?f ?f) ) )
              (once (and (agent_holds ?b) (in_motion ?f) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= 40 (count ballThrowAttempt:dodgeball) )
  )
)
(:scoring
  (count-once-per-objects ballThrowAttempt:pink)
)
)



(define (game game-id-908) (:domain many-objects-room-v1)
(:setup
  (exists (?ob - block)
    (and
      (game-optional
        (on ?ob bed)
      )
    )
  )
)
(:constraints
  (and
    (forall (?r - hexagonal_bin)
      (and
        (preference smallItemsInPlace
          (exists (?x - pillow)
            (then
              (once (or (touch ?x agent) (agent_holds ?x) ) )
              (once (in_motion ?x) )
              (hold-while (agent_holds desk) (and (on ?x ?x) (and (not (not (< 1 (distance ?r ?x)) ) ) (not (not (adjacent ?r ?r) ) ) ) ) (exists (?b - building) (in ?r ?b) ) )
            )
          )
        )
      )
    )
    (preference objectMoved
      (exists (?c3 - hexagonal_bin)
        (then
          (hold (is_setup_object rug) )
          (once (in_motion ?c3) )
          (hold (not (same_color ?c3 ?c3) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (not
      (<= (* (* (* 2 3 )
            6
          )
          9
        )
        10
      )
    )
  )
)
(:scoring
  (count-once-per-objects smallItemsInPlace:pink:dodgeball)
)
)



(define (game game-id-909) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds desk)
  )
)
(:constraints
  (and
    (forall (?b7 - dodgeball)
      (and
        (preference ballThrownThroughRampAndBlocksToBin
          (exists (?c4 - dodgeball)
            (then
              (once (exists (?c4 - hexagonal_bin) (in_motion ?c4) ) )
              (once (in_motion ?c4) )
              (once (not (agent_holds agent) ) )
            )
          )
        )
        (preference throwAttemptKnocksBlock
          (exists (?o - curved_wooden_ramp)
            (then
              (hold (same_color ?b7 bed) )
              (once (in_motion ?b7) )
              (once (not (same_object ?o ?o) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (>= (total-score) (count-increasing-measure throwAttemptKnocksBlock:side_table) )
      (= (count throwAttemptKnocksBlock:dodgeball:pink) 3 )
      (>= (* 6 6 )
        15
      )
    )
  )
)
(:scoring
  (- (count ballThrownThroughRampAndBlocksToBin:beachball:beachball) )
)
)



(define (game game-id-910) (:domain many-objects-room-v1)
(:setup
  (forall (?b - dodgeball ?b - game_object)
    (and
      (and
        (game-conserved
          (agent_holds south_wall)
        )
        (exists (?r - doggie_bed)
          (game-conserved
            (and
              (and
                (in_motion ?r)
                (agent_holds ?b)
                (in_motion ?r)
              )
              (touch ?b ?b)
              (and
                (exists (?b - hexagonal_bin)
                  (not
                    (and
                      (not
                        (in agent ?r)
                      )
                      (rug_color_under ?b ?b)
                      (agent_holds ?r)
                    )
                  )
                )
                (< (distance desk ?r) (distance ?r ?b))
              )
              (agent_holds floor)
            )
          )
        )
        (not
          (and
            (forall (?l - cube_block)
              (exists (?t2 - hexagonal_bin)
                (and
                  (game-optional
                    (exists (?o - cylindrical_block)
                      (object_orientation ?b ?b)
                    )
                  )
                )
              )
            )
          )
        )
      )
      (and
        (exists (?f - ball)
          (game-conserved
            (in_motion ?b)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference bounceBallToBin
      (exists (?b ?b4 - chair)
        (then
          (once (not (and (on front ?b) (same_object ?b ?b4) ) ) )
          (hold (and (not (= 2 9) ) (in_motion ?b4) (on ?b ?b) ) )
          (once (in_motion ?b4) )
        )
      )
    )
    (preference throwToRampToBin
      (exists (?b - (either pillow laptop golfball))
        (then
          (once (not (in_motion ?b) ) )
          (once (and (not (< (distance ?b ?b) (building_size ?b)) ) (and (not (touch agent ?b) ) (and (and (in_motion ?b) (and (and (on ?b ?b) (game_start ) (or (agent_holds ?b) (and (not (agent_holds ?b) ) (open bed) (agent_holds ?b) (and (agent_holds ?b) (exists (?p1 - hexagonal_bin) (agent_holds ?p1) ) ) ) (same_color ?b ?b) ) (agent_holds ?b) ) (agent_holds ?b) (and (exists (?b10 ?h - wall) (in_motion ?b10) ) (and (in_motion ?b) (< (distance rug agent) (distance bed ?b)) ) ) ) ) (not (in_motion ?b) ) ) (agent_holds ?b) ) ) )
          (once (not (and (in_motion ?b) (and (in_motion ?b) (agent_holds ?b) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (>= 2 (total-score) )
      (or
        (>= 4 (total-time) )
      )
      (>= (total-score) 1 )
    )
  )
)
(:scoring
  (count-overlapping throwToRampToBin:red)
)
)



(define (game game-id-911) (:domain many-objects-room-v1)
(:setup
  (exists (?c - game_object)
    (and
      (forall (?r - doggie_bed ?c2 ?h - curved_wooden_ramp)
        (game-optional
          (and
            (and
              (touch ?h ?c)
              (agent_holds ?h)
            )
            (not
              (agent_holds blue)
            )
            (not
              (and
                (or
                  (on ?c ?c2)
                  (agent_holds ?h)
                )
                (in_motion ?h)
              )
            )
            (exists (?c5 - pyramid_block ?o - cylindrical_block)
              (rug_color_under ?c side_table)
            )
            (in_motion desk)
            (on ?c ?c)
            (not
              (not
                (in desk ?c2)
              )
            )
          )
        )
      )
      (and
        (forall (?c4 - dodgeball)
          (and
            (game-optional
              (adjacent back ?c)
            )
          )
        )
        (forall (?h - (either hexagonal_bin dodgeball blue_cube_block bridge_block) ?h - block)
          (forall (?f - color ?b - building ?l - pillow)
            (and
              (exists (?d1 - hexagonal_bin)
                (exists (?l - hexagonal_bin)
                  (game-conserved
                    (and
                      (and
                        (not
                          (< 2 (distance ?l agent))
                        )
                        (on ?l ?c)
                        (object_orientation agent ?c)
                      )
                      (and
                        (not
                          (not
                            (and
                              (in_motion ?h)
                              (not
                                (not
                                  (adjacent ?c agent)
                                )
                              )
                            )
                          )
                        )
                        (agent_holds ?l)
                      )
                    )
                  )
                )
              )
              (forall (?l2 - red_dodgeball)
                (forall (?c1 - game_object)
                  (forall (?o - shelf)
                    (forall (?o5 - ball)
                      (and
                        (forall (?b - golfball ?c1 - tall_cylindrical_block)
                          (and
                            (exists (?d - dodgeball)
                              (exists (?x - teddy_bear)
                                (game-conserved
                                  (agent_holds ?c1)
                                )
                              )
                            )
                            (game-optional
                              (and
                                (forall (?p - color ?d - (either wall bridge_block))
                                  (not
                                    (and
                                      (adjacent ?c1 ?c)
                                      (agent_holds ?l2)
                                    )
                                  )
                                )
                                (= 1 0)
                              )
                            )
                            (game-optional
                              (not
                                (< (distance_side ?l2 ?l2 desk ?o5) 5)
                              )
                            )
                          )
                        )
                        (forall (?c2 - (either ball cd))
                          (game-conserved
                            (same_type ?c ?o5)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
        (and
          (exists (?l - (either book pyramid_block basketball))
            (and
              (game-optional
                (in_motion ?c)
              )
              (exists (?b - ball ?l1 - curved_wooden_ramp)
                (game-conserved
                  (on pillow ?c)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockKnockedFromBuildingInBin
      (exists (?c1 ?o3 - dodgeball)
        (then
          (once (in_motion bed) )
          (hold (not (agent_holds top_shelf) ) )
          (once (on ?c1 ?c1) )
        )
      )
    )
    (preference ballThrownFromDoor
      (exists (?l3 - cylindrical_block)
        (then
          (hold-while (agent_holds ?l3) (on ?l3 ?l3) )
          (hold (in_motion ?l3) )
          (once (< 1 (distance ?l3 ?l3)) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects blockKnockedFromBuildingInBin:dodgeball) (- (count blockKnockedFromBuildingInBin:pink_dodgeball) )
  )
)
(:scoring
  (count blockKnockedFromBuildingInBin:basketball:book)
)
)



(define (game game-id-912) (:domain few-objects-room-v1)
(:setup
  (exists (?ob - (either cd yellow_cube_block))
    (and
      (and
        (game-conserved
          (agent_holds ?ob)
        )
        (game-conserved
          (agent_holds ?ob)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownHitsAgent
      (exists (?s - color)
        (then
          (once (adjacent ?s ?s) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 3 )
)
(:scoring
  (count-shortest ballThrownHitsAgent:blue_cube_block)
)
)



(define (game game-id-913) (:domain medium-objects-room-v1)
(:setup
  (forall (?c - desk_shelf ?l - wall)
    (game-conserved
      (in_motion ?l)
    )
  )
)
(:constraints
  (and
    (preference golfballInBinFromPillow
      (exists (?b5 - (either doggie_bed dodgeball book))
        (at-end
          (on ?b5 ?b5)
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (or
        (>= (= 300 (* (count-same-positions golfballInBinFromPillow:dodgeball) 7 )
          )
          (total-time)
        )
        (> 30 (count-unique-positions golfballInBinFromPillow:block:orange) )
      )
    )
    (or
      (>= 2 (* 15 (count-once-per-objects golfballInBinFromPillow:dodgeball) )
      )
      (<= (total-score) 5 )
      (>= (total-score) (* (count golfballInBinFromPillow:red) 8 )
      )
    )
    (>= (count golfballInBinFromPillow:orange) (external-forall-minimize (count-once-per-objects golfballInBinFromPillow:yellow_pyramid_block) ) )
  )
)
(:scoring
  (count golfballInBinFromPillow:book:yellow)
)
)



(define (game game-id-914) (:domain few-objects-room-v1)
(:setup
  (forall (?d - beachball ?c - cube_block)
    (game-conserved
      (agent_holds ?c)
    )
  )
)
(:constraints
  (and
    (preference teddyBearHitsBall
      (exists (?h - ball)
        (then
          (once-measure (in_motion bed) (distance ?h ?h) )
          (once (not (not (adjacent ?h room_center) ) ) )
          (once (and (forall (?c2 - teddy_bear ?p - building) (in_motion ?h) ) (adjacent ?h ?h) ) )
        )
      )
    )
    (forall (?l2 - hexagonal_bin ?h - curved_wooden_ramp)
      (and
        (preference blockCorrectlyPicked
          (exists (?b - block)
            (then
              (hold (and (in_motion ?b) (and (and (and (on ?h ?b) (not (agent_holds green_golfball) ) (agent_holds ?b) (not (not (and (not (not (not (not (not (and (adjacent_side desk agent ?b) (on ?b ?h) ) ) ) ) ) ) (agent_holds ?h) ) ) ) ) (in_motion ?b) ) (in_motion green) (on ?h side_table) ) ) )
              (once (in_motion ?b) )
              (once (and (in_motion ?h) (not (game_over ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (count blockCorrectlyPicked:beachball) )
)
(:scoring
  (count teddyBearHitsBall:book:basketball)
)
)



(define (game game-id-915) (:domain few-objects-room-v1)
(:setup
  (exists (?g - dodgeball ?g - game_object)
    (game-conserved
      (on ?g bed)
    )
  )
)
(:constraints
  (and
    (preference ballKnocksBlockFromRug
      (exists (?c5 - curved_wooden_ramp ?w - game_object)
        (then
          (once (not (not (not (and (on bed ?w) (not (same_type room_center ?w) ) ) ) ) ) )
          (hold (in_motion ?w) )
          (once (not (on sideways door) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (count-once-per-objects ballKnocksBlockFromRug:red) 7 )
  )
)
(:scoring
  (external-forall-maximize
    (* (* 4 6 )
      (* (- (* 100 10 )
        )
        3
      )
    )
  )
)
)



(define (game game-id-916) (:domain many-objects-room-v1)
(:setup
  (exists (?l4 - hexagonal_bin)
    (exists (?w - shelf)
      (game-conserved
        (agent_holds front)
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballHitsBinBottom
      (exists (?b2 - wall)
        (then
          (hold-while (and (and (agent_holds ?b2) (or (not (in_motion ?b2) ) (touch ?b2 ?b2) ) (adjacent ?b2 pink_dodgeball) ) (> 1 1) (on ?b2 ?b2) ) (< (distance ?b2 bottom_shelf) 3) )
          (hold (in_motion ?b2) )
          (hold-while (agent_holds ?b2) (and (in_motion ?b2) (agent_holds ?b2) ) )
        )
      )
    )
    (preference objectThrownFromRug
      (exists (?b1 - dodgeball)
        (then
          (once (agent_holds ?b1) )
          (once (in_motion ?b1) )
          (once (and (not (= 5 3) ) (on ?b1 rug) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (= (count dodgeballHitsBinBottom:yellow_pyramid_block:hexagonal_bin) (count objectThrownFromRug:basketball:yellow) )
      (<= 5 (count-once-per-objects objectThrownFromRug:green:basketball) )
    )
    (>= (total-time) (* (count dodgeballHitsBinBottom:wall) (count dodgeballHitsBinBottom:hexagonal_bin) (count-once-per-objects objectThrownFromRug:dodgeball) 6 (count dodgeballHitsBinBottom:orange) 7 (count dodgeballHitsBinBottom:hexagonal_bin) (count-once-per-objects dodgeballHitsBinBottom:blue_dodgeball) (* (* (count-overlapping dodgeballHitsBinBottom:yellow) 10 (* (count-unique-positions objectThrownFromRug:pink_dodgeball) 2 )
          )
          60
        )
        (* (count-once objectThrownFromRug:dodgeball) (count objectThrownFromRug:yellow) )
        (count dodgeballHitsBinBottom:rug:blue_dodgeball)
        (* (count objectThrownFromRug:book) (* 10 5 )
        )
      )
    )
    (> 5 2 )
  )
)
(:scoring
  (* 3 (* 10 3 (count dodgeballHitsBinBottom:dodgeball) )
  )
)
)



(define (game game-id-917) (:domain medium-objects-room-v1)
(:setup
  (forall (?o4 - dodgeball)
    (game-optional
      (not
        (not
          (in rug ?o4)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToChair
      (exists (?b - (either doggie_bed doggie_bed cd) ?h - block)
        (then
          (once (not (not (same_type ?h ?h) ) ) )
          (once (is_setup_object ?h) )
          (once (and (in_motion ?h) (not (in_motion ?h) ) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (+ (count-once-per-objects ballThrownToChair:dodgeball) 5 )
      (>= (* 3 (* (count-once ballThrownToChair:dodgeball) (count ballThrownToChair:triangle_block:dodgeball) )
        )
        (- 10 )
      )
    )
    (>= (+ 2 2 (* (count ballThrownToChair:hexagonal_bin) (* 6 (count ballThrownToChair:dodgeball) )
        )
        3
        (+ 1 (count ballThrownToChair:cube_block) )
        (count-once-per-objects ballThrownToChair:red:yellow:dodgeball)
      )
      (* 3 7 )
    )
    (> (total-score) (count ballThrownToChair:beachball) )
  )
)
(:scoring
  (* (count-once-per-objects ballThrownToChair:green) (count ballThrownToChair:basketball) )
)
)



(define (game game-id-918) (:domain medium-objects-room-v1)
(:setup
  (exists (?s - curved_wooden_ramp ?b5 - (either cube_block pink))
    (forall (?o - hexagonal_bin ?h - hexagonal_bin ?b2 - flat_block)
      (game-optional
        (opposite rug ?b2)
      )
    )
  )
)
(:constraints
  (and
    (preference failedThrowToBin
      (exists (?c6 - hexagonal_bin ?w - dodgeball)
        (at-end
          (not
            (not
              (and
                (in_motion ?w)
                (not
                  (and
                    (adjacent_side ?w pink_dodgeball ?w)
                    (same_object bridge_block agent)
                    (or
                      (agent_holds ?w)
                      (same_color ?w ?w)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
    (forall (?o2 - building)
      (and
        (preference cubeThrownToBin
          (exists (?b ?o2 - dodgeball)
            (then
              (hold (agent_holds ?b) )
              (hold (and (and (touch ?b ?b) (in_motion ?o2) ) (agent_holds ?b) ) )
              (once (not (exists (?s - triangular_ramp ?c2 - building) (and (not (not (not (not (and (in_motion ?c2) (and (not (< (distance ?b rug) (x_position ?o2)) ) (< 1 (distance ?o2 ?c2)) (adjacent bed ?c2) (and (not (not (in_motion ?c2) ) ) (broken ?b) ) ) (agent_holds ?b) (in ?c2 ?c2) ) ) ) ) ) (agent_holds ?o2) (exists (?h - (either book bridge_block) ?h - flat_block) (on ?b ?h) ) (in ?b pillow) ) ) ) )
            )
          )
        )
        (preference ballThrownToBed
          (exists (?c - dodgeball)
            (at-end
              (and
                (not
                  (and
                    (< (distance ?c ?c) (distance desk ?o2))
                    (and
                      (touch ?c ?c)
                      (in_motion ?c)
                    )
                  )
                )
                (and
                  (equal_z_position ?c ?o2)
                  (and
                    (same_color desk desk)
                    (adjacent ?o2 ?o2)
                  )
                  (not
                    (and
                      (touch ?c ?o2)
                      (not
                        (in_motion ?o2)
                      )
                    )
                  )
                  (faces ?c desk)
                  (and
                    (in_motion ?o2)
                    (not
                      (in_motion ?o2)
                    )
                  )
                  (exists (?c - chair)
                    (and
                      (not
                        (and
                          (and
                            (and
                              (and
                                (and
                                  (and
                                    (in_motion ?c)
                                    (not
                                      (in_motion ?o2)
                                    )
                                  )
                                  (not
                                    (or
                                      (adjacent ?o2 ?c)
                                    )
                                  )
                                )
                                (and
                                  (< 10 1)
                                  (agent_holds ?o2)
                                  (and
                                    (agent_holds ?c)
                                    (adjacent ?o2 ?o2)
                                  )
                                )
                              )
                              (not
                                (or
                                  (in_motion ?c)
                                  (and
                                    (and
                                      (agent_holds ?o2)
                                      (adjacent door ?c)
                                    )
                                    (in_motion ?o2)
                                  )
                                )
                              )
                            )
                            (in_motion ?o2)
                          )
                          (not
                            (exists (?t1 - pyramid_block)
                              (and
                                (not
                                  (in_motion ?t1)
                                )
                                (and
                                  (in_motion ?o2)
                                  (not
                                    (not
                                      (not
                                        (and
                                          (not
                                            (in_motion ?t1)
                                          )
                                          (not
                                            (not
                                              (faces agent agent)
                                            )
                                          )
                                          (in_motion ?o2)
                                          (in ?c ?t1)
                                        )
                                      )
                                    )
                                  )
                                )
                                (agent_holds ?c)
                                (and
                                  (agent_holds ?o2)
                                  (agent_holds tan)
                                  (not
                                    (and
                                      (in_motion pink_dodgeball)
                                      (not
                                        (agent_holds block)
                                      )
                                      (exists (?r2 - tall_cylindrical_block)
                                        (not
                                          (and
                                            (and
                                              (not
                                                (agent_holds rug)
                                              )
                                              (forall (?o2 - ball)
                                                (and
                                                  (agent_holds ?o2)
                                                  (agent_holds back)
                                                )
                                              )
                                            )
                                            (< (distance ?o2 ?r2) (distance ?c ?t1))
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                                (agent_holds ?c)
                                (not
                                  (agent_holds ?o2)
                                )
                              )
                            )
                          )
                          (< 1 (distance ?c pink_dodgeball))
                          (= (distance bed ?c) (distance ?o2 ?c))
                        )
                      )
                      (not
                        (agent_holds agent)
                      )
                    )
                  )
                )
                (in ?o2 ?o2)
              )
            )
          )
        )
      )
    )
    (preference objectWithMatchingColor
      (exists (?h - ball)
        (then
          (once (not (game_start ) ) )
          (hold (agent_holds ?h) )
          (hold (or (in_motion ?h) (and (agent_holds pink) (agent_holds ?h) ) ) )
        )
      )
    )
  )
)
(:terminal
  (> (total-score) 3 )
)
(:scoring
  (* (* (count ballThrownToBed:green) (count objectWithMatchingColor:yellow_pyramid_block) )
    3
  )
)
)



(define (game game-id-919) (:domain medium-objects-room-v1)
(:setup
  (exists (?o2 - block)
    (game-conserved
      (and
        (in ?o2 ?o2)
        (in_motion ?o2)
      )
    )
  )
)
(:constraints
  (and
    (preference otherObjectsOnDeskShelf
      (exists (?b - hexagonal_bin)
        (then
          (hold (in_motion ?b) )
          (once (adjacent ?b ?b) )
          (hold (in ?b ?b) )
        )
      )
    )
    (forall (?c - block)
      (and
        (preference objectOnBed
          (exists (?c4 - hexagonal_bin)
            (then
              (once (not (and (not (touch ?c ?c) ) (in_motion ?c) ) ) )
              (once (agent_holds ?c) )
              (hold-while (in_motion ?c4) (not (and (not (and (in floor ?c4) (adjacent_side ?c ?c4 ?c4) ) ) (= (x_position ?c4)) (in_motion ?c4) ) ) )
            )
          )
        )
        (preference throwTeddyOntoPillow
          (at-end
            (exists (?b1 - dodgeball)
              (not
                (on ?b1 ?b1)
              )
            )
          )
        )
        (preference throwFromBehindChairsInBin
          (exists (?d - wall)
            (at-end
              (and
                (in_motion ?c)
                (and
                  (adjacent_side bed ?d ?c ?c)
                  (not
                    (opposite rug ?c)
                  )
                )
                (in_motion ?d)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< 7 (< (- (count throwFromBehindChairsInBin:dodgeball) )
      (count throwFromBehindChairsInBin:pink)
    )
  )
)
(:scoring
  (count throwTeddyOntoPillow:beachball:basketball)
)
)



(define (game game-id-920) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (and
      (in_motion door)
      (not
        (exists (?h - ball)
          (on ?h rug)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference otherObjectsOnDeskShelf
      (exists (?b - hexagonal_bin)
        (then
          (once (equal_z_position ?b ?b) )
          (once (and (and (agent_holds ?b) (exists (?p - (either block)) (in_motion ?p) ) ) (agent_holds upright) ) )
        )
      )
    )
    (preference itemInClosedDrawerAtEnd
      (exists (?b7 - watch)
        (then
          (hold-while (adjacent ?b7 south_west_corner) (on ?b7 agent) )
          (hold-while (and (touch ?b7 ?b7) (and (not (exists (?h - chair) (not (not (touch ?h ?b7) ) ) ) ) (not (not (not (not (on agent ?b7) ) ) ) ) ) ) (in_motion ?b7) )
          (hold (is_setup_object ?b7) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 2 (count itemInClosedDrawerAtEnd) )
    10
  )
)
(:scoring
  (+ (count-once-per-objects itemInClosedDrawerAtEnd:yellow:hexagonal_bin) 2 )
)
)



(define (game game-id-921) (:domain few-objects-room-v1)
(:setup
  (forall (?db - block ?h - game_object)
    (and
      (exists (?h - dodgeball)
        (game-conserved
          (in_motion ?h)
        )
      )
      (game-optional
        (on ?h ?h)
      )
      (forall (?w - triangular_ramp ?g - chair)
        (and
          (and
            (game-optional
              (in_motion ?g)
            )
          )
          (game-conserved
            (and
              (not
                (not
                  (agent_holds ?h)
                )
              )
              (agent_holds ?g)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference woodenBlockMovedFromRugToDesk
      (exists (?b - dodgeball)
        (then
          (once (in_motion ?b) )
          (once (on upright ?b) )
          (hold (in_motion ?b) )
        )
      )
    )
    (forall (?d - cube_block)
      (and
        (preference castleBuilt
          (exists (?b - (either cylindrical_block wall cylindrical_block))
            (then
              (hold (adjacent drawer ?b) )
              (hold (not (in_motion ?d) ) )
            )
          )
        )
      )
    )
    (preference baseBlockInTowerAtEnd
      (exists (?w2 - cube_block)
        (then
          (once (on ?w2 ?w2) )
          (hold (exists (?o - tall_cylindrical_block ?r1 - curved_wooden_ramp ?c2 - curved_wooden_ramp) (in_motion ?c2) ) )
          (hold (same_object ?w2 ?w2) )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (+ (count-once-per-external-objects baseBlockInTowerAtEnd:dodgeball) (count baseBlockInTowerAtEnd:hexagonal_bin) )
      (total-time)
    )
  )
)
(:scoring
  (count woodenBlockMovedFromRugToDesk:dodgeball)
)
)



(define (game game-id-922) (:domain few-objects-room-v1)
(:setup
  (exists (?o ?t - hexagonal_bin)
    (and
      (and
        (forall (?x - ball)
          (and
            (exists (?l2 ?b5 - dodgeball)
              (and
                (game-conserved
                  (not
                    (not
                      (and
                        (and
                          (agent_holds ?o)
                          (adjacent ?x ?l2)
                        )
                        (not
                          (on ?l2 ?b5)
                        )
                        (in ?o floor)
                        (and
                          (and
                            (on ?l2 ?b5)
                            (agent_holds ?l2)
                          )
                          (and
                            (not
                              (not
                                (agent_holds bed)
                              )
                            )
                            (= (building_size ?l2) (distance ?l2 ?l2))
                          )
                        )
                      )
                    )
                  )
                )
                (exists (?h - game_object ?p ?o - pillow)
                  (game-conserved
                    (in_motion ?p)
                  )
                )
              )
            )
          )
        )
        (game-conserved
          (and
            (on ?o ?o)
            (in_motion ?o)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballHitsPillowWithoutTouchingBlock
      (exists (?s - ball ?r - block)
        (then
          (once (and (and (in_motion ?r) (agent_holds bed) ) (exists (?d - chair) (and (on ?d ?r) (not (agent_holds ?r) ) ) ) ) )
          (once (and (on agent agent) (on door bed) ) )
          (hold (not (on ?r agent) ) )
          (once (< (distance ?r ?r) 4) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-once-per-objects dodgeballHitsPillowWithoutTouchingBlock:pink:basketball) (count-overlapping dodgeballHitsPillowWithoutTouchingBlock:basketball) )
    (< (count-once-per-objects dodgeballHitsPillowWithoutTouchingBlock:dodgeball) (total-score) )
    (>= 5 (count dodgeballHitsPillowWithoutTouchingBlock:triangle_block:pink_dodgeball) )
  )
)
(:scoring
  (count dodgeballHitsPillowWithoutTouchingBlock:dodgeball)
)
)



(define (game game-id-923) (:domain few-objects-room-v1)
(:setup
  (exists (?h - cube_block ?s - hexagonal_bin)
    (exists (?p - (either alarm_clock cube_block))
      (game-conserved
        (and
          (in ?s agent)
          (exists (?s - hexagonal_bin)
            (not
              (not
                (exists (?o - ball)
                  (<= (distance rug room_center) (distance ?p desk))
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c1 - building ?c2 - wall)
      (and
        (preference failedThrowAttempt
          (exists (?d - hexagonal_bin)
            (then
              (hold (and (agent_holds ?d) (agent_holds ?d) ) )
              (once (exists (?b2 - block ?b5 ?s - ball ?c - hexagonal_bin) (in_motion ?c) ) )
              (hold-while (agent_holds ?c2) (in_motion ?d) (on ?d ?d) )
            )
          )
        )
        (preference pillowMovedToRoomCenter
          (exists (?f - dodgeball)
            (then
              (hold-while (not (exists (?o - doggie_bed) (not (on south_wall ?c2) ) ) ) (agent_holds ?c2) )
            )
          )
        )
        (preference objectLandsInBin
          (exists (?l4 - doggie_bed)
            (at-end
              (in desk ?l4)
            )
          )
        )
        (preference teddyBearLandsInBin
          (then
            (once (agent_holds ?c2) )
            (once (forall (?p - game_object) (agent_holds desk) ) )
            (hold (opposite desk ?c2) )
          )
        )
      )
    )
    (preference golfballUnderBridgeWithoutTouchingBlock
      (exists (?b8 - cube_block ?w - desktop)
        (then
          (hold-while (not (on ?w ?w) ) (above ?w ?w) )
          (once (agent_holds ?w) )
          (once (adjacent ?w ?w) )
        )
      )
    )
  )
)
(:terminal
  (<= 3 (count golfballUnderBridgeWithoutTouchingBlock:pink_dodgeball) )
)
(:scoring
  (* (* 1 (+ (count pillowMovedToRoomCenter:pink) (* (* (= (count-once-per-objects pillowMovedToRoomCenter:pink:dodgeball) (* 15 (* 5 (count-once-per-objects pillowMovedToRoomCenter:brown) )
              )
            )
            (count golfballUnderBridgeWithoutTouchingBlock:golfball)
          )
          (count-once-per-objects teddyBearLandsInBin:yellow)
        )
      )
    )
    (* (count-once-per-objects pillowMovedToRoomCenter:red:dodgeball) 100 )
  )
)
)



(define (game game-id-924) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?b4 - pillow ?o1 - ball)
      (exists (?c2 - dodgeball ?t - (either beachball book tall_cylindrical_block))
        (exists (?b - beachball)
          (and
            (game-optional
              (agent_holds ?t)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwInBin
      (exists (?w - (either cylindrical_block flat_block hexagonal_bin))
        (then
          (hold (and (not (in_motion ?w) ) (agent_holds ?w) (agent_holds ?w) ) )
          (once (agent_holds bed) )
          (once (agent_holds ?w) )
        )
      )
    )
  )
)
(:terminal
  (> (* (+ (count throwInBin:hexagonal_bin) (count-longest throwInBin:beachball) )
      2
    )
    100
  )
)
(:scoring
  (+ (* 1 10 )
    4
  )
)
)



(define (game game-id-925) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?c3 - doggie_bed ?h - beachball)
      (exists (?h ?tb - cube_block ?t - hexagonal_bin)
        (and
          (and
            (exists (?h ?h - (either pink triangular_ramp doggie_bed bridge_block dodgeball mug lamp) ?c5 - hexagonal_bin)
              (game-conserved
                (in_motion desk)
              )
            )
            (or
              (not
                (and
                  (and
                    (and
                      (and
                        (exists (?r - golfball)
                          (game-conserved
                            (equal_x_position bed ?t)
                          )
                        )
                      )
                      (exists (?b9 - block)
                        (game-optional
                          (not
                            (broken ?t)
                          )
                        )
                      )
                      (game-conserved
                        (game_start )
                      )
                    )
                    (forall (?p - beachball ?l - game_object)
                      (and
                        (not
                          (and
                            (game-conserved
                              (in_motion agent)
                            )
                          )
                        )
                      )
                    )
                    (and
                      (exists (?r - (either pink laptop laptop wall) ?d - doggie_bed)
                        (exists (?r - color)
                          (exists (?b4 - shelf)
                            (game-optional
                              (on ?r front)
                            )
                          )
                        )
                      )
                    )
                  )
                  (game-optional
                    (on bed ?t)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - block)
      (and
        (preference throwBallToDoggieBedOffWall
          (exists (?h - cube_block)
            (at-end
              (and
                (in_motion ?h)
                (opposite ?b ?b)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 4 (count-once-per-objects throwBallToDoggieBedOffWall:pink) )
)
(:scoring
  (+ 1 (count throwBallToDoggieBedOffWall:green:cube_block) )
)
)



(define (game game-id-926) (:domain many-objects-room-v1)
(:setup
  (exists (?bl - curved_wooden_ramp ?l1 - dodgeball)
    (game-conserved
      (above desk ?l1)
    )
  )
)
(:constraints
  (and
    (preference dodgeballAndBasketballInBin
      (exists (?c6 - hexagonal_bin)
        (then
          (hold-while (in ?c6 ?c6) (agent_holds ?c6) (in_motion ?c6) )
          (once (agent_holds ?c6) )
          (once (not (< (distance ?c6 ?c6) 1) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 4 (count dodgeballAndBasketballInBin:dodgeball:book) )
)
(:scoring
  (count-once-per-objects dodgeballAndBasketballInBin:basketball)
)
)



(define (game game-id-927) (:domain many-objects-room-v1)
(:setup
  (exists (?b8 - dodgeball)
    (forall (?h - hexagonal_bin)
      (forall (?db - hexagonal_bin)
        (and
          (exists (?o ?c - chair)
            (forall (?o - hexagonal_bin ?b5 - hexagonal_bin ?l1 - (either desktop teddy_bear cylindrical_block blue_cube_block hexagonal_bin blue_cube_block ball))
              (exists (?c - dodgeball)
                (forall (?o2 - hexagonal_bin)
                  (exists (?b - dodgeball ?h - hexagonal_bin)
                    (not
                      (and
                        (game-optional
                          (not
                            (agent_holds ?l1)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - golfball)
      (and
        (preference objectThrownFromRug
          (exists (?o - hexagonal_bin)
            (then
              (hold-while (not (not (in_motion agent) ) ) (in_motion ?b) (in_motion ?b) )
              (hold-while (agent_holds ?b) (= (distance agent ?b) 3) (same_type bed bed) )
              (hold (not (and (agent_holds ?o) (in ?o top_shelf) ) ) )
            )
          )
        )
      )
    )
    (forall (?b3 - hexagonal_bin ?d1 - cube_block)
      (and
        (preference throwBallToDoggieBedOffWall
          (exists (?c2 - hexagonal_bin)
            (then
              (once (< 1 1) )
              (once (in_motion rug) )
              (once (between ?c2 blue desktop) )
              (once (on ?c2 ?d1) )
            )
          )
        )
      )
    )
    (preference dodgeballsInPlace
      (exists (?o - book)
        (then
          (once (and (in ?o bed) (and (in_motion ?o) (agent_holds ?o) ) ) )
          (once (and (and (on ?o south_wall) (on ?o agent) ) (not (and (agent_holds ?o) (agent_holds pink) ) ) ) )
          (once (in_motion ?o) )
        )
      )
    )
    (preference blockOnBlockInTowerAtEnd
      (exists (?l - teddy_bear)
        (at-end
          (not
            (not
              (in ?l bed)
            )
          )
        )
      )
    )
    (preference smallItemsInPlace
      (exists (?c4 - dodgeball)
        (then
          (hold (agent_holds green_golfball) )
          (hold-while (in_motion ?c4) (on ?c4 ?c4) )
          (hold (and (and (and (and (and (in_motion ?c4) (and (adjacent ?c4 agent) (and (adjacent ?c4 ?c4) (and (and (not (touch ?c4 ?c4) ) (not (in ?c4 room_center) ) ) (and (not (between ?c4 ?c4 ?c4) ) (not (not (and (on ?c4 ?c4) (in ?c4 ?c4) ) ) ) (not (in bed floor) ) ) ) ) ) (and (touch ?c4 ?c4) (and (not (touch ?c4 ?c4) ) (= 1 (distance ?c4 ?c4)) ) ) (in_motion ?c4) ) (and (on ?c4 ?c4) (in_motion ?c4) ) ) (in ?c4 ?c4) (agent_holds ?c4) (on ?c4 ?c4) ) (in ?c4 ?c4) ) (not (and (in_motion ?c4) (equal_z_position ?c4 ?c4) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 0 (+ 1 4 )
  )
)
(:scoring
  (count-once-per-objects objectThrownFromRug)
)
)



(define (game game-id-928) (:domain few-objects-room-v1)
(:setup
  (forall (?b - dodgeball)
    (forall (?b4 - (either cylindrical_block golfball) ?s - ball)
      (forall (?p1 - hexagonal_bin)
        (and
          (game-optional
            (not
              (game_start )
            )
          )
          (game-conserved
            (on ?s ?b)
          )
          (exists (?b - dodgeball)
            (exists (?w2 - (either lamp dodgeball cellphone))
              (exists (?l1 - block ?h - chair)
                (exists (?b4 - hexagonal_bin)
                  (game-conserved
                    (same_type ?b4 ?h)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference thrownObjectHitsComputer
      (exists (?c - ball)
        (at-end
          (not
            (not
              (in_motion ?c)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (count-total thrownObjectHitsComputer:purple) (count-measure thrownObjectHitsComputer:dodgeball:alarm_clock) )
  )
)
(:scoring
  (* (count-once thrownObjectHitsComputer:beachball) (count-once-per-objects thrownObjectHitsComputer:doggie_bed) )
)
)



(define (game game-id-929) (:domain few-objects-room-v1)
(:setup
  (forall (?c - hexagonal_bin)
    (exists (?c - dodgeball ?h - hexagonal_bin)
      (forall (?c ?h ?b6 ?b ?b2 ?b - hexagonal_bin ?h - wall)
        (and
          (exists (?g ?b6 ?c ?o - block ?c2 - hexagonal_bin)
            (exists (?d - hexagonal_bin)
              (game-optional
                (not
                  (and
                    (< (distance_side ?h agent ?c2) (building_size ?c2))
                    (touch ?c2 agent)
                  )
                )
              )
            )
          )
          (exists (?r - hexagonal_bin)
            (forall (?o4 - (either cylindrical_block floor) ?o - curved_wooden_ramp)
              (forall (?s - game_object)
                (game-optional
                  (not
                    (faces ?r ?o)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?p ?b1 - hexagonal_bin)
      (and
        (preference throwAttempt
          (then
            (once (not (agent_holds ?b1) ) )
            (once (and (in ?b1 desk) (in ?b1 ?p) ) )
            (hold (exists (?w1 - (either cube_block) ?b1 - golfball ?o5 ?d - dodgeball) (agent_holds ?p) ) )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (and
      (> 1 (total-score) )
      (>= (count throwAttempt:blue_cube_block) (total-score) )
    )
    (>= 10 (count-once-per-objects throwAttempt) )
    (and
      (not
        (>= (* (* 3 (count throwAttempt:green) )
            (* (count-same-positions throwAttempt:pink_dodgeball) )
          )
          5
        )
      )
      (> (- 4 )
        3
      )
      (>= (count-once-per-objects throwAttempt:green) 6 )
    )
  )
)
(:scoring
  (* 5 3 )
)
)



(define (game game-id-930) (:domain many-objects-room-v1)
(:setup
  (forall (?b3 - chair ?w1 - dodgeball ?b - (either alarm_clock golfball))
    (game-optional
      (agent_holds ?b)
    )
  )
)
(:constraints
  (and
    (preference teddyBearHitsBall
      (exists (?t1 - dodgeball ?c4 - dodgeball)
        (then
          (once (agent_holds ?c4) )
          (once (and (and (in ?c4 ?c4) (adjacent ?c4 ?c4) ) ) )
          (once (agent_holds desktop) )
        )
      )
    )
    (forall (?b - golfball)
      (and
        (preference agentLeavesDogbedOrNoMoreBalls
          (exists (?h - shelf ?l - teddy_bear)
            (at-end
              (adjacent desk ?l)
            )
          )
        )
        (preference itemsHidingScreens
          (exists (?d - game_object ?h - (either book top_drawer desktop))
            (at-end
              (and
                (and
                  (opposite ?h ?h)
                  (< 3 (distance south_west_corner ?h))
                )
                (not
                  (< 0.5 1)
                )
              )
            )
          )
        )
        (preference blocksInPlace
          (then
            (once (and (not (in_motion ?b) ) (<= 4 (distance ?b ?b)) (agent_holds agent) ) )
            (hold (not (in_motion ?b) ) )
            (once (in_motion ?b) )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 0 2 )
)
(:scoring
  (count-once-per-objects blocksInPlace:pink)
)
)



(define (game game-id-931) (:domain many-objects-room-v1)
(:setup
  (exists (?c - hexagonal_bin)
    (exists (?b ?h ?t - dodgeball)
      (game-conserved
        (and
          (above ?c left)
          (not
            (and
              (and
                (and
                  (in_motion ?b)
                  (and
                    (not
                      (in_motion ?b)
                    )
                    (exists (?c2 - dodgeball ?h - yellow_cube_block)
                      (exists (?b - (either blue_cube_block golfball))
                        (in_motion ?c)
                      )
                    )
                  )
                  (= (distance ?c ?t) (distance ?h agent))
                )
                (is_setup_object ?h)
                (not
                  (exists (?db - hexagonal_bin ?h - dodgeball ?d - game_object)
                    (not
                      (agent_holds ?h)
                    )
                  )
                )
              )
              (touch ?t ?t)
              (in_motion top_drawer)
              (in_motion ?c)
            )
          )
          (on agent ?b)
          (and
            (and
              (in_motion ?c)
              (agent_holds ?b)
            )
            (and
              (agent_holds ?h)
              (between rug ?b ?b)
              (in_motion ?t)
              (agent_holds ?b)
              (and
                (and
                  (or
                    (< (x_position desk) 2)
                  )
                  (not
                    (not
                      (on ?h agent)
                    )
                  )
                )
                (and
                  (and
                    (and
                      (in_motion ?c)
                      (not
                        (in ?c room_center)
                      )
                      (in_motion bed)
                    )
                    (exists (?b9 - (either flat_block bridge_block))
                      (in_motion ?h)
                    )
                    (agent_holds agent)
                    (not
                      (in ?t bed)
                    )
                    (agent_holds ?h)
                    (and
                      (touch ?b ?h)
                      (and
                        (and
                          (in_motion ?b)
                          (touch ?h agent)
                        )
                        (not
                          (not
                            (not
                              (not
                                (and
                                  (same_color rug ?t)
                                  (on ?b ?c)
                                )
                              )
                            )
                          )
                        )
                      )
                      (same_color ?t ?t)
                    )
                    (object_orientation ?h ?c)
                    (not
                      (in_motion ?c)
                    )
                    (on bridge_block ?t)
                    (and
                      (in ?c rug)
                      (same_type ?b agent)
                    )
                  )
                  (same_color ?b agent)
                  (< (distance ?b bed) (distance ?c ?h))
                  (on ?c ?c)
                  (is_setup_object floor)
                  (in ?t ?b)
                  (and
                    (<= (distance pink_dodgeball ?c) (distance ?t desk))
                    (= (distance ?b side_table) 1)
                    (and
                      (rug_color_under ?h top_drawer)
                      (exists (?h - ball)
                        (in_motion ?t)
                      )
                    )
                  )
                  (agent_holds ?h)
                  (on ?h ?t)
                  (on ?b agent)
                )
              )
              (= 7 (distance ?t ?b))
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference redDodgeballThrownToBinWithoutTouchingFloor
      (exists (?ob - ball ?h - triangular_ramp ?l - (either triangular_ramp triangle_block) ?w2 - hexagonal_bin)
        (then
          (once (in_motion ?w2) )
          (once (forall (?l4 - block) (agent_holds agent) ) )
          (once (adjacent ?w2 desk) )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (total-score) )
)
(:scoring
  (* (count-once-per-objects redDodgeballThrownToBinWithoutTouchingFloor:pyramid_block:pink_dodgeball) 50 )
)
)



(define (game game-id-932) (:domain many-objects-room-v1)
(:setup
  (exists (?db - hexagonal_bin)
    (forall (?b - triangular_ramp ?c1 - (either block pyramid_block))
      (game-conserved
        (not
          (in_motion ?db)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?t - ball ?h - ball)
      (and
        (preference blockOnBlockInTowerAtEnd
          (exists (?b - (either cd hexagonal_bin))
            (then
              (hold (and (on ?b ?b) (faces ?b west_wall) ) )
              (hold (not (is_setup_object ?b) ) )
              (hold-while (not (and (and (not (not (not (in_motion ?b) ) ) ) (in_motion ?h) ) (and (and (object_orientation ?h ?h) (in_motion ?h) ) (or (and (in ?b ?b) (on agent ?h) ) ) ) ) ) (adjacent agent ?h) )
            )
          )
        )
        (preference smallObjectThrownToBed
          (exists (?c2 - tall_cylindrical_block ?t ?o ?s ?o - (either basketball mug) ?t1 - (either blue_cube_block laptop))
            (then
              (once (and (and (on ?t1 ?t1) (on bed ?t1) ) (in_motion bed) ) )
              (once (and (and (agent_holds room_center) (in_motion ?h) ) (not (not (in_motion front_left_corner) ) ) ) )
              (hold (agent_holds ?h) )
              (hold (not (and (agent_holds ?t1) (and (same_type ?h ?h) (game_start ) ) ) ) )
            )
          )
        )
      )
    )
    (preference throwOverRamp
      (exists (?o - ball)
        (then
          (hold (and (touch ?o pink) (and (and (in ?o ?o) (and (adjacent ?o ?o) (agent_holds ?o) ) ) (in_motion floor) ) ) )
          (hold (and (in_motion ?o) (and (object_orientation ?o ?o) (adjacent ?o ?o) ) ) )
          (hold (agent_holds ?o) )
        )
      )
    )
    (preference pillowThrownToDoggieBed
      (exists (?c1 - sliding_door)
        (then
          (hold-while (adjacent ?c1 ?c1) (not (or (and (and (in_motion ?c1) (agent_holds agent) ) (in agent ?c1) (and (and (in ?c1 ?c1) (and (in_motion ?c1) (and (in ?c1 ?c1) (agent_holds ?c1) ) ) ) (and (in_motion ?c1) (and (agent_holds ?c1) (and (or (on ?c1 ?c1) (in_motion bed) ) (same_color ?c1 ?c1) (adjacent ?c1 ?c1) ) (touch ?c1 ?c1) ) ) ) ) (agent_holds ?c1) ) ) (and (agent_holds bed) (in ?c1 ?c1) ) )
          (once (agent_holds ?c1) )
          (hold (not (and (not (and (on ?c1 ?c1) (in ?c1 ?c1) ) ) (not (in_motion ?c1) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (* 3 5 )
  )
)
(:scoring
  (count throwOverRamp:red:dodgeball)
)
)



(define (game game-id-933) (:domain medium-objects-room-v1)
(:setup
  (forall (?o - chair)
    (game-conserved
      (not
        (agent_holds ?o)
      )
    )
  )
)
(:constraints
  (and
    (preference basketMadeFromRug
      (exists (?r - ball)
        (at-end
          (game_start )
        )
      )
    )
  )
)
(:terminal
  (>= (+ 6 (* (external-forall-maximize (+ (count-unique-positions basketMadeFromRug:hexagonal_bin) (count basketMadeFromRug:hexagonal_bin) )
        )
        (count basketMadeFromRug:tall_cylindrical_block)
      )
      5
      1
      4
    )
    (count basketMadeFromRug:side_table)
  )
)
(:scoring
  (+ (* (count basketMadeFromRug:dodgeball:dodgeball) (count-once-per-external-objects basketMadeFromRug:green) )
    (count basketMadeFromRug:basketball:dodgeball)
  )
)
)



(define (game game-id-934) (:domain few-objects-room-v1)
(:setup
  (exists (?b2 - triangular_ramp ?l - block)
    (exists (?d - bridge_block ?s - block)
      (game-conserved
        (agent_holds ?l)
      )
    )
  )
)
(:constraints
  (and
    (forall (?r1 - wall)
      (and
        (preference bounceBallToBin
          (exists (?r - cube_block)
            (then
              (once (not (in ?r ?r1) ) )
              (hold (and (agent_holds ?r1) (in ?r1 agent) (and (= (distance ?r1 ?r)) (adjacent rug brown) ) ) )
              (once (and (agent_holds ?r1) (in_motion ?r1) ) )
            )
          )
        )
        (preference ballThrownToRug
          (exists (?b - dodgeball)
            (then
              (once (is_setup_object ?r1) )
              (once (in_motion ?r1) )
              (hold (on desk room_center) )
            )
          )
        )
      )
    )
    (preference baseBlockInTowerAtEnd
      (exists (?c - shelf)
        (then
          (hold (same_color ?c ?c) )
          (once (or (not (agent_holds ?c) ) (and (on ?c room_center) (touch ?c ?c) (or (not (adjacent_side ?c desk agent) ) (and (and (object_orientation pink_dodgeball ?c) (and (exists (?p - cube_block ?o3 - dodgeball ?b8 - game_object ?t - dodgeball ?d - hexagonal_bin) (adjacent ?d ?d) ) (in_motion ?c) (not (not (or (exists (?h - (either bed) ?b1 - shelf) (not (agent_holds ?b1) ) ) (in_motion ?c) ) ) ) ) (agent_holds ?c) ) (in_motion ?c) (in ?c ?c) ) ) (and (not (in desk bed) ) (not (not (in ?c ?c) ) ) (exists (?h - tall_cylindrical_block) (agent_holds ?c) ) (agent_holds ?c) ) ) ) )
          (hold (on ?c ?c) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (or
        (>= (total-score) 5 )
        (or
          (>= 4 (count bounceBallToBin:golfball) )
          (and
            (>= (count-once-per-objects bounceBallToBin:purple:doggie_bed) (* (* (count-once-per-objects bounceBallToBin:orange) 8 )
                10
              )
            )
            (or
              (>= 1 3 )
            )
            (or
              (>= 10 (* (count baseBlockInTowerAtEnd:dodgeball) )
              )
              (>= (count bounceBallToBin:dodgeball:yellow) (* (count bounceBallToBin:pyramid_block) (count ballThrownToRug:top_drawer) )
              )
            )
          )
          (> 6 2 )
        )
      )
      (or
        (>= 3 (* 10 (count bounceBallToBin:yellow) )
        )
        (>= (count-once-per-objects ballThrownToRug:triangle_block) 15 )
      )
      (not
        (>= (/ (count ballThrownToRug:golfball) 20 ) (count-total baseBlockInTowerAtEnd:pink_dodgeball) )
      )
      (> (count baseBlockInTowerAtEnd:doggie_bed) (external-forall-maximize (+ (* (count-once-per-objects ballThrownToRug:pink_dodgeball) )
            7
          )
        )
      )
    )
    (>= (count ballThrownToRug:red) (count baseBlockInTowerAtEnd:dodgeball) )
  )
)
(:scoring
  (count-once-per-objects bounceBallToBin:brown:hexagonal_bin)
)
)



(define (game game-id-935) (:domain medium-objects-room-v1)
(:setup
  (exists (?d - golfball ?t - block ?h ?h - building)
    (and
      (game-conserved
        (not
          (not
            (agent_holds ?h)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballFromRugToBin
      (exists (?d - hexagonal_bin ?o - dodgeball)
        (at-end
          (and
            (agent_holds ?o)
            (< 1 (distance ?o ?o))
            (in_motion ?o)
            (on ?o front)
          )
        )
      )
    )
    (preference itemsHidingScreens
      (exists (?o - (either golfball lamp) ?d2 - block)
        (then
          (once (and (not (and (in_motion ?d2) (agent_holds ?d2) ) ) (in_motion ?d2) (agent_holds ?d2) (in_motion ?d2) ) )
          (once (in_motion ?d2) )
          (once (not (and (not (not (and (in_motion ?d2) (not (not (broken upright) ) ) ) ) ) (not (on ?d2 ?d2) ) ) ) )
        )
      )
    )
    (preference throwOverRamp
      (exists (?d - hexagonal_bin)
        (then
          (once (rug_color_under ?d ?d) )
          (once (< 1 1) )
          (hold-while (in_motion ?d) (and (or (and (not (adjacent ?d ?d) ) (in_motion ?d) ) (in ?d bed) ) (agent_holds ?d) ) )
        )
      )
    )
    (forall (?b - game_object)
      (and
        (preference blockCorrectlyPicked
          (exists (?h - hexagonal_bin ?c - dodgeball)
            (then
              (hold-while (is_setup_object room_center) (not (and (agent_holds ?b) (on ?b ?b) ) ) )
              (once (not (on ?b ?c) ) )
            )
          )
        )
        (preference throwAttempt
          (exists (?h - dodgeball)
            (at-end
              (in_motion ?h)
            )
          )
        )
        (preference blockPlacedInBuilding
          (exists (?b - chair ?b8 - dodgeball)
            (then
              (once (in_motion ?b8) )
              (once (and (agent_holds floor) (agent_holds desk) (in_motion ?b) (in_motion ?b8) (or (or (not (agent_holds ?b8) ) (in_motion ?b8) ) ) (adjacent ?b8 ?b) (on ?b ?b8) (< 0 1) ) )
              (once (not (touch ?b pink_dodgeball) ) )
            )
          )
        )
        (preference ballThrownThroughRampAndBlocksToBin
          (exists (?l - cube_block ?d - ball)
            (then
              (hold (and (exists (?c - chair) (agent_holds ?d) ) (and (in_motion upright) (equal_z_position ?b ?b) ) (not (and (and (rug_color_under ?d ?d) (not (not (>= 1 1) ) ) ) (on ?b ?b) ) ) ) )
              (once (and (on yellow ?d) (in ?d ?d) ) )
              (hold (agent_holds bed) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (+ (* 50 5 )
        (* (count-increasing-measure itemsHidingScreens:cube_block) 3 )
        3
        (count-once-per-objects throwAttempt:basketball)
        20
        (count-once-per-objects dodgeballFromRugToBin:green:basketball)
      )
      (* 3 0.7 )
    )
  )
)
(:scoring
  (count-unique-positions throwAttempt:dodgeball)
)
)



(define (game game-id-936) (:domain few-objects-room-v1)
(:setup
  (forall (?h - game_object ?w - chair)
    (game-conserved
      (in ?w ?w)
    )
  )
)
(:constraints
  (and
    (preference throwFromEdgeOfRug
      (exists (?w - cube_block ?d - hexagonal_bin)
        (then
          (once (in ?d ?d) )
          (hold (and (agent_holds ?d) (in_motion ?d) ) )
          (hold (in_motion ?d) )
        )
      )
    )
  )
)
(:terminal
  (or
    (and
      (not
        (>= (total-time) 300 )
      )
      (>= (* (count throwFromEdgeOfRug:dodgeball:pink) (count-once-per-objects throwFromEdgeOfRug:bed) )
        3
      )
      (or
        (>= 1 (* (count-once-per-objects throwFromEdgeOfRug:hexagonal_bin) 40 )
        )
      )
    )
    (> (total-time) (+ 2 (count throwFromEdgeOfRug:tall_cylindrical_block) (count throwFromEdgeOfRug:purple) 6 (* (count throwFromEdgeOfRug:dodgeball) 3 )
      )
    )
    (>= (total-time) (total-score) )
    (>= (total-time) 3 )
  )
)
(:scoring
  (count-once-per-objects throwFromEdgeOfRug:pyramid_block)
)
)



(define (game game-id-937) (:domain many-objects-room-v1)
(:setup
  (exists (?b1 - dodgeball ?h - ball)
    (exists (?h - teddy_bear)
      (game-optional
        (in_motion ?h)
      )
    )
  )
)
(:constraints
  (and
    (preference thrownObjectHitsComputer
      (exists (?t - hexagonal_bin)
        (at-end
          (agent_holds ?t)
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (and
        (not
          (>= (count-once-per-objects thrownObjectHitsComputer:hexagonal_bin:dodgeball) (count-once-per-objects thrownObjectHitsComputer:yellow) )
        )
        (>= 3 (total-score) )
        (>= (* 8 5 )
          6
        )
      )
      (and
        (>= (* 2 3 7 (>= (external-forall-minimize (+ (+ (* (count-once thrownObjectHitsComputer) (* 30 (count thrownObjectHitsComputer:beachball) )
                      4
                    )
                    (* 2 10 )
                    (* (external-forall-maximize (count thrownObjectHitsComputer:beachball:basketball) ) 100 )
                  )
                  2
                )
              )
              3
            )
            (+ (external-forall-maximize (* (count-once-per-objects thrownObjectHitsComputer:beachball) 2 )
              )
              (* (count thrownObjectHitsComputer:green) (> (count-once-per-objects thrownObjectHitsComputer:tall_cylindrical_block) (external-forall-maximize (>= 2 100 )
                  )
                )
              )
            )
            (count thrownObjectHitsComputer:triangle_block)
            (+ (* (count-total thrownObjectHitsComputer:dodgeball:brown) 3 )
              (external-forall-minimize
                (count-overlapping thrownObjectHitsComputer:basketball:blue_dodgeball)
              )
              (count thrownObjectHitsComputer:dodgeball)
              (* (count thrownObjectHitsComputer:pink_dodgeball) (external-forall-maximize (* (* (count thrownObjectHitsComputer:pink_dodgeball:hexagonal_bin) (count-once-per-objects thrownObjectHitsComputer:blue_dodgeball:hexagonal_bin) 6 (count-once-per-objects thrownObjectHitsComputer:beachball) )
                    15
                  )
                )
              )
              180
              (count thrownObjectHitsComputer:pink)
            )
            (count-once-per-objects thrownObjectHitsComputer:pink)
            (+ 100 (+ (* 1 5 )
                2
                (count-total thrownObjectHitsComputer:golfball:blue_dodgeball)
              )
            )
          )
          (* (count thrownObjectHitsComputer:yellow) (+ (+ 3 4 )
              (<= 1 (+ (count thrownObjectHitsComputer:basketball) (count thrownObjectHitsComputer:yellow) )
              )
              180
              (count-once-per-objects thrownObjectHitsComputer:dodgeball:green)
              (+ (count-once-per-external-objects thrownObjectHitsComputer:basketball) (count-longest thrownObjectHitsComputer:dodgeball:yellow) )
              (count thrownObjectHitsComputer:basketball:dodgeball)
            )
            2
            (count thrownObjectHitsComputer:pink_dodgeball:hexagonal_bin)
            (* 6 1 (= (- (count thrownObjectHitsComputer:pink:yellow_pyramid_block:pink) (- (count thrownObjectHitsComputer:side_table) )
                )
                (count thrownObjectHitsComputer:dodgeball)
              )
            )
            100
          )
        )
        (>= 8 (* (+ (* 5 (count thrownObjectHitsComputer:bed:basketball) )
              15
            )
            (count-once-per-objects thrownObjectHitsComputer:dodgeball)
          )
        )
      )
    )
    (= (total-time) 9 )
    (or
      (>= (count thrownObjectHitsComputer:dodgeball:basketball) (* (count thrownObjectHitsComputer:hexagonal_bin) (* (* (+ 5 (* (count thrownObjectHitsComputer:dodgeball:orange) 10 )
                6
              )
              3
            )
            6
            4
          )
          (count-once-per-objects thrownObjectHitsComputer:pink_dodgeball:dodgeball)
          (- 3 )
        )
      )
      (>= 3 (* (count-overlapping thrownObjectHitsComputer:pink:dodgeball) 9 (count-once-per-objects thrownObjectHitsComputer) (count thrownObjectHitsComputer:dodgeball) (count-once-per-objects thrownObjectHitsComputer:cube_block) (+ (external-forall-maximize (count-same-positions thrownObjectHitsComputer:basketball) ) 2 )
        )
      )
    )
  )
)
(:scoring
  (count thrownObjectHitsComputer:beachball)
)
)



(define (game game-id-938) (:domain many-objects-room-v1)
(:setup
  (forall (?w2 - ball ?r2 - beachball)
    (game-conserved
      (or
        (agent_holds room_center)
        (and
          (in_motion agent)
          (in_motion ?r2)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - dodgeball)
      (and
        (preference ballThrownToRampToBed
          (exists (?c - block)
            (then
              (once (agent_holds ?c) )
              (once (in ?c ?b) )
              (hold (in ?b ?c) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) 6 )
)
(:scoring
  (count ballThrownToRampToBed:yellow)
)
)



(define (game game-id-939) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?o - curved_wooden_ramp)
      (and
        (not
          (game-conserved
            (> 1 (distance agent ?o))
          )
        )
      )
    )
    (exists (?h - cube_block ?h - block)
      (exists (?c - (either dodgeball dodgeball dodgeball) ?d - shelf ?h - (either rug pyramid_block key_chain) ?c - hexagonal_bin ?b - wall)
        (game-conserved
          (not
            (and
              (is_setup_object rug)
              (not
                (and
                  (agent_holds ?h)
                  (and
                    (not
                      (exists (?p - cube_block ?d - doggie_bed)
                        (not
                          (in ?h ?d)
                        )
                      )
                    )
                    (not
                      (is_setup_object ?b)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dropAttempt
      (exists (?o - ball)
        (then
          (once (adjacent bed ?o) )
          (hold-while (on ?o ?o) (not (adjacent ?o ?o) ) )
          (hold (adjacent ?o desk) )
        )
      )
    )
    (forall (?b2 - beachball ?d1 - hexagonal_bin)
      (and
        (preference binKnockedOver
          (exists (?d - hexagonal_bin ?c ?p2 ?p ?o - dodgeball)
            (then
              (hold (not (touch ?p2 ?o) ) )
              (once (and (on ?o ?o) (< (distance agent ?p) (distance bed ?d1)) ) )
              (hold (exists (?d - chair ?b - game_object) (in_motion ?p2) ) )
            )
          )
        )
      )
    )
    (preference throwBallToDoggieBedOffWall
      (exists (?c2 - building)
        (then
          (once (not (same_color ?c2 green_golfball) ) )
          (hold (and (or (not (agent_holds ?c2) ) (agent_holds ?c2) ) (and (not (not (rug_color_under ?c2 green_golfball) ) ) (game_start ) ) ) )
          (hold (not (in ?c2 ?c2) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (or
        (>= (total-time) (count-once-per-objects dropAttempt:basketball:dodgeball) )
        (and
          (>= 1 6 )
          (or
            (not
              (>= (= (count-once-per-objects dropAttempt) 5 )
                1
              )
            )
            (> (total-time) 5 )
          )
        )
      )
    )
    (>= (total-score) 10 )
  )
)
(:scoring
  (* (+ (* (= 1 (+ (count dropAttempt:beachball:golfball:purple) 4 )
        )
        (external-forall-maximize
          (> 2 30 )
        )
        12
      )
      4
      10
      60
      (count throwBallToDoggieBedOffWall:golfball)
      1
      50
      (count dropAttempt)
      4
    )
    (- 20 )
  )
)
)



(define (game game-id-940) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?c1 - hexagonal_bin)
      (exists (?c5 - (either yellow watch pyramid_block) ?d - ball)
        (exists (?b - hexagonal_bin)
          (and
            (forall (?o - teddy_bear ?t1 - doggie_bed)
              (game-conserved
                (and
                  (< (distance desk ?b) 1)
                  (and
                    (not
                      (or
                        (not
                          (exists (?w1 - shelf ?b6 - block)
                            (agent_holds ?c1)
                          )
                        )
                        (in bed rug)
                      )
                    )
                    (exists (?o - game_object ?o - (either ball dodgeball pen))
                      (< (distance ?b ?d) (x_position ?o))
                    )
                  )
                  (in_motion agent)
                )
              )
            )
          )
        )
      )
    )
    (forall (?b2 - triangular_ramp ?t2 - block ?p2 - teddy_bear ?d2 - wall)
      (and
        (and
          (game-optional
            (and
              (in ?d2 ?d2)
              (adjacent_side ?d2 ?d2 ?d2 pink)
            )
          )
          (game-conserved
            (not
              (broken room_center)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballKnocksTeddy
      (exists (?c - (either dodgeball rug basketball))
        (then
          (once (in_motion ?c) )
        )
      )
    )
    (preference thrownBallHitsBlock
      (exists (?p2 - hexagonal_bin)
        (then
          (once (not (agent_holds ?p2) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (total-score) (count thrownBallHitsBlock:pink) )
    (>= (* (- 1 )
        (count-once-per-objects ballKnocksTeddy:rug)
      )
      (total-score)
    )
  )
)
(:scoring
  (- 20 )
)
)



(define (game game-id-941) (:domain many-objects-room-v1)
(:setup
  (forall (?w2 - dodgeball)
    (exists (?c2 - shelf)
      (game-conserved
        (and
          (and
            (game_over )
            (in ?c2 ?w2)
          )
          (on ?c2 ?c2)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballDroppedInBin
      (exists (?b8 - curved_wooden_ramp)
        (at-end
          (in_motion ?b8)
        )
      )
    )
  )
)
(:terminal
  (> (* 4 (* 50 (count-longest ballDroppedInBin:pink:dodgeball) (count-measure ballDroppedInBin:blue) )
    )
    (total-score)
  )
)
(:scoring
  (+ (count ballDroppedInBin:blue_dodgeball) (* 5 (count-once-per-objects ballDroppedInBin) 2 )
  )
)
)



(define (game game-id-942) (:domain medium-objects-room-v1)
(:setup
  (exists (?d - triangular_ramp ?o1 - (either pen cube_block))
    (and
      (exists (?r - drawer)
        (and
          (and
            (game-conserved
              (exists (?b - (either golfball floor cube_block))
                (not
                  (and
                    (< 8 (distance ?o1 ?b))
                    (same_object ?b ?o1)
                    (forall (?o4 - (either teddy_bear blue_cube_block) ?l3 - cylindrical_block)
                      (in_motion ?b)
                    )
                  )
                )
              )
            )
          )
          (game-optional
            (on agent ?o1)
          )
          (game-conserved
            (or
              (exists (?h - hexagonal_bin)
                (in_motion ?h)
              )
              (not
                (on ?o1 ?o1)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockInTowerKnockedByDodgeball
      (exists (?b2 - hexagonal_bin)
        (then
          (hold (< (distance ?b2 ?b2) 1) )
          (once (and (and (not (on ?b2 ?b2) ) (and (on ?b2 ?b2) (not (in ?b2 floor) ) ) ) (agent_holds ?b2) ) )
          (once (opposite agent agent) )
        )
      )
    )
  )
)
(:terminal
  (> (* 15 (count blockInTowerKnockedByDodgeball:blue_dodgeball:blue_dodgeball) 1 7 (count-once-per-objects blockInTowerKnockedByDodgeball:basketball) (count-once blockInTowerKnockedByDodgeball:top_drawer) )
    (count-longest blockInTowerKnockedByDodgeball:block)
  )
)
(:scoring
  (+ (* 3 20 )
    (* (* (count-total blockInTowerKnockedByDodgeball:dodgeball) (count blockInTowerKnockedByDodgeball:dodgeball) )
      4
    )
  )
)
)



(define (game game-id-943) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds door)
  )
)
(:constraints
  (and
    (forall (?h ?w1 - hexagonal_bin)
      (and
        (preference bigObjectThrownToBed
          (exists (?b - triangular_ramp ?t2 - flat_block)
            (at-end
              (agent_holds ?w1)
            )
          )
        )
      )
    )
    (preference dodgeballHitsPillowWithoutTouchingBlock
      (exists (?d - hexagonal_bin)
        (then
          (once (touch left agent) )
          (hold (adjacent_side ?d ?d ?d agent) )
          (hold (in_motion ?d) )
        )
      )
    )
    (forall (?d - game_object)
      (and
        (preference cubeThrownToBin
          (exists (?h - dodgeball)
            (then
              (hold (not (and (not (opposite ?h ?h) ) (in_motion ?h) ) ) )
              (once (in ?d ?h) )
              (hold (in_motion ?d) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= 5 3 )
)
(:scoring
  (count-once-per-objects bigObjectThrownToBed:wall)
)
)



(define (game game-id-944) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (same_color door agent)
  )
)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?l - bridge_block)
        (at-end
          (not
            (agent_holds ?l)
          )
        )
      )
    )
  )
)
(:terminal
  (< 10 (- (count ballThrownToBin:bed:white) )
  )
)
(:scoring
  (- (* (count ballThrownToBin:beachball:golfball) 20 )
  )
)
)



(define (game game-id-945) (:domain many-objects-room-v1)
(:setup
  (exists (?h - triangular_ramp)
    (and
      (game-optional
        (agent_holds ?h)
      )
      (forall (?d - sliding_door)
        (game-conserved
          (agent_holds agent)
        )
      )
      (exists (?b1 - game_object ?d1 - dodgeball)
        (game-conserved
          (and
            (in_motion desk)
            (adjacent_side ?h ?h ?d1)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwKnocksBlock
      (exists (?b7 - dodgeball)
        (at-end
          (in_motion ?b7)
        )
      )
    )
  )
)
(:terminal
  (< (count-once-per-objects throwKnocksBlock:red) 8 )
)
(:scoring
  (count throwKnocksBlock:top_drawer)
)
)



(define (game game-id-946) (:domain few-objects-room-v1)
(:setup
  (exists (?c3 - doggie_bed)
    (and
      (or
        (and
          (game-conserved
            (not
              (in ?c3 ?c3)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c4 - (either pyramid_block cellphone dodgeball))
      (and
        (preference ballToBinFromBed
          (exists (?p - block)
            (then
              (hold-while (same_color room_center ?c4) (forall (?c - ball) (agent_holds ?p) ) (in_motion desk) )
              (hold (exists (?c - game_object ?t2 - hexagonal_bin) (and (in_motion room_center) (not (agent_holds ?t2) ) (and (in_motion ?p) (in pink ?t2) ) (and (not (in_motion ?p) ) (not (and (same_type ?p ?t2) (adjacent ?p ?p) ) ) (in_motion ?c4) (on ?t2 agent) ) (= (distance ?t2 ?c4) 1) (agent_holds upright) ) ) )
              (once (in ?p agent) )
            )
          )
        )
        (preference agentLeavesDogbedOrNoMoreBalls
          (exists (?b - ball)
            (then
              (hold (agent_holds ?c4) )
              (once (agent_holds ?c4) )
              (hold-while (agent_holds agent) (same_type ?b ?c4) (not (same_color ?b ?b) ) (not (and (in_motion ?b) ) ) )
            )
          )
        )
        (preference blockThrowAttempt
          (exists (?h - dodgeball)
            (then
              (once (agent_holds ?h) )
              (once (exists (?o - game_object) (not (and (not (in_motion ?h) ) (and (in_motion ?c4) (above ?o ?o) (on ?h ?h) (not (or (not (agent_holds ?c4) ) (not (on ?o ?h) ) ) ) ) (agent_holds ?h) (not (same_color ?h rug) ) ) ) ) )
              (once (not (in_motion front) ) )
            )
          )
        )
      )
    )
    (forall (?o - game_object)
      (and
        (preference watchOnShelf
          (exists (?d - dodgeball)
            (then
              (once (and (in ?d ?o) (in_motion ?d) (and (in desk agent) (exists (?h - hexagonal_bin) (< 10 1) ) ) ) )
            )
          )
        )
      )
    )
    (preference castleBuilt
      (exists (?p2 - hexagonal_bin)
        (then
          (hold (and (agent_holds ?p2) (in_motion ?p2) ) )
          (once (agent_holds ?p2) )
          (once (game_over ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) 10 )
)
(:scoring
  (* (* 3 (count watchOnShelf:pink) (- (external-forall-maximize (count-once-per-external-objects watchOnShelf:basketball) ) 5 ) (count watchOnShelf:dodgeball:basketball) (count-once-per-objects watchOnShelf:dodgeball) )
    (* (* (count castleBuilt:beachball) (count-once-per-objects watchOnShelf:beachball) )
      (+ 15 (- 2 )
        (+ 6 (count-once-per-objects castleBuilt:basketball) )
        6
        (+ (count-once-per-objects castleBuilt:blue_cube_block) (count castleBuilt:beachball:pink) )
        (= (* 30 5 )
          (* 2 (count watchOnShelf:basketball:dodgeball) )
          (external-forall-minimize
            (count blockThrowAttempt:tall_cylindrical_block)
          )
        )
        (* 3 (external-forall-maximize (count-once ballToBinFromBed:beachball:book:basketball) ) )
        (* 1 (count-once-per-external-objects ballToBinFromBed:red) )
        (count-once-per-objects castleBuilt:dodgeball)
        (* 2 5 (- (* 2 3 (count castleBuilt) )
          )
        )
        10
        (+ 1 (* 2 5 (* (+ (count-once-per-objects castleBuilt:blue_cube_block:dodgeball) 3 (= (* (count blockThrowAttempt:golfball) 30 )
                )
              )
              10
            )
          )
        )
      )
    )
  )
)
)



(define (game game-id-947) (:domain many-objects-room-v1)
(:setup
  (exists (?t2 - cube_block)
    (exists (?p2 - hexagonal_bin)
      (game-optional
        (in ?p2 ?t2)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToWallToAgent
      (exists (?h - (either hexagonal_bin basketball))
        (at-end
          (between ?h ?h ?h)
        )
      )
    )
    (preference cubeThrownToBin
      (exists (?t - (either cube_block golfball) ?h - cube_block)
        (then
          (once (and (in ?h ?h) (in_motion rug) ) )
          (once (< (distance ?h ?h) (distance ?h ?h)) )
          (once (and (not (and (and (agent_holds ?h) (on ?h ?h) (and (and (not (agent_holds rug) ) (and (in front ?h) (adjacent ?h ?h) ) ) (not (on ?h ?h) ) ) ) (and (and (not (in_motion ?h) ) (in ?h ?h) ) (and (> 9 1) (same_object ?h ?h) ) ) ) ) (exists (?c - beachball ?l - book) (not (on agent ?l) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (= (total-score) 1 )
    (> (count ballThrownToWallToAgent:hexagonal_bin) (* 5 5 )
    )
    (= (count ballThrownToWallToAgent:yellow) (count-unique-positions cubeThrownToBin:pink_dodgeball) )
  )
)
(:scoring
  (/
    (count ballThrownToWallToAgent:basketball)
    3
  )
)
)



(define (game game-id-948) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (exists (?h - pillow)
      (rug_color_under agent desk)
    )
  )
)
(:constraints
  (and
    (preference basketMadeFromRug
      (exists (?h - hexagonal_bin ?o - red_dodgeball ?l - hexagonal_bin)
        (then
          (once (in ?l ?l) )
          (once (agent_holds ?l) )
          (hold-while (and (agent_holds ?l) (on ?l agent) ) (in_motion pink_dodgeball) (agent_holds ?l) )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (count basketMadeFromRug:hexagonal_bin:dodgeball) )
)
(:scoring
  (count-total basketMadeFromRug:alarm_clock:dodgeball:dodgeball)
)
)



(define (game game-id-949) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (on room_center upright)
  )
)
(:constraints
  (and
    (forall (?p - blue_pyramid_block)
      (and
        (preference dodgeballThrownToBin
          (exists (?o3 - (either cylindrical_block golfball))
            (then
              (hold-while (not (in ?p ?o3) ) (in ?o3 floor) (agent_holds agent) )
              (once (agent_holds rug) )
              (hold (not (agent_holds ?p) ) )
            )
          )
        )
        (preference gameBlockFound
          (exists (?h - dodgeball)
            (then
              (once (agent_holds ?p) )
              (hold (and (adjacent ?h ?h) (game_over ) ) )
              (once (is_setup_object ?h) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (+ 5 (* 3 100 )
      (count gameBlockFound:dodgeball)
      20
    )
    (count dodgeballThrownToBin:yellow:pink)
  )
)
(:scoring
  (count dodgeballThrownToBin:green)
)
)



(define (game game-id-950) (:domain many-objects-room-v1)
(:setup
  (exists (?h - chair)
    (exists (?d - hexagonal_bin)
      (game-conserved
        (agent_holds ?h)
      )
    )
  )
)
(:constraints
  (and
    (forall (?tb - (either pillow triangle_block pyramid_block))
      (and
        (preference basketMadeFromRug
          (exists (?r - hexagonal_bin ?d2 - (either lamp top_drawer hexagonal_bin) ?p - wall)
            (then
              (once (and (not (in_motion ?tb) ) (faces ?tb ?p) ) )
              (once (agent_holds ?p) )
              (hold-while (and (in_motion ?p) (and (not (in_motion ?tb) ) (and (in_motion ?p) (and (and (in ?p ?tb) (not (agent_holds ?tb) ) (< 1 1) (not (agent_holds floor) ) ) ) ) ) (and (between bed ?p ?p) (agent_holds ?p) ) ) (on ?tb bed) )
            )
          )
        )
      )
    )
    (preference thrownBallHitsBlock
      (exists (?c4 - shelf)
        (then
          (once (not (in_motion rug) ) )
          (once (agent_holds ?c4) )
          (hold (not (on agent ?c4) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (count basketMadeFromRug:basketball) )
)
(:scoring
  (count-once thrownBallHitsBlock:pink_dodgeball:basketball)
)
)



(define (game game-id-951) (:domain few-objects-room-v1)
(:setup
  (and
    (or
      (exists (?w1 - dodgeball)
        (and
          (exists (?t - hexagonal_bin)
            (game-optional
              (agent_holds ?t)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference greenObjectMovedToRoomCenter
      (exists (?d - dodgeball)
        (then
          (once (in_motion ?d) )
          (once (not (agent_holds ?d) ) )
          (once (and (< (distance room_center ?d) 2) (on ?d ?d) ) )
        )
      )
    )
    (preference throwObjectToBin
      (exists (?b - dodgeball)
        (then
          (hold (on ?b ?b) )
          (once (exists (?o5 - curved_wooden_ramp) (and (and (same_type ?o5 bed) (and (toggled_on ?o5) (not (not (adjacent upright ?b) ) ) (agent_holds ?o5) ) ) (and (in ?o5 ?b) (on ?b ?o5) (< (distance ?b floor) (distance ?o5 ?o5)) (not (adjacent door room_center) ) ) ) ) )
          (once (agent_holds ?b) )
        )
      )
    )
    (preference towerFallsWhileBuilding
      (exists (?l4 - bridge_block)
        (then
          (once (or (on ?l4 ?l4) ) )
          (once (on ?l4 yellow) )
          (once (and (not (in_motion ?l4) ) (not (or (adjacent floor ?l4) (in_motion ?l4) ) ) (agent_holds ?l4) (agent_crouches ) (adjacent ?l4 ?l4) (agent_holds ?l4) ) )
        )
      )
    )
  )
)
(:terminal
  (<= (* (count-once-per-objects greenObjectMovedToRoomCenter:yellow) (- (external-forall-maximize (count greenObjectMovedToRoomCenter:dodgeball) ) )
    )
    16
  )
)
(:scoring
  (<= 10 (count-once-per-objects towerFallsWhileBuilding:green) )
)
)



(define (game game-id-952) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (exists (?o2 ?r - dodgeball)
      (agent_holds ?r)
    )
  )
)
(:constraints
  (and
    (forall (?b2 - hexagonal_bin ?o1 - block)
      (and
        (preference throwBallToBin
          (exists (?o4 - curved_wooden_ramp)
            (then
              (once (and (on ?o4 ?o4) (agent_holds ?o1) ) )
              (once (on ?o4 ?o4) )
              (once (or (rug_color_under ?o1 rug) (or (in_motion rug) (agent_holds ?o4) ) ) )
            )
          )
        )
      )
    )
    (preference greenObjectMovedToRoomCenter
      (exists (?p1 - hexagonal_bin ?p - hexagonal_bin)
        (then
          (hold (same_color room_center ?p) )
          (once (and (and (above bed ?p) (in_motion left) ) (on room_center desk) (not (in_motion ?p) ) (in_motion ?p) ) )
          (once (agent_crouches ) )
          (once (in bed ?p) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 8 )
    100
  )
)
(:scoring
  (external-forall-minimize
    (* (count-once-per-objects throwBallToBin:dodgeball) (count throwBallToBin:dodgeball) 2 2 )
  )
)
)



(define (game game-id-953) (:domain medium-objects-room-v1)
(:setup
  (not
    (exists (?w - dodgeball)
      (forall (?p1 - (either mug cylindrical_block blue_cube_block alarm_clock) ?d - dodgeball ?d - hexagonal_bin)
        (forall (?b - shelf)
          (and
            (game-conserved
              (and
                (not
                  (adjacent_side top_shelf ?d green_golfball ?d)
                )
                (and
                  (not
                    (agent_holds blue)
                  )
                  (and
                    (open room_center)
                    (agent_holds door)
                  )
                )
              )
            )
            (forall (?g - hexagonal_bin)
              (game-optional
                (and
                  (in ?d ?w)
                  (same_color ?d top_shelf)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference thrownBallHitsBlock
      (exists (?o1 - cube_block ?h - (either dodgeball desktop) ?o5 - teddy_bear)
        (then
          (once (and (and (and (agent_holds ?o5) (and (agent_holds ?o5) (open ?o5) (on agent ?o5) ) ) (in_motion ?o5) ) (< (distance room_center ?o5) (building_size agent)) ) )
          (once (forall (?b - (either yellow_cube_block blue_cube_block pyramid_block) ?h - (either pencil dodgeball) ?f - wall) (in_motion ?o5) ) )
          (once (not (not (and (in_motion ?o5) (and (= 1 0.5) (same_color ?o5 ?o5) ) ) ) ) )
        )
      )
    )
    (preference bounceBallToBin
      (exists (?w1 - hexagonal_bin)
        (then
          (hold (agent_holds ?w1) )
          (hold (on ?w1 ?w1) )
          (hold-while (and (in_motion ?w1) (adjacent ?w1 ?w1) ) (agent_holds ?w1) (game_start ) (adjacent_side ?w1 ?w1 ?w1) )
        )
      )
    )
  )
)
(:terminal
  (>= (count thrownBallHitsBlock:orange:blue_pyramid_block:dodgeball) (total-time) )
)
(:scoring
  (+ (count-once-per-objects thrownBallHitsBlock:pink:golfball) 5 )
)
)



(define (game game-id-954) (:domain many-objects-room-v1)
(:setup
  (forall (?o - dodgeball)
    (game-optional
      (and
        (in_motion ?o)
        (in_motion agent)
      )
    )
  )
)
(:constraints
  (and
    (preference nonBlockPlacedInBuilding
      (exists (?p3 - shelf ?b - ball)
        (then
          (once (not (not (< (distance ?b front) (distance_side ?b bed ?b ?b)) ) ) )
          (hold (not (open ?b) ) )
          (once (in ?b ?b) )
        )
      )
    )
    (preference throwAttempt
      (exists (?d - (either dodgeball cd))
        (then
          (once (not (in_motion ?d) ) )
          (once (same_object ?d ?d) )
        )
      )
    )
    (preference throwKnocksOverBear
      (exists (?o2 - pillow)
        (then
          (once (not (and (agent_holds ?o2) (not (not (adjacent_side rug north_wall ?o2) ) ) ) ) )
          (once (on ?o2 ?o2) )
          (once (and (and (agent_holds bed) (touch ?o2 agent) ) (on ?o2 desk) ) )
        )
      )
    )
  )
)
(:terminal
  (<= (total-time) 5 )
)
(:scoring
  (count throwAttempt:golfball)
)
)



(define (game game-id-955) (:domain many-objects-room-v1)
(:setup
  (exists (?o - (either alarm_clock golfball) ?h - cube_block)
    (game-optional
      (agent_holds ?h)
    )
  )
)
(:constraints
  (and
    (preference ballRolledOnRampToRug
      (exists (?s ?x - dodgeball ?l3 - dodgeball)
        (then
          (once (in_motion room_center) )
          (once (not (not (in_motion ?l3) ) ) )
          (once (same_object ?l3 ?l3) )
        )
      )
    )
    (forall (?tb - cube_block ?o4 - hexagonal_bin)
      (and
        (preference throwOverRamp
          (exists (?o2 - dodgeball)
            (then
              (once (in_motion ?o2) )
              (once (adjacent sideways ?o4) )
              (hold (and (broken ?o4) (and (not (agent_holds green_golfball) ) (and (adjacent ?o2 agent) (object_orientation ?o4 desk) ) (adjacent ?o2 ?o2) ) (in_motion room_center) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (total-score) )
)
(:scoring
  (* (* (* (* (external-forall-minimize (+ 0 5 )
          )
          (+ 3 3 )
          (* 6 3 (count-once ballRolledOnRampToRug:pink) )
        )
        2
      )
    )
    5
  )
)
)



(define (game game-id-956) (:domain medium-objects-room-v1)
(:setup
  (exists (?b - block ?b10 - triangular_ramp)
    (game-conserved
      (exists (?t - dodgeball)
        (not
          (and
            (in_motion agent)
            (in_motion ?b10)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?o - triangular_ramp ?ob - dodgeball)
        (then
          (once (agent_holds ?ob) )
        )
      )
    )
    (forall (?b - doggie_bed)
      (and
        (preference redDodgeballThrownToBin
          (exists (?b6 - dodgeball)
            (then
              (once (in_motion ?b6) )
              (once (in_motion brown) )
              (once (agent_holds ?b6) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 1 (external-forall-maximize (count-once-per-objects redDodgeballThrownToBin:tall_cylindrical_block:blue_dodgeball) ) )
)
(:scoring
  (- (count redDodgeballThrownToBin:hexagonal_bin) )
)
)



(define (game game-id-957) (:domain few-objects-room-v1)
(:setup
  (exists (?b - ball)
    (and
      (exists (?c - dodgeball ?b - hexagonal_bin ?b - color)
        (not
          (exists (?w1 - ball)
            (forall (?b6 - hexagonal_bin)
              (game-conserved
                (agent_holds ?b)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballFromBlockToBin
      (exists (?g - game_object)
        (then
          (once (in back ?g) )
          (once (and (not (in_motion floor) ) (not (touch ?g ?g) ) ) )
          (hold (touch ?g ?g) )
        )
      )
    )
  )
)
(:terminal
  (> (* (* (count-once-per-objects dodgeballFromBlockToBin:basketball) 30 )
      (* 3 (+ (+ (external-forall-maximize (count-unique-positions dodgeballFromBlockToBin:dodgeball) ) 10 )
          (count dodgeballFromBlockToBin:beachball)
        )
      )
      (count dodgeballFromBlockToBin:pink)
    )
    2
  )
)
(:scoring
  (* (count-unique-positions dodgeballFromBlockToBin:basketball) (* (* 10 2 (count-once-per-objects dodgeballFromBlockToBin:blue_dodgeball) 5 60 (* (= (count-once-per-external-objects dodgeballFromBlockToBin:golfball) 15 )
          (+ 3 10 )
        )
      )
      4
    )
    (external-forall-minimize
      (count-once dodgeballFromBlockToBin:orange)
    )
  )
)
)



(define (game game-id-958) (:domain medium-objects-room-v1)
(:setup
  (exists (?d - doggie_bed ?l2 - doggie_bed)
    (game-conserved
      (exists (?b5 - block ?d - pillow)
        (agent_holds bed)
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttemptFromBehindBlock
      (exists (?b3 - teddy_bear)
        (then
          (once (agent_holds ?b3) )
        )
      )
    )
  )
)
(:terminal
  (>= 15 (+ 5 4 )
  )
)
(:scoring
  (* 6 (* (count-measure throwAttemptFromBehindBlock:yellow) 4 8 300 (* (+ 30 (count throwAttemptFromBehindBlock:basketball) )
        (count throwAttemptFromBehindBlock:pink:dodgeball)
      )
      (count-once-per-objects throwAttemptFromBehindBlock:blue_dodgeball:beachball)
    )
  )
)
)



(define (game game-id-959) (:domain medium-objects-room-v1)
(:setup
  (forall (?b - ball)
    (game-optional
      (not
        (not
          (on ?b block)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c - curved_wooden_ramp ?d - desk_shelf)
      (and
        (preference ballThrownToWallToAgent
          (exists (?db - beachball ?ob - chair ?o - hexagonal_bin ?d - building)
            (then
              (hold (in_motion ?d) )
              (once (not (above ?d ?d) ) )
              (once (in_motion ?d) )
            )
          )
        )
        (preference throwBallToBin
          (exists (?l4 - game_object)
            (then
              (once (agent_holds ?l4) )
              (once (same_type ?l4 ?d) )
              (hold (agent_holds ?d) )
            )
          )
        )
        (preference dodgeballHitsBin
          (exists (?bl - doggie_bed ?c6 ?b3 ?d ?bl ?b1 ?o - hexagonal_bin)
            (then
              (once (not (not (in_motion desk) ) ) )
              (hold (and (adjacent pink_dodgeball ?c6) ) )
              (once (agent_holds ?bl) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (count-once-per-objects ballThrownToWallToAgent:golfball:dodgeball) (count dodgeballHitsBin:cube_block) )
    (= (count throwBallToBin:dodgeball) )
  )
)
(:scoring
  (* 6 50 )
)
)



(define (game game-id-960) (:domain medium-objects-room-v1)
(:setup
  (exists (?t - wall ?b6 - doggie_bed)
    (game-conserved
      (or
        (or
          (agent_holds top_shelf)
          (in_motion desktop)
        )
        (exists (?h - book ?s - dodgeball ?h - ball)
          (opposite ?b6 ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?s - hexagonal_bin)
      (and
        (preference brownObjectMovedToRoomCenter
          (exists (?h - hexagonal_bin ?b4 - block)
            (then
              (once (in_motion ?b4) )
              (once (and (not (and (not (in_motion ?b4) ) (not (agent_holds ?s) ) ) ) (and (not (and (in_motion ?s) (agent_holds right) ) ) (in_motion ?b4) (game_start ) (in_motion floor) ) ) )
              (once (and (not (in_motion ?s) ) (in_motion bed) ) )
            )
          )
        )
        (preference agentLeavesDogbedOrNoMoreBalls
          (exists (?p2 - building)
            (then
              (once (and (> (distance agent ?p2) (distance ?s ?p2)) (not (not (> 7 (distance ?s agent)) ) ) ) )
              (once (between ?s bed west_wall) )
              (once (and (not (object_orientation ?p2 ?p2) ) (or (agent_holds desk) (touch ?p2 ?p2) (< (distance ?s ?s) 1) ) (object_orientation ?p2 bed) ) )
            )
          )
        )
      )
    )
    (preference ballThrownFromRug
      (exists (?d - dodgeball ?r ?o4 - golfball)
        (at-end
          (agent_holds ?r)
        )
      )
    )
  )
)
(:terminal
  (> 30 (count-once-per-objects agentLeavesDogbedOrNoMoreBalls:dodgeball:dodgeball) )
)
(:scoring
  (* (* (count brownObjectMovedToRoomCenter:dodgeball:golfball) (* 40 (count brownObjectMovedToRoomCenter:hexagonal_bin) )
    )
    (count ballThrownFromRug:green)
  )
)
)



(define (game game-id-961) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (open desk)
  )
)
(:constraints
  (and
    (preference laptopAndBookInPlace
      (exists (?d - wall)
        (then
          (hold (and (broken rug) (in_motion ?d) ) )
          (hold-while (touch ?d room_center) (agent_holds ?d) (on ?d ?d) (or (not (on room_center ?d) ) (object_orientation ?d ?d) ) )
        )
      )
    )
  )
)
(:terminal
  (= (* (count laptopAndBookInPlace:pink) 6 )
    3
  )
)
(:scoring
  (count laptopAndBookInPlace:dodgeball:dodgeball)
)
)



(define (game game-id-962) (:domain few-objects-room-v1)
(:setup
  (exists (?c3 - hexagonal_bin)
    (exists (?b10 - triangular_ramp ?c - ball ?d - wall)
      (game-conserved
        (agent_holds ?c3)
      )
    )
  )
)
(:constraints
  (and
    (preference blockIncorrectlyPicked
      (exists (?g - chair)
        (at-end
          (toggled_on ?g)
        )
      )
    )
    (preference ballThrownToWallToAgent
      (exists (?s - teddy_bear)
        (then
          (hold (and (not (exists (?o - game_object ?r1 - ball ?o5 - curved_wooden_ramp ?b3 - (either bed yellow_cube_block)) (forall (?h - (either blue_cube_block wall key_chain yellow_cube_block)) (< 1 (distance_side desk room_center ?b3)) ) ) ) (above ?s desk) ) )
          (hold (in_motion ?s) )
          (once (and (in ?s rug) (< (distance_side ?s agent ?s) 1) ) )
        )
      )
    )
    (preference ballOnBedAtEnd
      (exists (?l - curved_wooden_ramp ?b - shelf)
        (then
          (once (agent_holds front) )
          (hold (= (distance ?b ?b)) )
          (once (in_motion rug) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 10 1 )
    (<= 100 (count-once-per-objects ballOnBedAtEnd:beachball) )
  )
)
(:scoring
  (count blockIncorrectlyPicked:dodgeball:golfball)
)
)



(define (game game-id-963) (:domain medium-objects-room-v1)
(:setup
  (exists (?h - (either cylindrical_block doggie_bed hexagonal_bin) ?w1 - game_object)
    (game-optional
      (not
        (agent_holds ?w1)
      )
    )
  )
)
(:constraints
  (and
    (preference laptopAndBookInPlace
      (exists (?h - hexagonal_bin)
        (then
          (once (and (exists (?w2 - dodgeball) (agent_holds ?w2) ) (agent_holds ?h) (and (equal_z_position room_center agent) (and (in pink ?h) (on green sideways) (is_setup_object door) (< (distance_side ?h ?h agent ?h) 1) ) (in desk ?h) ) (same_color agent upright) (and (agent_holds pink_dodgeball) (< (distance_side ?h ?h ?h) 0) ) (and (same_color ?h ?h) (and (not (and (touch ?h ?h) (in_motion ?h) (and (on agent ?h) (in_motion ?h) (on ?h ?h) ) (not (in door ?h) ) ) ) (and (in_motion ?h) (in_motion ?h) ) ) ) (agent_holds ?h) (not (and (equal_z_position ?h ?h) (and (agent_holds ?h) (not (in_motion ?h) ) ) ) ) ) )
          (once (in ?h ?h) )
          (hold (adjacent ?h ?h) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (external-forall-maximize (count laptopAndBookInPlace:pink) ) (total-score) )
    (>= (total-score) 18 )
    (>= (total-time) (count laptopAndBookInPlace:hexagonal_bin) )
  )
)
(:scoring
  (count-shortest laptopAndBookInPlace:blue_dodgeball:rug)
)
)



(define (game game-id-964) (:domain few-objects-room-v1)
(:setup
  (exists (?tb ?g - hexagonal_bin ?p - dodgeball ?c2 ?bl - pyramid_block)
    (game-optional
      (in_motion ?bl)
    )
  )
)
(:constraints
  (and
    (preference blockIncorrectlyPicked
      (exists (?h - block)
        (then
          (once-measure (agent_holds bed) (building_size ?h) )
          (hold (is_setup_object ?h) )
          (once (and (not (faces ?h ?h) ) (agent_holds ?h) ) )
        )
      )
    )
  )
)
(:terminal
  (<= (count blockIncorrectlyPicked:yellow_cube_block) (count blockIncorrectlyPicked:purple:blue_pyramid_block) )
)
(:scoring
  (* 5 30 (count-once blockIncorrectlyPicked:basketball) )
)
)



(define (game game-id-965) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?t - ball ?b - hexagonal_bin ?c2 - hexagonal_bin)
      (forall (?l2 - cylindrical_block ?h - dodgeball)
        (and
          (game-conserved
            (is_setup_object ?c2)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference cubeBlockThrowAttempt
      (exists (?l - ball ?p - hexagonal_bin)
        (then
          (hold (same_type ?p ?p) )
          (once (on back ?p) )
          (once (agent_holds ?p) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (> (+ (count-once-per-objects cubeBlockThrowAttempt:pyramid_block:basketball) 5 (count cubeBlockThrowAttempt:red_pyramid_block) )
      2
    )
  )
)
(:scoring
  (= 20 (- 6 300 ) )
)
)



(define (game game-id-966) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?c2 - hexagonal_bin ?s - hexagonal_bin)
      (exists (?r - doggie_bed)
        (game-optional
          (and
            (not
              (not
                (agent_holds ?s)
              )
            )
            (agent_holds ?s)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?r - dodgeball ?o - ball)
      (and
        (preference ballDroppedInBin
          (exists (?o2 - building)
            (then
              (hold-while (not (in ?o ?o) ) (object_orientation ?o desk) )
              (hold (agent_holds desk) )
              (once (in_motion ?o) )
            )
          )
        )
        (preference blockInTowerKnocked
          (exists (?l3 - triangular_ramp)
            (then
              (hold-while (or (not (in_motion ?o) ) (not (and (agent_holds ?o) (same_color ?l3 ?o) ) ) ) (on ?l3 ?l3) (in_motion ?o) )
              (hold (and (not (and (and (agent_holds ?o) (not (and (> (distance ?o ?o) (distance ?o ?l3)) (adjacent ?o ?o) ) ) (agent_holds ?o) (on ?o desk) (in ?l3 ?o) (not (not (and (and (< 5 1) (agent_holds ?l3) ) (or (in desk sideways) (and (agent_holds ?o) (agent_holds ?l3) (agent_holds pink_dodgeball) ) ) ) ) ) (not (on ?o ?l3) ) (on ?l3 ?o) (in_motion agent) (agent_crouches ) (agent_holds ?o) (in ?o ?l3) ) (not (in_motion rug) ) (not (agent_holds ?l3) ) (and (rug_color_under ?l3 ?l3) (agent_holds ?l3) ) ) ) (and (< (distance agent ?l3) 1) (on ?o ?l3) ) ) )
              (hold (in_motion ?l3) )
            )
          )
        )
        (preference blockIncorrectlyPicked
          (exists (?h - dodgeball)
            (then
              (hold-while (touch room_center ?o) (not (not (in_motion ?o) ) ) )
              (hold (in_motion ?h) )
              (once (not (and (and (agent_holds ?o) (in_motion floor) (and (in ?o ?o) (agent_holds ?o) (and (and (faces rug ?h) (not (not (in room_center ?h) ) ) ) (and (adjacent agent desk) (and (exists (?h - ball) (in_motion ?o) ) (not (on ?o ?o) ) ) (< 2 (x_position blue)) ) ) ) ) (not (and (above ?h ?o) ) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (= (count blockInTowerKnocked:pink:orange) 0 )
    (> (count blockIncorrectlyPicked) (count ballDroppedInBin:dodgeball) )
    (>= (>= 4 10 )
      (* 3 16 (/ (count blockIncorrectlyPicked:beachball) (count-once-per-objects blockIncorrectlyPicked:dodgeball:golfball) ) )
    )
    (>= (total-time) 20 )
  )
)
(:scoring
  (* (count-total blockInTowerKnocked:red) (+ 10 )
  )
)
)



(define (game game-id-967) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - blinds)
      (exists (?f ?h - (either book yellow))
        (and
          (exists (?f - dodgeball)
            (and
              (exists (?c - ball ?b3 - (either pillow dodgeball basketball))
                (exists (?w2 - (either ball alarm_clock))
                  (exists (?b - dodgeball ?p1 - watch)
                    (game-optional
                      (not
                        (and
                          (< (distance ?p1 ?h) (distance room_center ?w2))
                          (and
                            (agent_holds ?f)
                            (in_motion ?f)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwInBin
      (exists (?d - game_object)
        (then
          (once (agent_holds ?d) )
          (once (touch ?d ?d) )
          (once (in ?d agent) )
        )
      )
    )
  )
)
(:terminal
  (not
    (> (+ 3 (count-once-per-objects throwInBin:cylindrical_block) 25 )
      (* 1 (count-shortest throwInBin:dodgeball) )
    )
  )
)
(:scoring
  (+ (* 4 (- (count throwInBin:doggie_bed) (+ (count-longest throwInBin:hexagonal_bin) (count throwInBin:beachball) )
      )
    )
    (count-once throwInBin:pink_dodgeball)
  )
)
)



(define (game game-id-968) (:domain few-objects-room-v1)
(:setup
  (not
    (exists (?d ?b - watch)
      (game-conserved
        (toggled_on bed)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownMissesEverything
      (exists (?l3 - game_object)
        (then
          (hold (in_motion bed) )
          (hold-while (same_type agent rug) (between ?l3 ?l3 bed) )
        )
      )
    )
  )
)
(:terminal
  (> 30 (count-once-per-objects ballThrownMissesEverything:beachball) )
)
(:scoring
  (count-shortest ballThrownMissesEverything:green:red)
)
)



(define (game game-id-969) (:domain medium-objects-room-v1)
(:setup
  (exists (?b9 ?ob - (either cd triangle_block) ?h - hexagonal_bin)
    (and
      (forall (?g - wall)
        (game-optional
          (not
            (game_over )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o - dodgeball ?b3 - doggie_bed)
      (and
        (preference objectMoved
          (exists (?c - cube_block)
            (then
              (hold (not (in agent ?c) ) )
              (once (on door ?b3) )
              (once (not (and (and (agent_holds ?b3) (not (and (agent_holds ?b3) (in_motion ?b3) ) ) ) (< (distance ?c ?b3) 1) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) 2 )
)
(:scoring
  (count objectMoved:dodgeball:beachball)
)
)



(define (game game-id-970) (:domain many-objects-room-v1)
(:setup
  (forall (?r - dodgeball)
    (game-optional
      (in_motion ?r)
    )
  )
)
(:constraints
  (and
    (preference pillowThrownToDoggieBed
      (exists (?o3 - chair)
        (then
          (once (exists (?d - hexagonal_bin) (< (distance ?o3 ?d) (distance ?d agent)) ) )
          (hold (agent_holds ?o3) )
          (once (in_motion top_drawer) )
        )
      )
    )
  )
)
(:terminal
  (< (count pillowThrownToDoggieBed:hexagonal_bin) (count pillowThrownToDoggieBed:blue_dodgeball:bed) )
)
(:scoring
  (count pillowThrownToDoggieBed:dodgeball)
)
)



(define (game game-id-971) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (forall (?l - hexagonal_bin)
        (not
          (in_motion agent)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference basketMadeFromRug
      (exists (?h - watch)
        (then
          (hold (agent_holds agent) )
          (hold-while (and (and (not (agent_holds agent) ) (and (in_motion ?h) (not (in_motion ?h) ) ) ) (not (> 6 (distance_side room_center upright ?h ?h)) ) ) (on ?h rug) )
          (hold (agent_holds ?h) )
        )
      )
    )
  )
)
(:terminal
  (>= 7 (count-once-per-objects basketMadeFromRug:side_table) )
)
(:scoring
  (* (* (+ 9 (count-once-per-objects basketMadeFromRug:yellow) )
      (+ (* 180 (* 10 10 )
        )
        20
      )
      (count-once basketMadeFromRug:dodgeball)
    )
    5
  )
)
)



(define (game game-id-972) (:domain many-objects-room-v1)
(:setup
  (forall (?c1 - hexagonal_bin ?h - chair)
    (exists (?g - block)
      (and
        (and
          (game-optional
            (< 1 (distance ?g ?g))
          )
          (game-optional
            (in_motion ?g)
          )
          (game-conserved
            (< (distance ?g ?g) (distance_side ?g ?h ?g))
          )
        )
        (forall (?t2 - hexagonal_bin ?b - building)
          (game-conserved
            (not
              (agent_holds ?g)
            )
          )
        )
        (forall (?o ?b - chair ?b - teddy_bear)
          (exists (?g - pillow)
            (not
              (game-conserved
                (in_motion ?b)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference gameObjectToBin
      (exists (?d - dodgeball ?o2 - building ?d - hexagonal_bin)
        (then
          (once (on ?d agent) )
          (once (same_object ?d ?d) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (total-time) 2 )
  )
)
(:scoring
  (count gameObjectToBin:hexagonal_bin)
)
)



(define (game game-id-973) (:domain few-objects-room-v1)
(:setup
  (exists (?d - dodgeball)
    (and
      (game-conserved
        (in desk ?d)
      )
    )
  )
)
(:constraints
  (and
    (preference throwFromEdgeOfRug
      (exists (?r - game_object ?db - color)
        (at-end
          (in ?db bed)
        )
      )
    )
  )
)
(:terminal
  (> 10 30 )
)
(:scoring
  (count-once-per-objects throwFromEdgeOfRug:top_drawer)
)
)



(define (game game-id-974) (:domain medium-objects-room-v1)
(:setup
  (forall (?c - ball ?o - block)
    (exists (?o - (either bridge_block dodgeball))
      (forall (?h - chair)
        (and
          (and
            (and
              (and
                (exists (?b - teddy_bear)
                  (forall (?x - hexagonal_bin)
                    (forall (?l4 - ball ?h - teddy_bear)
                      (exists (?h - hexagonal_bin)
                        (game-conserved
                          (not
                            (agent_holds ?x)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
          (game-conserved
            (not
              (agent_holds ?o)
            )
          )
          (exists (?h - pyramid_block)
            (and
              (or
                (and
                  (game-conserved
                    (toggled_on ?h)
                  )
                  (and
                    (exists (?b - ball)
                      (game-optional
                        (in ?h ?o)
                      )
                    )
                    (and
                      (game-conserved
                        (in_motion ?o)
                      )
                      (exists (?b9 - triangular_ramp)
                        (and
                          (and
                            (and
                              (forall (?b - game_object ?h - cube_block)
                                (exists (?w2 - hexagonal_bin)
                                  (game-optional
                                    (agent_holds ?w2)
                                  )
                                )
                              )
                              (game-conserved
                                (and
                                  (and
                                    (and
                                      (not
                                        (and
                                          (not
                                            (equal_x_position top_drawer ?h)
                                          )
                                          (agent_holds bed)
                                          (agent_holds ?o)
                                        )
                                      )
                                      (opposite ?b9 ?h)
                                    )
                                  )
                                )
                              )
                            )
                            (and
                              (forall (?r - game_object ?o2 - dodgeball)
                                (forall (?o1 - cube_block ?d - drawer)
                                  (game-conserved
                                    (and
                                      (agent_holds ?o2)
                                      (and
                                        (in rug ?o2)
                                        (< 3 (distance ?h desk))
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                      (forall (?o1 - (either dodgeball pen))
                        (game-optional
                          (and
                            (and
                              (in_motion ?h)
                              (in ?o green_golfball)
                            )
                            (and
                              (in_motion ?o)
                              (not
                                (and
                                  (and
                                    (not
                                      (on ?h tan)
                                    )
                                    (in_motion ?o1)
                                  )
                                  (adjacent_side ?o ?o ?o)
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                    (not
                      (game-optional
                        (touch ?o ?h)
                      )
                    )
                  )
                  (not
                    (and
                      (game-conserved
                        (not
                          (in_motion ?h)
                        )
                      )
                      (and
                        (game-optional
                          (and
                            (in ?h ?h)
                            (in_motion ?h)
                          )
                        )
                      )
                    )
                  )
                )
              )
              (game-conserved
                (object_orientation ?h ?o)
              )
              (forall (?b - green_triangular_ramp ?ob - dodgeball ?b ?w2 - doggie_bed)
                (game-conserved
                  (< 1 (distance ?o ?o))
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToBinOffObject
      (exists (?h - hexagonal_bin ?b - hexagonal_bin ?d - red_dodgeball ?w1 - cylindrical_block)
        (then
          (once (not (agent_holds ?w1) ) )
          (hold-while (in_motion ?w1) (adjacent_side ?w1 ?w1 ?w1 tan) )
          (once (and (not (not (game_over ) ) ) (and (in_motion desk) (game_start ) ) ) )
          (hold-while (in_motion ?w1) (agent_holds ?w1) )
        )
      )
    )
    (preference objectsHidden
      (exists (?c - shelf)
        (at-end
          (not
            (and
              (and
                (in ?c ?c)
                (not
                  (and
                    (agent_holds floor)
                    (< 2 1)
                  )
                )
              )
              (agent_holds ?c)
            )
          )
        )
      )
    )
    (preference ballKnocksBlockFromRug
      (exists (?p3 - hexagonal_bin)
        (then
          (once (in_motion desk) )
          (hold (not (not (agent_holds ?p3) ) ) )
          (once (on pink drawer) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (* (* (count ballKnocksBlockFromRug:beachball:basketball) 3 )
      )
      10
    )
    (- (count throwBallToBinOffObject:green:beachball) )
  )
)
(:scoring
  (count-once-per-objects throwBallToBinOffObject:yellow:cube_block)
)
)



(define (game game-id-975) (:domain medium-objects-room-v1)
(:setup
  (exists (?p ?c - hexagonal_bin)
    (forall (?o1 - hexagonal_bin)
      (forall (?b2 - teddy_bear)
        (and
          (and
            (and
              (forall (?o5 - dodgeball)
                (game-conserved
                  (in ?o5 ?o1)
                )
              )
            )
            (game-conserved
              (not
                (in_motion ?o1)
              )
            )
            (forall (?o5 - shelf)
              (and
                (exists (?b4 - doggie_bed)
                  (exists (?h - hexagonal_bin)
                    (forall (?g - dodgeball)
                      (game-optional
                        (in_motion ?c)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - hexagonal_bin)
      (and
        (preference throwMovesBeachballWithoutKnockingTeddy
          (exists (?p2 - game_object)
            (then
              (once (in ?h ?p2) )
              (once (not (same_type ?p2 ?h) ) )
              (once (not (not (on ?h desk) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (total-time) (+ (count-once-per-external-objects throwMovesBeachballWithoutKnockingTeddy:wall) 2 )
  )
)
(:scoring
  (* (external-forall-maximize (* (count throwMovesBeachballWithoutKnockingTeddy:pink_dodgeball:pink) (* (* 300 3 )
          (* 18 (count throwMovesBeachballWithoutKnockingTeddy:dodgeball:dodgeball) )
        )
      )
    )
    (+ (count-same-positions throwMovesBeachballWithoutKnockingTeddy:book) )
  )
)
)



(define (game game-id-976) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?c - cube_block ?b - doggie_bed)
      (game-optional
        (in_motion ?b)
      )
    )
  )
)
(:constraints
  (and
    (preference golfballLandsInBinThroughRamp
      (exists (?bl - dodgeball)
        (then
          (hold (adjacent ?bl ?bl) )
          (hold (and (and (not (on agent ?bl) ) (game_over ) ) (adjacent pink ?bl) (not (same_type ?bl rug) ) (in_motion pink_dodgeball) ) )
          (hold (not (not (and (not (on ?bl ?bl) ) (in ?bl ?bl) ) ) ) )
        )
      )
    )
    (forall (?o - dodgeball ?w1 - (either mug yellow_cube_block) ?r - game_object)
      (and
        (preference ballThrownFromDoor
          (exists (?c - hexagonal_bin)
            (then
              (once (forall (?o2 - (either dodgeball cd dodgeball)) (in_motion ?o2) ) )
              (once (and (in_motion ?r) (on ?r ?c) ) )
              (once (not (and (and (in_motion ?r) (agent_holds ?r) (not (in rug ?r) ) ) (in_motion bed) ) ) )
            )
          )
        )
      )
    )
    (preference gameObjectToBin
      (exists (?b - game_object)
        (then
          (once (and (same_type ?b ?b) (in_motion floor) ) )
          (hold (and (in_motion ?b) (not (in_motion ?b) ) ) )
          (hold (and (and (in_motion pink_dodgeball) (agent_holds agent) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count-once-per-objects gameObjectToBin:pink) (= (* 5 (- (count-once-per-objects gameObjectToBin:hexagonal_bin) )
        )
        (* (+ (* 180 180 )
            (count-total gameObjectToBin:golfball)
          )
          40
        )
      )
    )
    (count-once golfballLandsInBinThroughRamp:dodgeball)
  )
)
(:scoring
  (count-once-per-objects golfballLandsInBinThroughRamp:dodgeball)
)
)



(define (game game-id-977) (:domain few-objects-room-v1)
(:setup
  (exists (?b9 - dodgeball ?l1 - dodgeball)
    (or
      (game-optional
        (in_motion ?l1)
      )
      (and
        (exists (?h - hexagonal_bin)
          (and
            (and
              (exists (?c - hexagonal_bin)
                (game-conserved
                  (on ?h ?l1)
                )
              )
            )
            (game-optional
              (agent_holds ?h)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference smallItemsInPlace
      (exists (?w - hexagonal_bin ?c2 - (either beachball pyramid_block))
        (at-end
          (in ?c2 ?c2)
        )
      )
    )
  )
)
(:terminal
  (>= (count smallItemsInPlace:pink:pink) 3 )
)
(:scoring
  (count-once-per-objects smallItemsInPlace:beachball:white:basketball)
)
)



(define (game game-id-978) (:domain medium-objects-room-v1)
(:setup
  (forall (?h - hexagonal_bin ?r - (either game_object laptop))
    (game-optional
      (and
        (and
          (and
            (in_motion desk)
            (and
              (> 1 1)
              (in ?r ?r)
              (touch yellow ?r)
            )
          )
          (and
            (exists (?o4 ?c - curved_wooden_ramp)
              (in_motion agent)
            )
            (in_motion ?r)
          )
        )
        (in_motion ?r)
      )
    )
  )
)
(:constraints
  (and
    (preference objectToBinOnFirstTry
      (exists (?b5 - hexagonal_bin ?b - cube_block)
        (then
          (once (agent_holds ?b) )
          (hold-while (in ?b agent) (in_motion ?b) (not (and (on ?b ?b) (and (toggled_on ?b) (agent_holds ?b) ) ) ) )
          (once (in_motion ?b) )
        )
      )
    )
  )
)
(:terminal
  (> 5 (count-once-per-objects objectToBinOnFirstTry:green) )
)
(:scoring
  (* (* 8 (count-once objectToBinOnFirstTry:purple) )
    (count-shortest objectToBinOnFirstTry:beachball)
    (* (count-once-per-objects objectToBinOnFirstTry:golfball) 5 )
  )
)
)



(define (game game-id-979) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (in pillow rug)
    )
    (and
      (exists (?c - shelf)
        (and
          (and
            (forall (?h - curved_wooden_ramp)
              (game-optional
                (agent_holds ?c)
              )
            )
          )
          (game-optional
            (or
              (not
                (and
                  (not
                    (not
                      (and
                        (agent_holds rug)
                        (and
                          (in agent ?c)
                          (agent_holds ?c)
                        )
                      )
                    )
                  )
                  (touch ?c desk)
                )
              )
              (in_motion ?c)
            )
          )
          (game-conserved
            (agent_holds ?c)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference cubeBlockThrownToTopShelf
      (exists (?b7 - (either mug lamp))
        (then
          (hold-while (in_motion ?b7) (agent_holds ?b7) (and (<= (building_size ?b7) (distance rug ?b7)) (agent_holds ?b7) ) )
          (once (agent_holds ?b7) )
          (once (in_motion ?b7) )
        )
      )
    )
    (preference throwAttemptFromDoor
      (exists (?d - tall_cylindrical_block ?c - doggie_bed ?b ?d - building)
        (then
          (once (and (not (and (and (not (and (in_motion ?d) (not (and (in_motion desk) (adjacent ?d ?b) ) ) ) ) (on ?b desk) (exists (?s - color) (same_type ?s ?d) ) ) (agent_holds ?d) (agent_holds ?b) ) ) (object_orientation ?d ?b) ) )
          (once (not (and (and (agent_holds ?b) (adjacent ?b ?b) ) (or (on ?d ?d) (on ?b ?d) ) ) ) )
          (once (in ?d ?b) )
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (> 2 (count-once-per-external-objects cubeBlockThrownToTopShelf:book) )
      (>= (count throwAttemptFromDoor:golfball) 6 )
    )
    (< (count-overlapping cubeBlockThrownToTopShelf:golfball) (count throwAttemptFromDoor:pink:dodgeball) )
    (>= (total-time) 2 )
  )
)
(:scoring
  (* 5 (count throwAttemptFromDoor:red) )
)
)



(define (game game-id-980) (:domain few-objects-room-v1)
(:setup
  (forall (?f - pyramid_block ?l1 - red_dodgeball ?g - doggie_bed)
    (exists (?w1 - blinds ?h - (either hexagonal_bin yellow_cube_block basketball dodgeball))
      (game-conserved
        (in_motion agent)
      )
    )
  )
)
(:constraints
  (and
    (forall (?p3 - (either hexagonal_bin key_chain pencil golfball) ?h - hexagonal_bin)
      (and
        (preference ballKnocksTeddy
          (exists (?c - hexagonal_bin)
            (at-end
              (and
                (agent_holds ?h)
                (in_motion block)
                (broken bed)
              )
            )
          )
        )
      )
    )
    (preference pinkObjectMovedToRoomCenter
      (exists (?d - golfball ?c - hexagonal_bin)
        (at-end
          (and
            (not
              (adjacent_side ?c ?c bed ?c)
            )
            (< (distance ?c ?c) (distance ?c ?c))
          )
        )
      )
    )
  )
)
(:terminal
  (< (total-score) (total-time) )
)
(:scoring
  (count pinkObjectMovedToRoomCenter:red)
)
)



(define (game game-id-981) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (< 1 0.5)
  )
)
(:constraints
  (and
    (forall (?o3 - ball ?d - dodgeball ?l4 ?b - hexagonal_bin)
      (and
        (preference ballThrownHitsAgent
          (exists (?g - hexagonal_bin)
            (then
              (once (on ?b agent) )
              (once (opposite ?g ?l4) )
              (hold (in_motion ?l4) )
            )
          )
        )
        (preference ballThrownMissesEverything
          (exists (?d - curved_wooden_ramp)
            (then
              (hold (on ?l4 yellow) )
              (once (on ?d ?b) )
              (once (in_motion pink_dodgeball) )
            )
          )
        )
        (preference throwToDrawerOrBin
          (exists (?h - game_object ?h - golfball)
            (then
              (once (agent_holds ?h) )
              (once (not (agent_holds south_wall) ) )
              (once (not (in ?b green) ) )
              (hold (on floor ?h) )
              (once-measure (in_motion ?l4) (distance ?l4 desk) )
              (hold (not (agent_holds bed) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 8 (count ballThrownMissesEverything:doggie_bed:dodgeball) )
  )
)
(:scoring
  (count-once throwToDrawerOrBin:beachball:basketball)
)
)



(define (game game-id-982) (:domain few-objects-room-v1)
(:setup
  (forall (?d - cube_block)
    (exists (?l3 - doggie_bed ?b6 - hexagonal_bin ?d - cube_block)
      (not
        (game-conserved
          (not
            (not
              (in_motion ?d)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c - block)
      (and
        (preference dodgeballHitsPillowWithoutTouchingBlock
          (exists (?o4 - hexagonal_bin)
            (then
              (once (and (adjacent ?c ?c) (agent_holds ?o4) ) )
              (once (in_motion ?o4) )
              (once (adjacent ?c ?o4) )
            )
          )
        )
        (preference dodgeballHitsBin
          (exists (?h - golfball ?b - (either cube_block pillow key_chain))
            (then
              (once (agent_holds ?c) )
              (once (on ?b ?c) )
              (hold (or (touch ?c ?c) (on ?b ?c) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects dodgeballHitsBin:book) (* 3 2 )
  )
)
(:scoring
  (count-total dodgeballHitsBin:dodgeball)
)
)



(define (game game-id-983) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?l4 - (either blue_cube_block pyramid_block))
      (game-conserved
        (not
          (not
            (equal_z_position ?l4 ?l4)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference beachballOnRug
      (exists (?c1 - cube_block ?b - hexagonal_bin)
        (then
          (once (not (and (and (exists (?r1 - book ?w2 - (either flat_block pyramid_block)) (not (on ?b ?w2) ) ) (on ?b ?b) ) (open ?b) ) ) )
          (once (in_motion ?b) )
        )
      )
    )
  )
)
(:terminal
  (<= 2 (total-time) )
)
(:scoring
  (count-once-per-objects beachballOnRug:dodgeball:blue_dodgeball)
)
)



(define (game game-id-984) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?b3 - dodgeball ?d - game_object ?o - (either cube_block blue_cube_block cube_block))
      (and
        (and
          (forall (?t - hexagonal_bin)
            (exists (?h - building)
              (forall (?b - shelf ?b8 - cube_block)
                (game-optional
                  (or
                    (equal_z_position ?o ?h)
                    (and
                      (in_motion desk)
                      (agent_holds ?t)
                    )
                  )
                )
              )
            )
          )
        )
        (game-conserved
          (in_motion ?o)
        )
      )
    )
    (game-optional
      (exists (?c - dodgeball ?w1 - (either desktop wall) ?s - ball)
        (adjacent ?s ?s)
      )
    )
  )
)
(:constraints
  (and
    (preference itemsBroken
      (exists (?b1 - chair)
        (then
          (once (exists (?c3 - dodgeball ?p - doggie_bed) (agent_holds ?p) ) )
          (hold (in ?b1 ?b1) )
          (once (not (on ?b1 front) ) )
        )
      )
    )
    (forall (?c - curved_wooden_ramp)
      (and
        (preference throwAttempt
          (then
            (once (not (not (on rug ?c) ) ) )
            (once (adjacent ?c ?c) )
            (once (not (not (not (not (or (in_motion right) (adjacent blue ?c) ) ) ) ) ) )
          )
        )
      )
    )
  )
)
(:terminal
  (<= 180 3 )
)
(:scoring
  (count-once-per-external-objects throwAttempt:side_table)
)
)



(define (game game-id-985) (:domain medium-objects-room-v1)
(:setup
  (forall (?r1 - dodgeball ?b - blue_pyramid_block)
    (game-optional
      (and
        (in rug upside_down)
        (agent_holds ?b)
      )
    )
  )
)
(:constraints
  (and
    (forall (?c - (either pyramid_block dodgeball book blue_cube_block alarm_clock cd cellphone) ?d2 - (either yellow_cube_block tall_cylindrical_block))
      (and
        (preference teddyBearLandsInBin
          (exists (?g - doggie_bed)
            (then
              (once (in_motion ?d2) )
              (once (adjacent ?g ?d2) )
              (once (adjacent_side ?d2 ?d2 ?g) )
              (hold (game_over ) )
              (hold (or (not (agent_holds ?d2) ) (and (not (and (and (rug_color_under ?d2 ?g) (agent_holds agent) (adjacent ?g ?d2) ) (not (on ?d2 ?g) ) ) ) (above agent agent) ) ) )
            )
          )
        )
        (preference throwFromEdgeOfRug
          (exists (?d - dodgeball ?o4 - wall)
            (then
              (once (on ?o4 ?o4) )
              (hold (agent_holds front_left_corner) )
              (once (same_color ?o4 ?o4) )
            )
          )
        )
        (preference throwBallToBin
          (exists (?h - drawer)
            (then
              (hold (adjacent agent agent) )
              (once (< 2 7) )
              (hold (not (in_motion ?d2) ) )
              (once (and (not (and (in_motion ?h) (not (not (in_motion ?d2) ) ) ) ) (agent_holds ?h) ) )
            )
          )
        )
      )
    )
    (forall (?b - beachball)
      (and
        (preference gameObjectToBin
          (exists (?tb - (either cylindrical_block alarm_clock))
            (then
              (once (agent_holds ?b) )
              (once (between rug ?b ?tb) )
              (once (agent_holds ?tb) )
            )
          )
        )
      )
    )
    (preference blockInTowerKnockedByDodgeball
      (exists (?w2 - color)
        (then
          (once (not (and (and (in_motion right) (faces ?w2 ?w2) ) (agent_holds ?w2) ) ) )
          (once (not (or (not (exists (?b6 ?s - chair) (not (= (distance ?s ?w2) (distance ?w2 ?w2)) ) ) ) (on ?w2 ?w2) ) ) )
          (hold (on ?w2 ?w2) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) 2 )
)
(:scoring
  (count gameObjectToBin:basketball)
)
)



(define (game game-id-986) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (< 2 1)
  )
)
(:constraints
  (and
    (forall (?d - (either mug dodgeball floor dodgeball) ?o - curved_wooden_ramp)
      (and
        (preference golfballLandsInBinThroughRamp
          (exists (?h - hexagonal_bin)
            (then
              (hold-while (and (exists (?o1 - wall) (same_type desk door) ) (in_motion ?o) ) (in_motion bed) )
              (once (not (or (> (distance ?h ?h) 1) (in_motion ?o) ) ) )
              (hold (on ?h ?o) )
            )
          )
        )
        (preference binKnockedOver
          (exists (?p - pillow)
            (then
              (once (agent_holds ?o) )
              (once (adjacent ?o ?p) )
              (once (agent_holds ?o) )
            )
          )
        )
        (preference ballThrownToChair
          (exists (?d - dodgeball)
            (then
              (hold (adjacent ?d ?d) )
              (once (and (and (and (touch ?o ?d) (and (and (in ?o ?d) (not (in_motion ?d) ) ) (not (on ?d door) ) ) ) (exists (?p ?h - hexagonal_bin) (agent_holds ?p) ) (not (and (agent_holds agent) (above ?d ?d) ) ) ) (agent_holds bed) ) )
              (once (agent_holds ?o) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (count binKnockedOver:basketball:hexagonal_bin) (total-time) )
    (>= (count binKnockedOver:golfball) 6 )
    (or
      (>= (* (+ (* (* (* (count-once golfballLandsInBinThroughRamp:golfball) 3 )
                8
              )
              (count ballThrownToChair:bed:wall)
            )
            (count-once-per-objects binKnockedOver:dodgeball)
            (* (* 6 (* (* (+ (* (count binKnockedOver:dodgeball) (count-once binKnockedOver:beachball) )
                      (* 10 10 )
                      20
                    )
                  )
                  (count-once-per-objects ballThrownToChair:red)
                  (* 4 9 )
                )
              )
              9
            )
            15
          )
          5
        )
        (count ballThrownToChair:beachball)
      )
      (>= (+ (count-once-per-objects ballThrownToChair:beachball) (+ (external-forall-minimize (count-once-per-objects golfballLandsInBinThroughRamp:golfball) ) (* (* 3 (count-once-per-external-objects ballThrownToChair:basketball) )
              (+ (+ (+ (count-once-per-objects binKnockedOver:blue_dodgeball) (- (* 10 (+ (* 10 18 )
                          (count-once binKnockedOver:pink_dodgeball)
                          (count-once binKnockedOver:dodgeball)
                        )
                        (= (count-once ballThrownToChair:golfball) 5 (count-once-per-objects golfballLandsInBinThroughRamp:yellow) )
                      )
                      (count golfballLandsInBinThroughRamp)
                    )
                  )
                  (external-forall-maximize
                    (count-once ballThrownToChair:blue_cube_block)
                  )
                )
                (- 3 )
              )
              (* 2 (count-once binKnockedOver:yellow) )
            )
          )
          (+ (* 0 (count ballThrownToChair:doggie_bed:dodgeball) )
            2
          )
        )
        (* (count binKnockedOver:dodgeball) (count-once-per-objects binKnockedOver:pink) (- 50 )
          (count golfballLandsInBinThroughRamp:cylindrical_block:dodgeball)
        )
      )
      (>= (total-time) 3 )
    )
  )
)
(:scoring
  (external-forall-maximize
    (* (>= 40 (* (count ballThrownToChair:side_table:dodgeball) 3 )
      )
      (count binKnockedOver:beachball)
    )
  )
)
)



(define (game game-id-987) (:domain medium-objects-room-v1)
(:setup
  (forall (?h - wall ?r - hexagonal_bin)
    (and
      (not
        (and
          (not
            (and
              (forall (?p - curved_wooden_ramp)
                (game-optional
                  (is_setup_object agent)
                )
              )
            )
          )
        )
      )
      (game-optional
        (in_motion ?r)
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToBinOffObject
      (exists (?o2 - ball ?c - teddy_bear)
        (then
          (hold (above ?c ?c) )
          (once (not (agent_holds ?c) ) )
          (hold (<= (distance ?c ?c) 1) )
        )
      )
    )
    (preference gameObjectToBin
      (exists (?o - dodgeball ?b - yellow_cube_block)
        (then
          (hold (not (adjacent ?b ?b) ) )
          (once (agent_holds ?b) )
          (once (agent_holds ?b) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-once-per-objects gameObjectToBin:hexagonal_bin) (total-time) )
    (not
      (>= (count-shortest throwBallToBinOffObject:golfball:book) 5 )
    )
    (>= (count throwBallToBinOffObject:dodgeball) 1 )
  )
)
(:scoring
  (- (count-once-per-external-objects throwBallToBinOffObject:red) )
)
)



(define (game game-id-988) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (exists (?g - ball ?p2 - (either pyramid_block flat_block))
      (in_motion ?p2)
    )
  )
)
(:constraints
  (and
    (forall (?b - doggie_bed)
      (and
        (preference ballThrownHitsAgent
          (exists (?b2 - game_object)
            (then
              (once (and (on ?b ?b2) (and (agent_holds top_drawer) (= (distance ?b ?b) 1 (building_size ?b2)) ) ) )
              (once (not (not (and (game_start ) (not (in_motion ?b) ) ) ) ) )
              (once (exists (?c - ball) (agent_holds agent) ) )
            )
          )
        )
      )
    )
    (preference laptopAndBookInPlace
      (exists (?d - dodgeball ?b - hexagonal_bin)
        (then
          (hold (faces ?b ?b) )
          (hold-while (above ?b ?b) (not (agent_holds main_light_switch) ) (in_motion ?b) (and (in ?b ?b) (object_orientation ?b ?b) (game_start ) ) )
          (once (and (adjacent ?b ?b) (and (exists (?b9 - block) (not (and (not (agent_holds agent) ) (on ?b9 ?b) ) ) ) (and (and (agent_holds ?b) (adjacent ?b ?b) ) (in_motion ?b) (not (and (and (and (on ?b desk) (agent_holds ?b) ) (agent_holds ?b) ) (and (and (equal_z_position ?b ?b) (< (x_position ?b) 1) (above ?b ?b) ) (in ?b bed) ) (and (and (and (in_motion ?b) (in_motion ?b) ) (agent_holds ?b) ) (not (exists (?l3 - chair) (exists (?b - red_dodgeball) (and (in_motion front) (and (exists (?b2 - ball ?c - hexagonal_bin) (not (in ?l3 room_center) ) ) (and (not (agent_holds ?l3) ) ) ) ) ) ) ) ) ) ) (agent_holds ?b) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (<= (count ballThrownHitsAgent:pink:purple) 4 )
    (> (count-once ballThrownHitsAgent:golfball) 40 )
  )
)
(:scoring
  (count laptopAndBookInPlace:alarm_clock)
)
)



(define (game game-id-989) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (adjacent front bed)
  )
)
(:constraints
  (and
    (preference ballOnBedAtEnd
      (exists (?h - cube_block)
        (at-end
          (agent_holds ?h)
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) 5 )
)
(:scoring
  (count-overlapping ballOnBedAtEnd:beachball)
)
)



(define (game game-id-990) (:domain many-objects-room-v1)
(:setup
  (exists (?o3 - block)
    (and
      (not
        (game-optional
          (not
            (on south_wall ?o3)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttemptFromBehindBlock
      (exists (?bl - dodgeball)
        (at-end
          (and
            (and
              (and
                (or
                  (not
                    (agent_holds ?bl)
                  )
                  (and
                    (toggled_on ?bl)
                    (same_type ?bl ?bl)
                  )
                )
                (object_orientation ?bl ?bl)
              )
              (on ?bl ?bl)
            )
            (object_orientation ?bl ?bl)
          )
        )
      )
    )
    (preference thrownObjectHitsComputer
      (exists (?r - dodgeball)
        (then
          (once (exists (?g - dodgeball) (on ?r ?r) ) )
          (hold (not (not (in_motion ?r) ) ) )
          (once (in_motion ?r) )
        )
      )
    )
  )
)
(:terminal
  (> (total-score) 10 )
)
(:scoring
  (* (count-once thrownObjectHitsComputer:beachball) 10 (count throwAttemptFromBehindBlock:dodgeball) )
)
)



(define (game game-id-991) (:domain few-objects-room-v1)
(:setup
  (forall (?o - wall)
    (game-conserved
      (not
        (in_motion ?o)
      )
    )
  )
)
(:constraints
  (and
    (preference towerFallsWhileBuilding
      (exists (?h - curved_wooden_ramp)
        (then
          (once (and (and (and (and (and (not (agent_holds desk) ) (broken door) ) (adjacent ?h block) (object_orientation ?h ?h) (in_motion ?h) (and (not (> 5 (distance agent agent)) ) (and (and (agent_holds agent) (in_motion ?h) ) (faces ?h ?h) ) ) (adjacent ?h blue) (agent_holds desk) ) (exists (?c1 - block) (adjacent_side ?c1 ?h ?h) ) (agent_holds rug) (not (in agent ?h) ) (not (on ?h back) ) (and (not (on ?h desk) ) (and (and (exists (?c - block) (in_motion upright) ) (in ?h ?h) ) (in_motion agent) ) ) (agent_holds ?h) (not (and (not (and (in_motion ?h) (between ?h ?h agent) ) ) (not (and (not (agent_holds ?h) ) (adjacent ?h ?h) ) ) (and (and (or (object_orientation desk ?h) (not (not (agent_holds ?h) ) ) ) (or (not (on ?h ?h) ) ) ) (and (not (same_color ?h ?h) ) (not (agent_holds ?h) ) ) ) ) ) (agent_holds rug) (agent_holds ?h) ) (agent_crouches ) (in_motion bed) ) (touch ?h ?h) (agent_holds ?h) (agent_holds ?h) ) )
          (once (in_motion ?h) )
          (once (on ?h ?h) )
        )
      )
    )
  )
)
(:terminal
  (not
    (not
      (or
        (or
          (>= (- (count towerFallsWhileBuilding:dodgeball) )
            30
          )
          (>= (total-score) 5 )
          (>= 2 (count-once-per-objects towerFallsWhileBuilding:dodgeball) )
          (>= (count-same-positions towerFallsWhileBuilding) (count towerFallsWhileBuilding:dodgeball) )
        )
      )
    )
  )
)
(:scoring
  (count towerFallsWhileBuilding:pyramid_block)
)
)



(define (game game-id-992) (:domain medium-objects-room-v1)
(:setup
  (exists (?d - block)
    (not
      (and
        (exists (?d - hexagonal_bin)
          (exists (?t2 - hexagonal_bin)
            (game-conserved
              (not
                (agent_holds ?d)
              )
            )
          )
        )
        (game-conserved
          (and
            (not
              (adjacent ?d ?d)
            )
            (adjacent ?d ?d)
          )
        )
        (or
          (forall (?o - cube_block ?h - (either main_light_switch doggie_bed))
            (and
              (exists (?l3 - building)
                (forall (?c5 - (either alarm_clock blue_cube_block basketball) ?l2 - sliding_door)
                  (forall (?o - flat_block)
                    (forall (?c6 - teddy_bear)
                      (and
                        (game-optional
                          (agent_holds agent)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
          (exists (?h - (either pyramid_block dodgeball cellphone) ?h - dodgeball)
            (game-conserved
              (agent_holds ?h)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockFromRugToDesk
      (exists (?c6 ?c3 - teddy_bear ?r1 - dodgeball ?b - cube_block ?d2 ?w2 - game_object)
        (then
          (once (agent_holds ?d2) )
          (once (and (not (in_motion ?w2) ) (< (distance ?w2 floor) (distance ?d2 ?d2)) ) )
          (once (and (not (in_motion ?w2) ) (not (not (and (game_start ) (in_motion ?w2) ) ) ) (not (agent_holds ?d2) ) (or (in ?w2 ?d2) (in_motion ?d2) ) ) )
        )
      )
    )
    (forall (?d - ball ?h - game_object)
      (and
        (preference redDodgeballThrownToBinWithoutTouchingFloor
          (at-end
            (agent_holds ?h)
          )
        )
      )
    )
    (preference smallItemsInPlace
      (exists (?b9 ?b ?d ?h - hexagonal_bin ?d - flat_block ?c - golfball ?h - (either cellphone game_object))
        (at-end
          (and
            (not
              (adjacent ?h ?h)
            )
            (exists (?b10 - teddy_bear)
              (not
                (faces ?b10 front)
              )
            )
            (and
              (agent_holds ?h)
              (adjacent ?h ?h)
              (and
                (and
                  (and
                    (not
                      (adjacent upright ?h)
                    )
                    (on ?h ?h)
                  )
                  (in ?h ?h)
                )
                (adjacent ?h desk)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= 15 (* 5 4 )
      )
      (and
        (>= 5 (* (count-once-per-objects redDodgeballThrownToBinWithoutTouchingFloor:beachball:dodgeball) 2 )
        )
      )
    )
  )
)
(:scoring
  (count-once-per-objects smallItemsInPlace:golfball)
)
)



(define (game game-id-993) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (game-conserved
        (exists (?b2 - hexagonal_bin)
          (>= 1 1)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o - wall)
      (and
        (preference objectLandsInBin
          (exists (?p - (either laptop desktop cellphone blue_cube_block) ?g - (either lamp dodgeball))
            (then
              (hold-while (and (and (and (on ?o ?g) (or (on agent ?g) (agent_holds ?o) ) ) (< (distance ?o ?o) 7) (and (agent_holds ?g) (in_motion ?g) ) ) (and (in_motion ?g) (in_motion ?g) (< (distance door ?o) 1) (and (agent_holds agent) (touch ?g ?o) ) ) ) (agent_crouches ) )
              (once (and (in ?g ?o) (not (not (agent_holds ?g) ) ) (and (on room_center room_center) (or (or (open ?g) (in ?g ?o) (not (adjacent ?o agent) ) ) (equal_z_position ?g ?o) ) ) ) )
              (once (in_motion ?g) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count objectLandsInBin:doggie_bed:white) (count objectLandsInBin:dodgeball) )
    (<= (count objectLandsInBin:yellow) 1 )
  )
)
(:scoring
  (+ (count objectLandsInBin:beachball) (* -10 (count objectLandsInBin:dodgeball:brown) )
    2
    (< (count objectLandsInBin:basketball:dodgeball) (count-once objectLandsInBin:pink) )
  )
)
)



(define (game game-id-994) (:domain few-objects-room-v1)
(:setup
  (forall (?b - ball)
    (exists (?b - pyramid_block)
      (and
        (game-conserved
          (= (distance ?b ?b) 2)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?w1 - triangular_ramp)
      (and
        (preference throwToBin
          (exists (?b8 - building)
            (then
              (hold (not (same_color ?b8 ?w1) ) )
              (hold-while (adjacent ?w1 ?b8) (in_motion bed) (agent_holds ?w1) )
            )
          )
        )
      )
    )
    (preference blockIncorrectlyPicked
      (exists (?o - (either laptop desktop) ?b5 - hexagonal_bin ?x ?c ?h - game_object)
        (then
          (once (in_motion ?x) )
          (once (adjacent brown ?c) )
          (hold (not (not (in_motion ?c) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count throwToBin:rug:dodgeball) (count blockIncorrectlyPicked:blue_dodgeball) )
)
(:scoring
  (* (* (external-forall-minimize (count-same-positions blockIncorrectlyPicked:blue_dodgeball) ) (external-forall-maximize (count throwToBin:doggie_bed:blue_dodgeball) ) )
    (* (count blockIncorrectlyPicked:basketball:green) (count throwToBin:golfball) )
  )
)
)



(define (game game-id-995) (:domain few-objects-room-v1)
(:setup
  (or
    (and
      (game-conserved
        (exists (?b - block ?t - chair)
          (agent_holds ?t)
        )
      )
    )
    (exists (?c - ball ?b - hexagonal_bin)
      (forall (?w - game_object)
        (game-conserved
          (in desk ?b)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c - dodgeball)
      (and
        (preference greenObjectMovedToRoomCenter
          (exists (?c - hexagonal_bin ?h - (either cd pen))
            (at-end
              (exists (?h - hexagonal_bin)
                (not
                  (forall (?l - golfball)
                    (touch rug rug)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-once-per-objects greenObjectMovedToRoomCenter:doggie_bed) (* (* 6 (count-once greenObjectMovedToRoomCenter:beachball:bed) )
        (external-forall-minimize
          (* (count greenObjectMovedToRoomCenter:basketball:dodgeball) (count greenObjectMovedToRoomCenter:book) )
        )
      )
    )
    (>= (count greenObjectMovedToRoomCenter:side_table:dodgeball) (count greenObjectMovedToRoomCenter:dodgeball) )
    (and
      (>= (count greenObjectMovedToRoomCenter:hexagonal_bin) (count greenObjectMovedToRoomCenter:red) )
    )
  )
)
(:scoring
  (* (count-once-per-objects greenObjectMovedToRoomCenter:beachball) (count-same-positions greenObjectMovedToRoomCenter:brown:golfball:pink_dodgeball) 10 (count-once-per-objects greenObjectMovedToRoomCenter:basketball) (count-once greenObjectMovedToRoomCenter:basketball) )
)
)



(define (game game-id-996) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (not
      (not
        (agent_holds pink_dodgeball)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToRug
      (exists (?t - block ?l2 - ball ?b6 - game_object)
        (then
          (once (object_orientation desk ?b6) )
          (once (not (agent_holds ?b6) ) )
          (once (and (and (in ?b6 ?b6) (equal_z_position rug ?b6) ) (agent_holds ?b6) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (> (>= (count-once-per-objects ballThrownToRug:yellow) (count ballThrownToRug:basketball) )
      (count-longest ballThrownToRug:dodgeball)
    )
  )
)
(:scoring
  (count ballThrownToRug:dodgeball:green)
)
)



(define (game game-id-997) (:domain few-objects-room-v1)
(:setup
  (exists (?c2 - building)
    (game-conserved
      (in_motion ?c2)
    )
  )
)
(:constraints
  (and
    (forall (?o - ball)
      (and
        (preference pinkObjectMovedToRoomCenter
          (exists (?d - ball)
            (then
              (once (not (adjacent_side ?o door agent) ) )
              (once (not (same_object bed ?d) ) )
              (once (agent_holds ?d) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> 10 (count pinkObjectMovedToRoomCenter:dodgeball) )
)
(:scoring
  (count-same-positions pinkObjectMovedToRoomCenter:basketball:yellow)
)
)



(define (game game-id-998) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?o ?db ?o1 ?x - dodgeball ?h - cube_block)
      (forall (?b - ball)
        (game-optional
          (in_motion ?b)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c3 - dodgeball)
      (and
        (preference throwBallToDoggieBed
          (exists (?b2 - ball)
            (then
              (once (touch ?b2 desk) )
              (once (on ?c3 ?c3) )
              (once (or (agent_holds ?c3) (and (exists (?p1 - cube_block ?t - (either book dodgeball)) (broken ?b2) ) (on ?b2 ?b2) (and (agent_holds agent) (not (in_motion ?c3) ) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (= (count-once-per-objects throwBallToDoggieBed:orange) (count-once throwBallToDoggieBed:red) )
)
(:scoring
  (<= (count-once-per-objects throwBallToDoggieBed:golfball) 2 )
)
)



(define (game game-id-999) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (agent_holds desk)
  )
)
(:constraints
  (and
    (preference golfballUnderBridgeWithoutTouchingBlock
      (exists (?b - dodgeball)
        (then
          (hold-while (not (not (< (distance ?b ?b) (distance ?b ?b)) ) ) (or (in_motion ?b) (on ?b ?b) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-measure golfballUnderBridgeWithoutTouchingBlock:pink) 10 )
)
(:scoring
  (count-once-per-objects golfballUnderBridgeWithoutTouchingBlock:beachball)
)
)



(define (game game-id-1000) (:domain few-objects-room-v1)
(:setup
  (and
    (game-conserved
      (agent_holds bed)
    )
    (game-optional
      (= 3)
    )
  )
)
(:constraints
  (and
    (preference dodgeballThrownToBinFromDesk
      (exists (?d - hexagonal_bin ?t - game_object ?l - book)
        (then
          (once (on ?l ?l) )
          (once (in_motion ?l) )
          (hold (and (in_motion ?l) (= 2 (distance ?l ?l) 1) ) )
        )
      )
    )
    (forall (?o ?b - ball ?o - game_object)
      (and
        (preference ballOnBedAtEnd
          (exists (?c - (either cd book))
            (at-end
              (and
                (in ?c ?c)
                (and
                  (and
                    (equal_z_position ?c ?o)
                    (and
                      (not
                        (not
                          (not
                            (not
                              (and
                                (adjacent ?o ?c)
                                (in ?c top_drawer)
                              )
                            )
                          )
                        )
                      )
                      (in agent ?o)
                    )
                    (< (x_position ?c) 2)
                  )
                  (and
                    (in_motion ?c)
                    (in_motion ?o)
                  )
                )
              )
            )
          )
        )
        (preference ballThrowAttempt
          (exists (?b - (either yellow_cube_block pyramid_block))
            (then
              (once (agent_holds ?b) )
              (hold (object_orientation ?o ?o) )
              (once (not (and (and (rug_color_under ?o ?b) (rug_color_under ?o ?b) ) (agent_holds ?b) ) ) )
            )
          )
        )
      )
    )
    (preference throwAttempt
      (exists (?h - red_pyramid_block)
        (then
          (hold-while (and (or (and (= 1 1) (in_motion ?h) ) (agent_holds ?h) (touch ?h ?h) ) (in_motion ?h) ) (adjacent ?h desk) )
          (hold-while (and (and (and (not (agent_holds blue) ) (on ?h ?h) ) (or (in_motion ?h) ) ) (not (not (on west_wall ?h) ) ) (and (agent_holds ?h) (not (in_motion ?h) ) ) ) (exists (?b5 - pillow ?l2 - drawer) (in ?h ?l2) ) (agent_holds ?h) )
          (once (and (and (open floor) (in_motion ?h) ) (adjacent agent rug) ) )
        )
      )
    )
  )
)
(:terminal
  (> 3 (total-score) )
)
(:scoring
  (count-once-per-objects throwAttempt:hexagonal_bin:red)
)
)



(define (game game-id-1001) (:domain medium-objects-room-v1)
(:setup
  (exists (?d - building)
    (exists (?h - (either dodgeball tall_cylindrical_block dodgeball tall_cylindrical_block cube_block dodgeball doggie_bed))
      (forall (?o1 - (either pyramid_block))
        (game-optional
          (and
            (not
              (not
                (on ?h blue)
              )
            )
            (adjacent ?d ?h)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballDroppedInBin
      (exists (?w2 - triangular_ramp)
        (at-end
          (agent_holds ?w2)
        )
      )
    )
  )
)
(:terminal
  (>= (/ (* (>= 2 3 )
        (* (count ballDroppedInBin:basketball:dodgeball) (count-once ballDroppedInBin:dodgeball) )
        2
      )
      (count-same-positions ballDroppedInBin:red)
    )
    40
  )
)
(:scoring
  (* 10 3 (count-once-per-external-objects ballDroppedInBin:pink:beachball) (count ballDroppedInBin:beachball) (count ballDroppedInBin:dodgeball) )
)
)



(define (game game-id-1002) (:domain medium-objects-room-v1)
(:setup
  (exists (?b - hexagonal_bin)
    (game-conserved
      (above ?b ?b)
    )
  )
)
(:constraints
  (and
    (preference cubeBlockThrowAttempt
      (exists (?w2 ?d - block)
        (then
          (hold (< 2 (distance_side ?d ?d ?w2 rug)) )
          (hold (touch ?d blue) )
          (hold-while (agent_holds ?w2) (not (same_color ?w2 agent) ) )
        )
      )
    )
  )
)
(:terminal
  (<= (* 4 5 )
    (total-score)
  )
)
(:scoring
  (* (external-forall-maximize (* 12 (count-once-per-objects cubeBlockThrowAttempt:blue_pyramid_block) )
    )
    2
  )
)
)



(define (game game-id-1003) (:domain medium-objects-room-v1)
(:setup
  (forall (?c - hexagonal_bin)
    (forall (?l - dodgeball)
      (exists (?h - cube_block)
        (game-optional
          (adjacent agent ?l)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwGolfballToBin
      (exists (?g - (either pillow bridge_block) ?h - ball ?l2 - dodgeball)
        (then
          (hold-while (and (agent_holds ?l2) (agent_holds ?l2) ) (on ?l2 ?l2) (in_motion room_center) (adjacent ?l2 ?l2) )
          (once (and (and (and (agent_holds ?l2) (and (adjacent floor desk) (not (not (rug_color_under ?l2 ?l2) ) ) ) ) (and (and (agent_holds desk) (and (equal_x_position ?l2 top_drawer) (not (on ?l2 door) ) ) (in_motion ?l2) (in_motion ?l2) (exists (?c - game_object ?c2 - building) (adjacent ?c2 ?l2) ) (and (and (not (and (and (agent_holds ?l2) (on ?l2 ?l2) (and (not (agent_holds ?l2) ) (and (adjacent ?l2 rug) (agent_holds ?l2) ) (on rug ?l2) (not (and (and (in door ?l2) (same_color ?l2 ?l2) (agent_holds ?l2) ) (and (not (forall (?b - blue_pyramid_block) (same_type ?b ?l2) ) ) (and (agent_holds ?l2) (faces ?l2 ?l2) (agent_holds ?l2) ) ) ) ) ) (not (not (in ?l2 ?l2) ) ) ) (and (< 9 4) (in_motion ?l2) ) ) ) (and (agent_holds ?l2) (not (not (in_motion ?l2) ) ) ) (not (in_motion ?l2) ) (and (= 1 1) (same_type front ?l2) (agent_holds ?l2) ) ) (not (in_motion ?l2) ) ) (< 1 (distance ?l2 ?l2)) (in ?l2 ?l2) ) ) (and (same_color room_center agent) (not (not (object_orientation ?l2 ?l2) ) ) ) (game_over ) ) (and (and (not (and (agent_holds ?l2) (not (not (agent_holds ?l2) ) ) ) ) (agent_holds ?l2) ) (in_motion ?l2) ) ) )
          (hold (and (and (and (and (< (distance ?l2 ?l2) (distance ?l2 ?l2)) (in_motion ?l2) ) (not (agent_holds desk) ) (in_motion desk) ) (agent_holds ?l2) ) (not (or (adjacent_side ?l2 ?l2 ?l2) (not (and (not (not (game_start ) ) ) (and (in ?l2 ?l2) (not (= 1 (x_position ?l2)) ) ) ) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (<= 3 (count throwGolfballToBin:dodgeball) )
)
(:scoring
  (+ (* 3 (+ (* (* (* 8 3 )
            (* (* 2 (< (external-forall-minimize (count throwGolfballToBin:beachball) ) (- (count throwGolfballToBin:golfball:dodgeball:beachball) )
                )
              )
              (count throwGolfballToBin:purple)
            )
          )
          (* 5 (* (count throwGolfballToBin:beachball) (+ (external-forall-maximize (count throwGolfballToBin:doggie_bed) ) 3 )
            )
          )
          (count-once-per-objects throwGolfballToBin:basketball)
        )
        15
      )
    )
    (count-once-per-objects throwGolfballToBin:blue_cube_block)
    (count throwGolfballToBin:dodgeball)
  )
)
)



(define (game game-id-1004) (:domain many-objects-room-v1)
(:setup
  (exists (?c - cube_block)
    (and
      (exists (?w2 - game_object ?o - hexagonal_bin ?w1 - dodgeball)
        (game-conserved
          (agent_crouches )
        )
      )
      (game-conserved
        (in ?c agent)
      )
      (game-conserved
        (in ?c agent)
      )
    )
  )
)
(:constraints
  (and
    (preference blockOnBlockInTowerAtEnd
      (exists (?r - dodgeball ?t1 - shelf ?o - hexagonal_bin ?c4 - game_object ?b - dodgeball)
        (then
          (once (on bed ?b) )
          (once (on ?b agent) )
          (once (adjacent_side ?b ?b ?b) )
        )
      )
    )
    (preference blockInTowerKnockedByDodgeball
      (exists (?h - dodgeball)
        (at-end
          (in ?h room_center)
        )
      )
    )
  )
)
(:terminal
  (not
    (and
      (not
        (>= (total-score) (count-once blockInTowerKnockedByDodgeball:cylindrical_block) )
      )
    )
  )
)
(:scoring
  (count blockInTowerKnockedByDodgeball:basketball)
)
)



(define (game game-id-1005) (:domain many-objects-room-v1)
(:setup
  (forall (?o - hexagonal_bin ?c1 - game_object ?d - pyramid_block)
    (game-optional
      (in ?d bed)
    )
  )
)
(:constraints
  (and
    (preference ballThrownToWallToAgent
      (exists (?h - pillow)
        (then
          (hold-while (= 1 (distance ?h ?h)) (not (in_motion desk) ) (in_motion ?h) (and (in ?h ?h) (not (not (not (game_start ) ) ) ) ) )
          (hold (between ?h agent ?h) )
          (hold (on ?h ?h) )
        )
      )
    )
    (forall (?h - triangular_ramp ?b3 - cube_block ?b2 - hexagonal_bin)
      (and
        (preference objectThrownFromRug
          (at-end
            (and
              (on ?b2 ?b2)
              (not
                (not
                  (and
                    (and
                      (on ?b2 agent)
                      (equal_x_position ?b2 room_center)
                    )
                    (agent_holds ?b2)
                    (agent_holds ?b2)
                  )
                )
              )
            )
          )
        )
      )
    )
    (preference blockIncorrectlyPicked
      (exists (?b9 - (either cylindrical_block golfball))
        (then
          (hold-while (not (object_orientation ?b9 ?b9) ) (and (in_motion top_drawer) (not (in_motion ?b9) ) ) (agent_holds ?b9) (not (in_motion ?b9) ) )
          (hold (agent_holds agent) )
        )
      )
    )
  )
)
(:terminal
  (>= 0 (+ 5 6 )
  )
)
(:scoring
  (count blockIncorrectlyPicked:cube_block)
)
)



(define (game game-id-1006) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (agent_holds upright)
  )
)
(:constraints
  (and
    (preference blockPlacedInBuilding
      (exists (?t - building ?g - dodgeball)
        (then
          (once (agent_holds desk) )
          (once (and (rug_color_under ?g ?g) (and (and (agent_holds ?g) (not (touch ?g ?g) ) (not (agent_holds ?g) ) ) (not (agent_holds ?g) ) ) (agent_holds ?g) ) )
          (once (or (< (distance ?g room_center) (distance desk ?g)) (or (not (adjacent bed ?g) ) (adjacent ?g rug) ) ) )
        )
      )
    )
    (preference dodgeballFromBlockToBin
      (exists (?w1 ?b - hexagonal_bin)
        (then
          (once (agent_holds brown) )
          (hold (not (not (in top_shelf ?w1) ) ) )
          (hold (in ?b pink_dodgeball) )
        )
      )
    )
  )
)
(:terminal
  (and
    (<= (>= (* (count blockPlacedInBuilding:dodgeball) (- 10 )
        )
        (* (* (count-once-per-objects dodgeballFromBlockToBin:dodgeball:dodgeball) (* (count-once-per-objects blockPlacedInBuilding:pink) (count blockPlacedInBuilding) 1 (count dodgeballFromBlockToBin:doggie_bed) )
          )
          (count-once blockPlacedInBuilding:red)
        )
      )
      (count-once-per-external-objects blockPlacedInBuilding:green)
    )
    (>= (+ (count-once blockPlacedInBuilding:dodgeball) (external-forall-maximize (count dodgeballFromBlockToBin:yellow_cube_block) ) )
      (* (* (count-once-per-objects dodgeballFromBlockToBin:dodgeball) (count blockPlacedInBuilding:purple) )
        3
      )
    )
  )
)
(:scoring
  (count blockPlacedInBuilding:beachball:dodgeball)
)
)



(define (game game-id-1007) (:domain few-objects-room-v1)
(:setup
  (exists (?s ?c - dodgeball)
    (game-conserved
      (= 1 10)
    )
  )
)
(:constraints
  (and
    (preference ballThrownToBin
      (then
        (once (agent_holds agent) )
      )
    )
    (forall (?b - sliding_door ?b6 - (either doggie_bed pyramid_block))
      (and
        (preference thrownBallHitsBlock
          (exists (?s - (either yellow_cube_block game_object key_chain cd) ?h - cylindrical_block)
            (then
              (hold (and (and (and (> 2 1) (adjacent ?b6 agent) ) (is_setup_object agent) ) (in ?b6 ?b6) ) )
              (hold (not (on ?h ?b6) ) )
              (hold-while (agent_holds ?b6) (adjacent ?b6 ?b6) (in_motion desk) )
            )
          )
        )
      )
    )
    (preference gameBlockFound
      (exists (?o - dodgeball ?b6 - hexagonal_bin)
        (then
          (once (agent_holds ?b6) )
          (hold (and (on desk ?b6) ) )
          (once (and (< 1 1) (and (not (adjacent ?b6 ?b6) ) (> (distance ?b6 ?b6) (distance ?b6 ?b6)) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count ballThrownToBin:basketball) 50 )
    (total-score)
  )
)
(:scoring
  (+ 3 10 )
)
)



(define (game game-id-1008) (:domain many-objects-room-v1)
(:setup
  (exists (?h - cylindrical_block ?d2 - (either triangular_ramp lamp))
    (exists (?p - ball)
      (game-optional
        (and
          (on upright ?d2)
          (exists (?o1 - dodgeball ?o - triangular_ramp)
            (or
              (in ?o ?o)
              (in_motion ?o)
              (and
                (and
                  (= (distance ?p ?d2) 1)
                  (in_motion desk)
                )
                (and
                  (adjacent_side ?o desk ?d2)
                  (adjacent ?o ?p)
                )
                (same_object ?o ?o)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwFromEdgeOfRug
      (exists (?c5 ?h - (either cellphone cylindrical_block))
        (then
          (once (and (in_motion pink_dodgeball) (in_motion ?h) ) )
          (once (touch ?h ?c5) )
          (once (exists (?b6 - (either dodgeball pen)) (forall (?s - (either tall_cylindrical_block basketball cylindrical_block dodgeball) ?b10 - dodgeball) (in ?h ?b10) ) ) )
        )
      )
    )
    (preference throwInBin
      (exists (?o - dodgeball)
        (then
          (hold (agent_holds agent) )
          (once (not (and (not (and (agent_holds ?o) (exists (?h - beachball ?d - chair) (on ?o ?o) ) ) ) (in ?o ?o) ) ) )
          (hold (not (and (on ?o ?o) (> (distance ?o ?o) (distance ?o pink_dodgeball)) ) ) )
          (hold (on ?o ?o) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-overlapping throwInBin) (total-time) )
    (>= 6 (count-once throwFromEdgeOfRug:yellow) )
  )
)
(:scoring
  (count-once-per-objects throwInBin:yellow_cube_block)
)
)



(define (game game-id-1009) (:domain few-objects-room-v1)
(:setup
  (and
    (not
      (game-conserved
        (not
          (agent_holds bed)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?h - triangular_ramp)
        (then
          (once (in_motion ?h) )
          (once (exists (?c3 ?ob - triangular_ramp ?h ?b - golfball) (not (in_motion upright) ) ) )
          (once (and (agent_holds door) (exists (?l - hexagonal_bin ?c2 - hexagonal_bin) (not (< (distance_side ?c2 bridge_block ?c2 ?h) 2) ) ) (is_setup_object ?h) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 7 20 )
)
(:scoring
  (count-same-positions ballThrownToBin:dodgeball:blue_dodgeball)
)
)



(define (game game-id-1010) (:domain many-objects-room-v1)
(:setup
  (exists (?c - game_object ?b - block ?b4 - dodgeball)
    (game-conserved
      (touch desk ?b4)
    )
  )
)
(:constraints
  (and
    (preference itemsHidingScreens
      (exists (?o - dodgeball ?o1 - dodgeball)
        (then
          (once (not (adjacent room_center ?o1) ) )
          (once (in_motion ?o1) )
          (once (adjacent ?o1 ?o1) )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (total-time) )
)
(:scoring
  (count itemsHidingScreens:white)
)
)



(define (game game-id-1011) (:domain medium-objects-room-v1)
(:setup
  (exists (?d - flat_block ?t - block)
    (game-conserved
      (opposite ?t ?t)
    )
  )
)
(:constraints
  (and
    (preference ballToBinFromBed
      (exists (?o - red_dodgeball)
        (then
          (hold-while (and (in_motion desk) ) (and (on ?o ?o) (equal_x_position ?o agent) ) (adjacent_side ?o ?o bed ?o) )
          (hold (rug_color_under ?o ?o) )
          (once (on door ?o) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (total-time) (- (count-same-positions ballToBinFromBed:basketball) )
    )
  )
)
(:scoring
  (count-once-per-objects ballToBinFromBed:blue_dodgeball)
)
)



(define (game game-id-1012) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (not
      (in_motion right)
    )
  )
)
(:constraints
  (and
    (preference bigObjectThrownToBed
      (exists (?b5 - dodgeball)
        (then
          (hold (agent_holds ?b5) )
          (once (not (on agent top_drawer) ) )
          (once (or (not (in ?b5 ?b5) ) (agent_holds ?b5) ) )
        )
      )
    )
    (preference redDodgeballThrownToBin
      (exists (?b1 - building)
        (then
          (once (and (on ?b1 ?b1) (adjacent ?b1 desk) ) )
          (once (agent_holds ?b1) )
          (hold (in_motion ?b1) )
          (once (on ?b1 ?b1) )
          (once (not (in ?b1 ?b1) ) )
        )
      )
    )
    (preference blockOnBlockInTowerAtEnd
      (exists (?o - (either lamp alarm_clock pencil) ?o - dodgeball)
        (then
          (hold (and (and (touch floor ?o) (agent_holds ?o) ) ) )
          (once (not (agent_holds agent) ) )
          (once (not (agent_holds room_center) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-longest redDodgeballThrownToBin:book) (count redDodgeballThrownToBin:basketball) )
)
(:scoring
  (* (count blockOnBlockInTowerAtEnd:dodgeball:hexagonal_bin:dodgeball) (* 2 (- 3 )
    )
    (* (* 2 30 )
      (count-longest blockOnBlockInTowerAtEnd:red_pyramid_block)
    )
    (count-once-per-objects bigObjectThrownToBed)
    2
    (+ (count bigObjectThrownToBed:dodgeball) (count blockOnBlockInTowerAtEnd:hexagonal_bin) )
    (count-shortest bigObjectThrownToBed:top_drawer)
  )
)
)



(define (game game-id-1013) (:domain many-objects-room-v1)
(:setup
  (exists (?g - hexagonal_bin)
    (exists (?h ?s - hexagonal_bin)
      (and
        (and
          (and
            (exists (?o1 ?o4 - curved_wooden_ramp)
              (game-optional
                (in ?o1 desk)
              )
            )
            (exists (?d - hexagonal_bin)
              (game-conserved
                (in_motion ?d)
              )
            )
            (game-optional
              (in ?h bed)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwMovesBeachballWithoutKnockingTeddy
      (exists (?o ?p3 - game_object)
        (then
          (hold (on ?p3 ?o) )
          (hold-while (in_motion ?o) (adjacent_side ?o ?o ?o ?o) (in ?p3 ?p3) )
          (once (adjacent bed desk) )
        )
      )
    )
    (forall (?b10 - cube_block ?o ?o5 - hexagonal_bin)
      (and
        (preference blockIncorrectlyPicked
          (exists (?x - triangular_ramp ?x - game_object)
            (then
              (once (and (= (distance ?o ?o)) (and (< 1 (distance ?o ?o)) (agent_holds ?o) (and (in_motion ?x) ) (not (game_over ) ) ) ) )
              (once (and (in ?o5 ?x) (in_motion ?x) ) )
              (hold-while (opposite ?o ?o) (same_object ?o ?o5) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (* (count throwMovesBeachballWithoutKnockingTeddy:book:golfball) (* 30 (count throwMovesBeachballWithoutKnockingTeddy:golfball) )
    )
  )
)
(:scoring
  (count throwMovesBeachballWithoutKnockingTeddy:pink_dodgeball)
)
)



(define (game game-id-1014) (:domain many-objects-room-v1)
(:setup
  (forall (?p - teddy_bear ?b - (either mug side_table))
    (game-optional
      (and
        (agent_holds ?b)
      )
    )
  )
)
(:constraints
  (and
    (preference towerFallsWhileBuilding
      (exists (?d2 - block ?p2 - shelf)
        (then
          (once (exists (?c5 - dodgeball ?b6 - building ?c6 - dodgeball) (adjacent_side ?c6 top_shelf pink_dodgeball) ) )
          (once (same_color ?p2 desk) )
          (once (in_motion ?p2) )
        )
      )
    )
  )
)
(:terminal
  (and
    (not
      (or
        (and
          (= (count-once-per-objects towerFallsWhileBuilding:basketball:dodgeball) (* 1 )
          )
          (> (count towerFallsWhileBuilding:yellow) (total-score) )
        )
        (= 4 (total-score) )
        (>= 20 2 )
      )
    )
  )
)
(:scoring
  (* 10 -10 )
)
)



(define (game game-id-1015) (:domain medium-objects-room-v1)
(:setup
  (forall (?h - hexagonal_bin)
    (forall (?h - drawer)
      (exists (?d - game_object ?l4 - dodgeball)
        (and
          (forall (?h - curved_wooden_ramp)
            (and
              (and
                (forall (?d ?db - dodgeball)
                  (game-optional
                    (on ?l4 ?h)
                  )
                )
                (not
                  (game-optional
                    (not
                      (in_motion bed)
                    )
                  )
                )
              )
            )
          )
          (and
            (game-optional
              (not
                (exists (?b5 - hexagonal_bin)
                  (agent_holds ?b5)
                )
              )
            )
            (and
              (game-conserved
                (game_over )
              )
              (exists (?l3 - game_object)
                (forall (?d - (either lamp key_chain))
                  (not
                    (and
                      (game-conserved
                        (and
                          (and
                            (agent_holds ?h)
                            (and
                              (agent_holds pillow)
                              (not
                                (and
                                  (agent_holds ?d)
                                  (on ?d desk)
                                )
                              )
                            )
                            (and
                              (adjacent ?d ?h)
                              (in_motion ?h)
                            )
                          )
                          (agent_holds ?d)
                          (in_motion agent)
                          (in ?h ?h)
                          (is_setup_object agent)
                          (on ?h ?l3)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
          (not
            (and
              (game-conserved
                (and
                  (in_motion yellow)
                  (not
                    (and
                      (in ?h ?l4)
                      (and
                        (not
                          (or
                            (not
                              (same_color ?h ?h)
                            )
                            (agent_holds ?l4)
                            (adjacent ?h ?l4)
                          )
                        )
                        (on ?h ?l4)
                      )
                    )
                  )
                  (and
                    (not
                      (and
                        (agent_holds ?h)
                        (and
                          (agent_holds ?h)
                          (equal_x_position ?h floor)
                          (adjacent door green_golfball)
                        )
                      )
                    )
                    (agent_holds ?h)
                    (adjacent_side bed desk ?h)
                  )
                )
              )
              (and
                (exists (?t2 - building)
                  (forall (?h - dodgeball)
                    (and
                      (game-optional
                        (between ?t2 ?l4 agent)
                      )
                    )
                  )
                )
                (game-conserved
                  (between ?h ?l4 ?l4)
                )
                (exists (?b - (either laptop dodgeball cellphone))
                  (game-conserved
                    (and
                      (in ?b ?l4)
                      (in_motion bed)
                    )
                  )
                )
              )
              (exists (?s - hexagonal_bin)
                (game-conserved
                  (adjacent ?s ?s)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttemptFromDoor
      (exists (?o5 ?s - drawer)
        (then
          (once (and (and (agent_holds room_center) (broken ?s) (agent_holds ?o5) (not (rug_color_under ?s ?s) ) (or (agent_crouches ) ) (in_motion ?s) ) (not (not (not (agent_holds ?s) ) ) ) ) )
          (once (agent_holds floor) )
          (hold (not (agent_holds ?o5) ) )
        )
      )
    )
    (preference ballThrownToRug
      (exists (?p2 - ball)
        (then
          (hold (not (faces ?p2 ?p2) ) )
        )
      )
    )
    (preference blockFromRugToDesk
      (exists (?d - ball ?o1 - block ?g - building)
        (then
          (once (in_motion ?g) )
          (once (not (not (and (not (not (touch ?g ?g) ) ) (on right left) ) ) ) )
          (once (not (agent_holds upright) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (count-once-per-objects ballThrownToRug:cylindrical_block:orange) 5 )
      (>= (count blockFromRugToDesk:brown:yellow_cube_block) (total-time) )
      (>= (count-once-per-external-objects ballThrownToRug:white) 6 )
    )
  )
)
(:scoring
  (* (count blockFromRugToDesk:dodgeball) (+ (- (count ballThrownToRug:beachball:beachball) )
      (count-once-per-objects throwAttemptFromDoor:dodgeball)
    )
  )
)
)



(define (game game-id-1016) (:domain few-objects-room-v1)
(:setup
  (forall (?o - doggie_bed)
    (forall (?h - (either pen ball) ?tb ?t - dodgeball ?t - dodgeball ?d - cube_block)
      (game-conserved
        (agent_holds ?d)
      )
    )
  )
)
(:constraints
  (and
    (preference pillowMovedToRoomCenter
      (exists (?p1 - hexagonal_bin)
        (then
          (hold (not (equal_z_position ?p1 ?p1) ) )
          (hold (on bed agent) )
          (hold (adjacent_side ?p1 desk ?p1 ?p1) )
        )
      )
    )
    (preference greenObjectMovedToRoomCenter
      (exists (?h - cube_block)
        (then
          (hold (in_motion ?h) )
          (hold (and (in_motion ?h) (toggled_on ?h) ) )
          (once (same_type brown ?h) )
        )
      )
    )
  )
)
(:terminal
  (>= (count greenObjectMovedToRoomCenter:hexagonal_bin:wall) 10 )
)
(:scoring
  (count-longest greenObjectMovedToRoomCenter:blue_dodgeball)
)
)



(define (game game-id-1017) (:domain medium-objects-room-v1)
(:setup
  (exists (?b2 - (either doggie_bed pillow top_drawer))
    (exists (?h - curved_wooden_ramp)
      (game-optional
        (agent_holds ?h)
      )
    )
  )
)
(:constraints
  (and
    (preference objectWithMatchingColor
      (exists (?c - cylindrical_block ?b - hexagonal_bin ?c4 - ball ?b2 - hexagonal_bin)
        (at-end
          (same_object ?b2 ?b2)
        )
      )
    )
    (preference pinkObjectMovedToRoomCenter
      (exists (?t - shelf)
        (then
          (once (adjacent ?t ?t) )
        )
      )
    )
    (preference objectsHidden
      (exists (?b - beachball)
        (at-end
          (not
            (and
              (agent_holds ?b)
              (in_motion back)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (- 10 )
    (total-score)
  )
)
(:scoring
  (* (* (count objectsHidden:red) 10 )
    3
  )
)
)



(define (game game-id-1018) (:domain many-objects-room-v1)
(:setup
  (forall (?p3 - (either yellow_cube_block doggie_bed))
    (and
      (forall (?x - hexagonal_bin)
        (game-optional
          (not
            (touch ?p3 ?p3)
          )
        )
      )
      (game-optional
        (not
          (not
            (and
              (agent_holds west_wall)
              (in_motion agent)
              (and
                (faces ?p3 agent)
                (not
                  (in_motion ?p3)
                )
              )
              (in desk ?p3)
              (in ?p3 ?p3)
              (or
                (not
                  (<= (distance ?p3 desk) (distance ?p3 desk))
                )
                (and
                  (forall (?c - dodgeball ?r ?h - dodgeball)
                    (on ?h pillow)
                  )
                  (and
                    (in ?p3 desk)
                    (or
                      (in_motion ?p3)
                      (agent_holds rug)
                      (and
                        (opposite floor ?p3)
                        (agent_holds ?p3)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
      (and
        (and
          (and
            (forall (?l4 - cube_block)
              (game-conserved
                (or
                  (on floor ?l4)
                  (not
                    (toggled_on ?p3)
                  )
                )
              )
            )
          )
          (exists (?h - curved_wooden_ramp)
            (game-conserved
              (< 0.5 (distance agent ?p3))
            )
          )
          (exists (?r - game_object ?g - hexagonal_bin ?p1 - hexagonal_bin)
            (exists (?tb - dodgeball ?w - dodgeball)
              (exists (?o3 ?o ?h ?h ?d ?w ?f ?p ?l1 ?d - hexagonal_bin ?b - dodgeball ?h - teddy_bear)
                (and
                  (exists (?b - tall_cylindrical_block)
                    (and
                      (exists (?b - ball)
                        (forall (?x - dodgeball)
                          (exists (?h - (either cylindrical_block floor pillow) ?l - game_object ?o - hexagonal_bin)
                            (and
                              (and
                                (and
                                  (and
                                    (game-conserved
                                      (touch agent ?p1)
                                    )
                                    (forall (?o5 - cube_block)
                                      (game-optional
                                        (and
                                          (and
                                            (exists (?c - dodgeball ?ob - block ?s - ball)
                                              (and
                                                (in_motion ?b)
                                                (on ?h upright)
                                                (and
                                                  (on floor ?b)
                                                  (in upright ?s)
                                                  (not
                                                    (and
                                                      (not
                                                        (touch agent ?x)
                                                      )
                                                      (is_setup_object ?h)
                                                    )
                                                  )
                                                )
                                                (on ?s brown)
                                              )
                                            )
                                            (not
                                              (and
                                                (and
                                                  (in bed agent)
                                                  (and
                                                    (agent_holds ?p3)
                                                    (opposite ?o5 ?p1)
                                                  )
                                                  (not
                                                    (not
                                                      (on ?h ?o5)
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                          (< 1 (distance ?b ?x))
                                          (and
                                            (in_motion ?w)
                                          )
                                        )
                                      )
                                    )
                                    (exists (?p - curved_wooden_ramp)
                                      (and
                                        (and
                                          (game-conserved
                                            (on front ?p3)
                                          )
                                        )
                                        (and
                                          (and
                                            (and
                                              (and
                                                (and
                                                  (game-optional
                                                    (in_motion ?x)
                                                  )
                                                  (game-conserved
                                                    (in_motion ?o)
                                                  )
                                                )
                                              )
                                              (and
                                                (game-conserved
                                                  (between room_center ?p1 ?b)
                                                )
                                                (game-conserved
                                                  (and
                                                    (forall (?l4 - building)
                                                      (< (distance ?p1 ?p1) 10)
                                                    )
                                                    (agent_holds bed)
                                                    (not
                                                      (toggled_on ?w)
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                            (and
                                              (game-optional
                                                (and
                                                  (agent_holds ?w)
                                                  (not
                                                    (object_orientation ?b ?p)
                                                  )
                                                )
                                              )
                                              (game-optional
                                                (not
                                                  (not
                                                    (exists (?b5 - (either triangular_ramp dodgeball))
                                                      (exists (?t2 - teddy_bear)
                                                        (not
                                                          (and
                                                            (agent_holds agent)
                                                            (adjacent desk agent)
                                                            (or
                                                              (touch ?b5 ?b5)
                                                              (or
                                                                (in floor ?p1)
                                                                (and
                                                                  (not
                                                                    (on ?b5 ?p1)
                                                                  )
                                                                  (agent_holds upright)
                                                                  (in ?b agent)
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                            (and
                                              (game-optional
                                                (not
                                                  (touch agent ?w)
                                                )
                                              )
                                            )
                                          )
                                        )
                                        (forall (?h ?b8 - curved_wooden_ramp)
                                          (forall (?s - building)
                                            (game-conserved
                                              (is_setup_object ?p)
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                  (forall (?t - triangular_ramp ?b - curved_wooden_ramp)
                                    (and
                                      (exists (?p - pyramid_block ?b - ball ?p1 - blinds)
                                        (and
                                          (game-optional
                                            (in_motion ?h)
                                          )
                                        )
                                      )
                                      (game-optional
                                        (agent_holds agent)
                                      )
                                    )
                                  )
                                )
                                (exists (?o3 - doggie_bed)
                                  (and
                                    (exists (?b - hexagonal_bin)
                                      (forall (?h - cylindrical_block)
                                        (game-optional
                                          (rug_color_under pink ?w)
                                        )
                                      )
                                    )
                                    (forall (?r - chair)
                                      (game-conserved
                                        (agent_holds ?b)
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                      (exists (?o5 - ball)
                        (game-conserved
                          (and
                            (on ?o5 agent)
                            (adjacent ?h ?o5)
                            (and
                              (not
                                (in_motion ?h)
                              )
                              (on ?p1 room_center)
                            )
                          )
                        )
                      )
                      (and
                        (game-conserved
                          (and
                            (and
                              (not
                                (and
                                  (not
                                    (and
                                      (in_motion ?h)
                                      (rug_color_under front room_center)
                                      (and
                                        (not
                                          (agent_holds ?h)
                                        )
                                        (in ?b ?b)
                                      )
                                    )
                                  )
                                  (between ?w ?h west_wall)
                                )
                              )
                              (adjacent ?b ?h)
                              (and
                                (in ?p1 door)
                                (in ?p1 ?b)
                              )
                            )
                            (in room_center ?h)
                          )
                        )
                      )
                      (forall (?d - ball ?b - pyramid_block)
                        (game-optional
                          (and
                            (and
                              (adjacent side_table ?p3)
                              (adjacent ?w ?p3)
                            )
                            (and
                              (agent_holds ?p1)
                              (<= 10 2)
                              (in_motion ?p3)
                            )
                          )
                        )
                      )
                      (game-conserved
                        (adjacent ?w ?p1)
                      )
                    )
                  )
                )
              )
            )
          )
        )
        (and
          (and
            (and
              (exists (?b - hexagonal_bin)
                (game-conserved
                  (agent_holds ?p3)
                )
              )
              (exists (?b4 - hexagonal_bin ?r - game_object)
                (exists (?b - (either dodgeball red) ?w2 - cube_block)
                  (exists (?d - bridge_block)
                    (exists (?o - ball)
                      (and
                        (and
                          (or
                            (game-conserved
                              (< (distance ?r ?o) (distance ?p3 ?p3))
                            )
                            (game-optional
                              (and
                                (in_motion ?d)
                                (not
                                  (in_motion green_golfball)
                                )
                              )
                            )
                          )
                        )
                        (exists (?l4 - dodgeball)
                          (game-conserved
                            (on agent ?r)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
            (and
              (exists (?h - hexagonal_bin)
                (and
                  (exists (?db - game_object)
                    (forall (?o - hexagonal_bin ?b6 - bridge_block)
                      (game-conserved
                        (or
                          (agent_holds ?h)
                          (touch agent ?b6)
                        )
                      )
                    )
                  )
                )
              )
            )
            (game-conserved
              (opposite ?p3 ?p3)
            )
          )
          (forall (?d - dodgeball)
            (and
              (game-conserved
                (on floor ?p3)
              )
            )
          )
        )
      )
      (exists (?o - block)
        (game-optional
          (agent_holds ?p3)
        )
      )
      (game-conserved
        (in_motion ?p3)
      )
    )
  )
)
(:constraints
  (and
    (preference objectToBinOnFirstTry
      (exists (?f - (either chair golfball dodgeball))
        (then
          (once-measure (adjacent agent ?f) (distance ?f desk) )
          (hold (agent_holds ?f) )
          (hold (< 8 1) )
        )
      )
    )
  )
)
(:terminal
  (>= (count objectToBinOnFirstTry:beachball:basketball) (count-once-per-objects objectToBinOnFirstTry:dodgeball:pink) )
)
(:scoring
  (count objectToBinOnFirstTry:beachball:blue_pyramid_block)
)
)



(define (game game-id-1019) (:domain medium-objects-room-v1)
(:setup
  (exists (?c - dodgeball)
    (and
      (forall (?t1 - cube_block)
        (game-conserved
          (in_motion ?t1)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - beachball)
      (and
        (preference bounceBallToBin
          (exists (?b1 - chair)
            (then
              (hold (not (exists (?w2 - hexagonal_bin ?f - hexagonal_bin) (on ?f desk) ) ) )
              (hold (in ?d ?d) )
              (once (exists (?b - triangular_ramp) (not (> (distance ?b1 rug) 1) ) ) )
            )
          )
        )
        (preference thrownBallReachesEnd
          (exists (?c3 - ball)
            (then
              (once (on ?c3 ?d) )
              (hold (in_motion ?c3) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (total-time) )
)
(:scoring
  (* (count-once bounceBallToBin:yellow) 1 )
)
)



(define (game game-id-1020) (:domain medium-objects-room-v1)
(:setup
  (exists (?t - bridge_block)
    (forall (?h - doggie_bed)
      (forall (?r - dodgeball)
        (game-conserved
          (in_motion ?r)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectToBinOnFirstTry
      (exists (?d - ball)
        (then
          (once (agent_holds room_center) )
          (once (on ?d pink) )
          (once (touch door ?d) )
        )
      )
    )
    (preference blockInTowerKnockedByDodgeball
      (exists (?b - hexagonal_bin ?o4 - pillow)
        (then
          (hold (not (forall (?c - hexagonal_bin) (and (not (in_motion ?c) ) (in_motion ?o4) (and (not (in_motion top_shelf) ) (not (in_motion ?c) ) ) (not (in_motion bridge_block) ) (is_setup_object ?o4) (not (not (agent_holds ?c) ) ) ) ) ) )
          (once (not (above ?o4 ?o4) ) )
          (once (and (in_motion ?o4) (and (touch ?o4 ?o4) (and (in_motion ?o4) (and (and (and (and (and (agent_holds ?o4) (not (and (on ?o4 ?o4) (adjacent_side ?o4 bed ?o4) ) ) (game_over ) (touch agent agent) ) (same_object ?o4 ?o4) ) (same_object ?o4 ?o4) ) (equal_x_position ?o4 ?o4) ) (in desk ?o4) ) (adjacent ?o4 agent) ) ) (adjacent door ?o4) ) )
        )
      )
    )
    (forall (?h - doggie_bed ?c - hexagonal_bin ?b - cube_block ?d - block)
      (and
        (preference ballThrownToWallToAgent
          (then
            (hold (in_motion ?d) )
            (hold (same_color ?d ?d) )
            (once (not (in ?d ?d) ) )
          )
        )
        (preference gameObjectToBin
          (exists (?h ?p - block)
            (then
              (hold (adjacent ?p ?h) )
              (once (= (distance ?p ?d) 0) )
              (hold (same_color ?h ?d) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 0 (count-once-per-objects gameObjectToBin:blue_pyramid_block) )
)
(:scoring
  (count gameObjectToBin:book)
)
)



(define (game game-id-1021) (:domain few-objects-room-v1)
(:setup
  (forall (?o4 - dodgeball ?w - hexagonal_bin ?c - game_object ?d - cube_block ?b - dodgeball)
    (game-conserved
      (and
        (not
          (not
            (not
              (not
                (and
                  (or
                    (above ?b right)
                    (in_motion ?b)
                    (in ?b ?b)
                    (and
                      (and
                        (agent_holds ?b)
                        (touch ?b ?b)
                      )
                      (in_motion ?b)
                    )
                  )
                  (is_setup_object ?b)
                )
              )
            )
          )
        )
        (in_motion agent)
        (and
          (or
            (adjacent_side ?b ?b desk agent)
            (not
              (< 1 (x_position side_table))
            )
          )
          (and
            (and
              (not
                (on ?b ?b)
              )
              (and
                (rug_color_under door ?b)
                (< 10 (x_position ?b))
              )
            )
            (and
              (in_motion floor)
            )
          )
          (not
            (agent_holds ?b)
          )
          (in_motion bed)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToBin
      (exists (?l2 - block)
        (then
          (hold (in_motion ?l2) )
          (once (in_motion ?l2) )
          (once (not (in_motion right) ) )
        )
      )
    )
  )
)
(:terminal
  (<= (= (count throwToBin:dodgeball) 5 )
    8
  )
)
(:scoring
  (count-once throwToBin:beachball)
)
)



(define (game game-id-1022) (:domain many-objects-room-v1)
(:setup
  (forall (?r - dodgeball)
    (exists (?r1 - red_dodgeball)
      (game-optional
        (not
          (same_type door ?r1)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - curved_wooden_ramp)
      (and
        (preference dodgeballFromBlockToBin
          (exists (?p3 - ball)
            (then
              (hold (and (not (touch ?d ?p3) ) (not (agent_crouches ) ) ) )
              (hold-while (> (distance ?d ?p3) (distance ?d ?p3)) (game_over ) (broken pink_dodgeball) (not (in_motion ?p3) ) )
              (once (and (not (not (not (not (not (agent_holds desk) ) ) ) ) ) (on ?d ?p3) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count dodgeballFromBlockToBin:dodgeball) 15 )
)
(:scoring
  (count dodgeballFromBlockToBin:dodgeball)
)
)



(define (game game-id-1023) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (and
        (forall (?o ?b - dodgeball ?c4 - dodgeball ?b - dodgeball ?c3 - (either doggie_bed pink))
          (game-conserved
            (or
              (in ?c3 ?c3)
              (in ?c3 ?c3)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockInTowerAtEnd
      (exists (?c - hexagonal_bin)
        (then
          (once (not (adjacent ?c ?c) ) )
          (once (not (on ?c ?c) ) )
          (hold-while (in_motion rug) (and (not (exists (?o - hexagonal_bin ?c6 - building) (agent_holds ?c6) ) ) (< (building_size ?c) (distance pink ?c)) (> (distance ?c ?c) 1) ) (= 1 (distance ?c agent) 1) )
        )
      )
    )
    (forall (?w1 - cube_block ?g ?t ?c ?c ?h ?d2 - red_pyramid_block)
      (and
        (preference binKnockedOver
          (exists (?p - cube_block ?c - cube_block)
            (then
              (once (touch ?t ?d2) )
              (hold (adjacent_side room_center desk ?c agent) )
              (once (and (and (and (not (in_motion ?t) ) (on ?d2 room_center) ) (adjacent ?t ?d2) ) (exists (?t - wall) (agent_holds ?h) ) ) )
            )
          )
        )
      )
    )
    (preference smallObjectThrownToBed
      (exists (?h - ball ?d - (either desktop chair alarm_clock))
        (at-end
          (and
            (in_motion desk)
            (on ?d ?d)
          )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (* 16 (= 1 )
    )
  )
)
(:scoring
  (+ (+ (count binKnockedOver:red_pyramid_block:pink_dodgeball:purple) 2 )
    (* 2 4 )
    20
  )
)
)
