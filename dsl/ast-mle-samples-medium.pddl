(define (game game-id-0) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (and
      (and
        (rug_color_under ?xxx)
        (not
          (in_motion ?xxx bed)
        )
      )
      (agent_holds ?xxx)
    )
  )
)
(:constraints
  (and
    (forall (?q - hexagonal_bin ?q - beachball)
      (and
        (preference preference1
          (then
            (hold-while (touch ?q) (on ?q) )
            (once (in_motion ?q) )
            (hold (and (and (not (and (in_motion ?q ?q) (agent_holds ?q) ) ) (agent_holds ?q) ) (on ?q ?q) ) )
          )
        )
        (preference preference2
          (exists (?b - beachball ?z - hexagonal_bin)
            (then
              (once (not (and (not (and (not (and (on ?q) (> (distance desk ?z ?q) 2) ) ) (and (touch pink ?q) (not (and (and (not (not (agent_holds ?z ?z) ) ) (in_motion side_table floor) ) (not (on ?q) ) ) ) ) ) ) (and (in_motion ?q) (not (< (distance front ?q) (distance ?z ?q)) ) ) ) ) )
              (once (not (in_motion ?z) ) )
              (forall-sequence (?u - shelf)
                (then
                  (hold (not (agent_holds ?z) ) )
                  (once (< (distance agent 0) 4) )
                  (any)
                )
              )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?z ?b - dodgeball)
        (then
          (hold (and (on ?z ?b ?z) (not (not (not (on ?z) ) ) ) ) )
          (once (adjacent ?b) )
          (once (same_object agent) )
        )
      )
    )
  )
)
(:terminal
  (> (external-forall-maximize (+ (count preference3:cube_block) (+ (+ (* (- (count preference1:basketball) )
              6
            )
            (count preference3:basketball:dodgeball)
            (count preference2:golfball)
            (count preference3:pyramid_block:beachball)
            (* 8 (* (* (count preference2:blue_cube_block) (count-once-per-objects preference2:dodgeball) )
                (total-score)
              )
              6
              (count preference1:rug)
              (count preference2:dodgeball:pink_dodgeball)
              (total-score)
            )
            7
            (count preference3:beachball)
          )
        )
      )
    )
    4
  )
)
(:scoring
  20
)
)

(define (game game-id-1) (:domain medium-objects-room-v1)
(:setup
  (forall (?o - hexagonal_bin)
    (not
      (game-conserved
        (not
          (not
            (and
              (not
                (adjacent ?o)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?u ?a ?f ?e ?o ?v - dodgeball)
      (and
        (preference preference1
          (exists (?y - ball ?n - wall)
            (then
              (hold-while (and (adjacent bed) (touch green_golfball) (in_motion ?e ?o) ) (and (exists (?w - game_object ?l - ball) (and (or (in ?o ?a) (in_motion ?a) ) (agent_holds rug) ) ) (touch ?f) ) )
              (once (not (on ?u) ) )
              (once (on floor agent) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> 5 (* 10 3 )
  )
)
(:scoring
  (count preference1)
)
)

(define (game game-id-2) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (forall (?s - chair ?v - pillow)
        (or
          (game-conserved
            (touch ?v)
          )
        )
      )
      (game-optional
        (not
          (in_motion ?xxx ?xxx)
        )
      )
      (exists (?d - (either yellow_cube_block basketball key_chain))
        (and
          (game-optional
            (in_motion ?d ?d)
          )
          (not
            (game-conserved
              (above ?d ?d)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?o - ball)
        (then
          (hold-to-end (and (and (and (in_motion ?o ?o) (in_motion ?o ?o) ) (same_color back) ) (and (in_motion ?o ?o) (agent_holds ?o) (agent_holds rug) ) ) )
          (hold (not (in_motion desk ?o) ) )
          (once (not (in_motion ?o) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 6 (+ (count preference1:purple) 4 )
    )
  )
)
(:scoring
  (* (count preference1:beachball) (count preference1:beachball) )
)
)

(define (game game-id-3) (:domain many-objects-room-v1)
(:setup
  (exists (?q - dodgeball)
    (game-optional
      (agent_holds ?q ?q)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?g - (either tall_cylindrical_block cube_block dodgeball))
        (then
          (once (agent_holds ?g desk) )
          (hold (on ?g top_drawer) )
          (hold (and (and (not (not (and (on ?g ?g) (not (< 7 1) ) ) ) ) (in ?g ?g) ) (on agent agent) (adjacent ?g) ) )
        )
      )
    )
    (preference preference2
      (exists (?q - chair)
        (then
          (hold (and (not (agent_holds ?q pink_dodgeball) ) (not (and (adjacent_side ?q ?q) (not (agent_holds ?q ?q) ) ) ) ) )
          (hold-while (rug_color_under ?q) (and (and (agent_holds bed) (in_motion ?q ?q) ) (agent_holds ?q) ) (and (not (in_motion ?q) ) (and (agent_holds ?q agent) (and (agent_holds ?q) (adjacent ?q ?q) (not (and (in ?q ?q) (in ?q) (rug_color_under blinds ?q) (not (agent_holds ?q agent) ) ) ) ) (agent_holds ?q rug) ) ) )
          (hold-for 10 (in_motion ?q ?q) )
          (once (in_motion bed) )
        )
      )
    )
    (preference preference3
      (exists (?d - bridge_block ?m - dodgeball)
        (at-end
          (and
            (in_motion ?m)
            (and
              (agent_holds ?m rug)
              (exists (?i ?j ?t - hexagonal_bin ?u - dodgeball)
                (on ?u ?u)
              )
              (and
                (in_motion bed)
                (not
                  (on ?m bed right)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 4 20 )
)
(:scoring
  (+ 1 (count-longest preference1:book) 4 (* 4 1 )
  )
)
)

(define (game game-id-4) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (not
      (agent_holds top_shelf)
    )
  )
)
(:constraints
  (and
    (forall (?f - wall)
      (and
        (preference preference1
          (exists (?d - cylindrical_block ?b - hexagonal_bin)
            (then
              (once (and (rug_color_under ?f ?b) (< 1 8) ) )
              (hold (on ?b rug) )
              (hold (not (agent_holds ?f) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* 5 (count-once preference1:dodgeball:dodgeball) )
      (count-once-per-objects preference1:red_pyramid_block:purple)
    )
    (<= (count-once-per-objects preference1:yellow_cube_block:purple:book) 8 )
    (or
      (>= 4 (+ (count preference1:pink_dodgeball) 6 )
      )
      (>= 6 (- 3 )
      )
    )
    (or
      (>= 10 (count preference1:green) )
      (>= (count-once-per-objects preference1:pink_dodgeball) 3 )
    )
  )
)
(:scoring
  5
)
)

(define (game game-id-5) (:domain medium-objects-room-v1)
(:setup
  (forall (?r - book ?r - pyramid_block ?z - hexagonal_bin)
    (and
      (game-optional
        (in_motion ?z)
      )
      (game-optional
        (in_motion pillow)
      )
    )
  )
)
(:constraints
  (and
    (forall (?u - (either dodgeball red) ?e ?c - dodgeball)
      (and
        (preference preference1
          (exists (?y - building)
            (at-end
              (touch pink)
            )
          )
        )
      )
    )
    (forall (?c - hexagonal_bin)
      (and
        (preference preference2
          (exists (?k - cube_block ?a - block)
            (then
              (hold (same_color rug) )
              (once (in_motion ?a) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count preference1:rug) (count-once preference2:yellow) )
  )
)
(:scoring
  (* (- 2 )
    (= (count-once preference2:basketball:green) (count-once-per-external-objects preference2:pink) )
  )
)
)

(define (game game-id-6) (:domain many-objects-room-v1)
(:setup
  (forall (?x - teddy_bear)
    (and
      (and
        (forall (?a - hexagonal_bin)
          (or
            (exists (?m - curved_wooden_ramp)
              (game-optional
                (adjacent ?a door)
              )
            )
            (and
              (game-conserved
                (exists (?s - cube_block)
                  (on ?a)
                )
              )
            )
          )
        )
        (game-conserved
          (not
            (agent_holds ?x)
          )
        )
        (game-conserved
          (agent_holds ?x)
        )
      )
      (exists (?l ?c - ball)
        (forall (?t - (either bed cube_block pen) ?t - (either cd yellow_cube_block cube_block) ?s - hexagonal_bin)
          (forall (?a - chair)
            (game-conserved
              (and
                (not
                  (forall (?k - ball)
                    (and
                      (in_motion ?l)
                      (and
                        (< (distance ?s ?x) (distance 0 room_center))
                        (agent_holds ?k ?s)
                      )
                    )
                  )
                )
                (in_motion ?l)
              )
            )
          )
        )
      )
      (exists (?e - dodgeball ?n ?u ?p ?b ?l ?r - tall_cylindrical_block)
        (game-conserved
          (agent_holds ?p)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?v - game_object)
        (then
          (once (and (and (in_motion ?v) (and (not (and (= 1 2) (agent_holds ?v) (in_motion ?v) ) ) (not (> (distance ?v room_center) (distance room_center ?v)) ) ) ) (in_motion ?v) ) )
          (hold (not (< (distance 3 desk) (distance ?v room_center)) ) )
          (once (not (agent_holds ?v ?v) ) )
        )
      )
    )
  )
)
(:terminal
  (> (count-once-per-objects preference1:pink_dodgeball) 3 )
)
(:scoring
  (* (* (count preference1:book) 10 )
    (* (count preference1:basketball) 0.7 (count preference1:brown) 3 )
  )
)
)

(define (game game-id-7) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?h - ball)
      (and
        (game-optional
          (in_motion ?h ?h)
        )
        (game-conserved
          (and
            (not
              (not
                (in_motion ?h blue)
              )
            )
            (and
              (agent_holds ?h ?h)
              (in_motion ?h front front_left_corner)
            )
          )
        )
      )
    )
    (game-conserved
      (faces ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?j - hexagonal_bin)
        (at-end
          (and
            (agent_holds ?j)
            (in_motion ?j ?j)
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (* (count preference1:doggie_bed) (count-once-per-objects preference1:basketball:golfball:yellow) (+ (count preference1:dodgeball:purple) (count-once-per-objects preference1:beachball:basketball) )
      )
      16
    )
    (external-forall-maximize
      (* 0 (count preference1:pink) (* (> (and 30 (count-once-per-objects preference1:alarm_clock:white) (count preference1) ) (* (count preference1:red) (* (count preference1:pink_dodgeball:alarm_clock) (+ (count preference1:red) (+ (count-once-per-objects preference1:dodgeball:basketball) (total-time) )
                  (+ (+ (count-once-per-objects preference1:pink) (* (count-once preference1:pink_dodgeball) (+ (count preference1:pink) (count preference1:basketball:beachball) (count-unique-positions preference1:beachball) (- (count-once preference1:dodgeball:purple) )
                        )
                      )
                    )
                    (/
                      2
                      (* (count preference1:alarm_clock) (+ (+ 0 (external-forall-maximize (count-total preference1:pyramid_block) ) )
                          (and
                            4
                          )
                          (* (= (+ (* 6 (= 1 (count preference1:dodgeball) )
                                )
                                (* 5 (count preference1:yellow) (count preference1:blue_dodgeball) )
                              )
                              (count-total preference1:dodgeball:golfball)
                              (count-once-per-external-objects preference1:dodgeball)
                            )
                            10
                          )
                          5
                          (count-once-per-objects preference1:blue_dodgeball)
                          (+ (* 2 4 )
                            4
                          )
                          (count-once-per-objects preference1:book:cube_block)
                          5
                          (* 6 3 )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
          (+ 3 2 )
          (count preference1:beachball:pink)
        )
      )
    )
  )
)
(:scoring
  (* (external-forall-maximize (count-longest preference1:blue_dodgeball) ) (count-once-per-objects preference1:blue_pyramid_block) )
)
)

(define (game game-id-8) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (on ?xxx ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?c - (either laptop yellow_cube_block))
        (then
          (once (on ?c ?c) )
          (hold (agent_holds bed) )
        )
      )
    )
    (preference preference2
      (exists (?u ?o ?v ?c ?f - hexagonal_bin)
        (at-end
          (agent_holds back ?o)
        )
      )
    )
    (preference preference3
      (exists (?l - wall ?b - hexagonal_bin)
        (at-end
          (on front ?b)
        )
      )
    )
  )
)
(:terminal
  (<= 10 (count-once-per-objects preference2:blue_dodgeball) )
)
(:scoring
  5
)
)

(define (game game-id-9) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (and
      (agent_holds bed ?xxx)
      (in ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?i - building)
        (then
          (hold (and (in ?i ?i back) (and (and (not (and (in_motion bed) (agent_holds desk) (agent_holds ?i) ) ) (and (and (on ?i) (not (on ?i) ) ) (not (= 1 (x_position ?i ?i)) ) ) ) (not (and (in_motion ?i) (or (agent_holds ?i) (and (agent_holds floor ?i) (agent_holds ?i east_sliding_door) ) ) ) ) ) (exists (?o - game_object) (< (distance room_center 4) (distance ?i desk)) ) ) )
          (hold-while (agent_holds ?i desk) (and (adjacent ?i ?i) (not (in ?i ?i) ) ) (and (adjacent agent) (in_motion ?i) ) )
          (once (touch ?i) )
        )
      )
    )
    (preference preference2
      (exists (?f - teddy_bear ?j - ball)
        (then
          (hold (not (not (agent_holds ?j) ) ) )
          (once (not (exists (?s - (either pyramid_block tall_cylindrical_block)) (adjacent ?s) ) ) )
          (once (in_motion ?j) )
        )
      )
    )
    (preference preference3
      (exists (?o - (either golfball dodgeball) ?r - block)
        (then
          (once (touch ?r) )
          (hold (not (on ?r bed pink) ) )
          (once (and (exists (?i - doggie_bed ?s - hexagonal_bin) (adjacent ?s pink) ) (exists (?m - dodgeball) (on ?r) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (- (- (count preference2:basketball) )
    )
    (count-once-per-objects preference2:blue_cube_block)
  )
)
(:scoring
  (* (count-shortest preference3:dodgeball) 1 )
)
)

(define (game game-id-10) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (and
      (not
        (on ?xxx)
      )
      (object_orientation ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?u - desk_shelf)
        (then
          (once (agent_holds ?u ?u) )
          (hold (in_motion ) )
          (once (agent_holds ?u) )
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (= (count-once-per-objects preference1:purple) (* (+ (* 2 3 )
            (count preference1:red_pyramid_block:dodgeball)
          )
          (* (* 2 (count-once-per-objects preference1) )
            8
          )
        )
      )
    )
    (>= 5 20 )
  )
)
(:scoring
  (count-once-per-objects preference1:pyramid_block)
)
)

(define (game game-id-11) (:domain many-objects-room-v1)
(:setup
  (exists (?a - ball ?l - desk_shelf)
    (game-conserved
      (and
        (and
          (agent_holds ?l)
          (in_motion ?l)
        )
        (exists (?e - game_object)
          (> 1 7)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?d - game_object ?e - chair)
        (then
          (hold (not (above ?e) ) )
          (hold (agent_holds ?e ?e) )
          (once (adjacent ?e blinds) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:basketball) (count-once-per-objects preference1:yellow) )
)
(:scoring
  (+ (count preference1:beachball) (* 2 2 )
  )
)
)

(define (game game-id-12) (:domain many-objects-room-v1)
(:setup
  (forall (?m - ball ?z - building)
    (forall (?p - game_object ?p - (either cube_block book))
      (and
        (forall (?t - chair)
          (exists (?f - shelf ?g - dodgeball ?e - (either cellphone bridge_block cube_block) ?a - hexagonal_bin ?n ?q ?h ?i ?r - (either side_table triangle_block teddy_bear))
            (forall (?l - (either pyramid_block cube_block) ?s - game_object ?b - block ?s - pillow)
              (and
                (game-optional
                  (exists (?u - wall ?y - hexagonal_bin)
                    (agent_holds bed ?q)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (then
        (once (and (not (agent_holds ?xxx ?xxx) ) (agent_crouches ?xxx) ) )
        (hold (not (adjacent ?xxx) ) )
        (once (< (x_position ?xxx ?xxx) 1) )
      )
    )
  )
)
(:terminal
  (>= (* (= 3 (+ (count preference1:hexagonal_bin) (+ (count-once preference1:red:basketball) (and 4 1 20 ) )
        )
      )
      (count-once preference1:hexagonal_bin)
    )
    (count preference1:red)
  )
)
(:scoring
  (- (+ (count preference1:blue_dodgeball) (external-forall-minimize (* (count preference1:golfball) (count preference1:purple:book) )
      )
    )
  )
)
)

(define (game game-id-13) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (in ?xxx ?xxx ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?v - dodgeball ?b - blue_cube_block)
        (at-end
          (same_object ?b)
        )
      )
    )
  )
)
(:terminal
  (and
    (> (* (= (count preference1:hexagonal_bin) 3 (count-once preference1:alarm_clock) )
        (count preference1:blue_dodgeball)
      )
      (* (+ (* 10 (or (count preference1:green) (count preference1:dodgeball:basketball) ) )
          (count preference1:dodgeball:rug)
        )
        4
      )
    )
    (>= (count-once preference1:beachball:dodgeball) (count preference1:red) )
  )
)
(:scoring
  (count-once-per-objects preference1:blue_cube_block)
)
)

(define (game game-id-14) (:domain medium-objects-room-v1)
(:setup
  (forall (?c - hexagonal_bin)
    (exists (?z - ball)
      (and
        (game-conserved
          (not
            (agent_holds ?c)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?l - hexagonal_bin)
        (then
          (hold (on ?l ?l) )
          (once (not (exists (?p - hexagonal_bin) (< 1 (distance ?p room_center)) ) ) )
          (hold (game_start ?l ?l) )
        )
      )
    )
  )
)
(:terminal
  (or
    (not
      (>= 10 (>= (not (count-overlapping preference1:dodgeball) ) 8 )
      )
    )
    (or
      (or
        (and
          (>= 10 3 )
          (or
            (>= (count preference1:orange:red) 2 )
          )
        )
        (and
          (= (* (external-forall-minimize (count preference1:basketball) ) (count-once preference1:beachball) )
            8
          )
        )
        (> 5 (* (count-increasing-measure preference1:dodgeball) (count preference1:blue_dodgeball:dodgeball) )
        )
      )
      (>= (count-once-per-objects preference1:pink) (count preference1:pink_dodgeball:blue_dodgeball:pink) )
      (>= (count-once-per-objects preference1:dodgeball:beachball) (* (- (+ 2 (total-time) )
          )
          2
        )
      )
    )
  )
)
(:scoring
  (* 2 (* (count-same-positions preference1:golfball) (count preference1:blue_dodgeball) )
  )
)
)

(define (game game-id-15) (:domain few-objects-room-v1)
(:setup
  (not
    (game-conserved
      (and
        (agent_holds ?xxx ?xxx)
        (not
          (not
            (and
              (in_motion ?xxx)
              (rug_color_under ?xxx ?xxx)
            )
          )
        )
        (agent_holds ?xxx)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?j - cube_block)
        (then
          (once (adjacent_side ?j) )
          (once (in_motion ?j) )
          (hold (on ?j) )
        )
      )
    )
    (preference preference2
      (exists (?y - pillow ?h - (either alarm_clock laptop dodgeball golfball golfball laptop golfball))
        (then
          (hold (in_motion ?h ?h) )
          (hold (not (in_motion desk) ) )
          (once (object_orientation ?h) )
        )
      )
    )
    (preference preference3
      (exists (?f ?r - (either bridge_block teddy_bear))
        (then
          (once (in ?f) )
          (once (and (and (in_motion ?r ?r) (object_orientation ?f ?f) ) (and (not (agent_holds ?f) ) (and (and (adjacent ?r ?f) (and (in_motion ?f ?r) (in_motion ?f) ) (in agent ?r) ) (not (agent_holds ?f) ) ) (in ?r) ) ) )
          (hold-while (not (in_motion ?f) ) (agent_holds green_golfball) (not (adjacent ?f) ) (adjacent ?f) )
        )
      )
    )
  )
)
(:terminal
  (= (>= (* (count preference1:beachball:blue:beachball) (external-forall-maximize 4 ) )
      (+ (* (count-once-per-objects preference3:hexagonal_bin) (count preference2:yellow) )
        (* (+ (count-once-per-objects preference3:dodgeball) 60 )
          3
        )
      )
    )
    (* (count preference3:beachball:dodgeball) 7 )
  )
)
(:scoring
  8
)
)

(define (game game-id-16) (:domain many-objects-room-v1)
(:setup
  (forall (?a - ball)
    (and
      (game-conserved
        (and
          (exists (?h ?s ?z - building)
            (in ?a)
          )
          (and
            (on ?a pink)
            (agent_holds ?a)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?e - ball ?t - (either dodgeball))
        (then
          (hold (and (on ?t) (in_motion bed ?t) ) )
          (once (and (on ?t ?t) (and (agent_holds agent) (and (not (not (opposite blinds) ) ) (agent_holds ?t) ) ) (and (agent_holds ?t) (is_setup_object ?t) ) ) )
          (hold (exists (?y - game_object ?m - ball) (not (agent_holds front) ) ) )
        )
      )
    )
  )
)
(:terminal
  (<= (* 3 (+ (* (count preference1:top_drawer:yellow:hexagonal_bin) (* 2 )
        )
        4
      )
    )
    3
  )
)
(:scoring
  (* (count preference1:blue_dodgeball:hexagonal_bin) 30 5 )
)
)

(define (game game-id-17) (:domain few-objects-room-v1)
(:setup
  (exists (?r - triangular_ramp)
    (forall (?o - (either teddy_bear cd))
      (game-conserved
        (not
          (and
            (on ?r ?o)
            (not
              (agent_holds floor)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?b - hexagonal_bin)
        (then
          (hold (forall (?g - wall) (in_motion ?g) ) )
          (hold (not (not (in_motion ?b) ) ) )
        )
      )
    )
    (preference preference2
      (exists (?t - (either cube_block laptop) ?d - building)
        (then
          (once (rug_color_under ?d ?d) )
          (hold (and (agent_holds ?d agent) (in_motion ?d) ) )
          (once (in_motion ?d) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) 2 )
)
(:scoring
  (count preference1:yellow_cube_block)
)
)

(define (game game-id-18) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (or
      (in upright)
      (not
        (not
          (agent_holds ?xxx)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference preference1
          (exists (?j ?q ?y ?o - hexagonal_bin ?k - ball ?a - ball)
            (then
              (once (agent_holds ?a) )
              (once (agent_holds ?b ?b) )
              (once (in agent) )
            )
          )
        )
        (preference preference2
          (exists (?m - doggie_bed)
            (then
              (hold-while (or (in_motion ?b) (in_motion ?b ?b) (and (and (on bed) (not (adjacent ?m ?m) ) ) (object_orientation ?m agent) ) (adjacent_side ?m) ) (in_motion ?m bed) )
              (once (agent_holds ?m ?b agent) )
              (once (agent_holds ?m) )
              (once (in ?b ?b) )
            )
          )
        )
        (preference preference3
          (exists (?s - dodgeball ?k - hexagonal_bin ?a - book)
            (then
              (hold (agent_holds ?b) )
            )
          )
        )
      )
    )
    (preference preference4
      (exists (?y - hexagonal_bin)
        (then
          (hold (not (adjacent ?y) ) )
          (once (agent_holds ?y ?y) )
          (once (and (in_motion ?y ?y) ) )
        )
      )
    )
    (preference preference5
      (exists (?a - dodgeball ?c - hexagonal_bin)
        (then
          (hold (adjacent ?c) )
          (hold (not (not (in ?c) ) ) )
          (once (in ?c) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (* (count-overlapping preference2:dodgeball) 3 )
      (= (* (+ 15 5 )
          100
        )
        6
      )
    )
    (* 1 60 3 (count preference5:beachball) (count-once preference3:red) )
  )
)
(:scoring
  (external-forall-maximize
    (count-once-per-objects preference2:dodgeball)
  )
)
)

(define (game game-id-19) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-conserved
      (on ?xxx ?xxx)
    )
    (game-optional
      (and
        (forall (?e - dodgeball)
          (in ?e ?e)
        )
        (not
          (on ?xxx)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?d - ball)
        (then
          (hold (adjacent ?d) )
          (hold (and (adjacent bed) (not (and (in agent) (not (and (not (in_motion ?d) ) (in_motion ?d ?d) ) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (count preference1:green:dodgeball) 9 )
    (>= 6 (count-measure preference1:pink_dodgeball) )
  )
)
(:scoring
  (count preference1:blue_cube_block:purple)
)
)

(define (game game-id-20) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (in ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?e - ball ?r - ball)
        (then
          (once (in_motion ?r) )
          (once (not (in ?r) ) )
          (hold-for 7 (agent_holds bed) )
        )
      )
    )
    (preference preference2
      (exists (?a - hexagonal_bin)
        (then
          (hold (or (between ?a) ) )
          (once (adjacent_side ?a) )
          (hold (and (in_motion ?a) (and (and (in_motion agent ?a) (= 4 1 (distance 0 side_table)) ) (equal_x_position ?a ?a) (in_motion ?a ?a) (in_motion ?a ?a) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 300 (count preference2:basketball) )
)
(:scoring
  (count preference2:book)
)
)

(define (game game-id-21) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (in_motion ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?b - wall ?g - game_object)
        (then
          (hold (touch bed pillow) )
          (once (in_motion ?g) )
          (hold (agent_holds ?g) )
        )
      )
    )
  )
)
(:terminal
  (or
    (and
      (>= (or (- (* 4 (= (count preference1:beachball) 18 )
              (count preference1:pink)
              (count-once preference1:green)
              6
              4
            )
          )
          (- (count-once preference1:wall) )
          (+ (count preference1:dodgeball) (count-once-per-objects preference1:red) )
        )
        10
      )
      (>= (count-once preference1:orange:pink) (+ (count preference1:basketball) (* (+ (+ 7 (count-once-per-objects preference1:yellow_cube_block:rug) )
              0
            )
            (* (external-forall-maximize 10 ) (count preference1:dodgeball) )
            (* (count-once-per-objects preference1:blue_pyramid_block:blue_cube_block) )
          )
          (count-same-positions preference1:top_drawer)
        )
      )
      (not
        (or
          (>= 4 (* 3 (- (count preference1:wall) )
            )
          )
          (>= (count preference1:doggie_bed:basketball) (+ (* (count preference1:pink) (count preference1:blue_cube_block) )
              (+ 3 (count preference1:green) (+ 7 (* (* 1 (count-total preference1:pink) )
                    (* (or (count preference1) ) (count preference1:red) )
                    10
                  )
                  (* (count-measure preference1:dodgeball) (count-once-per-objects preference1:top_drawer) )
                  (< (* 2 (count preference1:dodgeball:tan) )
                    2
                  )
                  (count preference1:purple:dodgeball)
                  1
                )
              )
              8
            )
          )
        )
      )
    )
    (>= 10 (= 1 (count preference1:dodgeball) )
    )
  )
)
(:scoring
  (* 1 15 (* (count-once-per-external-objects preference1:beachball) )
  )
)
)

(define (game game-id-22) (:domain few-objects-room-v1)
(:setup
  (exists (?i - (either dodgeball dodgeball))
    (game-optional
      (and
        (and
          (< 1 (distance ?i agent))
          (< (distance ?i ?i) (distance ?i ?i))
          (not
            (faces ?i)
          )
          (object_orientation ?i)
        )
        (on ?i)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?j - hexagonal_bin)
        (then
          (once (and (on floor) (on back agent) ) )
          (hold (exists (?u - green_triangular_ramp) (not (< 3 (distance desk ?u)) ) ) )
          (hold (on ?j) )
        )
      )
    )
  )
)
(:terminal
  (or
    (and
      (>= 0 3 )
      (>= (> 3 (count preference1:blue_dodgeball) )
        (count preference1:dodgeball)
      )
    )
    (>= (- (count-shortest preference1) )
      (* 3 )
    )
  )
)
(:scoring
  1
)
)

(define (game game-id-23) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (same_type ?xxx)
  )
)
(:constraints
  (and
    (forall (?c - (either main_light_switch alarm_clock desktop))
      (and
        (preference preference1
          (exists (?l - dodgeball ?b - (either dodgeball rug basketball))
            (then
              (hold (in_motion desk) )
              (once (in tan) )
              (once (in_motion ?b) )
              (once (agent_holds ?c) )
              (once (on ?b ?b) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?k - cube_block ?p - (either doggie_bed chair) ?c - cube_block)
        (then
          (once (agent_holds ?c) )
          (hold (and (exists (?n - hexagonal_bin) (not (in_motion ?n) ) ) (not (agent_holds ?c ?c) ) ) )
          (once (same_type ?c ?c) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (count preference1:rug) )
)
(:scoring
  (count-unique-positions preference1:dodgeball)
)
)

(define (game game-id-24) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (and
        (exists (?l ?s ?a - pyramid_block)
          (and
            (game-optional
              (agent_holds ?s)
            )
            (game-optional
              (< (distance front_left_corner ?a) 7)
            )
            (forall (?z - block)
              (game-optional
                (agent_holds ?l)
              )
            )
          )
        )
        (and
          (game-conserved
            (agent_holds ?xxx floor)
          )
          (exists (?r - game_object)
            (and
              (game-conserved
                (and
                  (not
                    (not
                      (and
                        (and
                          (and
                            (in_motion ?r top_drawer)
                            (in ?r ?r)
                            (same_object ?r front)
                            (not
                              (adjacent ?r ?r)
                            )
                          )
                          (agent_holds ?r)
                          (adjacent ?r)
                        )
                        (in_motion bed ?r agent)
                        (and
                          (< 1 (distance_side ?r back))
                          (on ?r)
                        )
                      )
                    )
                  )
                  (agent_holds ?r)
                )
              )
            )
          )
          (game-conserved
            (>= 4 1)
          )
        )
      )
    )
    (exists (?r - hexagonal_bin)
      (game-optional
        (not
          (and
            (in ?r ?r)
            (and
              (not
                (on agent ?r)
              )
              (not
                (in ?r)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?v - hexagonal_bin ?t - (either book))
        (then
          (once (> (distance desk 1) 1) )
          (hold (not (agent_holds ?t ?t) ) )
          (forall-sequence (?e - chair)
            (then
              (once (agent_holds agent) )
              (hold (in front_left_corner) )
              (hold (> (distance agent ?t) 2) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (external-forall-maximize (count-overlapping preference1:pink) ) (count preference1:basketball:yellow) )
  )
)
(:scoring
  (count-same-positions preference1:cube_block)
)
)

(define (game game-id-25) (:domain many-objects-room-v1)
(:setup
  (exists (?p ?v ?n ?y ?c ?h ?b ?k ?q ?m - ball)
    (game-optional
      (not
        (same_type ?y)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?u - building ?f - (either pink teddy_bear basketball alarm_clock cylindrical_block cylindrical_block yellow_cube_block))
        (then
          (forall-sequence (?g - hexagonal_bin)
            (then
              (hold (not (in_motion ?f) ) )
              (once (in ?g ?f) )
              (once (or (> 4 2) (and (exists (?b - hexagonal_bin ?u - cube_block) (touch desk) ) (in_motion ?g) ) ) )
            )
          )
          (hold (adjacent rug) )
          (once (same_color ?f) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-longest preference1:golfball) (count-once-per-objects preference1:blue) )
)
(:scoring
  (count preference1:beachball:pink:pink)
)
)

(define (game game-id-26) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds back ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?d ?e - dodgeball ?e - ball)
        (at-end
          (not
            (not
              (and
                (adjacent agent)
                (not
                  (not
                    (and
                      (on ?e ?e)
                      (not
                        (not
                          (and
                            (agent_holds ?e ?e)
                            (not
                              (and
                                (on ?e)
                                (agent_holds agent ?e)
                              )
                            )
                          )
                        )
                      )
                      (agent_holds ?e ?e)
                      (not
                        (faces ?e door)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (<= (count preference1:pink_dodgeball:doggie_bed:yellow) (* 2 3 )
    )
  )
)
(:scoring
  (count-once preference1:beachball)
)
)

(define (game game-id-27) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (not
      (rug_color_under ?xxx ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?k - teddy_bear)
        (then
          (once (agent_holds ?k ?k) )
          (hold (equal_z_position ?k ?k) )
          (once (not (touch ?k ?k) ) )
        )
      )
    )
    (preference preference2
      (exists (?q - block ?w - building)
        (then
          (once (not (adjacent_side desk ?w) ) )
          (once (in_motion ?w) )
          (hold (adjacent ?w ?w) )
        )
      )
    )
    (preference preference3
      (then
        (hold (< (distance_side ?xxx 6) 2) )
      )
    )
    (preference preference4
      (exists (?b - hexagonal_bin ?g - color)
        (then
          (hold-while (not (adjacent desk pink_dodgeball ?g) ) (agent_holds ?g) )
          (once (not (and (agent_holds ?g) (on ?g ?g) ) ) )
          (once (not (forall (?l ?m ?e - doggie_bed) (touch ?g) ) ) )
        )
      )
    )
    (preference preference5
      (exists (?v - game_object)
        (then
          (once (not (< (distance agent) 7) ) )
          (once (not (in_motion ?v) ) )
          (once (agent_holds ?v) )
        )
      )
    )
    (preference preference6
      (exists (?v - triangular_ramp)
        (at-end
          (agent_holds ?v agent)
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (- (+ (count-same-positions preference5:alarm_clock:red) 5 )
      )
      (count preference6:golfball)
    )
  )
)
(:scoring
  (count-once-per-objects preference4:yellow)
)
)

(define (game game-id-28) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (in_motion ?xxx ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?l - ball)
        (then
          (hold (on top_drawer ?l) )
          (hold-to-end (agent_holds ?l) )
          (once (in floor) )
        )
      )
    )
    (preference preference2
      (exists (?m - red_dodgeball ?m - dodgeball ?q - pyramid_block)
        (then
          (once (not (agent_holds ?q ?q) ) )
          (hold (< (x_position ?q side_table) (distance ?q ?q)) )
          (once (in_motion ?q) )
        )
      )
    )
    (preference preference3
      (exists (?m - hexagonal_bin ?p - hexagonal_bin ?v - hexagonal_bin)
        (then
          (once (forall (?w - beachball) (adjacent_side ?w ?w) ) )
          (hold (and (not (touch ?v ?v) ) (agent_holds ?v ?v) ) )
          (once (not (and (not (in ?v ?v) ) (not (< 1 (distance 9 desk)) ) (and (in_motion ?v ?v) (agent_holds agent ?v) ) (not (agent_holds ?v ?v) ) (rug_color_under ?v) (in_motion ?v ?v) (not (in ?v ?v) ) (and (not (open ?v) ) (and (on ?v ?v) (adjacent ?v ?v) ) ) ) ) )
          (once (< (distance agent ?v) (distance ?v door)) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:dodgeball) 100 )
)
(:scoring
  (/
    (* (* 4 (count preference2:hexagonal_bin) )
      (- (total-score) )
    )
    (count preference2:blue_dodgeball)
  )
)
)

(define (game game-id-29) (:domain medium-objects-room-v1)
(:setup
  (forall (?f - ball)
    (forall (?s - dodgeball ?u - drawer ?t - cube_block)
      (and
        (forall (?x - tall_cylindrical_block ?n - curved_wooden_ramp)
          (exists (?z - hexagonal_bin)
            (exists (?l - doggie_bed)
              (game-optional
                (and
                  (on ?f)
                  (< 7 (distance ?f agent))
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?v - wall)
        (then
          (hold (not (in_motion ?v ?v) ) )
          (hold (not (touch ?v ?v) ) )
          (hold-while (touch ?v ?v) (agent_holds bed) (not (in_motion ?v agent) ) )
        )
      )
    )
    (preference preference2
      (exists (?w - dodgeball)
        (then
          (hold-while (not (touch ?w back) ) (adjacent ?w ?w) )
          (once (and (and (not (in_motion ?w) ) (touch back ?w) (agent_holds ?w brown) (not (agent_holds ?w) ) (not (in_motion ?w ?w) ) (on ?w ?w) (and (and (exists (?g - hexagonal_bin) (agent_holds ?g pink_dodgeball) ) (in_motion bed) ) ) ) (and (and (> 5 1) (and (and (adjacent ?w ?w) (and (on ?w) (not (in_motion ?w) ) ) ) (faces ?w ?w) (in_motion ?w agent) ) (and (not (adjacent ?w ?w) ) (agent_holds ?w ?w) ) ) (and (exists (?o - doggie_bed ?i - doggie_bed) (agent_holds ?i) ) (not (and (in_motion ?w ?w) (in floor) ) ) ) ) ) )
          (once (in_motion ?w) )
        )
      )
    )
  )
)
(:terminal
  (< (* (* (count-once-per-objects preference2:hexagonal_bin) (* (+ (* (* (count preference1:dodgeball) 10 40 )
              0.5
              6
            )
            5
          )
          (count preference2:golfball)
        )
      )
      7
    )
    (count preference2:cube_block:golfball)
  )
)
(:scoring
  (* (* 50 10 )
    (* 8 (+ 2 (* (* (* (- 2 )
              5
              15
            )
            (count-once-per-objects preference2:yellow:basketball)
          )
          10
          (* 6 (+ (count-unique-positions preference1:cube_block:blue_dodgeball) (count preference2:beachball) )
          )
          (+ (count preference2:doggie_bed) (* (count preference1:yellow) (* (* 20 (count-once-per-external-objects preference1:dodgeball) 6 )
                (count preference2:blue_dodgeball)
              )
            )
          )
        )
      )
      (total-score)
    )
    3
  )
)
)

(define (game game-id-30) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (in bed ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?r - doggie_bed)
        (then
          (once (equal_z_position ?r ?r) )
          (once (in_motion ?r ?r) )
          (hold (in_motion ?r ?r) )
          (hold-while (on ?r ?r) (in ?r) (not (exists (?e - block) (in ?r) ) ) )
          (hold (not (not (in_motion ?r) ) ) )
          (hold-while (not (in_motion ?r) ) (agent_holds ?r ?r) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-once-per-external-objects preference1:brown) 1 )
    (not
      (>= 2 (not (* 5 (count preference1:beachball:blue_dodgeball) )
        )
      )
    )
    (> (+ 2 (count preference1:beachball) )
      (count-once-per-objects preference1:hexagonal_bin:dodgeball)
    )
  )
)
(:scoring
  (count-increasing-measure preference1:dodgeball)
)
)

(define (game game-id-31) (:domain medium-objects-room-v1)
(:setup
  (and
    (or
      (game-conserved
        (not
          (in_motion west_wall)
        )
      )
      (game-conserved
        (not
          (in_motion ?xxx)
        )
      )
    )
    (forall (?z - game_object)
      (forall (?r - hexagonal_bin)
        (game-conserved
          (not
            (same_type rug)
          )
        )
      )
    )
    (and
      (and
        (game-conserved
          (agent_holds ?xxx)
        )
        (game-conserved
          (agent_holds ?xxx ?xxx)
        )
        (exists (?j - hexagonal_bin ?b ?x - ball)
          (forall (?c - building ?g - ball)
            (and
              (game-optional
                (agent_holds ?x ?b)
              )
            )
          )
        )
        (game-conserved
          (not
            (in ?xxx)
          )
        )
        (forall (?o - ball)
          (and
            (and
              (exists (?t - chair ?g - dodgeball)
                (exists (?n - ball ?c - hexagonal_bin)
                  (game-conserved
                    (in_motion ?o ?c)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?s - pillow)
        (then
          (once (in_motion ?s) )
          (once (and (agent_holds ?s ?s) ) )
          (hold (in_motion ?s) )
        )
      )
    )
  )
)
(:terminal
  (and
    (> (< 3 (count preference1:yellow:basketball) )
      (count-once preference1:red:beachball)
    )
    (and
      (and
        (or
          (>= 3 (+ 6 (+ 6 (* 3 (count preference1:basketball) )
              )
            )
          )
          (> (* (count preference1:dodgeball:hexagonal_bin:hexagonal_bin) 2 )
            (* (external-forall-minimize (count-overlapping preference1:pink) ) (total-score) )
          )
        )
      )
    )
    (or
      (>= 6 (+ (count preference1:dodgeball) (* (count preference1:yellow:dodgeball) (+ 10 (count preference1:dodgeball) (* 3 (count-once-per-objects preference1:blue_cube_block) )
              10
              9
              8
              (* (+ (* (count preference1:golfball) (count-once-per-objects preference1:blue_pyramid_block) )
                  (count-once preference1:basketball:dodgeball)
                )
                180
              )
              (count preference1:dodgeball)
              (count preference1:basketball)
              5
              5
              (count-same-positions preference1:dodgeball:dodgeball)
            )
          )
        )
      )
    )
  )
)
(:scoring
  3
)
)

(define (game game-id-32) (:domain many-objects-room-v1)
(:setup
  (not
    (game-conserved
      (= 8 (distance ?xxx agent desk))
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?u - dodgeball ?x - game_object)
        (then
          (hold (not (not (agent_holds ?x) ) ) )
          (hold-for 3 (adjacent agent bed) )
          (once (agent_holds desk) )
        )
      )
    )
    (forall (?v - ball)
      (and
        (preference preference2
          (exists (?x - (either doggie_bed desktop cube_block))
            (then
              (hold (agent_holds ?v ?v) )
            )
          )
        )
        (preference preference3
          (exists (?f - doggie_bed ?r - pillow ?c - hexagonal_bin)
            (then
              (hold (adjacent ?v ?c) )
              (once (and (agent_holds floor drawer) (not (on ?c) ) ) )
              (once (same_type ?c ?v) )
              (hold-while (in_motion ?c ?c) (not (in_motion ?c) ) (agent_holds ?v ?c) (and (not (on ?v ?v) ) (agent_holds agent) ) )
            )
          )
        )
        (preference preference4
          (exists (?a - doggie_bed ?t - beachball ?s - hexagonal_bin ?f - hexagonal_bin)
            (then
              (once (not (in ?v agent) ) )
              (once (not (adjacent ?f) ) )
              (hold (and (in ?v) (is_setup_object ?f pink_dodgeball) (agent_holds ?f) (in_motion ?v) (and (agent_holds ?f bed) (not (not (agent_holds ?f) ) ) (agent_holds ?f) ) (in_motion ?f) ) )
            )
          )
        )
      )
    )
    (preference preference5
      (at-end
        (and
          (in_motion ?xxx ?xxx)
          (adjacent ?xxx)
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference1:basketball) (total-time) )
)
(:scoring
  (count preference2:dodgeball:blue_dodgeball)
)
)

(define (game game-id-33) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (and
      (open ?xxx ?xxx)
      (game_over ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?t - dodgeball)
        (then
          (once (touch ?t ?t) )
          (hold (exists (?g - hexagonal_bin) (in ?g ?g) ) )
          (hold (and (agent_holds ?t ?t) (game_over ?t rug) (and (agent_holds ?t) (and (not (on bed) ) (not (not (is_setup_object ?t) ) ) (touch agent) ) ) ) )
        )
      )
    )
    (preference preference2
      (exists (?d - (either basketball pink wall) ?n - hexagonal_bin)
        (then
          (once (< (distance bed room_center) (distance side_table agent)) )
          (hold (in_motion ?n) )
          (once (and (on ?n) (not (and (in ?n) (and (on desk floor) (in ?n) ) ) ) ) )
          (hold-for 5 (and (agent_holds pink ?n) (agent_holds ?n ?n) (not (on ?n) ) ) )
        )
      )
    )
    (preference preference3
      (exists (?g - cube_block)
        (then
          (once (agent_holds ?g) )
          (once (forall (?b - chair) (in_motion ?g ?b) ) )
          (hold (in_motion ?g) )
        )
      )
    )
  )
)
(:terminal
  (<= (+ 18 (count preference3:beachball) )
    (count-once-per-objects preference3:red)
  )
)
(:scoring
  (count preference3:basketball:dodgeball)
)
)

(define (game game-id-34) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-conserved
      (exists (?d - hexagonal_bin)
        (adjacent ?d)
      )
    )
  )
)
(:constraints
  (and
    (forall (?p - ball)
      (and
        (preference preference1
          (exists (?u - hexagonal_bin)
            (at-end
              (in_motion ?p ?u)
            )
          )
        )
        (preference preference2
          (exists (?f - cube_block)
            (then
              (once (and (on ?p) (adjacent rug) (touch ?f) ) )
              (hold (on agent floor) )
              (hold (in ?p) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?l - hexagonal_bin)
        (then
          (hold (or (not (not (in_motion ?l) ) ) (and (in_motion upright ?l) (in_motion bed) ) (and (and (in ?l ?l) (not (and (agent_holds ?l) (agent_holds agent ?l) (in_motion ?l) ) ) (in_motion ?l) ) (< (x_position 5) (distance ?l 6)) ) ) )
          (hold (agent_holds ?l) )
          (once (equal_z_position ?l ?l) )
        )
      )
    )
  )
)
(:terminal
  (>= 6 (total-score) )
)
(:scoring
  (= (* 15 (+ (count preference2:yellow) (* (+ (count preference3:dodgeball) (* (count preference2:orange) 9 )
          )
          (* 5 (* (* (count-once preference1) 7 )
            )
          )
        )
      )
    )
    (count preference3:dodgeball)
  )
)
)

(define (game game-id-35) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-optional
      (or
        (in_motion ?xxx ?xxx)
        (adjacent ?xxx agent)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?v ?s ?h ?y ?z ?k - hexagonal_bin)
        (then
          (once (in_motion upright) )
          (hold (adjacent ?h ?k) )
          (once (touch ?y ?h) )
        )
      )
    )
    (preference preference2
      (exists (?b - hexagonal_bin ?q - dodgeball)
        (then
          (hold (and (not (not (in_motion ?q) ) ) (rug_color_under agent) (in_motion agent) ) )
        )
      )
    )
    (preference preference3
      (exists (?q ?z - dodgeball)
        (at-end
          (not
            (in_motion rug ?z agent)
          )
        )
      )
    )
  )
)
(:terminal
  (< (count preference3:dodgeball) 3 )
)
(:scoring
  2
)
)

(define (game game-id-36) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?e - dodgeball ?g - cube_block)
      (exists (?j - hexagonal_bin)
        (forall (?e - golfball ?r - block ?p - tall_cylindrical_block)
          (exists (?o - (either game_object desktop))
            (and
              (game-optional
                (between ?g)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - teddy_bear)
      (and
        (preference preference1
          (exists (?y - shelf)
            (then
              (hold-while (touch ?y) (not (and (agent_holds ?y ?h) (in_motion ?h) (not (on ?y) ) ) ) (<= (distance 4 ?y) (distance agent desk ?y)) )
              (once (in_motion ?y) )
              (hold-while (rug_color_under ?h) (in_motion ?y) )
            )
          )
        )
      )
    )
    (forall (?u - hexagonal_bin ?b - (either pyramid_block dodgeball))
      (and
        (preference preference2
          (exists (?y - pillow)
            (then
              (once (game_start ?b) )
              (once (adjacent ?y) )
              (once (in ?b) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 3 7 )
)
(:scoring
  (count preference1:red)
)
)

(define (game game-id-37) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (rug_color_under ?xxx ?xxx desk)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?j - doggie_bed)
        (then
          (once (and (and (agent_holds ?j) (on ?j) (on ?j ?j) ) (not (not (touch ?j) ) ) ) )
          (hold (agent_holds ?j) )
          (once (in_motion door) )
        )
      )
    )
    (preference preference2
      (exists (?t - triangular_ramp)
        (then
          (any)
          (once (exists (?h - drawer) (same_type ?h) ) )
          (hold (in_motion ?t desk) )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (+ (* (+ (count-shortest preference1:beachball) 2 )
        8
        (count preference2:yellow:dodgeball)
      )
      (count preference1:brown)
      (* (count-once-per-objects preference2:blue_dodgeball) (count-unique-positions preference2:wall:pink) )
    )
  )
)
(:scoring
  (count-once-per-objects preference2:wall)
)
)

(define (game game-id-38) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?g - hexagonal_bin)
      (and
        (exists (?b - hexagonal_bin)
          (game-conserved
            (on ?g)
          )
        )
        (and
          (game-conserved
            (agent_holds agent ?g)
          )
        )
        (game-conserved
          (and
            (in_motion ?g)
            (in_motion ?g)
          )
        )
        (exists (?z - pyramid_block ?d - dodgeball)
          (and
            (exists (?t ?i ?s - (either basketball pink) ?h - red_pyramid_block)
              (forall (?f - chair ?i - building)
                (and
                  (forall (?z - cube_block)
                    (and
                      (exists (?r - hexagonal_bin)
                        (game-conserved
                          (above ?z desk)
                        )
                      )
                    )
                  )
                )
              )
            )
            (or
              (game-conserved
                (agent_holds ?d)
              )
              (game-conserved
                (not
                  (and
                    (agent_holds agent)
                    (in_motion ?d)
                    (agent_holds ?d ?g)
                  )
                )
              )
            )
          )
        )
        (game-optional
          (toggled_on ?g)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?u - block)
        (then
          (any)
          (hold (agent_holds ?u ?u) )
          (once (in_motion ?u) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 2 (count preference1:hexagonal_bin) (count preference1:basketball) 10 (count preference1:beachball) (count-once-per-objects preference1:red:blue_dodgeball) )
    (count preference1:yellow:basketball:beachball)
  )
)
(:scoring
  (* (* (count preference1:pink) 6 3 )
    (count preference1:golfball)
  )
)
)

(define (game game-id-39) (:domain medium-objects-room-v1)
(:setup
  (exists (?v - triangular_ramp)
    (forall (?g - doggie_bed)
      (exists (?w - building ?r - dodgeball)
        (and
          (game-conserved
            (and
              (agent_holds ?r ?v)
              (and
                (not
                  (on agent)
                )
                (agent_holds ?v)
                (not
                  (and
                    (in_motion ?g ?v)
                    (agent_holds ?r)
                  )
                )
              )
            )
          )
          (and
            (game-optional
              (in_motion ?v)
            )
            (game-conserved
              (not
                (in ?g ?g)
              )
            )
            (game-conserved
              (and
                (not
                  (not
                    (agent_holds ?v ?g)
                  )
                )
                (or
                  (and
                    (agent_holds ?r)
                    (on desk)
                  )
                  (in_motion ?v)
                  (agent_holds ?g)
                  (in_motion )
                )
              )
            )
          )
          (not
            (and
              (game-conserved
                (not
                  (in ?g)
                )
              )
              (game-conserved
                (agent_holds )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?y - pillow)
      (and
        (preference preference1
          (exists (?n - block)
            (then
              (hold (and (= (distance 10) 1) (in_motion ?n) (on ?n) ) )
              (hold (and (agent_holds front) (in_motion ?n) ) )
              (hold (and (agent_holds bed ?y) (equal_x_position ?y) (not (on ?n) ) ) )
            )
          )
        )
      )
    )
    (forall (?v - chair)
      (and
        (preference preference2
          (then
            (hold-while (agent_holds ?v ?v) (same_type top_shelf ?v) (not (not (and (on ?v ?v) (not (and (and (on ?v ?v) (in_motion ?v) (rug_color_under left) ) ) ) (same_color ?v ?v) (on ?v ?v) ) ) ) )
            (once (and (not (not (adjacent rug) ) ) (between bed) ) )
            (hold (agent_holds desk) )
          )
        )
        (preference preference3
          (exists (?m - ball ?f - teddy_bear)
            (then
              (hold (agent_holds ?f pink) )
              (hold (in_motion ?v) )
              (hold (in ?v ?v) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= 2 9 )
    (not
      (or
        (>= (* (* 1 10 )
            (+ 10 (total-time) (+ (+ (* 15 2 (* 8 (count preference3:golfball) 0.7 )
                    (+ 5 (+ (* (count preference2:dodgeball) (+ 2 (count preference3:golfball) )
                        )
                        (<= (count preference1:dodgeball) (external-forall-maximize (count-once preference3:doggie_bed) ) )
                      )
                    )
                    (count preference1:beachball)
                    7
                  )
                  (count preference3:dodgeball)
                )
                300
              )
              3
            )
          )
          8
        )
      )
    )
    (or
      (> 2 (not (count preference3:pink_dodgeball) ) )
      (>= 15 (count preference1:basketball) )
    )
  )
)
(:scoring
  (count preference2:pink_dodgeball)
)
)

(define (game game-id-40) (:domain medium-objects-room-v1)
(:setup
  (exists (?i - hexagonal_bin)
    (forall (?l - ball)
      (game-conserved
        (same_color ?l)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?y - hexagonal_bin ?z - color)
        (then
          (hold (forall (?h - hexagonal_bin ?e - chair) (agent_holds east_sliding_door) ) )
          (once (not (< 1 (distance desk 7)) ) )
          (once (not (exists (?h - cube_block) (or (agent_holds ?z rug) (not (agent_holds south_west_corner) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (> (count preference1:cylindrical_block) 1 )
)
(:scoring
  (- 10 )
)
)

(define (game game-id-41) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?o - wall)
      (game-conserved
        (adjacent_side bed ?o)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?c - chair ?h - chair)
        (then
          (once (not (not (on ?h) ) ) )
          (once (= (distance ?h 9) 5) )
          (once (game_start ?h) )
        )
      )
    )
  )
)
(:terminal
  (or
    (= 5 (count preference1:pink_dodgeball:cube_block) )
    (>= (count preference1:dodgeball) (* 7 (count-measure preference1:dodgeball) )
    )
  )
)
(:scoring
  (and
    (count preference1:basketball)
  )
)
)

(define (game game-id-42) (:domain few-objects-room-v1)
(:setup
  (forall (?x - sliding_door)
    (game-conserved
      (and
        (in ?x)
        (not
          (between agent)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?e - (either pyramid_block hexagonal_bin laptop))
        (then
          (once (< 0 4) )
          (once (or (and (and (agent_holds ?e ?e) (agent_holds front) ) (or (not (not (and (on ?e ?e) (and (agent_holds ?e ?e) (in_motion ?e ?e) (on ?e) ) ) ) ) (in_motion ?e) ) (on door ?e) ) (not (is_setup_object ?e) ) ) )
          (once (not (on pink ?e) ) )
        )
      )
    )
    (preference preference2
      (exists (?a - (either ball cylindrical_block) ?k - dodgeball ?u - (either alarm_clock book key_chain))
        (at-end
          (agent_holds ?u)
        )
      )
    )
    (preference preference3
      (exists (?b - (either flat_block key_chain golfball))
        (then
          (once (in_motion ?b ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= 7 3 )
)
(:scoring
  (count-once-per-objects preference1:dodgeball:dodgeball)
)
)

(define (game game-id-43) (:domain many-objects-room-v1)
(:setup
  (exists (?e - flat_block)
    (forall (?b - (either blue_cube_block main_light_switch))
      (and
        (forall (?x - red_dodgeball)
          (game-conserved
            (agent_holds ?b ?b)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?k - ball ?j - wall ?e - ball ?n ?h - cube_block ?a - block)
      (and
        (preference preference1
          (exists (?x - (either golfball golfball))
            (then
              (hold (not (agent_holds ) ) )
              (hold (is_setup_object ?a ?x) )
              (once (agent_holds ?a ?x) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?s - triangular_ramp ?p - wall)
        (then
          (once-measure (on ?p ?p) (distance 5 desk) )
          (once (agent_holds ?p) )
          (hold (in_motion front) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 5 2 )
    (count-once preference1:basketball)
  )
)
(:scoring
  (count preference1:dodgeball)
)
)

(define (game game-id-44) (:domain few-objects-room-v1)
(:setup
  (forall (?t - (either basketball dodgeball) ?k ?x - yellow_cube_block)
    (exists (?z - ball)
      (and
        (forall (?p - red_dodgeball ?g - (either pillow dodgeball) ?i - hexagonal_bin)
          (game-conserved
            (not
              (agent_holds desk)
            )
          )
        )
        (and
          (exists (?j - doggie_bed)
            (forall (?w - watch)
              (exists (?f - dodgeball)
                (game-conserved
                  (not
                    (and
                      (is_setup_object ?j front)
                      (and
                        (in_motion ?f ?x)
                        (not
                          (and
                            (agent_holds ?z ?x)
                            (in desk)
                            (< 1 (x_position ?w 3))
                            (or
                              (in_motion ?f)
                              (and
                                (in_motion ?w ?z ?k)
                                (and
                                  (exists (?q - dodgeball ?v ?y ?a - dodgeball ?p ?v - curved_wooden_ramp ?h - building)
                                    (<= 2 5)
                                  )
                                  (< 2 (distance ?f agent))
                                )
                              )
                            )
                            (on ?f)
                            (not
                              (not
                                (in ?z)
                              )
                            )
                            (in_motion ?x)
                            (exists (?m - (either hexagonal_bin bridge_block))
                              (on ?k)
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
          (game-optional
            (in_motion ?k)
          )
        )
        (forall (?d - beachball ?j - block)
          (forall (?e - shelf ?u - dodgeball ?q - doggie_bed)
            (exists (?b - pyramid_block ?a - dodgeball ?a - hexagonal_bin)
              (game-conserved
                (touch ?z)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?r - hexagonal_bin)
        (at-end
          (not
            (agent_holds ?r agent)
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (< 3 (count-overlapping preference1:basketball:tall_cylindrical_block:alarm_clock) )
      (>= (* 1 (- (count preference1:basketball) )
          (count-once-per-external-objects preference1:hexagonal_bin)
        )
        (not
          30
        )
      )
    )
  )
)
(:scoring
  (count preference1:pink)
)
)

(define (game game-id-45) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?i - (either dodgeball laptop))
      (game-conserved
        (<= (distance ?i ?i) (distance ?i ?i back))
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?t - block)
        (at-end
          (= (distance ) 7)
        )
      )
    )
    (preference preference2
      (exists (?z - dodgeball)
        (then
          (once (touch ?z) )
          (hold-to-end (same_type ?z ?z) )
          (once (= 1 4 1) )
        )
      )
    )
  )
)
(:terminal
  (> (* 2 (count preference2:red) )
    3
  )
)
(:scoring
  (total-time)
)
)

(define (game game-id-46) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (adjacent ?xxx ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?s - curved_wooden_ramp ?w - (either alarm_clock dodgeball))
        (then
          (once (not (adjacent ?w ?w) ) )
          (once-measure (adjacent_side ?w bed) (distance 4) )
          (hold (in_motion ?w) )
        )
      )
    )
    (forall (?k ?y - hexagonal_bin)
      (and
        (preference preference2
          (exists (?n - building)
            (then
              (once (in ?k ?n) )
              (hold (agent_holds ?k) )
              (hold-while (exists (?j - dodgeball) (agent_holds ?n) ) (and (exists (?b - red_dodgeball ?w - block) (not (agent_holds desk ?n) ) ) (not (= 0.5 2) ) ) (same_color ?n) )
            )
          )
        )
        (preference preference3
          (exists (?v - desk_shelf)
            (then
              (once (not (agent_holds agent green) ) )
              (hold-while (or (and (in ?y ?v ?y) (adjacent ?y) ) (on ?y ?k) ) (on ?k) )
              (once (and (on ?k) (and (and (above ?k ?k) (in_motion ?v) ) (in_motion ?y ?y) (agent_holds ?v) (agent_holds ?y) (rug_color_under ?v) (in_motion ?v) (on ?k) (not (in_motion ?k) ) (touch ?k) (not (not (agent_holds ?y ?v) ) ) (and (agent_holds ?v desk) (in_motion ?y) ) (and (same_type ?v) (and (and (not (agent_holds ?v) ) (and (touch ?y ?y) (touch ?y) (in_motion bed ?y) ) ) (< (distance agent desk) 1) ) (and (in ?v ?k) (agent_holds floor) ) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= 4 (count preference2:white) )
      (not
        (or
          (<= 6 (count-longest preference3:dodgeball) )
          (>= 5 (total-time) )
        )
      )
      (not
        (>= (total-score) (count-once-per-objects preference2:red:dodgeball) )
      )
    )
    (>= (+ 5 (* (count-once-per-objects preference2:basketball) (* (external-forall-maximize (count preference1:dodgeball:basketball) ) (* (count-longest preference1:golfball) 10 4 )
          )
          (count-once-per-objects preference2)
          (* (count-once-per-objects preference2:pink:basketball) (or 3 ) )
        )
      )
      2
    )
    (<= (* (+ (count-once-per-objects preference1:dodgeball) (count-once-per-objects preference2:dodgeball) (+ (= 9 (count preference3:basketball:pink_dodgeball) )
            (count preference3:pink)
          )
        )
        (count-shortest preference3:dodgeball)
      )
      (count-overlapping preference2:hexagonal_bin:yellow)
    )
  )
)
(:scoring
  2
)
)

(define (game game-id-47) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (not
      (agent_holds door)
    )
  )
)
(:constraints
  (and
    (forall (?u - wall)
      (and
        (preference preference1
          (exists (?g ?s - doggie_bed)
            (then
              (once (touch ?g) )
              (hold-while (on ?s ?g) (not (in_motion ?s ?u) ) (agent_holds ?g) (not (not (in desk) ) ) )
              (once (or (equal_z_position ?s ?s) (and (in ?u ?g) (touch ?u) (agent_holds ?s ?s) ) ) )
            )
          )
        )
        (preference preference2
          (exists (?z - (either flat_block blue_cube_block cylindrical_block))
            (then
              (once (in_motion ?z) )
              (once (in_motion ?u) )
              (once (not (and (in_motion ?z ?u) (and (not (and (forall (?k - teddy_bear) (not (and (not (and (in_motion right) (and (not (agent_holds ?z) ) (in ?z) ) (not (and (not (and (in_motion ?z) (not (in ?u ?u) ) ) ) (touch ?z agent) (agent_holds pink_dodgeball ?k) ) ) ) ) (in_motion ?u) ) ) ) (in ?z) ) ) (in_motion bed ?z) (and (in ?u) (touch ?u) (agent_holds ?u) ) ) (agent_holds ?z ?u) ) ) )
            )
          )
        )
        (preference preference3
          (exists (?v - dodgeball ?v - ball)
            (then
              (hold (agent_holds ?u ?u) )
              (hold (and (not (in_motion ?u) ) ) )
              (hold (not (and (and (= (distance ?v)) (agent_holds ?u ?u) ) (and (in_motion ?u ?u) (and (< (distance room_center ?v) 1) (and (and (agent_holds agent ?u) (not (not (< (distance 9 3) 1) ) ) ) (not (in_motion agent) ) ) ) ) ) ) )
            )
          )
        )
      )
    )
    (preference preference4
      (exists (?d - cylindrical_block)
        (then
          (once (in_motion pink_dodgeball) )
          (hold (in_motion floor agent) )
          (hold-while (on ?d) (not (in_motion agent ?d) ) (in_motion ?d) )
          (once (agent_holds ?d) )
          (once (not (not (agent_holds ?d) ) ) )
          (once (not (on ?d) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 20 (total-score) )
)
(:scoring
  3
)
)

(define (game game-id-48) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (and
        (forall (?s ?u - hexagonal_bin)
          (game-conserved
            (in_motion agent)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?f - dodgeball ?p - (either dodgeball golfball) ?w - curved_wooden_ramp ?k - (either laptop dodgeball triangle_block))
      (and
        (preference preference1
          (exists (?g - curved_wooden_ramp)
            (at-end
              (not
                (not
                  (in_motion ?g)
                )
              )
            )
          )
        )
        (preference preference2
          (exists (?a - building)
            (then
              (hold (not (> (distance desk ?a) (distance 8 desk)) ) )
              (once (above ?a) )
              (once (in_motion ?k) )
            )
          )
        )
      )
    )
    (forall (?d - game_object ?n - pillow)
      (and
        (preference preference3
          (exists (?y - hexagonal_bin ?d - dodgeball)
            (then
              (once (in_motion ?n) )
              (once (not (not (agent_holds bed agent) ) ) )
              (once (>= 1 (distance agent ?d)) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (external-forall-maximize (* (external-forall-maximize (* (+ 4 4 2 )
            (count preference1:dodgeball)
          )
        )
        (external-forall-maximize
          (* (count-once-per-objects preference1:purple) (count preference2:pink:golfball) )
        )
        5
      )
    )
    2
  )
)
(:scoring
  (count preference2:dodgeball)
)
)

(define (game game-id-49) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (and
        (forall (?t - hexagonal_bin ?a - hexagonal_bin)
          (exists (?q - doggie_bed)
            (and
              (not
                (and
                  (and
                    (exists (?j ?e ?f ?g ?r ?o ?p ?w ?h ?n - dodgeball)
                      (exists (?l ?x - (either golfball))
                        (game-conserved
                          (and
                            (or
                              (adjacent ?w ?w)
                              (in_motion agent ?w)
                              (in ?e green)
                            )
                            (< 1 (distance bed 5))
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?q - dodgeball)
      (and
        (preference preference1
          (exists (?k - desktop ?m - building)
            (then
              (hold (on ?q ?m) )
              (hold (in_motion ?q) )
              (once (touch ?m ?m) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?t - curved_wooden_ramp)
        (then
          (hold (and (same_object ?t ?t) (in_motion ?t) ) )
          (hold-while (in_motion door ?t) (agent_holds ?t ?t) (in_motion ?t) )
          (hold-while (not (agent_holds ?t) ) (and (agent_holds ?t) (not (not (in_motion ?t bridge_block) ) ) ) (in ?t ?t) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count preference1:pink_dodgeball) (* (total-time) )
    )
    (= 10 (- (* (external-forall-maximize 30 ) 6 )
      )
    )
  )
)
(:scoring
  8
)
)

(define (game game-id-50) (:domain many-objects-room-v1)
(:setup
  (forall (?c - ball ?j - chair)
    (exists (?q - hexagonal_bin)
      (game-conserved
        (agent_holds agent)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?h - teddy_bear ?q - dodgeball)
        (then
          (hold (agent_holds ?q) )
          (once (and (not (agent_holds ?q) ) ) )
          (hold (and (in_motion agent) (not (and (and (agent_holds ?q) (in_motion ?q) ) (toggled_on ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (external-forall-maximize (* (total-time) (total-time) )
      )
      4
    )
    (>= 10 5 )
  )
)
(:scoring
  (count preference1:red:blue_pyramid_block)
)
)

(define (game game-id-51) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (game-optional
        (and
          (< 1 1)
          (on ?xxx bed ?xxx)
          (adjacent ?xxx)
        )
      )
    )
    (forall (?b - game_object)
      (not
        (game-conserved
          (in_motion agent sideways)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c - building ?s - block)
      (and
        (preference preference1
          (exists (?f - hexagonal_bin)
            (at-end
              (not
                (and
                  (in_motion ?f)
                  (not
                    (in_motion ?s)
                  )
                  (agent_holds ?f ?s)
                  (above ?s rug)
                )
              )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?y - wall ?j - building)
        (then
          (once (forall (?s - game_object) (in_motion agent ?s) ) )
          (once (not (agent_holds ?j) ) )
          (once (and (not (agent_holds ?j ?j) ) (in ?j ?j) ) )
        )
      )
    )
  )
)
(:terminal
  (<= (count preference2:cube_block) (+ 0 (and (count-once-per-objects preference2:yellow) (count-once-per-objects preference1:blue_cube_block:dodgeball) ) )
  )
)
(:scoring
  (count-overlapping preference1:bed)
)
)

(define (game game-id-52) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (in_motion ?xxx rug ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (then
        (once (same_color ?xxx) )
        (hold (and (and (not (in_motion ?xxx rug) ) (in ?xxx ?xxx) ) (and (object_orientation ?xxx agent) (and (touch ?xxx) (adjacent ?xxx agent) ) ) ) )
        (hold (in ?xxx) )
      )
    )
    (preference preference2
      (exists (?p - block)
        (then
          (hold-while (and (object_orientation ?p ?p) (or (agent_holds rug ?p) (on ?p) ) (and (on ?p) (not (in_motion ) ) ) ) (and (on ?p) (and (agent_holds floor ?p) (is_setup_object ?p ?p) ) ) (touch ?p right) )
          (once (in_motion ?p ?p) )
          (once (in door) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:dodgeball:pink_dodgeball) 5 )
)
(:scoring
  (- (count preference1:triangle_block) )
)
)

(define (game game-id-53) (:domain few-objects-room-v1)
(:setup
  (exists (?l - game_object ?j - dodgeball)
    (exists (?u - (either laptop cube_block) ?y - building ?o - dodgeball)
      (forall (?x - (either alarm_clock golfball))
        (and
          (and
            (game-conserved
              (on brown desk)
            )
            (and
              (game-conserved
                (on ?o)
              )
            )
            (forall (?a - game_object ?s - cube_block)
              (exists (?q - game_object)
                (game-conserved
                  (on ?j ?s)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?n - hexagonal_bin ?r - dodgeball ?n - dodgeball)
        (then
          (hold (and (not (in_motion ?n ?n) ) (in_motion ?n ?n) (touch brown) ) )
          (once (agent_holds ?n) )
          (hold (not (<= 9 (distance ?n)) ) )
        )
      )
    )
  )
)
(:terminal
  (> (count preference1:dodgeball) 10 )
)
(:scoring
  (count preference1:red)
)
)

(define (game game-id-54) (:domain medium-objects-room-v1)
(:setup
  (forall (?i - hexagonal_bin)
    (game-conserved
      (in ?i)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?m ?z - (either yellow lamp hexagonal_bin pink basketball) ?h - chair)
        (then
          (once (< (distance ?h ?h) 5) )
          (once (in_motion ?h) )
          (hold-while (on desk) (not (agent_holds ?h ?h) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-overlapping preference1:dodgeball:yellow) 4 )
)
(:scoring
  (count preference1:beachball:book)
)
)

(define (game game-id-55) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (and
      (not
        (and
          (object_orientation ?xxx ?xxx)
          (on ?xxx)
        )
      )
      (and
        (< (distance room_center ?xxx) 4)
        (not
          (in agent ?xxx)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?c - (either key_chain wall alarm_clock) ?r ?a - hexagonal_bin)
        (then
          (hold (touch ?a) )
          (hold (game_over ?a) )
          (any)
        )
      )
    )
    (preference preference2
      (exists (?x - hexagonal_bin ?m - building ?n - chair)
        (at-end
          (on ?n ?n)
        )
      )
    )
  )
)
(:terminal
  (> (* 5 (count preference1:dodgeball) )
    (count preference2:golfball:basketball)
  )
)
(:scoring
  3
)
)

(define (game game-id-56) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (in_motion ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?q - cylindrical_block)
        (then
          (once (not (on ?q ?q ?q) ) )
          (once (and (agent_holds agent) (= 3 10) ) )
          (once (adjacent ?q ?q ?q) )
        )
      )
    )
  )
)
(:terminal
  (> 5 (count-once-per-external-objects preference1:golfball) )
)
(:scoring
  2
)
)

(define (game game-id-57) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds ?xxx ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?b - dodgeball ?v - block)
        (then
          (hold-while (agent_holds ?v) (in ?v ?v) (not (in ?v) ) )
          (once (on ?v) )
          (hold (agent_holds ?v) )
        )
      )
    )
    (preference preference2
      (exists (?b - dodgeball)
        (then
          (once (agent_holds agent) )
          (hold (not (agent_holds agent ?b) ) )
          (hold-while (not (not (in_motion ?b) ) ) (in ?b) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* (count-once-per-objects preference2:dodgeball) 3 )
      5
    )
    (and
      (or
        (>= (* (* (count-once-per-objects preference2:dodgeball) 8 )
            7
          )
          5
        )
        (or
          (>= (* (+ 9 (* 4 (count preference2:hexagonal_bin) )
              )
              (count preference2:dodgeball:red_pyramid_block)
            )
            (/
              (count-same-positions preference1:dodgeball:pink:yellow)
              1
            )
          )
          (= (+ (count preference1:top_drawer) (= (external-forall-minimize (* (* 10 (- (count preference2:golfball:doggie_bed:hexagonal_bin) )
                    )
                    (count preference2:pink)
                  )
                )
                20
              )
              (count-once-per-objects preference1:dodgeball:dodgeball)
            )
            50
          )
          (>= (count-once-per-objects preference1:golfball:dodgeball) (count preference1:purple:dodgeball) )
        )
      )
    )
  )
)
(:scoring
  (count preference2:golfball)
)
)

(define (game game-id-58) (:domain few-objects-room-v1)
(:setup
  (forall (?x - ball ?w - chair ?m - tall_cylindrical_block)
    (and
      (game-optional
        (not
          (or
            (and
              (or
                (on ?m)
                (not
                  (agent_holds ?m)
                )
              )
              (in_motion ?m ?m)
            )
            (in ?m)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?r - blue_pyramid_block)
      (and
        (preference preference1
          (exists (?o - (either dodgeball cube_block) ?q - ball)
            (then
              (once (not (open ?r) ) )
              (hold-while (is_setup_object ?q) (in_motion ?q) )
              (once (agent_holds ?q) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?k ?h - dodgeball ?t - golfball ?c - yellow_cube_block ?f - pyramid_block)
        (then
          (hold (<= 10 1) )
          (once (agent_holds ?f ?f) )
          (hold (on ?f) )
        )
      )
    )
  )
)
(:terminal
  (< (external-forall-maximize (count-once-per-objects preference1:yellow) ) (+ (count preference1:blue_cube_block:doggie_bed) 7 )
  )
)
(:scoring
  (+ (* (- 2 )
      (* 10 2 )
    )
    (count-once-per-objects preference1:triangle_block)
  )
)
)

(define (game game-id-59) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-conserved
      (not
        (in ?xxx)
      )
    )
    (and
      (forall (?t - doggie_bed ?q - building)
        (game-optional
          (not
            (agent_holds ?q ?q)
          )
        )
      )
      (and
        (exists (?s - ball)
          (and
            (game-optional
              (not
                (and
                  (and
                    (not
                      (in ?s ?s)
                    )
                    (same_color ?s front)
                  )
                  (agent_holds desk)
                  (agent_holds ?s)
                )
              )
            )
            (exists (?e - ball)
              (game-optional
                (in_motion ?e agent)
              )
            )
            (exists (?z - dodgeball ?j - game_object)
              (exists (?p - dodgeball)
                (and
                  (forall (?z - game_object ?g - hexagonal_bin)
                    (and
                      (forall (?e - hexagonal_bin ?f - (either basketball cd blue_cube_block))
                        (game-optional
                          (not
                            (on ?s)
                          )
                        )
                      )
                      (and
                        (game-optional
                          (agent_holds ?g)
                        )
                      )
                    )
                  )
                  (game-optional
                    (not
                      (adjacent ?j)
                    )
                  )
                  (and
                    (exists (?b - dodgeball)
                      (exists (?u - (either alarm_clock pyramid_block dodgeball) ?o - curved_wooden_ramp)
                        (game-optional
                          (< 0.5 7)
                        )
                      )
                    )
                  )
                  (exists (?d - dodgeball)
                    (forall (?e - building)
                      (exists (?b ?l - hexagonal_bin)
                        (exists (?u - building)
                          (game-conserved
                            (and
                              (and
                                (or
                                  (not
                                    (exists (?w - (either dodgeball chair))
                                      (equal_z_position ?j)
                                    )
                                  )
                                )
                                (and
                                  (not
                                    (not
                                      (not
                                        (adjacent desk ?d)
                                      )
                                    )
                                  )
                                  (agent_holds ?p)
                                )
                                (> 1 0)
                                (and
                                  (same_object ?s ?d)
                                  (adjacent ?d ?e)
                                )
                                (in ?d)
                                (touch ?b)
                                (not
                                  (and
                                    (not
                                      (and
                                        (and
                                          (forall (?o - shelf ?n - hexagonal_bin ?k - game_object ?v - building)
                                            (in_motion agent ?u)
                                          )
                                          (not
                                            (not
                                              (in_motion ?p)
                                            )
                                          )
                                        )
                                        (not
                                          (not
                                            (not
                                              (< (building_size room_center 5) 1)
                                            )
                                          )
                                        )
                                        (not
                                          (in ?e)
                                        )
                                      )
                                    )
                                    (agent_holds ?d)
                                  )
                                )
                                (adjacent ?s ?j)
                              )
                              (touch ?b)
                            )
                          )
                        )
                      )
                    )
                  )
                  (game-optional
                    (not
                      (on ?j ?p)
                    )
                  )
                )
              )
            )
          )
        )
        (and
          (game-conserved
            (in_motion agent ?xxx)
          )
        )
      )
      (forall (?c - (either basketball golfball pyramid_block))
        (game-conserved
          (adjacent ?c)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?a - (either pyramid_block))
        (then
          (once (not (< 8 1) ) )
          (once (in_motion ?a) )
          (once (not (in_motion ?a) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 1 5 )
)
(:scoring
  (count preference1:golfball)
)
)

(define (game game-id-60) (:domain few-objects-room-v1)
(:setup
  (exists (?h - wall ?g - cube_block)
    (or
      (game-optional
        (or
          (not
            (in_motion bed ?g)
          )
          (< 1 1)
        )
      )
      (game-optional
        (agent_holds ?g ?g)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?t - hexagonal_bin ?b - dodgeball ?a - (either ball watch))
        (then
          (once (and (touch ?a) (in_motion blue) ) )
          (once (same_color ?a ?a) )
          (once (and (not (and (not (in_motion agent ?a) ) (and (and (not (agent_holds ?a) ) (in_motion ?a agent) ) (not (touch front bed) ) ) ) ) (in ?a ?a) (and (agent_holds ?a ?a) (agent_holds ?a ?a) (in_motion floor) ) ) )
        )
      )
    )
    (preference preference2
      (exists (?r ?n - color)
        (at-end
          (agent_holds ?r)
        )
      )
    )
    (forall (?q - dodgeball)
      (and
        (preference preference3
          (exists (?z - hexagonal_bin ?n - hexagonal_bin ?i - game_object ?w - dodgeball)
            (then
              (once (exists (?n ?t - (either lamp hexagonal_bin) ?b - hexagonal_bin ?j - cube_block) (in_motion ?q ?w) ) )
              (once (> (distance 0) 1) )
              (once (same_color ?q ?w) )
            )
          )
        )
        (preference preference4
          (exists (?p - triangular_ramp)
            (then
              (hold (agent_holds ?p) )
              (hold (in_motion pink) )
              (hold (not (in_motion ?q) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference2:pink_dodgeball) (count-once preference4:book) )
)
(:scoring
  (count preference4:red)
)
)

(define (game game-id-61) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?w - (either dodgeball chair))
      (and
        (game-conserved
          (and
            (and
              (between ?w)
              (on bed ?w)
              (agent_holds ?w ?w)
            )
            (and
              (agent_holds ?w)
              (agent_holds ?w ?w)
            )
          )
        )
        (exists (?a - block ?x - hexagonal_bin)
          (game-optional
            (adjacent ?w)
          )
        )
        (game-conserved
          (in_motion ?w)
        )
      )
    )
    (and
      (exists (?d - building)
        (forall (?i - ball)
          (exists (?o - (either laptop tall_cylindrical_block dodgeball top_drawer key_chain book golfball) ?h - (either alarm_clock pencil basketball) ?t - triangular_ramp)
            (exists (?g - block ?n - ball ?p - block)
              (and
                (forall (?c ?b - (either cd))
                  (game-conserved
                    (agent_holds ?t)
                  )
                )
              )
            )
          )
        )
      )
      (game-optional
        (on ?xxx front)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?v - dodgeball ?z - bridge_block ?h ?r - dodgeball ?r - cube_block ?m - ball)
        (then
          (once (equal_x_position sideways) )
          (once (agent_holds ?m) )
          (once (and (and (not (not (in_motion ?m) ) ) (not (in ?m) ) (in ?m) (not (in_motion ?m) ) (and (not (not (touch ?m front) ) ) (in_motion ?m ?m) ) (in ?m ?m) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (= (count preference1:basketball) (* 2 (count-once preference1:dodgeball) )
      3
    )
    (<= (* (* (count-once-per-objects preference1:golfball) (total-score) )
        2
      )
      30
    )
  )
)
(:scoring
  (* (count preference1:basketball) (count preference1:green) )
)
)

(define (game game-id-62) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-optional
      (adjacent ?xxx ?xxx)
    )
    (and
      (game-conserved
        (agent_holds ?xxx ?xxx)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (at-end
        (on ?xxx)
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference1:green) (* 4 (external-forall-maximize (count-same-positions preference1:yellow:tan) ) )
  )
)
(:scoring
  (* (count preference1:purple:yellow) (- (- (- (total-time) )
      )
      1
    )
    (* 7 10 (count-once-per-objects preference1:beachball:red) (count-once-per-objects preference1:basketball:green) )
  )
)
)

(define (game game-id-63) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-optional
      (not
        (agent_holds ?xxx yellow)
      )
    )
    (and
      (exists (?u - (either dodgeball hexagonal_bin cylindrical_block))
        (and
          (and
            (game-optional
              (not
                (not
                  (agent_holds ?u)
                )
              )
            )
            (and
              (and
                (and
                  (game-conserved
                    (not
                      (on rug upright)
                    )
                  )
                )
              )
            )
            (exists (?x - dodgeball)
              (exists (?a - (either dodgeball laptop))
                (and
                  (and
                    (and
                      (game-conserved
                        (or
                          (not
                            (< (distance 4 ?x ?u) 2)
                          )
                          (on ?x)
                        )
                      )
                    )
                    (game-optional
                      (touch rug)
                    )
                    (forall (?m - shelf)
                      (game-conserved
                        (agent_holds desk desk)
                      )
                    )
                  )
                )
              )
            )
          )
          (and
            (and
              (game-conserved
                (agent_holds ?u ?u)
              )
              (exists (?b - shelf ?l - game_object)
                (game-optional
                  (and
                    (= (distance desk))
                    (adjacent ?u)
                  )
                )
              )
              (game-conserved
                (not
                  (in_motion ?u)
                )
              )
              (game-optional
                (not
                  (exists (?q - block)
                    (in ?q)
                  )
                )
              )
              (game-conserved
                (in_motion agent)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (then
        (hold (adjacent ?xxx ?xxx) )
        (hold (game_over ?xxx) )
        (hold-to-end (and (not (adjacent ?xxx) ) (not (rug_color_under ?xxx bed) ) (and (agent_holds ?xxx pink) (agent_holds ?xxx ?xxx) ) ) )
      )
    )
  )
)
(:terminal
  (and
    (>= 10 (count preference1:basketball) )
    (>= (count preference1:book) (* (total-score) (* 2 10 )
        (count-once-per-external-objects preference1:blue_dodgeball:red)
        0
        (* (+ (count preference1:green) (external-forall-minimize (count-once-per-objects preference1:dodgeball:golfball) ) )
          (= (+ 1 3 )
            (external-forall-maximize
              10
            )
          )
        )
        (count preference1:basketball:hexagonal_bin)
      )
    )
    (>= (* (count-once-per-objects preference1:hexagonal_bin:orange) (count preference1:blue_dodgeball) )
      (count preference1:red)
    )
  )
)
(:scoring
  (count-once-per-objects preference1:blue_dodgeball:yellow)
)
)

(define (game game-id-64) (:domain many-objects-room-v1)
(:setup
  (exists (?t - beachball)
    (and
      (or
        (forall (?q - building)
          (exists (?p - hexagonal_bin)
            (forall (?r ?e ?h ?k ?u ?v - ball ?u - (either flat_block cube_block) ?r ?x - hexagonal_bin)
              (and
                (game-optional
                  (not
                    (on ?q)
                  )
                )
                (exists (?k - game_object)
                  (game-optional
                    (on ?k ?r)
                  )
                )
              )
            )
          )
        )
        (game-conserved
          (in green ?t)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?g - game_object)
      (and
        (preference preference1
          (exists (?l - building)
            (then
              (once (in_motion ?l ?g) )
              (hold-while (in_motion ?l) (in ?l) )
              (once (in_motion ?g) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (count-once-per-external-objects preference1:basketball:dodgeball) (count preference1:yellow:dodgeball) )
)
(:scoring
  2
)
)

(define (game game-id-65) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds ?xxx ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (at-end
        (agent_holds floor)
      )
    )
  )
)
(:terminal
  (>= 2 2 )
)
(:scoring
  (+ 3 (* (count preference1:yellow) 2 (count preference1:golfball) )
  )
)
)

(define (game game-id-66) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (not
      (in_motion ?xxx)
    )
  )
)
(:constraints
  (and
    (forall (?k - desk_shelf)
      (and
        (preference preference1
          (then
            (once (and (in_motion ?k ?k) (in ?k ?k) ) )
            (hold (adjacent ?k sideways) )
            (hold (and (and (in_motion ?k) (in ?k) ) (not (adjacent ?k ?k) ) ) )
          )
        )
        (preference preference2
          (exists (?m - ball)
            (then
              (hold-while (agent_holds side_table) (< 1 1) )
              (once (agent_holds ?m ?k) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (/ (+ 5 (count-once-per-objects preference2:beachball:cylindrical_block) )
      (count preference2:dodgeball)
    )
    (total-score)
  )
)
(:scoring
  (count preference2:pink_dodgeball)
)
)

(define (game game-id-67) (:domain few-objects-room-v1)
(:setup
  (exists (?r - hexagonal_bin)
    (and
      (game-conserved
        (not
          (agent_holds ?r)
        )
      )
      (game-conserved
        (agent_holds ?r)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?x - cube_block)
        (then
          (hold (or (agent_holds ?x ?x) (agent_holds ?x) (in_motion ?x) ) )
          (once (agent_holds ?x pink_dodgeball ?x) )
          (hold-while (in_motion ?x) (agent_holds ?x) )
          (once (forall (?j - red_dodgeball ?b - hexagonal_bin) (agent_holds ?b ?b) ) )
        )
      )
    )
    (preference preference2
      (exists (?s - teddy_bear)
        (at-end
          (not
            (not
              (and
                (adjacent ?s)
                (touch ?s)
                (and
                  (and
                    (< (distance ?s 2) 4)
                    (agent_holds ?s)
                  )
                  (not
                    (in_motion ?s ?s)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* 10 3 )
    (count preference2:bed)
  )
)
(:scoring
  (* (count-once-per-external-objects preference2:red:pink) (count-once-per-objects preference2:golfball) )
)
)

(define (game game-id-68) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?v - (either hexagonal_bin dodgeball))
      (game-conserved
        (in_motion ?v)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?b - (either dodgeball dodgeball) ?m - game_object ?k - game_object ?n - dodgeball ?p - hexagonal_bin)
        (then
          (hold (not (on rug) ) )
          (hold (on desk) )
          (once (in_motion ?p ?p) )
        )
      )
    )
    (preference preference2
      (exists (?m - hexagonal_bin ?p - block)
        (then
          (once (or (in_motion desk ?p) (agent_holds east_sliding_door) (on ?p) ) )
          (once (and (in_motion ?p) (agent_holds ?p ?p) ) )
          (once (agent_holds desk) )
        )
      )
    )
    (forall (?x - shelf ?n - dodgeball)
      (and
        (preference preference3
          (exists (?g - game_object ?t - ball)
            (at-end
              (and
                (in_motion ?n)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> 7 20 )
)
(:scoring
  (count preference3:red)
)
)

(define (game game-id-69) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?o - dodgeball)
      (exists (?p - beachball)
        (game-conserved
          (and
            (exists (?s - cube_block ?s - hexagonal_bin ?b - game_object)
              (not
                (not
                  (agent_holds desk)
                )
              )
            )
            (agent_holds ?o)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?u - bridge_block ?b ?m - teddy_bear)
        (at-end
          (agent_holds ?b)
        )
      )
    )
  )
)
(:terminal
  (= (- (+ (count-once-per-external-objects preference1:blue_dodgeball) (count preference1:blue_dodgeball) (external-forall-maximize (* (count-once-per-objects preference1:basketball) )
        )
      )
    )
    (* (count-once-per-objects preference1:golfball) (count preference1:blue_dodgeball) )
  )
)
(:scoring
  3
)
)

(define (game game-id-70) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (adjacent ?xxx)
  )
)
(:constraints
  (and
    (forall (?j - game_object)
      (and
        (preference preference1
          (exists (?b - (either cd main_light_switch) ?y - hexagonal_bin)
            (then
              (once (adjacent ?j) )
              (hold (in_motion agent) )
              (hold-to-end (in_motion ?j) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (* 5 2 )
      (* (count preference1:blue_dodgeball) (count preference1:purple) )
      (count-total preference1:blue_dodgeball:dodgeball)
      (- 12 )
      2
      (count preference1:dodgeball)
    )
    5
  )
)
(:scoring
  (total-time)
)
)

(define (game game-id-71) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?q - (either dodgeball yellow_cube_block))
      (game-conserved
        (in ?q)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?h - dodgeball)
        (then
          (hold (agent_holds ?h ?h) )
          (hold-while (on ball) (in_motion ?h ?h) )
          (once (between ?h) )
        )
      )
    )
    (preference preference2
      (exists (?w - (either laptop bridge_block))
        (then
          (once (in_motion ?w ?w) )
          (once (> 3 1) )
          (once (agent_holds ?w ?w) )
        )
      )
    )
  )
)
(:terminal
  (<= (total-score) (count preference1:side_table) )
)
(:scoring
  (not
    (count-measure preference1:beachball)
  )
)
)

(define (game game-id-72) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (and
        (game-conserved
          (agent_holds ?xxx)
        )
        (game-optional
          (touch pink)
        )
      )
    )
    (forall (?k ?a ?o - cube_block)
      (and
        (game-conserved
          (same_type rug ?a)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?e - shelf)
        (then
          (hold-while (in_motion ?e) (on desk) )
          (hold-while (and (not (in ?e) ) (in ?e) ) (on ?e) (in ?e floor) )
          (once-measure (agent_holds ?e) (distance ) )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (count-once-per-objects preference1:green) )
)
(:scoring
  10
)
)

(define (game game-id-73) (:domain many-objects-room-v1)
(:setup
  (exists (?g - teddy_bear ?e - (either pyramid_block cylindrical_block))
    (game-conserved
      (forall (?u - hexagonal_bin)
        (in floor ?e)
      )
    )
  )
)
(:constraints
  (and
    (forall (?n ?o ?v ?q ?j ?e - hexagonal_bin ?g - (either key_chain book))
      (and
        (preference preference1
          (exists (?y - curved_wooden_ramp)
            (then
              (once (in_motion ?y ?g) )
              (hold (not (exists (?n - ball ?z - wall) (in brown) ) ) )
              (hold-to-end (touch ?y rug) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (external-forall-minimize 5 ) (* (count-overlapping preference1:dodgeball) (count preference1:basketball:blue_pyramid_block) )
  )
)
(:scoring
  (count-measure preference1:dodgeball:orange)
)
)

(define (game game-id-74) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (game-conserved
        (and
          (and
            (not
              (not
                (not
                  (not
                    (exists (?f - hexagonal_bin ?t - sliding_door)
                      (not
                        (in_motion ?t)
                      )
                    )
                  )
                )
              )
            )
            (agent_holds ?xxx ?xxx)
          )
          (not
            (and
              (same_color front)
              (in_motion ?xxx ?xxx)
            )
          )
          (and
            (agent_holds rug desktop)
            (not
              (in_motion ?xxx ?xxx)
            )
            (same_type ?xxx)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?v - hexagonal_bin)
        (then
          (once (in_motion ?v ?v) )
          (once (and (not (and (on agent) (in_motion ?v ?v) (and (not (in_motion ?v ?v) ) (agent_holds ?v) (equal_z_position upright) ) (same_type ?v agent ?v) ) ) (and (agent_holds ?v bed) (and (on ?v ?v) (= 1 8 1 0) ) (not (in ?v) ) ) ) )
          (once (in_motion ?v) )
        )
      )
    )
  )
)
(:terminal
  (> 3 (+ (external-forall-minimize (external-forall-maximize (count-once-per-objects preference1:beachball) ) ) )
  )
)
(:scoring
  (* (* (/ (* (* (count-once preference1:beachball) 10 20 (* (* (count preference1:red) (count preference1:red) 10 (count preference1:pink_dodgeball) (count preference1:top_drawer:pink) (count preference1:orange) )
              6
            )
          )
          3
        )
        (count-once-per-objects preference1:beachball)
      )
      (count preference1:yellow)
    )
    6
  )
)
)

(define (game game-id-75) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds ?xxx ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?w - hexagonal_bin ?s - dodgeball)
        (then
          (once (in_motion floor) )
          (hold-for 0 (in agent ?s) )
          (once (and (and (and (in_motion ?s) (and (on floor ?s) (not (and (not (and (not (< (distance side_table ?s) 6) ) (not (not (and (not (on ?s ?s) ) (not (and (on floor ?s) (in_motion ?s) (and (and (forall (?y - doggie_bed) (in_motion ?s ?s) ) (exists (?m - ball) (< 1 (x_position desk ?m)) ) (on ?s ?s) ) (in_motion ?s ?s) ) (agent_holds ?s) ) ) (in_motion ?s agent) ) ) ) ) ) (not (exists (?h - hexagonal_bin ?w - (either blue_cube_block ball)) (in_motion ?w ?w) ) ) ) ) (in ?s south_west_corner) (agent_holds ?s) (not (exists (?n - bridge_block ?m - watch) (in_motion agent ?m) ) ) (not (is_setup_object ?s ?s) ) ) (not (and (not (rug_color_under ?s) ) (and (in ?s ?s) (in_motion ?s) (agent_holds agent) ) ) ) (adjacent ?s) ) (on ?s ?s) ) (in_motion ?s) ) )
        )
      )
    )
    (forall (?g - block ?t - teddy_bear)
      (and
        (preference preference2
          (exists (?m - ball ?j - game_object)
            (at-end
              (not
                (toggled_on ?j)
              )
            )
          )
        )
        (preference preference3
          (exists (?g - hexagonal_bin)
            (then
              (once (in_motion ?t) )
              (hold (same_type ?g) )
              (hold-while (< 1 1) (not (touch agent ?t) ) )
            )
          )
        )
      )
    )
    (preference preference4
      (exists (?v - hexagonal_bin ?u ?k - dodgeball)
        (then
          (once-measure (not (or (and (in_motion ?k ?u) (adjacent ?k) ) (and (agent_holds ?k door ?k) (and (not (forall (?j - dodgeball) (on ?u) ) ) (and (on ?k ?u) (exists (?c - wall) (on ?u) ) ) ) (in_motion ?k) ) ) ) (distance desk room_center) )
          (once (agent_holds ?k) )
          (once (between ?u) )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (total-time) )
)
(:scoring
  (count preference2:pyramid_block)
)
)

(define (game game-id-76) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (on ?xxx ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?n - doggie_bed ?b - hexagonal_bin)
        (then
          (once-measure (in_motion ?b) (distance 7 ?b) )
          (once (agent_holds ?b) )
          (once (not (not (on ?b ?b) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (> 180 5 )
    (>= 9 100 )
  )
)
(:scoring
  (count preference1:alarm_clock)
)
)

(define (game game-id-77) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (not
      (or
        (on ?xxx)
        (adjacent ?xxx ?xxx)
      )
    )
  )
)
(:constraints
  (and
    (forall (?f - hexagonal_bin ?x - beachball)
      (and
        (preference preference1
          (exists (?m - block ?i - dodgeball ?u ?r - hexagonal_bin)
            (then
              (hold (not (not (in_motion ?x ?x) ) ) )
              (once (not (and (and (not (in_motion ?r) ) (not (on ?x) ) ) (not (not (on green ?r) ) ) ) ) )
              (once (and (not (not (and (not (agent_holds ?x) ) (on right ?r) ) ) ) (agent_holds ?r) (and (not (not (not (and (not (and (agent_holds ?x) (and (is_setup_object ?x) (and (agent_holds ?r ?r) (agent_holds ?x) ) ) (and (in_motion ?r) (in_motion upright rug) (adjacent ?x) ) ) ) (exists (?o - ball ?y - dodgeball ?h - hexagonal_bin) (< 7 1) ) ) ) ) ) (forall (?m - cube_block) (and (and (in_motion ?m) (not (on ?x) ) ) (in ?x) (not (in ?u) ) ) ) ) (in_motion desk ?r) (agent_holds ?r) (agent_holds ?u ?u) (exists (?e - hexagonal_bin ?a - desk_shelf) (and (toggled_on ?a) (same_color ?r) ) ) (adjacent ?x ?r) (in ?u ?x) (exists (?p - hexagonal_bin ?g ?s - hexagonal_bin) (not (agent_holds ?s) ) ) ) )
            )
          )
        )
        (preference preference2
          (exists (?h - hexagonal_bin)
            (at-end
              (and
                (agent_holds ?h)
                (or
                  (not
                    (not
                      (not
                        (agent_holds ?x)
                      )
                    )
                  )
                  (not
                    (not
                      (exists (?c - cube_block ?k - tall_cylindrical_block)
                        (not
                          (in ?h ?x)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
        (preference preference3
          (then
            (once (on ?x) )
            (once (on ?x) )
            (once (on ?x) )
          )
        )
      )
    )
  )
)
(:terminal
  (<= 0 (count-once-per-objects preference3:hexagonal_bin) )
)
(:scoring
  (count-shortest preference2:dodgeball)
)
)

(define (game game-id-78) (:domain medium-objects-room-v1)
(:setup
  (exists (?l - dodgeball)
    (and
      (not
        (game-optional
          (and
            (agent_holds front desk)
            (not
              (in_motion ?l ?l)
            )
          )
        )
      )
      (game-conserved
        (and
          (and
            (agent_holds ?l)
            (same_type ?l ?l)
          )
          (and
            (in ?l)
            (and
              (and
                (touch ?l ?l)
                (agent_holds ?l ?l)
              )
              (in ?l ?l)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?m - hexagonal_bin)
        (then
          (hold (agent_holds ?m ?m) )
          (hold (and (and (and (on ?m ?m) (in_motion ?m rug) ) (and (agent_holds ?m) (< 8 10) ) ) (touch ?m desk) (in_motion ?m ?m) ) )
          (once (not (not (not (agent_holds ?m ?m) ) ) ) )
        )
      )
    )
    (preference preference2
      (exists (?a - ball)
        (then
          (once (and (not (agent_holds ?a ?a) ) (and (not (and (on ?a) (above ?a) ) ) (and (forall (?q - building ?x - (either cellphone triangular_ramp)) (or (in_motion ?x) (touch ?x ?a) (on ?x) ) ) (and (agent_holds ?a ?a) (in_motion ?a) ) ) ) (not (adjacent_side ?a ?a) ) ) )
          (once (and (and (> (distance ?a ?a) (distance )) (in_motion floor ?a) ) (agent_holds top_drawer) ) )
          (hold (and (not (and (on ?a ?a ?a) (forall (?q - red_dodgeball) (< (distance ?a ?a) 10) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (> (+ 2 15 )
    10
  )
)
(:scoring
  (count preference1:wall:red)
)
)

(define (game game-id-79) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?g - hexagonal_bin)
      (exists (?q - desk_shelf)
        (exists (?s ?n ?m - wall)
          (game-conserved
            (touch ?m)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?g - (either tall_cylindrical_block cube_block))
      (and
        (preference preference1
          (exists (?w - hexagonal_bin ?b - golfball ?i - ball ?y - curved_wooden_ramp)
            (then
              (hold (agent_holds ?y ?g) )
              (once (is_setup_object ?y) )
              (once (agent_holds ?g front) )
            )
          )
        )
      )
    )
    (forall (?m ?q - dodgeball)
      (and
        (preference preference2
          (exists (?i - building)
            (at-end
              (agent_holds ?m)
            )
          )
        )
        (preference preference3
          (exists (?x - wall ?x - hexagonal_bin)
            (then
              (hold-while (agent_holds ?x) (in ?m ?x) )
              (hold (and (agent_holds ?x) (or (and (opposite ?m) (not (and (>= 1 (distance 6)) (not (in_motion ?q) ) (agent_holds ?q) ) ) ) (in_motion ?m ?m) ) ) )
              (once (adjacent ?m ?m) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (- (count preference3:basketball:beachball) )
    (* 5 (* (count-once-per-objects preference3:pink) (count-measure preference2:blue_dodgeball) )
      (* (* (count preference3) (count-longest preference3:hexagonal_bin) )
        (* (* (count-once preference1:pink:dodgeball:beachball) (and (* (count-once-per-objects preference1:hexagonal_bin) 2 )
              (* (and 3 ) (count-once-per-objects preference3:golfball:yellow_cube_block) (count-once-per-objects preference1:hexagonal_bin) )
            )
            (count preference1:red)
          )
          (and
            (+ (* (count-shortest preference2:dodgeball:doggie_bed) 10 1 )
              10
            )
            (count preference3:pink)
          )
          (count-once preference3:purple)
          (count preference3:yellow_cube_block:golfball)
        )
      )
    )
  )
)
(:scoring
  (* (* (- (external-forall-maximize 2 ) )
      2
    )
    2
  )
)
)

(define (game game-id-80) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?x - game_object)
      (not
        (game-optional
          (on ?x ?x)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?d - block ?g - building)
        (then
          (once (on ?g ?g) )
          (hold (not (= (distance ?g room_center)) ) )
          (once (in_motion agent) )
          (hold (in_motion ?g ?g) )
        )
      )
    )
    (preference preference2
      (exists (?o ?t - (either doggie_bed main_light_switch pink))
        (then
          (hold (and (and (same_type ?o) (> 3 1) (< (distance door door) (distance )) ) (>= 1 8) (same_object ?t ?t) ) )
          (hold-while (and (in ?t) (not (and (in_motion ?t) (not (not (agent_holds ?o) ) ) ) ) ) (and (agent_holds ?t) ) )
          (once (and (and (in_motion ?t) (in_motion ?t ?o) ) (agent_holds ?o ?o) ) )
        )
      )
    )
    (forall (?s - block)
      (and
        (preference preference3
          (exists (?v - color)
            (then
              (once (agent_holds ?v agent) )
              (once (and (and (and (not (< (distance room_center 1) (distance ?s room_center)) ) (in_motion ?s) ) (on ?s) ) (agent_holds ?v) ) )
              (once (agent_holds ?v ?v) )
            )
          )
        )
        (preference preference4
          (exists (?j - hexagonal_bin)
            (then
              (hold-to-end (and (in_motion ?j) (and (on ?s ?s) (in ?j) (touch ?s) ) ) )
              (hold (agent_holds ?j) )
              (hold (in ?j) )
            )
          )
        )
        (preference preference5
          (exists (?c - golfball)
            (then
              (hold (agent_holds blue ?c) )
              (once (faces bed ?c) )
              (once (not (agent_holds desk desk) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (count preference5:basketball) (total-score) )
    (or
      (>= (total-score) 10 )
    )
    (>= (count preference4:basketball) 10 )
  )
)
(:scoring
  (<= (count preference2:green:red) (count preference1:pink) )
)
)

(define (game game-id-81) (:domain many-objects-room-v1)
(:setup
  (exists (?p - chair ?a - (either yellow_cube_block yellow_cube_block) ?s - triangular_ramp)
    (game-conserved
      (agent_holds ?s)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?h - (either cylindrical_block tall_cylindrical_block golfball))
        (at-end
          (exists (?o - ball ?z - ball)
            (and
              (not
                (not
                  (rug_color_under ?h)
                )
              )
            )
          )
        )
      )
    )
    (forall (?o - chair)
      (and
        (preference preference2
          (exists (?r - wall)
            (then
              (once (in_motion ?r color) )
              (once (agent_holds ?o ?r) )
              (hold-while (in_motion ?o) (< 1 1) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?j - chair ?y - dodgeball)
        (then
          (hold (< (distance ?y room_center) 9) )
          (once (agent_holds ?y ?y) )
          (hold (or (and (agent_holds ?y) (and (not (agent_holds right) ) (and (touch ?y ?y) (in_motion ?y) ) (and (and (not (in_motion ?y) ) (and (opposite ?y) (agent_holds ?y) (on ?y) (not (not (and (agent_holds pink_dodgeball) (< 1 (distance agent ?y)) (in ?y) ) ) ) ) ) (not (in_motion ?y) ) ) (and (agent_holds ?y ?y) (not (and (or (agent_holds ?y) (and (adjacent ?y rug) (not (in_motion ?y ?y) ) (on ?y ?y) ) ) (and (and (agent_holds ?y bed) (and (in_motion drawer ?y) (and (not (in_motion ?y) ) (in_motion ?y) ) ) ) (agent_holds ?y upside_down) (and (and (adjacent ?y) (on ?y) (on ?y) ) (on agent ?y) ) (in_motion ?y) ) ) ) ) ) ) (exists (?z - teddy_bear) (and (not (in ?z) ) (same_type agent ?z ?y) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (> (count-overlapping preference2:dodgeball:yellow) (- (>= (count preference1:yellow_cube_block) 2 )
    )
  )
)
(:scoring
  (count-same-positions preference2:basketball)
)
)

(define (game game-id-82) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (agent_holds ?xxx ?xxx)
    )
    (forall (?m - triangular_ramp)
      (exists (?p ?q - dodgeball ?u - curved_wooden_ramp)
        (and
          (exists (?e - block ?z ?g - bridge_block ?j - dodgeball)
            (forall (?t - block ?z - hexagonal_bin ?c - (either pencil doggie_bed cd) ?e - sliding_door ?w - doggie_bed)
              (and
                (game-conserved
                  (not
                    (and
                      (adjacent_side ?j ?w)
                      (not
                        (and
                          (not
                            (is_setup_object ?w ?j)
                          )
                          (< 2 (distance room_center ?j))
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
    (and
      (game-conserved
        (not
          (and
            (agent_holds desk)
            (agent_holds agent)
            (in ?xxx)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?e - (either wall cellphone cellphone wall golfball dodgeball dodgeball) ?v - bridge_block)
        (then
          (once (in_motion ?v) )
          (hold (in_motion ?v ?v) )
          (once (not (in_motion ?v ?v) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 5 (* 10 )
    )
    (count-once preference1:beachball:pyramid_block)
  )
)
(:scoring
  (count-once-per-objects preference1)
)
)

(define (game game-id-83) (:domain many-objects-room-v1)
(:setup
  (exists (?g - (either alarm_clock blue_cube_block))
    (exists (?e - wall ?v - building)
      (game-conserved
        (not
          (and
            (between ?g ?v)
            (not
              (exists (?i - hexagonal_bin)
                (in ?g)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (then
        (once (and (and (not (adjacent pink_dodgeball) ) (and (not (object_orientation agent ?xxx) ) (in ?xxx ?xxx) ) (and (in_motion ?xxx) (< 7 1) ) ) (not (and (not (and (not (in_motion ?xxx floor) ) (not (in_motion ?xxx ?xxx) ) ) ) (and (on ?xxx) (and (on ?xxx) (or (not (not (and (not (and (same_type ?xxx) (> 1 3) ) ) (agent_holds ?xxx ?xxx) (and (adjacent ?xxx) (not (on top_drawer ?xxx) ) ) ) ) ) (in_motion ?xxx ?xxx) ) (touch ?xxx ?xxx) ) ) (agent_holds ?xxx ?xxx) ) ) ) )
        (once (agent_holds ?xxx) )
        (once (not (on pillow) ) )
      )
    )
  )
)
(:terminal
  (or
    (> (count-once-per-objects preference1:dodgeball) (or (* (+ (count-once-per-objects preference1:orange:beachball) (external-forall-maximize (count preference1:pink:basketball) ) (> 2 (count-once-per-objects preference1:hexagonal_bin:pink) )
          )
          (count-once-per-objects preference1:dodgeball)
        )
        (count-once-per-objects preference1:blue_pyramid_block:beachball)
      )
    )
    (>= (= 3 (count-once-per-objects preference1:pink) )
      (count preference1:basketball)
    )
  )
)
(:scoring
  (* (* (- (count-once-per-objects preference1:beachball) )
      10
    )
    (+ (total-score) (count-once preference1:top_drawer:hexagonal_bin) )
  )
)
)

(define (game game-id-84) (:domain many-objects-room-v1)
(:setup
  (forall (?n - curved_wooden_ramp)
    (exists (?o - shelf)
      (forall (?v - block)
        (exists (?s - (either dodgeball pyramid_block))
          (game-conserved
            (in_motion ?n)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?i - chair)
        (then
          (once (on ?i ?i) )
          (hold (and (and (open east_sliding_door) (in_motion ?i) ) (not (on floor) ) ) )
          (once (or (agent_holds ?i) (not (agent_holds ?i floor) ) ) )
        )
      )
    )
    (forall (?i - hexagonal_bin ?i - wall)
      (and
        (preference preference2
          (exists (?g - triangular_ramp)
            (at-end
              (and
                (agent_holds agent)
                (and
                  (not
                    (and
                      (not
                        (agent_holds ?i)
                      )
                      (in_motion ?g)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
    (preference preference3
      (then
        (once (same_object pink_dodgeball) )
        (once (and (and (on ?xxx ?xxx ?xxx) (exists (?r - shelf) (not (in_motion ?r) ) ) ) (between ?xxx) ) )
        (hold-while (agent_holds desk ?xxx) (in_motion ?xxx ?xxx) )
      )
    )
    (preference preference4
      (exists (?z - ball)
        (then
          (hold (agent_holds ?z) )
          (once (not (on ?z bed) ) )
          (hold (in_motion ?z ?z) )
        )
      )
    )
    (preference preference5
      (exists (?h - flat_block)
        (then
          (once (not (adjacent ?h) ) )
          (once (agent_holds desk ?h) )
          (any)
        )
      )
    )
  )
)
(:terminal
  (>= 5 6 )
)
(:scoring
  (count-once-per-objects preference3:brown:dodgeball)
)
)

(define (game game-id-85) (:domain few-objects-room-v1)
(:setup
  (and
    (not
      (forall (?g - curved_wooden_ramp ?r - ball ?u - hexagonal_bin)
        (and
          (game-optional
            (and
              (not
                (in_motion ?u ?u)
              )
              (object_orientation ?u)
              (not
                (agent_holds floor ?u)
              )
            )
          )
          (and
            (forall (?l ?o - building)
              (game-optional
                (on ?u desk)
              )
            )
            (exists (?x - book)
              (and
                (forall (?h - dodgeball)
                  (and
                    (exists (?j - teddy_bear)
                      (and
                        (game-conserved
                          (agent_holds front)
                        )
                        (and
                          (game-conserved
                            (in_motion ?u ?x)
                          )
                          (game-optional
                            (and
                              (in_motion ?h)
                              (in_motion ?h ?u)
                            )
                          )
                          (exists (?s - teddy_bear ?v - dodgeball)
                            (and
                              (forall (?y ?q ?l ?o ?s ?f - (either cube_block cube_block))
                                (forall (?d - chair)
                                  (game-optional
                                    (on ?j ?j)
                                  )
                                )
                              )
                            )
                          )
                        )
                        (and
                          (and
                            (forall (?f - drawer)
                              (game-optional
                                (and
                                  (and
                                    (not
                                      (is_setup_object ?f)
                                    )
                                    (in ?h ?u)
                                  )
                                  (and
                                    (adjacent upright)
                                    (agent_holds ?j)
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
                (exists (?w - dodgeball ?f - rug)
                  (and
                    (game-conserved
                      (and
                        (and
                          (in ?u)
                          (not
                            (in_motion ?f)
                          )
                        )
                        (in_motion ?f ?u)
                      )
                    )
                  )
                )
                (and
                  (exists (?q - pillow)
                    (forall (?k ?l ?c ?e ?o ?y - game_object ?b - hexagonal_bin)
                      (or
                        (game-conserved
                          (not
                            (on ?u ?u)
                          )
                        )
                      )
                    )
                  )
                  (exists (?w - ball ?n - hexagonal_bin)
                    (exists (?d - triangular_ramp)
                      (game-optional
                        (in floor ?u)
                      )
                    )
                  )
                  (exists (?f - doggie_bed ?q - (either cylindrical_block main_light_switch))
                    (forall (?v - game_object ?f - dodgeball ?m - game_object ?f - pillow)
                      (and
                        (game-conserved
                          (and
                            (not
                              (in_motion ?u ?x agent)
                            )
                            (and
                              (not
                                (adjacent ?f)
                              )
                              (exists (?n - doggie_bed)
                                (in_motion ?x)
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
            (forall (?i - (either golfball cube_block golfball golfball))
              (and
                (forall (?w - (either dodgeball) ?g - dodgeball)
                  (game-conserved
                    (not
                      (and
                        (not
                          (in_motion ?g ?i)
                        )
                        (agent_holds ?i ?u)
                        (in_motion ?i ?u)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?n - (either cellphone triangular_ramp basketball) ?r - hexagonal_bin ?d ?v - (either golfball triangle_block))
      (and
        (preference preference1
          (exists (?y - doggie_bed ?x - dodgeball ?i - (either laptop cellphone) ?o - hexagonal_bin)
            (then
              (hold (not (not (in_motion ?o ?v) ) ) )
              (once (not (not (not (broken ?v) ) ) ) )
              (once (and (in_motion ?d) (touch ?d) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (+ (count-same-positions preference1:dodgeball) 1 )
      (count preference1:hexagonal_bin)
    )
    (> (count preference1) (count preference1:rug) )
  )
)
(:scoring
  (+ (* 3 (count-once preference1:alarm_clock:dodgeball) )
    (total-score)
    (external-forall-maximize
      (count-once-per-objects preference1:dodgeball)
    )
    8
    4
    0.7
  )
)
)

(define (game game-id-86) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?k - (either doggie_bed yellow_cube_block))
        (at-end
          (and
            (< (distance ?k ?k ?k) 1)
            (not
              (agent_holds ?k ?k)
            )
          )
        )
      )
    )
    (forall (?r - building)
      (and
        (preference preference2
          (exists (?g - building)
            (then
              (once (< 2 (distance room_center room_center)) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?t - green_triangular_ramp)
        (then
          (hold (not (not (not (adjacent ?t) ) ) ) )
          (hold (in_motion bed) )
          (once (or (and (adjacent ?t ?t) (agent_holds ?t) ) (agent_holds ?t ?t) ) )
        )
      )
    )
    (preference preference4
      (exists (?e - (either desktop cellphone))
        (then
          (once (agent_holds desk ?e) )
          (hold-while (and (not (agent_holds ?e) ) (and (agent_holds ?e ?e) (not (>= (distance_side ?e ?e) (distance ?e ?e)) ) ) (and (on ?e) (not (and (agent_holds ?e) (and (agent_holds ?e) (not (not (on top_drawer ?e) ) ) (agent_holds ?e ?e) ) ) ) ) ) (not (in_motion ?e) ) (adjacent_side ?e ?e ?e) )
          (once (and (in_motion ?e ?e) (and (not (and (agent_holds ?e) (touch ?e rug) (in_motion ?e) (agent_holds ?e ?e) ) ) (and (not (on ?e) ) (not (in_motion ?e ?e desktop) ) (not (and (and (agent_holds ?e floor) (not (agent_holds ?e) ) ) (not (not (in_motion agent ?e) ) ) ) ) ) ) ) )
        )
      )
    )
    (forall (?v - teddy_bear)
      (and
        (preference preference5
          (then
            (once (on agent) )
            (once (and (not (agent_holds ?v) ) (agent_holds ?v) ) )
            (once (agent_holds ?v) )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-overlapping preference1:green) (* 1 2 3 )
  )
)
(:scoring
  (/
    3
    (count-total preference1:red)
  )
)
)

(define (game game-id-87) (:domain many-objects-room-v1)
(:setup
  (exists (?o - dodgeball)
    (exists (?w ?i - hexagonal_bin ?w - game_object ?f - block)
      (and
        (forall (?p - hexagonal_bin ?n - (either cellphone golfball pyramid_block))
          (game-conserved
            (in_motion ?n)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?e - cube_block)
      (and
        (preference preference1
          (exists (?l - ball)
            (then
              (once (agent_holds ?e) )
              (once (on ?l) )
              (once (on bed ?e) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (* (* (count-once-per-objects preference1:dodgeball) (count-total preference1:beachball) 2 )
      2
      (count-measure preference1:brown:basketball:dodgeball)
    )
  )
)
(:scoring
  (count preference1:pink)
)
)

(define (game game-id-88) (:domain few-objects-room-v1)
(:setup
  (exists (?l - bridge_block)
    (and
      (game-conserved
        (on ?l ?l)
      )
      (and
        (forall (?j - doggie_bed)
          (exists (?x - block)
            (and
              (game-optional
                (is_setup_object ?x)
              )
              (game-conserved
                (not
                  (< 1 3)
                )
              )
            )
          )
        )
        (game-conserved
          (not
            (not
              (and
                (game_start bed)
                (and
                  (on ?l ?l)
                  (and
                    (in_motion ?l)
                    (and
                      (is_setup_object ?l)
                      (and
                        (agent_holds ?l ?l)
                        (touch ?l)
                      )
                    )
                  )
                )
                (in ?l ?l)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?j - color)
        (at-end
          (agent_holds ?j)
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (- (+ (* (count-once preference1:beachball) 2 (count preference1:beachball) )
          (+ (- (count-once-per-objects preference1:dodgeball:yellow) )
            2
            3
          )
          (count-once preference1:basketball)
          (count-overlapping preference1:dodgeball)
          3
          3
          (count preference1:dodgeball)
          (count preference1:hexagonal_bin)
          2
        )
      )
      (- (* 2 15 )
      )
    )
    (or
      (> (count-once-per-objects preference1:basketball) (count preference1:pink:yellow) )
      (or
        (> 5 (count-once preference1:doggie_bed:beachball) )
        (not
          (or
            (or
              (>= 50 (< (* 5 (count-once-per-objects preference1:blue_dodgeball) (total-time) 6 2 30 )
                  2
                )
              )
              (>= (count-once preference1:blue_dodgeball:golfball) (+ 1 (* (+ 5 3 )
                    (>= 4 (count preference1:red) )
                  )
                )
              )
            )
          )
        )
      )
      (< 8 3 )
    )
  )
)
(:scoring
  6
)
)

(define (game game-id-89) (:domain medium-objects-room-v1)
(:setup
  (exists (?b - dodgeball)
    (game-conserved
      (not
        (not
          (not
            (not
              (agent_holds ?b)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (then
        (hold (rug_color_under agent ?xxx) )
        (once (agent_holds ?xxx) )
        (once (and (agent_holds ?xxx ?xxx) (on ) (not (and (not (in_motion ?xxx floor) ) (agent_holds bed) ) ) ) )
      )
    )
  )
)
(:terminal
  (<= (count-once-per-objects preference1:orange) (count preference1:dodgeball) )
)
(:scoring
  2
)
)

(define (game game-id-90) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (and
        (game-conserved
          (in_motion ?xxx ?xxx)
        )
        (exists (?i - ball ?c - dodgeball ?f - (either blue_cube_block cube_block))
          (exists (?d - hexagonal_bin)
            (forall (?y ?l ?m - hexagonal_bin ?u - block)
              (game-optional
                (touch ?d)
              )
            )
          )
        )
        (game-conserved
          (adjacent ?xxx)
        )
        (exists (?w ?k - (either cube_block hexagonal_bin dodgeball laptop laptop) ?j - cube_block)
          (game-conserved
            (in_motion ?j ?j)
          )
        )
        (game-optional
          (in_motion rug ?xxx)
        )
      )
      (game-conserved
        (between ?xxx)
      )
      (exists (?v - ball)
        (or
          (game-conserved
            (on ?v)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?c - pillow ?r - cube_block ?w - cube_block ?s - doggie_bed ?y - (either cellphone key_chain cylindrical_block doggie_bed))
        (then
          (once (on ?y) )
          (once (in ?y) )
          (once (and (and (not (agent_holds ?y) ) (in_motion ?y ?y) ) (in ?y agent) ) )
          (once (opposite ?y) )
          (once (on ?y ?y) )
        )
      )
    )
    (preference preference2
      (exists (?h - hexagonal_bin)
        (then
          (hold (and (on ?h ?h) (agent_holds ?h ?h) ) )
          (once (or (and (on ?h) (not (in_motion agent) ) (agent_holds ?h sideways) ) (in_motion door) ) )
          (once (and (opposite floor) (in_motion ?h) (not (not (and (adjacent_side ?h ?h) (not (touch ?h) ) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (= (+ (count preference1:hexagonal_bin:hexagonal_bin) (= (count preference1:pink_dodgeball:dodgeball) 3 )
    )
    (* (* (count preference1:blue_dodgeball:golfball:hexagonal_bin) 4 )
    )
  )
)
(:scoring
  5
)
)

(define (game game-id-91) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (or
      (agent_holds ?xxx ?xxx)
      (in ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?y - hexagonal_bin ?p - hexagonal_bin)
        (then
          (hold (agent_holds ?p ?p) )
          (hold (in_motion desk) )
          (hold (and (not (touch ?p) ) (adjacent ?p) ) )
          (once (and (not (and (agent_holds ?p ?p) (and (in_motion ?p) (agent_holds ?p) ) ) ) (in ?p ?p) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (count-once preference1:blue_dodgeball) )
)
(:scoring
  (+ (* 2 1 )
    3
  )
)
)

(define (game game-id-92) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?i - bridge_block)
      (or
        (exists (?y - game_object ?c - dodgeball ?g - color)
          (game-conserved
            (not
              (not
                (agent_holds ?g)
              )
            )
          )
        )
      )
    )
    (and
      (and
        (and
          (game-conserved
            (adjacent_side agent)
          )
          (exists (?u - hexagonal_bin)
            (forall (?x - (either golfball dodgeball cube_block) ?w - triangular_ramp)
              (exists (?m - dodgeball)
                (and
                  (exists (?b - block)
                    (game-optional
                      (not
                        (agent_holds ?u ?u)
                      )
                    )
                  )
                )
              )
            )
          )
        )
        (game-optional
          (>= (distance front) 2)
        )
      )
      (game-optional
        (and
          (not
            (not
              (in_motion ?xxx ?xxx)
            )
          )
          (opposite ?xxx)
        )
      )
      (not
        (and
          (exists (?u - cube_block)
            (game-optional
              (on ?u ?u)
            )
          )
          (and
            (or
              (and
                (and
                  (game-optional
                    (in_motion ?xxx ?xxx)
                  )
                  (game-conserved
                    (in_motion ?xxx ?xxx)
                  )
                )
              )
            )
          )
        )
      )
    )
    (exists (?i - block ?r - cube_block)
      (game-optional
        (and
          (is_setup_object ?r ?r)
          (not
            (in_motion ?r)
          )
          (< (distance room_center ?r 10) (building_size 8 10))
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c - cylindrical_block)
      (and
        (preference preference1
          (then
            (once (in_motion blue) )
            (once (not (and (in agent ?c) (and (in_motion ?c) (not (agent_holds ?c front) ) ) ) ) )
            (once (in_motion left) )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 4 (count preference1:brown) )
)
(:scoring
  (+ (* (count-once-per-objects preference1:dodgeball) (count preference1:red) )
    (count-unique-positions preference1:dodgeball)
  )
)
)

(define (game game-id-93) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (not
      (in_motion ?xxx ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?h - chair ?v - ball)
        (then
          (once (and (in_motion ?v floor) (in agent) ) )
          (once (in_motion blinds desk) )
          (hold (< (distance 8 room_center) (distance ?v ?v)) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (+ (count-once-per-objects preference1:basketball:orange) (- (count-once-per-objects preference1:pink) )
      )
      (count preference1:red)
    )
    (< (count preference1:dodgeball) (count-once-per-external-objects preference1:yellow) )
  )
)
(:scoring
  (count-once-per-objects preference1:beachball)
)
)

(define (game game-id-94) (:domain many-objects-room-v1)
(:setup
  (forall (?m ?c - chair)
    (and
      (forall (?w - hexagonal_bin)
        (game-optional
          (and
            (< (x_position ?c 4) 6)
            (in_motion north_wall)
            (between ?c)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?c - hexagonal_bin ?u - ball ?f ?v ?i ?g ?h ?e ?z ?c ?w ?a - hexagonal_bin ?o - block)
        (then
          (once (in_motion ?o) )
          (once (not (in_motion ?o) ) )
          (hold (agent_holds bed) )
        )
      )
    )
    (preference preference2
      (exists (?t - ball ?g - hexagonal_bin)
        (then
          (hold (not (same_color ?g floor) ) )
          (once (object_orientation ?g) )
          (once (not (not (in_motion brown ?g) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference2:yellow) (count-once-per-objects preference2:pink_dodgeball) )
)
(:scoring
  (count-measure preference2:pink)
)
)

(define (game game-id-95) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?r - pyramid_block ?g - green_triangular_ramp)
      (game-optional
        (in ?g)
      )
    )
    (game-conserved
      (in_motion ?xxx)
    )
    (and
      (game-optional
        (on east_sliding_door)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?r - triangular_ramp ?s - dodgeball)
        (then
          (once (not (not (on ?s) ) ) )
          (once (in_motion agent) )
          (hold-while (and (not (< 6 (distance 6 ?s)) ) (not (same_object bed) ) ) (and (in ?s) (not (in ?s) ) (in_motion ?s) ) (agent_holds ?s ?s) )
        )
      )
    )
    (forall (?j - dodgeball)
      (and
        (preference preference2
          (exists (?l - game_object ?i - game_object)
            (then
              (once (in_motion ?j bed) )
              (once (in_motion ?j desk) )
              (once (faces ?j) )
            )
          )
        )
        (preference preference3
          (exists (?v - hexagonal_bin ?x - beachball)
            (then
              (once (not (and (touch ?j) (touch ?j ?j) ) ) )
              (hold (and (not (and (not (in ?j ?x) ) (on ?x) ) ) (in_motion ?x) ) )
              (once (not (or (< 1 (distance room_center 1)) (agent_holds ?x ?x) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (- (count preference3:triangle_block) )
    40
  )
)
(:scoring
  (* (count-overlapping preference2:dodgeball) (external-forall-maximize (count-once-per-objects preference3:pink_dodgeball) ) )
)
)

(define (game game-id-96) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?e - ball ?a - (either pink cylindrical_block tall_cylindrical_block) ?h - chair)
      (game-conserved
        (agent_holds ?h pink ?h)
      )
    )
    (game-optional
      (= 1 (distance ?xxx ?xxx))
    )
    (game-conserved
      (and
        (rug_color_under ?xxx ?xxx)
        (not
          (on ?xxx ?xxx)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?g - (either key_chain laptop))
        (then
          (hold (on ?g) )
          (once (touch ?g) )
          (once (not (and (< 5 1) ) ) )
        )
      )
    )
    (preference preference2
      (exists (?k - game_object)
        (then
          (once (in_motion ?k) )
          (once (not (and (and (and (in_motion ?k ?k) (broken ?k ?k) ) (> 1 10) (on ?k) ) (>= 8 7) ) ) )
          (hold (< 1 (distance_side agent 3)) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-once preference2:pink) 5 )
    (>= 8 9 )
  )
)
(:scoring
  (count preference2:blue_pyramid_block)
)
)

(define (game game-id-97) (:domain few-objects-room-v1)
(:setup
  (forall (?j - hexagonal_bin)
    (exists (?s - dodgeball)
      (forall (?u - red_dodgeball ?g - hexagonal_bin ?e - doggie_bed ?g - hexagonal_bin)
        (not
          (and
            (game-conserved
              (adjacent ?j ?s)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h ?s - hexagonal_bin)
      (and
        (preference preference1
          (exists (?b - block ?l - drawer)
            (then
              (once (not (and (agent_holds ?s agent) (in_motion ?l ?h) ) ) )
              (once (agent_holds ?s) )
              (once (same_color ?h bed ?h) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (* (external-forall-maximize (+ (* (* (* (* (count-once-per-objects preference1:dodgeball) (+ (count preference1:dodgeball) (* 3 10 )
                  )
                )
                (count-once preference1:basketball)
              )
              (count-once-per-objects preference1:cube_block)
            )
            (count preference1:green)
          )
          (* (count preference1:pink:basketball) (count-once-per-objects preference1:dodgeball:hexagonal_bin) )
        )
      )
      2
    )
  )
)
(:scoring
  (count preference1:pink)
)
)

(define (game game-id-98) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?k - wall)
      (forall (?e ?u - wall)
        (game-optional
          (in ?k bed)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?l ?h ?w ?i - golfball ?f - (either alarm_clock dodgeball doggie_bed blue_cube_block))
        (then
          (hold (on ?f) )
          (hold (agent_holds ?f pink_dodgeball ?f) )
          (once (not (and (in ?f ?f) (agent_holds ?f) ) ) )
        )
      )
    )
    (preference preference2
      (exists (?g - teddy_bear)
        (then
          (hold (on ?g) )
          (hold (agent_holds ?g ?g ?g) )
          (once (in_motion ?g ?g) )
        )
      )
    )
  )
)
(:terminal
  (>= 7 (- 1 )
  )
)
(:scoring
  10
)
)

(define (game game-id-99) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (not
      (and
        (not
          (agent_holds ?xxx)
        )
        (in_motion ?xxx)
      )
    )
  )
)
(:constraints
  (and
    (forall (?i - (either laptop cylindrical_block))
      (and
        (preference preference1
          (exists (?k - hexagonal_bin ?o - curved_wooden_ramp ?e - game_object)
            (then
              (hold (not (on ?e ?i) ) )
              (hold (agent_holds ?i ?i) )
              (once (and (and (agent_holds ?e) (in_motion ?i) (not (and (agent_holds ?e) (agent_holds ?e) ) ) (rug_color_under ) ) (touch ?i) ) )
            )
          )
        )
        (preference preference2
          (exists (?g - game_object ?l - (either pen dodgeball lamp))
            (then
              (once-measure (< 1 (distance ?l ?i)) (distance room_center room_center) )
              (once (in ?i) )
              (hold (and (on desk ?l) (not (agent_holds ?i) ) ) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?f ?c - teddy_bear)
        (then
          (once (and (same_type rug) (agent_holds agent ?c) (not (and (in_motion ?c ?c) (agent_holds desk) (in_motion ?c ?c ?f) (not (in_motion ?f) ) (agent_holds ?c) (and (not (above agent ?c) ) (in_motion upright) ) ) ) ) )
          (once (equal_z_position ?f ?c) )
          (hold (and (not (same_object ?f ?c) ) (agent_holds ?c green) (in ?c) (in_motion pillow) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (- (+ (* (* (count-once-per-objects preference1:basketball:dodgeball) (count-once-per-objects preference3:top_drawer) )
            (+ (count preference2:dodgeball) (+ 8 (count preference3:red) )
            )
          )
          (+ (count-once preference2:dodgeball) (count-once-per-external-objects preference1:green:white) )
          (+ 7 5 )
        )
        3
      )
      (= (count preference2:green) (count preference1:dodgeball) )
    )
    (>= 3 (- (count-once-per-objects preference3:blue_dodgeball) )
    )
  )
)
(:scoring
  (* (* (- (count-once-per-objects preference2:purple:red) )
      (count-longest preference1:cube_block)
      (- 20 )
    )
    (count-total preference2:pink_dodgeball)
  )
)
)

(define (game game-id-100) (:domain medium-objects-room-v1)
(:setup
  (or
    (game-conserved
      (not
        (on ?xxx)
      )
    )
  )
)
(:constraints
  (and
    (forall (?g - desk_shelf ?a - triangular_ramp)
      (and
        (preference preference1
          (at-end
            (not
              (in ?a upside_down)
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?h - game_object)
        (then
          (once (toggled_on ?h) )
          (hold-while (agent_holds ?h ?h) (on ?h) (not (and (agent_holds ?h) (in ?h ?h) ) ) (on rug) )
          (hold (not (not (game_start ?h) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 18 (* 3 (* (count-once-per-external-objects preference1:blue_dodgeball) (+ (+ (external-forall-minimize 8 ) (* (+ (count preference1:blue_pyramid_block) (- (= (* 5 (* 3 40 )
                    )
                    300
                    (count preference1:beachball)
                  )
                )
              )
              (count preference2:pink)
            )
            (count-once-per-objects preference2:green)
            (- 5 )
            (count-once-per-objects preference1:hexagonal_bin)
            (count preference2:dodgeball)
          )
          (count preference2:beachball:pink)
          300
          (count preference1:pyramid_block:dodgeball)
          (+ (total-time) 5 )
        )
      )
    )
  )
)
(:scoring
  (count-once-per-objects preference1:hexagonal_bin)
)
)

(define (game game-id-101) (:domain many-objects-room-v1)
(:setup
  (exists (?h - block)
    (exists (?f - hexagonal_bin ?t - game_object ?n - dodgeball)
      (game-conserved
        (on ?h)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?h - (either laptop cube_block key_chain))
        (at-end
          (touch top_shelf)
        )
      )
    )
    (preference preference2
      (then
        (hold (in_motion ?xxx) )
        (hold (agent_holds ?xxx) )
        (once (in_motion ?xxx ?xxx) )
      )
    )
  )
)
(:terminal
  (not
    (< (* (+ (count preference2:basketball) (* (- (= (* (* (- 40 )
                    (count preference1:green)
                  )
                  (* (count preference2:yellow_pyramid_block) (count-once preference1:orange:purple) (>= (+ (count preference1:golfball) (or 5 ) (- (count-once-per-external-objects preference1:alarm_clock) )
                        2
                        2
                        (* 10 10 )
                      )
                      10
                    )
                  )
                )
                (count preference2:golfball:dodgeball)
              )
            )
            (+ (* (* (count-once-per-objects preference2:pink_dodgeball) 3 )
                (count preference1:pink)
                (* 0 (count preference1:yellow:golfball) )
              )
              6
            )
            (count preference1:dodgeball:basketball)
          )
        )
        (count-once preference2:cube_block:golfball)
      )
      300
    )
  )
)
(:scoring
  (count-shortest preference2:dodgeball)
)
)

(define (game game-id-102) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (not
      (not
        (in_motion ?xxx ?xxx)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?l - color)
        (then
          (hold (or (object_orientation ?l) (in ?l) (on ?l ?l) ) )
          (hold (and (and (not (exists (?r - block) (and (on ?r) (not (agent_holds ?r ?r) ) ) ) ) (on agent) ) (on ?l ?l) ) )
          (once (not (on ?l ?l) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count-once preference1:tan) (* (>= 4 (count-measure preference1:doggie_bed:golfball) )
      )
    )
    2
  )
)
(:scoring
  40
)
)

(define (game game-id-103) (:domain medium-objects-room-v1)
(:setup
  (forall (?e - hexagonal_bin ?h - dodgeball)
    (game-conserved
      (on ?h)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?c - game_object ?m - (either yellow alarm_clock cellphone))
        (then
          (hold (same_object ?m tan) )
          (hold (agent_holds ?m agent) )
          (once (not (< 6 (distance ?m room_center)) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (* (count preference1:yellow) (+ (count-once-per-external-objects preference1:basketball) 1 )
    )
  )
)
(:scoring
  (* (+ (+ (count preference1:basketball:hexagonal_bin) (* (count preference1:blue_dodgeball:pink_dodgeball) 9 )
      )
      (+ (count-overlapping preference1:yellow:red) 2 )
    )
    (+ (count-once preference1:blue_dodgeball) (>= (count-once-per-objects preference1:dodgeball) (count-once preference1:yellow) )
    )
    (count-once-per-objects preference1:pink)
    7
    (count-once preference1:dodgeball)
    (+ (not 8 ) (* (* (count preference1:beachball) (+ (count preference1:basketball) (* (+ (count-same-positions preference1:blue_pyramid_block) (count preference1:yellow) )
              (count preference1:pink_dodgeball)
            )
            (count-longest preference1:side_table:hexagonal_bin)
          )
        )
        (* (count preference1) (- (count-once-per-objects preference1:basketball:orange) )
        )
        (count-once-per-objects preference1:beachball:basketball)
        (/
          (count preference1:alarm_clock:orange)
          (* 5 (count preference1:book) )
        )
        3
        (+ (= (+ 10 (* (* (external-forall-minimize (count-once-per-objects preference1:alarm_clock) ) (- (+ 5 (* (count preference1:orange:doggie_bed) (count-once-per-objects preference1:dodgeball) )
                    )
                  )
                )
                (count-measure preference1:beachball)
              )
            )
            (* (= (count preference1:green) (count preference1:beachball) )
              (* (count-shortest preference1:top_drawer) (count preference1:tall_cylindrical_block) )
            )
            2
          )
          (+ (= (count preference1:pink) (count-once-per-objects preference1:pink) )
          )
        )
      )
    )
  )
)
)

(define (game game-id-104) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (in_motion ?xxx south_wall)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?r - curved_wooden_ramp ?z ?q - game_object)
        (then
          (once (agent_holds ?q) )
          (hold (in ball) )
          (once (touch floor) )
        )
      )
    )
    (preference preference2
      (exists (?l - dodgeball ?p - ball)
        (then
          (once (and (in ?p ?p) ) )
          (hold (on bed) )
          (hold (and (in_motion rug) (> (distance_side ?p room_center) (distance 7)) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count preference1:pyramid_block) 0.7 )
    (> (+ (count-once-per-objects preference1) (count preference1:green:blue_dodgeball) )
      7
    )
  )
)
(:scoring
  (count preference1:dodgeball)
)
)

(define (game game-id-105) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (in_motion ?xxx)
  )
)
(:constraints
  (and
    (forall (?h - chair)
      (and
        (preference preference1
          (exists (?a - (either flat_block))
            (then
              (hold (agent_holds rug floor) )
              (once (game_over ?a) )
              (hold-while (< 10 (x_position ?a)) (and (in_motion ?a ?h) (and (not (same_color ?h) ) ) ) )
              (hold-while (and (on ?a ?a) (not (in ?h rug floor) ) ) (on ?h ?h) (on ?h ?a) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (<= (* 20 2 5 )
      (+ (* (- 4 )
          (+ (* (count preference1:dodgeball:beachball:beachball) 10 )
            20
            (count preference1:triangle_block:beachball)
          )
        )
        5
      )
    )
    (>= (* (count preference1:doggie_bed:golfball:blue_dodgeball) (count preference1:blue_dodgeball:dodgeball:pink_dodgeball) )
      10
    )
  )
)
(:scoring
  (count preference1:pyramid_block:red)
)
)

(define (game game-id-106) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (exists (?y - cylindrical_block)
      (< 8 2)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?k - chair)
        (then
          (once (and (is_setup_object ?k) (on ?k) ) )
          (once (in ?k) )
          (hold-to-end (> (distance 7 ?k) 4) )
        )
      )
    )
  )
)
(:terminal
  (> (* (* (count-unique-positions preference1:beachball) 1 (* (count-increasing-measure preference1:triangle_block) 7 )
        (* 3 10 )
      )
      (count preference1:beachball)
    )
    (* (* 4 7 )
      5
    )
  )
)
(:scoring
  (not
    3
  )
)
)

(define (game game-id-107) (:domain medium-objects-room-v1)
(:setup
  (exists (?x - hexagonal_bin ?y - dodgeball ?d - building)
    (exists (?f - hexagonal_bin ?t - ball)
      (game-optional
        (> 1 (distance room_center door))
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (at-end
        (on ?xxx ?xxx)
      )
    )
  )
)
(:terminal
  (< (count-once-per-objects preference1:red:golfball) (= (count preference1:basketball) )
  )
)
(:scoring
  10
)
)

(define (game game-id-108) (:domain few-objects-room-v1)
(:setup
  (exists (?k - chair ?h ?f - hexagonal_bin)
    (forall (?j - block ?j - hexagonal_bin)
      (or
        (exists (?s - (either chair desktop))
          (forall (?y ?b - (either dodgeball book cellphone) ?z - hexagonal_bin)
            (game-conserved
              (same_type ?h ?s)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?a - block)
        (then
          (once (not (agent_holds ?a) ) )
          (once (agent_holds floor ?a) )
          (once (same_color ?a) )
        )
      )
    )
  )
)
(:terminal
  (>= 300 (* 8 (* 30 (external-forall-maximize 3 ) )
      (* (count preference1:blue_dodgeball) (/ 3 9 ) 8 )
    )
  )
)
(:scoring
  (count preference1:beachball)
)
)

(define (game game-id-109) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (and
      (agent_holds ?xxx)
      (and
        (touch agent agent)
        (not
          (agent_holds ?xxx)
        )
        (adjacent ?xxx)
        (and
          (on ?xxx)
          (on floor ?xxx)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?p - shelf)
        (then
          (once (not (in_motion agent) ) )
          (once (exists (?w - cube_block) (and (in_motion ?w) (and (and (not (and (and (or (not (and (same_object ?w ?w rug) (and (not (and (not (in_motion ?w) ) (in_motion ?p) ) ) ) ) ) (and (not (in_motion agent ?p) ) (in_motion ?p) (on ?p) ) ) (agent_holds ?w ?p) ) (in_motion ?w agent) ) ) (not (and (not (agent_holds ?p) ) (not (not (in_motion ?w) ) ) ) ) ) (on ?p ?w) (and (not (and (and (and (not (in_motion ?p ?p) ) (on ?p ?w) (in ?p ?w) (in_motion agent ?w) (not (agent_holds ?w) ) (in_motion floor) (touch ?w) (agent_holds desk) (not (in_motion ?p) ) (agent_holds ?w ?w) (on ?p) (in_motion ?p) ) (agent_holds ?w ?w) ) (touch ?p ?p) ) ) (agent_holds ?w ?w) ) (not (agent_holds ?p ?p) ) (not (agent_holds ?w) ) (not (in agent) ) ) ) ) )
          (once (in_motion ?p rug) )
        )
      )
    )
    (preference preference2
      (exists (?q ?a ?f - pillow)
        (then
          (hold-while (and (in_motion ?a) (in ?f ?f) ) (< 7 (distance_side room_center front_left_corner)) )
          (once (on ?f) )
          (once (and (agent_holds upright) (in_motion ?f floor) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (count-once-per-external-objects preference2:book) (count-once-per-objects preference1:hexagonal_bin) )
    30
  )
)
(:scoring
  (+ (count-once-per-objects preference1:dodgeball) (count preference2:tall_cylindrical_block) )
)
)

(define (game game-id-110) (:domain few-objects-room-v1)
(:setup
  (forall (?g - hexagonal_bin)
    (and
      (game-conserved
        (agent_holds ?g ?g)
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - blue_cube_block)
      (and
        (preference preference1
          (exists (?o - hexagonal_bin)
            (then
              (once (not (< (distance ?d ?o) 0.5) ) )
              (hold (adjacent ?d) )
              (hold (and (adjacent ?d) (adjacent ?o agent) ) )
              (hold-while (and (in ?d) (not (not (agent_holds pink ?o) ) ) ) (in_motion ) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?n - game_object)
        (at-end
          (and
            (and
              (and
                (agent_holds ?n)
                (in_motion ?n)
              )
              (and
                (not
                  (in_motion upright)
                )
                (adjacent_side ?n)
                (in_motion ?n)
              )
            )
            (same_color ?n ?n)
          )
        )
      )
    )
    (forall (?n - ball)
      (and
        (preference preference3
          (exists (?p ?q - chair)
            (then
              (once (agent_holds top_drawer) )
              (once (and (in_motion ?p) (in_motion ?p ?n) (and (on ?q) (on ?p ?n) ) ) )
              (hold (agent_holds ?q) )
            )
          )
        )
        (preference preference4
          (exists (?v - green_triangular_ramp)
            (then
              (once (or (not (agent_holds ?n ?n) ) (agent_holds ?v) (and (and (and (not (in upright) ) (in_motion ?v) (= 10 0) (in_motion ?n ?n) ) (on pillow) ) (on desk drawer) ) ) )
              (hold (agent_holds ?v ?v) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* 6 (count preference4:green) )
    (* 2 18 )
  )
)
(:scoring
  (- (count preference2:yellow) )
)
)

(define (game game-id-111) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (not
      (and
        (exists (?t - chair)
          (< 3 1)
        )
        (agent_holds floor ?xxx)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (then
        (hold (and (in_motion ?xxx ?xxx) (agent_holds south_west_corner) ) )
        (once (agent_holds ?xxx) )
        (once (or (on ?xxx) (adjacent_side ?xxx) (on color) ) )
      )
    )
  )
)
(:terminal
  (= (+ (count preference1:yellow:white) (count-once preference1:golfball) )
    3
  )
)
(:scoring
  (count-once-per-objects preference1:basketball)
)
)

(define (game game-id-112) (:domain many-objects-room-v1)
(:setup
  (exists (?l - rug)
    (exists (?p - cube_block)
      (game-conserved
        (in_motion bed)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?x - (either dodgeball hexagonal_bin pyramid_block))
        (at-end
          (adjacent ?x)
        )
      )
    )
  )
)
(:terminal
  (>= (* (count-once-per-objects preference1:side_table) 3 )
    3
  )
)
(:scoring
  7
)
)

(define (game game-id-113) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (in ?xxx)
  )
)
(:constraints
  (and
    (forall (?w - block)
      (and
        (preference preference1
          (exists (?s - hexagonal_bin)
            (then
              (hold (not (touch ?w ?s) ) )
              (hold (and (adjacent ?s ?s) (> 7 (distance_side agent back)) ) )
              (hold (agent_holds agent) )
              (hold (agent_holds ?w ?w) )
              (once (adjacent_side ?w ?w ?s) )
            )
          )
        )
      )
    )
    (forall (?h - game_object)
      (and
        (preference preference2
          (at-end
            (open ?h bridge_block)
          )
        )
      )
    )
  )
)
(:terminal
  (>= 4 (count-once-per-objects preference1:blue_cube_block:pink) )
)
(:scoring
  (count preference2:alarm_clock)
)
)

(define (game game-id-114) (:domain few-objects-room-v1)
(:setup
  (not
    (and
      (and
        (exists (?b - hexagonal_bin)
          (game-conserved
            (and
              (in_motion ?b)
              (touch ?b ?b)
            )
          )
        )
        (and
          (game-conserved
            (and
              (and
                (on blue)
                (touch ?xxx)
              )
              (not
                (touch ?xxx ?xxx)
              )
            )
          )
        )
      )
      (game-conserved
        (object_orientation ?xxx)
      )
      (exists (?v - triangular_ramp ?d - block)
        (game-conserved
          (in_motion ?d ?d)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?f - golfball ?n - dodgeball ?j - pillow)
        (then
          (hold (in ?j ?j) )
          (hold-while (and (not (and (in_motion ?j ?j) (in_motion ?j) ) ) (in_motion ?j) (and (touch ?j ?j) (and (>= 1 (distance 10 ?j)) (and (is_setup_object pink_dodgeball) (in_motion blue) ) ) ) ) (in ?j ?j) )
          (once (agent_holds green) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (external-forall-maximize (count preference1:hexagonal_bin) ) 7 )
      (>= (count preference1:red) (count-once preference1:blue_dodgeball) )
    )
    (or
      (> 2 (total-score) )
      (or
        (>= (* (count preference1:beachball) (count preference1:dodgeball) )
          10
        )
      )
    )
    (>= (* 4 0 )
      15
    )
    (>= (total-score) (count preference1:pink:blue_dodgeball:yellow) )
  )
)
(:scoring
  15
)
)

(define (game game-id-115) (:domain medium-objects-room-v1)
(:setup
  (exists (?v - beachball)
    (exists (?m - curved_wooden_ramp)
      (and
        (exists (?t - cube_block ?e - block)
          (game-conserved
            (and
              (not
                (and
                  (not
                    (on ?m)
                  )
                  (exists (?n - dodgeball ?l - dodgeball)
                    (not
                      (and
                        (and
                          (on ?l ?e)
                        )
                        (in_motion rug)
                      )
                    )
                  )
                  (or
                    (and
                      (on ?m ?e)
                      (on desk ?v ?v)
                    )
                    (and
                      (agent_holds ?e)
                      (and
                        (is_setup_object bed)
                      )
                    )
                  )
                )
              )
              (in_motion ?e)
            )
          )
        )
        (and
          (game-optional
            (object_orientation ?m)
          )
          (game-conserved
            (exists (?y - building)
              (in ?m ?v)
            )
          )
        )
        (and
          (and
            (exists (?a - ball ?j - hexagonal_bin)
              (game-conserved
                (not
                  (not
                    (and
                      (agent_holds ?v)
                      (in_motion ?m ?m)
                    )
                  )
                )
              )
            )
            (forall (?y - hexagonal_bin ?y - dodgeball)
              (and
                (game-conserved
                  (on ?y ?y)
                )
              )
            )
            (game-conserved
              (in_motion ?m)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?t - ball)
        (then
          (hold (and (exists (?g - hexagonal_bin) (in ?t) ) (agent_holds ?t) (on ?t) ) )
        )
      )
    )
  )
)
(:terminal
  (> 10 1 )
)
(:scoring
  3
)
)

(define (game game-id-116) (:domain many-objects-room-v1)
(:setup
  (or
    (and
      (forall (?a - desktop)
        (and
          (game-conserved
            (exists (?l - curved_wooden_ramp)
              (in_motion ?a ?l)
            )
          )
          (game-optional
            (adjacent_side ?a)
          )
        )
      )
      (and
        (game-conserved
          (on ?xxx)
        )
      )
      (game-conserved
        (exists (?o - dodgeball)
          (and
            (agent_holds ?o agent)
            (and
              (touch ?o)
              (exists (?z - hexagonal_bin)
                (not
                  (agent_holds ?z)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?l - hexagonal_bin ?y - game_object)
      (and
        (preference preference1
          (exists (?k - cube_block ?e - drawer ?a - chair)
            (then
              (hold (agent_holds ?a) )
              (hold (rug_color_under ?y) )
              (hold (in_motion ?y) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (count preference1:pink) 9 )
  )
)
(:scoring
  10
)
)

(define (game game-id-117) (:domain few-objects-room-v1)
(:setup
  (exists (?n - curved_wooden_ramp ?g - (either dodgeball dodgeball) ?u - chair)
    (game-conserved
      (in_motion ?u ?u)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?n - golfball ?u - doggie_bed ?k - (either golfball game_object))
        (then
          (hold (agent_holds ?k bed) )
          (once (not (not (adjacent ?k) ) ) )
          (hold (and (or (not (not (and (in_motion ?k ?k) (touch ?k) ) ) ) (in_motion ?k ?k) ) (in_motion ?k) ) )
        )
      )
    )
    (forall (?u - hexagonal_bin ?e - dodgeball)
      (and
        (preference preference2
          (exists (?g - dodgeball ?y - (either alarm_clock lamp game_object))
            (at-end
              (in_motion agent)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (not
      (>= (> 10 1 )
        (+ (count-once-per-external-objects preference1:green) (+ (count-once preference1:alarm_clock) 6 (* (* (count preference1:yellow:dodgeball) 1 )
              6
            )
            2
            (count preference2:block:triangle_block)
            (count preference1:basketball)
          )
        )
      )
    )
    (and
      (not
        (or
          (and
            (or
              (or
                (>= 10 (count preference1:red) )
                (>= 3 (count-once preference2:hexagonal_bin) )
                (>= 1 1 )
                (>= (count-once-per-objects preference2:basketball) (count preference2:dodgeball) )
              )
              (>= (- (>= (- 9 )
                    10
                  )
                )
                30
              )
              (>= (count-once-per-objects preference1:pink_dodgeball) (count preference2:blue_pyramid_block) )
            )
            (>= 2 3 )
          )
          (>= (count-once-per-objects preference1:hexagonal_bin:blue_pyramid_block) 3 )
        )
      )
      (or
        (or
          (> (* 4 (count-once preference2:yellow) )
            (count preference1:orange:block)
          )
          (<= 5 (count preference2:golfball:basketball) )
        )
        (>= (count-once-per-objects preference2:green) (<= (count preference2:pink) (count-once-per-objects preference2:basketball) )
        )
      )
    )
    (or
      (>= 2 (count-measure preference2:dodgeball) )
      (or
        (< (total-score) (count-overlapping preference1:green:yellow) )
        (or
          (> (count preference1:basketball:dodgeball) 5 )
          (>= (count preference1:red) (* (count preference1:pink:orange) (count preference2:dodgeball:dodgeball) (count preference1:dodgeball) (count preference1:orange) 5 10 )
          )
          (<= (count preference1:pink) 4 )
        )
      )
    )
  )
)
(:scoring
  (count-once preference2:beachball)
)
)

(define (game game-id-118) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (in_motion agent pink)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?t - building)
        (then
          (hold (exists (?y - (either alarm_clock blue_cube_block blue_cube_block) ?l - dodgeball) (not (between ?l ?l) ) ) )
          (hold-while (touch ?t ?t) (agent_holds ?t ?t) (not (exists (?x - (either yellow triangle_block) ?g - cube_block) (and (in_motion ?g) (in desk) ) ) ) )
          (once (and (exists (?c - bridge_block ?x - dodgeball ?n - pillow) (on ?n) ) (in ?t ?t) ) )
        )
      )
    )
    (preference preference2
      (at-end
        (agent_holds ?xxx ?xxx)
      )
    )
  )
)
(:terminal
  (or
    (or
      (or
        (>= (count-longest preference2:beachball:dodgeball) (* (count preference1:purple) (+ 100 20 )
          )
        )
      )
      (= 3 2 )
    )
  )
)
(:scoring
  (- (count preference1:beachball:dodgeball:beachball) )
)
)

(define (game game-id-119) (:domain many-objects-room-v1)
(:setup
  (not
    (exists (?o - hexagonal_bin)
      (and
        (and
          (forall (?d - cube_block)
            (or
              (and
                (and
                  (and
                    (and
                      (game-optional
                        (on ?o rug)
                      )
                      (and
                        (exists (?y - (either blue_cube_block basketball) ?k - wall ?t - block ?p - beachball ?f - shelf)
                          (game-conserved
                            (in ?f)
                          )
                        )
                      )
                    )
                    (game-conserved
                      (agent_holds ?o ?d)
                    )
                  )
                  (or
                    (game-conserved
                      (not
                        (not
                          (agent_holds ?d ?d)
                        )
                      )
                    )
                    (forall (?u - golfball ?i - hexagonal_bin)
                      (game-optional
                        (exists (?w ?k - dodgeball)
                          (not
                            (agent_holds ?d)
                          )
                        )
                      )
                    )
                  )
                  (forall (?q - triangular_ramp)
                    (and
                      (exists (?f - hexagonal_bin)
                        (exists (?t - game_object ?x - building)
                          (exists (?c - teddy_bear)
                            (exists (?p - blue_pyramid_block ?e - (either tall_cylindrical_block triangle_block))
                              (game-conserved
                                (agent_holds ?f)
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
                (exists (?r - (either dodgeball laptop) ?w - pyramid_block ?l - (either book golfball))
                  (and
                    (exists (?u - hexagonal_bin)
                      (game-optional
                        (not
                          (in_motion rug)
                        )
                      )
                    )
                  )
                )
                (forall (?e - dodgeball)
                  (game-conserved
                    (on ?e)
                  )
                )
              )
              (game-conserved
                (same_color green_golfball ?o)
              )
              (game-conserved
                (same_object ?d)
              )
            )
          )
        )
        (game-optional
          (and
            (and
              (in ?o)
              (in agent ?o)
            )
            (in ?o)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?x - wall ?v - hexagonal_bin ?f - block ?u - hexagonal_bin)
      (and
        (preference preference1
          (exists (?f - cube_block ?j - hexagonal_bin)
            (then
              (once (agent_holds ?j ?u) )
              (hold (not (and (in_motion pink_dodgeball) (not (in_motion ?j ?u) ) (and (not (in_motion agent) ) (not (not (on ?u) ) ) (in_motion ?j) ) ) ) )
              (once (not (agent_holds ?j desk) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= (count-total preference1:red) (+ (count-once-per-objects preference1:dodgeball:basketball) (external-forall-maximize (count-once preference1:beachball) ) )
  )
)
(:scoring
  (* (* (* (= (count-once-per-objects preference1:doggie_bed) )
        (+ 1 (< (count-once preference1:dodgeball) 8 )
          (* (count preference1:beachball) (total-score) )
        )
      )
      20
    )
    (external-forall-minimize
      (+ 180 )
    )
  )
)
)

(define (game game-id-120) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (touch ?xxx)
  )
)
(:constraints
  (and
    (forall (?f - triangular_ramp ?r - dodgeball)
      (and
        (preference preference1
          (exists (?e - chair)
            (then
              (once (and (and (and (or (on ?r) (in ?r) ) (exists (?v - hexagonal_bin) (agent_holds pink_dodgeball ?e) ) ) (< (distance agent agent) 2) ) (agent_holds ?r) ) )
              (once (in_motion ?e) )
              (once (and (in_motion ?r ?r) (not (on ?e ?e) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (< (count-measure preference1:basketball) (count-once-per-objects preference1:dodgeball) )
    (>= 2 4 )
  )
)
(:scoring
  (count preference1:yellow)
)
)

(define (game game-id-121) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?h - block)
        (then
          (once (and (in ?h) (not (and (open ?h ?h) (> 7 (distance 9 ?h)) ) ) ) )
          (once (not (and (not (agent_holds ?h) ) (in ?h) ) ) )
          (once (agent_holds ?h brown) )
          (hold-while (is_setup_object upright) (and (on ?h ?h) (agent_holds ?h) ) )
          (hold (not (agent_holds ?h) ) )
        )
      )
    )
    (preference preference2
      (exists (?v - dodgeball ?a - (either dodgeball cube_block))
        (at-end
          (agent_crouches ?a)
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 3 (total-time) )
    (>= (count preference2:cube_block) (* 2 (count preference2:basketball) )
    )
  )
)
(:scoring
  (- (count preference1:hexagonal_bin:beachball) )
)
)

(define (game game-id-122) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?d - doggie_bed ?h - curved_wooden_ramp)
      (exists (?o - (either golfball doggie_bed) ?y - (either mug dodgeball cellphone cylindrical_block))
        (forall (?d - dodgeball)
          (game-conserved
            (adjacent ?h ?y)
          )
        )
      )
    )
    (game-conserved
      (agent_holds ?xxx west_wall)
    )
    (and
      (and
        (and
          (not
            (exists (?l - hexagonal_bin)
              (game-conserved
                (not
                  (on ?l ?l ?l)
                )
              )
            )
          )
          (forall (?k - cube_block ?j ?l ?z ?g ?p ?r - (either desktop laptop) ?t - (either hexagonal_bin pink))
            (exists (?u - doggie_bed)
              (game-conserved
                (on ?u ?u)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - hexagonal_bin ?d - game_object ?d - hexagonal_bin)
      (and
        (preference preference1
          (exists (?q - hexagonal_bin)
            (then
              (once (<= (distance ?d agent desk) 2) )
              (once (and (agent_holds ?d ?d) (on ?q) ) )
              (once (and (agent_holds agent ?d) (adjacent ?d ?q) ) )
            )
          )
        )
      )
    )
    (forall (?c - chair)
      (and
        (preference preference2
          (exists (?a - hexagonal_bin ?n - ball)
            (then
              (hold-while (and (in_motion ?c) (in_motion ?n) ) (adjacent ?c) )
              (once (and (in_motion ?c) (not (on ?n) ) ) )
              (hold (not (not (not (and (not (and (and (and (not (< (distance desk ?n 1) (distance 2 3)) ) (or (not (and (in_motion ?c) (and (not (not (= 0.5 1) ) ) (agent_holds ?n) ) (in_motion upright ?c) ) ) (agent_holds pink_dodgeball) ) ) (not (in ?n ?c ?n) ) ) (in_motion ?c) ) ) ) ) ) ) )
            )
          )
        )
      )
    )
    (forall (?v - wall)
      (and
        (preference preference3
          (exists (?d ?e - wall ?d - hexagonal_bin)
            (then
              (once (touch ?v ?v) )
              (once (agent_holds ?v ?d) )
              (hold (< 2 0.5) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= (+ (total-time) (* (count preference1:blue_dodgeball) )
    )
    (count-shortest preference2:pink)
  )
)
(:scoring
  (external-forall-maximize
    (count preference1:yellow_cube_block)
  )
)
)

(define (game game-id-123) (:domain many-objects-room-v1)
(:setup
  (forall (?k - hexagonal_bin ?f - game_object)
    (exists (?j - (either cellphone pyramid_block cylindrical_block) ?d - hexagonal_bin)
      (game-optional
        (on ?f ?f)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?g - (either mug) ?a - hexagonal_bin)
        (at-end
          (on ?a)
        )
      )
    )
    (forall (?c - (either curved_wooden_ramp golfball dodgeball))
      (and
        (preference preference2
          (exists (?v - ball)
            (then
              (once (agent_holds ?c) )
              (once (same_type sideways ?v) )
              (once-measure (and (in side_table) (same_color agent ?c) ) (distance ?c) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 4 (* (+ 7 5 )
        6
        (* (count-once-per-objects preference2:red:blue_dodgeball) 9 )
      )
    )
  )
)
(:scoring
  (count-measure preference2:basketball)
)
)

(define (game game-id-124) (:domain medium-objects-room-v1)
(:setup
  (forall (?e - hexagonal_bin ?l - cube_block)
    (game-optional
      (in_motion ?l ?l)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?m - curved_wooden_ramp)
        (then
          (hold-while (adjacent_side agent ?m) (in_motion ?m) (agent_holds ball) )
          (hold (between desk ?m) )
          (once (and (in_motion left ?m) (agent_holds desk) ) )
        )
      )
    )
    (preference preference2
      (exists (?l - (either blue_cube_block laptop) ?z - chair)
        (at-end
          (on ?z)
        )
      )
    )
    (preference preference3
      (exists (?u - block ?u - hexagonal_bin)
        (then
          (once (between ?u) )
          (once (not (is_setup_object ?u) ) )
          (once (object_orientation ?u) )
          (once (< (distance room_center agent) (distance 8 ?u)) )
        )
      )
    )
  )
)
(:terminal
  (<= (* (+ (* (* 4 (* (* (count-once-per-objects preference1:purple) (count preference2:wall) (count-once preference1:beachball) )
              6
            )
          )
          (- (- (* (count preference1:green) (count preference3:green) )
            )
          )
        )
        1
        (count-once-per-objects preference1:pink_dodgeball)
        1
      )
      (count preference2:basketball)
    )
    (count preference2)
  )
)
(:scoring
  (* (count preference3:yellow) (count preference3:pink) )
)
)

(define (game game-id-125) (:domain medium-objects-room-v1)
(:setup
  (exists (?j - dodgeball ?k - curved_wooden_ramp)
    (exists (?y - doggie_bed)
      (exists (?z - color)
        (and
          (and
            (game-optional
              (adjacent ?k)
            )
            (game-conserved
              (touch ?y ?z)
            )
            (game-conserved
              (on ?z)
            )
          )
          (forall (?u - triangular_ramp)
            (and
              (exists (?o - building ?l - block)
                (exists (?o - teddy_bear)
                  (game-conserved
                    (and
                      (not
                        (on agent ?y)
                      )
                      (in ?k ?l)
                      (in_motion ?y ?z)
                    )
                  )
                )
              )
              (game-optional
                (and
                  (agent_holds ?k ?y)
                  (and
                    (not
                      (adjacent ?u)
                    )
                    (agent_holds agent ?u)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?p ?k - hexagonal_bin)
        (then
          (once (and (in ?k) (exists (?h - teddy_bear) (in_motion ?p side_table) ) (> 3 2) (in ?p ?p) (agent_holds ?k) (exists (?c - building) (in ?c) ) ) )
          (once (adjacent agent) )
          (once (and (not (not (not (not (not (and (agent_holds ?p) ) ) ) ) ) ) (not (in_motion ?k) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (- (* (count preference1:yellow) (+ 5 (count preference1:red) )
        )
      )
      (+ (count preference1:orange) (* (* (+ (* (count-once-per-objects preference1:yellow_pyramid_block) (+ 1 (+ 2 (count-total preference1:red:pink) )
                )
              )
              (* 2 3 )
            )
            (+ 6 (count preference1:hexagonal_bin) )
          )
          4
        )
      )
    )
    (not
      (>= (count preference1:yellow) (count preference1:dodgeball) )
    )
  )
)
(:scoring
  2
)
)

(define (game game-id-126) (:domain many-objects-room-v1)
(:setup
  (exists (?i - dodgeball)
    (game-conserved
      (and
        (not
          (and
            (on ?i)
            (and
              (not
                (agent_holds bed)
              )
              (in_motion ?i)
            )
            (not
              (agent_holds bed)
            )
            (not
              (on front)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (then
        (once (agent_holds ?xxx) )
        (once (touch ?xxx ?xxx) )
        (once (not (not (on desk) ) ) )
      )
    )
  )
)
(:terminal
  (>= 3 7 )
)
(:scoring
  5
)
)

(define (game game-id-127) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (in ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?f - game_object ?s - game_object)
        (at-end
          (agent_holds top_shelf)
        )
      )
    )
    (preference preference2
      (exists (?k - drawer)
        (at-end
          (game_over ?k ?k)
        )
      )
    )
  )
)
(:terminal
  (not
    (and
      (>= 5 (count preference2:golfball) )
    )
  )
)
(:scoring
  5
)
)

(define (game game-id-128) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?c - hexagonal_bin)
      (game-optional
        (adjacent ?c)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?g - ball ?m - curved_wooden_ramp ?u - hexagonal_bin)
        (then
          (once (and (and (in_motion ?u ?u) (not (agent_holds ?u ?u) ) (agent_holds ?u ?u) (< 7 1) ) (agent_holds ?u) (exists (?p - golfball) (on ?p) ) ) )
          (hold-while (and (not (in_motion ?u rug) ) (exists (?p - golfball) (agent_holds ?p agent) ) ) (adjacent ?u) )
          (hold-while (touch ?u sideways) (not (= 1 1) ) )
          (once (and (in_motion ?u ?u) ) )
        )
      )
    )
    (preference preference2
      (exists (?o - building ?n - doggie_bed)
        (then
          (hold (in_motion ?n) )
          (hold (not (adjacent desktop) ) )
          (once (touch ?n) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (= (count-once-per-objects preference1:dodgeball:yellow) (* 180 5 (count preference2:golfball) 10 )
    )
  )
)
(:scoring
  (count-once preference2:beachball)
)
)

(define (game game-id-129) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (in_motion ?xxx ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?b - dodgeball ?j - hexagonal_bin)
        (then
          (hold-while (forall (?g - tall_cylindrical_block ?d - ball) (in_motion ?d ?d) ) (not (and (not (in_motion ?j desk) ) (faces ?j ?j) ) ) (in_motion ?j ?j) (= (distance desk ?j) 4) )
          (hold (on ?j) )
          (once (not (in ?j) ) )
          (once (> (distance ?j ?j) (distance room_center ?j)) )
        )
      )
    )
    (forall (?j - wall)
      (and
        (preference preference2
          (exists (?l - shelf)
            (then
              (hold (and (in ?l ?l) (on ?j) (< (distance 2 ?j) 1) (not (and (agent_holds rug ?j ?j) (exists (?q - ball ?x - (either watch laptop)) (< 1 7) ) ) ) ) )
              (once (in_motion ?l) )
              (hold (adjacent ?l) )
            )
          )
        )
        (preference preference3
          (exists (?w - building)
            (then
              (once (forall (?u - building) (same_color agent ?j) ) )
              (hold (and (on ?w) (not (adjacent_side desk) ) ) )
              (once (between ?w) )
            )
          )
        )
        (preference preference4
          (exists (?z - hexagonal_bin ?b - (either bridge_block red pencil) ?z - hexagonal_bin ?t - ball ?a - dodgeball)
            (then
              (once (on ?a ?a) )
              (once (in_motion ?j ?j) )
              (hold (agent_holds ?a ?j) )
            )
          )
        )
      )
    )
    (preference preference5
      (exists (?b - building)
        (then
          (once (not (not (not (agent_holds agent ?b) ) ) ) )
          (once (touch ?b ?b) )
          (once (in_motion ?b ?b) )
        )
      )
    )
    (forall (?o ?y ?c ?d - ball)
      (and
        (preference preference6
          (exists (?g - (either doggie_bed golfball) ?q - cube_block)
            (at-end
              (and
                (in_motion ?o ?q)
                (not
                  (and
                    (and
                      (not
                        (not
                          (on ?c ?y)
                        )
                      )
                      (and
                        (and
                          (and
                            (in_motion ?d)
                            (and
                              (not
                                (agent_holds ?q ?c)
                              )
                              (or
                                (= 1 1)
                                (not
                                  (on ?o)
                                )
                              )
                            )
                          )
                          (or
                            (adjacent ?c ?q)
                            (on agent)
                            (in_motion bed ?y)
                          )
                        )
                        (not
                          (agent_holds bed ?y)
                        )
                      )
                    )
                    (not
                      (on ?d)
                    )
                  )
                )
              )
            )
          )
        )
        (preference preference7
          (then
            (any)
            (hold (and (on ?y ?c) (and (and (and (and (not (agent_holds ?d) ) (same_color ?c) (same_color ?o) (not (<= (distance ?d 0) (distance room_center 3 room_center)) ) ) (= 1 (distance room_center ?o) 0.5) ) (not (in ?y pink_dodgeball) ) ) (adjacent floor agent) ) ) )
            (hold (not (agent_holds ?d ?d) ) )
          )
        )
      )
    )
    (preference preference8
      (exists (?n - hexagonal_bin ?i - dodgeball)
        (then
          (once (touch bed ?i) )
          (once (on ?i) )
          (once (not (in_motion agent) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference5:beachball) (/ (count-once-per-objects preference5:pink) (* (+ (* 6 (count-once-per-objects preference4:triangle_block:yellow) )
          (+ 10 (count-once-per-external-objects preference1:orange:dodgeball) )
        )
        (+ (count-once preference7:book) (* (count-once-per-objects preference1:beachball) (* (count preference3:golfball) (count-once-per-objects preference4:basketball) )
          )
        )
      )
    )
  )
)
(:scoring
  8
)
)

(define (game game-id-130) (:domain many-objects-room-v1)
(:setup
  (and
    (game-optional
      (in upright door)
    )
    (and
      (and
        (game-optional
          (not
            (game_over ?xxx)
          )
        )
      )
    )
    (game-conserved
      (adjacent ?xxx rug)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?f - pyramid_block)
        (then
          (hold (agent_holds ?f floor) )
          (once (agent_holds ?f) )
          (once (touch ?f) )
        )
      )
    )
    (preference preference2
      (exists (?w - cube_block ?q - triangular_ramp)
        (then
          (once (not (on ?q ?q) ) )
          (once (adjacent ?q ?q) )
          (once (and (rug_color_under ?q) (and (exists (?c - wall ?i - hexagonal_bin) (same_color ?q agent) ) (in_motion ?q) (and (and (in ?q ?q) (and (adjacent ?q ?q) (not (not (adjacent ?q rug) ) ) ) (agent_holds desk ?q) (on bed ?q) ) (and (on floor) (not (in_motion ?q) ) ) ) ) ) )
        )
      )
    )
    (preference preference3
      (exists (?f - dodgeball)
        (then
          (hold (and (and (and (not (agent_holds desk) ) (and (in_motion ?f) (agent_holds ?f ?f) (and (< 1 (distance ?f agent)) ) (and (exists (?s - game_object) (not (and (agent_holds ?s) (in bed) (and (in ?s) (and (and (and (agent_holds ?s) (and (in_motion floor ?f) (and (in_motion ?s) (or (on ?s) (agent_holds ?s) ) ) ) (<= 1 (distance ?f ?f)) ) (not (in_motion ?s ?s) ) ) (and (not (and (not (and (and (in_motion ?s) ) (not (not (same_color ?f) ) ) ) ) (not (is_setup_object ?s front_left_corner) ) ) ) (and (not (adjacent ?s) ) (and (and (and (in_motion ?s) (agent_holds ?f) (in ?s ?f) (and (not (and (in_motion ?f) (not (in_motion ?f) ) ) ) (not (in ?s) ) ) ) (agent_holds ?s ?s) ) (not (not (< (distance ?f 6) (distance_side door ?s)) ) ) ) ) (agent_holds rug) (and (in_motion agent ?f) (on ?s ?f) ) ) (and (and (adjacent ?f) (not (exists (?r - hexagonal_bin) (agent_holds ?f ?r) ) ) (in ?f) ) (between agent) ) ) ) ) ) ) (and (and (in_motion ?f) ) (forall (?y ?n - cube_block) (agent_holds ?n ?f) ) (on ?f ?f) (equal_z_position ?f) ) (equal_z_position ?f ?f) (agent_holds ?f ?f) (same_object ?f) (adjacent ?f) ) ) ) (in ?f ?f) ) (and (on ?f ?f) (not (or (game_over agent) (not (on ?f) ) ) ) ) ) )
          (once (and (in_motion ?f brown) (same_color ?f) ) )
          (hold (and (= (distance front 0) (distance ?f front)) (< 8 1) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count preference3:pink) 4 )
    (count-once preference3:pyramid_block)
  )
)
(:scoring
  (* (count preference1:golfball:yellow:hexagonal_bin) )
)
)

(define (game game-id-131) (:domain many-objects-room-v1)
(:setup
  (forall (?g - (either dodgeball beachball) ?y - block ?k - curved_wooden_ramp)
    (game-conserved
      (not
        (opposite ?k bed)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?y - pillow)
        (at-end
          (in_motion ?y)
        )
      )
    )
    (forall (?s - building)
      (and
        (preference preference2
          (exists (?m - teddy_bear ?n - wall)
            (then
              (once (and (agent_holds ?n) (on ?n) ) )
              (once (exists (?f ?m ?g - game_object ?x - game_object) (equal_x_position ?s pink) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (count-longest preference1:red_pyramid_block) (+ 10 (count-once preference1:red) )
    )
  )
)
(:scoring
  (count-once-per-objects preference2)
)
)

(define (game game-id-132) (:domain many-objects-room-v1)
(:setup
  (exists (?a - dodgeball)
    (exists (?u ?p - hexagonal_bin)
      (exists (?d - teddy_bear)
        (or
          (game-optional
            (not
              (not
                (not
                  (adjacent ?p)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?k - doggie_bed ?t - game_object)
      (and
        (preference preference1
          (exists (?c - block)
            (then
              (hold-while (agent_holds ?t ?t ?t) (exists (?m - curved_wooden_ramp) (not (in_motion ?c) ) ) )
              (once (and (or (touch ?c ?t) (and (not (agent_holds ?t ?c) ) (same_color pillow) ) ) (and (not (in_motion ?c) ) (< 2 (distance ?c 10 ?c)) ) ) )
              (hold (not (> (distance ?c ?t) (distance agent ?c)) ) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?a - building)
        (then
          (hold (= (x_position desk) (x_position ?a room_center)) )
          (once (agent_holds ?a ?a) )
          (hold (< (distance ?a room_center) 2) )
        )
      )
    )
  )
)
(:terminal
  (< (* 30 (total-score) 1 )
    2
  )
)
(:scoring
  (count preference2:doggie_bed)
)
)

(define (game game-id-133) (:domain few-objects-room-v1)
(:setup
  (and
    (game-optional
      (agent_holds ?xxx)
    )
    (and
      (game-conserved
        (on ?xxx)
      )
      (game-optional
        (agent_holds ?xxx)
      )
      (and
        (game-optional
          (not
            (and
              (in ?xxx brown)
              (agent_holds ?xxx)
            )
          )
        )
      )
    )
    (not
      (exists (?f - (either ball pyramid_block))
        (and
          (and
            (and
              (exists (?o - hexagonal_bin)
                (game-conserved
                  (adjacent ?o ?o)
                )
              )
            )
          )
          (game-conserved
            (on ?f ?f)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?g - hexagonal_bin)
        (at-end
          (faces ?g ?g)
        )
      )
    )
  )
)
(:terminal
  (> 4 15 )
)
(:scoring
  (* 7 (count preference1:yellow_cube_block:pink) )
)
)

(define (game game-id-134) (:domain many-objects-room-v1)
(:setup
  (or
    (forall (?y - ball)
      (and
        (exists (?v - dodgeball)
          (game-conserved
            (not
              (in_motion ?v agent)
            )
          )
        )
      )
    )
    (forall (?o - bridge_block)
      (game-optional
        (not
          (in_motion ?o)
        )
      )
    )
    (or
      (exists (?u - drawer ?j - (either triangle_block golfball cd))
        (game-conserved
          (not
            (not
              (and
                (< (distance ?j ?j) 5)
                (touch ?j)
              )
            )
          )
        )
      )
      (and
        (and
          (game-conserved
            (touch agent)
          )
        )
        (exists (?u - chair)
          (or
            (and
              (game-conserved
                (exists (?k - game_object)
                  (agent_holds pink)
                )
              )
            )
            (game-conserved
              (not
                (not
                  (and
                    (in_motion ?u)
                    (agent_holds ?u)
                  )
                )
              )
            )
          )
        )
      )
      (game-optional
        (touch ?xxx)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?i - teddy_bear)
        (then
          (once (agent_holds bed) )
          (once (in_motion ?i agent) )
        )
      )
    )
  )
)
(:terminal
  (> (* 3 (+ (or (count preference1:dodgeball) 5 (count-shortest preference1:beachball) ) (count preference1:hexagonal_bin) 1 )
    )
    (= (or 2 2 (count-once-per-external-objects preference1:dodgeball) ) (count-longest preference1:beachball) )
  )
)
(:scoring
  (count preference1:hexagonal_bin:pink_dodgeball)
)
)

(define (game game-id-135) (:domain medium-objects-room-v1)
(:setup
  (exists (?u - ball)
    (game-optional
      (and
        (touch ?u)
        (in_motion ?u)
      )
    )
  )
)
(:constraints
  (and
    (forall (?c ?g - hexagonal_bin)
      (and
        (preference preference1
          (exists (?i - hexagonal_bin ?f - blinds)
            (then
              (hold (adjacent ?c ?f) )
              (once (and (forall (?d - (either mug chair) ?m - hexagonal_bin) (and (in_motion ?g) (agent_holds ?f ?m) (and (not (in ?c) ) (not (broken ?f) ) ) ) ) (< (x_position 10 ?f) 1) ) )
              (once (not (< (distance 3 1) 2) ) )
            )
          )
        )
      )
    )
    (forall (?o - dodgeball)
      (and
        (preference preference2
          (exists (?k ?g - red_dodgeball)
            (then
              (hold (in_motion ?g ?g) )
              (once (and (in_motion ?g ?g) (agent_holds ?k) ) )
              (once (object_orientation ?k) )
            )
          )
        )
        (preference preference3
          (exists (?n - dodgeball ?q - hexagonal_bin)
            (then
              (once (adjacent ?o) )
              (hold (exists (?g - ball ?r - color) (above ?r green) ) )
              (once (< 2 1) )
            )
          )
        )
      )
    )
    (preference preference4
      (then
        (once (in_motion ?xxx agent) )
        (once (or (and (not (agent_holds ?xxx) ) (not (and (not (agent_holds ?xxx) ) (on ?xxx ?xxx) ) ) (not (not (in_motion ?xxx ?xxx) ) ) ) (in ?xxx) ) )
        (hold (equal_z_position desk ?xxx) )
      )
    )
  )
)
(:terminal
  (> 2 (count preference1:dodgeball) )
)
(:scoring
  5
)
)

(define (game game-id-136) (:domain many-objects-room-v1)
(:setup
  (not
    (game-conserved
      (on ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?i - hexagonal_bin)
        (then
          (once (and (and (touch ?i) (and (and (agent_holds ?i) (in drawer) ) (in_motion ?i) ) (same_type ?i ?i) ) (object_orientation ?i) ) )
          (hold (agent_holds ?i) )
          (once (agent_holds ?i ?i) )
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (not
        (>= (count preference1:basketball) (+ 6 (count-once preference1:golfball:beachball) )
        )
      )
    )
  )
)
(:scoring
  3
)
)

(define (game game-id-137) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (touch rug)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?x - hexagonal_bin ?o - dodgeball)
        (then
          (once (and (and (in ?o) (and (not (in blinds) ) (agent_holds ?o ?o) (and (not (not (in_motion ?o ?o ?o) ) ) (and (and (in ?o) (and (agent_holds ?o) (in_motion ?o sideways) ) ) (not (on ?o ?o) ) ) ) ) ) (in_motion ?o) (agent_holds ?o rug) (and (in_motion ?o) (not (agent_holds pink_dodgeball) ) ) (in_motion ?o) (exists (?z - dodgeball) (and (agent_holds ?z ?o) (is_setup_object ?z ?z) ) ) (and (rug_color_under ?o ?o) (not (and (agent_holds rug ?o) (equal_z_position ?o) ) ) (and (on ?o) (agent_holds ?o ?o) ) ) ) )
          (hold (in_motion ?o ?o) )
          (once (agent_holds ?o) )
        )
      )
    )
    (forall (?a - red_dodgeball ?f - tall_cylindrical_block)
      (and
        (preference preference2
          (exists (?u - dodgeball ?l - dodgeball)
            (then
              (once (not (adjacent ?f ?l) ) )
              (once (and (on ?l ?l) (in_motion ?f) ) )
              (once (not (and (touch ?f ?f) (in ?l bed) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (count preference2:blue_cube_block) 5 )
    (or
      (>= (* 3 (count preference2:red_pyramid_block) )
        (count preference1:dodgeball)
      )
      (>= 3 (* 4 (* 2 8 )
          (count-once preference2:cube_block)
          (count preference1:pink)
        )
      )
      (>= (count preference2:hexagonal_bin) (- (count preference1:bed:pink) )
      )
      (or
        (>= (count-once preference2:hexagonal_bin:pink:yellow) (count-once-per-objects preference1:blue_cube_block) )
        (or
          (>= (count-once preference1) (count-once-per-objects preference1:green:orange:yellow_cube_block) )
          (>= (count preference2:blue_dodgeball:green) (- (* (+ (count-measure preference1:purple) 2 (+ 4 3 )
                )
                7
              )
            )
          )
        )
      )
    )
  )
)
(:scoring
  (count preference2:basketball)
)
)

(define (game game-id-138) (:domain many-objects-room-v1)
(:setup
  (forall (?q - (either mug mug bridge_block cd book blue_cube_block laptop))
    (game-conserved
      (not
        (in ?q)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (then
        (hold (and (in ?xxx) (exists (?r - pyramid_block) (not (and (not (agent_holds ?r ?r) ) (in_motion ?r ?r) ) ) ) (agent_holds ?xxx ?xxx) ) )
        (hold (adjacent ?xxx agent) )
        (once (on desk block) )
      )
    )
    (preference preference2
      (exists (?p - dodgeball ?l - pyramid_block)
        (then
          (once (and (adjacent rug) (in_motion ?l) (on ?l ?l) ) )
          (hold-while (or (or (same_color desk) (not (not (not (agent_holds door ?l desk) ) ) ) ) (between ?l) ) (and (and (< (distance ?l ?l) 1) (in ?l floor) ) (and (and (in ?l ?l) (in_motion agent ?l) (agent_holds ?l ?l bed) ) (on ?l) ) ) )
          (once (agent_holds ?l ?l) )
        )
      )
    )
    (preference preference3
      (exists (?h ?x ?l ?m ?v - dodgeball)
        (then
          (once (agent_holds ?h) )
          (once (not (agent_holds ?m) ) )
          (once (adjacent ?l desk) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:red:pink:book) (- (count preference2:golfball) )
  )
)
(:scoring
  30
)
)

(define (game game-id-139) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?c - (either side_table hexagonal_bin))
      (forall (?y - flat_block ?h - wall)
        (or
          (forall (?g - block)
            (game-conserved
              (agent_holds top_shelf)
            )
          )
        )
      )
    )
    (game-conserved
      (in ?xxx)
    )
  )
)
(:constraints
  (and
    (forall (?y ?s - bridge_block)
      (and
        (preference preference1
          (exists (?p - doggie_bed)
            (then
              (once (not (not (object_orientation ?p) ) ) )
              (once (agent_holds ?y desk) )
              (hold (agent_holds ?y ?y ?s) )
            )
          )
        )
        (preference preference2
          (exists (?r - dodgeball)
            (then
              (hold-while (game_start top_drawer) (in_motion agent) )
              (once (and (and (or (>= 7 (distance ?y)) (< 1 3) ) (same_type ?y ?s) ) (touch ?y ?r) ) )
              (once (in_motion ?y) )
              (hold (and (in_motion bed ?r) (not (or (and (on blue sideways) (in_motion ?r) ) (in ?s ?y) ) ) ) )
            )
          )
        )
        (preference preference3
          (exists (?a ?q ?g ?u ?d - hexagonal_bin)
            (then
              (once (not (agent_holds ?u ?a) ) )
              (hold (and (in rug) (not (agent_holds bed ?y) ) (in ?q) ) )
              (once (agent_holds ?a upright) )
            )
          )
        )
      )
    )
    (forall (?b ?n ?u - cube_block)
      (and
        (preference preference4
          (exists (?m - hexagonal_bin)
            (then
              (once (< 3 (distance 4 ?b 6)) )
              (hold-while (in_motion north_wall ?u) (and (touch ?b ?b) (in ?n) ) (agent_holds ?m) )
              (hold (in_motion ?m) )
            )
          )
        )
      )
    )
    (preference preference5
      (exists (?j - game_object)
        (then
          (once (and (and (not (and (in_motion ?j ?j) ) ) (and (not (not (not (equal_z_position brown) ) ) ) (in_motion ?j ?j) ) ) (not (and (on ?j) (in ?j ?j) ) ) (not (agent_holds ?j) ) ) )
          (once (in_motion desk ?j) )
          (once (and (not (same_color ?j) ) (in_motion ?j ?j) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 4 (count preference2:pink:beachball) )
    (>= (count-once-per-objects preference3:beachball) (* (count preference3:hexagonal_bin:dodgeball) (count preference4:yellow_pyramid_block:hexagonal_bin) )
    )
  )
)
(:scoring
  (count preference5:book:cube_block)
)
)

(define (game game-id-140) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-conserved
      (in_motion ?xxx ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?k - building)
        (at-end
          (in_motion rug ?k)
        )
      )
    )
    (preference preference2
      (then
        (hold (in_motion ?xxx ?xxx) )
        (hold-while (and (not (not (not (adjacent ?xxx) ) ) ) (touch ?xxx) ) (on ?xxx) )
        (hold (on ?xxx) )
      )
    )
    (preference preference3
      (exists (?e - chair)
        (then
          (once (not (not (in_motion ?e ?e) ) ) )
          (once (and (and (same_object ?e ?e) (touch agent) ) (not (and (and (in ?e ?e) (in_motion bed) ) ) ) ) )
          (hold (and (not (between ?e ?e) ) (not (not (and (and (agent_holds ?e ?e) (not (above ?e ?e ?e) ) ) (not (adjacent ?e ?e) ) ) ) ) ) )
        )
      )
    )
    (preference preference4
      (exists (?i - dodgeball ?g - cube_block)
        (then
          (once (and (not (in_motion agent) ) (not (agent_holds ?g) ) (forall (?k - hexagonal_bin) (not (not (adjacent ?k) ) ) ) ) )
          (hold (on ?g) )
          (once (not (< 1 1) ) )
        )
      )
    )
    (preference preference5
      (exists (?e - teddy_bear)
        (then
          (once (in_motion ?e ?e) )
          (hold (same_color ?e ?e) )
          (once (agent_holds ?e rug) )
        )
      )
    )
    (preference preference6
      (exists (?x - ball)
        (at-end
          (agent_holds ?x)
        )
      )
    )
  )
)
(:terminal
  (>= (count preference4:basketball:orange) (- (count preference2:red) (count-once-per-objects preference3:beachball:golfball:beachball) ) )
)
(:scoring
  (count preference2:dodgeball)
)
)

(define (game game-id-141) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (> 1 0.5)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?a - shelf)
        (then
          (hold (and (not (forall (?s - wall) (or (not (< 2 (distance ?a ?a)) ) (not (and (and (on ?s) (agent_holds ?s ?a) (and (not (and (same_object ?a ?a) (not (and (in_motion ?a) (not (or (not (not (above ?a) ) ) (not (not (in_motion ?s) ) ) (in_motion ?s ?a) ) ) ) ) ) ) (on agent) ) ) ) ) ) ) ) (agent_holds rug) ) )
          (hold (< 1 (distance ?a ?a)) )
        )
      )
    )
    (preference preference2
      (exists (?l - hexagonal_bin)
        (then
          (hold (on ?l) )
          (hold (touch ?l ?l) )
          (once (in bed) )
        )
      )
    )
    (preference preference3
      (exists (?m - hexagonal_bin ?o - ball ?s - dodgeball)
        (at-end
          (not
            (exists (?w - chair)
              (not
                (agent_holds ?w)
              )
            )
          )
        )
      )
    )
    (forall (?i - hexagonal_bin)
      (and
        (preference preference4
          (exists (?y - (either cd yellow) ?z - hexagonal_bin)
            (then
              (hold (< 3 1) )
              (once (< (distance room_center ?i) (distance ?i 8 room_center)) )
              (once (game_start agent) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (count-overlapping preference4:brown:basketball) 10 )
)
(:scoring
  3
)
)

(define (game game-id-142) (:domain many-objects-room-v1)
(:setup
  (not
    (game-conserved
      (in ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?d - block ?w - building)
        (then
          (once (not (not (in_motion ?w) ) ) )
          (once (not (on ?w) ) )
          (hold-while (agent_holds ?w ?w) (in_motion ?w) )
        )
      )
    )
  )
)
(:terminal
  (<= (* (count preference1:basketball) 30 )
    (count preference1:yellow)
  )
)
(:scoring
  3
)
)

(define (game game-id-143) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?g - (either doggie_bed triangular_ramp))
      (game-optional
        (< 0.5 10)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?x - color)
        (then
          (hold (on bed ?x) )
          (once (< 10 (distance ?x 7)) )
          (hold (in_motion ?x ?x) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* (count preference1:bed) (= (* (count-once-per-external-objects preference1:blue_pyramid_block) (count-once preference1:beachball) )
          (+ 2 (count-once-per-objects preference1:beachball) )
        )
      )
      (< 5 9 )
    )
    (>= (count-once preference1:golfball) 3 )
    (>= (count preference1:hexagonal_bin) (count preference1:blue_dodgeball) )
  )
)
(:scoring
  (* 5 (* (and (- (total-score) )
        10
        (count preference1:dodgeball:blue_pyramid_block:hexagonal_bin)
      )
      4
      10
      (count-overlapping preference1:beachball)
    )
  )
)
)

(define (game game-id-144) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?m ?f - curved_wooden_ramp)
      (game-optional
        (agent_holds ?f)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?f - building ?s - hexagonal_bin)
        (then
          (once (and (and (< (distance ) (x_position room_center ?s agent)) (exists (?v - dodgeball) (on ?v ?s) ) ) (not (agent_holds ?s ?s) ) ) )
          (hold (agent_holds ?s) )
          (hold (above blue bridge_block) )
        )
      )
    )
  )
)
(:terminal
  (or
    (and
      (> (count preference1:blue_dodgeball) (count-once-per-objects preference1:basketball:pink) )
      (> (count-once-per-objects preference1:golfball) (* (* (count-once-per-objects preference1:dodgeball:dodgeball) 1 (count preference1) )
          50
        )
      )
    )
    (or
      (>= 5 (* (* 300 3 )
          (* (* (* (count preference1:doggie_bed) (count preference1:triangle_block:dodgeball) (total-score) )
              10
            )
            (count preference1:green)
            (count preference1:basketball)
          )
        )
      )
      (or
        (>= 20 2 )
        (<= (* 5 6 )
          5
        )
      )
    )
  )
)
(:scoring
  (count preference1:orange)
)
)

(define (game game-id-145) (:domain medium-objects-room-v1)
(:setup
  (exists (?t - (either key_chain bed basketball doggie_bed))
    (game-conserved
      (and
        (and
          (on agent ?t)
          (is_setup_object ?t)
          (not
            (not
              (exists (?n - hexagonal_bin)
                (is_setup_object ?t)
              )
            )
          )
        )
        (agent_holds ?t ?t)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?s - hexagonal_bin)
        (at-end
          (and
            (in ?s)
            (same_color ?s ?s)
            (in_motion ?s)
          )
        )
      )
    )
  )
)
(:terminal
  (> 180 (count-once-per-objects preference1:dodgeball) )
)
(:scoring
  4
)
)

(define (game game-id-146) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (on ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?x - hexagonal_bin)
        (then
          (hold (< (x_position agent ?x) 9) )
          (once (adjacent floor ?x) )
          (once (adjacent ?x) )
        )
      )
    )
    (preference preference2
      (exists (?m - game_object)
        (then
          (once (adjacent front bed) )
          (hold (in_motion ?m) )
          (hold (in_motion agent) )
        )
      )
    )
    (preference preference3
      (exists (?t - (either alarm_clock cd cube_block) ?j - doggie_bed ?k - dodgeball ?s - chair ?t - hexagonal_bin)
        (at-end
          (and
            (in_motion ?t ?t)
            (not
              (forall (?h - hexagonal_bin)
                (on ?h)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (= (count preference2:pink:beachball) 7 )
)
(:scoring
  (count preference1:basketball:orange)
)
)

(define (game game-id-147) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (in ?xxx)
  )
)
(:constraints
  (and
    (forall (?q - hexagonal_bin)
      (and
        (preference preference1
          (exists (?u - drawer ?p ?k ?w ?u ?e ?n - dodgeball ?z - wall)
            (at-end
              (in front)
            )
          )
        )
      )
    )
    (preference preference2
      (then
        (once (and (forall (?l - hexagonal_bin) (touch ?l) ) (in_motion ?xxx ?xxx) ) )
      )
    )
  )
)
(:terminal
  (>= 5 (+ (count preference1:yellow:basketball) 5 )
  )
)
(:scoring
  (count preference1:pink)
)
)

(define (game game-id-148) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (game-conserved
        (not
          (not
            (< (distance desk ?xxx) 1)
          )
        )
      )
      (exists (?a - flat_block)
        (game-optional
          (and
            (not
              (adjacent ?a)
            )
            (agent_holds ?a)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?d - ball)
        (then
          (once (or (not (same_color ?d) ) (agent_holds ?d) ) )
          (once (adjacent desk) )
          (hold (< 1 5) )
        )
      )
    )
    (preference preference2
      (then
        (once (not (on ?xxx ?xxx) ) )
        (hold (not (on ?xxx) ) )
        (hold-while (not (and (exists (?e - ball) (and (agent_holds ?e) (> 6 (distance desk ?e)) ) ) (not (and (touch ?xxx) (object_orientation ?xxx ?xxx) (in_motion desk) (> 6 1) ) ) (agent_holds ?xxx) ) ) (not (<= 1 (distance_side 6 4)) ) )
      )
    )
    (forall (?y ?v ?o - tall_cylindrical_block)
      (and
        (preference preference3
          (exists (?a - hexagonal_bin ?w - book)
            (then
              (once (and (and (exists (?p - building ?g - dodgeball) (in_motion ?o) ) (agent_holds ?v) ) (not (not (on ?o agent) ) ) ) )
              (hold (agent_holds ?o block) )
              (hold-while (on ?y) (in_motion ?w ?v) (is_setup_object ?w) (in ?y) )
            )
          )
        )
        (preference preference4
          (exists (?m - chair ?d - doggie_bed)
            (then
              (once (in_motion ?v ?y) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (count-unique-positions preference4:cube_block:purple:golfball) )
)
(:scoring
  (count preference3:dodgeball)
)
)

(define (game game-id-149) (:domain many-objects-room-v1)
(:setup
  (exists (?h - color ?n - doggie_bed)
    (and
      (and
        (game-conserved
          (on ?n ?n)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?t - hexagonal_bin ?l - cube_block)
        (at-end
          (or
            (and
              (and
                (agent_holds ?l ?l)
                (on ?l)
              )
              (agent_holds desk)
              (on ?l ?l)
            )
            (exists (?o - wall)
              (in bed)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (* (count preference1:dodgeball) 4 )
      (count-once-per-objects preference1:basketball)
    )
    (or
      (+ (count preference1:yellow:dodgeball) (* (- 2 )
          (+ 3 (external-forall-maximize 2 ) (+ 3 (* (= (count preference1:hexagonal_bin) (count preference1:dodgeball) )
                3
                10
              )
            )
          )
        )
      )
      (count preference1:golfball)
      (total-score)
    )
  )
)
(:scoring
  5
)
)

(define (game game-id-150) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (not
      (in_motion ?xxx)
    )
  )
)
(:constraints
  (and
    (forall (?f - cube_block)
      (and
        (preference preference1
          (exists (?e - beachball ?t - hexagonal_bin)
            (then
              (hold (agent_holds ?f rug) )
              (once (not (in_motion ?f ?t) ) )
              (once (on ?t pink_dodgeball) )
            )
          )
        )
        (preference preference2
          (exists (?p - wall)
            (then
              (hold (agent_holds ) )
              (once (exists (?o - teddy_bear ?w - hexagonal_bin ?r - hexagonal_bin) (agent_holds ?f ?p) ) )
              (once (agent_holds ?f ?p) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?m - hexagonal_bin)
        (then
          (once (not (not (and (agent_holds north_wall) (forall (?l - hexagonal_bin ?t - triangular_ramp ?i - (either book desktop) ?u - golfball) (on ?u agent) ) ) ) ) )
          (hold (and (adjacent ?m) (not (and (agent_holds side_table) (agent_holds ?m ?m) ) ) (not (and (not (in_motion ?m ?m) ) (and (and (not (> (distance_side ?m ?m) 0) ) (agent_holds agent) ) (in ?m) ) (not (adjacent ?m) ) ) ) ) )
          (once (and (on ?m) (on ?m ?m) (not (and (in_motion floor ?m) (not (agent_holds ?m) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (> 4 (count preference3:hexagonal_bin:basketball) )
)
(:scoring
  (* (count preference2:yellow) (count preference3:yellow_cube_block) (external-forall-maximize 1 ) (* 4 (total-score) )
  )
)
)

(define (game game-id-151) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?x - doggie_bed ?q - game_object)
        (then
          (hold-to-end (in ?q) )
          (once (agent_holds ?q ?q) )
          (hold (not (and (and (on block) (adjacent_side ?q ?q) ) (and (not (and (not (in_motion ?q) ) (not (not (agent_holds ?q floor) ) ) ) ) (and (agent_holds ?q ?q ?q) (agent_holds ?q ?q) ) ) ) ) )
        )
      )
    )
    (forall (?n - dodgeball)
      (and
        (preference preference2
          (exists (?j - building ?t - wall)
            (then
              (once (not (not (agent_holds ?t) ) ) )
              (hold-to-end (touch bed ?t) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (external-forall-maximize (* 6 (+ 1 (count preference1:alarm_clock) )
      )
    )
    (* 4 (count preference1:dodgeball) (count preference2:orange:beachball) (count-once-per-objects preference1:basketball) 10 )
  )
)
(:scoring
  60
)
)

(define (game game-id-152) (:domain few-objects-room-v1)
(:setup
  (exists (?m - cube_block ?x - hexagonal_bin ?t - hexagonal_bin ?q - doggie_bed)
    (game-conserved
      (< 7 2)
    )
  )
)
(:constraints
  (and
    (forall (?o - hexagonal_bin ?n - hexagonal_bin)
      (and
        (preference preference1
          (exists (?c - cube_block ?r - hexagonal_bin)
            (then
              (once (on ?r) )
              (once (and (< 6 (distance_side ?n ?r 9)) (agent_holds bed ?r) ) )
              (once (object_orientation rug) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:pink_dodgeball:yellow) (* 2 (count-once-per-objects preference1:blue_cube_block) )
  )
)
(:scoring
  (* (count preference1:basketball) (count preference1:pink:bed) )
)
)

(define (game game-id-153) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-optional
      (and
        (in ?xxx ?xxx)
      )
    )
  )
)
(:constraints
  (and
    (forall (?l - color)
      (and
        (preference preference1
          (exists (?p - dodgeball)
            (then
              (hold-while (agent_holds ?l) (in floor ?p) )
              (once (agent_holds ?p ?l) )
              (once (on ?l) )
            )
          )
        )
        (preference preference2
          (exists (?r - hexagonal_bin)
            (then
              (hold (on ?r) )
              (once (< (distance ?l 5) 3) )
              (hold (< (distance bed ?r) (distance ?l ?r)) )
            )
          )
        )
      )
    )
    (forall (?r - hexagonal_bin ?c - dodgeball)
      (and
        (preference preference3
          (exists (?x - building)
            (then
              (hold (agent_holds ?x) )
              (once (on ?c ?c) )
              (hold-while (agent_holds ?c ?x) (touch ?c) )
              (any)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (+ (* 10 (= (* (+ (+ (- (count preference3:pyramid_block) 50 ) (* (count-once-per-objects preference1:beachball:blue_dodgeball:golfball) 6 )
                )
                (+ (count-once-per-objects preference1:golfball) 5 )
              )
              (count preference3:beachball:pink)
            )
            (total-time)
          )
          1
          (count-once-per-objects preference3:book:basketball)
          10
          2
        )
        (count preference2:beachball)
      )
      (count-once-per-objects preference2:tall_cylindrical_block:beachball)
    )
    (not
      (* 5 50 )
    )
  )
)
(:scoring
  40
)
)

(define (game game-id-154) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (in_motion ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?y ?o - cube_block ?v - hexagonal_bin)
        (then
          (once (exists (?d - dodgeball) (not (and (and (and (or (on desk) (or (forall (?k - dodgeball ?i - dodgeball ?p ?a - shelf) (in_motion ?v) ) (in_motion ?v) ) ) (agent_holds ?d ?d) ) (in ?v) ) (and (agent_holds ?d ?d) (same_type ?d ?d) (< 1 2) ) ) ) ) )
          (once (> (distance 0 ?v) 0.5) )
          (once (on bed) )
        )
      )
    )
    (preference preference2
      (exists (?k - sliding_door ?n - triangular_ramp)
        (at-end
          (not
            (not
              (not
                (and
                  (and
                    (agent_holds ?n ?n)
                    (> 1 5)
                  )
                  (agent_holds ?n ?n)
                )
              )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?i - (either wall top_drawer) ?p - dodgeball ?d - yellow_pyramid_block)
        (at-end
          (in ?d ?d)
        )
      )
    )
    (preference preference4
      (exists (?i - dodgeball)
        (then
          (any)
          (once (same_color ?i) )
          (once (and (not (on ?i) ) (on ?i ?i) (adjacent_side ?i ?i) (on desk) ) )
        )
      )
    )
    (preference preference5
      (exists (?a - dodgeball ?g - red_dodgeball ?z - teddy_bear ?i - dodgeball ?z - (either cylindrical_block laptop))
        (then
          (hold-while (in_motion agent) (and (agent_holds ?z ?z) (not (on ?z) ) ) (in ?z) (in rug ?z) )
        )
      )
    )
    (preference preference6
      (exists (?s - triangular_ramp)
        (then
          (once-measure (agent_holds ?s ?s) (distance 0 ?s) )
          (hold (and (not (in ?s ?s) ) (in_motion ?s) ) )
          (once-measure (in_motion ?s ?s) (distance 2 ?s) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference5:dodgeball:basketball) (count-unique-positions preference4:red:pink:dodgeball) )
)
(:scoring
  (count-once-per-objects preference6:brown)
)
)

(define (game game-id-155) (:domain few-objects-room-v1)
(:setup
  (and
    (game-conserved
      (and
        (and
          (and
            (not
              (and
                (in_motion ?xxx ?xxx)
                (agent_holds ?xxx ?xxx ?xxx)
              )
            )
            (in ?xxx)
            (and
              (touch ?xxx)
              (exists (?i - hexagonal_bin)
                (and
                  (on blue)
                  (in_motion ?i ?i)
                )
              )
            )
          )
          (and
            (and
              (agent_holds ?xxx ?xxx)
              (not
                (same_color ?xxx)
              )
              (exists (?x - shelf ?i - tall_cylindrical_block)
                (and
                  (in_motion ?i)
                  (in_motion ?i ?i)
                )
              )
              (and
                (< (distance ?xxx desk) (distance 4 ?xxx ?xxx))
                (is_setup_object ?xxx ?xxx)
                (< 1 (distance bed agent))
              )
            )
            (agent_holds ?xxx)
          )
          (not
            (on ?xxx ?xxx)
          )
        )
        (adjacent_side agent)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?k - yellow_cube_block)
        (then
          (once (and (not (agent_holds ?k) ) (and (not (not (not (agent_holds ?k agent) ) ) ) (agent_holds ?k) (agent_holds pink_dodgeball) ) ) )
          (once (agent_holds ?k ?k) )
          (once (in_motion ?k) )
        )
      )
    )
  )
)
(:terminal
  (<= (+ (count-same-positions preference1:pink_dodgeball) (* (count-once-per-objects preference1:beachball) (count preference1:yellow) )
    )
    3
  )
)
(:scoring
  (* 3 (count-once-per-objects preference1:pink) )
)
)

(define (game game-id-156) (:domain medium-objects-room-v1)
(:setup
  (forall (?s ?o - hexagonal_bin)
    (game-optional
      (and
        (or
          (and
            (= 1)
            (above agent)
          )
          (in_motion ?s ?s)
        )
        (not
          (on ?s)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?e - hexagonal_bin ?o - (either book cube_block))
      (and
        (preference preference1
          (exists (?d - hexagonal_bin)
            (then
              (hold-while (faces ?o) (not (not (in_motion ?d ?o) ) ) )
              (once (exists (?n - game_object ?i - (either cube_block golfball basketball) ?v - hexagonal_bin) (in_motion ?v) ) )
              (hold (on ?o) )
            )
          )
        )
      )
    )
    (preference preference2
      (then
        (once (agent_holds ?xxx ?xxx) )
        (once (exists (?x - hexagonal_bin ?j - hexagonal_bin) (not (exists (?n - block) (agent_holds ?n) ) ) ) )
        (hold (touch rug ?xxx) )
      )
    )
    (preference preference3
      (exists (?j ?p - building)
        (then
          (hold-while (not (adjacent_side agent) ) (and (not (not (not (or (not (< (distance ?j agent) 1) ) (< (distance ) 6) ) ) ) ) (not (agent_holds ?j) ) ) (not (not (not (in_motion ?p) ) ) ) (on ?j ?p) )
          (once (and (agent_holds desk) (not (not (or (in ?p ?p) (adjacent_side ?p) ) ) ) ) )
          (once (on ?p ?p) )
        )
      )
    )
  )
)
(:terminal
  (>= 1 (+ 8 (>= (count preference1:hexagonal_bin) (external-forall-maximize 5 ) )
    )
  )
)
(:scoring
  (- 5 )
)
)

(define (game game-id-157) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?p - red_dodgeball ?j - game_object)
      (and
        (forall (?s - game_object)
          (and
            (forall (?d - triangular_ramp)
              (and
                (exists (?r - (either golfball golfball))
                  (game-conserved
                    (agent_holds door)
                  )
                )
              )
            )
          )
        )
        (and
          (game-conserved
            (in_motion agent ?j)
          )
          (and
            (game-conserved
              (in_motion ?j bed)
            )
          )
          (and
            (and
              (exists (?g - ball ?o - hexagonal_bin ?t ?f - hexagonal_bin)
                (exists (?d - hexagonal_bin)
                  (game-optional
                    (not
                      (in_motion ?t ?f)
                    )
                  )
                )
              )
              (and
                (exists (?w - drawer)
                  (game-optional
                    (above ?w)
                  )
                )
              )
            )
          )
        )
        (exists (?a - ball ?l ?x ?h ?e ?b ?w - hexagonal_bin)
          (exists (?q - triangular_ramp)
            (and
              (game-conserved
                (agent_holds ?h ?q)
              )
              (game-conserved
                (in_motion ?w ?x)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?j - (either dodgeball blue_cube_block))
        (then
          (once (not (agent_holds ?j) ) )
          (once (touch ?j) )
          (hold (in ?j) )
        )
      )
    )
    (preference preference2
      (exists (?w - (either golfball cube_block dodgeball) ?r - hexagonal_bin)
        (then
          (once (and (adjacent ?r ?r) (on ?r) (not (not (not (agent_holds ?r) ) ) ) ) )
          (once (or (agent_holds bed) (not (not (not (not (same_color ?r) ) ) ) ) ) )
          (hold (not (agent_holds ?r ?r) ) )
        )
      )
    )
    (preference preference3
      (at-end
        (touch ?xxx ?xxx)
      )
    )
  )
)
(:terminal
  (not
    (not
      (>= (* (count-once-per-objects preference3:yellow) (count-once-per-objects preference2:beachball) (+ 2 (count preference3:basketball:beachball) (+ (external-forall-maximize 5 ) (* (+ (* 2 (* (count preference2:pink_dodgeball) )
                  )
                  (count preference3:blue_cube_block:dodgeball)
                )
                (count preference2:dodgeball:dodgeball)
              )
            )
          )
        )
        2
      )
    )
  )
)
(:scoring
  (count preference3:dodgeball:blue_dodgeball)
)
)

(define (game game-id-158) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (same_color ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?f - dodgeball ?o - hexagonal_bin)
        (then
          (forall-sequence (?g - flat_block)
            (then
              (hold (touch ?o) )
              (hold (in ?g ?g) )
              (hold (not (and (exists (?x - hexagonal_bin) (agent_holds ?x) ) (and (and (and (exists (?t - dodgeball) (agent_holds ?t) ) (on ?g ?g) ) (and (and (not (in_motion ?o ?o) ) (and (in_motion ?o ?g) (and (not (in_motion ?o ?o) ) (and (not (not (not (exists (?p - block ?y ?i - cylindrical_block) (and (on blue ?i) (touch agent) ) ) ) ) ) (< (distance ?o desk) (distance room_center room_center)) ) ) ) ) (on ?g) ) (agent_holds ?g) ) ) ) ) )
            )
          )
          (hold (touch ?o) )
          (once (on ?o) )
        )
      )
    )
    (preference preference2
      (exists (?y - cube_block)
        (then
          (once (not (in_motion ?y back) ) )
          (once (same_type agent ?y) )
          (hold-while (in_motion desk) (and (exists (?l - wall) (faces ?y) ) (exists (?d - game_object) (and (and (not (and (in ?d) (in_motion ?y) ) ) (agent_holds ?y ?d) ) (and (not (not (agent_holds ?d) ) ) (agent_holds ?y) ) (not (in ?d) ) (and (not (forall (?t - color) (agent_holds ?t) ) ) (agent_holds ?d) (same_color ?d) ) ) ) ) (and (is_setup_object bed ?y) (and (and (in ?y ?y) (not (in_motion agent) ) ) (not (in_motion agent side_table) ) (not (in ?y) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 2 (count preference2:dodgeball) )
    (= (* (- 5 )
        (count-once-per-objects preference1:pink)
      )
      6
    )
  )
)
(:scoring
  (count preference1:dodgeball:doggie_bed)
)
)

(define (game game-id-159) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?k - ball)
      (forall (?o - building)
        (game-optional
          (agent_holds ?k)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c - wall)
      (and
        (preference preference1
          (exists (?x - cube_block)
            (at-end
              (agent_holds ?c ?x)
            )
          )
        )
        (preference preference2
          (exists (?g - hexagonal_bin)
            (then
              (hold (adjacent ?c) )
              (once (exists (?e - dodgeball) (in_motion ?c ?g) ) )
              (hold (and (and (not (in_motion ?c) ) (and (agent_holds ?g) (not (in_motion ?g) ) ) ) ) )
            )
          )
        )
        (preference preference3
          (exists (?x - curved_wooden_ramp ?k - (either tall_cylindrical_block pyramid_block))
            (at-end
              (in_motion agent ?c)
            )
          )
        )
      )
    )
    (preference preference4
      (exists (?l - game_object ?s - dodgeball)
        (then
          (once (not (adjacent ?s) ) )
          (hold (on ?s ?s) )
          (hold (not (agent_holds top_shelf ?s) ) )
          (once (agent_holds ?s ?s) )
        )
      )
    )
    (forall (?e ?m - (either laptop desktop))
      (and
        (preference preference5
          (exists (?n - ball ?j - dodgeball)
            (then
              (once (agent_holds ?e ?m) )
              (once (or (not (and (and (agent_holds ?j) (agent_holds ?e) ) (in_motion ?m front) ) ) (in_motion ?j ?m) ) )
              (once (on ?j) )
            )
          )
        )
      )
    )
    (preference preference6
      (exists (?w - game_object)
        (at-end
          (not
            (same_color ?w)
          )
        )
      )
    )
    (preference preference7
      (exists (?i - teddy_bear)
        (then
          (hold (agent_holds ?i rug) )
          (hold (and (in_motion ?i) (on color) (agent_holds ?i) (and (and (and (touch ?i ?i) (in_motion ?i) ) (equal_z_position ?i) ) (and (and (in_motion desk ?i) (not (not (touch ?i) ) ) ) (rug_color_under ?i) ) ) ) )
          (once (agent_holds ?i) )
        )
      )
    )
    (preference preference8
      (exists (?p - dodgeball)
        (then
          (hold (not (agent_holds ?p ?p) ) )
          (once (and (in_motion desk) (and (on agent ?p) (= (distance ?p ?p) (distance ?p 8)) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* (- 2 )
        3
      )
      5
    )
    (>= (+ (count-once-per-objects preference6:blue_cube_block:beachball) (count-once-per-objects preference2:dodgeball:blue_dodgeball) )
      1
    )
  )
)
(:scoring
  (* (count preference2:dodgeball:top_drawer) 10 (count-total preference2:side_table) )
)
)

(define (game game-id-160) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds ?xxx ?xxx)
  )
)
(:constraints
  (and
    (forall (?x - desktop)
      (and
        (preference preference1
          (exists (?o - curved_wooden_ramp)
            (at-end
              (in_motion ?o)
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?p ?x ?o - doggie_bed)
        (then
          (hold (and (agent_holds ?x ?p) (in_motion front ?x) ) )
          (hold (in ?o ?x) )
          (once (agent_holds ?p ?o) )
          (once (and (in_motion ?p upright) (adjacent ?p) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (count preference2:dodgeball:dodgeball) (count-once-per-objects preference2:blue_dodgeball) )
    (* (* (count preference1:pink:pink_dodgeball) 2 )
      (count-once-per-objects preference1:dodgeball)
    )
  )
)
(:scoring
  (count-once-per-objects preference2:dodgeball)
)
)

(define (game game-id-161) (:domain few-objects-room-v1)
(:setup
  (forall (?l - (either cd pyramid_block))
    (game-conserved
      (on ?l ?l)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (at-end
        (not
          (agent_holds ?xxx)
        )
      )
    )
    (preference preference2
      (exists (?q - cube_block)
        (then
          (hold-for 2 (and (agent_holds rug) (not (in ?q) ) ) )
          (once (and (and (rug_color_under ?q) (not (in_motion ?q ?q) ) ) ) )
          (hold (< (distance desk ?q) (distance agent ?q)) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference2:dodgeball:pink) 1 )
)
(:scoring
  (count preference1:bed)
)
)

(define (game game-id-162) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - bridge_block)
      (forall (?g - rug ?n - building)
        (game-optional
          (agent_holds rug)
        )
      )
    )
    (and
      (exists (?y - book)
        (and
          (and
            (game-conserved
              (and
                (agent_holds ?y)
                (in_motion ?y)
              )
            )
          )
        )
      )
      (and
        (and
          (game-conserved
            (and
              (and
                (not
                  (agent_holds ?xxx)
                )
                (agent_holds ?xxx)
              )
              (in ?xxx)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?r - cube_block ?o ?d - block)
      (and
        (preference preference1
          (exists (?x - dodgeball)
            (then
              (hold (and (agent_holds ?o ?x) ) )
              (hold (not (agent_holds ?o) ) )
              (once (in agent) )
            )
          )
        )
        (preference preference2
          (exists (?p - cube_block)
            (then
              (once (not (< (distance room_center ?o) (distance desk ?p)) ) )
              (once (agent_holds ?p ?p) )
              (once (touch ?o rug) )
            )
          )
        )
      )
    )
    (forall (?q ?h ?k - (either cube_block basketball))
      (and
        (preference preference3
          (exists (?g - game_object ?w - ball ?p ?v ?n - triangular_ramp)
            (then
              (once (and (and (and (in floor) (and (adjacent ?q ?v) (in ?h) (not (and (and (and (same_color ?v) (and (not (on ?p) ) (agent_holds ?h) ) (and (not (and (and (in_motion ?n) (and (in_motion ?h) (same_color ?n ?k) ) ) (and (and (adjacent rug top_shelf) (agent_holds ?n) ) (agent_holds ?h) (in_motion ?p) ) ) ) (and (> (distance ?v ?n) (distance desk ?h)) (= (distance ?n 9) 1) (same_object agent) ) ) (in_motion agent) (in ?h agent) (exists (?x - dodgeball) (adjacent ?v) ) ) (on ?p) ) (and (and (in_motion door) (and (in_motion ?p) (and (forall (?u - (either basketball cd) ?f - teddy_bear) (agent_holds ?v) ) (not (in_motion ?k) ) ) ) ) (in ?n top_drawer) ) ) ) (object_orientation ?q ?k) ) ) (in_motion ?h ?v) (not (on ?v ?h) ) ) (between ?h) ) )
              (once (not (and (not (= 0 0 (distance back 8)) ) (not (on ?h ?q) ) ) ) )
              (once (not (not (adjacent_side pink_dodgeball) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (<= 4 2 )
  )
)
(:scoring
  5
)
)

(define (game game-id-163) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (and
      (and
        (agent_holds ?xxx ?xxx)
        (not
          (in_motion agent)
        )
      )
      (in_motion agent)
    )
  )
)
(:constraints
  (and
    (forall (?f ?h - teddy_bear ?d - wall)
      (and
        (preference preference1
          (exists (?k - teddy_bear)
            (then
              (once (agent_holds ?k) )
              (once (and (and (equal_z_position ?d) (< 4 (distance room_center ?k ?k)) ) (and (not (in_motion ?k) ) (and (in_motion ?d ?d) (in ?k) ) ) ) )
              (once-measure (agent_holds ?d) (distance ?k ?k) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 2 4 )
)
(:scoring
  (count preference1:pink_dodgeball)
)
)

(define (game game-id-164) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (in_motion ?xxx)
  )
)
(:constraints
  (and
    (forall (?c - hexagonal_bin)
      (and
        (preference preference1
          (exists (?o - dodgeball ?u - shelf)
            (then
              (hold (on ?u) )
              (hold-while (and (not (in ?c rug) ) (faces ?u ?c) ) (and (agent_holds ?c ?c) (not (and (and (in ?u) (agent_crouches ?u ?u) (and (on ?c) (in ?c) (adjacent ?u) (not (in_motion ?c ball) ) ) ) (adjacent ?c ?c) ) ) ) (on ?u ?u) (in_motion ?u) )
              (once (on ?u ?u) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:beachball:dodgeball) (* (count preference1) (= (count preference1) (count preference1:green) 6 )
      (* (count-once preference1:basketball:dodgeball) (count-total preference1:beachball) )
      (count preference1:book:red_pyramid_block)
      (count preference1:blue_pyramid_block)
      (* 0 (count-once-per-objects preference1:pink_dodgeball) )
    )
  )
)
(:scoring
  (count-once-per-objects preference1:blue_dodgeball)
)
)

(define (game game-id-165) (:domain few-objects-room-v1)
(:setup
  (forall (?y - building ?j - cube_block)
    (forall (?d - (either dodgeball cd) ?r - building)
      (and
        (game-conserved
          (and
            (on ?r)
            (agent_holds ?j)
            (between bottom_shelf south_west_corner)
            (in_motion ?j)
          )
        )
        (game-optional
          (and
            (and
              (in ?j ?j)
            )
            (rug_color_under ?r)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?e ?c - wall)
      (and
        (preference preference1
          (exists (?h - building)
            (then
              (hold-while (not (agent_holds agent) ) (is_setup_object desk ?e) )
              (once (toggled_on agent) )
              (once (< 8 (distance 5 ?c)) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 1 30 )
)
(:scoring
  (count-once-per-objects preference1:pyramid_block)
)
)

(define (game game-id-166) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-conserved
      (in_motion ?xxx west_wall)
    )
  )
)
(:constraints
  (and
    (forall (?c - block ?z - beachball ?h - beachball ?f - wall)
      (and
        (preference preference1
          (exists (?p - (either dodgeball side_table cellphone) ?p - building)
            (at-end
              (touch ?p ?f)
            )
          )
        )
        (preference preference2
          (exists (?c - chair ?r ?u - building)
            (then
              (once (is_setup_object ?f ?u) )
              (once (in_motion ?u) )
              (once (and (agent_holds floor) (in_motion ?f) (and (and (in_motion ?f) (and (touch ?r) (agent_holds ?f) ) ) (and (agent_holds ?r ?u) (< 1 8) ) ) (in ?f) ) )
            )
          )
        )
        (preference preference3
          (exists (?m - hexagonal_bin)
            (then
              (once (and (< (distance green_golfball) 1) (in_motion ?m) (in_motion floor) ) )
              (once (same_type desk ?m front ?f) )
              (once (in_motion ?f ?m) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:dodgeball) 2 )
)
(:scoring
  3
)
)

(define (game game-id-167) (:domain many-objects-room-v1)
(:setup
  (exists (?b ?n - hexagonal_bin)
    (and
      (game-conserved
        (agent_holds ?n)
      )
      (and
        (exists (?j - dodgeball)
          (exists (?g - (either dodgeball lamp))
            (and
              (game-optional
                (agent_holds ?n ?b)
              )
              (and
                (and
                  (game-optional
                    (in_motion ?b agent)
                  )
                  (game-optional
                    (in ?j)
                  )
                )
              )
              (exists (?k - blue_cube_block ?c ?u ?w ?p - (either lamp hexagonal_bin doggie_bed cd) ?m - (either cd cd))
                (and
                  (and
                    (forall (?i - doggie_bed)
                      (and
                        (and
                          (exists (?y - shelf ?y ?f - doggie_bed ?k - building)
                            (and
                              (exists (?t - (either golfball cylindrical_block) ?x - dodgeball)
                                (or
                                  (game-conserved
                                    (not
                                      (agent_holds ?m ?g)
                                    )
                                  )
                                  (exists (?c - game_object ?h - hexagonal_bin)
                                    (exists (?r - hexagonal_bin ?e - building)
                                      (game-optional
                                        (and
                                          (and
                                            (not
                                              (agent_holds agent ?j)
                                            )
                                            (on west_wall)
                                          )
                                          (and
                                            (not
                                              (rug_color_under ?x ?g)
                                            )
                                            (agent_holds ?e)
                                          )
                                          (on agent)
                                          (on ?g ?x)
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                              (game-optional
                                (and
                                  (agent_holds ?b ?m)
                                  (= 1 (distance ?i room_center))
                                )
                              )
                              (or
                                (and
                                  (and
                                    (forall (?y - ball ?d - ball)
                                      (exists (?q - dodgeball ?f ?z - hexagonal_bin ?a - game_object ?h - dodgeball ?v - ball)
                                        (and
                                          (game-conserved
                                            (agent_holds ?k)
                                          )
                                          (forall (?f - hexagonal_bin)
                                            (and
                                              (and
                                                (game-optional
                                                  (game_over blue)
                                                )
                                                (exists (?p - doggie_bed)
                                                  (game-conserved
                                                    (touch ?v ?f)
                                                  )
                                                )
                                              )
                                            )
                                          )
                                          (exists (?r - game_object)
                                            (and
                                              (game-conserved
                                                (agent_holds agent ?d)
                                              )
                                              (game-conserved
                                                (not
                                                  (in ?b)
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                  (game-conserved
                                    (agent_holds ?m)
                                  )
                                )
                                (exists (?r - blinds)
                                  (game-conserved
                                    (in_motion ?r)
                                  )
                                )
                              )
                            )
                          )
                        )
                        (exists (?p - game_object ?z - (either dodgeball yellow key_chain))
                          (forall (?f - hexagonal_bin)
                            (game-conserved
                              (not
                                (not
                                  (and
                                    (not
                                      (in_motion ?n)
                                    )
                                    (on ?j)
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                  (game-optional
                    (on ?b)
                  )
                )
              )
            )
          )
        )
        (game-conserved
          (<= (distance door ?n) 1)
        )
        (game-conserved
          (not
            (in_motion ?n ?b)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?l - dodgeball)
        (at-end
          (in_motion agent)
        )
      )
    )
  )
)
(:terminal
  (>= (count-shortest preference1:dodgeball) 5 )
)
(:scoring
  (count preference1:basketball)
)
)

(define (game game-id-168) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (agent_holds ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?v - ball)
        (then
          (once (and (not (adjacent ?v ?v) ) (in_motion ?v) ) )
          (once (in agent) )
          (hold-while (in top_drawer ?v) (and (in ?v ?v) (agent_holds brown bridge_block) ) (not (in ?v) ) (and (not (adjacent ?v ?v) ) (not (< 1 1) ) ) )
        )
      )
    )
    (preference preference2
      (exists (?d - dodgeball ?j - doggie_bed ?p ?d - ball)
        (then
          (hold (in_motion desk) )
          (once (and (in_motion ?p) (= 1 1) ) )
          (hold-while (agent_holds ?d ?p) (agent_holds ?d) )
          (once (on ?d ?d) )
        )
      )
    )
  )
)
(:terminal
  (>= (- (count preference2:book) )
    (count-once-per-objects preference2:pink)
  )
)
(:scoring
  (external-forall-maximize
    3
  )
)
)

(define (game game-id-169) (:domain medium-objects-room-v1)
(:setup
  (exists (?o - hexagonal_bin ?d - hexagonal_bin)
    (exists (?v - building ?h - hexagonal_bin)
      (game-conserved
        (not
          (agent_holds ?d ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?m - hexagonal_bin)
        (then
          (once (agent_holds ?m) )
          (once (not (on ?m) ) )
          (once (in_motion ?m ?m) )
        )
      )
    )
    (preference preference2
      (exists (?a - teddy_bear)
        (then
          (hold (and (and (faces ?a agent) (same_color ?a ?a) ) (not (agent_holds ?a) ) ) )
          (hold (touch floor) )
          (hold (adjacent ?a) )
        )
      )
    )
  )
)
(:terminal
  (or
    (> 5 3 )
    (>= (count preference2:blue_cube_block) 2 )
  )
)
(:scoring
  5
)
)

(define (game game-id-170) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (and
        (forall (?e - ball)
          (or
            (game-conserved
              (on ?e)
            )
          )
        )
      )
      (game-conserved
        (and
          (and
            (agent_holds ?xxx)
            (and
              (not
                (same_color ?xxx ?xxx)
              )
              (and
                (not
                  (not
                    (and
                      (and
                        (not
                          (adjacent ?xxx ?xxx)
                        )
                        (adjacent_side ?xxx ?xxx)
                        (< (distance_side ?xxx ?xxx) 1)
                      )
                      (and
                        (> (distance ?xxx ?xxx) 9)
                        (in_motion ?xxx)
                      )
                    )
                  )
                )
                (and
                  (and
                    (not
                      (and
                        (= (distance ?xxx ?xxx) (distance bed desk))
                        (not
                          (in_motion ?xxx ?xxx)
                        )
                      )
                    )
                  )
                  (and
                    (in_motion ?xxx north_wall)
                    (and
                      (agent_holds ?xxx ?xxx)
                      (not
                        (and
                          (and
                            (in_motion ?xxx)
                            (exists (?y - hexagonal_bin ?x - desk_shelf)
                              (in_motion ?x)
                            )
                            (and
                              (agent_holds ?xxx)
                              (not
                                (not
                                  (or
                                    (in_motion side_table ?xxx)
                                    (agent_holds desk)
                                    (not
                                      (in_motion ?xxx)
                                    )
                                    (and
                                      (agent_holds ?xxx pink)
                                      (not
                                        (in_motion agent)
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                          (in_motion ?xxx)
                          (opposite bridge_block)
                        )
                      )
                      (in_motion ?xxx)
                      (adjacent ?xxx)
                    )
                  )
                )
                (rug_color_under ?xxx)
              )
            )
          )
        )
      )
      (and
        (game-conserved
          (in_motion ?xxx)
        )
      )
      (and
        (game-optional
          (not
            (agent_holds pink)
          )
        )
        (forall (?b - (either alarm_clock key_chain golfball))
          (game-conserved
            (not
              (and
                (and
                  (in ?b pink_dodgeball)
                  (agent_holds bed pink)
                )
                (exists (?r - dodgeball)
                  (and
                    (agent_holds ?r ?r)
                    (in_motion agent)
                  )
                )
              )
            )
          )
        )
      )
      (and
        (forall (?b - doggie_bed)
          (game-optional
            (adjacent ?b)
          )
        )
        (and
          (exists (?w - (either dodgeball laptop mug))
            (and
              (and
                (exists (?q ?s - wall ?o - hexagonal_bin)
                  (or
                    (forall (?c - cylindrical_block ?l - doggie_bed ?q - tall_cylindrical_block ?z - dodgeball ?v - hexagonal_bin)
                      (game-conserved
                        (on ?w ?o)
                      )
                    )
                  )
                )
              )
              (game-conserved
                (in ?w)
              )
              (and
                (exists (?y - ball)
                  (game-conserved
                    (agent_holds ?w)
                  )
                )
                (exists (?e - flat_block)
                  (and
                    (game-optional
                      (object_orientation ?w ?e)
                    )
                    (and
                      (exists (?p - teddy_bear)
                        (forall (?a - block)
                          (game-optional
                            (in ?e)
                          )
                        )
                      )
                      (game-conserved
                        (forall (?d - ball)
                          (agent_holds ?d)
                        )
                      )
                      (not
                        (or
                          (exists (?p - hexagonal_bin)
                            (game-conserved
                              (in_motion ?w)
                            )
                          )
                        )
                      )
                      (forall (?c - wall)
                        (and
                          (game-conserved
                            (= (distance room_center ?c) 10)
                          )
                          (game-conserved
                            (on ?c)
                          )
                        )
                      )
                      (game-conserved
                        (adjacent_side ?w ?w)
                      )
                    )
                    (and
                      (and
                        (exists (?l - cube_block)
                          (forall (?q ?p - (either hexagonal_bin bridge_block))
                            (exists (?f - hexagonal_bin ?i - (either golfball))
                              (exists (?b ?n - color)
                                (and
                                  (exists (?m - wall ?d - dodgeball)
                                    (and
                                      (game-optional
                                        (and
                                          (not
                                            (and
                                              (is_setup_object floor)
                                              (and
                                                (exists (?u - cube_block)
                                                  (and
                                                    (not
                                                      (and
                                                        (and
                                                          (in_motion ?w)
                                                          (in ?p left)
                                                          (and
                                                            (in_motion ?w ?l)
                                                            (not
                                                              (in_motion ?w ?p)
                                                            )
                                                          )
                                                        )
                                                        (not
                                                          (on ?e ?q)
                                                        )
                                                      )
                                                    )
                                                    (and
                                                      (agent_holds ?i)
                                                      (not
                                                        (on rug ?b)
                                                      )
                                                    )
                                                  )
                                                )
                                                (not
                                                  (in_motion upright ?d)
                                                )
                                                (not
                                                  (in_motion ?w ?q)
                                                )
                                              )
                                            )
                                          )
                                          (and
                                            (not
                                              (touch ?n)
                                            )
                                            (not
                                              (agent_holds ?e)
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                  (game-conserved
                                    (agent_holds ?b ?e)
                                  )
                                  (game-conserved
                                    (same_object desk)
                                  )
                                )
                              )
                            )
                          )
                        )
                        (game-conserved
                          (and
                            (and
                              (and
                                (in ?e ?e)
                                (rug_color_under ?e)
                              )
                              (on ?w)
                            )
                            (agent_holds ?w)
                          )
                        )
                        (exists (?j - (either yellow_cube_block cube_block) ?q - block ?g - ball ?q - wall)
                          (and
                            (game-conserved
                              (in_motion block)
                            )
                            (game-conserved
                              (on ?e ?q)
                            )
                          )
                        )
                      )
                      (game-conserved
                        (in_motion ?w)
                      )
                      (and
                        (game-conserved
                          (and
                            (object_orientation floor ?e)
                            (not
                              (adjacent ?e ?w)
                            )
                          )
                        )
                      )
                    )
                  )
                )
                (game-conserved
                  (agent_holds ?w rug)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?r - teddy_bear)
        (then
          (once (object_orientation ?r) )
          (hold (and (in ?r) (between ?r ?r) ) )
          (hold (game_over ?r) )
        )
      )
    )
    (preference preference2
      (exists (?j - dodgeball)
        (then
          (hold (on ?j ?j) )
          (once (on ) )
          (once (exists (?a - hexagonal_bin) (not (touch ?a) ) ) )
        )
      )
    )
  )
)
(:terminal
  (= (* (count-once preference2:book) 3 )
    (-
      9
      (count preference1:basketball:pink)
    )
  )
)
(:scoring
  3
)
)

(define (game game-id-171) (:domain many-objects-room-v1)
(:setup
  (forall (?x - hexagonal_bin ?i - chair)
    (game-conserved
      (exists (?d - hexagonal_bin)
        (in ?d)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?h - tall_cylindrical_block)
        (then
          (hold (agent_holds ?h) )
          (hold (not (agent_holds ?h bed) ) )
          (hold-while (and (and (and (not (and (and (agent_holds ?h ?h) (on ?h) ) (on ?h) ) ) (in_motion ?h) ) (object_orientation ?h) ) (agent_holds ?h) (not (in_motion ?h ?h) ) ) (agent_holds ?h ?h) )
          (hold (< 1 (distance ?h ?h)) )
        )
      )
    )
    (preference preference2
      (exists (?q - (either pink doggie_bed) ?c - dodgeball)
        (then
          (hold (< (distance ?c 9) (distance ?c agent agent)) )
          (once (and (forall (?m ?y ?l ?t - game_object) (agent_holds agent) ) (exists (?l - pillow) (in_motion ?l) ) ) )
          (once (not (not (on bed) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (count-once-per-external-objects preference1:pink:yellow) (>= (count preference1:doggie_bed:dodgeball) 3 )
      )
      (>= (= 1 (count-once-per-objects preference1) )
        (count-once preference2:beachball)
      )
    )
    (>= (count-once-per-objects preference2:dodgeball:book) (* 1 (* 3 (* 5 (count preference1:cylindrical_block:dodgeball) )
        )
      )
    )
  )
)
(:scoring
  (+ (not (count-once-per-objects preference2:hexagonal_bin) ) (count preference1:hexagonal_bin:dodgeball:basketball) (count preference1:pink) (count-once-per-objects preference2:golfball) 2 3 )
)
)

(define (game game-id-172) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (game-optional
        (and
          (agent_holds front)
          (agent_holds agent ?xxx)
        )
      )
    )
    (and
      (forall (?a - hexagonal_bin ?g - block)
        (and
          (exists (?w - doggie_bed ?d - pillow ?t - block ?r - doggie_bed)
            (game-conserved
              (and
                (not
                  (on ?g)
                )
                (in_motion ?g)
              )
            )
          )
          (game-conserved
            (not
              (in_motion ?g ?g)
            )
          )
          (game-conserved
            (agent_holds ?g ?g ?g ?g)
          )
        )
      )
      (and
        (game-conserved
          (agent_holds ?xxx ?xxx)
        )
      )
      (and
        (forall (?z - pillow ?u - block)
          (game-conserved
            (agent_holds ?u ?u)
          )
        )
        (not
          (game-conserved
            (and
              (agent_holds pink_dodgeball)
              (and
                (in_motion ?xxx)
                (in_motion ?xxx ?xxx)
              )
            )
          )
        )
      )
    )
    (exists (?d - chair ?n - block)
      (exists (?e - (either doggie_bed alarm_clock laptop))
        (forall (?u - hexagonal_bin ?o - block)
          (and
            (forall (?a - doggie_bed)
              (game-conserved
                (and
                  (not
                    (and
                      (not
                        (< (distance ?a ?n) 0)
                      )
                      (in_motion bed)
                    )
                  )
                  (in_motion ?o)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?o - dodgeball)
        (then
          (hold (and (in_motion ?o ?o) (in_motion ?o) ) )
          (once (not (not (touch ?o) ) ) )
          (hold-while (not (not (and (not (and (in_motion ?o) (in ?o) ) ) (adjacent ?o ?o) ) ) ) (same_color agent) )
        )
      )
    )
  )
)
(:terminal
  (>= 4 (+ (count preference1:book) (count-once preference1:doggie_bed) )
  )
)
(:scoring
  (count preference1:blue_cube_block:yellow)
)
)

(define (game game-id-173) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (and
      (in_motion brown ?xxx)
      (and
        (in_motion ?xxx ?xxx)
        (adjacent ?xxx ?xxx)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?n - (either laptop rug blue_cube_block) ?j - hexagonal_bin)
        (then
          (once (agent_holds ?j pink_dodgeball) )
          (hold (in_motion ?j) )
        )
      )
    )
    (preference preference2
      (exists (?v - red_dodgeball)
        (then
          (hold (not (< (distance front ?v) 1) ) )
          (hold (and (not (not (not (and (adjacent_side ?v agent) (= 2 (distance 4 ?v)) ) ) ) ) (exists (?m - hexagonal_bin ?a - wall) (agent_holds ?a) ) ) )
          (hold (in_motion agent) )
        )
      )
    )
    (preference preference3
      (exists (?u - doggie_bed ?e - hexagonal_bin)
        (then
          (once (is_setup_object desk) )
          (once (agent_holds bed) )
          (hold (not (in rug) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count preference1:top_drawer) (total-time) )
    100
  )
)
(:scoring
  2
)
)

(define (game game-id-174) (:domain medium-objects-room-v1)
(:setup
  (exists (?a - doggie_bed)
    (exists (?d - dodgeball)
      (forall (?s - cube_block)
        (and
          (exists (?o - hexagonal_bin)
            (game-conserved
              (on ?a ?o)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?v - cube_block ?o - (either golfball cylindrical_block))
        (at-end
          (not
            (agent_holds ?o ?o)
          )
        )
      )
    )
    (preference preference2
      (exists (?q - game_object)
        (then
          (once (agent_holds ?q) )
          (once (is_setup_object ?q) )
          (once (and (agent_holds ?q) (in ?q) (in_motion ?q) (= 1 1 7) (is_setup_object bed) (and (and (rug_color_under ?q) (not (in ?q ?q) ) (on ?q) ) (agent_holds bed) (in_motion desk agent) ) (exists (?d - hexagonal_bin) (same_color agent ?q) ) (agent_holds ?q rug) (agent_holds ?q) (in ?q) (not (and (not (in_motion ?q) ) (in ?q ?q) ) ) (< (distance ?q agent) 10) ) )
        )
      )
    )
    (preference preference3
      (exists (?o - dodgeball)
        (then
          (once (and (in_motion ?o desk) (and (not (agent_holds ?o) ) (and (adjacent ?o ?o) (on ?o ?o) (and (in_motion ?o desk) (game_over ?o ?o) ) ) ) (agent_holds ) ) )
          (hold (not (in_motion floor) ) )
          (once (and (on south_west_corner ?o) (or (on ?o ?o) ) ) )
        )
      )
    )
  )
)
(:terminal
  (= 300 (and (count preference1:pink) (* (count preference3:red) 4 (+ 3 (count preference1:yellow) )
      )
      3
    )
  )
)
(:scoring
  5
)
)

(define (game game-id-175) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-conserved
      (and
        (not
          (< (distance ?xxx ?xxx) 0.5)
        )
        (not
          (and
            (adjacent blue)
            (in_motion ?xxx)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?m - building)
        (then
          (once (not (not (and (and (touch ?m) (agent_holds ?m) ) (on ?m) (in_motion bed) (agent_holds ?m ?m) ) ) ) )
          (once (agent_holds ?m) )
          (hold (and (not (agent_holds ?m ?m) ) (forall (?z - doggie_bed ?z - dodgeball) (agent_holds ?m ?m) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (- (count preference1:dodgeball:beachball) )
    (count-once-per-objects preference1:orange)
  )
)
(:scoring
  2
)
)

(define (game game-id-176) (:domain medium-objects-room-v1)
(:setup
  (exists (?e ?o - curved_wooden_ramp ?i - (either dodgeball cellphone desktop))
    (and
      (and
        (game-conserved
          (and
            (not
              (agent_holds ?i)
            )
            (on ?i ?i)
          )
        )
      )
      (exists (?w - pillow ?n - (either doggie_bed ball cube_block dodgeball))
        (and
          (exists (?d - ball)
            (and
              (exists (?w - dodgeball)
                (game-conserved
                  (and
                    (and
                      (and
                        (in_motion ?i)
                        (not
                          (or
                            (in ?d)
                            (not
                              (in ?n)
                            )
                          )
                        )
                      )
                      (agent_holds ?i ?w)
                    )
                    (and
                      (touch ?d)
                      (object_orientation ?n ?i)
                    )
                  )
                )
              )
            )
          )
        )
      )
      (exists (?m - building ?c - building ?f - block)
        (game-conserved
          (agent_holds ?i)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?z - red_dodgeball)
        (at-end
          (agent_holds agent)
        )
      )
    )
    (forall (?u - hexagonal_bin)
      (and
        (preference preference2
          (exists (?n - doggie_bed)
            (at-end
              (agent_holds ?u)
            )
          )
        )
        (preference preference3
          (exists (?k - block ?v - red_dodgeball)
            (at-end
              (agent_holds ?u)
            )
          )
        )
      )
    )
    (preference preference4
      (exists (?y - dodgeball)
        (then
          (hold (on ?y ?y) )
          (hold (in_motion ?y) )
          (once (in ?y ?y) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count preference2:beachball:side_table) (count-once-per-objects preference1:golfball) )
    (>= (* (count-measure preference2:green:basketball) 40 )
      (count preference2:doggie_bed)
    )
  )
)
(:scoring
  (* (- (* (* 8 15 )
        (count-once preference4:beachball:orange)
      )
    )
  )
)
)

(define (game game-id-177) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (agent_holds rug)
  )
)
(:constraints
  (and
    (forall (?b - chair ?g - doggie_bed)
      (and
        (preference preference1
          (exists (?l - (either dodgeball pillow golfball))
            (at-end
              (not
                (not
                  (and
                    (in_motion rug ?g)
                    (and
                      (agent_holds ?l)
                      (agent_holds ?g)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= (count-once-per-objects preference1:basketball:pink) (external-forall-maximize (count-once-per-objects preference1:basketball:yellow) ) )
)
(:scoring
  4
)
)

(define (game game-id-178) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (and
      (agent_holds ?xxx ?xxx)
      (not
        (in_motion ?xxx)
      )
      (and
        (and
          (in_motion ?xxx ?xxx)
          (agent_holds ?xxx agent)
        )
        (agent_holds ?xxx)
        (agent_holds ?xxx)
      )
      (not
        (forall (?w - (either cylindrical_block triangle_block) ?d - dodgeball ?r - hexagonal_bin)
          (exists (?p - pillow)
            (= 1 (distance ?p ?r))
          )
        )
      )
      (and
        (agent_holds floor)
        (agent_holds ?xxx)
      )
      (agent_holds ?xxx)
      (agent_holds ?xxx ?xxx)
    )
  )
)
(:constraints
  (and
    (forall (?h - cube_block)
      (and
        (preference preference1
          (exists (?u - shelf ?f - hexagonal_bin)
            (at-end
              (agent_holds ?h)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (total-time) (+ (- (* 2 (count preference1:green:dodgeball) )
        )
        (count preference1:blue_dodgeball:beachball)
      )
      3
      (count preference1)
    )
    (+ (count preference1:yellow) (+ (count preference1:hexagonal_bin:doggie_bed) (* (* 5 30 (* (count preference1:purple:alarm_clock) (count-once-per-objects preference1:red_pyramid_block:blue_pyramid_block) )
          )
          (+ (= (count-once preference1:purple) (or 4 (* (<= (count-once-per-objects preference1:pink:purple) 7 )
                  2
                  (>= (count preference1:basketball) (total-time) )
                  (count-unique-positions preference1:yellow_cube_block)
                  (total-score)
                  (* (* 10 (count preference1:dodgeball) )
                    (count-once-per-objects preference1:top_drawer)
                  )
                  (- (count preference1:orange:pink_dodgeball) )
                  (+ (* (* (count preference1:dodgeball) (* (* (* 20 (+ (* (count preference1:blue_dodgeball) (count preference1:beachball) )
                                (- (count preference1:pink) )
                                (* 7 (= (+ (count preference1:beachball) (* (count preference1) (- (count preference1:doggie_bed:golfball) )
                                      )
                                    )
                                    3
                                    (* (* 2 (* (count preference1:basketball) 2 5 )
                                        (count-once-per-objects preference1:blue_pyramid_block)
                                        (* (+ (<= 0 5 )
                                            (count-once-per-external-objects preference1:yellow)
                                          )
                                          (count preference1:pink_dodgeball)
                                        )
                                        (+ (* (* 3 (count preference1:purple) )
                                            (+ 0 5 )
                                          )
                                          9
                                        )
                                        (* (* 10 100 )
                                          (* (and (* 3 15 )
                                            )
                                            3
                                          )
                                          (+ 1 (or (count preference1:beachball) 300 (count-once-per-objects preference1:dodgeball:pink) ) )
                                        )
                                      )
                                      4
                                    )
                                  )
                                )
                              )
                              3
                            )
                            6
                          )
                          (count preference1:blue_dodgeball)
                        )
                        (count preference1:pink)
                      )
                      (count-once-per-objects preference1:beachball)
                    )
                    5
                  )
                  180
                )
                15
              )
            )
          )
        )
      )
    )
  )
)
(:scoring
  2
)
)

(define (game game-id-179) (:domain medium-objects-room-v1)
(:setup
  (forall (?r - (either alarm_clock))
    (exists (?e - (either main_light_switch blue_cube_block) ?d - dodgeball)
      (and
        (game-conserved
          (not
            (open ?d ?r)
          )
        )
        (game-conserved
          (in ?r)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?n - cube_block ?p - wall)
        (then
          (hold-for 4 (on ?p) )
          (once (and (in_motion ?p ?p) (in_motion ?p ?p) (= 1 1) ) )
          (any)
        )
      )
    )
    (preference preference2
      (exists (?j - beachball)
        (then
          (once (exists (?z - hexagonal_bin) (not (on ?j) ) ) )
          (hold (in_motion ?j) )
          (once (in_motion ?j ?j) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-measure preference1:yellow) (+ (count preference1:pink_dodgeball) (count-measure preference1:wall) )
  )
)
(:scoring
  (or
    (count preference2:pink:dodgeball)
  )
)
)

(define (game game-id-180) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?s - shelf ?c - ball)
      (game-optional
        (and
          (and
            (exists (?o - hexagonal_bin)
              (agent_holds ?c upright)
            )
            (adjacent ?c rug)
            (and
              (and
                (< (distance ?c room_center) 6)
                (and
                  (in ?c)
                  (< 1 1)
                )
                (not
                  (and
                    (in_motion ?c)
                    (and
                      (adjacent_side ?c)
                      (in_motion ?c ?c)
                    )
                  )
                )
              )
              (not
                (not
                  (and
                    (not
                      (not
                        (adjacent ?c)
                      )
                    )
                    (agent_holds ?c)
                    (in_motion ?c ?c)
                  )
                )
              )
            )
          )
          (in_motion agent)
        )
      )
    )
    (game-conserved
      (and
        (in_motion ?xxx ?xxx)
        (< (distance desk ?xxx) 4)
        (rug_color_under ?xxx ?xxx)
        (or
          (and
            (in_motion ?xxx ?xxx)
            (opposite ?xxx)
          )
          (and
            (in_motion ?xxx)
            (not
              (between ?xxx ?xxx)
            )
            (not
              (not
                (agent_holds ?xxx ?xxx)
              )
            )
            (same_type ?xxx ?xxx)
          )
          (agent_holds ?xxx)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?k - ball ?r - cylindrical_block)
        (at-end
          (in_motion ?r)
        )
      )
    )
    (forall (?x - (either beachball bridge_block))
      (and
        (preference preference2
          (exists (?m - hexagonal_bin)
            (then
              (hold (not (agent_holds ?m desk) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (count preference1:beachball) )
)
(:scoring
  (* 60 (count-unique-positions preference1:pink) )
)
)

(define (game game-id-181) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (< 1 (distance ?xxx ?xxx))
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?d - (either dodgeball cellphone) ?z - blue_cube_block ?l - ball ?a - doggie_bed)
        (then
          (once (and (or (in_motion ?a) ) (agent_holds ?a) ) )
          (once (agent_holds ?a ?a) )
          (once (adjacent north_wall) )
        )
      )
    )
    (preference preference2
      (exists (?y - dodgeball)
        (at-end
          (not
            (in_motion ?y)
          )
        )
      )
    )
  )
)
(:terminal
  (>= 10 6 )
)
(:scoring
  (+ (count-total preference1:dodgeball:pyramid_block) (+ (count preference1:yellow_cube_block) (count preference1:dodgeball:beachball:dodgeball) )
  )
)
)

(define (game game-id-182) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (= 4 (distance_side 0))
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?u - color)
        (then
          (once (agent_holds ?u ?u) )
          (hold (touch agent) )
          (hold (in ?u) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count preference1:blue_cube_block) 5 )
    (>= (count-once-per-objects preference1:dodgeball) (* (+ (and (- (count-overlapping preference1:yellow) )
            (count-once preference1:beachball)
            (count preference1:dodgeball)
          )
          300
          (count preference1:dodgeball)
          4
          (count-once-per-objects preference1:blue_dodgeball)
          9
        )
        (count preference1:blue_dodgeball:book)
        3
        (external-forall-maximize
          (+ 1 (count preference1:basketball:cube_block) )
        )
        10
        (* 4 (count-once-per-objects preference1:dodgeball:wall:pink) )
      )
    )
  )
)
(:scoring
  (* (* 300 (* (* 3 (count-once-per-objects preference1:dodgeball) )
        5
      )
    )
    60
  )
)
)

(define (game game-id-183) (:domain medium-objects-room-v1)
(:setup
  (exists (?z - building)
    (game-optional
      (and
        (and
          (< (distance room_center ?z) 3)
          (not
            (agent_holds ?z)
          )
        )
        (same_type ?z ?z ?z)
      )
    )
  )
)
(:constraints
  (and
    (forall (?p - hexagonal_bin)
      (and
        (preference preference1
          (exists (?m - doggie_bed)
            (then
              (hold (and (and (adjacent_side ?m ?p) (open pink_dodgeball) ) (and (agent_holds ?m ?p) (in ?m ?p) ) ) )
              (hold (exists (?c - dodgeball) (and (not (in_motion ?c) ) (= (distance room_center bed) 7) ) ) )
              (once (and (same_type ?m) (not (not (< 5 5) ) ) (not (in_motion ?p) ) (in ?p ?p) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= (count-once-per-objects preference1:yellow_cube_block:red) (count-longest preference1:purple) )
)
(:scoring
  10
)
)

(define (game game-id-184) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (on ?xxx)
    )
  )
)
(:constraints
  (and
    (forall (?a - dodgeball)
      (and
        (preference preference1
          (exists (?f - chair)
            (then
              (hold-while (on ?a) (and (agent_holds ?a) (and (in_motion ?f) (and (touch ?a ?f) (agent_holds ?a pillow) ) (agent_holds ?a) (in_motion ?f ?a) ) ) )
              (once (< (distance ?f ?a) 9) )
              (hold (and (in_motion ?f) (on ?a) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 1 (or (/ (+ 8 10 )
        (or
          6
        )
      )
    )
  )
)
(:scoring
  (* (* 100 (count-once-per-objects preference1:blue_dodgeball) )
    (+ (count-once-per-objects preference1:cube_block:green) (count-once-per-objects preference1:yellow) (- (count-once preference1:green) )
    )
  )
)
)

(define (game game-id-185) (:domain few-objects-room-v1)
(:setup
  (exists (?k - (either cd chair))
    (exists (?o - building)
      (exists (?f - curved_wooden_ramp)
        (exists (?v - (either pink pyramid_block) ?g - hexagonal_bin)
          (game-optional
            (in_motion ?k)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?a - (either alarm_clock))
        (then
          (once (agent_holds ?a) )
          (once (and (and (adjacent desk ?a) (adjacent front desk) ) (in ?a ?a) (in_motion ?a ?a) ) )
          (hold-while (in_motion bed) (and (in bed ?a) (agent_holds ?a) (in_motion ?a) ) (in_motion ?a) )
        )
      )
    )
    (preference preference2
      (exists (?i - block)
        (then
          (once (in_motion ?i) )
          (once (on agent) )
          (once (and (agent_holds ?i) (and (and (not (forall (?r - hexagonal_bin) (and (< 6 (distance desk ?i)) (not (< (distance agent ?r) (distance 3)) ) ) ) ) (exists (?u - dodgeball ?x - hexagonal_bin) (same_color agent ?x) ) ) (and (on ?i bed) (not (agent_holds ?i) ) (and (in ?i ?i) (in ?i ?i ?i ?i) ) (not (and (and (and (touch ?i ?i) (adjacent ?i ?i) ) (on ?i ?i) ) (not (and (in_motion ?i ?i) (or (exists (?b - block ?u - building) (= 10 (distance ?u room_center) (distance ?i bed)) ) (and (on ?i ?i) (on ?i ?i) (on ?i) (agent_holds ?i brown) (adjacent floor) (and (agent_holds ?i) (rug_color_under ?i) ) (not (agent_holds ?i ?i) ) (agent_holds rug bottom_shelf ?i) ) ) ) ) (not (in_motion ?i ?i) ) ) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (< 2 (* 8 1 (count preference2:basketball) 2 )
  )
)
(:scoring
  3
)
)

(define (game game-id-186) (:domain medium-objects-room-v1)
(:setup
  (exists (?f - doggie_bed)
    (game-optional
      (rug_color_under ?f)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?o - block)
        (then
          (hold (adjacent desk) )
          (hold-to-end (open bridge_block ?o ?o) )
        )
      )
    )
    (forall (?c ?t ?v ?f - (either yellow_cube_block pink) ?f - block ?v - hexagonal_bin)
      (and
        (preference preference2
          (exists (?m - (either cube_block golfball beachball) ?a - ball ?p - red_dodgeball ?a - hexagonal_bin)
            (then
              (once (on ?a) )
              (once (not (not (agent_holds ?a) ) ) )
              (hold-while (on ?v) (exists (?h - teddy_bear) (and (and (and (not (in_motion ?h ?v) ) (in ?v) ) (agent_holds rug) ) (in_motion ?a ?h) ) ) )
            )
          )
        )
        (preference preference3
          (exists (?j - (either doggie_bed))
            (then
              (once (and (on blue ?v) (not (not (agent_holds ?v ?j) ) ) ) )
              (once (agent_holds ?v drawer) )
              (once (on ?v ?v) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (count-total preference2:dodgeball) )
)
(:scoring
  4
)
)

(define (game game-id-187) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (in ?xxx ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?x - bridge_block ?d - building)
        (then
          (hold-while (and (and (agent_holds ) (not (and (and (in ?d) (>= (distance agent 10) (distance_side desk desk)) (or (adjacent top_shelf) (agent_holds ?d) (not (in ?d ?d) ) (and (not (not (not (not (agent_holds ?d ?d) ) ) ) ) (rug_color_under ?d) (agent_holds ?d ?d) ) ) (not (in_motion ?d ?d) ) (touch floor) (agent_holds ?d) (agent_holds agent) ) (in ?d) ) ) ) (in ?d ?d) ) (and (and (adjacent ?d ?d) (not (in_motion ?d) ) (in_motion ?d) ) (agent_holds ?d) ) )
          (hold-while (in_motion ?d ?d) (in ?d ?d) (not (< (distance room_center ?d) 5) ) )
          (hold-while (forall (?k - cube_block ?v - (either pink laptop) ?n - triangular_ramp) (game_over pillow) ) (on ?d) )
        )
      )
    )
    (forall (?x - hexagonal_bin)
      (and
        (preference preference2
          (then
            (once (adjacent ?x ?x) )
            (hold-for 5 (in block bed) )
            (hold-while (and (< (distance_side ?x 10) 2) (adjacent ?x) ) (not (adjacent bed) ) )
          )
        )
        (preference preference3
          (exists (?g - dodgeball ?v - game_object ?r - golfball ?z - hexagonal_bin)
            (then
              (hold-while (not (exists (?j - chair ?r - cube_block) (in_motion ?x) ) ) (on ?z agent) (agent_holds top_drawer ?x) )
              (once (agent_holds ?z ?z) )
              (once (forall (?c - cylindrical_block) (and (and (and (in_motion ?c ?c) (or (not (on agent ?c) ) (in_motion ?c) (and (not (agent_holds ?z) ) (on ?c ?z) ) ) ) (< (distance 6 2) 1) (in ?c ?z) (in ?z) (exists (?i - ball) (not (not (not (and (not (forall (?v - (either tall_cylindrical_block golfball)) (toggled_on ?z agent) ) ) (in ?z) ) ) ) ) ) (and (in_motion ?z ?c) (on floor ?c) ) (not (agent_holds ?x) ) (exists (?n - dodgeball) (on ?x) ) ) (in_motion ?c ?z) ) ) )
              (hold-to-end (and (same_color agent ?x) (in_motion ?x) ) )
            )
          )
        )
        (preference preference4
          (exists (?w - ball)
            (then
              (once (in_motion upside_down ?w) )
              (hold-while (not (>= 3 1) ) (agent_holds agent ?w) )
              (once (adjacent ?w ?w) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count preference3:cube_block:dodgeball) (count-once-per-objects preference1:dodgeball) )
    (count preference2:red)
  )
)
(:scoring
  (+ (+ (count preference3:yellow) 3 )
    (count-same-positions preference3:dodgeball)
  )
)
)

(define (game game-id-188) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds floor)
  )
)
(:constraints
  (and
    (forall (?g - sliding_door ?c - chair)
      (and
        (preference preference1
          (exists (?n - cube_block)
            (then
              (once (on ?c) )
              (hold-while (> 7 2) (in_motion ?c ?c) )
              (hold (in_motion ?n ?c) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (= (external-forall-minimize 4 ) (+ (< (+ (* (count-once-per-objects preference1:doggie_bed) (count preference1:block:pink_dodgeball) )
          2
        )
        (count-overlapping preference1:purple:beachball)
      )
      (count preference1:red:cube_block)
    )
  )
)
(:scoring
  (* 2 (count preference1:red_pyramid_block) )
)
)

(define (game game-id-189) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?v - (either alarm_clock golfball desktop))
      (forall (?g - hexagonal_bin)
        (forall (?r - block)
          (and
            (and
              (forall (?i - hexagonal_bin ?o - dodgeball)
                (and
                  (game-optional
                    (in_motion agent)
                  )
                  (and
                    (game-optional
                      (agent_holds ?r)
                    )
                    (exists (?b - desktop)
                      (or
                        (and
                          (and
                            (game-optional
                              (agent_holds ?o)
                            )
                          )
                        )
                        (exists (?p - (either dodgeball lamp pink cube_block bridge_block top_drawer cube_block) ?q - ball ?u - teddy_bear)
                          (game-optional
                            (agent_holds ?g ?v)
                          )
                        )
                        (and
                          (game-conserved
                            (not
                              (same_type ?b)
                            )
                          )
                        )
                      )
                    )
                    (game-conserved
                      (in_motion ?g)
                    )
                  )
                )
              )
            )
            (game-optional
              (not
                (in_motion ?r)
              )
            )
          )
        )
      )
    )
    (forall (?t - building ?f - hexagonal_bin)
      (game-conserved
        (not
          (same_color ?f)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (then
        (once (agent_holds agent) )
        (once (on bed) )
        (once (not (or (on ?xxx rug) (on ?xxx) ) ) )
      )
    )
    (forall (?o - hexagonal_bin)
      (and
        (preference preference2
          (exists (?v - (either laptop dodgeball))
            (then
              (hold-for 8 (not (and (agent_holds ?v ?v floor) (agent_holds bed blue) ) ) )
              (once (in ?v) )
              (once-measure (not (between agent) ) (distance ?o room_center) )
            )
          )
        )
        (preference preference3
          (exists (?f - (either bed dodgeball))
            (at-end
              (not
                (and
                  (adjacent_side ?f ?o)
                  (agent_holds floor bed)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< (* 1 6 20 )
    (external-forall-maximize
      10
    )
  )
)
(:scoring
  4
)
)

(define (game game-id-190) (:domain medium-objects-room-v1)
(:setup
  (forall (?m - chair ?o - hexagonal_bin)
    (and
      (and
        (and
          (and
            (game-conserved
              (same_object ?o ?o)
            )
          )
          (exists (?c - ball)
            (game-conserved
              (in_motion ?c main_light_switch)
            )
          )
        )
      )
      (game-optional
        (>= 1 (distance room_center room_center))
      )
      (and
        (game-conserved
          (agent_holds ?o)
        )
        (not
          (forall (?a - bridge_block)
            (and
              (not
                (forall (?c - (either tall_cylindrical_block golfball) ?g - dodgeball ?c - color)
                  (game-optional
                    (in ?o ?o)
                  )
                )
              )
              (game-conserved
                (is_setup_object ?a rug)
              )
              (game-conserved
                (on ?o)
              )
            )
          )
        )
        (exists (?z - beachball)
          (exists (?k - wall)
            (game-conserved
              (and
                (adjacent ?o ?z)
                (not
                  (same_type ?o)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?n - ball ?x ?f - chair)
        (at-end
          (in west_wall)
        )
      )
    )
    (forall (?h - block)
      (and
        (preference preference2
          (exists (?y ?r - triangular_ramp ?r - dodgeball ?i - hexagonal_bin)
            (then
              (once (exists (?d - chair) (and (and (on ?h) (in_motion ?h ?h) ) (in_motion ?h) ) ) )
              (once (on ?i ?h) )
              (once (or (forall (?r - building ?r - (either side_table cd)) (object_orientation ?h) ) (not (not (on agent) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-once-per-objects preference1:alarm_clock) 3 )
    (and
      (>= 20 (count preference2:dodgeball) )
      (or
        (>= 5 (* (count preference1:golfball) (total-score) (count-total preference1:dodgeball) )
        )
      )
      (not
        (> 4 5 )
      )
    )
  )
)
(:scoring
  (+ (+ (count preference2:basketball) (count-once preference2:green:red) )
    (* (count-once-per-external-objects preference1:golfball) (+ (* (* (count preference1:beachball:basketball) (count preference2:white:red) )
          (- (count preference2:dodgeball) )
        )
        3
      )
    )
  )
)
)

(define (game game-id-191) (:domain medium-objects-room-v1)
(:setup
  (exists (?j - building)
    (game-conserved
      (and
        (adjacent rug)
        (in_motion floor ?j)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (then
        (once (on ?xxx rug) )
      )
    )
    (preference preference2
      (exists (?j ?o - sliding_door ?u - hexagonal_bin)
        (at-end
          (agent_holds pink_dodgeball brown)
        )
      )
    )
    (preference preference3
      (exists (?x - (either dodgeball floor))
        (then
          (once (and (in_motion ?x ?x) ) )
          (once (in_motion ?x upside_down) )
          (hold (in_motion ?x) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 4 5 )
    (total-score)
  )
)
(:scoring
  (count-once-per-objects preference2:dodgeball)
)
)

(define (game game-id-192) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (not
      (in_motion ?xxx ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?q - dodgeball)
        (then
          (hold-while (agent_holds ?q) (in_motion ?q ?q ?q) )
          (hold (on ?q ?q) )
          (once (and (object_orientation ?q rug) (agent_holds ?q) (agent_holds floor) ) )
        )
      )
    )
  )
)
(:terminal
  (> (* 3 (external-forall-maximize 6 ) )
    (count-once-per-objects preference1:dodgeball)
  )
)
(:scoring
  2
)
)

(define (game game-id-193) (:domain many-objects-room-v1)
(:setup
  (forall (?z - teddy_bear)
    (and
      (forall (?t - hexagonal_bin)
        (game-conserved
          (in_motion ?t)
        )
      )
      (and
        (game-conserved
          (agent_holds ?z)
        )
        (game-optional
          (and
            (not
              (on ?z bed)
            )
            (in_motion agent)
          )
        )
        (or
          (exists (?f - (either dodgeball))
            (and
              (game-conserved
                (in_motion ?z ?z)
              )
            )
          )
        )
      )
      (game-conserved
        (agent_holds ?z)
      )
    )
  )
)
(:constraints
  (and
    (forall (?z - dodgeball ?g - cube_block)
      (and
        (preference preference1
          (exists (?v - cube_block)
            (then
              (once (on floor) )
              (once (on ?g) )
              (once (and (< 10 (distance room_center ?g door)) (touch ?v ?g) ) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?u - game_object)
        (at-end
          (agent_holds ?u)
        )
      )
    )
  )
)
(:terminal
  (>= (+ 10 (count preference2:golfball:alarm_clock) )
    (count preference1:basketball)
  )
)
(:scoring
  (* (* (+ (count preference1:dodgeball) 2 )
      2
    )
    2
    (count-once-per-objects preference1:dodgeball)
    (external-forall-maximize
      (count preference1:dodgeball:yellow)
    )
    (external-forall-maximize
      (count-once-per-objects preference2:golfball)
    )
    (count-once-per-objects preference1:dodgeball)
  )
)
)

(define (game game-id-194) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (exists (?l - hexagonal_bin)
      (in_motion floor)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?w - cube_block)
        (then
          (hold (and (faces ?w front rug) (not (on floor) ) ) )
          (once (in_motion ?w ?w) )
          (any)
        )
      )
    )
    (preference preference2
      (at-end
        (agent_holds block)
      )
    )
  )
)
(:terminal
  (>= 2 (count-once-per-objects preference2:book) )
)
(:scoring
  (* 12 4 (* 3 (+ (count-once-per-objects preference1:basketball) 2 )
      (* (count preference1:golfball) (count-unique-positions preference1:doggie_bed:basketball) )
    )
  )
)
)

(define (game game-id-195) (:domain few-objects-room-v1)
(:setup
  (exists (?t - hexagonal_bin)
    (game-optional
      (opposite ?t ?t)
    )
  )
)
(:constraints
  (and
    (forall (?w - hexagonal_bin ?q - hexagonal_bin)
      (and
        (preference preference1
          (exists (?v - hexagonal_bin)
            (then
              (once (and (in ?q ?v) (and (not (< (distance 4 ?q) 1) ) ) (> 10 (distance ?v room_center)) ) )
              (hold (in pink_dodgeball ?v) )
              (hold (not (agent_holds ?q) ) )
            )
          )
        )
      )
    )
    (forall (?u - triangular_ramp ?f - doggie_bed)
      (and
        (preference preference2
          (exists (?e - beachball ?y - hexagonal_bin ?j - dodgeball)
            (then
              (once (on ?j) )
              (once (in ?j) )
              (once (agent_holds agent ?f) )
            )
          )
        )
        (preference preference3
          (exists (?b - color)
            (then
              (once (in ?f) )
              (once (in_motion pink_dodgeball) )
              (hold (on ?f ?f) )
              (once (not (not (and (= (distance agent ?b) (distance 2 1)) (and (and (in_motion ?b) (not (agent_holds desk ?b) ) (exists (?o - dodgeball) (in_motion ?f) ) ) (same_type ?f ?f) ) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (= (< (* 1 30 )
        2
      )
      (count preference3:dodgeball)
    )
    (or
      (and
        (> (- (* (count-once-per-external-objects preference2:pink) 6 )
          )
          (* 3 (count-once preference2:yellow_pyramid_block:yellow) (+ 3 6 )
            3
            10
            5
            (count-once-per-objects preference2:golfball)
          )
        )
      )
    )
    (>= 5 (total-time) )
  )
)
(:scoring
  (count-once-per-external-objects preference3:tan)
)
)

(define (game game-id-196) (:domain few-objects-room-v1)
(:setup
  (exists (?h - game_object)
    (game-conserved
      (agent_holds ?h ?h)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (then
        (hold (on ?xxx) )
        (hold (not (not (not (agent_holds ?xxx) ) ) ) )
        (once (and (< (distance ?xxx ?xxx) (distance ?xxx ?xxx)) (and (and (agent_holds ?xxx) (= 8 (distance desk agent)) (not (adjacent agent) ) ) (on ?xxx agent) ) (in agent) ) )
      )
    )
    (preference preference2
      (exists (?n - pillow ?i - game_object)
        (then
          (once (and (not (agent_holds pink_dodgeball) ) (not (agent_holds ?i ?i) ) ) )
          (once (in_motion ?i left) )
          (once (in ?i) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:hexagonal_bin:green) 8 )
)
(:scoring
  4
)
)

(define (game game-id-197) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (exists (?n - dodgeball ?y - dodgeball)
        (game-conserved
          (on ?y ?y)
        )
      )
      (game-optional
        (in_motion ?xxx)
      )
      (exists (?s - hexagonal_bin)
        (game-conserved
          (touch ?s)
        )
      )
    )
    (exists (?w - hexagonal_bin)
      (exists (?l ?j - game_object ?p - hexagonal_bin ?n - hexagonal_bin)
        (game-conserved
          (not
            (and
              (agent_holds bed ?w)
              (on ?w ?n)
              (agent_holds ?w ?w)
              (not
                (same_type ?n ?w ?n)
              )
              (agent_holds ?n ?n)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?z - hexagonal_bin ?q - hexagonal_bin ?c - ball)
        (then
          (hold-while (agent_holds ?c) (in_motion ?c ?c) (rug_color_under ?c) )
          (hold-to-end (not (agent_holds ?c ?c) ) )
          (any)
        )
      )
    )
  )
)
(:terminal
  (>= 5 (count-once-per-objects preference1) )
)
(:scoring
  (= (count preference1:red) (count preference1:green:pink_dodgeball) )
)
)

(define (game game-id-198) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (and
      (in_motion ?xxx)
      (not
        (not
          (and
            (and
              (and
                (not
                  (and
                    (in_motion blinds ?xxx)
                    (on ?xxx)
                  )
                )
                (in_motion ?xxx ?xxx)
                (in_motion ?xxx)
              )
              (adjacent ?xxx)
            )
            (agent_holds ?xxx ?xxx)
            (agent_holds ?xxx)
          )
        )
      )
      (not
        (not
          (agent_holds ?xxx)
        )
      )
      (not
        (or
          (in_motion ?xxx)
          (adjacent rug ?xxx)
          (open rug)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (at-end
        (not
          (not
            (in_motion ?xxx)
          )
        )
      )
    )
    (forall (?m - ball ?o - (either golfball key_chain))
      (and
        (preference preference2
          (exists (?y - cube_block)
            (at-end
              (agent_holds ?o)
            )
          )
        )
      )
    )
    (preference preference3
      (at-end
        (and
          (in ?xxx)
          (not
            (in_motion ?xxx)
          )
        )
      )
    )
    (forall (?b - building)
      (and
        (preference preference4
          (exists (?l - game_object ?s - cube_block)
            (at-end
              (and
                (touch ?b)
                (agent_holds ?s)
                (and
                  (and
                    (on ?s)
                  )
                  (in_motion ?b)
                )
              )
            )
          )
        )
      )
    )
    (preference preference5
      (exists (?z - (either golfball beachball))
        (then
          (once (and (and (agent_holds ?z ?z) (adjacent ?z ?z) ) (and (forall (?s ?j - hexagonal_bin) (not (not (agent_holds agent ?j) ) ) ) (in_motion ?z ?z) ) ) )
          (once (and (on ?z) (not (between ?z ?z) ) ) )
          (once (not (between ?z) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 10 2 )
    (and
      (or
        (>= (+ (count-once-per-external-objects preference4:dodgeball) (count preference3:yellow) )
          0.7
        )
        (>= (count preference2:pink_dodgeball) (count-once-per-objects preference5:golfball) )
      )
      (or
        (< 10 (count-once preference2) )
      )
      (>= (external-forall-minimize (* (count preference5:yellow) (count preference1:dodgeball:pink) (count-total preference1:cube_block) (+ (count-once-per-objects preference5:bed:pink_dodgeball) 15 (count preference3:hexagonal_bin) 6 )
            (count preference4:hexagonal_bin)
            (count preference5:hexagonal_bin:book)
          )
        )
        (count-once-per-objects preference2:beachball)
      )
    )
  )
)
(:scoring
  3
)
)

(define (game game-id-199) (:domain few-objects-room-v1)
(:setup
  (forall (?s - flat_block)
    (forall (?p - ball)
      (forall (?y - red_dodgeball)
        (exists (?r ?h ?a - hexagonal_bin)
          (and
            (forall (?l - pyramid_block)
              (exists (?n - curved_wooden_ramp ?w - dodgeball)
                (exists (?o - hexagonal_bin)
                  (and
                    (and
                      (game-conserved
                        (or
                          (above ?y)
                          (in ?y agent)
                        )
                      )
                      (exists (?i - building)
                        (exists (?b - color)
                          (game-conserved
                            (agent_holds ?o ?y)
                          )
                        )
                      )
                      (and
                        (game-conserved
                          (and
                            (and
                              (in ?s)
                              (adjacent ?l)
                            )
                            (object_orientation ?y)
                          )
                        )
                        (game-optional
                          (not
                            (not
                              (in_motion ?a ?p)
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
            (game-conserved
              (adjacent ?r ?p)
            )
            (and
              (exists (?e - doggie_bed)
                (game-conserved
                  (not
                    (on bed)
                  )
                )
              )
              (and
                (game-conserved
                  (and
                    (not
                      (forall (?z - ball)
                        (and
                          (>= 1 (distance room_center desk))
                          (and
                            (and
                              (> 1 1)
                              (not
                                (and
                                  (in_motion front)
                                  (adjacent ?s)
                                )
                              )
                            )
                            (agent_holds ?z ?h)
                          )
                          (and
                            (adjacent ?a)
                            (in_motion ?y)
                          )
                        )
                      )
                    )
                    (and
                      (in_motion ?r)
                      (not
                        (agent_holds ?r bed)
                      )
                    )
                    (and
                      (> (distance ?a 10) 1)
                    )
                  )
                )
                (game-conserved
                  (touch ?r)
                )
                (game-optional
                  (and
                    (not
                      (and
                        (agent_holds rug ?s)
                        (agent_holds ?y ?p)
                        (not
                          (not
                            (same_color desk ?a)
                          )
                        )
                        (in_motion ?y ?h)
                      )
                    )
                    (in_motion ?r desk)
                    (agent_holds ?s)
                  )
                )
              )
              (and
                (or
                  (and
                    (game-optional
                      (and
                        (is_setup_object ?a)
                        (not
                          (and
                            (agent_holds ?r ?a ?s)
                            (not
                              (and
                                (in_motion ?a)
                                (agent_holds blue ?y)
                              )
                            )
                          )
                        )
                        (in ?h ?s)
                      )
                    )
                    (and
                      (game-optional
                        (agent_holds ?p)
                      )
                    )
                  )
                )
                (forall (?o - doggie_bed)
                  (exists (?t - pyramid_block ?f - chair)
                    (exists (?t - (either alarm_clock game_object) ?v - block ?w - game_object)
                      (forall (?q - block)
                        (game-conserved
                          (not
                            (< (distance ?o room_center) 2)
                          )
                        )
                      )
                    )
                  )
                )
                (exists (?k - hexagonal_bin ?l - hexagonal_bin)
                  (game-optional
                    (not
                      (and
                        (in_motion ?a bed)
                        (and
                          (game_start bed)
                          (not
                            (not
                              (in_motion ?a ?s)
                            )
                          )
                          (and
                            (faces ?h bed)
                            (not
                              (on ?y ?l bed)
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
              (and
                (game-conserved
                  (agent_holds ?y)
                )
                (game-optional
                  (above ?s)
                )
                (exists (?v - (either cube_block blue_cube_block))
                  (forall (?j ?k - hexagonal_bin ?x ?q - dodgeball ?g - building)
                    (game-optional
                      (in_motion ?h agent)
                    )
                  )
                )
              )
              (and
                (forall (?e - (either dodgeball lamp curved_wooden_ramp) ?t - ball ?z - dodgeball)
                  (and
                    (exists (?n - cube_block ?m - curved_wooden_ramp ?x - green_triangular_ramp)
                      (game-conserved
                        (and
                          (in_motion ?y ?z)
                          (in_motion ?p)
                        )
                      )
                    )
                  )
                )
              )
            )
            (exists (?j - building)
              (game-conserved
                (not
                  (< 1 1)
                )
              )
            )
            (and
              (forall (?m - (either cellphone bridge_block cd) ?n - ball ?n - game_object)
                (exists (?x - hexagonal_bin ?o - hexagonal_bin)
                  (game-optional
                    (adjacent ?p)
                  )
                )
              )
              (and
                (exists (?m - dodgeball)
                  (exists (?z - building)
                    (game-optional
                      (not
                        (in_motion ?z ?m)
                      )
                    )
                  )
                )
              )
              (and
                (and
                  (forall (?w - (either doggie_bed pyramid_block alarm_clock doggie_bed))
                    (game-conserved
                      (not
                        (in_motion ?p ?h)
                      )
                    )
                  )
                  (and
                    (forall (?x - pyramid_block)
                      (forall (?z - teddy_bear)
                        (game-conserved
                          (not
                            (not
                              (agent_holds ?z)
                            )
                          )
                        )
                      )
                    )
                  )
                  (forall (?i - hexagonal_bin)
                    (forall (?m - cube_block)
                      (game-conserved
                        (not
                          (and
                            (on ?i ?a)
                            (and
                              (< 6 (distance agent ?p))
                              (agent_holds ?p pink)
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?b - wall ?w - block)
        (at-end
          (or
            (object_orientation ?w)
            (< 1 (distance ?w desk))
          )
        )
      )
    )
    (preference preference2
      (exists (?o - hexagonal_bin)
        (then
          (once (and (agent_holds ?o) (agent_holds pink_dodgeball ?o) ) )
          (hold-while (not (on ?o) ) (not (same_color ?o ?o) ) )
          (hold (not (and (agent_holds ?o) (exists (?n - shelf) (agent_holds ?o) ) ) ) )
        )
      )
    )
    (preference preference3
      (exists (?e - chair)
        (then
          (once (in ?e) )
          (once (in_motion ?e) )
          (once (in ?e) )
        )
      )
    )
  )
)
(:terminal
  (>= 18 10 )
)
(:scoring
  3
)
)

(define (game game-id-200) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-conserved
      (not
        (equal_z_position ?xxx)
      )
    )
    (game-optional
      (in_motion ?xxx ?xxx ?xxx ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?f - teddy_bear)
        (at-end
          (in_motion ?f)
        )
      )
    )
    (forall (?b ?k - teddy_bear)
      (and
        (preference preference2
          (exists (?d - wall)
            (then
              (once (not (in ?d) ) )
              (hold (in_motion ?d) )
              (once (agent_holds ?k ?b) )
            )
          )
        )
        (preference preference3
          (exists (?a - dodgeball)
            (then
              (any)
              (hold-while (in_motion ?k ?k) (and (and (and (and (adjacent ?b ?k) (in_motion floor) (agent_holds ?a) ) ) (not (agent_holds ?k) ) ) (or (in ?b ?a) (and (adjacent ?a ?a) (not (not (agent_holds bed ?a) ) ) ) (in_motion ?b ?b) ) (not (agent_holds ?k ?k ?b) ) ) )
            )
          )
        )
      )
    )
    (preference preference4
      (exists (?y - hexagonal_bin ?e - game_object)
        (then
          (once (< (distance desk agent) (distance room_center desk)) )
          (hold-while (same_color ?e ?e) (in ?e) (and (agent_holds ?e) (= (distance ?e side_table)) ) )
          (once (agent_holds ?e) )
        )
      )
    )
    (preference preference5
      (exists (?f - game_object)
        (then
          (once (same_type ?f) )
          (hold (in ?f ?f) )
          (once (on ?f) )
        )
      )
    )
    (forall (?s - block ?x - hexagonal_bin)
      (and
        (preference preference6
          (exists (?l - (either yellow_cube_block cd) ?b - hexagonal_bin)
            (then
              (once (on ?b) )
              (once (and (not (and (adjacent ?x ?x) (on ?b) ) ) (on agent) ) )
              (once (and (touch ?b) (in_motion ?b ?b) ) )
            )
          )
        )
        (preference preference7
          (at-end
            (on ?x)
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= 3 (+ 50 (count preference2:dodgeball) )
    )
    (< 100 4 )
    (or
      (>= 4 (count-shortest preference6:blue_dodgeball) )
      (> (* (count preference2:beachball:pink_dodgeball) (count preference5:dodgeball) )
        2
      )
    )
  )
)
(:scoring
  (count-once-per-objects preference2:blue_pyramid_block)
)
)

(define (game game-id-201) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (open right)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?h - sliding_door ?t - hexagonal_bin)
        (then
          (any)
          (once (agent_holds ?t) )
          (hold (and (not (in_motion ?t ?t right) ) (exists (?x ?b - game_object ?l - game_object) (not (agent_holds ?l ?l) ) ) ) )
          (once-measure (and (not (agent_holds blinds rug) ) (in_motion ?t) (and (< 1 1) (not (> 1 (distance ?t ?t)) ) ) (agent_holds ?t ?t) ) (distance ?t room_center) )
        )
      )
    )
  )
)
(:terminal
  (>= (external-forall-maximize (external-forall-maximize (* (* (count-once preference1:hexagonal_bin) 1 )
          10
        )
      )
    )
    (count preference1:dodgeball)
  )
)
(:scoring
  (* (count-same-positions preference1:blue_dodgeball:basketball) (- 5 )
  )
)
)

(define (game game-id-202) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (and
      (in_motion ?xxx)
      (touch ?xxx)
    )
  )
)
(:constraints
  (and
    (forall (?f - teddy_bear)
      (and
        (preference preference1
          (exists (?u - ball ?n - block)
            (at-end
              (agent_holds ?f agent)
            )
          )
        )
      )
    )
    (forall (?n - pillow ?o - hexagonal_bin)
      (and
        (preference preference2
          (then
            (hold-while (not (in_motion ?o desk) ) (exists (?u - dodgeball) (agent_holds front ?o) ) )
            (hold (not (and (not (in_motion ?o) ) (agent_holds ?o ?o) (agent_holds ?o) ) ) )
            (hold (not (not (in_motion desk agent) ) ) )
          )
        )
        (preference preference3
          (exists (?h - ball)
            (then
              (once (<= (distance ?h ?o) (distance ?h ?h)) )
              (once (not (on ?h) ) )
              (once (adjacent agent ?h ?o) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> 2 2 )
)
(:scoring
  (count-shortest preference1:yellow)
)
)

(define (game game-id-203) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (not
      (not
        (agent_holds ?xxx)
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - wall ?g - hexagonal_bin)
      (and
        (preference preference1
          (then
            (once (in_motion ?g) )
            (hold-to-end (in_motion ?g ?g) )
            (once (= 1 (distance desk ?g)) )
          )
        )
        (preference preference2
          (exists (?x - dodgeball)
            (then
              (once (in_motion ?g) )
              (once (and (= (distance ?x bed) (distance ?x) (distance agent agent)) (not (in floor) ) ) )
              (once (not (adjacent ?g) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (not
      (or
        (>= (* (count-overlapping preference2:dodgeball:hexagonal_bin) (total-score) )
          (count preference2:dodgeball)
        )
        (<= (= (count preference1:basketball:alarm_clock) (* (count-once-per-objects preference1:yellow:dodgeball:blue_dodgeball) (count-once-per-objects preference1:dodgeball) )
            (count-once-per-objects preference2:dodgeball)
          )
          (total-time)
        )
      )
    )
    (< (total-score) (* (count-once-per-objects preference1:wall:red) 1 )
    )
    (and
      (>= (count-same-positions preference2:yellow) (count preference2:doggie_bed) )
    )
  )
)
(:scoring
  6
)
)

(define (game game-id-204) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (and
      (< 1 (distance ?xxx ?xxx))
      (and
        (and
          (in_motion ?xxx ?xxx)
          (not
            (forall (?e - dodgeball)
              (and
                (between brown ?e)
                (and
                  (agent_holds ?e)
                  (and
                    (and
                      (not
                        (same_type ?e ?e)
                      )
                      (in_motion ?e ?e)
                    )
                    (not
                      (not
                        (agent_holds agent)
                      )
                    )
                    (on ?e)
                  )
                )
                (adjacent ?e)
              )
            )
          )
        )
        (in_motion ?xxx ?xxx)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?y - dodgeball ?a - chair)
        (then
          (hold (in floor ?a) )
          (once (not (on ?a) ) )
          (hold (not (and (between ?a ?a) (and (not (not (< (distance ?a ?a) 0) ) ) (agent_holds pink_dodgeball) ) ) ) )
        )
      )
    )
    (preference preference2
      (exists (?w - dodgeball)
        (then
          (once (and (in_motion ?w ?w) (and (agent_holds drawer ?w) (agent_holds ?w) ) ) )
          (hold (faces ?w) )
          (once (on ?w ?w) )
        )
      )
    )
    (preference preference3
      (exists (?w - cylindrical_block)
        (then
          (hold (same_color ?w) )
          (once (in ?w) )
          (once (exists (?x - teddy_bear) (on ?x green) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference3:beachball) (not (* (count-overlapping preference2:yellow:white) (* (total-time) (count-once-per-objects preference2:blue_cube_block) )
      )
    )
  )
)
(:scoring
  (* (count-once preference2:pink) 1 )
)
)

(define (game game-id-205) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (not
      (and
        (not
          (in_motion ?xxx)
        )
        (on ?xxx)
        (touch ?xxx ?xxx)
      )
    )
  )
)
(:constraints
  (and
    (forall (?v - cube_block)
      (and
        (preference preference1
          (exists (?t - building ?l - cube_block)
            (then
              (once (not (in_motion ?v) ) )
              (once (not (in ?v ?l) ) )
              (once (and (not (in ?l ?v) ) (not (in door ?v) ) ) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?t - dodgeball ?w - dodgeball)
        (then
          (once (agent_holds rug bed) )
          (hold (in_motion yellow) )
          (hold (in_motion ?w) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (not (* 2 (count preference1:purple) )
      )
      0
      (* (count-once-per-objects preference2:basketball) 10 )
    )
    (* (count preference2:blue_dodgeball) 10 )
  )
)
(:scoring
  (count-longest preference1:pink:alarm_clock:bed)
)
)

(define (game game-id-206) (:domain few-objects-room-v1)
(:setup
  (forall (?c - (either main_light_switch alarm_clock))
    (and
      (and
        (forall (?o - shelf)
          (and
            (exists (?a ?s ?i ?n ?u ?l ?x ?m ?g ?t - (either yellow doggie_bed blue_cube_block))
              (not
                (game-conserved
                  (in ?u ?i)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?x - triangular_ramp)
        (then
          (once (not (and (and (exists (?q - ball ?i - game_object) (on ?x ?x) ) (in_motion ?x) ) (in_motion ?x ?x) ) ) )
          (once (agent_holds ?x) )
          (hold (in_motion ?x ?x) )
        )
      )
    )
    (preference preference2
      (then
        (once (in_motion rug) )
        (once (in_motion ?xxx) )
        (once (agent_holds ?xxx) )
      )
    )
  )
)
(:terminal
  (or
    (> 6 2 )
    (or
      (>= 6 (* (count preference1:wall) (count preference2:book) )
      )
      (>= (* (count-once-per-objects preference2:dodgeball) (+ (count preference2:golfball) (count preference1:dodgeball) (count preference2:blue_dodgeball) (+ (count-once-per-objects preference2:red:side_table) (count-longest preference1:beachball) )
          )
          (- 5 )
        )
        3
      )
    )
    (not
      (> (not (count-once-per-objects preference1:hexagonal_bin) ) (* (count-measure preference2:dodgeball:dodgeball) (* (count preference1:dodgeball) 3 4 5 (count preference2:hexagonal_bin:dodgeball) (count-once preference2:bed) )
        )
      )
    )
  )
)
(:scoring
  (count preference2:red)
)
)

(define (game game-id-207) (:domain medium-objects-room-v1)
(:setup
  (exists (?o - teddy_bear ?k - hexagonal_bin)
    (and
      (and
        (forall (?y - doggie_bed ?l - hexagonal_bin ?m - block ?y - cube_block ?h - (either key_chain pyramid_block))
          (game-conserved
            (touch ?k top_shelf)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?u - game_object)
        (then
          (hold (not (or (agent_holds ?u ?u ?u) (not (not (on ?u) ) ) (not (not (same_type ?u) ) ) ) ) )
          (once (not (not (and (on desk ?u) (not (rug_color_under ?u ?u) ) ) ) ) )
          (once (= (distance ?u 10 ?u) (distance ?u ?u) (distance ?u side_table)) )
        )
      )
    )
    (preference preference2
      (exists (?d - triangular_ramp)
        (at-end
          (in_motion ?d)
        )
      )
    )
  )
)
(:terminal
  (and
    (> (- (+ (+ 1 (* (count preference2:purple:purple) 2 )
          )
          (total-time)
        )
      )
      1
    )
    (<= (count preference1:dodgeball:golfball) 7 )
    (not
      (> (count-once preference1:golfball) (* 7 100 )
      )
    )
  )
)
(:scoring
  (count-once-per-objects preference2:hexagonal_bin)
)
)

(define (game game-id-208) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (same_color floor agent)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?p - (either dodgeball beachball))
        (then
          (hold (on ?p) )
          (once (agent_holds ?p) )
          (hold-while (in_motion ?p) (in_motion ?p ?p) )
        )
      )
    )
  )
)
(:terminal
  (<= 4 10 )
)
(:scoring
  (count preference1:beachball)
)
)

(define (game game-id-209) (:domain many-objects-room-v1)
(:setup
  (forall (?x - (either pyramid_block pyramid_block pencil))
    (game-conserved
      (game_over bed)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?h - hexagonal_bin)
        (at-end
          (< 1 (distance ?h door))
        )
      )
    )
    (preference preference2
      (exists (?d - red_dodgeball ?f - ball)
        (then
          (once (in_motion ?f) )
          (once (adjacent_side ?f) )
          (once (in_motion ?f ?f) )
        )
      )
    )
  )
)
(:terminal
  (> (count preference1:green:pink_dodgeball) (count preference2:basketball) )
)
(:scoring
  10
)
)

(define (game game-id-210) (:domain medium-objects-room-v1)
(:setup
  (exists (?a - dodgeball)
    (and
      (game-optional
        (in_motion ?a ?a)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?k - doggie_bed ?x - hexagonal_bin ?s - hexagonal_bin)
        (then
          (hold (or (in_motion ?s ?s) (in_motion ?s ?s) (on ?s) (adjacent ?s) ) )
          (hold-while (touch ?s) (agent_holds ?s ?s) )
          (hold-for 6 (and (>= (distance agent ?s desk) (distance door desk)) (= 2 (distance desk ?s)) ) )
        )
      )
    )
    (preference preference2
      (exists (?w - (either dodgeball cellphone) ?c - hexagonal_bin)
        (at-end
          (agent_holds ?c)
        )
      )
    )
    (forall (?c - building)
      (and
        (preference preference3
          (exists (?o - (either cylindrical_block chair))
            (at-end
              (agent_holds ?c ?o)
            )
          )
        )
        (preference preference4
          (exists (?k - block ?n - hexagonal_bin)
            (then
              (hold (not (in_motion ?c ?c) ) )
              (hold (agent_holds ?n ?c) )
              (once (forall (?u - hexagonal_bin) (adjacent ?u) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once preference4:orange) 3 )
)
(:scoring
  2
)
)

(define (game game-id-211) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (< 1 (distance desk room_center))
    )
    (game-conserved
      (not
        (and
          (on ?xxx ?xxx)
          (in_motion ?xxx ?xxx)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?u - shelf ?z - curved_wooden_ramp)
        (then
          (once (in_motion ?z ?z) )
          (once (agent_holds ?z) )
          (once (equal_x_position ?z ?z) )
          (hold-while (on ?z) (on ?z) )
        )
      )
    )
    (preference preference2
      (exists (?t - hexagonal_bin ?v - game_object)
        (then
          (hold-while (in ?v ?v) (and (not (and (on ?v ?v) (and (in_motion ?v ?v) (agent_holds ?v ?v) ) ) ) (in_motion ?v) ) (not (and (and (in_motion ?v ?v) (touch ?v ?v agent) ) (not (in ?v) ) ) ) (on ?v ?v) )
          (hold (not (in_motion ?v) ) )
          (hold (faces ?v ?v) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (external-forall-maximize (count-once-per-objects preference2:beachball) ) 10 )
  )
)
(:scoring
  (* (count preference1:pink) (- 6 )
    3
    (+ (count-once preference2:basketball) (external-forall-maximize 5 ) (count-measure preference2:block) 4 (external-forall-maximize (external-forall-maximize (* (* 10 (* (count-same-positions preference1:alarm_clock) (- (* (external-forall-maximize 2 ) (count-overlapping preference2:green) (count preference2:dodgeball:dodgeball) 0 (count preference2:red) (count-measure preference2:yellow:rug:book) )
                )
                (total-time)
              )
            )
            (count-longest preference2:dodgeball)
          )
        )
      )
      (* (external-forall-maximize (count preference1:dodgeball) ) (count preference2:yellow) 3 )
      1
    )
    (= (* (+ 2 (+ (+ (* (count preference2:blue_pyramid_block:golfball:pink_dodgeball) (count-once-per-objects preference1:blue_dodgeball) )
              (+ (count-overlapping preference2:basketball) (not (count-once preference1:basketball) ) 3 )
            )
          )
        )
        10
      )
      5
      100
    )
    (* (count-once preference1:triangle_block) (count preference1:cube_block) )
    6
  )
)
)

(define (game game-id-212) (:domain many-objects-room-v1)
(:setup
  (forall (?j - building ?g - hexagonal_bin)
    (forall (?i - ball)
      (exists (?l - hexagonal_bin)
        (not
          (game-optional
            (in_motion ?i)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?q - curved_wooden_ramp)
        (at-end
          (same_color ball)
        )
      )
    )
    (forall (?z - game_object)
      (and
        (preference preference2
          (exists (?o - (either basketball watch) ?c - ball)
            (then
              (once (agent_holds bed) )
              (once (in_motion agent ?z) )
              (hold (not (and (touch ?c ?c) (or (same_color ?z) (adjacent ?c ?c) (same_color ?c) ) (not (in_motion ?c) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference2:pink_dodgeball) 5 )
)
(:scoring
  (count preference2:pink)
)
)

(define (game game-id-213) (:domain medium-objects-room-v1)
(:setup
  (exists (?t - red_dodgeball)
    (exists (?i - dodgeball ?w - drawer ?w - wall ?v - dodgeball ?h - desk_shelf)
      (game-conserved
        (not
          (not
            (and
              (or
                (and
                  (> 2 (distance ?t ?t front))
                  (toggled_on ?h ?t)
                  (and
                    (and
                      (and
                        (and
                          (and
                            (and
                              (agent_holds bed)
                              (adjacent ?h)
                            )
                            (in_motion bed)
                          )
                          (and
                            (in_motion ?h ?h)
                            (and
                              (not
                                (and
                                  (agent_holds ?h)
                                  (in ?t)
                                  (in_motion ?t)
                                )
                              )
                              (agent_holds )
                            )
                            (and
                              (not
                                (and
                                  (and
                                    (in ?h)
                                  )
                                  (agent_holds ?h)
                                  (and
                                    (or
                                      (adjacent ?h ?t)
                                      (object_orientation bed)
                                    )
                                  )
                                  (not
                                    (on ?t)
                                  )
                                  (in_motion ?h desk rug)
                                  (in_motion ?h)
                                  (and
                                    (forall (?b - wall)
                                      (in_motion ?b ?h ?t)
                                    )
                                    (in_motion ?h ?t)
                                  )
                                  (not
                                    (not
                                      (not
                                        (and
                                          (not
                                            (and
                                              (and
                                                (object_orientation ?h)
                                                (exists (?a - dodgeball ?w - cube_block)
                                                  (adjacent_side ?h ?t)
                                                )
                                              )
                                              (exists (?d - hexagonal_bin ?o - hexagonal_bin)
                                                (in_motion ?o agent)
                                              )
                                            )
                                          )
                                          (adjacent ?h bed)
                                        )
                                      )
                                    )
                                  )
                                  (on ?h)
                                  (in blue ?t)
                                )
                              )
                              (in_motion ?t)
                            )
                            (in_motion ?t)
                            (is_setup_object ?h ?h)
                            (not
                              (and
                                (in_motion desk ?h)
                                (forall (?q - pyramid_block)
                                  (adjacent desk)
                                )
                                (not
                                  (and
                                    (agent_holds ?h ?t)
                                    (not
                                      (in_motion ?t)
                                    )
                                  )
                                )
                                (and
                                  (agent_holds ?t ?h)
                                  (and
                                    (>= (distance ?h agent) (distance ?t ?t ?h))
                                    (in_motion ?h)
                                  )
                                )
                                (agent_holds ?h ?t)
                                (in_motion ?h ?h)
                              )
                            )
                            (not
                              (in_motion ?t ?h)
                            )
                            (not
                              (adjacent ?h)
                            )
                          )
                        )
                        (not
                          (agent_holds ?t)
                        )
                      )
                      (in_motion ?h)
                    )
                    (in_motion ?h)
                  )
                  (agent_holds ?t agent)
                )
                (in_motion ?h ?t ?h)
              )
              (agent_holds ?t top_shelf)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?m - teddy_bear)
        (then
          (hold (and (and (and (on ?m) (and (agent_holds agent ?m) (in_motion agent) ) ) (and (not (agent_holds ?m ?m) ) (rug_color_under ?m agent) ) ) (not (in_motion ?m) ) ) )
          (once (agent_holds ?m top_shelf) )
          (once (and (rug_color_under brown ?m) (or (not (and (not (and (on ?m ?m) (and (not (not (exists (?u - curved_wooden_ramp ?k - pillow) (in_motion back) ) ) ) (in_motion ?m ?m) ) ) ) (agent_holds ?m bed) ) ) (in_motion pink_dodgeball) ) ) )
        )
      )
    )
    (forall (?t - teddy_bear ?o - ball)
      (and
        (preference preference2
          (exists (?g ?e - hexagonal_bin)
            (then
              (hold (in_motion ?g) )
              (once (and (not (and (< 2 1) (in ?g) ) ) (not (agent_holds ?e ?o) ) (not (not (and (in agent ?g) (not (in agent door) ) ) ) ) ) )
              (once (not (and (< (distance room_center 8 room_center) (distance agent ?o)) (and (>= (distance room_center ?g) 1) (and (agent_holds ?e ?g) (>= 9 1) ) (touch ?o agent) ) ) ) )
            )
          )
        )
        (preference preference3
          (exists (?c - hexagonal_bin)
            (then
              (hold (not (and (above ?o ?o) (on ?o) ) ) )
              (once (and (in_motion yellow) (= 1 0.5) ) )
              (once (in_motion ?c ?o ?o) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:dodgeball) (count-shortest preference2:basketball:bed) )
)
(:scoring
  (- (* (count-once-per-objects preference2:pink) (count-once preference3:basketball) )
  )
)
)

(define (game game-id-214) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (in_motion ?xxx ?xxx)
  )
)
(:constraints
  (and
    (forall (?t - block)
      (and
        (preference preference1
          (exists (?w - hexagonal_bin ?m - building ?p - shelf)
            (then
              (once (not (on upright desk) ) )
              (hold (< (distance ?t) (distance )) )
              (once (> 1 1) )
            )
          )
        )
        (preference preference2
          (exists (?n - curved_wooden_ramp)
            (then
              (once (and (on ?n ?n) (and (between ?n ?n) (and (< (distance side_table agent ?n) 7) (same_color ?t ?t) ) ) (and (and (adjacent_side ?n) (and (in ?n) (on ?n bed) ) ) (and (on ?t) (and (not (and (not (is_setup_object agent ?n) ) (on ?t ?n) (adjacent ?n ?n) ) ) (and (in_motion pillow) (adjacent ?t) ) ) ) ) ) )
              (hold (not (agent_holds ?t) ) )
              (hold (adjacent agent bridge_block) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?q - ball ?z - (either desktop bed))
        (then
          (once (in ?z) )
          (once (and (adjacent rug ?z) (< 1 4) ) )
          (once (and (not (agent_holds ?z) ) (in_motion ?z ?z) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (<= (count preference1:hexagonal_bin) (count-overlapping preference3:hexagonal_bin) )
    (>= (count-increasing-measure preference3:basketball) (* (* (count preference2:alarm_clock) (* 60 10 (count preference2:dodgeball) (count-total preference2:pink:dodgeball) )
        )
        (count-once-per-objects preference1:hexagonal_bin:pink)
      )
    )
  )
)
(:scoring
  2
)
)

(define (game game-id-215) (:domain many-objects-room-v1)
(:setup
  (exists (?t - dodgeball ?w - dodgeball)
    (and
      (game-conserved
        (rug_color_under ?w ?w)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?i - hexagonal_bin)
        (then
          (once (and (on ?i) (agent_holds ?i) ) )
          (once (not (= (distance room_center desk) 1 1) ) )
          (hold-while (< 10 5) (in bed ?i) (not (and (not (object_orientation ?i) ) (and (agent_holds ?i) (in_motion ?i ?i ?i) ) ) ) (and (not (not (agent_holds ?i) ) ) (not (> 1 (distance ?i ?i)) ) (and (and (> (distance desk ?i) 10) (not (in pink_dodgeball upright) ) (not (in_motion bed ?i) ) (and (and (and (and (same_type ?i) (>= 1 (distance ?i 10)) ) ) (> 1 2) ) (not (not (and (same_object ?i ?i) (in_motion ?i) (in ?i) (in_motion ?i ?i) (= 1 (distance ?i room_center)) (>= 0.5 (distance 0 room_center)) (exists (?s - hexagonal_bin ?t - hexagonal_bin) (not (adjacent block) ) ) ) ) ) ) (not (forall (?j - building ?x - hexagonal_bin) (on ?i) ) ) (same_color ?i) (agent_holds agent ?i) ) (and (agent_holds agent) (not (> (distance door 10) (distance room_center 1)) ) ) ) ) )
        )
      )
    )
    (preference preference2
      (exists (?n - hexagonal_bin)
        (then
          (once (not (not (and (in front) (on agent) ) ) ) )
          (hold (and (and (is_setup_object ) (not (touch ?n) ) ) (< 1 (distance room_center ?n)) ) )
          (once (in_motion south_west_corner) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (total-score) (count-increasing-measure preference2:pink) )
    (and
      (not
        (not
          (>= (+ (count-once preference1:dodgeball) )
            1
          )
        )
      )
    )
  )
)
(:scoring
  1
)
)

(define (game game-id-216) (:domain few-objects-room-v1)
(:setup
  (exists (?i - color ?k - cube_block)
    (game-conserved
      (in_motion ?k)
    )
  )
)
(:constraints
  (and
    (forall (?v - curved_wooden_ramp ?u ?k - ball)
      (and
        (preference preference1
          (exists (?c - dodgeball ?l - (either blue_cube_block pink) ?s - hexagonal_bin)
            (at-end
              (not
                (or
                  (< 1 1)
                  (agent_holds desk)
                )
              )
            )
          )
        )
        (preference preference2
          (exists (?h - pyramid_block)
            (then
              (once (not (in_motion ?u) ) )
              (hold (exists (?f - hexagonal_bin ?a - shelf ?e - block) (equal_x_position ?e) ) )
              (once (in_motion ?h agent) )
            )
          )
        )
        (preference preference3
          (exists (?g - ball)
            (then
              (once (in_motion agent) )
              (once (on ?g) )
              (once (in_motion ?k) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (count-increasing-measure preference2:blue_pyramid_block) (count-same-positions preference1:pink_dodgeball) )
)
(:scoring
  5
)
)

(define (game game-id-217) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (and
      (in_motion ?xxx)
      (in_motion ?xxx ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?a ?p - dodgeball)
        (then
          (once (and (agent_holds ?p ?p) (and (or (and (in_motion ?p ?a) (not (object_orientation ?p rug) ) (and (agent_holds ?a) (and (>= (distance_side door room_center) (distance ?a ?a)) (in ?a) (not (or (agent_holds ?a) ) ) ) ) ) (in_motion ?p) ) (and (not (agent_holds rug) ) (adjacent ?p ?a) ) ) (adjacent desk) (and (> 9 (distance ?p 5)) (and (agent_holds ?a ?p) (on ?a ?a) ) ) ) )
          (hold (agent_holds ?p) )
          (once (in_motion tan block) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (and 3 (+ (count-once-per-objects preference1:yellow) (count-same-positions preference1:beachball) )
        (count-once-per-objects preference1:yellow)
      )
      (+ (* 4 (count preference1:basketball) )
        (count-total preference1:pink)
      )
    )
    2
  )
)
(:scoring
  4
)
)

(define (game game-id-218) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (and
        (and
          (exists (?n - doggie_bed ?q - ball)
            (game-conserved
              (in desk ?q)
            )
          )
        )
        (exists (?p ?k ?d - hexagonal_bin)
          (game-optional
            (in ?p)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?w - hexagonal_bin)
      (and
        (preference preference1
          (at-end
            (in_motion ?w)
          )
        )
      )
    )
  )
)
(:terminal
  (>= 7 (- 0 )
  )
)
(:scoring
  (+ (count-once-per-objects preference1:beachball:triangle_block) (+ 8 (+ (+ 2 6 )
        (* 0 2 )
      )
      (count preference1:dodgeball)
    )
  )
)
)

(define (game game-id-219) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (not
      (on ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?v - hexagonal_bin ?n - (either cylindrical_block game_object) ?b - (either alarm_clock triangle_block) ?d - blue_cube_block)
        (then
          (once (in_motion ?d ?d) )
          (once (above ?d) )
          (hold (in_motion desk desk ?d) )
        )
      )
    )
    (forall (?t - (either block))
      (and
        (preference preference2
          (exists (?w ?l - hexagonal_bin)
            (then
              (once (exists (?s - tall_cylindrical_block) (between ?l) ) )
              (hold-while (not (in ?l ?t) ) (in_motion ?t) )
              (once (agent_holds ?l) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 2 (* (count-total preference2:tan) 2 (count-once-per-objects preference1:golfball:red) )
    )
    (>= 10 10 )
  )
)
(:scoring
  (* (- (- 10 )
    )
    10
  )
)
)

(define (game game-id-220) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?o ?h - dodgeball)
      (and
        (game-optional
          (in_motion ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?w - hexagonal_bin)
        (then
          (once (agent_holds ?w) )
          (once (in_motion ?w ?w) )
          (once (and (in ?w) (or (agent_holds ?w agent) (not (in ?w) ) (and (in_motion agent) (not (agent_holds ?w ?w) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 5 )
    (count-once-per-objects preference1:triangle_block)
  )
)
(:scoring
  1
)
)

(define (game game-id-221) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (and
        (game-optional
          (agent_holds ?xxx ?xxx)
        )
        (exists (?o - dodgeball)
          (game-optional
            (in ?o)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?s - ball ?g - doggie_bed)
      (and
        (preference preference1
          (exists (?c - cube_block)
            (then
              (hold (< (distance ?c ?g) (distance ?g desk)) )
              (once (agent_holds desk ?g) )
              (once (agent_holds ?c ?g) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?b - flat_block)
        (then
          (once (agent_holds ?b ?b) )
          (hold-while (and (on ?b) (and (not (and (or (exists (?k - (either mug teddy_bear) ?m - doggie_bed) (between ?m) ) ) (exists (?c - game_object ?t ?d - ball) (in_motion pink_dodgeball) ) ) ) (on ?b ?b) (not (on ?b) ) (not (agent_holds ?b) ) (and (on ?b agent) (and (in ?b ?b) (in_motion ?b ?b) ) ) (in_motion ?b ?b) (agent_holds bed ?b) ) ) (on ?b) (not (and (adjacent ?b ?b) (and (and (not (object_orientation ?b) ) (in_motion ?b) ) (not (touch ?b) ) ) ) ) )
          (hold (between ?b) )
        )
      )
    )
  )
)
(:terminal
  (or
    (= (total-score) (count-increasing-measure preference2:blue_dodgeball) )
    (>= (count-once-per-objects preference2:dodgeball) (count-once-per-objects preference2:dodgeball) )
  )
)
(:scoring
  (+ (count-unique-positions preference2:pyramid_block:yellow) 5 )
)
)

(define (game game-id-222) (:domain many-objects-room-v1)
(:setup
  (forall (?e - bridge_block ?h - hexagonal_bin)
    (exists (?l - hexagonal_bin)
      (game-conserved
        (on ?h)
      )
    )
  )
)
(:constraints
  (and
    (forall (?n - dodgeball)
      (and
        (preference preference1
          (then
            (hold (not (forall (?k - hexagonal_bin) (agent_holds ?k ?k) ) ) )
            (once (not (or (adjacent_side ?n) (not (agent_holds ?n) ) (agent_holds ?n) (and (not (= 4 0 (distance ?n ?n) 1) ) (and (agent_holds ?n west_wall) (< (distance side_table ?n) 1) ) ) ) ) )
            (once (and (and (and (agent_holds ?n) (agent_holds ?n) ) (not (adjacent ?n) ) ) (in_motion ?n) (in_motion ?n) ) )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-unique-positions preference1:red) (* (+ (count preference1:pink_dodgeball) (* 4 (count preference1:alarm_clock:book) )
        (count-once-per-objects preference1:beachball:dodgeball:blue_dodgeball)
      )
      (count preference1:basketball)
    )
  )
)
(:scoring
  10
)
)

(define (game game-id-223) (:domain few-objects-room-v1)
(:setup
  (and
    (game-conserved
      (agent_holds agent ?xxx)
    )
    (game-optional
      (and
        (< (distance 10 room_center) (distance desk ?xxx))
        (on ?xxx)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?f - (either hexagonal_bin pyramid_block) ?x - dodgeball ?f - building)
        (at-end
          (in_motion ?f)
        )
      )
    )
    (forall (?c - hexagonal_bin ?b - hexagonal_bin)
      (and
        (preference preference2
          (exists (?s - pyramid_block)
            (then
              (once (and (agent_holds ?b ?b) (and (and (and (>= 1 (distance ?s agent ?b)) (in ?s) ) (agent_holds agent) ) (= 7 (distance ?s agent)) ) (rug_color_under ?s ?s) ) )
              (hold (in_motion ?b) )
              (once (in ?b) )
            )
          )
        )
        (preference preference3
          (exists (?k - (either basketball floor cellphone))
            (at-end
              (< (distance desk ?b) 7)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 1 2 )
    (> 2 (count preference1:bed:dodgeball) )
    (> 1 (- (count-once-per-objects preference3:hexagonal_bin) )
    )
  )
)
(:scoring
  (- (count preference2:dodgeball) )
)
)

(define (game game-id-224) (:domain few-objects-room-v1)
(:setup
  (and
    (game-conserved
      (and
        (in ?xxx desk)
        (agent_holds ?xxx ?xxx)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?q ?f - (either cd cellphone bed))
        (at-end
          (exists (?o - hexagonal_bin)
            (in pillow)
          )
        )
      )
    )
    (preference preference2
      (then
        (hold-to-end (adjacent agent) )
        (hold (and (or (in_motion ?xxx ?xxx) (rug_color_under ?xxx ?xxx) ) (and (in_motion agent ?xxx) ) ) )
        (once (or (in_motion bed ?xxx) (in_motion ?xxx) ) )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference2:dodgeball) (* (* 4 (count-once-per-external-objects preference2:yellow) )
      (count preference1:dodgeball)
      60
      3
      (count-once-per-objects preference1:basketball)
      (= (= 7 )
        (+ 30 (* (count-longest preference1:pink) (* (+ (* (- (count-shortest preference1:pink) )
                  (* (* (count preference2:yellow) 2 (count preference1:pink) 2 )
                    2
                  )
                )
                (/
                  (/
                    (- (external-forall-maximize (count preference2:dodgeball) ) )
                    40
                  )
                  (count preference1:red)
                )
              )
              (count-once preference2:pink)
            )
          )
        )
      )
      (total-score)
    )
  )
)
(:scoring
  (* (count preference2:alarm_clock) )
)
)

(define (game game-id-225) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (in_motion ?xxx ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?q - ball)
        (then
          (hold (agent_holds ?q ?q) )
          (hold (in_motion ?q) )
        )
      )
    )
    (preference preference2
      (then
        (hold (is_setup_object agent agent) )
        (hold (not (in_motion ?xxx agent) ) )
        (once (in_motion ?xxx ?xxx) )
      )
    )
    (preference preference3
      (exists (?w - (either book cube_block golfball))
        (at-end
          (agent_holds ?w)
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count preference1:blue_dodgeball) (- (count-once preference1:basketball) )
    )
    (>= 5 (+ (* (or (+ (count-once-per-objects preference1:pink) 8 )
            (count preference2:yellow)
            300
          )
          10
        )
        3
        (* 3 3 )
      )
    )
    (>= (count preference3:pink) 6 )
  )
)
(:scoring
  2
)
)

(define (game game-id-226) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (and
      (in ?xxx)
      (in_motion ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?q - red_dodgeball)
        (at-end
          (agent_holds agent ?q)
        )
      )
    )
  )
)
(:terminal
  (>= (* 5 (= (* (* (count-once-per-objects preference1:dodgeball) 10 (* (count preference1:basketball) (count preference1:dodgeball) )
          )
          6
        )
        (+ (not (+ (count preference1:basketball:pyramid_block) 2 (count preference1:yellow:dodgeball) )
          )
          (total-score)
        )
      )
    )
    (count-total preference1:doggie_bed)
  )
)
(:scoring
  (count preference1:dodgeball)
)
)

(define (game game-id-227) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (agent_holds ?xxx)
  )
)
(:constraints
  (and
    (forall (?s - ball)
      (and
        (preference preference1
          (exists (?i - bridge_block ?w - teddy_bear)
            (at-end
              (same_color agent ?w bed)
            )
          )
        )
        (preference preference2
          (exists (?j - pillow ?j ?x - dodgeball)
            (at-end
              (> 1 2)
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?g ?j - dodgeball)
        (then
          (forall-sequence (?f - hexagonal_bin ?r - (either bridge_block pyramid_block))
            (then
              (once (in_motion agent) )
              (once (touch ?r) )
            )
          )
          (hold (and (same_color ?j) (adjacent ?g) ) )
          (once (and (in ?j ?j) (in_motion ?j) ) )
        )
      )
    )
    (forall (?k - cube_block ?f - (either doggie_bed doggie_bed))
      (and
        (preference preference4
          (then
            (once-measure (and (>= 6 1) (not (and (not (not (touch ?f) ) ) (exists (?r - wall) (not (touch blue) ) ) ) ) ) (distance room_center) )
            (once (in_motion bed) )
            (once (above ?f) )
          )
        )
      )
    )
    (preference preference5
      (exists (?k - beachball ?b - hexagonal_bin)
        (then
          (once (in_motion ?b) )
          (once (in_motion agent) )
          (any)
          (once (in_motion ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (* 7 (total-time) (* (count-once-per-objects preference3:yellow_cube_block) (count preference4:green) )
      )
      8
    )
    (count preference2:block)
  )
)
(:scoring
  10
)
)

(define (game game-id-228) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (not
      (agent_holds ?xxx rug)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?r - doggie_bed)
        (then
          (hold (agent_holds ?r green) )
          (hold (and (and (not (and (and (adjacent agent) ) (agent_holds ?r) ) ) (in_motion ?r ?r) ) ) )
          (once (and (and (in_motion ?r ?r) (in_motion ?r) ) (not (in_motion ?r) ) ) )
        )
      )
    )
    (forall (?b - desk_shelf)
      (and
        (preference preference2
          (exists (?m - game_object)
            (then
              (once (and (touch ?b) (agent_holds ?b rug) ) )
              (once (and (and (agent_holds ?m ?m) ) (not (in_motion ?m) ) ) )
              (once (and (same_type ?b ?m) (< (distance door ?m) (distance_side ?m 0)) ) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?w - cube_block)
        (then
          (hold-while (not (exists (?h - ball) (not (agent_holds ?w) ) ) ) (in ?w) )
          (once (same_type ?w) )
          (once (agent_holds ?w ?w) )
          (once (agent_holds ?w ?w) )
        )
      )
    )
  )
)
(:terminal
  (or
    (< 1 10 )
    (< (* (+ (* 7 )
          (* (count-once-per-external-objects preference2:golfball) (* (count-once-per-objects preference2:dodgeball) (* (count-once-per-objects preference1:alarm_clock) (count preference2:dodgeball) (count preference2:rug) (count preference2:golfball) )
            )
          )
        )
        (count preference3:blue_dodgeball)
      )
      (- (* (* (* (count-once-per-objects preference2:pink:beachball) (count-once-per-objects preference3:dodgeball:beachball) )
            (count preference2:doggie_bed)
            3
          )
          3
        )
      )
    )
    (> 2 1 )
  )
)
(:scoring
  5
)
)

(define (game game-id-229) (:domain few-objects-room-v1)
(:setup
  (forall (?a - hexagonal_bin)
    (game-conserved
      (and
        (in ?a ?a)
        (adjacent_side ?a)
        (on bed)
      )
    )
  )
)
(:constraints
  (and
    (forall (?k - hexagonal_bin)
      (and
        (preference preference1
          (exists (?v - hexagonal_bin ?h - shelf)
            (then
              (once (on ?k) )
              (hold-while (and (and (adjacent ?k) (is_setup_object ?k ?k) ) (agent_holds ?h) ) (= (distance ?h ?k) 0.5 (distance )) )
              (once (agent_holds agent ?h) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (or
        (>= (count preference1) 10 )
        (> (> 5 (* (* (count preference1:blue_cube_block:yellow) (- 9 )
              )
              (= (count-once-per-objects preference1:pyramid_block:golfball) (count preference1:blue_dodgeball:red_pyramid_block) (count preference1:beachball) )
            )
          )
          (count-measure preference1:blue_dodgeball)
        )
        (>= (count preference1:doggie_bed) (* 3 (count preference1:dodgeball) (count-once-per-objects preference1:tall_cylindrical_block) )
        )
      )
      (>= 6 (count preference1:dodgeball) )
    )
    (> (* 8 0.5 )
      (* (* (* 100 (count preference1:dodgeball) )
          3
        )
        (total-time)
        (* 10 5 (external-forall-maximize (count preference1:yellow:basketball) ) )
        (* (external-forall-maximize 10 ) 18 )
        (> 4 (- (= 50 (* (* (external-forall-minimize (* 10 )
                  )
                  1
                )
                (/
                  (count preference1:dodgeball:dodgeball)
                  6
                )
                9
                40
                9
                (* (count preference1:purple:pink_dodgeball) (count-once-per-objects preference1) )
              )
            )
          )
        )
        (- 5 )
      )
    )
  )
)
(:scoring
  (count preference1:beachball)
)
)

(define (game game-id-230) (:domain many-objects-room-v1)
(:setup
  (exists (?m - (either red cd))
    (forall (?g - hexagonal_bin)
      (game-optional
        (in_motion agent ?g)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?u - hexagonal_bin)
        (then
          (once (and (in_motion ?u) (not (in_motion ?u ?u) ) ) )
          (once (not (in_motion ?u) ) )
          (hold (and (not (on ?u) ) (agent_holds ?u) (not (adjacent_side rug) ) ) )
        )
      )
    )
    (preference preference2
      (exists (?z - cube_block ?j - hexagonal_bin ?j - doggie_bed ?q - hexagonal_bin)
        (then
          (once (on ?q ?q) )
          (once (not (in_motion ?q) ) )
          (once (on ?q ?q) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 10 3 )
    (* (* 5 (count-once preference2:pink) )
      0
    )
  )
)
(:scoring
  (count-once-per-objects preference2:yellow)
)
)

(define (game game-id-231) (:domain few-objects-room-v1)
(:setup
  (exists (?z - dodgeball)
    (forall (?j - (either basketball book))
      (game-optional
        (and
          (exists (?d - book ?s - doggie_bed ?n - doggie_bed)
            (and
              (= 7 9)
              (and
                (agent_holds ?z ?j)
                (and
                  (in_motion ?j)
                  (in ?j)
                )
              )
            )
          )
          (in_motion ?z ?z)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?e - ball)
        (at-end
          (same_color ?e ?e)
        )
      )
    )
    (preference preference2
      (exists (?r - golfball)
        (then
          (once (agent_holds ?r) )
          (hold (and (in ?r) (> 1 (distance ?r 5)) ) )
          (once (equal_x_position ?r) )
        )
      )
    )
    (preference preference3
      (exists (?c - hexagonal_bin)
        (then
          (once (not (<= 1 1) ) )
          (once (< 4 (distance desk ?c)) )
          (once (not (and (in_motion ?c) (and (in_motion ?c ?c) (agent_holds ?c) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count preference3:beachball) (count-increasing-measure preference1:pink) )
    (not
      (or
        (>= (total-score) (count preference3:dodgeball:golfball) )
        (>= (* (count preference3:blue_pyramid_block) (<= (* (* (count-once-per-objects preference2:pink_dodgeball:pink_dodgeball) (count preference3:green) )
                5
                (count-once-per-external-objects preference3:golfball)
              )
              (+ (* (* 5 (count-same-positions preference1) )
                  (+ 8 (total-score) )
                )
                (+ 5 (+ (external-forall-maximize (- (count-once-per-external-objects preference2:pink:blue_pyramid_block) )
                    )
                    (count-once-per-objects preference2:alarm_clock)
                  )
                )
              )
            )
          )
          2
        )
      )
    )
  )
)
(:scoring
  3
)
)

(define (game game-id-232) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?l ?f - hexagonal_bin ?f - doggie_bed)
      (and
        (forall (?i - dodgeball)
          (exists (?m - dodgeball ?g - pyramid_block ?a - hexagonal_bin)
            (and
              (game-conserved
                (agent_holds rug)
              )
            )
          )
        )
        (forall (?m - chair)
          (exists (?p - ball)
            (and
              (game-conserved
                (on ?f)
              )
              (forall (?x - hexagonal_bin)
                (exists (?e - drawer ?o ?g - (either cylindrical_block dodgeball book))
                  (exists (?r - ball ?i - block)
                    (game-optional
                      (exists (?w - tall_cylindrical_block)
                        (rug_color_under ?w ?w)
                      )
                    )
                  )
                )
              )
              (and
                (game-optional
                  (agent_holds pillow)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?x - (either hexagonal_bin key_chain) ?x - hexagonal_bin)
        (then
          (once (and (and (not (in ?x) ) (in ?x ?x ?x) ) (in ?x ?x) ) )
          (once (and (and (not (in ?x ?x) ) (not (not (in ?x) ) ) ) (< 1 (distance ?x ?x)) ) )
          (hold (touch color ?x) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (external-forall-maximize (total-score) ) (* (+ (total-time) (count-once-per-objects preference1:basketball:dodgeball) )
        1
      )
    )
    (> (count preference1:pink_dodgeball:red:dodgeball) (+ (> 30 (count-once-per-objects preference1:purple:red) )
        3
      )
    )
  )
)
(:scoring
  (count preference1:dodgeball)
)
)

(define (game game-id-233) (:domain few-objects-room-v1)
(:setup
  (forall (?y - hexagonal_bin ?g - dodgeball)
    (game-optional
      (agent_holds agent ?g)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?v - (either blue_cube_block block))
        (at-end
          (agent_holds ?v ?v)
        )
      )
    )
  )
)
(:terminal
  (<= (+ 3 (* (- 6 )
        (count preference1:doggie_bed)
      )
      (external-forall-maximize
        (count-once preference1:pink:beachball)
      )
    )
    3
  )
)
(:scoring
  (count-once preference1:basketball)
)
)

(define (game game-id-234) (:domain many-objects-room-v1)
(:setup
  (exists (?z - green_triangular_ramp)
    (game-optional
      (agent_holds ?z ?z)
    )
  )
)
(:constraints
  (and
    (forall (?g - triangular_ramp)
      (and
        (preference preference1
          (exists (?s - dodgeball)
            (then
              (hold-while (and (on ?g ?s) (in_motion ?s) ) (rug_color_under ?s) )
              (hold (in ?s) )
              (once (not (agent_holds ?s ?g) ) )
            )
          )
        )
        (preference preference2
          (exists (?t - triangular_ramp)
            (at-end
              (forall (?d - (either basketball dodgeball))
                (in_motion upright ?t)
              )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?n - block)
        (then
          (hold (touch ?n) )
          (once (in_motion ?n) )
          (hold (not (agent_holds ?n) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (or
        (or
          (or
            (and
              (>= 0 (count-same-positions preference2:side_table) )
            )
            (>= (+ (count-once-per-objects preference2) (* (count-once-per-external-objects preference3) (count preference1:basketball) )
              )
              (count preference2:red)
            )
            (>= 30 (count-once-per-objects preference2:purple:block) )
            (>= (* 1 (+ (count-longest preference3:dodgeball) (* (count preference1:beachball:hexagonal_bin:dodgeball) 5 )
                )
                (count-overlapping preference1:dodgeball)
                (* (* (and (- (count preference3:beachball) )
                    )
                    (count preference1)
                  )
                  (count preference3:yellow_cube_block:purple)
                )
              )
              (count preference1:doggie_bed:beachball)
            )
          )
          (> 8 2 )
        )
        (and
          (>= 3 1 )
          (>= 18 9 )
          (<= (total-score) (count preference2) )
        )
      )
    )
    (or
      (or
        (>= (+ (+ (count-once-per-objects preference3:pink_dodgeball) 180 )
            (* (count preference1:basketball:golfball) 3 (count-once-per-objects preference2:hexagonal_bin) (* (* (* (count preference3:blue_dodgeball) 2 )
                  10
                )
                (count-once-per-external-objects preference3:dodgeball:hexagonal_bin)
              )
            )
            (count preference1:purple)
          )
          (-
            (* (count-once-per-objects preference3:beachball:yellow) (count-once-per-objects preference1:yellow) )
            (* (count preference1:beachball:red) (* 10 (* (total-score) (* (count preference2:doggie_bed:pink) 10 )
                )
              )
            )
          )
        )
        (or
          (>= 30 (count preference1:golfball:dodgeball) )
          (>= 5 (+ (* (* (count preference1:beachball) (count-once-per-objects preference2:dodgeball) (count preference2:pink) (or 10 ) )
                (+ (- (* 4 (count-increasing-measure preference2:pink:dodgeball:beachball) (* (count-unique-positions preference1:cylindrical_block:dodgeball:white) (* (+ (count preference2:beachball) (* 10 (count preference1:pink:green) )
                          )
                          (+ 3 (- (count-once-per-objects preference3:alarm_clock:book:purple) )
                            2
                          )
                        )
                      )
                    )
                  )
                  (count-once preference3:dodgeball)
                )
              )
              60
            )
          )
          (>= (= 2 (count preference1:orange) )
            (+ (- (* (count-once-per-objects preference1:beachball) (count preference1:yellow) )
              )
              (count-once-per-objects preference3:tall_cylindrical_block:pink_dodgeball)
            )
          )
        )
      )
      (and
        (and
          (or
            (not
              (> (count-same-positions preference2) (count-once-per-objects preference2:golfball) )
            )
            (>= 10 (* (count preference2:pink_dodgeball:golfball) (count-once-per-objects preference3:dodgeball:orange) )
            )
          )
        )
      )
    )
    (or
      (or
        (or
          (>= (count-once-per-external-objects preference2:pink) 4 )
          (or
            (>= (* 1 5 )
              (total-time)
            )
            (>= (count preference3:wall) (* 4 (count preference2:pink) )
            )
          )
        )
      )
      (>= (count-once preference1:dodgeball) 3 )
    )
  )
)
(:scoring
  (* 1 20 )
)
)

(define (game game-id-235) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (agent_holds ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?c - hexagonal_bin ?m ?s - (either cube_block dodgeball triangular_ramp pillow basketball yellow_cube_block cube_block) ?g - cube_block ?c - shelf)
        (then
          (once (not (agent_holds ?c ?c) ) )
          (once (faces ?c) )
        )
      )
    )
  )
)
(:terminal
  (> (- (* (* 6 15 8 (count preference1:cube_block:dodgeball:top_drawer) )
        (= 5 )
      )
    )
    (* (count-once-per-objects preference1:yellow) (count-once-per-objects preference1:dodgeball) )
  )
)
(:scoring
  (count preference1:hexagonal_bin)
)
)

(define (game game-id-236) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (on ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?x - green_triangular_ramp ?f - wall)
        (then
          (once (in_motion ?f top_shelf) )
          (hold-while (and (in ?f ?f) ) (same_type ?f) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (count preference1:golfball) (* (count-once-per-objects preference1:beachball:pyramid_block) (count-once preference1:blue_dodgeball) )
      )
    )
    (or
      (or
        (>= (count-once preference1:book) (count preference1:golfball) )
        (= (count-once-per-objects preference1:beachball:side_table) (* (* (count-once-per-objects preference1:pink_dodgeball) 10 10 (+ 2 10 )
            )
            (- (count preference1:pink) )
          )
        )
      )
    )
  )
)
(:scoring
  (- (+ 1 (- (+ (count preference1:dodgeball) (+ (count preference1:red) 8 (- (external-forall-maximize (count-once-per-objects preference1:purple) ) )
            2
            (count-same-positions preference1:golfball)
            (count preference1:beachball)
          )
        )
      )
      (total-score)
    )
  )
)
)

(define (game game-id-237) (:domain few-objects-room-v1)
(:setup
  (exists (?q - chair)
    (forall (?k - hexagonal_bin ?u ?z - color)
      (exists (?x - dodgeball)
        (game-optional
          (not
            (not
              (and
                (and
                  (exists (?j - (either credit_card cylindrical_block))
                    (and
                      (exists (?e ?b - triangular_ramp)
                        (exists (?i - hexagonal_bin ?p - color ?v - hexagonal_bin ?s - shelf)
                          (not
                            (in_motion ?e)
                          )
                        )
                      )
                      (and
                        (not
                          (not
                            (agent_crouches ?z ?j)
                          )
                        )
                        (<= (distance 2 ?z) 1)
                      )
                    )
                  )
                  (in_motion pink ?u)
                )
                (agent_holds ?x)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?n - hexagonal_bin ?u - ball)
        (then
          (hold (not (on ?u ?u) ) )
          (hold (agent_holds ?u) )
          (once (not (agent_crouches agent ?u) ) )
        )
      )
    )
    (preference preference2
      (exists (?a - dodgeball ?w - dodgeball)
        (then
          (once (and (and (on ?w ?w) (in_motion ?w ?w) (agent_holds ?w ?w) ) (exists (?r - (either golfball dodgeball mug cellphone) ?h - building) (not (and (not (agent_holds ?w ?h) ) (and (exists (?b - curved_wooden_ramp) (and (not (not (not (on ?w ?w) ) ) ) (not (not (on ?w) ) ) (in_motion ?b) ) ) (agent_holds ?h) (forall (?v - doggie_bed) (not (not (exists (?p ?e - hexagonal_bin) (in pillow) ) ) ) ) ) ) ) ) ) )
          (once (in_motion upright ?w) )
          (hold (not (and (or (adjacent desk) (agent_holds ?w) ) (exists (?d - hexagonal_bin) (agent_holds ?w ?d) ) (not (in_motion ?w) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-overlapping preference2:dodgeball) (and 3 16 ) )
)
(:scoring
  (count-once preference2:blue_cube_block)
)
)

(define (game game-id-238) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (forall (?t - chair ?q - building)
        (exists (?k - chair ?w ?r ?h ?o ?x ?t - dodgeball ?f - dodgeball)
          (and
            (game-optional
              (on ?q ?f)
            )
          )
        )
      )
    )
    (game-conserved
      (in ?xxx ?xxx)
    )
    (exists (?d - hexagonal_bin)
      (game-conserved
        (in_motion ?d ?d)
      )
    )
  )
)
(:constraints
  (and
    (forall (?j - block)
      (and
        (preference preference1
          (exists (?v ?r - hexagonal_bin)
            (then
              (once (not (adjacent ?j) ) )
              (once (adjacent ?j) )
              (once (and (game_start ?j) (and (agent_holds ?r ?r) (in_motion ?j) ) ) )
            )
          )
        )
        (preference preference2
          (exists (?f - building)
            (then
              (once (agent_holds ?f ?j) )
              (hold (in ?f) )
              (once (not (same_object agent ?j) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (not
      (> 5 (total-score) )
    )
  )
)
(:scoring
  (count preference2:dodgeball:beachball)
)
)

(define (game game-id-239) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (not
      (and
        (not
          (not
            (agent_holds ?xxx)
          )
        )
        (and
          (agent_holds sideways)
          (agent_holds ?xxx ?xxx)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?x - (either mug book) ?x - hexagonal_bin)
      (and
        (preference preference1
          (then
            (hold (= (distance ?x ?x) (distance ?x ?x ?x) 1) )
            (hold (and (agent_holds ?x) (on upside_down) ) )
            (once (equal_z_position ?x ?x) )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once preference1:pink) (count-once preference1:alarm_clock:yellow_cube_block) )
)
(:scoring
  (* (* (total-time) (count preference1:dodgeball:dodgeball:golfball) )
    5
    4
  )
)
)

(define (game game-id-240) (:domain many-objects-room-v1)
(:setup
  (exists (?v - hexagonal_bin ?n - game_object)
    (game-conserved
      (in_motion ?n ?n)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?k ?h - block)
        (then
          (hold-while (and (in_motion ?h ?k) (in_motion ?h) ) (on ?h) )
          (once (on ?h) )
          (once (on agent ?k) )
        )
      )
    )
    (forall (?j - triangular_ramp ?c - dodgeball)
      (and
        (preference preference2
          (exists (?w - red_pyramid_block ?s - (either flat_block dodgeball))
            (then
              (once (not (not (exists (?i - block) (agent_holds ?s bed) ) ) ) )
              (hold (and (not (and (not (in_motion ?s ?s) ) (same_color ?s) (adjacent agent ?c) ) ) (and (not (on ?c ?s) ) (in ?c ?s) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< 5 (total-time) )
)
(:scoring
  15
)
)

(define (game game-id-241) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (and
      (not
        (and
          (and
            (or
              (in ?xxx)
              (in_motion ?xxx ?xxx)
            )
            (and
              (agent_holds ?xxx ?xxx)
              (not
                (not
                  (and
                    (in_motion ?xxx)
                    (agent_holds ?xxx ?xxx)
                  )
                )
              )
            )
          )
          (in_motion ?xxx)
        )
      )
      (in bed ?xxx)
      (agent_holds ?xxx)
    )
  )
)
(:constraints
  (and
    (forall (?n - game_object ?y - hexagonal_bin)
      (and
        (preference preference1
          (exists (?a - building)
            (then
              (once (and (adjacent ?y) (in_motion ?y) ) )
              (once (and (and (in ?a) (not (and (not (not (in ?a) ) ) (or (>= 2 1) ) ) ) (and (and (exists (?l - pillow) (agent_holds ?a) ) (not (on ?a ?y ?y) ) ) (>= 1 1) ) ) (on ?y) ) )
              (once (and (agent_holds ?y) (not (agent_holds upright ?a) ) ) )
            )
          )
        )
      )
    )
    (preference preference2
      (then
        (once (in agent ?xxx) )
        (once (not (agent_holds ?xxx) ) )
        (hold (not (not (not (on ?xxx ?xxx) ) ) ) )
      )
    )
  )
)
(:terminal
  (and
    (>= 1 4 )
  )
)
(:scoring
  (* (count preference1:dodgeball) (count preference2:dodgeball) )
)
)

(define (game game-id-242) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?f - beachball)
      (game-conserved
        (and
          (in_motion ?f)
          (agent_holds ?f)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?z - (either blue_cube_block chair))
      (and
        (preference preference1
          (exists (?p - hexagonal_bin)
            (then
              (once (not (on ?p ?p) ) )
              (once (on ?p) )
              (once (adjacent ?p ?z) )
            )
          )
        )
        (preference preference2
          (exists (?w - dodgeball ?n - dodgeball)
            (then
              (hold (same_object ?n) )
              (hold (agent_holds ?n ?z) )
              (hold (in_motion upright) )
            )
          )
        )
      )
    )
    (preference preference3
      (at-end
        (on ?xxx ?xxx ?xxx)
      )
    )
    (forall (?f - color ?i - (either cube_block pyramid_block) ?k ?c - dodgeball)
      (and
        (preference preference4
          (exists (?f ?t ?r - hexagonal_bin)
            (at-end
              (in_motion agent)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< (external-forall-minimize (count-once-per-objects preference1:white) ) 2 )
)
(:scoring
  (/
    (count-once-per-external-objects preference1:hexagonal_bin)
    (count-once-per-external-objects preference2:green:golfball)
  )
)
)

(define (game game-id-243) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?v - (either cube_block golfball yellow_cube_block key_chain doggie_bed alarm_clock blue_cube_block))
      (exists (?i - building)
        (exists (?t - hexagonal_bin)
          (game-optional
            (adjacent_side ?i)
          )
        )
      )
    )
    (and
      (and
        (or
          (and
            (forall (?d - wall)
              (game-conserved
                (is_setup_object ?d agent)
              )
            )
            (exists (?p - hexagonal_bin)
              (and
                (exists (?f - chair)
                  (forall (?d ?n ?r - cube_block)
                    (forall (?g - (either dodgeball cylindrical_block))
                      (game-conserved
                        (adjacent ?d ?r)
                      )
                    )
                  )
                )
              )
            )
          )
          (exists (?f - pillow ?r - (either alarm_clock cellphone))
            (exists (?q - chair)
              (game-optional
                (and
                  (on ?r ?r)
                  (not
                    (not
                      (agent_holds bed ?r)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?y - doggie_bed)
        (then
          (once (in_motion ?y) )
          (once-measure (not (in ?y) ) (distance room_center ?y) )
          (hold-while (agent_holds ?y) (not (in_motion ?y) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 9 (count preference1:dodgeball) )
)
(:scoring
  (>= (count-once preference1:dodgeball) (count-once-per-external-objects preference1:pyramid_block:cube_block) )
)
)

(define (game game-id-244) (:domain many-objects-room-v1)
(:setup
  (exists (?q - hexagonal_bin ?r - hexagonal_bin)
    (game-conserved
      (in ?r)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?b - (either dodgeball dodgeball hexagonal_bin) ?r - hexagonal_bin)
        (at-end
          (not
            (agent_holds ?r)
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:yellow:cube_block) (count-once-per-objects preference1:green) )
)
(:scoring
  (/
    7
    3
  )
)
)

(define (game game-id-245) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds ?xxx ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?w - game_object ?x ?b - watch)
        (then
          (once (on front) )
          (once (and (same_type ?x ?x) (in_motion ?x) ) )
          (once (on ?b) )
        )
      )
    )
    (preference preference2
      (then
        (once (agent_holds ?xxx) )
        (once (on ?xxx ?xxx) )
        (hold (adjacent_side ?xxx ?xxx) )
        (once (exists (?r - (either golfball triangle_block cube_block)) (agent_holds ?r ?r) ) )
      )
    )
    (preference preference3
      (exists (?b - blue_pyramid_block)
        (at-end
          (not
            (not
              (not
                (= (distance_side ?b) 1 1)
              )
            )
          )
        )
      )
    )
    (preference preference4
      (exists (?u - dodgeball)
        (then
          (once (on ?u) )
          (hold (not (is_setup_object ?u) ) )
          (hold-while (agent_holds ?u) (forall (?l - (either chair lamp) ?h - hexagonal_bin ?x - triangular_ramp) (on ?x ?u) ) (agent_holds ?u ?u block) )
        )
      )
    )
  )
)
(:terminal
  (or
    (not
      (>= (+ (count-once preference3:blue_dodgeball) (+ (* 8 300 )
            (count-once preference1:dodgeball:yellow)
          )
          180
          (count-once preference2:dodgeball:red)
        )
        (count preference2:green)
      )
    )
    (>= 3 (count preference1:beachball:basketball) )
  )
)
(:scoring
  1
)
)

(define (game game-id-246) (:domain few-objects-room-v1)
(:setup
  (exists (?q - hexagonal_bin)
    (exists (?e - (either key_chain ball) ?r - teddy_bear)
      (game-conserved
        (and
          (in_motion ?q)
          (exists (?n - hexagonal_bin ?m - hexagonal_bin ?w - building)
            (in floor)
          )
          (adjacent pink_dodgeball)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?f - ball)
        (at-end
          (on ?f ?f)
        )
      )
    )
  )
)
(:terminal
  (>= (external-forall-maximize (count-overlapping preference1:dodgeball) ) 5 )
)
(:scoring
  (count-once preference1:dodgeball)
)
)

(define (game game-id-247) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (forall (?c ?e - ball)
      (and
        (in_motion ?c)
        (in_motion ?e ?c)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?r - teddy_bear ?j - cube_block)
        (then
          (hold (agent_holds ?j) )
          (hold (not (agent_holds ?j) ) )
        )
      )
    )
    (preference preference2
      (exists (?f ?u ?c - cube_block ?q - hexagonal_bin)
        (then
          (once (agent_holds ?q) )
          (once (and (touch ?q) (in_motion ?q) ) )
          (once (agent_holds ?q ?q) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference2:blue_dodgeball) (* (+ 5 (count preference2:dodgeball) )
      30
    )
  )
)
(:scoring
  3
)
)

(define (game game-id-248) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?n ?b - dodgeball)
      (game-conserved
        (not
          (agent_holds ?b)
        )
      )
    )
    (game-conserved
      (is_setup_object ?xxx)
    )
    (game-conserved
      (on ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?h - dodgeball)
        (then
          (once (<= 1 1) )
          (hold-while (and (and (in_motion ?h ?h) (on ?h ?h) ) (is_setup_object ?h) ) (in_motion ?h) )
          (once (and (equal_z_position agent ?h) (exists (?p - hexagonal_bin ?t - block) (agent_holds ?h ?t) ) ) )
        )
      )
    )
    (preference preference2
      (exists (?p - chair ?q - (either yellow_cube_block golfball golfball))
        (then
          (once (not (agent_holds ?q) ) )
          (hold (in_motion ?q) )
          (once (adjacent ?q ?q) )
        )
      )
    )
  )
)
(:terminal
  (> (external-forall-maximize 2 ) (total-time) )
)
(:scoring
  (count-once-per-objects preference2:red)
)
)

(define (game game-id-249) (:domain few-objects-room-v1)
(:setup
  (forall (?j - wall)
    (game-conserved
      (on ?j)
    )
  )
)
(:constraints
  (and
    (forall (?p - shelf ?r - yellow_pyramid_block)
      (and
        (preference preference1
          (exists (?m - hexagonal_bin)
            (then
              (once (same_object ?m) )
              (hold (not (agent_holds ?r) ) )
              (once (exists (?v - chair ?i - wall) (adjacent ?m brown) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (not
      (>= 2 4 )
    )
    (>= (+ 5 (* 3 (* (/ 8 (count-unique-positions preference1:golfball) ) (+ 15 (* (* (= (* (total-time) 5 )
                    (count-once-per-external-objects preference1:book)
                  )
                  (* (<= (not 4 ) (count preference1:basketball) )
                    10
                  )
                )
                (* 3 (count-once-per-objects preference1:pink) )
              )
            )
          )
        )
        (count preference1:pyramid_block)
        (count preference1:yellow:yellow)
        (count-once-per-objects preference1:doggie_bed:book)
        (+ 3 (total-time) (count preference1:red) (count-once preference1) 3 (+ (- (count preference1:hexagonal_bin:pink) )
            4
            (count-once-per-objects preference1:doggie_bed)
            (* (count-once-per-objects preference1:brown) 25 )
            30
            4
            30
          )
        )
      )
      100
    )
  )
)
(:scoring
  5
)
)

(define (game game-id-250) (:domain few-objects-room-v1)
(:setup
  (forall (?t - hexagonal_bin ?c - building ?h - hexagonal_bin)
    (game-conserved
      (and
        (and
          (not
            (on ?h ?h)
          )
          (exists (?u - block ?m - (either cellphone mug golfball))
            (not
              (not
                (object_orientation ?m ?h)
              )
            )
          )
        )
        (in ?h ?h)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?p - game_object)
        (then
          (once (adjacent ?p) )
          (hold (in_motion ?p) )
          (once (and (and (and (in_motion ?p) (in_motion ?p) ) (in_motion ?p ?p ?p) ) (in_motion ?p rug) ) )
        )
      )
    )
  )
)
(:terminal
  (> 10 10 )
)
(:scoring
  (external-forall-maximize
    5
  )
)
)

(define (game game-id-251) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds ?xxx ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (at-end
        (and
          (and
            (and
              (forall (?r - doggie_bed)
                (not
                  (agent_holds ?r agent)
                )
              )
              (not
                (and
                  (and
                    (in_motion agent)
                    (on ?xxx ?xxx)
                  )
                  (rug_color_under ?xxx)
                )
              )
            )
            (on ?xxx)
          )
          (in_motion ?xxx ?xxx)
          (adjacent ?xxx ?xxx)
          (not
            (in ?xxx)
          )
        )
      )
    )
    (preference preference2
      (exists (?c - triangular_ramp ?b - (either cylindrical_block key_chain bridge_block))
        (then
          (once (and (agent_holds ?b door) (and (touch bed ?b) (and (and (agent_holds ?b) (not (in_motion bed) ) ) (on ?b rug) ) ) ) )
          (once (and (agent_holds ?b) (not (touch ?b ?b) ) ) )
          (hold (agent_holds agent) )
        )
      )
    )
  )
)
(:terminal
  (> (count preference2:beachball) 3 )
)
(:scoring
  (count preference1:pink_dodgeball)
)
)

(define (game game-id-252) (:domain many-objects-room-v1)
(:setup
  (forall (?g ?d - ball ?u - hexagonal_bin)
    (exists (?w - cube_block ?n - cylindrical_block)
      (forall (?d ?k ?p ?y - curved_wooden_ramp ?w - dodgeball)
        (and
          (game-optional
            (on ?u)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?p - dodgeball)
        (then
          (hold (on agent) )
          (hold (in_motion ?p) )
          (hold-to-end (and (same_color rug) (adjacent ?p ?p) ) )
        )
      )
    )
    (forall (?r - dodgeball)
      (and
        (preference preference2
          (exists (?d - dodgeball)
            (then
              (once (and (on upright ?d) (and (not (not (agent_holds ?r) ) ) (and (in_motion top_drawer ?r) (adjacent_side ?r ?r) (and (adjacent floor agent ?r) (and (and (in_motion floor) (= 2 0) ) (touch ?d) ) (= (distance ?r 1) (distance ?r)) (and (in ?d ?r) (on ?d ?r) ) ) ) ) ) )
              (once (agent_holds pink_dodgeball ?r) )
              (hold (not (object_orientation ?r) ) )
              (once (in_motion ?d) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (count-overlapping preference1:beachball:blue_dodgeball) (count preference2:basketball) )
    (<= (- 6 )
      4
    )
  )
)
(:scoring
  (count-once-per-objects preference2:triangle_block)
)
)

(define (game game-id-253) (:domain many-objects-room-v1)
(:setup
  (exists (?z - (either desktop doggie_bed))
    (game-optional
      (in_motion ?z)
    )
  )
)
(:constraints
  (and
    (forall (?t - ball)
      (and
        (preference preference1
          (exists (?a - curved_wooden_ramp)
            (at-end
              (in_motion ?a ?a)
            )
          )
        )
        (preference preference2
          (exists (?j - dodgeball)
            (then
              (once (or (agent_holds ?t) (in_motion desk) ) )
              (once (agent_holds ?t ?t) )
              (hold (agent_holds ?j) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (<= 2 (count preference1:beachball) )
  )
)
(:scoring
  (count preference2:golfball)
)
)

(define (game game-id-254) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (or
      (and
        (or
          (and
            (and
              (> (distance ?xxx agent) 1)
              (and
                (agent_holds ?xxx)
                (not
                  (equal_z_position ?xxx)
                )
              )
              (on ?xxx)
            )
            (in_motion ?xxx)
            (not
              (agent_holds ?xxx ?xxx)
            )
            (and
              (is_setup_object ?xxx ?xxx top_shelf ?xxx)
              (and
                (not
                  (and
                    (forall (?l - dodgeball ?t ?h ?x ?o ?j ?z ?k ?q ?s ?r - game_object)
                      (touch ?x ?x bed)
                    )
                    (adjacent ?xxx)
                  )
                )
                (agent_holds ?xxx)
              )
            )
            (agent_holds agent ?xxx)
            (and
              (agent_holds ?xxx)
              (in_motion ?xxx ?xxx)
              (not
                (agent_holds ?xxx)
              )
            )
          )
          (in_motion ?xxx ?xxx)
        )
        (and
          (agent_holds ?xxx ?xxx)
          (agent_holds top_drawer)
        )
      )
      (< 6 (distance ))
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?r - game_object)
        (at-end
          (and
            (agent_holds ?r)
            (not
              (and
                (in ?r)
                (not
                  (agent_holds ?r ?r)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-same-positions preference1:purple) (and (count preference1:blue_dodgeball:dodgeball) ) )
    (>= 10 (count preference1:yellow_cube_block) )
  )
)
(:scoring
  (count preference1:yellow_pyramid_block)
)
)

(define (game game-id-255) (:domain few-objects-room-v1)
(:setup
  (forall (?b - cube_block)
    (and
      (and
        (forall (?e - cube_block)
          (game-conserved
            (adjacent ?b)
          )
        )
      )
      (exists (?f - curved_wooden_ramp)
        (exists (?j - hexagonal_bin)
          (exists (?n - dodgeball ?d - yellow_cube_block)
            (forall (?x ?s - hexagonal_bin ?a - hexagonal_bin)
              (forall (?w - doggie_bed)
                (or
                  (game-optional
                    (and
                      (agent_holds upright)
                      (in sideways ?b)
                    )
                  )
                )
              )
            )
          )
        )
      )
      (game-optional
        (in_motion ?b)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?z - hexagonal_bin)
        (then
          (once (and (on desk) (not (in_motion ?z ?z) ) (not (and (not (on ?z) ) (exists (?i ?r - (either lamp alarm_clock triangle_block)) (exists (?s - hexagonal_bin) (on ?r) ) ) ) ) ) )
          (hold (not (in ?z ?z) ) )
          (hold (agent_holds ?z) )
        )
      )
    )
    (preference preference2
      (then
        (once (and (agent_holds ?xxx ?xxx) (not (not (and (and (and (or (exists (?m - game_object ?n - pyramid_block ?v - building ?e - red_dodgeball ?k - dodgeball) (agent_holds ?k) ) ) (not (agent_holds ?xxx agent) ) ) (agent_holds ?xxx ?xxx) ) (in_motion door) ) ) ) (same_type ?xxx) ) )
        (once (on agent) )
        (hold (and (not (not (agent_holds ?xxx) ) ) (same_type ?xxx) ) )
      )
    )
  )
)
(:terminal
  (<= 50 (count-once-per-objects preference2:pink) )
)
(:scoring
  (+ (count preference2:beachball) 1 )
)
)

(define (game game-id-256) (:domain few-objects-room-v1)
(:setup
  (forall (?r - ball ?k - hexagonal_bin)
    (and
      (and
        (forall (?m ?q - doggie_bed ?w - dodgeball)
          (exists (?u - ball)
            (and
              (and
                (game-conserved
                  (not
                    (not
                      (touch ?u)
                    )
                  )
                )
              )
            )
          )
        )
        (and
          (and
            (exists (?v ?w - hexagonal_bin ?d - doggie_bed)
              (game-optional
                (and
                  (not
                    (in_motion ?d)
                  )
                  (on agent)
                )
              )
            )
          )
        )
      )
      (exists (?j - game_object)
        (game-optional
          (or
            (and
              (and
                (not
                  (not
                    (not
                      (and
                        (in_motion ?k)
                        (in ?j ?j)
                      )
                    )
                  )
                )
                (< 1 0)
                (in_motion ?k)
              )
              (adjacent bed ?k rug)
            )
            (touch ?j)
          )
        )
      )
      (exists (?z - (either cylindrical_block))
        (game-conserved
          (in_motion agent)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (at-end
        (opposite desk)
      )
    )
  )
)
(:terminal
  (or
    (or
      (and
        (>= (count-once-per-external-objects preference1:tall_cylindrical_block) 12 )
      )
      (> (count-once-per-objects preference1:pink_dodgeball:red) (external-forall-maximize (* (count-once-per-objects preference1) (* 9 7 )
          )
        )
      )
    )
    (or
      (> 5 (count preference1:basketball) )
      (or
        (> (* (+ (- 2 )
              8
              3
            )
            (count preference1:dodgeball)
          )
          (* (count preference1:pink) (count-once-per-objects preference1:basketball) )
        )
        (> (count-shortest preference1:beachball:purple) (count preference1:dodgeball) )
      )
    )
  )
)
(:scoring
  (count preference1:dodgeball:yellow)
)
)

(define (game game-id-257) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (and
      (between ?xxx ?xxx)
      (not
        (adjacent ?xxx)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (then
        (once (on ?xxx) )
        (hold-while (touch ?xxx ?xxx) (not (and (not (exists (?v - dodgeball) (agent_holds ?v ?v) ) ) (not (<= (distance 3 ?xxx) 1) ) (not (and (on ?xxx) (agent_holds bed ?xxx) ) ) (on ?xxx) ) ) (in_motion south_west_corner) )
        (hold (in ?xxx) )
      )
    )
    (preference preference2
      (then
        (hold (on ?xxx) )
        (once (< 1 7) )
        (once (and (in ?xxx) ) )
      )
    )
  )
)
(:terminal
  (or
    (= 3 (* (total-score) (count preference1:brown) )
    )
  )
)
(:scoring
  (count-once preference2:alarm_clock)
)
)

(define (game game-id-258) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?a - dodgeball ?i - dodgeball)
      (forall (?l - wall)
        (forall (?u - block)
          (game-conserved
            (in ?i bed)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?m - dodgeball ?s - game_object)
        (then
          (once (in_motion ?s ?s) )
          (once (in_motion ?s tan) )
          (hold (and (in ?s ?s ?s) (agent_holds ?s ?s) ) )
          (hold (agent_holds ?s) )
        )
      )
    )
  )
)
(:terminal
  (or
    (and
      (or
        (>= (* (count preference1) (* 15 (* 3 (count-once-per-objects preference1:purple) )
              (* (count preference1:beachball:wall) (count preference1:basketball) )
              6
            )
          )
          (count preference1:yellow)
        )
        (>= (count-once preference1:dodgeball:basketball) (count-same-positions preference1:dodgeball) )
        (or
          (or
            (>= 2 (count-overlapping preference1:doggie_bed:dodgeball) )
            (or
              (> (count preference1:purple) 6 )
              (> 3 4 )
              (>= (count preference1:basketball:yellow) 10 )
            )
          )
        )
      )
      (>= 3 (- (count preference1:beachball) )
      )
    )
    (or
      (or
        (not
          (> (external-forall-maximize (count preference1:basketball) ) 6 )
        )
      )
      (>= 5 2 )
    )
  )
)
(:scoring
  (count-once-per-external-objects preference1:beachball)
)
)

(define (game game-id-259) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (forall (?m - triangular_ramp ?u - hexagonal_bin ?q - hexagonal_bin ?t - shelf ?k ?w - game_object)
        (game-optional
          (agent_holds ?k)
        )
      )
      (game-conserved
        (not
          (agent_holds ?xxx ?xxx)
        )
      )
      (game-conserved
        (not
          (agent_holds ?xxx ?xxx)
        )
      )
    )
    (game-conserved
      (agent_holds ?xxx)
    )
    (forall (?v - building)
      (exists (?y - dodgeball)
        (exists (?j - (either dodgeball dodgeball))
          (game-optional
            (and
              (not
                (and
                  (or
                    (and
                      (in_motion ?j)
                      (not
                        (not
                          (agent_holds ?j ?v)
                        )
                      )
                      (broken ?v)
                    )
                    (> 5 (distance ?j back))
                  )
                  (and
                    (adjacent ?j)
                    (agent_holds ?y)
                    (not
                      (in_motion ?j floor)
                    )
                    (not
                      (agent_holds ?j ?v)
                    )
                  )
                )
              )
              (and
                (in_motion ?y bed)
                (on bed)
                (adjacent_side desk)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - dodgeball)
      (and
        (preference preference1
          (exists (?f - game_object ?i - chair)
            (then
              (once (in_motion ?b ?b) )
              (any)
              (once (agent_holds agent) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count-once preference1:green) 2 )
    (count-once-per-external-objects preference1:doggie_bed)
  )
)
(:scoring
  (count-once-per-external-objects preference1:golfball)
)
)

(define (game game-id-260) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (not
      (same_object agent ?xxx)
    )
  )
)
(:constraints
  (and
    (forall (?h - hexagonal_bin)
      (and
        (preference preference1
          (exists (?f - ball)
            (then
              (once (not (not (agent_holds ?f) ) ) )
              (once (not (exists (?u - golfball) (not (touch ?u ?h) ) ) ) )
              (once (not (in_motion ?h) ) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?f - hexagonal_bin)
        (at-end
          (agent_holds door ?f)
        )
      )
    )
  )
)
(:terminal
  (>= (+ (+ (count-once-per-objects preference1:golfball:blue) (count-increasing-measure preference1:yellow) )
      (-
        (external-forall-maximize
          8
        )
        9
      )
    )
    (- 10 )
  )
)
(:scoring
  (count-once-per-objects preference1:basketball)
)
)

(define (game game-id-261) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (not
      (and
        (on bed ?xxx)
        (same_type ?xxx ?xxx)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?t - cube_block)
        (then
          (once (and (and (and (not (in ?t ?t) ) (not (< 2 1) ) ) (on ?t ?t) ) (agent_holds desk ?t) (on ?t) ) )
          (forall-sequence (?r - wall)
            (then
              (once (not (in ?t ?r) ) )
            )
          )
          (once (in_motion ?t bridge_block agent) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference1:blue_dodgeball) 3 )
)
(:scoring
  2
)
)

(define (game game-id-262) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (and
      (not
        (not
          (not
            (agent_holds ?xxx bed)
          )
        )
      )
      (in_motion ?xxx)
      (on rug)
      (adjacent ?xxx)
      (in_motion ?xxx)
    )
  )
)
(:constraints
  (and
    (forall (?b - hexagonal_bin)
      (and
        (preference preference1
          (exists (?r - cube_block)
            (then
              (once (in agent floor) )
              (once (in_motion ?r ?b) )
              (hold (not (adjacent ?r) ) )
            )
          )
        )
        (preference preference2
          (exists (?n - triangular_ramp)
            (then
              (once (in ?b ?n) )
              (once (in_motion ?b) )
              (once (not (on ?n ?n) ) )
            )
          )
        )
        (preference preference3
          (exists (?y - game_object ?j - ball ?v ?h - bridge_block)
            (then
              (once (in_motion ?h) )
              (once (in_motion top_drawer ?b) )
              (once (in_motion upright ?v) )
            )
          )
        )
      )
    )
    (forall (?o - hexagonal_bin)
      (and
        (preference preference4
          (exists (?y - (either top_drawer tall_cylindrical_block cube_block))
            (then
              (once (in_motion ?y) )
              (once (and (not (not (in_motion ?y) ) ) (agent_holds ?o) (in_motion ?o ?y) ) )
              (hold (< (distance 2 ?y) 1) )
            )
          )
        )
      )
    )
    (preference preference5
      (exists (?f - hexagonal_bin ?o - hexagonal_bin)
        (at-end
          (agent_holds ?o)
        )
      )
    )
  )
)
(:terminal
  (> (count preference5:block) 6 )
)
(:scoring
  (+ (count-once-per-objects preference2:green) 1 )
)
)

(define (game game-id-263) (:domain few-objects-room-v1)
(:setup
  (and
    (game-optional
      (agent_holds ?xxx)
    )
  )
)
(:constraints
  (and
    (forall (?e - curved_wooden_ramp)
      (and
        (preference preference1
          (exists (?s - ball)
            (then
              (hold (in ?e ?s) )
              (once (and (agent_holds ?e ?s) (not (not (and (and (and (touch ?s) (on ?s pillow) ) (not (agent_holds ?e ?s) ) ) (in_motion ?s ?s) ) ) ) ) )
              (once (in_motion ?e ?e) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 4 (* (external-forall-minimize (* (* (* (count-once-per-objects preference1:pyramid_block) (+ (count-once-per-objects preference1:green) (count preference1:dodgeball:basketball) )
            )
            (count-once preference1:blue_dodgeball:doggie_bed)
          )
          (count preference1:blue_dodgeball:doggie_bed)
        )
      )
      5
    )
  )
)
(:scoring
  4
)
)

(define (game game-id-264) (:domain medium-objects-room-v1)
(:setup
  (and
    (not
      (exists (?w - hexagonal_bin ?z - ball ?c - book ?h - (either mug doggie_bed))
        (or
          (game-optional
            (and
              (in_motion ?h)
              (exists (?k ?t - (either cylindrical_block alarm_clock) ?o - teddy_bear)
                (or
                  (exists (?s ?u - teddy_bear)
                    (agent_holds ?s)
                  )
                  (and
                    (and
                      (agent_holds ?h drawer)
                      (in_motion brown)
                    )
                    (agent_holds ?o)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?k - ball)
      (and
        (preference preference1
          (exists (?u - triangular_ramp)
            (then
              (once (on ?k desk) )
              (once (agent_holds ?k) )
              (once (in_motion ?u ?u) )
            )
          )
        )
        (preference preference2
          (exists (?a - hexagonal_bin ?u - block ?o - hexagonal_bin)
            (then
              (hold-for 8 (in desk) )
              (once (in_motion ?o) )
              (once (adjacent ?o) )
            )
          )
        )
        (preference preference3
          (exists (?b - hexagonal_bin ?u - triangular_ramp ?b - hexagonal_bin ?n - game_object ?d - wall)
            (then
              (once (in_motion ?k) )
              (hold (in_motion ?k) )
              (once (between ?k ?d) )
              (once (on ?d ?k) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 10 25 )
)
(:scoring
  (count-once-per-objects preference1:pink_dodgeball)
)
)

(define (game game-id-265) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?e - (either pink watch) ?c - ball)
      (and
        (game-optional
          (not
            (and
              (agent_holds ?c ?c)
              (agent_holds ?c ?c)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?h ?p ?i ?z ?v ?d - hexagonal_bin ?b - curved_wooden_ramp ?x - dodgeball)
        (then
          (once (touch ?x ?x) )
          (once (on ?x ?x) )
        )
      )
    )
    (preference preference2
      (exists (?w - ball)
        (then
          (hold-to-end (in_motion ?w) )
          (once (on ?w) )
          (once (on ?w) )
        )
      )
    )
    (preference preference3
      (exists (?j - ball)
        (then
          (once (agent_holds ?j ?j) )
          (once (in_motion ?j ?j) )
          (hold (and (in_motion ?j) (not (adjacent ?j) ) (in_motion ?j ?j) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ 1 (+ (* (count preference2:dodgeball:yellow:dodgeball) (count preference3:purple:beachball) )
        (+ 15 (count preference2:green) )
        (count-once-per-objects preference3:beachball)
      )
    )
    (count-once preference3:yellow)
  )
)
(:scoring
  5
)
)

(define (game game-id-266) (:domain few-objects-room-v1)
(:setup
  (forall (?u - teddy_bear)
    (game-conserved
      (and
        (in ?u ?u)
        (and
          (in_motion agent agent)
        )
        (on ?u ?u)
        (on agent)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?k - hexagonal_bin)
        (then
          (once-measure (touch ?k) (distance ?k ?k) )
          (hold (touch ?k) )
          (once (not (and (in_motion ?k) (in_motion ?k) (in_motion ?k) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once preference1:dodgeball:pink_dodgeball) (+ (* (* (count preference1:dodgeball) (count-once-per-external-objects preference1:dodgeball:hexagonal_bin) )
        (count preference1:blue_dodgeball)
      )
      5
    )
  )
)
(:scoring
  (/
    (count-once-per-objects preference1:dodgeball)
    (external-forall-maximize
      5
    )
  )
)
)

(define (game game-id-267) (:domain many-objects-room-v1)
(:setup
  (and
    (game-optional
      (above ?xxx)
    )
    (game-conserved
      (and
        (and
          (and
            (in_motion ?xxx ?xxx)
            (in agent)
          )
          (not
            (not
              (or
                (< 10 1)
                (and
                  (adjacent ?xxx rug)
                  (and
                    (in_motion ?xxx ?xxx)
                    (and
                      (agent_holds ?xxx ?xxx)
                      (adjacent ?xxx ?xxx)
                      (exists (?p - hexagonal_bin)
                        (forall (?r - hexagonal_bin)
                          (and
                            (and
                              (on rug ?p)
                              (on ?r ?p)
                            )
                            (agent_holds ?p floor)
                          )
                        )
                      )
                      (in_motion bed)
                    )
                  )
                )
              )
            )
          )
        )
        (agent_holds ?xxx)
      )
    )
  )
)
(:constraints
  (and
    (forall (?z - cube_block)
      (and
        (preference preference1
          (exists (?j - dodgeball)
            (at-end
              (and
                (and
                  (same_color ?j ?z)
                )
                (in_motion ?z ?z)
                (and
                  (and
                    (and
                      (agent_holds ?z)
                      (not
                        (< 2 (distance ?z))
                      )
                    )
                    (equal_z_position ?z)
                  )
                  (touch rug)
                )
                (in_motion ?j)
              )
            )
          )
        )
        (preference preference2
          (exists (?n - (either dodgeball cylindrical_block))
            (then
              (once (and (in ?z ?n) (and (in_motion ?n ?n) (agent_holds bed) ) ) )
              (once (not (agent_holds desk) ) )
              (once (in_motion ?n ?n) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?s - hexagonal_bin)
        (then
          (once (in ?s) )
          (hold (agent_holds ?s) )
          (once (exists (?r - curved_wooden_ramp) (adjacent ?s) ) )
        )
      )
    )
    (preference preference4
      (exists (?h - dodgeball)
        (then
          (once (agent_holds ?h ?h) )
          (once (and (in_motion ?h ?h) (in_motion ?h ?h) ) )
          (hold-while (adjacent ?h) (adjacent ?h) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:beachball) 5 )
)
(:scoring
  10
)
)

(define (game game-id-268) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (touch ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?d - pillow)
        (at-end
          (opposite ?d)
        )
      )
    )
  )
)
(:terminal
  (> (* (count preference1:beachball) 300 )
    (count preference1:beachball)
  )
)
(:scoring
  5
)
)

(define (game game-id-269) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?r - hexagonal_bin)
        (then
          (once (agent_holds ?r ?r) )
          (once (same_color floor) )
          (any)
        )
      )
    )
  )
)
(:terminal
  (not
    (and
      (>= (count preference1:green) 100 )
      (or
        (>= 3 (count-longest preference1:beachball) )
        (>= 10 (* (* 2 (count-once-per-objects preference1:blue_dodgeball) (* (* (external-forall-maximize (* (count preference1:dodgeball) (count preference1:beachball) )
                  )
                  (not
                    6
                  )
                  8
                )
                (* (* (count-once-per-objects preference1:red:dodgeball) (count preference1:basketball) )
                  50
                )
              )
            )
            (count-unique-positions preference1:block:blue_cube_block:beachball)
          )
        )
        (or
          (not
            (>= 0 180 )
          )
          (>= (count-once-per-external-objects preference1:yellow) (count-once-per-objects preference1:doggie_bed) )
        )
      )
      (or
        (>= (external-forall-maximize 6 ) 10 )
        (> 10 (count preference1:pink) )
      )
    )
  )
)
(:scoring
  (+ 4 (count preference1:red) )
)
)

(define (game game-id-270) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (in_motion ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?q - pyramid_block ?s - (either golfball dodgeball))
        (then
          (hold (on ?s ?s) )
          (once (adjacent ?s) )
          (hold-while (and (not (in_motion ?s ?s) ) (on ?s ?s) (< 2 10) ) (and (in ?s) (in_motion ?s ?s) ) )
        )
      )
    )
    (forall (?c - building)
      (and
        (preference preference2
          (exists (?w - (either blue_cube_block mug golfball lamp) ?b - curved_wooden_ramp)
            (then
              (once (in_motion ?c ?b) )
              (hold-while (adjacent_side ?c agent) (in ?c bed) )
              (hold (agent_holds ?b) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (= (count preference1:red) (- (count-once preference1:yellow) )
    )
    (or
      (>= 15 (count-once preference2:red_pyramid_block) )
      (or
        (< (* (= 3 (count-overlapping preference2:basketball) )
            (count preference1:beachball:pink_dodgeball)
          )
          (= 3 2 )
        )
      )
    )
    (> (count-once-per-objects preference2:dodgeball) (/ (total-time) (count preference1:tan) ) )
  )
)
(:scoring
  (count preference1:rug:pink)
)
)

(define (game game-id-271) (:domain many-objects-room-v1)
(:setup
  (or
    (exists (?r - triangular_ramp)
      (and
        (game-optional
          (adjacent_side ?r)
        )
      )
    )
    (game-optional
      (< (distance_side ?xxx ?xxx 9) 8)
    )
    (exists (?r - hexagonal_bin)
      (game-conserved
        (not
          (not
            (in_motion ?r ?r)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?c - ball)
        (then
          (hold (and (on ?c ?c) (in_motion ?c) ) )
          (hold (on ?c ?c) )
          (once (in_motion ?c) )
        )
      )
    )
  )
)
(:terminal
  (< (count-once-per-objects preference1:basketball) (* (* (total-score) 2 )
      15
    )
  )
)
(:scoring
  (* 8 9 )
)
)

(define (game game-id-272) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (and
        (game-conserved
          (not
            (in_motion ?xxx ?xxx)
          )
        )
        (game-conserved
          (in_motion ?xxx east_sliding_door)
        )
      )
    )
    (game-conserved
      (game_over ?xxx ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?f - teddy_bear)
        (then
          (hold (adjacent_side agent ?f) )
          (hold (and (in_motion upright) (on upright ?f) ) )
          (hold (not (exists (?u - hexagonal_bin) (and (and (exists (?j - (either dodgeball laptop) ?c - yellow_pyramid_block) (agent_holds ?c ?c) ) (agent_holds ?f) ) (adjacent ?u) (adjacent ?u) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:wall) (count-once-per-objects preference1:pink) )
)
(:scoring
  (count-once-per-objects preference1:top_drawer)
)
)

(define (game game-id-273) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?p ?a - block ?b - color)
      (game-conserved
        (is_setup_object ?b)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?a - hexagonal_bin ?z - (either golfball pillow) ?n - (either dodgeball dodgeball triangle_block))
        (at-end
          (and
            (on ?n)
            (and
              (agent_holds ?n ?n)
              (not
                (agent_holds ?n)
              )
            )
          )
        )
      )
    )
    (preference preference2
      (then
        (once (in_motion ?xxx ?xxx) )
        (once (on ?xxx ?xxx) )
        (once (in_motion ?xxx bed) )
      )
    )
  )
)
(:terminal
  (not
    (< 5 (* (not (+ 30 9 )
        )
        50
      )
    )
  )
)
(:scoring
  (>= (* (count-measure preference2:pink) (count-once-per-objects preference1:golfball) )
    1
  )
)
)

(define (game game-id-274) (:domain few-objects-room-v1)
(:setup
  (exists (?y - chair)
    (and
      (game-conserved
        (touch ?y)
      )
      (game-conserved
        (agent_holds ?y ?y)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?j - game_object)
        (then
          (once (exists (?i ?r - dodgeball ?w - (either beachball teddy_bear)) (agent_holds ?w) ) )
          (once (adjacent ?j ?j) )
          (once (not (adjacent_side ?j) ) )
        )
      )
    )
    (preference preference2
      (then
        (hold-while (exists (?w - ball) (in_motion ?w) ) (in_motion ?xxx ?xxx) (and (touch pink_dodgeball) (< 1 (distance ?xxx 9)) (not (and (not (not (agent_holds ?xxx) ) ) (on upright ?xxx) (and (not (in_motion ?xxx ?xxx) ) (and (in_motion ?xxx) (or (and (exists (?p - blue_cube_block ?l - game_object) (adjacent desk) ) (on ?xxx) ) (in_motion ?xxx) ) ) ) ) ) ) )
        (hold-while (on ?xxx desk) (and (on ?xxx ?xxx) (not (not (= (distance ?xxx room_center)) ) ) ) )
        (once (equal_z_position ?xxx front) )
      )
    )
  )
)
(:terminal
  (>= 300 (count preference1:beachball) )
)
(:scoring
  10
)
)

(define (game game-id-275) (:domain medium-objects-room-v1)
(:setup
  (exists (?q - (either rug book))
    (exists (?x - block ?u - block)
      (game-conserved
        (agent_holds ?q)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?w - beachball ?o - curved_wooden_ramp ?w - hexagonal_bin)
        (at-end
          (agent_holds ?w ?w)
        )
      )
    )
  )
)
(:terminal
  (>= (count-once preference1:basketball) (* (count preference1:alarm_clock) (count-once-per-objects preference1:beachball:red) )
  )
)
(:scoring
  (count preference1:pink)
)
)

(define (game game-id-276) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (agent_holds ?xxx ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?r - pillow)
        (then
          (hold-while (in_motion ?r) (on main_light_switch) )
          (once (on ?r) )
          (once (same_color ?r) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (count-total preference1:golfball) )
)
(:scoring
  20
)
)

(define (game game-id-277) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (on ?xxx ?xxx)
  )
)
(:constraints
  (and
    (forall (?h - building)
      (and
        (preference preference1
          (exists (?k - triangular_ramp ?u - game_object)
            (then
              (once (agent_holds ?u ?h) )
              (once (exists (?a - dodgeball) (and (and (on ?a) (and (agent_holds ?a rug) (not (agent_holds ?h) ) ) ) (agent_holds ?u ?h) ) ) )
              (once (same_color ?h) )
            )
          )
        )
        (preference preference2
          (exists (?f - hexagonal_bin)
            (then
              (once (touch ?f) )
              (once (< 5 8) )
              (any)
              (hold (not (touch ?h ?h) ) )
            )
          )
        )
      )
    )
    (forall (?x - curved_wooden_ramp)
      (and
        (preference preference3
          (exists (?j - dodgeball ?p - (either doggie_bed pillow yellow cd tall_cylindrical_block key_chain dodgeball))
            (then
              (hold (agent_holds ?p ?x) )
              (once (agent_holds ?p pink_dodgeball) )
              (once (and (same_color ?p) (on ?p) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (+ (count preference3:brown) (count preference2:golfball:triangle_block) )
      2
    )
  )
)
(:scoring
  (count preference3:purple)
)
)

(define (game game-id-278) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds ?xxx ?xxx)
  )
)
(:constraints
  (and
    (forall (?w - wall ?p - hexagonal_bin)
      (and
        (preference preference1
          (exists (?a - dodgeball ?l ?h - block)
            (then
              (hold (object_orientation ?l) )
              (once (< 1 0.5) )
              (once (and (and (on ?p) (not (agent_holds floor) ) ) (in_motion ?l ?l) (adjacent_side ?h ?l) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> 2 (count preference1:dodgeball) )
)
(:scoring
  (* 5 (count preference1:dodgeball) (* (+ 2 (count preference1:pink:dodgeball) )
      10
    )
  )
)
)

(define (game game-id-279) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (on ?xxx ?xxx)
    )
    (game-optional
      (and
        (and
          (on agent)
        )
        (not
          (agent_holds ?xxx)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?q - (either cellphone book) ?s - shelf)
      (and
        (preference preference1
          (exists (?x - hexagonal_bin)
            (then
              (once (not (in_motion ?s ?x) ) )
              (hold (not (and (not (in ?s) ) (agent_holds floor ?s) ) ) )
              (once (agent_holds ?s ?s) )
            )
          )
        )
        (preference preference2
          (exists (?e - hexagonal_bin)
            (at-end
              (adjacent ?s bed desk)
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?l - hexagonal_bin ?a - chair ?u - (either dodgeball golfball))
        (then
          (once (not (and (and (in_motion ?u) (agent_holds floor) ) (in_motion ?u ?u) ) ) )
          (once (is_setup_object ?u rug) )
          (hold (in ) )
          (once (agent_holds ?u ?u) )
        )
      )
    )
    (preference preference4
      (exists (?e - dodgeball)
        (then
          (once (agent_holds ?e) )
          (once (adjacent ?e) )
          (once (and (adjacent ?e) (not (not (not (and (on ?e) (on ?e) ) ) ) ) ) )
        )
      )
    )
    (forall (?h ?e - (either basketball yellow pen))
      (and
        (preference preference5
          (exists (?l - color)
            (then
              (hold (not (same_type ?l) ) )
              (once (and (in_motion ?h) (in green_golfball) ) )
              (once (forall (?d - building ?m - game_object) (on ?e) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count preference4:dodgeball) (count-once-per-objects preference1:dodgeball) )
    (count preference1:green)
  )
)
(:scoring
  3
)
)

(define (game game-id-280) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (exists (?l - building ?z - ball)
      (agent_holds ?z ?z)
    )
  )
)
(:constraints
  (and
    (forall (?c - (either side_table laptop hexagonal_bin))
      (and
        (preference preference1
          (exists (?v ?j - hexagonal_bin)
            (then
              (once (not (on ?v) ) )
              (once (in_motion ?c) )
              (hold (not (agent_holds rug) ) )
            )
          )
        )
      )
    )
    (preference preference2
      (then
        (once (adjacent ?xxx ?xxx) )
        (hold (agent_holds ?xxx ?xxx) )
        (once (not (and (in ?xxx ?xxx) (in_motion ?xxx) (in_motion top_drawer) ) ) )
      )
    )
  )
)
(:terminal
  (>= 0 5 )
)
(:scoring
  6
)
)

(define (game game-id-281) (:domain many-objects-room-v1)
(:setup
  (forall (?z - game_object)
    (game-optional
      (< 6 1)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (at-end
        (in_motion bed)
      )
    )
  )
)
(:terminal
  (>= 20 (* 5 (count-total preference1) )
  )
)
(:scoring
  6
)
)

(define (game game-id-282) (:domain many-objects-room-v1)
(:setup
  (exists (?n - chair ?i - hexagonal_bin)
    (game-optional
      (not
        (same_type upright ?i)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?l - (either ball teddy_bear golfball) ?p - ball)
        (then
          (once (not (in ?p ?p) ) )
          (once (same_color ?p) )
          (once (not (on ?p) ) )
        )
      )
    )
  )
)
(:terminal
  (> (and (count-once preference1:dodgeball:dodgeball) ) (total-time) )
)
(:scoring
  (count-once-per-objects preference1:basketball:side_table)
)
)

(define (game game-id-283) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-optional
      (or
        (exists (?b - wall)
          (in_motion ?b ?b)
        )
        (on ?xxx floor)
        (< 2 5)
      )
    )
    (game-conserved
      (in ?xxx)
    )
    (exists (?w - (either red dodgeball pillow))
      (and
        (and
          (and
            (exists (?i - block)
              (forall (?y - book)
                (game-optional
                  (adjacent ?i ?w)
                )
              )
            )
            (and
              (and
                (forall (?a - golfball)
                  (forall (?h - dodgeball)
                    (game-optional
                      (<= (distance room_center ?a) 0)
                    )
                  )
                )
                (or
                  (exists (?d - red_dodgeball ?h - cube_block)
                    (exists (?o - beachball)
                      (exists (?s - dodgeball ?d - ball ?r - ball ?v - (either pyramid_block golfball pencil))
                        (and
                          (game-optional
                            (not
                              (on upright)
                            )
                          )
                          (exists (?k - wall ?y - dodgeball)
                            (forall (?i - hexagonal_bin ?e - (either cube_block pillow) ?b - hexagonal_bin)
                              (and
                                (exists (?c - dodgeball)
                                  (forall (?n - block)
                                    (forall (?g ?l - dodgeball ?q - dodgeball ?l - (either game_object laptop cube_block dodgeball) ?a - triangular_ramp)
                                      (exists (?i - (either dodgeball) ?t - game_object)
                                        (forall (?d ?z - (either cylindrical_block dodgeball))
                                          (and
                                            (not
                                              (forall (?r - desk_shelf)
                                                (forall (?f ?j ?u - building)
                                                  (and
                                                    (exists (?q - (either dodgeball mug))
                                                      (and
                                                        (and
                                                          (game-optional
                                                            (and
                                                              (not
                                                                (and
                                                                  (forall (?l - game_object)
                                                                    (in_motion south_west_corner)
                                                                  )
                                                                  (not
                                                                    (and
                                                                      (on ?f)
                                                                      (on top_shelf ?v)
                                                                      (not
                                                                        (in_motion blue)
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                              (and
                                                                (agent_holds ?w)
                                                                (agent_holds ?y)
                                                              )
                                                            )
                                                          )
                                                          (game-optional
                                                            (equal_x_position ?a)
                                                          )
                                                          (forall (?s - game_object)
                                                            (and
                                                              (forall (?g - dodgeball ?e - chair)
                                                                (or
                                                                  (and
                                                                    (forall (?x - yellow_cube_block ?x ?k - ball ?x - block)
                                                                      (game-conserved
                                                                        (agent_holds bed ?n)
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                        (and
                                                          (game-optional
                                                            (adjacent ?q)
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                            (and
                                              (and
                                                (and
                                                  (game-conserved
                                                    (< (distance room_center desk) (distance ?t 10))
                                                  )
                                                )
                                              )
                                              (game-conserved
                                                (= 1)
                                              )
                                              (and
                                                (game-conserved
                                                  (on ?y)
                                                )
                                                (exists (?p - curved_wooden_ramp ?x - block)
                                                  (and
                                                    (game-optional
                                                      (opposite ?y ?x)
                                                    )
                                                  )
                                                )
                                              )
                                              (game-conserved
                                                (on ?y ?b)
                                              )
                                              (and
                                                (game-optional
                                                  (adjacent ?w ?n)
                                                )
                                              )
                                            )
                                            (exists (?q - building ?p - color)
                                              (exists (?x - golfball)
                                                (and
                                                  (exists (?f - ball)
                                                    (game-optional
                                                      (agent_holds ?v)
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                            (and
                                              (game-optional
                                                (on ?n)
                                              )
                                              (and
                                                (and
                                                  (exists (?i - block ?g - curved_wooden_ramp)
                                                    (and
                                                      (game-conserved
                                                        (not
                                                          (on ?y)
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                                (game-conserved
                                                  (and
                                                    (agent_holds ?w ?o)
                                                    (not
                                                      (rug_color_under ?b)
                                                    )
                                                  )
                                                )
                                              )
                                              (exists (?l - cylindrical_block ?i - wall ?i - dodgeball)
                                                (game-optional
                                                  (touch ?h)
                                                )
                                              )
                                            )
                                            (game-conserved
                                              (and
                                                (in_motion ?h ?y)
                                                (in_motion ?b)
                                                (agent_holds ?t)
                                                (touch desk ?h)
                                                (adjacent ?a agent)
                                                (not
                                                  (in_motion ?z ?c)
                                                )
                                                (is_setup_object ?w)
                                                (on ?c ?b)
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                                (exists (?q - ball)
                                  (and
                                    (game-conserved
                                      (not
                                        (not
                                          (not
                                            (and
                                              (not
                                                (on agent)
                                              )
                                              (and
                                                (agent_holds ?o pillow)
                                                (and
                                                  (on ?o ?q)
                                                  (agent_holds ?v)
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                    (forall (?l - (either pyramid_block book))
                                      (game-conserved
                                        (and
                                          (in_motion agent ?w)
                                          (in ?b)
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                  (forall (?m - doggie_bed)
                    (game-optional
                      (not
                        (exists (?f - (either dodgeball hexagonal_bin) ?r - shelf ?q - pillow)
                          (in_motion ?m)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?s - game_object)
        (at-end
          (not
            (agent_holds ?s ?s)
          )
        )
      )
    )
    (preference preference2
      (exists (?z - hexagonal_bin)
        (then
          (hold (in ?z ?z) )
          (once (in_motion ?z) )
          (once (adjacent ?z ?z) )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (total-time) )
)
(:scoring
  10
)
)

(define (game game-id-284) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (>= (distance side_table ?xxx) (x_position ?xxx desk))
  )
)
(:constraints
  (and
    (forall (?y - cube_block)
      (and
        (preference preference1
          (exists (?w - hexagonal_bin)
            (then
              (once (in_motion ?w ?y) )
              (once (not (and (not (not (not (and (and (and (on sideways) (same_color ?y) (on south_west_corner top_drawer) (not (in ?w) ) ) (adjacent ?w ?w) ) (not (in_motion ?w ?y ?w ?y) ) ) ) ) ) (in_motion ?w) (agent_holds ?y pink) ) ) )
              (once (agent_holds ?w) )
            )
          )
        )
        (preference preference2
          (exists (?a ?x - pyramid_block)
            (then
              (once (< (distance desk room_center) 1) )
              (once (in_motion ?y) )
              (once (in_motion bridge_block ?a) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?e - (either dodgeball bed pillow))
        (then
          (once (adjacent ?e ?e) )
          (hold (not (and (in_motion ?e ?e) (not (not (or (exists (?s - building) (is_setup_object ?s) ) (in_motion agent ?e) ) ) ) ) ) )
          (hold (not (and (agent_holds ?e) (and (not (and (= 6 (distance side_table ?e)) (in_motion ?e ?e) ) ) (not (in agent ?e) ) ) (agent_holds ?e) (not (equal_z_position ?e) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (> (count-once-per-objects preference3:basketball) (count preference3:basketball:pyramid_block) )
)
(:scoring
  (- 2 )
)
)

(define (game game-id-285) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-conserved
      (and
        (and
          (agent_holds ?xxx ?xxx)
          (touch rug ?xxx)
          (on ?xxx)
        )
        (>= (distance agent 0) (distance desk room_center))
      )
    )
    (game-conserved
      (not
        (agent_holds brown)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?w - block ?i - teddy_bear)
        (then
          (once (agent_holds ?i brown) )
          (hold (>= 1 (distance ?i room_center)) )
          (once (and (and (and (and (not (in_motion ?i) ) (in_motion ?i) ) (in_motion ?i) ) (not (and (in_motion ?i ?i) (and (in_motion ?i) (not (and (or (in_motion ?i ?i) (object_orientation ?i) ) (not (and (and (in_motion ?i) (on ?i ?i) ) (on ?i ?i) (and (on ?i) (in_motion bed ?i) ) ) ) (on ?i top_shelf) ) ) ) ) ) (adjacent ?i) ) (adjacent ?i ?i) ) )
        )
      )
    )
    (preference preference2
      (exists (?x - drawer)
        (then
          (hold (not (and (in_motion rug ?x ?x) (agent_holds ?x) (and (not (and (not (not (and (in_motion ?x) (touch ?x ?x) (not (not (not (not (in ?x ?x) ) ) ) ) ) ) ) (not (agent_holds ?x ?x) ) ) ) (and (not (is_setup_object ?x) ) (and (and (or (same_type ?x) (and (< 1 1) (forall (?b - dodgeball ?t - pyramid_block) (and (not (agent_holds ?x) ) (= 6 (distance 0 desk) 1) (not (in_motion ?t) ) ) ) ) ) (in_motion ?x) ) (open pink ?x) ) (not (agent_crouches ?x) ) ) ) ) ) )
          (once (and (in_motion ?x) (in_motion ?x) ) )
          (hold (between ?x) )
        )
      )
    )
  )
)
(:terminal
  (> (count preference2:dodgeball) (total-score) )
)
(:scoring
  8
)
)

(define (game game-id-286) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (equal_x_position ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?w - game_object ?y - shelf)
        (then
          (once (agent_holds ?y) )
          (once (adjacent agent) )
          (hold (adjacent ?y) )
        )
      )
    )
    (preference preference2
      (exists (?u - chair)
        (then
          (once (faces agent) )
          (once (not (agent_holds ?u) ) )
          (once (not (and (not (agent_holds agent) ) (agent_holds ?u) (adjacent right) ) ) )
        )
      )
    )
    (preference preference3
      (exists (?k - cube_block)
        (then
          (hold (and (agent_holds bed) (open ?k) (and (not (agent_holds desk) ) (not (on agent blinds) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (< (* (count-once-per-objects preference3:basketball:doggie_bed:beachball) (+ (+ (count preference1:side_table:cube_block) 2 )
        (count-shortest preference1:cube_block)
      )
    )
    1
  )
)
(:scoring
  (count preference3:yellow:basketball)
)
)

(define (game game-id-287) (:domain few-objects-room-v1)
(:setup
  (forall (?g - hexagonal_bin ?p - hexagonal_bin)
    (forall (?j - game_object)
      (game-optional
        (and
          (in_motion door ?j)
          (on ?j)
          (not
            (not
              (agent_holds ?p)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?z - hexagonal_bin ?f - hexagonal_bin ?m - game_object)
      (and
        (preference preference1
          (exists (?s - (either desktop pillow))
            (then
              (once (on ?m ?s) )
              (once (agent_holds ?s) )
              (hold (agent_holds ?s) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< (count preference1:wall) (- 8 )
  )
)
(:scoring
  2
)
)

(define (game game-id-288) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (touch ?xxx ?xxx)
  )
)
(:constraints
  (and
    (forall (?o - doggie_bed)
      (and
        (preference preference1
          (exists (?n ?d - teddy_bear)
            (then
              (once (and (object_orientation ?n) (and (same_color ?n ?d) (not (agent_holds agent) ) ) ) )
              (hold (agent_holds ?d) )
              (once (on bed ?d) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-increasing-measure preference1:basketball:white:orange) (* (* 8 (* (count-increasing-measure preference1:hexagonal_bin) 0.5 5 (count preference1:doggie_bed:basketball) (* (count preference1:green) (count-once-per-objects preference1:hexagonal_bin) )
            (count preference1:blue_dodgeball)
            (+ (<= (count-once preference1:triangle_block) 1 )
            )
            15
            (+ (* 5 (* 50 (* (+ (count-overlapping preference1:green) (count-same-positions preference1:yellow) (* (+ (+ (total-score) )
                          10
                          (count-once-per-objects preference1:dodgeball:red)
                        )
                        (count-measure preference1:beachball)
                      )
                    )
                    (+ (external-forall-maximize (* (count preference1:basketball:pyramid_block) (count-once-per-objects preference1:dodgeball) )
                      )
                      (count preference1:pink)
                      2
                    )
                  )
                )
              )
              (count preference1:pink)
            )
            (* 0 (count-once preference1:yellow_cube_block) )
            (- 4 )
            6
          )
        )
        (* (+ (count preference1:dodgeball) (+ (* 20 5 5 )
              (* 3 2 )
            )
          )
          2
        )
      )
    )
    (>= 4 (count-once-per-objects preference1:bed) )
    (>= (* 0 5 (* (count-once-per-objects preference1:dodgeball) (count preference1:golfball) )
      )
      12
    )
    (= (= (* (* 5 (external-forall-minimize (* (count-once preference1:golfball) 10 )
            )
            (count-longest preference1:white:orange)
          )
        )
      )
      (+ (external-forall-maximize 3 ) (+ 2 3 )
      )
    )
  )
)
(:scoring
  5
)
)

(define (game game-id-289) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?b - hexagonal_bin)
      (exists (?d - wall)
        (exists (?p - ball)
          (game-optional
            (not
              (adjacent ?d)
            )
          )
        )
      )
    )
    (game-conserved
      (and
        (and
          (in_motion ?xxx ?xxx)
        )
        (not
          (= 7 (distance ?xxx agent) 8)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?p - game_object)
        (then
          (once (agent_holds ?p) )
          (once (in ?p) )
          (hold (agent_holds ?p) )
        )
      )
    )
  )
)
(:terminal
  (<= (external-forall-maximize (count-once preference1:green:beachball) ) (* 3 )
  )
)
(:scoring
  3
)
)

(define (game game-id-290) (:domain few-objects-room-v1)
(:setup
  (and
    (game-optional
      (not
        (agent_holds ?xxx)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?o - hexagonal_bin)
        (then
          (hold (agent_holds ?o) )
        )
      )
    )
    (forall (?q - game_object ?s - (either cd floor) ?y - hexagonal_bin)
      (and
        (preference preference2
          (exists (?s - curved_wooden_ramp ?k ?z ?r - shelf)
            (at-end
              (not
                (or
                  (on ?k ?k)
                  (not
                    (same_color agent ?k)
                  )
                )
              )
            )
          )
        )
        (preference preference3
          (exists (?z - hexagonal_bin)
            (then
              (once (forall (?v - beachball) (not (not (in_motion ?z ?v) ) ) ) )
              (once (not (not (touch back) ) ) )
              (once (on ?z) )
            )
          )
        )
        (preference preference4
          (exists (?v - pillow)
            (then
              (once (> 1 0.5) )
              (hold (and (on ?v) (< (distance 5 desk) (building_size room_center desk)) ) )
              (once (in ?y ?v) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once preference3:green:blue_dodgeball) (external-forall-minimize 2 ) )
)
(:scoring
  (* (external-forall-maximize (* 10 (count preference3:yellow) )
    )
    (* 6 3 )
  )
)
)

(define (game game-id-291) (:domain medium-objects-room-v1)
(:setup
  (exists (?x - hexagonal_bin)
    (game-conserved
      (agent_holds ?x ?x)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?s - cube_block)
        (then
          (once (not (adjacent ?s) ) )
          (once (agent_holds ?s) )
          (once (in upright ?s) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (+ (count preference1:yellow) (* 3 (count-once-per-objects preference1:alarm_clock) )
      )
      (count preference1:blue_pyramid_block)
    )
    (external-forall-minimize
      2
    )
  )
)
(:scoring
  (count preference1:golfball:beachball)
)
)

(define (game game-id-292) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?n - hexagonal_bin)
      (game-conserved
        (not
          (agent_holds ?n ?n)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?s - (either cube_block ball tall_cylindrical_block))
      (and
        (preference preference1
          (exists (?c - cube_block)
            (then
              (hold (not (not (not (not (not (in ?c desk) ) ) ) ) ) )
              (once (or (on agent) (not (agent_holds ?s ?c) ) ) )
            )
          )
        )
        (preference preference2
          (exists (?i - chair ?t - ball)
            (then
              (once (and (on ?t ?s) (<= (distance ?t ?t) (distance room_center 9)) (not (in_motion ?t ?t) ) (on ?t ?t) ) )
              (once (on agent) )
              (once (in_motion ?t ?t) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?b - shelf)
        (then
          (once (agent_holds ?b ?b) )
          (hold (and (on ?b) (agent_holds upright ?b) ) )
          (once (in upright) )
        )
      )
    )
    (preference preference4
      (exists (?o - curved_wooden_ramp ?f - color)
        (then
          (hold (in ?f ?f) )
          (once (in_motion ?f ?f) )
          (hold (exists (?n ?y ?x - (either golfball dodgeball) ?g - teddy_bear) (in_motion ?f) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference4:dodgeball) (count-longest preference2:hexagonal_bin) )
)
(:scoring
  1
)
)

(define (game game-id-293) (:domain medium-objects-room-v1)
(:setup
  (exists (?a - (either yellow yellow_cube_block))
    (and
      (game-conserved
        (in_motion ?a)
      )
      (game-optional
        (object_orientation ?a)
      )
      (exists (?s - ball)
        (game-optional
          (and
            (not
              (or
                (toggled_on ?a ?a)
                (on ?s ?a)
              )
            )
            (not
              (on ?s ?s)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?a - hexagonal_bin)
        (at-end
          (and
            (and
              (< 2 1)
              (not
                (not
                  (not
                    (and
                      (exists (?v - curved_wooden_ramp)
                        (and
                          (not
                            (and
                              (agent_holds ?a ?v)
                              (agent_holds ?v floor)
                            )
                          )
                          (in ?v ?v ?v)
                        )
                      )
                      (exists (?v - hexagonal_bin)
                        (and
                          (on ?a)
                          (in_motion ?a)
                        )
                      )
                    )
                  )
                )
              )
              (on ?a ?a)
            )
            (in ?a)
            (in_motion ?a ?a)
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= 10 (count preference1:golfball) )
    (>= 6 (total-time) )
  )
)
(:scoring
  (count preference1:dodgeball)
)
)

(define (game game-id-294) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (not
      (in_motion ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?d - hexagonal_bin ?g - (either rug key_chain))
        (then
          (hold (and (object_orientation ?g ?g) (in_motion ?g) (agent_holds top_shelf agent) ) )
          (hold-while (and (exists (?m - (either flat_block laptop chair) ?f - (either alarm_clock golfball tall_cylindrical_block)) (in ?f) ) (not (and (< 1 1) (touch ?g) ) ) ) (and (adjacent blue) (and (not (in_motion ?g ?g) ) (and (and (on pink_dodgeball ?g) (in_motion ?g) ) (not (not (not (< 8 (distance agent)) ) ) ) (rug_color_under ?g) (agent_holds ?g) (on ?g ?g) (in_motion pink_dodgeball ?g) (in ?g agent) (and (is_setup_object ?g door) (not (in_motion ?g ?g) ) ) (agent_holds ?g ?g) (in_motion ?g ?g) (not (touch ?g) ) (and (< 7 (distance 6 ?g)) (in_motion ?g) (in_motion ?g) ) ) ) ) )
          (once (in_motion ?g) )
          (once (>= 10 (distance ?g ?g 2)) )
        )
      )
    )
    (forall (?a - curved_wooden_ramp)
      (and
        (preference preference2
          (at-end
            (not
              (in ?a)
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?r - (either floor))
        (then
          (once (agent_holds ?r) )
          (hold (and (in ?r) (not (equal_x_position ?r) ) ) )
          (hold (exists (?u - hexagonal_bin) (not (in_motion ?r ?u) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count-once-per-objects preference2:purple:dodgeball) (count preference3:brown:pink) )
    2
  )
)
(:scoring
  (count-overlapping preference2)
)
)

(define (game game-id-295) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (not
      (and
        (agent_holds ?xxx ?xxx)
        (and
          (and
            (adjacent_side ?xxx ?xxx)
            (in ?xxx)
            (same_object ?xxx ?xxx)
          )
          (agent_holds ?xxx)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?s ?v - dodgeball)
        (then
          (once (and (agent_holds ?v ?v) (and (agent_holds ?v desk) (not (and (agent_holds ?s) (exists (?g - cube_block ?w - game_object ?d - hexagonal_bin ?a - (either cd game_object)) (agent_holds ?s pink) ) ) ) ) ) )
          (once (in ?s pink) )
          (hold (and (on ?v) (not (agent_holds ?v ?v ?s) ) ) )
        )
      )
    )
    (forall (?c - (either alarm_clock bed) ?y - dodgeball)
      (and
        (preference preference2
          (exists (?n - ball ?b - dodgeball)
            (at-end
              (on ?b ?b)
            )
          )
        )
        (preference preference3
          (exists (?g - game_object)
            (then
              (once (touch ?y) )
              (hold (on ?g ?g) )
            )
          )
        )
      )
    )
    (preference preference4
      (exists (?i - hexagonal_bin)
        (then
          (hold (not (and (agent_holds ?i) (and (on block floor back) (and (touch ?i ?i) (agent_holds ?i) ) ) ) ) )
          (once (and (on ?i) (agent_holds ?i ?i) ) )
          (hold-while (in_motion ?i) (and (not (agent_holds ?i) ) (adjacent ?i) ) (not (not (not (on ?i) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (count preference3) )
)
(:scoring
  10
)
)

(define (game game-id-296) (:domain many-objects-room-v1)
(:setup
  (exists (?i - golfball ?n - hexagonal_bin)
    (and
      (game-conserved
        (in_motion ?n)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?k - ball)
        (then
          (hold (on ?k ?k) )
          (hold-while (agent_holds upright ?k) (forall (?m - curved_wooden_ramp ?x - hexagonal_bin ?a - dodgeball) (in_motion ?k ?k) ) )
          (once (and (and (and (faces ?k agent) (in_motion bed) ) (in_motion desk) (not (<= (distance ) 1) ) ) (or (agent_holds ?k) (in_motion ?k ?k) ) ) )
        )
      )
    )
  )
)
(:terminal
  (> 5 (count-once-per-objects preference1:cylindrical_block) )
)
(:scoring
  (total-time)
)
)

(define (game game-id-297) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (in_motion ?xxx front)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?o - building ?u - beachball)
        (then
          (hold (and (is_setup_object ?u ?u) ) )
          (once (or (not (and (forall (?p - hexagonal_bin) (agent_holds ?u ?u) ) (not (agent_holds pink ?u) ) ) ) (agent_holds ?u) (and (and (agent_holds ?u ?u) (not (agent_holds ?u ?u) ) ) (not (and (and (not (on ?u ?u) ) (not (agent_holds upright) ) ) (and (and (in_motion ?u) (not (and (in_motion ?u ?u) (forall (?i - wall) (not (not (touch ?i) ) ) ) ) ) ) (and (in_motion ?u) (in ?u ?u) ) ) ) ) ) (on ?u) ) )
          (hold (on ?u) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (* (count-once preference1:dodgeball) (count preference1:blue_pyramid_block) )
      (count preference1:beachball)
    )
    0
  )
)
(:scoring
  3
)
)

(define (game game-id-298) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (in_motion ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?c - ball ?i - game_object)
        (then
          (hold-while (and (in_motion ?i agent) (exists (?n - golfball) (and (on agent) (and (in_motion ?n right) (adjacent_side ?i) ) ) ) ) (not (and (opposite ?i ?i) (adjacent ?i ?i) ) ) (in_motion ?i) )
          (once (= (distance ?i ?i)) )
          (once (not (not (< (distance 2 desk) (distance desk ?i)) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 5 16 )
)
(:scoring
  (count-longest preference1:golfball)
)
)

(define (game game-id-299) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (and
      (agent_holds bed ?xxx)
      (agent_holds pink ?xxx)
      (in_motion ?xxx)
      (and
        (and
          (not
            (not
              (in_motion agent rug)
            )
          )
          (and
            (agent_holds ?xxx)
            (and
              (not
                (exists (?q - tall_cylindrical_block)
                  (not
                    (< 1 (distance ?q agent))
                  )
                )
              )
              (< (distance ?xxx 1) 1)
              (and
                (and
                  (in door)
                  (open ?xxx agent)
                )
                (object_orientation ?xxx)
              )
              (and
                (in ?xxx ?xxx)
                (agent_holds ?xxx)
              )
              (and
                (and
                  (opposite bed)
                  (game_over ?xxx)
                )
                (above ?xxx)
              )
              (not
                (forall (?y - hexagonal_bin ?m ?s - dodgeball)
                  (and
                    (adjacent_side ?m agent)
                    (and
                      (agent_holds ?m ?m)
                      (and
                        (and
                          (on ?m)
                          (in_motion ?s pink agent)
                        )
                        (and
                          (on ?m)
                          (on ?m floor)
                        )
                      )
                    )
                    (>= 6 (distance 8 agent))
                    (and
                      (in_motion ?s)
                      (object_orientation ?s ?s)
                      (and
                        (in_motion ?s)
                        (in ?s)
                      )
                      (not
                        (and
                          (and
                            (in ?m upright)
                            (not
                              (in_motion ?m back)
                            )
                          )
                          (is_setup_object ?s)
                          (not
                            (agent_holds agent)
                          )
                          (and
                            (in_motion ?s)
                            (in_motion ?s ?m)
                          )
                          (not
                            (in_motion floor ?m)
                          )
                          (or
                            (not
                              (agent_holds ?s)
                            )
                            (agent_holds ?m ?s)
                            (not
                              (not
                                (on ?m floor)
                              )
                            )
                            (and
                              (adjacent ?m)
                              (and
                                (and
                                  (not
                                    (agent_holds ?s ?s)
                                  )
                                  (or
                                    (on ?s ?s)
                                    (agent_holds rug ?s)
                                  )
                                )
                                (and
                                  (in ?m)
                                  (= (distance ?s room_center) (distance 10 room_center))
                                )
                              )
                              (in_motion ?m left)
                            )
                          )
                        )
                      )
                      (adjacent ?m)
                      (above ?s)
                      (on ?s)
                    )
                  )
                )
              )
            )
          )
        )
        (and
          (agent_holds ?xxx)
          (agent_holds ?xxx ?xxx)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c - doggie_bed)
      (and
        (preference preference1
          (exists (?h - ball)
            (at-end
              (is_setup_object ?c ?c)
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?j - dodgeball)
        (then
          (once (on ?j ?j) )
          (hold (and (not (or (not (not (adjacent_side ?j ?j) ) ) (in ?j) ) ) (not (on ?j ?j) ) ) )
          (hold-while (adjacent ?j) (same_color desk) (on ?j ?j) (agent_holds ?j rug ?j) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-overlapping preference2:tall_cylindrical_block:side_table) (total-score) )
    (> (* 300 3 )
      (count-once preference2:hexagonal_bin)
    )
  )
)
(:scoring
  (count preference1:dodgeball)
)
)

(define (game game-id-300) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?i - (either pillow dodgeball))
      (game-optional
        (agent_holds ?i ?i)
      )
    )
    (forall (?p - wall)
      (and
        (game-optional
          (adjacent ?p)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?w - dodgeball)
        (then
          (hold-while (and (on ?w ?w) (agent_holds ?w back) (is_setup_object ?w ?w) ) (exists (?y - (either dodgeball cylindrical_block) ?j ?k - hexagonal_bin ?b - golfball ?x - building) (agent_holds right ?x) ) (and (in_motion ?w desk) (exists (?j ?o - cube_block) (agent_crouches bed) ) ) )
          (once (agent_holds ?w agent) )
          (once (exists (?h - pyramid_block ?z - block) (agent_holds agent) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (total-score) (count preference1:basketball:green) )
  )
)
(:scoring
  20
)
)

(define (game game-id-301) (:domain medium-objects-room-v1)
(:setup
  (forall (?u ?j - hexagonal_bin)
    (game-conserved
      (in_motion pillow)
    )
  )
)
(:constraints
  (and
    (forall (?u - ball)
      (and
        (preference preference1
          (exists (?r - bridge_block)
            (then
              (hold-while (< (distance ?r ?u) (distance ?u agent)) (in ?u) )
              (once (in_motion ?r ?r) )
              (once (agent_holds desk) )
            )
          )
        )
        (preference preference2
          (exists (?n - dodgeball)
            (then
              (once (and (or (on ?u ?n) (and (equal_z_position blue ?u) (opposite ?n) ) ) (in_motion ?n agent) ) )
              (once (or (not (and (adjacent ?n bed) (not (< 1 6) ) ) ) ) )
              (once-measure (adjacent ?u agent) (distance ?u 10) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 3 (+ (* (count preference2:blue) )
        5
        (count-shortest preference2:hexagonal_bin)
      )
    )
    (>= (count-once-per-objects preference2:blue_cube_block) 5 )
    (> 3 (total-time) )
    (< (* (total-score) 1 (+ (count preference2:dodgeball:dodgeball:yellow) 6 )
      )
      (count-once-per-objects preference1)
    )
  )
)
(:scoring
  (count preference2:doggie_bed:dodgeball)
)
)

(define (game game-id-302) (:domain few-objects-room-v1)
(:setup
  (and
    (game-conserved
      (in_motion ?xxx)
    )
    (exists (?a - hexagonal_bin ?g - doggie_bed)
      (exists (?j - cube_block ?o - ball)
        (and
          (game-conserved
            (not
              (agent_holds ?o ?g)
            )
          )
          (game-conserved
            (not
              (agent_holds ?g)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?s ?h - game_object)
        (then
          (hold (same_color ?s ?h) )
          (hold (adjacent_side agent) )
          (hold-to-end (not (same_object ?s ?s) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (>= 30 1 )
  )
)
(:scoring
  6
)
)

(define (game game-id-303) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?v - hexagonal_bin)
      (game-conserved
        (agent_holds front)
      )
    )
  )
)
(:constraints
  (and
    (forall (?n ?z - dodgeball ?u ?h - (either golfball golfball cd))
      (and
        (preference preference1
          (then
            (once (and (not (in_motion ?u ?u) ) (>= 1 7) (or (not (and (exists (?r - hexagonal_bin) (or (in_motion ?r) (agent_holds ?u ?r) ) ) (not (not (and (and (agent_holds ?h ?u) (in_motion agent ?h) ) (and (in ?u ?h) (on ?h) ) ) ) ) (exists (?c - wall) (in_motion ?u) ) ) ) ) ) )
            (hold-while (and (game_over ?h) (and (not (agent_holds ?u) ) (not (not (in_motion ?h) ) ) (in_motion ?u) ) ) (on ?h) (and (touch rug ?u) (and (in_motion ?h) (not (on ?u ?u) ) ) (not (equal_z_position ?h ?u) ) ) (on bed ?h) )
            (once (in_motion ?h desk) )
            (once (on ?h ?u) )
          )
        )
        (preference preference2
          (exists (?z - cube_block ?f - ball)
            (at-end
              (not
                (not
                  (and
                    (or
                      (agent_holds ?f)
                      (not
                        (adjacent ?f ?f)
                      )
                      (not
                        (and
                          (agent_holds ?f)
                          (agent_holds ?h ?f)
                        )
                      )
                    )
                    (and
                      (on agent)
                      (< (distance ?h room_center) (distance ?f 1))
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (external-forall-maximize (external-forall-maximize (count preference1:beachball:pink_dodgeball) ) ) (total-time) )
    (>= (or (* 2 0 (= 8 (* (count-same-positions preference1:dodgeball) 5 )
          )
        )
      )
      5
    )
  )
)
(:scoring
  (* 10 10 )
)
)

(define (game game-id-304) (:domain medium-objects-room-v1)
(:setup
  (exists (?y - hexagonal_bin)
    (and
      (game-optional
        (adjacent ?y rug)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?c - game_object)
        (then
          (once (and (not (on ?c) ) (touch ?c) ) )
          (hold (in ?c) )
          (hold-while (in_motion ?c) (or (in_motion ?c ?c) (and (agent_holds ?c) (and (or (agent_holds ?c) (exists (?i - dodgeball ?g - block ?t ?z - ball ?t - cube_block) (agent_holds floor) ) ) (touch ?c desk) ) (and (in_motion ?c ?c) (agent_holds ?c) ) (not (in agent front) ) ) ) )
        )
      )
    )
    (preference preference2
      (exists (?v - hexagonal_bin ?f - shelf)
        (then
          (once (< 4 9) )
          (once (not (exists (?e - teddy_bear) (not (in_motion ?f ?f) ) ) ) )
          (hold-for 0 (= 3 1 (distance door)) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (count preference1:pink:green) 3 )
    (>= 2 5 )
  )
)
(:scoring
  (external-forall-maximize
    (* (count preference2) (* 5 (count preference2:basketball) )
      (count preference2:golfball)
    )
  )
)
)

(define (game game-id-305) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?t - ball ?n - ball)
      (game-optional
        (not
          (in ?n)
        )
      )
    )
    (and
      (exists (?b - doggie_bed)
        (game-conserved
          (forall (?j - ball)
            (and
              (adjacent ?b)
              (exists (?d - teddy_bear)
                (agent_holds ?j sideways)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o - hexagonal_bin)
      (and
        (preference preference1
          (exists (?b - hexagonal_bin)
            (at-end
              (in_motion ?o)
            )
          )
        )
      )
    )
    (forall (?e - ball)
      (and
        (preference preference2
          (exists (?a - game_object)
            (then
              (hold-while (agent_holds ?e) (and (and (exists (?d - hexagonal_bin) (in_motion ?e ?d) ) (and (not (and (< 2 1) (> 1 (distance ?e)) ) ) (agent_holds floor ?e) ) (forall (?p - dodgeball ?t ?v ?r - dodgeball) (and (agent_holds ?v) (faces ?a ?r) ) ) ) (not (not (in_motion brown ?a) ) ) ) (not (and (agent_holds ?e) (>= (distance ) (distance ?a ?e)) ) ) (not (and (agent_holds ?a ?e) (not (and (or (and (exists (?k - color) (agent_holds ?e) ) (agent_holds ?a) (= (distance 6 ?a) 1) ) (and (in_motion ?e ?a) (< (distance room_center ?a) (distance ?e 0)) (and (not (rug_color_under ?e) ) (or (on ?e ?a) ) (not (in_motion ?e ?e) ) ) ) (in ?e ?a ?e) (in_motion ?a) ) ) ) ) ) )
              (hold-while (exists (?x - game_object) (agent_holds ?a) ) (not (< (distance desk ?e) (distance 7 ?e)) ) )
              (once (on ?a floor) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> 4 (* (count preference2:beachball) (count preference2:yellow) 10 (* 9 (count preference1:yellow) )
      (count preference2:green)
      1
      (-
        (not
          (count preference2:basketball:pink_dodgeball)
        )
        3
      )
      30
      (* 50 (count preference2:basketball) )
      2
      (count-once-per-objects preference2:orange)
      (* (count preference1:basketball) 7 )
    )
  )
)
(:scoring
  (* (count preference1:hexagonal_bin) (or (count preference2:blue_cube_block) (external-forall-maximize 6 ) 2 ) )
)
)

(define (game game-id-306) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (in ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?o - (either key_chain dodgeball) ?p - (either hexagonal_bin dodgeball) ?e - hexagonal_bin ?f - building)
        (then
          (forall-sequence (?j - doggie_bed)
            (then
              (hold (in_motion ?j) )
              (hold (and (on ?j) (not (< 6 (distance agent 10)) ) ) )
              (once (and (or (and (and (in_motion ?j) (same_color ?f) ) (same_type ?j) ) (on ?f) (in_motion ?f) ) (and (< 1 (distance ?j room_center)) (agent_holds ?f ?f) ) ) )
            )
          )
          (hold (equal_z_position ?f bed) )
          (once (exists (?z - red_dodgeball) (same_color floor) ) )
        )
      )
    )
    (preference preference2
      (exists (?s - block)
        (then
          (once (and (in_motion ?s) (and (> 2 (distance 5)) (not (agent_holds ?s) ) ) ) )
          (hold-while (and (on ?s agent) (and (in_motion ?s) (touch ?s) ) ) (in ?s) )
          (hold-while (in_motion ?s) (and (and (in ?s) (agent_holds rug) ) (and (touch ?s ?s) (forall (?e - book ?b - curved_wooden_ramp) (< 1 5) ) (and (touch ?s) (or (not (in_motion ?s ?s) ) (in_motion ?s) ) ) ) (and (adjacent ?s ?s) (agent_holds ?s) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 15 (= (count-once-per-objects preference2:pyramid_block) (* (* (* (count-once-per-objects preference1:basketball:basketball) (* 3 (count preference2:yellow) )
          )
          (<= (- (count preference2:golfball) )
            5
          )
        )
        (* (count-once preference2:dodgeball) (<= 10 (count-once preference2:brown) )
        )
      )
    )
  )
)
(:scoring
  20
)
)

(define (game game-id-307) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (is_setup_object ?xxx)
    )
  )
)
(:constraints
  (and
    (forall (?l - hexagonal_bin)
      (and
        (preference preference1
          (exists (?n - game_object)
            (then
              (once (in_motion ?n) )
              (hold (in_motion ?l) )
              (hold-for 4 (on ?n) )
            )
          )
        )
        (preference preference2
          (exists (?m - doggie_bed ?b - doggie_bed)
            (then
              (once (in_motion rug) )
              (hold (not (agent_holds ?l) ) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?v - (either dodgeball cylindrical_block) ?k - shelf)
        (then
          (once (< 4 (distance agent agent)) )
          (once (adjacent ?k ?k) )
          (hold-while (not (not (on ?k) ) ) (in_motion ?k ?k) )
        )
      )
    )
    (forall (?m - hexagonal_bin)
      (and
        (preference preference4
          (exists (?h - cylindrical_block ?j ?g - game_object)
            (then
              (once (agent_holds ?g rug) )
              (once (and (forall (?b - dodgeball ?h - hexagonal_bin) (agent_holds ?g ?g) ) (exists (?f - (either book teddy_bear golfball)) (adjacent_side ?f ?m) ) ) )
              (once (on ?j ?m) )
            )
          )
        )
      )
    )
    (forall (?e ?g - doggie_bed ?w - (either yellow_cube_block dodgeball))
      (and
        (preference preference5
          (exists (?v - triangular_ramp)
            (then
              (hold (not (and (and (in_motion desk) (on floor ?v) ) (in_motion ?w) (same_type ?v ?v ?w) ) ) )
              (once (agent_holds ?v) )
              (once (touch ?w floor) )
            )
          )
        )
      )
    )
    (preference preference6
      (exists (?r ?y ?o ?q ?u - tan_cube_block)
        (then
          (once (agent_holds ?u) )
          (any)
        )
      )
    )
  )
)
(:terminal
  (<= 5 (external-forall-minimize (external-forall-minimize (count preference5:doggie_bed) ) ) )
)
(:scoring
  (count preference3:pink_dodgeball)
)
)

(define (game game-id-308) (:domain medium-objects-room-v1)
(:setup
  (not
    (game-optional
      (not
        (in_motion ?xxx)
      )
    )
  )
)
(:constraints
  (and
    (forall (?s - hexagonal_bin)
      (and
        (preference preference1
          (exists (?v ?q ?g ?n ?m ?x ?z ?d ?l ?h - (either cd) ?l - game_object)
            (then
              (once (agent_holds front) )
              (once (and (in ?s ?l) (and (same_color ?l ?s) (in_motion ?l ?s) ) ) )
              (hold (in_motion ?l block) )
            )
          )
        )
        (preference preference2
          (exists (?z - block ?g - curved_wooden_ramp)
            (then
              (once (same_object ?g) )
              (once (in_motion agent) )
              (once (agent_holds ?g) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= 4 4 )
)
(:scoring
  (- 4 )
)
)

(define (game game-id-309) (:domain many-objects-room-v1)
(:setup
  (forall (?o - dodgeball)
    (and
      (and
        (exists (?c - beachball)
          (forall (?v - ball)
            (forall (?s - ball ?f - pillow)
              (exists (?x - dodgeball)
                (and
                  (and
                    (exists (?e - dodgeball)
                      (exists (?i - shelf ?w - ball)
                        (and
                          (game-conserved
                            (and
                              (= (distance agent desk) (distance ?w ?o))
                              (on ?x agent)
                            )
                          )
                        )
                      )
                    )
                    (and
                      (game-conserved
                        (and
                          (in_motion ?v)
                          (adjacent_side ?o ?o)
                        )
                      )
                      (or
                        (exists (?s - (either curved_wooden_ramp cd alarm_clock cellphone triangle_block triangular_ramp cd) ?k - bridge_block)
                          (exists (?m - dodgeball)
                            (game-optional
                              (on ?k)
                            )
                          )
                        )
                        (and
                          (exists (?b - (either cube_block rug))
                            (forall (?w - rug ?n ?l - dodgeball)
                              (and
                                (or
                                  (game-conserved
                                    (and
                                      (and
                                        (not
                                          (object_orientation ?f)
                                        )
                                        (in floor)
                                        (agent_holds ?o ?f)
                                      )
                                      (rug_color_under ?b ?o)
                                      (in ?f)
                                      (in_motion ?o)
                                    )
                                  )
                                )
                              )
                            )
                          )
                          (and
                            (forall (?a - hexagonal_bin)
                              (exists (?e - game_object)
                                (game-conserved
                                  (on ?a)
                                )
                              )
                            )
                            (forall (?j - pillow ?t - beachball ?y - hexagonal_bin ?e - cube_block ?a - hexagonal_bin)
                              (and
                                (game-conserved
                                  (and
                                    (and
                                      (in_motion ?c)
                                      (and
                                        (adjacent_side ?a)
                                        (not
                                          (and
                                            (and
                                              (not
                                                (not
                                                  (not
                                                    (adjacent ?x)
                                                  )
                                                )
                                              )
                                              (in_motion ?o ?x)
                                            )
                                            (not
                                              (in front)
                                            )
                                          )
                                        )
                                      )
                                    )
                                    (in agent)
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                      (game-conserved
                        (not
                          (and
                            (not
                              (= 1)
                            )
                            (and
                              (in_motion agent)
                              (agent_holds ?f)
                            )
                            (and
                              (adjacent_side floor)
                              (and
                                (agent_holds ?x ?v)
                                (in ?x)
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                  (or
                    (exists (?z - hexagonal_bin ?d - ball)
                      (game-optional
                        (< 8 5)
                      )
                    )
                    (forall (?l ?y - hexagonal_bin ?d - cube_block)
                      (and
                        (game-conserved
                          (agent_holds ?x ?v)
                        )
                      )
                    )
                    (or
                      (game-conserved
                        (and
                          (and
                            (and
                              (not
                                (and
                                  (in_motion ?o ?o)
                                  (in ?f ?v)
                                  (agent_holds ?c)
                                  (agent_holds rug)
                                  (in ?f ?v)
                                  (agent_holds ?f ?o)
                                  (on ?c blue)
                                  (agent_holds ?v)
                                  (<= (distance ?v ?x) (distance ?v ?o))
                                  (agent_holds ?x ?c)
                                  (on pink_dodgeball ?x)
                                  (in_motion ?v ?v)
                                )
                              )
                              (or
                                (not
                                  (adjacent_side agent)
                                )
                                (and
                                  (on ?c ?c)
                                  (in rug)
                                )
                                (in agent)
                              )
                            )
                            (not
                              (and
                                (or
                                  (touch ?x)
                                  (in_motion ?c)
                                )
                                (adjacent ?c desk)
                                (not
                                  (same_color back desk)
                                )
                              )
                            )
                          )
                        )
                      )
                      (and
                        (forall (?d ?i ?p ?s ?l ?r - (either book pyramid_block rug))
                          (forall (?t - dodgeball)
                            (forall (?y - (either cd game_object))
                              (game-conserved
                                (exists (?u ?a - block)
                                  (touch ?t)
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
        (exists (?l - hexagonal_bin)
          (game-optional
            (not
              (on ?o top_drawer)
            )
          )
        )
        (game-optional
          (in ?o ?o)
        )
      )
      (forall (?c - ball)
        (game-conserved
          (and
            (and
              (agent_holds bed ?o)
              (same_type ?o)
            )
            (and
              (in ?o ?o)
              (in_motion blue)
            )
          )
        )
      )
      (game-conserved
        (and
          (agent_holds bed rug)
          (in ?o)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?h - hexagonal_bin ?m - (either dodgeball pink))
        (then
          (once (not (not (not (not (same_object ?m) ) ) ) ) )
          (hold (agent_holds top_shelf agent) )
          (once (in_motion ?m) )
        )
      )
    )
    (preference preference2
      (exists (?e - dodgeball)
        (then
          (once (agent_holds ?e upright) )
          (once (agent_holds ?e) )
          (once (and (not (open ?e ?e) ) (or (agent_holds ?e) (and (on rug ?e) (toggled_on ?e) ) (not (and (and (agent_holds ?e) (same_color color ?e) (and (not (in ?e front desk) ) (same_color agent) ) ) (in_motion ?e) ) ) (in ?e) ) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (>= 10 (count preference1:golfball:pink) )
    )
  )
)
(:scoring
  4
)
)

(define (game game-id-310) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (in_motion ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?l - block ?i - desk_shelf)
        (then
          (once (>= (distance 6 desk) 7) )
          (hold (touch ?i ?i) )
          (once (and (or (touch ?i ?i) ) (agent_holds ?i) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:golfball) 6 )
)
(:scoring
  0
)
)

(define (game game-id-311) (:domain few-objects-room-v1)
(:setup
  (and
    (game-conserved
      (in bed)
    )
    (game-conserved
      (not
        (< 1 5)
      )
    )
    (exists (?i - game_object ?d - hexagonal_bin)
      (and
        (exists (?g - block)
          (exists (?m - block ?p - teddy_bear)
            (and
              (game-conserved
                (adjacent ?p)
              )
              (exists (?x - (either floor pink))
                (forall (?y - cube_block)
                  (forall (?o - desk_shelf ?n - (either key_chain blue_cube_block))
                    (forall (?o - game_object ?c - dodgeball)
                      (game-optional
                        (agent_holds ?p)
                      )
                    )
                  )
                )
              )
              (or
                (game-conserved
                  (and
                    (< (distance 7 desk) 1)
                    (agent_holds ?d)
                  )
                )
              )
            )
          )
        )
        (game-optional
          (< (distance ?d ?d) 9)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (then
        (hold (<= 1 (distance desk desk)) )
        (once (not (on ?xxx ?xxx) ) )
        (once (adjacent upright ?xxx) )
      )
    )
  )
)
(:terminal
  (>= (* (= (count-shortest preference1:golfball) (count-once-per-objects preference1:pink_dodgeball) )
      (* (* 6 (count-once-per-objects preference1:cube_block) )
        1
      )
    )
    (* (count-once-per-objects preference1:pink) (count preference1:pink) )
  )
)
(:scoring
  5
)
)

(define (game game-id-312) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (touch ?xxx blinds)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?y - block)
        (then
          (once (in_motion ?y) )
          (hold (not (exists (?k - dodgeball) (adjacent ?k) ) ) )
          (once (in ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (count-once-per-objects preference1:yellow_cube_block:yellow_cube_block) (count-longest preference1:top_drawer:pink) )
  )
)
(:scoring
  5
)
)

(define (game game-id-313) (:domain medium-objects-room-v1)
(:setup
  (or
    (and
      (game-conserved
        (in ?xxx)
      )
      (and
        (and
          (and
            (game-conserved
              (in blue)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (then
        (once (and (exists (?q - building) (agent_holds ?q) ) (in rug) ) )
        (hold-for 0 (and (agent_holds ?xxx top_shelf) (in_motion ?xxx) (not (in_motion ?xxx) ) ) )
        (once (and (< (distance ?xxx desk) 2) (and (and (on ?xxx ?xxx) (same_color front ?xxx) ) (and (not (on ?xxx desk) ) (not (agent_holds floor) ) ) ) ) )
      )
    )
    (preference preference2
      (exists (?i ?g - (either yellow lamp))
        (then
          (once (in_motion ?i rug) )
          (hold (in_motion ?g) )
          (hold-while (in_motion ?i ?i) (on ?g ?i) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (or 3 (total-time) ) (count-overlapping preference2:basketball) )
    (>= (* 1 (- (* 6 6 )
        )
      )
      9
    )
    (or
      (>= (* 6 (- (count preference1:beachball:red) )
        )
        20
      )
    )
    (>= (+ (count preference2:hexagonal_bin) 5 (- (count preference2:red) )
        (* (= (* (count preference2:dodgeball) 3 (= (* (count-unique-positions preference2:book) (count-overlapping preference1:dodgeball:beachball) )
                (count preference1:beachball)
              )
              (* (count-once-per-objects preference1) (+ (count preference2:red) 9 4 )
              )
              1
              (count-once-per-objects preference1:pink_dodgeball)
            )
            (or
              (* (count preference1:pink_dodgeball:book) (count-overlapping preference2:dodgeball) )
            )
          )
          (* (count-overlapping preference1:beachball:beachball) 1 )
        )
        (count preference1:blue_dodgeball:golfball)
        4
      )
      (+ (count preference2:golfball) 5 (count preference2:book) )
    )
  )
)
(:scoring
  15
)
)

(define (game game-id-314) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (not
      (on ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?c - chair ?e ?b - (either laptop doggie_bed))
        (then
          (once (on ?e) )
          (hold-while (not (above ?b) ) (on rug) )
          (hold (agent_holds ?b) )
        )
      )
    )
    (preference preference2
      (at-end
        (and
          (on ?xxx)
          (not
            (agent_holds bed)
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (not (count preference1:beachball) ) 1 )
      (>= (count-once preference2:dodgeball) (count preference1:beachball) )
    )
    (or
      (not
        (> 5 9 )
      )
      (< (count preference1:basketball:dodgeball:doggie_bed) (= (* (* 10 6 (count preference2:doggie_bed) )
            (+ (total-score) 2 )
          )
          (count preference2:pink)
        )
      )
    )
  )
)
(:scoring
  (count preference1:dodgeball:dodgeball)
)
)

(define (game game-id-315) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (in ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?y - hexagonal_bin ?x - (either golfball cylindrical_block) ?q - shelf)
        (then
          (once (on ?q rug) )
          (once (agent_holds ?q) )
          (once (and (not (on ?q ?q) ) (adjacent ?q ?q) (and (not (agent_holds rug ?q) ) (agent_holds ?q) ) (in_motion ?q) ) )
        )
      )
    )
  )
)
(:terminal
  (< 10 10 )
)
(:scoring
  0
)
)

(define (game game-id-316) (:domain medium-objects-room-v1)
(:setup
  (exists (?o - (either dodgeball main_light_switch red))
    (exists (?p - building)
      (exists (?k - dodgeball)
        (and
          (game-conserved
            (and
              (object_orientation ?k)
              (adjacent ?p)
            )
          )
          (exists (?d - game_object)
            (game-optional
              (exists (?n - teddy_bear ?e - hexagonal_bin ?b - shelf)
                (in_motion ?d)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?v - (either golfball chair) ?p - hexagonal_bin)
      (and
        (preference preference1
          (exists (?r - hexagonal_bin ?m - chair)
            (at-end
              (in_motion ?p)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once preference1:basketball) (count-once-per-external-objects preference1:dodgeball) )
)
(:scoring
  (count preference1:yellow:pink_dodgeball)
)
)

(define (game game-id-317) (:domain medium-objects-room-v1)
(:setup
  (exists (?a - ball)
    (forall (?f - hexagonal_bin ?w - curved_wooden_ramp)
      (game-conserved
        (in_motion ?a ?a ?w ?a)
      )
    )
  )
)
(:constraints
  (and
    (forall (?z - (either triangular_ramp main_light_switch rug) ?g - block)
      (and
        (preference preference1
          (exists (?a - block)
            (then
              (once (on front) )
              (hold-while (same_object ?g ?g ?g) (and (on ?a) (on ?g) ) )
              (hold (in_motion ?g agent) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (count-once-per-objects preference1:red) (count-once-per-objects preference1:purple:pink) )
    10
  )
)
(:scoring
  6
)
)

(define (game game-id-318) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (agent_holds ?xxx)
  )
)
(:constraints
  (and
    (forall (?a ?q - shelf)
      (and
        (preference preference1
          (exists (?b - hexagonal_bin)
            (then
              (once (not (in_motion ?b) ) )
              (once (in_motion ?b) )
              (hold (and (in ?b) (agent_holds ?b) (object_orientation ?q) (in ?q ?q) ) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?g - dodgeball)
        (then
          (hold (and (agent_holds ) (forall (?t - chair) (not (on ?g agent) ) ) ) )
          (once (< 0 (distance ?g 7)) )
          (once (on ?g) )
        )
      )
    )
    (preference preference3
      (exists (?b - dodgeball ?z - dodgeball ?z - hexagonal_bin)
        (then
          (forall-sequence (?p - hexagonal_bin)
            (then
              (once (agent_holds ?z ?p) )
              (once (not (not (in_motion yellow) ) ) )
              (once (not (and (agent_holds ?p ?p) (not (exists (?g - game_object) (and (in ?g) (in ?z ?g) ) ) ) (not (< 1 (x_position desk bed)) ) ) ) )
            )
          )
          (once (not (and (not (not (and (not (and (same_color ?z ?z) (not (on ?z) ) ) ) (adjacent ?z ?z) (not (not (in_motion ?z ?z) ) ) (and (in ?z ?z) (agent_holds ?z) ) (and (not (and (not (in_motion ?z pink_dodgeball) ) (and (agent_holds ?z) (in_motion ?z) (not (not (is_setup_object ?z) ) ) (not (not (in_motion ?z) ) ) ) ) ) (adjacent ?z ?z) ) (agent_holds ?z) (agent_holds ?z ?z) ) ) ) (not (adjacent ?z) ) ) ) )
          (hold (agent_holds rug ball) )
          (once (in_motion ?z) )
          (once (not (not (agent_holds ?z) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (- 1 )
      (external-forall-maximize
        (* (- (count-once-per-objects preference1:alarm_clock) )
          2
        )
      )
    )
    (>= 3 4 )
  )
)
(:scoring
  (count-once preference2:dodgeball)
)
)

(define (game game-id-319) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (agent_holds ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?r - block)
        (then
          (hold (and (and (exists (?e - (either desktop desktop triangle_block) ?v - game_object) (and (not (and (agent_holds ?v) (between ?v ?v) (< (distance agent front) (building_size 1 ?v)) ) ) (agent_holds ?r) (and (in_motion ?v) (adjacent_side ?r) ) ) ) (not (not (not (in ?r) ) ) ) ) (on desk) ) )
          (once (not (not (adjacent ?r rug) ) ) )
          (hold (in_motion ?r) )
          (once (in ?r ?r) )
        )
      )
    )
    (preference preference2
      (exists (?h - hexagonal_bin ?c - pillow)
        (then
          (hold (agent_holds ?c) )
          (hold (and (agent_holds ?c) (in_motion ?c) ) )
          (once (and (and (not (on ?c agent) ) (on ?c) ) (touch ?c) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) 10 )
)
(:scoring
  (count preference1:wall)
)
)

(define (game game-id-320) (:domain medium-objects-room-v1)
(:setup
  (forall (?l - pillow ?x - chair)
    (not
      (forall (?a - hexagonal_bin)
        (forall (?s - hexagonal_bin ?i - hexagonal_bin ?j - hexagonal_bin ?b - shelf ?g - doggie_bed)
          (and
            (exists (?m - dodgeball)
              (and
                (game-conserved
                  (in_motion ?m)
                )
                (forall (?f - ball ?c - hexagonal_bin)
                  (and
                    (and
                      (game-optional
                        (agent_holds ?x ?a)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?a - flat_block)
        (then
          (once (< 10 (distance ?a ?a)) )
          (once (on ?a) )
          (once (touch ?a) )
        )
      )
    )
  )
)
(:terminal
  (>= 0.5 (count preference1:beachball) )
)
(:scoring
  (- (- 10 )
  )
)
)

(define (game game-id-321) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - (either alarm_clock teddy_bear))
      (and
        (game-conserved
          (in_motion ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c - (either main_light_switch))
      (and
        (preference preference1
          (exists (?r - dodgeball ?t - doggie_bed)
            (then
              (once (is_setup_object ?t ?c) )
              (once (and (not (agent_holds ?t ?t) ) (adjacent_side floor) ) )
              (once (exists (?f - curved_wooden_ramp ?p - wall ?d - wall) (adjacent ?t agent) ) )
            )
          )
        )
      )
    )
    (forall (?e - dodgeball ?o - teddy_bear ?z - red_dodgeball)
      (and
        (preference preference2
          (exists (?a - hexagonal_bin)
            (then
              (hold-for 10 (not (agent_holds ?z) ) )
              (hold (exists (?l - dodgeball) (forall (?n - ball) (not (and (and (not (touch ?a ?a) ) (and (and (not (not (agent_holds ?n) ) ) (adjacent ?a) ) (< 0 (distance ?n ?a)) ) ) (touch back) ) ) ) ) )
              (once (and (not (in_motion ?z ?a) ) (in ?a) ) )
            )
          )
        )
        (preference preference3
          (then
            (once (on rug) )
            (hold (not (agent_holds ?z) ) )
            (hold-while (agent_holds bed) (< (distance desk 10) 5) )
          )
        )
      )
    )
  )
)
(:terminal
  (< (count-total preference1) (count preference3:dodgeball) )
)
(:scoring
  (count preference1:dodgeball)
)
)

(define (game game-id-322) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (and
      (in_motion ?xxx)
      (broken ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?a - building)
        (then
          (once (not (in_motion ?a) ) )
          (hold (in_motion ?a) )
          (hold-while (on top_drawer) (< 2 (distance room_center desk ?a)) (same_color ?a ?a) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (total-time) )
)
(:scoring
  8
)
)

(define (game game-id-323) (:domain few-objects-room-v1)
(:setup
  (and
    (game-conserved
      (in_motion ?xxx ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?m - hexagonal_bin ?s - hexagonal_bin ?b - hexagonal_bin)
        (then
          (once (agent_holds bed) )
          (once (not (not (and (is_setup_object ?b ?b) (or (agent_holds ?b) (and (not (in_motion ?b) ) (on ?b ?b) ) ) ) ) ) )
          (once (agent_holds ?b ?b) )
        )
      )
    )
  )
)
(:terminal
  (> (- 10 )
    (count preference1:basketball:pink_dodgeball)
  )
)
(:scoring
  2
)
)

(define (game game-id-324) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (and
        (not
          (game_start ?xxx)
        )
        (in_motion ?xxx ?xxx ?xxx)
      )
    )
    (and
      (forall (?q - game_object)
        (game-optional
          (agent_holds ?q)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?l - building)
        (then
          (hold (agent_holds ?l ?l) )
          (once (in_motion ?l) )
          (hold-to-end (in_motion pink ?l) )
        )
      )
    )
    (preference preference2
      (exists (?u - dodgeball ?m - game_object ?z - hexagonal_bin ?s - desktop)
        (at-end
          (not
            (in_motion ?s ?s)
          )
        )
      )
    )
  )
)
(:terminal
  (< 25 (count preference2:green) )
)
(:scoring
  (count preference2:dodgeball)
)
)

(define (game game-id-325) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (and
        (and
          (game-optional
            (and
              (adjacent ?xxx ?xxx)
              (and
                (adjacent agent)
                (and
                  (and
                    (agent_holds ?xxx)
                    (agent_holds ?xxx)
                  )
                  (or
                    (and
                      (and
                        (and
                          (in_motion ?xxx ?xxx)
                          (in_motion ?xxx rug)
                          (touch door)
                        )
                        (not
                          (> (distance 2 agent) (distance ?xxx room_center ?xxx))
                        )
                      )
                      (and
                        (not
                          (and
                            (in ?xxx ?xxx ?xxx)
                            (and
                              (on ?xxx)
                              (not
                                (in_motion ?xxx)
                              )
                              (not
                                (not
                                  (< 1 1)
                                )
                              )
                              (in_motion ?xxx ?xxx)
                            )
                          )
                        )
                        (in_motion ?xxx)
                        (in_motion ?xxx ?xxx)
                        (on ?xxx ?xxx)
                      )
                    )
                    (agent_holds ?xxx)
                  )
                  (in_motion ?xxx)
                )
                (and
                  (adjacent ?xxx ?xxx)
                  (in_motion ?xxx)
                )
              )
            )
          )
        )
      )
    )
    (exists (?t - curved_wooden_ramp ?i - beachball)
      (forall (?e - hexagonal_bin ?x - game_object)
        (and
          (forall (?v - (either cylindrical_block hexagonal_bin))
            (game-optional
              (and
                (and
                  (adjacent ?x)
                  (in_motion ?x)
                )
                (not
                  (in_motion ?x)
                )
              )
            )
          )
        )
      )
    )
    (and
      (game-conserved
        (not
          (and
            (not
              (exists (?x - hexagonal_bin)
                (and
                  (in ?x)
                  (and
                    (and
                      (in_motion agent)
                      (and
                        (on ?x ?x)
                        (and
                          (agent_holds agent)
                        )
                      )
                    )
                    (not
                      (and
                        (agent_holds door ?x)
                        (and
                          (in_motion door)
                          (agent_holds ?x)
                        )
                      )
                    )
                  )
                  (and
                    (= (building_size ?x room_center) (distance ?x ?x))
                    (exists (?h - yellow_pyramid_block)
                      (= (distance ?h bed) (distance room_center 2))
                    )
                  )
                )
              )
            )
            (not
              (and
                (and
                  (agent_holds ?xxx)
                  (agent_crouches bridge_block)
                  (< (distance ?xxx room_center) 3)
                )
                (< 1 1)
              )
            )
          )
        )
      )
      (exists (?h - hexagonal_bin)
        (game-conserved
          (on ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?i - hexagonal_bin ?l - triangular_ramp)
      (and
        (preference preference1
          (exists (?c - wall ?x - flat_block ?w - game_object)
            (at-end
              (on desk)
            )
          )
        )
      )
    )
    (forall (?h - block)
      (and
        (preference preference2
          (exists (?u - dodgeball ?w - block ?m - game_object ?v - hexagonal_bin)
            (then
              (hold (not (not (and (> (distance ?h 0 ?h) 2) (agent_holds ?v) ) ) ) )
              (hold (and (in_motion ?h) (broken ?h) ) )
              (once (not (same_object ?h) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (count preference1:yellow) 3 )
    (>= (+ 10 20 (count preference2:hexagonal_bin) )
      (- (count preference1:pink) )
    )
  )
)
(:scoring
  (+ (- (total-score) 10 ) 0 )
)
)

(define (game game-id-326) (:domain few-objects-room-v1)
(:setup
  (forall (?f - (either dodgeball cylindrical_block blue_cube_block game_object) ?n ?x ?y ?s - ball)
    (and
      (and
        (and
          (forall (?e - curved_wooden_ramp)
            (forall (?d - doggie_bed ?k - block)
              (forall (?v - cube_block)
                (and
                  (exists (?i - dodgeball ?d - triangular_ramp)
                    (game-conserved
                      (in_motion desk agent)
                    )
                  )
                )
              )
            )
          )
          (and
            (game-conserved
              (on ?y)
            )
          )
          (not
            (exists (?o - ball)
              (and
                (and
                  (and
                    (game-conserved
                      (and
                        (and
                          (in ball)
                          (in_motion ?s ?n)
                          (same_color ?o agent)
                        )
                        (not
                          (in_motion ?n)
                        )
                      )
                    )
                  )
                  (and
                    (forall (?e - doggie_bed)
                      (exists (?c - block ?v - hexagonal_bin)
                        (exists (?t - ball)
                          (and
                            (exists (?f - game_object)
                              (forall (?m - cylindrical_block)
                                (exists (?i - dodgeball ?h - (either dodgeball dodgeball))
                                  (exists (?b - hexagonal_bin ?r - hexagonal_bin)
                                    (game-conserved
                                      (not
                                        (agent_holds desk blue)
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                    (forall (?i - hexagonal_bin)
                      (and
                        (game-optional
                          (agent_holds ?o)
                        )
                      )
                    )
                    (and
                      (exists (?c - dodgeball)
                        (forall (?u - pyramid_block)
                          (forall (?h - wall ?b - triangular_ramp)
                            (game-conserved
                              (or
                                (in_motion ?c)
                                (not
                                  (and
                                    (and
                                      (agent_holds ?o)
                                      (in rug ?n)
                                    )
                                    (not
                                      (not
                                        (in ?o ?c)
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                      (game-optional
                        (or
                          (not
                            (in_motion side_table)
                          )
                          (not
                            (touch ?y)
                          )
                        )
                      )
                    )
                  )
                  (and
                    (game-conserved
                      (adjacent ?x)
                    )
                    (exists (?g - book)
                      (exists (?c - wall)
                        (game-conserved
                          (in_motion ?n)
                        )
                      )
                    )
                    (game-optional
                      (> 1 (distance ?s ?y))
                    )
                  )
                )
                (exists (?f - pillow)
                  (and
                    (game-optional
                      (touch ?n ?f)
                    )
                    (exists (?b - (either cube_block blue_cube_block) ?h - chair)
                      (forall (?k - game_object)
                        (game-conserved
                          (in_motion ?k)
                        )
                      )
                    )
                  )
                )
                (forall (?f - doggie_bed)
                  (game-conserved
                    (and
                      (not
                        (and
                          (adjacent ?o)
                          (exists (?g - cube_block)
                            (in_motion pink_dodgeball ?o)
                          )
                        )
                      )
                      (agent_holds brown)
                    )
                  )
                )
              )
            )
          )
        )
        (game-conserved
          (not
            (< 6 1)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?f - bridge_block)
      (and
        (preference preference1
          (then
            (once (agent_holds front) )
            (once (= (distance agent ?f 10) 1) )
            (hold (exists (?q - hexagonal_bin ?q - ball) (not (and (not (agent_holds ?f ?f) ) (in_motion ?q desk) (on ?f ?q) (in_motion ?q) ) ) ) )
          )
        )
      )
    )
    (preference preference2
      (exists (?i - hexagonal_bin)
        (then
          (hold-while (in_motion ?i ?i) (and (and (and (agent_holds ?i) (not (not (in ?i ?i) ) ) ) (<= (distance ?i agent) 1) ) (not (on ?i ?i ?i) ) ) (in_motion ?i ?i) )
          (hold (and (and (in_motion ?i) (and (and (and (in ?i) (and (and (on door ?i) (and (and (agent_holds ?i ?i) (and (in_motion ?i ?i) (touch ?i) ) ) (and (in ?i) (not (object_orientation top_shelf ?i) ) (and (and (> 1 4) (adjacent ?i ?i ?i) ) (in_motion ?i ?i) ) (same_color ?i ?i) ) ) ) ) (is_setup_object upside_down ?i) ) (not (agent_holds ?i) ) ) (adjacent ?i desk) (in_motion ?i ?i) ) ) (on door desk) ) )
          (once (in ?i ?i) )
          (once (< (distance ?i) 1) )
        )
      )
    )
  )
)
(:terminal
  (<= 5 (count preference1:hexagonal_bin) )
)
(:scoring
  5
)
)

(define (game game-id-327) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-optional
      (adjacent ?xxx)
    )
    (and
      (or
        (game-conserved
          (object_orientation agent)
        )
        (game-optional
          (in_motion ?xxx)
        )
        (forall (?h - building)
          (and
            (game-conserved
              (not
                (on agent)
              )
            )
          )
        )
      )
      (exists (?c - beachball ?t - flat_block)
        (exists (?f - chair)
          (exists (?o - ball)
            (exists (?e - drawer)
              (game-conserved
                (and
                  (and
                    (and
                      (in agent)
                      (in_motion ?f)
                    )
                  )
                  (on desk ?e)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?x - desktop)
      (and
        (preference preference1
          (exists (?s - beachball)
            (then
              (once (in_motion agent ?s) )
              (once (not (not (agent_holds ?x) ) ) )
              (hold (in_motion ?x) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:dodgeball:doggie_bed) (- 8 )
  )
)
(:scoring
  8
)
)

(define (game game-id-328) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds ?xxx ?xxx)
  )
)
(:constraints
  (and
    (forall (?c - (either cylindrical_block teddy_bear))
      (and
        (preference preference1
          (exists (?u - (either key_chain wall cube_block hexagonal_bin pyramid_block cube_block pyramid_block))
            (then
              (hold-while (not (on ?c) ) (and (in ?u ?c) (is_setup_object ?u) ) )
              (hold-to-end (adjacent ?u ?c) )
              (once (not (in_motion ?c) ) )
            )
          )
        )
        (preference preference2
          (exists (?u - teddy_bear)
            (then
              (hold-while (and (and (in ?c ?u) (and (and (not (and (and (not (agent_holds ?u) ) (not (not (touch ?c) ) ) ) (and (or (exists (?k - rug) (not (and (above ?u) (in ?k ?u) (on ?k) ) ) ) (and (in_motion ) (agent_holds rug rug ?u) (agent_holds rug) ) ) (and (in_motion ?c ?u) (in_motion ?u ?u) (and (agent_holds ?c) (in ?c) ) ) ) (on ?c) ) ) (on ?u ?c) (on ?u ?c) ) (= 7 (distance room_center ?u)) ) ) (= (distance ?u ?c) 1) ) (in_motion ?c ?c) (on ?u agent) (object_orientation ?c ?c) )
              (hold (in_motion back ?c) )
              (hold (agent_holds agent ?u) )
            )
          )
        )
        (preference preference3
          (exists (?o - flat_block ?j - hexagonal_bin)
            (at-end
              (in_motion ?c upright)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 3 5 )
)
(:scoring
  (+ 15 (total-score) (/ 10 (count preference2:dodgeball) ) 0 )
)
)

(define (game game-id-329) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (or
      (touch ?xxx)
      (in_motion ?xxx ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?m - doggie_bed)
        (then
          (once (agent_holds rug) )
          (hold (in_motion ?m ?m) )
          (once (<= 1 0) )
        )
      )
    )
    (preference preference2
      (exists (?r - (either dodgeball pillow book) ?w - block)
        (then
          (hold (and (in_motion ?w) (on ?w ?w ?w) ) )
          (hold-while (and (and (and (and (equal_z_position ?w) (rug_color_under ?w right) (agent_holds ?w ?w) ) (not (in_motion ?w) ) ) ) (not (in_motion ?w) ) (in ?w rug) ) (on ?w) )
          (once (in_motion back rug) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference2) (- (+ (count-once-per-objects preference2:basketball) (* (count preference1:doggie_bed) (* (external-forall-maximize (count-once-per-objects preference1:dodgeball) ) (* 8 (count-once preference2:beachball:pink_dodgeball) (count-once-per-objects preference2:hexagonal_bin) )
          )
        )
        (count preference1:beachball)
      )
    )
  )
)
(:scoring
  2
)
)

(define (game game-id-330) (:domain few-objects-room-v1)
(:setup
  (exists (?i - hexagonal_bin)
    (game-conserved
      (in ?i ?i)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?d - game_object)
        (then
          (once (toggled_on ?d ?d) )
          (once (not (in_motion ?d) ) )
          (once (on desk ?d) )
        )
      )
    )
    (preference preference2
      (exists (?j - hexagonal_bin)
        (then
          (once (in_motion ?j ?j) )
          (once (and (in_motion ?j) (and (and (< 1 10) (in_motion ?j) ) (agent_holds agent) ) ) )
          (once (and (agent_holds ?j) (in_motion ?j ?j) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= 3 (or (count-once-per-objects preference2:blue_dodgeball:cube_block:dodgeball) ) )
  )
)
(:scoring
  (* (+ 1 (count preference2:golfball) )
    (+ (count-overlapping preference2:green) 3 )
  )
)
)

(define (game game-id-331) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (in_motion ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?t ?q ?h - hexagonal_bin)
        (at-end
          (not
            (opposite brown)
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (or
        (>= 5 (total-time) )
        (= 12 (count-once-per-objects preference1:blue_cube_block) )
      )
      (< (count-once-per-objects preference1:pink) (* (* (count-once-per-objects preference1:book) (count-once-per-objects preference1:yellow_cube_block:yellow_cube_block) )
          (external-forall-maximize
            2
          )
        )
      )
      (>= (count preference1:beachball) 10 )
    )
    (and
      (>= 2 (* (count-once-per-objects preference1:basketball) (count preference1:golfball) (* 6 (external-forall-maximize (count-once-per-external-objects preference1:purple) ) )
        )
      )
      (>= 25 (* (count preference1:alarm_clock:beachball) (count-once preference1:alarm_clock) (* (count-once-per-objects preference1:dodgeball) )
        )
      )
    )
  )
)
(:scoring
  (external-forall-maximize
    4
  )
)
)

(define (game game-id-332) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?k - curved_wooden_ramp)
      (exists (?w - ball)
        (forall (?b - chair ?n - ball)
          (and
            (and
              (forall (?f - (either golfball laptop))
                (forall (?v - hexagonal_bin)
                  (and
                    (forall (?j - cube_block)
                      (and
                        (game-optional
                          (in_motion ?j)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?e - ball)
        (then
          (once (same_color rug) )
          (hold (in ?e bed) )
          (hold-while (and (not (in_motion ?e floor) ) (and (open ?e) (agent_holds ?e) ) ) (not (in_motion ?e ?e) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 3 (* 3 4 )
    )
  )
)
(:scoring
  10
)
)

(define (game game-id-333) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?i - doggie_bed)
      (game-optional
        (not
          (< (distance ) 3)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?e - blue_cube_block ?c - dodgeball)
        (then
          (once (opposite ?c ?c) )
          (hold (exists (?e - cube_block) (in ?c) ) )
          (once (in ?c ?c) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference1:purple) (* (+ 5 5 )
      30
    )
  )
)
(:scoring
  (count-once-per-objects preference1:pink)
)
)

(define (game game-id-334) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (and
      (and
        (not
          (and
            (and
              (agent_holds ?xxx)
              (agent_holds ?xxx)
            )
            (not
              (in_motion agent ?xxx)
            )
            (agent_holds ?xxx)
            (not
              (agent_holds ?xxx ?xxx)
            )
          )
        )
        (and
          (and
            (forall (?i - hexagonal_bin)
              (not
                (< (distance room_center ?i 5) (distance 2 room_center))
              )
            )
            (and
              (in_motion ?xxx)
              (>= 4 (distance ?xxx desk))
            )
          )
          (in_motion bed)
        )
      )
      (in_motion ?xxx ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?y - hexagonal_bin)
        (then
          (once-measure (on ?y) (distance_side green_golfball ?y) )
          (once (on floor ?y) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (+ 6 (count preference1:pink_dodgeball) )
      2
    )
    (not
      (>= 7 1 )
    )
  )
)
(:scoring
  (not
    (count-once-per-objects preference1:beachball)
  )
)
)

(define (game game-id-335) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (and
        (or
          (exists (?f - ball ?q - teddy_bear ?h - hexagonal_bin)
            (game-optional
              (or
                (agent_holds door ?h)
                (on ?h)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (then
        (once (on ?xxx) )
        (once (in ?xxx ?xxx) )
        (hold-while (agent_holds ?xxx) (and (< 1 (distance ?xxx ?xxx)) (game_over ?xxx ?xxx) ) (agent_holds ?xxx) )
      )
    )
    (preference preference2
      (exists (?p - dodgeball)
        (then
          (once (not (touch ?p) ) )
          (once (not (and (in_motion ?p ?p) (agent_holds ?p) (equal_z_position upside_down) ) ) )
          (once (not (and (agent_holds ?p) (not (not (in_motion ?p) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (count-once-per-objects preference1:side_table) )
)
(:scoring
  (- (<= 10 2 )
  )
)
)

(define (game game-id-336) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds ?xxx ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?x - teddy_bear ?x - hexagonal_bin ?r - (either pen pillow pyramid_block))
        (then
          (hold (not (adjacent ?r) ) )
          (hold-to-end (in_motion ?r ?r) )
          (once (in_motion ?r) )
        )
      )
    )
  )
)
(:terminal
  (> (- 10 )
    0.7
  )
)
(:scoring
  (count-once-per-objects preference1:yellow)
)
)

(define (game game-id-337) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (on ?xxx)
  )
)
(:constraints
  (and
    (forall (?z - drawer)
      (and
        (preference preference1
          (then
            (hold-while (agent_holds ?z) (in_motion bed) (< (distance ) (distance room_center ?z)) (and (and (in_motion ?z) (and (agent_holds ?z) (and (not (and (touch ?z agent) (on ?z) ) ) (and (agent_holds pink_dodgeball) (adjacent ?z ?z) ) ) ) (in_motion ?z) (in ?z ?z) (in front_left_corner) (same_type ?z) (in_motion ?z) ) (in_motion ?z ?z) (and (agent_holds ?z) (in_motion ?z) (agent_holds ?z) ) ) )
            (hold-to-end (and (agent_holds ?z) (in_motion ?z ?z) ) )
            (once (< (distance agent ?z) (distance ?z)) )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 300 3 )
)
(:scoring
  30
)
)

(define (game game-id-338) (:domain many-objects-room-v1)
(:setup
  (forall (?q ?m - red_dodgeball)
    (exists (?w - pillow)
      (game-conserved
        (adjacent desk)
      )
    )
  )
)
(:constraints
  (and
    (forall (?y - (either hexagonal_bin alarm_clock))
      (and
        (preference preference1
          (then
            (once (and (in_motion ?y) (agent_holds ?y) ) )
            (once (and (in ?y) (in_motion ?y) ) )
            (hold (not (agent_holds agent) ) )
          )
        )
      )
    )
    (forall (?a ?u ?c ?s - game_object)
      (and
        (preference preference2
          (exists (?d - chair ?r - (either cube_block blue_cube_block) ?v - game_object)
            (then
              (once (adjacent floor) )
              (once (adjacent ?u) )
              (once (not (agent_holds top_shelf) ) )
            )
          )
        )
        (preference preference3
          (exists (?g - game_object)
            (at-end
              (and
                (or
                  (and
                    (not
                      (toggled_on pink_dodgeball desk)
                    )
                    (not
                      (same_color ?c)
                    )
                  )
                  (in ?u)
                )
                (exists (?t - curved_wooden_ramp)
                  (on ?a ?s)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (not (not 3 ) ) (count-once-per-objects preference1:dodgeball) )
)
(:scoring
  (count-once-per-objects preference3:book:beachball)
)
)

(define (game game-id-339) (:domain many-objects-room-v1)
(:setup
  (exists (?s - hexagonal_bin ?u - desktop ?y - hexagonal_bin ?a - wall)
    (and
      (forall (?w - dodgeball ?w ?f ?o - hexagonal_bin)
        (game-conserved
          (not
            (and
              (not
                (and
                  (not
                    (> 1 (distance ?a ?w))
                  )
                  (and
                    (agent_holds ?a)
                    (not
                      (and
                        (and
                          (agent_holds desk desk)
                          (equal_z_position back bed)
                        )
                        (not
                          (and
                            (not
                              (not
                                (on agent)
                              )
                            )
                            (and
                              (not
                                (on ?f ?a)
                              )
                              (in_motion bed ?w)
                            )
                            (exists (?m - ball ?n - (either wall pen pillow) ?n ?x ?b - dodgeball)
                              (agent_holds ?b ?o)
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
              (agent_holds ?w ?w)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?j - game_object ?u - ball ?l - (either dodgeball) ?n - hexagonal_bin ?y - hexagonal_bin)
        (then
          (once (on ?y) )
          (once (on front ?y) )
          (hold (agent_holds ?y) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:beachball) (count-total preference1:cube_block:dodgeball) )
)
(:scoring
  (+ (+ (count-once-per-objects preference1:green) (* 4 (count preference1:yellow:yellow) )
    )
    3
  )
)
)

(define (game game-id-340) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (in_motion ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?d - red_dodgeball ?w - building)
        (then
          (hold (in ?w ?w ?w) )
          (hold (and (< (distance_side ?w green_golfball) (distance desk agent)) (and (in_motion ?w ?w) (and (in_motion bed ?w) (same_color ?w) ) ) ) )
          (once (faces agent ?w) )
        )
      )
    )
  )
)
(:terminal
  (>= (external-forall-maximize (+ (count-once preference1:doggie_bed:book) (external-forall-maximize 0 ) (count preference1:hexagonal_bin) (* (count-unique-positions preference1:yellow_cube_block) 0 )
      )
    )
    (external-forall-maximize
      2
    )
  )
)
(:scoring
  (- (* (count preference1:orange:yellow:green) 8 )
  )
)
)

(define (game game-id-341) (:domain few-objects-room-v1)
(:setup
  (exists (?l - ball)
    (and
      (and
        (and
          (game-optional
            (and
              (agent_holds ?l)
              (not
                (agent_holds agent)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?p - curved_wooden_ramp)
      (and
        (preference preference1
          (exists (?q - hexagonal_bin)
            (then
              (hold (and (not (not (in_motion ?p ?q) ) ) (in_motion ?q ?p) ) )
              (once (adjacent ?q) )
              (once (and (and (adjacent ?q) (and (and (on ?p ?p) (and (in_motion ?q ?q) (not (in top_shelf ?p) ) (adjacent ?p) ) ) (not (and (agent_holds ?p ?q) (agent_holds ?q) ) ) (in_motion ?p ?q) (< (distance ?p ?p) 3) ) ) (in_motion south_wall) (and (< (distance agent ?p) 0) (and (not (in ?p) ) (not (not (agent_holds ?p) ) ) ) ) (and (touch ?q ?p) ) (agent_holds ?q) (not (and (agent_holds ?p) (in ?p) (same_color ?p ?p) (same_color ?q) ) ) (and (on ?q) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count preference1:red) (count-once-per-objects preference1:red_pyramid_block) )
    (count preference1:beachball)
  )
)
(:scoring
  (count-once-per-objects preference1:yellow)
)
)

(define (game game-id-342) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (exists (?s - (either alarm_clock blue_cube_block))
        (and
          (exists (?v - hexagonal_bin)
            (game-optional
              (agent_holds ?s bed)
            )
          )
        )
      )
      (exists (?j - golfball ?u - dodgeball)
        (game-conserved
          (exists (?f - game_object ?i - ball)
            (and
              (in_motion bed ?u)
              (agent_holds ?u)
            )
          )
        )
      )
      (forall (?o - cube_block)
        (exists (?q - cube_block)
          (and
            (and
              (forall (?n - curved_wooden_ramp)
                (not
                  (forall (?h - teddy_bear)
                    (game-conserved
                      (agent_holds ?o ?n)
                    )
                  )
                )
              )
            )
            (forall (?d - drawer)
              (game-conserved
                (adjacent bed)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (then
        (once (agent_holds brown) )
        (once (in ?xxx rug) )
        (hold (on desk) )
      )
    )
  )
)
(:terminal
  (>= 30 (count preference1:red_pyramid_block:golfball) )
)
(:scoring
  (count preference1:basketball)
)
)

(define (game game-id-343) (:domain medium-objects-room-v1)
(:setup
  (forall (?p - pyramid_block)
    (game-optional
      (and
        (in ?p ?p)
        (not
          (agent_holds ?p)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?y - (either hexagonal_bin alarm_clock))
      (and
        (preference preference1
          (exists (?o - (either ball pencil))
            (then
              (hold (agent_holds rug) )
              (once (agent_holds ?y) )
              (once (not (agent_holds ?o door) ) )
              (hold (in_motion rug ?y) )
            )
          )
        )
      )
    )
    (forall (?g - (either cube_block mug))
      (and
        (preference preference2
          (exists (?w - game_object)
            (then
              (hold (< 9 (distance ?w)) )
              (once (not (and (not (not (same_color agent agent) ) ) (same_object ?w) ) ) )
              (hold (not (in ?w agent) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-once-per-objects preference2:dodgeball) (count-once preference2:golfball) )
    (>= 5 4 )
  )
)
(:scoring
  (count preference1:golfball)
)
)

(define (game game-id-344) (:domain medium-objects-room-v1)
(:setup
  (exists (?a - (either pencil laptop))
    (and
      (and
        (and
          (exists (?f - watch)
            (forall (?o - (either key_chain game_object cylindrical_block))
              (game-optional
                (agent_holds ?f pink_dodgeball)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?m - cube_block)
        (then
          (once (on ?m) )
          (once (not (not (in ?m ?m) ) ) )
          (hold (game_over ?m ?m) )
        )
      )
    )
  )
)
(:terminal
  (<= (+ (count-once-per-objects preference1:yellow) 3 )
    20
  )
)
(:scoring
  2
)
)

(define (game game-id-345) (:domain few-objects-room-v1)
(:setup
  (exists (?e - doggie_bed ?e - dodgeball)
    (and
      (forall (?t - dodgeball ?s - hexagonal_bin)
        (not
          (and
            (and
              (game-conserved
                (and
                  (on ?e)
                  (not
                    (agent_holds front ?e)
                  )
                )
              )
            )
          )
        )
      )
      (and
        (and
          (game-conserved
            (on agent)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?p - dodgeball)
        (then
          (once (in ?p) )
          (hold-while (adjacent_side ?p) (on ?p ?p) )
          (once (in_motion ?p) )
        )
      )
    )
    (preference preference2
      (exists (?k - golfball ?g - dodgeball)
        (then
          (once (and (= 1 8) (adjacent ?g) ) )
          (once (exists (?u - block) (adjacent ?g ?u) ) )
          (once (on ?g ?g) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= 1 100 )
  )
)
(:scoring
  (* (external-forall-minimize (+ (+ (* (* (not 6 ) (+ (total-time) (+ (count-once-per-objects preference2:pink_dodgeball:pyramid_block:green) (total-time) )
              )
            )
            (count-once-per-objects preference2:triangle_block)
          )
          4
          1
        )
        (- 10 )
      )
    )
    3
  )
)
)

(define (game game-id-346) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds ?xxx ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?w - cube_block ?t - color)
        (then
          (once (not (exists (?e ?a - color) (between ?t ?t) ) ) )
          (once (in_motion agent ?t) )
          (hold (in ?t) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once preference1:dodgeball) (external-forall-maximize (count preference1:golfball:alarm_clock) ) )
)
(:scoring
  (count-once-per-objects preference1:beachball)
)
)

(define (game game-id-347) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (in_motion ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?k - ball)
        (then
          (once (not (in_motion ?k ?k) ) )
          (once (or (on ?k ?k) (agent_holds ?k) ) )
          (hold (forall (?q - (either cube_block doggie_bed)) (not (agent_holds ?q ?k) ) ) )
        )
      )
    )
    (preference preference2
      (exists (?e - (either mug beachball))
        (then
          (once (not (and (same_color ?e) (in_motion ?e) ) ) )
          (hold (or (game_start ?e ?e) (in_motion ?e) ) )
          (hold-while (on bed) (adjacent ?e) )
        )
      )
    )
    (forall (?e - ball)
      (and
        (preference preference3
          (then
            (once (agent_holds ?e) )
            (once (in_motion ?e ?e) )
            (once (and (not (touch ?e ?e) ) (not (agent_holds ?e) ) (< (distance ?e ?e) 2) ) )
          )
        )
        (preference preference4
          (exists (?w - cube_block)
            (then
              (once (and (agent_holds agent) ) )
              (once (not (same_object brown) ) )
              (once (in_motion pink_dodgeball) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 100 10 )
)
(:scoring
  (count preference4:pink_dodgeball)
)
)

(define (game game-id-348) (:domain many-objects-room-v1)
(:setup
  (forall (?b - doggie_bed)
    (forall (?a - hexagonal_bin)
      (game-conserved
        (in bed ?a)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?z - hexagonal_bin ?p - hexagonal_bin ?o - block ?h - dodgeball)
        (at-end
          (not
            (in_motion ?h)
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (>= 16 (* 10 (count preference1:orange) (count preference1:book) (count preference1:beachball) (count preference1:beachball) 1 )
      )
      (<= (count-once-per-objects preference1:doggie_bed) (count preference1:beachball) )
    )
  )
)
(:scoring
  (count preference1:basketball)
)
)

(define (game game-id-349) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (exists (?k - hexagonal_bin)
      (on agent)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?n - building ?g - block)
        (then
          (once (not (agent_holds ?g) ) )
          (once (< (distance 10 9) 2) )
          (hold (same_type ?g) )
        )
      )
    )
    (preference preference2
      (exists (?b - hexagonal_bin ?i - cube_block)
        (then
          (once (and (and (and (and (agent_holds ?i) (and (and (forall (?s - dodgeball) (not (adjacent agent ?i) ) ) (not (on ?i ?i) ) ) (agent_holds ?i ?i) ) ) (agent_holds ?i) ) (agent_holds ?i) ) (faces ?i ?i) ) )
          (hold (agent_holds ?i) )
          (hold (and (agent_holds ?i) (exists (?u - hexagonal_bin) (agent_holds ?u) ) ) )
        )
      )
    )
    (preference preference3
      (exists (?s ?e - game_object)
        (then
          (once (on front ?s) )
          (once (agent_holds ?e) )
          (once (is_setup_object ?s ?s) )
        )
      )
    )
  )
)
(:terminal
  (<= (* 10 (* 2 18 )
    )
    (* (count preference3:yellow) 2 3 )
  )
)
(:scoring
  3
)
)

(define (game game-id-350) (:domain many-objects-room-v1)
(:setup
  (not
    (exists (?d - dodgeball ?a - block ?o ?d - hexagonal_bin ?x - (either blue_cube_block yellow_cube_block))
      (and
        (game-conserved
          (in ?x)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?m - (either dodgeball cube_block))
        (then
          (hold-for 7 (agent_holds ?m) )
          (once (agent_holds ?m) )
          (once (and (and (and (and (in_motion ?m ?m) (in_motion ?m agent) (same_color ?m) ) (exists (?c - hexagonal_bin ?q - hexagonal_bin) (on ?m ?m) ) ) (adjacent ?m ?m) (in ?m ?m) ) (not (>= 1 (distance room_center ?m)) ) ) )
        )
      )
    )
    (preference preference2
      (exists (?t - pyramid_block ?j - dodgeball ?f - teddy_bear ?u - (either key_chain cylindrical_block cylindrical_block))
        (then
          (once (in ?u) )
          (once (in_motion ?u) )
          (once (agent_holds ?u) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (count preference2:dodgeball) (count preference2:dodgeball) )
    (or
      (or
        (< (count preference1:basketball) (count-once-per-objects preference1:pink) )
        (>= (count preference1:pyramid_block) (count preference1:rug) )
      )
    )
  )
)
(:scoring
  (count-once-per-objects preference1:blue_dodgeball:yellow)
)
)

(define (game game-id-351) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?s - hexagonal_bin ?e - hexagonal_bin)
      (exists (?p - hexagonal_bin ?l - dodgeball)
        (game-conserved
          (in ?e)
        )
      )
    )
    (exists (?v - hexagonal_bin ?b - golfball)
      (game-conserved
        (agent_holds ?b)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?k ?g ?a - (either doggie_bed cube_block))
        (then
          (once (agent_holds ?a front) )
          (hold-while (agent_holds ?k ?a) (same_color ?k) (in ?k) )
          (once (on ?g ?g) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:blue_dodgeball) (* 4 10 (total-score) (count preference1:basketball:yellow_cube_block) 6 (count-measure preference1:dodgeball) )
  )
)
(:scoring
  (* (- 8 )
    (count preference1:dodgeball:red:dodgeball)
  )
)
)

(define (game game-id-352) (:domain few-objects-room-v1)
(:setup
  (forall (?k - curved_wooden_ramp)
    (and
      (forall (?i - hexagonal_bin)
        (forall (?y - color ?r - hexagonal_bin)
          (or
            (and
              (game-conserved
                (above ?k)
              )
            )
            (game-conserved
              (not
                (agent_holds ?i)
              )
            )
            (game-conserved
              (agent_holds floor)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?u - cube_block)
        (then
          (once (exists (?f - game_object) (and (on ?u ?f) (agent_holds ?u) ) ) )
          (hold (agent_holds ?u) )
          (hold (in ?u) )
        )
      )
    )
  )
)
(:terminal
  (>= 7 5 )
)
(:scoring
  (- (count-once-per-objects preference1:dodgeball) )
)
)

(define (game game-id-353) (:domain few-objects-room-v1)
(:setup
  (forall (?c - cube_block)
    (forall (?w - hexagonal_bin)
      (and
        (and
          (game-conserved
            (on ?w)
          )
          (game-optional
            (in_motion ?w ?c)
          )
          (forall (?x - hexagonal_bin ?g - ball)
            (game-conserved
              (agent_holds pillow ?c)
            )
          )
        )
        (forall (?k - curved_wooden_ramp)
          (or
            (exists (?p - golfball ?z - (either mug cellphone))
              (game-optional
                (agent_holds top_shelf ?k)
              )
            )
          )
        )
        (forall (?q - hexagonal_bin)
          (and
            (exists (?v - doggie_bed)
              (and
                (game-conserved
                  (is_setup_object ?c ?q)
                )
                (exists (?d - hexagonal_bin)
                  (game-optional
                    (and
                      (exists (?g - hexagonal_bin)
                        (and
                          (not
                            (touch ?v ?g)
                          )
                          (and
                            (not
                              (not
                                (in_motion rug ?w)
                              )
                            )
                            (in ?c)
                          )
                          (on ?g ?c)
                        )
                      )
                      (opposite ?d ?q ?v)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?t - block ?x - hexagonal_bin)
        (then
          (once (and (adjacent ?x) (not (in_motion ) ) (and (and (agent_holds ?x) (in_motion ?x) ) (agent_crouches ?x) ) (equal_z_position desk ?x) ) )
          (once (not (in_motion ?x) ) )
          (forall-sequence (?h - hexagonal_bin)
            (then
              (once (in_motion ?h) )
              (once (< 1 (distance 1 ?x)) )
              (once (in_motion ?x) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 2 3 )
)
(:scoring
  (count preference1:dodgeball)
)
)

(define (game game-id-354) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (< 0.5 (distance ))
  )
)
(:constraints
  (and
    (preference preference1
      (then
        (hold (on ?xxx) )
        (once (and (on ?xxx) (in ?xxx ?xxx) (adjacent ?xxx ?xxx) ) )
      )
    )
  )
)
(:terminal
  (>= (= 10 (- (count-once-per-objects preference1:orange) )
    )
    9
  )
)
(:scoring
  (count-once-per-external-objects preference1:pink_dodgeball)
)
)

(define (game game-id-355) (:domain many-objects-room-v1)
(:setup
  (exists (?g - curved_wooden_ramp)
    (exists (?d ?t ?c ?j - wall ?s - game_object)
      (exists (?o - triangular_ramp)
        (game-conserved
          (not
            (>= (distance desk ?s) 1)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?x - teddy_bear)
        (then
          (hold (in_motion rug) )
          (once (agent_holds ?x ?x) )
          (once (not (in_motion ?x ?x) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-external-objects preference1) (total-time) )
)
(:scoring
  (count-once-per-objects preference1:basketball)
)
)

(define (game game-id-356) (:domain few-objects-room-v1)
(:setup
  (forall (?w - wall ?z - blue_pyramid_block)
    (exists (?r - cube_block)
      (game-conserved
        (exists (?n - beachball)
          (and
            (agent_holds ?r ?z)
            (on ?r)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?j - chair)
        (then
          (once (on ?j) )
          (once (agent_holds ?j bed) )
          (hold (adjacent left) )
          (hold (in ?j ?j) )
        )
      )
    )
    (preference preference2
      (exists (?t - dodgeball)
        (then
          (once (adjacent ?t) )
          (hold (in_motion ?t) )
          (once (and (in ?t) (and (and (not (exists (?d - (either golfball tall_cylindrical_block)) (not (rug_color_under agent ?d) ) ) ) (= (distance ?t ?t) (distance room_center room_center)) ) (object_orientation ?t) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference2:alarm_clock:pink) (count-once-per-objects preference1:green) )
)
(:scoring
  1
)
)

(define (game game-id-357) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (in ?xxx)
  )
)
(:constraints
  (and
    (forall (?j - curved_wooden_ramp ?q - book)
      (and
        (preference preference1
          (exists (?h - hexagonal_bin)
            (then
              (once (in_motion ?q) )
              (forall-sequence (?p ?v ?g ?t - ball ?o - ball)
                (then
                  (once (and (in_motion ?o ?q) (exists (?b - hexagonal_bin) (and (adjacent_side ?q ?h) (touch ?o) ) ) ) )
                  (once (exists (?a - teddy_bear) (on ?h) ) )
                  (hold-while (open west_wall ?q) (and (in ?h ?o) (in_motion ?q ?o) ) )
                )
              )
              (hold (and (and (and (in_motion ?q ?h ?h) (adjacent_side ?h bed) ) (and (not (and (game_over ?h ?h) ) ) (and (in ?q ?q) (not (in_motion pink) ) ) ) ) (in ?q ?h) ) )
            )
          )
        )
        (preference preference2
          (exists (?a ?g ?u - (either tall_cylindrical_block teddy_bear))
            (then
              (once (agent_holds ?u) )
              (once (agent_holds ?a) )
              (once (exists (?v - dodgeball) (and (not (and (not (and (and (on ?q ?u) (exists (?m - chair ?i - ball ?s - dodgeball) (on ?g) ) ) (agent_holds ?a) ) ) (touch ?u) ) ) (agent_holds ?u ?q) ) ) )
            )
          )
        )
        (preference preference3
          (exists (?n - hexagonal_bin)
            (then
              (once (on upside_down ?q) )
              (once (in ?n ?q) )
              (once (agent_holds ?n) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< (- 10 (- (* (+ (+ (count preference3:basketball) (total-score) )
            5
            (* 3 (count-longest preference2:purple) )
          )
          5
        )
      )
    )
    (total-time)
  )
)
(:scoring
  2
)
)

(define (game game-id-358) (:domain many-objects-room-v1)
(:setup
  (exists (?d - building)
    (game-optional
      (adjacent desk ?d)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?a ?w - teddy_bear)
        (then
          (once (and (on ?a agent) (agent_holds ?a ?a) ) )
          (once (on ?w ?a) )
          (once (and (not (and (< 1 2) (not (not (and (not (agent_holds ?w) ) (agent_holds ?w ?w) (in ?w) ) ) ) ) ) (adjacent left) (not (agent_holds ?w ?w) ) (and (in_motion ?w ?w) (and (not (< 1 (distance 10 4)) ) (and (is_setup_object ?a) (toggled_on ?a) ) (adjacent agent) (agent_holds ?a ?a) (in_motion ?w) (not (not (< 3 (distance ?w ?w)) ) ) (on agent ?a) ) ) ) )
          (once (in_motion desk ?w) )
        )
      )
    )
    (preference preference2
      (exists (?c - game_object)
        (at-end
          (and
            (< (distance 2 agent) (distance ?c ?c))
            (in ?c agent)
          )
        )
      )
    )
    (forall (?x - triangular_ramp ?e - doggie_bed ?z - (either desktop floor bed golfball))
      (and
        (preference preference3
          (exists (?j - hexagonal_bin)
            (then
              (once (and (on ?z ?j) (same_color ?j ?j) (agent_holds ?z) ) )
              (once (on ?z) )
              (hold-for 8 (adjacent ?j ?z) )
            )
          )
        )
        (preference preference4
          (exists (?n ?x - sliding_door)
            (then
              (hold (and (in_motion ?x) (and (not (and (adjacent ?z) (not (in ?z ?z) ) (on bed ?z) ) ) (object_orientation ?n) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (+ (count preference2:pink:pyramid_block) (count-once-per-objects preference3:beachball) )
  )
)
(:scoring
  (* 10 (count preference1:yellow:dodgeball) )
)
)

(define (game game-id-359) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (on pink_dodgeball ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?d - golfball)
        (then
          (once (in ?d) )
          (any)
          (once (forall (?q ?x ?m ?h ?p ?b ?a ?s ?i ?v - pillow) (object_orientation ?a ?i) ) )
        )
      )
    )
    (preference preference2
      (exists (?l - dodgeball ?x - hexagonal_bin)
        (then
          (once (in_motion ?x ?x) )
          (once (on ?x) )
          (hold-while (and (agent_holds ?x) ) (in_motion ?x) )
        )
      )
    )
    (preference preference3
      (exists (?b - hexagonal_bin)
        (at-end
          (and
            (= (distance side_table ?b 8) 3 1 1)
            (in ?b)
          )
        )
      )
    )
    (preference preference4
      (exists (?n - dodgeball)
        (then
          (once (not (and (touch ?n) (exists (?f - dodgeball ?y ?m - hexagonal_bin ?s - curved_wooden_ramp ?h - dodgeball) (and (in_motion agent ?h) ) ) (adjacent ?n right) (in_motion ?n ?n) ) ) )
          (hold (and (in_motion ?n ?n) (adjacent_side ?n ?n) ) )
          (once (and (and (on ?n) ) (and (and (and (agent_holds ?n ?n) (not (and (and (agent_holds ?n ?n) (on ?n) (in_motion ?n ?n) ) (in_motion ?n) ) ) ) (in_motion ?n ?n) (touch ?n side_table) ) (not (and (on ?n) (agent_holds ?n) ) ) ) ) )
        )
      )
    )
    (preference preference5
      (at-end
        (and
          (not
            (and
              (in_motion ?xxx ?xxx)
              (not
                (and
                  (in_motion upright)
                  (in_motion ?xxx)
                )
              )
            )
          )
          (and
            (not
              (not
                (and
                  (not
                    (in_motion green_golfball)
                  )
                  (and
                    (agent_holds ?xxx ?xxx)
                    (agent_holds ?xxx ?xxx)
                  )
                )
              )
            )
            (not
              (agent_holds ?xxx ?xxx)
            )
          )
        )
      )
    )
    (forall (?y - dodgeball)
      (and
        (preference preference6
          (exists (?m - dodgeball ?r - hexagonal_bin ?a - teddy_bear)
            (then
              (once (same_color ?y ?y) )
              (once (forall (?s - pyramid_block) (not (in_motion agent) ) ) )
              (hold (rug_color_under ?y) )
            )
          )
        )
        (preference preference7
          (exists (?p - cube_block ?g - (either blue_cube_block triangle_block cylindrical_block) ?f - dodgeball ?h - game_object)
            (then
              (once (not (= 1) ) )
              (once (on agent) )
              (once (and (adjacent_side ?y ?y) (< 1 (distance ?y 6)) (agent_holds ?h) ) )
            )
          )
        )
        (preference preference8
          (exists (?k - chair ?o - block)
            (then
              (once (in_motion agent) )
              (once (agent_holds ?o) )
              (once (adjacent ?o) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference5) (+ (* (count preference5:hexagonal_bin) 10 (* (* 1 (+ 4 (count-once-per-objects preference3:pyramid_block) )
          )
          (* 4 (* (* (count-once-per-objects preference7:yellow) (count-once-per-objects preference7:yellow) )
              7
            )
            (* (- (count-same-positions preference3:blue_pyramid_block) )
              2
              (external-forall-maximize
                (count-once-per-external-objects preference2:green)
              )
            )
          )
          (+ (* (external-forall-maximize (count preference7:hexagonal_bin) ) 12 )
            (count-measure preference7:basketball)
          )
          (* (+ (* 20 (* 2 (= (count preference6:tan) (count preference8:purple) (count preference4:beachball:dodgeball:yellow) )
                )
                (count preference3:pink)
                1
                (external-forall-minimize
                  2
                )
                (external-forall-maximize
                  6
                )
              )
              2
              (count preference2:golfball)
            )
            (* (* (count-total preference7:cube_block) (count preference5:pink) )
              3
            )
          )
          (/
            5
            (count-once-per-objects preference8:dodgeball)
          )
          (* 2 (count-measure preference3:yellow) 2 (count preference5:pink) )
        )
      )
      (count preference4:dodgeball:pink)
      (count preference8:book)
      (count-measure preference8:dodgeball)
      2
      (count-once-per-external-objects preference1:beachball:red)
    )
  )
)
(:scoring
  2
)
)

(define (game game-id-360) (:domain medium-objects-room-v1)
(:setup
  (exists (?b - hexagonal_bin)
    (and
      (game-conserved
        (agent_holds ?b)
      )
      (game-conserved
        (agent_holds ?b ?b)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?z - doggie_bed)
        (then
          (hold (not (and (in_motion ?z ?z) (in door) ) ) )
          (once (and (exists (?f - dodgeball) (and (and (on ?z) (and (and (not (and (object_orientation ?z) (not (and (agent_holds ?z) (in_motion pink_dodgeball) (touch ?f ?z) ) ) ) ) (in_motion ?f ?f) ) (not (in_motion bed) ) ) ) (in_motion rug ?z) ) ) (not (< 1 3) ) ) )
          (once (and (agent_holds ?z) (agent_holds ?z ?z) ) )
        )
      )
    )
    (preference preference2
      (then
        (once (not (in_motion bed ?xxx) ) )
        (once (game_start ?xxx) )
        (hold (< 1 (distance agent ?xxx ?xxx)) )
      )
    )
  )
)
(:terminal
  (or
    (< 10 (* 2 3 )
    )
    (< (count preference2:hexagonal_bin) 6 )
  )
)
(:scoring
  10
)
)

(define (game game-id-361) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (in_motion ?xxx ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?d - block)
        (then
          (once (< 1 1) )
          (hold (agent_holds rug) )
          (once (and (on ?d) (< 1 (distance ?d ?d)) ) )
        )
      )
    )
    (forall (?d - ball)
      (and
        (preference preference2
          (exists (?i - wall)
            (then
              (hold-while (in_motion ?i) (not (agent_holds ?i) ) )
              (once (or (on agent) (in_motion ?i) ) )
              (once (< (distance 7) (distance desk ?d)) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (= 5 (count preference1:dodgeball) (* (count-once-per-objects preference1:white) 5 )
    )
    4
  )
)
(:scoring
  (external-forall-minimize
    (- 2 )
  )
)
)

(define (game game-id-362) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (same_color ?xxx ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (then
        (once (agent_holds ?xxx ?xxx) )
        (hold-while (exists (?z - (either bridge_block ball cube_block pyramid_block dodgeball) ?j - pillow) (adjacent ?j) ) (and (in_motion ?xxx ?xxx) (in ?xxx ?xxx) ) (agent_crouches ?xxx ?xxx) (and (in ?xxx ?xxx) (forall (?w - hexagonal_bin) (and (in_motion ?w) (touch ?w ?w) ) ) (exists (?y - dodgeball) (not (and (and (agent_holds ?y) (and (and (agent_holds ?y) (not (not (< 1 1) ) ) ) (touch ?y) ) (and (in_motion ?y) (in ?y) ) (agent_holds ?y) (exists (?c - cube_block ?h - desk_shelf ?c ?k ?x - beachball) (in ?x ?c) ) (agent_holds ?y) (and (in_motion ?y ?y agent) (object_orientation ?y ?y) ) ) (in_motion ?y ?y) ) ) ) (< 1 7) (not (above ?xxx) ) (adjacent ?xxx ?xxx) ) )
        (hold-while (agent_holds ?xxx ?xxx) (in ?xxx) )
      )
    )
  )
)
(:terminal
  (and
    (and
      (>= (* (count-once-per-objects preference1:doggie_bed:book) (count preference1:basketball) (* (count-once preference1:red) 30 )
        )
        (count preference1:dodgeball)
      )
      (not
        (or
          (and
            (= 6 0.5 )
            (>= (count preference1:basketball) (count preference1:dodgeball:golfball) )
          )
          (< (count-increasing-measure preference1:golfball) (count-longest preference1:yellow_pyramid_block) )
        )
      )
    )
    (>= 50 (count-longest preference1:beachball:basketball) )
  )
)
(:scoring
  10
)
)

(define (game game-id-363) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?g - dodgeball ?z ?f - building ?y ?g ?r ?h ?x - doggie_bed ?x - dodgeball)
      (and
        (and
          (exists (?h ?t ?e - hexagonal_bin ?g - (either golfball dodgeball))
            (and
              (game-conserved
                (not
                  (not
                    (and
                      (and
                        (agent_holds agent ?g)
                        (not
                          (touch ?x rug)
                        )
                      )
                      (and
                        (not
                          (and
                            (and
                              (and
                                (not
                                  (in_motion ?x)
                                )
                                (> (distance ?x ?g) (x_position 4))
                              )
                              (adjacent ?g ?g)
                            )
                          )
                        )
                        (agent_holds ?x ?g)
                      )
                    )
                  )
                )
              )
            )
          )
          (exists (?y - doggie_bed ?g - shelf)
            (and
              (or
                (game-optional
                  (not
                    (not
                      (object_orientation ?x)
                    )
                  )
                )
              )
              (game-conserved
                (and
                  (in_motion blinds)
                )
              )
              (game-optional
                (and
                  (agent_holds ?x)
                )
              )
            )
          )
        )
      )
    )
    (exists (?m - triangular_ramp)
      (forall (?i - cube_block ?w - game_object)
        (and
          (game-optional
            (and
              (adjacent ?m ?m)
              (in_motion ?w)
            )
          )
          (and
            (game-optional
              (not
                (faces ?w)
              )
            )
          )
        )
      )
    )
    (game-conserved
      (not
        (agent_holds ?xxx ?xxx)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?o - hexagonal_bin)
        (at-end
          (adjacent front ?o)
        )
      )
    )
    (preference preference2
      (exists (?k - dodgeball)
        (then
          (hold (in_motion ?k ?k) )
          (once (adjacent ?k) )
          (once (and (same_color ?k) (agent_holds ?k) ) )
        )
      )
    )
    (preference preference3
      (exists (?v ?t ?k ?b ?y ?f - hexagonal_bin ?a - dodgeball)
        (then
          (hold (and (and (agent_holds ?a ?a) (on ?a ?a) ) (in_motion ?a) ) )
          (hold-for 5 (between ?a) )
          (hold (agent_holds agent) )
        )
      )
    )
    (preference preference4
      (exists (?e - game_object ?y - game_object)
        (then
          (once (in ?y) )
          (once (is_setup_object ?y) )
          (once (agent_holds ?y ?y) )
        )
      )
    )
  )
)
(:terminal
  (> 5 (total-time) )
)
(:scoring
  (count-once preference1:basketball)
)
)

(define (game game-id-364) (:domain medium-objects-room-v1)
(:setup
  (exists (?c - cube_block)
    (game-conserved
      (not
        (agent_holds agent)
      )
    )
  )
)
(:constraints
  (and
    (forall (?e - ball)
      (and
        (preference preference1
          (exists (?a - (either chair) ?z - shelf ?o - teddy_bear)
            (then
              (hold (in ?o) )
              (hold (exists (?y - building) (and (same_color ?o) (> 1 1) ) ) )
              (once (adjacent ?e) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (count-once preference1:beachball) )
)
(:scoring
  10
)
)

(define (game game-id-365) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (and
      (in_motion ?xxx)
      (on ?xxx ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?j - (either golfball book))
        (then
          (once (in_motion ?j) )
          (once (not (in_motion ?j ?j) ) )
          (hold (in_motion ?j) )
          (hold-while (in_motion agent) (on ?j ?j) )
          (hold-while (in ?j ?j) (not (agent_holds ?j pink_dodgeball) ) (and (agent_holds ?j) (in_motion ?j ?j ?j) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (count preference1:basketball:doggie_bed) (* 6 10 )
    )
    (count preference1:dodgeball)
  )
)
(:scoring
  (+ (+ (count-once-per-objects preference1:pink_dodgeball) (count-once-per-objects preference1:red) )
    (* (and 4 ) (count preference1:yellow) (count-once-per-objects preference1:green) 10 )
  )
)
)

(define (game game-id-366) (:domain medium-objects-room-v1)
(:setup
  (forall (?m - curved_wooden_ramp)
    (game-conserved
      (and
        (not
          (opposite ?m)
        )
        (agent_holds ?m)
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - dodgeball)
      (and
        (preference preference1
          (exists (?k - hexagonal_bin)
            (then
              (once (adjacent ?b) )
              (hold-while (and (and (adjacent ?b) (and (agent_holds ?k ?k) (opposite ?k) ) (touch ?b agent) ) ) (on ?k ?k) (< (building_size back ?k) (distance desk ?k)) )
              (forall-sequence (?e - beachball)
                (then
                  (hold (not (not (and (and (on agent) (or (not (in ?e) ) ) (exists (?d - ball) (in_motion ?b ?e) ) ) (agent_holds block) ) ) ) )
                  (once (adjacent ?b) )
                  (once (between ?b ?k) )
                  (hold-while (> 1 1) (and (and (and (on desk) (and (same_color ?e) (exists (?d - drawer ?t - pyramid_block) (agent_holds ?e ?t) ) ) ) (and (in_motion ?k) (agent_holds ?b) ) ) (in_motion ?e ?e) ) )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (count preference1:red) (and (count preference1:dodgeball:yellow) (count preference1:basketball) ) )
    (> (count preference1:golfball) (count-once-per-objects preference1:white) )
  )
)
(:scoring
  (* (- (* (count preference1:dodgeball:tan) (+ (count-overlapping preference1:dodgeball) (total-time) )
      )
    )
    (* 5 2 )
  )
)
)

(define (game game-id-367) (:domain medium-objects-room-v1)
(:setup
  (forall (?o ?a - hexagonal_bin ?w - cube_block)
    (game-optional
      (in_motion floor ?w)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?k - (either tall_cylindrical_block watch))
        (then
          (once (in pink ?k) )
          (once (agent_holds ?k) )
          (once (and (in ?k) (in_motion ?k ?k) ) )
          (once (exists (?e - ball) (and (and (adjacent ?k) (exists (?o ?v - doggie_bed ?u - (either rug triangular_ramp)) (adjacent ?u ?e) ) ) ) ) )
          (once (agent_holds ?k) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 7 (* 40 )
    )
    (count-measure preference1:basketball)
  )
)
(:scoring
  (count preference1:pink_dodgeball:hexagonal_bin)
)
)

(define (game game-id-368) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?a - hexagonal_bin)
      (game-conserved
        (same_type ?a)
      )
    )
    (and
      (game-optional
        (and
          (same_object ?xxx ?xxx)
          (agent_holds ?xxx)
        )
      )
      (and
        (game-conserved
          (agent_holds ?xxx)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?g - doggie_bed)
        (then
          (once (not (< (distance desk desk) (distance agent ?g)) ) )
          (hold (in_motion ?g) )
          (once (< 1 1) )
        )
      )
    )
  )
)
(:terminal
  (= (count-increasing-measure preference1:yellow:dodgeball) (* (count preference1:golfball) (count-once-per-objects preference1:pink_dodgeball:blue_cube_block) )
  )
)
(:scoring
  (* (count-total preference1:beachball) (- 4 )
    (count preference1:doggie_bed)
    6
    10
    (count preference1:dodgeball:purple)
  )
)
)

(define (game game-id-369) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (game-conserved
        (on ?xxx ?xxx)
      )
    )
    (game-conserved
      (not
        (agent_holds ?xxx ?xxx)
      )
    )
    (game-conserved
      (not
        (in rug ?xxx)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?r - red_dodgeball ?u - dodgeball)
        (then
          (once (and (not (agent_holds front ?u) ) (and (agent_holds ?u ?u) (and (in_motion ?u) (in ?u ?u) ) ) ) )
          (once (< (x_position ?u ?u) (x_position room_center)) )
          (hold (not (agent_holds ?u) ) )
        )
      )
    )
    (preference preference2
      (exists (?f - wall ?m - dodgeball)
        (then
          (once (agent_holds ?m) )
          (once (and (touch ?m) (and (agent_holds ?m) (not (and (< (distance back) (distance 5 7)) (agent_holds door ?m) ) ) ) (< 1 (distance 10 door)) ) )
          (once (on ?m) )
        )
      )
    )
  )
)
(:terminal
  (> 2 (count preference2:red) )
)
(:scoring
  (= (count preference1:block) 6 )
)
)

(define (game game-id-370) (:domain many-objects-room-v1)
(:setup
  (and
    (or
      (game-optional
        (and
          (not
            (in_motion ?xxx)
          )
          (on ?xxx ?xxx)
          (same_type ?xxx)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?e - hexagonal_bin ?q - doggie_bed)
        (then
          (once (and (and (not (agent_holds ?q) ) (not (not (on desk) ) ) ) (not (and (in ?q) (in_motion ?q) ) ) ) )
          (once (rug_color_under ?q ?q) )
          (once (in ?q ?q) )
        )
      )
    )
    (preference preference2
      (exists (?n - (either side_table dodgeball yellow_cube_block dodgeball))
        (at-end
          (not
            (and
              (in ?n ?n)
              (agent_holds ?n rug)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (* (count preference1:beachball:basketball) (count preference2:beachball:dodgeball) (count-once-per-external-objects preference2:dodgeball) )
    (count preference1:red)
  )
)
(:scoring
  40
)
)

(define (game game-id-371) (:domain few-objects-room-v1)
(:setup
  (and
    (game-conserved
      (agent_holds tan ?xxx)
    )
    (game-conserved
      (exists (?x - teddy_bear ?w - hexagonal_bin)
        (in ?w ?w)
      )
    )
    (game-optional
      (exists (?k - block)
        (and
          (in_motion ?k ?k)
          (in ?k)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?n - (either cube_block cellphone))
        (at-end
          (agent_holds door)
        )
      )
    )
    (forall (?o - desk_shelf)
      (and
        (preference preference2
          (exists (?l - building ?s - ball ?r - dodgeball)
            (at-end
              (agent_holds ?o)
            )
          )
        )
        (preference preference3
          (exists (?n - hexagonal_bin)
            (then
              (hold (not (agent_holds ?n ?o) ) )
              (once (not (and (not (not (and (agent_holds ?n ?n) (in_motion ?n) ) ) ) (and (and (not (same_color ?o) ) (on front) ) (not (agent_holds ?n) ) ) ) ) )
              (once (in_motion ?n) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference2:basketball:pink) (* (count-increasing-measure preference2:golfball) (count preference3:hexagonal_bin) )
  )
)
(:scoring
  (* (external-forall-maximize 2 ) (count preference3:dodgeball:basketball) )
)
)

(define (game game-id-372) (:domain many-objects-room-v1)
(:setup
  (forall (?y - dodgeball ?y - bridge_block)
    (game-optional
      (exists (?m - block ?x - block)
        (not
          (agent_holds ?y)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?v - block)
      (and
        (preference preference1
          (exists (?y - cube_block)
            (at-end
              (in ?y ?y agent)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 1 (* (= (* (total-score) (* (* 300 )
            (count preference1:basketball)
            (count preference1:book)
            (* (* (count preference1:pink) (count preference1:hexagonal_bin) (and 18 ) )
              (count-once-per-objects preference1:dodgeball)
            )
            (* 1 (count preference1:book) )
            4
          )
          (+ (* 12 10 )
            (count-once-per-objects preference1:pink)
          )
        )
        (count preference1:pink:beachball)
        (count-shortest preference1:dodgeball)
      )
      (* (+ 5 15 )
        2
      )
    )
  )
)
(:scoring
  (count preference1:yellow)
)
)

(define (game game-id-373) (:domain many-objects-room-v1)
(:setup
  (exists (?z - (either hexagonal_bin cylindrical_block))
    (and
      (game-optional
        (and
          (touch ?z)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?c - shelf)
        (then
          (hold (in_motion ?c ?c) )
          (hold-while (in_motion ?c desk) (or (in_motion rug) (in_motion ?c) (in ?c) ) (agent_holds desk) (and (and (not (exists (?g - ball) (and (in_motion ?g) (not (in_motion ?c ?c) ) ) ) ) (and (between ?c ?c) (exists (?d - doggie_bed) (equal_z_position ?d) ) (< 1 3) ) ) (in_motion front) ) )
          (once (and (in_motion rug) ) )
        )
      )
    )
  )
)
(:terminal
  (= (count preference1:dodgeball) (* (- (- (external-forall-maximize (count-once-per-objects preference1:alarm_clock) ) )
      )
      (count-once preference1:pink)
      (count preference1:basketball)
      (* (count-once-per-objects preference1:golfball) 5 )
      (and
        (* (+ (+ (count preference1:basketball:yellow) 100 )
            3
            (count-once-per-objects preference1:beachball)
            10
            (+ (count preference1:dodgeball) 4 )
            (* (* 1 (count-once-per-external-objects preference1:purple:dodgeball) )
              5
            )
            (count-once-per-objects preference1:pink_dodgeball)
            (count preference1:orange:dodgeball)
            (external-forall-minimize
              (+ 300 )
            )
          )
          (>= 2 60 )
        )
        2
        3
      )
      (+ (count-once preference1:blue_dodgeball) (count preference1:dodgeball) (+ (count preference1:beachball) (external-forall-maximize (count preference1:dodgeball) ) )
        (* 5 (>= (* (- (* (* 1 (* 10 (* (count-measure preference1:cube_block:green) (* 5 )
                      )
                    )
                  )
                  (* (* 6 (* (external-forall-maximize (count-once-per-external-objects preference1:dodgeball) ) (- (count-once preference1:hexagonal_bin:dodgeball) )
                      )
                      10
                      (count-once-per-objects preference1:cube_block:dodgeball)
                      (count-increasing-measure preference1:basketball)
                      (count preference1:yellow:alarm_clock)
                    )
                    (* 1 )
                  )
                )
              )
              (* (* (* (count preference1:golfball) (* (count-once-per-objects preference1:book) (count-once preference1:beachball:dodgeball:basketball) )
                  )
                  4
                )
                (+ 100 (count-once-per-objects preference1:dodgeball) )
              )
              5
              6
              (* (count-once preference1:red:purple) 4 )
              (count preference1:beachball:yellow)
            )
            (+ (* (count preference1:red:beachball) (count preference1:beachball) )
              2
            )
          )
        )
        5
        (count preference1:basketball)
        (count preference1:red:purple)
      )
    )
  )
)
(:scoring
  40
)
)

(define (game game-id-374) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (and
      (in_motion bed)
      (not
        (not
          (agent_holds floor ?xxx)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?s - hexagonal_bin)
      (and
        (preference preference1
          (exists (?j - teddy_bear ?p - game_object ?e - doggie_bed)
            (then
              (hold (game_over desk desk) )
              (once (and (object_orientation ?s) (and (agent_holds ?s) (opposite ?s) ) ) )
              (once (>= 9 (distance room_center)) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:beachball) (count-overlapping preference1:red_pyramid_block) )
)
(:scoring
  (* (count preference1:beachball) (* (* (count-once preference1:yellow) (* (count-once-per-external-objects preference1:red_pyramid_block) (+ 2 1 )
        )
      )
      (+ (* (total-score) 10 )
        (count-once-per-objects preference1:beachball)
        10
      )
    )
  )
)
)

(define (game game-id-375) (:domain medium-objects-room-v1)
(:setup
  (and
    (or
      (forall (?s - (either dodgeball blue_cube_block))
        (exists (?h - (either cellphone cd dodgeball) ?x - wall)
          (and
            (game-optional
              (in_motion ?x)
            )
          )
        )
      )
      (exists (?j ?g ?i - hexagonal_bin)
        (game-conserved
          (in_motion agent)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?a - game_object)
        (then
          (once (not (in_motion ?a ?a) ) )
          (once-measure (not (agent_holds ?a) ) (distance desk ?a) )
          (once (exists (?h - teddy_bear) (touch ?h) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (count-once-per-external-objects preference1:book) )
)
(:scoring
  (- 50 )
)
)

(define (game game-id-376) (:domain few-objects-room-v1)
(:setup
  (exists (?v - wall ?f - ball ?t ?a - doggie_bed ?u - hexagonal_bin ?h - curved_wooden_ramp)
    (exists (?q - (either tall_cylindrical_block alarm_clock))
      (exists (?p - cube_block ?s - rug)
        (and
          (and
            (exists (?f - hexagonal_bin)
              (exists (?l - block)
                (exists (?t - curved_wooden_ramp ?b ?a ?e - game_object)
                  (and
                    (forall (?p - (either pyramid_block golfball bridge_block) ?i - hexagonal_bin)
                      (forall (?v - ball)
                        (exists (?x - (either cellphone) ?g - block ?z - block)
                          (and
                            (game-conserved
                              (in bed ?e)
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?x - game_object)
        (then
          (once (not (in_motion ?x) ) )
          (hold-while (agent_holds ?x) (agent_holds ?x) )
          (hold (agent_holds ?x) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:red:dodgeball) (count preference1:basketball) )
)
(:scoring
  (count-once-per-objects preference1:dodgeball)
)
)

(define (game game-id-377) (:domain few-objects-room-v1)
(:setup
  (forall (?r - red_dodgeball)
    (exists (?k - teddy_bear ?e - ball ?j - ball)
      (and
        (and
          (or
            (game-conserved
              (in_motion ?j)
            )
          )
          (game-optional
            (agent_holds ?j)
          )
        )
        (exists (?v - tall_cylindrical_block)
          (exists (?o - hexagonal_bin)
            (game-conserved
              (in ?r desk)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?h - dodgeball)
        (at-end
          (and
            (exists (?z - (either cube_block golfball))
              (on floor)
            )
            (agent_holds ?h ?h)
          )
        )
      )
    )
  )
)
(:terminal
  (>= 6 0 )
)
(:scoring
  3
)
)

(define (game game-id-378) (:domain medium-objects-room-v1)
(:setup
  (forall (?j - dodgeball ?l - golfball)
    (game-optional
      (adjacent ?l rug)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (then
        (once (on ?xxx) )
        (hold (adjacent ?xxx) )
        (once (touch ?xxx) )
      )
    )
  )
)
(:terminal
  (or
    (>= (count preference1:book:basketball) (+ 5 (count preference1:beachball) (count preference1:blue_dodgeball) )
    )
  )
)
(:scoring
  (count-once preference1:pink_dodgeball)
)
)

(define (game game-id-379) (:domain medium-objects-room-v1)
(:setup
  (exists (?z - game_object)
    (and
      (and
        (game-optional
          (agent_holds ?z)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?a - chair)
        (then
          (once (open ?a) )
          (hold (and (touch agent ?a) (agent_holds ?a) (adjacent ?a ?a) (and (not (and (and (not (object_orientation rug ?a) ) (agent_holds ?a) ) (not (in ?a) ) ) ) (on ?a) ) ) )
          (hold (on ?a) )
          (hold (agent_holds ?a) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-unique-positions preference1:purple) (count-once-per-objects preference1:beachball:basketball) )
)
(:scoring
  (count-overlapping preference1:pink_dodgeball)
)
)

(define (game game-id-380) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (and
      (in_motion ?xxx)
      (in_motion ?xxx desk)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?m ?t - hexagonal_bin)
        (then
          (once (agent_holds bed desk) )
          (hold-for 3 (adjacent ?t) )
          (hold-for 0 (>= 4 (distance ?m)) )
          (hold (in_motion ?m) )
          (once (not (in ?t ?t) ) )
        )
      )
    )
    (forall (?m - building ?t ?m - ball)
      (and
        (preference preference2
          (exists (?o - (either main_light_switch doggie_bed flat_block))
            (at-end
              (and
                (not
                  (on ?t ?m)
                )
                (adjacent ?m)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (<= (* 9 (total-time) (count preference1:dodgeball) )
      (count preference1:book)
    )
    (not
      (or
        (or
          (not
            (or
              (<= (+ (count preference1:dodgeball) 300 )
                (+ (count-once-per-external-objects preference2:yellow_cube_block) 2 )
              )
              (>= (+ 10 180 )
                (-
                  (-
                    8
                    (count-overlapping preference2:basketball)
                  )
                  (count-once-per-objects preference1:beachball)
                )
              )
            )
          )
        )
      )
    )
    (>= 300 (and (external-forall-maximize 6 ) 50 (+ 25 9 (count-overlapping preference2) )
      )
    )
  )
)
(:scoring
  (- (* 0 (total-time) )
  )
)
)

(define (game game-id-381) (:domain few-objects-room-v1)
(:setup
  (and
    (game-conserved
      (agent_holds ?xxx rug)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?u - doggie_bed ?d - dodgeball)
        (then
          (hold (not (or (> 1 (distance ?d)) (< 1 (distance door room_center)) (in_motion ) ) ) )
          (hold (and (is_setup_object ?d ?d) (in_motion ?d) ) )
          (hold (exists (?u - hexagonal_bin) (in_motion ?u ?u) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (< (* (count-once-per-objects preference1:blue_pyramid_block) (external-forall-maximize (count preference1:dodgeball) ) )
        (count preference1:book:white)
      )
    )
    (>= (count-unique-positions preference1:pyramid_block) 3 )
  )
)
(:scoring
  15
)
)

(define (game game-id-382) (:domain few-objects-room-v1)
(:setup
  (forall (?c - red_dodgeball)
    (and
      (game-conserved
        (and
          (not
            (agent_holds ?c ?c)
          )
          (< 1 (distance ?c ?c))
          (agent_holds floor desk)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - teddy_bear ?c ?b ?x - wall)
      (and
        (preference preference1
          (exists (?p - (either alarm_clock tall_cylindrical_block golfball) ?w - (either main_light_switch alarm_clock))
            (then
              (once (in_motion ?c) )
              (hold (adjacent ?x ?w) )
              (hold-while (in_motion ?c) (in_motion ?w) (not (agent_holds ?x) ) (agent_holds ?x) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?l - (either cylindrical_block flat_block golfball))
        (then
          (hold (not (agent_holds ?l ?l) ) )
          (once (not (not (and (agent_holds ?l) (adjacent bed) (in_motion ?l) ) ) ) )
          (hold (in_motion ?l ?l) )
          (once (forall (?j - hexagonal_bin ?v - doggie_bed ?o - dodgeball ?v - hexagonal_bin) (agent_holds ?v) ) )
        )
      )
    )
    (forall (?k - book)
      (and
        (preference preference3
          (exists (?z - block)
            (then
              (once (adjacent ?k) )
              (once (agent_holds ?z ?z) )
              (once (object_orientation agent ?z ?z ?z) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (> 1 (count-once-per-objects preference1:yellow:blue_cube_block) )
    (> (* (count preference3:cube_block:yellow) (count preference2:hexagonal_bin) )
      9
    )
  )
)
(:scoring
  (count-once-per-objects preference2:basketball)
)
)

(define (game game-id-383) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (and
      (in_motion ?xxx ?xxx)
      (and
        (rug_color_under ?xxx)
        (agent_holds ?xxx)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?q - hexagonal_bin)
        (at-end
          (exists (?m - triangular_ramp)
            (< 4 1)
          )
        )
      )
    )
    (preference preference2
      (exists (?g - cylindrical_block)
        (then
          (once (on ?g) )
          (hold (in_motion blue) )
          (once (on ?g ?g) )
        )
      )
    )
  )
)
(:terminal
  (= (count preference1:purple) 4 )
)
(:scoring
  (* (total-score) (count preference1:pyramid_block) )
)
)

(define (game game-id-384) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (then
        (hold (on ?xxx) )
        (hold (in_motion ?xxx) )
        (hold (and (and (not (not (= 1 10 (distance ?xxx ?xxx)) ) ) (not (and (adjacent ?xxx ?xxx) (not (in ?xxx) ) ) ) ) (and (in ?xxx ?xxx) (agent_holds ?xxx ?xxx) ) ) )
      )
    )
  )
)
(:terminal
  (>= (- (+ (+ (* (count preference1:red) (* (count-longest preference1:yellow) (count preference1:beachball) )
            2
          )
          (count-once-per-objects preference1:dodgeball)
        )
        (count-measure preference1:yellow)
      )
    )
    3
  )
)
(:scoring
  (+ (* (* (- 5 )
        9
      )
      (count-same-positions preference1:hexagonal_bin)
    )
  )
)
)

(define (game game-id-385) (:domain few-objects-room-v1)
(:setup
  (or
    (game-optional
      (agent_holds ?xxx ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?r - hexagonal_bin)
        (then
          (once (and (and (not (in_motion ?r) ) (adjacent ?r ?r) ) (on ?r desk) ) )
          (hold (not (and (in_motion ?r) (and (not (agent_holds door ?r) ) (agent_holds ?r) (and (or (in_motion ?r) (is_setup_object ?r ?r) ) (> (distance ?r front) 10) ) (< 1 7) (or (not (object_orientation agent) ) (not (in ?r ?r) ) ) (is_setup_object rug ?r ?r) ) ) ) )
          (once (agent_holds ?r ?r) )
        )
      )
    )
    (preference preference2
      (then
        (once (agent_holds ?xxx) )
        (hold (< (distance ?xxx ?xxx) (distance room_center ?xxx)) )
        (once (not (and (on ?xxx) (in ?xxx) ) ) )
      )
    )
  )
)
(:terminal
  (< (* (count-once preference1:dodgeball:blue_dodgeball) (count-once preference1:beachball) )
    100
  )
)
(:scoring
  (+ (count-once-per-objects preference2:basketball:yellow:blue_dodgeball) (* (count-once-per-objects preference2:pink) (count-once-per-objects preference1:basketball) 40 )
  )
)
)

(define (game game-id-386) (:domain medium-objects-room-v1)
(:setup
  (exists (?e - game_object ?g ?n ?z ?a ?i ?q - dodgeball ?t ?z ?h ?e - (either dodgeball dodgeball))
    (and
      (game-conserved
        (not
          (in ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - game_object)
      (and
        (preference preference1
          (exists (?k - beachball)
            (then
              (once (and (in_motion ?h) (in_motion ?k ?k ?k) ) )
              (once (in_motion ?h) )
              (once (in ?h desk ?k) )
            )
          )
        )
      )
    )
    (forall (?f - ball)
      (and
        (preference preference2
          (exists (?i - hexagonal_bin)
            (then
              (hold (not (= (distance ?f 7) 1) ) )
              (once (touch ?i) )
              (hold (not (in_motion ?f) ) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?m - building)
        (at-end
          (adjacent ?m)
        )
      )
    )
    (preference preference4
      (exists (?l - (either desktop bridge_block))
        (then
          (hold (in_motion ?l ?l) )
          (hold (forall (?u - hexagonal_bin) (< (distance 2 ?l) 7) ) )
          (once (in_motion pink_dodgeball) )
        )
      )
    )
    (preference preference5
      (exists (?i - hexagonal_bin ?u - hexagonal_bin ?x - bridge_block)
        (then
          (once (exists (?a - hexagonal_bin) (not (is_setup_object ?x) ) ) )
          (hold (and (not (<= 0.5 2) ) (open ?x) ) )
          (once (on ?x ?x ?x) )
        )
      )
    )
  )
)
(:terminal
  (not
    (and
      (> (count preference2) 6 )
      (<= (count-once preference4:purple) 10 )
      (> (* (count-once preference3:red) (* (- (count-once-per-objects preference1:blue_dodgeball) )
            (count-once preference4:basketball:yellow_pyramid_block)
            2
            (total-score)
            (count-once-per-objects preference5:cube_block)
          )
        )
        (count-total preference1:rug)
      )
    )
  )
)
(:scoring
  (count-total preference4:basketball)
)
)

(define (game game-id-387) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (and
      (and
        (and
          (and
            (on ?xxx)
            (agent_holds floor agent)
          )
          (agent_holds ?xxx ?xxx)
        )
        (and
          (and
            (in_motion ?xxx agent)
            (not
              (and
                (in_motion ?xxx)
                (on ?xxx ?xxx)
                (agent_holds west_wall pink_dodgeball)
              )
            )
          )
          (adjacent ?xxx ?xxx)
        )
      )
      (agent_holds ?xxx ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (then
        (once (not (not (and (not (not (in_motion ?xxx) ) ) (in ?xxx pink) ) ) ) )
        (once (agent_holds pink_dodgeball) )
        (once (or (agent_holds ?xxx ?xxx) (opposite ?xxx ?xxx) ) )
      )
    )
  )
)
(:terminal
  (>= 180 (count-once preference1:basketball) )
)
(:scoring
  3
)
)

(define (game game-id-388) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (adjacent desk ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?j - block)
        (at-end
          (in_motion bed)
        )
      )
    )
    (forall (?r - game_object)
      (and
        (preference preference2
          (exists (?i - building ?s - golfball)
            (then
              (hold (and (and (and (adjacent ?s ?r) (and (adjacent ?r ?r) (in_motion ?s) (exists (?e - desk_shelf ?b - hexagonal_bin) (in ?b) ) ) ) (agent_holds ?r) ) (on desk) ) )
              (hold (same_type ?s) )
              (hold (and (in back agent) (not (agent_holds ?r ?s) ) ) )
            )
          )
        )
        (preference preference3
          (exists (?h - hexagonal_bin ?n - ball)
            (then
              (once (and (and (agent_holds ?n) (on ?r) ) (or (not (adjacent ?r) ) (< 0.5 (distance ?r ?r)) ) ) )
              (once (and (in_motion agent upright) (and (and (not (and (not (not (agent_holds ?n) ) ) (agent_holds agent) ) ) (in_motion ?r) ) (in_motion ?r ?n) ) ) )
              (hold (on ?n) )
            )
          )
        )
        (preference preference4
          (exists (?j - hexagonal_bin ?n - teddy_bear)
            (then
              (hold (in_motion ?n ?r) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference2:dodgeball) (* (* 10 (external-forall-maximize (count-once-per-objects preference4:blue_cube_block) ) )
      5
      10
    )
  )
)
(:scoring
  40
)
)

(define (game game-id-389) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?l - curved_wooden_ramp)
        (then
          (once (not (touch ?l) ) )
          (hold-while (and (not (agent_holds ?l) ) (and (agent_holds ?l) (and (agent_holds ?l) (agent_holds front) ) ) ) (in floor) (in_motion ?l) )
          (hold-while (not (rug_color_under ?l) ) (and (toggled_on ?l ?l) (not (agent_holds ?l rug) ) (not (not (or (in_motion ?l ?l) (on ?l) (and (agent_holds ?l ?l) (agent_holds ?l) (in ?l) (and (in_motion desk ?l) (on ?l) ) ) ) ) ) ) (< 1 (distance ?l front_left_corner)) (not (and (and (agent_holds agent) (on ?l) ) (and (agent_holds ?l ?l) (< 1 10) ) ) ) )
        )
      )
    )
    (forall (?n - dodgeball ?h - dodgeball ?p - cube_block)
      (and
        (preference preference2
          (exists (?s ?c ?j ?o ?l ?k - hexagonal_bin)
            (at-end
              (agent_holds floor ?s)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (count preference1:beachball:dodgeball) )
)
(:scoring
  (count preference1:dodgeball:dodgeball)
)
)

(define (game game-id-390) (:domain many-objects-room-v1)
(:setup
  (forall (?k - game_object)
    (game-optional
      (and
        (and
          (not
            (and
              (and
                (exists (?a - (either dodgeball cube_block) ?h - (either cube_block bridge_block))
                  (agent_holds ?k)
                )
                (on ?k ?k)
              )
              (and
                (on ?k ?k)
                (adjacent ?k)
              )
            )
          )
          (and
            (in ?k)
            (and
              (and
                (on ?k)
                (exists (?z - pillow)
                  (agent_holds ?z)
                )
              )
              (in_motion blue)
            )
          )
        )
        (in_motion bed ?k)
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - dodgeball)
      (and
        (preference preference1
          (exists (?f - hexagonal_bin ?w - hexagonal_bin ?f - dodgeball)
            (then
              (once (in_motion ?f ?f) )
              (hold (on upright ?b) )
              (once (not (not (and (not (agent_holds ?f ?b) ) (adjacent desk) (in_motion ?b) ) ) ) )
            )
          )
        )
        (preference preference2
          (exists (?e - wall)
            (at-end
              (on ?b)
            )
          )
        )
        (preference preference3
          (exists (?k - (either pencil dodgeball) ?p - dodgeball ?o - hexagonal_bin)
            (then
              (once (agent_holds ?o) )
              (hold (in_motion ) )
              (once (agent_holds ?o ?o) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 5 4 )
)
(:scoring
  (* 1 (+ 1 )
    (* (* (count-increasing-measure preference1:red) (count-once-per-objects preference3:dodgeball) )
      (total-score)
    )
    (external-forall-minimize
      (count preference1:dodgeball)
    )
    (- 100 )
    (total-score)
  )
)
)

(define (game game-id-391) (:domain few-objects-room-v1)
(:setup
  (exists (?n - (either golfball bridge_block) ?x - hexagonal_bin)
    (and
      (game-conserved
        (in_motion ?x)
      )
      (exists (?c - hexagonal_bin)
        (game-conserved
          (game_over ?c ?c)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?h - triangular_ramp ?u ?f - dodgeball)
        (then
          (once (in_motion ?u ?u) )
          (once (not (not (touch ?u) ) ) )
          (once (agent_holds bridge_block ?f) )
          (once (not (and (in ?f) (not (in_motion ?f) ) ) ) )
          (once (agent_holds ?u) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 10 2 180 )
    5
  )
)
(:scoring
  3
)
)

(define (game game-id-392) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (and
      (on bed)
      (adjacent ?xxx)
      (not
        (and
          (not
            (not
              (< 6 (distance ?xxx green_golfball))
            )
          )
          (not
            (exists (?f - (either cd))
              (and
                (and
                  (and
                    (in_motion ?f ?f)
                    (on rug)
                  )
                  (adjacent desk)
                )
                (in_motion ?f)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?t - building)
        (then
          (hold-to-end (and (not (and (and (not (and (not (is_setup_object ?t) ) (on ?t) ) ) (and (in ?t ?t) (and (not (agent_holds ?t) ) ) ) ) (and (< 1 (distance )) (on top_shelf agent) ) (in_motion ?t ?t) ) ) (agent_holds rug ?t) ) )
          (hold-while (in agent) (agent_holds south_wall ?t) (in ?t) )
          (once (on ?t) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:triangle_block) (count-shortest preference1:dodgeball:purple:basketball) )
)
(:scoring
  3
)
)

(define (game game-id-393) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (or
      (not
        (not
          (in_motion ?xxx ?xxx)
        )
      )
      (adjacent ?xxx)
      (agent_holds agent)
    )
  )
)
(:constraints
  (and
    (forall (?z - hexagonal_bin ?r - hexagonal_bin)
      (and
        (preference preference1
          (exists (?q - block ?x - building)
            (at-end
              (not
                (agent_holds ?x)
              )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?a ?b - building ?v - chair)
        (then
          (hold-while (on ?v ?v) (on ?v ?v) (> (distance ) (distance room_center ?v)) )
        )
      )
    )
  )
)
(:terminal
  (>= (external-forall-minimize 2 ) (- 2 )
  )
)
(:scoring
  (= (count preference2:basketball:blue_cube_block:doggie_bed) 2 (* 1 (total-score) )
  )
)
)

(define (game game-id-394) (:domain few-objects-room-v1)
(:setup
  (exists (?o - dodgeball ?s - chair)
    (not
      (and
        (and
          (and
            (forall (?l ?z - (either side_table dodgeball) ?i - teddy_bear)
              (game-conserved
                (in_motion bed)
              )
            )
            (game-optional
              (not
                (agent_holds ?s)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?t - building ?g - block)
        (at-end
          (in desk)
        )
      )
    )
  )
)
(:terminal
  (>= 0.5 (count preference1:beachball) )
)
(:scoring
  4
)
)

(define (game game-id-395) (:domain many-objects-room-v1)
(:setup
  (exists (?u - hexagonal_bin ?h - game_object)
    (and
      (game-optional
        (and
          (not
            (in_motion ?h agent)
          )
          (and
            (not
              (not
                (not
                  (in ?h)
                )
              )
            )
            (agent_holds ?h)
            (in ?h)
            (in ?h)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - building)
      (and
        (preference preference1
          (exists (?m - dodgeball ?c - game_object)
            (then
              (once (agent_holds ?c) )
              (once (agent_holds ?c ?c) )
              (once-measure (agent_holds ?c) (distance ?h ?c) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< (external-forall-maximize (* (count-same-positions preference1:basketball) (> (count-measure preference1:block) (+ (* 4 (* (* (* 20 (count preference1:pyramid_block) )
                  (count-once preference1:dodgeball)
                  (count preference1:dodgeball)
                )
                (+ (count preference1:pink) 2 )
                (/
                  (count preference1:cube_block)
                  (not
                    50
                  )
                )
              )
            )
            (count preference1:purple)
          )
        )
        (* (* (count-once-per-objects preference1:beachball:golfball) (count-once preference1:golfball) )
        )
        (count-once-per-objects preference1:book)
        5
        (+ (* (+ (* (* 3 (- (* 3 5 )
                  )
                )
                (count-longest preference1:dodgeball)
                (count-increasing-measure preference1:blue_dodgeball)
              )
              (count-once preference1:pink:yellow)
            )
            20
          )
          5
        )
      )
    )
    (* (count preference1:white) 3 )
  )
)
(:scoring
  0
)
)

(define (game game-id-396) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (< 1 (distance ?xxx ?xxx))
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?o - hexagonal_bin)
        (then
          (hold (< (distance desk ?o) 1) )
          (once (agent_holds block ?o) )
          (once (in_motion upright agent) )
        )
      )
    )
    (forall (?b - cube_block ?c - game_object)
      (and
        (preference preference2
          (exists (?p - (either cube_block cellphone pyramid_block))
            (then
              (once (and (in ?p) (and (agent_crouches ?c) (and (< 5 0.5) (in_motion ?c ?c) ) ) (and (not (exists (?o - hexagonal_bin ?e - (either golfball cube_block)) (agent_holds ?p) ) ) (toggled_on ?c) ) ) )
              (once (in ?p ?p) )
              (once (agent_holds ?c) )
            )
          )
        )
        (preference preference3
          (exists (?d - curved_wooden_ramp ?e - (either pillow golfball mug))
            (then
              (hold (in ?e) )
              (hold (not (< (distance ?e room_center) (distance 2 8)) ) )
              (once (in_motion ?e ?c) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-once preference3:blue_pyramid_block) (count-once-per-objects preference2:side_table:dodgeball:blue_dodgeball) )
    (> (count-total preference1:pink_dodgeball) (count-once-per-objects preference3:basketball) )
    (>= (<= (external-forall-minimize (+ 5 1 (count-once-per-objects preference3:dodgeball) (count-once-per-objects preference3:blue_dodgeball:pink_dodgeball) 40 (count-once-per-objects preference1:dodgeball) )
        )
        2
      )
      100
    )
  )
)
(:scoring
  (count-total preference2:golfball)
)
)

(define (game game-id-397) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (in ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?r - ball ?q - (either dodgeball basketball) ?e - red_dodgeball ?u - block ?y - hexagonal_bin)
        (at-end
          (in_motion ?y left)
        )
      )
    )
    (preference preference2
      (exists (?f - (either pyramid_block laptop))
        (then
          (once (agent_holds ?f) )
          (once (not (< 10 1) ) )
          (hold (and (not (in_motion block) ) (and (< (distance bed ?f) (distance_side ?f ?f)) (not (on ?f ?f) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (count preference1:dodgeball) 4 )
    (and
      (> (count preference2:yellow:beachball) (count-once-per-external-objects preference2:doggie_bed) )
      (or
        (not
          (>= (external-forall-maximize 5 ) (count-once-per-objects preference2:dodgeball:dodgeball) )
        )
        (>= (count preference1:purple) (count-once-per-objects preference2:hexagonal_bin:dodgeball) )
      )
    )
    (>= (- (* 5 (+ (count preference2:beachball) (* (total-score) (/ 6 5 ) )
            (count-total preference2:basketball)
          )
        )
      )
      (total-time)
    )
  )
)
(:scoring
  (count preference1:beachball)
)
)

(define (game game-id-398) (:domain medium-objects-room-v1)
(:setup
  (exists (?c - cube_block)
    (game-conserved
      (agent_holds ?c)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?y ?j - hexagonal_bin ?o - game_object ?o - teddy_bear ?y - pyramid_block ?n - dodgeball)
        (then
          (once (agent_holds ?n) )
          (once (on rug) )
          (hold (is_setup_object ?n) )
        )
      )
    )
    (preference preference2
      (exists (?k - wall ?q ?g ?d ?w - hexagonal_bin)
        (then
          (once (in ?w ?d) )
          (once (in ?g ?w) )
          (hold-while (adjacent desk) (< (distance ?d room_center ?g) (distance_side 4 desk)) )
          (hold (adjacent ?q) )
          (once (and (and (in_motion ?w ?w) (in_motion ?w) ) (not (adjacent ?w ?w) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 18 (* (external-forall-minimize 3 ) 3 )
  )
)
(:scoring
  (count-once-per-objects preference2:hexagonal_bin)
)
)

(define (game game-id-399) (:domain few-objects-room-v1)
(:setup
  (exists (?r - (either blue_cube_block key_chain))
    (game-optional
      (agent_holds ?r)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (then
        (once (toggled_on ?xxx) )
        (hold (and (touch ?xxx) (in_motion ?xxx) (on bed ?xxx) (in_motion ?xxx blue) (touch ?xxx) (not (not (and (agent_holds ?xxx) (not (not (in ?xxx front) ) ) ) ) ) (and (= (distance ?xxx ?xxx)) (on ?xxx) ) ) )
        (once (not (on ?xxx) ) )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (count preference1:orange:yellow) (count preference1:pink) )
      (>= 2 (- (* (count-once-per-objects preference1:golfball) (count-longest preference1:yellow) (/ (count preference1:hexagonal_bin:alarm_clock:dodgeball) (count preference1:red) ) )
        )
      )
    )
    (> (count-once-per-objects preference1:cube_block) 6 )
    (>= 10 5 )
    (>= (external-forall-maximize (count preference1) ) (count preference1:hexagonal_bin) )
  )
)
(:scoring
  50
)
)

(define (game game-id-400) (:domain medium-objects-room-v1)
(:setup
  (or
    (or
      (and
        (and
          (game-conserved
            (exists (?z - hexagonal_bin)
              (adjacent ?z ?z)
            )
          )
          (and
            (exists (?h - hexagonal_bin)
              (and
                (game-conserved
                  (on ?h)
                )
                (and
                  (exists (?i - shelf)
                    (and
                      (forall (?r - hexagonal_bin)
                        (game-conserved
                          (and
                            (< (building_size ?r 3) 1)
                            (exists (?f - (either teddy_bear main_light_switch watch dodgeball pyramid_block key_chain golfball))
                              (> (distance ?i ?r) (distance 0 room_center))
                            )
                          )
                        )
                      )
                      (and
                        (and
                          (and
                            (game-conserved
                              (in_motion agent)
                            )
                          )
                        )
                      )
                      (forall (?j - cube_block)
                        (game-conserved
                          (agent_holds blinds)
                        )
                      )
                    )
                  )
                )
                (exists (?b - flat_block)
                  (game-conserved
                    (adjacent bed upright)
                  )
                )
              )
            )
          )
        )
        (forall (?f ?y - cube_block)
          (game-optional
            (and
              (agent_holds ?f main_light_switch)
              (> 1 3)
              (and
                (in_motion ?f blue ?f ?f)
                (and
                  (adjacent ?y ?y)
                  (exists (?a - dodgeball)
                    (game_start agent)
                  )
                )
              )
            )
          )
        )
        (game-optional
          (and
            (in_motion ?xxx bed)
            (and
              (touch ?xxx south_west_corner)
              (= 4 (distance ?xxx 4) (distance ?xxx ?xxx) 0.5)
            )
          )
        )
      )
      (and
        (and
          (and
            (or
              (exists (?q - hexagonal_bin)
                (game-conserved
                  (and
                    (in_motion ?q)
                    (not
                      (in_motion floor)
                    )
                    (and
                      (on ?q)
                      (and
                        (on upright ?q)
                        (< (distance ?q desk) (distance room_center))
                        (in ?q)
                      )
                    )
                  )
                )
              )
              (game-conserved
                (< (distance agent 9) 1)
              )
            )
          )
        )
        (game-conserved
          (agent_holds agent)
        )
        (and
          (game-conserved
            (adjacent ?xxx ?xxx)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?f - dodgeball)
        (then
          (hold-for 0 (and (< (distance desk ?f) (distance ?f 7)) (agent_holds ?f block agent) ) )
          (hold (in_motion ?f) )
          (once (in_motion door) )
        )
      )
    )
    (preference preference2
      (exists (?m - cube_block ?i - cube_block)
        (at-end
          (touch ?i agent)
        )
      )
    )
  )
)
(:terminal
  (= (count preference2:golfball) (external-forall-minimize 6 ) )
)
(:scoring
  (* (* (count preference2:yellow) (count preference1:beachball) (count-once-per-objects preference1:pink) 1 )
    (count-once-per-objects preference1:basketball)
  )
)
)

(define (game game-id-401) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (not
        (or
          (game-optional
            (and
              (agent_holds ?xxx)
              (in_motion ?xxx)
            )
          )
          (and
            (forall (?m - hexagonal_bin)
              (and
                (forall (?o - ball ?k - hexagonal_bin)
                  (and
                    (game-optional
                      (not
                        (adjacent ?k)
                      )
                    )
                  )
                )
                (game-optional
                  (and
                    (not
                      (> (distance ?m ?m) 1)
                    )
                    (forall (?a - tall_cylindrical_block)
                      (or
                        (is_setup_object ?a ?m)
                        (not
                          (is_setup_object agent desk)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?g - ball)
        (at-end
          (not
            (in_motion upright)
          )
        )
      )
    )
    (forall (?g - curved_wooden_ramp)
      (and
        (preference preference2
          (exists (?y - hexagonal_bin)
            (then
              (hold (opposite ?g) )
              (once-measure (adjacent_side ?g) (distance room_center ?g) )
              (hold-while (and (agent_holds agent ?y) (not (and (or (in_motion pink) (and (and (same_object ?g) (in ?g front) ) (in_motion ?y agent) ) (and (agent_holds ?y ?y) (not (not (< 10 (distance 6 ?g)) ) ) ) ) (and (in_motion ?y) (agent_holds rug ?y) (not (in_motion ?g) ) (rug_color_under ?y) (and (and (agent_holds ?y pink_dodgeball) (is_setup_object ?y agent) ) (< (distance room_center agent) 2) ) (agent_holds ?y) (and (touch ?y ?y) (and (adjacent ?y ?g) (same_type ?g) ) (and (touch pink_dodgeball) (agent_holds ?y) ) ) (agent_holds ?g) ) ) ) ) (on ?y ?y) (agent_holds ?y) )
            )
          )
        )
        (preference preference3
          (exists (?p - sliding_door ?n - building)
            (then
              (once (in ?g ?n) )
              (hold-while (forall (?a - doggie_bed) (touch ?n ?n) ) (on ?g) (agent_holds ?g desk) )
              (once (and (in ?n ?n) (and (in ?n) (in_motion ?n ?n) (in ?g) ) ) )
              (once (and (and (in rug bed) (and (agent_holds rug) (on ?g) ) ) (on ?g) (and (in_motion ?g ?n) (touch ?g) (agent_holds ?g) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (> 2 (* (count-once-per-objects preference3:yellow) (* (count preference1:red) (- 25 )
            (* 10 (- (count preference2:red:basketball) )
              3
              (* 5 (* (count preference2:tan:hexagonal_bin) 10 )
                9
                2
                (* (* (count preference3:pink_dodgeball) (- (external-forall-maximize (count preference1:pink) ) )
                  )
                  (* 10 (+ (count-once-per-objects preference3:pyramid_block) (count preference3:dodgeball) )
                  )
                )
                10
                (- 3 )
                (- (count-unique-positions preference1:hexagonal_bin) )
                (count preference3:triangle_block:beachball)
              )
              (or
                (* (- (count preference3:dodgeball) 5 ) (= (count-increasing-measure preference1:dodgeball) 2 (- (count-same-positions preference2:hexagonal_bin) )
                  )
                )
                (* 40 (* (count-once-per-objects preference3:beachball:green) 6 )
                )
              )
              (count preference2:basketball)
            )
          )
        )
      )
      (or
        (<= 8 (count preference3:tall_cylindrical_block) )
        (< 5 (count-once preference3:basketball) )
      )
    )
    (> (- (- (* (+ (count-once preference2:dodgeball) 3 )
            (/
              10
              (external-forall-maximize
                (* (count preference1:blue_cube_block) )
              )
            )
          )
        )
      )
      (total-time)
    )
    (> (* (* 2 (count-once-per-objects preference1:beachball) )
        (count-once-per-objects preference1:golfball:golfball)
        3
        (* (count-once-per-objects preference1:green) (count-overlapping preference1:basketball) )
        (count preference2:beachball)
      )
      (* 10 5 )
    )
  )
)
(:scoring
  6
)
)

(define (game game-id-402) (:domain many-objects-room-v1)
(:setup
  (not
    (exists (?e ?q ?p ?k - building)
      (game-conserved
        (agent_holds ?e ?e)
      )
    )
  )
)
(:constraints
  (and
    (forall (?e - hexagonal_bin ?n - game_object)
      (and
        (preference preference1
          (exists (?m - building ?g - (either mug watch golfball))
            (then
              (once-measure (in_motion ?g ?n) (distance 1 2) )
              (hold (on ?g) )
              (once (between west_wall ?n) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< 3 (* 1 15 )
  )
)
(:scoring
  20
)
)

(define (game game-id-403) (:domain many-objects-room-v1)
(:setup
  (forall (?a - ball)
    (game-conserved
      (agent_holds ?a)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?x - wall ?a - building)
        (then
          (hold (not (adjacent ?a ?a) ) )
          (once (faces ?a) )
          (once (and (in ?a) (or (in ?a ?a) (in ?a) (agent_holds desk) (not (not (in_motion ?a) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (not
      (> (count-shortest preference1:hexagonal_bin) (count preference1:basketball) )
    )
    (> (* 1 (count-once-per-objects preference1:beachball:blue_cube_block) (count preference1:basketball) )
      (count-once-per-objects preference1:basketball:dodgeball)
    )
    (not
      (= (count preference1:basketball) 4 )
    )
  )
)
(:scoring
  (+ (- (- (* (count-once-per-objects preference1:golfball) 300 )
      )
    )
    (* (count-once-per-objects preference1:doggie_bed:green:dodgeball) (count-once preference1:pink_dodgeball:yellow) )
  )
)
)

(define (game game-id-404) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (object_orientation blue)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?f - chair)
        (then
          (once (in_motion ?f) )
          (hold (adjacent ?f) )
          (hold-while (adjacent ?f ?f) (in_motion ?f) (not (not (agent_holds ?f floor) ) ) )
        )
      )
    )
    (preference preference2
      (exists (?d - building)
        (then
          (hold (not (not (and (not (agent_holds ?d) ) (in ?d agent) ) ) ) )
          (once (adjacent_side desk) )
          (once (agent_holds ?d) )
        )
      )
    )
    (forall (?b - hexagonal_bin)
      (and
        (preference preference3
          (exists (?n ?u - dodgeball)
            (then
              (hold-while (in_motion ?b desk) (in_motion ?b ?n) (agent_holds ?n ?u) )
              (hold-while (not (agent_holds ?b) ) (agent_holds agent ?b) )
              (once (on ?b) )
            )
          )
        )
        (preference preference4
          (exists (?n - triangular_ramp)
            (then
              (once (in_motion ?n) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (= (count-total preference4:golfball) (count preference2:dodgeball:basketball) )
    (>= 300 (count preference4:book) )
    (or
      (or
        (not
          (or
            (>= (* 18 0 )
              15
            )
          )
        )
        (>= (* (count-once preference4:pink_dodgeball) (count preference3:pink_dodgeball) )
          8
        )
      )
    )
  )
)
(:scoring
  (* (count-once-per-objects preference2:rug) (* (count preference4:basketball) (+ 10 (count-once-per-external-objects preference2:yellow) (count-longest preference4:dodgeball:hexagonal_bin) )
    )
  )
)
)

(define (game game-id-405) (:domain many-objects-room-v1)
(:setup
  (exists (?c - curved_wooden_ramp)
    (game-optional
      (and
        (agent_holds ?c)
        (not
          (in_motion ?c)
        )
        (touch ?c)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?j - game_object ?j - triangular_ramp ?v - hexagonal_bin)
        (then
          (once (in_motion ?v) )
          (once (in ?v ?v) )
          (hold (not (in_motion ?v) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (+ (total-time) (count preference1:pink) )
      15
    )
    (and
      (> (count preference1:beachball) (count preference1:dodgeball:beachball) )
    )
  )
)
(:scoring
  (* (not (* 10 (count preference1:golfball:dodgeball) )
    )
    (count preference1:pink)
  )
)
)

(define (game game-id-406) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (in ?xxx ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?g - chair)
        (then
          (once (and (in_motion ?g) (game_start agent) ) )
          (once (not (> 1 9) ) )
          (once (and (not (and (not (in ?g ?g) ) (< (distance ?g agent) (distance agent 6)) ) ) (not (and (not (and (agent_holds ?g ?g) (and (same_type sideways ?g) (touch ?g) ) (agent_holds ?g ?g) (and (and (in top_drawer) (and (agent_holds ?g ?g) (and (touch ?g) (in desk) ) ) ) (in ?g ?g ?g) ) (and (in_motion ?g) ) (not (not (and (not (not (exists (?s - hexagonal_bin) (in ?g) ) ) ) (not (agent_holds ?g) ) ) ) ) (not (not (adjacent ?g) ) ) (and (not (not (not (and (adjacent ?g ?g) (and (agent_holds ?g) (toggled_on ?g) ) ) ) ) ) (not (and (not (adjacent_side ?g) ) (not (not (not (agent_holds ?g floor) ) ) ) ) ) (in ?g ?g) (not (in ?g) ) ) (in_motion ?g) (> (distance ?g ?g) 1) ) ) (on ?g) ) ) (and (and (not (not (in_motion ?g ?g) ) ) (not (and (and (on agent) (and (not (adjacent ?g ?g) ) (forall (?s - dodgeball) (same_type ?s) ) ) (not (touch ?g) ) ) (in_motion ?g) ) ) (not (not (on ?g) ) ) ) (on ?g) ) ) )
        )
      )
    )
  )
)
(:terminal
  (= (count preference1:beachball) (count preference1:blue_pyramid_block) )
)
(:scoring
  (count preference1:dodgeball:purple)
)
)

(define (game game-id-407) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (in_motion ?xxx ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?j - block ?z - dodgeball)
        (then
          (hold-while (= 5 (distance_side ?z ?z)) (agent_holds floor ?z) (same_type ?z) )
          (once (between ?z) )
          (once (not (agent_holds ?z) ) )
        )
      )
    )
    (preference preference2
      (exists (?y - chair)
        (then
          (once (= 6 6) )
          (once (agent_holds ?y ?y) )
          (hold (in_motion ?y agent) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:basketball) (count-measure preference2:red) )
)
(:scoring
  8
)
)

(define (game game-id-408) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (and
        (exists (?h - sliding_door)
          (and
            (forall (?u - pyramid_block)
              (and
                (exists (?p - hexagonal_bin)
                  (game-conserved
                    (and
                      (< (distance ?h room_center) 1)
                      (and
                        (in_motion ?u ?h)
                        (in_motion ?u ?h)
                      )
                      (in_motion ?u ?p)
                    )
                  )
                )
                (forall (?v - cylindrical_block)
                  (and
                    (forall (?o - red_dodgeball)
                      (and
                        (forall (?p ?g - hexagonal_bin)
                          (exists (?n - hexagonal_bin)
                            (exists (?e - cube_block)
                              (exists (?b - teddy_bear)
                                (exists (?r - game_object)
                                  (and
                                    (and
                                      (and
                                        (and
                                          (forall (?l - dodgeball)
                                            (game-optional
                                              (< 1 (distance back desk ?e))
                                            )
                                          )
                                        )
                                        (exists (?y - hexagonal_bin)
                                          (and
                                            (and
                                              (and
                                                (and
                                                  (game-conserved
                                                    (agent_holds ?v top_drawer)
                                                  )
                                                )
                                                (game-conserved
                                                  (forall (?t ?x - game_object)
                                                    (not
                                                      (and
                                                        (on door)
                                                        (on ?v)
                                                        (not
                                                          (not
                                                            (not
                                                              (faces ?y)
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                                (exists (?c - hexagonal_bin ?t - dodgeball)
                                                  (game-optional
                                                    (on ?u ?g)
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                        (and
                                          (forall (?c - yellow_cube_block ?k - green_triangular_ramp)
                                            (game-optional
                                              (in_motion ?e)
                                            )
                                          )
                                          (and
                                            (exists (?s - (either yellow_cube_block triangular_ramp mug yellow_cube_block))
                                              (and
                                                (game-optional
                                                  (= 1)
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
                (game-conserved
                  (on ?h)
                )
              )
            )
          )
        )
      )
      (forall (?b - curved_wooden_ramp ?v ?k ?n - game_object)
        (game-optional
          (not
            (exists (?l ?j - beachball ?r - dodgeball ?w ?l - dodgeball ?i - hexagonal_bin)
              (in bed)
            )
          )
        )
      )
      (game-conserved
        (and
          (is_setup_object ?xxx ?xxx)
          (and
            (not
              (agent_holds agent)
            )
            (and
              (agent_holds ?xxx)
              (in_motion ?xxx)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (then
        (once (touch ?xxx ?xxx) )
        (hold (> 10 (distance ?xxx ?xxx)) )
        (hold (not (agent_holds agent ?xxx) ) )
      )
    )
  )
)
(:terminal
  (> (count-once preference1:purple) 1 )
)
(:scoring
  0
)
)

(define (game game-id-409) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (adjacent ?xxx)
  )
)
(:constraints
  (and
    (forall (?z - hexagonal_bin)
      (and
        (preference preference1
          (exists (?i - ball)
            (at-end
              (in_motion ?z)
            )
          )
        )
        (preference preference2
          (exists (?c ?f - (either triangular_ramp book) ?k - (either yellow cube_block))
            (then
              (hold-for 7 (in ?z) )
              (once (object_orientation ?z ?z) )
              (hold (in_motion ?k ?k) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?k - block)
        (then
          (once (< 1 1) )
          (once (and (and (on ?k) (not (not (on ?k) ) ) ) (and (in ?k) ) ) )
          (once (in_motion ?k) )
        )
      )
    )
  )
)
(:terminal
  (> (+ (count-longest preference2:dodgeball) 3 )
    4
  )
)
(:scoring
  (* 20 (+ 10 2 )
  )
)
)

(define (game game-id-410) (:domain few-objects-room-v1)
(:setup
  (forall (?q - hexagonal_bin ?g - shelf ?k ?o - hexagonal_bin)
    (game-conserved
      (agent_holds ?o ?o)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?s - dodgeball)
        (then
          (once (agent_holds agent) )
          (hold (and (in_motion door) (in_motion ?s) ) )
          (once (not (not (and (agent_holds ?s) (on ?s) ) ) ) )
        )
      )
    )
    (forall (?e - doggie_bed ?o - hexagonal_bin)
      (and
        (preference preference2
          (exists (?d - (either bridge_block flat_block))
            (then
              (forall-sequence (?x - (either cube_block cube_block golfball) ?p - block)
                (then
                  (hold (not (<= (distance_side ?p ?o) 1) ) )
                  (hold (agent_holds ?p ?d) )
                  (once (on ?p ?d) )
                )
              )
              (once (broken agent ?d) )
              (hold (in_motion ?d) )
            )
          )
        )
        (preference preference3
          (exists (?k - blue_pyramid_block ?n - (either blue_cube_block floor main_light_switch))
            (at-end
              (not
                (agent_holds ?n ?o)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (* (+ (- (= (count preference1:beachball:pink:dodgeball) (* (count-once-per-objects preference2:green) (count preference1:beachball:golfball) )
            )
          )
          (count-measure preference1:blue_dodgeball:triangle_block)
        )
        3
      )
      6
      6
      (+ (count preference3:hexagonal_bin) 8 )
    )
    2
  )
)
(:scoring
  5
)
)

(define (game game-id-411) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (on ?xxx agent)
  )
)
(:constraints
  (and
    (forall (?l - curved_wooden_ramp)
      (and
        (preference preference1
          (then
            (once (on ?l) )
            (once (and (in_motion ?l ?l) (on ?l ?l) (in_motion ?l ?l) ) )
            (once (agent_holds ?l) )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 2 15 )
)
(:scoring
  (count-measure preference1:yellow)
)
)

(define (game game-id-412) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?p - hexagonal_bin ?a - blue_pyramid_block)
        (then
          (once (and (and (in_motion ?a ?a) (in ?a ?a) ) (same_type ?a) ) )
          (hold-while (exists (?i - game_object ?v - hexagonal_bin) (not (same_color ?v) ) ) (in ?a) )
          (hold (on ?a) )
        )
      )
    )
    (forall (?m - (either pencil cellphone))
      (and
        (preference preference2
          (exists (?x - triangular_ramp ?s - green_triangular_ramp)
            (then
              (once (< (distance_side desk ?m) 1) )
              (once (in_motion top_shelf agent ?s) )
              (hold (agent_holds ?s) )
            )
          )
        )
        (preference preference3
          (exists (?n - block)
            (then
              (hold-for 1 (in_motion ?m) )
              (once (and (in_motion ?m rug) (in_motion ?n) (and (or (and (< (distance ?m room_center) 1) (adjacent rug ?n) ) (in_motion ?n) ) (on ?m bed) (and (agent_holds ?n) (in_motion floor) ) ) (and (not (adjacent ?m ?m) ) (in ?m) ) (not (not (or (= (distance_side room_center ?n) 5) (agent_holds ?n) ) ) ) (and (in_motion ?n ?n) (on front) ) (agent_holds ?n ?n) (on ?m) (and (opposite ?m ?m) (not (and (< (distance ?m desk) 2) (in ?m ?m) (and (and (in_motion ?m) (and (and (same_color desk pink_dodgeball) (not (not (in_motion ?n ?m) ) ) ) (agent_holds ?m bed) ) ) (and (agent_holds ?m bed) (in ?m ?m ?m) (agent_holds ?m ?m) (not (touch ?m ?m) ) ) ) ) ) (< 1 (distance back 0)) (and (touch rug) (agent_holds ?m ?n) (not (and (not (agent_holds ?n) ) (in ?n) ) ) ) ) (not (in_motion rug ?m) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (* 3 (count-once-per-objects preference3:yellow) )
      (- 1 )
    )
    (>= 3 (* (+ (count preference2:basketball) (* 2 4 )
        )
        (count-longest preference3:doggie_bed:red)
        3
        (count preference2:beachball:dodgeball:top_drawer)
        (count-once-per-objects preference3:purple)
        3
      )
    )
    (>= (+ (count-once-per-objects preference2:golfball:blue_pyramid_block) (* (count preference1:golfball) (count preference3:dodgeball) )
      )
      (count-once-per-objects preference3:basketball)
    )
  )
)
(:scoring
  (count preference3:dodgeball:triangle_block)
)
)

(define (game game-id-413) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (agent_holds ?xxx upright)
  )
)
(:constraints
  (and
    (forall (?q ?v - golfball ?n - curved_wooden_ramp)
      (and
        (preference preference1
          (exists (?u - color ?q - hexagonal_bin)
            (then
              (hold (same_type ?n ?q) )
              (once (not (agent_holds ?q) ) )
              (once (not (in_motion ?n) ) )
            )
          )
        )
        (preference preference2
          (exists (?h - hexagonal_bin)
            (then
              (hold (agent_holds ?h) )
              (hold (rug_color_under ?h ?h) )
              (hold-while (in_motion ?n agent) (adjacent ?h ?h) (and (and (in ?n ?h) (not (on agent) ) ) (on ?n ?n) ) )
            )
          )
        )
      )
    )
    (forall (?h - hexagonal_bin)
      (and
        (preference preference3
          (exists (?v ?w ?s ?m - doggie_bed)
            (then
              (once (in ?m) )
              (once (in_motion ?w) )
              (once (adjacent ?m) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (= (< 30 (count-once-per-objects preference2:alarm_clock) )
    (* 4 (count preference1:doggie_bed:yellow) 20 (count preference1:beachball:hexagonal_bin) 1 (count-unique-positions preference2:dodgeball:blue_dodgeball) )
  )
)
(:scoring
  8
)
)

(define (game game-id-414) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?c - hexagonal_bin ?r - ball ?l - curved_wooden_ramp)
      (exists (?t - dodgeball ?s - hexagonal_bin)
        (exists (?e - dodgeball)
          (exists (?q ?r - game_object)
            (game-conserved
              (not
                (< 1 5)
              )
            )
          )
        )
      )
    )
    (game-conserved
      (agent_holds ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?h - dodgeball)
        (at-end
          (in_motion agent)
        )
      )
    )
    (preference preference2
      (exists (?k - dodgeball)
        (then
          (hold-while (on ?k ?k) (in_motion bed ?k) (in ?k) (on ?k) )
          (hold (or (agent_holds ?k ?k) (touch ?k bed) ) )
          (hold-while (and (agent_holds ?k) (agent_holds agent) ) (in_motion ?k) (not (in_motion ?k ?k) ) )
        )
      )
    )
    (preference preference3
      (exists (?g - hexagonal_bin)
        (at-end
          (and
            (on ?g ?g)
            (in_motion ?g)
          )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (- (count-same-positions preference1:basketball:beachball) )
  )
)
(:scoring
  (+ 5 (* (+ (count-once preference2:beachball) (count-once-per-objects preference1:basketball) (count-once-per-objects preference1:basketball) 3 )
      (+ (count-once-per-objects preference2:green:basketball) (count-once-per-objects preference3:golfball) )
    )
  )
)
)

(define (game game-id-415) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (agent_holds ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?l - hexagonal_bin ?h - block ?s - color)
        (then
          (once (in_motion ?s) )
          (once (in_motion floor) )
          (once (adjacent ?s) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ 5 (total-time) )
    (count-once-per-objects preference1:dodgeball:purple)
  )
)
(:scoring
  5
)
)

(define (game game-id-416) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?f - (either doggie_bed cellphone))
      (not
        (game-optional
          (and
            (same_object ?f)
            (adjacent ?f ?f)
          )
        )
      )
    )
    (game-optional
      (agent_holds ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?e - game_object)
        (then
          (once (and (in_motion floor) (same_color agent ?e) ) )
          (once (< (distance 0 ?e) (distance agent 4)) )
          (hold (not (in_motion agent) ) )
        )
      )
    )
    (preference preference2
      (exists (?w - drawer)
        (then
          (once (agent_holds door) )
          (hold (and (in ?w ?w) (in_motion ?w ?w) ) )
          (hold-while (not (not (adjacent ?w) ) ) (not (agent_holds ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once preference2:golfball) (external-forall-maximize (* 5 5 )
    )
  )
)
(:scoring
  3
)
)

(define (game game-id-417) (:domain medium-objects-room-v1)
(:setup
  (exists (?g - (either book dodgeball))
    (exists (?c - doggie_bed)
      (and
        (game-conserved
          (in_motion floor)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?a - hexagonal_bin ?r - block)
        (then
          (hold-while (exists (?j - (either basketball book triangle_block hexagonal_bin)) (and (adjacent bed) (and (not (in_motion ?r ?j) ) (in top_shelf) (not (<= 6 (distance ?r room_center)) ) ) ) ) (touch ?r) (agent_holds ?r) )
          (once (in_motion ?r) )
          (hold (not (< 0.5 (distance 7 ?r)) ) )
        )
      )
    )
    (preference preference2
      (exists (?a ?h - (either dodgeball dodgeball))
        (then
          (hold (not (exists (?f - (either laptop dodgeball doggie_bed doggie_bed)) (adjacent agent) ) ) )
          (once (and (and (not (and (and (agent_holds ?a) (exists (?p - game_object ?o - (either golfball red)) (agent_holds ?a) ) ) (agent_holds ?h) ) ) (touch ?a) ) (in_motion ?h pillow) (and (in_motion ?a) (in_motion ?h) ) ) )
        )
      )
    )
    (forall (?k - ball ?t - ball)
      (and
        (preference preference3
          (exists (?y - (either cylindrical_block book))
            (then
              (once (exists (?w - hexagonal_bin) (not (and (and (in_motion ?t ?y) (and (agent_holds ?y) (in_motion ?w) ) ) (agent_holds ?w desk) (< 1 1) ) ) ) )
              (once (not (in_motion bed ?t) ) )
              (hold (object_orientation ?y rug) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (count preference2:yellow) (+ (* (count-once-per-external-objects preference3:blue_dodgeball) 5 )
          (/
            3
            (and
              (or
                (* 1 (+ (* 50 (* (* (or (count preference3:golfball) 8 ) (count-overlapping preference1:green:blue_cube_block) )
                        (total-score)
                      )
                      (count-once-per-objects preference3:alarm_clock:golfball)
                    )
                    2
                  )
                  3
                  (* 2 0 )
                )
                (count-once-per-objects preference3:dodgeball)
                (* (* (* (+ (count-once preference1:book) (* (count-longest preference1:tall_cylindrical_block) (count-once-per-objects preference1:doggie_bed) )
                        20
                      )
                      (count preference1:pink)
                    )
                    (* (>= (external-forall-maximize (external-forall-maximize (count preference3:dodgeball) ) ) (count preference2:blue_dodgeball) )
                      (/
                        5
                        (count preference1:basketball:green)
                      )
                    )
                  )
                  (count-once preference3:golfball)
                )
              )
              (count preference1:red)
              1
            )
          )
        )
      )
      (> (+ (count-once-per-objects preference3:pink_dodgeball) (total-score) )
        (/
          (total-score)
          (* (count-overlapping preference1:hexagonal_bin) 4 )
        )
      )
      (>= 6 60 )
    )
    (>= (* (* (count preference2:basketball) (count preference2:alarm_clock) )
        (count-once-per-external-objects preference1:cube_block)
        (count-unique-positions preference1:blue_pyramid_block:basketball)
        (count preference2:golfball)
        (count preference3:pink:hexagonal_bin)
        7
      )
      (count preference1:triangle_block:dodgeball)
    )
    (>= (* (count-shortest preference2:tall_cylindrical_block) (count preference1:blue_dodgeball) )
      (* (+ (count preference1:orange) (count preference1) )
        10
      )
    )
  )
)
(:scoring
  (+ 3 6 )
)
)

(define (game game-id-418) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?l - dodgeball)
      (forall (?z - hexagonal_bin)
        (exists (?k - hexagonal_bin ?g - (either basketball game_object book top_drawer))
          (game-optional
            (not
              (agent_holds ?z ?z)
            )
          )
        )
      )
    )
    (and
      (and
        (and
          (and
            (game-conserved
              (not
                (or
                  (agent_holds ?xxx ?xxx)
                  (on ?xxx)
                )
              )
            )
          )
          (game-conserved
            (in_motion ?xxx)
          )
        )
        (exists (?o - dodgeball)
          (game-conserved
            (agent_holds ?o)
          )
        )
        (and
          (and
            (forall (?e - hexagonal_bin ?n - hexagonal_bin)
              (game-optional
                (not
                  (in ?n ?n)
                )
              )
            )
          )
        )
        (exists (?o - (either dodgeball side_table dodgeball))
          (and
            (game-optional
              (agent_holds agent north_wall)
            )
            (and
              (game-optional
                (not
                  (not
                    (in ?o ?o)
                  )
                )
              )
            )
          )
        )
        (exists (?o - game_object)
          (exists (?p - drawer)
            (exists (?n - hexagonal_bin)
              (and
                (and
                  (game-conserved
                    (or
                      (in_motion ?o ?n)
                      (forall (?x - dodgeball)
                        (on ?p)
                      )
                    )
                  )
                )
                (game-optional
                  (on ?p)
                )
              )
            )
          )
        )
      )
      (exists (?l - ball ?w ?z - (either pillow))
        (and
          (and
            (and
              (game-optional
                (in_motion bed)
              )
            )
          )
        )
      )
    )
    (game-optional
      (not
        (in ?xxx upright)
      )
    )
  )
)
(:constraints
  (and
    (forall (?g - hexagonal_bin ?f - (either key_chain teddy_bear) ?c - (either dodgeball desktop floor))
      (and
        (preference preference1
          (exists (?z - tall_cylindrical_block)
            (then
              (hold (agent_holds ?z) )
              (once (in_motion ?z) )
              (hold (not (object_orientation ?z rug) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= (+ (+ (count-once-per-objects preference1:beachball:purple) (* 6 (count preference1:golfball) )
        (count preference1:blue_dodgeball:doggie_bed)
      )
    )
    (external-forall-maximize
      (* 3 6 )
    )
  )
)
(:scoring
  (+ (* (total-time) (count-once-per-objects preference1:pink:cube_block:dodgeball) )
    (* (count preference1:red) (count-once-per-objects preference1:basketball:brown) )
  )
)
)

(define (game game-id-419) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (is_setup_object ?xxx)
  )
)
(:constraints
  (and
    (forall (?u - pillow)
      (and
        (preference preference1
          (exists (?r - shelf ?c - chair ?x - hexagonal_bin)
            (then
              (hold (same_type agent) )
              (once (or (agent_holds bed ?u) ) )
              (hold (on bed) )
              (hold (and (< (distance 5 ?x) 0.5) (not (and (in_motion ?x ?u) (exists (?h - building) (or (is_setup_object ?h) (agent_holds ?x) ) ) (in agent) ) ) ) )
            )
          )
        )
        (preference preference2
          (exists (?e - hexagonal_bin)
            (at-end
              (agent_holds ?u)
            )
          )
        )
        (preference preference3
          (exists (?y - (either doggie_bed key_chain yellow))
            (then
              (once (not (in_motion ?u ?u) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* (count preference2:red) (count-overlapping preference3:beachball) 8 )
      1
    )
    (> (* (* (- (count-longest preference2:beachball:wall) )
          10
        )
        3
      )
      (* 3 (- 5 )
      )
    )
  )
)
(:scoring
  (count preference3:golfball)
)
)

(define (game game-id-420) (:domain medium-objects-room-v1)
(:setup
  (exists (?z - red_dodgeball)
    (or
      (and
        (and
          (game-conserved
            (and
              (in_motion ?z)
              (rug_color_under ?z)
            )
          )
          (game-conserved
            (not
              (on ?z ?z)
            )
          )
          (exists (?v - ball ?g - curved_wooden_ramp)
            (game-conserved
              (in_motion ?g desk)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?t - ball)
      (and
        (preference preference1
          (exists (?w ?o - dodgeball ?g - doggie_bed)
            (then
              (hold (not (in_motion ?g ?t) ) )
              (once (> 1 (distance ?t ?t)) )
              (once (on floor agent) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (and
      (>= (count preference1:green:pink_dodgeball) (+ (count preference1:top_drawer) (total-score) )
      )
      (>= (* 5 (count preference1:dodgeball) )
        (count-unique-positions preference1:dodgeball)
      )
      (>= 30 (count preference1:beachball) )
    )
    (<= 10 (+ (+ 3 (count-measure preference1:yellow_cube_block) (* (* 4 (count-once-per-objects preference1:basketball) )
            (count preference1:pink:blue_pyramid_block)
          )
          (count-once preference1:dodgeball)
          7
          4
        )
        (* (count-once-per-objects preference1:dodgeball:blue_cube_block:yellow) (+ 10 (count preference1:cylindrical_block) )
        )
      )
    )
    (and
      (>= (external-forall-maximize 5 ) 30 )
      (or
        (>= (* (= 20 (count preference1:beachball) )
            7
          )
          (* 2 (count preference1:pink) (* (total-score) (+ 3 2 )
            )
          )
        )
      )
      (>= (* 1 3 )
        (count-once preference1:dodgeball)
      )
    )
  )
)
(:scoring
  (count-same-positions preference1:pink_dodgeball)
)
)

(define (game game-id-421) (:domain few-objects-room-v1)
(:setup
  (forall (?r - hexagonal_bin ?f - dodgeball)
    (forall (?i - dodgeball)
      (forall (?o ?j - hexagonal_bin)
        (game-conserved
          (and
            (and
              (not
                (on ?f ?i)
              )
              (on ?j)
            )
            (agent_holds ?j)
            (not
              (on agent)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (then
        (forall-sequence (?m ?l - drawer)
          (then
            (hold (above ?l) )
            (hold (in_motion ?l) )
            (once (not (same_object ?l) ) )
            (once (and (agent_holds ?l ?l) (in_motion agent ?m) ) )
          )
        )
        (once (and (in_motion ?xxx) (in_motion rug rug) (in ?xxx) ) )
        (once (in ?xxx) )
      )
    )
  )
)
(:terminal
  (>= (+ 5 )
    (count-same-positions preference1:purple)
  )
)
(:scoring
  (* (+ (count-once-per-objects preference1:hexagonal_bin) 9 )
    (+ (* (* (* (* (count-once-per-objects preference1:dodgeball) (* 3 (count preference1:beachball:pink_dodgeball) )
            )
          )
          (* 10 1 )
        )
        4
        (count preference1:golfball:red)
        8
      )
      (- (count-longest preference1:pink) )
      (count preference1:green)
      5
    )
  )
)
)

(define (game game-id-422) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (> (distance ?xxx room_center) (distance ?xxx))
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?s - hexagonal_bin ?a - bridge_block)
        (then
          (hold (in_motion ?a ?a) )
          (hold-while (in_motion rug) (agent_holds ?a ?a) )
          (hold (on ?a) )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (external-forall-maximize (>= 2 (count preference1:red) )
    )
  )
)
(:scoring
  (* 10 (count preference1:dodgeball) )
)
)

(define (game game-id-423) (:domain medium-objects-room-v1)
(:setup
  (exists (?u ?x - ball)
    (exists (?i - pyramid_block)
      (game-conserved
        (in_motion ?x)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?y - chair)
        (then
          (once (in_motion ?y) )
          (once (not (on ?y) ) )
          (once (and (and (agent_holds ?y) (exists (?s - doggie_bed ?z ?e - dodgeball ?x - (either yellow_cube_block wall) ?x ?e ?h - hexagonal_bin) (and (on ?h ?e) (< (distance room_center ?x) (distance desk desk)) ) ) (in_motion blue) (not (in ?y desk) ) (not (agent_holds blue ?y) ) (and (adjacent ?y) (in ?y ?y) ) ) (not (not (and (and (on ?y) (in ?y ?y) ) (agent_holds ?y) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (* (count preference1:blue_cube_block) (count-once-per-objects preference1:yellow:hexagonal_bin) )
  )
)
(:scoring
  (>= (+ 3 1 )
    15
  )
)
)

(define (game game-id-424) (:domain few-objects-room-v1)
(:setup
  (forall (?h - dodgeball)
    (exists (?m - (either cube_block beachball hexagonal_bin chair))
      (and
        (forall (?x - (either wall bridge_block yellow_cube_block))
          (game-conserved
            (not
              (agent_holds ?m ?x)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?d - game_object)
        (then
          (once (in_motion ?d) )
          (once-measure (or (not (touch ?d) ) (in ?d) ) (distance side_table ?d) )
          (once (in_motion ?d) )
        )
      )
    )
    (preference preference2
      (exists (?s - block)
        (then
          (hold (forall (?l - pyramid_block ?b ?x - dodgeball) (in_motion ?s) ) )
          (once (not (adjacent ?s) ) )
        )
      )
    )
  )
)
(:terminal
  (<= (+ (+ (* (total-score) (* (count preference1:hexagonal_bin) (* (count-same-positions preference1:yellow) 30 )
          )
        )
        (* 3 10 )
      )
      2
      9
      15
      10
      (count-once preference1:hexagonal_bin:hexagonal_bin:golfball)
    )
    (count-once preference2:pink)
  )
)
(:scoring
  (total-score)
)
)

(define (game game-id-425) (:domain medium-objects-room-v1)
(:setup
  (forall (?s - hexagonal_bin)
    (not
      (game-optional
        (exists (?e ?f - tall_cylindrical_block ?i - hexagonal_bin ?f - hexagonal_bin ?x - dodgeball)
          (not
            (agent_holds ?s)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d) )
          (hold (not (on ?d) ) )
          (once (not (in_motion ?d) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once preference1) (count-once-per-objects preference1:golfball:green) )
)
(:scoring
  3
)
)

(define (game game-id-426) (:domain medium-objects-room-v1)
(:setup
  (exists (?q - shelf)
    (game-optional
      (agent_holds ?q)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?s - hexagonal_bin)
        (then
          (hold (and (agent_holds ?s) (not (agent_holds ?s) ) ) )
          (hold (agent_holds ?s) )
          (once (not (not (agent_holds bed) ) ) )
        )
      )
    )
    (preference preference2
      (exists (?j - (either pyramid_block cylindrical_block) ?f - dodgeball)
        (then
          (once (in_motion sideways) )
          (once (agent_holds floor ?f) )
          (once (in_motion ?f ?f) )
        )
      )
    )
  )
)
(:terminal
  (>= 6 (count-once preference1:brown) )
)
(:scoring
  6
)
)

(define (game game-id-427) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (and
      (> 2 (distance ?xxx bed))
      (adjacent ?xxx)
      (not
        (same_type ?xxx)
      )
    )
  )
)
(:constraints
  (and
    (forall (?o - hexagonal_bin)
      (and
        (preference preference1
          (exists (?c - cube_block)
            (then
              (once (not (in_motion ?o ?c) ) )
              (once (not (not (not (forall (?k - ball) (agent_holds ?o ?k) ) ) ) ) )
              (once (agent_holds ?c) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?l - hexagonal_bin ?d - block)
        (at-end
          (not
            (agent_holds ?d)
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-shortest preference2:beachball:pink) (* (count preference2:basketball) 2 )
  )
)
(:scoring
  4
)
)

(define (game game-id-428) (:domain few-objects-room-v1)
(:setup
  (exists (?k - chair)
    (and
      (forall (?y - hexagonal_bin)
        (game-optional
          (on ?y)
        )
      )
      (or
        (game-conserved
          (same_color desk)
        )
        (game-conserved
          (agent_holds ?k)
        )
        (game-optional
          (between ?k)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?j - tall_cylindrical_block)
        (then
          (once (not (> 1 (x_position 3 room_center)) ) )
          (hold (equal_z_position ?j ?j) )
          (hold (<= 1 (distance 8 room_center)) )
        )
      )
    )
    (preference preference2
      (exists (?d - dodgeball ?z - block)
        (then
          (once (< 10 1) )
          (hold (in_motion ?z) )
          (once (in_motion ?z ?z) )
        )
      )
    )
    (forall (?x - wall ?k - ball)
      (and
        (preference preference3
          (exists (?d - golfball ?s - hexagonal_bin)
            (then
              (hold (in_motion ?k ?k) )
              (once (agent_holds ?s) )
              (hold (agent_holds ?s) )
              (once (agent_holds ?k bed) )
            )
          )
        )
        (preference preference4
          (exists (?o - pillow ?z - ball)
            (then
              (once (not (not (not (and (not (and (or (and (on ?z) (in_motion ?z) ) (agent_holds left) ) (game_start upright ?k) ) ) (object_orientation ?z) ) ) ) ) )
              (once (in_motion ?z) )
              (hold (in_motion ?k) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (+ 3 1 )
      3
    )
    (>= (* (* 4 (count preference2:yellow_cube_block) )
        (count preference3:beachball:pyramid_block)
      )
      10
    )
  )
)
(:scoring
  4
)
)

(define (game game-id-429) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (and
      (agent_holds ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?t ?y - doggie_bed)
        (at-end
          (in_motion desk)
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 3 4 )
  )
)
(:scoring
  (* (* 3 3 )
    (count preference1:yellow:beachball)
  )
)
)

(define (game game-id-430) (:domain few-objects-room-v1)
(:setup
  (forall (?d - (either yellow_cube_block) ?r - hexagonal_bin)
    (exists (?l - wall)
      (exists (?m - hexagonal_bin)
        (exists (?a - (either key_chain pyramid_block))
          (game-conserved
            (and
              (agent_holds ?a)
              (and
                (in_motion ?a)
                (not
                  (between ?m)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?t - drawer)
      (and
        (preference preference1
          (exists (?n - dodgeball)
            (then
              (hold (in_motion ?n) )
              (once (in_motion ?n) )
              (once (not (in_motion ?t ?t) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> 3 2 )
)
(:scoring
  3
)
)

(define (game game-id-431) (:domain many-objects-room-v1)
(:setup
  (exists (?j - dodgeball)
    (exists (?m - wall)
      (exists (?r - shelf ?p - drawer)
        (and
          (forall (?g - desk_shelf)
            (and
              (exists (?s - beachball)
                (game-optional
                  (agent_holds ?s)
                )
              )
              (forall (?q - ball ?s - ball ?c - dodgeball ?k - (either dodgeball dodgeball))
                (exists (?x - building)
                  (forall (?u - chair)
                    (game-optional
                      (agent_holds ?p ?k)
                    )
                  )
                )
              )
              (game-optional
                (not
                  (in_motion ?g ?m)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?m - hexagonal_bin)
      (and
        (preference preference1
          (exists (?p - (either basketball hexagonal_bin) ?v - curved_wooden_ramp)
            (then
              (once (in ?m) )
              (once (not (exists (?s - (either cd golfball) ?a - dodgeball) (in_motion ?m ?v) ) ) )
              (once (agent_holds ?v agent) )
            )
          )
        )
        (preference preference2
          (exists (?l ?a - (either dodgeball cd))
            (then
              (hold (agent_holds ?m) )
              (once (and (in_motion ?l) (not (not (and (in_motion bed ?a) (and (object_orientation ?l ?a) (not (adjacent bed) ) (and (<= 2 (distance ?a room_center)) (exists (?f - wall) (not (not (not (not (= 8 (distance ?a) (distance 5 ?m)) ) ) ) ) ) ) (>= 3 2) ) ) ) ) ) )
              (once (= 7 1) )
              (once (in_motion ?l ?m) )
            )
          )
        )
        (preference preference3
          (exists (?c - (either ball cube_block) ?k - dodgeball)
            (at-end
              (is_setup_object ?m)
            )
          )
        )
      )
    )
    (preference preference4
      (exists (?c - dodgeball)
        (then
          (once (in_motion door) )
          (once (<= 1 (distance 4 7)) )
        )
      )
    )
    (forall (?c - dodgeball)
      (and
        (preference preference5
          (exists (?g - game_object ?y - (either golfball book))
            (at-end
              (or
                (not
                  (and
                    (agent_holds ?c)
                    (in_motion ?y)
                  )
                )
                (and
                  (agent_holds ?c bed ?c)
                  (and
                    (same_color ?c)
                    (and
                      (not
                        (in desk)
                      )
                      (in_motion rug)
                    )
                  )
                  (same_color ?c door)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-total preference3:dodgeball) (count preference1:pink) )
)
(:scoring
  (count preference1:rug:basketball)
)
)

(define (game game-id-432) (:domain many-objects-room-v1)
(:setup
  (exists (?y - building ?b - (either cd ball chair))
    (game-optional
      (exists (?d ?v ?m ?f ?o ?z - flat_block ?m - hexagonal_bin)
        (and
          (not
            (adjacent ?b)
          )
          (not
            (agent_holds ?m ?b)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?i - ball)
        (then
          (hold (exists (?r - (either blue_cube_block ball alarm_clock teddy_bear)) (in_motion ?r) ) )
          (hold (not (in ?i ?i) ) )
          (hold (forall (?t - hexagonal_bin) (and (not (same_object green_golfball ?t) ) (same_color ?t block) ) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (count-once-per-objects preference1:yellow) (count preference1:pink_dodgeball) )
  )
)
(:scoring
  15
)
)

(define (game game-id-433) (:domain medium-objects-room-v1)
(:setup
  (or
    (game-conserved
      (on ?xxx)
    )
    (exists (?n - hexagonal_bin ?f - game_object)
      (forall (?d - hexagonal_bin)
        (game-optional
          (in_motion ?d ?d)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?r - color)
        (then
          (hold (in bed ?r) )
          (hold (and (in_motion ?r ?r) (agent_holds ?r) ) )
          (hold-while (not (not (not (and (in_motion ?r ?r) (on ?r ?r) ) ) ) ) (and (agent_holds ?r) (in blue ?r ?r ?r) ) )
        )
      )
    )
    (forall (?c - hexagonal_bin)
      (and
        (preference preference2
          (then
            (once (and (and (and (touch ?c) (agent_holds ?c ?c) ) (not (agent_holds ?c ?c) ) ) (not (adjacent ?c) ) ) )
            (once (on ?c) )
            (once (and (on ?c ?c) (not (and (or (agent_holds ?c) (in_motion ?c) ) (not (on ?c desk) ) ) ) ) )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (<= (count-once-per-objects preference1:yellow) (count-once-per-objects preference1:green:beachball) )
      (not
        (>= (count-measure preference1) (count preference2:golfball) )
      )
      (< (+ (* (external-forall-minimize (count preference2:doggie_bed) ) (count preference1:dodgeball) )
          (count preference2:dodgeball)
        )
        2
      )
    )
  )
)
(:scoring
  20
)
)

(define (game game-id-434) (:domain many-objects-room-v1)
(:setup
  (exists (?q - doggie_bed ?n ?u - beachball)
    (game-conserved
      (not
        (> 3 0)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?j - hexagonal_bin ?n - ball)
        (then
          (once (in_motion desk) )
          (once (= (distance ?n agent) 8) )
          (once (adjacent floor bed) )
        )
      )
    )
  )
)
(:terminal
  (>= (= 1 (external-forall-maximize (count-once-per-objects preference1:pink) ) )
    5
  )
)
(:scoring
  (count preference1:purple)
)
)

(define (game game-id-435) (:domain few-objects-room-v1)
(:setup
  (forall (?i ?u - shelf)
    (exists (?p - hexagonal_bin ?d - building)
      (game-conserved
        (agent_holds ?u ?d)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?z - (either desktop cube_block basketball) ?d - building)
        (then
          (hold-while (adjacent desk) (= 1 2) (in_motion ?d) )
          (hold (agent_holds ?d ?d) )
          (once (same_color upright) )
        )
      )
    )
    (forall (?g - (either tall_cylindrical_block pillow) ?g - curved_wooden_ramp ?n - game_object)
      (and
        (preference preference2
          (exists (?v - cube_block ?j - hexagonal_bin)
            (then
              (once (not (exists (?h - dodgeball ?m - hexagonal_bin ?k - hexagonal_bin) (in_motion ?k) ) ) )
              (hold (in_motion ?j ?j) )
              (once (= (distance_side 2 ?n) 0.5 0) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (+ (count preference2:golfball:doggie_bed) 8 )
      (* (<= (count preference2:beachball) 4 )
        (not
          (count preference1:hexagonal_bin:golfball)
        )
      )
    )
    (* 4 (= 6 (count-once-per-objects preference1:dodgeball) )
    )
  )
)
(:scoring
  (count-once-per-external-objects preference2:tan:dodgeball)
)
)

(define (game game-id-436) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (not
      (agent_holds ?xxx ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?y - color)
        (then
          (once (= (distance ?y room_center)) )
          (once (in_motion ?y ?y) )
        )
      )
    )
    (forall (?b - dodgeball ?v - (either dodgeball cylindrical_block))
      (and
        (preference preference2
          (exists (?f - hexagonal_bin ?n - cylindrical_block)
            (at-end
              (in_motion ?n ?n)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (>= 3 10 )
      (>= (* 1 (count preference2:dodgeball) )
        (count-unique-positions preference1:dodgeball)
      )
    )
  )
)
(:scoring
  (* 5 (count-once-per-objects preference1:dodgeball) )
)
)

(define (game game-id-437) (:domain medium-objects-room-v1)
(:setup
  (exists (?a - hexagonal_bin)
    (exists (?u - (either dodgeball book))
      (and
        (game-optional
          (and
            (in_motion ?a ?u ?u)
            (in rug)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?k - hexagonal_bin)
        (at-end
          (in ?k)
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* (count preference1:yellow) 5 )
      3
    )
    (and
      (<= (count-overlapping preference1:beachball) 3 )
      (or
        (>= (* (count preference1:red:beachball) (count-longest preference1:blue_pyramid_block) )
          (+ 180 (count preference1:green) )
        )
        (or
          (>= 5 (count preference1:tall_cylindrical_block) )
          (or
            (or
              (>= (count preference1:pink_dodgeball) (count-measure preference1:dodgeball) )
              (and
                (>= (+ (count preference1:beachball) )
                  (count-once preference1:triangle_block:pink)
                )
                (> (count preference1:book) 3 )
              )
              (> (count-total preference1:pink_dodgeball) 3 )
            )
          )
        )
        (>= 10 (count preference1:tall_cylindrical_block) )
      )
      (>= (not 5 ) 10 )
    )
  )
)
(:scoring
  3
)
)

(define (game game-id-438) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (on ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?i - ball ?s - (either teddy_bear alarm_clock watch))
        (then
          (once (on ?s) )
          (hold (and (= 1 8 1) (adjacent ?s) ) )
          (once (agent_holds ?s ?s) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 10 (* 4 (count-once-per-external-objects preference1:hexagonal_bin) )
    )
    (count preference1:cylindrical_block)
  )
)
(:scoring
  (count preference1:purple)
)
)

(define (game game-id-439) (:domain few-objects-room-v1)
(:setup
  (forall (?z - (either cylindrical_block dodgeball mug book alarm_clock cylindrical_block key_chain) ?g - block)
    (exists (?z - rug)
      (game-conserved
        (on ?z agent)
      )
    )
  )
)
(:constraints
  (and
    (forall (?r - beachball)
      (and
        (preference preference1
          (exists (?n - cube_block)
            (then
              (hold (not (not (and (on ?r ?n) (on ?r) ) ) ) )
              (hold (in ?n) )
              (once (in_motion ?n ?n) )
            )
          )
        )
        (preference preference2
          (exists (?x - block)
            (then
              (once (in ?x ?x) )
              (hold-while (in ?x ?x) (not (not (exists (?o - hexagonal_bin) (and (not (agent_holds bed) ) (= (building_size 10 ?r) (distance room_center room_center)) ) ) ) ) )
              (once (and (adjacent_side desk) ) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?a - building ?k - cube_block)
        (then
          (once (and (agent_holds ?k) (and (and (and (not (agent_holds right ?k) ) (and (in_motion ?k) (in_motion ?k) (adjacent bed ?k) ) ) (in_motion desk) (on pink_dodgeball) ) (in_motion ?k) ) ) )
          (once (forall (?b - doggie_bed ?t - pillow ?y - dodgeball ?p - game_object) (and (forall (?e - chair) (and (not (not (in ?p) ) ) (< (distance 7 room_center) 6) ) ) ) ) )
          (once (agent_holds ?k) )
        )
      )
    )
    (forall (?f - teddy_bear)
      (and
        (preference preference4
          (exists (?t - dodgeball ?i - hexagonal_bin)
            (then
              (hold-while (agent_holds ?f) (not (on ?f) ) )
              (hold (agent_holds ?i) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (<= (+ (* (+ 4 (* (count preference4:red) 3 )
          )
          (count preference4:green:basketball)
        )
        (count preference2:white)
      )
      (+ (external-forall-maximize (count-once-per-objects preference3:dodgeball:yellow:red) ) 4 )
    )
  )
)
(:scoring
  (* (count-increasing-measure preference3:pink:beachball) 1 (total-score) (external-forall-maximize (+ (total-time) 7 )
    )
  )
)
)

(define (game game-id-440) (:domain many-objects-room-v1)
(:setup
  (forall (?z - (either tall_cylindrical_block laptop cylindrical_block))
    (and
      (game-conserved
        (and
          (and
            (in_motion ?z)
            (not
              (object_orientation ?z)
            )
          )
          (in_motion ?z ?z)
          (not
            (not
              (is_setup_object ?z)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?u - red_dodgeball ?c - doggie_bed)
        (then
          (hold (in_motion ?c) )
          (once (> (distance 7 desk) (distance ?c ?c)) )
          (once (agent_holds top_shelf ?c) )
        )
      )
    )
    (preference preference2
      (exists (?t - cube_block)
        (then
          (hold-to-end (adjacent ?t) )
          (once (adjacent ?t) )
        )
      )
    )
    (preference preference3
      (exists (?v - chair ?l - (either chair dodgeball cube_block))
        (then
          (once (and (agent_holds ?l) (agent_holds ?l) (agent_holds ?l) ) )
          (hold (agent_holds ?l ?l) )
          (once (and (and (agent_holds rug) (and (adjacent ?l ?l) (and (agent_holds agent) (on ?l) ) ) ) (object_orientation ?l) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* (not (* (count-once-per-objects preference1:pink_dodgeball) (count-once-per-objects preference2:dodgeball) )
        )
        7
      )
      (* (- 4 )
        (count preference2:pink)
      )
    )
    (>= (count-overlapping preference2:beachball) (- 1 (* 3 (count preference1:alarm_clock) )
      )
    )
  )
)
(:scoring
  2
)
)

(define (game game-id-441) (:domain medium-objects-room-v1)
(:setup
  (exists (?g - hexagonal_bin)
    (game-conserved
      (in ?g ?g)
    )
  )
)
(:constraints
  (and
    (forall (?f - chair)
      (and
        (preference preference1
          (exists (?v - hexagonal_bin ?w - dodgeball)
            (then
              (hold (forall (?l - hexagonal_bin ?g - shelf) (not (not (touch ?f rug) ) ) ) )
              (hold (in ?w ?f) )
              (once (in_motion agent) )
            )
          )
        )
      )
    )
    (preference preference2
      (then
        (once (exists (?g - (either golfball) ?t - hexagonal_bin) (same_color ?t) ) )
        (once (in_motion desk yellow) )
        (once (in desk) )
      )
    )
  )
)
(:terminal
  (>= 5 100 )
)
(:scoring
  (count preference2:pink:doggie_bed)
)
)

(define (game game-id-442) (:domain medium-objects-room-v1)
(:setup
  (exists (?r - (either bridge_block))
    (and
      (exists (?l - pillow ?n - (either pyramid_block dodgeball))
        (game-optional
          (agent_holds ?n ?r)
        )
      )
      (game-conserved
        (object_orientation ?r)
      )
      (not
        (forall (?w - hexagonal_bin)
          (game-conserved
            (and
              (touch ?w ?w)
              (and
                (and
                  (or
                    (and
                      (not
                        (in_motion top_shelf)
                      )
                      (and
                        (same_object ?w ?w)
                        (agent_holds ?w)
                        (not
                          (or
                            (in_motion rug ?r)
                            (and
                              (agent_holds ?r ?w)
                              (and
                                (agent_holds ?r ?w)
                                (is_setup_object floor)
                              )
                            )
                          )
                        )
                      )
                    )
                    (agent_holds ?w ?w)
                  )
                  (forall (?s - golfball)
                    (not
                      (not
                        (in_motion ?s)
                      )
                    )
                  )
                )
                (on agent ?w)
                (not
                  (agent_holds ?w)
                )
              )
              (and
                (and
                  (touch ?r ?r)
                  (exists (?f - ball)
                    (on ?w)
                  )
                  (in_motion floor)
                )
                (not
                  (not
                    (in_motion desktop ?w)
                  )
                )
                (on ?r ?w)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?c - beachball ?v - ball)
        (then
          (hold-for 10 (and (in_motion ?v) (not (agent_holds ?v) ) ) )
          (hold (not (in_motion brown) ) )
          (hold (not (> (distance ?v 1 room_center) 1) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (< 3 10 )
    )
    (not
      (>= (count preference1:yellow) (count-measure preference1:hexagonal_bin) )
    )
    (and
      (>= (* (* (or (count preference1:red:golfball) ) 5 )
          (count preference1:dodgeball)
        )
        (* (count preference1:yellow) (count preference1:yellow) )
      )
      (= 2 (+ (* (/ (count-once-per-objects preference1) (count preference1:pink:blue_dodgeball) ) 20 (* (count preference1:book) (count-once-per-objects preference1:pink) (count-once-per-external-objects preference1:dodgeball) )
            (count-once preference1:yellow)
            (- 8 )
            4
          )
          (* (count-once preference1:purple:hexagonal_bin) (count preference1:yellow) 2 10 (* (+ 5 (* (count preference1:dodgeball) 5 )
              )
              (/
                2
                5
              )
            )
            (+ 3 (count preference1:yellow) )
          )
        )
      )
    )
  )
)
(:scoring
  2
)
)

(define (game game-id-443) (:domain few-objects-room-v1)
(:setup
  (and
    (game-optional
      (exists (?s - hexagonal_bin ?c - shelf ?q - hexagonal_bin)
        (on ?q)
      )
    )
    (and
      (and
        (exists (?f - (either top_drawer dodgeball) ?i - game_object)
          (exists (?h - doggie_bed)
            (game-conserved
              (in_motion ?h)
            )
          )
        )
      )
    )
    (and
      (game-optional
        (on door)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?h - game_object)
        (then
          (once (< 1 (distance door ?h)) )
          (hold (not (exists (?c - triangular_ramp) (agent_holds ?c ?h) ) ) )
          (once (agent_holds ?h) )
        )
      )
    )
  )
)
(:terminal
  (or
    (<= (* (count preference1:green:basketball) (count-total preference1:wall:doggie_bed) )
      (external-forall-maximize
        3
      )
    )
    (or
      (or
        (> (count-once-per-objects preference1:dodgeball) 15 )
        (not
          (and
            (>= (* (count-once-per-external-objects preference1:cube_block) (count preference1:beachball) )
              (- 0.7 )
            )
            (= (count preference1:pink) (count preference1:beachball) )
          )
        )
        (or
          (and
            (or
              (and
                (>= (= 4 (count preference1:beachball) )
                  (count preference1:purple:basketball)
                )
              )
              (>= 2 (count-once-per-objects preference1:golfball) )
            )
          )
          (< (count-longest preference1:blue) (count-once-per-objects preference1:beachball) )
        )
      )
    )
    (>= 100 15 )
  )
)
(:scoring
  (* (* 3 (* (not 3 ) (count preference1:golfball) )
    )
  )
)
)

(define (game game-id-444) (:domain few-objects-room-v1)
(:setup
  (or
    (forall (?m - shelf)
      (game-conserved
        (exists (?y - shelf)
          (and
            (not
              (in_motion agent ?m)
            )
            (agent_holds ?y)
            (agent_holds ?y)
            (not
              (on ?m ?y)
            )
          )
        )
      )
    )
    (exists (?r - teddy_bear ?t - building)
      (exists (?q - ball ?p - block)
        (game-optional
          (not
            (adjacent ?p)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?j - hexagonal_bin)
        (then
          (hold (adjacent top_drawer) )
          (hold (agent_holds ?j ?j) )
          (once (not (adjacent agent agent) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (not
      (not
        (> 2 (* (* (count-once-per-objects preference1:pink) (count preference1:basketball) (* (count preference1:top_drawer) (count preference1:pink) )
            )
            (count-once-per-external-objects preference1:blue_dodgeball)
          )
        )
      )
    )
    (<= 5 3 )
    (or
      (< (count-once-per-objects preference1:basketball) (count-once-per-external-objects preference1:red) )
    )
  )
)
(:scoring
  1
)
)

(define (game game-id-445) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?o - cube_block ?m - block)
      (exists (?n - ball)
        (or
          (game-conserved
            (and
              (agent_holds agent ?m)
              (agent_holds ?m ?n)
            )
          )
          (exists (?j ?x - shelf)
            (game-conserved
              (and
                (object_orientation ?m)
                (not
                  (on ?n ?n)
                )
              )
            )
          )
        )
      )
    )
    (and
      (exists (?h - (either golfball triangle_block))
        (game-conserved
          (above ?h ?h)
        )
      )
      (game-optional
        (touch ?xxx west_wall)
      )
    )
  )
)
(:constraints
  (and
    (forall (?j - hexagonal_bin)
      (and
        (preference preference1
          (exists (?r - dodgeball)
            (then
              (once (and (not (rug_color_under top_drawer) ) (in_motion ?j agent) ) )
              (once (on ?j) )
              (once (in_motion desk) )
            )
          )
        )
        (preference preference2
          (exists (?s - (either block dodgeball) ?h ?i ?s ?b ?r ?a ?n ?w ?o ?t - game_object)
            (at-end
              (not
                (agent_holds ?s ?j)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (= (* (count-once-per-external-objects preference2:dodgeball:basketball) (external-forall-maximize (total-score) ) )
    (- (+ 2 2 )
    )
  )
)
(:scoring
  (+ 4 (count-once-per-external-objects preference2:basketball) )
)
)

(define (game game-id-446) (:domain few-objects-room-v1)
(:setup
  (and
    (game-conserved
      (on ?xxx ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?m - beachball ?t - drawer)
        (then
          (hold (on ?t ?t) )
          (once (agent_holds ?t) )
          (hold (in desk) )
        )
      )
    )
    (forall (?x - pyramid_block ?y - (either triangle_block cube_block))
      (and
        (preference preference2
          (exists (?z - hexagonal_bin ?l - (either hexagonal_bin laptop tall_cylindrical_block doggie_bed))
            (then
              (once (same_color ?l ?y) )
              (hold (and (not (agent_holds ?y ?y) ) (not (on ?y) ) ) )
              (hold (touch agent) )
            )
          )
        )
      )
    )
    (forall (?x - (either main_light_switch key_chain) ?o - beachball)
      (and
        (preference preference3
          (exists (?b - drawer)
            (then
              (once (agent_holds ?b ?o) )
              (hold (agent_holds ?o) )
              (once (agent_holds bed) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> 3 2 )
)
(:scoring
  40
)
)

(define (game game-id-447) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (agent_holds ?xxx ?xxx)
  )
)
(:constraints
  (and
    (forall (?t - wall)
      (and
        (preference preference1
          (exists (?r - dodgeball)
            (then
              (once (in agent) )
              (hold (and (on ?t) (object_orientation ?t) ) )
              (hold (adjacent_side ?t) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:doggie_bed) 10 )
)
(:scoring
  (* (- (external-forall-maximize (count preference1:cube_block) ) )
    3
  )
)
)

(define (game game-id-448) (:domain medium-objects-room-v1)
(:setup
  (forall (?c ?w - ball)
    (forall (?e - dodgeball ?p - pyramid_block)
      (exists (?g - pillow)
        (not
          (exists (?h - hexagonal_bin)
            (game-optional
              (and
                (not
                  (not
                    (agent_holds ?w)
                  )
                )
                (in_motion agent)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?d - triangular_ramp ?f - hexagonal_bin)
        (at-end
          (adjacent ?f)
        )
      )
    )
  )
)
(:terminal
  (>= (+ (count preference1:blue_dodgeball:pink) )
    (count preference1:hexagonal_bin:yellow)
  )
)
(:scoring
  (count-same-positions preference1:basketball)
)
)

(define (game game-id-449) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?q - block)
      (game-conserved
        (agent_holds ?q ?q)
      )
    )
  )
)
(:constraints
  (and
    (forall (?c - building ?p - blue_cube_block ?y - hexagonal_bin)
      (and
        (preference preference1
          (exists (?z - teddy_bear)
            (then
              (once (adjacent ?y) )
              (hold (< (distance ?z) (distance ?z ?y)) )
              (forall-sequence (?e - building ?t - hexagonal_bin ?l - (either golfball cube_block golfball))
                (then
                  (hold (in_motion ?l) )
                  (once (and (not (object_orientation ?y) ) (adjacent desk ?l) (< 6 (distance 4 ?y)) (agent_holds ?z) ) )
                  (hold (between ?z) )
                )
              )
            )
          )
        )
      )
    )
    (forall (?f ?a ?e - dodgeball)
      (and
        (preference preference2
          (exists (?g - shelf)
            (then
              (once (and (in_motion ?e ?f) (and (on agent) (in ?a ?g) ) ) )
              (once (exists (?h ?s ?o ?r ?b - pyramid_block) (and (in desk ?r) (in_motion ?s ?a) ) ) )
              (hold (on ?g ?f) )
            )
          )
        )
        (preference preference3
          (exists (?r - game_object)
            (then
              (once (not (and (< 1 (distance agent desk room_center)) (agent_holds ?a ?r) ) ) )
              (once (not (in_motion ?a) ) )
              (any)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> 3 5 )
)
(:scoring
  (+ 1 5 )
)
)

(define (game game-id-450) (:domain medium-objects-room-v1)
(:setup
  (not
    (and
      (exists (?c - cube_block)
        (exists (?q - hexagonal_bin)
          (game-optional
            (in ?q)
          )
        )
      )
      (and
        (game-conserved
          (on ?xxx door)
        )
        (exists (?a ?b - hexagonal_bin)
          (exists (?g - hexagonal_bin)
            (exists (?y - doggie_bed)
              (exists (?k - hexagonal_bin ?j - red_dodgeball)
                (game-optional
                  (not
                    (and
                      (and
                        (on ?a ?a)
                        (in_motion bed upright)
                      )
                      (on ?b)
                    )
                  )
                )
              )
            )
          )
        )
        (game-conserved
          (and
            (and
              (in ?xxx agent)
              (not
                (touch agent)
              )
            )
            (in ?xxx ?xxx)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?g - dodgeball)
        (then
          (once (not (in ?g ?g) ) )
          (once (in_motion ?g) )
          (once (same_type ?g ?g) )
        )
      )
    )
    (preference preference2
      (exists (?j - dodgeball)
        (then
          (hold (in_motion ?j) )
          (once (in_motion ?j) )
          (once (not (adjacent ?j ?j) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 20 (* (count-once-per-objects preference2:beachball:pyramid_block) (total-time) )
  )
)
(:scoring
  (+ (+ (count-once-per-objects preference1:red) 30 )
    1
  )
)
)

(define (game game-id-451) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (on ?xxx)
  )
)
(:constraints
  (and
    (forall (?h ?r - (either cd golfball doggie_bed))
      (and
        (preference preference1
          (then
            (hold (agent_holds ?r) )
            (once (and (on ?r) (same_color ?r) ) )
            (hold (same_color desk ?h) )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:basketball:beachball) 2 )
)
(:scoring
  (* 10 (= 2 (count preference1:dodgeball) )
  )
)
)

(define (game game-id-452) (:domain few-objects-room-v1)
(:setup
  (exists (?a - dodgeball)
    (forall (?u - hexagonal_bin)
      (and
        (exists (?v - dodgeball)
          (game-conserved
            (same_color rug)
          )
        )
        (game-conserved
          (>= (distance_side 2 desk) (distance ?u ?a))
        )
        (exists (?t - hexagonal_bin ?w - hexagonal_bin)
          (and
            (and
              (and
                (exists (?i - doggie_bed ?r - dodgeball)
                  (game-optional
                    (in_motion ?a ?a)
                  )
                )
              )
              (game-optional
                (in_motion ?a)
              )
              (exists (?y - hexagonal_bin)
                (forall (?e - hexagonal_bin)
                  (game-conserved
                    (on ?e ?u)
                  )
                )
              )
            )
            (exists (?y - cylindrical_block ?n ?x - shelf ?v - game_object)
              (and
                (exists (?b - doggie_bed ?b - sliding_door)
                  (game-optional
                    (same_type ?a ?a ?u)
                  )
                )
              )
            )
            (and
              (game-optional
                (and
                  (and
                    (touch ?a)
                    (and
                      (not
                        (in_motion ?w)
                      )
                      (agent_holds ?u)
                    )
                  )
                  (in_motion rug)
                )
              )
            )
            (game-conserved
              (adjacent bridge_block ?u)
            )
            (game-conserved
              (agent_holds ?w ?a ?a)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?p - (either triangle_block pyramid_block mug) ?a - cube_block)
        (then
          (once (< 5 5) )
          (hold-while (and (agent_holds ?a) (in_motion ?a ?a) (and (not (not (on ?a) ) ) (same_color ?a) ) ) (agent_holds ?a) )
        )
      )
    )
  )
)
(:terminal
  (or
    (= (count-once preference1:beachball) (count preference1:red) )
    (= (count preference1:purple) 5 )
  )
)
(:scoring
  (total-score)
)
)

(define (game game-id-453) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (and
      (and
        (in_motion ?xxx ?xxx)
        (and
          (in_motion ?xxx)
          (not
            (not
              (and
                (in bed)
                (not
                  (and
                    (not
                      (not
                        (in_motion ?xxx ?xxx)
                      )
                    )
                    (and
                      (and
                        (in ?xxx ?xxx)
                        (agent_holds ?xxx ?xxx)
                      )
                      (adjacent ?xxx)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?i - drawer)
      (and
        (preference preference1
          (exists (?b - dodgeball ?h - (either dodgeball ball cube_block dodgeball dodgeball pillow teddy_bear))
            (then
              (hold (not (and (adjacent ?h) (not (agent_holds ?i) ) ) ) )
              (hold-while (and (not (agent_holds ?i ?i) ) (in_motion bed floor) ) (agent_holds ?h) )
              (once (on floor ?i) )
            )
          )
        )
        (preference preference2
          (exists (?g - bridge_block ?w - block)
            (then
              (hold (in_motion bed) )
              (once (exists (?z - chair) (in_motion ?w) ) )
              (hold-to-end (not (and (or (agent_holds ?i door ?i) ) (not (in_motion ?w) ) ) ) )
            )
          )
        )
        (preference preference3
          (exists (?n - cube_block)
            (at-end
              (not
                (agent_holds ?n ?i)
              )
            )
          )
        )
      )
    )
    (preference preference4
      (at-end
        (in ?xxx)
      )
    )
    (forall (?i - (either yellow_cube_block golfball desktop))
      (and
        (preference preference5
          (exists (?a - hexagonal_bin)
            (at-end
              (agent_holds ?a ?a)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (count-once preference2:doggie_bed) )
)
(:scoring
  (count preference4:purple)
)
)

(define (game game-id-454) (:domain many-objects-room-v1)
(:setup
  (and
    (game-optional
      (and
        (on ?xxx agent)
        (same_color ?xxx)
        (on ?xxx ?xxx)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?r - game_object)
        (at-end
          (not
            (in_motion ?r ?r)
          )
        )
      )
    )
    (preference preference2
      (exists (?f - hexagonal_bin)
        (then
          (hold (and (in_motion ?f) (on desk) ) )
          (forall-sequence (?i - flat_block)
            (then
              (hold (and (and (and (in_motion ?f) (forall (?s - hexagonal_bin ?j - (either main_light_switch flat_block cd)) (and (in ?j) (not (on ?f) ) ) ) (and (exists (?x - chair) (touch ?x ?i) ) (not (adjacent_side ?f) ) (agent_holds ?f ?i) ) ) (and (in ?f) (exists (?v - game_object) (and (agent_holds ?v ?i) (faces ?v ?f) ) ) ) ) (agent_holds ?i) ) )
              (hold (not (in_motion ?i) ) )
              (hold-while (not (agent_holds ?f) ) (in ?i) )
            )
          )
          (once (or (touch ?f) (agent_holds ?f) ) )
        )
      )
    )
    (forall (?z ?g - curved_wooden_ramp)
      (and
        (preference preference3
          (exists (?j - (either cellphone desktop) ?w - hexagonal_bin)
            (then
              (hold-while (and (agent_holds ?g) (adjacent ?w) (adjacent ?z pink) ) (agent_holds ?g ?z) )
              (hold-to-end (not (opposite agent) ) )
              (once (not (in ?z ?g) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference2:basketball) (count preference3:yellow_cube_block:golfball) )
)
(:scoring
  10
)
)

(define (game game-id-455) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (exists (?q - (either ball wall ball mug))
      (object_orientation ?q ?q)
    )
  )
)
(:constraints
  (and
    (forall (?w - (either teddy_bear cellphone alarm_clock))
      (and
        (preference preference1
          (exists (?b - (either pyramid_block pen desktop))
            (then
              (once (and (agent_holds ?b) (on ?b) ) )
              (once (agent_holds ?b ?w) )
              (once (or (agent_holds ?w) ) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?e - hexagonal_bin)
        (then
          (once (not (not (not (agent_holds agent front) ) ) ) )
          (hold-while (in_motion ?e) (agent_holds ?e pink_dodgeball) )
          (hold (and (not (not (on ?e ?e) ) ) (not (exists (?p - doggie_bed) (in_motion ?e) ) ) ) )
          (once (not (and (agent_holds ?e) (< 1 2) ) ) )
        )
      )
    )
    (preference preference3
      (exists (?f - hexagonal_bin)
        (at-end
          (open rug bed)
        )
      )
    )
  )
)
(:terminal
  (< (count preference2:dodgeball:book) 5 )
)
(:scoring
  (total-score)
)
)

(define (game game-id-456) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds ?xxx ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?b - (either alarm_clock laptop))
        (then
          (once (same_color rug ?b) )
          (once (and (not (agent_holds ?b east_sliding_door) ) (and (not (in ?b) ) (agent_holds agent) ) ) )
          (hold-while (in_motion ?b) (and (on ?b ?b) (in ?b bed) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once preference1:dodgeball:purple) (count-once-per-objects preference1:doggie_bed) )
)
(:scoring
  (< (count-once-per-objects preference1:red) (count-once-per-objects preference1:golfball:beachball:yellow) )
)
)

(define (game game-id-457) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (not
      (on agent ?xxx)
    )
  )
)
(:constraints
  (and
    (forall (?c - ball)
      (and
        (preference preference1
          (exists (?s - dodgeball)
            (at-end
              (in_motion ?s ?s)
            )
          )
        )
        (preference preference2
          (exists (?r - game_object ?b - building)
            (then
              (once (agent_holds agent) )
              (once (in_motion ?c) )
              (once (not (on ?c) ) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?y - hexagonal_bin)
        (then
          (once (and (not (in ?y) ) (not (and (in_motion ?y) (and (and (agent_holds ) (agent_holds ?y) (agent_holds ?y) (adjacent ) ) (in_motion ?y) (>= 1 2) ) ) ) ) )
          (once (in_motion ?y ?y) )
          (hold (exists (?t - block) (not (and (and (and (above ?y) (not (not (and (not (on ?t) ) (in_motion ?y) (touch ?y ?t) ) ) ) ) (on ?t ?y) (not (adjacent ?y floor) ) (and (and (in_motion ?t ?t) (same_color ?t) ) (in ?y ?y) ) ) (agent_holds ?y) (not (in_motion ?y ?t) ) (< 1 0.5) ) ) ) )
        )
      )
    )
    (preference preference4
      (exists (?j - triangular_ramp)
        (then
          (hold (and (agent_holds rug) (or (and (agent_holds ?j) (not (in ?j) ) ) (agent_holds ?j) ) ) )
          (hold (in ?j ?j) )
          (hold (in_motion ?j) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 2 (count preference1:pink:dodgeball) )
    (count-once-per-objects preference2:dodgeball)
  )
)
(:scoring
  5
)
)

(define (game game-id-458) (:domain medium-objects-room-v1)
(:setup
  (forall (?q - ball)
    (and
      (exists (?z - (either cylindrical_block rug alarm_clock))
        (exists (?r ?l - cube_block ?p - cube_block ?s - golfball ?t - building)
          (game-optional
            (and
              (exists (?w - ball)
                (in ?z)
              )
              (and
                (not
                  (agent_holds ?t)
                )
                (or
                  (object_orientation ?q ?q)
                  (in_motion ?z)
                )
              )
            )
          )
        )
      )
      (exists (?b - desktop ?g - curved_wooden_ramp)
        (exists (?n ?c - ball)
          (and
            (exists (?r - (either golfball dodgeball))
              (game-conserved
                (agent_holds desk)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c - curved_wooden_ramp ?f - (either flat_block blue_cube_block key_chain main_light_switch))
      (and
        (preference preference1
          (exists (?q - pyramid_block)
            (then
              (once (not (agent_holds ?q) ) )
              (hold (in ?f ?f) )
              (hold (and (same_type ?f ?q) (<= (distance ?f desk) 2) ) )
            )
          )
        )
      )
    )
    (preference preference2
      (then
        (hold-while (in_motion ?xxx) (agent_holds ?xxx) (in_motion ?xxx) )
        (once (and (not (in_motion ?xxx) ) (not (in_motion ?xxx ?xxx) ) (not (broken ?xxx south_west_corner) ) ) )
        (forall-sequence (?c - block ?s - cylindrical_block)
          (then
            (hold (and (in ?s) (not (on ?s) ) (not (not (not (in_motion ?s ?s) ) ) ) ) )
            (once (in agent) )
            (once (not (in_motion ?s ?s ?s) ) )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 8 (* (+ (+ (count preference2:dodgeball:white) 2 )
        (count-once-per-objects preference2:beachball)
      )
      (* (external-forall-minimize (- (* (count-increasing-measure preference1:pink) (+ (count preference2:pink) (count preference2:dodgeball) )
              (* 18 (count-once preference2:green:doggie_bed:basketball) )
            )
          )
        )
        (- 30 )
      )
    )
  )
)
(:scoring
  (count preference2:hexagonal_bin)
)
)

(define (game game-id-459) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?j ?q - hexagonal_bin)
      (game-conserved
        (in_motion ?j rug)
      )
    )
    (game-optional
      (not
        (and
          (exists (?t - building ?z - hexagonal_bin ?u - wall)
            (agent_holds ?u)
          )
          (and
            (object_orientation ?xxx ?xxx)
            (not
              (not
                (not
                  (= (distance agent room_center) 5)
                )
              )
            )
            (adjacent ?xxx)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?f - hexagonal_bin)
        (at-end
          (adjacent rug)
        )
      )
    )
    (preference preference2
      (exists (?u - doggie_bed)
        (then
          (once (not (in rug) ) )
          (once (and (forall (?e - dodgeball) (agent_holds bed ?u) ) (exists (?x - bridge_block) (agent_holds ?x) ) ) )
          (once (agent_holds ?u blue) )
        )
      )
    )
  )
)
(:terminal
  (= 10 (* (count-once-per-objects preference1:cylindrical_block) (count preference2:doggie_bed:cylindrical_block) )
  )
)
(:scoring
  (count preference1:green)
)
)

(define (game game-id-460) (:domain many-objects-room-v1)
(:setup
  (exists (?b - dodgeball)
    (and
      (and
        (and
          (exists (?a - cube_block)
            (exists (?t - dodgeball ?x - ball)
              (game-conserved
                (in_motion ?b agent)
              )
            )
          )
          (exists (?d - hexagonal_bin)
            (exists (?f - game_object)
              (and
                (and
                  (exists (?j - block ?c - cube_block)
                    (game-conserved
                      (= 9 1)
                    )
                  )
                )
              )
            )
          )
          (and
            (game-optional
              (and
                (not
                  (object_orientation ?b ?b)
                )
                (in ?b ?b)
              )
            )
            (and
              (exists (?t - curved_wooden_ramp)
                (and
                  (exists (?p - flat_block)
                    (or
                      (game-optional
                        (and
                          (not
                            (adjacent ?p)
                          )
                          (agent_holds bridge_block)
                        )
                      )
                      (game-conserved
                        (agent_holds ?b)
                      )
                      (and
                        (forall (?v ?z - yellow_pyramid_block)
                          (game-conserved
                            (between ?b)
                          )
                        )
                      )
                    )
                  )
                )
              )
              (exists (?r - hexagonal_bin)
                (exists (?y - (either hexagonal_bin yellow))
                  (exists (?w - color)
                    (game-optional
                      (in_motion ?y)
                    )
                  )
                )
              )
              (and
                (game-conserved
                  (in ?b ?b)
                )
                (forall (?s - (either golfball laptop) ?x - desk_shelf)
                  (and
                    (game-conserved
                      (same_color ?x ?x)
                    )
                    (forall (?q - color ?a - ball)
                      (game-conserved
                        (not
                          (agent_holds ?a)
                        )
                      )
                    )
                  )
                )
                (exists (?u - hexagonal_bin)
                  (game-conserved
                    (in ?u)
                  )
                )
              )
            )
            (game-conserved
              (is_setup_object ?b)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?j - (either golfball yellow_cube_block))
      (and
        (preference preference1
          (exists (?w - cube_block ?g - hexagonal_bin)
            (then
              (once (not (in_motion ?g) ) )
              (once (and (toggled_on ?g) (in ?j) ) )
              (hold (equal_z_position ?j) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= 10 (* (* (count preference1:dodgeball) (count preference1:alarm_clock) )
          2
          (count preference1:dodgeball)
        )
      )
    )
    (> (* (count-once-per-objects preference1:doggie_bed) (* (+ 6 (+ (count preference1:pink:alarm_clock) 20 )
          )
          5
        )
        (total-score)
        (count-same-positions preference1:dodgeball)
        (count preference1:hexagonal_bin)
        (+ (count preference1:dodgeball:beachball) 50 )
        10
        (* (count preference1:beachball) (count preference1:green) )
        (count-once-per-objects preference1:pink)
      )
      3
    )
  )
)
(:scoring
  (count preference1:cylindrical_block)
)
)

(define (game game-id-461) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (agent_holds ?xxx)
  )
)
(:constraints
  (and
    (forall (?k - block)
      (and
        (preference preference1
          (exists (?n - hexagonal_bin)
            (then
              (once (and (adjacent ?k) (not (and (on ?k ?n) (agent_holds ?n ?k) ) ) (and (forall (?i - dodgeball) (and (not (and (not (and (and (not (and (exists (?h ?g - triangular_ramp) (agent_holds ?h ?h) ) (exists (?y - (either golfball hexagonal_bin)) (not (agent_holds ?y agent) ) ) ) ) (exists (?h - curved_wooden_ramp) (agent_holds ?k) ) (in_motion ?k) ) (agent_holds ?k) (forall (?m - triangular_ramp ?x - game_object) (between ?n) ) ) ) (in_motion ?i bed) ) ) (not (in_motion rug ?k) ) ) ) (agent_holds ?k ?n) ) ) )
              (once (and (adjacent agent ?n) (same_type ?n ?k) ) )
              (once (in_motion ?n) )
            )
          )
        )
        (preference preference2
          (exists (?o - cube_block)
            (then
              (once (not (agent_holds ?o ?k) ) )
              (once (in ?k) )
              (once (and (not (forall (?j - doggie_bed ?u - building ?b - (either alarm_clock triangle_block)) (not (and (object_orientation ?b) (agent_holds ?o ?b) ) ) ) ) (adjacent_side ?o ?k) (not (or (in_motion ?k) (in_motion desk upright) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count preference1:dodgeball) (- 4 )
    )
    3
  )
)
(:scoring
  (+ 2 )
)
)

(define (game game-id-462) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?v - doggie_bed ?t - dodgeball)
      (forall (?f ?c ?q ?u ?h ?p - building ?q - hexagonal_bin)
        (forall (?z - ball)
          (game-conserved
            (in_motion floor)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?r - pillow ?j - drawer)
        (then
          (hold (in_motion ?j) )
          (once (in_motion ?j ?j) )
          (hold (exists (?v - dodgeball ?v - hexagonal_bin) (not (and (in ?v) (in_motion ?j) ) ) ) )
        )
      )
    )
    (preference preference2
      (exists (?r - dodgeball)
        (then
          (once (and (< (distance ?r ?r) (distance 3 agent)) (in_motion rug ?r ?r) ) )
          (once (agent_holds front) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference2:dodgeball) (count preference2:beachball) )
)
(:scoring
  (* (count preference1:blue_dodgeball:dodgeball) (* (* (count preference2:cube_block) 12 )
      (count preference1:pink)
    )
    (count preference1:dodgeball)
    (total-time)
  )
)
)

(define (game game-id-463) (:domain many-objects-room-v1)
(:setup
  (or
    (game-optional
      (agent_holds ?xxx ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?w - chair ?l - (either dodgeball dodgeball))
        (then
          (once (adjacent ?l ?l) )
          (hold-while (in_motion ?l) (not (in ?l ?l) ) )
          (once (and (and (in_motion ?l ?l) (not (on bed ?l) ) ) (agent_holds ?l) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once preference1:beachball) (+ (* (external-forall-maximize 6 ) 7 (count preference1:dodgeball) )
      (* (count preference1:orange:beachball) (* (external-forall-maximize (count-once-per-objects preference1:hexagonal_bin:yellow) ) (+ (count-once-per-objects preference1:basketball) (count-once-per-objects preference1:golfball) )
        )
      )
      (count preference1:golfball)
    )
  )
)
(:scoring
  (* (count-overlapping preference1:hexagonal_bin) (count-longest preference1:blue_dodgeball) )
)
)

(define (game game-id-464) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds pink_dodgeball)
  )
)
(:constraints
  (and
    (forall (?q - (either yellow_cube_block yellow_cube_block pink))
      (and
        (preference preference1
          (then
            (once (on ?q ?q) )
            (once (on ?q) )
            (hold (in ?q) )
          )
        )
      )
    )
    (preference preference2
      (at-end
        (on ?xxx ?xxx)
      )
    )
  )
)
(:terminal
  (>= 2 (count-total preference2:pink_dodgeball) )
)
(:scoring
  (count preference2:pink)
)
)

(define (game game-id-465) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?i - (either dodgeball hexagonal_bin))
      (game-conserved
        (in_motion ?i)
      )
    )
    (exists (?c - wall ?k - rug)
      (game-conserved
        (on ?k)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?x ?v - curved_wooden_ramp)
        (then
          (once (not (in_motion desk) ) )
          (hold-while (and (in_motion ?v ?x) (and (and (on ?v ?x) ) (and (and (not (not (in_motion ?v) ) ) (exists (?p - pyramid_block) (not (not (in_motion ?x) ) ) ) ) (on ?v) ) ) ) (< (distance ?x) (distance ?v ?v)) )
          (once (and (not (adjacent blue ?x) ) (and (agent_holds ?v ?v) (agent_holds ?x) ) ) )
          (hold (in_motion ?v) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-shortest preference1:pink:pink_dodgeball) (- 10 )
  )
)
(:scoring
  (* (count preference1:dodgeball) 1 )
)
)

(define (game game-id-466) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (and
      (on ?xxx ?xxx)
      (in_motion ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?d - dodgeball ?a - game_object ?u - (either lamp alarm_clock yellow_cube_block laptop))
        (then
          (once (exists (?d - ball ?m - wall) (agent_holds ?m) ) )
        )
      )
    )
    (preference preference2
      (exists (?m - (either cd pink) ?f - dodgeball ?f - (either key_chain doggie_bed teddy_bear))
        (then
          (once (in_motion ?f ?f) )
          (once (in_motion ?f) )
        )
      )
    )
  )
)
(:terminal
  (>= 20 (count preference2:basketball) )
)
(:scoring
  (count-once-per-objects preference1:basketball)
)
)

(define (game game-id-467) (:domain many-objects-room-v1)
(:setup
  (exists (?x - building ?q - building)
    (exists (?j - (either main_light_switch wall) ?u ?n - dodgeball ?t - (either bed cylindrical_block))
      (or
        (forall (?y - dodgeball)
          (game-conserved
            (agent_holds ?q)
          )
        )
        (forall (?p - ball ?l - shelf)
          (forall (?x - hexagonal_bin)
            (and
              (forall (?h - dodgeball)
                (forall (?j - game_object)
                  (game-conserved
                    (not
                      (not
                        (and
                          (not
                            (or
                              (in_motion ?j ?h)
                              (not
                                (not
                                  (not
                                    (in_motion ?t back)
                                  )
                                )
                              )
                            )
                          )
                          (and
                            (in_motion ?t)
                            (in_motion ?l)
                            (not
                              (not
                                (and
                                  (in_motion ?x)
                                  (agent_holds ?x ?h)
                                )
                              )
                            )
                            (in_motion rug)
                          )
                          (and
                            (on ?l)
                            (and
                              (and
                                (in_motion ?l ?h)
                                (same_object ?x pink)
                              )
                              (agent_holds ?h)
                            )
                            (in_motion ?j)
                          )
                        )
                      )
                    )
                  )
                )
              )
              (and
                (exists (?a - beachball)
                  (exists (?o - (either dodgeball alarm_clock) ?r - hexagonal_bin)
                    (game-optional
                      (and
                        (on rug ?l)
                        (adjacent ?r)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?l - golfball ?d - game_object ?r - desk_shelf ?e - hexagonal_bin)
        (then
          (once (and (agent_holds ?e ?e) (and (rug_color_under ?e) (agent_holds ?e) ) (not (object_orientation ?e) ) ) )
          (hold (on floor) )
          (hold-while (and (not (and (and (in_motion ?e) ) (< (x_position 9 ?e) 8) ) ) (not (exists (?p - ball) (in ?e desk) ) ) ) (in_motion agent) (adjacent ?e) )
        )
      )
    )
    (preference preference2
      (exists (?i - teddy_bear)
        (then
          (once (not (or (and (not (agent_holds ?i) ) (in ?i) (in_motion bed) ) (not (on ?i ?i) ) ) ) )
          (once (> (distance door room_center) (distance 7 ?i)) )
          (once (not (> 1 (distance front_left_corner ?i room_center)) ) )
        )
      )
    )
    (preference preference3
      (exists (?p - (either alarm_clock cellphone) ?i - hexagonal_bin ?h - tan_cube_block)
        (then
          (once (or (same_type agent ?h) (and (and (in_motion ?h ?h) (< (distance ?h ?h) (distance ?h ?h)) (< (distance ?h ?h) (distance 1 ?h)) (on ?h ?h) (in_motion ?h ?h) (not (in_motion ?h) ) (not (same_object ?h) ) (not (agent_holds ?h) ) ) (agent_holds ?h) ) (agent_holds pink_dodgeball ?h) ) )
          (once (same_object ?h ?h) )
          (hold (adjacent ?h) )
        )
      )
    )
    (preference preference4
      (exists (?f - game_object ?v ?r - (either dodgeball))
        (then
          (hold (and (on ?r) (and (adjacent ?v bed) (not (or (agent_holds ?r) (and (and (and (equal_z_position ?v south_west_corner) (and (in_motion agent ?v) (adjacent_side ?v) ) ) (in_motion ?v ?v) ) (in_motion ?v ?v) (in ?v ?r) (agent_holds bed pink) ) ) ) ) ) )
          (hold (agent_holds ?v) )
          (hold (not (or (not (in_motion desk ?v) ) (on ?v) ) ) )
        )
      )
    )
    (preference preference5
      (exists (?a - hexagonal_bin)
        (then
          (once (on ?a bed) )
          (once (same_color ?a) )
          (hold-for 0 (touch ?a) )
        )
      )
    )
    (forall (?j - (either alarm_clock doggie_bed mug))
      (and
        (preference preference6
          (then
            (once-measure (agent_holds ?j) (distance ?j agent) )
            (once (and (in_motion tan sideways) (or (in_motion ?j ?j) (and (agent_holds ?j ?j) (game_over desk) ) ) ) )
            (hold (not (agent_holds ?j) ) )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (* 3 (* (count-total preference1:hexagonal_bin:red:beachball) (count-increasing-measure preference6:beachball:golfball) )
        )
        (count preference3:blue_dodgeball:golfball)
      )
      (> (count-once preference6:triangle_block) (* 2 (count preference4:pink) )
      )
    )
    (> (* (* (total-time) (+ (count-once preference1:pink) (* (count-once-per-objects preference1:hexagonal_bin) 5 )
          )
        )
        (count preference6:alarm_clock)
      )
      (count-total preference4:beachball)
    )
    (or
      (>= (count-once-per-objects preference6:pink_dodgeball:beachball) (count preference5:red) )
      (and
        (>= (count preference4:tall_cylindrical_block) (* (count-once-per-objects preference5:beachball:dodgeball) )
        )
      )
      (and
        (= 3 4 )
      )
      (>= (* 5 (count-once preference4:dodgeball:dodgeball) )
        (* (total-time) (+ (+ (count-once-per-objects preference2:green) (count preference4:red_pyramid_block) )
            18
          )
          1
        )
      )
    )
  )
)
(:scoring
  (* (<= 3 (+ 0 0 )
    )
    (count preference5:alarm_clock)
  )
)
)

(define (game game-id-468) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?t - (either blue_cube_block alarm_clock))
      (and
        (forall (?d - hexagonal_bin)
          (and
            (and
              (exists (?i - ball ?p - block)
                (game-optional
                  (not
                    (and
                      (in ?t floor)
                      (in_motion ?t)
                    )
                  )
                )
              )
              (exists (?x - dodgeball ?z - hexagonal_bin)
                (and
                  (game-conserved
                    (and
                      (not
                        (and
                          (and
                            (and
                              (agent_holds desk ?t)
                              (> 1 (distance ?z))
                            )
                            (not
                              (in ?d)
                            )
                          )
                          (in ?z)
                        )
                      )
                      (in ?z)
                    )
                  )
                  (and
                    (game-conserved
                      (same_color ?d ?z)
                    )
                    (exists (?g - dodgeball)
                      (exists (?o - flat_block ?u - ball)
                        (game-conserved
                          (in ?d ?u)
                        )
                      )
                    )
                  )
                  (game-conserved
                    (in ?z ?d)
                  )
                )
              )
            )
          )
        )
      )
    )
    (game-conserved
      (in agent)
    )
  )
)
(:constraints
  (and
    (forall (?z - dodgeball)
      (and
        (preference preference1
          (exists (?n - dodgeball)
            (then
              (once (and (agent_holds ?n ?n) (and (in_motion ?z) (touch ?z) ) ) )
              (once (on ?z ?n) )
              (once (= 1 (distance ?n ?z room_center)) )
              (any)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:dodgeball) (count-once-per-objects preference1:dodgeball) )
)
(:scoring
  (* 2 (* (+ (count-once-per-objects preference1:purple) 10 )
      (* (* (count-once-per-objects preference1:orange) )
        (external-forall-minimize
          (count-once preference1:pink_dodgeball)
        )
      )
    )
  )
)
)

(define (game game-id-469) (:domain few-objects-room-v1)
(:setup
  (and
    (not
      (game-optional
        (is_setup_object ?xxx ?xxx)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?x - ball ?k - beachball)
        (then
          (once (not (adjacent ?k) ) )
          (once (adjacent ?k ?k) )
          (once (on ?k) )
        )
      )
    )
    (preference preference2
      (exists (?h - building ?q - dodgeball)
        (then
          (once (in_motion ?q) )
        )
      )
    )
    (preference preference3
      (then
        (once-measure (in ?xxx ?xxx) (distance_side ?xxx room_center) )
        (hold-while (in ?xxx ?xxx) (adjacent door ?xxx) )
        (once (not (in_motion ?xxx) ) )
      )
    )
    (preference preference4
      (exists (?t - doggie_bed)
        (then
          (hold (not (in ?t) ) )
          (once (agent_holds ?t) )
          (once (is_setup_object agent) )
        )
      )
    )
    (preference preference5
      (exists (?h - hexagonal_bin)
        (then
          (once (and (in door) (not (on ?h ?h) ) ) )
          (once (not (not (exists (?e ?i ?l ?t ?z ?j ?o ?k ?f ?a - (either mug key_chain golfball)) (in agent) ) ) ) )
          (once (in_motion ?h ?h) )
        )
      )
    )
    (forall (?o - tan_cube_block ?n - dodgeball ?k - curved_wooden_ramp)
      (and
        (preference preference6
          (exists (?h ?w ?o - golfball ?c - curved_wooden_ramp)
            (at-end
              (not
                (adjacent ?k)
              )
            )
          )
        )
        (preference preference7
          (exists (?h - dodgeball ?o - pillow)
            (then
              (once (and (agent_holds ?o) (< 1 (distance bed 9)) (agent_holds ?k) ) )
              (hold-while (in_motion ?o floor) (agent_holds ?k ?k) )
              (once (not (not (and (in ?o ?k) (and (in_motion ?o) (not (not (agent_holds ?o ?k) ) ) ) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference2:yellow) (total-score) )
)
(:scoring
  5
)
)

(define (game game-id-470) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?p - hexagonal_bin)
      (game-optional
        (not
          (or
            (in_motion ?p sideways)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?d - teddy_bear)
        (then
          (hold-to-end (in ?d ?d) )
          (once (forall (?l - (either pink cube_block) ?i - dodgeball) (agent_holds ?i ?i) ) )
          (once (on ?d pink_dodgeball) )
        )
      )
    )
    (preference preference2
      (exists (?n - hexagonal_bin ?k - block ?t - game_object ?h - game_object)
        (at-end
          (and
            (touch agent)
            (in_motion ?h)
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= 6 (count preference1:blue) )
  )
)
(:scoring
  (count-once-per-external-objects preference2:pyramid_block)
)
)

(define (game game-id-471) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-optional
      (agent_holds ?xxx agent)
    )
  )
)
(:constraints
  (and
    (forall (?w - game_object)
      (and
        (preference preference1
          (exists (?a ?f - chair ?f - block ?e - shelf ?p - cube_block)
            (then
              (once (or (not (agent_holds ?p) ) (and (not (and (and (agent_holds ?p) (not (in_motion rug) ) (agent_holds ?w) (not (in_motion ?w ?p) ) ) (and (on ?p pink_dodgeball) (agent_holds ?w) ) ) ) (in_motion ?p ?w) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 4 (+ 3 (count-once-per-objects preference1:basketball) )
  )
)
(:scoring
  5
)
)

(define (game game-id-472) (:domain few-objects-room-v1)
(:setup
  (exists (?k - (either mug laptop) ?a - hexagonal_bin)
    (and
      (exists (?e - (either laptop cube_block))
        (game-conserved
          (not
            (in_motion ?a)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?a - ball)
      (and
        (preference preference1
          (exists (?m - block)
            (then
              (hold (< 0.5 (distance room_center)) )
              (hold (not (not (and (agent_holds floor ?m) (agent_holds ?a desk) (not (agent_holds ?m) ) (not (in_motion ?m) ) ) ) ) )
              (hold (on ?m ?a) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference1) 2 )
)
(:scoring
  (count-longest preference1:golfball)
)
)

(define (game game-id-473) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (in_motion ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?y - hexagonal_bin)
        (then
          (once (in_motion ?y ?y) )
          (hold (broken ?y ?y bed bed) )
          (hold (or (agent_holds ?y ?y ?y) (in_motion ?y) (agent_holds ?y) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (count preference1:beachball) (* 30 (count preference1:pink_dodgeball) )
    )
  )
)
(:scoring
  (= (count-once preference1:yellow) (count-once-per-objects preference1:yellow) )
)
)

(define (game game-id-474) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (adjacent ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?v - hexagonal_bin)
        (then
          (hold (adjacent ?v) )
        )
      )
    )
  )
)
(:terminal
  (>= 1 (count-shortest preference1:green) )
)
(:scoring
  (count preference1:side_table)
)
)

(define (game game-id-475) (:domain few-objects-room-v1)
(:setup
  (forall (?d - cube_block ?a - cube_block)
    (and
      (game-conserved
        (rug_color_under ?a ?a)
      )
      (exists (?z - chair)
        (forall (?l - hexagonal_bin)
          (game-optional
            (in ?l ?l)
          )
        )
      )
      (exists (?g ?f - (either golfball cd alarm_clock))
        (forall (?q - hexagonal_bin)
          (forall (?i ?d - curved_wooden_ramp)
            (game-optional
              (in_motion ?q ?f)
            )
          )
        )
      )
      (and
        (game-conserved
          (not
            (in_motion ?a desk)
          )
        )
      )
      (forall (?c - ball)
        (and
          (exists (?d - (either cd key_chain) ?s ?g ?m - color ?e ?l - ball)
            (game-conserved
              (and
                (between ?l ?c)
                (object_orientation ?e ?c)
                (in_motion ?l ?e)
                (and
                  (or
                    (and
                      (exists (?n ?p - hexagonal_bin)
                        (not
                          (not
                            (agent_holds agent)
                          )
                        )
                      )
                      (in_motion agent upright)
                    )
                  )
                  (agent_holds rug ?a)
                )
              )
            )
          )
          (game-conserved
            (touch ?c ?a)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?n - ball ?l - hexagonal_bin ?y - color ?c - game_object)
        (then
          (once (in ?c) )
          (once (in_motion ?c) )
          (once (agent_holds ?c) )
        )
      )
    )
  )
)
(:terminal
  (<= (count-overlapping preference1:golfball) 18 )
)
(:scoring
  7
)
)

(define (game game-id-476) (:domain many-objects-room-v1)
(:setup
  (exists (?r - (either dodgeball triangle_block wall pink) ?x - dodgeball)
    (game-conserved
      (agent_holds agent)
    )
  )
)
(:constraints
  (and
    (forall (?y - ball)
      (and
        (preference preference1
          (exists (?h - (either dodgeball laptop cylindrical_block))
            (then
              (hold (agent_holds ?h ?h) )
              (hold (in ?y ?h) )
              (once (agent_holds agent ?h) )
            )
          )
        )
        (preference preference2
          (exists (?q - hexagonal_bin)
            (then
              (once (agent_holds bed) )
              (once (in ?q block) )
              (hold (on upright) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= (count preference1:pink) (count preference1) )
)
(:scoring
  5
)
)

(define (game game-id-477) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (game-optional
        (exists (?h - shelf ?a - block)
          (in ?a)
        )
      )
      (and
        (and
          (exists (?f - hexagonal_bin ?g - building ?y - hexagonal_bin)
            (game-optional
              (and
                (not
                  (and
                    (not
                      (not
                        (agent_holds ?y)
                      )
                    )
                    (on ?y ?y agent ?y)
                  )
                )
                (in_motion ?y ?y)
              )
            )
          )
        )
      )
      (game-optional
        (in ?xxx)
      )
    )
  )
)
(:constraints
  (and
    (forall (?i - hexagonal_bin)
      (and
        (preference preference1
          (exists (?g - building)
            (then
              (once (opposite ?i) )
              (hold (not (on ?i) ) )
              (once-measure (and (and (in_motion ?i) (agent_holds bed ?g) ) (in_motion ?g) ) (distance ?g ?g) )
            )
          )
        )
        (preference preference2
          (exists (?p - teddy_bear ?x - pillow)
            (then
              (once (not (on ?i) ) )
              (hold (agent_holds ?x) )
              (hold (in_motion ?i) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?n - ball ?b - dodgeball)
        (then
          (once (same_color ?b) )
          (once (not (exists (?x - cube_block) (on ?x bed) ) ) )
          (hold (in_motion rug) )
        )
      )
    )
  )
)
(:terminal
  (>= 30 (* 3 (count preference1:yellow) (* (count preference3:red) (+ (* (count preference2:yellow_cube_block:dodgeball) (count-once-per-objects preference1:cube_block) )
          (not
            (+ 5 5 )
          )
        )
      )
      1
    )
  )
)
(:scoring
  (* (count preference3:basketball:alarm_clock:golfball) (= 5 (count preference1:purple) )
  )
)
)

(define (game game-id-478) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (and
      (on ?xxx ?xxx)
      (in_motion desk)
    )
  )
)
(:constraints
  (and
    (forall (?y - (either tall_cylindrical_block laptop))
      (and
        (preference preference1
          (exists (?x - triangular_ramp)
            (at-end
              (agent_holds pink_dodgeball ?y)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (< (count-once-per-objects preference1:dodgeball:green) 15 )
      (>= (count-once-per-objects preference1:hexagonal_bin) (* 2 )
      )
    )
    (= 1 (= (not 6 ) (count-once-per-objects preference1:hexagonal_bin) )
    )
  )
)
(:scoring
  (count preference1:red:pink)
)
)

(define (game game-id-479) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (not
      (and
        (< 0.5 (distance ?xxx desk agent))
        (agent_holds ?xxx ?xxx)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?t - (either dodgeball dodgeball yellow_cube_block))
        (then
          (hold (in_motion ?t ?t) )
          (once (in_motion ?t) )
          (once (and (same_color ?t ?t) (not (>= (distance ?t) 3) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (- (or (* (* (count preference1:hexagonal_bin:hexagonal_bin) (= (count preference1:red) (count preference1:green) )
              (total-time)
            )
            (count-unique-positions preference1:green:yellow)
          )
          1
        )
      )
      (count-once-per-objects preference1:orange)
    )
    (>= 9 (external-forall-maximize (count preference1:hexagonal_bin) ) )
    (> (external-forall-maximize (count-once-per-objects preference1:dodgeball) ) 15 )
  )
)
(:scoring
  (* (count preference1:pink) (count preference1:beachball:red) )
)
)

(define (game game-id-480) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (forall (?h - (either laptop cube_block cellphone))
        (game-conserved
          (agent_holds ?h)
        )
      )
    )
    (and
      (exists (?v ?q - hexagonal_bin ?u - cube_block ?x - drawer)
        (exists (?g - (either cube_block desktop))
          (exists (?s ?n - (either pyramid_block cube_block))
            (and
              (game-conserved
                (not
                  (< (distance 6 ?n) (distance front_left_corner ?s))
                )
              )
              (and
                (game-conserved
                  (in_motion ?g ?x)
                )
                (and
                  (exists (?f - building)
                    (game-optional
                      (agent_holds agent)
                    )
                  )
                  (game-conserved
                    (same_type ?s drawer)
                  )
                  (game-conserved
                    (agent_holds ?s)
                  )
                  (exists (?b - building ?i - ball)
                    (exists (?o - teddy_bear)
                      (and
                        (exists (?m - hexagonal_bin ?b - hexagonal_bin)
                          (game-conserved
                            (and
                              (and
                                (and
                                  (in ?o ?g)
                                  (in_motion ?n)
                                )
                                (not
                                  (in_motion ?g)
                                )
                              )
                              (agent_holds ?g)
                            )
                          )
                        )
                      )
                    )
                  )
                  (game-optional
                    (not
                      (and
                        (on ?n)
                        (and
                          (adjacent_side ?g ?s)
                          (< 1 (distance_side 6 0))
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
    (game-conserved
      (and
        (and
          (and
            (and
              (and
                (agent_holds ?xxx)
                (not
                  (agent_holds ?xxx)
                )
                (adjacent ?xxx pink_dodgeball)
                (and
                  (and
                    (not
                      (and
                        (agent_holds ?xxx)
                        (< 2 1)
                        (and
                          (not
                            (in sideways)
                          )
                          (and
                            (in blue)
                            (on ?xxx)
                          )
                          (and
                            (adjacent ?xxx)
                            (in_motion ?xxx ?xxx)
                          )
                        )
                      )
                    )
                    (not
                      (in_motion ?xxx ?xxx)
                    )
                  )
                  (not
                    (in ?xxx ?xxx)
                  )
                )
              )
              (in floor blue)
            )
            (in_motion ?xxx)
          )
          (agent_holds ?xxx)
        )
        (not
          (agent_holds ?xxx)
        )
        (and
          (and
            (in ?xxx)
            (in ?xxx)
          )
          (< (distance ?xxx ?xxx) 1)
        )
        (and
          (and
            (and
              (not
                (agent_holds rug ?xxx)
              )
              (on ?xxx ?xxx pink_dodgeball)
            )
            (not
              (not
                (in_motion desktop desk)
              )
            )
            (= 7 (distance 7))
            (on ?xxx ?xxx)
          )
          (and
            (and
              (in_motion rug ?xxx)
              (< 1 1)
            )
            (touch ?xxx ?xxx)
          )
        )
        (open ?xxx ?xxx)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?a - dodgeball ?z - shelf)
        (then
          (hold-while (agent_holds desk) (and (and (and (not (in_motion ?z) ) (in_motion bed) ) (not (not (in ?z ?z) ) ) ) (agent_holds ?z) ) )
          (once (and (on ?z) (and (not (adjacent ?z) ) (agent_holds ?z) ) ) )
          (once (agent_holds ?z) )
        )
      )
    )
  )
)
(:terminal
  (> (count preference1:basketball) 3 )
)
(:scoring
  (count-once-per-objects preference1:dodgeball)
)
)

(define (game game-id-481) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (and
      (not
        (and
          (agent_holds agent)
          (agent_holds ?xxx)
        )
      )
      (= (distance desk desk))
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?o - ball)
        (then
          (hold-while (not (and (and (on ?o) (in_motion ?o ?o) ) (not (not (agent_holds bed ?o) ) ) ) ) (agent_holds ?o) (on ?o) (and (in_motion ?o) (in_motion ?o ?o) ) )
          (once (agent_holds ?o ?o) )
          (hold (agent_holds ?o ?o) )
        )
      )
    )
    (preference preference2
      (then
        (hold-while (and (and (agent_holds ?xxx) (agent_holds ?xxx) ) (not (not (on brown ?xxx) ) ) ) (< (distance room_center ?xxx) 3) )
        (once (toggled_on ?xxx) )
        (hold (not (in_motion ?xxx) ) )
      )
    )
    (forall (?w - dodgeball)
      (and
        (preference preference3
          (exists (?j - (either pillow golfball))
            (then
              (once (< 10 9) )
              (hold (and (and (and (and (and (object_orientation ?j ?w) (and (in_motion ?w) (object_orientation ) (agent_holds ?w ?j) ) ) (not (in_motion ?w) ) ) (or (agent_holds ?j ?j) (not (on ?j) ) ) ) (and (in_motion ?w) (not (agent_holds ?w rug) ) ) ) (not (agent_holds ?w ?w) ) ) )
              (once (adjacent ?j) )
            )
          )
        )
        (preference preference4
          (exists (?z - doggie_bed ?o - game_object)
            (then
              (once (touch agent) )
              (once (in ?o ?o) )
              (hold (in_motion rug ?o) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference4:red_pyramid_block:dodgeball) (count preference1:basketball) )
)
(:scoring
  2
)
)

(define (game game-id-482) (:domain few-objects-room-v1)
(:setup
  (exists (?u - blinds)
    (and
      (game-conserved
        (in_motion ?u)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?s - hexagonal_bin)
        (then
          (hold (and (touch ?s) (equal_z_position ?s) (in_motion ?s) ) )
          (hold (and (in_motion ?s) (in_motion ?s ?s) ) )
          (once (in_motion ?s ?s) )
        )
      )
    )
    (forall (?l ?c - doggie_bed)
      (and
        (preference preference2
          (exists (?g - (either dodgeball floor) ?e - ball)
            (at-end
              (not
                (in ?l ?l)
              )
            )
          )
        )
        (preference preference3
          (exists (?b - hexagonal_bin ?d - dodgeball)
            (then
              (hold (and (in_motion ?l ?l) (> 2 4) ) )
              (once (and (and (not (agent_holds ?l) ) (adjacent ?d ?c) ) (agent_holds ?c) ) )
              (hold (agent_holds ?d) )
            )
          )
        )
        (preference preference4
          (exists (?k ?o - ball)
            (then
              (once (on ?k) )
              (once (not (and (in_motion ?k) (and (rug_color_under floor) (agent_holds drawer ?c) ) (agent_holds ?k top_shelf) ) ) )
              (hold-while (and (and (in_motion ?c bed) (not (agent_holds ?l) ) ) (< (distance agent ?o) (distance desk ?l)) (and (in ?k) (agent_holds ?c ?c) ) (in ?k) ) (and (and (in_motion ?o ?o) (and (same_color ?o) (and (and (and (in ?k ?c) (agent_holds ?c ?c) ) (not (and (and (agent_holds ?l) (agent_holds top_shelf ?l) ) (agent_holds ?k ?k) (exists (?f - hexagonal_bin ?b - (either pyramid_block wall) ?s - (either pyramid_block wall dodgeball) ?v - hexagonal_bin) (touch ?c ?k) ) ) ) ) (on rug) ) ) ) (and (agent_holds upright ?k) (and (exists (?h - hexagonal_bin) (exists (?w - (either laptop yellow golfball) ?d - dodgeball ?t ?u - dodgeball) (in_motion ?t) ) ) (in ?c ?k) ) ) ) (on ?k bed) )
            )
          )
        )
      )
    )
    (preference preference5
      (exists (?q - hexagonal_bin ?t ?p ?c - doggie_bed ?i - game_object ?p - hexagonal_bin)
        (then
          (hold (in_motion ?p desk) )
          (once (agent_holds ?p) )
          (hold (agent_holds ?p ?p) )
        )
      )
    )
  )
)
(:terminal
  (>= (and (count preference5:dodgeball:pink) (* 10 (+ 2 )
      )
    )
    15
  )
)
(:scoring
  1
)
)

(define (game game-id-483) (:domain medium-objects-room-v1)
(:setup
  (forall (?q - dodgeball)
    (game-optional
      (in ?q)
    )
  )
)
(:constraints
  (and
    (forall (?u - doggie_bed)
      (and
        (preference preference1
          (exists (?y - chair)
            (then
              (once (on agent ?u) )
              (once (in ?u) )
              (once (not (agent_holds ?u) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (count preference1:basketball) )
)
(:scoring
  (+ 2 (external-forall-maximize (count preference1:cube_block:golfball) ) )
)
)

(define (game game-id-484) (:domain few-objects-room-v1)
(:setup
  (exists (?n - building)
    (game-conserved
      (and
        (< (distance ?n ?n) 3)
        (< (distance ?n ?n) (distance ?n agent))
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?e ?r - ball ?g ?d - cube_block)
        (then
          (hold (not (not (in rug rug) ) ) )
          (once (and (agent_holds ?g) (not (same_color rug) ) (in desk) (< (distance ?g ?d) (distance room_center)) (touch ?d) (agent_holds ?g) ) )
        )
      )
    )
    (forall (?n - hexagonal_bin)
      (and
        (preference preference2
          (exists (?w - ball)
            (then
              (once (< (distance_side 5 room_center) 9) )
              (hold (in_motion ?w top_shelf) )
              (hold-while (and (adjacent ?w) (and (not (not (and (in right ?w) (in_motion desk ?w ?n) ) ) ) (= 0 (distance door desk ?w)) (adjacent ?w) ) ) (and (not (agent_holds ?w ?n) ) (in ?n ?n) ) )
            )
          )
        )
        (preference preference3
          (exists (?v - chair)
            (at-end
              (agent_holds ?n)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 20 (+ (count preference3:basketball) (+ 3 (count-unique-positions preference1:dodgeball) (* (count preference1:blue_dodgeball) (+ 2 3 )
        )
      )
    )
  )
)
(:scoring
  (total-time)
)
)

(define (game game-id-485) (:domain medium-objects-room-v1)
(:setup
  (and
    (or
      (game-conserved
        (adjacent ?xxx)
      )
      (forall (?y - (either triangle_block basketball dodgeball) ?i - dodgeball)
        (game-optional
          (and
            (not
              (in_motion ?i)
            )
            (and
              (faces ?i)
              (agent_holds ?i ?i)
            )
          )
        )
      )
      (game-conserved
        (in_motion ?xxx ?xxx)
      )
    )
    (and
      (exists (?q - hexagonal_bin)
        (exists (?h - shelf)
          (exists (?a - cylindrical_block)
            (game-conserved
              (agent_holds ?h agent)
            )
          )
        )
      )
    )
    (exists (?i - color)
      (forall (?s - (either golfball cellphone tall_cylindrical_block golfball))
        (exists (?o ?w - curved_wooden_ramp)
          (exists (?g - (either laptop blue_cube_block))
            (game-optional
              (in_motion ?g ?g)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?q - hexagonal_bin)
        (then
          (hold (in_motion ?q floor) )
          (hold (in_motion ?q ?q) )
          (once (not (= (distance 8 ?q) (distance ?q 9) (distance_side ?q room_center)) ) )
        )
      )
    )
  )
)
(:terminal
  (> (* 4 (* (* (<= (count-once-per-objects preference1:pink:dodgeball) (- (count preference1:tan) )
          )
          (external-forall-maximize
            9
          )
        )
        (count preference1:dodgeball)
      )
    )
    2
  )
)
(:scoring
  (+ (* (* (* (count preference1:hexagonal_bin) (count-once-per-objects preference1:pink) (count preference1:pink) (count preference1:beachball) )
        0
      )
      (* 7 4 )
    )
  )
)
)

(define (game game-id-486) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (or
      (agent_holds top_shelf ?xxx)
      (not
        (in_motion ?xxx)
      )
    )
  )
)
(:constraints
  (and
    (forall (?l - hexagonal_bin)
      (and
        (preference preference1
          (exists (?m - (either dodgeball golfball cube_block) ?u - (either top_drawer yellow_cube_block dodgeball) ?d - building ?g - block)
            (then
              (hold-for 2 (same_color ?g) )
              (once (in_motion ?g door) )
              (once (and (not (touch ?g) ) (and (not (in_motion ?g) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:yellow:dodgeball) (count-once-per-objects preference1:basketball) )
)
(:scoring
  (count-once-per-objects preference1:yellow)
)
)

(define (game game-id-487) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-conserved
      (not
        (not
          (broken ?xxx)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?o - chair)
        (then
          (once (or (in_motion ?o ?o left) (in_motion ?o) ) )
          (once (not (same_color ?o) ) )
          (hold (agent_holds ?o) )
        )
      )
    )
    (preference preference2
      (exists (?g - chair ?q - hexagonal_bin)
        (then
          (once (not (agent_holds ?q) ) )
          (hold (not (on ?q ?q) ) )
          (hold (< 9 (distance desk 10)) )
        )
      )
    )
    (preference preference3
      (exists (?z - chair ?l - dodgeball ?d - beachball)
        (then
          (hold-while (agent_holds bed) (agent_holds ?d) )
          (once (< (distance room_center ?d) (distance room_center 5)) )
          (once (not (in_motion ?d) ) )
          (once (agent_holds ?d ?d) )
        )
      )
    )
  )
)
(:terminal
  (>= 20 2 )
)
(:scoring
  (count preference1:yellow)
)
)

(define (game game-id-488) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (agent_holds bed)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?c - (either bridge_block desktop))
        (then
          (hold (in ?c) )
          (once (>= 4 1) )
          (forall-sequence (?l - ball)
            (then
              (once (or (>= 1 1) (and (and (in_motion ?l bed) (agent_holds ?l) ) (agent_holds ?c) ) (in_motion ?c ?l) ) )
              (hold (not (and (agent_holds ?l) (exists (?a - (either floor cube_block hexagonal_bin)) (and (in_motion ?a ?l) (in_motion desk) ) ) ) ) )
              (once (not (above ?c pink_dodgeball) ) )
              (once (not (is_setup_object rug) ) )
            )
          )
        )
      )
    )
    (forall (?x ?j - hexagonal_bin)
      (and
        (preference preference2
          (exists (?e - dodgeball)
            (then
              (forall-sequence (?o - (either key_chain pillow))
                (then
                  (once (in_motion ?j) )
                  (once (and (on ?e ?x) (and (touch ?x ?e) (touch desk) ) ) )
                  (once-measure (on ?o) (distance ) )
                )
              )
              (once (on ?x) )
              (once (> (distance_side agent ?x) 1) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference2:golfball) (+ (* 2 10 )
      (count preference1:pink_dodgeball)
    )
  )
)
(:scoring
  3
)
)

(define (game game-id-489) (:domain few-objects-room-v1)
(:setup
  (and
    (not
      (game-conserved
        (< 1 (distance 2 desk))
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?p - building)
        (then
          (once (adjacent ?p ?p) )
          (once (in_motion ?p ?p) )
          (once (not (in_motion ?p) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (<= 20 9 )
  )
)
(:scoring
  (count-once preference1:golfball:golfball)
)
)

(define (game game-id-490) (:domain few-objects-room-v1)
(:setup
  (forall (?r - (either dodgeball curved_wooden_ramp))
    (game-conserved
      (in_motion ?r)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?y - cube_block ?h ?a - curved_wooden_ramp)
        (then
          (once (agent_holds ?h) )
          (once (and (agent_holds ?a ?h) (above ?h) (in_motion ?h) ) )
          (hold (adjacent ?h) )
        )
      )
    )
    (preference preference2
      (exists (?h - ball ?k - dodgeball)
        (then
          (once (in ?k) )
          (once (agent_holds ?k) )
        )
      )
    )
  )
)
(:terminal
  (< 3 3 )
)
(:scoring
  (count-once-per-objects preference2:golfball)
)
)

(define (game game-id-491) (:domain many-objects-room-v1)
(:setup
  (or
    (and
      (and
        (and
          (game-optional
            (agent_holds ?xxx)
          )
        )
        (and
          (and
            (forall (?s - golfball ?n - pillow)
              (and
                (game-optional
                  (not
                    (in ?n)
                  )
                )
              )
            )
            (game-optional
              (not
                (not
                  (not
                    (agent_holds ?xxx)
                  )
                )
              )
            )
          )
          (forall (?d - (either curved_wooden_ramp flat_block) ?y - hexagonal_bin)
            (forall (?n - chair ?w - cube_block)
              (and
                (game-optional
                  (in_motion yellow)
                )
              )
            )
          )
        )
        (game-conserved
          (touch ?xxx agent)
        )
        (and
          (and
            (game-optional
              (not
                (= 1)
              )
            )
          )
          (and
            (game-optional
              (touch ?xxx ?xxx)
            )
            (and
              (game-optional
                (exists (?m - (either basketball ball))
                  (touch ?m ?m)
                )
              )
            )
          )
          (exists (?u - ball)
            (game-conserved
              (adjacent ?u)
            )
          )
        )
        (or
          (forall (?s - flat_block)
            (game-conserved
              (not
                (agent_holds ?s)
              )
            )
          )
          (exists (?l - game_object ?v - cube_block)
            (and
              (or
                (and
                  (forall (?f - (either bridge_block credit_card red blue_cube_block))
                    (game-optional
                      (and
                        (and
                          (and
                            (in_motion floor)
                            (agent_holds ?f ?f)
                            (agent_holds ?f)
                          )
                          (> (distance desk ?f) 1)
                        )
                        (in_motion ?f)
                      )
                    )
                  )
                )
                (game-optional
                  (in_motion ?v)
                )
                (not
                  (game-conserved
                    (on ?v ?v)
                  )
                )
              )
            )
          )
        )
      )
      (and
        (game-optional
          (adjacent ?xxx)
        )
        (exists (?v - triangular_ramp)
          (game-optional
            (and
              (above top_drawer)
              (in_motion ?v ?v)
            )
          )
        )
      )
      (game-optional
        (and
          (in_motion ?xxx)
          (or
            (not
              (and
                (agent_holds ?xxx ?xxx)
                (and
                  (not
                    (agent_holds ?xxx ?xxx)
                  )
                  (in_motion agent)
                )
              )
            )
            (not
              (is_setup_object ?xxx ?xxx)
            )
          )
        )
      )
    )
    (exists (?f - hexagonal_bin)
      (game-optional
        (in_motion ?f ?f)
      )
    )
    (game-conserved
      (agent_holds ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?a - game_object)
        (at-end
          (not
            (adjacent_side ?a ?a)
          )
        )
      )
    )
  )
)
(:terminal
  (>= 100 3 )
)
(:scoring
  3
)
)

(define (game game-id-492) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?m - (either tall_cylindrical_block golfball) ?i - dodgeball ?u - ball)
      (exists (?w - teddy_bear)
        (game-conserved
          (agent_holds floor)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?r - doggie_bed)
      (and
        (preference preference1
          (exists (?b ?c - ball)
            (at-end
              (on ?c)
            )
          )
        )
      )
    )
    (forall (?x - hexagonal_bin ?k - shelf)
      (and
        (preference preference2
          (exists (?p - doggie_bed)
            (then
              (once (agent_holds ?k) )
              (hold (and (on ?p ?p) (in_motion ?p) ) )
              (once (and (and (in_motion ?p) (and (open ?k) (agent_holds ?k ?k) ) ) (and (in_motion ?p ?p) (not (not (not (same_color ?k rug) ) ) ) ) ) )
              (hold (and (and (not (not (> (distance_side 7 room_center) 0.5) ) ) (and (and (above ?k) (and (in_motion ?k) (on ?p) ) ) (and (agent_holds ?k) (in_motion ?k ?p) ) ) ) (not (not (and (not (and (in_motion ?k ?k) (not (agent_holds ?k) ) (not (and (adjacent_side ?k) (agent_holds ?p ?k) ) ) ) ) (not (touch ?p) ) (exists (?w - hexagonal_bin) (not (in_motion ?p pillow ?w) ) ) ) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 10 2 )
)
(:scoring
  (count preference2:white)
)
)

(define (game game-id-493) (:domain few-objects-room-v1)
(:setup
  (or
    (game-optional
      (adjacent ?xxx ?xxx ?xxx ?xxx)
    )
  )
)
(:constraints
  (and
    (forall (?l - hexagonal_bin ?w - game_object)
      (and
        (preference preference1
          (then
            (once (and (exists (?e ?h - curved_wooden_ramp) (in_motion ?h) ) (exists (?c - game_object) (and (forall (?g - dodgeball) (agent_holds agent ?w) ) (not (not (not (in_motion ?c) ) ) ) ) ) ) )
            (once (in_motion ?w ?w) )
            (once (in_motion ?w) )
          )
        )
        (preference preference2
          (exists (?x - hexagonal_bin)
            (at-end
              (agent_holds ?w)
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?w - game_object)
        (then
          (once (adjacent ?w ?w) )
          (once (not (or (in ?w ?w) (< (distance ?w 3) 5) ) ) )
          (hold (not (on ?w) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 1 (count preference3:dodgeball:yellow) )
)
(:scoring
  (not
    180
  )
)
)

(define (game game-id-494) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (in ?xxx)
  )
)
(:constraints
  (and
    (forall (?v ?t - game_object ?w - game_object)
      (and
        (preference preference1
          (exists (?c - dodgeball)
            (then
              (once (not (in_motion ?c) ) )
              (once (adjacent_side ?c ?w) )
              (once-measure (and (not (in_motion ?c front) ) (and (and (adjacent ?w) (agent_holds ?w) ) (or (and (agent_holds ?c) (forall (?g - drawer ?b - cube_block ?l - game_object) (not (not (and (agent_holds ?l ?c) (not (adjacent ?l ?l) ) ) ) ) ) ) (in_motion ?c) ) ) (agent_holds ?c ?c) (agent_holds ?w) ) (distance agent 1) )
            )
          )
        )
        (preference preference2
          (exists (?s - cube_block ?i - building)
            (then
              (once (agent_holds ?w) )
              (hold (and (and (not (> (distance ?i desk) (distance ?i)) ) (agent_holds ?i) (in ?i) ) (in ?w) (and (< (distance door agent) 0.5) (agent_holds ?i door) ) ) )
              (once (<= 9 (distance desk ?i)) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?j - (either hexagonal_bin laptop))
        (then
          (hold (and (adjacent ?j) (in_motion ?j) ) )
          (once (agent_holds ?j ?j) )
          (hold (in_motion ?j) )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (count preference1:purple) )
)
(:scoring
  (count preference3:dodgeball)
)
)

(define (game game-id-495) (:domain few-objects-room-v1)
(:setup
  (not
    (forall (?g - hexagonal_bin)
      (and
        (exists (?l - hexagonal_bin)
          (exists (?t - curved_wooden_ramp ?r - cylindrical_block ?z ?w - chair ?c - hexagonal_bin)
            (exists (?v ?s - dodgeball ?y - hexagonal_bin)
              (and
                (exists (?m - dodgeball)
                  (forall (?r - block)
                    (game-conserved
                      (not
                        (forall (?u - bridge_block)
                          (in_motion ?g)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?v - game_object ?t - block)
      (and
        (preference preference1
          (exists (?l - (either desktop game_object))
            (then
              (hold (<= (distance 4 desk) 3) )
              (hold (agent_holds ?t) )
              (once (in_motion ?t ?l) )
            )
          )
        )
        (preference preference2
          (exists (?q - teddy_bear ?r - (either blue_cube_block dodgeball) ?r - shelf)
            (then
              (once (not (in ?t ?t) ) )
              (once (touch agent) )
              (hold (not (not (not (in_motion ?t ?r) ) ) ) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?y - hexagonal_bin)
        (then
          (once (touch desk) )
          (once (and (= (distance ?y desk) (distance ?y room_center)) (agent_holds ?y) ) )
          (hold (in_motion ?y) )
        )
      )
    )
  )
)
(:terminal
  (<= (* 10 (* (* (count preference2:red:pink_dodgeball) 2 (count preference1:beachball) )
        (count-same-positions preference2:book)
      )
    )
    (count-once-per-objects preference2:dodgeball)
  )
)
(:scoring
  0
)
)

(define (game game-id-496) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (agent_holds ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?j - block)
        (then
          (hold-while (not (or (in_motion ?j) (in_motion ?j) (rug_color_under ?j ?j) (in_motion ?j ?j) ) ) (in_motion ?j ?j) )
          (once (open ?j) )
        )
      )
    )
  )
)
(:terminal
  (>= 1 (* (count-once-per-objects preference1:blue_dodgeball) (* 10 100 )
    )
  )
)
(:scoring
  2
)
)

(define (game game-id-497) (:domain medium-objects-room-v1)
(:setup
  (not
    (game-conserved
      (touch ?xxx ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?f - hexagonal_bin ?e ?o - hexagonal_bin ?b - hexagonal_bin)
        (then
          (hold (>= 0 6) )
          (once (on rug) )
          (once (in ?b) )
        )
      )
    )
  )
)
(:terminal
  (> (= 10 5 )
    (count-measure preference1:pink_dodgeball:basketball)
  )
)
(:scoring
  (* (count preference1:red_pyramid_block) (= (count preference1:bed) (* (* (* 3 (count preference1:dodgeball) )
          (count preference1:green:dodgeball)
        )
        (count-once-per-objects preference1:dodgeball:beachball:beachball)
      )
    )
  )
)
)

(define (game game-id-498) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (forall (?r - hexagonal_bin)
        (exists (?f - hexagonal_bin ?u ?q - ball)
          (and
            (game-conserved
              (and
                (and
                  (in_motion ?q ?r)
                  (agent_holds ?u)
                )
                (agent_holds ?u ?r)
                (not
                  (in_motion ?u pink_dodgeball)
                )
                (agent_holds ?q)
              )
            )
          )
        )
      )
      (game-conserved
        (in_motion ?xxx bridge_block)
      )
    )
  )
)
(:constraints
  (and
    (forall (?x - hexagonal_bin ?r - ball)
      (and
        (preference preference1
          (exists (?n - building ?w - hexagonal_bin)
            (then
              (hold (not (agent_holds ?r) ) )
              (once (on ?w) )
              (hold (and (not (in pink) ) (agent_holds ?w ?r) ) )
            )
          )
        )
        (preference preference2
          (at-end
            (agent_holds ?r ?r)
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-external-objects preference2:dodgeball) (* (count preference2:golfball:rug) 3 )
  )
)
(:scoring
  (count preference1:yellow:dodgeball)
)
)

(define (game game-id-499) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?c - cube_block ?h - (either golfball pillow) ?o - block)
        (then
          (hold (and (not (agent_holds ?o ?o) ) (not (and (not (and (touch ?o) (in_motion ?o ?o) ) ) (rug_color_under ?o) (and (not (touch ?o) ) (not (exists (?z - dodgeball) (and (in_motion ?o) (and (and (in_motion ?o) (agent_holds ?o ?z) (on floor) ) ) (agent_holds ?z) ) ) ) ) (agent_holds top_drawer) ) ) ) )
          (hold-while (and (touch ?o) (touch ?o) ) (in_motion ?o ?o) )
          (once (and (not (not (and (not (agent_holds ?o ?o ?o) ) (on ?o ?o) ) ) ) (and (not (< 0 (distance ?o ?o)) ) (in_motion ?o bed ?o) ) ) )
        )
      )
    )
  )
)
(:terminal
  (= (count preference1:dodgeball) 10 )
)
(:scoring
  (count preference1)
)
)

(define (game game-id-500) (:domain many-objects-room-v1)
(:setup
  (exists (?p ?k - building)
    (game-optional
      (not
        (touch ?p)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?x - hexagonal_bin)
        (at-end
          (in_motion ?x)
        )
      )
    )
  )
)
(:terminal
  (>= 3 (- 4 )
  )
)
(:scoring
  (* (* (count preference1:dodgeball) 10 )
    (- 2 )
  )
)
)

(define (game game-id-501) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (not
      (and
        (in_motion ?xxx ?xxx)
        (not
          (not
            (and
              (in_motion ?xxx)
              (is_setup_object ?xxx)
              (< (distance ) 2)
              (agent_holds floor)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?t - hexagonal_bin)
        (at-end
          (in_motion ?t ?t)
        )
      )
    )
    (preference preference2
      (exists (?s - dodgeball)
        (then
          (hold (agent_holds ?s ?s) )
          (hold (agent_holds ?s) )
          (once (> (distance ?s ?s) (distance 9 room_center)) )
          (once (between ?s) )
        )
      )
    )
  )
)
(:terminal
  (> (count preference1:brown) 3 )
)
(:scoring
  (* (count preference1:book) (count preference2:orange) (+ (count preference2:doggie_bed) 10 )
    (* (external-forall-maximize 3 ) 18 )
    10
    (+ (* (count preference2:blue_dodgeball) (count preference2:pyramid_block) )
    )
  )
)
)

(define (game game-id-502) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (exists (?h - block ?z - (either dodgeball tall_cylindrical_block))
      (in_motion ?z)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?h - pillow)
        (then
          (hold (agent_holds ?h) )
          (once (and (and (in_motion ?h rug) (same_color ?h ?h) ) (touch ?h ?h) ) )
          (once (in_motion ?h ?h) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (< (+ (* (count-once-per-objects preference1:golfball:dodgeball) (* (>= (count preference1:pyramid_block) 18 )
              (total-time)
            )
          )
          (count preference1)
        )
        (count preference1:rug)
      )
      (>= 4 (count-once-per-objects preference1:yellow_cube_block) )
    )
    (and
      (= (external-forall-maximize 2 ) 5 )
      (or
        (>= (/ (count-once-per-objects preference1:dodgeball) (* (* (/ 5 1 ) (- (- (count-once-per-external-objects preference1:golfball:hexagonal_bin) )
                )
              )
              (- 10 )
            )
          )
          2
        )
        (> (* 2 (* (external-forall-maximize (* (+ 2 (* 10 3 (* (count preference1:hexagonal_bin) (count-increasing-measure preference1:hexagonal_bin:yellow) )
                    )
                  )
                  (count-once preference1:red)
                  (>= (count preference1:hexagonal_bin) 5 )
                )
              )
              5
            )
          )
          (count-once-per-objects preference1:dodgeball)
        )
        (>= (and (count-once-per-objects preference1:purple) 30 ) (* (* 2 (count preference1:golfball:blue_dodgeball) )
            (* 1 (+ 10 (* (+ (count-once preference1) 1 )
                  (count-shortest preference1:side_table)
                  3
                )
              )
            )
            (total-score)
          )
        )
      )
      (>= (* (count-once-per-objects preference1:hexagonal_bin) (count preference1:rug) )
        (count-once-per-objects preference1:dodgeball:basketball)
      )
    )
  )
)
(:scoring
  (count-once-per-external-objects preference1:blue:hexagonal_bin)
)
)

(define (game game-id-503) (:domain few-objects-room-v1)
(:setup
  (and
    (game-conserved
      (and
        (and
          (game_over ?xxx)
          (not
            (in_motion agent ?xxx)
          )
        )
        (< (distance bed ?xxx) (distance 7 ?xxx))
      )
    )
  )
)
(:constraints
  (and
    (forall (?c - dodgeball)
      (and
        (preference preference1
          (exists (?e - (either dodgeball blue_cube_block) ?b - dodgeball)
            (at-end
              (and
                (and
                  (not
                    (and
                      (agent_holds agent ?b)
                      (= 1 1 (distance ?b ?b) (distance 7 1))
                      (adjacent_side ?c)
                      (agent_holds ?b)
                    )
                  )
                  (and
                    (and
                      (and
                        (in ?c desk)
                        (in_motion ?b)
                        (not
                          (and
                            (= 2 5)
                            (on ?c ?c)
                          )
                        )
                      )
                      (in_motion ?c ?b)
                    )
                    (on ?c ?b)
                    (not
                      (on ?b)
                    )
                  )
                )
                (agent_holds ?b)
                (object_orientation ?b)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) 2 )
)
(:scoring
  3
)
)

(define (game game-id-504) (:domain medium-objects-room-v1)
(:setup
  (forall (?l - doggie_bed)
    (exists (?k - hexagonal_bin)
      (exists (?r - dodgeball ?r - dodgeball)
        (game-conserved
          (exists (?g - (either flat_block key_chain))
            (same_type ?k ?r)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?j - block)
        (then
          (hold (and (and (agent_holds ?j upright) (= (distance ?j ?j ?j) 1) ) (agent_holds ?j) (and (touch ?j ?j) (and (and (not (and (not (in_motion ?j right ?j) ) (not (not (not (in_motion ?j) ) ) ) (and (and (and (in_motion ?j) (in_motion ?j ?j) ) (not (agent_holds ?j ?j) ) (and (on ?j) (in_motion ?j) (touch ?j ?j) ) ) (agent_holds ?j ?j) ) ) ) (agent_holds ?j) (in ?j ?j) ) (and (not (in_motion ?j bed) ) (agent_holds bed) ) ) ) (not (exists (?z - block ?d - (either cylindrical_block key_chain laptop)) (touch rug) ) ) ) )
          (any)
          (once (agent_holds block) )
        )
      )
    )
    (forall (?f - hexagonal_bin ?a ?v ?q - book)
      (and
        (preference preference2
          (exists (?t - curved_wooden_ramp)
            (then
              (once (not (agent_holds ?a) ) )
              (hold-while (and (or (agent_holds ?q ?t) (< (distance ?a 9) (distance desk)) ) (adjacent ?t) (touch block) ) (agent_holds ?v) )
              (once (not (agent_holds ?q) ) )
            )
          )
        )
        (preference preference3
          (exists (?w - hexagonal_bin)
            (then
              (hold (not (not (on ?q) ) ) )
              (once (not (agent_holds ?a ?q) ) )
              (hold (adjacent ?w ?q) )
            )
          )
        )
        (preference preference4
          (then
            (once (and (agent_holds ?q ?a) (in_motion ?v ?v) ) )
            (once (agent_holds ?v ?q) )
            (hold (not (and (in brown) (agent_holds front ?v) (not (in_motion ?a ?v) ) (in_motion ?a) (not (in_motion right ?q) ) (in ?a agent) (agent_holds ?v ?v) (in_motion ?v) (and (on ?q) (and (not (= 5 (distance desk ?v)) ) (< (distance 1 desk) (distance ?a ?q)) ) (equal_z_position ?a) ) (agent_holds rug) ) ) )
          )
        )
      )
    )
  )
)
(:terminal
  (< (count preference4:red) (= (external-forall-maximize 10 ) 5 )
  )
)
(:scoring
  (* (* (+ (* (* (count-once-per-objects preference2:hexagonal_bin) (count-once-per-external-objects preference1:pink:golfball) )
          15
        )
        (or
          (count preference3:pink:hexagonal_bin)
          (count preference4:pink)
        )
        (+ (+ 5 (* (* 40 2 )
              (* (+ (* 7 5 (count-once preference4:purple:triangle_block:dodgeball) )
                  (count preference4:blue_dodgeball)
                )
                (count-increasing-measure preference4:yellow)
              )
            )
          )
          (count-overlapping preference3:dodgeball:yellow)
          (count-once-per-objects preference3:blue_pyramid_block:orange)
        )
        5
        (count-once-per-objects preference1:green:hexagonal_bin)
        6
      )
    )
    0
  )
)
)

(define (game game-id-505) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (and
      (agent_holds front)
      (not
        (agent_holds ?xxx ?xxx)
      )
    )
  )
)
(:constraints
  (and
    (forall (?l - building ?m - hexagonal_bin)
      (and
        (preference preference1
          (exists (?c - (either dodgeball bridge_block))
            (then
              (once (agent_holds ?c) )
              (hold (exists (?i - pyramid_block) (not (not (is_setup_object ?m ?c) ) ) ) )
              (once (agent_holds ?c) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?s - triangular_ramp)
        (then
          (once (agent_holds ?s) )
          (once-measure (equal_z_position ?s) (distance ) )
          (once (exists (?f - triangular_ramp ?l - ball) (agent_holds ?s) ) )
        )
      )
    )
    (preference preference3
      (exists (?i - triangular_ramp)
        (at-end
          (and
            (and
              (on ?i)
              (exists (?v - hexagonal_bin ?x - dodgeball)
                (< 10 7)
              )
            )
            (in_motion ?i)
          )
        )
      )
    )
    (preference preference4
      (exists (?x - (either golfball mug) ?d - curved_wooden_ramp)
        (then
          (once (is_setup_object ?d) )
          (once (in_motion ?d) )
          (once (and (in_motion ?d) (in ?d ?d) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference4:orange) (count preference4:purple) )
)
(:scoring
  3
)
)

(define (game game-id-506) (:domain many-objects-room-v1)
(:setup
  (exists (?x - curved_wooden_ramp)
    (exists (?y - block ?y - teddy_bear ?d - pyramid_block ?y - hexagonal_bin)
      (game-optional
        (agent_holds ?y)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?b ?j - color)
        (then
          (hold-while (in_motion ?j) (agent_holds ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:basketball) (+ 10 10 )
  )
)
(:scoring
  (count-longest preference1)
)
)

(define (game game-id-507) (:domain medium-objects-room-v1)
(:setup
  (exists (?z - beachball)
    (game-conserved
      (in ?z ?z)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?o - hexagonal_bin ?y - building)
        (then
          (hold (agent_holds ?y) )
          (once (not (on pink_dodgeball ?y) ) )
          (hold (and (not (agent_holds ?y ?y) ) (on ?y brown) ) )
        )
      )
    )
    (preference preference2
      (exists (?c - chair ?a - (either pyramid_block credit_card pink pyramid_block dodgeball cube_block cylindrical_block))
        (at-end
          (agent_holds ?a ?a)
        )
      )
    )
    (forall (?r - cube_block)
      (and
        (preference preference3
          (exists (?x - triangular_ramp)
            (at-end
              (exists (?j - block)
                (and
                  (forall (?m - (either dodgeball cube_block pillow cylindrical_block) ?z - cube_block ?m - block)
                    (and
                      (not
                        (= (distance_side agent))
                      )
                      (in ?r)
                    )
                  )
                  (on ?x)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (> (count preference2:dodgeball) (or (* (count-same-positions preference1:doggie_bed) 7 )
          (+ (+ (count-longest preference3:beachball:basketball) (count preference3:blue_dodgeball) (count-total preference1:dodgeball) (count preference2:golfball) (- (- (count-once-per-objects preference2:basketball) )
              )
              (count preference2:beachball)
            )
            (* (* (external-forall-maximize (count-once-per-objects preference1:dodgeball) ) (external-forall-maximize (* 5 (count-longest preference2:pink) )
                )
              )
              (count-overlapping preference1:golfball)
            )
          )
        )
      )
      (> (count-once-per-external-objects preference2:pink_dodgeball) 2 )
    )
    (not
      (>= (* 0.5 (count preference3:yellow_cube_block:golfball) (* (count preference1:yellow:dodgeball) (+ 3 (count-once-per-objects preference2:purple) (count preference3:beachball:triangle_block:tan) )
          )
        )
        (total-time)
      )
    )
    (>= 3 3 )
  )
)
(:scoring
  (count preference3:blue_dodgeball)
)
)

(define (game game-id-508) (:domain medium-objects-room-v1)
(:setup
  (exists (?i - block)
    (exists (?k ?w ?m ?l ?z ?n - dodgeball)
      (game-conserved
        (in_motion ?w rug)
      )
    )
  )
)
(:constraints
  (and
    (forall (?x - hexagonal_bin ?b - book)
      (and
        (preference preference1
          (exists (?m - teddy_bear)
            (then
              (hold-for 2 (not (not (exists (?c - chair) (on ?c) ) ) ) )
              (once (in_motion ?b ?m) )
              (once (agent_holds ?b) )
            )
          )
        )
        (preference preference2
          (exists (?f - game_object ?d ?u - ball)
            (then
              (once (not (adjacent_side ?d ?d) ) )
              (hold (forall (?n - wall) (> 1 (distance )) ) )
              (once (agent_holds ?d) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?y - flat_block)
        (then
          (once (and (not (agent_holds ?y) ) (and (on ?y pink) (in_motion agent) ) ) )
          (once (in_motion ?y) )
          (hold (on ?y ?y) )
        )
      )
    )
  )
)
(:terminal
  (>= 20 1 )
)
(:scoring
  (count-overlapping preference3:golfball)
)
)

(define (game game-id-509) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (agent_holds ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?q - book)
        (then
          (hold (not (< (distance ?q 1) (distance )) ) )
          (once (in_motion ?q) )
          (once (in_motion agent ?q) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (count preference1:basketball:dodgeball) (* (+ (* (total-score) )
          8
        )
        (count-once-per-objects preference1:green)
      )
    )
    (or
      (>= (count-once-per-external-objects preference1:basketball:red:pink) (count-once-per-objects preference1:hexagonal_bin) )
    )
    (> (- (count preference1:yellow) )
      (total-score)
    )
  )
)
(:scoring
  (+ (count-once-per-objects preference1:blue) )
)
)

(define (game game-id-510) (:domain many-objects-room-v1)
(:setup
  (forall (?e - cylindrical_block)
    (and
      (forall (?x - ball)
        (and
          (game-optional
            (agent_holds rug)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?b - (either cellphone golfball wall bridge_block) ?l - (either cube_block alarm_clock))
        (then
          (hold-while (and (agent_holds agent ?l) (not (on ?l ?l) ) ) (in_motion ?l ?l) (and (on ?l) (agent_holds ?l) ) )
          (once (between ?l ?l) )
          (once (agent_holds ?l ?l) )
        )
      )
    )
    (preference preference2
      (exists (?x - doggie_bed)
        (then
          (hold (not (and (not (is_setup_object bridge_block ?x) ) (touch ?x) ) ) )
          (hold (and (and (agent_holds desk ?x) (in_motion agent) ) (not (< 4 (distance )) ) ) )
          (hold-for 7 (not (and (touch ?x front) (in_motion ?x ?x) ) ) )
        )
      )
    )
    (preference preference3
      (exists (?n - hexagonal_bin)
        (then
          (hold (and (< 2 (distance ?n ?n)) ) )
          (once (agent_holds ?n ?n) )
          (once (and (agent_holds ?n) (exists (?e - cube_block ?h - color) (and (in_motion ?n) ) ) (in_motion ?n) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 10 15 )
)
(:scoring
  10
)
)

(define (game game-id-511) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (in ?xxx agent)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?u - (either pillow doggie_bed yellow_cube_block))
        (at-end
          (between agent ?u ?u)
        )
      )
    )
  )
)
(:terminal
  (> 5 (* (count-once-per-objects preference1:pink) (count preference1:yellow_pyramid_block) 300 )
  )
)
(:scoring
  1
)
)

(define (game game-id-512) (:domain few-objects-room-v1)
(:setup
  (exists (?e - flat_block)
    (forall (?w - (either book cd) ?y - curved_wooden_ramp ?s ?j ?l - hexagonal_bin ?l - curved_wooden_ramp)
      (exists (?d - hexagonal_bin)
        (exists (?a - hexagonal_bin)
          (and
            (game-conserved
              (agent_holds rug)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?y - dodgeball)
        (then
          (once (not (not (touch ?y ?y) ) ) )
          (once-measure (on ?y agent) (distance ?y ?y) )
          (once (not (agent_holds ?y) ) )
        )
      )
    )
    (forall (?d - hexagonal_bin)
      (and
        (preference preference2
          (exists (?p ?y - blue_pyramid_block ?k - hexagonal_bin)
            (then
              (hold (exists (?v - block ?s - doggie_bed) (and (agent_holds pink) (adjacent_side ?k main_light_switch) ) ) )
              (once (in_motion ?d ?d) )
              (once (not (not (and (not (and (in_motion ?d ?d) (adjacent rug bed) (in_motion ?k ?k) (exists (?x - color) (touch ?x) ) ) ) (touch ?k ?k) (< (distance ?k room_center 2) (distance ?k 0)) ) ) ) )
            )
          )
        )
        (preference preference3
          (exists (?b - ball)
            (then
              (hold-while (on ?d) (not (on ?d ?b) ) (equal_z_position ?b) (on ?b) )
              (once (and (agent_holds bed) (on ?b) ) )
              (once (in_motion agent) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (- 10 )
  )
)
(:scoring
  7
)
)

(define (game game-id-513) (:domain medium-objects-room-v1)
(:setup
  (exists (?j - hexagonal_bin)
    (game-optional
      (and
        (or
          (agent_holds ?j ?j)
          (< 0.5 6)
        )
        (and
          (and
            (in_motion ?j)
            (and
              (agent_holds ?j)
              (and
                (on front ?j)
                (and
                  (not
                    (adjacent agent)
                  )
                  (not
                    (or
                      (not
                        (< (x_position ?j back) 1)
                      )
                      (in_motion ?j)
                    )
                  )
                )
              )
            )
          )
          (exists (?w - ball ?s - hexagonal_bin)
            (not
              (not
                (and
                  (and
                    (exists (?v - curved_wooden_ramp ?b - teddy_bear ?x - drawer)
                      (not
                        (agent_holds ?x)
                      )
                    )
                    (on ?s ?s)
                  )
                  (not
                    (in ?j)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?g - block)
        (then
          (hold-while (in_motion ?g) (and (in_motion ?g ?g) (forall (?x - hexagonal_bin) (< (distance room_center ?x) (distance ?g desk)) ) ) (in_motion agent ?g) )
          (hold-while (not (not (agent_holds ?g) ) ) (and (and (agent_holds ?g ?g) (and (in ?g) (and (agent_holds ?g ?g) (agent_holds ?g) ) ) ) (and (touch ?g ?g) (and (and (touch ?g) (agent_holds ?g) (on ?g ?g) (and (exists (?f - dodgeball ?s - game_object) (not (not (not (in_motion bed) ) ) ) ) (and (and (agent_holds ?g ?g) (adjacent ?g) ) (agent_holds agent) ) ) (adjacent ?g) (agent_holds green top_shelf) ) (agent_holds ?g) ) ) ) )
          (once (agent_holds agent) )
        )
      )
    )
    (forall (?v - building)
      (and
        (preference preference2
          (exists (?o - block)
            (at-end
              (and
                (agent_holds sideways)
                (on pink)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (not
      (or
        (<= (* 3 5 (count-once-per-external-objects preference2:basketball) )
          (and
            (count-once preference1:wall)
            50
          )
        )
        (or
          (> 4 (* 2 300 )
          )
        )
      )
    )
    (or
      (or
        (>= (* (count-once-per-objects preference2:green:beachball) (count-once-per-objects preference1:basketball) )
          (count preference1:alarm_clock:blue_pyramid_block)
        )
        (>= 3 (count-same-positions preference2:beachball) )
        (>= (= 3 (total-time) )
          (+ 1 4 )
        )
      )
      (>= (count-once-per-objects preference2:pink:brown) (count-once preference1:yellow_cube_block) )
    )
  )
)
(:scoring
  3
)
)

(define (game game-id-514) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (forall (?p - hexagonal_bin)
        (game-conserved
          (in ?p)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (then
        (once (agent_holds ?xxx ?xxx) )
        (hold (on ?xxx) )
        (once (not (agent_holds ?xxx) ) )
      )
    )
  )
)
(:terminal
  (<= (> 3 0 )
    3
  )
)
(:scoring
  7
)
)

(define (game game-id-515) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (and
      (exists (?d - triangular_ramp ?q - (either cd dodgeball golfball))
        (rug_color_under desk)
      )
      (not
        (in_motion ?xxx)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?g - wall)
        (at-end
          (not
            (not
              (adjacent_side rug ?g)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (* (count-once preference1:yellow) (* (count-overlapping preference1:dodgeball) (count preference1:green) )
        (total-time)
        (count preference1:pink_dodgeball)
      )
      (count-unique-positions preference1:golfball)
    )
    (>= (+ 1 (+ (count-unique-positions preference1:cube_block) (+ 2 4 )
        )
      )
      5
    )
  )
)
(:scoring
  (count preference1:purple)
)
)

(define (game game-id-516) (:domain medium-objects-room-v1)
(:setup
  (forall (?x - ball ?o - hexagonal_bin)
    (game-conserved
      (not
        (agent_holds ?o)
      )
    )
  )
)
(:constraints
  (and
    (forall (?r - (either cylindrical_block cd alarm_clock))
      (and
        (preference preference1
          (exists (?k ?w ?q ?n ?v ?p - game_object)
            (then
              (once (in_motion bed) )
              (once (not (exists (?u - (either key_chain)) (not (not (in ?u) ) ) ) ) )
              (once (in ?q) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?l - pyramid_block)
        (at-end
          (< (distance ?l ?l) 1)
        )
      )
    )
    (preference preference3
      (exists (?c - cube_block)
        (at-end
          (and
            (on ?c ?c)
            (in_motion ?c)
          )
        )
      )
    )
    (forall (?a - dodgeball)
      (and
        (preference preference4
          (exists (?z - bridge_block ?n - dodgeball)
            (then
              (once (adjacent ?a) )
              (once (not (and (exists (?f - block) (agent_holds ?n ?f) ) (not (in ?a ?a) ) ) ) )
              (once (in ?a) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count preference1:bed) (- (count-once-per-objects preference1:basketball) )
    )
    (> 50 (+ 2 (+ 3 )
        (= 2 (count preference3:yellow) (* 3 (and (count-shortest preference1:blue_cube_block) ) )
        )
      )
    )
  )
)
(:scoring
  6
)
)

(define (game game-id-517) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (and
      (and
        (on ?xxx)
        (on ?xxx ?xxx)
      )
      (not
        (in ?xxx)
      )
    )
  )
)
(:constraints
  (and
    (forall (?x - hexagonal_bin)
      (and
        (preference preference1
          (exists (?o ?l ?h ?c - ball ?k - game_object)
            (then
              (hold (object_orientation desk) )
              (hold (not (in_motion left) ) )
              (once (not (and (agent_holds ?k ?x) (not (not (agent_holds pink) ) ) (agent_holds ?k) (agent_holds front) ) ) )
            )
          )
        )
        (preference preference2
          (exists (?k - beachball)
            (then
              (once (and (not (not (not (agent_holds desk) ) ) ) (in_motion ?k) (= (distance ?x door) (distance bed ?k)) ) )
              (once (agent_holds ?k agent) )
              (once (not (in_motion ?x) ) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?x - game_object)
        (then
          (once (not (not (rug_color_under ?x) ) ) )
          (once (in_motion ?x agent) )
          (once (in ?x) )
          (hold (adjacent desk ?x) )
        )
      )
    )
    (preference preference4
      (exists (?z ?m - red_dodgeball)
        (then
          (hold (and (< 8 (distance agent 8)) (in agent ?z) ) )
          (hold (agent_holds ?z) )
          (once (on south_west_corner ?m) )
        )
      )
    )
    (preference preference5
      (exists (?k - cube_block)
        (then
          (hold-while (agent_holds ?k ?k) (and (between bed) (in_motion ?k) ) )
          (once (on agent) )
          (once (agent_holds ?k ?k) )
        )
      )
    )
    (forall (?p - drawer)
      (and
        (preference preference6
          (exists (?j - doggie_bed)
            (then
              (once (not (not (same_color ?j) ) ) )
              (hold (not (not (and (not (not (and (and (agent_holds ?p ?j) (and (agent_holds ?j) (in_motion ?p) (not (on ?j) ) (agent_holds ?p ?j) ) ) (and (adjacent ?j) (and (not (and (not (same_type ?j) ) (and (opposite ?p green) (not (agent_holds ?p ?p) ) ) ) ) (not (agent_holds ?p) ) ) (agent_holds agent) ) ) ) ) (in_motion ?j ?j) ) ) ) )
              (once (same_object ?p ?j) )
            )
          )
        )
      )
    )
    (forall (?h - game_object)
      (and
        (preference preference7
          (exists (?t - cube_block)
            (at-end
              (and
                (agent_holds ?h)
                (agent_holds ?h)
                (agent_holds ?t ?h)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (count preference1:doggie_bed) (* (* (count preference7) (* (count preference1:dodgeball:rug) 10 )
      )
      1
    )
  )
)
(:scoring
  (count-longest preference4:red)
)
)

(define (game game-id-518) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (in_motion ?xxx ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (then
        (once (on ?xxx) )
        (hold-while (in_motion agent ?xxx) (in_motion ?xxx) )
        (once-measure (exists (?p - hexagonal_bin ?w - dodgeball ?n - cube_block ?h - dodgeball) (on ?h) ) (distance ?xxx desk) )
      )
    )
    (forall (?d - cube_block)
      (and
        (preference preference2
          (then
            (once (exists (?w - (either dodgeball dodgeball) ?o - yellow_pyramid_block) (touch bed) ) )
            (hold (object_orientation ?d ?d) )
            (once (in_motion ?d agent) )
          )
        )
        (preference preference3
          (exists (?r - game_object ?m - doggie_bed)
            (then
              (hold (< 10 1) )
              (once (and (not (and (not (is_setup_object ?m) ) (not (not (and (< (distance ?m) (x_position )) (and (agent_holds ?m agent) (agent_holds ?d ?d) ) ) ) ) ) ) (in_motion ?m bed) ) )
              (hold (not (not (in_motion ?d agent) ) ) )
              (once (in_motion ?m) )
            )
          )
        )
      )
    )
    (preference preference4
      (exists (?d - curved_wooden_ramp)
        (then
          (once (in_motion ?d) )
          (hold (and (< 1 9) (in_motion ?d ?d) ) )
          (hold-to-end (or (same_color ?d ?d) (not (agent_holds ?d ?d) ) ) )
        )
      )
    )
    (preference preference5
      (exists (?v - hexagonal_bin ?j - dodgeball)
        (then
          (once (agent_holds ?j) )
          (hold (not (agent_holds ?j ?j) ) )
        )
      )
    )
    (preference preference6
      (exists (?u - dodgeball ?l ?e - dodgeball)
        (at-end
          (not
            (and
              (touch ?e ?l)
            )
          )
        )
      )
    )
    (preference preference7
      (exists (?r - ball)
        (then
          (once (not (agent_holds ?r) ) )
          (once (not (touch ?r) ) )
          (once (not (not (in_motion ?r ?r) ) ) )
          (once (not (not (exists (?c - building) (= 0 6 (distance ?r desk) (distance ?r agent)) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (< (* (+ (count preference7) (* (count preference4:red:dodgeball:dodgeball) 5 )
        )
        1
      )
      (count-once-per-objects preference6:pink_dodgeball)
    )
    (and
      (or
        (not
          (>= (+ 3 10 (count preference4:dodgeball) )
            (count preference4:yellow)
          )
        )
        (or
          (>= (>= (count-once-per-objects preference5) 1 )
            (count preference6:red:pink_dodgeball)
          )
          (< (count preference1:beachball) (* (external-forall-maximize (count preference7:yellow) ) (count preference3:pink:purple) 10 )
          )
          (> (count preference1:pink) (* 5 (external-forall-maximize 3 ) )
          )
          (>= 4 (* 2 2 (count preference7:pink:hexagonal_bin) )
          )
        )
      )
      (= (total-score) 300 )
      (> 8 (+ 2 (count preference5:green) )
      )
    )
  )
)
(:scoring
  (external-forall-minimize
    10
  )
)
)

(define (game game-id-519) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (or
      (not
        (in_motion rug ?xxx)
      )
      (in_motion ?xxx bed)
      (forall (?n - teddy_bear ?c - (either cellphone golfball) ?f ?w ?m - curved_wooden_ramp)
        (not
          (in_motion ?w)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?a - golfball ?c - hexagonal_bin)
        (then
          (once (and (not (not (exists (?o - flat_block) (not (on ?o ?c) ) ) ) ) (agent_holds ?c back) ) )
          (once (on ?c) )
          (once (and (agent_holds ?c agent) (in_motion rug ?c) ) )
          (once (adjacent ?c) )
          (once (not (in_motion tan rug) ) )
        )
      )
    )
    (preference preference2
      (exists (?d - curved_wooden_ramp ?q - cube_block)
        (then
          (hold (adjacent ?q) )
          (hold (exists (?s - (either blue_cube_block golfball)) (object_orientation ?s) ) )
          (once (= 1 1 (distance ?q ?q)) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (count-increasing-measure preference1:pink:basketball) )
)
(:scoring
  3
)
)

(define (game game-id-520) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (and
      (agent_holds door)
      (same_type ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?o - hexagonal_bin)
        (then
          (once (in_motion ?o ?o) )
          (hold (in_motion ?o ?o) )
          (hold (not (in_motion ?o ?o) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-longest preference1:basketball) (+ (count-overlapping preference1) (or (* (* (external-forall-maximize (+ (+ (total-time) 10 )
                (* (count preference1:dodgeball) (count-increasing-measure preference1:blue_dodgeball) (* (count preference1:beachball) 4 )
                )
                2
              )
            )
            4
          )
          7
          50
          1
          (count preference1:basketball:dodgeball)
          (and
            (count preference1:pink_dodgeball)
            7
            (count-once preference1:yellow)
          )
          3
          1
          (count-once-per-objects preference1:dodgeball:basketball)
          2
          (count preference1:hexagonal_bin)
          (count preference1:blue_dodgeball)
        )
        2
      )
      5
      2
      2
    )
  )
)
(:scoring
  (* (* (count preference1) (total-time) (* (count-shortest preference1:blue_cube_block:hexagonal_bin) (count preference1:dodgeball) )
      (count preference1:hexagonal_bin)
    )
    4
  )
)
)

(define (game game-id-521) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (not
      (and
        (and
          (in ?xxx)
          (agent_holds desk ?xxx)
        )
        (on ?xxx ?xxx ?xxx)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?t - building)
        (at-end
          (and
            (and
              (not
                (same_object ?t ?t)
              )
              (not
                (not
                  (in ?t ?t)
                )
              )
            )
            (<= 2 9)
          )
        )
      )
    )
    (preference preference2
      (exists (?u - dodgeball)
        (then
          (once (not (and (on ?u) (not (agent_holds ?u ?u) ) ) ) )
          (once (and (not (in_motion ?u) ) ) )
          (hold (and (not (or (and (in_motion ?u ?u) (not (touch ?u) ) ) (agent_holds ?u) ) ) (not (agent_holds ?u) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 10 (count-once-per-objects preference1:blue_dodgeball) (count-once-per-objects preference1:basketball) 1 (* (count-once-per-objects preference2:beachball) (count preference2:block) )
      1
      (and
        (external-forall-maximize
          10
        )
      )
      (* (count preference2:golfball) 50 )
      (* (+ (count preference1:dodgeball) 0 )
        4
      )
      (+ (count preference2:tan) (- (* (count-once-per-objects preference2:golfball) (* (+ 5 (count preference2:cube_block) )
              3
            )
          )
        )
      )
      (* (* (* (* (* (* (* (* (total-score) 7 )
                    (count preference1:beachball:basketball)
                  )
                  4
                )
                (count preference2)
                (count-longest preference1:beachball:golfball:dodgeball)
              )
              5
            )
            (count-once-per-objects preference1:yellow_cube_block)
          )
          (count preference2:dodgeball:tan)
        )
        (* 9 (and 1 (count preference2:basketball) (* (+ (count-once-per-objects preference1:pyramid_block) (+ (count-once-per-objects preference1:hexagonal_bin) (* 2 10 10 )
                )
                3
                (* (* (* 2 (* (* (count preference1:pink) 100 )
                        (* (count preference2:pink:triangle_block:dodgeball) (* 3 10 )
                          (- 3 )
                          (count-once-per-external-objects preference1:dodgeball)
                          3
                        )
                      )
                    )
                    (* (count preference2:cylindrical_block) (* (total-score) (count preference2:side_table) )
                      (= 2 10 )
                      (count-once-per-external-objects preference1:basketball)
                    )
                    (count-once-per-objects preference2:red)
                  )
                  (count-once-per-objects preference1:dodgeball)
                )
              )
              2
            )
          )
        )
      )
      (* (count preference2:yellow) 1 )
    )
    10
  )
)
(:scoring
  (count preference1)
)
)

(define (game game-id-522) (:domain few-objects-room-v1)
(:setup
  (exists (?u - block)
    (forall (?b - hexagonal_bin)
      (and
        (and
          (and
            (game-optional
              (agent_holds ?u)
            )
            (and
              (game-conserved
                (in_motion ?b)
              )
            )
          )
          (and
            (and
              (game-conserved
                (not
                  (agent_holds ?b)
                )
              )
            )
            (exists (?s - hexagonal_bin ?w - doggie_bed)
              (game-conserved
                (not
                  (on brown bed ?b)
                )
              )
            )
          )
        )
        (exists (?t - hexagonal_bin)
          (exists (?n - block)
            (game-optional
              (on ?u ?b)
            )
          )
        )
        (or
          (and
            (game-conserved
              (exists (?j - hexagonal_bin)
                (and
                  (agent_holds agent agent)
                  (in_motion rug)
                )
              )
            )
          )
          (exists (?n - hexagonal_bin ?n - yellow_cube_block)
            (and
              (game-optional
                (on ?b ?n)
              )
              (and
                (and
                  (game-optional
                    (adjacent_side ?b ?u)
                  )
                )
                (game-conserved
                  (adjacent_side pink)
                )
              )
              (and
                (game-conserved
                  (in_motion ?b ?b)
                )
                (game-conserved
                  (adjacent_side ?n ?u)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?x ?j - cube_block)
        (then
          (once (agent_holds ?j) )
          (hold (in_motion ?x ?x) )
          (once (agent_holds ?j) )
        )
      )
    )
    (preference preference2
      (exists (?i - block)
        (then
          (hold (agent_holds ?i) )
          (hold (< 2 10) )
          (hold (in_motion ?i ?i) )
        )
      )
    )
    (preference preference3
      (exists (?g - (either dodgeball yellow_cube_block) ?v - curved_wooden_ramp)
        (then
          (hold (agent_holds ?v ?v) )
        )
      )
    )
  )
)
(:terminal
  (> (count-once-per-objects preference1:pink_dodgeball) (* 3 3 )
  )
)
(:scoring
  (* (count preference2:golfball:pink) (* (external-forall-maximize (count-once-per-objects preference3:dodgeball) ) (* 100 7 )
    )
  )
)
)

(define (game game-id-523) (:domain many-objects-room-v1)
(:setup
  (exists (?u - (either dodgeball book))
    (exists (?n - doggie_bed ?i - ball)
      (game-conserved
        (not
          (not
            (or
              (touch ?i)
              (not
                (not
                  (exists (?r - dodgeball ?z - ball ?b - triangular_ramp ?a - hexagonal_bin)
                    (not
                      (agent_holds ?a)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?u - ball)
        (then
          (hold (and (in_motion pink_dodgeball) (or (agent_holds agent ?u) (not (toggled_on ?u) ) ) ) )
          (once (in_motion ?u ?u) )
          (once (< 3 5) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-once-per-external-objects preference1:purple) (count-measure preference1:purple) )
    (>= 5 2 )
  )
)
(:scoring
  (count-total preference1:basketball)
)
)

(define (game game-id-524) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (and
        (and
          (and
            (exists (?c - red_pyramid_block ?r - hexagonal_bin)
              (and
                (game-conserved
                  (not
                    (agent_holds ?r)
                  )
                )
                (game-conserved
                  (in_motion ?r)
                )
                (and
                  (and
                    (exists (?g - (either cd bridge_block golfball))
                      (forall (?p ?c - sliding_door ?e - hexagonal_bin ?e - cylindrical_block ?u - hexagonal_bin ?h - cube_block)
                        (and
                          (and
                            (not
                              (and
                                (exists (?e - wall)
                                  (game-optional
                                    (and
                                      (not
                                        (on ?r ?r)
                                      )
                                    )
                                  )
                                )
                              )
                            )
                            (game-conserved
                              (in ?h)
                            )
                            (forall (?v - block)
                              (game-conserved
                                (agent_holds ?g)
                              )
                            )
                          )
                          (game-conserved
                            (in ?h ?g)
                          )
                        )
                      )
                    )
                  )
                  (not
                    (forall (?g - game_object)
                      (or
                        (and
                          (game-conserved
                            (and
                              (in_motion ?r)
                            )
                          )
                        )
                        (and
                          (game-optional
                            (agent_holds ?r)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
          (and
            (game-optional
              (and
                (agent_holds ?xxx ?xxx)
                (< (distance ?xxx 9) (distance ))
              )
            )
            (exists (?n - (either floor cellphone) ?c - (either dodgeball key_chain))
              (and
                (game-optional
                  (on bed ?c)
                )
                (game-optional
                  (and
                    (touch ?c)
                    (in_motion ?c bed)
                  )
                )
                (game-optional
                  (on ?c)
                )
                (and
                  (exists (?f ?i ?t ?k ?j ?w ?e ?q ?a ?u - hexagonal_bin ?k - hexagonal_bin ?f - chair ?d - cube_block)
                    (and
                      (and
                        (game-conserved
                          (and
                            (and
                              (and
                                (in_motion ?d ?d)
                                (> 5 (distance 4 door))
                              )
                              (in_motion ?c)
                            )
                            (touch ?d ?d)
                          )
                        )
                      )
                    )
                  )
                  (game-conserved
                    (on ?c)
                  )
                  (and
                    (exists (?t - (either dodgeball bridge_block) ?z - ball)
                      (exists (?i - (either pink) ?v - curved_wooden_ramp)
                        (and
                          (game-optional
                            (in_motion ?v)
                          )
                          (exists (?o - ball)
                            (exists (?u - cube_block ?y - cube_block)
                              (and
                                (forall (?f - teddy_bear)
                                  (exists (?m - teddy_bear)
                                    (exists (?s - ball ?i - drawer)
                                      (not
                                        (game-optional
                                          (agent_holds ?y ?o)
                                        )
                                      )
                                    )
                                  )
                                )
                                (game-optional
                                  (or
                                    (in_motion ?z)
                                    (< (distance front 1) (distance 3 ?o))
                                  )
                                )
                              )
                            )
                          )
                          (and
                            (game-optional
                              (and
                                (agent_holds ?c ?v)
                                (and
                                  (agent_holds ?z)
                                  (object_orientation ?z)
                                  (and
                                    (not
                                      (in ?v)
                                    )
                                    (exists (?s - shelf)
                                      (and
                                        (in ?v)
                                        (in_motion ?s pillow)
                                        (on agent desk)
                                        (agent_holds ?s ?v)
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                          (and
                            (game-conserved
                              (adjacent ?z ?v)
                            )
                          )
                          (exists (?m - triangular_ramp ?i - hexagonal_bin)
                            (game-conserved
                              (< (distance ?z desk) (distance ?c ?v))
                            )
                          )
                        )
                      )
                    )
                    (game-conserved
                      (agent_holds ?c)
                    )
                    (game-optional
                      (not
                        (agent_holds agent)
                      )
                    )
                  )
                )
                (game-conserved
                  (not
                    (and
                      (not
                        (in_motion ?c)
                      )
                      (on ?c ?c)
                      (> (distance ?c bed) 1)
                      (on agent)
                      (is_setup_object ?c)
                      (not
                        (in_motion ?c)
                      )
                    )
                  )
                )
              )
            )
            (game-conserved
              (and
                (game_over bed)
                (not
                  (agent_holds ?xxx)
                )
                (< 0.5 3)
              )
            )
          )
          (or
            (forall (?h - game_object)
              (game-optional
                (or
                  (not
                    (same_color ?h)
                  )
                  (> 1 0.5)
                  (or
                    (same_color ?h ?h)
                    (and
                      (in_motion ?h ?h)
                      (agent_holds ?h ?h)
                    )
                    (in_motion ?h)
                  )
                )
              )
            )
          )
        )
        (and
          (exists (?c ?j ?s - block ?b - (either teddy_bear golfball) ?b - game_object)
            (game-conserved
              (not
                (not
                  (not
                    (and
                      (in_motion green_golfball ?b)
                      (is_setup_object ?b ?b)
                    )
                  )
                )
              )
            )
          )
        )
      )
      (exists (?y - ball)
        (exists (?x - hexagonal_bin)
          (forall (?p - wall)
            (and
              (game-conserved
                (not
                  (touch ?y)
                )
              )
              (game-conserved
                (agent_holds ?x)
              )
            )
          )
        )
      )
    )
    (exists (?v - ball ?s ?h - (either golfball pyramid_block))
      (game-conserved
        (and
          (touch rug)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?u - teddy_bear)
        (then
          (once (in ?u agent) )
          (hold (>= (distance ?u ?u) 2) )
          (hold (agent_holds ?u) )
        )
      )
    )
    (preference preference2
      (exists (?k - hexagonal_bin ?d - shelf)
        (then
          (hold (< (distance 5 8) (distance ?d ?d)) )
          (hold (and (and (not (in_motion ?d) ) (agent_holds ?d ?d) (in_motion ?d) (not (in_motion ?d) ) ) (on ?d ?d) (and (and (or (not (not (and (rug_color_under ?d ?d) (and (not (on north_wall ?d) ) (agent_holds ?d) ) ) ) ) (not (>= (distance ?d green_golfball) 3) ) (agent_holds ?d) ) (and (and (agent_holds ?d ?d) (not (and (not (in_motion ?d ?d) ) (not (same_color ?d) ) ) ) ) (and (< 1 1) (in top_shelf) ) ) ) (= 1 1) ) ) )
          (once (agent_holds ?d) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (* (* 9 (and (count preference1:red:basketball) 5 ) (+ (count-once-per-objects preference2:basketball:doggie_bed:dodgeball) (count preference1:yellow) 50 )
          (count-once-per-objects preference2:doggie_bed:hexagonal_bin)
          (count preference1:yellow)
          (count-once-per-objects preference2:hexagonal_bin)
        )
        8
      )
      (count preference1:yellow_cube_block:green)
    )
  )
)
(:scoring
  (count-once-per-objects preference2:blue_dodgeball)
)
)

(define (game game-id-525) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (forall (?h - doggie_bed ?n ?x - ball)
        (and
          (game-optional
            (on rug)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?u - ball ?s - ball)
        (then
          (hold (and (agent_holds ?s ?s) (in ?s ?s) ) )
          (once (in_motion ?s ?s) )
          (once (agent_holds ?s ?s) )
        )
      )
    )
    (forall (?d - tan_cube_block)
      (and
        (preference preference2
          (then
            (once (not (< (distance ?d ?d) 1) ) )
            (once (not (on ?d ?d) ) )
            (hold (not (agent_holds ?d desk) ) )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (not
      (>= (total-time) 4 )
    )
    (or
      (not
        (= 2 3 )
      )
      (or
        (>= (total-time) (+ 300 (count-once-per-objects preference2) )
        )
        (or
          (>= (count-once-per-external-objects preference1:golfball:pink) (count-once-per-objects preference1:rug:dodgeball) )
        )
        (or
          (>= 5 1 )
          (>= (* (count preference2:dodgeball) 300 )
            (* 2 3 )
          )
        )
      )
      (> 5 (* (count preference2:basketball) (count-once-per-objects preference2:blue_pyramid_block:book) )
      )
    )
  )
)
(:scoring
  (external-forall-minimize
    (* (count-once-per-objects preference1:beachball) 1 )
  )
)
)

(define (game game-id-526) (:domain few-objects-room-v1)
(:setup
  (and
    (game-conserved
      (is_setup_object ?xxx)
    )
    (game-conserved
      (not
        (in ?xxx ?xxx)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?x - (either pink pink))
        (then
          (hold (not (agent_holds ?x floor) ) )
          (once (in_motion ?x ?x) )
          (once (agent_holds agent ?x) )
        )
      )
    )
  )
)
(:terminal
  (>= 4 (external-forall-maximize 3 ) )
)
(:scoring
  5
)
)

(define (game game-id-527) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (not
      (on top_drawer)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?c - teddy_bear)
        (at-end
          (and
            (and
              (agent_holds sideways ?c)
              (in_motion ?c)
              (not
                (in_motion ?c)
              )
            )
            (not
              (not
                (in_motion ?c)
              )
            )
            (not
              (< 1 1)
            )
          )
        )
      )
    )
    (forall (?c - red_dodgeball)
      (and
        (preference preference2
          (then
            (once (not (not (and (and (opposite ?c) (rug_color_under ?c agent) ) (not (agent_holds ?c) ) ) ) ) )
            (once (> 6 1) )
            (once (and (and (and (< (distance ?c ?c) 1) (not (adjacent rug ?c) ) ) (or (and (and (adjacent ?c ?c) (and (same_color ?c) (agent_holds ?c agent) ) ) (and (and (and (adjacent ?c) (on ?c) ) (agent_holds ?c) ) (and (forall (?m - (either laptop)) (and (exists (?a - chair) (and (same_color ?m agent rug) (not (not (not (agent_holds front) ) ) ) (agent_holds ?c ?a) ) ) (in_motion ?c ?m) ) ) (and (adjacent ?c) (in_motion ?c ?c) ) ) ) ) ) (and (in ?c ?c ?c) (and (and (adjacent ?c) ) (and (in_motion ?c) (in blue ?c) ) ) ) (same_color rug) ) (< 0 (distance agent ?c)) ) )
          )
        )
      )
    )
  )
)
(:terminal
  (<= (>= (* (count preference1:basketball) (count-once-per-objects preference2:basketball) )
      (count preference1:yellow)
    )
    (count-once-per-objects preference1:yellow:basketball)
  )
)
(:scoring
  (+ (total-time) 1 )
)
)

(define (game game-id-528) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?r - doggie_bed ?t - dodgeball)
      (game-optional
        (in desk)
      )
    )
  )
)
(:constraints
  (and
    (forall (?z - cube_block)
      (and
        (preference preference1
          (exists (?g - hexagonal_bin ?p - hexagonal_bin ?t - block)
            (then
              (once (in_motion ) )
              (once (and (< 3 (distance ?t ?t)) (on ?z ?t) ) )
              (once (agent_holds ?t rug) )
            )
          )
        )
        (preference preference2
          (exists (?d - dodgeball ?f - building ?j - hexagonal_bin ?t - block)
            (then
              (hold-while (and (on rug) (and (in ?t ?t) (agent_holds ?t) (in_motion ?t ?t ?t ?t) ) ) (and (and (agent_holds ?z ?t) (in_motion ?t) ) (and (in_motion ?z ?t) (in ?z ?z) (agent_holds agent) ) ) (adjacent agent rug) )
              (hold (is_setup_object ?t agent) )
              (once (and (in_motion green_golfball) (agent_holds ?z ?t) ) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?i - yellow_pyramid_block)
        (then
          (once (agent_holds ?i) )
          (once (and (in_motion ?i ?i) (not (adjacent agent ?i) ) ) )
          (once (in_motion ?i ?i) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count preference3:golfball:white) 50 (count preference1:alarm_clock) )
    (+ 9 )
  )
)
(:scoring
  50
)
)

(define (game game-id-529) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (and
      (and
        (agent_holds brown ?xxx)
        (in_motion ?xxx ?xxx)
      )
      (agent_holds ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?t - wall)
        (then
          (once (and (on green) (same_color ?t ?t) (on ?t) ) )
          (forall-sequence (?h - ball ?p - hexagonal_bin)
            (then
              (once (agent_holds ?t) )
              (hold-while (and (in_motion ?p ?t) (and (forall (?g - building ?a - hexagonal_bin ?h - game_object ?x - dodgeball) (and (in_motion ?t) (not (not (not (in_motion ?t ?x) ) ) ) ) ) (on ?t ?t) ) (not (and (in_motion ?t ?t) (and (agent_holds ?p ?t) (on rug) ) ) ) (and (not (in ?p) ) (not (and (not (touch ?t ?t) ) (agent_holds ?p) ) ) ) ) (not (in ?p) ) )
              (hold (on ?t ?p) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?z - hexagonal_bin)
        (then
          (once (and (exists (?b - hexagonal_bin ?d - shelf ?u - curved_wooden_ramp ?i - block) (faces ?z) ) (agent_holds floor desk) ) )
          (once (and (in ?z) (exists (?h - hexagonal_bin ?l - desk_shelf) (not (adjacent_side ?z) ) ) (in_motion ?z) ) )
          (hold (agent_holds ?z) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-once-per-objects preference2:dodgeball:pink) (* (count-unique-positions preference1:doggie_bed) 5 (+ (count preference1:orange) (external-forall-maximize (count-once-per-objects preference1:blue_cube_block:dodgeball) ) )
      )
    )
    (> (* (- 10 (count-once-per-objects preference1) ) 12 )
      (count-once-per-objects preference1:blue_dodgeball:basketball)
    )
    (>= (= (- (external-forall-minimize (total-score) ) )
        (count-same-positions preference2:pink)
      )
      15
    )
  )
)
(:scoring
  (count-once-per-objects preference1:basketball:golfball)
)
)

(define (game game-id-530) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (not
      (agent_holds ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?r - triangular_ramp)
        (then
          (hold (not (agent_holds ?r front) ) )
          (once (in ?r) )
          (once (< 3 6) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* (count-once preference1:pink) 100 )
      (count preference1:blue_cube_block)
    )
    (or
      (not
        (or
          (= (* 1 (= 4 2 )
              (* 10 (count-once-per-objects preference1:hexagonal_bin) )
            )
            (* (count-once-per-objects preference1:yellow) (* (count-once-per-objects preference1:yellow:green) 5 )
            )
          )
          (<= 5 (count-once-per-objects preference1:pink) )
        )
      )
      (>= (count preference1:pink) 6 )
    )
    (< (* (count-once-per-objects preference1:basketball) (count-once preference1:blue_cube_block) )
      (* (* (count preference1) (- (count preference1:basketball) )
        )
        (count preference1:dodgeball)
      )
    )
  )
)
(:scoring
  8
)
)

(define (game game-id-531) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?a - ball)
      (game-conserved
        (not
          (not
            (above ?a)
          )
        )
      )
    )
    (exists (?q - curved_wooden_ramp ?x - building ?z - beachball)
      (game-conserved
        (agent_holds ?z)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?b - (either alarm_clock alarm_clock))
        (then
          (hold (game_over ?b) )
        )
      )
    )
    (preference preference2
      (exists (?d - hexagonal_bin)
        (then
          (hold-while (= (distance ?d desk) (distance ?d ?d)) (and (and (and (and (not (and (rug_color_under ?d ?d) (in ?d ?d) ) ) (not (in ?d) ) (< 2 (distance door room_center)) ) (and (in_motion ?d) (and (<= 1 (distance )) (agent_holds ?d) ) (and (agent_holds ?d) (and (and (in_motion ?d) (not (agent_holds ?d) ) ) (in_motion ?d ?d) ) (agent_holds ?d) ) ) ) (in_motion agent ?d) ) (in ?d) (on green_golfball ?d) ) (agent_holds ?d) )
          (forall-sequence (?x - block ?e - wall)
            (then
              (hold-while (on rug) (rug_color_under ?e ?d ?d) )
              (hold (in ?d) )
              (hold (and (agent_holds ?e ?e) (and (> (distance agent ?e) (distance ?d ?e)) (in ?e rug) ) ) )
            )
          )
          (once (agent_holds floor ?d) )
        )
      )
    )
    (preference preference3
      (exists (?y - teddy_bear ?q - beachball)
        (then
          (once (not (in door ?q) ) )
          (once (agent_holds ?q ?q) )
          (once (in_motion ?q) )
        )
      )
    )
    (preference preference4
      (exists (?u - (either cellphone laptop) ?v - (either credit_card desktop))
        (then
          (once (in_motion south_wall) )
          (once (not (forall (?c - (either blue_cube_block cd desktop)) (not (and (not (not (in_motion ?c) ) ) (not (agent_holds ?c agent) ) ) ) ) ) )
          (once (adjacent blue ?v ?v) )
        )
      )
    )
  )
)
(:terminal
  (>= 4 (count-once-per-objects preference4:dodgeball) )
)
(:scoring
  (- (count preference1:beachball:orange) )
)
)

(define (game game-id-532) (:domain medium-objects-room-v1)
(:setup
  (forall (?w - doggie_bed)
    (game-conserved
      (not
        (touch ?w ?w)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?e - building)
        (then
          (hold (and (and (same_color ?e ?e) (forall (?t - ball ?m - shelf ?n ?y ?t - chair) (in desk ?t) ) ) (agent_holds ?e ?e) ) )
          (once (agent_holds ?e ?e) )
          (once (in ?e) )
        )
      )
    )
    (preference preference2
      (then
        (hold (agent_holds ?xxx) )
      )
    )
  )
)
(:terminal
  (not
    (or
      (>= (count-longest preference2:cube_block) (count-measure preference2:beachball:red) )
      (not
        (> (- (total-score) )
          (count-once-per-objects preference2:dodgeball)
        )
      )
      (<= 5 (count preference2:block) )
    )
  )
)
(:scoring
  (count-measure preference1:basketball:basketball)
)
)

(define (game game-id-533) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (and
      (in_motion front)
      (in ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (then
        (forall-sequence (?l - (either basketball cd laptop credit_card cellphone pen dodgeball))
          (then
            (hold (game_over ?l ?l) )
            (once (agent_holds ?l) )
            (once (and (< 1 (distance ?l 0)) (and (agent_holds ?l ?l) (in_motion ?l) (and (in_motion ?l) (< 9 1) ) ) ) )
          )
        )
        (hold (not (adjacent ?xxx) ) )
        (forall-sequence (?f - (either pyramid_block golfball))
          (then
            (once (adjacent ) )
            (hold (and (exists (?x - hexagonal_bin ?r - (either book golfball cd lamp book)) (not (touch ?r) ) ) (and (agent_holds ?f ?f) (and (and (agent_holds ?f) (not (adjacent ?f ?f) ) ) (and (in_motion floor) (not (or (not (same_color bed ?f) ) (agent_holds ?f) (touch ?f) (in_motion pillow ?f) ) ) ) ) (and (not (not (not (and (on ?f) (agent_holds upright) ) ) ) ) (in_motion ?f ?f) ) ) (and (object_orientation ?f) (in ?f) ) ) )
            (hold-while (in_motion ?f ?f) (and (in_motion ?f) (in_motion green_golfball desk) ) (on ?f) (adjacent ?f) )
          )
        )
      )
    )
    (forall (?w - teddy_bear ?u - dodgeball)
      (and
        (preference preference2
          (exists (?a - cube_block)
            (then
              (hold (adjacent ?a floor) )
              (hold (in ?u) )
              (once (< (distance 10 ?u) 6) )
            )
          )
        )
      )
    )
    (forall (?y - book)
      (and
        (preference preference3
          (exists (?x - building ?g - curved_wooden_ramp)
            (then
              (hold (same_color ?y) )
              (once (in_motion ?y) )
              (hold-while (agent_holds ?g) (agent_holds ?g) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (= 3 5 )
)
(:scoring
  (* (* (* (count preference1:beachball) 10 )
      (count-once-per-objects preference1:blue)
    )
    (count-once-per-objects preference1:tall_cylindrical_block)
  )
)
)

(define (game game-id-534) (:domain few-objects-room-v1)
(:setup
  (forall (?w - golfball)
    (game-conserved
      (agent_holds ?w)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?i - doggie_bed)
        (then
          (once (and (and (or (adjacent ?i agent) (adjacent ?i) ) (in ?i ?i) ) (on ?i ?i) ) )
          (hold (rug_color_under ?i) )
          (once (touch agent) )
        )
      )
    )
    (forall (?f - dodgeball)
      (and
        (preference preference2
          (exists (?j - hexagonal_bin ?w - beachball ?a - dodgeball)
            (then
              (once (and (in ?f) (and (agent_holds ?a ?a) (and (and (and (not (not (and (agent_holds ?f) (on ?a ?f) ) ) ) (agent_holds ?a) ) (agent_holds agent) (not (agent_holds ?a) ) (not (and (in_motion bridge_block) (agent_holds agent ?a) ) ) (in_motion ?a) (not (in ?a ?a) ) ) (adjacent ?f) ) ) ) )
              (once-measure (same_color ?f rug) (distance_side ?f ?a) )
              (once (in ?f) )
            )
          )
        )
        (preference preference3
          (exists (?i - (either dodgeball yellow_cube_block) ?n - hexagonal_bin ?v - hexagonal_bin)
            (then
              (once (in_motion rug agent) )
              (once (not (agent_holds ?f ?v) ) )
              (once (in_motion ?v ?v) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once preference1:dodgeball) (count-once-per-objects preference3:pyramid_block) )
)
(:scoring
  (count preference2:golfball)
)
)

(define (game game-id-535) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (not
      (not
        (not
          (and
            (agent_holds bed ?xxx)
            (in ?xxx ?xxx)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?d - (either chair top_drawer))
        (then
          (hold-while (not (> (distance door ?d) 1) ) (agent_holds ?d) (on ?d) )
          (hold (and (in_motion bed) (and (in_motion ?d ?d) (touch ?d ?d) (agent_holds ?d ?d) (on ?d) ) (and (and (agent_holds ?d) (in_motion floor) ) (on bed ?d) (on ?d) ) (agent_holds agent) (not (in_motion ?d) ) (and (and (in_motion ?d ?d) (in_motion ?d) ) (and (and (same_type rug ?d) (on ?d) ) (and (agent_holds ?d ?d) (and (not (and (and (agent_holds ?d) (opposite ?d ?d ?d) ) (or (touch ?d) (not (and (and (not (and (in_motion door) (agent_holds ?d) ) ) (in ?d) (adjacent ?d) (exists (?h - curved_wooden_ramp ?s - cube_block) (and (same_color ?s) (or (and (in_motion ?s) (not (agent_holds ?d) ) ) ) ) ) ) (not (and (not (forall (?y - doggie_bed) (and (exists (?n - sliding_door) (in_motion ?y agent) ) (agent_holds ?d) ) ) ) (agent_holds ?d ?d) ) ) (not (and (agent_holds ?d) (agent_holds ?d ?d rug) ) ) ) ) (>= (distance ?d green_golfball) 1) ) ) ) (not (agent_holds ?d) ) (in_motion rug ?d) (not (faces bed) ) (agent_holds ?d agent) (and (not (not (and (in_motion ?d ?d) (not (in_motion floor ?d) ) ) ) ) (in_motion ?d) (in_motion ?d ?d) ) (on ?d) (exists (?r - dodgeball) (and (not (in_motion ?d) ) (and (not (exists (?y - (either alarm_clock golfball dodgeball) ?m ?n - drawer) (in_motion ?d) ) ) (in_motion ?d ?d) ) (and (not (in ?d) ) (in_motion ?d ?d) ) ) ) (agent_holds ?d) (same_color back) (same_object ?d ?d) (adjacent ?d) ) ) ) ) (not (agent_holds ?d ?d) ) (agent_holds ?d) ) )
          (once (and (not (agent_holds ?d) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (count-once-per-objects preference1:dodgeball:dodgeball) )
)
(:scoring
  (count preference1:red:orange)
)
)

(define (game game-id-536) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (and
      (agent_holds ?xxx)
      (exists (?a - (either cylindrical_block cube_block flat_block) ?y - curved_wooden_ramp ?n - doggie_bed)
        (in door)
      )
      (in_motion ?xxx ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?b - ball ?w - curved_wooden_ramp)
        (at-end
          (in_motion ?w)
        )
      )
    )
    (preference preference2
      (exists (?m - game_object)
        (then
          (once (in_motion ?m ?m) )
          (once (in_motion ?m) )
          (once (in_motion ?m ?m) )
        )
      )
    )
  )
)
(:terminal
  (>= (external-forall-maximize (* (count-once-per-objects preference1:dodgeball) (count preference2:golfball) )
    )
    (* 50 2 )
  )
)
(:scoring
  (external-forall-minimize
    (- (count preference1:basketball) )
  )
)
)

(define (game game-id-537) (:domain many-objects-room-v1)
(:setup
  (forall (?x - hexagonal_bin ?w - (either dodgeball))
    (game-conserved
      (and
        (and
          (in_motion ?w)
          (and
            (not
              (< (distance 2 2) 1)
            )
            (or
              (in_motion agent ?w)
              (in_motion ?w)
            )
          )
        )
        (not
          (not
            (in ?w floor)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?e - wall)
      (and
        (preference preference1
          (exists (?i - (either desktop doggie_bed))
            (then
              (once (not (in_motion rug ?i) ) )
              (hold (agent_holds ?i) )
              (hold (in ?e ?e) )
            )
          )
        )
      )
    )
    (forall (?h - (either tall_cylindrical_block teddy_bear))
      (and
        (preference preference2
          (exists (?j - building)
            (then
              (hold-while (not (not (and (not (agent_holds ?h) ) (not (agent_holds ?j) ) ) ) ) (in_motion ?h blue) (agent_holds rug ?j ?h) )
              (once (agent_holds ?h) )
              (hold (not (in ?h) ) )
            )
          )
        )
        (preference preference3
          (exists (?k - (either golfball red) ?r - cube_block)
            (then
              (once (adjacent ?h) )
              (hold-while (and (agent_holds ?r ?h) (and (not (not (above desk) ) ) ) ) (agent_holds ?r ?h) )
              (once (not (on ?h) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 6 (count-once-per-objects preference3:basketball) )
)
(:scoring
  (count preference1:dodgeball)
)
)

(define (game game-id-538) (:domain few-objects-room-v1)
(:setup
  (and
    (game-conserved
      (in_motion ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?z - (either pyramid_block alarm_clock))
        (then
          (once (and (forall (?h - (either cellphone hexagonal_bin lamp mug)) (and (not (and (and (adjacent ?z) (> (distance ?h) 6) (in_motion ?z ?z) (adjacent ?h) (in_motion ?z) (and (in_motion ?z) (and (agent_holds ?z) (agent_holds ?z pink_dodgeball) ) (not (agent_holds desk) ) ) ) (agent_holds ?h) ) ) (touch ?z bed) ) ) (and (not (and (agent_holds floor) (in_motion ?z) ) ) (and (adjacent ?z) (exists (?u - doggie_bed) (rug_color_under ?z bed) ) ) ) ) )
          (once (and (adjacent ?z) (on ?z) ) )
          (once (and (not (exists (?e - block) (not (on rug) ) ) ) (not (and (not (in_motion ?z) ) (adjacent ?z) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (* (= (total-score) 8 )
        9
      )
      5
    )
    4
  )
)
(:scoring
  (count-once-per-objects preference1:brown)
)
)

(define (game game-id-539) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (exists (?a - hexagonal_bin)
        (and
          (game-conserved
            (or
              (on ?a)
              (on bed)
            )
          )
          (and
            (game-conserved
              (in agent ?a)
            )
            (exists (?y - hexagonal_bin)
              (and
                (and
                  (game-conserved
                    (> (distance 9 agent) 1)
                  )
                )
              )
            )
          )
        )
      )
      (or
        (game-optional
          (< (distance ?xxx agent) 1)
        )
      )
      (game-optional
        (same_type ?xxx)
      )
    )
  )
)
(:constraints
  (and
    (forall (?k - hexagonal_bin ?l - game_object)
      (and
        (preference preference1
          (exists (?w - ball ?e - (either block doggie_bed))
            (at-end
              (equal_z_position ?l bed)
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?d - red_dodgeball)
        (at-end
          (not
            (and
              (on ?d)
              (agent_holds ?d ?d)
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?b - (either desktop pyramid_block))
        (then
          (once (in_motion blue) )
          (once (and (and (in_motion ?b ?b) (agent_holds ?b ?b) ) (agent_holds ?b ?b) (and (agent_holds ?b ?b) (>= (distance ) (distance 7 ?b)) ) ) )
          (hold (< (distance 2 ?b) 1) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= 40 (= (count-unique-positions preference2:pink_dodgeball) (count-once-per-objects preference2:green) )
      )
      (not
        (and
          (>= 3 15 )
          (< 5 (* 7 18 )
          )
        )
      )
    )
    (= (* (and (count-shortest preference2:rug) ) (* (* 2 5 )
          (* 2 25 )
          50
          (count preference1:book)
          5
          (- (/ 10 6 ) )
        )
      )
      4
    )
  )
)
(:scoring
  (count-once-per-objects preference2:basketball)
)
)

(define (game game-id-540) (:domain many-objects-room-v1)
(:setup
  (exists (?l - (either dodgeball basketball) ?e - teddy_bear)
    (and
      (game-conserved
        (agent_holds ?e)
      )
    )
  )
)
(:constraints
  (and
    (forall (?r - hexagonal_bin ?k - hexagonal_bin)
      (and
        (preference preference1
          (exists (?j - (either hexagonal_bin key_chain cube_block cube_block dodgeball tall_cylindrical_block cellphone))
            (then
              (once (agent_holds pink_dodgeball ?j) )
              (once (in_motion ?j) )
              (hold (adjacent ?j ?k) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= 3 (count-once-per-external-objects preference1:red) )
      (>= 5 (+ (total-score) (count-once-per-objects preference1:yellow) )
      )
    )
    (> (count-once preference1:golfball) 10 )
  )
)
(:scoring
  (- (external-forall-maximize (* (+ (count preference1:red) (count preference1:dodgeball) (count-once-per-external-objects preference1:beachball) )
        (* (count-once-per-external-objects preference1:red_pyramid_block) (- (count preference1:red) 10 ) )
      )
    )
  )
)
)

(define (game game-id-541) (:domain many-objects-room-v1)
(:setup
  (forall (?p - hexagonal_bin)
    (exists (?c - (either golfball golfball) ?g - game_object)
      (game-conserved
        (adjacent_side ?g agent)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?r - dodgeball)
        (at-end
          (not
            (in ?r)
          )
        )
      )
    )
    (forall (?p - wall ?m - hexagonal_bin ?w - game_object)
      (and
        (preference preference2
          (exists (?s - (either desktop bridge_block))
            (then
              (hold (agent_holds ?s) )
              (once (agent_holds ?s ?w) )
              (once-measure (in_motion ?w) (distance agent room_center) )
              (once (in ?s) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (+ 20 (+ (count-once-per-objects preference2:yellow) (count preference2:dodgeball) )
    )
  )
)
(:scoring
  (count preference2:golfball:red)
)
)

(define (game game-id-542) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (in_motion ?xxx ?xxx)
  )
)
(:constraints
  (and
    (forall (?b - (either desktop pyramid_block doggie_bed))
      (and
        (preference preference1
          (exists (?t - block)
            (then
              (once (> 5 1) )
              (once (agent_holds desk) )
              (hold (and (agent_holds ?t ?t) (> 1 (distance agent ?b)) ) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?j - bridge_block ?s - ball)
        (then
          (once (agent_holds ?s ?s) )
          (hold (rug_color_under ?s) )
          (once (and (on ?s) (in_motion ?s) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (or (count-once-per-objects preference2:pink) (count preference1:pink) (total-time) ) )
)
(:scoring
  (- (* 3 (count-once-per-objects preference2:basketball) )
  )
)
)

(define (game game-id-543) (:domain few-objects-room-v1)
(:setup
  (exists (?u - wall ?u - (either golfball dodgeball floor) ?o - (either pyramid_block cylindrical_block golfball wall tall_cylindrical_block golfball tall_cylindrical_block))
    (game-conserved
      (touch door)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?m - game_object)
        (then
          (once (agent_holds ?m) )
          (once (in ?m) )
          (hold (in_motion ?m) )
        )
      )
    )
    (preference preference2
      (exists (?v - teddy_bear)
        (at-end
          (or
            (agent_holds ?v)
            (on ?v ?v)
          )
        )
      )
    )
  )
)
(:terminal
  (<= (not (count-measure preference1:blue_cube_block:dodgeball) ) (count preference1:green:blue_cube_block) )
)
(:scoring
  4
)
)

(define (game game-id-544) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (above ?xxx desk)
  )
)
(:constraints
  (and
    (forall (?t - wall)
      (and
        (preference preference1
          (exists (?i - chair)
            (then
              (once (not (and (and (agent_holds ?t) (on ?i ?t) ) (and (in_motion ?i) (not (not (adjacent ?t) ) ) ) (adjacent agent) ) ) )
              (once (and (exists (?k - doggie_bed) (on ?k) ) (and (and (not (and (not (and (not (and (and (and (touch ?t) (is_setup_object ?t) ) (and (not (in_motion ?i) ) (exists (?w - dodgeball) (above ?t) ) (not (in ?i) ) (on desk ?i) (and (not (not (on ?i ?i) ) ) (on ?t ?i) ) (agent_holds ?t) (and (or (agent_holds ?t) (in_motion ?t) ) (not (on ?t ?i) ) ) (in_motion ?t ?i) ) ) (agent_holds ?i) ) ) (exists (?a - shelf ?z - wall) (agent_holds ?t agent) ) ) ) (agent_holds ?i) ) ) (in ?t) ) (same_color ?i ?i) ) ) )
              (hold (and (exists (?p - hexagonal_bin) (exists (?e - building ?z - game_object) (on ?i) ) ) (agent_holds ?t ?t) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once preference1) (count preference1:golfball) )
)
(:scoring
  (count-once-per-objects preference1:doggie_bed)
)
)

(define (game game-id-545) (:domain many-objects-room-v1)
(:setup
  (forall (?t - hexagonal_bin)
    (game-conserved
      (on ?t)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?i - cube_block)
        (then
          (hold (not (in_motion ?i) ) )
          (once (agent_holds agent) )
          (once (not (equal_z_position ?i ?i) ) )
        )
      )
    )
  )
)
(:terminal
  (<= (count preference1:side_table) (count preference1:green:yellow) )
)
(:scoring
  (count preference1:dodgeball:red)
)
)

(define (game game-id-546) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (and
        (exists (?h - triangular_ramp)
          (game-conserved
            (agent_holds pink_dodgeball)
          )
        )
      )
      (game-optional
        (and
          (or
            (game_start ?xxx ?xxx)
            (not
              (in ?xxx bed)
            )
          )
          (and
            (in_motion agent)
            (adjacent ?xxx)
            (not
              (and
                (agent_holds ?xxx)
                (and
                  (and
                    (not
                      (in ?xxx ?xxx)
                    )
                    (in_motion ?xxx)
                    (agent_holds ?xxx)
                  )
                  (and
                    (not
                      (and
                        (and
                          (and
                            (agent_holds ?xxx)
                            (same_type bed)
                          )
                          (not
                            (< 8 5)
                          )
                          (in_motion ?xxx)
                        )
                        (not
                          (agent_holds ?xxx)
                        )
                      )
                    )
                    (same_color rug)
                    (between ?xxx)
                    (not
                      (not
                        (not
                          (on right)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
    (and
      (and
        (game-optional
          (in_motion pink ?xxx)
        )
      )
      (exists (?o - triangular_ramp)
        (exists (?l - triangular_ramp)
          (game-conserved
            (not
              (agent_holds ?o ?o)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?y - doggie_bed)
      (and
        (preference preference1
          (exists (?z - dodgeball)
            (then
              (hold-while (touch ?z) (and (agent_holds ?z ?z ?z) (in_motion ?z ?y) ) (in_motion ?z) )
              (once (agent_holds ?y) )
              (once (in ?y) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?l - hexagonal_bin)
        (then
          (once (agent_holds bed) )
          (once (in_motion blue) )
          (once (and (and (not (> 1 1) ) (in ?l) (agent_holds bottom_shelf ?l) ) (not (and (not (opposite ?l) ) (and (in ?l) (and (not (adjacent ?l ?l) ) (and (on ?l) (and (adjacent ?l) (on ?l ?l ?l) ) (adjacent ?l ?l) ) ) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* 3 (not (* (+ 3 (* (+ (count-total preference1:blue) 15 )
                (* 3 9 )
              )
              3
            )
            50
            (total-score)
            (count-overlapping preference2:dodgeball)
            (external-forall-minimize
              (count preference1:dodgeball)
            )
            2
            (* (+ (* (count preference1:yellow) )
                9
                1
                (* 6 (total-score) )
                (+ 9 16 )
                2
                10
                (* 10 (total-score) )
                (count-once-per-objects preference2:rug)
              )
              (count-once-per-objects preference2:beachball)
            )
            (count-once-per-objects preference2:pink_dodgeball)
            (count preference1:beachball)
            (count preference2:pink_dodgeball)
            (count-once-per-objects preference1:book)
            5
          )
        )
      )
      2
    )
    (>= (count-once-per-objects preference1:yellow_pyramid_block) (* (count-once-per-external-objects preference2:beachball) (* 5 (count preference1:orange) )
        (count preference1)
        (* (* 15 2 )
          (count preference2:beachball)
        )
        (count preference2:basketball)
        (count preference1:doggie_bed)
      )
    )
  )
)
(:scoring
  (count preference2:blue_cube_block)
)
)

(define (game game-id-547) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (and
      (agent_holds ?xxx south_west_corner)
      (in_motion desk)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?u - drawer)
        (then
          (once (in front_left_corner) )
          (hold (not (not (and (above ?u agent) (not (forall (?f - doggie_bed) (not (adjacent_side ?f) ) ) ) ) ) ) )
        )
      )
    )
    (preference preference2
      (exists (?v - (either ball cube_block) ?w - ball)
        (then
          (once (touch ?w) )
          (once (not (in_motion ?w) ) )
          (once (and (adjacent ?w ?w) (or (in ?w) (agent_holds ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (+ (count preference1:red) )
      (count preference1:hexagonal_bin)
    )
    (or
      (>= (+ 1 (count-once preference2:basketball:dodgeball:dodgeball) )
        2
      )
      (> 20 4 )
      (and
        (<= (* (count preference1:beachball) 8 )
          (count-once preference1:beachball)
        )
        (= (+ 2 (count-once-per-objects preference1:golfball) )
          (+ (+ (> 1 (- 2 )
              )
              (total-score)
            )
            1
          )
        )
      )
    )
  )
)
(:scoring
  (count preference1:dodgeball)
)
)

(define (game game-id-548) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (on ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?y - rug ?f - dodgeball)
        (then
          (hold-while (not (and (object_orientation bed floor brown) (and (not (agent_holds ?f ?f) ) (in_motion ?f) ) ) ) (in ?f) (in ?f ?f) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference1:pink:basketball) (count preference1:beachball) )
)
(:scoring
  8
)
)

(define (game game-id-549) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (agent_holds ?xxx ?xxx)
  )
)
(:constraints
  (and
    (forall (?k - ball ?u - game_object)
      (and
        (preference preference1
          (exists (?o - game_object)
            (then
              (once (and (and (agent_holds ?u) (equal_z_position ?o) ) (or (in ?o) (and (in ?o ?u) (and (in_motion ?u ?o) (in ?o ?o) ) ) ) ) )
              (hold (adjacent ?u) )
              (once (in_motion agent) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< 0 (count-once preference1:dodgeball:basketball) )
)
(:scoring
  (count-once-per-objects preference1:beachball:blue_pyramid_block)
)
)

(define (game game-id-550) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (in_motion ?xxx ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (at-end
        (< 1 1)
      )
    )
  )
)
(:terminal
  (< (count preference1:dodgeball) (/ (count-once preference1:cylindrical_block) (count preference1:doggie_bed) ) )
)
(:scoring
  9
)
)

(define (game game-id-551) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-conserved
      (adjacent bed ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?i - dodgeball ?j - block)
        (then
          (once (on ?j) )
          (once (in ?j ?j) )
          (once (not (not (agent_holds ?j) ) ) )
        )
      )
    )
  )
)
(:terminal
  (= 100 (count-once-per-objects preference1:golfball) )
)
(:scoring
  (count preference1:hexagonal_bin)
)
)

(define (game game-id-552) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (not
      (agent_holds rug ?xxx)
    )
  )
)
(:constraints
  (and
    (forall (?c - ball)
      (and
        (preference preference1
          (exists (?s - game_object)
            (at-end
              (adjacent agent ?s)
            )
          )
        )
        (preference preference2
          (exists (?x - ball)
            (at-end
              (in_motion ?c)
            )
          )
        )
        (preference preference3
          (exists (?w - triangular_ramp ?e - dodgeball)
            (at-end
              (in_motion bed)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count preference3:dodgeball:orange:purple) 5 )
    (or
      (or
        (or
          (< 4 0.7 )
          (>= (>= (count-once-per-objects preference3:white) (* (- (* (count preference3:red) (* (* (count preference1:yellow) (count-once-per-objects preference1:green:block) (total-score) 18 )
                      (count preference3:beachball)
                    )
                  )
                )
                (* (count preference3:beachball) (count-overlapping preference3:beachball:pink) )
              )
            )
            5
          )
        )
        (>= (count preference1:blue_cube_block) (= (count-once-per-objects preference3:golfball) 15 (* (* 1 2 )
              (count preference1:yellow)
              (- 1 )
            )
          )
        )
      )
      (> (* (* (external-forall-maximize (count-once-per-objects preference2:blue_cube_block) ) (count preference3:beachball) )
          (count preference2:orange)
        )
        (+ (+ 10 3 (count preference1:beachball:purple) (count preference2:yellow) (count-longest preference1:hexagonal_bin) (external-forall-minimize (count-once preference1:top_drawer) ) (+ (* 6 7 )
              (count preference3:yellow_cube_block:pink)
            )
          )
          (- (* 2 1 )
          )
        )
      )
    )
  )
)
(:scoring
  (* (count preference3:dodgeball) (+ 3 (* (count-total preference2:alarm_clock) 4 )
    )
  )
)
)

(define (game game-id-553) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (object_orientation ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?w - chair)
        (then
          (hold (agent_holds green) )
          (once (and (same_object ?w) (between south_west_corner) (not (agent_holds ?w ?w) ) ) )
          (hold (is_setup_object green) )
        )
      )
    )
    (preference preference2
      (exists (?p - dodgeball)
        (at-end
          (not
            (equal_z_position ?p ?p agent)
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once preference2:doggie_bed) 2 )
)
(:scoring
  (count-once-per-objects preference1:basketball:pink)
)
)

(define (game game-id-554) (:domain medium-objects-room-v1)
(:setup
  (forall (?a ?u - wall)
    (game-optional
      (and
        (not
          (exists (?c - (either alarm_clock ball))
            (not
              (in_motion ?u front)
            )
          )
        )
        (on desk ?u)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (then
        (once (and (on ?xxx) (not (< (distance room_center ?xxx) (distance ?xxx ?xxx)) ) ) )
        (hold-while (not (not (and (between ?xxx ?xxx) (not (in desk ?xxx) ) ) ) ) (agent_holds ?xxx rug) )
        (once (on ?xxx ?xxx) )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (external-forall-maximize (count preference1:basketball:dodgeball) ) 1 )
    )
    (or
      (>= 30 8 )
      (>= (total-score) (external-forall-minimize (count preference1:hexagonal_bin:dodgeball) ) )
    )
    (>= 20 (* (total-score) 8 (count preference1:beachball) (* 2 (* (count-once-per-objects preference1:blue_dodgeball:pink) (count-once-per-objects preference1:dodgeball) )
        )
        (count preference1:dodgeball)
        (+ (count preference1:dodgeball) (+ (count preference1:dodgeball) 3 )
        )
      )
    )
  )
)
(:scoring
  (count-increasing-measure preference1:red)
)
)

(define (game game-id-555) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (and
      (on ?xxx tan)
      (not
        (forall (?n - hexagonal_bin)
          (and
            (agent_holds ?n ?n)
            (and
              (on ?n)
              (in_motion front ?n)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?l - red_dodgeball)
        (then
          (once (in ?l) )
          (once (and (and (and (not (adjacent ?l) ) (and (agent_holds ?l) (in_motion ?l) ) ) (and (in_motion agent ?l) (and (and (on ?l) (not (and (not (and (not (same_type bed) ) (in bridge_block) (agent_holds ?l) ) ) (> (distance ?l ?l) (distance desk 9)) ) ) (> 7 0.5) ) (or (agent_holds ?l ?l ?l) (< 1 3) (not (in_motion ?l) ) ) ) ) ) (agent_holds bed) ) )
          (once (agent_holds bed) )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (= (- (- (count preference1:red:dodgeball) )
        )
        (- 3 )
      )
      (* (count-once-per-objects preference1:doggie_bed:orange) (count preference1) )
    )
    (or
      (and
        (or
          (> 10 (count preference1:pink_dodgeball) )
          (>= 2 (count preference1:beachball) )
        )
        (>= (total-time) (* 2 (count-shortest preference1:yellow) )
        )
      )
      (>= (* 3 (* (count preference1:dodgeball:beachball) (* (count-measure preference1:book:basketball) (>= 5 (* (external-forall-maximize (count preference1:pink_dodgeball) ) (* (count preference1:block) (count-once-per-objects preference1:yellow) 10 )
                  (count-once-per-objects preference1:red:beachball)
                )
              )
            )
          )
          3
        )
        (count preference1:rug)
      )
      (>= 1 (count-once-per-objects preference1:basketball) )
    )
  )
)
(:scoring
  (count preference1:golfball)
)
)

(define (game game-id-556) (:domain few-objects-room-v1)
(:setup
  (exists (?r - cube_block ?b - (either yellow dodgeball key_chain))
    (forall (?g ?e - hexagonal_bin ?d - ball ?q - dodgeball ?l - doggie_bed ?y ?z - dodgeball)
      (and
        (and
          (exists (?l - building ?a - golfball)
            (and
              (forall (?s - dodgeball)
                (and
                  (or
                    (game-conserved
                      (agent_holds ?z)
                    )
                    (game-conserved
                      (agent_holds ?a ?z)
                    )
                  )
                  (exists (?g - golfball ?k - game_object)
                    (game-conserved
                      (agent_holds ?y ?y)
                    )
                  )
                )
              )
            )
          )
          (game-conserved
            (on bed)
          )
        )
        (game-optional
          (in_motion ?b)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?n - ball ?t ?b ?f ?u ?x - wall ?s - shelf)
        (then
          (hold (in_motion ?s ?s) )
          (once (and (not (< 0.5 (distance 5 3)) ) (and (in_motion agent ?s) (and (>= 0.5 5) (agent_holds ?s ?s) ) ) ) )
          (once (agent_holds ?s) )
        )
      )
    )
    (forall (?q - doggie_bed)
      (and
        (preference preference2
          (exists (?y - block)
            (then
              (once (and (adjacent_side ?y) (same_object ?q bed) ) )
              (once (agent_holds desk agent) )
              (hold (agent_holds west_wall agent) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (> 7 10 )
  )
)
(:scoring
  10
)
)

(define (game game-id-557) (:domain few-objects-room-v1)
(:setup
  (exists (?k - hexagonal_bin)
    (forall (?y - (either blue_cube_block lamp))
      (forall (?g - (either laptop ball) ?q - game_object)
        (exists (?e - doggie_bed)
          (forall (?i - (either key_chain dodgeball))
            (and
              (game-optional
                (not
                  (in_motion ?i ?k)
                )
              )
              (game-conserved
                (> (distance ?q agent) 10)
              )
              (and
                (game-conserved
                  (on ?k)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?r - hexagonal_bin)
        (then
          (hold (on ?r ?r) )
          (hold (agent_holds desk) )
          (hold (and (agent_holds ?r) (not (in ?r ?r) ) ) )
        )
      )
    )
    (preference preference2
      (exists (?j - dodgeball ?c - hexagonal_bin)
        (then
          (hold (and (same_color rug ?c) (in_motion ?c) ) )
          (once (in_motion ?c) )
        )
      )
    )
    (preference preference3
      (exists (?r - hexagonal_bin)
        (at-end
          (agent_holds ?r agent)
        )
      )
    )
  )
)
(:terminal
  (> (count-once-per-objects preference2:red) (* (* (count preference3:dodgeball) (* (count-once-per-objects preference1:basketball) (count preference3:pink) )
      )
      10
      (count preference2:yellow)
    )
  )
)
(:scoring
  (total-time)
)
)

(define (game game-id-558) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (in ?xxx ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?n - game_object ?m - dodgeball)
        (then
          (hold (on green) )
          (once (and (not (not (and (on ?m) (not (in_motion ?m) ) ) ) ) (on ?m) ) )
          (hold-while (and (not (not (not (and (in_motion top_shelf ?m) (and (in_motion ?m) (>= 4 2) ) ) ) ) ) (not (and (in_motion ?m desk) (= 7 1) (in_motion green_golfball) (on ?m) (or (not (and (not (not (in_motion ?m ?m) ) ) (agent_holds ?m ?m) ) ) (rug_color_under ?m ?m) (exists (?n ?u - chair ?v - block) (and (not (not (and (in_motion rug) (in ?v) (< 1 1) (not (not (not (game_start ?m) ) ) ) ) ) ) (touch ?v ?v) ) ) ) (agent_holds agent) (and (in ?m) (or (and (agent_holds ?m) (and (not (same_color ?m) ) ) (not (agent_holds ?m ?m) ) ) (and (and (and (exists (?q - game_object) (and (on ?q) (agent_holds pink) (in_motion ?q) ) ) (on ?m) ) (agent_holds ?m) (on ?m ?m) (not (on ?m) ) (and (exists (?w - hexagonal_bin) (agent_holds ?w) ) (on ?m) ) (and (object_orientation ?m ?m) (in ?m) ) ) (not (and (or (touch ?m) (and (agent_holds ?m) (and (not (rug_color_under ?m) ) (and (not (and (agent_holds pillow south_wall) (> 1 (distance 10)) ) ) (in_motion ?m) (not (< (building_size ?m 9) (distance agent)) ) ) (touch ?m) (and (not (not (adjacent_side ?m desk) ) ) (adjacent_side ?m north_wall) ) ) ) ) (and (agent_holds ?m ?m) (and (or (in_motion ?m) (agent_holds ?m) ) (and (in floor) (on rug) ) ) ) (and (= (distance ?m) (x_position ?m ?m)) (and (and (exists (?c - hexagonal_bin ?k - (either cellphone pyramid_block cube_block golfball) ?g - triangular_ramp) (and (on ?g) (and (and (in_motion rug) (agent_holds ?m) (touch ?g ?g) ) (not (and (= 1 0.5) (in ?g agent) ) ) (and (agent_holds upright ?g) (between ?m) ) (touch ?m) ) ) ) (exists (?h - hexagonal_bin ?c - dodgeball) (and (adjacent_side floor ?c) (not (and (in_motion ?c) (and (forall (?f - ball ?b - (either basketball cube_block) ?q - wall) (in_motion ?m ?c) ) (or (and (not (on ?c ?c) ) (agent_holds ?m) (<= (x_position room_center desk) (distance )) ) (in_motion ?c) ) (not (and (in_motion ?m ?m) (and (and (agent_holds ?c desk) ) (agent_holds ?c) ) ) ) ) ) ) ) ) ) (and (= 7) (and (not (agent_holds ?m) ) (in ?m) (not (object_orientation desk ?m) ) ) ) ) ) ) ) ) (and (and (not (agent_holds sideways) ) (not (and (and (not (exists (?d ?u - hexagonal_bin ?x - hexagonal_bin ?t - hexagonal_bin) (and (game_start ?t) (on ?t) ) ) ) (not (on ?m ?m) ) (in_motion ?m ?m) (not (and (in_motion ?m ?m) (and (agent_holds ?m bed) (adjacent ?m ?m) ) ) ) ) (toggled_on ?m) ) ) ) (< (distance 5 ?m ?m) 4) (agent_holds ?m ?m) (on ?m) ) ) ) ) ) ) (on ?m ?m) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:basketball) (total-time) )
)
(:scoring
  (+ (- 3 20 ) (count-once-per-objects preference1:book) 10 )
)
)

(define (game game-id-559) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (game-conserved
        (agent_holds ?xxx ?xxx)
      )
    )
    (game-optional
      (in_motion rug ?xxx upside_down)
    )
  )
)
(:constraints
  (and
    (forall (?r - dodgeball)
      (and
        (preference preference1
          (exists (?j - ball ?l - (either doggie_bed cube_block lamp alarm_clock ball dodgeball cylindrical_block))
            (then
              (once (not (and (adjacent_side rug) (agent_holds ?l ?l) ) ) )
              (hold (forall (?q - hexagonal_bin ?e - pillow) (in_motion ?e bed) ) )
              (once (in_motion ?r) )
            )
          )
        )
        (preference preference2
          (exists (?w - block)
            (then
              (once (agent_holds ?r) )
              (once (agent_holds ?r) )
              (once (= 2 (distance ?w ?r ?r)) )
            )
          )
        )
        (preference preference3
          (exists (?m - (either blue_cube_block hexagonal_bin cube_block beachball pyramid_block))
            (then
              (hold (same_object ?m) )
              (once (not (< (distance front) 1) ) )
              (hold-while (in_motion ?m) (and (in ?r ?m) (not (< (distance ?m ?m) 1) ) (forall (?p - (either lamp pink) ?x - building) (agent_holds bed) ) (not (touch ?r) ) ) )
            )
          )
        )
      )
    )
    (forall (?v - chair)
      (and
        (preference preference4
          (exists (?g - ball)
            (at-end
              (touch ?g ?g)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (count preference4:yellow) (count-once-per-objects preference4:cube_block:orange) )
  )
)
(:scoring
  (* (count preference3:pink) (count preference2) )
)
)

(define (game game-id-560) (:domain few-objects-room-v1)
(:setup
  (or
    (game-conserved
      (or
        (not
          (not
            (agent_holds bed)
          )
        )
        (agent_holds ?xxx rug)
      )
    )
    (and
      (and
        (game-conserved
          (and
            (not
              (agent_holds desk)
            )
            (and
              (not
                (agent_holds ?xxx)
              )
              (and
                (forall (?d - hexagonal_bin)
                  (on ?d ?d)
                )
                (in desk ?xxx)
              )
            )
          )
        )
        (game-conserved
          (and
            (and
              (adjacent bed ?xxx)
              (same_object ?xxx)
            )
            (in ?xxx ?xxx)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?z - hexagonal_bin ?h - hexagonal_bin ?a ?c ?k - shelf)
        (at-end
          (same_color ?a ?k)
        )
      )
    )
  )
)
(:terminal
  (>= (* (count-once-per-external-objects preference1:pink:purple) (* (total-score) (* 2 (count-total preference1:beachball) )
      )
    )
    (count preference1:beachball)
  )
)
(:scoring
  3
)
)

(define (game game-id-561) (:domain few-objects-room-v1)
(:setup
  (forall (?p - building ?z - hexagonal_bin)
    (and
      (game-conserved
        (on ?z ?z)
      )
      (game-optional
        (object_orientation ?z ?z)
      )
      (and
        (and
          (and
            (and
              (game-conserved
                (agent_holds ?z desk)
              )
              (not
                (exists (?d - golfball)
                  (exists (?l - dodgeball)
                    (and
                      (game-conserved
                        (on ?d)
                      )
                    )
                  )
                )
              )
            )
            (and
              (or
                (and
                  (game-conserved
                    (< 9 (distance ?z ?z))
                  )
                )
              )
              (game-conserved
                (in_motion desk ?z)
              )
            )
          )
        )
        (and
          (and
            (or
              (game-optional
                (agent_holds ?z)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?c ?t ?g ?e ?a - hexagonal_bin)
        (then
          (once (on ?t) )
          (hold (in ?t) )
          (hold (agent_holds ?a) )
        )
      )
    )
    (preference preference2
      (then
        (once (not (game_start ?xxx) ) )
        (hold-while (game_over ?xxx ?xxx) (same_object ?xxx) )
        (hold (on ?xxx) )
      )
    )
    (forall (?n - cube_block)
      (and
        (preference preference3
          (exists (?a - hexagonal_bin)
            (then
              (hold (in_motion ?n) )
              (hold (and (above ?a) (adjacent agent) ) )
              (once (agent_holds ?n) )
            )
          )
        )
        (preference preference4
          (exists (?d - curved_wooden_ramp)
            (then
              (once (not (on rug) ) )
              (once (not (not (in_motion ?n) ) ) )
              (hold (agent_holds ?d) )
            )
          )
        )
      )
    )
    (forall (?i - (either golfball hexagonal_bin laptop))
      (and
        (preference preference5
          (exists (?m - hexagonal_bin)
            (then
              (hold (< (distance ?m) 4) )
              (hold (agent_holds ?i) )
              (once (not (not (and (on pink_dodgeball) (on ?m) (same_type pink) (object_orientation ) (in ?m) (adjacent ?i) (on ?i) ) ) ) )
            )
          )
        )
      )
    )
    (forall (?b - (either golfball))
      (and
        (preference preference6
          (exists (?z - (either pyramid_block golfball golfball))
            (then
              (once (in ?b) )
              (once (in_motion ?b ?z) )
              (hold (and (and (not (in block) ) (in_motion ?b ?z) ) (and (in_motion desk floor) (and (not (agent_holds pink_dodgeball) ) (and (not (and (agent_holds ?b) (touch ?z ?b ?z) ) ) (same_type ?b rug) (in ?b ?z) (agent_holds ?z ?z) ) ) ) ) )
            )
          )
        )
        (preference preference7
          (then
            (any)
            (once (not (< (distance back 4) 1) ) )
            (once (agent_holds ?b ?b) )
          )
        )
        (preference preference8
          (exists (?h - (either golfball mug doggie_bed))
            (then
              (hold (in_motion floor) )
              (hold (< (distance agent ?b) 10) )
              (hold (and (in_motion ?b ?h) (on ?h) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:wall) (* (count-overlapping preference5:beachball) 1 )
  )
)
(:scoring
  (* 6 (+ 3 7 )
  )
)
)

(define (game game-id-562) (:domain many-objects-room-v1)
(:setup
  (exists (?n - game_object)
    (exists (?c - building)
      (game-optional
        (in_motion ?n ?c)
      )
    )
  )
)
(:constraints
  (and
    (forall (?u - ball)
      (and
        (preference preference1
          (at-end
            (in ?u)
          )
        )
        (preference preference2
          (exists (?c - dodgeball)
            (then
              (once (and (exists (?y ?o ?g - (either mug)) (in ?g ?u) ) (on bed rug) (not (in ?c) ) ) )
              (once (agent_holds ?u) )
              (once (and (and (in_motion ?u) (on ?u) (agent_holds ?u ?u) (and (not (not (in_motion ?u ?c) ) ) (agent_holds ?c ?u) ) ) (and (on floor) (in_motion ?u ?u) (= 0.5 (distance desk ?c) (distance ?c ?c)) ) (and (in ?u) (and (and (on ?c) (adjacent ?c ?c) ) (agent_holds ?c) ) ) (agent_holds ?u) ) )
            )
          )
        )
        (preference preference3
          (exists (?g - doggie_bed)
            (then
              (once (and (and (not (not (in_motion ?u ?g) ) ) (and (agent_holds ?g) (not (on ?g) ) ) ) (and (not (in ?u ?g) ) (agent_holds agent) ) ) )
              (once (agent_holds ?g ?g ?u) )
              (hold (on agent) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (* (total-score) (count preference1:hexagonal_bin) )
  )
)
(:scoring
  (count preference2:dodgeball)
)
)

(define (game game-id-563) (:domain few-objects-room-v1)
(:setup
  (forall (?p - building)
    (exists (?r ?u - hexagonal_bin)
      (not
        (game-optional
          (agent_holds ?p)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?j - dodgeball ?o - (either dodgeball pink) ?c - dodgeball)
      (and
        (preference preference1
          (exists (?z - ball ?p - curved_wooden_ramp)
            (at-end
              (exists (?a - ball)
                (agent_holds upright)
              )
            )
          )
        )
        (preference preference2
          (exists (?k - hexagonal_bin ?t - (either cd cellphone flat_block))
            (then
              (hold-while (not (in ?c) ) (not (in ?t) ) (in_motion ?c ?t) )
              (once (> (distance ?t ?c) (distance green_golfball ?t)) )
              (hold (agent_holds blue) )
            )
          )
        )
        (preference preference3
          (exists (?s - hexagonal_bin)
            (at-end
              (and
                (and
                  (in ?s)
                  (and
                    (not
                      (in_motion ?c ?c)
                    )
                    (in_motion ?c)
                    (and
                      (adjacent ?c ?s)
                      (in ?c)
                    )
                    (open rug)
                  )
                  (forall (?o - ball)
                    (and
                      (and
                        (not
                          (on ?c rug)
                        )
                        (and
                          (on front)
                        )
                      )
                      (on ?s upright)
                    )
                  )
                )
                (same_color ?c ?c)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 3 3 )
)
(:scoring
  (* (count-once-per-objects preference1:orange) (and (* (total-time) (* 3 2 10 )
        300
      )
    )
    (count-once preference3:yellow_pyramid_block)
  )
)
)

(define (game game-id-564) (:domain many-objects-room-v1)
(:setup
  (exists (?v - doggie_bed ?s - dodgeball ?l - cube_block)
    (or
      (and
        (and
          (and
            (game-conserved
              (and
                (not
                  (exists (?t - bridge_block)
                    (and
                      (adjacent desk ?t)
                    )
                  )
                )
                (and
                  (and
                    (and
                      (not
                        (and
                          (on door)
                          (in_motion ?l)
                        )
                      )
                      (adjacent rug)
                    )
                    (agent_holds ?l ?l)
                  )
                  (not
                    (and
                      (> (distance ?l 6) (distance 4 ?l ?l))
                      (and
                        (not
                          (in ?l)
                        )
                        (forall (?d - building ?a - dodgeball)
                          (in_motion ?a)
                        )
                        (and
                          (agent_holds ?l)
                          (adjacent ?l ?l)
                          (adjacent_side ?l)
                        )
                      )
                    )
                  )
                  (agent_holds ?l ?l)
                )
              )
            )
            (game-optional
              (exists (?i - ball)
                (and
                  (< (distance ?i room_center) (distance ?l ?i))
                  (on ?i)
                )
              )
            )
            (game-conserved
              (agent_holds ?l)
            )
          )
        )
      )
      (and
        (and
          (and
            (exists (?r - doggie_bed)
              (game-optional
                (adjacent ?l)
              )
            )
            (and
              (game-optional
                (agent_holds bed)
              )
              (game-optional
                (< 2 5)
              )
            )
          )
          (game-conserved
            (agent_holds ?l)
          )
          (game-conserved
            (agent_holds ?l)
          )
        )
        (game-optional
          (in_motion ?l)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?w - dodgeball)
      (and
        (preference preference1
          (exists (?v - pillow)
            (then
              (once (not (on ?v) ) )
              (hold (in ?v) )
              (hold (agent_holds back) )
            )
          )
        )
        (preference preference2
          (then
            (once (on ?w ?w bed) )
            (hold (and (in_motion ?w) (and (< 1 1) (is_setup_object front ?w) (adjacent ?w) ) (and (not (not (in_motion ?w) ) ) (in_motion ?w) ) ) )
            (hold (agent_holds ?w) )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference1:beachball:red) (* (count-once preference2:blue_dodgeball:green) (count preference1:blue_pyramid_block:pink_dodgeball) )
  )
)
(:scoring
  (count preference1:pink_dodgeball)
)
)

(define (game game-id-565) (:domain many-objects-room-v1)
(:setup
  (exists (?h - flat_block ?d - ball)
    (forall (?e - ball ?k - ball)
      (game-conserved
        (< 0.5 (distance ?d))
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?o - shelf)
        (then
          (once (and (and (or (agent_holds ?o) ) (exists (?v ?n ?p ?k - curved_wooden_ramp ?e - curved_wooden_ramp) (agent_holds ?o) ) ) (not (not (in ?o) ) ) ) )
          (hold (agent_holds ?o) )
          (hold (and (and (in ?o) (on floor pillow) ) (not (not (object_orientation door) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:dodgeball) (* (count-measure preference1:hexagonal_bin) (count preference1:pyramid_block) (>= (count-unique-positions preference1:golfball) 6 )
    )
  )
)
(:scoring
  (- 3 )
)
)

(define (game game-id-566) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (forall (?o - hexagonal_bin)
        (game-conserved
          (in ?o)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?k - (either dodgeball))
      (and
        (preference preference1
          (exists (?m - (either hexagonal_bin laptop golfball))
            (then
              (once (and (agent_holds ?m floor) (and (and (or (in agent) (in ?m) ) (touch ?k) ) (agent_holds ?m) ) ) )
              (once (adjacent ?k ?k) )
              (once (and (and (adjacent ?k ?m) (agent_holds ?m) ) ) )
            )
          )
        )
        (preference preference2
          (exists (?d - game_object)
            (then
              (once (agent_holds ?k ?k) )
              (once (not (not (in bed ?d) ) ) )
              (hold (not (adjacent_side ?d) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count preference2:alarm_clock) 1 )
    (> 7 3 )
  )
)
(:scoring
  10
)
)

(define (game game-id-567) (:domain medium-objects-room-v1)
(:setup
  (exists (?j - block)
    (and
      (and
        (and
          (exists (?x - ball ?v - dodgeball)
            (exists (?o ?u ?w ?s ?p ?i ?a ?e ?x ?y - flat_block ?d - (either dodgeball bridge_block))
              (forall (?h - hexagonal_bin)
                (and
                  (and
                    (forall (?l - (either dodgeball) ?l - teddy_bear)
                      (and
                        (forall (?y - doggie_bed ?k - cube_block)
                          (game-conserved
                            (in ?k desk)
                          )
                        )
                        (game-conserved
                          (agent_holds ?j)
                        )
                      )
                    )
                  )
                  (or
                    (exists (?e ?k - blue_pyramid_block ?f - dodgeball ?y - hexagonal_bin ?z - (either dodgeball cube_block))
                      (game-conserved
                        (in ?d)
                      )
                    )
                    (game-optional
                      (agent_holds ?j)
                    )
                  )
                )
              )
            )
          )
        )
      )
      (game-conserved
        (on ?j)
      )
    )
  )
)
(:constraints
  (and
    (forall (?a - ball)
      (and
        (preference preference1
          (exists (?n - dodgeball)
            (then
              (once (not (in_motion ?n) ) )
            )
          )
        )
        (preference preference2
          (exists (?n - (either golfball main_light_switch) ?m - dodgeball)
            (then
              (once (not (in_motion ?a ?a) ) )
              (once (not (touch rug) ) )
              (once (agent_holds ?a) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (count preference2:basketball) 10 )
)
(:scoring
  (not
    (+ 10 300 (count preference2:golfball) )
  )
)
)

(define (game game-id-568) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?e ?i ?z ?x - teddy_bear ?k - hexagonal_bin ?j - block)
      (exists (?a - (either dodgeball book) ?i - (either tall_cylindrical_block cube_block))
        (game-conserved
          (in ?j agent)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - hexagonal_bin)
      (and
        (preference preference1
          (exists (?i - game_object ?v - hexagonal_bin)
            (at-end
              (in_motion agent bed)
            )
          )
        )
        (preference preference2
          (exists (?b - block)
            (then
              (once (adjacent ?b) )
              (once (not (in_motion ?d ?d) ) )
              (hold (on ?d ?b) )
            )
          )
        )
        (preference preference3
          (exists (?m - building)
            (at-end
              (and
                (not
                  (<= 6 0.5)
                )
                (in_motion ?m ?m)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (count-once preference1:beachball) (- 30 )
  )
)
(:scoring
  (count preference2:alarm_clock:red_pyramid_block)
)
)

(define (game game-id-569) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (and
      (agent_holds ?xxx)
      (touch ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?x - ball)
        (then
          (hold-while (not (in_motion ?x) ) (not (faces ?x) ) (and (in_motion ?x) (and (in_motion ?x ?x) (in_motion ?x) ) ) (touch ?x ?x) )
          (hold-while (or (> 6 (distance back agent 9)) (and (not (in_motion ?x) ) (in_motion ?x ?x) (and (and (on ?x) (adjacent ?x ?x) (not (not (and (and (agent_holds upright bed) (in green ?x) ) (and (on ?x rug) (and (agent_holds ?x front) (in agent) ) (in ?x) ) ) ) ) (and (< (distance room_center ?x) 6) (and (in_motion ?x) (and (< (distance ?x ?x) 1) (and (and (in_motion ?x ?x) (touch floor back) ) (or (agent_holds ?x) (is_setup_object ?x) ) ) ) ) ) ) (on ?x ?x) ) (not (agent_holds ?x ?x) ) (adjacent rug) (not (not (in_motion ?x) ) ) ) ) (in_motion ?x ?x) )
          (once-measure (agent_holds ?x ?x) (building_size ?x 3) )
        )
      )
    )
  )
)
(:terminal
  (<= 4 3 )
)
(:scoring
  (total-score)
)
)

(define (game game-id-570) (:domain many-objects-room-v1)
(:setup
  (exists (?l - curved_wooden_ramp ?j - block)
    (game-conserved
      (< 0.5 (distance ?j 3))
    )
  )
)
(:constraints
  (and
    (forall (?n - flat_block)
      (and
        (preference preference1
          (exists (?y - block)
            (at-end
              (on ?n)
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?p - wall)
        (then
          (once (adjacent_side ?p ?p) )
          (once (< (distance desk ?p) 1) )
          (hold-while (and (in_motion ?p) (in_motion ?p ball) ) (not (in_motion ?p ?p) ) )
        )
      )
    )
    (preference preference3
      (exists (?b - hexagonal_bin ?g - building ?o - dodgeball)
        (then
          (hold (in_motion ?o) )
          (once-measure (not (agent_holds floor ?o ?o) ) (distance 6 ?o ?o) )
          (hold (adjacent ?o) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (count preference3:pink) )
)
(:scoring
  (* (count-once-per-objects preference3:blue) 6 )
)
)

(define (game game-id-571) (:domain few-objects-room-v1)
(:setup
  (not
    (game-conserved
      (agent_holds desk ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (then
        (hold (and (on ?xxx ?xxx) (adjacent ?xxx) ) )
        (once (in_motion bed) )
        (hold-while (on ?xxx ?xxx) (or (not (not (not (and (on ?xxx) (and (> 1 (distance ?xxx desk)) (in_motion ?xxx ?xxx) ) (not (in_motion ?xxx front) ) ) ) ) ) (and (and (not (not (exists (?m - hexagonal_bin) (touch ?m ?m) ) ) ) (in ?xxx) ) (and (and (and (between ?xxx) (not (toggled_on pink_dodgeball) ) ) (agent_holds ?xxx) (or (above ?xxx ?xxx) ) (agent_holds desk) ) (agent_holds blue) ) ) ) (and (game_start ?xxx ?xxx) (in_motion ?xxx) (and (in_motion ?xxx) (not (not (and (touch bed ?xxx) (not (in_motion ?xxx) ) ) ) ) ) (agent_holds ?xxx) ) )
      )
    )
    (preference preference2
      (exists (?j - dodgeball)
        (then
          (hold (not (on ?j ?j) ) )
          (hold-while (on ?j bed) (in rug) )
          (once (and (adjacent_side ?j) (in ?j) (not (not (not (in ?j ?j) ) ) ) (agent_holds bed ?j) ) )
        )
      )
    )
    (preference preference3
      (exists (?m - ball ?e - doggie_bed)
        (at-end
          (in ?e)
        )
      )
    )
    (preference preference4
      (at-end
        (agent_holds ?xxx)
      )
    )
    (preference preference5
      (exists (?d - block)
        (at-end
          (agent_holds ?d ?d)
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (* (count-total preference1:dodgeball:dodgeball) (= 10 (count preference3:book) )
      )
      6
    )
    (or
      (> (count-once preference1:dodgeball) (count-once-per-objects preference4:green) )
    )
    (<= (count preference1:beachball) (count preference4:cylindrical_block) )
  )
)
(:scoring
  (count preference5:dodgeball:blue_pyramid_block)
)
)

(define (game game-id-572) (:domain medium-objects-room-v1)
(:setup
  (forall (?w - (either cylindrical_block desktop))
    (game-conserved
      (in_motion ?w ?w)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?o - hexagonal_bin)
        (then
          (once (between ?o agent) )
          (hold (adjacent_side ?o) )
          (hold-while (in ?o) (game_start ?o) )
        )
      )
    )
    (forall (?v - hexagonal_bin)
      (and
        (preference preference2
          (exists (?w - dodgeball)
            (then
              (hold-to-end (and (in_motion agent) (not (in_motion ?w) ) ) )
              (once (not (in_motion rug) ) )
              (once (in ?w ?w) )
            )
          )
        )
        (preference preference3
          (exists (?y - shelf)
            (then
              (hold (same_color ?y ?y) )
              (once (agent_holds ?v ?v) )
              (hold (on ?y) )
            )
          )
        )
      )
    )
    (preference preference4
      (exists (?t - (either yellow_cube_block golfball))
        (then
          (once (in_motion ?t front) )
          (once (and (in_motion ) (touch ?t ?t) (and (adjacent ?t) (and (not (on ?t desk) ) (> 9 0) (and (on ?t) (not (and (rug_color_under ?t) (agent_holds ?t) ) ) (in_motion ?t upright) ) ) (agent_holds ?t) ) (not (rug_color_under ?t) ) ) )
          (once (on ?t) )
        )
      )
    )
    (preference preference5
      (exists (?o - golfball ?y - wall)
        (then
          (once (>= 1 1) )
          (once (not (agent_holds ?y ?y) ) )
          (once (not (in_motion pink_dodgeball) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) 10 )
)
(:scoring
  3
)
)

(define (game game-id-573) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (and
      (not
        (in ?xxx)
      )
      (in_motion ?xxx agent)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?x - cube_block)
        (then
          (hold (and (on ?x) (not (not (exists (?j - pillow ?s - game_object ?r - beachball ?q - block) (and (not (in ?x) ) (< 1 1) ) ) ) ) (and (on ?x agent ?x) (on ?x ?x) ) ) )
          (once-measure (not (agent_holds ?x ?x) ) (distance ?x ?x) )
          (once (in ?x) )
        )
      )
    )
    (preference preference2
      (exists (?l - flat_block)
        (then
          (once (and (touch rug) (adjacent ?l) ) )
          (once (object_orientation ?l) )
          (once (agent_holds ?l) )
        )
      )
    )
    (preference preference3
      (at-end
        (in_motion ?xxx ?xxx)
      )
    )
  )
)
(:terminal
  (or
    (and
      (= (count-once-per-objects preference1:yellow_cube_block:pink_dodgeball) (- (* 30 6 )
        )
      )
      (> 3 9 )
    )
    (< (count preference2:bed) 1 )
  )
)
(:scoring
  (count-overlapping preference3:basketball)
)
)

(define (game game-id-574) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (game-conserved
        (in_motion ?xxx ?xxx)
      )
    )
    (game-conserved
      (agent_holds color ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?x - shelf ?g - beachball ?o ?y ?w - dodgeball)
        (then
          (once (and (in ?w) (and (or (agent_holds ?o door) (not (on ?y agent) ) ) (< 1 1) ) ) )
          (hold (and (or (and (agent_holds ?w) (in_motion ?o) ) (and (not (not (in_motion agent ?y) ) ) (agent_holds ?o) ) (and (in agent) (not (agent_holds ?w ?y) ) ) ) (and (in_motion desk) (touch ?w bed) ) ) )
          (hold (< 1 1) )
        )
      )
    )
    (preference preference2
      (exists (?m - color ?x - building)
        (then
          (once (adjacent desk) )
          (once (not (in_motion ?x upright) ) )
          (hold (in_motion pink) )
          (hold-while (on ?x) (and (agent_holds ?x) (in_motion ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference2:yellow:basketball) (+ 15 (count preference2) )
  )
)
(:scoring
  (* (* (count preference1:dodgeball:beachball) (+ 10 1 )
    )
    (external-forall-maximize
      (count preference2:dodgeball)
    )
  )
)
)

(define (game game-id-575) (:domain medium-objects-room-v1)
(:setup
  (forall (?r - dodgeball)
    (and
      (and
        (and
          (exists (?j ?h - hexagonal_bin ?b - pillow)
            (game-conserved
              (and
                (agent_holds ?r)
                (in_motion ?b)
              )
            )
          )
        )
      )
      (game-optional
        (agent_holds ?r)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?t - hexagonal_bin)
        (then
          (hold (and (exists (?n ?v - triangular_ramp ?g - building) (agent_holds ?t ?g) ) (and (in_motion ?t) (and (in ?t) (not (not (and (not (in_motion ?t) ) (or (in_motion rug ?t) (in_motion ?t ?t ?t) ) ) ) ) ) ) ) )
          (once (and (in ?t) (in_motion pillow ?t) ) )
          (once (exists (?d - chair ?q - game_object) (not (not (not (touch ?q) ) ) ) ) )
        )
      )
    )
    (preference preference2
      (then
        (once (on ?xxx) )
        (once (in_motion ?xxx front) )
        (once (agent_holds ?xxx) )
      )
    )
    (preference preference3
      (exists (?x - hexagonal_bin)
        (then
          (hold-while (agent_holds agent) (in_motion sideways) )
          (once (not (in_motion desk) ) )
          (forall-sequence (?d - hexagonal_bin)
            (then
              (once (on front ?d) )
              (once (adjacent ?x) )
              (hold (not (or (agent_holds ?d) (in_motion ?x) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (not 1 ) 0 )
    (>= (count-once-per-objects preference2:pink_dodgeball) 1 )
  )
)
(:scoring
  (* (* (count preference1:yellow:orange) (count preference1:yellow) )
    (count-once-per-objects preference1:hexagonal_bin)
  )
)
)

(define (game game-id-576) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (game-optional
        (agent_holds ?xxx)
      )
      (game-conserved
        (and
          (in_motion ?xxx ?xxx)
          (not
            (adjacent ?xxx)
          )
          (adjacent ?xxx)
        )
      )
      (exists (?q - dodgeball ?z - hexagonal_bin ?t - hexagonal_bin)
        (forall (?p - hexagonal_bin ?v - (either doggie_bed dodgeball) ?z - hexagonal_bin)
          (game-optional
            (not
              (and
                (in_motion ?z)
                (adjacent ?z)
              )
            )
          )
        )
      )
    )
    (forall (?a - cube_block)
      (forall (?b - ball ?p - curved_wooden_ramp)
        (forall (?d - hexagonal_bin)
          (exists (?v - hexagonal_bin ?c ?z ?k - block)
            (exists (?y - color)
              (and
                (and
                  (and
                    (game-optional
                      (not
                        (not
                          (agent_holds ?c)
                        )
                      )
                    )
                    (and
                      (game-optional
                        (< 5 10)
                      )
                      (and
                        (exists (?i - hexagonal_bin)
                          (game-conserved
                            (not
                              (in_motion bed ?c)
                            )
                          )
                        )
                        (game-conserved
                          (and
                            (< 4 1)
                          )
                        )
                        (and
                          (exists (?r - dodgeball ?n ?w - hexagonal_bin)
                            (and
                              (or
                                (and
                                  (forall (?t - pyramid_block)
                                    (forall (?h - cube_block)
                                      (exists (?u ?i ?o ?x ?b ?g - cube_block ?q - building ?x - watch)
                                        (exists (?l - hexagonal_bin)
                                          (game-conserved
                                            (in ?h ?t)
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                                (game-optional
                                  (not
                                    (in_motion ?a)
                                  )
                                )
                                (game-conserved
                                  (rug_color_under ?k bed)
                                )
                              )
                            )
                          )
                          (and
                            (game-optional
                              (not
                                (and
                                  (in_motion south_wall)
                                  (on ?y ?k)
                                )
                              )
                            )
                          )
                          (and
                            (and
                              (and
                                (and
                                  (game-conserved
                                    (and
                                      (not
                                        (agent_holds agent agent)
                                      )
                                      (not
                                        (adjacent ?p)
                                      )
                                    )
                                  )
                                )
                                (and
                                  (game-conserved
                                    (and
                                      (and
                                        (and
                                          (= (distance door ?z) 6)
                                          (adjacent_side ?c)
                                          (opposite ?k)
                                          (and
                                            (and
                                              (agent_holds main_light_switch ?c)
                                              (and
                                                (and
                                                  (in ?a)
                                                  (in_motion ?c)
                                                  (same_type ?c)
                                                  (and
                                                    (in_motion ?c ?a)
                                                    (equal_x_position ?k)
                                                  )
                                                  (and
                                                    (and
                                                      (agent_holds ?d)
                                                      (not
                                                        (agent_holds ?a)
                                                      )
                                                      (agent_holds ?d)
                                                      (and
                                                        (not
                                                          (not
                                                            (< (distance ?c desk) 5)
                                                          )
                                                        )
                                                        (and
                                                          (agent_holds ?a)
                                                          (agent_holds ?y ?p)
                                                        )
                                                      )
                                                      (and
                                                        (on front ?k)
                                                        (and
                                                          (not
                                                            (touch ?z)
                                                          )
                                                          (not
                                                            (on door ?z ?a)
                                                          )
                                                        )
                                                      )
                                                      (in ?d)
                                                    )
                                                    (agent_holds ?z agent)
                                                  )
                                                  (agent_holds ?z ?k)
                                                  (in_motion ?d ?y)
                                                )
                                                (not
                                                  (in_motion ?a)
                                                )
                                              )
                                            )
                                            (on ?c)
                                          )
                                        )
                                        (touch front ?z)
                                      )
                                      (agent_holds ?k)
                                    )
                                  )
                                  (exists (?m - hexagonal_bin)
                                    (game-optional
                                      (and
                                        (not
                                          (agent_holds ?m)
                                        )
                                        (and
                                          (on ?m)
                                          (and
                                            (and
                                              (in_motion ?c)
                                              (on rug)
                                            )
                                            (and
                                              (not
                                                (touch ?c)
                                              )
                                              (in_motion ?c)
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                  (game-conserved
                                    (or
                                      (in ?a)
                                      (in_motion ?p ?c)
                                    )
                                  )
                                )
                              )
                              (forall (?w - dodgeball)
                                (game-optional
                                  (in_motion ?z)
                                )
                              )
                              (exists (?g - hexagonal_bin)
                                (forall (?f - dodgeball)
                                  (and
                                    (forall (?q - wall)
                                      (exists (?j - dodgeball)
                                        (game-optional
                                          (agent_holds agent)
                                        )
                                      )
                                    )
                                    (forall (?b - building ?b - game_object)
                                      (and
                                        (exists (?v - ball)
                                          (and
                                            (game-conserved
                                              (agent_holds ?b)
                                            )
                                            (game-optional
                                              (and
                                                (< (x_position desk ?f) (distance room_center room_center))
                                                (and
                                                  (agent_holds ?z)
                                                  (in ?v)
                                                  (in ?k)
                                                  (not
                                                    (= (distance ?a ?y 8) (distance ))
                                                  )
                                                  (in ?d)
                                                  (in_motion ?z)
                                                  (touch ?z)
                                                  (agent_holds ?g)
                                                  (in ?d ?c)
                                                  (in_motion ?d ?y)
                                                  (and
                                                    (in ?b)
                                                    (on ?p ?a)
                                                  )
                                                  (and
                                                    (not
                                                      (on agent agent)
                                                    )
                                                    (in_motion ?f)
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                        (forall (?q - dodgeball ?m - (either dodgeball chair game_object))
                                          (exists (?j - triangular_ramp)
                                            (game-optional
                                              (on ?c front)
                                            )
                                          )
                                        )
                                      )
                                    )
                                    (exists (?s - ball)
                                      (game-conserved
                                        (in_motion ?k agent)
                                      )
                                    )
                                  )
                                )
                              )
                              (exists (?j - pillow)
                                (game-optional
                                  (not
                                    (on ?y)
                                  )
                                )
                              )
                              (exists (?q - chair ?j - cube_block)
                                (exists (?i ?q - (either pink book) ?r ?n - dodgeball)
                                  (and
                                    (and
                                      (forall (?i - drawer)
                                        (game-optional
                                          (agent_holds upright)
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                          (and
                            (and
                              (game-optional
                                (agent_holds ?k)
                              )
                            )
                          )
                          (and
                            (exists (?s - chair ?o - (either cube_block cd) ?t - triangular_ramp)
                              (game-conserved
                                (and
                                  (not
                                    (in_motion ?z ?k)
                                  )
                                  (and
                                    (adjacent ?p ?c)
                                    (in_motion ?y ?z)
                                  )
                                )
                              )
                            )
                            (game-optional
                              (exists (?x - curved_wooden_ramp)
                                (in pink_dodgeball ?d)
                              )
                            )
                          )
                        )
                      )
                      (game-conserved
                        (adjacent ?d)
                      )
                    )
                    (forall (?n - dodgeball)
                      (game-conserved
                        (in_motion ?n)
                      )
                    )
                  )
                  (and
                    (forall (?i - block)
                      (game-optional
                        (on ?k)
                      )
                    )
                  )
                  (game-conserved
                    (on color ?c)
                  )
                  (game-conserved
                    (in_motion ?d ?d)
                  )
                  (and
                    (game-conserved
                      (and
                        (in_motion ?k rug)
                        (>= (distance ?y room_center) (distance ?z 9))
                      )
                    )
                    (forall (?b - hexagonal_bin ?o - hexagonal_bin ?g - (either desktop golfball))
                      (exists (?m - hexagonal_bin ?j - hexagonal_bin)
                        (game-optional
                          (and
                            (same_color ?z)
                            (agent_holds pink)
                            (in ?y)
                          )
                        )
                      )
                    )
                    (game-conserved
                      (agent_holds right ?a)
                    )
                  )
                )
                (forall (?t - ball ?u - hexagonal_bin)
                  (and
                    (forall (?t ?i - block ?f - pillow)
                      (game-conserved
                        (and
                          (and
                            (agent_holds ?f)
                            (touch bed)
                          )
                          (touch ?z ?a)
                        )
                      )
                    )
                  )
                )
                (game-optional
                  (equal_z_position ?y ?p)
                )
              )
            )
          )
        )
      )
    )
    (game-conserved
      (and
        (and
          (agent_holds ?xxx)
          (or
            (agent_holds agent)
            (< (distance ?xxx 7) 2)
          )
          (not
            (and
              (agent_holds ?xxx)
              (in rug)
            )
          )
        )
        (and
          (in_motion ?xxx ?xxx)
          (and
            (agent_holds west_wall ?xxx)
            (on ?xxx ?xxx)
          )
          (agent_holds ?xxx)
        )
        (and
          (and
            (touch ?xxx)
            (in_motion ?xxx ?xxx)
          )
          (adjacent ?xxx)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - (either dodgeball golfball))
      (and
        (preference preference1
          (exists (?q - doggie_bed ?d - (either dodgeball mug))
            (at-end
              (touch ?b ?b)
            )
          )
        )
        (preference preference2
          (exists (?q ?j - red_dodgeball)
            (then
              (hold (not (adjacent ?b) ) )
              (once (agent_holds ?j) )
              (once (in_motion ?q) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?u - (either credit_card hexagonal_bin))
        (then
          (once (not (or (in ?u) (< 10 1) ) ) )
          (once (in_motion ?u) )
          (hold (in_motion ?u) )
        )
      )
    )
  )
)
(:terminal
  (or
    (and
      (>= (= (* (count preference1:yellow) 6 )
          40
        )
        (-
          (- (count preference3:pink_dodgeball) )
          (count-once preference3:dodgeball)
        )
      )
      (or
        (>= (count preference3:orange) (count preference2:yellow) )
      )
      (>= 5 (+ (count-once-per-objects preference1:blue) (external-forall-maximize 6 ) )
      )
    )
    (>= (- 5 )
      (count-once-per-objects preference3:purple)
    )
  )
)
(:scoring
  (count-once-per-objects preference2:book)
)
)

(define (game game-id-577) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (and
      (touch ?xxx ?xxx)
      (on ?xxx)
    )
  )
)
(:constraints
  (and
    (forall (?u - curved_wooden_ramp)
      (and
        (preference preference1
          (then
            (once (not (agent_holds ?u ?u) ) )
            (once (in_motion bed) )
            (once (on ?u) )
          )
        )
      )
    )
  )
)
(:terminal
  (> (count preference1:yellow) 4 )
)
(:scoring
  (total-score)
)
)

(define (game game-id-578) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (in_motion ?xxx ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?w - triangular_ramp)
        (then
          (hold (< 1 8) )
          (once (and (not (and (not (touch right ?w) ) (exists (?b - ball ?l - hexagonal_bin) (agent_holds ?w agent) ) (in_motion ?w ?w) ) ) (and (agent_holds ?w ?w) (toggled_on desk) ) ) )
          (once-measure (agent_holds ?w) (distance ?w ?w) )
        )
      )
    )
  )
)
(:terminal
  (> (count-once-per-objects preference1) (* (* 10 )
      (* (count-once preference1:basketball:doggie_bed) 5 )
      (* (count-once preference1:dodgeball) (+ (count preference1:blue_cube_block:yellow) 180 10 )
      )
      (- (count preference1:pyramid_block) )
    )
  )
)
(:scoring
  (count-increasing-measure preference1:doggie_bed)
)
)

(define (game game-id-579) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (exists (?v - game_object)
      (and
        (in ?v ?v)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?j - wall ?i - triangular_ramp)
        (at-end
          (and
            (and
              (and
                (agent_holds ?i ?i)
                (not
                  (agent_holds bed)
                )
                (in_motion ?i ?i)
              )
              (not
                (agent_holds ?i)
              )
              (not
                (in_motion ?i)
              )
            )
            (not
              (in_motion ?i)
            )
            (not
              (in_motion ?i)
            )
            (open ?i ?i)
            (agent_holds ?i ?i)
            (not
              (not
                (and
                  (in_motion ?i ?i)
                  (on ?i)
                  (or
                    (in_motion ?i)
                    (not
                      (and
                        (and
                          (and
                            (exists (?o - hexagonal_bin)
                              (on agent)
                            )
                            (and
                              (agent_holds bed)
                              (and
                                (and
                                  (and
                                    (in ?i)
                                    (in_motion ?i ?i)
                                    (and
                                      (in_motion top_drawer ?i)
                                      (agent_holds ?i south_wall)
                                    )
                                  )
                                  (on ?i desk)
                                )
                                (and
                                  (in ?i)
                                  (on ?i)
                                )
                              )
                              (in_motion top_shelf)
                            )
                          )
                          (not
                            (in_motion ?i ?i)
                          )
                        )
                      )
                    )
                    (not
                      (and
                        (and
                          (agent_holds bed ?i)
                          (not
                            (not
                              (and
                                (and
                                  (or
                                    (and
                                      (in ?i ?i)
                                      (agent_holds ?i ?i)
                                    )
                                    (agent_holds ?i ?i)
                                  )
                                  (and
                                    (in_motion ?i)
                                    (same_color ?i)
                                  )
                                )
                                (not
                                  (not
                                    (agent_holds ?i ?i)
                                  )
                                )
                                (and
                                  (and
                                    (and
                                      (not
                                        (not
                                          (not
                                            (not
                                              (agent_holds ?i ?i)
                                            )
                                          )
                                        )
                                      )
                                      (and
                                        (adjacent ?i)
                                        (and
                                          (and
                                            (not
                                              (agent_holds desk ?i)
                                            )
                                            (in_motion ?i)
                                          )
                                          (rug_color_under ?i)
                                          (object_orientation ?i ?i)
                                          (and
                                            (touch ?i)
                                            (exists (?w - (either laptop alarm_clock main_light_switch))
                                              (in_motion ?i ?i)
                                            )
                                            (not
                                              (broken ?i)
                                            )
                                          )
                                          (not
                                            (in_motion ?i)
                                          )
                                          (and
                                            (agent_holds ?i ?i)
                                          )
                                          (in_motion agent bed)
                                          (adjacent bed)
                                        )
                                      )
                                    )
                                    (not
                                      (in_motion ?i)
                                    )
                                  )
                                  (not
                                    (same_type ?i)
                                  )
                                )
                              )
                            )
                          )
                          (< (distance ?i ?i) (distance ?i desk))
                        )
                        (agent_holds agent)
                      )
                    )
                  )
                  (not
                    (not
                      (not
                        (and
                          (in ?i ?i ?i)
                          (not
                            (in_motion bridge_block ?i)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
            (in_motion ?i)
          )
        )
      )
    )
    (preference preference2
      (exists (?x ?u - hexagonal_bin)
        (then
          (once (not (on ?u ?x) ) )
          (once (not (not (and (adjacent ?x) (and (agent_holds ?u ?u) ) (and (agent_holds ?x ?x) (in_motion ?u ?u) ) (not (agent_holds ?u ?x) ) ) ) ) )
          (once (not (not (and (and (on ) (agent_holds ?u ?x) ) (in_motion ?x top_drawer) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 3 (count preference2:pyramid_block:beachball) )
    1
  )
)
(:scoring
  5
)
)

(define (game game-id-580) (:domain many-objects-room-v1)
(:setup
  (forall (?f - dodgeball)
    (and
      (and
        (forall (?u - yellow_pyramid_block)
          (exists (?j - dodgeball)
            (forall (?g - hexagonal_bin)
              (game-conserved
                (agent_holds ?u)
              )
            )
          )
        )
      )
      (exists (?z - game_object)
        (game-conserved
          (or
            (and
              (in_motion ?z)
              (not
                (exists (?b - ball ?w - shelf)
                  (in ?z ?f)
                )
              )
            )
          )
        )
      )
      (and
        (game-optional
          (in_motion ?f ?f)
        )
        (and
          (and
            (and
              (game-optional
                (and
                  (on ?f pink_dodgeball)
                  (not
                    (agent_holds ?f ?f)
                  )
                )
              )
            )
            (and
              (game-optional
                (touch ?f)
              )
              (game-conserved
                (agent_holds ?f)
              )
            )
            (or
              (game-conserved
                (same_type ?f)
              )
              (exists (?v - ball ?l - hexagonal_bin ?q - building)
                (not
                  (exists (?d - ball)
                    (game-optional
                      (in_motion ?q ?d agent)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?z - curved_wooden_ramp)
      (and
        (preference preference1
          (exists (?v - cube_block)
            (then
              (hold-to-end (agent_holds ?v agent) )
              (hold-to-end (not (in_motion ?z desk) ) )
              (once (same_color agent) )
            )
          )
        )
        (preference preference2
          (exists (?e ?b - pyramid_block ?p - (either laptop dodgeball))
            (then
              (hold (agent_holds ?z ?z) )
              (once (and (on ?z) (agent_holds ?p ?p) ) )
              (hold-for 5 (not (agent_holds ?z ?p) ) )
            )
          )
        )
        (preference preference3
          (exists (?q - tall_cylindrical_block ?m - dodgeball)
            (then
              (once (agent_holds ?z) )
              (once (not (not (in_motion ?m) ) ) )
              (hold (in_motion ?z) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-external-objects preference2:basketball:tan) (* (count preference2:beachball) (count preference1:dodgeball:beachball) )
  )
)
(:scoring
  (total-score)
)
)

(define (game game-id-581) (:domain few-objects-room-v1)
(:setup
  (exists (?w ?q - (either game_object))
    (forall (?u - (either laptop cube_block) ?x - cube_block ?s - hexagonal_bin)
      (game-conserved
        (and
          (not
            (agent_holds ?w ?q)
          )
          (agent_holds ?q)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (then
        (once (on ?xxx ?xxx) )
        (once (not (adjacent agent) ) )
        (once (or (and (same_color ?xxx) (not (and (agent_holds ?xxx) (agent_holds ?xxx ?xxx) ) ) ) (agent_holds ?xxx ?xxx) (agent_holds agent) ) )
      )
    )
    (preference preference2
      (exists (?h - building ?d - curved_wooden_ramp ?v - building)
        (then
          (hold-while (not (not (above ?v ?v) ) ) (= 6 1) (object_orientation ?v) )
          (once (and (on floor ?v) (and (not (and (agent_holds pillow) (or (exists (?a - color ?q ?a - ball ?i - building ?k - (either golfball dodgeball)) (agent_holds right) ) (not (agent_holds ?v ?v) ) ) ) ) (adjacent ?v ?v) ) ) )
          (hold (in_motion ?v) )
        )
      )
    )
    (preference preference3
      (exists (?v - golfball)
        (at-end
          (and
            (exists (?p - dodgeball ?t - pillow)
              (in_motion ?v ?v)
            )
            (and
              (in_motion upright)
              (on ?v bed)
              (and
                (and
                  (and
                    (in_motion ?v ?v)
                    (agent_holds floor)
                    (not
                      (not
                        (and
                          (opposite ?v floor)
                          (and
                            (exists (?h - block)
                              (agent_holds ?v ?v)
                            )
                            (touch ?v ?v)
                          )
                        )
                      )
                    )
                  )
                  (not
                    (in_motion ?v ?v)
                  )
                )
                (not
                  (not
                    (agent_holds ?v ?v)
                  )
                )
              )
              (and
                (agent_holds ?v)
                (agent_holds agent ?v)
              )
            )
          )
        )
      )
    )
    (preference preference4
      (then
        (once (in ?xxx ?xxx) )
        (hold-while (and (not (not (not (in_motion ?xxx) ) ) ) (not (adjacent rug) ) ) (object_orientation ?xxx ?xxx) )
        (hold (not (agent_holds ?xxx green_golfball) ) )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference1:dodgeball:golfball) 7 )
)
(:scoring
  1
)
)

(define (game game-id-582) (:domain medium-objects-room-v1)
(:setup
  (forall (?j - dodgeball)
    (and
      (and
        (forall (?q - teddy_bear ?d - teddy_bear)
          (and
            (exists (?c - block)
              (game-conserved
                (< 1 5)
              )
            )
          )
        )
      )
      (game-optional
        (and
          (exists (?e - hexagonal_bin)
            (and
              (< (distance ?e 7) (distance agent 8))
              (exists (?l - cube_block ?k - shelf ?h - hexagonal_bin ?h - golfball)
                (agent_holds south_west_corner)
              )
            )
          )
          (and
            (in_motion ?j)
            (and
              (and
                (agent_holds ?j)
                (or
                  (and
                    (and
                      (and
                        (not
                          (not
                            (and
                              (in_motion ?j ?j)
                              (in_motion desk ?j)
                              (not
                                (in_motion ?j)
                              )
                            )
                          )
                        )
                        (adjacent ?j ?j)
                        (touch ?j)
                      )
                      (not
                        (adjacent ?j ?j)
                      )
                    )
                    (agent_holds ?j ?j)
                  )
                  (not
                    (not
                      (agent_holds ?j ?j)
                    )
                  )
                )
              )
              (adjacent drawer rug)
            )
            (on ?j)
            (in_motion ?j ?j)
            (not
              (and
                (and
                  (agent_holds ?j ?j)
                  (and
                    (and
                      (or
                        (agent_holds ?j)
                        (on ?j ?j)
                      )
                      (agent_holds ?j floor)
                    )
                    (not
                      (agent_holds rug)
                    )
                  )
                )
                (and
                  (faces ?j ?j)
                  (not
                    (< 8 (distance room_center ?j))
                  )
                )
                (not
                  (not
                    (in_motion ?j ?j)
                  )
                )
                (= 1 (distance 6 ?j ?j))
              )
            )
            (agent_holds ?j)
            (opposite agent)
            (agent_holds ?j)
          )
          (agent_holds ?j)
        )
      )
      (game-conserved
        (< 2 0)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?x ?t - shelf ?t - chair)
        (then
          (once (and (in ?t) (agent_holds ?t) ) )
          (once (< 1 1) )
          (hold (> (distance room_center desk) 1) )
        )
      )
    )
    (preference preference2
      (exists (?q - curved_wooden_ramp)
        (then
          (once (agent_holds ?q) )
          (hold-while (or (< 1 1) (touch ?q ?q ?q) ) (in_motion ?q ?q) )
          (hold-while (on ?q ?q) (not (agent_holds ?q) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (count-once preference1:hexagonal_bin:dodgeball) )
)
(:scoring
  (external-forall-maximize
    3
  )
)
)

(define (game game-id-583) (:domain many-objects-room-v1)
(:setup
  (forall (?q - chair)
    (exists (?j - hexagonal_bin ?k - ball ?m - desk_shelf ?u - hexagonal_bin)
      (game-optional
        (on agent)
      )
    )
  )
)
(:constraints
  (and
    (forall (?o - dodgeball ?o - (either cd cube_block))
      (and
        (preference preference1
          (exists (?u - dodgeball)
            (then
              (hold-while (agent_holds ?u ?o) (not (same_object ?o green) ) )
              (once (and (in ?u ?u) (agent_holds ?u) ) )
              (once (agent_holds ?o) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (- 2 )
    2
  )
)
(:scoring
  10
)
)

(define (game game-id-584) (:domain few-objects-room-v1)
(:setup
  (exists (?j - hexagonal_bin)
    (exists (?f - chair ?l - (either golfball dodgeball golfball))
      (game-conserved
        (agent_holds agent ?j)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?t - hexagonal_bin)
        (at-end
          (and
            (in_motion ?t agent)
            (not
              (on desk)
            )
            (or
              (and
                (in_motion ?t ?t)
                (on ?t)
              )
              (and
                (not
                  (agent_holds ?t)
                )
                (and
                  (agent_holds ?t)
                  (in_motion ?t ?t)
                )
              )
              (not
                (in_motion ?t)
              )
              (in_motion ?t ?t)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 25 (count-once-per-objects preference1:green) )
)
(:scoring
  10
)
)

(define (game game-id-585) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (in_motion rug)
  )
)
(:constraints
  (and
    (preference preference1
      (at-end
        (agent_holds rug)
      )
    )
    (preference preference2
      (exists (?e - building ?s - (either dodgeball floor))
        (then
          (hold (and (agent_holds agent) (in_motion ?s) ) )
          (once (agent_holds ?s) )
          (once-measure (adjacent ?s) (distance agent ?s) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference2:beachball:orange) (count-total preference1:green:yellow_cube_block) )
)
(:scoring
  2
)
)

(define (game game-id-586) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?p - blue_cube_block)
      (forall (?n - (either pencil dodgeball alarm_clock blue_cube_block))
        (and
          (forall (?u - beachball ?d - chair)
            (game-optional
              (agent_holds ?p ?p upright ?d)
            )
          )
        )
      )
    )
    (exists (?s - building)
      (exists (?n - curved_wooden_ramp)
        (forall (?b - teddy_bear)
          (exists (?y - red_dodgeball ?i - game_object)
            (forall (?c - (either alarm_clock cellphone))
              (exists (?y - triangular_ramp ?p - game_object)
                (forall (?o - block)
                  (and
                    (game-conserved
                      (in_motion ?b ?p)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
    (and
      (forall (?l - chair)
        (and
          (forall (?p - dodgeball ?r - block ?k - wall)
            (exists (?i - shelf)
              (game-conserved
                (not
                  (and
                    (touch desk)
                    (and
                      (agent_holds agent door ?k)
                      (in ?k)
                    )
                    (equal_z_position ?k pink)
                  )
                )
              )
            )
          )
          (exists (?n - hexagonal_bin ?d - ball)
            (forall (?r ?c ?g ?a ?x ?j ?n ?b ?f ?q - dodgeball)
              (and
                (game-optional
                  (< 1 8)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?v ?d - ball ?r ?m - watch)
        (then
          (once (and (agent_holds ?m) (agent_holds ?r bed) (and (not (in_motion ?r ?r) ) (and (in_motion ?r) (in_motion ?m) (and (in_motion ?m) (agent_holds ?r) ) (< 2 1) (in bed) (agent_holds ?m ?m) (not (in_motion rug ?r) ) ) ) (object_orientation ?m ?r) (and (and (not (equal_z_position rug) ) (and (in_motion ?r) (not (and (on ?m ?m) (in_motion agent) ) ) (on ?r ?m) (on ?r) (agent_holds ?m ?r) (agent_holds ?m) (not (in_motion desk) ) (on ?r) ) ) (in_motion ?r) ) (touch ?m) (on agent ?r) ) )
          (once (in ?m) )
          (once (toggled_on ?m) )
        )
      )
    )
    (preference preference2
      (exists (?x - block ?i - dodgeball ?q - chair)
        (at-end
          (on ?q)
        )
      )
    )
    (preference preference3
      (exists (?u - (either blue_cube_block hexagonal_bin laptop))
        (then
          (once (agent_holds ?u ?u) )
          (once (not (in bed ?u) ) )
          (once (on ?u) )
        )
      )
    )
  )
)
(:terminal
  (> (count preference2:yellow) (* (and 2 ) (count-measure preference3:doggie_bed) )
  )
)
(:scoring
  (+ 3 (* 2 15 )
    (+ (count preference3:golfball:yellow:dodgeball) (+ (* 3 )
        10
      )
    )
  )
)
)

(define (game game-id-587) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (and
      (not
        (open ?xxx)
      )
      (and
        (in_motion ?xxx ?xxx)
        (touch ?xxx ?xxx)
        (and
          (in_motion ?xxx ?xxx)
          (in ?xxx)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?m - cube_block)
      (and
        (preference preference1
          (exists (?s - game_object)
            (then
              (hold-while (and (in ?s ?s) (not (and (and (in_motion ?s ?s bed) (touch ?m bed ?s) (in_motion ?m) (not (and (not (is_setup_object ?m) ) (exists (?o - hexagonal_bin) (not (and (in ?s) (not (in_motion ?o) ) ) ) ) ) ) ) (and (agent_holds bridge_block) (not (in_motion bed ?s) ) (not (not (agent_holds ?s ?m) ) ) ) ) ) ) (in_motion ?m ?s) )
              (hold (in_motion ?s) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 6 (* (count-once preference1:doggie_bed) (count preference1:hexagonal_bin) )
  )
)
(:scoring
  5
)
)

(define (game game-id-588) (:domain few-objects-room-v1)
(:setup
  (forall (?f - dodgeball ?b ?u ?i - block)
    (game-conserved
      (on ?i)
    )
  )
)
(:constraints
  (and
    (forall (?y - dodgeball)
      (and
        (preference preference1
          (exists (?q - hexagonal_bin)
            (then
              (once (in ?y) )
              (once (on agent ?q) )
              (hold (not (not (and (in_motion front) (opposite bed) ) ) ) )
              (once (in_motion ?q ?y) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?w - dodgeball ?l - triangular_ramp)
        (then
          (once (in_motion ?l) )
          (hold-while (not (agent_holds ?l) ) (is_setup_object ?l) (not (and (in_motion ?l ?l) (agent_holds ?l) ) ) )
          (once (between ?l) )
        )
      )
    )
  )
)
(:terminal
  (> (= (count-longest preference1:red) (count-once-per-objects preference2:basketball:pink_dodgeball) )
    2
  )
)
(:scoring
  (* (count-once-per-objects preference2:pink) )
)
)

(define (game game-id-589) (:domain many-objects-room-v1)
(:setup
  (exists (?s - hexagonal_bin)
    (and
      (forall (?b - chair)
        (forall (?i - bridge_block)
          (game-conserved
            (not
              (adjacent_side ?i)
            )
          )
        )
      )
      (exists (?r - dodgeball)
        (and
          (game-optional
            (agent_holds floor)
          )
          (game-conserved
            (and
              (not
                (not
                  (agent_holds ?r ?s)
                )
              )
              (on desk ?r)
            )
          )
          (game-optional
            (not
              (not
                (agent_holds ?s)
              )
            )
          )
        )
      )
      (game-optional
        (and
          (not
            (not
              (in_motion ?s ?s)
            )
          )
          (agent_holds ?s agent)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?f - dodgeball)
        (then
          (hold (rug_color_under ?f) )
          (hold-while (agent_holds ?f ?f) (or (not (and (agent_holds ?f) (not (faces ?f) ) ) ) (agent_holds ?f floor) ) )
          (once (in_motion ?f) )
          (once (on drawer) )
        )
      )
    )
    (forall (?f - (either dodgeball floor rug tall_cylindrical_block basketball dodgeball alarm_clock))
      (and
        (preference preference2
          (exists (?a - dodgeball)
            (at-end
              (not
                (agent_holds ?a)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (= (* (count preference2:dodgeball:basketball) (count preference2:book) )
    (> (>= (count preference1:blue_dodgeball) (+ 8 2 )
      )
      4
    )
  )
)
(:scoring
  3
)
)

(define (game game-id-590) (:domain many-objects-room-v1)
(:setup
  (and
    (or
      (game-optional
        (in ?xxx ?xxx)
      )
      (and
        (game-conserved
          (not
            (and
              (agent_holds ?xxx pink)
              (adjacent_side desk)
            )
          )
        )
        (game-optional
          (on ?xxx)
        )
      )
    )
    (exists (?u - dodgeball ?m - ball)
      (and
        (exists (?f - drawer ?r - cube_block)
          (game-conserved
            (agent_holds ?m)
          )
        )
        (exists (?s - (either dodgeball cube_block doggie_bed) ?i - (either flat_block book pyramid_block) ?o - curved_wooden_ramp ?j - hexagonal_bin)
          (exists (?s - rug ?l - game_object ?e - flat_block)
            (exists (?w - ball)
              (game-conserved
                (touch ?m ?m)
              )
            )
          )
        )
      )
    )
    (exists (?r - block)
      (and
        (exists (?k - building)
          (game-conserved
            (on ?k)
          )
        )
        (and
          (exists (?g - ball)
            (exists (?o - doggie_bed)
              (and
                (forall (?j - (either golfball basketball))
                  (and
                    (exists (?v - cylindrical_block)
                      (and
                        (game-optional
                          (agent_holds ?v agent)
                        )
                        (forall (?d - (either dodgeball dodgeball key_chain))
                          (and
                            (exists (?a - cube_block)
                              (game-conserved
                                (and
                                  (and
                                    (not
                                      (in ?g ?d)
                                    )
                                    (in ?v ?r)
                                    (adjacent desk)
                                  )
                                  (and
                                    (on ?g)
                                    (not
                                      (and
                                        (and
                                          (on ?v)
                                          (and
                                            (exists (?n - hexagonal_bin ?c - hexagonal_bin ?f - block ?h - hexagonal_bin)
                                              (not
                                                (and
                                                  (agent_holds ?h ?h)
                                                )
                                              )
                                            )
                                            (or
                                              (in_motion agent ?j)
                                              (object_orientation ?v)
                                              (in_motion ?o upright)
                                            )
                                          )
                                        )
                                        (not
                                          (not
                                            (not
                                              (in_motion bed bed)
                                            )
                                          )
                                        )
                                      )
                                    )
                                    (on ?o)
                                  )
                                  (in_motion ?v)
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?p - (either basketball cellphone))
        (then
          (hold (in_motion desk) )
          (once (on ) )
          (hold (on ?p) )
        )
      )
    )
    (preference preference2
      (exists (?r ?i - hexagonal_bin)
        (then
          (once (and (touch ?i) (in_motion ?r ?r) ) )
          (hold (in_motion ?i) )
          (once (agent_holds ?i) )
        )
      )
    )
  )
)
(:terminal
  (>= 6 (and (count-once-per-objects preference2:golfball) (* 3 3 )
      4
    )
  )
)
(:scoring
  10
)
)

(define (game game-id-591) (:domain few-objects-room-v1)
(:setup
  (or
    (game-conserved
      (or
        (in_motion ?xxx)
        (adjacent ?xxx)
      )
    )
  )
)
(:constraints
  (and
    (forall (?x - dodgeball)
      (and
        (preference preference1
          (exists (?s - (either dodgeball lamp))
            (then
              (hold (agent_holds ?x) )
              (once (in_motion ?x) )
              (once (and (in ?s) (not (not (and (in_motion ?x ?s) (in_motion ?x) ) ) ) ) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?q - ball)
        (then
          (once (adjacent ?q ?q) )
          (once (in_motion bed ?q) )
        )
      )
    )
    (preference preference3
      (exists (?m - hexagonal_bin ?k - dodgeball ?t - wall)
        (then
          (once (and (on ?t rug) (not (in ?t) ) ) )
          (once (in upright) )
          (hold (or (in_motion pink) (agent_holds ?t ?t) ) )
        )
      )
    )
    (preference preference4
      (exists (?b - game_object)
        (then
          (hold-while (and (on floor ?b) (not (in_motion agent) ) (agent_holds bed desk) ) (agent_holds ?b) )
          (once (in_motion ?b ?b) )
          (hold-for 0 (exists (?a - chair ?r - chair ?r - hexagonal_bin ?i - hexagonal_bin) (and (in_motion ?i) (in_motion ?b) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (not
      (>= (count preference3:cube_block) (count preference1:cube_block) )
    )
    (>= (external-forall-minimize (* (count-once-per-objects preference2:dodgeball) 10 )
      )
      (+ (* (count preference4:pink_dodgeball) (+ (count preference2:cube_block) (* (count-once-per-objects preference1:beachball) (count-measure preference2:hexagonal_bin) )
          )
        )
        (= (* (count preference3:block) 2 )
          10
        )
      )
    )
  )
)
(:scoring
  4
)
)

(define (game game-id-592) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?i ?x - chair ?n - dodgeball)
      (not
        (game-optional
          (not
            (and
              (and
                (in_motion bed)
                (and
                  (on desk ?n)
                  (agent_holds ?n ?n)
                  (not
                    (= 1 2 (distance ?n ?n))
                  )
                )
              )
              (not
                (is_setup_object ?n)
              )
            )
          )
        )
      )
    )
    (game-conserved
      (adjacent ?xxx ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?a - wall)
        (then
          (hold (adjacent ?a) )
          (hold (in ?a) )
          (any)
          (once (and (and (adjacent_side bed floor) (exists (?h ?m - building ?s - hexagonal_bin) (not (adjacent desk) ) ) ) (on ?a ?a) ) )
          (hold-while (agent_holds desk ?a) (and (between ?a) (in_motion ?a ?a) (<= 2 (distance desk 9)) ) )
        )
      )
    )
  )
)
(:terminal
  (= 5 (count preference1:blue) )
)
(:scoring
  (count preference1:beachball)
)
)

(define (game game-id-593) (:domain medium-objects-room-v1)
(:setup
  (exists (?c - dodgeball)
    (exists (?u - game_object ?v - hexagonal_bin)
      (game-conserved
        (in ?v ?v ?c)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?a - ball ?p - ball)
        (then
          (hold (not (in_motion agent ?p) ) )
          (once (and (agent_holds ?p) (on ?p ?p) (agent_holds ?p) ) )
          (once (in_motion ?p desk) )
        )
      )
    )
    (forall (?s ?u ?e - game_object)
      (and
        (preference preference2
          (exists (?m - hexagonal_bin)
            (at-end
              (in_motion ?m pink_dodgeball)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (= (count preference2:golfball:dodgeball) (count preference1:pink_dodgeball) )
)
(:scoring
  (total-time)
)
)

(define (game game-id-594) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (and
      (adjacent ?xxx)
      (and
        (and
          (adjacent ?xxx)
          (agent_holds ?xxx ?xxx)
          (in agent)
        )
        (in ?xxx bed)
      )
      (in_motion south_west_corner)
    )
  )
)
(:constraints
  (and
    (forall (?e - hexagonal_bin)
      (and
        (preference preference1
          (then
            (once (in_motion ?e ?e) )
            (hold (adjacent ?e ?e) )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (> (* (* 1 (* 10 4 (+ 2 (+ (<= (* (count-once-per-objects preference1:book:basketball) 2 )
                    (* (count-once preference1) (* (count-once-per-objects preference1:beachball) (+ 10 7 )
                      )
                      3
                    )
                  )
                  (* 10 (count preference1:dodgeball) 6 1 10 (+ 1 (count preference1:beachball) )
                  )
                )
                2
              )
            )
          )
          1
        )
        (count-once preference1:doggie_bed)
      )
      (>= (external-forall-maximize (count preference1:basketball) ) 10 )
    )
    (>= (count preference1:white) (count preference1:purple) )
  )
)
(:scoring
  2
)
)

(define (game game-id-595) (:domain many-objects-room-v1)
(:setup
  (forall (?n - hexagonal_bin)
    (or
      (game-conserved
        (in_motion rug ?n)
      )
      (game-optional
        (not
          (and
            (not
              (< (distance ) (distance ?n ?n))
            )
            (same_type bed ?n)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?o - ball)
        (at-end
          (in_motion ?o)
        )
      )
    )
  )
)
(:terminal
  (>= 3 (count preference1:beachball) )
)
(:scoring
  5
)
)

(define (game game-id-596) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (not
      (not
        (in_motion ?xxx)
      )
    )
  )
)
(:constraints
  (and
    (forall (?j ?p ?x - (either desktop golfball basketball lamp golfball basketball key_chain))
      (and
        (preference preference1
          (exists (?m - hexagonal_bin)
            (then
              (hold (in_motion ?x) )
              (once (and (>= 4 1) (toggled_on ?m) ) )
              (once (in_motion floor ?x) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?e - cube_block)
        (then
          (once (agent_holds ?e) )
          (once (in_motion blue) )
          (hold (in_motion blinds) )
        )
      )
    )
  )
)
(:terminal
  (> (count-once-per-objects preference1:red_pyramid_block) (external-forall-maximize (+ (external-forall-minimize 2 ) 1 )
    )
  )
)
(:scoring
  (* 15 )
)
)

(define (game game-id-597) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (game-conserved
        (adjacent top_shelf ?xxx)
      )
      (and
        (game-conserved
          (and
            (and
              (in left)
              (and
                (not
                  (= 1 2 (distance room_center ?xxx))
                )
                (and
                  (<= (distance ?xxx front) (distance ?xxx ?xxx))
                )
              )
              (and
                (and
                  (and
                    (agent_holds ?xxx ?xxx)
                    (agent_holds ?xxx)
                  )
                  (forall (?z - teddy_bear ?i - ball)
                    (in rug)
                  )
                )
                (object_orientation ?xxx)
              )
            )
            (not
              (adjacent ?xxx ?xxx)
            )
            (in_motion ?xxx ?xxx)
          )
        )
        (game-conserved
          (and
            (on ?xxx ?xxx)
            (and
              (and
                (exists (?c - ball)
                  (agent_holds ?c ?c)
                )
                (not
                  (and
                    (in floor ?xxx)
                    (not
                      (in ?xxx)
                    )
                  )
                )
              )
              (< (distance ?xxx agent) (distance ?xxx ?xxx))
              (not
                (in_motion ?xxx ?xxx)
              )
              (agent_holds bed)
            )
          )
        )
        (game-conserved
          (and
            (in_motion ?xxx ?xxx)
            (on ?xxx ?xxx)
          )
        )
      )
      (and
        (and
          (forall (?m - teddy_bear)
            (and
              (exists (?v - teddy_bear)
                (game-optional
                  (agent_holds ?v)
                )
              )
              (game-optional
                (agent_holds ?m)
              )
            )
          )
        )
        (not
          (exists (?y - hexagonal_bin)
            (forall (?l - bridge_block ?j - dodgeball)
              (and
                (exists (?z - (either main_light_switch dodgeball) ?e - drawer)
                  (and
                    (forall (?r ?s - building ?o - ball)
                      (and
                        (forall (?p - (either cube_block side_table))
                          (game-conserved
                            (and
                              (not
                                (and
                                  (not
                                    (in_motion agent bed)
                                  )
                                  (not
                                    (not
                                      (on ?o)
                                    )
                                  )
                                  (and
                                    (and
                                      (forall (?i - teddy_bear ?k - hexagonal_bin)
                                        (in_motion ?j)
                                      )
                                      (not
                                        (in ?y)
                                      )
                                    )
                                    (exists (?i - building ?a - dodgeball)
                                      (and
                                        (not
                                          (in_motion ?o)
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                              (open ?p ?j)
                              (in_motion ?e ?p)
                            )
                          )
                        )
                        (and
                          (not
                            (and
                              (game-conserved
                                (adjacent ?e)
                              )
                              (exists (?m - (either pyramid_block cube_block cube_block) ?i - ball)
                                (exists (?z ?v ?k ?q ?h ?l ?b ?n ?a ?x - hexagonal_bin ?h - cube_block)
                                  (exists (?n - chair)
                                    (exists (?d - block ?d - building)
                                      (and
                                        (forall (?w ?g - dodgeball ?r - (either pillow cd) ?v - cube_block)
                                          (forall (?m - cube_block)
                                            (game-optional
                                              (in_motion ?j)
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                    (and
                      (and
                        (exists (?u - hexagonal_bin)
                          (game-optional
                            (in_motion ?y)
                          )
                        )
                      )
                    )
                    (game-optional
                      (in_motion agent)
                    )
                  )
                )
              )
            )
          )
        )
      )
      (and
        (exists (?d - (either cellphone pillow))
          (game-optional
            (agent_holds ?d ?d)
          )
        )
        (forall (?j - dodgeball)
          (game-optional
            (in_motion ?j ?j)
          )
        )
      )
      (not
        (exists (?w ?p ?m - chair)
          (game-optional
            (in_motion ?w agent)
          )
        )
      )
    )
    (exists (?m - game_object)
      (forall (?c - game_object ?d - building ?d - ball)
        (forall (?q - hexagonal_bin)
          (game-conserved
            (and
              (rug_color_under ?q ?d)
              (not
                (not
                  (on ?m agent)
                )
              )
              (not
                (touch ?m desk)
              )
            )
          )
        )
      )
    )
    (game-conserved
      (agent_holds ?xxx ?xxx)
    )
  )
)
(:constraints
  (and
    (forall (?y - hexagonal_bin ?i - (either cube_block dodgeball flat_block basketball pyramid_block book laptop))
      (and
        (preference preference1
          (exists (?u - flat_block ?x - dodgeball)
            (at-end
              (in ?i ?x)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< (external-forall-maximize 100 ) (* (count preference1:beachball:yellow_cube_block) 100 )
  )
)
(:scoring
  5
)
)

(define (game game-id-598) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds ?xxx ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?y - triangular_ramp)
        (then
          (hold (adjacent ?y ?y) )
          (once (and (not (on ?y) ) (= 2 1 7) ) )
          (hold-for 9 (and (not (agent_holds bed ?y) ) (in ?y upright) ) )
        )
      )
    )
    (preference preference2
      (exists (?o - (either cube_block mug))
        (then
          (once (adjacent agent ?o) )
          (hold-while (in_motion ?o) (in_motion ?o ?o) )
          (hold-while (and (in ?o) (in_motion ?o) (in_motion ?o desk) ) (= 1 (distance desk room_center)) )
        )
      )
    )
  )
)
(:terminal
  (>= (external-forall-maximize (count-once-per-objects preference2:pink) ) 3 )
)
(:scoring
  (count-once-per-objects preference2:hexagonal_bin:dodgeball)
)
)

(define (game game-id-599) (:domain many-objects-room-v1)
(:setup
  (and
    (game-optional
      (and
        (not
          (not
            (exists (?j - teddy_bear ?a - dodgeball)
              (and
                (< (distance ?a) (distance ?a front))
                (agent_holds ?a)
              )
            )
          )
        )
        (above ?xxx)
      )
    )
    (and
      (exists (?c - hexagonal_bin)
        (game-optional
          (in_motion ?c ?c)
        )
      )
    )
    (and
      (and
        (game-optional
          (and
            (not
              (< (distance agent ?xxx) (distance agent ?xxx))
            )
            (and
              (same_object ?xxx)
              (on ?xxx ?xxx)
            )
          )
        )
        (exists (?l - doggie_bed ?r - dodgeball)
          (game-optional
            (and
              (agent_holds agent ?r)
              (in ?r ?r)
            )
          )
        )
        (and
          (and
            (forall (?k - hexagonal_bin)
              (game-optional
                (agent_holds ?k)
              )
            )
            (game-optional
              (object_orientation ?xxx rug)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?f - building)
        (then
          (hold (not (adjacent_side floor ?f) ) )
          (hold (not (not (in_motion bed) ) ) )
          (once (and (and (and (and (not (not (in_motion ?f) ) ) (agent_holds ?f) ) (on ?f desk) ) (adjacent ?f ?f) (not (and (agent_holds ?f) (not (not (not (and (not (in_motion ?f desk) ) (and (not (and (on ?f ?f) (and (on ?f ?f) (and (and (agent_holds ?f) (and (in_motion ?f left) (and (exists (?e - tall_cylindrical_block) (not (and (agent_holds ?f) (on right) (adjacent ?f) ) ) ) (and (on ?f) (<= 8 (distance agent 2 7)) ) ) ) ) (and (not (and (and (in_motion ?f) (adjacent ?f) (not (agent_holds agent ?f) ) (in_motion ?f) ) (touch ?f) (agent_holds ?f agent) ) ) (not (and (is_setup_object ?f ?f) (and (= (distance room_center back) 10) (in_motion ?f desk) ) ) ) ) ) ) ) ) (in_motion ?f ?f) ) ) ) ) ) (in desk) ) ) (in_motion ?f) ) (in_motion ?f) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (- (count-once preference1:basketball:dodgeball) )
  )
)
(:scoring
  (count-once-per-objects preference1:yellow:yellow_pyramid_block)
)
)

(define (game game-id-600) (:domain medium-objects-room-v1)
(:setup
  (and
    (not
      (and
        (exists (?x - wall)
          (exists (?m - dodgeball)
            (not
              (game-conserved
                (not
                  (in ?x)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?y - dodgeball)
      (and
        (preference preference1
          (exists (?v - building ?z - ball)
            (then
              (any)
              (hold-while (not (agent_holds ?y) ) (not (and (adjacent floor) (and (agent_holds ?y) (and (on ?z ?z) (in_motion ?y agent) ) (and (and (not (on front) ) (not (and (not (agent_holds ?z ?y) ) (agent_holds ?z ?y) ) ) ) (in_motion bed) ) (not (on ?y) ) ) (or (not (and (and (agent_holds ?y) (not (not (in_motion ?y agent) ) ) ) (in_motion ?y ?y) ) ) (touch agent) ) ) ) )
              (once (or (not (agent_holds ?z) ) (not (and (forall (?m - chair ?u ?g - cube_block) (in_motion front ?z rug) ) (adjacent agent) (on bottom_shelf floor) (in_motion ?z bed) ) ) ) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?u - hexagonal_bin ?p - game_object)
        (at-end
          (agent_holds ?p ?p)
        )
      )
    )
    (forall (?g - game_object)
      (and
        (preference preference3
          (exists (?k - teddy_bear)
            (then
              (once (agent_holds ?k) )
              (hold (on ?g) )
              (once (and (not (on ?g south_west_corner) ) (and (< 1 (distance room_center ?g)) (agent_holds ?k) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (* (* (+ (count preference3:yellow) (count-once-per-external-objects preference2:beachball:yellow_cube_block) (count-overlapping preference2:blue_pyramid_block) )
        (external-forall-maximize
          30
        )
        (count-increasing-measure preference3:dodgeball)
        (count preference3:beachball)
      )
      (* (not (count preference3:side_table:green) ) 5 )
    )
  )
)
(:scoring
  2
)
)

(define (game game-id-601) (:domain few-objects-room-v1)
(:setup
  (and
    (game-optional
      (in_motion ?xxx ?xxx)
    )
    (and
      (forall (?r - doggie_bed)
        (game-conserved
          (not
            (and
              (in ?r)
              (and
                (in_motion ?r ?r)
                (in ?r)
              )
            )
          )
        )
      )
    )
    (game-optional
      (in agent south_west_corner)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (then
        (once (> 8 (distance desk ?xxx ?xxx)) )
        (hold (is_setup_object ?xxx) )
        (once (exists (?z - ball) (and (<= (distance desk ?z room_center) (distance ?z ?z)) (or (agent_holds ?z) (and (in_motion ?z) (not (agent_holds ?z ?z) ) ) ) (>= 8 3) (in_motion ?z) (agent_holds floor) (same_color ?z) (exists (?v - wall) (and (in_motion ?z ?v) (<= (distance ?v 5) 8) ) ) (and (on ?z) (or (not (and (in_motion agent) (and (and (not (in_motion ?z) ) (in_motion ?z) ) (not (not (agent_holds ?z) ) ) ) ) ) (and (agent_holds rug) (same_color ?z) ) (on bed ?z) ) ) (in_motion ?z) (adjacent ?z) ) ) )
      )
    )
    (preference preference2
      (exists (?x - hexagonal_bin ?l - dodgeball)
        (then
          (hold-while (not (same_object ?l ?l) ) (in ?l) )
          (once (not (not (not (and (not (and (and (adjacent ?l ?l) (and (not (and (not (in_motion agent ?l) ) (and (agent_crouches ?l) (and (adjacent ?l) (< (distance door ?l) 3) ) ) ) ) (object_orientation ?l) ) ) (and (in rug ?l) (equal_z_position agent) (and (agent_holds ?l) (and (not (agent_holds ?l ?l) ) (not (and (not (on ?l) ) (= 1 (distance ?l 6)) ) ) ) (and (in_motion bed) (agent_holds top_drawer) ) ) (agent_holds bed ?l) ) (agent_holds ?l) ) ) (in ?l ?l) (in ?l top_shelf) ) ) ) ) )
          (once (rug_color_under ?l ?l) )
        )
      )
    )
    (forall (?n - cube_block)
      (and
        (preference preference3
          (exists (?m - desk_shelf ?o - cube_block)
            (then
              (once (not (agent_holds ?n) ) )
              (hold (<= (x_position ?o room_center) (distance ?o ?o)) )
              (once (< 4 6) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference3:pink) (count-once-per-objects preference3:basketball) )
)
(:scoring
  (+ (count-once-per-objects preference3:golfball) 5 )
)
)

(define (game game-id-602) (:domain many-objects-room-v1)
(:setup
  (exists (?v - chair)
    (and
      (and
        (and
          (and
            (and
              (game-conserved
                (adjacent ?v)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?y - hexagonal_bin)
        (then
          (hold (= 1 (distance 10 desk agent)) )
          (once (not (not (= (distance ?y side_table)) ) ) )
          (once (not (not (on ?y) ) ) )
        )
      )
    )
    (forall (?g - doggie_bed)
      (and
        (preference preference2
          (exists (?p - tall_cylindrical_block)
            (at-end
              (in_motion ?p)
            )
          )
        )
        (preference preference3
          (exists (?v - block)
            (at-end
              (not
                (not
                  (agent_holds ?v)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< (external-forall-maximize (count-once-per-objects preference2:white:book:triangle_block) ) (* (* 2 2 )
      (= 300 3 (external-forall-minimize 3 ) )
    )
  )
)
(:scoring
  (count preference1:pink:rug:golfball)
)
)

(define (game game-id-603) (:domain few-objects-room-v1)
(:setup
  (not
    (forall (?q - curved_wooden_ramp)
      (game-optional
        (adjacent_side ?q)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?z - building)
        (then
          (hold (adjacent ?z ?z) )
          (once (agent_holds ?z) )
          (once (and (in ?z) (agent_holds ?z) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (total-score) 6 )
    (< (count-once preference1:yellow_cube_block) (count-once-per-objects preference1:orange:blue) )
  )
)
(:scoring
  (count preference1:beachball)
)
)

(define (game game-id-604) (:domain many-objects-room-v1)
(:setup
  (exists (?d - pyramid_block)
    (game-conserved
      (in_motion ?d ?d)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (at-end
        (in ?xxx)
      )
    )
  )
)
(:terminal
  (= 3 (= 15 4 )
  )
)
(:scoring
  (* 3 5 )
)
)

(define (game game-id-605) (:domain medium-objects-room-v1)
(:setup
  (exists (?w - game_object ?u - hexagonal_bin)
    (or
      (and
        (game-conserved
          (not
            (in_motion green_golfball)
          )
        )
        (forall (?e - hexagonal_bin ?l - dodgeball)
          (game-optional
            (not
              (in ?l ?u)
            )
          )
        )
      )
      (forall (?w - (either basketball alarm_clock) ?n - (either laptop chair golfball))
        (exists (?z - hexagonal_bin)
          (and
            (game-conserved
              (agent_holds ?u)
            )
            (forall (?h - teddy_bear)
              (forall (?p - building ?d - game_object)
                (exists (?f - curved_wooden_ramp)
                  (game-conserved
                    (or
                      (in_motion ?d desk)
                      (touch ?f ?n)
                    )
                  )
                )
              )
            )
          )
        )
      )
      (and
        (and
          (forall (?z - golfball)
            (game-conserved
              (not
                (not
                  (not
                    (and
                      (and
                        (in_motion ?z ?u)
                        (opposite ?u desk ?z)
                      )
                      (in_motion ?z rug)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?e - sliding_door ?r - wall)
        (then
          (once (agent_holds desk ?r) )
          (once (not (in_motion ?r) ) )
          (hold (same_color ?r) )
        )
      )
    )
    (preference preference2
      (exists (?u - (either blue_cube_block desktop ball))
        (then
          (once (not (adjacent ?u) ) )
          (once (and (not (and (not (in ?u) ) (in_motion ?u rug) ) ) (and (not (and (adjacent ?u ?u) (agent_holds bed) (and (is_setup_object front ?u) (touch ?u ?u) (< (distance ?u ?u ?u) 9) (in_motion ?u) (> (distance side_table desk) 4) (in_motion ?u ?u) (not (not (in_motion ?u) ) ) (not (not (on ?u ?u) ) ) ) ) ) (in ?u) ) ) )
          (once (and (and (not (forall (?z - beachball) (or (on ?z) (and (in_motion ?u) (rug_color_under ?u) ) ) ) ) (in ?u) ) (and (not (adjacent ?u) ) (not (touch ?u ?u) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (> 4 (count-once-per-objects preference2:purple:dodgeball) )
)
(:scoring
  (count-once preference1:pink_dodgeball)
)
)

(define (game game-id-606) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?v - ball)
      (game-conserved
        (agent_holds ?v ?v)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?f - curved_wooden_ramp ?b - block)
        (then
          (hold (in_motion agent) )
          (hold (agent_holds ?b ?b) )
          (once (not (on blue) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= 2 (count-once-per-objects preference1:pink) )
    (>= (- (* (count preference1:rug:dodgeball) 3 )
      )
      (+ (count preference1:basketball) (+ (* (count preference1:yellow) 1 )
          (* (external-forall-maximize (total-score) ) 7 )
        )
        (count preference1:hexagonal_bin)
        (count preference1:basketball)
        (* (>= (count-once preference1:green:dodgeball) (- 5 )
          )
          (* (* (* 4 10 2 )
              (+ 1 3 )
            )
            (* 10 (- (count-once-per-objects preference1:pyramid_block:pyramid_block) )
            )
          )
        )
        50
      )
    )
    (or
      (< (+ 2 10 3 )
        (* 5 3 )
      )
      (>= 3 10 )
    )
  )
)
(:scoring
  (count preference1:beachball)
)
)

(define (game game-id-607) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?e - (either doggie_bed))
      (and
        (forall (?n - desktop)
          (and
            (forall (?a - block ?q - ball)
              (game-conserved
                (in_motion ?e ?e)
              )
            )
          )
        )
        (exists (?j - hexagonal_bin ?f - ball)
          (game-conserved
            (touch ?e ?e)
          )
        )
        (forall (?b ?p - (either yellow floor) ?b - ball ?h - dodgeball)
          (game-optional
            (in_motion ?h)
          )
        )
      )
    )
    (game-conserved
      (and
        (in_motion ?xxx floor)
        (< 1 9)
      )
    )
    (exists (?n - building)
      (game-optional
        (not
          (not
            (on ?n)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?v - hexagonal_bin)
        (then
          (hold (not (adjacent ?v) ) )
          (once (not (on ?v ?v) ) )
          (hold-while (agent_holds ?v ?v) (agent_holds desk ?v) (< (distance room_center) 7) )
        )
      )
    )
    (forall (?e - curved_wooden_ramp)
      (and
        (preference preference2
          (exists (?h - game_object ?k - dodgeball)
            (then
              (once (agent_holds ?k ?e) )
              (hold (adjacent ?k) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= (total-score) (> (count-once-per-objects preference1:dodgeball) (+ (* (count preference2:red:dodgeball) )
        (+ (* 4 2 )
          (* (count-once preference1:dodgeball:basketball) (total-time) )
        )
      )
    )
  )
)
(:scoring
  (count-once-per-objects preference1:basketball)
)
)

(define (game game-id-608) (:domain medium-objects-room-v1)
(:setup
  (exists (?q - (either triangular_ramp cube_block) ?n - hexagonal_bin)
    (game-conserved
      (agent_holds ?n ?n)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?a - rug ?m - cube_block ?x - curved_wooden_ramp)
        (then
          (once (not (not (= 1 6) ) ) )
          (once (exists (?v - building) (in_motion floor ?x) ) )
          (hold (in ?x ?x) )
        )
      )
    )
    (preference preference2
      (then
        (hold (and (and (and (agent_holds desk ?xxx) (and (and (not (and (agent_holds ?xxx) (not (adjacent desk ?xxx) ) (not (and (exists (?b - hexagonal_bin ?k - (either desktop golfball) ?e - (either book)) (in desk) ) (and (and (and (broken bed) (in_motion ?xxx ?xxx) (not (in ?xxx) ) ) (adjacent ?xxx) (or (in ?xxx ?xxx) (on ?xxx) (and (not (in_motion ?xxx ?xxx) ) (in ?xxx) ) (exists (?d - chair) (and (and (and (touch ?d ?d) (in_motion ?d) ) (agent_holds ?d ?d) ) (agent_holds ?d) ) ) ) ) (in_motion ?xxx) ) ) ) ) ) (in brown ?xxx) ) (> 1 (distance ?xxx ?xxx)) (and (agent_holds ?xxx) (agent_holds ?xxx side_table) ) (agent_holds ?xxx ?xxx ?xxx) ) (on ?xxx) ) (not (exists (?b - ball) (adjacent pink_dodgeball) ) ) ) (not (not (not (not (in ?xxx ?xxx) ) ) ) ) ) )
        (hold (not (not (agent_holds ?xxx) ) ) )
        (once (and (not (not (and (touch ?xxx) (on ?xxx ?xxx) (in_motion ?xxx) ) ) ) (and (agent_holds ?xxx) (not (same_object ?xxx ?xxx) ) ) (agent_holds agent) (on ?xxx ?xxx) ) )
      )
    )
  )
)
(:terminal
  (>= 10 (external-forall-maximize (* (* (count preference1) (count-once-per-objects preference2:basketball) )
        5
      )
    )
  )
)
(:scoring
  (count-once-per-objects preference2:green:yellow:dodgeball)
)
)

(define (game game-id-609) (:domain medium-objects-room-v1)
(:setup
  (exists (?j - dodgeball)
    (and
      (exists (?z - ball)
        (exists (?k ?u - hexagonal_bin ?r - dodgeball)
          (game-optional
            (and
              (not
                (agent_holds ?r)
              )
              (and
                (in ?z)
                (agent_holds ?j)
                (game_over ?z ?j)
              )
              (in_motion ?j)
            )
          )
        )
      )
      (forall (?w - game_object ?f - dodgeball)
        (not
          (and
            (forall (?s - cube_block ?m - cube_block)
              (game-optional
                (exists (?o - hexagonal_bin)
                  (in_motion ?m)
                )
              )
            )
            (game-conserved
              (in_motion ?f ?j)
            )
          )
        )
      )
      (game-conserved
        (and
          (between ?j agent)
          (not
            (in_motion ?j)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?l - doggie_bed ?w - doggie_bed)
        (then
          (hold-for 3 (agent_holds ?w ?w) )
        )
      )
    )
    (preference preference2
      (exists (?n - ball ?n - block)
        (then
          (once (not (and (and (and (and (in ?n ?n) (not (agent_holds ?n ?n) ) ) (in_motion door ?n ?n) ) (not (agent_holds ?n) ) ) (agent_holds ?n bed) ) ) )
          (once (and (in_motion pink) (< (distance ?n ?n) (x_position 3 ?n)) ) )
          (hold (= (distance ?n 0) (distance 6 ?n)) )
        )
      )
    )
  )
)
(:terminal
  (and
    (= (+ (count-once-per-external-objects preference1) (* 15 5 )
      )
      10
    )
    (>= (* (+ (count-shortest preference2:dodgeball:pink) 40 )
        (+ 30 (* (count preference2:golfball) 2 )
        )
      )
      (* (count preference1:block) (* (count-once-per-objects preference2:basketball) 10 )
      )
    )
  )
)
(:scoring
  (count preference2:basketball:pink)
)
)

(define (game game-id-610) (:domain medium-objects-room-v1)
(:setup
  (forall (?h - ball ?p - (either cylindrical_block yellow))
    (and
      (game-conserved
        (in ?p ?p)
      )
      (and
        (game-optional
          (agent_holds ?p ?p)
        )
      )
      (exists (?x - doggie_bed)
        (exists (?h - (either blue_cube_block dodgeball))
          (game-optional
            (< (distance ?x ?h) 4)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?n - shelf ?t ?g - dodgeball ?k - curved_wooden_ramp)
        (then
          (once (agent_holds desk ?k) )
          (hold (agent_holds ?k ?k) )
          (once (not (game_start pink_dodgeball) ) )
        )
      )
    )
    (preference preference2
      (exists (?q ?m - block)
        (at-end
          (not
            (adjacent_side ?q)
          )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (* (* (* 2 (count-increasing-measure preference1:yellow_cube_block:blue_dodgeball:pink_dodgeball) )
          3
        )
        5
      )
      (* (* (+ (* 2 (- (count-once-per-objects preference1:green:basketball) )
            )
            2
          )
          (- (count-once-per-objects preference1:golfball) )
        )
        3
        (+ 2 (* 3 (count preference2:dodgeball:beachball:basketball) )
        )
      )
    )
    (+ (total-score) 1 (* 7 (< (count-once preference2:beachball) (count preference2:doggie_bed) )
        (count preference1:red:dodgeball)
        (* (count preference2:blue_dodgeball:cube_block) 100 )
        10
        (* (count-measure preference2:alarm_clock:pink) (* (count-once preference2:dodgeball) (* 2 6 )
          )
          (count preference1:red)
        )
        (count preference1)
        (- (count preference2:red) )
        (total-score)
      )
    )
  )
)
(:scoring
  8
)
)

(define (game game-id-611) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (and
      (agent_holds ?xxx)
      (not
        (or
          (agent_holds ?xxx upright)
        )
      )
      (on ?xxx)
    )
  )
)
(:constraints
  (and
    (forall (?l - dodgeball ?o - dodgeball)
      (and
        (preference preference1
          (exists (?z - (either lamp triangular_ramp red))
            (then
              (once (not (not (in ?z) ) ) )
              (once (exists (?i - cube_block ?k - dodgeball) (not (and (on ?k) (in_motion ?o) ) ) ) )
              (once (not (adjacent ?z) ) )
              (once (exists (?l - curved_wooden_ramp) (and (and (agent_holds ?z) (and (= (distance ?o agent) (distance agent)) (and (and (in blue ?o) (adjacent ?z) (and (and (and (on ?z) (or (agent_holds ?z ?l) (not (in ?z) ) ) ) (touch ?o ?l) ) (same_object ?l) ) (and (and (game_start ?z ?o) (exists (?t - shelf) (agent_holds ?t) ) (adjacent ?l desk) (in_motion ?o ?l) ) (between ?o) ) (adjacent ?l top_drawer) (= 7 (distance ?o front_left_corner)) ) (= 5 1) ) ) ) (on ?l ?z ?l ?o) ) ) )
            )
          )
        )
        (preference preference2
          (then
            (hold-while (agent_holds ?o ?o) (in ?o ?o) )
            (once (agent_holds ?o ?o) )
            (hold (exists (?s - hexagonal_bin) (on ?s north_wall) ) )
          )
        )
      )
    )
    (preference preference3
      (then
        (hold-while (in ?xxx ?xxx) (agent_holds ?xxx) )
        (hold-while (in_motion ?xxx ?xxx) (in_motion door ?xxx ?xxx) )
        (once (not (agent_holds ?xxx) ) )
      )
    )
  )
)
(:terminal
  (= 4 3 )
)
(:scoring
  (count preference1:purple)
)
)

(define (game game-id-612) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds ?xxx ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (at-end
        (in_motion ?xxx top_drawer)
      )
    )
    (preference preference2
      (at-end
        (and
          (and
            (and
              (not
                (and
                  (and
                    (on )
                    (on ?xxx)
                    (and
                      (in_motion ?xxx ?xxx ?xxx)
                      (not
                        (and
                          (in ?xxx)
                          (agent_holds ?xxx ?xxx)
                          (and
                            (agent_crouches color ?xxx)
                            (in_motion ?xxx)
                          )
                        )
                      )
                      (agent_holds agent)
                    )
                  )
                  (not
                    (not
                      (agent_holds ?xxx upright)
                    )
                  )
                )
              )
              (and
                (agent_holds ?xxx ?xxx)
              )
            )
            (and
              (agent_holds ?xxx)
              (and
                (not
                  (in ?xxx ?xxx)
                )
                (agent_holds ?xxx door)
              )
              (or
                (in_motion agent ?xxx)
                (touch ?xxx ?xxx)
              )
            )
          )
          (not
            (and
              (in ?xxx ?xxx)
              (not
                (agent_holds ?xxx ?xxx)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (total-time) 3 )
    (>= (* (+ 4 (count-once preference2:dodgeball) 3 (+ 5 2 )
        )
        (count-once-per-external-objects preference1:basketball)
      )
      5
    )
  )
)
(:scoring
  (count preference1:yellow)
)
)

(define (game game-id-613) (:domain medium-objects-room-v1)
(:setup
  (forall (?y - block)
    (game-optional
      (not
        (agent_holds desk agent)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?u - curved_wooden_ramp)
        (then
          (hold (and (and (and (not (in ?u) ) (not (and (on ?u) (in ?u ?u) (not (and (in_motion ?u) (same_color rug ?u) ) ) ) ) (not (and (touch ) (in_motion ?u) ) ) ) (< (distance agent ?u) 1) ) (in ?u agent) ) )
          (once (agent_holds ?u) )
          (hold (equal_x_position ?u) )
        )
      )
    )
    (forall (?j ?h - shelf ?x - dodgeball)
      (and
        (preference preference2
          (exists (?c - (either bridge_block key_chain))
            (then
              (once (not (agent_holds agent ?x) ) )
              (once (in ?c ?c) )
              (forall-sequence (?k - chair ?h - pyramid_block)
                (then
                  (once (on ?x ?c) )
                  (once (game_over ?x ?x) )
                  (hold (agent_holds ?h ?x) )
                  (once (in_motion ?h) )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> 5 1 )
)
(:scoring
  (+ (+ 5 30 )
    (count-once-per-objects preference2:beachball:tall_cylindrical_block)
  )
)
)

(define (game game-id-614) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (and
      (object_orientation ?xxx)
      (agent_holds ?xxx ?xxx)
    )
  )
)
(:constraints
  (and
    (forall (?n - pyramid_block)
      (and
        (preference preference1
          (exists (?p - block ?i - ball ?e - hexagonal_bin)
            (at-end
              (and
                (not
                  (same_color ?e)
                )
                (exists (?p - flat_block)
                  (exists (?i - curved_wooden_ramp ?o ?c - cube_block)
                    (= (distance ?e ?e) (distance desk 6))
                  )
                )
              )
            )
          )
        )
        (preference preference2
          (exists (?k - hexagonal_bin)
            (then
              (once (and (in ?k) (not (not (in_motion ?n) ) ) (in_motion ?k) (and (not (not (and (on ?k) (or (agent_holds ?n ?n ?n) (on ?k ?k) ) ) ) ) (not (< 7 (distance room_center ?k)) ) ) (adjacent_side ?k ?n) (agent_holds ?k desk) (agent_holds ?n ?k) ) )
              (once (on ?n ?k) )
              (once (equal_z_position pink ?n) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (= (count preference2:basketball) (* 3 1 )
  )
)
(:scoring
  2
)
)

(define (game game-id-615) (:domain medium-objects-room-v1)
(:setup
  (forall (?f - block)
    (and
      (forall (?g - dodgeball)
        (and
          (exists (?a - curved_wooden_ramp)
            (exists (?x - teddy_bear)
              (game-optional
                (on ?a)
              )
            )
          )
          (game-optional
            (and
              (in_motion top_shelf)
              (exists (?m - cube_block)
                (agent_holds ?g)
              )
              (not
                (agent_holds ?f)
              )
              (agent_holds bed pink)
            )
          )
          (and
            (game-conserved
              (not
                (agent_holds ?g ?g)
              )
            )
            (and
              (exists (?a - dodgeball ?l - dodgeball)
                (and
                  (forall (?n ?d - ball)
                    (exists (?h - wall)
                      (exists (?s - wall ?p - wall ?u - dodgeball)
                        (exists (?p - shelf)
                          (exists (?c - hexagonal_bin)
                            (exists (?r - curved_wooden_ramp)
                              (game-conserved
                                (agent_holds ?l)
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
      (exists (?s - dodgeball ?z - curved_wooden_ramp ?a - game_object ?e - (either cylindrical_block cd) ?k - ball)
        (game-conserved
          (exists (?v - dodgeball)
            (in_motion bed ?v ?k)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?a ?e - building)
        (then
          (hold (and (agent_holds bed) (agent_holds ?a pink_dodgeball ?e) ) )
          (once (and (in_motion ?e) (agent_holds ?a) ) )
          (once (not (not (and (agent_holds ?e) (not (and (in_motion ?e ?e) (and (or (in_motion ?a) (touch ?e agent) ) (in_motion ?e) ) ) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 15 (count-overlapping preference1:basketball) )
)
(:scoring
  (external-forall-maximize
    (* 10 (* 30 (count preference1:pink) (count preference1:dodgeball) )
      4
    )
  )
)
)

(define (game game-id-616) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (not
      (and
        (< (distance ?xxx agent) 1)
        (< 1 (distance ?xxx 7 7))
      )
    )
  )
)
(:constraints
  (and
    (forall (?k - cube_block ?g - yellow_pyramid_block)
      (and
        (preference preference1
          (then
            (hold (in_motion ?g) )
            (hold (and (adjacent ?g ?g) (not (on ?g ?g) ) (and (in_motion ?g) (exists (?j - (either cylindrical_block cellphone) ?y - ball) (game_over ?y ?g) ) (not (> 6 (distance 8 ?g)) ) ) ) )
            (hold (adjacent green_golfball) )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-longest preference1:golfball) (* 10 (count-once-per-objects preference1:blue_dodgeball) (* (count preference1:golfball) (external-forall-maximize (- 15 )
          )
        )
      )
    )
  )
)
(:scoring
  (<= 2 (count preference1:orange) )
)
)

(define (game game-id-617) (:domain few-objects-room-v1)
(:setup
  (forall (?m - blinds)
    (or
      (and
        (exists (?g - (either dodgeball desktop floor))
          (game-conserved
            (not
              (and
                (in ?m)
                (on ?m)
              )
            )
          )
        )
        (and
          (exists (?u - ball)
            (forall (?w - color)
              (and
                (game-optional
                  (in ?w)
                )
                (game-optional
                  (and
                    (in_motion ?w ?m)
                    (in ?u ?m)
                  )
                )
                (exists (?a - hexagonal_bin)
                  (game-conserved
                    (agent_holds ?w ?w)
                  )
                )
              )
            )
          )
          (game-optional
            (on ?m)
          )
        )
      )
      (and
        (game-conserved
          (object_orientation ?m ?m)
        )
      )
      (forall (?e - bridge_block ?f - bridge_block)
        (forall (?l - shelf)
          (exists (?h - wall)
            (game-conserved
              (on ?h)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?j - hexagonal_bin)
      (and
        (preference preference1
          (exists (?n - cube_block)
            (then
              (once (and (in_motion agent) (object_orientation ?j) ) )
              (once (not (not (game_start ?n) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> 6 3 )
)
(:scoring
  (* (* (count preference1:blue_cube_block) (/ (+ 5 (count preference1:basketball:yellow) )
        (count-measure preference1:pyramid_block)
      )
      (* 6 (* (+ (count preference1:blue_dodgeball) 6 (* (* 0.7 (* (* (count-once-per-objects preference1:beachball) (count preference1:blue_pyramid_block:cube_block) )
                  (count-once preference1:top_drawer)
                )
              )
              (count preference1:pink:side_table)
            )
          )
          (* (* (count-longest preference1:blue_cube_block) (+ 8 )
              (* (count preference1:dodgeball) (count preference1) (count-once-per-objects preference1:tan) )
            )
            100
          )
        )
      )
    )
    (count-once-per-objects preference1:green)
  )
)
)

(define (game game-id-618) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?c - curved_wooden_ramp ?m - doggie_bed)
      (and
        (and
          (exists (?x ?y ?n - game_object ?z - game_object)
            (forall (?l - cylindrical_block ?f - cube_block)
              (exists (?k ?w - hexagonal_bin)
                (and
                  (exists (?q - pillow)
                    (game-optional
                      (in_motion ?f ?f)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?d - game_object)
        (at-end
          (object_orientation ?d ?d)
        )
      )
    )
  )
)
(:terminal
  (>= 180 (* (* 3 10 )
      1
      1
      4
      3
      6
    )
  )
)
(:scoring
  3
)
)

(define (game game-id-619) (:domain few-objects-room-v1)
(:setup
  (exists (?u - game_object)
    (game-conserved
      (and
        (in_motion ?u)
        (and
          (not
            (not
              (and
                (agent_holds ?u)
                (and
                  (not
                    (agent_holds ?u ?u)
                  )
                  (not
                    (in ?u)
                  )
                )
              )
            )
          )
          (in rug)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?z - ball)
        (then
          (once (in ?z) )
          (hold (in agent ?z) )
          (once (in ?z ?z) )
        )
      )
    )
    (preference preference2
      (exists (?x - ball)
        (then
          (forall-sequence (?a - dodgeball ?y - game_object ?b - ball)
            (then
              (once (not (agent_holds ?b ?x ?x) ) )
              (once (in_motion ?b ?b) )
              (once (agent_holds ?x south_west_corner) )
            )
          )
          (once (agent_holds desk ?x) )
          (once (object_orientation ?x) )
        )
      )
    )
  )
)
(:terminal
  (= (count preference2) (external-forall-maximize (* (- (count-once preference2:red) )
        10
        (count-once preference1:basketball)
        (count preference2:pink)
      )
    )
  )
)
(:scoring
  (count preference1:pink)
)
)

(define (game game-id-620) (:domain few-objects-room-v1)
(:setup
  (forall (?x - shelf ?e - hexagonal_bin ?v - doggie_bed ?x - hexagonal_bin)
    (forall (?t - ball)
      (and
        (game-conserved
          (and
            (in_motion ?t agent)
            (in_motion rug)
          )
        )
        (game-optional
          (on ?t)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?l - pillow ?v - hexagonal_bin)
        (at-end
          (not
            (not
              (and
                (not
                  (in_motion ?v ?v)
                )
                (not
                  (not
                    (on )
                  )
                )
              )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?r - game_object)
        (at-end
          (on ?r)
        )
      )
    )
  )
)
(:terminal
  (<= 6 (total-score) )
)
(:scoring
  (+ (* (count preference2:red:blue_dodgeball) 15 )
    (count-once-per-objects preference1:beachball:dodgeball)
  )
)
)

(define (game game-id-621) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (exists (?o - (either wall alarm_clock) ?c - color)
        (game-conserved
          (not
            (not
              (adjacent agent)
            )
          )
        )
      )
      (and
        (and
          (exists (?p - dodgeball)
            (game-optional
              (and
                (touch ?p ?p)
                (on ?p)
              )
            )
          )
          (and
            (game-conserved
              (and
                (agent_holds ?xxx agent)
                (and
                  (on ?xxx ?xxx)
                  (< (distance ?xxx desk) (building_size side_table ?xxx))
                )
              )
            )
          )
          (game-optional
            (not
              (adjacent ?xxx ?xxx)
            )
          )
        )
      )
      (and
        (forall (?p - (either alarm_clock watch) ?x - cube_block)
          (game-conserved
            (exists (?p - pyramid_block)
              (not
                (not
                  (adjacent ?p)
                )
              )
            )
          )
        )
        (forall (?o - hexagonal_bin)
          (not
            (exists (?u - cube_block)
              (game-optional
                (agent_holds ?o)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?j - block ?l - hexagonal_bin ?n - shelf)
      (and
        (preference preference1
          (exists (?q - hexagonal_bin)
            (at-end
              (same_color ?q ?q)
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?a - hexagonal_bin ?f - (either dodgeball laptop))
        (then
          (once (not (in bed) ) )
          (once (and (on ?f ?f ?f) (not (between floor) ) ) )
          (once (not (and (and (in_motion ?f rug) (on ?f) ) (forall (?x - wall) (in_motion ?x) ) ) ) )
        )
      )
    )
    (forall (?d - block)
      (and
        (preference preference3
          (exists (?f - hexagonal_bin ?m - ball)
            (at-end
              (and
                (exists (?e - dodgeball)
                  (in_motion ?m)
                )
                (< (distance 3 ?d) 7)
              )
            )
          )
        )
        (preference preference4
          (exists (?w - cube_block ?k - game_object)
            (then
              (hold (agent_holds ?d) )
              (once (not (agent_holds ?d) ) )
              (once (not (< 4 (distance ?k 6)) ) )
            )
          )
        )
        (preference preference5
          (at-end
            (toggled_on ?d)
          )
        )
      )
    )
    (preference preference6
      (exists (?y - cylindrical_block)
        (then
          (hold (< (distance ) (distance 9 ?y)) )
          (once (on ?y door) )
          (once (agent_holds ?y) )
        )
      )
    )
    (preference preference7
      (exists (?h - cube_block ?f - dodgeball ?k ?y - curved_wooden_ramp ?y - curved_wooden_ramp)
        (then
          (hold-while (in_motion ?y) (agent_holds ?y) )
          (once (and (agent_holds ?y ?y) (agent_holds ?y ?y) ) )
          (hold (object_orientation bed) )
        )
      )
    )
    (preference preference8
      (exists (?j - drawer ?p - dodgeball)
        (then
          (once (= (building_size ?p)) )
          (once (agent_holds floor) )
          (hold (= (distance 0 desk) 1 2) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-overlapping preference2:blue_cube_block:alarm_clock) 4 )
)
(:scoring
  2
)
)

(define (game game-id-622) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (game-conserved
        (agent_holds pink)
      )
      (exists (?x - book)
        (game-conserved
          (on ?x)
        )
      )
      (exists (?a - hexagonal_bin ?f - (either doggie_bed desktop) ?w - game_object)
        (and
          (and
            (or
              (game-conserved
                (and
                  (and
                    (on ?w pink)
                  )
                  (and
                    (in_motion ?w ?w)
                    (and
                      (on ?w)
                      (and
                        (object_orientation ?w ?w)
                        (in agent ?w)
                      )
                    )
                  )
                )
              )
              (exists (?b - desk_shelf)
                (forall (?d - pyramid_block)
                  (exists (?j - ball)
                    (exists (?k - hexagonal_bin)
                      (exists (?f - hexagonal_bin ?n - triangular_ramp)
                        (exists (?v - cube_block)
                          (game-conserved
                            (agent_holds ?n)
                          )
                        )
                      )
                    )
                  )
                )
              )
              (exists (?l - shelf)
                (game-conserved
                  (not
                    (and
                      (and
                        (not
                          (and
                            (agent_holds ?w ?w)
                            (on ?w ?l)
                            (not
                              (and
                                (same_object ?l)
                                (and
                                  (in_motion ?w ?w)
                                  (agent_holds agent)
                                )
                              )
                            )
                          )
                        )
                        (in_motion ?w)
                      )
                    )
                  )
                )
              )
            )
            (and
              (game-optional
                (not
                  (in ?w ?w ?w)
                )
              )
              (exists (?i - dodgeball)
                (game-conserved
                  (agent_holds ?w ?w)
                )
              )
              (exists (?u - dodgeball)
                (exists (?k - flat_block)
                  (and
                    (and
                      (forall (?l - doggie_bed)
                        (game-conserved
                          (in left)
                        )
                      )
                      (exists (?q - hexagonal_bin)
                        (forall (?d - building ?n - hexagonal_bin)
                          (game-optional
                            (in ?w ?w)
                          )
                        )
                      )
                      (game-conserved
                        (in_motion ?u)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?t - dodgeball)
      (and
        (preference preference1
          (exists (?e - (either floor yellow) ?r - (either blue_cube_block book) ?s - building)
            (then
              (hold (exists (?q - hexagonal_bin ?f - (either book dodgeball)) (in_motion agent side_table) ) )
              (once (adjacent ?s agent) )
              (once (in_motion ?s) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?s - hexagonal_bin)
        (then
          (hold (and (in_motion ) (< (distance ?s back) 4) ) )
          (once (and (in ?s ?s) (agent_holds floor) ) )
          (any)
        )
      )
    )
    (forall (?e ?i - dodgeball ?c - beachball)
      (and
        (preference preference3
          (exists (?j - building ?x - (either dodgeball doggie_bed golfball laptop))
            (then
              (once (on ?x ?x) )
              (once (not (in ?c) ) )
              (hold (not (in_motion ?c) ) )
            )
          )
        )
        (preference preference4
          (exists (?e - color ?g - triangular_ramp ?t ?d ?i ?g ?w ?u - ball)
            (then
              (once (not (in ?c) ) )
              (once (agent_holds upside_down) )
              (hold (and (in ?g) (not (not (and (not (not (and (and (and (and (same_color ) ) (in_motion ?u ?u) (not (< (distance ?w ?w) (distance ?c ?u)) ) ) (on ?u) (in ?g agent) ) (on floor ?g) ) ) ) (< 7 1) ) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= (and (count preference1:dodgeball:beachball) ) (* 3 3 (count preference1:basketball) (count-once-per-objects preference3:tan) )
  )
)
(:scoring
  (count-once-per-objects preference3:red)
)
)

(define (game game-id-623) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (game-conserved
        (and
          (and
            (adjacent ?xxx ?xxx)
            (> (distance_side room_center ?xxx) 0)
            (in_motion ?xxx)
            (exists (?a - game_object)
              (object_orientation ?a agent)
            )
          )
          (agent_holds ?xxx)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?g - wall ?y - book ?c ?q - (either cube_block mug))
        (then
          (once (on rug ?q) )
        )
      )
    )
    (preference preference2
      (exists (?d - hexagonal_bin)
        (then
          (hold (and (in_motion ?d agent ?d) (not (not (not (in ?d) ) ) ) ) )
          (once (adjacent ?d) )
          (once (not (agent_holds ?d) ) )
        )
      )
    )
    (preference preference3
      (exists (?j ?w ?l - (either watch cylindrical_block))
        (then
          (once (and (and (in_motion desk) (in ?l) ) ) )
          (hold (and (adjacent ?w agent) (in_motion ?j blue) (broken ?l ?j) ) )
          (hold (agent_holds ?l ?w) )
        )
      )
    )
  )
)
(:terminal
  (>= 3 5 )
)
(:scoring
  4
)
)

(define (game game-id-624) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (in_motion ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?y - hexagonal_bin ?f - building ?r ?m ?z ?x ?h - wall)
        (then
          (once (agent_holds floor ?x) )
          (hold (agent_holds ?x) )
          (once (on ?x) )
        )
      )
    )
  )
)
(:terminal
  (>= 7 (count-once-per-objects preference1:red) )
)
(:scoring
  (count preference1:pink_dodgeball)
)
)

(define (game game-id-625) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?k - cube_block ?h - flat_block ?y - (either tall_cylindrical_block side_table))
      (exists (?u - game_object)
        (exists (?q - teddy_bear)
          (game-conserved
            (and
              (adjacent ?q ?y)
              (or
                (agent_holds ?u)
                (and
                  (forall (?t - blue_pyramid_block ?o - building)
                    (adjacent ?u ?o ?y)
                  )
                  (in_motion ?u)
                  (in_motion ?q)
                )
              )
            )
          )
        )
      )
    )
    (forall (?u - beachball ?g ?q ?n ?z ?y ?b ?r ?d ?l ?e - game_object)
      (not
        (exists (?a - doggie_bed ?w - (either cylindrical_block yellow_cube_block))
          (forall (?u - ball ?v - building ?s - (either dodgeball basketball hexagonal_bin))
            (game-conserved
              (not
                (in_motion ?w)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?m ?f - pillow ?r - cube_block)
      (and
        (preference preference1
          (exists (?c - teddy_bear)
            (then
              (hold-while (not (opposite ?c pink_dodgeball) ) (< 0.5 (distance_side ?c ?r)) )
              (hold (object_orientation ?r) )
              (once (exists (?y - dodgeball) (on rug ?y) ) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?a - dodgeball ?l - chair)
        (then
          (once (< (distance ?l ?l) (distance desk desk 9)) )
          (once (and (agent_holds sideways agent) (in_motion ?l ?l) ) )
          (once (equal_z_position rug) )
        )
      )
    )
    (preference preference3
      (exists (?r - hexagonal_bin)
        (then
          (once (broken ?r ?r) )
          (once (exists (?f - (either bed dodgeball) ?f - cube_block) (and (exists (?e - (either key_chain bridge_block) ?c - color) (and (and (in_motion ?f) (touch ?f) ) (agent_holds ?c ?r) ) ) (in ?r ?r) ) ) )
          (once (adjacent_side ?r ?r) )
        )
      )
    )
  )
)
(:terminal
  (> 5 (= 2 (* 7 10 )
    )
  )
)
(:scoring
  30
)
)

(define (game game-id-626) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (touch ?xxx ?xxx)
  )
)
(:constraints
  (and
    (forall (?z - color ?d - chair)
      (and
        (preference preference1
          (then
            (once (and (agent_holds ?d) (not (in_motion ?d) ) ) )
            (once (not (in ?d) ) )
            (once (between ?d) )
          )
        )
      )
    )
    (preference preference2
      (exists (?l - hexagonal_bin ?u - wall)
        (at-end
          (agent_holds ?u)
        )
      )
    )
    (forall (?o - cube_block ?z - chair)
      (and
        (preference preference3
          (exists (?e - chair)
            (then
              (hold (touch agent ?z) )
              (once (not (on desk ?e) ) )
              (once (and (and (not (same_color ?z) ) (not (agent_holds rug ?e) ) ) (forall (?v - hexagonal_bin ?n - hexagonal_bin) (touch ?z) ) (not (agent_holds ?z ?z) ) ) )
            )
          )
        )
        (preference preference4
          (exists (?f - teddy_bear ?s - game_object)
            (then
              (once (on ?z pillow) )
              (once (not (in_motion ?z ?s) ) )
              (hold-while (and (and (not (and (object_orientation ?z) (and (agent_holds ?z door) (not (broken ?z) ) ) (in_motion agent pink_dodgeball) ) ) (and (touch desk) (adjacent green) ) ) (not (in ?s ?z) ) ) (on ?s) (same_type ?s) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (* 2 (+ (count-once-per-objects preference1:dodgeball) (count-once-per-objects preference2:pink) )
    )
    (count-once preference2:rug)
  )
)
(:scoring
  10
)
)

(define (game game-id-627) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds ?xxx)
  )
)
(:constraints
  (and
    (forall (?b - teddy_bear ?f - hexagonal_bin)
      (and
        (preference preference1
          (exists (?p ?l - (either triangular_ramp triangle_block))
            (then
              (forall-sequence (?j ?k ?w - curved_wooden_ramp)
                (then
                  (once (not (not (or (not (agent_holds ?j ?f) ) (not (and (on agent ?f) (in ?k) (not (exists (?g - (either laptop) ?x - dodgeball) (adjacent ?j) ) ) ) ) ) ) ) )
                  (once (same_type ?f) )
                  (forall-sequence (?x - tall_cylindrical_block)
                    (then
                      (once (not (not (not (not (adjacent ?f) ) ) ) ) )
                      (hold-while (not (and (and (> (distance ?j room_center) (distance desk room_center)) (same_color blinds) ) (agent_holds left) ) ) (not (not (rug_color_under block ?j) ) ) (not (and (on ?j ?j) (adjacent ?l ?x) ) ) (in_motion agent ?p) )
                    )
                  )
                )
              )
              (once (in_motion ?l ?l ?p) )
              (forall-sequence (?d - color ?k - dodgeball)
                (then
                  (once (in ?p) )
                  (once (not (exists (?x - game_object) (not (not (in_motion ?l) ) ) ) ) )
                  (once (and (and (not (on ?p ?p) ) (> (distance ?l ?f) 1) ) (in_motion ?p ?f) ) )
                )
              )
            )
          )
        )
      )
    )
    (preference preference2
      (at-end
        (in_motion ?xxx ?xxx)
      )
    )
    (forall (?g - cube_block)
      (and
        (preference preference3
          (exists (?h - hexagonal_bin)
            (then
              (once (agent_holds ?h ?g) )
              (hold-while (open agent) (agent_holds ?g ?g) )
              (once (in_motion west_wall ?h) )
            )
          )
        )
        (preference preference4
          (exists (?w - dodgeball)
            (then
              (once-measure (in_motion desk ?w) (x_position ?w room_center) )
              (forall-sequence (?h - red_dodgeball ?x - curved_wooden_ramp)
                (then
                  (once (on ?g) )
                  (once (in ?g) )
                  (once (and (or (in ?g) (and (in bed) (or (adjacent agent) (agent_holds ?x ?w) (and (and (and (not (and (exists (?t - bridge_block) (between ?w ?w) ) (in_motion ?g) ) ) (agent_holds ?x) (not (and (in_motion ?w) (not (same_color ?x) ) ) ) (and (same_object ?w ?x) (between ?x) ) ) (and (not (and (adjacent ?g) (and (and (agent_holds ?w) (agent_holds ?w pink_dodgeball) (agent_holds bed) ) ) ) ) (agent_holds ?w ?x) (>= 7 2) (touch ?x) ) ) (not (in_motion ?w ?x) ) (not (and (touch drawer) (and (not (and (and (< (distance 8 ?w) (distance desk 10)) (not (in_motion bed) ) ) (in_motion ?x) ) ) (and (and (not (adjacent ?g agent) ) (in_motion ?x ?g) ) (in_motion ?g) ) ) (agent_holds ?x ?x) ) ) ) ) ) ) (not (and (in_motion ?x) (and (and (agent_holds agent) (same_type ?g) ) (>= 1 4) ) (adjacent bed ?g) ) ) ) )
                )
              )
              (once (agent_holds agent) )
            )
          )
        )
        (preference preference5
          (exists (?q - hexagonal_bin ?w - curved_wooden_ramp)
            (then
              (hold (and (and (on agent ?w) (and (in_motion ?g ?g) (not (not (not (and (not (in_motion ?g ?w) ) (exists (?a - pillow) (touch desktop) ) ) ) ) ) ) ) (agent_holds ?w) ) )
            )
          )
        )
      )
    )
    (preference preference6
      (exists (?d - dodgeball)
        (at-end
          (on ?d)
        )
      )
    )
    (preference preference7
      (exists (?v - dodgeball)
        (then
          (any)
          (once (in_motion ?v yellow) )
          (hold (touch agent) )
        )
      )
    )
    (preference preference8
      (exists (?v - hexagonal_bin)
        (at-end
          (agent_holds ?v ?v)
        )
      )
    )
  )
)
(:terminal
  (>= (count-same-positions preference1) (count-once-per-objects preference1:doggie_bed) )
)
(:scoring
  (external-forall-maximize
    4
  )
)
)

(define (game game-id-628) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?j - dodgeball)
      (game-optional
        (or
          (not
            (in_motion ?j)
          )
          (on ?j)
        )
      )
    )
    (game-conserved
      (touch pink_dodgeball)
    )
    (and
      (game-optional
        (on ?xxx ?xxx)
      )
      (forall (?k - (either laptop dodgeball pyramid_block) ?j - ball)
        (game-conserved
          (not
            (on ?j)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?p - block ?t - (either desktop dodgeball) ?n ?s ?z - dodgeball)
        (then
          (hold (in ?s ?s) )
          (once (adjacent ?n) )
          (once (agent_holds ?z) )
        )
      )
    )
    (forall (?g - hexagonal_bin ?p - cube_block)
      (and
        (preference preference2
          (exists (?q - hexagonal_bin ?s - dodgeball ?o - bridge_block ?y - flat_block)
            (then
              (hold (touch ?y) )
              (once (in ?p ?y) )
              (once (in ?y) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?v - flat_block)
        (then
          (once (= (distance bed) 8 (distance ?v 4)) )
          (hold (touch agent desk) )
          (once (in_motion ?v ?v ?v) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-shortest preference2:hexagonal_bin:triangle_block) (count preference3:dodgeball) )
)
(:scoring
  3
)
)

(define (game game-id-629) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (not
      (and
        (in_motion ?xxx)
        (not
          (agent_holds ?xxx floor)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?k - curved_wooden_ramp)
        (at-end
          (touch ?k)
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference1:dodgeball) 5 )
)
(:scoring
  (- (count preference1:golfball) )
)
)

(define (game game-id-630) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?n - red_pyramid_block ?p - (either basketball dodgeball) ?q - hexagonal_bin)
      (exists (?e - (either cellphone curved_wooden_ramp) ?w - hexagonal_bin)
        (game-conserved
          (not
            (in ?q)
          )
        )
      )
    )
    (forall (?i - game_object ?u - hexagonal_bin ?i - wall)
      (exists (?u - pillow)
        (exists (?r - (either hexagonal_bin dodgeball dodgeball))
          (and
            (game-optional
              (not
                (not
                  (agent_holds ?i ?u ?r)
                )
              )
            )
          )
        )
      )
    )
    (and
      (or
        (and
          (game-conserved
            (in_motion ?xxx ?xxx)
          )
          (and
            (game-conserved
              (not
                (in_motion ?xxx)
              )
            )
          )
        )
      )
      (game-conserved
        (in ?xxx ?xxx)
      )
      (game-optional
        (or
          (not
            (< (distance ?xxx 3) 6)
          )
          (in_motion floor)
          (agent_holds ?xxx)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?g - (either teddy_bear cylindrical_block))
        (then
          (hold (not (agent_holds ?g ?g) ) )
          (hold (same_color ?g) )
          (once (not (in ?g) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (> 3 40 )
  )
)
(:scoring
  (count-once-per-objects preference1:purple)
)
)

(define (game game-id-631) (:domain many-objects-room-v1)
(:setup
  (exists (?t - hexagonal_bin ?j - dodgeball)
    (not
      (game-optional
        (on ?j)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?g - ball ?c - dodgeball)
        (then
          (once (in_motion agent ?c) )
          (once (in_motion ?c ?c) )
          (once (exists (?i - dodgeball) (agent_holds ?i) ) )
        )
      )
    )
    (preference preference2
      (exists (?x - ball)
        (then
          (any)
          (hold (agent_holds ?x ?x) )
          (once (not (in_motion ?x) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference2:beachball) 3 )
)
(:scoring
  (count-once-per-objects preference2:top_drawer)
)
)

(define (game game-id-632) (:domain few-objects-room-v1)
(:setup
  (exists (?b - wall)
    (not
      (exists (?y - hexagonal_bin)
        (game-optional
          (not
            (not
              (in ?y)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?s - ball ?p - (either hexagonal_bin dodgeball))
        (at-end
          (same_type ?p ?p)
        )
      )
    )
    (preference preference2
      (then
        (once (exists (?d - hexagonal_bin ?t - (either teddy_bear bridge_block)) (same_type ?t ?t) ) )
        (once (not (< (distance_side room_center ?xxx) 1) ) )
        (hold (in_motion ?xxx ?xxx) )
      )
    )
  )
)
(:terminal
  (> (external-forall-minimize (* (* 2 (count preference1:dodgeball) )
        (* (* (* (+ (* (* (- (count preference2:dodgeball) )
                    (* 2 (count preference1:top_drawer:golfball) 30 )
                  )
                  (count preference2:hexagonal_bin:dodgeball)
                  (count preference1:cube_block)
                  6
                  (count-overlapping preference1:blue_pyramid_block:blue_cube_block)
                  (not
                    2
                  )
                  1
                  (count-overlapping preference2:golfball)
                  (count preference1:alarm_clock)
                  (* (count preference1:golfball) (count-unique-positions preference2:cylindrical_block:white) )
                  20
                  (* 5 (count preference1:green) )
                )
                3
              )
              (count preference1:yellow:basketball)
            )
            5
          )
          (total-time)
        )
      )
    )
    10
  )
)
(:scoring
  300
)
)

(define (game game-id-633) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (in_motion ?xxx ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?f - hexagonal_bin ?z - (either lamp beachball) ?m - dodgeball)
        (then
          (hold (not (and (and (and (not (exists (?z - color) (not (is_setup_object ?z ?z) ) ) ) (agent_holds ?m ?m) (agent_holds ?m ?m) ) (in_motion ?m ?m) ) (touch ?m ?m) ) ) )
          (once (not (and (in ?m) (and (not (> (distance ?m ?m) 1) ) (in_motion ?m bed) ) ) ) )
          (once (not (in_motion ?m desk) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (count-once-per-objects preference1:pink_dodgeball:green) )
)
(:scoring
  2
)
)

(define (game game-id-634) (:domain many-objects-room-v1)
(:setup
  (exists (?a ?t - block ?k - (either dodgeball triangular_ramp))
    (game-optional
      (touch ?k)
    )
  )
)
(:constraints
  (and
    (forall (?a - curved_wooden_ramp)
      (and
        (preference preference1
          (exists (?i - cube_block)
            (then
              (hold-for 2 (in_motion ?a ?a) )
              (once (same_color ?i ?i) )
              (once (and (on ?i) (and (and (in_motion agent) (and (agent_holds ?a) (agent_holds ?i ?i) ) (and (touch agent) (is_setup_object ?i) ) ) (adjacent ?a pink_dodgeball) ) ) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?p - ball)
        (then
          (hold-to-end (not (not (touch back ?p) ) ) )
          (once (on ?p ?p) )
          (hold (and (in_motion ?p) (and (in_motion ?p ?p) (not (on ?p) ) ) ) )
          (hold (agent_holds top_drawer ?p) )
          (once (< (distance room_center ?p) (distance ?p ?p)) )
        )
      )
    )
    (preference preference3
      (exists (?f - hexagonal_bin)
        (at-end
          (and
            (not
              (< 4 (distance ?f desk))
            )
            (and
              (in_motion ?f ?f)
              (and
                (and
                  (same_type agent)
                  (and
                    (not
                      (not
                        (in_motion ?f pink)
                      )
                    )
                    (not
                      (agent_holds ?f)
                    )
                    (agent_holds ?f ?f)
                  )
                )
                (adjacent_side ?f)
              )
              (in floor ?f)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (+ (count-once-per-objects preference1:orange) (or (and 5 (count-once preference2:hexagonal_bin) (count preference3:dodgeball) ) (count-increasing-measure preference3:golfball) ) )
      3
    )
  )
)
(:scoring
  1
)
)

(define (game game-id-635) (:domain medium-objects-room-v1)
(:setup
  (forall (?x - building)
    (forall (?u - red_dodgeball)
      (game-conserved
        (and
          (exists (?o - triangular_ramp ?n - block ?j - doggie_bed)
            (not
              (not
                (in ?u front)
              )
            )
          )
          (agent_holds ?x ?x)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?s - game_object)
        (at-end
          (not
            (forall (?h ?x - cube_block)
              (same_type ?x)
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?d - pillow)
        (at-end
          (< (distance 1 ?d) (distance ?d ?d))
        )
      )
    )
    (preference preference3
      (exists (?a - (either hexagonal_bin ball) ?k - block)
        (then
          (hold-for 10 (and (and (and (in_motion agent ?k) (agent_holds ?k) (agent_holds ?k ?k) ) (exists (?j - hexagonal_bin ?w - hexagonal_bin ?p - (either cellphone mug)) (and (agent_holds ?k ?p) (exists (?t - block) (and (in_motion ?k ?k) (in_motion ?t ?p) ) ) ) ) ) (< (distance ?k ?k) 1) ) )
          (hold (in_motion ?k) )
          (hold (and (agent_holds bed) (< (distance ?k 6) 2) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (and
      (and
        (>= (count preference1:doggie_bed) (count preference1:basketball) )
        (>= 4 (count preference1:green) )
      )
    )
    (or
      (and
        (>= 3 6 )
        (>= (count-once-per-objects preference2) (* (+ (- (count preference3:purple) )
              (* (count-once-per-external-objects preference3:dodgeball) 5 5 )
            )
            (* (count-once-per-objects preference1:alarm_clock:dodgeball:basketball) (count preference3:purple) )
          )
        )
      )
      (> (total-score) (count preference1:dodgeball:wall:purple) )
    )
  )
)
(:scoring
  (* 3 2 (count-once preference3:pink_dodgeball:beachball) (count-once-per-objects preference1:dodgeball) (count-once-per-objects preference1:dodgeball) (= (count-same-positions preference1:dodgeball) )
  )
)
)

(define (game game-id-636) (:domain medium-objects-room-v1)
(:setup
  (forall (?p - (either dodgeball laptop))
    (game-conserved
      (not
        (adjacent ?p ?p)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?t - pillow ?p - (either floor pyramid_block triangular_ramp))
        (then
          (forall-sequence (?u - drawer)
            (then
              (hold (on ?p) )
              (once (and (not (in_motion ) ) (in ?u upright) ) )
              (once (and (and (agent_holds bed ?u) (on main_light_switch) ) (and (not (forall (?a - block) (in ?a) ) ) (agent_holds ?p) ) ) )
            )
          )
          (once (on ?p) )
          (once (in_motion desk) )
          (once (and (and (agent_holds ?p) (forall (?u - hexagonal_bin) (not (agent_holds ?p) ) ) (and (<= 0.5 0.5) (in ?p) ) ) (and (and (in_motion ?p) (not (agent_crouches ?p ?p) ) ) (in_motion ?p) ) ) )
        )
      )
    )
  )
)
(:terminal
  (< 9 (- (count preference1:yellow_cube_block:dodgeball) )
  )
)
(:scoring
  2
)
)

(define (game game-id-637) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (and
      (not
        (exists (?i - curved_wooden_ramp)
          (and
            (agent_holds ?i)
            (and
              (agent_holds ?i ?i)
              (= (distance room_center ?i) (distance ?i ?i))
              (or
                (agent_holds ?i)
                (agent_holds ?i ?i)
                (not
                  (not
                    (and
                      (not
                        (forall (?u - hexagonal_bin ?r - (either laptop beachball dodgeball) ?y - teddy_bear)
                          (not
                            (agent_holds ?i)
                          )
                        )
                      )
                      (not
                        (not
                          (and
                            (agent_holds ?i)
                            (not
                              (and
                                (opposite agent ?i)
                                (agent_holds ?i)
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
                (on agent)
              )
            )
            (exists (?m - building ?z - game_object)
              (and
                (not
                  (not
                    (same_color ?z)
                  )
                )
                (touch ?i)
              )
            )
          )
        )
      )
      (in_motion ?xxx)
      (in_motion ?xxx rug)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?u - ball)
        (then
          (once (not (agent_holds ?u ?u ?u agent) ) )
          (once (and (and (same_type ?u ?u) (not (on ?u) ) ) (not (and (not (and (agent_holds ?u) (and (= (distance ?u room_center) 2) (<= 4 0) ) ) ) (adjacent ?u) (adjacent ?u ?u) (adjacent ?u) ) ) ) )
          (hold-for 9 (not (on ?u) ) )
        )
      )
    )
    (preference preference2
      (then
        (once (not (not (adjacent ?xxx) ) ) )
        (hold (toggled_on ?xxx desk) )
        (once (and (in ?xxx) (in_motion ?xxx) ) )
      )
    )
    (preference preference3
      (exists (?y - building ?b - (either cellphone block cellphone))
        (then
          (once (on ?b agent) )
          (once (and (on ?b) (on ?b pink) ) )
          (hold (touch ?b ?b) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (count preference1:beachball) (+ (count preference2:basketball) )
    )
  )
)
(:scoring
  (total-time)
)
)

(define (game game-id-638) (:domain few-objects-room-v1)
(:setup
  (exists (?d - wall)
    (game-conserved
      (on ?d)
    )
  )
)
(:constraints
  (and
    (forall (?w - block ?u - game_object ?w - hexagonal_bin ?a - hexagonal_bin)
      (and
        (preference preference1
          (exists (?j - hexagonal_bin)
            (then
              (once (in ?a) )
              (once (touch top_drawer) )
              (once (in ?a) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> 15 (count preference1:orange) )
)
(:scoring
  (count-unique-positions preference1:doggie_bed)
)
)

(define (game game-id-639) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (agent_holds ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?m - dodgeball ?j - chair)
        (then
          (once (and (equal_z_position ?j ?j) (and (and (agent_holds ?j) ) (and (= 5 (distance ?j agent)) (and (in_motion ?j ?j) (not (equal_z_position ?j) ) ) (in_motion bed) ) ) ) )
          (once (not (and (not (not (faces bed upside_down) ) ) (not (touch bed) ) ) ) )
          (once (not (on rug ?j) ) )
          (hold (agent_holds ?j) )
        )
      )
    )
    (preference preference2
      (exists (?g - beachball ?z ?v - red_dodgeball ?s - game_object)
        (then
          (hold (agent_holds ?s ?s) )
          (once (and (and (and (faces ?s ?s) (exists (?f - beachball ?l - bridge_block) (< 1 (x_position ?l room_center)) ) ) (adjacent ?s) ) (in_motion ?s) ) )
          (once (not (and (adjacent ?s) (agent_holds pink_dodgeball agent) ) ) )
          (hold-to-end (not (in_motion ?s) ) )
          (once (adjacent_side ?s) )
          (once (and (broken ?s) (agent_holds ?s ?s) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 3 )
)
(:scoring
  (count preference2:basketball)
)
)

(define (game game-id-640) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?k - dodgeball)
      (and
        (exists (?p - triangular_ramp)
          (and
            (forall (?b - tall_cylindrical_block)
              (exists (?s - pillow ?q - (either dodgeball doggie_bed cylindrical_block tall_cylindrical_block golfball))
                (game-conserved
                  (not
                    (in_motion desk ?b)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?q - ball)
      (and
        (preference preference1
          (exists (?z - curved_wooden_ramp)
            (then
              (hold (not (on rug ?q) ) )
              (once (and (and (between ?z) (agent_holds ?z ?z) ) (on ?z ?z) ) )
              (hold-while (not (not (exists (?v - pillow) (on ?q ?v) ) ) ) (not (on ?q ?z) ) )
              (hold (in ?q ?z) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?n - ball ?r - color ?o - doggie_bed ?r - game_object)
        (then
          (once (not (adjacent_side bed) ) )
          (hold (on ?r) )
          (once (and (on ?r) (and (in_motion ?r ?r) (in_motion ?r) ) (on ?r agent) (on ?r) ) )
        )
      )
    )
    (preference preference3
      (exists (?p - hexagonal_bin ?d - cube_block ?w - color)
        (then
          (once (agent_holds ?w) )
          (once (< 2 (distance )) )
          (once (not (adjacent ?w ?w) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 1 (count-once-per-external-objects preference2:blue_dodgeball) )
)
(:scoring
  (- 7 )
)
)

(define (game game-id-641) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (game-conserved
        (and
          (or
            (on ?xxx)
            (adjacent ?xxx ?xxx)
          )
          (agent_holds ?xxx ?xxx)
        )
      )
      (exists (?s - dodgeball ?j - hexagonal_bin)
        (and
          (game-optional
            (on ?j)
          )
        )
      )
    )
    (and
      (exists (?g - block)
        (exists (?h - chair)
          (game-conserved
            (touch ?h rug)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?m - game_object)
        (then
          (once (in_motion bed) )
          (once (and (< 1 (distance ?m ?m)) (not (and (agent_holds upright) ) ) ) )
          (once (on ?m) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-unique-positions preference1:beachball:pink_dodgeball:basketball) (* 30 (* 2 (count-once preference1:hexagonal_bin:blue_pyramid_block) )
    )
  )
)
(:scoring
  (* 7 (* (total-time) (count preference1:dodgeball:dodgeball) )
  )
)
)

(define (game game-id-642) (:domain few-objects-room-v1)
(:setup
  (and
    (not
      (game-optional
        (not
          (agent_holds ?xxx)
        )
      )
    )
    (forall (?x - drawer)
      (and
        (and
          (game-conserved
            (in_motion ?x)
          )
        )
      )
    )
    (and
      (exists (?x - block)
        (exists (?s - hexagonal_bin ?j - pillow)
          (exists (?e - (either golfball laptop))
            (game-conserved
              (and
                (agent_holds ?j)
                (adjacent_side ?x)
                (in_motion ?e)
              )
            )
          )
        )
      )
      (exists (?r - (either main_light_switch golfball cellphone) ?c - ball ?t - desk_shelf ?z - dodgeball)
        (game-conserved
          (same_color ?z)
        )
      )
      (forall (?x - building ?k - hexagonal_bin)
        (forall (?r - desktop ?t - pyramid_block)
          (and
            (game-conserved
              (same_object ?t)
            )
            (exists (?r - dodgeball)
              (game-optional
                (in_motion ?t)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?y - hexagonal_bin)
      (and
        (preference preference1
          (exists (?r - hexagonal_bin ?v - hexagonal_bin ?c - curved_wooden_ramp ?h - curved_wooden_ramp)
            (then
              (once (and (in_motion agent) (and (and (agent_holds ?h) (not (and (in ?h) (in_motion agent ?h) ) ) (not (in agent) ) ) (on ?y) (in ?h) ) ) )
              (hold (in_motion ?y) )
              (hold-while (adjacent ?y) (touch ?y) )
            )
          )
        )
        (preference preference2
          (exists (?g - dodgeball ?z - cube_block)
            (then
              (hold (in_motion ?z) )
              (hold-while (agent_holds ?z) (touch bottom_shelf) (in_motion ?y) )
              (hold (in ?y) )
            )
          )
        )
        (preference preference3
          (exists (?i - hexagonal_bin)
            (then
              (hold (adjacent_side ?y ?y) )
              (once (agent_holds ?i upright) )
              (once (and (in_motion ?y) (agent_holds ?y ?y) (and (agent_holds ?i) (in ?i) (on ?y) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (+ 60 (count preference1:dodgeball) )
      (external-forall-maximize
        (count-once-per-objects preference2:golfball:dodgeball:block)
      )
    )
  )
)
(:scoring
  (+ 10 4 )
)
)

(define (game game-id-643) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (and
      (above ?xxx)
      (agent_holds ?xxx)
      (and
        (agent_holds ?xxx)
        (on bed)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?t - pillow)
        (then
          (once (not (on ?t agent) ) )
          (once (same_color ?t ?t) )
          (once (not (on ?t) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-increasing-measure preference1:dodgeball:dodgeball) (count preference1:pink) )
)
(:scoring
  (* 3 (count-once preference1:purple) )
)
)

(define (game game-id-644) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?v - hexagonal_bin)
      (game-conserved
        (in_motion ?v)
      )
    )
    (exists (?w - pyramid_block)
      (and
        (game-optional
          (in_motion agent)
        )
        (game-conserved
          (and
            (and
              (not
                (not
                  (agent_holds ?w)
                )
              )
              (agent_holds upside_down)
            )
            (and
              (or
                (and
                  (and
                    (in ?w)
                    (in_motion pink)
                  )
                  (agent_holds ?w)
                )
                (not
                  (agent_holds ?w desk)
                )
                (agent_holds ?w bed)
              )
              (agent_holds ?w agent)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?x - curved_wooden_ramp)
        (then
          (once (or (agent_holds ?x ?x) (and (object_orientation ?x ?x) (agent_holds ?x) ) ) )
          (hold-to-end (in_motion ?x) )
          (once (in_motion rug) )
        )
      )
    )
    (preference preference2
      (exists (?v - (either pen teddy_bear))
        (at-end
          (in_motion ?v desk)
        )
      )
    )
    (preference preference3
      (exists (?b - dodgeball)
        (then
          (once (agent_holds desk) )
          (once (in_motion green) )
          (once (in_motion ?b) )
        )
      )
    )
    (forall (?y - hexagonal_bin ?j - dodgeball)
      (and
        (preference preference4
          (exists (?l - game_object)
            (at-end
              (and
                (in ?j bed)
                (not
                  (agent_holds ?l ?l)
                )
              )
            )
          )
        )
        (preference preference5
          (exists (?w - ball)
            (then
              (once (not (not (not (not (rug_color_under pink ?w) ) ) ) ) )
              (hold (in_motion ?j ?w) )
              (once (< (distance desk desk) (distance ?w room_center)) )
            )
          )
        )
        (preference preference6
          (exists (?e ?t - curved_wooden_ramp)
            (then
              (once (on ?t) )
              (hold (in_motion door ?t) )
              (once (not (and (in_motion ?j) (and (in ?e) (and (on bed) (agent_holds ?e) (same_type ?t ?j) ) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count preference1:basketball) (count preference2:dodgeball) )
    (or
      (>= (* (count-measure preference6:green) 15 )
        (* 180 (count-once preference6:dodgeball) )
      )
      (or
        (>= (* (* 1 (/ (* 2 (count-once-per-objects preference3:cylindrical_block) )
                (* (- (count preference6:beachball:beachball) )
                  (* 4 (external-forall-maximize (count-once-per-objects preference5:pink) ) )
                  5
                  (+ 4 8 15 )
                  (external-forall-maximize
                    (count-once-per-objects preference5:orange)
                  )
                )
              )
            )
            2
            7
            20
            5
            (* 3 (count-once-per-external-objects preference2:book) )
            (count-overlapping preference4:purple)
          )
          (count-increasing-measure preference5:alarm_clock:beachball)
        )
        (<= (* 10 3 1 )
          (external-forall-maximize
            300
          )
        )
      )
    )
    (= (count preference5:red) (+ 6 30 )
    )
  )
)
(:scoring
  (* (+ 8 (* (* (count-once-per-objects preference3:pyramid_block:wall) 5 )
        3
      )
    )
    0
    (count preference3:hexagonal_bin)
    (* (* (count-once-per-objects preference6) 1 (* (count-once-per-objects preference6:dodgeball:dodgeball) )
      )
      (* 2 (+ (* (* (count preference4:green) (count-once-per-objects preference2:alarm_clock) )
            (* (count-once-per-objects preference3:beachball) 5 )
          )
          (count-once-per-objects preference2:yellow)
        )
      )
    )
  )
)
)

(define (game game-id-645) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?r ?j - hexagonal_bin)
        (then
          (hold (agent_holds ?r ?j) )
          (once (touch ?j ?j) )
          (once (and (agent_holds floor) (< 1 (distance )) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once preference1:pink:golfball) (- (* (- (count preference1:orange) )
        (count preference1:dodgeball:dodgeball)
      )
    )
  )
)
(:scoring
  (+ (* (and (count preference1:dodgeball) (< (count preference1:golfball) 8 )
        (count preference1:doggie_bed)
      )
      4
      (count-once-per-objects preference1:tall_cylindrical_block)
    )
    (- (count preference1:pyramid_block:block:alarm_clock) )
  )
)
)

(define (game game-id-646) (:domain medium-objects-room-v1)
(:setup
  (forall (?j - hexagonal_bin ?h - (either dodgeball dodgeball))
    (forall (?m - hexagonal_bin)
      (and
        (exists (?v - cube_block)
          (game-conserved
            (agent_holds ?v bed)
          )
        )
        (exists (?k - hexagonal_bin)
          (not
            (game-conserved
              (same_color top_drawer ?h)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?t - hexagonal_bin ?e - dodgeball)
        (at-end
          (in_motion agent)
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:beachball) (* (count-increasing-measure preference1:green) (+ (* (count-once-per-objects preference1:dodgeball:basketball) 0.5 )
        0.5
      )
    )
  )
)
(:scoring
  (* (* (* (total-time) (count preference1:dodgeball:green) )
      (/
        (total-score)
        (* (count preference1:basketball) (external-forall-maximize (count-overlapping preference1:doggie_bed) ) )
      )
    )
    (+ 5 2 )
  )
)
)

(define (game game-id-647) (:domain few-objects-room-v1)
(:setup
  (exists (?y - hexagonal_bin ?h - triangular_ramp ?z - (either cd pyramid_block yellow) ?y ?d - ball)
    (game-optional
      (agent_holds ?y)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?l - (either game_object doggie_bed blue_cube_block) ?m - cube_block ?p - building)
        (at-end
          (and
            (agent_holds ?p)
            (on ?p)
          )
        )
      )
    )
    (preference preference2
      (exists (?w - (either pyramid_block floor blue_cube_block))
        (then
          (hold-while (not (and (exists (?y - ball ?g - hexagonal_bin) (agent_holds ?g top_shelf) ) (agent_holds ?w) ) ) (agent_holds ?w) (agent_holds ?w ?w) )
          (once (not (< 3 1) ) )
          (hold (on yellow) )
        )
      )
    )
    (forall (?q - doggie_bed)
      (and
        (preference preference3
          (exists (?h - hexagonal_bin)
            (then
              (once (adjacent agent ?q) )
              (hold (in ?h) )
              (hold (on ?h) )
            )
          )
        )
        (preference preference4
          (exists (?t - shelf)
            (then
              (hold (and (object_orientation ?q ?q) (not (not (in_motion ?t agent) ) ) (in_motion ?q ?q) ) )
              (once (< (distance room_center ?t) 1) )
              (once (in_motion ?t ?q) )
            )
          )
        )
      )
    )
    (preference preference5
      (exists (?v - (either teddy_bear golfball laptop))
        (then
          (any)
          (once (not (or (in ?v) (in ?v agent) ) ) )
        )
      )
    )
    (preference preference6
      (exists (?f - cube_block)
        (then
          (once (on ?f ?f) )
          (once (exists (?g - chair) (not (in_motion ?g) ) ) )
          (hold (agent_holds ?f agent) )
        )
      )
    )
    (forall (?g - ball)
      (and
        (preference preference7
          (exists (?y - ball ?q - game_object ?t - hexagonal_bin)
            (then
              (hold (in_motion ?t ?t) )
              (once (exists (?m - cylindrical_block) (in ?t ?g) ) )
              (hold (agent_holds ?t agent) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count preference5:golfball:pyramid_block) (count-longest preference1:pink_dodgeball) )
    (+ (count preference5:golfball) (* (count-longest preference1:blue_pyramid_block) (count-once-per-objects preference6:golfball:pink) )
    )
  )
)
(:scoring
  (total-time)
)
)

(define (game game-id-648) (:domain medium-objects-room-v1)
(:setup
  (exists (?m - (either yellow_cube_block bridge_block basketball cylindrical_block) ?a - hexagonal_bin)
    (and
      (and
        (exists (?o - block)
          (and
            (game-optional
              (on bridge_block)
            )
          )
        )
      )
      (game-optional
        (same_color ?a)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?d - teddy_bear ?s - hexagonal_bin)
        (then
          (hold (and (and (agent_holds ?s) (in ?s ?s) ) (and (exists (?h - hexagonal_bin) (in_motion ?h) ) (or (and (on ?s ?s) (not (same_type ?s bed ?s) ) ) (and (on ?s ?s) (in_motion ?s) ) (game_start ?s) ) (in ?s) ) ) )
          (hold (and (adjacent ?s) (agent_holds ?s) ) )
          (hold (and (not (exists (?o - pillow) (agent_holds ?o) ) ) (agent_holds ?s ?s) ) )
        )
      )
    )
    (preference preference2
      (exists (?t - (either dodgeball doggie_bed))
        (at-end
          (not
            (in color)
          )
        )
      )
    )
  )
)
(:terminal
  (>= 3 3 )
)
(:scoring
  (count preference2:golfball:basketball)
)
)

(define (game game-id-649) (:domain medium-objects-room-v1)
(:setup
  (exists (?t - flat_block)
    (game-conserved
      (in_motion ?t upright)
    )
  )
)
(:constraints
  (and
    (forall (?p - hexagonal_bin ?e - chair)
      (and
        (preference preference1
          (exists (?m - doggie_bed ?c - hexagonal_bin)
            (then
              (once (on ?e) )
              (hold (not (= (distance room_center ?c) (distance ?c)) ) )
              (once (in ?e ?e) )
            )
          )
        )
        (preference preference2
          (exists (?m - hexagonal_bin)
            (then
              (once (and (agent_holds ?e ?e) (on agent desktop) ) )
              (hold (and (< 5 5) ) )
              (once (< 7 (distance )) )
            )
          )
        )
      )
    )
    (preference preference3
      (at-end
        (agent_holds ?xxx ?xxx)
      )
    )
  )
)
(:terminal
  (= 2 (count preference2:dodgeball) )
)
(:scoring
  40
)
)

(define (game game-id-650) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (in_motion ?xxx desk)
  )
)
(:constraints
  (and
    (forall (?n - color)
      (and
        (preference preference1
          (exists (?x - ball)
            (then
              (once (in_motion ?x ?n) )
              (once (agent_holds ?n) )
              (once (and (> 1 6) (agent_holds ?x ?x) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (* (* (- (- (count preference1:side_table:green) (count preference1:basketball) ) )
            (count preference1:basketball:pink_dodgeball)
            (count-overlapping preference1:basketball)
          )
          (count-once-per-objects preference1:blue_pyramid_block:beachball)
        )
        (count preference1:beachball)
      )
      (<= (count-once-per-objects preference1:book) (+ (count preference1:basketball:beachball) (* (* (* (count preference1:red) (count-once-per-objects preference1:golfball) )
              5
            )
            (* (count preference1:golfball:dodgeball) (count-once-per-objects preference1:beachball) )
          )
        )
      )
      (or
        (> 15 (- 10 )
        )
        (>= 3 (count-once-per-external-objects preference1) )
        (and
          (< (total-time) (- (count-once-per-objects preference1:blue_cube_block:basketball) )
          )
          (< 3 (+ 6 3 )
          )
        )
      )
    )
    (>= 15 (count preference1:dodgeball) )
  )
)
(:scoring
  (count-once-per-objects preference1:orange)
)
)

(define (game game-id-651) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (and
      (in_motion ?xxx ?xxx)
      (< 1 (distance room_center room_center))
    )
  )
)
(:constraints
  (and
    (forall (?y - doggie_bed)
      (and
        (preference preference1
          (exists (?e - curved_wooden_ramp)
            (then
              (hold (in_motion ?e) )
              (hold (adjacent blue) )
              (once (touch ?y ?y) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?r - hexagonal_bin)
        (then
          (once (and (object_orientation ?r ?r) (and (in ?r ?r) (and (in_motion ?r) ) ) ) )
          (once (and (or (or (< 1 1) (agent_holds ?r ?r) (or (on ?r) (and (not (not (not (< (distance agent) (x_position room_center ?r)) ) ) ) (in_motion ?r) (agent_holds ?r ?r) ) (and (and (in_motion ?r) (adjacent ?r) ) (in ?r ?r) ) ) ) (forall (?a - ball) (in_motion ?a ?a) ) ) (and (in_motion ?r ?r) (adjacent_side ?r) (not (agent_holds door ?r) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (+ (external-forall-minimize (count-once-per-external-objects preference2:pink) ) (* 4 (count-once preference2:golfball) (* 5 (* (count preference2:red:basketball) 2 )
          )
        )
      )
      (* (count-once preference1:yellow:purple) (* (count preference1:dodgeball:dodgeball) (* (not (count-once-per-objects preference1:pink) ) (+ (+ (count preference1:beachball) (count preference2:dodgeball) )
              (count-once-per-objects preference1:doggie_bed)
            )
            10
            (* (* 3 (- (count preference1:book:dodgeball) )
              )
              5
            )
            (count-measure preference2:yellow)
            3
            10
            (count preference2:blue_pyramid_block)
            (+ 40 (* (total-time) (* 6 )
                (count-once-per-objects preference2:yellow)
                100
                (* (* (count-once-per-objects preference2:orange) 50 )
                  8
                )
                (count-unique-positions preference1:beachball:red)
              )
            )
          )
        )
      )
    )
    (count-once-per-objects preference2:dodgeball:dodgeball)
  )
)
(:scoring
  10
)
)

(define (game game-id-652) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (not
      (touch ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?x - cylindrical_block)
        (then
          (hold (in_motion ?x ?x) )
          (hold (on ?x ?x) )
          (once (and (and (agent_holds ?x ?x) (adjacent_side ?x ?x) ) (in ?x) ) )
          (once (and (agent_holds ?x) (agent_holds ?x ?x) ) )
        )
      )
    )
    (forall (?p - (either cube_block))
      (and
        (preference preference2
          (exists (?n - doggie_bed ?r - hexagonal_bin)
            (then
              (any)
              (hold (not (agent_holds ?r) ) )
              (once (agent_holds ?p) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-overlapping preference2:blue) 4 )
    (>= 10 (<= (count-once-per-objects preference1:golfball) (* 1 30 (* (count preference2) (count-once preference2:basketball) )
        )
      )
    )
  )
)
(:scoring
  20
)
)

(define (game game-id-653) (:domain few-objects-room-v1)
(:setup
  (forall (?t - desktop)
    (game-optional
      (in_motion front ?t)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?i - ball)
        (then
          (hold (and (adjacent ?i) (and (agent_holds yellow) (and (and (not (not (adjacent ?i ?i) ) ) (adjacent_side ?i) ) (agent_holds desk ?i) ) ) ) )
          (hold (and (on ?i) (in_motion ?i ?i) ) )
          (once (and (in_motion ?i) (in_motion ?i floor) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (> (count-once-per-objects preference1:yellow:tan) (<= (count preference1:green:red_pyramid_block) (* 2 3 )
      )
    )
  )
)
(:scoring
  (* (+ (count-once-per-external-objects preference1:beachball) 5 )
    (* (count preference1:pink) 6 )
  )
)
)

(define (game game-id-654) (:domain many-objects-room-v1)
(:setup
  (forall (?o - doggie_bed)
    (exists (?p - hexagonal_bin ?h - hexagonal_bin)
      (exists (?w - flat_block)
        (and
          (game-optional
            (agent_holds ?o)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?n - dodgeball ?y - hexagonal_bin ?g - wall)
        (then
          (hold (not (not (and (not (and (touch ?g) (and (not (same_color ?g) ) (not (and (< 2 2) (and (agent_holds ?g) (touch agent ?g) (adjacent ?g) ) ) ) ) ) ) (in_motion ?g agent ?g) ) ) ) )
          (any)
          (once (and (not (in_motion desk) ) (in ?g ?g) ) )
        )
      )
    )
  )
)
(:terminal
  (> (count preference1:beachball:beachball) 1 )
)
(:scoring
  (not
    1
  )
)
)

(define (game game-id-655) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (agent_holds ?xxx ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?g - ball)
        (at-end
          (on ?g)
        )
      )
    )
  )
)
(:terminal
  (>= (* 6 (- (count preference1:block) )
      (count preference1:beachball:alarm_clock)
    )
    18
  )
)
(:scoring
  (* 5 (+ (count-once-per-objects preference1:green:dodgeball) (count-once-per-objects preference1:basketball) )
  )
)
)

(define (game game-id-656) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?m - block ?k - (either golfball key_chain))
      (game-conserved
        (on ?k)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?d - block ?i - curved_wooden_ramp ?f - hexagonal_bin)
        (then
          (once (in_motion ?f ?f) )
          (once (in_motion ?f ?f) )
          (hold-for 9 (above ?f ?f) )
        )
      )
    )
    (preference preference2
      (exists (?t - dodgeball)
        (at-end
          (and
            (= (distance desk ?t) (distance 0 desk ?t))
            (and
              (agent_holds agent)
              (on ?t)
              (agent_holds ?t)
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?t - wall)
        (then
          (once (in ?t ?t) )
          (once (not (in_motion agent) ) )
          (once (in_motion ?t) )
        )
      )
    )
  )
)
(:terminal
  (>= 25 1 )
)
(:scoring
  (count-once-per-objects preference2:basketball)
)
)

(define (game game-id-657) (:domain few-objects-room-v1)
(:setup
  (forall (?u - hexagonal_bin ?u - dodgeball)
    (game-conserved
      (agent_holds ball ?u)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?h - (either cylindrical_block chair mug))
        (then
          (hold (in_motion ?h) )
          (once (agent_holds ?h) )
          (once-measure (in_motion ?h ?h) (distance room_center) )
        )
      )
    )
    (preference preference2
      (exists (?y - hexagonal_bin)
        (then
          (any)
          (once (agent_holds ?y ?y) )
          (hold (in_motion agent) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 6 (> (count preference1:beachball) 2 )
    )
    (count-total preference1:green)
  )
)
(:scoring
  2
)
)

(define (game game-id-658) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (in_motion ?xxx)
  )
)
(:constraints
  (and
    (forall (?b - building)
      (and
        (preference preference1
          (exists (?l - wall)
            (at-end
              (rug_color_under ?l)
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?v - ball)
        (then
          (once (or (agent_holds ?v) (not (in_motion ?v) ) ) )
        )
      )
    )
    (preference preference3
      (exists (?u - hexagonal_bin)
        (at-end
          (not
            (agent_holds top_drawer ?u)
          )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (count-increasing-measure preference3:beachball) )
)
(:scoring
  (- (count preference3:beachball) )
)
)

(define (game game-id-659) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?a ?q - dodgeball)
      (game-conserved
        (agent_holds ?a bed)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?s ?z ?e ?w ?n ?m ?o ?p ?k ?a - (either cylindrical_block yellow book))
        (then
          (once (and (not (not (and (adjacent ?w ?w) (in ?p ?z) (not (agent_holds rug) ) ) ) ) (and (rug_color_under ?w) (agent_holds ?m) ) (exists (?c - (either cd doggie_bed)) (agent_holds ?w) ) ) )
          (hold (and (agent_holds bed) (and (agent_holds ?o) (agent_holds floor) ) ) )
          (once (and (agent_holds ?s ?s) (agent_holds ?e) (and (in_motion ?o) (= (distance room_center ?s) (distance door back) 1) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 6 (count-once-per-external-objects preference1:hexagonal_bin) )
)
(:scoring
  (count preference1)
)
)

(define (game game-id-660) (:domain many-objects-room-v1)
(:setup
  (exists (?o ?d - dodgeball)
    (game-optional
      (agent_holds ?d)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?f - cube_block)
        (then
          (once (or (in_motion ?f) (not (agent_holds ?f ?f) ) ) )
          (hold (above bridge_block) )
          (hold (in bed) )
        )
      )
    )
  )
)
(:terminal
  (>= 1 3 )
)
(:scoring
  (count preference1:basketball:basketball)
)
)

(define (game game-id-661) (:domain few-objects-room-v1)
(:setup
  (and
    (not
      (game-conserved
        (and
          (not
            (on ?xxx)
          )
          (not
            (not
              (not
                (= (distance desk desk desk) 1)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?o - hexagonal_bin)
        (then
          (hold (in_motion ?o) )
          (hold (in_motion ?o rug) )
          (once (touch ?o) )
        )
      )
    )
    (preference preference2
      (exists (?h - (either pillow cube_block))
        (then
          (once (on ?h) )
          (once (in_motion ?h) )
          (once (agent_holds ?h) )
        )
      )
    )
  )
)
(:terminal
  (= (+ (count-once-per-objects preference1:block) 2 )
    (count-once preference2:golfball:dodgeball)
  )
)
(:scoring
  (count preference2:wall)
)
)

(define (game game-id-662) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?i - hexagonal_bin ?j - doggie_bed)
      (and
        (game-optional
          (agent_holds ?j)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?l - pillow)
        (then
          (once (in_motion ?l) )
          (hold (agent_holds west_wall) )
          (once (in_motion ?l) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (> (total-score) 4 )
  )
)
(:scoring
  1
)
)

(define (game game-id-663) (:domain few-objects-room-v1)
(:setup
  (forall (?a ?b - (either doggie_bed))
    (exists (?v ?o - ball ?f - (either golfball cellphone cellphone key_chain) ?d - (either dodgeball cylindrical_block))
      (and
        (game-conserved
          (or
            (above ?a)
            (not
              (and
                (and
                  (on ?b)
                  (exists (?l - (either yellow_cube_block doggie_bed) ?h - hexagonal_bin ?l - dodgeball)
                    (not
                      (and
                        (and
                          (and
                            (not
                              (on ?l ?d)
                            )
                            (agent_holds ?b)
                          )
                          (in_motion ?b)
                        )
                        (on ?d)
                      )
                    )
                  )
                )
                (> (distance 0 agent) 1)
                (and
                  (adjacent )
                  (not
                    (in_motion ?d)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?d - block ?p - hexagonal_bin)
        (then
          (once (agent_holds ?p) )
          (once (and (in_motion ?p ?p) (agent_holds ?p ?p) ) )
          (hold-for 2 (exists (?v - shelf ?o - dodgeball ?y - (either laptop cube_block hexagonal_bin)) (not (exists (?g - hexagonal_bin) (in_motion ?y ?y) ) ) ) )
        )
      )
    )
    (forall (?w - (either key_chain floor tall_cylindrical_block))
      (and
        (preference preference2
          (exists (?z - (either dodgeball triangular_ramp))
            (then
              (once (and (agent_holds ?z ?w) (on ?w) ) )
              (once (< 6 (distance room_center 4)) )
              (once (and (in_motion ?w ?z) (and (agent_holds ?w ?z) (and (and (agent_holds blue ?w) (on ?w) (agent_holds agent) (agent_holds ?w ?w) ) (agent_holds ?z ?w ?w) (agent_holds ?w) ) (and (and (not (broken ?z) ) (and (not (agent_holds agent ?w) ) (in ?z bed) ) ) (and (agent_holds ?z) (agent_holds ?w) ) ) (= (distance agent ?w) (distance ?w ?z) 1) (is_setup_object ?z left) (in_motion ?z ?w) (agent_holds ?z) (and (not (in ?w ?z) ) (and (in_motion ?z) (not (not (exists (?y - ball) (not (and (exists (?u - cube_block) (and (and (agent_holds ?u ?z) (not (object_orientation ?z) ) (not (touch ?y ?y) ) ) (on agent ?z) ) ) (not (in_motion ?y) ) ) ) ) ) ) ) ) (agent_holds rug) (agent_holds ?w ?z) (on ?w floor) (exists (?c - hexagonal_bin ?x - ball) (not (same_color ?w) ) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count-once preference2:green) (count preference1) )
    (external-forall-maximize
      3
    )
  )
)
(:scoring
  (* (* 5 100 )
    (count preference2:beachball)
  )
)
)

(define (game game-id-664) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (forall (?m - chair ?p - hexagonal_bin ?j - hexagonal_bin ?g - cube_block ?s ?v - doggie_bed)
      (on ?v agent)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?t - triangular_ramp)
        (then
          (once (and (rug_color_under ?t ?t ?t) ) )
          (once (not (agent_holds agent) ) )
          (hold-while (adjacent ?t ?t) (not (and (not (in_motion ?t) ) (in_motion ?t) ) ) )
        )
      )
    )
    (forall (?q - (either floor basketball game_object))
      (and
        (preference preference2
          (exists (?e - game_object)
            (then
              (once (exists (?g - (either cube_block dodgeball) ?v - sliding_door ?w - beachball) (not (adjacent ?w) ) ) )
              (once (equal_z_position agent) )
              (once (on ?q ?e) )
            )
          )
        )
        (preference preference3
          (exists (?h - game_object)
            (then
              (once (and (adjacent ?q) (on ?q ?q) ) )
              (once (not (and (same_type ?q) (and (or (and (not (and (and (on ?h) (not (faces south_west_corner ?h) ) ) (in ?h ?q) ) ) (in_motion ?q ?h) (touch ?q) ) (= 2 3) (and (agent_holds ?h) (touch agent bed) ) ) (on ?q ?h) ) ) ) )
              (once (and (< 8 2) (= 8 (distance ?q ?h)) (not (on pink ?q) ) ) )
            )
          )
        )
      )
    )
    (preference preference4
      (exists (?d - chair)
        (then
          (once (and (and (on ?d) (and (in_motion ?d ?d) (not (and (not (agent_holds ?d ?d) ) (on ?d ?d) ) ) (and (agent_holds ?d) (forall (?k - (either chair dodgeball bridge_block laptop golfball book game_object)) (not (same_type ?d ?d) ) ) ) (agent_holds ?d bed) (agent_holds ?d) (and (not (and (not (between brown) ) (and (and (not (and (is_setup_object ?d) (not (and (in_motion ?d) (agent_holds ?d ?d) ) ) ) ) (agent_holds ?d) ) (agent_holds ?d) ) ) ) (not (not (on ?d) ) ) ) (agent_holds ?d) ) ) (in ?d) ) )
          (once-measure (and (and (and (and (agent_holds ?d ?d side_table) (in ?d ?d) ) (adjacent ?d) ) (adjacent desk) ) (adjacent agent ?d) ) (distance room_center ?d 10) )
          (hold (not (adjacent ?d ?d) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-overlapping preference2:blue_pyramid_block) (total-time) )
    (>= (count-once preference4:beachball) 6 )
  )
)
(:scoring
  (count preference3:pink)
)
)

(define (game game-id-665) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds ?xxx ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?c - hexagonal_bin)
        (then
          (once (on ?c) )
          (hold (not (not (not (on ?c) ) ) ) )
          (once (in ?c ?c) )
        )
      )
    )
  )
)
(:terminal
  (>= (- (+ 10 (count-once-per-objects preference1:yellow:green) (count-once-per-objects preference1:beachball) )
    )
    4
  )
)
(:scoring
  6
)
)

(define (game game-id-666) (:domain few-objects-room-v1)
(:setup
  (forall (?n - block)
    (forall (?a - dodgeball)
      (game-conserved
        (not
          (rug_color_under ?n ?a)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?f - chair)
        (then
          (hold (not (not (not (and (not (on ?f) ) (agent_holds ?f ?f) ) ) ) ) )
          (hold (in_motion ?f) )
          (hold (in_motion ?f) )
        )
      )
    )
    (preference preference2
      (exists (?r - game_object)
        (then
          (once (not (agent_holds block) ) )
          (hold-to-end (and (not (and (and (on ?r) (adjacent ?r ?r) ) (on ?r) ) ) (on ?r) ) )
          (once (< 2 4) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 0.5 (count-longest preference2:pink_dodgeball) )
    (> (+ (+ 0 2 )
        (* 300 (or (count-once-per-objects preference1:red) ) )
      )
      (* (count-once-per-external-objects preference1:dodgeball) 10 )
    )
  )
)
(:scoring
  (total-time)
)
)

(define (game game-id-667) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?c - teddy_bear)
        (then
          (once (in_motion ?c ?c) )
          (once (not (agent_holds ?c) ) )
          (hold (not (and (adjacent ?c rug) (not (not (adjacent ?c) ) ) ) ) )
        )
      )
    )
    (preference preference2
      (exists (?q - (either basketball dodgeball))
        (then
          (hold-for 8 (not (and (and (adjacent ?q) (in_motion ?q) ) (equal_x_position ?q desk ?q) ) ) )
          (once (agent_holds ?q) )
          (once (not (and (and (in_motion ?q desk) (not (in_motion ?q ?q) ) ) (same_type door ?q) (above ?q ?q) ) ) )
        )
      )
    )
    (preference preference3
      (exists (?x ?g - drawer ?y - doggie_bed)
        (then
          (once (not (agent_holds ?y agent) ) )
          (once (and (not (not (on ?y) ) ) (agent_holds ?y) ) )
          (hold (adjacent ?y ?y) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (- 3 )
      (* 15 (count-once-per-objects preference2:golfball) (* (- (count-once-per-objects preference2:beachball:hexagonal_bin) )
          3
        )
        1
        (count preference3:hexagonal_bin:pink)
      )
    )
    (>= 5 (count-once-per-objects preference3:green) )
    (>= 5 (total-score) )
  )
)
(:scoring
  30
)
)

(define (game game-id-668) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-conserved
      (or
        (and
          (not
            (not
              (and
                (in_motion ?xxx ?xxx)
                (agent_holds ?xxx ?xxx)
              )
            )
          )
          (in ?xxx ?xxx)
        )
        (not
          (not
            (exists (?y - cube_block)
              (and
                (in agent)
                (agent_holds ?y ?y)
              )
            )
          )
        )
      )
    )
    (game-conserved
      (agent_holds ?xxx)
    )
    (exists (?a - game_object ?b - hexagonal_bin)
      (game-conserved
        (in_motion ?b)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?e - hexagonal_bin)
        (then
          (hold (not (and (agent_holds ?e ?e) (in_motion floor) ) ) )
          (hold-while (not (and (or (and (in_motion ?e ?e) (agent_holds ?e) (same_color ?e ?e) ) (not (agent_holds ?e) ) ) (same_color ?e ?e) ) ) (adjacent ?e) (in_motion ?e ?e) )
          (once (in_motion blue) )
        )
      )
    )
    (preference preference2
      (exists (?f - hexagonal_bin)
        (then
          (once (not (agent_holds ?f ?f ?f ?f) ) )
          (once-measure (same_color ?f) (distance 0 1) )
          (once (on ?f bed) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (* (* (count preference1:beachball) (count preference1:yellow) 4 )
        (count-same-positions preference2:yellow)
      )
      (count preference2:blue:dodgeball)
    )
    10
  )
)
(:scoring
  (total-time)
)
)

(define (game game-id-669) (:domain many-objects-room-v1)
(:setup
  (forall (?q - dodgeball)
    (exists (?c - dodgeball)
      (game-optional
        (not
          (in_motion pink_dodgeball)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?z - (either dodgeball yellow_cube_block))
      (and
        (preference preference1
          (exists (?h - dodgeball ?t ?a - (either bed alarm_clock) ?v - (either cube_block doggie_bed))
            (at-end
              (agent_holds ?v ?z)
            )
          )
        )
      )
    )
    (forall (?w - building)
      (and
        (preference preference2
          (exists (?u - curved_wooden_ramp)
            (then
              (once (in_motion agent ?u) )
              (once (in_motion ?w ?u) )
              (once (in_motion ?u) )
            )
          )
        )
        (preference preference3
          (exists (?a - (either golfball))
            (then
              (once (agent_holds ?w) )
              (hold (on ?a) )
              (once (and (in_motion ?w) (on ?w) ) )
            )
          )
        )
        (preference preference4
          (then
            (hold-while (open ?w) (in_motion ?w) )
            (once (agent_holds ?w) )
            (once (in_motion ?w blue) )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* 10 2 )
    (* 5 (count preference4:hexagonal_bin:orange) )
  )
)
(:scoring
  (count-shortest preference4:red)
)
)

(define (game game-id-670) (:domain many-objects-room-v1)
(:setup
  (exists (?w - hexagonal_bin ?r - teddy_bear)
    (and
      (game-conserved
        (adjacent ?r agent)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?v - curved_wooden_ramp ?s - wall ?l - hexagonal_bin)
        (then
          (once (and (and (and (and (on ?l) (and (agent_holds ?l ?l) (on ?l ?l) ) ) (not (in_motion ?l) ) ) (agent_holds ?l) ) (on ?l) ) )
          (once (on ?l) )
          (hold (on ?l) )
        )
      )
    )
    (preference preference2
      (exists (?s - hexagonal_bin)
        (then
          (hold-while (and (not (in_motion ?s ?s) ) (in_motion desk ?s) ) (not (adjacent ?s) ) )
          (once (in ?s ?s) )
        )
      )
    )
    (preference preference3
      (at-end
        (in_motion ?xxx)
      )
    )
    (preference preference4
      (exists (?w - game_object)
        (then
          (once (not (in_motion ?w ?w) ) )
          (once (not (agent_holds ?w agent) ) )
          (once (on ?w ?w) )
        )
      )
    )
    (preference preference5
      (exists (?z - building ?j - hexagonal_bin ?e - shelf)
        (then
          (hold-while (on ?e) (agent_holds ?e) (= (distance ?e ?e) 2) (agent_holds ?e) )
          (once (on ?e ?e) )
          (once (in_motion ?e) )
        )
      )
    )
    (preference preference6
      (exists (?v - hexagonal_bin ?g - (either key_chain) ?w - (either mug teddy_bear) ?p - dodgeball ?i - (either blue_cube_block dodgeball pyramid_block))
        (at-end
          (not
            (on ?i ?i)
          )
        )
      )
    )
  )
)
(:terminal
  (>= 3 2 )
)
(:scoring
  (count-overlapping preference5:red:basketball)
)
)

(define (game game-id-671) (:domain medium-objects-room-v1)
(:setup
  (forall (?v - (either laptop pyramid_block))
    (game-optional
      (not
        (on bed pink_dodgeball)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?k - dodgeball)
        (then
          (once (and (and (on ?k ?k) (agent_holds ?k) ) (or (agent_holds ?k ?k) (not (and (not (and (in ?k) (adjacent_side ?k ?k) ) ) (or (and (in ?k) (not (not (and (or (or (in_motion desk ?k) (on ?k ?k) (in ?k) ) (adjacent ?k ?k) ) (and (agent_holds ?k ?k ?k) (not (on ?k ?k bed) ) (in_motion ?k) ) (and (agent_holds ?k ?k) (in_motion ?k) (and (not (agent_holds ?k ?k ?k) ) (agent_holds ?k ?k) ) ) ) ) ) (and (on desk) (not (in_motion top_drawer) ) (< (distance ?k 10) (distance_side 2 10)) ) ) (or (and (and (and (in_motion ?k) (< (distance 10 5) 2) ) (touch ?k desk) ) (not (adjacent rug) ) ) (agent_holds ?k ?k) ) ) (and (not (and (not (not (not (agent_holds ?k ?k) ) ) ) ) ) (and (in_motion ?k) (agent_holds ?k) ) (touch ?k) ) ) ) ) ) )
          (once (> (x_position agent room_center) 2) )
          (hold (and (agent_holds ?k ?k ?k) (not (and (exists (?d ?a ?w - ball) (exists (?s - hexagonal_bin ?e - block) (and (touch desk ?a) (and (adjacent ?e) (not (and (and (exists (?i - chair ?z - red_dodgeball ?p - curved_wooden_ramp) (not (agent_holds ?a) ) ) (in ?w) ) (agent_holds ?a) ) ) ) ) ) ) (not (not (<= 1 (distance ?k ?k)) ) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (+ (* (* (count-once-per-objects preference1:golfball) (count preference1:dodgeball) )
          1
        )
        3
      )
      20
    )
    (not
      (< (count-once-per-objects preference1:basketball) (count preference1:dodgeball) )
    )
  )
)
(:scoring
  (* (count preference1) (count-overlapping preference1:beachball:hexagonal_bin:dodgeball) )
)
)

(define (game game-id-672) (:domain few-objects-room-v1)
(:setup
  (forall (?b - curved_wooden_ramp ?c - dodgeball)
    (and
      (and
        (forall (?r - (either cube_block desktop) ?d - wall)
          (game-optional
            (in_motion ?d ?d)
          )
        )
        (or
          (game-optional
            (in_motion ?c)
          )
          (not
            (and
              (exists (?n ?g - hexagonal_bin)
                (game-conserved
                  (opposite north_wall)
                )
              )
              (forall (?f - ball)
                (game-conserved
                  (not
                    (not
                      (not
                        (adjacent ?c)
                      )
                    )
                  )
                )
              )
            )
          )
          (exists (?l - teddy_bear)
            (and
              (and
                (game-optional
                  (agent_holds ?l ?l)
                )
              )
              (exists (?o - dodgeball)
                (and
                  (forall (?n - triangular_ramp)
                    (and
                      (and
                        (game-conserved
                          (and
                            (in_motion ?n)
                            (adjacent bed ?c)
                          )
                        )
                        (forall (?x - dodgeball)
                          (game-conserved
                            (and
                              (on ?n)
                              (in_motion ?x)
                              (in ?n)
                            )
                          )
                        )
                        (game-conserved
                          (agent_holds ?l)
                        )
                      )
                      (forall (?x - block)
                        (game-optional
                          (not
                            (not
                              (and
                                (same_color ?c ?l)
                                (agent_holds ?x)
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
        (and
          (and
            (and
              (and
                (game-conserved
                  (in ?c)
                )
              )
            )
          )
        )
        (exists (?d - drawer ?o - ball)
          (not
            (forall (?p - dodgeball ?d - game_object)
              (forall (?i - dodgeball)
                (forall (?j - (either hexagonal_bin))
                  (and
                    (game-optional
                      (in_motion ?o)
                    )
                    (and
                      (game-conserved
                        (on floor)
                      )
                      (exists (?e - blinds)
                        (game-optional
                          (in_motion ?e)
                        )
                      )
                      (game-conserved
                        (and
                          (in_motion ?d)
                          (in ?i ?j)
                        )
                      )
                    )
                    (and
                      (and
                        (game-conserved
                          (< 1 1)
                        )
                      )
                      (forall (?m - beachball)
                        (game-conserved
                          (< (distance room_center 5) 1)
                        )
                      )
                      (forall (?n ?q ?f - wall ?p - wall)
                        (and
                          (forall (?s - hexagonal_bin ?z - building)
                            (game-optional
                              (not
                                (in_motion ?z ?p)
                              )
                            )
                          )
                          (game-conserved
                            (agent_holds ?d ?p)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
        (game-conserved
          (agent_holds pink_dodgeball ?c ?c)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?f - hexagonal_bin ?a - desk_shelf)
        (then
          (once (same_color ?a) )
          (hold (> 1 (distance ?a 2)) )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (count preference1:green) )
)
(:scoring
  10
)
)

(define (game game-id-673) (:domain many-objects-room-v1)
(:setup
  (exists (?i - (either dodgeball bridge_block) ?o - cube_block)
    (exists (?r - hexagonal_bin)
      (or
        (game-conserved
          (agent_holds floor)
        )
        (game-conserved
          (in_motion ?o)
        )
        (game-optional
          (and
            (< (distance agent) (x_position 9 agent))
            (and
              (not
                (> 1 4)
              )
              (in_motion ?r ?o)
            )
            (in_motion ?r yellow ?o)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (then
        (hold-while (and (in rug) (and (in_motion ?xxx) (on ?xxx ?xxx) ) (agent_holds bed) ) (touch ?xxx top_shelf) (and (and (= (distance ?xxx desk) 5) (in_motion ?xxx ?xxx) ) (agent_holds ?xxx) ) )
        (hold-while (not (in ?xxx) ) (not (in_motion ?xxx ?xxx) ) )
        (once (not (< 1 2) ) )
      )
    )
  )
)
(:terminal
  (>= (count preference1:beachball) 4 )
)
(:scoring
  (* 1 (count preference1:dodgeball:basketball) 2 )
)
)

(define (game game-id-674) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (and
      (same_type ?xxx)
      (and
        (not
          (and
            (and
              (not
                (above desk)
              )
              (agent_holds rug)
              (in ?xxx)
            )
            (object_orientation ?xxx)
            (in_motion ?xxx ?xxx)
          )
        )
        (not
          (not
            (agent_holds ?xxx rug agent)
          )
        )
      )
      (game_start ?xxx ?xxx)
      (in_motion ?xxx)
      (or
        (in_motion ?xxx)
        (agent_holds ?xxx ?xxx)
      )
      (forall (?a - hexagonal_bin)
        (and
          (on ?a)
          (adjacent ?a)
        )
      )
      (not
        (and
          (and
            (not
              (and
                (and
                  (in ?xxx agent)
                )
                (in ?xxx)
              )
            )
            (adjacent ?xxx ?xxx)
          )
          (and
            (or
              (in ?xxx)
              (agent_holds ?xxx ?xxx)
            )
            (adjacent ?xxx bed)
            (agent_holds front)
            (in_motion ?xxx)
            (and
              (in ?xxx ?xxx)
              (adjacent ?xxx)
              (not
                (agent_holds ?xxx ?xxx)
              )
            )
            (and
              (agent_holds ?xxx)
              (adjacent ?xxx ?xxx)
            )
          )
          (and
            (above ?xxx)
            (and
              (in_motion ?xxx ?xxx)
              (not
                (in ?xxx ?xxx)
              )
            )
          )
        )
      )
      (and
        (and
          (in_motion ?xxx)
          (on pink_dodgeball)
        )
        (on ?xxx)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?v - hexagonal_bin ?s - triangular_ramp)
        (then
          (once (and (touch ?s) (in_motion ?s ?s) ) )
          (once (exists (?i - block) (in_motion ?s) ) )
          (once (not (on ?s) ) )
        )
      )
    )
    (preference preference2
      (exists (?k - dodgeball)
        (then
          (hold (= (distance desk ?k) (distance desk ?k)) )
          (once (not (adjacent ?k) ) )
          (once (or (on top_shelf ?k) (in ?k ?k) (not (and (not (on ?k) ) (and (agent_holds rug) (on ?k) (not (not (on ?k agent) ) ) (agent_holds ?k) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (and
      (or
        (or
          (or
            (>= (external-forall-maximize (* (count preference1:book) (count preference2:basketball:blue_dodgeball) )
              )
              (count preference2:dodgeball)
            )
            (>= (count-once-per-objects preference2:yellow:yellow) (count-once preference2:purple) )
            (= (- 2 )
              5
            )
          )
          (not
            (<= (* (count-overlapping preference2:beachball:dodgeball) (count-once-per-objects preference1:cube_block) (count preference2:dodgeball:pink) (* 2 (count-once-per-objects preference1:dodgeball) )
                (count-once-per-objects preference2:beachball:golfball)
              )
              (count-once-per-objects preference2:red_pyramid_block:beachball)
            )
          )
          (not
            (>= (count preference1:wall) 10 )
          )
        )
        (or
          (not
            (> 10 0 )
          )
          (< (count-once-per-objects preference2:dodgeball) (total-time) )
          (> (count-measure preference1:dodgeball) 5 )
          (>= (count-measure preference1:dodgeball) (count preference1:red_pyramid_block) )
        )
      )
      (>= (* (count preference2:blue_dodgeball:red) (* 4 (count preference1:yellow) )
        )
        (* (+ (count preference2:white) (+ 6 (count preference2:basketball) )
            6
          )
          (external-forall-minimize
            (> (+ (count-once-per-external-objects preference1:basketball) (count preference2:golfball) )
              (count preference1:basketball)
            )
          )
        )
      )
    )
    (>= 2 30 )
    (>= 2 (count-once-per-objects preference2:blue_dodgeball) )
  )
)
(:scoring
  2
)
)

(define (game game-id-675) (:domain medium-objects-room-v1)
(:setup
  (exists (?q - (either cd cube_block))
    (exists (?k - hexagonal_bin)
      (exists (?p - hexagonal_bin)
        (game-conserved
          (or
            (in_motion ?q)
            (>= 2 (distance ?q agent))
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?s - shelf ?y - red_dodgeball)
      (and
        (preference preference1
          (exists (?p - (either laptop game_object))
            (then
              (once (agent_holds ?y) )
              (hold (not (in_motion ?p ?y) ) )
              (once (agent_holds ?y) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?d - (either pillow triangle_block cube_block))
        (then
          (hold (agent_holds ?d) )
          (once (on bed) )
          (once-measure (and (and (adjacent ?d ?d) (in agent ?d) ) (and (and (and (and (not (and (in agent rug) (< 4 7) ) ) (not (on ?d) ) (on ?d) ) (in_motion ?d) ) (= 1 (distance ?d 7)) (adjacent ?d) ) (= 1 1) ) ) (distance ?d room_center) )
        )
      )
    )
  )
)
(:terminal
  (and
    (> (count-once preference1:green) 5 )
    (>= (count preference2:yellow_cube_block:yellow) 6 )
  )
)
(:scoring
  0
)
)

(define (game game-id-676) (:domain few-objects-room-v1)
(:setup
  (exists (?m ?i ?y ?v ?k ?l ?s ?a ?f ?t - triangular_ramp ?c - (either golfball dodgeball) ?p - hexagonal_bin)
    (forall (?e - hexagonal_bin)
      (exists (?i - shelf)
        (exists (?d - bridge_block)
          (exists (?u - cube_block)
            (and
              (game-conserved
                (forall (?n - block)
                  (not
                    (in_motion ?u)
                  )
                )
              )
              (and
                (game-conserved
                  (and
                    (not
                      (in_motion ?p)
                    )
                    (exists (?r - dodgeball)
                      (agent_holds ?r)
                    )
                  )
                )
                (game-optional
                  (in ?p rug)
                )
                (and
                  (forall (?b - dodgeball)
                    (exists (?g - hexagonal_bin)
                      (game-conserved
                        (adjacent upright)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?e - triangular_ramp)
        (at-end
          (and
            (agent_holds blue)
            (between ?e)
          )
        )
      )
    )
  )
)
(:terminal
  (>= (+ 0 1 6 (* (total-score) (count preference1:bed:beachball) )
      3
    )
    (* (= 2 (+ 2 3 )
      )
      (* (* 7 6 )
        3
        (count preference1:yellow:alarm_clock:pink)
      )
    )
  )
)
(:scoring
  (count preference1:dodgeball)
)
)

(define (game game-id-677) (:domain few-objects-room-v1)
(:setup
  (not
    (not
      (and
        (and
          (forall (?v - dodgeball)
            (exists (?u - hexagonal_bin)
              (game-conserved
                (in ?u)
              )
            )
          )
          (exists (?p - doggie_bed)
            (or
              (forall (?u - wall ?k - dodgeball)
                (game-conserved
                  (and
                    (and
                      (< (distance room_center ?k) (distance door ?p))
                      (adjacent brown agent)
                    )
                    (in_motion ?p)
                  )
                )
              )
              (and
                (and
                  (game-conserved
                    (in_motion rug)
                  )
                  (game-conserved
                    (not
                      (not
                        (not
                          (agent_holds ?p)
                        )
                      )
                    )
                  )
                )
                (exists (?t - (either dodgeball cylindrical_block cellphone))
                  (forall (?r - (either credit_card pencil yellow_cube_block))
                    (exists (?n - doggie_bed ?s - building)
                      (game-conserved
                        (not
                          (= 2 1)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
          (and
            (exists (?l - ball)
              (exists (?k - color)
                (forall (?r - block)
                  (and
                    (exists (?s ?n - (either laptop blue_cube_block) ?s - hexagonal_bin)
                      (and
                        (game-conserved
                          (< 3 1)
                        )
                        (forall (?u - dodgeball ?n - dodgeball ?c - (either ball dodgeball))
                          (exists (?v - building ?t - (either hexagonal_bin dodgeball))
                            (game-conserved
                              (not
                                (= 3 1)
                              )
                            )
                          )
                        )
                      )
                    )
                    (game-optional
                      (and
                        (agent_holds ?k agent)
                        (on ?l)
                      )
                    )
                    (game-optional
                      (agent_holds ?r)
                    )
                  )
                )
              )
            )
            (game-conserved
              (not
                (agent_holds ?xxx desk)
              )
            )
          )
        )
        (game-optional
          (in_motion ?xxx)
        )
        (game-conserved
          (and
            (not
              (touch ?xxx)
            )
            (in_motion ?xxx ?xxx)
          )
        )
        (and
          (or
            (game-conserved
              (not
                (not
                  (in_motion rug ?xxx)
                )
              )
            )
          )
        )
        (game-optional
          (not
            (not
              (not
                (exists (?h - doggie_bed)
                  (game_start ?h)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?n - hexagonal_bin)
      (and
        (preference preference1
          (exists (?q - block ?g - ball ?c - flat_block)
            (then
              (once (not (not (agent_holds ?c) ) ) )
              (any)
              (hold (and (on ?n ?n) (and (agent_holds ?n) (agent_holds agent ?n) ) (agent_holds ?c) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (- 1 5 ) )
)
(:scoring
  (* (* (count preference1:hexagonal_bin) 25 )
    (count-once preference1:blue)
  )
)
)

(define (game game-id-678) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (= 1 7)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?h - hexagonal_bin ?t - hexagonal_bin ?a - (either cylindrical_block))
        (at-end
          (and
            (not
              (and
                (and
                  (not
                    (in desk ?a)
                  )
                  (rug_color_under ?a)
                )
                (in ?a ?a)
              )
            )
            (not
              (and
                (in_motion ?a)
                (not
                  (and
                    (and
                      (exists (?h - cube_block)
                        (not
                          (on ?a)
                        )
                      )
                      (and
                        (and
                          (agent_holds bed ?a)
                          (agent_holds desk ?a)
                          (agent_holds rug)
                        )
                        (agent_holds ?a ?a)
                      )
                    )
                    (forall (?s - game_object ?y - building)
                      (agent_holds ?a ?y)
                    )
                  )
                )
              )
            )
            (on ?a)
          )
        )
      )
    )
  )
)
(:terminal
  (>= (- (* (* (count preference1:pink_dodgeball) 1 )
        (* (* 10 3 )
          (count preference1:basketball)
        )
      )
    )
    (count-once preference1:dodgeball)
  )
)
(:scoring
  (count preference1:book)
)
)

(define (game game-id-679) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (and
      (on ?xxx ?xxx)
      (on desk ?xxx)
    )
  )
)
(:constraints
  (and
    (forall (?r ?f - ball ?i ?e - tall_cylindrical_block)
      (and
        (preference preference1
          (exists (?x - pillow)
            (then
              (once (agent_holds pink_dodgeball) )
            )
          )
        )
        (preference preference2
          (then
            (once (and (and (not (and (not (and (not (touch ?e) ) (in_motion ?e) (or (and (not (on ?i ?e) ) (adjacent ?i ?i) ) (same_type floor bed) ) ) ) (on pink_dodgeball) ) ) (on floor ?e) ) (and (on ?i ?i) (not (not (agent_holds ?e desk) ) ) ) ) )
            (once (and (and (not (agent_holds ?e) ) (adjacent ?e ?i) ) ) )
            (once (adjacent agent ?i) )
          )
        )
      )
    )
    (preference preference3
      (exists (?k - hexagonal_bin)
        (then
          (hold (and (faces ?k) (in_motion ?k ?k) (agent_holds bed) ) )
          (hold (on ?k ?k) )
          (hold (and (in_motion ?k) (not (on ?k ?k) ) ) )
        )
      )
    )
    (preference preference4
      (exists (?b - golfball)
        (then
          (once-measure (adjacent pink) (distance ?b ?b) )
          (once (and (or (not (agent_holds ?b) ) (not (not (or (on ?b ?b) (agent_holds ?b) ) ) ) ) (not (and (and (< (distance room_center) (distance ?b ?b)) (in_motion ?b) ) (or (not (not (in ?b) ) ) (in_motion ?b upright) ) (agent_holds floor) (not (agent_holds ?b left) ) ) ) ) )
          (hold (< 0 (distance ?b ?b)) )
        )
      )
    )
    (preference preference5
      (exists (?g - cube_block)
        (at-end
          (in_motion brown)
        )
      )
    )
  )
)
(:terminal
  (>= 4 9 )
)
(:scoring
  30
)
)

(define (game game-id-680) (:domain few-objects-room-v1)
(:setup
  (forall (?h - cube_block ?r - (either cube_block cylindrical_block))
    (game-optional
      (on ?r ?r)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?t - (either cube_block triangular_ramp))
        (then
          (hold (not (not (and (or (agent_holds ?t ?t) (on ?t ?t) ) ) ) ) )
          (hold (same_color ?t) )
          (hold (and (agent_holds ?t) (agent_holds agent) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ 6 (- (count preference1:dodgeball:basketball) )
    )
    (external-forall-minimize
      (count preference1:golfball:cube_block:dodgeball)
    )
  )
)
(:scoring
  (count-unique-positions preference1:dodgeball)
)
)

(define (game game-id-681) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (and
      (and
        (agent_holds ?xxx ?xxx)
        (agent_holds ?xxx ?xxx)
        (and
          (not
            (in_motion ?xxx ?xxx)
          )
          (and
            (in_motion ?xxx)
            (in ?xxx)
          )
        )
        (is_setup_object ?xxx yellow)
      )
      (not
        (and
          (touch ?xxx rug)
          (on bed)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?s - ball)
      (and
        (preference preference1
          (exists (?r - cube_block)
            (then
              (once (and (in_motion ?s ?r) (not (not (object_orientation bed) ) ) ) )
              (hold (not (agent_holds ?r desk) ) )
              (once (in_motion ?r) )
            )
          )
        )
      )
    )
    (forall (?c - bridge_block)
      (and
        (preference preference2
          (exists (?h - block ?h - wall)
            (at-end
              (same_type ?h)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= (count preference1:pink) (count-once-per-external-objects preference1:purple) )
)
(:scoring
  (count preference2:dodgeball)
)
)

(define (game game-id-682) (:domain many-objects-room-v1)
(:setup
  (exists (?e - dodgeball ?w - hexagonal_bin)
    (or
      (exists (?h - ball)
        (and
          (forall (?b - building)
            (forall (?e - (either credit_card beachball))
              (and
                (forall (?q - ball ?j - dodgeball)
                  (exists (?y - building)
                    (game-conserved
                      (= 2 (distance ?h desk))
                    )
                  )
                )
              )
            )
          )
          (game-optional
            (not
              (adjacent ?w ?w)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?z - ball)
        (at-end
          (in_motion ?z ?z)
        )
      )
    )
  )
)
(:terminal
  (or
    (> (< 10 2 )
      (count-once preference1:hexagonal_bin)
    )
    (< 30 4 )
  )
)
(:scoring
  (+ (+ (count preference1:hexagonal_bin) 6 )
    (count preference1:red_pyramid_block)
  )
)
)

(define (game game-id-683) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (and
        (on pink ?xxx ?xxx)
        (agent_holds ?xxx ?xxx)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?q - teddy_bear)
        (then
          (forall-sequence (?w - hexagonal_bin)
            (then
              (hold (and (adjacent_side floor ?q) (agent_holds bed agent) ) )
              (hold (agent_holds ?w) )
              (hold-while (in_motion ?w ?q) (not (in floor ?w) ) )
            )
          )
          (once (agent_holds ?q) )
          (hold-while (in_motion ?q ?q) (agent_holds ?q ?q) (not (adjacent ?q ?q ?q agent) ) )
          (hold-while (in ?q) (adjacent ?q ?q) )
        )
      )
    )
    (forall (?v - curved_wooden_ramp)
      (and
        (preference preference2
          (exists (?k - pyramid_block)
            (at-end
              (adjacent ?k top_shelf)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 2 10 )
)
(:scoring
  10
)
)

(define (game game-id-684) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (not
      (not
        (and
          (exists (?z - hexagonal_bin)
            (in ?z)
          )
          (not
            (rug_color_under ?xxx)
          )
          (not
            (and
              (in ?xxx back)
              (and
                (touch upright)
              )
            )
          )
          (in_motion floor ?xxx)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (then
        (hold (agent_holds bed) )
        (hold-for 4 (agent_holds floor) )
        (hold-while (exists (?j - dodgeball) (= (distance ?j ?j) (distance room_center ?j)) ) (on ?xxx ?xxx) )
      )
    )
    (preference preference2
      (exists (?x - teddy_bear)
        (at-end
          (agent_holds ?x)
        )
      )
    )
    (forall (?m - (either dodgeball bed))
      (and
        (preference preference3
          (exists (?k ?v - cube_block ?h ?v - hexagonal_bin)
            (then
              (once (and (not (not (in_motion ?v) ) ) (and (and (and (not (and (agent_holds ?v) (on ?m ?h) ) ) (or (exists (?d - game_object) (and (agent_holds ?m ?d) (and (on upright bed) (agent_holds ?m) (exists (?u ?y - flat_block) (adjacent ?m) ) ) ) ) (in_motion ?h) ) ) (agent_holds ?m) ) (in ?m) ) ) )
            )
          )
        )
        (preference preference4
          (exists (?c - block ?n ?w - hexagonal_bin)
            (then
              (once (not (in_motion ?w ?n) ) )
              (once (agent_holds agent ?m) )
              (hold-while (exists (?u ?h ?y - hexagonal_bin) (not (and (in_motion ?w ?y) (in ?u ?m) ) ) ) (not (not (< 8 5) ) ) (touch ?n ?w) )
            )
          )
        )
      )
    )
    (forall (?l - beachball)
      (and
        (preference preference5
          (exists (?m - hexagonal_bin)
            (then
              (once (adjacent agent) )
              (once (adjacent ?l) )
              (once (rug_color_under agent ?m) )
            )
          )
        )
        (preference preference6
          (exists (?z - drawer)
            (then
              (once (agent_holds front) )
              (hold (not (in pillow ?l) ) )
              (hold (in ?l) )
            )
          )
        )
        (preference preference7
          (exists (?a - hexagonal_bin)
            (then
              (once (on ?l ?a) )
              (once-measure (agent_holds door) (x_position ?l 2) )
              (hold (in_motion floor) )
            )
          )
        )
      )
    )
    (preference preference8
      (exists (?k - hexagonal_bin ?l - (either top_drawer doggie_bed))
        (then
          (hold-for 3 (adjacent ?l) )
          (once (agent_holds ?l ?l agent) )
          (once (in agent bed) )
        )
      )
    )
    (preference preference9
      (exists (?n - curved_wooden_ramp ?r - hexagonal_bin ?b - triangular_ramp)
        (then
          (hold-while (not (and (between ?b) (and (agent_holds bed) (agent_holds ?b ?b rug) (opposite ?b) ) ) ) (same_type ?b) )
          (hold-while (same_color ?b) (in_motion ?b) (in_motion ?b floor) (on ?b ?b ?b) )
          (once (and (not (equal_z_position upside_down) ) (not (agent_holds ?b) ) (or (agent_holds ?b) (on ?b ?b) (agent_holds rug upright) (faces ?b) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (external-forall-maximize (count preference4:hexagonal_bin) ) (count-once-per-external-objects preference1:pyramid_block) )
)
(:scoring
  (count preference1:red:golfball)
)
)

(define (game game-id-685) (:domain medium-objects-room-v1)
(:setup
  (or
    (exists (?i - golfball ?r ?m ?z ?l ?x ?d - ball)
      (game-conserved
        (and
          (and
            (in_motion ?d pink)
            (and
              (adjacent_side ?d)
              (and
                (adjacent ?m)
                (on ?r ?m ?d)
              )
            )
            (agent_holds ?r)
          )
          (or
            (agent_holds ?l)
            (exists (?n - teddy_bear)
              (or
                (agent_holds ?x)
                (in_motion ?l ?z)
              )
            )
          )
        )
      )
    )
    (exists (?g - desktop)
      (exists (?z - hexagonal_bin ?i ?k - ball)
        (exists (?b ?j ?h ?v ?a - beachball)
          (game-optional
            (and
              (not
                (and
                  (in_motion front ?k)
                  (in ?j)
                )
              )
              (in_motion ?a ?v)
              (agent_holds ?i bed)
              (agent_holds bridge_block)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?r - book ?v ?o ?m - dodgeball)
        (then
          (once (or (exists (?b - hexagonal_bin) (agent_holds agent ?o) ) (and (and (not (and (not (on ?v) ) (and (in_motion ?m) (and (and (exists (?p - hexagonal_bin ?c - hexagonal_bin) (and (in_motion ?c) (not (and (agent_holds ?c) (and (open agent) (not (in_motion ?o) ) ) (and (same_color ?m ?c) (and (and (and (and (agent_holds ?v) (agent_holds ?v) ) ) (and (not (or (agent_holds ?m ?v) (in_motion ?v) ) ) (or (and (same_color agent ?c) (< 4 (distance room_center ?m)) ) (in rug) ) ) ) (not (in_motion ?m) ) ) ) ) ) ) ) (in ?m desk) (same_type ?v side_table) (exists (?z - chair) (not (agent_holds ?o desk) ) ) ) (not (on ?m) ) ) ) ) ) (and (same_color ?v ?o) (and (in_motion ?v) (in ?m) ) (< (distance ?m ?m) 8) ) ) (on ?o rug) ) ) )
          (once (and (exists (?l - cube_block ?b - flat_block) (not (in_motion ?v pink_dodgeball) ) ) (on ?o) ) )
          (once (agent_holds agent ?v) )
        )
      )
    )
    (forall (?p - chair)
      (and
        (preference preference2
          (exists (?h - desk_shelf)
            (at-end
              (and
                (agent_holds block)
                (not
                  (agent_holds ?p ?p)
                )
              )
            )
          )
        )
        (preference preference3
          (exists (?d ?v - cube_block)
            (then
              (once (and (in ?d desk) (and (agent_holds ?v) (on ?p ?v) ) ) )
              (hold (not (on ?p ?d) ) )
              (hold (agent_holds ?v) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< (count preference3:red) 5 )
)
(:scoring
  (count-total preference2:blue_dodgeball)
)
)

(define (game game-id-686) (:domain medium-objects-room-v1)
(:setup
  (forall (?q - doggie_bed)
    (game-conserved
      (not
        (and
          (agent_holds front)
          (in_motion ?q)
          (= (distance ?q ?q ?q) 1)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?n - building ?s - chair)
        (then
          (once (agent_holds ?s ?s) )
          (hold (same_type ?s) )
          (once (in ?s ?s) )
        )
      )
    )
    (preference preference2
      (exists (?l - dodgeball)
        (then
          (hold-while (same_type ?l ?l) (agent_holds ?l ?l) )
          (once (not (< 2 2) ) )
          (once (agent_holds ?l) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (count preference2:doggie_bed) (external-forall-maximize 5 ) )
    (* (* 3 (count-total preference1:cube_block) )
      (count preference2:alarm_clock)
    )
  )
)
(:scoring
  (count preference1:dodgeball)
)
)

(define (game game-id-687) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (object_orientation ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?z - hexagonal_bin)
        (at-end
          (forall (?y - (either dodgeball desktop cylindrical_block) ?j - wall ?c - hexagonal_bin)
            (on south_west_corner)
          )
        )
      )
    )
    (preference preference2
      (exists (?i - game_object)
        (then
          (once (and (adjacent_side bed) (and (in ?i) (not (in_motion ?i) ) ) ) )
          (hold (agent_holds ?i) )
          (once (agent_holds upside_down) )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (count-once-per-objects preference2:white) )
)
(:scoring
  2
)
)

(define (game game-id-688) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?w - hexagonal_bin)
      (game-conserved
        (equal_z_position ?w)
      )
    )
    (game-optional
      (and
        (touch ?xxx ?xxx)
        (and
          (on ?xxx rug)
          (agent_holds ?xxx)
          (not
            (not
              (or
                (not
                  (on ?xxx)
                )
                (in_motion back)
              )
            )
          )
          (exists (?n ?e - teddy_bear)
            (object_orientation ?e ?e)
          )
          (adjacent ?xxx bridge_block)
          (agent_holds ?xxx ?xxx)
          (and
            (and
              (not
                (and
                  (agent_holds ?xxx)
                  (adjacent door agent)
                )
              )
              (in front)
            )
            (on desk)
          )
        )
        (in ?xxx ?xxx ?xxx)
      )
    )
    (exists (?p - cube_block)
      (and
        (and
          (not
            (exists (?a - chair ?c - hexagonal_bin)
              (not
                (game-optional
                  (and
                    (in_motion green_golfball)
                    (and
                      (in_motion blue)
                      (above ?p ?p)
                    )
                    (touch ?p)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?r - cube_block)
        (then
          (once (on bed ?r) )
          (once (agent_holds ?r) )
          (once (and (not (not (not (not (not (and (not (and (on ?r ?r) (not (not (not (and (not (in_motion ?r pillow) ) (agent_holds ?r) ) ) ) ) (and (not (agent_holds ?r ?r) ) (and (on ?r ?r) (not (in_motion floor) ) (in_motion ?r ?r) (agent_holds ?r) ) ) ) ) (and (not (or (not (not (and (in_motion ?r ?r) (agent_holds ?r ?r door) (not (and (same_type ?r ?r) (and (game_start ?r) (agent_holds front) ) ) ) ) ) ) (not (and (and (and (not (in_motion ?r) ) (not (and (and (adjacent ?r) ) (and (not (in_motion ?r) ) (on ?r ?r ?r) ) (on ?r ?r) ) ) ) (in_motion ?r upright) ) (in ?r ?r) ) ) ) ) (in ?r agent) ) ) ) ) ) ) ) (not (broken ?r ?r) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (<= (count-once preference1:golfball) (external-forall-maximize (count preference1:orange) ) )
      (>= 25 (- (+ (- (count-once preference1:dodgeball:dodgeball) )
            (* 2 (external-forall-minimize (* 4 (count preference1:dodgeball) (not (>= (* (* (count-once-per-objects preference1:blue_dodgeball) (count preference1:basketball) )
                        (* (* 3 (* (* (* 50 (count preference1:green) )
                                (count-once-per-objects preference1:dodgeball)
                              )
                              (count preference1:dodgeball)
                            )
                          )
                          (+ 2 (- (count-shortest preference1:dodgeball:golfball) )
                          )
                          (count preference1:beachball)
                          (count-once-per-objects preference1:side_table)
                        )
                      )
                      5
                    )
                  )
                )
              )
              10
              10
            )
          )
        )
      )
    )
    (>= 7 (total-time) )
  )
)
(:scoring
  10
)
)

(define (game game-id-689) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?z ?b - dodgeball ?w - dodgeball ?h - ball)
      (and
        (forall (?g - dodgeball)
          (game-conserved
            (agent_holds desk)
          )
        )
        (exists (?w - teddy_bear)
          (game-conserved
            (agent_holds bed ?w)
          )
        )
      )
    )
    (forall (?g - golfball)
      (game-optional
        (on ?g)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?d - curved_wooden_ramp)
        (then
          (once (in ?d) )
          (once (agent_holds floor) )
          (once (< 0 (distance ?d ?d)) )
        )
      )
    )
  )
)
(:terminal
  (>= 6 15 )
)
(:scoring
  (* (count-longest preference1:dodgeball:red:beachball) (count-once-per-external-objects preference1:dodgeball:pink_dodgeball) (* 10 (* (count preference1:basketball) 4 (* (* 15 (* (count-once-per-objects preference1:basketball:yellow) (count preference1:basketball:yellow_cube_block) )
          )
          (* (count-once-per-objects preference1:pink) (count preference1:purple) )
        )
        (count-once-per-objects preference1:hexagonal_bin:yellow)
      )
    )
    (count-once-per-objects preference1:dodgeball)
    2
    3
  )
)
)

(define (game game-id-690) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (not
      (agent_holds ?xxx desk)
    )
  )
)
(:constraints
  (and
    (forall (?x ?c - curved_wooden_ramp ?c - (either cd yellow))
      (and
        (preference preference1
          (exists (?q - wall)
            (then
              (once (opposite rug upright) )
              (once (touch agent ?c) )
              (once (in_motion ?q ?c) )
            )
          )
        )
        (preference preference2
          (exists (?i ?j ?w ?b - golfball)
            (at-end
              (in_motion ?j)
            )
          )
        )
        (preference preference3
          (exists (?o - chair)
            (then
              (hold (agent_holds bed ?c) )
              (once (in_motion ?o ?c) )
              (once (agent_holds ?c ?o) )
            )
          )
        )
      )
    )
    (preference preference4
      (exists (?r ?k - (either floor wall))
        (then
          (once (and (exists (?c - dodgeball) (in ?c) ) (in_motion pink_dodgeball) ) )
          (once (object_orientation ?r) )
          (once (touch ?r ?r) )
          (hold-while (in_motion ?r) (and (agent_holds ?r) (not (not (on ?k) ) ) (touch ?k) (is_setup_object ?r ?k) ) )
          (once (in ?k) )
        )
      )
    )
    (preference preference5
      (exists (?g - dodgeball)
        (then
          (hold (on ?g) )
          (once (in_motion ?g ?g) )
          (hold-while (>= (distance ?g 5 room_center) (distance ?g bed)) (>= (distance 9 9) (distance room_center ?g)) )
        )
      )
    )
    (forall (?g - yellow_cube_block)
      (and
        (preference preference6
          (exists (?i ?v - hexagonal_bin)
            (then
              (once (on ?g ?g) )
              (once (in ?i) )
              (once (in_motion ?v) )
            )
          )
        )
      )
    )
    (preference preference7
      (exists (?r - hexagonal_bin)
        (then
          (once (not (in_motion ?r) ) )
          (hold-while (in ?r ?r) (in_motion ?r ?r) (and (in ?r) (in_motion ?r ?r) (same_object ?r) (in_motion ?r ?r) ) )
          (hold (in pink_dodgeball) )
        )
      )
    )
    (preference preference8
      (exists (?y - triangular_ramp)
        (then
          (once (and (on ?y) (on ?y) ) )
          (hold (same_type agent ?y) )
          (once (and (agent_holds ?y ?y) (not (in_motion north_wall) ) (in_motion side_table) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 4 (count-once-per-objects preference6:yellow) )
)
(:scoring
  (count preference6:hexagonal_bin)
)
)

(define (game game-id-691) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (not
      (in ?xxx desk)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?h - hexagonal_bin)
        (then
          (once (not (rug_color_under back ?h) ) )
        )
      )
    )
    (preference preference2
      (exists (?i - cube_block)
        (then
          (once (agent_holds ?i ?i) )
          (once (and (in_motion ?i ?i) (not (in_motion ?i) ) ) )
          (once (in_motion ?i) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count preference1:blue_dodgeball) (/ 10 3 ) )
    4
  )
)
(:scoring
  (count preference1:beachball)
)
)

(define (game game-id-692) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (in ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?h - (either yellow_cube_block pyramid_block pyramid_block cd cylindrical_block) ?s - hexagonal_bin)
        (then
          (hold-while (on bed) (on ?s ?s) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= 20 (+ (count-once-per-objects preference1:purple:cube_block:beachball) (+ (/ 3 2 ) (and (* 2 )
            (not
              (count preference1:yellow_pyramid_block:golfball)
            )
            (- 0 )
          )
        )
      )
    )
  )
)
(:scoring
  (count preference1:dodgeball)
)
)

(define (game game-id-693) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (in_motion ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (then
        (once-measure (in_motion top_drawer) (distance ?xxx 8 ?xxx) )
        (hold-while (and (on ?xxx) (on ?xxx) ) (same_color desk ?xxx ?xxx) )
        (once (in_motion ?xxx) )
      )
    )
    (preference preference2
      (exists (?z - hexagonal_bin ?u ?m ?x - drawer ?v - chair ?u - cube_block ?p - doggie_bed)
        (then
          (hold (adjacent ?p) )
          (hold (adjacent ?p) )
          (once (in_motion ?p top_shelf) )
        )
      )
    )
    (forall (?v - hexagonal_bin)
      (and
        (preference preference3
          (then
            (hold (in_motion ?v ?v) )
            (hold (not (on ?v) ) )
            (hold (adjacent ?v ?v) )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference1:cylindrical_block) (count preference1:yellow) )
)
(:scoring
  (* (count preference2:basketball) 1 )
)
)

(define (game game-id-694) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (in_motion ?xxx)
  )
)
(:constraints
  (and
    (forall (?u - hexagonal_bin ?b - (either teddy_bear book) ?s - yellow_cube_block)
      (and
        (preference preference1
          (exists (?v - (either basketball cube_block) ?o - game_object ?k - hexagonal_bin)
            (then
              (once (touch ?s ?k back) )
              (once (in ?s) )
              (once (agent_holds desk) )
            )
          )
        )
        (preference preference2
          (exists (?j - hexagonal_bin)
            (then
              (forall-sequence (?r - cube_block ?w - (either blue_cube_block chair))
                (then
                  (once (on ?w agent) )
                  (hold (on ?s) )
                  (hold (agent_holds left) )
                )
              )
              (once (agent_holds ?j ?s) )
              (hold-for 8 (and (in_motion desk ?j) (> 1 (distance ?s ?s)) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (= (count-once preference1:pyramid_block) 0 )
)
(:scoring
  (count-longest preference2:yellow_cube_block)
)
)

(define (game game-id-695) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (and
      (between ?xxx)
      (agent_holds ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?i - cube_block)
        (then
          (once (exists (?b - curved_wooden_ramp) (and (in desk ?b) (not (on ?i) ) ) ) )
          (hold-while (not (adjacent_side ?i ?i ?i) ) (in_motion ?i) )
          (once (agent_holds ?i ?i) )
        )
      )
    )
    (preference preference2
      (exists (?z - pyramid_block)
        (then
          (once (on ?z) )
          (once (and (in_motion ?z) (in_motion ?z) ) )
          (hold (faces desk ?z) )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (count preference2:dodgeball:dodgeball) )
)
(:scoring
  5
)
)

(define (game game-id-696) (:domain few-objects-room-v1)
(:setup
  (exists (?m - ball)
    (game-conserved
      (on ?m)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?d ?e ?v ?t - hexagonal_bin)
        (then
          (hold-while (or (and (not (on ?d) ) (touch ?d ?d) (not (rug_color_under ?d) ) ) (< (distance ?v ?t) (distance desk agent)) ) (not (in_motion ?d) ) )
          (hold (on ?v) )
          (once (agent_holds ?d ?t) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-measure preference1:blue) 20 )
)
(:scoring
  3
)
)

(define (game game-id-697) (:domain many-objects-room-v1)
(:setup
  (exists (?f - hexagonal_bin ?g - (either hexagonal_bin cylindrical_block))
    (game-conserved
      (in_motion bed)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?w - doggie_bed)
        (then
          (once (and (on bed ?w) (and (agent_holds ?w agent) (agent_holds ?w) (adjacent ?w) ) ) )
          (once (agent_holds ?w) )
          (once (not (and (> (distance 10 ?w) 7) (on door desk) ) ) )
        )
      )
    )
    (forall (?t - hexagonal_bin)
      (and
        (preference preference2
          (exists (?z - curved_wooden_ramp ?p - red_dodgeball)
            (then
              (any)
              (hold (adjacent ?t) )
              (once (in_motion ?t ?t) )
            )
          )
        )
      )
    )
    (forall (?g ?j - curved_wooden_ramp ?e - building)
      (and
        (preference preference3
          (exists (?c ?f - dodgeball)
            (then
              (once (not (adjacent ?e ?f ?e) ) )
              (hold-while (adjacent ?e ?f) (on ?e) )
              (hold (and (same_color ?f) (not (not (and (not (agent_holds ?f ?e) ) (on ?c ?e) ) ) ) ) )
            )
          )
        )
        (preference preference4
          (exists (?f - hexagonal_bin ?v - building)
            (at-end
              (and
                (in ?e)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:basketball) (count preference3:pink_dodgeball) )
)
(:scoring
  3
)
)

(define (game game-id-698) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (and
      (adjacent )
      (not
        (agent_holds ?xxx)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (then
        (hold (and (not (not (on bed) ) ) (not (or (not (not (not (not (in_motion ?xxx ?xxx) ) ) ) ) (in_motion ?xxx ?xxx) ) ) ) )
        (once (in_motion ?xxx ?xxx) )
        (once (in_motion ?xxx) )
      )
    )
  )
)
(:terminal
  (> (- 2 )
    (external-forall-maximize
      (= 3 50 )
    )
  )
)
(:scoring
  (count-once-per-external-objects preference1:triangle_block)
)
)

(define (game game-id-699) (:domain many-objects-room-v1)
(:setup
  (exists (?i - curved_wooden_ramp)
    (and
      (exists (?r - hexagonal_bin)
        (and
          (forall (?o - curved_wooden_ramp)
            (game-conserved
              (in_motion ?i)
            )
          )
        )
      )
      (exists (?p - beachball)
        (game-conserved
          (not
            (and
              (toggled_on ?i ?i)
              (adjacent_side ?p)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?e - teddy_bear)
        (at-end
          (agent_holds ?e)
        )
      )
    )
  )
)
(:terminal
  (<= (count preference1:basketball:red) (count preference1:cube_block) )
)
(:scoring
  3
)
)

(define (game game-id-700) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (or
      (agent_holds ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?k ?b - hexagonal_bin ?y ?c ?p - teddy_bear ?o - curved_wooden_ramp)
        (then
          (hold (in_motion ?o ?o) )
          (once (agent_holds ?o) )
          (hold (not (in ?o) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (* 1 (+ (count-overlapping preference1:cube_block) 5 )
      3
      3
      2
      3
    )
  )
)
(:scoring
  (* 2 (count-unique-positions preference1:beachball:hexagonal_bin) )
)
)

(define (game game-id-701) (:domain medium-objects-room-v1)
(:setup
  (exists (?b ?e - cylindrical_block)
    (exists (?m - curved_wooden_ramp)
      (or
        (game-optional
          (in_motion ?e)
        )
        (game-optional
          (not
            (on ?e)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?e - (either book teddy_bear))
      (and
        (preference preference1
          (exists (?p - ball ?u - hexagonal_bin)
            (then
              (once (on ?u) )
            )
          )
        )
        (preference preference2
          (exists (?i - game_object)
            (then
              (once (not (adjacent_side ?e block) ) )
              (hold (adjacent ?e ?i) )
              (hold (and (and (<= (distance agent) (distance ?e ?e)) (not (agent_holds agent ?e) ) ) (toggled_on pink_dodgeball ?i) (and (in_motion ?e pink) (in_motion ?e ?e) ) (not (agent_holds ?e ?i) ) (in_motion agent) (and (is_setup_object ?i ?e) (or (and (equal_z_position ?e ?e pink) (on ?e) (< (distance desk 3) 3) (and (not (in_motion ?i) ) (and (touch ?i) (and (in ?i bed) (or (or (not (and (in ?e) (in_motion ?i) (on ?e ?i) ) ) (< (distance room_center ?e) 1) ) (touch ?e) ) ) ) ) (and (and (in_motion bed floor) (on ?i ?i) ) (agent_holds ?i) ) ) (not (not (agent_holds ?e ?i) ) ) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:yellow) (* (and (* (count-once-per-objects preference2:orange:dodgeball) 7 )
        (count-measure preference1:yellow:top_drawer)
      )
      (count preference2:orange)
      0
      2
      (+ (external-forall-maximize (+ (and (* 10 (* (* (* 4 (count preference2:golfball) )
                    (< (count preference2:golfball:purple) (count-unique-positions preference2:pyramid_block) )
                  )
                  (count preference2:beachball)
                  (count-once preference1:basketball)
                )
              )
              (count-total preference2:green)
            )
            (count preference1:yellow)
          )
        )
        3
      )
      (count preference1:cube_block:basketball)
      (and
        2
        10
      )
      5
      5
      (* (external-forall-maximize (* (- (count preference1:cube_block) )
            (* 30 (* (total-time) (* 1 (count preference1:hexagonal_bin) )
              )
            )
          )
        )
        (count-overlapping preference1:hexagonal_bin:golfball)
      )
      (- (+ (count preference1:pink_dodgeball) (count-total preference1:pink_dodgeball) )
      )
      7
    )
  )
)
(:scoring
  8
)
)

(define (game game-id-702) (:domain few-objects-room-v1)
(:setup
  (forall (?a - ball ?l - blue_pyramid_block)
    (game-conserved
      (adjacent_side ?l)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?e - (either mug alarm_clock dodgeball))
        (then
          (once (and (in ?e ?e) (not (and (not (agent_holds ?e ?e) ) (or (and (agent_holds ?e ?e) (agent_holds ?e ?e) ) (adjacent ?e ?e) ) ) ) ) )
          (forall-sequence (?m - ball ?t - hexagonal_bin ?b - (either main_light_switch golfball dodgeball))
            (then
              (once (in ?b) )
              (once (in_motion bed ?e) )
              (hold (and (not (adjacent ?e) ) (not (adjacent ?e) ) (and (in_motion pink ?e) (on ?b ?b) ) ) )
              (hold-while (and (in_motion ?e) (not (in ?b ?e) ) ) (exists (?g - (either cd)) (and (not (not (in_motion rug) ) ) (in_motion ?g) ) ) )
            )
          )
          (once (touch pink_dodgeball ?e) )
        )
      )
    )
    (preference preference2
      (exists (?g - book)
        (then
          (once (equal_x_position ?g ?g) )
          (once (not (and (adjacent ?g ?g) (not (and (in_motion ?g) (in_motion pink west_wall) ) ) ) ) )
          (once (and (in_motion ?g) (agent_holds ?g) ) )
        )
      )
    )
    (preference preference3
      (exists (?e - cube_block)
        (at-end
          (and
            (is_setup_object ?e)
            (and
              (on ?e)
              (or
                (in_motion ?e ?e)
                (and
                  (and
                    (on block)
                    (< 0.5 5)
                  )
                  (on ?e)
                )
                (on ?e)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 1 (count-once-per-objects preference1:dodgeball) )
)
(:scoring
  (count-once-per-objects preference2:dodgeball:brown)
)
)

(define (game game-id-703) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?n - ball)
      (and
        (exists (?z - hexagonal_bin ?f - watch)
          (game-conserved
            (in_motion ?f agent)
          )
        )
        (game-optional
          (not
            (and
              (on ?n)
              (agent_holds ?n)
            )
          )
        )
      )
    )
    (game-optional
      (in_motion ?xxx ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?a - dodgeball)
        (at-end
          (same_color top_shelf agent)
        )
      )
    )
  )
)
(:terminal
  (< 5 (or 2 2 10 ) )
)
(:scoring
  300
)
)

(define (game game-id-704) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?u - dodgeball)
      (not
        (game-conserved
          (not
            (not
              (in ?u agent)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?g ?y - curved_wooden_ramp ?i - color)
      (and
        (preference preference1
          (exists (?o - hexagonal_bin)
            (then
              (once (or (and (in_motion ?o) (equal_z_position ?o ?o) ) (touch ?i) (not (or (not (in_motion ?i yellow) ) (and (in_motion ?o) (and (in_motion ?o) (in ?o) (touch ?o ?o) ) ) ) ) (on agent) ) )
              (once (in_motion ?i) )
              (hold (and (touch ?i ?i) (in_motion ?i ?o ?i) ) )
              (once (not (< (distance ?i 10) (distance 2 ?o)) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> 2 (count preference1:green) )
)
(:scoring
  7
)
)

(define (game game-id-705) (:domain many-objects-room-v1)
(:setup
  (or
    (exists (?o - ball)
      (game-conserved
        (agent_holds pink_dodgeball pink)
      )
    )
    (game-optional
      (in_motion ?xxx ?xxx)
    )
  )
)
(:constraints
  (and
    (forall (?k - shelf)
      (and
        (preference preference1
          (exists (?l - game_object ?g - building)
            (then
              (hold (in_motion ?g) )
              (once (same_color ?k ?k) )
              (hold (not (agent_holds ?k) ) )
            )
          )
        )
        (preference preference2
          (exists (?t - dodgeball)
            (at-end
              (agent_holds ?k ?t)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (external-forall-minimize 30 ) 2 )
  )
)
(:scoring
  (count preference2:basketball)
)
)

(define (game game-id-706) (:domain few-objects-room-v1)
(:setup
  (forall (?n ?p - dodgeball ?n - hexagonal_bin ?j - ball)
    (game-optional
      (or
        (agent_holds ?j ?j)
        (and
          (in_motion ?j)
          (= 1 1)
          (toggled_on ?j)
          (in ?j)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?z - hexagonal_bin ?m - cylindrical_block)
        (then
          (once (adjacent bed) )
          (hold (agent_holds green ?m) )
          (once (in_motion ?m ?m) )
        )
      )
    )
  )
)
(:terminal
  (>= 100 (count-once preference1:red) )
)
(:scoring
  100
)
)

(define (game game-id-707) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (exists (?a - dodgeball ?s - teddy_bear ?o - game_object)
      (in_motion ?o)
    )
  )
)
(:constraints
  (and
    (forall (?o - dodgeball)
      (and
        (preference preference1
          (exists (?h - cylindrical_block)
            (at-end
              (not
                (and
                  (in ?o ?o)
                  (agent_holds ?h ?h)
                )
              )
            )
          )
        )
        (preference preference2
          (exists (?e - triangular_ramp ?a - cube_block)
            (at-end
              (and
                (equal_z_position ?a ?o)
                (in_motion ?o)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 2 7 )
)
(:scoring
  (count preference1:bed)
)
)

(define (game game-id-708) (:domain few-objects-room-v1)
(:setup
  (exists (?e - dodgeball)
    (forall (?l - dodgeball)
      (game-conserved
        (and
          (not
            (< (building_size ?e ?l) 6)
          )
          (agent_holds ?l ?l)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?o - teddy_bear)
        (then
          (once (in_motion ?o ?o) )
          (hold (not (on desk ?o) ) )
          (hold (and (and (adjacent_side ?o) (and (in_motion ?o) (and (< (distance ) 1) (agent_holds ?o ?o) ) (in ?o) ) ) (and (adjacent ?o ?o) (on ?o) ) ) )
        )
      )
    )
    (preference preference2
      (exists (?l - dodgeball)
        (then
          (once (agent_holds ?l ?l) )
          (once (and (in_motion ?l pillow) (between ?l) (in_motion ?l) (not (not (and (agent_holds ?l) (in ?l) ) ) ) ) )
          (once (> (distance room_center) (distance desk desk)) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-shortest preference1:yellow:yellow) 5 )
)
(:scoring
  (- (count preference2:dodgeball) )
)
)

(define (game game-id-709) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-optional
      (agent_holds ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?j - hexagonal_bin)
        (at-end
          (in_motion ?j)
        )
      )
    )
  )
)
(:terminal
  (>= (* (total-score) 8 )
    (count-once-per-objects preference1:yellow_cube_block:golfball)
  )
)
(:scoring
  10
)
)

(define (game game-id-710) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (in_motion ?xxx ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (then
        (hold (same_color ?xxx ?xxx) )
        (once (exists (?w - dodgeball) (adjacent ?w) ) )
        (once (agent_holds ?xxx) )
      )
    )
    (forall (?w - yellow_pyramid_block)
      (and
        (preference preference2
          (exists (?z - (either pyramid_block triangular_ramp) ?f - golfball)
            (then
              (once (> 0.5 (distance agent desk ?w)) )
              (once (not (agent_holds ?w) ) )
              (hold-while (not (not (and (same_color ?w) (opposite bed desk ?w) (not (and (agent_holds ?w) (on ?f ?w) ) ) (adjacent_side ?f) (adjacent ?w) (not (agent_holds ?w) ) ) ) ) (not (and (or (agent_holds agent) (not (adjacent ?w) ) ) (in ?f) (in_motion ?w rug) ) ) (adjacent_side ?f) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:dodgeball) (count preference2:beachball) )
)
(:scoring
  (- (count-longest preference1:basketball) )
)
)

(define (game game-id-711) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (forall (?u ?d - doggie_bed ?x - hexagonal_bin)
      (adjacent_side ?x ?x)
    )
  )
)
(:constraints
  (and
    (forall (?v - ball ?a - chair)
      (and
        (preference preference1
          (exists (?g - hexagonal_bin ?v - hexagonal_bin ?c - hexagonal_bin)
            (at-end
              (on ?a)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (or
        (= (count-once-per-objects preference1:red) 9 )
        (>= (count-once preference1:blue_cube_block) (* 5 (* (* (total-time) (not (+ (count-once-per-objects preference1:golfball) (* (or (* (count-unique-positions preference1:green:doggie_bed) (count-once preference1:blue_dodgeball:dodgeball) )
                        10
                        10
                      )
                      3
                    )
                  )
                )
              )
              (count preference1:pink_dodgeball:pyramid_block)
            )
          )
        )
      )
      (= (count-once-per-objects preference1:red) 5 )
    )
    (and
      (>= (count preference1:wall:pink) (* (count preference1:beachball) (count-once-per-objects preference1:red) )
      )
      (>= (and (count preference1:basketball:orange) (* 100 10 )
        )
        (count-once-per-objects preference1:alarm_clock)
      )
    )
    (>= (count preference1:dodgeball) (count preference1:tall_cylindrical_block) )
    (>= 10 (count preference1:dodgeball) )
  )
)
(:scoring
  (* (* (count-once-per-external-objects preference1:wall) (total-score) )
    (total-time)
  )
)
)

(define (game game-id-712) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (not
      (and
        (not
          (not
            (not
              (not
                (and
                  (in_motion desk ?xxx)
                  (not
                    (not
                      (and
                        (not
                          (and
                            (touch ?xxx)
                            (in_motion ?xxx)
                          )
                        )
                        (touch ?xxx)
                      )
                    )
                  )
                  (in_motion ?xxx)
                  (not
                    (in ?xxx ?xxx)
                  )
                  (and
                    (and
                      (not
                        (in_motion ?xxx ?xxx)
                      )
                      (agent_holds ?xxx)
                      (not
                        (agent_holds ?xxx ?xxx)
                      )
                    )
                    (not
                      (on ?xxx)
                    )
                    (not
                      (or
                        (on ?xxx ?xxx)
                        (and
                          (and
                            (agent_holds ?xxx)
                            (not
                              (not
                                (in desk)
                              )
                            )
                          )
                          (not
                            (and
                              (not
                                (in ?xxx ?xxx)
                              )
                              (agent_holds ?xxx)
                            )
                          )
                        )
                      )
                    )
                  )
                  (in ?xxx)
                  (touch ?xxx)
                )
              )
            )
          )
        )
        (in_motion ?xxx)
      )
    )
  )
)
(:constraints
  (and
    (forall (?e - tan_cube_block)
      (and
        (preference preference1
          (exists (?h - building)
            (then
              (hold (in_motion ?e) )
              (hold-while (not (in ?h) ) (in_motion ?h) )
              (once (not (agent_holds ?h ?h) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:green) (* (count-once preference1:pink_dodgeball) )
  )
)
(:scoring
  3
)
)

(define (game game-id-713) (:domain few-objects-room-v1)
(:setup
  (forall (?s - hexagonal_bin)
    (game-conserved
      (in ?s ?s)
    )
  )
)
(:constraints
  (and
    (forall (?b - ball ?q - game_object)
      (and
        (preference preference1
          (exists (?i - (either cylindrical_block dodgeball desktop))
            (then
              (once (and (in_motion ?q) (and (not (is_setup_object ?i ?q) ) (agent_holds agent) ) ) )
              (once (and (and (not (on ?i) ) (or (agent_crouches ?i ?q) (in_motion ?q) ) ) (agent_holds ?i) (not (or (adjacent ?i bed ?i) (and (in_motion ?i south_wall) (not (not (and (agent_holds ?q ?q) (in_motion bed) ) ) ) (agent_holds ?q green_golfball) ) (on ?i ?i) (< 4 (distance ?i ?i)) ) ) ) )
              (hold-while (and (on ?q) (agent_holds ?i rug) ) (agent_holds ?i ?i) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?i - block ?l - building ?y - game_object)
        (then
          (once (< 1 1) )
          (hold-while (object_orientation bed ?y) (in_motion ?y ?y) )
          (once (and (not (on left) ) (on ?y) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-same-positions preference1:beachball) (total-time) )
)
(:scoring
  (count preference1:basketball)
)
)

(define (game game-id-714) (:domain few-objects-room-v1)
(:setup
  (exists (?g - game_object)
    (and
      (game-conserved
        (and
          (agent_holds ?g ?g)
          (on agent)
          (not
            (and
              (not
                (and
                  (in_motion ?g)
                  (agent_holds ?g ?g)
                  (not
                    (agent_holds ?g ?g)
                  )
                )
              )
              (agent_crouches ?g ?g)
              (agent_holds ?g)
            )
          )
          (and
            (agent_holds ?g)
            (and
              (faces rug ?g)
              (and
                (agent_holds ?g bed)
                (in rug)
              )
              (< (distance agent room_center ?g) (distance ?g 3))
              (and
                (not
                  (not
                    (and
                      (in_motion ?g ?g)
                      (adjacent_side ?g)
                    )
                  )
                )
                (and
                  (not
                    (and
                      (not
                        (not
                          (and
                            (is_setup_object ?g ?g)
                            (and
                              (agent_holds rug ?g)
                              (not
                                (agent_holds ?g ?g)
                              )
                            )
                          )
                        )
                      )
                      (and
                        (not
                          (> 0.5 1)
                        )
                        (in_motion ?g)
                      )
                    )
                  )
                  (not
                    (touch ?g ?g)
                  )
                )
              )
              (in_motion ?g ?g)
            )
          )
        )
      )
      (game-conserved
        (not
          (not
            (and
              (not
                (agent_holds agent ?g)
              )
              (in_motion ?g ?g)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?d ?o ?q ?v ?m - curved_wooden_ramp ?c - (either doggie_bed) ?m - curved_wooden_ramp)
        (at-end
          (agent_holds ?m)
        )
      )
    )
  )
)
(:terminal
  (= (count preference1:dodgeball) (count preference1:yellow) )
)
(:scoring
  5
)
)

(define (game game-id-715) (:domain few-objects-room-v1)
(:setup
  (and
    (game-conserved
      (not
        (is_setup_object ?xxx)
      )
    )
    (game-conserved
      (in_motion agent)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?t - wall)
        (then
          (hold (in_motion ?t ?t) )
          (hold (in_motion ?t) )
          (hold (and (not (not (in_motion ?t) ) ) (adjacent ?t ?t) ) )
        )
      )
    )
    (preference preference2
      (exists (?v - (either lamp) ?a - building ?z - wall)
        (then
          (hold (agent_holds ?z ?z) )
          (once (object_orientation ?z) )
          (hold (on pink ?z) )
        )
      )
    )
    (preference preference3
      (exists (?i - dodgeball)
        (then
          (any)
          (hold (not (in ?i) ) )
          (once (not (on ?i) ) )
        )
      )
    )
    (preference preference4
      (exists (?s - (either basketball))
        (then
          (once (between ?s) )
          (hold (not (not (on ?s) ) ) )
          (once (or (not (in ?s) ) (adjacent pink ?s) ) )
        )
      )
    )
    (preference preference5
      (exists (?v - cube_block)
        (then
          (once (not (and (not (on ?v ?v) ) (< (distance 1 room_center) (distance agent ?v)) (agent_holds ?v) ) ) )
          (once-measure (in_motion ?v agent) (distance ?v agent) )
          (once (not (and (in_motion ?v) (in_motion ?v) ) ) )
          (hold (not (and (not (and (in_motion ?v) (and (on ?v bed) (touch ?v yellow) ) ) ) (in_motion ?v ?v) (in ?v ?v) (not (in_motion ?v ?v) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* (count preference4:dodgeball) (* (count-once preference4:beachball) (count preference1:pyramid_block:basketball) )
      )
      (* (* (count preference1:yellow_cube_block:basketball) (count preference1:dodgeball:cube_block:blue_dodgeball) )
        (+ (count-once-per-external-objects preference4:pink) (count-once-per-external-objects preference1:golfball) )
      )
    )
  )
)
(:scoring
  (count-once-per-objects preference4:green)
)
)

(define (game game-id-716) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?o - (either side_table cd key_chain) ?u - game_object)
      (and
        (game-optional
          (not
            (agent_holds ?u ?u)
          )
        )
        (game-optional
          (not
            (on ?u)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?v - doggie_bed)
        (at-end
          (on agent)
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count preference1:yellow) (count-once preference1:dodgeball:orange) )
    (and
      (< (* (count preference1:beachball) (count-once-per-objects preference1:hexagonal_bin) )
        (count-once-per-objects preference1:cube_block)
      )
      (or
        (or
          (< 1 (count-same-positions preference1:book:dodgeball) )
          (>= 0 (* (count-once-per-objects preference1:golfball) (count-longest preference1:beachball) )
          )
          (and
            (= (+ 3 (count-once-per-objects preference1:yellow:tall_cylindrical_block) )
              (count-once-per-objects preference1:blue_cube_block)
            )
            (>= (count preference1:green:pink_dodgeball) (* 9 (external-forall-maximize (count preference1:hexagonal_bin) ) 10 (count preference1:pink_dodgeball) )
            )
          )
        )
        (not
          (>= (external-forall-maximize (* 50 6 (count preference1:dodgeball) (or (count-once-per-external-objects preference1:wall:basketball) (* 10 5 )
                  (* (count-overlapping preference1:block) (count-once preference1:yellow) )
                )
                (* (count-once-per-objects preference1:purple:green) 1 )
                (count preference1:triangle_block)
              )
            )
            (count preference1)
          )
        )
      )
    )
  )
)
(:scoring
  (count preference1:dodgeball:blue_pyramid_block)
)
)

(define (game game-id-717) (:domain few-objects-room-v1)
(:setup
  (and
    (game-conserved
      (and
        (and
          (and
            (in_motion pillow ?xxx)
            (adjacent ?xxx)
          )
          (not
            (agent_holds ?xxx front_left_corner)
          )
        )
        (not
          (not
            (and
              (agent_holds ?xxx)
              (touch ?xxx)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?w - (either curved_wooden_ramp))
        (then
          (once (and (and (agent_holds desk) (and (agent_holds ?w ?w ?w) (adjacent ?w) ) (in_motion ?w) ) (not (in_motion ?w) ) ) )
          (once (> 1 7) )
          (once (and (and (< 1 1) (and (in_motion ?w ?w) (and (game_start ?w ?w) (not (not (agent_holds ?w) ) ) (on ?w) ) ) ) (and (on floor ?w) (agent_holds ?w) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 1 25 )
)
(:scoring
  (count-unique-positions preference1:hexagonal_bin:green)
)
)

(define (game game-id-718) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (and
        (forall (?p - dodgeball ?x - pillow)
          (in_motion ?x ?x)
        )
      )
    )
    (game-conserved
      (and
        (in_motion agent ?xxx)
        (in_motion ?xxx)
        (and
          (not
            (on ?xxx ?xxx)
          )
          (between bed ?xxx)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?b - curved_wooden_ramp ?v - hexagonal_bin)
        (then
          (hold (not (not (and (< (distance agent ?v agent) 1) (on ?v ?v) ) ) ) )
          (once (and (agent_holds ?v ?v) (and (not (exists (?y - drawer) (in agent) ) ) (agent_holds ?v) ) ) )
          (once (< (distance ) 1) )
        )
      )
    )
    (preference preference2
      (exists (?s - hexagonal_bin ?p - (either pencil pyramid_block))
        (at-end
          (agent_holds ?p)
        )
      )
    )
  )
)
(:terminal
  (>= (>= (* (- 2 )
        (external-forall-minimize
          (total-score)
        )
      )
      (* (count-measure preference2:dodgeball:tan) (count preference2:green) (count preference2:beachball) 3 (count preference1:brown) (count-once-per-objects preference1:cube_block) 5 300 (external-forall-maximize (count-once-per-external-objects preference2:red) ) )
    )
    10
  )
)
(:scoring
  (+ (* (* (* (* 50 (* (* (* (count-once preference2:purple:beachball) (* 5 (= (* (count preference2:wall) 3 10 (/ (- (count preference2:yellow) )
                          (* (count preference1:basketball) 5 (count preference2:basketball) )
                        )
                      )
                      10
                    )
                  )
                )
                (count-total preference1:blue)
              )
              7
              (+ (count-once-per-objects preference2:pink) (external-forall-maximize (count preference1:beachball:beachball) ) )
            )
          )
          (count-once preference2:basketball:yellow)
          (* 6 (<= (or (count preference2:red:green) (external-forall-maximize 3 ) (count-once-per-objects preference2:pink_dodgeball) ) (external-forall-maximize (count preference1:purple:hexagonal_bin) ) )
          )
        )
        (count preference2:wall)
      )
      (+ (count preference1:basketball) (count-once-per-objects preference2:purple:dodgeball) )
    )
    100
  )
)
)

(define (game game-id-719) (:domain many-objects-room-v1)
(:setup
  (and
    (game-optional
      (agent_holds ?xxx)
    )
    (and
      (exists (?p - (either game_object yellow_cube_block))
        (exists (?f - hexagonal_bin ?y - ball)
          (and
            (and
              (exists (?e - dodgeball ?r - (either cellphone cylindrical_block))
                (or
                  (and
                    (forall (?e - shelf)
                      (forall (?s - (either hexagonal_bin cylindrical_block))
                        (and
                          (forall (?a - dodgeball)
                            (and
                              (forall (?x - ball ?l - block)
                                (forall (?c - desk_shelf)
                                  (not
                                    (and
                                      (game-conserved
                                        (equal_x_position ?a)
                                      )
                                      (and
                                        (game-conserved
                                          (in_motion ?c)
                                        )
                                        (exists (?m - tall_cylindrical_block)
                                          (game-conserved
                                            (not
                                              (in ?m ?m)
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                              (and
                                (game-optional
                                  (in ?a ?y)
                                )
                              )
                            )
                          )
                          (game-conserved
                            (agent_holds ?e)
                          )
                          (forall (?c - color)
                            (forall (?z - ball)
                              (and
                                (exists (?h - (either laptop tall_cylindrical_block) ?b - ball)
                                  (game-conserved
                                    (not
                                      (and
                                        (in_motion agent ?e ?c)
                                        (and
                                          (agent_holds ?b ?e)
                                          (and
                                            (and
                                              (adjacent ?r ?s)
                                              (agent_holds ?z)
                                            )
                                            (in_motion ?b ?r)
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                    (game-conserved
                      (or
                        (agent_holds desk)
                        (not
                          (on ?r ?r)
                        )
                      )
                    )
                    (exists (?j - doggie_bed)
                      (forall (?a ?k - hexagonal_bin ?f - game_object ?a - hexagonal_bin ?g - golfball)
                        (exists (?h - curved_wooden_ramp)
                          (game-optional
                            (on front)
                          )
                        )
                      )
                    )
                  )
                  (exists (?w - color)
                    (game-optional
                      (in_motion rug)
                    )
                  )
                )
              )
            )
          )
        )
      )
      (forall (?o - hexagonal_bin)
        (exists (?p - hexagonal_bin)
          (forall (?f - pillow)
            (and
              (forall (?x - pyramid_block ?r - building ?t - hexagonal_bin)
                (game-conserved
                  (faces ?t ?p)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?f - red_dodgeball)
        (then
          (hold (in_motion ?f ?f) )
          (hold (object_orientation ?f) )
          (hold (on ?f ?f front) )
        )
      )
    )
  )
)
(:terminal
  (>= (- 2 )
    5
  )
)
(:scoring
  2
)
)

(define (game game-id-720) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (in_motion agent ?xxx)
  )
)
(:constraints
  (and
    (forall (?g - chair)
      (and
        (preference preference1
          (exists (?c ?x - hexagonal_bin ?v - hexagonal_bin)
            (then
              (once (in_motion ?v ?v) )
              (once (on ?v ?g) )
              (hold (adjacent ?v floor) )
            )
          )
        )
      )
    )
    (preference preference2
      (then
        (once (not (not (or (agent_holds ?xxx ?xxx) (not (agent_holds ?xxx ?xxx) ) ) ) ) )
        (once (in_motion rug ?xxx) )
        (once (and (adjacent ?xxx ?xxx) (< (distance ?xxx ?xxx) 1) (and (in_motion ?xxx) (< (distance ?xxx room_center) 10) (not (not (or (in_motion ?xxx rug) (not (agent_holds ?xxx) ) ) ) ) (on ?xxx) ) ) )
      )
    )
  )
)
(:terminal
  (> 4 (count preference2:dodgeball:green) )
)
(:scoring
  (count-once-per-objects preference1:red)
)
)

(define (game game-id-721) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (game-conserved
        (between ?xxx)
      )
    )
    (game-conserved
      (in_motion green_golfball ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?a - shelf)
        (then
          (hold-while (same_object ?a upright) (agent_holds ?a) )
          (hold-while (agent_holds ?a) (or (on rug ?a) (< 8 2) ) )
          (once (and (and (exists (?g - hexagonal_bin) (adjacent ?a ?a) ) (not (not (or (on ?a) (agent_holds ?a) ) ) ) ) (< 10 1) ) )
        )
      )
    )
    (preference preference2
      (exists (?o - ball)
        (then
          (once (and (and (and (in_motion ?o) ) (agent_holds ?o) ) (touch ?o) ) )
          (once (agent_holds ?o ?o) )
          (once (in_motion ?o) )
          (hold (on pink_dodgeball ?o) )
        )
      )
    )
    (preference preference3
      (exists (?z - hexagonal_bin)
        (then
          (hold-while (forall (?g - pillow) (not (in_motion ?g agent) ) ) (and (not (and (on ?z) (not (in_motion ?z ?z) ) ) ) (agent_holds ?z ?z green_golfball) ) (agent_holds ?z) )
          (hold (and (in_motion ?z) (opposite ?z ?z) (and (in_motion ?z) (not (game_over upside_down ?z) ) (and (in_motion ?z rug) (and (and (exists (?f - hexagonal_bin ?t - shelf) (and (agent_holds ?t block) (or (or (and (exists (?m - (either flat_block lamp mug)) (and (and (> 0.5 1) (= (distance room_center agent)) ) (rug_color_under ?z) ) ) (on ?t) ) (and (in_motion pink_dodgeball ?t) (< 1 (distance room_center ?t)) ) ) (same_color ?z ?t) ) (on bed ?z) ) ) (= 1 (distance ?z room_center 2) (distance 1 ?z) 2) (and (forall (?j - (either top_drawer bed key_chain)) (< (distance front_left_corner 7) (distance 9 back)) ) (and (and (agent_holds ?z ?z) (not (not (not (adjacent agent) ) ) ) ) (agent_holds ?z) (and (agent_holds ?z ?z) (agent_holds ?z) (equal_x_position ?z ?z ?z) ) ) ) ) (agent_holds ?z) ) ) ) (agent_holds ?z) (and (agent_holds ?z ?z) (< (distance 0 2) 4) ) ) )
          (hold (not (in_motion ?z) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (external-forall-maximize (* 0 5 (- 10 )
        )
      )
      (count preference3:dodgeball:blue_dodgeball)
    )
    (>= (* (count preference3:blue_cube_block:dodgeball) (count preference2:pyramid_block:pink) (count preference3:pink) )
      (+ (count preference3:golfball) 5 )
    )
  )
)
(:scoring
  8
)
)

(define (game game-id-722) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?i - cylindrical_block ?m - dodgeball)
      (game-conserved
        (in_motion rug)
      )
    )
    (game-optional
      (agent_holds ?xxx ?xxx)
    )
  )
)
(:constraints
  (and
    (forall (?c - dodgeball)
      (and
        (preference preference1
          (exists (?h - ball ?g - golfball)
            (then
              (hold (< 4 (distance room_center ?g)) )
              (once (in_motion ?g ?c) )
              (once (not (or (agent_holds ?g ?g) ) ) )
            )
          )
        )
      )
    )
    (forall (?h ?i ?k - pillow)
      (and
        (preference preference2
          (exists (?w - shelf)
            (at-end
              (in_motion ?h)
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?i - ball)
        (then
          (once (not (on ?i ?i) ) )
          (once (in_motion ?i agent) )
          (once (not (in_motion bed) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (* (count preference3:beachball) (+ (count-once-per-objects preference2:blue_dodgeball) (count-increasing-measure preference2:basketball:basketball) )
      )
      5
    )
    (* 30 (count preference3:pink) )
  )
)
(:scoring
  300
)
)

(define (game game-id-723) (:domain many-objects-room-v1)
(:setup
  (and
    (game-optional
      (in_motion ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?n - dodgeball)
        (then
          (hold (exists (?x - (either dodgeball golfball)) (not (agent_holds ?x ?n) ) ) )
          (once (agent_holds ?n ?n) )
          (once (and (adjacent rug) (agent_holds ?n ?n) ) )
        )
      )
    )
    (preference preference2
      (exists (?u - dodgeball)
        (then
          (once (on ?u ?u) )
          (once (not (touch ?u) ) )
          (hold (forall (?g - dodgeball ?x - hexagonal_bin) (opposite ?u) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (>= (count-once-per-objects preference2:pink_dodgeball) (+ (count preference1:beachball) (count-once-per-objects preference1:beachball) (count-once-per-objects preference2:green) )
      )
      (or
        (>= 4 (count preference1:hexagonal_bin) )
      )
    )
  )
)
(:scoring
  (count-once-per-objects preference2:doggie_bed)
)
)

(define (game game-id-724) (:domain few-objects-room-v1)
(:setup
  (forall (?c - color)
    (and
      (and
        (game-conserved
          (agent_holds bed ?c)
        )
        (and
          (or
            (forall (?t - teddy_bear)
              (game-conserved
                (in_motion ?t)
              )
            )
            (game-optional
              (and
                (on ?c)
                (not
                  (above ?c ?c)
                )
              )
            )
            (forall (?l - doggie_bed ?m ?x ?u ?z ?w ?s - (either basketball cellphone dodgeball pen dodgeball) ?a - drawer)
              (game-conserved
                (on ?a ?a)
              )
            )
          )
          (and
            (and
              (exists (?k - blue_pyramid_block)
                (game-optional
                  (not
                    (on ?k)
                  )
                )
              )
              (game-optional
                (and
                  (in_motion ?c)
                  (same_type ?c ?c)
                  (in_motion ?c)
                  (agent_holds pink_dodgeball)
                )
              )
            )
          )
        )
        (game-optional
          (not
            (on ?c ?c)
          )
        )
        (game-optional
          (and
            (in_motion ?c ?c)
            (not
              (in_motion main_light_switch)
            )
            (and
              (adjacent ?c desk)
              (on desk)
              (in ?c ?c)
            )
            (in_motion ?c)
          )
        )
        (and
          (and
            (forall (?j - hexagonal_bin ?e - hexagonal_bin)
              (and
                (and
                  (game-conserved
                    (< 7 (building_size 0 3))
                  )
                )
                (game-conserved
                  (in_motion ?c)
                )
                (exists (?f - teddy_bear)
                  (game-conserved
                    (in_motion desk ?f ?e)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?o - block ?z - bridge_block ?d - pyramid_block ?k - ball)
        (at-end
          (not
            (not
              (in ?k ?k)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:green) (* 1 5 )
  )
)
(:scoring
  (count-once-per-objects preference1:basketball)
)
)

(define (game game-id-725) (:domain many-objects-room-v1)
(:setup
  (exists (?e - game_object)
    (game-optional
      (not
        (in_motion ?e)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?i - doggie_bed)
        (then
          (once (<= (distance 3 ?i) 2) )
          (once (in front_left_corner) )
          (hold-while (agent_holds ?i floor) (on ?i) (and (in_motion ?i) (agent_holds agent) (and (in ?i) (and (and (agent_holds ?i) (and (not (agent_holds ?i ?i) ) (exists (?o ?z - (either golfball alarm_clock) ?p - hexagonal_bin) (in_motion ?p) ) ) ) (agent_holds top_shelf ?i) ) (agent_holds ?i ?i) ) ) )
        )
      )
    )
    (preference preference2
      (exists (?b - tan_cube_block)
        (then
          (hold (between ?b ?b) )
          (hold (on ?b ?b) )
          (once (< (distance ?b ?b) (distance 6 ?b)) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= 1 (count-shortest preference1:blue_pyramid_block) )
      (>= 4 (= 5 (* (count preference2:beachball) (count preference1:golfball) (and (count preference2:dodgeball) 3 ) 50 (* (- (+ (* 0 10 (* (* (count-once-per-objects preference2:tan:dodgeball) (count-once-per-external-objects preference2) )
                      (-
                        50
                        (* (count preference2:yellow) 2 )
                      )
                    )
                    5
                  )
                  180
                )
              )
              (* (total-score) (+ 2 (* (count preference2:dodgeball) (count-once-per-objects preference2:red) )
                  (+ (total-time) 2 )
                )
              )
              (count preference1:dodgeball)
              1
            )
          )
        )
      )
    )
    (> (* (< (+ 5 5 )
          10
        )
        (count-once-per-objects preference2:pink_dodgeball)
        3
      )
      (count-unique-positions preference2:pink_dodgeball:golfball)
    )
  )
)
(:scoring
  6
)
)

(define (game game-id-726) (:domain few-objects-room-v1)
(:setup
  (and
    (game-conserved
      (in_motion ?xxx rug)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?h - curved_wooden_ramp)
        (then
          (once (not (same_color ?h) ) )
          (once (agent_holds ?h bed) )
          (forall-sequence (?p - hexagonal_bin)
            (then
              (once (not (on top_shelf) ) )
              (hold (adjacent ?h ?h) )
              (once (not (in_motion brown) ) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?y - hexagonal_bin)
        (then
          (hold-while (agent_holds ?y) (not (adjacent_side ?y) ) (not (agent_holds ?y ?y) ) )
          (hold (on ?y ?y) )
          (once (adjacent ?y) )
        )
      )
    )
    (preference preference3
      (exists (?i - wall)
        (then
          (hold (>= (distance ?i ?i) 4) )
          (hold (and (adjacent rug ?i) (not (opposite ?i ?i) ) ) )
          (hold (< 0.5 3) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:bed) (count-once preference3:green:orange) )
)
(:scoring
  5
)
)

(define (game game-id-727) (:domain few-objects-room-v1)
(:setup
  (exists (?h - hexagonal_bin ?m - (either hexagonal_bin beachball))
    (and
      (exists (?y - color)
        (game-conserved
          (object_orientation color ?y)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?x - bridge_block)
      (and
        (preference preference1
          (exists (?h - dodgeball ?q - block)
            (then
              (once (not (agent_holds ?q ?x) ) )
              (once (on ?x) )
              (hold (in ?q) )
            )
          )
        )
        (preference preference2
          (then
            (once (and (in bed ?x) (in bed) ) )
            (once (agent_holds ?x agent) )
            (once (or (agent_holds ?x) (same_type ?x) ) )
          )
        )
      )
    )
    (preference preference3
      (exists (?n - cube_block ?g - game_object ?m - building)
        (then
          (once (in_motion ?m) )
          (hold-while (on ?m ?m) (not (on bed ?m) ) )
          (hold (not (agent_holds ?m) ) )
        )
      )
    )
    (preference preference4
      (exists (?u - hexagonal_bin)
        (then
          (hold (and (touch bed ?u agent) (not (agent_holds ?u) ) ) )
          (hold-while (agent_holds ?u ?u) (rug_color_under ?u ?u) )
          (once (or (< (distance ?u ?u) (distance ?u room_center)) (not (on ?u ?u) ) (on agent) ) )
        )
      )
    )
    (preference preference5
      (exists (?b ?a - shelf ?y - game_object ?p - hexagonal_bin)
        (then
          (once (or (and (in_motion upright) (not (and (in_motion ?p west_wall) (in ?p) (toggled_on agent ?p) ) ) ) (agent_holds agent ?p) ) )
          (hold (game_over bed desk) )
          (hold (= (distance ?p desk) 9) )
        )
      )
    )
    (preference preference6
      (exists (?i - ball ?b - (either dodgeball alarm_clock))
        (then
          (once (object_orientation ?b) )
          (once (on ?b) )
          (once (<= (distance desk side_table) 1) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (* (count preference4:alarm_clock:hexagonal_bin) (count preference1:basketball) (+ (+ (- (* (* 10 (* (count preference5:dodgeball:pyramid_block) (or (/ (+ 0 (* 5 (total-score) 50 (count preference6:yellow) 10 10 )
                            3
                            1
                          )
                          (+ 3 (* (* (count preference3:beachball) (+ (+ 2 (* (* (count preference6) (count preference1:tan) )
                                      (* 2 (total-score) )
                                    )
                                    (count preference4)
                                  )
                                  (total-score)
                                )
                              )
                              3
                            )
                          )
                        )
                        5
                        (count preference2:pink:pink_dodgeball)
                      )
                    )
                  )
                  2
                  (count preference5:blue_dodgeball)
                  (+ (<= 3 (count-once-per-external-objects preference5:golfball:doggie_bed) )
                    (* (count preference2:hexagonal_bin) (count-once-per-objects preference4:beachball) )
                  )
                  2
                  (* (count-once-per-objects preference1:green) (count-shortest preference3:golfball:dodgeball:side_table) 0 )
                )
              )
              (count preference4:hexagonal_bin:blue)
            )
            3
          )
          (count-once-per-objects preference1:red)
          300
          (+ (total-time) 6 )
        )
        3
      )
      (= (* (count preference5:dodgeball) (* (count-once-per-external-objects preference1:golfball) (* (* (count preference3:pink_dodgeball) 3 (count preference3:pyramid_block) )
              4
              2
              50
            )
          )
        )
        (count-once-per-objects preference3:hexagonal_bin)
      )
    )
  )
)
(:scoring
  3
)
)

(define (game game-id-728) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (same_object ?xxx ?xxx)
  )
)
(:constraints
  (and
    (forall (?q - (either laptop dodgeball) ?y - ball)
      (and
        (preference preference1
          (exists (?b - dodgeball)
            (then
              (hold (not (on ?b) ) )
              (once (adjacent ?y) )
              (hold (in_motion bed) )
            )
          )
        )
        (preference preference2
          (at-end
            (on agent rug)
          )
        )
        (preference preference3
          (exists (?b - game_object)
            (then
              (once (in_motion ?y) )
              (hold (touch ?y) )
              (once (touch ?y) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (count-once-per-objects preference1:doggie_bed) (count-once-per-objects preference3:red) )
  )
)
(:scoring
  3
)
)

(define (game game-id-729) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (and
        (game-conserved
          (not
            (not
              (in_motion ?xxx)
            )
          )
        )
        (forall (?o - game_object)
          (game-optional
            (in_motion ?o)
          )
        )
        (or
          (game-optional
            (in_motion ?xxx ?xxx)
          )
          (game-optional
            (agent_holds bed)
          )
          (exists (?y - drawer)
            (forall (?o - hexagonal_bin ?h - block)
              (game-conserved
                (< 2 1)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?c - cube_block)
        (then
          (once (in_motion ?c) )
          (once (and (not (in_motion ?c ?c) ) (agent_holds ?c ?c) (agent_holds ?c) (in_motion ?c ?c) ) )
        )
      )
    )
    (preference preference2
      (exists (?f - dodgeball)
        (at-end
          (exists (?y - golfball)
            (in ?f ?y)
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (* (total-score) (* 4 (not (+ 180 10 (count-once-per-objects preference1:top_drawer:triangle_block) (count preference2:pink) (+ 3 (count preference1:green) (+ (count-once-per-external-objects preference2:red) (total-score) (count preference2:pink) 100 (* (count-once preference1:yellow:basketball) (+ (/ (* (count preference1) (count-overlapping preference1:basketball) )
                          3
                        )
                        5
                      )
                    )
                    (count preference2:golfball)
                  )
                  (count preference2:golfball)
                  (* (* (* (count-once-per-objects preference1:pink:purple) 1 )
                      4
                    )
                    (count preference1:yellow)
                  )
                  5
                )
                5
              )
            )
          )
        )
        3
      )
      (and
        (or
          (not
            (or
              (< (* (* 10 3 )
                  (* 10 (count preference2:dodgeball) )
                )
                (* 10 (external-forall-minimize 10 ) )
              )
              (not
                (or
                  (>= (count preference2:yellow) (+ (count preference1:beachball:cylindrical_block) (* 3 (external-forall-maximize (count-unique-positions preference1:green) ) 10 (count-once-per-objects preference2:beachball:beachball) 10 180 60 (external-forall-maximize (+ (count preference2:basketball) (count-increasing-measure preference1:blue_pyramid_block) )
                        )
                        (+ (* (count-once preference1:book) 3 )
                          (count-once-per-external-objects preference1:green)
                        )
                        (count-increasing-measure preference1:dodgeball:beachball)
                        (- (count-once-per-objects preference1:dodgeball:basketball) )
                        (* (* (- (+ 4 (+ (external-forall-maximize (* 10 (* (count-once preference1) (count-once preference2:beachball) )
                                    )
                                  )
                                  4
                                  300
                                  10
                                  (not
                                    (count-once-per-objects preference2:blue_dodgeball)
                                  )
                                  2
                                )
                              )
                              (+ 10 (* (external-forall-minimize (total-time) ) (count-once preference1:pink:blue_dodgeball) )
                              )
                            )
                            (count preference1:pink)
                          )
                          (* (+ 10 10 )
                            (> (count preference2) (total-score) )
                          )
                        )
                      )
                    )
                  )
                  (or
                    (>= 3 (* (= 1 (count-once-per-objects preference2:bed) )
                        (count preference2:orange:orange)
                        (count preference1:dodgeball)
                      )
                    )
                    (>= (count preference2:pink_dodgeball) 2 )
                  )
                )
              )
            )
          )
          (>= (count preference1:green:pink_dodgeball) (external-forall-maximize (* (count preference2:book) )
            )
          )
          (< 6 5 )
        )
      )
    )
    (>= (count-once-per-objects preference2:pink) (count-once preference1:dodgeball) )
  )
)
(:scoring
  (- (* (+ 5 (* (- (count preference2:green) )
          (count preference1:hexagonal_bin)
        )
        4
      )
      (count-longest preference1:dodgeball)
      1
      (total-score)
    )
  )
)
)

(define (game game-id-730) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (not
      (agent_holds ?xxx ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?r - hexagonal_bin)
        (then
          (once (in ?r) )
          (hold (and (in_motion ?r ?r) (same_color ?r) (and (in_motion ?r ?r) ) ) )
          (hold (touch ?r) )
        )
      )
    )
    (forall (?o - hexagonal_bin)
      (and
        (preference preference2
          (exists (?s - teddy_bear)
            (then
              (once (not (and (agent_holds ?s ?o) (equal_x_position agent) (agent_holds agent) (in_motion ?s ?s) ) ) )
              (forall-sequence (?r - (either basketball golfball bridge_block))
                (then
                  (once (and (on ?o) (not (exists (?u - curved_wooden_ramp) (agent_holds ?r ?r) ) ) ) )
                  (forall-sequence (?l - pyramid_block)
                    (then
                      (once (agent_holds ?s) )
                      (once (in_motion ?l) )
                    )
                  )
                  (once (not (in_motion floor ?r ?r) ) )
                )
              )
              (once (not (agent_holds ?o) ) )
            )
          )
        )
      )
    )
    (forall (?o - ball)
      (and
        (preference preference3
          (exists (?s - pyramid_block)
            (then
              (once (game_start ?o) )
              (once (same_color ?o ?o ?s) )
              (hold (and (touch ?s) (agent_holds ?s) ) )
            )
          )
        )
      )
    )
    (preference preference4
      (exists (?g - block ?y - teddy_bear ?q - hexagonal_bin)
        (then
          (once (in ?q ?q) )
          (hold (and (and (and (broken ?q ?q) (adjacent_side ?q) (and (not (same_type ?q agent ?q) ) (adjacent ?q) ) (and (and (not (not (not (on ?q ?q) ) ) ) (in_motion bed) ) (and (not (on agent ?q) ) (in_motion ?q) ) ) ) (touch ?q ?q) ) (not (not (faces ?q) ) ) ) )
          (once (and (< 5 (distance door bed)) (adjacent_side ?q ?q) (in_motion ?q) ) )
        )
      )
    )
    (preference preference5
      (exists (?o - cube_block)
        (then
          (once (on ?o) )
          (hold (on ?o ?o) )
          (once (not (not (adjacent ?o bed) ) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (count preference3:blue:pink) (count-once-per-objects preference4:dodgeball:pyramid_block) )
  )
)
(:scoring
  3
)
)

(define (game game-id-731) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?g - hexagonal_bin)
      (game-conserved
        (adjacent front)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?b - dodgeball ?r - dodgeball)
        (then
          (hold (in agent) )
          (once (exists (?h - hexagonal_bin) (adjacent ?r ?r) ) )
          (hold (and (and (and (not (in_motion top_drawer) ) (and (agent_holds ?r) (forall (?e - hexagonal_bin) (and (agent_holds ?r ?e) (or (exists (?g - cube_block) (not (adjacent ?e) ) ) (on upright) ) ) ) ) ) (on ?r) (agent_holds ?r) (in_motion ?r bed) (not (touch ?r) ) (not (on floor) ) ) (exists (?y - teddy_bear ?o - (either pyramid_block golfball)) (= 8 (distance room_center 7)) ) ) )
          (once (< (distance ?r) 1) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference1:dodgeball:pink) (count-once-per-objects preference1:green) )
)
(:scoring
  (not
    (count preference1:pink_dodgeball:tall_cylindrical_block)
  )
)
)

(define (game game-id-732) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (adjacent ?xxx ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?a - building)
        (then
          (once (in_motion ?a ?a) )
          (once (not (exists (?q - game_object) (in ?q) ) ) )
          (once (agent_holds ?a ?a ?a) )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (* (count preference1:green) (total-time) )
  )
)
(:scoring
  (- (count preference1:basketball) )
)
)

(define (game game-id-733) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (not
      (in_motion ?xxx ?xxx)
    )
  )
)
(:constraints
  (and
    (forall (?j - hexagonal_bin)
      (and
        (preference preference1
          (exists (?h ?c - cube_block ?d - doggie_bed ?w - ball)
            (then
              (once (in_motion floor) )
              (hold (on ?w pink) )
              (once (and (not (not (and (not (in_motion ?j ?j) ) (and (in_motion ?w) (< (distance room_center ?w) (distance ?j desk)) (in_motion yellow) (< 4 1) (agent_holds ?w ?w) (not (not (in ?j) ) ) (on ?j) (open bed floor) (on ?j) (exists (?o - (either alarm_clock)) (equal_z_position ?w) ) ) ) ) ) (not (and (in_motion ?j ?w) (and (on rug) (in_motion ?w ?w) ) (not (in_motion ?w ?j) ) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (* 2 (* (+ 3 (count preference1:red_pyramid_block) )
          (total-score)
        )
      )
      (count preference1:blue_cube_block:pyramid_block)
    )
    5
  )
)
(:scoring
  (* 3 )
)
)

(define (game game-id-734) (:domain many-objects-room-v1)
(:setup
  (exists (?m - block)
    (and
      (exists (?h - dodgeball ?v - building ?r - (either golfball dodgeball) ?i - hexagonal_bin)
        (forall (?e - wall)
          (game-optional
            (on ?i ?m)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?c - (either chair dodgeball))
        (then
          (once (agent_holds ?c) )
          (hold (and (on desk ?c) (in_motion ?c) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 5 2 (count-once preference1:yellow_pyramid_block) (- (* 6 (count-once-per-external-objects preference1:green) )
      )
      2
    )
    (* 40 4 )
  )
)
(:scoring
  30
)
)

(define (game game-id-735) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?b - (either game_object bridge_block) ?g - hexagonal_bin ?w - wall)
      (exists (?z - dodgeball ?o - hexagonal_bin ?z - golfball ?t - (either pen floor))
        (exists (?l - (either main_light_switch doggie_bed teddy_bear cellphone))
          (and
            (game-optional
              (in_motion ?w)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?r - (either wall ball) ?e - game_object)
        (then
          (hold (not (agent_holds ?e) ) )
          (once (and (and (on ?e) (agent_holds ?e) ) (and (not (in ?e ?e) ) (in ?e ?e) ) ) )
          (hold (in_motion ?e desk) )
        )
      )
    )
    (preference preference2
      (exists (?e - wall ?n - hexagonal_bin)
        (then
          (once-measure (not (exists (?j - dodgeball) (< 0.5 1) ) ) (distance ?n ?n) )
          (hold (on ?n) )
          (once (agent_holds ?n ?n) )
        )
      )
    )
    (preference preference3
      (exists (?l - hexagonal_bin ?u - teddy_bear ?b - (either cd lamp) ?h ?j ?f ?g ?c ?x - doggie_bed ?d - (either dodgeball floor))
        (then
          (any)
        )
      )
    )
  )
)
(:terminal
  (or
    (not
      (>= (+ (count preference1:red:dodgeball) (* (+ (- (count preference1:yellow) )
              (external-forall-maximize
                2
              )
              5
            )
            (count-once-per-objects preference2:dodgeball:dodgeball)
          )
          (count-once preference3:red)
        )
        (count-once preference3:pink)
      )
    )
    (>= 2 1 )
    (or
      (< 5 10 )
    )
  )
)
(:scoring
  (total-time)
)
)

(define (game game-id-736) (:domain medium-objects-room-v1)
(:setup
  (exists (?l - hexagonal_bin)
    (and
      (game-conserved
        (not
          (and
            (rug_color_under ?l ?l)
            (agent_holds ?l ?l)
          )
        )
      )
      (exists (?y - ball)
        (and
          (game-conserved
            (in_motion ?y ?l)
          )
          (game-optional
            (not
              (and
                (not
                  (adjacent ?y ?y)
                )
                (adjacent floor ?l)
                (adjacent ?l)
              )
            )
          )
          (exists (?i - yellow_cube_block)
            (forall (?g - hexagonal_bin)
              (exists (?o - (either triangle_block pink) ?n - chair ?t - flat_block)
                (game-optional
                  (exists (?u - doggie_bed)
                    (in_motion ?t ?l)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?n - game_object)
        (then
          (once (and (or (touch ?n) ) (adjacent ?n ?n) ) )
          (once (and (in_motion ?n right) (adjacent ?n) ) )
          (once (or (on ?n ?n) (agent_holds ?n ?n) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (< (count preference1:dodgeball) 3 )
      (or
        (= (count-measure preference1:dodgeball:beachball:blue_cube_block) (count-once preference1:book) )
      )
      (or
        (or
          (>= (and (* (total-score) (count-unique-positions preference1:dodgeball) (external-forall-maximize 20 ) )
              2
              (count-overlapping preference1:dodgeball)
            )
            (* 5 (count preference1:basketball) (count-once-per-objects preference1:tan) )
          )
        )
        (>= (* (total-time) (count preference1:yellow_pyramid_block) (* (count-once-per-objects preference1:hexagonal_bin:dodgeball) (total-score) )
          )
          (count preference1:red:dodgeball)
        )
      )
    )
    (= (* (count-increasing-measure preference1:purple) (count preference1:dodgeball) 8 )
      (* (count preference1:yellow) (count preference1:pink) )
    )
    (= 7 (* (< (external-forall-minimize (external-forall-maximize (* (total-score) (* (count preference1:basketball) 3 (count-once-per-objects preference1:cube_block) )
                (count preference1:dodgeball:beachball)
              )
            )
          )
          (* (* 40 (count-same-positions preference1:golfball) )
            (count preference1:orange)
            (+ 30 (count-once-per-objects preference1:yellow_cube_block:yellow) )
          )
        )
        3
      )
    )
  )
)
(:scoring
  (total-time)
)
)

(define (game game-id-737) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (or
      (object_orientation ?xxx)
      (in_motion ?xxx agent)
    )
  )
)
(:constraints
  (and
    (forall (?t - game_object)
      (and
        (preference preference1
          (exists (?r - hexagonal_bin ?w - (either cylindrical_block dodgeball))
            (then
              (once (<= 2 1) )
              (once (agent_holds ?t) )
              (once-measure (on bridge_block ?w ?t) (distance ?t 7) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (external-forall-maximize 100 ) (total-time) )
)
(:scoring
  (count-once preference1:dodgeball)
)
)

(define (game game-id-738) (:domain many-objects-room-v1)
(:setup
  (forall (?e - dodgeball ?i - hexagonal_bin)
    (exists (?v - hexagonal_bin ?v - hexagonal_bin)
      (forall (?d - game_object)
        (game-optional
          (and
            (object_orientation ?d)
            (> 4 (distance ?d 0))
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?b ?x - block)
        (then
          (hold (not (on ?x) ) )
          (hold (and (not (agent_holds ?b ?x) ) (or (agent_holds ?b) (and (or (agent_holds agent floor) (not (and (on ?x ?x) (exists (?n - drawer) (is_setup_object ?x) ) ) ) ) (and (on ?x) (in_motion ?b) ) ) ) ) )
          (hold (in_motion ?b) )
        )
      )
    )
    (forall (?m - chair ?x - ball)
      (and
        (preference preference2
          (exists (?n ?m - dodgeball)
            (then
              (hold (exists (?v - dodgeball) (touch ?x ?v) ) )
              (hold-while (exists (?a - wall ?e ?g ?b - dodgeball) (touch green) ) (not (and (adjacent ?x ?m) (and (not (same_color ?m) ) (not (not (> 9 1) ) ) ) ) ) )
              (hold (in_motion ?n) )
            )
          )
        )
        (preference preference3
          (exists (?j - pyramid_block ?k - dodgeball)
            (then
              (once (in_motion ?x) )
              (hold-while (< (distance agent desk) (distance room_center ?k)) (agent_holds ?k) (same_color ?x ?x) )
              (once (not (in_motion ?k) ) )
            )
          )
        )
        (preference preference4
          (exists (?k - dodgeball)
            (then
              (once (on ?x bed) )
              (hold (agent_holds ?x) )
              (hold-while (in_motion agent) (not (adjacent ?x ?x) ) )
            )
          )
        )
      )
    )
    (forall (?k - game_object)
      (and
        (preference preference5
          (at-end
            (adjacent ?k)
          )
        )
      )
    )
  )
)
(:terminal
  (> (count preference5:yellow) (count-longest preference3:basketball) )
)
(:scoring
  5
)
)

(define (game game-id-739) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (not
      (not
        (in_motion floor)
      )
    )
  )
)
(:constraints
  (and
    (forall (?f - red_dodgeball)
      (and
        (preference preference1
          (exists (?g - drawer)
            (then
              (once (in_motion ?g) )
              (once (not (in_motion ?f ?f) ) )
              (hold (not (same_type ?g ?f) ) )
            )
          )
        )
      )
    )
    (forall (?e - drawer)
      (and
        (preference preference2
          (exists (?u - dodgeball)
            (then
              (once (on ?u) )
              (hold-while (and (agent_holds ?u ?u) (agent_holds ?e) ) (not (not (not (and (in_motion ?u ?e) (agent_holds ?e) ) ) ) ) (in door) )
              (once (agent_holds ?u ?e) )
            )
          )
        )
        (preference preference3
          (exists (?o - dodgeball)
            (at-end
              (not
                (agent_holds ?e)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference3:blue_dodgeball:beachball) (= (count-once preference2:dodgeball:pink:pink) 0 (- 10 )
    )
  )
)
(:scoring
  (count-unique-positions preference3:yellow:side_table)
)
)

(define (game game-id-740) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (same_type ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?d ?h - cube_block)
        (then
          (once (agent_holds pink_dodgeball ?h) )
          (once (not (adjacent ?h) ) )
          (once (agent_holds agent) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (+ (- 6 )
        100
      )
      10
    )
    (count-same-positions preference1:pink_dodgeball:hexagonal_bin)
  )
)
(:scoring
  (count-same-positions preference1:dodgeball)
)
)

(define (game game-id-741) (:domain few-objects-room-v1)
(:setup
  (exists (?n - book)
    (game-optional
      (adjacent ?n)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?o - curved_wooden_ramp)
        (then
          (hold-while (on ?o ?o) (in_motion ?o ?o) )
          (hold (same_color agent ?o) )
          (hold (rug_color_under pink ?o) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 3 3 )
    (external-forall-maximize
      (* (* (* (count preference1:cube_block) (count-once preference1:dodgeball) )
          0.5
        )
        (* (count preference1:golfball) 3 )
      )
    )
  )
)
(:scoring
  (count preference1:hexagonal_bin)
)
)

(define (game game-id-742) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (in ?xxx ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?k - game_object ?z - hexagonal_bin)
        (then
          (once (in agent) )
          (once (in_motion ?z ?z) )
          (once (not (and (faces ?z) (< 7 5) ) ) )
          (hold (not (in_motion ?z ?z) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (external-forall-maximize (>= (+ (* 4 0 )
            (* (count preference1:golfball:yellow) (count preference1:basketball) )
          )
          (- (* (+ (count-once-per-external-objects preference1:pyramid_block) (* 10 (external-forall-minimize 3 ) )
                10
              )
              (+ (count-once-per-objects preference1:dodgeball) (count preference1) 9 )
            )
          )
        )
      )
      (* (count-once-per-objects preference1:golfball) (count preference1:orange) )
      (count preference1:red)
    )
    10
  )
)
(:scoring
  (count-once preference1:bed)
)
)

(define (game game-id-743) (:domain many-objects-room-v1)
(:setup
  (and
    (game-optional
      (not
        (agent_holds ?xxx)
      )
    )
    (forall (?i ?r - hexagonal_bin)
      (exists (?q - dodgeball ?e - hexagonal_bin)
        (and
          (forall (?n - dodgeball ?p - hexagonal_bin ?f - drawer)
            (exists (?q - ball ?b - chair)
              (game-conserved
                (adjacent_side ?f ?i)
              )
            )
          )
        )
      )
    )
    (game-conserved
      (is_setup_object desk)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?d - building)
        (at-end
          (and
            (faces ?d)
            (not
              (and
                (< 7 6)
                (agent_holds ?d)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (+ (or (count preference1:dodgeball:dodgeball) (count-once-per-objects preference1:golfball) (* (* (* (count-once-per-external-objects preference1:pyramid_block) 10 )
              3
            )
            10
            (count-once-per-objects preference1:beachball)
          )
        )
        5
      )
      (* (* 4 (+ (count-measure preference1) 3 )
          (* 5 )
        )
        (count-once-per-objects preference1:yellow)
        (+ 1 (count preference1:blue_cube_block:basketball) )
        (count-once-per-objects preference1:yellow)
        (count preference1:basketball:blue)
        10
        7
        (count-once-per-objects preference1:dodgeball)
        1
      )
    )
    10
  )
)
(:scoring
  3
)
)

(define (game game-id-744) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (and
      (< 1 1)
      (in_motion ?xxx ?xxx)
      (not
        (in_motion ?xxx ?xxx)
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - hexagonal_bin)
      (and
        (preference preference1
          (exists (?l - hexagonal_bin)
            (then
              (once (not (exists (?i ?d ?t - building) (same_type floor ?i) ) ) )
              (once (and (same_color ?b) (and (not (and (adjacent_side ?b) (in_motion ?l) (not (and (above ?b) (and (in_motion ?b ?l) (and (not (touch ?b ?b) ) (> 9 1) ) ) ) ) ) ) (adjacent floor) (in_motion ?l) ) ) )
              (once (in_motion ?l) )
            )
          )
        )
        (preference preference2
          (exists (?m - (either watch cylindrical_block))
            (then
              (once (agent_holds desk upright) )
              (once (and (on floor) (not (same_object ?b pink) ) ) )
              (once (in ?b ?b) )
            )
          )
        )
      )
    )
    (forall (?b - hexagonal_bin)
      (and
        (preference preference3
          (then
            (once (and (not (and (< (distance door room_center) (distance room_center ?b)) (not (agent_holds ?b) ) ) ) ) )
            (once (in_motion bed) )
            (hold (and (< 1 (distance room_center room_center)) (on agent) ) )
          )
        )
      )
    )
    (forall (?z - pyramid_block)
      (and
        (preference preference4
          (exists (?n - ball ?v - game_object)
            (then
              (once (in ?v) )
              (once (and (and (on ?v) (in_motion ?v) ) (and (on ?v) (between ?z) ) ) )
              (once (adjacent ?v agent) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (external-forall-maximize (+ (count preference3:beachball) (external-forall-maximize (* (total-time) (+ (count preference1:yellow) 10 )
            )
          )
        )
      )
      2
    )
    (- 1 )
  )
)
(:scoring
  (count preference2:green:dodgeball)
)
)

(define (game game-id-745) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (agent_holds ?xxx ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?p - hexagonal_bin ?s - hexagonal_bin)
        (then
          (forall-sequence (?w - doggie_bed)
            (then
              (once (and (and (not (in_motion ?s ?s) ) (and (and (in_motion ?s) (in floor) ) (not (equal_z_position ?w) ) ) ) (and (on ?s) (exists (?i ?v - game_object) (exists (?k - triangular_ramp ?h - doggie_bed) (touch ?v side_table) ) ) (touch ?w) ) ) )
              (hold (not (and (on ?w) (in_motion agent) ) ) )
              (once (on ?s agent) )
            )
          )
          (once (in_motion ?s) )
        )
      )
    )
    (forall (?l - ball ?h - hexagonal_bin)
      (and
        (preference preference2
          (exists (?r - (either tall_cylindrical_block doggie_bed))
            (then
              (once (and (and (< (x_position ?h ?h) 6) (same_object ?r) (and (adjacent ?r) (and (agent_holds ?r) (on ?h ?r) ) ) ) (and (in_motion door) (agent_holds ?r) (not (< (distance 5 ?h) 1) ) ) (not (agent_holds ?h) ) (not (in_motion ?h ?r) ) (< (distance agent ?r) (distance_side ?h ?r)) (forall (?p - dodgeball) (in_motion ?p tan ?h) ) (not (in_motion ?h ?r) ) ) )
              (once (not (on ?r) ) )
              (forall-sequence (?e - pillow)
                (then
                  (hold (not (on ?r) ) )
                  (once (in ?h ?h) )
                  (once (and (in_motion ?h ?e) (touch ?e) (agent_holds ?h) ) )
                )
              )
            )
          )
        )
        (preference preference3
          (exists (?b - dodgeball)
            (then
              (hold (and (on ?b) (in_motion ?h) ) )
              (forall-sequence (?m - golfball)
                (then
                  (once (touch ?h ?m) )
                  (hold (agent_holds ?m) )
                  (once (and (on ?b) (agent_holds ?b) ) )
                )
              )
              (hold (in ?b) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (total-time) )
)
(:scoring
  (+ (- 10 )
    30
    (count preference2:beachball)
  )
)
)

(define (game game-id-746) (:domain medium-objects-room-v1)
(:setup
  (forall (?f - hexagonal_bin ?p - doggie_bed)
    (exists (?r ?h - tall_cylindrical_block ?w - dodgeball ?s - curved_wooden_ramp ?t - game_object)
      (game-optional
        (on ?p ?p)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?k - (either cd dodgeball cube_block))
        (then
          (once (agent_holds desk floor) )
          (hold (on ?k ?k) )
          (hold (and (on ?k) (adjacent top_drawer floor) ) )
        )
      )
    )
    (preference preference2
      (exists (?t - block ?s - hexagonal_bin ?l - (either golfball triangle_block))
        (then
          (hold (and (not (in ?l ?l) ) (and (agent_holds ?l) ) ) )
          (hold (in_motion ?l agent) )
          (hold (on ?l) )
        )
      )
    )
    (preference preference3
      (exists (?z - game_object)
        (then
          (once (and (same_object ?z) (in_motion desk) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (external-forall-maximize 5 ) )
)
(:scoring
  3
)
)

(define (game game-id-747) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (in ?xxx)
  )
)
(:constraints
  (and
    (forall (?u - hexagonal_bin)
      (and
        (preference preference1
          (exists (?s - wall)
            (at-end
              (agent_holds ?u ?s)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (count-once-per-objects preference1:beachball) 2 )
)
(:scoring
  (count preference1:dodgeball)
)
)

(define (game game-id-748) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (agent_holds ?xxx)
  )
)
(:constraints
  (and
    (forall (?d - pillow)
      (and
        (preference preference1
          (exists (?k - curved_wooden_ramp ?a ?u - hexagonal_bin)
            (then
              (hold-while (adjacent ?d) (not (touch ?a ?a) ) )
              (hold (in_motion rug) )
              (once (on ?u ?a) )
            )
          )
        )
        (preference preference2
          (exists (?a - golfball)
            (then
              (once (on ?a) )
              (hold-while (in_motion ?d ?a) (in_motion ?a) )
              (hold (not (in_motion ?a) ) )
            )
          )
        )
        (preference preference3
          (exists (?g - ball ?v - (either cellphone dodgeball))
            (at-end
              (not
                (exists (?z - hexagonal_bin)
                  (in_motion ?d)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 40 (* (* (* (count preference3:book:beachball) (* (count preference3:pyramid_block) (count preference3:hexagonal_bin:golfball) )
        )
        (* (= (count preference2:pink) (count preference2:golfball:red:beachball) )
          6
        )
        (+ 2 (count-once-per-objects preference3:beachball) (= (* (count-once-per-objects preference3:hexagonal_bin) (* 5 (= (* (* (count-longest preference3:pink) (* 10 2 )
                    )
                    (count preference3:yellow)
                  )
                  (count preference2:yellow)
                  3
                )
              )
            )
          )
        )
        (external-forall-maximize
          (count-once-per-objects preference1:beachball)
        )
        (+ (count preference3:beachball) (* (* 3 (count preference1:orange) )
            (total-time)
          )
        )
        16
      )
      7
    )
  )
)
(:scoring
  (* 2 10 3 (* (count-once-per-objects preference1:golfball) (count preference3:pink) 25 )
    (+ (count-overlapping preference2:yellow_pyramid_block:book) 3 )
    (* (* 2 (total-score) )
      (+ (* 3 3 )
        3
      )
    )
    0
    2
    (+ (/ (* (+ (external-forall-maximize (>= (count preference3:yellow:doggie_bed) 8 )
            )
            3
          )
          (* 18 )
        )
        (count preference2:yellow:golfball)
      )
      10
    )
  )
)
)

(define (game game-id-749) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (and
      (not
        (not
          (not
            (on ?xxx ?xxx)
          )
        )
      )
      (and
        (between desk ?xxx)
        (and
          (not
            (not
              (on ?xxx ?xxx)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?u - game_object)
        (then
          (hold-while (> (distance_side 10 ?u 0) (x_position ?u ?u)) (in ?u ?u) )
          (once (agent_holds ?u ?u) )
          (hold (and (agent_holds ?u) (and (in_motion ?u ?u) (adjacent agent) ) (in_motion ?u ?u) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (* (count preference1:dodgeball:basketball) 2 (count preference1:dodgeball:golfball) )
      (count-once-per-objects preference1:golfball:dodgeball)
    )
    (count-once-per-objects preference1:book:side_table)
  )
)
(:scoring
  1
)
)

(define (game game-id-750) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (on ?xxx ?xxx)
  )
)
(:constraints
  (and
    (forall (?w - (either doggie_bed))
      (and
        (preference preference1
          (exists (?y - red_pyramid_block)
            (then
              (hold-while (and (on ?y ?w) (and (and (exists (?q - (either tall_cylindrical_block floor golfball)) (in ?w floor) ) (adjacent ?y pillow) (toggled_on ?w) ) (adjacent ?w ?y) (in ?y ?y) ) (and (and (adjacent ?w ?y) (and (in ?y) (not (in_motion ?w) ) (in_motion ?y) (and (not (not (not (and (not (and (in_motion ?y agent) (and (in_motion ?w) (in_motion ?w) (in ?w) ) ) ) (not (adjacent ?w) ) ) ) ) ) (>= 2 (distance door ?y)) ) ) ) (in_motion ?w) (agent_holds bed ?w) (and (not (and (not (and (agent_holds ?y) (on ?y ?w) (and (agent_holds ?y ?y) (not (on ?y ?y) ) ) (and (not (= 2 (distance ?y front)) ) (and (on ?w) (on ?w ?w) ) ) (same_object ?y sideways) (< (x_position ?y desk) (distance room_center ?w)) (not (in_motion ?y) ) ) ) (not (exists (?k - game_object ?r - hexagonal_bin) (on ?w ?r) ) ) ) ) (in_motion ?w) ) ) ) (not (< (distance ) (distance ?w agent)) ) )
              (forall-sequence (?k - (either block pencil))
                (then
                  (once (agent_holds ?y) )
                  (hold-while (same_object ?w) (agent_holds ?w) (touch ?k ?w) (in ?w) )
                  (once (agent_holds ?k) )
                )
              )
              (hold (on ?y) )
            )
          )
        )
        (preference preference2
          (exists (?r - hexagonal_bin)
            (at-end
              (and
                (in_motion ?w)
                (and
                  (not
                    (in_motion ?w ?w)
                  )
                  (not
                    (< 7 9)
                  )
                  (not
                    (not
                      (not
                        (not
                          (not
                            (and
                              (and
                                (in_motion ?w ?w)
                                (forall (?g ?k - cylindrical_block)
                                  (in ?k ?g)
                                )
                                (adjacent ?r ?w)
                                (in_motion ?w)
                                (agent_holds front ?w)
                                (touch agent ?r)
                                (and
                                  (and
                                    (is_setup_object ?r ?w)
                                    (in_motion door)
                                  )
                                  (on ?r ?w)
                                  (and
                                    (and
                                      (agent_holds ?r)
                                      (agent_holds floor ?w)
                                    )
                                    (adjacent_side ?w)
                                    (and
                                      (and
                                        (in_motion ?r)
                                        (adjacent desk)
                                        (in ?r ?r)
                                        (not
                                          (exists (?x - hexagonal_bin)
                                            (broken ?w ?r)
                                          )
                                        )
                                      )
                                      (on ?r)
                                      (exists (?i ?h - hexagonal_bin ?a - game_object)
                                        (agent_holds ?w)
                                      )
                                    )
                                    (agent_holds ?w ?w)
                                    (touch ?w)
                                  )
                                )
                              )
                              (not
                                (in_motion ?w)
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
                (on ?r ?r)
                (in_motion ?r)
                (in_motion ?r)
                (agent_holds ?r ?r)
                (in ?w)
                (agent_holds ?r)
              )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?e - (either dodgeball dodgeball))
        (then
          (hold (not (in_motion ?e) ) )
          (hold (not (in_motion bed) ) )
          (hold (adjacent ?e) )
        )
      )
    )
  )
)
(:terminal
  (or
    (< (count-once preference2:pink_dodgeball:yellow) (external-forall-maximize (and (count-once-per-external-objects preference1:yellow_pyramid_block:beachball) (+ (count-once-per-external-objects preference3:pink_dodgeball) 5 )
        )
      )
    )
    (= (>= 10 3 )
      (- (count preference3:basketball) )
    )
    (or
      (and
        (or
          (>= 10 3 )
        )
        (and
          (>= (count-once preference3:basketball) 10 )
          (<= (- (+ (* (* 30 (count preference1:golfball) (and (+ (count-once preference1:green) (count-once-per-external-objects preference3:dodgeball) (count-measure preference3:beachball) )
                      (count-once-per-objects preference3:basketball:pink_dodgeball:yellow)
                      2
                    )
                    (count preference1:hexagonal_bin)
                  )
                  (* 3 (count-once-per-objects preference1:dodgeball:doggie_bed) )
                )
                0.5
              )
            )
            6
          )
          (or
            (= (* 3 )
              (* 8 (count preference1:yellow) )
            )
            (< 0.5 (count-once-per-objects preference3) )
          )
        )
      )
      (> (count-once-per-external-objects preference3:orange) 1 )
      (>= (+ (count preference1:red) (+ (* (count preference1:hexagonal_bin) (total-score) )
            (count-once preference2:doggie_bed)
          )
        )
        (* (+ (not (count preference1:basketball) ) (* (+ (< 2 (< (+ (- (count-once-per-objects preference3:pink) )
                      (count preference2:golfball)
                    )
                    (count-once preference3:pink_dodgeball)
                  )
                )
                2
              )
              (* (count preference3:yellow) (count preference2:dodgeball) )
            )
          )
        )
      )
    )
  )
)
(:scoring
  (+ (count preference1:beachball:beachball) (count-once-per-external-objects preference3:purple) )
)
)

(define (game game-id-751) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (not
      (in_motion ?xxx)
    )
  )
)
(:constraints
  (and
    (forall (?v - dodgeball ?r - building)
      (and
        (preference preference1
          (exists (?o - (either blue_cube_block basketball) ?w - hexagonal_bin ?o - book ?t - cube_block)
            (then
              (hold (exists (?f - ball ?m ?p ?z - building ?f - hexagonal_bin ?m - chair) (opposite desk ?m) ) )
              (once (in_motion ?r ?r) )
              (once (not (and (not (in_motion ?r ?r) ) (and (touch block) (open ?t) ) ) ) )
              (once (not (touch ?r) ) )
              (once (in_motion ?t ?r) )
              (once (and (and (exists (?f ?p - doggie_bed ?h ?k - hexagonal_bin) (and (and (agent_holds ?h agent back) (and (and (in desk ?h) (agent_holds ?k ?h) ) (adjacent ?h ?t ?h ?r) (and (in_motion ?k) (and (and (agent_holds ?r ?k) (forall (?v - hexagonal_bin ?e - hexagonal_bin) (agent_holds ?e) ) ) (and (and (and (not (not (in ?h) ) ) (agent_holds rug) ) (adjacent ?t ?k) ) (and (not (not (in_motion ?r ?r) ) ) (in_motion agent ?h) ) ) ) ) ) ) ) ) (on ?t) (on ?t) ) (agent_holds ) (> 1 8) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference1:purple) (+ (* (total-score) 10 )
      (count-once-per-objects preference1:beachball)
    )
  )
)
(:scoring
  (count-once-per-external-objects preference1:green)
)
)

(define (game game-id-752) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (on ?xxx ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?g - block)
        (at-end
          (game_over ?g)
        )
      )
    )
    (preference preference2
      (exists (?m - (either cylindrical_block wall hexagonal_bin) ?n - tan_cube_block)
        (at-end
          (agent_holds ?n)
        )
      )
    )
    (preference preference3
      (exists (?x - block ?o - (either doggie_bed mug blue_cube_block) ?m - block)
        (then
          (hold (agent_holds ?m ?m) )
          (once (and (and (not (and (not (< (distance 4 back) 4) ) (not (is_setup_object ?m) ) ) ) (and (forall (?c - cube_block ?j - hexagonal_bin) (not (in_motion ?j) ) ) (and (agent_holds top_drawer ?m) (in agent) ) ) ) (same_type agent ?m) ) )
          (once (and (exists (?o - block) (agent_holds top_drawer ?m) ) (not (not (agent_holds ?m) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:hexagonal_bin) 5 )
)
(:scoring
  7
)
)

(define (game game-id-753) (:domain medium-objects-room-v1)
(:setup
  (exists (?k - dodgeball)
    (and
      (game-conserved
        (not
          (object_orientation blue)
        )
      )
      (game-conserved
        (agent_holds ?k)
      )
      (game-conserved
        (agent_holds ?k ?k)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?j - hexagonal_bin)
        (then
          (once (not (and (exists (?u - wall) (same_color agent) ) (in ?j ?j) ) ) )
          (once (agent_holds ?j) )
          (once (on ?j ?j) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:beachball) 2 )
)
(:scoring
  (count-once-per-external-objects preference1:hexagonal_bin)
)
)

(define (game game-id-754) (:domain many-objects-room-v1)
(:setup
  (exists (?o - game_object)
    (game-conserved
      (and
        (in ?o ?o)
        (and
          (and
            (touch ?o)
          )
          (is_setup_object ?o ?o)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?h - (either watch chair))
        (at-end
          (on ?h)
        )
      )
    )
  )
)
(:terminal
  (not
    (and
      (>= (* (* (+ (count preference1:red) (* (count-once preference1:hexagonal_bin) (* 2 (count preference1:blue_pyramid_block) (* 50 (+ (count-increasing-measure preference1:beachball) 3 )
                  )
                )
              )
            )
            (* (count preference1:beachball) (count-once-per-objects preference1:cylindrical_block) (count-once-per-objects preference1:dodgeball) (count-once-per-objects preference1:blue_dodgeball) 8 (- (* 3 (= 16 )
                  (count-once preference1:basketball)
                )
                7
              )
            )
          )
          (* 3 (count-once-per-objects preference1:red) )
        )
        (* (count-once-per-objects preference1:red:wall) )
      )
    )
  )
)
(:scoring
  (count-once-per-objects preference1:beachball)
)
)

(define (game game-id-755) (:domain many-objects-room-v1)
(:setup
  (not
    (and
      (game-optional
        (in_motion ?xxx ?xxx)
      )
    )
  )
)
(:constraints
  (and
    (forall (?w - game_object)
      (and
        (preference preference1
          (exists (?z - (either key_chain dodgeball desktop blue_cube_block))
            (at-end
              (on ?z)
            )
          )
        )
      )
    )
    (forall (?m - ball)
      (and
        (preference preference2
          (exists (?p - (either doggie_bed main_light_switch hexagonal_bin))
            (then
              (once (in_motion ?p) )
              (once (not (not (on ?m bed) ) ) )
              (once (on ?p) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?o - curved_wooden_ramp ?n - hexagonal_bin)
        (at-end
          (agent_holds ?n)
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (+ (count-once-per-objects preference1:block) 6 )
        2
      )
    )
    (>= (not (+ (* (* 10 (* 10 (* (- (not (count-once preference1:green) ) (* (total-time) 9 )
                  )
                  (count preference2:dodgeball)
                  (total-time)
                  8
                  (count preference1:blue_cube_block)
                  (+ 3 (count preference2:golfball) 5 )
                  15
                  2
                  (* 2 (- (* (<= 3 6 )
                      )
                    )
                  )
                )
              )
              0
            )
            (count-once preference1:green)
            (count preference2:purple)
          )
          (total-score)
        )
      )
      4
    )
    (or
      (< (count-measure preference2:red:pink_dodgeball:red_pyramid_block) (count-once-per-external-objects preference2:golfball) )
      (>= 3 (count-overlapping preference3:green:yellow_pyramid_block:basketball) )
    )
  )
)
(:scoring
  (- 2 )
)
)

(define (game game-id-756) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?w - ball)
      (game-conserved
        (not
          (agent_holds ?w ?w)
        )
      )
    )
    (forall (?c - game_object)
      (and
        (exists (?t - game_object ?i - golfball ?b - block)
          (and
            (game-conserved
              (not
                (open ?c ?b)
              )
            )
            (exists (?i - triangular_ramp ?i - hexagonal_bin)
              (forall (?u - block)
                (exists (?o - (either golfball main_light_switch))
                  (and
                    (forall (?m - hexagonal_bin ?a - doggie_bed)
                      (game-optional
                        (not
                          (in_motion ?c ?b)
                        )
                      )
                    )
                  )
                )
              )
            )
            (game-conserved
              (not
                (not
                  (adjacent ?b)
                )
              )
            )
          )
        )
      )
    )
    (game-conserved
      (and
        (and
          (not
            (agent_holds ?xxx)
          )
          (and
            (and
              (on ?xxx)
              (and
                (on agent)
                (in_motion ?xxx)
              )
              (agent_holds ?xxx ?xxx)
              (not
                (not
                  (and
                    (and
                      (and
                        (and
                          (on ?xxx ?xxx)
                          (< 1 (distance agent 8))
                        )
                        (forall (?x - hexagonal_bin)
                          (agent_holds ?x ?x)
                        )
                      )
                      (agent_holds floor)
                    )
                    (object_orientation ?xxx ?xxx)
                  )
                )
              )
            )
            (< (distance room_center agent) (distance ?xxx ?xxx door))
            (<= (distance room_center ?xxx) 0.5)
          )
          (in_motion ?xxx)
        )
        (and
          (in_motion ?xxx)
          (in_motion front)
        )
        (on agent ?xxx)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?d - shelf ?z - (either pencil laptop))
        (then
          (once (in_motion ?z ?z) )
          (once (not (and (not (agent_holds ?z ?z) ) (adjacent ?z ?z) ) ) )
          (once (agent_holds ?z) )
        )
      )
    )
  )
)
(:terminal
  (>= 50 (* 18 (count-unique-positions preference1:hexagonal_bin) )
  )
)
(:scoring
  (total-score)
)
)

(define (game game-id-757) (:domain few-objects-room-v1)
(:setup
  (forall (?f - (either beachball bridge_block) ?l - building ?l - hexagonal_bin)
    (exists (?a - hexagonal_bin)
      (exists (?c - blue_pyramid_block)
        (exists (?b - game_object)
          (game-conserved
            (exists (?d - hexagonal_bin ?f - hexagonal_bin)
              (not
                (agent_holds ?b)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?r - ball)
        (then
          (once (agent_holds ?r ?r) )
          (once (not (agent_holds ?r) ) )
          (once (in_motion agent ?r) )
          (hold (touch ?r ?r) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-increasing-measure preference1:dodgeball:dodgeball) (and (count preference1:block) (* (count-measure preference1:dodgeball) (count preference1:pink) )
    )
  )
)
(:scoring
  180
)
)

(define (game game-id-758) (:domain few-objects-room-v1)
(:setup
  (and
    (game-conserved
      (agent_holds ?xxx ?xxx ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?y - dodgeball ?a - hexagonal_bin)
        (then
          (forall-sequence (?f - game_object)
            (then
              (once (< 1 1) )
              (once (on door ?a) )
              (once (and (and (in_motion agent) (not (not (not (on ?a) ) ) ) ) (not (in right) ) ) )
            )
          )
          (once (and (= (distance 8 ?a) (distance ?a ?a ?a)) (and (in_motion ?a) (not (adjacent_side ?a) ) (on ?a) ) ) )
          (once (agent_holds ?a) )
          (hold-while (on ?a) (in_motion ?a ?a) (< 1 (distance desk ?a)) )
        )
      )
    )
    (preference preference2
      (exists (?r - book ?q - cylindrical_block)
        (then
          (hold (and (agent_holds ?q floor) (not (in_motion agent ?q) ) ) )
          (once (same_object ?q) )
          (once (agent_holds ?q) )
        )
      )
    )
  )
)
(:terminal
  (or
    (<= (* (+ 6 (count-once-per-external-objects preference1:top_drawer) 10 (count preference1:triangle_block:golfball) 4 )
        (count-shortest preference2:red)
      )
      (count-once-per-objects preference2:pink:blue_pyramid_block)
    )
    (>= 5 (* (count preference1:dodgeball:bed) (* 3 (count preference1:beachball) )
      )
    )
  )
)
(:scoring
  25
)
)

(define (game game-id-759) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (and
      (in_motion ?xxx)
      (not
        (touch rug ?xxx)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?d - red_dodgeball)
        (then
          (once (adjacent_side ?d ?d rug ?d) )
          (hold (not (and (= 9 8) (not (in_motion ?d ?d) ) ) ) )
          (hold (adjacent ?d ?d) )
          (once (touch bed ?d) )
        )
      )
    )
  )
)
(:terminal
  (> (external-forall-maximize (* 15 (- (* 12 (* (count preference1) (external-forall-maximize (* (* (count preference1:yellow) 1 )
                  (count preference1:dodgeball)
                  (count-once-per-objects preference1:book)
                  (count preference1:dodgeball:yellow)
                  (total-score)
                  10
                )
              )
              (* (* (count preference1:pink_dodgeball) (count-once preference1:orange) )
                (- 15 )
              )
            )
          )
        )
      )
    )
    (count-once preference1)
  )
)
(:scoring
  (count-once-per-objects preference1:beachball)
)
)

(define (game game-id-760) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?t ?z - hexagonal_bin ?i - dodgeball ?y - hexagonal_bin)
      (exists (?e - dodgeball)
        (exists (?n - cube_block)
          (and
            (and
              (game-conserved
                (exists (?k - hexagonal_bin)
                  (and
                    (< (distance 8 7) 0.5)
                    (< 1 4)
                  )
                )
              )
              (exists (?c - dodgeball)
                (exists (?w - ball ?u - cube_block)
                  (and
                    (exists (?t - bridge_block)
                      (and
                        (game-conserved
                          (and
                            (not
                              (not
                                (not
                                  (= (distance ?t door) 0)
                                )
                              )
                            )
                            (in_motion ?e)
                          )
                        )
                      )
                    )
                    (and
                      (or
                        (and
                          (game-conserved
                            (in_motion ?n ?c)
                          )
                        )
                      )
                    )
                    (forall (?w ?s ?h ?r ?p ?z - hexagonal_bin)
                      (and
                        (and
                          (exists (?l - chair)
                            (and
                              (and
                                (and
                                  (forall (?q - teddy_bear)
                                    (game-conserved
                                      (and
                                        (not
                                          (not
                                            (agent_holds ?w)
                                          )
                                        )
                                        (and
                                          (adjacent ?y ?q)
                                          (and
                                            (and
                                              (adjacent ?q)
                                              (agent_holds ?s brown)
                                              (not
                                                (in ?q)
                                              )
                                            )
                                            (and
                                              (in_motion ?c ?u)
                                              (and
                                                (touch rug)
                                                (adjacent ?w ?s)
                                                (agent_holds bed bed)
                                              )
                                              (in_motion ?w)
                                              (agent_holds ?n)
                                              (and
                                                (and
                                                  (= (distance ?w bed) (distance room_center ?z))
                                                  (and
                                                    (< 1 (distance door))
                                                    (not
                                                      (not
                                                        (in_motion yellow)
                                                      )
                                                    )
                                                  )
                                                )
                                                (agent_holds ?c)
                                              )
                                              (in_motion ?n ?h ?r)
                                              (agent_holds ?c)
                                              (agent_holds ?r ?u)
                                              (exists (?v ?x - game_object)
                                                (on ?x ?l)
                                              )
                                              (on ?s ?q)
                                            )
                                            (in_motion ?n rug)
                                          )
                                        )
                                        (and
                                          (or
                                            (not
                                              (agent_holds ?e ?h)
                                            )
                                            (agent_holds ?l)
                                          )
                                          (and
                                            (and
                                              (or
                                                (in ?z)
                                                (in_motion ?l)
                                              )
                                              (not
                                                (agent_holds ?e)
                                              )
                                            )
                                            (in_motion desk)
                                          )
                                          (in_motion ?n)
                                          (not
                                            (agent_holds ?h)
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                              (forall (?i - hexagonal_bin)
                                (forall (?o ?x - hexagonal_bin ?t - teddy_bear)
                                  (game-optional
                                    (adjacent ?p ?y)
                                  )
                                )
                              )
                            )
                          )
                        )
                        (forall (?f - pyramid_block)
                          (game-conserved
                            (not
                              (not
                                (agent_holds ?p)
                              )
                            )
                          )
                        )
                        (exists (?k - game_object ?d - beachball)
                          (game-optional
                            (agent_holds ?s)
                          )
                        )
                        (game-conserved
                          (in_motion bed ?u)
                        )
                        (exists (?m - golfball ?v - (either tall_cylindrical_block pencil) ?t - curved_wooden_ramp)
                          (and
                            (game-conserved
                              (not
                                (in_motion ?p)
                              )
                            )
                            (exists (?k - hexagonal_bin ?l - dodgeball)
                              (exists (?b - game_object)
                                (exists (?j - cube_block ?f - wall ?d - ball)
                                  (exists (?i - tall_cylindrical_block ?k - triangular_ramp ?f ?q - pillow)
                                    (forall (?a - block)
                                      (exists (?j - chair)
                                        (forall (?k - chair)
                                          (and
                                            (or
                                              (game-conserved
                                                (< (distance ?w ?f 8) 2)
                                              )
                                              (and
                                                (and
                                                  (and
                                                    (and
                                                      (not
                                                        (forall (?o - golfball)
                                                          (game-conserved
                                                            (and
                                                              (in_motion ?q ?p)
                                                              (exists (?m - (either blue_cube_block pyramid_block) ?g - hexagonal_bin ?m ?g - hexagonal_bin)
                                                                (exists (?i - hexagonal_bin ?i - chair)
                                                                  (agent_holds ?t)
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                    (game-optional
                                                      (and
                                                        (in ?a ?f)
                                                        (agent_holds ?w)
                                                        (and
                                                          (agent_holds ?k)
                                                          (= (distance ?u 3) 1 7 5)
                                                          (in ?h)
                                                          (not
                                                            (touch ?e)
                                                          )
                                                        )
                                                      )
                                                    )
                                                    (forall (?o - color)
                                                      (and
                                                        (game-conserved
                                                          (< (distance ) 2)
                                                        )
                                                        (exists (?m - cylindrical_block)
                                                          (and
                                                            (game-conserved
                                                              (agent_holds pink)
                                                            )
                                                            (and
                                                              (and
                                                                (and
                                                                  (game-conserved
                                                                    (and
                                                                      (in brown)
                                                                      (or
                                                                        (not
                                                                          (= (distance ?h) (distance 1 ?z))
                                                                        )
                                                                        (agent_holds ?u ?h)
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                                (exists (?x - (either dodgeball cellphone yellow_cube_block cellphone))
                                                                  (game-optional
                                                                    (not
                                                                      (same_color ?h upright)
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                    (exists (?m ?v - curved_wooden_ramp ?x - chair)
                                                      (and
                                                        (and
                                                          (and
                                                            (and
                                                              (exists (?v - curved_wooden_ramp ?i - hexagonal_bin ?g - hexagonal_bin ?i - hexagonal_bin)
                                                                (game-optional
                                                                  (and
                                                                    (adjacent_side ?b ?t)
                                                                  )
                                                                )
                                                              )
                                                              (game-conserved
                                                                (agent_holds ?w)
                                                              )
                                                            )
                                                            (game-conserved
                                                              (in ?e)
                                                            )
                                                          )
                                                        )
                                                        (forall (?o - hexagonal_bin)
                                                          (and
                                                            (forall (?m - hexagonal_bin)
                                                              (exists (?g - hexagonal_bin)
                                                                (game-optional
                                                                  (< 1 4)
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                    (game-optional
                                                      (and
                                                        (and
                                                          (in_motion ?t ?n)
                                                          (not
                                                            (and
                                                              (on ?s agent)
                                                              (on ?q ?a)
                                                            )
                                                          )
                                                        )
                                                        (in_motion ?r ?u)
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                            (game-optional
                                              (in_motion ?j floor)
                                            )
                                            (not
                                              (game-conserved
                                                (in_motion ?a ?z)
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                            (game-optional
                              (equal_x_position ?t)
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
              (and
                (and
                  (forall (?b - (either cd flat_block) ?m - cube_block)
                    (forall (?v - hexagonal_bin ?x - (either floor pillow))
                      (game-optional
                        (and
                          (exists (?c - curved_wooden_ramp)
                            (exists (?s - dodgeball ?v - block ?l - hexagonal_bin)
                              (on ?x)
                            )
                          )
                          (in_motion ?y)
                        )
                      )
                    )
                  )
                  (and
                    (game-conserved
                      (and
                        (not
                          (agent_holds rug ?y)
                        )
                        (on agent ?n)
                        (same_color ?n)
                        (or
                          (forall (?a - chair)
                            (and
                              (not
                                (in ?y)
                              )
                              (in_motion ?n agent)
                            )
                          )
                          (and
                            (agent_holds ?e)
                          )
                        )
                      )
                    )
                    (exists (?p - red_pyramid_block ?u - (either laptop doggie_bed))
                      (exists (?b - dodgeball)
                        (and
                          (forall (?t - block ?a - game_object ?m - dodgeball)
                            (and
                              (and
                                (game-optional
                                  (forall (?q - dodgeball)
                                    (not
                                      (in ?n ?e)
                                    )
                                  )
                                )
                              )
                              (and
                                (and
                                  (game-conserved
                                    (not
                                      (not
                                        (in ?m)
                                      )
                                    )
                                  )
                                )
                                (forall (?k - hexagonal_bin)
                                  (forall (?t - building ?h - building)
                                    (game-conserved
                                      (and
                                        (and
                                          (< 2 1)
                                          (< (distance room_center bed) (distance ?h room_center))
                                        )
                                        (adjacent ?k)
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
            (game-optional
              (not
                (and
                  (in_motion agent)
                  (same_type ?y ?y)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?w - tall_cylindrical_block)
        (then
          (once (in_motion ?w) )
          (once (on ?w) )
          (hold (and (not (not (in_motion door) ) ) (and (agent_holds ?w) (and (on ?w) (not (agent_holds ?w) ) ) (and (agent_holds agent) (not (and (not (exists (?e - tan_cube_block ?u - pillow ?f - wall) (adjacent ?w) ) ) (and (on agent) (not (in ?w bed) ) ) (in_motion ?w) ) ) ) (in_motion ?w) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count preference1:blue_cube_block) 180 )
  )
)
(:scoring
  (- (* (* (* (count-unique-positions preference1:pink) (count preference1:dodgeball:doggie_bed) )
        (* (* 3 2 )
          0.7
        )
        (- (+ 15 (count-once-per-objects preference1:blue_cube_block) )
        )
      )
      8
    )
  )
)
)

(define (game game-id-761) (:domain few-objects-room-v1)
(:setup
  (not
    (game-conserved
      (not
        (agent_holds ?xxx ?xxx)
      )
    )
  )
)
(:constraints
  (and
    (forall (?e - (either tall_cylindrical_block cube_block lamp))
      (and
        (preference preference1
          (exists (?d - dodgeball)
            (then
              (hold-while (on ?e) (on ?d) )
              (once (< 1 (distance agent)) )
              (once (adjacent_side ?d) )
            )
          )
        )
        (preference preference2
          (exists (?w - chair ?i - (either bridge_block hexagonal_bin cube_block))
            (at-end
              (in desk)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (* (* (count-once-per-objects preference2:dodgeball) (count-once-per-objects preference2:blue:wall) )
        (+ (<= (* 20 5 )
            (count preference2:dodgeball)
          )
          1
        )
      )
      (* (count-once-per-objects preference1:blue_dodgeball) (count-once preference2:yellow) )
    )
    (or
      (or
        (>= (count-once-per-objects preference2:pink_dodgeball) 3 )
        (>= 3 (* 3 )
        )
        (>= (* (count preference1:triangle_block:blue_cube_block) (count-once-per-objects preference1:green) )
          (count preference2:basketball)
        )
      )
    )
    (>= 3 10 )
  )
)
(:scoring
  (count preference1:book)
)
)

(define (game game-id-762) (:domain medium-objects-room-v1)
(:setup
  (exists (?r - dodgeball)
    (not
      (exists (?l - sliding_door)
        (game-optional
          (in_motion ?l)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?p - (either book laptop golfball))
        (then
          (once (in_motion bed brown) )
          (hold-to-end (and (in_motion ?p pillow) (not (on ?p) ) ) )
          (once (in ?p agent) )
        )
      )
    )
  )
)
(:terminal
  (and
    (< (* (count preference1:dodgeball) 3 (external-forall-maximize 9 ) )
      (external-forall-maximize
        (count-once-per-objects preference1:green:dodgeball)
      )
    )
    (<= 2 (count-once-per-external-objects preference1:orange) )
    (>= (count-once preference1:purple) (- (* 5 3 )
      )
    )
  )
)
(:scoring
  3
)
)

(define (game game-id-763) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (and
      (on ?xxx ?xxx)
      (not
        (in_motion rug)
      )
      (adjacent ?xxx ?xxx)
    )
  )
)
(:constraints
  (and
    (forall (?a - hexagonal_bin ?c ?m - ball)
      (and
        (preference preference1
          (exists (?z - ball)
            (then
              (hold (on ?c) )
              (hold (agent_holds ?c) )
              (once (< 1 (distance ?z ?z)) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:red:blue_cube_block) (count preference1:red) )
)
(:scoring
  (count-once-per-objects preference1:block)
)
)

(define (game game-id-764) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-optional
      (not
        (adjacent ?xxx rug)
      )
    )
    (exists (?o - color ?f - hexagonal_bin ?w - block ?j - color)
      (and
        (and
          (game-conserved
            (and
              (not
                (and
                  (agent_holds ?j front)
                  (on ?j)
                )
              )
              (exists (?t - drawer)
                (and
                  (in rug)
                  (not
                    (and
                      (touch pink ?j)
                      (in ?t)
                    )
                  )
                )
              )
              (agent_holds ?j ?j)
            )
          )
          (forall (?t - ball ?g - dodgeball ?l - game_object)
            (game-optional
              (agent_holds ?l)
            )
          )
        )
        (game-optional
          (and
            (and
              (not
                (not
                  (agent_holds bed ?j)
                )
              )
              (agent_holds ?j ?j)
            )
            (not
              (exists (?q - red_dodgeball ?t - block)
                (and
                  (in ?j agent)
                  (in_motion ?t)
                  (on ?j)
                )
              )
            )
          )
        )
        (and
          (game-conserved
            (not
              (in ?j ?j)
            )
          )
        )
        (game-optional
          (in ?j ?j)
        )
        (and
          (game-optional
            (and
              (in_motion ?j)
              (broken ?j)
            )
          )
          (game-conserved
            (and
              (agent_holds ?j)
              (not
                (and
                  (equal_x_position agent)
                  (= (distance ?j desk 9) 10)
                  (not
                    (not
                      (agent_holds ?j ?j)
                    )
                  )
                  (in ?j ?j)
                )
              )
            )
          )
        )
      )
    )
    (game-optional
      (and
        (on agent ?xxx)
        (adjacent agent)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?q - wall ?h - hexagonal_bin)
        (then
          (once (touch ?h ?h) )
          (once (in_motion left) )
          (once (in_motion ?h ?h) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= 300 (- (count preference1:basketball) )
    )
  )
)
(:scoring
  (count-once-per-objects preference1:yellow_pyramid_block)
)
)

(define (game game-id-765) (:domain many-objects-room-v1)
(:setup
  (exists (?d - hexagonal_bin)
    (forall (?f - dodgeball ?l - color)
      (and
        (exists (?t - ball)
          (not
            (game-optional
              (touch ?t)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?l - hexagonal_bin ?h ?p - chair)
      (and
        (preference preference1
          (exists (?i - beachball ?o - hexagonal_bin)
            (then
              (once (in ?o) )
              (hold-while (not (on ?h ?o) ) (>= (distance_side desk agent desk) 2) )
              (once (and (touch agent) (on ?p) ) )
            )
          )
        )
        (preference preference2
          (exists (?y - chair ?n - curved_wooden_ramp ?i - dodgeball)
            (at-end
              (exists (?e - dodgeball)
                (or
                  (in ?h upright)
                )
              )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?b - game_object ?h - game_object)
        (at-end
          (not
            (= 1 1)
          )
        )
      )
    )
  )
)
(:terminal
  (> (+ (* (* 5 (- (= (- (count preference3:dodgeball) (>= (- (count preference2:pink:pink_dodgeball) )
                  (count-overlapping preference1:dodgeball)
                )
              )
              (count-once-per-objects preference2:dodgeball)
            )
          )
        )
        (+ 3 6 (count preference2:pink_dodgeball:cube_block) (count preference3:yellow) (count preference1:basketball) (count-once-per-external-objects preference3:tall_cylindrical_block) )
      )
      1
    )
    (* (count preference3:golfball) (count preference3:pink) (total-time) )
  )
)
(:scoring
  1
)
)

(define (game game-id-766) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (not
      (in_motion upright)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?q - bridge_block)
        (then
          (once (and (and (adjacent ?q ?q) (same_color bed ?q) ) (and (on ?q agent) (between ?q rug) (in_motion ?q) ) ) )
        )
      )
    )
    (preference preference2
      (exists (?o - hexagonal_bin ?o - block)
        (at-end
          (and
            (and
              (not
                (in_motion agent)
              )
              (and
                (on ?o)
                (agent_holds ?o)
              )
            )
            (on agent)
          )
        )
      )
    )
  )
)
(:terminal
  (> 20 (count preference2:pyramid_block) )
)
(:scoring
  (* (count-increasing-measure preference2:hexagonal_bin) (count preference1:dodgeball:blue_pyramid_block) )
)
)

(define (game game-id-767) (:domain medium-objects-room-v1)
(:setup
  (exists (?r - cube_block)
    (exists (?m - building)
      (exists (?g - hexagonal_bin ?f - hexagonal_bin)
        (and
          (game-conserved
            (in_motion ?f)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?v - game_object)
        (then
          (once (and (object_orientation ?v) (agent_holds ?v ?v) (<= (distance_side room_center ?v) (building_size ?v ?v agent)) (in ?v ?v) ) )
          (hold (and (not (on ?v) ) (adjacent ?v ?v) (and (and (agent_holds ?v) (adjacent door ?v) ) (and (on ?v) (not (same_color ?v) ) (object_orientation ?v) ) ) ) )
          (once (in_motion ?v ?v) )
          (hold-while (on ) (adjacent ?v ?v) )
        )
      )
    )
    (preference preference2
      (then
        (once (not (in_motion ?xxx) ) )
        (once (and (in_motion ?xxx ?xxx) (forall (?u - game_object ?a - dodgeball ?r - bridge_block) (<= (distance 5 agent) 6) ) (in_motion ?xxx ?xxx) ) )
        (once (and (not (agent_holds ?xxx) ) (in top_shelf) ) )
      )
    )
  )
)
(:terminal
  (< (+ (* (count-once-per-objects preference2) (* 5 (count-once-per-external-objects preference1:pyramid_block) )
      )
      (external-forall-maximize
        (* (count-once preference1:book) (external-forall-maximize 3 ) 5 )
      )
    )
    (count preference2:red)
  )
)
(:scoring
  (* (>= (count-total preference2:hexagonal_bin) (count preference2:dodgeball) )
    (count-once preference1:red:basketball:beachball)
  )
)
)

(define (game game-id-768) (:domain few-objects-room-v1)
(:setup
  (exists (?h - (either tall_cylindrical_block cube_block))
    (game-conserved
      (agent_holds ?h ?h)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (then
        (once (exists (?h ?f - (either rug)) (not (and (agent_holds ?f ?h) (same_color ?h) (in ?f) (and (and (same_color ?h) (agent_holds ?f ?h) (not (forall (?q - chair) (in_motion ?f) ) ) ) (agent_holds ?h) ) ) ) ) )
        (once (in ?xxx) )
        (hold (not (adjacent blue ?xxx) ) )
        (once (and (agent_holds ?xxx) (and (in_motion ?xxx ?xxx) (agent_holds ?xxx) ) ) )
      )
    )
    (preference preference2
      (exists (?m - hexagonal_bin)
        (then
          (once (in ?m ?m) )
          (hold (< 1 (distance 10 ?m 3)) )
          (hold-while (not (in_motion agent) ) (adjacent ?m) )
        )
      )
    )
  )
)
(:terminal
  (> (count preference1:cube_block) 2 )
)
(:scoring
  (count preference1:blue_cube_block:yellow)
)
)

(define (game game-id-769) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-optional
      (agent_holds ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?i - hexagonal_bin ?e - (either desktop tall_cylindrical_block))
        (then
          (once (open brown) )
          (once (not (not (in_motion bed blue) ) ) )
          (hold (not (and (agent_holds ?e ?e) (in_motion ?e) ) ) )
        )
      )
    )
    (preference preference2
      (exists (?z - dodgeball)
        (then
          (once (adjacent ?z) )
        )
      )
    )
    (forall (?l - dodgeball)
      (and
        (preference preference3
          (exists (?t - beachball ?x - cube_block ?x - hexagonal_bin)
            (then
              (hold (not (in_motion ?l ?l) ) )
              (once (in_motion ?l) )
              (once (agent_holds ?x) )
            )
          )
        )
        (preference preference4
          (then
            (hold (and (not (in ?l) ) (on ?l ?l) ) )
            (once (and (in_motion ?l) (opposite ?l) ) )
            (hold (forall (?q ?m ?y ?r - hexagonal_bin) (on ?m ?y) ) )
          )
        )
      )
    )
  )
)
(:terminal
  (< (total-score) (count-overlapping preference2) )
)
(:scoring
  (count-measure preference3:yellow)
)
)

(define (game game-id-770) (:domain many-objects-room-v1)
(:setup
  (forall (?k - (either golfball pyramid_block) ?x - dodgeball)
    (game-conserved
      (and
        (not
          (on ?x)
        )
        (touch ?x)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?m - building ?r - dodgeball)
        (then
          (once (and (is_setup_object ?r ?r) (not (same_type ?r) ) ) )
          (once (open bed) )
          (once (not (and (and (in_motion ?r) (not (in_motion ?r) ) (in_motion ?r agent agent) ) (not (not (= 1 1) ) ) ) ) )
        )
      )
    )
    (forall (?t - game_object)
      (and
        (preference preference2
          (exists (?g - drawer ?n ?q - hexagonal_bin)
            (then
              (hold (and (in_motion ?t) (agent_holds ?n ?n) ) )
              (hold (in_motion ?q) )
              (hold-for 8 (in_motion ?t) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count preference2:golfball) 6 )
    (count preference2:red)
  )
)
(:scoring
  3
)
)

(define (game game-id-771) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (not
      (exists (?w - dodgeball ?h - wall)
        (forall (?f - (either cd key_chain))
          (not
            (in_motion ?f)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?x ?j - dodgeball ?h ?z - cube_block ?d ?h ?e - ball)
        (then
          (once (on ?d) )
          (once (not (adjacent ?e ?d) ) )
          (hold (in_motion ?d) )
          (once (agent_holds ?d) )
        )
      )
    )
    (preference preference2
      (exists (?d - wall)
        (at-end
          (adjacent_side ?d ?d ?d)
        )
      )
    )
    (preference preference3
      (exists (?h - (either cube_block golfball) ?y - chair)
        (then
          (once (in ?y) )
          (once (not (on ?y ?y) ) )
          (once (adjacent ?y ?y) )
        )
      )
    )
    (preference preference4
      (exists (?u ?f - cube_block ?w - (either cellphone game_object laptop) ?v ?r - block)
        (then
          (once (not (in_motion ?v ?r) ) )
          (once (not (and (not (agent_holds ?v) ) (on ?r ?v) (agent_holds ?r) ) ) )
          (once (not (agent_holds upside_down) ) )
        )
      )
    )
    (forall (?q - (either dodgeball pyramid_block key_chain))
      (and
        (preference preference5
          (exists (?r - doggie_bed)
            (at-end
              (and
                (and
                  (and
                    (and
                      (not
                        (not
                          (rug_color_under ?q)
                        )
                      )
                      (on ?r)
                    )
                    (not
                      (same_color ?r)
                    )
                    (and
                      (in_motion ?q ?r)
                      (not
                        (in_motion ?r)
                      )
                    )
                    (and
                      (in_motion ?q)
                      (same_type ?r)
                      (not
                        (and
                          (agent_holds ?q ?q)
                          (agent_holds ?r)
                        )
                      )
                      (on ?r)
                      (in_motion ?r ?r)
                      (agent_holds bed ?q)
                      (not
                        (agent_holds ?q)
                      )
                    )
                    (in_motion ?r)
                    (agent_holds ?r)
                  )
                  (and
                    (not
                      (forall (?y - hexagonal_bin)
                        (not
                          (in agent ?q)
                        )
                      )
                    )
                    (in blue)
                  )
                )
                (in_motion ?q)
                (game_over ?r)
              )
            )
          )
        )
        (preference preference6
          (exists (?i - dodgeball)
            (then
              (once (and (same_object ?q) (agent_holds floor) ) )
              (once (not (on ?q) ) )
              (hold (and (agent_holds ?i) (not (agent_holds ?q) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (= (count preference5:book) (* (count-measure preference2:yellow) 5 )
  )
)
(:scoring
  5
)
)

(define (game game-id-772) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (and
        (exists (?u - (either cellphone cylindrical_block))
          (game-conserved
            (and
              (on bed ?u)
              (rug_color_under ?u)
            )
          )
        )
        (forall (?b - curved_wooden_ramp)
          (forall (?m - dodgeball)
            (and
              (not
                (or
                  (game-conserved
                    (not
                      (in_motion bed)
                    )
                  )
                  (or
                    (game-optional
                      (adjacent ?b)
                    )
                  )
                )
              )
              (game-optional
                (not
                  (and
                    (and
                      (not
                        (in_motion ?b)
                      )
                      (and
                        (not
                          (on desk)
                        )
                        (adjacent ?b)
                      )
                    )
                    (is_setup_object ?m ?b)
                  )
                )
              )
              (exists (?l - game_object)
                (exists (?x - ball ?r - shelf)
                  (forall (?p ?i ?d ?v ?f ?c - ball)
                    (forall (?s - teddy_bear ?u - hexagonal_bin)
                      (game-conserved
                        (< 0.5 (distance desk))
                      )
                    )
                  )
                )
              )
            )
          )
        )
        (exists (?r - beachball ?w - cylindrical_block)
          (game-optional
            (on ?w)
          )
        )
        (and
          (game-optional
            (and
              (in_motion floor ?xxx)
              (touch ?xxx)
            )
          )
        )
        (exists (?z - dodgeball ?e - building)
          (game-conserved
            (and
              (adjacent ?e)
              (not
                (and
                  (on ?e)
                  (not
                    (not
                      (and
                        (not
                          (not
                            (in_motion ?e ?e)
                          )
                        )
                        (on ?e ?e)
                      )
                    )
                  )
                  (in_motion ?e ?e ?e)
                )
              )
              (in_motion ?e)
            )
          )
        )
      )
    )
    (game-conserved
      (and
        (exists (?h - block)
          (on agent)
        )
        (in_motion pillow)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?p - dodgeball)
        (at-end
          (and
            (agent_holds ?p ?p)
            (in_motion ?p)
            (and
              (not
                (not
                  (and
                    (agent_holds ?p)
                    (in_motion ?p ?p)
                    (and
                      (not
                        (exists (?i - game_object ?h - curved_wooden_ramp)
                          (agent_holds door)
                        )
                      )
                      (in_motion ?p)
                    )
                  )
                )
              )
              (in_motion ?p)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (- 10 )
      50
      3
      6
      (+ (total-score) (count preference1:pink) 9 )
      3
      (external-forall-maximize
        (external-forall-minimize
          (count-once-per-objects preference1:yellow)
        )
      )
      2
      10
    )
    (* (* (+ (* (count preference1:hexagonal_bin:blue_dodgeball) (count preference1:dodgeball) )
          4
          5
          (count-once preference1:doggie_bed)
          (count-once preference1:basketball)
          (external-forall-maximize
            (- 300 )
          )
          2
        )
        3
      )
      (count preference1:dodgeball)
    )
  )
)
(:scoring
  2
)
)

(define (game game-id-773) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (game_over ?xxx ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?d - hexagonal_bin)
        (then
          (once (agent_holds ?d) )
          (hold (and (agent_holds bed) (and (in_motion ?d ?d) (touch ?d) ) ) )
          (once (forall (?r - block) (not (not (agent_holds blue) ) ) ) )
        )
      )
    )
    (preference preference2
      (exists (?z - dodgeball ?k - (either doggie_bed pillow))
        (then
          (once (in_motion agent) )
          (once (same_color ?k ?k) )
          (hold (exists (?g - doggie_bed ?d - color) (rug_color_under ?d) ) )
        )
      )
    )
    (preference preference3
      (exists (?f - ball)
        (at-end
          (and
            (adjacent ?f ?f)
            (same_color ?f)
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count preference1:red) (count preference2:dodgeball:red_pyramid_block) )
    (count-unique-positions preference3:basketball)
  )
)
(:scoring
  2
)
)

(define (game game-id-774) (:domain many-objects-room-v1)
(:setup
  (exists (?s - hexagonal_bin)
    (game-conserved
      (not
        (on rug pink_dodgeball)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?k - doggie_bed)
        (then
          (hold (in ?k rug) )
          (once (adjacent ?k) )
          (hold (in_motion ?k ?k ?k) )
          (hold-to-end (< (distance ?k ?k) (distance 4 ?k)) )
        )
      )
    )
    (preference preference2
      (exists (?d - chair)
        (then
          (hold (on ?d ?d) )
          (hold (in ?d bed) )
          (once (in ?d) )
        )
      )
    )
  )
)
(:terminal
  (> 30 (- 5 )
  )
)
(:scoring
  (+ (* (count preference1:doggie_bed) (> (count-once-per-objects preference2:blue:green) (* (count preference1:pink_dodgeball) (* (+ (* 5 )
              (count preference2:basketball)
            )
            (* (- (count-overlapping preference1:basketball:dodgeball) )
              (* (- (count-overlapping preference1:dodgeball:tan) (* (* 3 (count preference1:green) )
                    (count-once-per-objects preference2:top_drawer)
                  )
                )
                (count-longest preference2:basketball)
                10
              )
            )
          )
          3
        )
      )
    )
    (count preference1:pink_dodgeball)
  )
)
)

(define (game game-id-775) (:domain many-objects-room-v1)
(:setup
  (or
    (exists (?i - hexagonal_bin)
      (game-conserved
        (not
          (adjacent_side ?i ?i)
        )
      )
    )
    (forall (?d - curved_wooden_ramp)
      (exists (?v - ball)
        (forall (?u - dodgeball)
          (game-optional
            (object_orientation ?u)
          )
        )
      )
    )
    (game-optional
      (on ?xxx ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?k - hexagonal_bin)
        (then
          (hold (on west_wall left) )
          (hold (agent_holds ?k ?k) )
          (hold (and (on ?k) (and (not (adjacent ?k ?k ?k ?k) ) (and (and (and (agent_holds ?k) (in_motion rug) (touch ?k ?k) ) (in_motion agent ?k) ) (agent_holds ?k) (agent_holds ?k) ) ) ) )
        )
      )
    )
    (preference preference2
      (exists (?l - wall)
        (at-end
          (<= 1 1)
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 6 2 )
    (> (+ (count-once-per-external-objects preference2:top_drawer) (total-score) )
      (count preference2:tall_cylindrical_block)
    )
    (>= (* (count-unique-positions preference2:yellow_pyramid_block:red:pink) (+ (+ 2 (* (+ (count-once-per-objects preference1:blue_cube_block) )
              (-
                (count preference2:golfball)
                (count-once-per-objects preference1:pink)
              )
              (* 3 (+ (count preference1:blue_dodgeball) (* 2 (- (count preference2:green) )
                  )
                )
              )
            )
          )
          (* (count-total preference2:pink) 3 )
        )
      )
      (count preference2:green:blue_dodgeball)
    )
  )
)
(:scoring
  (external-forall-maximize
    (* (count-overlapping preference1:red) 2 (* 30 (count-once-per-objects preference1:golfball:pink_dodgeball) 5 (* (count preference2:green:dodgeball) (- (count-once-per-objects preference2:golfball) )
        )
      )
    )
  )
)
)

(define (game game-id-776) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds ?xxx ?xxx)
  )
)
(:constraints
  (and
    (forall (?c ?y - dodgeball)
      (and
        (preference preference1
          (at-end
            (and
              (same_color ?c)
              (and
                (agent_holds ?y)
                (< 5 2)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= 10 (* 3 3 )
  )
)
(:scoring
  (* (* 3 (count preference1:dodgeball) )
    (count-overlapping preference1:dodgeball)
  )
)
)

(define (game game-id-777) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?f - hexagonal_bin)
      (exists (?v - building)
        (game-conserved
          (not
            (or
              (agent_holds ?v)
              (and
                (and
                  (> (distance ?f ?f 2) (distance bed room_center))
                  (and
                    (adjacent front)
                    (and
                      (and
                        (in_motion upright)
                        (not
                          (agent_holds ?f)
                        )
                        (adjacent ?f ?v bed)
                      )
                      (agent_holds pink_dodgeball)
                    )
                    (adjacent ?f)
                    (not
                      (object_orientation ?v ?v)
                    )
                    (and
                      (in ?f ?f)
                      (in_motion ?f)
                    )
                  )
                  (or
                    (agent_holds ?v ?v)
                  )
                )
                (in ?v ?f)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (then
        (hold (adjacent ?xxx) )
        (once (and (and (and (agent_holds ?xxx ?xxx) (exists (?n - cylindrical_block ?j - chair ?a - game_object ?w - triangular_ramp) (in_motion ?w) ) (not (and (not (and (adjacent ?xxx) (on ?xxx ?xxx) ) ) (in_motion block) ) ) ) (in_motion ?xxx) ) (in agent agent) ) )
        (hold (in_motion rug ?xxx) )
      )
    )
    (forall (?o ?g - pillow)
      (and
        (preference preference2
          (exists (?e - game_object)
            (at-end
              (and
                (agent_holds ?g)
                (in_motion ?g)
              )
            )
          )
        )
        (preference preference3
          (exists (?b - hexagonal_bin ?u - building ?w ?z - doggie_bed ?h - game_object ?v - hexagonal_bin)
            (then
              (hold-while (and (on ?v ?o) (on ?g) ) (on ?o ?v) )
              (hold (equal_z_position bed ?v) )
              (once (not (not (and (and (not (<= (distance ?v ?v) (distance ?g ?g)) ) (and (agent_holds ?o ?v) (not (on ?o ?o) ) ) ) (in ?v) ) ) ) )
            )
          )
        )
      )
    )
    (forall (?i - cube_block)
      (and
        (preference preference4
          (exists (?a - pyramid_block)
            (then
              (hold (in_motion ?a pink_dodgeball) )
              (once (in_motion ?i) )
              (hold (and (not (in_motion ?a ?i) ) (or (in_motion rug) (on ?a) ) (agent_holds ?i) (or (in ?i ?i) (on bed) ) (and (not (in_motion floor rug) ) (agent_holds desk) ) (and (agent_holds ?a) (and (in_motion pink ?a) (is_setup_object ?a) ) ) (on ?i) (on ?i ?a) (in ?i ?i) (on ?a ?a) (agent_holds ?a agent) (or (and (not (not (= 9 9) ) ) (agent_holds door) (not (not (not (< (distance 6 ?i) (distance ?i 9)) ) ) ) (and (on rug ?a) (on agent) (not (not (on ) ) ) ) (and (in_motion pink_dodgeball) (not (and (on floor) (not (touch agent) ) (adjacent ?i) ) ) ) (not (in_motion ?i ?a) ) ) (in ?i) (agent_holds ?i) ) ) )
            )
          )
        )
        (preference preference5
          (exists (?d ?j - (either lamp mug))
            (then
              (once (not (not (and (not (in ?i ?i) ) (agent_holds ?d ?i) ) ) ) )
              (once (in_motion ?j) )
              (once (on ?d ?i) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (* 5 (+ (+ (+ (count preference5:pink) 5 )
          10
        )
        (count preference5:purple)
      )
    )
  )
)
(:scoring
  (count-once-per-external-objects preference5:golfball)
)
)

(define (game game-id-778) (:domain few-objects-room-v1)
(:setup
  (not
    (game-optional
      (on ?xxx)
    )
  )
)
(:constraints
  (and
    (forall (?k - dodgeball)
      (and
        (preference preference1
          (exists (?q - pillow ?t - building ?g - pillow)
            (then
              (once (agent_holds ?g) )
              (once (and (in ?g) (same_color block east_sliding_door) ) )
              (hold-while (and (agent_holds ?k) (and (< 1 (distance ?k ?g)) (in_motion ?g) (adjacent ?k) ) ) (agent_holds agent ?k) (in_motion ?k ?k) (agent_holds ?g ?g) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:dodgeball) (count-once-per-objects preference1:cube_block) )
)
(:scoring
  (count preference1:beachball)
)
)

(define (game game-id-779) (:domain medium-objects-room-v1)
(:setup
  (exists (?y - hexagonal_bin ?e - (either curved_wooden_ramp tall_cylindrical_block book))
    (game-conserved
      (and
        (in_motion floor)
        (<= 4 (distance desk 9))
        (touch ?e)
      )
    )
  )
)
(:constraints
  (and
    (forall (?p ?m - dodgeball ?p - curved_wooden_ramp)
      (and
        (preference preference1
          (exists (?z - hexagonal_bin ?j - chair)
            (then
              (hold (between ?j) )
              (once (not (agent_holds ?p) ) )
              (hold (agent_holds ?p) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?j ?c - (either cd alarm_clock key_chain) ?s - (either laptop golfball) ?y - hexagonal_bin ?e - dodgeball)
        (then
          (once (not (and (in_motion floor ?e) (on ?e) (on upright) (equal_z_position south_wall) ) ) )
          (once (in_motion ?e) )
          (once (agent_holds ?e ?e) )
        )
      )
    )
    (forall (?m - cube_block)
      (and
        (preference preference3
          (then
            (hold-while (exists (?l ?e ?r ?u ?k ?t - hexagonal_bin ?n - hexagonal_bin) (or (on ?m ?m) (agent_holds ?m) ) ) (in_motion ?m) )
            (once (in_motion ?m) )
            (once (agent_holds ?m) )
          )
        )
      )
    )
    (preference preference4
      (exists (?n - teddy_bear ?i - hexagonal_bin)
        (at-end
          (in_motion ?i)
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count preference3:dodgeball) (+ (count-once-per-objects preference1:hexagonal_bin) 5 )
    )
    (> (* (* 1 (count preference1:golfball) )
        (- 3 )
      )
      60
    )
  )
)
(:scoring
  5
)
)

(define (game game-id-780) (:domain medium-objects-room-v1)
(:setup
  (or
    (and
      (game-conserved
        (and
          (exists (?o - dodgeball ?x - hexagonal_bin)
            (on side_table)
          )
          (or
            (and
              (and
                (agent_holds ?xxx)
                (not
                  (agent_holds ?xxx)
                )
                (and
                  (not
                    (and
                      (agent_holds ?xxx ?xxx)
                      (exists (?b - hexagonal_bin)
                        (is_setup_object ?b ?b)
                      )
                      (and
                        (not
                          (not
                            (in_motion ?xxx)
                          )
                        )
                        (not
                          (and
                            (agent_holds ?xxx rug)
                            (not
                              (on ?xxx)
                            )
                          )
                        )
                      )
                      (agent_holds ?xxx agent)
                      (on ?xxx ?xxx)
                      (or
                        (on ?xxx ?xxx)
                        (agent_holds agent)
                        (agent_holds ?xxx)
                        (and
                          (not
                            (on ?xxx)
                          )
                          (in green ?xxx)
                        )
                      )
                      (not
                        (< (distance ?xxx back) 1)
                      )
                      (on ?xxx)
                    )
                  )
                )
                (touch ?xxx)
              )
              (agent_holds ?xxx)
            )
            (< 1 1)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?r - wall)
        (then
          (once (not (not (in ?r ?r) ) ) )
          (once (touch ?r ?r) )
          (once (and (and (agent_holds ) (in_motion ?r) ) (agent_holds ?r ?r) ) )
        )
      )
    )
  )
)
(:terminal
  (< (count-once-per-objects preference1:tan) (count preference1:beachball:golfball) )
)
(:scoring
  (total-score)
)
)

(define (game game-id-781) (:domain few-objects-room-v1)
(:setup
  (forall (?h - teddy_bear)
    (exists (?l - (either cube_block flat_block pyramid_block) ?v - game_object)
      (and
        (game-optional
          (touch blue ?v)
        )
        (game-conserved
          (and
            (and
              (agent_holds ?v ?v)
              (and
                (agent_holds bed ?v)
                (and
                  (adjacent agent ?h)
                  (in ?v ?v)
                )
              )
            )
            (and
              (agent_holds ?h)
              (on ?v)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o - hexagonal_bin)
      (and
        (preference preference1
          (exists (?q - doggie_bed ?q - wall)
            (then
              (once (agent_holds ?q ?q) )
              (hold-while (and (in_motion ?o ?o) (agent_holds ?q) ) (agent_holds ?o) )
              (hold (in_motion ?q ?q ?q) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 4 (* 5 (* (* 10 8 )
        (+ 5 (* (* (- 3 )
              (count preference1:doggie_bed)
            )
            (count-once-per-objects preference1:dodgeball)
          )
        )
      )
    )
  )
)
(:scoring
  (count-once-per-objects preference1:green)
)
)

(define (game game-id-782) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (and
      (not
        (not
          (not
            (agent_holds ?xxx)
          )
        )
      )
      (agent_holds agent ?xxx)
      (and
        (in_motion ?xxx agent)
        (in ?xxx)
        (and
          (agent_holds desk)
          (not
            (on ?xxx ?xxx)
          )
          (< (distance ?xxx ?xxx) (distance ?xxx ?xxx))
          (agent_holds ?xxx)
        )
      )
      (forall (?c ?i - cube_block)
        (agent_holds ?c ?c)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (then
        (once (in_motion ?xxx) )
        (hold (agent_holds ?xxx agent) )
        (hold (and (not (not (in_motion desk) ) ) (> 1 4) (not (in_motion ?xxx ?xxx) ) ) )
      )
    )
  )
)
(:terminal
  (or
    (and
      (or
        (or
          (< (= (external-forall-maximize (count-once-per-objects preference1:basketball) ) (- (count preference1:hexagonal_bin) )
              (* (count-once-per-objects preference1:golfball:beachball) (count-once preference1:beachball) )
            )
            4
          )
          (or
            (or
              (>= (count-once preference1:red:hexagonal_bin) (+ (+ 5 )
                  3
                )
              )
              (>= (external-forall-maximize (count-once preference1:basketball) ) 1 )
            )
            (>= (* 2 (* 2 (count preference1:red_pyramid_block) (count-once preference1:red:beachball) (* (+ (count preference1:cube_block:orange) 0 )
                    (count-once preference1:orange)
                  )
                  5
                  (+ 0 (and 4 ) )
                  (count-overlapping preference1:beachball)
                  (+ (* (count preference1:red:yellow) (* (+ 5 (count-once-per-objects preference1:golfball) )
                        (/
                          (count preference1:dodgeball)
                          (count-measure preference1:pink:orange:purple)
                        )
                      )
                    )
                    (+ (count-once-per-external-objects preference1:golfball:beachball) 1 )
                  )
                  (or
                    (- 3 )
                  )
                )
              )
              (* (count preference1:pink_dodgeball) 8 (count preference1:dodgeball) (* 6 (count-total preference1:hexagonal_bin) 8 (* (count-once-per-objects preference1:pink_dodgeball) 3 )
                )
                (- (* 5 (count-once-per-objects preference1:pyramid_block) )
                )
                2
              )
            )
            (>= 4 (* (>= (* (count-once-per-objects preference1:tan) 5 )
                  5
                )
                (* 2 (count preference1:triangle_block) )
              )
            )
          )
        )
        (>= (count-same-positions preference1:dodgeball) 2 )
      )
      (<= (* (total-score) 3 )
        (count-once-per-objects preference1:beachball)
      )
      (>= (count-once preference1:red:orange) 1 )
    )
    (>= 1 5 )
    (and
      (>= (total-score) (+ 10 )
      )
      (= 10 (count preference1) )
    )
  )
)
(:scoring
  10
)
)

(define (game game-id-783) (:domain few-objects-room-v1)
(:setup
  (exists (?e - hexagonal_bin)
    (exists (?g - game_object)
      (forall (?t - blue_pyramid_block)
        (forall (?y - building)
          (game-optional
            (not
              (in_motion ?g ?g)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?g - ball ?z - ball)
      (and
        (preference preference1
          (exists (?t - curved_wooden_ramp ?p - cube_block)
            (then
              (once (and (not (agent_holds ?z) ) ) )
              (hold (object_orientation ?z ?p) )
              (hold (agent_holds rug) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?j - building)
        (at-end
          (agent_holds ?j ?j)
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (> (count preference1:dodgeball) 4 )
      (or
        (or
          (>= (external-forall-maximize (+ (count preference2:beachball) (* 1 (external-forall-maximize (/ (* (count-once-per-objects preference1:red:purple:brown) (- (total-time) (count preference2:dodgeball:basketball) ) )
                      (* (count-once preference1:green) 3 )
                    )
                  )
                  18
                  300
                  (= (count preference1:pink_dodgeball) 3 )
                  (* 5 (not (count preference2:basketball) ) (external-forall-maximize (* (* 40 5 )
                        (* (count-once preference2:triangle_block) )
                      )
                    )
                  )
                )
              )
            )
            1
          )
          (>= (count preference1:purple:orange) (- (* (count preference2) (count preference1:pink) )
            )
          )
        )
        (or
          (>= (total-time) 3 )
          (not
            (>= (external-forall-minimize 10 ) (count-once preference1:pink:hexagonal_bin) )
          )
        )
      )
    )
    (>= (* (total-time) 5 4 30 (count preference2) (count preference1:beachball) 10 (total-score) 2 )
      2
    )
  )
)
(:scoring
  (* 1 5 )
)
)

(define (game game-id-784) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (not
      (and
        (in_motion ?xxx)
        (adjacent ?xxx)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?e - (either dodgeball desktop) ?d - building)
        (then
          (hold (not (and (in_motion ?d) (< (distance ?d desk 3) (distance_side ?d room_center)) ) ) )
          (hold (in ?d) )
          (once (in_motion ?d) )
          (hold (in_motion ?d ?d) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference1:green) (count preference1:tall_cylindrical_block) )
)
(:scoring
  (total-score)
)
)

(define (game game-id-785) (:domain few-objects-room-v1)
(:setup
  (forall (?b - wall ?y - hexagonal_bin)
    (forall (?q - game_object)
      (or
        (game-conserved
          (not
            (not
              (agent_holds rug ?q)
            )
          )
        )
        (and
          (and
            (and
              (and
                (and
                  (exists (?g - hexagonal_bin)
                    (game-optional
                      (not
                        (< (distance agent ?g) 4)
                      )
                    )
                  )
                  (exists (?j - block)
                    (exists (?u - hexagonal_bin ?x - hexagonal_bin)
                      (exists (?g - (either floor side_table) ?t - dodgeball ?c - block ?t - ball)
                        (forall (?r - chair ?k - hexagonal_bin)
                          (game-optional
                            (in ?j ?j)
                          )
                        )
                      )
                    )
                  )
                )
              )
              (game-conserved
                (and
                  (and
                    (in_motion ?q)
                    (adjacent_side floor)
                    (in_motion ?y bed)
                  )
                  (agent_holds desk)
                )
              )
              (and
                (game-optional
                  (and
                    (faces ?q ?q)
                    (and
                      (agent_holds ?y)
                      (agent_holds ?q)
                    )
                  )
                )
              )
            )
          )
          (exists (?i - dodgeball)
            (game-conserved
              (agent_holds ?i ?i)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?e - (either desktop book cd mug))
      (and
        (preference preference1
          (exists (?b - block)
            (then
              (once (same_color ?e) )
              (hold (adjacent ?b) )
              (once (agent_holds ?e ?b) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:brown) (count preference1:red) )
)
(:scoring
  15
)
)

(define (game game-id-786) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (or
      (on ?xxx)
      (not
        (in_motion desk)
      )
    )
  )
)
(:constraints
  (and
    (forall (?l - game_object ?y - drawer ?a - hexagonal_bin)
      (and
        (preference preference1
          (exists (?y - game_object)
            (at-end
              (not
                (agent_holds agent)
              )
            )
          )
        )
        (preference preference2
          (exists (?f - hexagonal_bin ?o - ball)
            (at-end
              (not
                (not
                  (in_motion ?o)
                )
              )
            )
          )
        )
      )
    )
    (preference preference3
      (then
        (hold (not (on ?xxx ?xxx) ) )
        (hold (exists (?k ?v ?g - doggie_bed ?s - hexagonal_bin) (< (distance agent ?s) (distance 8 room_center)) ) )
        (hold (on ?xxx ?xxx) )
      )
    )
  )
)
(:terminal
  (or
    (>= (* (+ (count-once-per-objects preference2) 6 )
        10
      )
      (count preference3:golfball)
    )
    (or
      (>= (count preference2:red) 1 )
    )
  )
)
(:scoring
  1
)
)

(define (game game-id-787) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (in_motion ?xxx ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?w - building ?k - shelf ?o - hexagonal_bin)
        (then
          (once (exists (?k - red_dodgeball ?g - hexagonal_bin) (and (agent_holds desk) (in_motion ?g) (same_object ?o agent) (opposite ?g ?o) (and (object_orientation ?g ?g) (in_motion ?g ?g ?g) ) (not (agent_holds ?o bed) ) ) ) )
          (hold-while (not (agent_holds ?o agent) ) (exists (?k - hexagonal_bin ?m - (either key_chain laptop)) (adjacent agent ?o) ) )
          (once (agent_holds desk) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 9 (count preference1:pink:cube_block) )
    (>= (* (count-increasing-measure preference1:bed) (* 5 5 (count-overlapping preference1:hexagonal_bin) )
        (count-once-per-external-objects preference1:basketball)
      )
      (total-time)
    )
  )
)
(:scoring
  3
)
)

(define (game game-id-788) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (and
        (and
          (agent_holds ?xxx)
          (and
            (agent_holds ?xxx)
            (not
              (and
                (broken ?xxx ?xxx)
                (and
                  (not
                    (and
                      (in_motion ?xxx)
                      (and
                        (adjacent ?xxx bed)
                        (in_motion ?xxx)
                      )
                    )
                  )
                  (not
                    (>= (distance room_center room_center) 1)
                  )
                )
              )
            )
            (in_motion ?xxx)
          )
          (adjacent bed ?xxx)
          (and
            (agent_holds ?xxx ?xxx)
            (equal_z_position ?xxx)
          )
        )
        (in_motion ?xxx ?xxx)
      )
    )
    (not
      (game-optional
        (not
          (in_motion ?xxx blue)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?q - hexagonal_bin)
        (then
          (hold-while (in_motion ?q ?q) (< 10 (distance ?q 1 2)) )
          (once (not (on ?q ?q) ) )
          (hold (and (same_color agent) (in agent ?q) ) )
        )
      )
    )
    (preference preference2
      (then
        (hold (in_motion ?xxx ?xxx) )
        (once (on ?xxx) )
        (once (> 0 (distance ?xxx ?xxx)) )
      )
    )
  )
)
(:terminal
  (>= (total-score) (count preference2:basketball) )
)
(:scoring
  (count preference1:green:dodgeball)
)
)

(define (game game-id-789) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (forall (?t - pillow)
        (exists (?v - hexagonal_bin)
          (game-optional
            (adjacent ?t)
          )
        )
      )
      (and
        (and
          (forall (?i - hexagonal_bin)
            (and
              (and
                (exists (?v - (either pencil cd) ?r - hexagonal_bin)
                  (exists (?v - hexagonal_bin)
                    (and
                      (and
                        (and
                          (game-conserved
                            (agent_holds ?v)
                          )
                          (forall (?p - hexagonal_bin)
                            (and
                              (forall (?h - game_object ?c - chair)
                                (game-optional
                                  (touch ?p ?p)
                                )
                              )
                            )
                          )
                          (not
                            (game-conserved
                              (on ?i rug)
                            )
                          )
                        )
                      )
                      (exists (?o - block ?o - (either cd yellow_cube_block))
                        (not
                          (game-optional
                            (agent_holds ?o)
                          )
                        )
                      )
                      (forall (?l - hexagonal_bin)
                        (game-optional
                          (in ?v)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?y - cylindrical_block ?r - (either bridge_block watch))
        (at-end
          (and
            (in desk ?r)
            (< (distance 0 room_center) (distance ?r ?r 0))
            (and
              (in desk)
              (not
                (not
                  (and
                    (agent_holds ?r ?r)
                    (agent_holds ?r)
                  )
                )
              )
              (not
                (not
                  (not
                    (agent_holds ?r)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (> (* (count preference1:yellow) (+ 10 (+ (external-forall-minimize (* (count-once-per-objects preference1:beachball:hexagonal_bin) (* (>= (count preference1:tan) (count-once-per-objects preference1:basketball) )
                  (count preference1:pyramid_block:basketball)
                )
              )
            )
            (count preference1:dodgeball)
          )
        )
      )
      1
    )
    (>= (count-once-per-objects preference1:beachball) (* 4 15 )
    )
  )
)
(:scoring
  (/
    (* 5 10 )
    (* (* (+ (count preference1:dodgeball:yellow_cube_block) (count preference1:dodgeball) )
        4
      )
      3
      (count preference1)
    )
  )
)
)

(define (game game-id-790) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?w - dodgeball)
      (game-conserved
        (agent_holds agent)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?e - cube_block)
        (at-end
          (adjacent ?e)
        )
      )
    )
    (preference preference2
      (exists (?a - dodgeball)
        (then
          (once (on bed ?a) )
          (once (agent_holds ?a) )
          (once (and (agent_holds ?a ?a) (and (and (exists (?v - cube_block ?g - dodgeball ?q - wall) (not (not (agent_holds ?a) ) ) ) (on ?a) (agent_holds ?a) ) (in door) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:dodgeball:hexagonal_bin) 3 )
)
(:scoring
  (+ 1 (+ (count-shortest preference2:beachball) )
  )
)
)

(define (game game-id-791) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (not
      (in ?xxx ?xxx)
    )
  )
)
(:constraints
  (and
    (forall (?x - (either dodgeball hexagonal_bin))
      (and
        (preference preference1
          (exists (?f - (either tall_cylindrical_block game_object))
            (then
              (once (and (and (< 1 1) ) (agent_holds south_west_corner) (and (in_motion ?f) (and (not (in_motion ?f) ) (and (on ?x) (in_motion ?x) ) (agent_holds ?f desk) ) ) ) )
              (once (agent_holds ?x) )
            )
          )
        )
      )
    )
    (forall (?i - (either cube_block key_chain teddy_bear) ?j - cube_block)
      (and
        (preference preference2
          (exists (?d - wall ?g - wall)
            (then
              (once (in ?g) )
              (hold (in_motion ?g ?j) )
              (hold (in_motion ?j ?g) )
            )
          )
        )
        (preference preference3
          (exists (?g ?d - ball)
            (then
              (hold (forall (?u - (either alarm_clock dodgeball) ?v - hexagonal_bin) (agent_holds ?g ?v) ) )
              (hold (on ?d ?d) )
              (hold (agent_holds bed ?j ?j) )
            )
          )
        )
      )
    )
    (preference preference4
      (exists (?h - hexagonal_bin)
        (then
          (hold (on ?h) )
          (once (agent_crouches ?h ?h) )
          (once (and (faces ?h ?h) (not (< (distance_side ?h ?h) 1) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 180 2 )
)
(:scoring
  (count-longest preference3:purple)
)
)

(define (game game-id-792) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (and
        (game-conserved
          (in_motion ?xxx ?xxx)
        )
        (and
          (and
            (and
              (game-conserved
                (agent_holds ?xxx ?xxx)
              )
            )
            (game-optional
              (agent_holds ?xxx ?xxx ?xxx)
            )
          )
          (exists (?d - cylindrical_block ?s - game_object)
            (and
              (or
                (game-optional
                  (in ?s)
                )
                (exists (?l - blue_pyramid_block)
                  (and
                    (exists (?d - cube_block)
                      (and
                        (game-conserved
                          (and
                            (and
                              (on ?d)
                              (in_motion ?d)
                            )
                            (in_motion ?d)
                          )
                        )
                        (forall (?n - teddy_bear)
                          (game-optional
                            (same_color ?s ?d)
                          )
                        )
                      )
                    )
                  )
                )
                (and
                  (exists (?o - wall ?g - game_object)
                    (game-optional
                      (and
                        (and
                          (in agent desk)
                          (and
                            (in_motion ?g)
                            (and
                              (same_type bed)
                              (rug_color_under ?s ?s)
                            )
                            (in_motion ?g ?g)
                            (and
                              (agent_holds agent ?g)
                              (on ?s ?s)
                            )
                          )
                        )
                        (in_motion ?s)
                      )
                    )
                  )
                )
              )
              (forall (?p - color)
                (and
                  (game-conserved
                    (not
                      (on ?p)
                    )
                  )
                )
              )
              (game-conserved
                (and
                  (on ?s)
                  (not
                    (and
                      (not
                        (and
                          (on desk ?s)
                          (agent_holds pink_dodgeball)
                          (agent_holds ?s ?s)
                          (in ?s ?s)
                        )
                      )
                      (or
                        (> (distance agent) (distance ?s ?s))
                      )
                      (agent_holds ?s)
                      (and
                        (and
                          (agent_holds ?s)
                          (agent_holds ?s)
                          (in_motion desk)
                        )
                        (not
                          (and
                            (and
                              (in ?s)
                              (adjacent ?s)
                              (object_orientation ?s ?s)
                              (or
                                (not
                                  (in_motion desk)
                                )
                                (and
                                  (in_motion ?s)
                                  (in_motion ?s)
                                )
                              )
                              (on ?s)
                              (and
                                (and
                                  (and
                                    (and
                                      (> (distance 5 room_center) 1)
                                      (and
                                        (rug_color_under ?s ?s ?s)
                                        (is_setup_object brown ?s)
                                      )
                                    )
                                    (in_motion ?s agent)
                                  )
                                  (< 6 (distance 2 8))
                                  (adjacent ?s)
                                  (< 6 (distance ?s ?s))
                                  (and
                                    (exists (?x - hexagonal_bin)
                                      (and
                                        (agent_holds ?x)
                                        (not
                                          (not
                                            (adjacent ?s ?s)
                                          )
                                        )
                                      )
                                    )
                                    (not
                                      (in_motion ?s)
                                    )
                                    (in ?s)
                                    (in_motion bridge_block)
                                  )
                                  (in_motion ?s)
                                  (agent_holds ?s)
                                  (in_motion ?s ?s)
                                  (in rug ?s)
                                  (in ?s)
                                )
                                (in_motion agent)
                                (and
                                  (not
                                    (touch ?s)
                                  )
                                  (and
                                    (touch ?s desk)
                                    (not
                                      (and
                                        (in_motion ?s)
                                        (not
                                          (not
                                            (agent_holds ?s)
                                          )
                                        )
                                      )
                                    )
                                  )
                                  (not
                                    (in_motion ?s)
                                  )
                                )
                              )
                            )
                            (and
                              (and
                                (and
                                  (and
                                    (object_orientation ?s)
                                    (agent_holds ?s)
                                  )
                                  (in_motion ?s ?s)
                                )
                                (not
                                  (on ?s upside_down)
                                )
                              )
                              (and
                                (not
                                  (not
                                    (agent_holds ?s desk)
                                  )
                                )
                                (on ?s)
                              )
                            )
                          )
                        )
                        (equal_x_position ?s ?s)
                      )
                    )
                  )
                  (and
                    (not
                      (exists (?w - pyramid_block)
                        (agent_holds ?w ?w)
                      )
                    )
                    (and
                      (in_motion ?s)
                      (not
                        (not
                          (in_motion ?s)
                        )
                      )
                    )
                    (< (distance ) 1)
                  )
                  (in_motion ?s ?s)
                )
              )
            )
          )
        )
        (forall (?r - game_object)
          (game-conserved
            (on ?r ?r)
          )
        )
      )
    )
    (game-optional
      (adjacent ?xxx)
    )
    (and
      (game-conserved
        (agent_holds ?xxx ?xxx)
      )
      (game-conserved
        (and
          (in_motion ?xxx ?xxx)
          (and
            (in_motion ?xxx ?xxx)
            (exists (?i - hexagonal_bin)
              (in_motion ?i ?i)
            )
          )
        )
      )
      (forall (?l - (either red beachball dodgeball main_light_switch bridge_block pyramid_block cube_block))
        (forall (?r - cube_block)
          (game-conserved
            (agent_holds ?l)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?c - cube_block ?y ?x - hexagonal_bin)
        (then
          (once (< 0.5 (x_position ?x ?y)) )
          (once (not (agent_holds ?y) ) )
          (once (< (distance room_center ?y) 1) )
        )
      )
    )
    (preference preference2
      (exists (?n - (either key_chain desktop desktop))
        (then
          (hold-for 2 (not (on ?n ?n) ) )
          (once (exists (?u - (either cube_block cube_block dodgeball)) (in ?u ?u) ) )
          (hold (in_motion ?n ?n) )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (count preference2:blue_pyramid_block) )
)
(:scoring
  8
)
)

(define (game game-id-793) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?y - hexagonal_bin)
      (forall (?n - block)
        (and
          (forall (?s - (either tall_cylindrical_block triangular_ramp triangle_block) ?w - (either alarm_clock chair bed) ?w - shelf ?r - hexagonal_bin ?p ?a - dodgeball)
            (forall (?g - dodgeball)
              (and
                (and
                  (game-conserved
                    (in_motion ?p ?g)
                  )
                  (game-optional
                    (in ?p)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?e - ball)
      (and
        (preference preference1
          (exists (?u - hexagonal_bin ?f - cube_block)
            (then
              (once (in ?e ?e) )
              (hold (and (not (object_orientation ?e) ) (on ?e) (agent_holds rug ?f) ) )
              (once (> (distance room_center 8) 1) )
            )
          )
        )
        (preference preference2
          (exists (?p - game_object)
            (then
              (hold (not (agent_holds ?p) ) )
              (once (on ?p) )
              (once (exists (?a - cube_block) (and (forall (?q ?c - beachball) (and (agent_holds ?a) (in_motion ?e) (agent_holds ?q) ) ) (agent_holds ?e) ) ) )
            )
          )
        )
      )
    )
    (forall (?e - beachball ?e - building)
      (and
        (preference preference3
          (exists (?w - dodgeball)
            (then
              (once (and (is_setup_object ?w) (and (agent_holds ?e) ) ) )
              (once (on agent rug) )
              (once (in_motion rug ?w) )
            )
          )
        )
      )
    )
    (preference preference4
      (exists (?b - bridge_block ?l - hexagonal_bin)
        (then
          (once (agent_holds ?l) )
          (once (in_motion ?l ?l) )
          (once (not (agent_holds ?l ?l) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (and (count preference2:bed) (total-score) ) (* (external-forall-maximize 5 ) (count preference2:yellow_cube_block) (count preference4:dodgeball) )
    )
  )
)
(:scoring
  (total-score)
)
)

(define (game game-id-794) (:domain medium-objects-room-v1)
(:setup
  (forall (?l - (either lamp yellow cellphone) ?b - hexagonal_bin)
    (or
      (or
        (exists (?r - beachball ?k - hexagonal_bin ?v - block)
          (game-conserved
            (touch ?b)
          )
        )
        (game-conserved
          (and
            (not
              (not
                (adjacent ?b)
              )
            )
            (between ?b)
          )
        )
        (forall (?c - dodgeball ?g - (either hexagonal_bin key_chain bridge_block))
          (game-conserved
            (not
              (< (distance 9 ?b) 2)
            )
          )
        )
      )
      (and
        (or
          (and
            (game-optional
              (< 1 (distance ?b))
            )
            (exists (?m - cube_block ?i - hexagonal_bin)
              (exists (?h - chair)
                (exists (?m - dodgeball)
                  (and
                    (exists (?g - chair)
                      (and
                        (game-optional
                          (not
                            (or
                              (agent_holds ?b ?g)
                            )
                          )
                        )
                      )
                    )
                    (game-conserved
                      (in_motion ?h ?i)
                    )
                  )
                )
              )
            )
          )
          (and
            (forall (?d - ball)
              (game-conserved
                (= (distance room_center agent) (distance 0 ?d))
              )
            )
            (and
              (and
                (forall (?v - hexagonal_bin)
                  (and
                    (exists (?g - game_object)
                      (game-conserved
                        (agent_holds ?g ?b)
                      )
                    )
                    (game-conserved
                      (exists (?k - ball ?d - building)
                        (and
                          (agent_holds ?b)
                          (agent_holds ?b)
                        )
                      )
                    )
                  )
                )
                (game-conserved
                  (and
                    (and
                      (adjacent ?b ?b)
                      (agent_holds ?b ?b)
                    )
                    (not
                      (not
                        (agent_holds rug)
                      )
                    )
                  )
                )
                (and
                  (game-optional
                    (or
                      (above ?b ?b)
                      (touch ?b)
                      (agent_holds ?b)
                      (< 3 8)
                    )
                  )
                  (forall (?u - dodgeball)
                    (not
                      (game-conserved
                        (not
                          (is_setup_object ?b ?u)
                        )
                      )
                    )
                  )
                )
              )
              (game-conserved
                (exists (?d - ball)
                  (not
                    (on upright)
                  )
                )
              )
            )
          )
          (exists (?i ?p - hexagonal_bin ?m - game_object)
            (forall (?n - doggie_bed ?l - building)
              (and
                (game-conserved
                  (adjacent bed ?b)
                )
                (game-conserved
                  (exists (?u - building)
                    (and
                      (agent_holds agent ?b)
                      (in_motion blinds ?m)
                    )
                  )
                )
                (and
                  (game-conserved
                    (and
                      (not
                        (in_motion right)
                      )
                      (exists (?h ?k - curved_wooden_ramp)
                        (in rug)
                      )
                    )
                  )
                  (forall (?p - dodgeball)
                    (not
                      (game-optional
                        (not
                          (not
                            (agent_holds ?l floor)
                          )
                        )
                      )
                    )
                  )
                  (game-optional
                    (in_motion ?b)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?y - red_dodgeball)
        (then
          (hold (not (in_motion ?y) ) )
          (once (in_motion ?y) )
          (once (not (in_motion rug) ) )
        )
      )
    )
    (preference preference2
      (then
        (once (in_motion ?xxx ?xxx) )
        (hold-while (not (in_motion ?xxx ?xxx) ) (exists (?l - (either main_light_switch dodgeball alarm_clock)) (and (> 9 2) (not (agent_holds agent) ) ) ) )
        (once (not (not (in_motion ?xxx) ) ) )
      )
    )
    (preference preference3
      (exists (?r - ball)
        (at-end
          (faces ?r ?r)
        )
      )
    )
  )
)
(:terminal
  (>= (* 2 (count-longest preference3:yellow_pyramid_block:blue_cube_block:pink) )
    9
  )
)
(:scoring
  (= (- (+ 7 (* 10 (- (count-once-per-objects preference3:beachball:beachball) (count preference1:basketball) ) )
      )
    )
    (count-once-per-objects preference3:purple)
  )
)
)

(define (game game-id-795) (:domain few-objects-room-v1)
(:setup
  (forall (?e - teddy_bear)
    (forall (?u - beachball ?w ?g - hexagonal_bin)
      (game-conserved
        (agent_holds ?g ?w)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?f - hexagonal_bin)
        (then
          (once (and (game_over block) (agent_holds ?f) ) )
          (hold-for 0 (agent_holds ?f ?f) )
          (hold-to-end (and (in_motion ?f ?f) (in_motion ?f ?f) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:basketball) 4 )
)
(:scoring
  (count-once-per-objects preference1:dodgeball:blue_pyramid_block)
)
)

(define (game game-id-796) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (exists (?q - golfball)
        (exists (?r - game_object)
          (forall (?d - game_object ?m - wall)
            (exists (?v - chair)
              (exists (?d - (either cylindrical_block red bridge_block) ?c - cube_block)
                (game-optional
                  (not
                    (and
                      (not
                        (on ?c)
                      )
                      (and
                        (in_motion ?q)
                        (and
                          (>= 4 (distance room_center 8))
                          (not
                            (and
                              (and
                                (and
                                  (not
                                    (touch ?r ?q)
                                  )
                                  (agent_holds ?r)
                                )
                                (touch ?v)
                              )
                              (faces ?q pink)
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?f ?i ?s - red_dodgeball)
        (then
          (once (agent_holds ?f) )
          (once (agent_holds ?f) )
          (hold (and (in_motion ?f) (and (in_motion ?s) (agent_holds side_table ?s) ) ) )
          (once (in_motion ?i) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:golfball:yellow_pyramid_block) (count-once-per-objects preference1:green) )
)
(:scoring
  1
)
)

(define (game game-id-797) (:domain many-objects-room-v1)
(:setup
  (forall (?k - (either main_light_switch))
    (game-conserved
      (< 1 2)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?e - (either wall top_drawer golfball dodgeball) ?z - (either floor dodgeball watch))
        (then
          (hold-to-end (same_color ?z ?z) )
          (once (in_motion ?z) )
          (hold (not (in_motion ?z) ) )
        )
      )
    )
  )
)
(:terminal
  (<= (count preference1:dodgeball) (* (+ 5 15 )
      (* 5 (count-measure preference1:yellow) (* 10 (+ (<= (total-time) (* (count preference1:triangle_block:red) (* (* (count preference1:beachball) 0.5 (- (* 20 (* 2 9 )
                      )
                    )
                  )
                  (* (count-once-per-objects preference1:doggie_bed:blue_dodgeball) 4 )
                )
              )
            )
            5
          )
        )
      )
    )
  )
)
(:scoring
  (count preference1:dodgeball)
)
)

(define (game game-id-798) (:domain few-objects-room-v1)
(:setup
  (exists (?i - pillow)
    (game-conserved
      (agent_holds ?i)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (then
        (once (in_motion bed) )
        (once (agent_holds ?xxx) )
        (hold-while (not (not (adjacent bed ?xxx) ) ) (and (not (< 1 (distance ?xxx ?xxx)) ) (touch agent ?xxx) ) )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference1:yellow:yellow) (* (* (* (count-once preference1) 5 )
        (count-once-per-objects preference1:green)
      )
      (total-time)
    )
  )
)
(:scoring
  (* 20 9 )
)
)

(define (game game-id-799) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?i - flat_block)
      (forall (?p ?j - chair)
        (exists (?t - cube_block ?s - dodgeball)
          (and
            (exists (?q - (either basketball pen))
              (and
                (forall (?e - block ?h - (either yellow_cube_block ball))
                  (forall (?y - ball)
                    (exists (?u - bridge_block)
                      (exists (?o - ball ?o - hexagonal_bin ?k - curved_wooden_ramp)
                        (game-conserved
                          (and
                            (in_motion ?y)
                            (and
                              (and
                                (< (distance ?s ?k) (distance ?j desk))
                                (in ?s ?y)
                              )
                              (on ?q)
                            )
                          )
                        )
                      )
                    )
                  )
                )
                (game-conserved
                  (not
                    (agent_holds ?q)
                  )
                )
              )
            )
            (game-conserved
              (in_motion brown ?s)
            )
            (game-conserved
              (adjacent ?s)
            )
          )
        )
      )
    )
    (exists (?z - wall ?d - building)
      (forall (?m - curved_wooden_ramp ?o - hexagonal_bin)
        (and
          (game-optional
            (in_motion rug)
          )
        )
      )
    )
    (game-conserved
      (agent_holds ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?j - dodgeball ?t - hexagonal_bin)
        (then
          (once (not (and (on ?t) (agent_holds ?t) ) ) )
          (once (and (touch bed) (or (on ?t ?t) ) ) )
          (hold (and (on rug ?t) (not (in_motion ?t bed) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference1:blue_dodgeball:pink_dodgeball) (count-shortest preference1:basketball) )
)
(:scoring
  (or
    7
    2
    7
  )
)
)

(define (game game-id-800) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?a - (either cellphone game_object yellow_cube_block lamp))
      (and
        (and
          (game-optional
            (agent_holds ?a ?a)
          )
          (and
            (and
              (game-optional
                (and
                  (and
                    (and
                      (in_motion blue)
                      (and
                        (game_over ?a ?a)
                        (and
                          (in_motion rug)
                          (not
                            (adjacent ?a)
                          )
                          (adjacent ?a ?a)
                          (exists (?l - block)
                            (on ?a)
                          )
                        )
                      )
                    )
                    (agent_holds ?a)
                  )
                  (in_motion top_shelf ?a)
                )
              )
              (and
                (forall (?b - curved_wooden_ramp)
                  (game-optional
                    (not
                      (in_motion ?b ?b)
                    )
                  )
                )
              )
            )
          )
        )
        (game-conserved
          (and
            (is_setup_object ?a ?a)
            (not
              (and
                (touch ?a)
              )
            )
            (forall (?n - pillow ?x - hexagonal_bin)
              (same_object ?x)
            )
            (not
              (not
                (< (distance ?a ?a) 0)
              )
            )
            (not
              (in_motion agent ?a)
            )
          )
        )
        (game-conserved
          (on ?a)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?g - dodgeball ?z - hexagonal_bin)
        (then
          (hold (agent_holds ?z ?z) )
          (hold (= (distance desk ?z) (distance agent room_center)) )
          (hold (and (not (on agent) ) (and (in_motion ?z ?z) (in_motion ?z) ) ) )
        )
      )
    )
    (preference preference2
      (exists (?y - block ?r ?k - dodgeball)
        (then
          (hold-for 8 (opposite ?k) )
          (once (in_motion floor bed) )
          (once (agent_holds ?k ?r) )
        )
      )
    )
  )
)
(:terminal
  (<= 3 (= (+ (count preference1:dodgeball) 3 )
      7
    )
  )
)
(:scoring
  2
)
)

(define (game game-id-801) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (not
      (faces ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?n - block ?l - ball)
        (then
          (once (touch ?l ?l) )
        )
      )
    )
  )
)
(:terminal
  (> (* (* 9 3 )
      (external-forall-maximize
        (* (count preference1:green:yellow) (count preference1:basketball) )
      )
    )
    (+ (count preference1:blue_cube_block) (count preference1:beachball) )
  )
)
(:scoring
  (+ (* 5 (- (external-forall-maximize (count preference1:yellow:dodgeball) ) )
    )
    (count preference1:yellow)
  )
)
)

(define (game game-id-802) (:domain many-objects-room-v1)
(:setup
  (exists (?u - (either cylindrical_block golfball tall_cylindrical_block))
    (and
      (and
        (game-optional
          (agent_holds ?u)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o - dodgeball)
      (and
        (preference preference1
          (then
            (once (in ?o) )
            (hold (in_motion ?o) )
            (once (or (not (on ?o) ) (in ?o) ) )
          )
        )
      )
    )
    (preference preference2
      (exists (?a - color ?a - hexagonal_bin)
        (then
          (hold (in_motion bridge_block ?a) )
        )
      )
    )
  )
)
(:terminal
  (<= (count-once-per-objects preference2:basketball) (= 7 )
  )
)
(:scoring
  (count preference2:yellow:beachball)
)
)

(define (game game-id-803) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?a ?r - ball)
      (game-conserved
        (on bed ?a)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?z - dodgeball)
        (at-end
          (agent_holds ?z)
        )
      )
    )
  )
)
(:terminal
  (> 8 (count-increasing-measure preference1:dodgeball) )
)
(:scoring
  5
)
)

(define (game game-id-804) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?r - watch ?s - doggie_bed)
      (and
        (forall (?o - curved_wooden_ramp)
          (forall (?u - hexagonal_bin ?l - triangular_ramp)
            (forall (?z - (either golfball flat_block))
              (game-conserved
                (agent_holds ?l)
              )
            )
          )
        )
      )
    )
    (and
      (and
        (game-conserved
          (< (distance ?xxx) 10)
        )
        (game-optional
          (in_motion bed top_drawer)
        )
        (exists (?y - (either main_light_switch cylindrical_block cellphone) ?p - building)
          (game-conserved
            (not
              (not
                (agent_holds ?p)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?w - dodgeball)
        (then
          (once (and (and (not (and (not (between ?w) ) (< (distance room_center ?w) 1) ) ) (not (exists (?p - curved_wooden_ramp) (forall (?s - doggie_bed ?h ?d - building) (and (not (in_motion ?d) ) (not (and (adjacent ?p) (not (exists (?z - building) (in_motion bed) ) ) ) ) ) ) ) ) ) (agent_holds blue ?w) ) )
          (once (< 9 (distance 9 ?w)) )
          (hold (on ?w) )
        )
      )
    )
    (preference preference2
      (exists (?y ?m - ball)
        (then
          (hold (not (on ?y bed) ) )
          (once (on ?m) )
          (any)
        )
      )
    )
  )
)
(:terminal
  (>= (count-unique-positions preference1:orange) (count preference1:dodgeball) )
)
(:scoring
  (* (count-once-per-objects preference1:dodgeball:yellow:basketball) (- 0 )
  )
)
)

(define (game game-id-805) (:domain medium-objects-room-v1)
(:setup
  (forall (?u - building)
    (exists (?f - teddy_bear ?p - game_object)
      (game-optional
        (on ?u)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?m - chair)
        (then
          (hold (not (not (and (in ?m rug) (in_motion ?m) ) ) ) )
          (hold (and (and (not (agent_holds ?m) ) (agent_holds ?m ?m) ) (in_motion ?m ?m) ) )
          (once-measure (in_motion ?m ?m ?m) (distance ?m ?m) )
        )
      )
    )
    (forall (?v - game_object)
      (and
        (preference preference2
          (exists (?m - shelf)
            (then
              (once (agent_holds ?v ?m) )
              (once (not (and (in_motion ?m) (and (agent_holds ?m) (not (agent_holds desktop) ) ) ) ) )
              (once (and (in_motion ?m) ) )
            )
          )
        )
        (preference preference3
          (exists (?e - (either cellphone red) ?n - beachball)
            (then
              (once (and (not (not (in_motion ?v ?n) ) ) (in_motion ?n ?v) (on front) ) )
              (hold (not (agent_holds ?v) ) )
              (once (agent_holds ?n ?v) )
              (once (= (distance ?v 4) 1) )
            )
          )
        )
      )
    )
    (preference preference4
      (exists (?c - dodgeball)
        (then
          (once (in ?c top_drawer) )
          (hold (in_motion ?c ?c bed) )
          (hold (and (< (distance back door) 1) (same_color ?c) ) )
        )
      )
    )
    (preference preference5
      (exists (?i - curved_wooden_ramp)
        (then
          (hold-while (and (game_start ?i) (and (and (in_motion agent) (touch ?i) (agent_holds ?i) ) (object_orientation ?i) ) ) (and (and (same_type ?i) (on ?i) ) (in ?i) (adjacent ?i ?i) (adjacent ?i ?i) (not (not (in_motion ?i ?i) ) ) (not (agent_holds ?i ?i) ) (agent_holds desk) ) )
          (once (or (not (in_motion ?i ?i) ) (same_color ?i ?i) ) )
          (hold-while (not (not (agent_holds ?i ?i) ) ) (adjacent agent) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 4 (count-same-positions preference2:wall:doggie_bed) )
  )
)
(:scoring
  (count-once-per-objects preference3:blue_dodgeball)
)
)

(define (game game-id-806) (:domain few-objects-room-v1)
(:setup
  (forall (?n - (either curved_wooden_ramp pen) ?q - building ?u - ball)
    (and
      (and
        (forall (?y ?l - hexagonal_bin ?s - hexagonal_bin)
          (and
            (game-conserved
              (or
                (and
                  (in_motion agent main_light_switch)
                  (not
                    (agent_holds ?s ?u)
                  )
                  (and
                    (not
                      (in_motion ?s)
                    )
                    (on ?u)
                    (or
                      (game_start ?u)
                      (not
                        (object_orientation ?s ?s)
                      )
                      (and
                        (not
                          (agent_holds ?u)
                        )
                        (and
                          (and
                            (< 0 3)
                            (and
                              (agent_holds ?s)
                              (not
                                (adjacent ?s ?s)
                              )
                            )
                          )
                          (or
                            (in ?s)
                            (on ?s agent)
                          )
                        )
                        (not
                          (and
                            (not
                              (in ?u)
                            )
                            (in_motion desk)
                          )
                        )
                      )
                    )
                  )
                )
                (agent_holds pink_dodgeball ?s)
                (in_motion ?u ?u)
              )
            )
            (exists (?i - building)
              (game-conserved
                (agent_holds desk)
              )
            )
          )
        )
        (exists (?a - building ?q - ball)
          (game-conserved
            (or
              (not
                (and
                  (touch ?q)
                  (not
                    (in_motion pink)
                  )
                )
              )
              (and
                (< (distance ?u ?q) (distance ?u ?u))
                (touch ?u)
              )
            )
          )
        )
      )
      (exists (?j - game_object)
        (exists (?w - blinds)
          (game-conserved
            (touch ?w)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?s - block)
      (and
        (preference preference1
          (exists (?m - cube_block ?l - game_object)
            (then
              (once (adjacent ?l) )
              (once (in_motion ?s ?s) )
              (once (not (or (not (< (x_position ?l agent) (distance room_center ?l)) ) (and (in_motion ?l) (exists (?o - tall_cylindrical_block ?q - ball) (>= (distance ) 8) ) ) (> (distance ?s agent) 1) ) ) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?w - dodgeball ?p - hexagonal_bin)
        (then
          (once (and (adjacent ?p ?p) (and (not (not (object_orientation ?p ?p) ) ) (< (distance ) 7) ) (and (and (in ?p) (on ?p ?p) ) (on ?p) ) ) )
          (once (in ?p agent) )
          (once (in ?p) )
        )
      )
    )
  )
)
(:terminal
  (> (count preference2:dodgeball) 2 )
)
(:scoring
  (* 3 (count-once-per-objects preference2:dodgeball) )
)
)

(define (game game-id-807) (:domain few-objects-room-v1)
(:setup
  (exists (?r - dodgeball)
    (and
      (exists (?c - game_object)
        (exists (?p - ball)
          (exists (?n ?z - triangular_ramp)
            (game-conserved
              (on ?c ?z)
            )
          )
        )
      )
      (game-optional
        (same_type ?r)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?s - dodgeball ?q - game_object)
        (then
          (hold (> 4 (distance 2 ?q)) )
          (once (agent_holds color ?q) )
          (once (not (not (in ?q) ) ) )
        )
      )
    )
    (preference preference2
      (exists (?e - (either cube_block yellow_cube_block floor pencil cd cylindrical_block dodgeball))
        (then
          (once (agent_holds ?e ?e) )
        )
      )
    )
    (preference preference3
      (exists (?c - curved_wooden_ramp ?f - hexagonal_bin ?z - desk_shelf)
        (then
          (hold (exists (?b - hexagonal_bin ?r - teddy_bear) (agent_holds ?r) ) )
        )
      )
    )
    (preference preference4
      (exists (?x - block ?c - building ?v - doggie_bed ?t - building ?j - block)
        (then
          (once (adjacent_side ?j) )
          (hold (same_color pink) )
          (once (and (adjacent ?j) (in_motion ?j ?j) ) )
          (hold (and (and (not (>= 1 1) ) (not (and (exists (?y - tall_cylindrical_block) (in_motion rug ?y) ) (not (adjacent ?j) ) ) ) (not (and (object_orientation ?j ?j) ) ) ) (not (not (in_motion ?j) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count-once preference4:beachball) (count preference2:pink) )
    10
  )
)
(:scoring
  (* 1 (+ (+ (* (count-once-per-objects preference2:green) (external-forall-maximize 2 ) )
        (+ 10 3 )
      )
      (count preference2:dodgeball:doggie_bed)
    )
  )
)
)

(define (game game-id-808) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?y - cube_block)
        (at-end
          (or
            (on ?y)
            (agent_holds ?y)
          )
        )
      )
    )
    (forall (?s - doggie_bed ?m - building)
      (and
        (preference preference2
          (exists (?u - bridge_block ?a - yellow_cube_block)
            (then
              (once (not (< (distance_side ?a side_table) (distance ?m agent front_left_corner)) ) )
              (once (in_motion ?a) )
              (hold (not (on agent agent) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (> (count-once-per-objects preference2:green) (count-once-per-objects preference2:basketball) )
    (or
      (= (= (- (count preference1:red) 3 ) (* 1 2 )
        )
        (count preference2:beachball)
      )
      (not
        (and
          (> (or (count-measure preference1) (* 7 (* 10 (- (count-once-per-objects preference2:golfball) )
                )
              )
            )
            (count preference1)
          )
          (and
            (>= (count preference2:blue_cube_block) (* (* 10 1 )
                (count preference2:dodgeball)
              )
            )
            (>= (count-overlapping preference1:pink_dodgeball) 40 )
          )
        )
      )
    )
  )
)
(:scoring
  4
)
)

(define (game game-id-809) (:domain many-objects-room-v1)
(:setup
  (forall (?p - game_object)
    (game-optional
      (exists (?v - cube_block)
        (touch ?v)
      )
    )
  )
)
(:constraints
  (and
    (forall (?y ?s - teddy_bear)
      (and
        (preference preference1
          (exists (?j - ball)
            (then
              (once (< 1 0.5) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= (count-once-per-objects preference1:pink) (count-once-per-external-objects preference1:beachball) )
)
(:scoring
  (count-once-per-objects preference1:golfball:yellow)
)
)

(define (game game-id-810) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (in bed)
  )
)
(:constraints
  (and
    (preference preference1
      (then
        (once (not (agent_holds ?xxx) ) )
      )
    )
  )
)
(:terminal
  (>= (* (* 2 (external-forall-maximize (count-once-per-objects preference1:yellow) ) )
      20
    )
    (* (* 2 5 )
      (* (count-same-positions preference1:pyramid_block) (count-total preference1:pink) )
    )
  )
)
(:scoring
  (+ 1 6 )
)
)

(define (game game-id-811) (:domain medium-objects-room-v1)
(:setup
  (and
    (or
      (and
        (game-conserved
          (on ?xxx)
        )
        (exists (?t - chair)
          (and
            (exists (?w - (either dodgeball laptop))
              (exists (?h - (either pink cd) ?a - hexagonal_bin)
                (and
                  (exists (?f - ball ?c - dodgeball)
                    (game-conserved
                      (and
                        (agent_holds ?a ?a)
                        (not
                          (not
                            (not
                              (adjacent ?t ?a)
                            )
                          )
                        )
                      )
                    )
                  )
                  (game-conserved
                    (on ?a)
                  )
                )
              )
            )
          )
        )
      )
    )
    (exists (?f - ball)
      (exists (?j - cube_block)
        (and
          (and
            (and
              (exists (?o - (either red basketball))
                (forall (?b - bridge_block ?p - (either cellphone) ?m - wall ?d - (either pen laptop cd) ?z - hexagonal_bin)
                  (and
                    (and
                      (exists (?n - hexagonal_bin)
                        (and
                          (game-optional
                            (in_motion ?n)
                          )
                          (and
                            (game-conserved
                              (in_motion ?j)
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
    (game-conserved
      (agent_holds pillow)
    )
  )
)
(:constraints
  (and
    (forall (?h - (either beachball dodgeball))
      (and
        (preference preference1
          (exists (?a - (either cube_block) ?r - ball ?p - dodgeball)
            (then
              (once (and (not (same_type ?h) ) (and (agent_holds ?h) (and (< 1 2) (agent_holds ?p) ) (in_motion desk ?p) ) ) )
              (once (and (adjacent ?h ?p) (and (in_motion ?p ?p) (or (in_motion ?h) (above front) ) ) ) )
              (once (not (not (and (or (not (in_motion bed) ) (not (agent_holds ?p ?p) ) ) (in ?h ?h ?h) ) ) ) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?p - cube_block ?e - ball)
        (then
          (hold (not (agent_holds ?e ?e) ) )
          (once (forall (?h - color ?j - building ?b - cube_block) (in_motion ?e bed) ) )
          (once (not (agent_holds ?e ?e) ) )
        )
      )
    )
    (preference preference3
      (at-end
        (in_motion ?xxx ?xxx)
      )
    )
  )
)
(:terminal
  (>= (count preference3:blue) (count preference3:red:basketball) )
)
(:scoring
  5
)
)

(define (game game-id-812) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?m - hexagonal_bin)
      (and
        (and
          (exists (?r - (either alarm_clock cube_block triangle_block tall_cylindrical_block))
            (game-conserved
              (same_object rug)
            )
          )
        )
        (game-optional
          (in_motion ?m)
        )
        (and
          (game-conserved
            (agent_holds ?m ?m)
          )
          (exists (?a - triangular_ramp ?x - hexagonal_bin ?x - dodgeball)
            (and
              (and
                (game-conserved
                  (and
                    (and
                      (or
                        (in ?x ?m)
                        (not
                          (not
                            (agent_holds ?x)
                          )
                        )
                        (is_setup_object ?m ?m)
                      )
                    )
                    (or
                      (and
                        (exists (?d - wall)
                          (same_type ?d)
                        )
                        (in ?x ?x)
                      )
                      (agent_holds ?x bed)
                    )
                  )
                )
                (game-optional
                  (or
                    (in ?m)
                  )
                )
              )
              (game-conserved
                (in_motion ?x)
              )
              (exists (?r - hexagonal_bin ?k - chair)
                (game-conserved
                  (on ?x ?m)
                )
              )
            )
          )
          (and
            (not
              (and
                (game-conserved
                  (not
                    (in_motion ?m ?m)
                  )
                )
                (exists (?e - doggie_bed)
                  (exists (?k - hexagonal_bin ?v - dodgeball ?r - game_object ?d - hexagonal_bin)
                    (forall (?i - blue_cube_block)
                      (game-conserved
                        (object_orientation ?m)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?k - dodgeball ?i - dodgeball ?e - hexagonal_bin)
        (at-end
          (and
            (not
              (adjacent ?e)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (or
        (and
          (or
            (>= (count-once-per-objects preference1:blue_dodgeball) (* 15 (total-score) )
            )
            (or
              (>= (* (* (count-measure preference1:dodgeball) (count preference1:pink) )
                  (= 100 10 )
                )
                0.7
              )
            )
          )
          (or
            (or
              (>= (- (external-forall-maximize (count preference1:dodgeball) ) )
                (count-unique-positions preference1:pink)
              )
              (>= (count preference1:golfball) 2 )
            )
            (or
              (or
                (= (count-once-per-objects preference1:basketball:dodgeball) (count preference1:yellow_pyramid_block) )
                (= (count preference1:pink_dodgeball) (+ (count preference1:hexagonal_bin) (count-overlapping preference1:purple) )
                )
              )
              (> 1 (count-once-per-objects preference1:dodgeball) )
              (>= (* 50 2 0 (total-time) (- (total-score) )
                  (count-once-per-objects preference1:pink_dodgeball:yellow)
                )
                (count-once preference1:orange)
              )
            )
          )
          (and
            (>= (count-same-positions preference1:golfball) (* 5 25 )
            )
            (< (count-overlapping preference1:pink) (* 1 (count preference1:red:hexagonal_bin) (count preference1:blue_dodgeball) )
            )
            (and
              (<= (count-once-per-objects preference1:golfball) (* (+ (count-overlapping preference1:alarm_clock) (count preference1:orange:yellow_pyramid_block) )
                  (count-once-per-objects preference1:dodgeball)
                  (+ 2 (* 0 (count-once-per-objects preference1:green:blue_dodgeball) )
                  )
                  (- (- 5 )
                  )
                  (count-longest preference1)
                  (count-once preference1:dodgeball:dodgeball)
                  (count preference1:yellow:pink)
                  (* (+ (count-once-per-objects preference1:basketball:cube_block) (count-same-positions preference1:golfball) )
                    (* 18 4 )
                  )
                  (* (* (count preference1:dodgeball) (* (external-forall-maximize 3 ) 20 )
                    )
                    (* 6 (count preference1:basketball) )
                  )
                  (count preference1:pink_dodgeball)
                  (count preference1:green)
                  (/
                    (count-once-per-objects preference1:dodgeball)
                    (- 3 )
                  )
                )
              )
              (>= 3 5 )
              (>= 30 (count-once-per-objects preference1:pink:doggie_bed) )
            )
          )
        )
        (= (count-once-per-objects preference1:white:beachball) 2 )
        (> (* (count-once-per-objects preference1:pink) (external-forall-maximize (* 3 180 )
            )
          )
          1
        )
        (= 2 2 )
      )
      (or
        (= 8 3 )
        (>= 4 3 )
        (or
          (>= 2 (+ (count preference1:golfball) (+ (* 3 (count preference1:yellow) )
                (* (or (count preference1:dodgeball) ) (total-score) )
              )
            )
          )
          (>= (total-time) 2 )
        )
      )
    )
    (> (count preference1:dodgeball) (= (* (count-overlapping preference1:pyramid_block:dodgeball:beachball) (+ (external-forall-maximize 4 ) 2 )
        )
        8
      )
    )
  )
)
(:scoring
  5
)
)

(define (game game-id-813) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?k - block)
      (game-conserved
        (and
          (not
            (not
              (>= (distance ?k ?k) (distance ?k desk))
            )
          )
          (and
            (in_motion ?k)
            (in_motion ?k ?k)
          )
        )
      )
    )
    (game-optional
      (and
        (in_motion ?xxx ?xxx)
        (not
          (and
            (not
              (not
                (and
                  (and
                    (in_motion ?xxx ?xxx)
                    (not
                      (and
                        (same_type ?xxx ?xxx)
                        (agent_holds ?xxx)
                      )
                    )
                  )
                  (agent_holds ?xxx rug)
                )
              )
            )
            (faces ?xxx)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?h - dodgeball ?w - cube_block ?y - (either doggie_bed lamp))
        (then
          (once (on ?y bed) )
          (once-measure (in ?y ?y) (distance 9 bed) )
          (once (in_motion ?y) )
        )
      )
    )
    (forall (?k - flat_block)
      (and
        (preference preference2
          (exists (?p - cube_block ?u - curved_wooden_ramp)
            (then
              (once (agent_holds ?u) )
              (once (and (equal_x_position ?k) (adjacent ?k) ) )
              (hold-while (on ?k) (in_motion ?k) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?l - hexagonal_bin)
        (then
          (once (and (not (and (adjacent ?l) (not (and (not (on ?l) ) (and (agent_holds ?l) (not (agent_holds ?l ?l) ) ) (agent_holds ?l ?l) ) ) ) ) (on rug ?l) ) )
          (hold (agent_holds ?l) )
          (once (in ?l ?l) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= 2 (count-once-per-objects preference1) )
  )
)
(:scoring
  5
)
)

(define (game game-id-814) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (agent_holds ?xxx)
  )
)
(:constraints
  (and
    (forall (?y - hexagonal_bin)
      (and
        (preference preference1
          (then
            (once-measure (not (agent_holds ?y) ) (distance ?y) )
            (once (agent_holds ?y ?y) )
            (once (agent_holds ?y) )
            (once (in_motion ?y ?y) )
            (hold-while (agent_holds desk) (agent_holds top_shelf) )
          )
        )
        (preference preference2
          (exists (?b - cube_block)
            (then
              (once (on ?b) )
              (once (on agent ?b) )
              (once (and (and (object_orientation ?b) (in_motion ?y) (equal_z_position ?b) ) (in_motion ?b agent ?y) ) )
              (once (and (same_type ?b ?b) (in ?b ?y) ) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?l - dodgeball)
        (then
          (once (and (in_motion ?l) (and (and (agent_holds ?l) (not (and (in_motion ?l) (adjacent ?l ?l) (agent_holds ?l ?l) (and (exists (?n - cube_block) (not (agent_holds bed) ) ) (on ?l) ) ) ) ) (not (< 1 (distance room_center ?l)) ) ) (in_motion floor ?l) (and (and (in_motion ?l) (not (and (not (not (and (is_setup_object ?l) (or (in_motion ?l ?l) (and (not (in ?l) ) (on desk) (agent_holds pillow ?l) ) ) ) ) ) (= (building_size 10 ?l) (distance ?l ?l) (distance ?l ?l)) ) ) ) (touch ?l ?l) ) ) )
          (forall-sequence (?r - (either basketball doggie_bed))
            (then
              (hold (agent_holds ?r ?r) )
              (hold-while (in_motion ?r) (in_motion ?l) (and (in_motion ?l ?r) (on ?r) (agent_holds ?l) (agent_holds bed ?l) (in_motion ?l ?l) (on ?r) (in_motion ?l) (and (agent_holds ?r) (in ?r brown) ) (in_motion desk) (not (and (agent_holds floor ?r) (agent_holds ?l front) ) ) (agent_holds ?r ?l) (adjacent ?l) ) (adjacent ?r agent) )
              (hold (in_motion ?r ?l) )
              (hold (in pink) )
            )
          )
          (once (agent_holds bed ?l ?l) )
        )
      )
    )
  )
)
(:terminal
  (>= 9 (* (+ (+ 10 (count-once-per-objects preference3:dodgeball) 100 )
        (count preference2:pink)
      )
      3
    )
  )
)
(:scoring
  (external-forall-maximize
    (+ 10 3 )
  )
)
)

(define (game game-id-815) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (touch ?xxx ?xxx)
  )
)
(:constraints
  (and
    (forall (?s - ball ?y - hexagonal_bin)
      (and
        (preference preference1
          (exists (?w - dodgeball ?n - game_object)
            (then
              (once (and (agent_holds ?n) (and (and (adjacent front ?y) (not (not (in_motion rug desk) ) ) (in ?y ?n) (in_motion ?y ?y) ) (or (not (agent_holds ?n) ) (agent_holds ?y ?n) ) ) ) )
              (once (same_type bed ?n) )
              (once (not (in_motion ?n desk) ) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?d - game_object ?p ?c - (either cube_block))
        (then
          (hold (< 3 (distance 0 desk front)) )
          (hold (agent_holds ?c) )
          (hold (and (not (and (> 2 (distance ?p room_center)) (and (agent_holds ?p) (and (and (in_motion ?p ?c) (or (in_motion ?p) (agent_holds ?p ?c) (agent_holds ?p) ) (not (faces side_table ?c) ) ) (and (not (touch ?c) ) (not (on ?p ?c) ) (and (not (not (in ?p) ) ) (on ?c ?c) ) ) ) ) ) ) (on ?c ?c) ) )
        )
      )
    )
    (forall (?k - dodgeball ?e - teddy_bear)
      (and
        (preference preference3
          (exists (?f - block)
            (then
              (hold (not (adjacent_side ?f) ) )
              (once (not (exists (?u - building ?h - dodgeball) (touch ?h) ) ) )
              (hold (on ?f) )
            )
          )
        )
      )
    )
    (preference preference4
      (exists (?h - dodgeball)
        (then
          (once (not (not (not (agent_holds ?h) ) ) ) )
          (once (exists (?x - curved_wooden_ramp) (in_motion ?h ?h ?x) ) )
          (once (not (or (not (not (and (in ?h ?h) (not (and (same_type main_light_switch) (not (not (and (< 9 (distance 7 door desk)) (or (and (in ?h) (in pink_dodgeball) (= (distance ?h) (distance room_center ?h)) ) (agent_holds ?h) ) ) ) ) (agent_holds ?h) (same_object rug) ) ) (= (distance ?h ?h) (distance ?h room_center)) (in_motion ?h) (agent_holds ?h ?h) (and (in ?h) (and (exists (?n - ball) (agent_holds ?n ?n) ) (in_motion bed ?h) ) ) (< 1 1) ) ) ) (not (not (agent_holds ?h) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 20 (- (count preference3:yellow_pyramid_block) )
  )
)
(:scoring
  10
)
)

(define (game game-id-816) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?e - cube_block ?c - bridge_block)
      (and
        (forall (?j - cube_block ?w - wall)
          (and
            (game-optional
              (on ?c)
            )
            (forall (?v - chair ?i - ball)
              (game-conserved
                (on desk ?w)
              )
            )
          )
        )
      )
    )
    (and
      (and
        (exists (?r - pyramid_block)
          (forall (?w ?q ?h ?l - rug)
            (game-conserved
              (not
                (object_orientation ?h agent)
              )
            )
          )
        )
      )
    )
    (game-conserved
      (on ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (then
        (once (and (and (on ?xxx) (same_color ?xxx) ) (agent_holds ?xxx ?xxx) ) )
        (once (agent_holds ?xxx) )
      )
    )
    (preference preference2
      (then
        (hold-while (< (distance ?xxx ?xxx ?xxx) (distance ?xxx)) (and (agent_holds ?xxx) (not (not (exists (?k - (either yellow blue_cube_block pink) ?j - hexagonal_bin) (in_motion ?j ?j) ) ) ) ) (and (in_motion ?xxx) (adjacent ?xxx ?xxx) (agent_holds ?xxx ?xxx) ) )
        (hold (and (and (and (agent_holds ?xxx) (not (not (agent_holds agent ?xxx) ) ) ) (and (not (agent_holds ?xxx) ) (adjacent ?xxx) (adjacent ?xxx ?xxx) (not (not (not (touch agent bed) ) ) ) ) ) (in ?xxx) ) )
        (hold-while (not (not (adjacent ?xxx) ) ) (in_motion ?xxx ?xxx) )
      )
    )
    (forall (?f - cube_block ?b - hexagonal_bin)
      (and
        (preference preference3
          (exists (?m - ball ?s - cube_block ?i - teddy_bear)
            (then
              (hold (not (and (adjacent ?i ?b) (< 1 3) ) ) )
              (once (and (agent_holds ?i) (in ?b bed) ) )
              (hold (in_motion ?b) )
            )
          )
        )
        (preference preference4
          (exists (?r - hexagonal_bin)
            (then
              (hold-to-end (not (and (in ?b ?r) (and (on ?r) (on ?r) (not (and (in ?b) (and (not (or (not (exists (?a - pyramid_block ?p - block) (agent_holds ?p) ) ) (agent_crouches ?b) ) ) ) ) ) ) (not (same_object ?r) ) ) ) )
              (once (in_motion ?b ?r) )
              (once (not (and (in_motion ?b ?r) (on pink ?r) ) ) )
            )
          )
        )
      )
    )
    (preference preference5
      (exists (?r - hexagonal_bin ?e - building)
        (then
          (hold (not (agent_holds ?e) ) )
          (hold-while (same_type ?e) (on ?e) )
          (once (and (and (in_motion agent) (adjacent agent) ) (or (in ?e) (on bridge_block ?e) (not (adjacent ?e) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (* (+ 2 )
      (-
        (and
          6
        )
        (* (* 10 (count-increasing-measure preference5:pink) (+ (count-once-per-objects preference4:beachball) (external-forall-maximize (count preference3:basketball:pink) ) )
          )
          (* (* (count preference2:blue_dodgeball:basketball) )
            (count-once-per-objects preference4:dodgeball:dodgeball)
          )
        )
      )
    )
  )
)
(:scoring
  (* 50 2 )
)
)

(define (game game-id-817) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?l - hexagonal_bin ?w - cube_block)
      (forall (?y - (either blue_cube_block hexagonal_bin pyramid_block) ?z - cube_block)
        (game-optional
          (not
            (and
              (not
                (agent_holds block)
              )
              (in_motion ?z)
            )
          )
        )
      )
    )
    (and
      (exists (?l - dodgeball)
        (and
          (game-conserved
            (in_motion ?l)
          )
        )
      )
    )
    (or
      (exists (?k - hexagonal_bin ?s - pillow)
        (forall (?r - hexagonal_bin ?i - curved_wooden_ramp ?a ?q ?i ?j - dodgeball)
          (forall (?v - hexagonal_bin)
            (game-conserved
              (in_motion ?q)
            )
          )
        )
      )
      (exists (?b - dodgeball ?v - dodgeball)
        (and
          (exists (?e - building)
            (exists (?s - wall)
              (exists (?w - dodgeball)
                (game-conserved
                  (adjacent_side ?e)
                )
              )
            )
          )
          (exists (?r - drawer)
            (and
              (exists (?q - dodgeball)
                (game-conserved
                  (not
                    (agent_holds ?r ?v)
                  )
                )
              )
            )
          )
        )
      )
      (exists (?t - doggie_bed)
        (exists (?y - (either cube_block hexagonal_bin))
          (game-optional
            (in_motion ?t ?t)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?q - (either ball pencil cube_block))
        (then
          (once (in ?q) )
          (hold (on ?q) )
          (once (and (on ?q ?q) (exists (?o - teddy_bear ?z ?j - game_object) (< (distance agent desk) 1) ) ) )
        )
      )
    )
    (forall (?u - ball ?l - hexagonal_bin)
      (and
        (preference preference2
          (exists (?a - flat_block)
            (then
              (hold (agent_holds ?a upside_down) )
              (hold (and (and (agent_holds ?l) (not (in_motion ?l) ) ) (agent_holds ?a) ) )
              (once (agent_holds ?a) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (count preference2:alarm_clock:beachball) )
)
(:scoring
  1
)
)

(define (game game-id-818) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (adjacent_side agent ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?j - ball)
        (then
          (once (agent_holds ?j ?j) )
          (once (not (in ?j ?j) ) )
          (hold (in_motion ?j) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference1:blue_pyramid_block) (count preference1:side_table:beachball) )
)
(:scoring
  (count-once-per-objects preference1:orange)
)
)

(define (game game-id-819) (:domain many-objects-room-v1)
(:setup
  (forall (?w - desktop)
    (and
      (game-conserved
        (not
          (in_motion ?w)
        )
      )
      (and
        (game-conserved
          (and
            (agent_holds ?w)
            (same_object ?w)
          )
        )
        (game-optional
          (in ?w)
        )
        (and
          (and
            (not
              (and
                (game-optional
                  (agent_holds ?w ?w)
                )
                (not
                  (and
                    (game-optional
                      (agent_holds ?w)
                    )
                    (and
                      (game-optional
                        (in_motion ?w)
                      )
                      (forall (?h - chair)
                        (game-conserved
                          (in desk ?h)
                        )
                      )
                    )
                    (not
                      (and
                        (and
                          (and
                            (and
                              (and
                                (and
                                  (exists (?v - red_dodgeball)
                                    (exists (?b - wall)
                                      (forall (?q - (either key_chain dodgeball beachball))
                                        (exists (?r - block ?x - (either cube_block blue_cube_block) ?h - dodgeball)
                                          (exists (?e - dodgeball)
                                            (and
                                              (exists (?l - curved_wooden_ramp)
                                                (and
                                                  (exists (?g - chair ?d - dodgeball)
                                                    (game-optional
                                                      (in_motion agent ?l)
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                  (game-conserved
                                    (and
                                      (and
                                        (touch ?w ?w)
                                        (agent_holds ?w)
                                      )
                                      (not
                                        (in_motion ?w ?w)
                                      )
                                    )
                                  )
                                  (exists (?p - curved_wooden_ramp)
                                    (exists (?b - dodgeball)
                                      (forall (?o - (either ball dodgeball) ?q - yellow_pyramid_block)
                                        (game-conserved
                                          (on ?b)
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
            (exists (?t - pillow)
              (exists (?v - cube_block)
                (forall (?h - dodgeball ?j - dodgeball)
                  (game-optional
                    (not
                      (and
                        (and
                          (not
                            (and
                              (agent_holds sideways ?w)
                              (in_motion ?t)
                              (and
                                (adjacent_side ?v)
                                (in_motion drawer sideways)
                              )
                            )
                          )
                          (not
                            (not
                              (agent_holds ?j ?t)
                            )
                          )
                          (in ?v ?v)
                          (and
                            (and
                              (agent_holds ?v)
                              (in top_shelf ?j)
                            )
                            (in_motion desktop ?t desk)
                          )
                          (adjacent ?v desk)
                          (adjacent ?t)
                          (and
                            (touch ?w ?v)
                            (agent_holds ?t)
                            (not
                              (same_object ?v)
                            )
                            (exists (?z - hexagonal_bin)
                              (not
                                (in_motion ?w ?w)
                              )
                            )
                          )
                        )
                        (agent_holds )
                      )
                    )
                  )
                )
              )
            )
          )
          (and
            (game-conserved
              (and
                (and
                  (and
                    (and
                      (agent_holds ?w ?w)
                      (agent_holds )
                    )
                    (agent_holds ?w)
                  )
                  (not
                    (adjacent ?w ?w)
                  )
                  (in_motion ?w ?w)
                )
                (in_motion door agent)
              )
            )
          )
          (game-optional
            (or
              (agent_holds ?w)
              (not
                (agent_holds ?w)
              )
            )
          )
        )
        (game-optional
          (and
            (not
              (= 5 (distance ?w desk 5))
            )
            (in_motion ?w ?w)
          )
        )
        (exists (?u ?m - dodgeball)
          (and
            (forall (?n ?x - desk_shelf)
              (and
                (game-optional
                  (not
                    (on ?n ?m)
                  )
                )
                (game-optional
                  (in_motion agent)
                )
              )
            )
            (game-conserved
              (and
                (agent_holds pink_dodgeball ?m ?m)
                (and
                  (and
                    (and
                      (not
                        (not
                          (not
                            (in_motion ?u ?m)
                          )
                        )
                      )
                      (on ?m ?w)
                    )
                    (touch pink ?u)
                  )
                  (agent_holds ?m)
                )
              )
            )
            (game-conserved
              (in_motion ?u)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?j - ball)
        (then
          (once (on ?j ?j) )
          (hold (and (not (agent_holds ?j ?j) ) (>= (building_size 1 room_center) 1) ) )
          (once (< 2 (distance 1 ?j)) )
        )
      )
    )
    (preference preference2
      (exists (?o - game_object)
        (then
          (hold (exists (?e - hexagonal_bin) (adjacent ?o ?e) ) )
          (hold-while (agent_holds ?o) (and (in_motion ?o ?o) (in_motion ?o ?o) ) )
          (once (in_motion bed ?o) )
        )
      )
    )
    (preference preference3
      (exists (?c - dodgeball ?r - hexagonal_bin ?o - (either cylindrical_block cylindrical_block tall_cylindrical_block cube_block) ?e - dodgeball)
        (then
          (once (in_motion ?e) )
          (once (agent_holds ?e) )
          (once (agent_holds ?e ?e) )
        )
      )
    )
    (preference preference4
      (exists (?m - chair)
        (then
          (hold-while (not (in_motion ?m ?m) ) (in_motion ?m) (on ?m ?m) )
          (once (above agent ?m) )
          (hold (not (not (same_type ?m) ) ) )
        )
      )
    )
    (forall (?y - hexagonal_bin)
      (and
        (preference preference5
          (exists (?o - (either game_object golfball) ?n - book)
            (then
              (once (not (<= (distance ?y ?n) 6) ) )
            )
          )
        )
        (preference preference6
          (exists (?g - block ?x - curved_wooden_ramp)
            (at-end
              (not
                (in_motion ?x)
              )
            )
          )
        )
      )
    )
    (preference preference7
      (exists (?a - dodgeball)
        (then
          (once (not (agent_holds agent) ) )
          (once (in ?a) )
          (once (rug_color_under ?a) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference4:yellow) 5 )
)
(:scoring
  2
)
)

(define (game game-id-820) (:domain many-objects-room-v1)
(:setup
  (not
    (and
      (exists (?s - (either side_table doggie_bed) ?n - shelf)
        (exists (?e - cube_block)
          (and
            (and
              (and
                (exists (?f - game_object)
                  (game-optional
                    (and
                      (and
                        (not
                          (on ?n ?f)
                        )
                        (and
                          (agent_holds ?e ?e ?f blue)
                          (and
                            (in_motion ?e)
                            (touch ?f ?n)
                          )
                          (on ?n)
                          (in_motion ?n ?e)
                          (and
                            (and
                              (and
                                (agent_holds ?e door)
                                (not
                                  (and
                                    (not
                                      (and
                                        (not
                                          (in_motion ?e)
                                        )
                                        (and
                                          (in ?f ?f ?f)
                                          (and
                                            (on ?n desk)
                                            (in_motion ?n)
                                          )
                                        )
                                      )
                                    )
                                    (in_motion ?f)
                                  )
                                )
                              )
                              (touch ?n)
                            )
                            (and
                              (not
                                (adjacent ?f)
                              )
                              (not
                                (not
                                  (adjacent ?n)
                                )
                              )
                              (or
                                (on ?n)
                                (not
                                  (adjacent ?n ?n)
                                )
                              )
                            )
                          )
                          (and
                            (not
                              (and
                                (agent_holds ?f bed)
                                (agent_holds ?n)
                                (and
                                  (in_motion ?n rug)
                                  (not
                                    (in ?e)
                                  )
                                )
                              )
                            )
                            (same_color ?n)
                          )
                          (agent_holds ?f ?n)
                        )
                        (in ?n)
                      )
                      (in ?e ?e)
                    )
                  )
                )
                (and
                  (game-conserved
                    (in_motion ?n)
                  )
                  (forall (?u - bridge_block)
                    (exists (?m - curved_wooden_ramp)
                      (game-conserved
                        (agent_holds ?n)
                      )
                    )
                  )
                  (forall (?j - beachball)
                    (game-optional
                      (not
                        (in_motion ?e ?n)
                      )
                    )
                  )
                )
                (and
                  (game-conserved
                    (and
                      (and
                        (and
                          (agent_holds ?e ?n)
                          (and
                            (> (distance room_center desk) (distance 5))
                          )
                        )
                        (in ?n)
                        (not
                          (not
                            (exists (?k - hexagonal_bin ?w - block)
                              (adjacent ?n)
                            )
                          )
                        )
                      )
                      (and
                        (agent_holds ?e ?e)
                        (and
                          (in_motion bed)
                          (in ?e)
                        )
                      )
                    )
                  )
                  (exists (?u - curved_wooden_ramp ?u - ball)
                    (and
                      (game-conserved
                        (same_object ?e)
                      )
                    )
                  )
                  (game-conserved
                    (and
                      (on agent)
                      (not
                        (and
                          (agent_holds agent ?n)
                          (agent_holds ?n ?n)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
      (and
        (and
          (game-optional
            (agent_holds ?xxx)
          )
        )
        (game-conserved
          (touch ?xxx)
        )
        (exists (?n - (either cylindrical_block book teddy_bear))
          (exists (?j - hexagonal_bin ?o - teddy_bear ?x - rug)
            (game-optional
              (and
                (in_motion ?n ?n)
                (agent_holds ?n)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?z - color)
      (and
        (preference preference1
          (exists (?l - red_dodgeball)
            (then
              (hold (agent_holds ?z ?l) )
              (hold (not (in agent) ) )
              (once (on front agent) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< (count preference1:basketball) (* (count preference1:yellow:dodgeball) 5 4 )
  )
)
(:scoring
  5
)
)

(define (game game-id-821) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (not
      (agent_holds ?xxx ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?t - (either basketball))
        (then
          (once (in_motion ?t ?t) )
          (hold (in_motion desk ?t) )
          (hold (< 4 (distance ?t ?t)) )
        )
      )
    )
    (preference preference2
      (exists (?o - block)
        (at-end
          (in_motion ?o)
        )
      )
    )
    (preference preference3
      (exists (?c - (either bridge_block red alarm_clock) ?a - wall)
        (then
          (hold-for 1 (agent_holds ?a rug) )
          (hold (not (in_motion ?a) ) )
          (hold (in_motion agent) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (* (count preference2:blue_dodgeball) 6 (<= 100 (* 1 (count-shortest preference1:dodgeball:basketball) )
        )
        (= (- (count preference3:beachball:pyramid_block) )
        )
      )
      (count preference2:dodgeball:beachball)
    )
  )
)
(:scoring
  (and
    (count-once-per-external-objects preference3:dodgeball)
    2
    (total-score)
  )
)
)

(define (game game-id-822) (:domain medium-objects-room-v1)
(:setup
  (forall (?m - color ?n - curved_wooden_ramp)
    (exists (?i - building)
      (game-conserved
        (not
          (agent_holds ?i blue)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c - teddy_bear ?g - block)
      (and
        (preference preference1
          (exists (?t - hexagonal_bin)
            (then
              (once (faces ?t ?t) )
              (hold-to-end (and (toggled_on ?t) (and (and (not (adjacent agent ?g) ) (and (and (in_motion ?g ?t) (not (agent_holds ?g) ) ) (in_motion desk ?t) ) ) (in_motion ?g) ) ) )
              (hold-while (and (in_motion ?g ?t) (on ?g) ) (and (not (not (not (agent_holds ?t) ) ) ) (between ?t) ) (and (not (and (or (and (not (and (touch ?g) ) ) (agent_holds ?t) ) (in_motion ?g ?g) ) (agent_holds ?g) ) ) (agent_holds ?t agent) (in_motion ?t) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (not
      (or
        (> 4 (* (count preference1:blue_dodgeball) (count preference1:pyramid_block) )
        )
        (>= (= (* 40 2 )
            3
            (* (+ 8 2 )
              6
              (* (total-time) (* 6 (* (+ 3 (count-measure preference1:hexagonal_bin) )
                    4
                  )
                  6
                )
              )
            )
          )
          (* (count preference1) (count-overlapping preference1:golfball) )
        )
        (>= (- (count-once-per-objects preference1:pink_dodgeball) (external-forall-maximize 2 ) ) (count preference1:yellow_cube_block) )
      )
    )
  )
)
(:scoring
  2
)
)

(define (game game-id-823) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (in ?xxx ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?e - book)
        (then
          (once (agent_holds ?e) )
          (once (not (on upright ?e ?e) ) )
          (hold (in ?e) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference1:basketball) (* (count-overlapping preference1:pink) (external-forall-maximize (+ (count-once preference1:dodgeball) (count preference1:dodgeball) (+ (- (* (+ (external-forall-minimize (- (+ (count-once-per-objects preference1:pink_dodgeball) )
                    )
                  )
                  3
                )
                9
              )
            )
            (+ (* (count preference1:green) 60 )
              (count-once-per-objects preference1:wall:yellow)
              (count preference1:dodgeball)
            )
            (count preference1:red)
          )
        )
      )
    )
  )
)
(:scoring
  7
)
)

(define (game game-id-824) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-conserved
      (same_type ?xxx)
    )
    (not
      (exists (?a - golfball)
        (game-conserved
          (agent_holds ?a floor)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?k - cube_block)
        (then
          (hold-while (and (and (and (rug_color_under ?k) (on agent) ) (in ?k ?k) ) (in_motion ?k ?k) ) (on agent ?k) )
          (once (in_motion ?k ?k) )
          (once (rug_color_under ?k ?k ?k) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= 6 (count-once preference1:pink_dodgeball:pyramid_block) )
    (>= (* (+ (+ (external-forall-maximize (count-once-per-objects preference1:cube_block:block) ) (count preference1) 2 (count-once-per-objects preference1:beachball) )
          8
        )
        (* (count-once-per-objects preference1:top_drawer) (and (count-once-per-objects preference1:basketball:pyramid_block) ) )
        (count preference1:red)
        (count preference1:doggie_bed)
      )
      (count-once-per-objects preference1:pink_dodgeball:blue_pyramid_block)
    )
  )
)
(:scoring
  (* (external-forall-maximize 3 ) (count-once-per-external-objects preference1:dodgeball:blue_cube_block) )
)
)

(define (game game-id-825) (:domain medium-objects-room-v1)
(:setup
  (exists (?e - cube_block)
    (game-conserved
      (on ?e ?e)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?v - teddy_bear ?y - hexagonal_bin)
        (then
          (once (in_motion ?y) )
          (once (not (is_setup_object ?y) ) )
          (once (agent_holds door) )
        )
      )
    )
    (preference preference2
      (exists (?b - (either alarm_clock book))
        (then
          (once (and (not (< 5 (distance_side desk agent)) ) (and (in_motion ?b brown) (not (in_motion ?b bed) ) (and (agent_holds ?b ?b) (in ?b ?b) (not (agent_holds ?b ?b) ) ) ) (same_color ?b) ) )
          (once (agent_holds ?b) )
          (once (agent_holds ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= 6 5 )
)
(:scoring
  6
)
)

(define (game game-id-826) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (< 1 (distance room_center desk))
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?h ?r ?l ?g ?b ?x ?c ?i ?n ?z - shelf ?y - (either golfball yellow_cube_block))
        (then
          (hold (and (and (in_motion ?y) (and (not (not (and (adjacent agent) (in_motion ?y) ) ) ) (and (agent_holds ?y ?y) (and (and (agent_holds ?y) (agent_holds ?y ?y) ) (in_motion ?y) (in_motion ?y) ) ) ) ) (< (distance ?y ?y) (distance room_center)) (in ?y ?y) ) )
          (hold-while (in ?y pink_dodgeball) (< (distance 9 room_center) (distance 9 ?y)) )
          (once (agent_holds ?y ?y) )
        )
      )
    )
    (forall (?x ?k - game_object)
      (and
        (preference preference2
          (exists (?y - pillow ?y - (either pencil pen pillow red cylindrical_block tall_cylindrical_block book))
            (then
              (once (< 1 (building_size ?y ?x)) )
              (once (in_motion ?y ?x) )
              (hold-while (= 1) (in_motion ?x ?k) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (> 10 (/ (* 5 (count-once-per-objects preference2:pink:dodgeball) )
        5
      )
    )
  )
)
(:scoring
  (+ (count preference2:alarm_clock) (count preference2:green) )
)
)

(define (game game-id-827) (:domain few-objects-room-v1)
(:setup
  (forall (?n - shelf ?p - dodgeball)
    (game-conserved
      (touch ?p)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (then
        (hold (in ?xxx) )
        (once (adjacent ?xxx ?xxx) )
        (once (in_motion ?xxx desk) )
      )
    )
    (preference preference2
      (exists (?e - ball)
        (then
          (hold (is_setup_object ?e ?e) )
          (once (in rug) )
          (hold (and (touch ?e) (in ?e ?e) (adjacent ?e) ) )
        )
      )
    )
    (forall (?m - dodgeball ?x - hexagonal_bin)
      (and
        (preference preference3
          (then
            (once (in ?x) )
            (once (in_motion upright) )
            (hold (exists (?z - game_object) (in ?z) ) )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (+ 15 5 )
    (* (count-once-per-external-objects preference3:doggie_bed:tall_cylindrical_block) (* (count-once-per-objects preference1:dodgeball:pink_dodgeball) 3 )
    )
  )
)
(:scoring
  (count preference2:dodgeball:beachball)
)
)

(define (game game-id-828) (:domain many-objects-room-v1)
(:setup
  (exists (?b - wall)
    (game-conserved
      (and
        (and
          (and
            (agent_holds ?b ?b)
          )
          (agent_holds ?b ?b)
        )
        (in_motion ?b)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?e - pillow)
        (then
          (hold (adjacent ?e ?e) )
          (once (not (not (rug_color_under ?e) ) ) )
          (once (and (agent_holds upright ?e) (exists (?z - curved_wooden_ramp) (or (agent_holds ?z) (in_motion agent) (and (in_motion south_west_corner) (not (< 2 (distance ?e agent ?e)) ) ) ) ) ) )
        )
      )
    )
    (preference preference2
      (exists (?w - drawer)
        (then
          (once (and (and (< (x_position ?w ?w) 8) (object_orientation pink top_drawer) ) (on agent) ) )
          (hold-while (same_color agent) (not (agent_holds ?w) ) )
          (hold-for 9 (exists (?e - ball ?y - ball ?q - (either game_object) ?c - color) (not (agent_holds ?c ?w) ) ) )
        )
      )
    )
    (preference preference3
      (then
        (once (on ?xxx top_shelf) )
        (once (in_motion ?xxx) )
        (hold (not (not (< (distance ?xxx 2) 1) ) ) )
      )
    )
    (preference preference4
      (exists (?p - (either pyramid_block blue_cube_block) ?f - building)
        (then
          (hold-while (exists (?d - dodgeball) (and (object_orientation ?f ?d) (on door) (not (not (agent_holds ?f) ) ) (broken ?f) (not (and (not (not (and (and (and (and (on ?d) (on desk) ) (in ?f) ) (on ?f) ) (on bed) (same_type ?f) ) ) ) (and (not (and (in_motion ?f ?f) (in_motion ?f) ) ) (in ?f ?d ?f) ) (not (agent_holds ?f ?f) ) ) ) (in_motion ?f) (on ?f) (and (agent_holds rug ?d) (in_motion ?d) ) (on ?d) (< (distance desk bed) 1) ) ) (exists (?z - ball ?g - (either doggie_bed laptop)) (not (and (or (agent_holds ?g ?f) (or (not (and (agent_holds ?g) (on agent ?f) ) ) (and (not (and (not (in_motion ?g) ) (and (adjacent agent bed) ) ) ) (object_orientation south_wall ?f) (same_type ) ) ) ) (agent_holds ?f) ) ) ) )
          (once (opposite ?f) )
          (once (touch ?f ?f) )
        )
      )
    )
    (forall (?o - dodgeball)
      (and
        (preference preference5
          (then
            (once (agent_holds ?o) )
          )
        )
      )
    )
    (forall (?z - dodgeball)
      (and
        (preference preference6
          (exists (?l - block)
            (then
              (hold (on ?l agent) )
            )
          )
        )
        (preference preference7
          (exists (?b - hexagonal_bin)
            (then
              (once (and (= (distance ?z ?b) 10) (and (agent_holds ?z ?b) (not (and (on upright ?z ?b) (not (not (and (same_type door ?b) (not (< (distance ?b ?b ?z) (distance )) ) (and (adjacent_side ?b ?z) (on ?b) ) ) ) ) (not (and (agent_holds ?b) (agent_holds ?b) ) ) ) ) ) ) )
              (once (in_motion ?z) )
              (once (touch ?z bed) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 5 4 )
    (> (count preference6:pink_dodgeball) (count preference6:dodgeball:green) )
    (>= (+ 4 (+ (* (count preference6:red) (external-forall-maximize (count preference7:purple) ) )
          (count-shortest preference3:purple)
          1
          (* (count-once-per-objects preference7:basketball:book) (count-overlapping preference7:basketball:dodgeball) (* (/ (count-once preference6:pyramid_block:hexagonal_bin) 5 ) 1 )
          )
        )
        1
      )
      4
    )
    (>= (count preference7:yellow) (count-once-per-objects preference4:dodgeball) )
  )
)
(:scoring
  0
)
)

(define (game game-id-829) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (and
      (adjacent rug)
      (and
        (on ?xxx ?xxx)
        (broken ?xxx ?xxx)
      )
    )
  )
)
(:constraints
  (and
    (forall (?k - teddy_bear)
      (and
        (preference preference1
          (exists (?c - block ?l - curved_wooden_ramp)
            (then
              (once (in_motion ?l) )
              (hold (agent_holds floor) )
              (once (object_orientation ?k) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (= 3 5 )
    (+ 2 (count preference1:basketball) 2 )
  )
)
(:scoring
  (* (+ (count preference1:beachball:beachball) (count-once preference1:dodgeball) )
    (* (count preference1:tan) (- (count preference1) )
      (- 3 )
    )
  )
)
)

(define (game game-id-830) (:domain many-objects-room-v1)
(:setup
  (not
    (exists (?h - cube_block)
      (game-optional
        (in ?h)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?q - hexagonal_bin)
        (at-end
          (< (distance 7 ?q) 8)
        )
      )
    )
    (preference preference2
      (exists (?u - (either yellow_cube_block beachball) ?g - wall)
        (then
          (hold (agent_holds ?g ?g ?g) )
          (hold (not (and (adjacent ?g) (same_object ?g) ) ) )
          (hold (and (agent_holds right) (and (same_type desk ?g) (in_motion ?g ?g) (in ?g) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 6 (count preference2:pink_dodgeball:wall) )
    (>= (* 15 5 )
      7
    )
    (>= (count-once-per-external-objects preference2:book:pink_dodgeball) 2 )
  )
)
(:scoring
  2
)
)

(define (game game-id-831) (:domain many-objects-room-v1)
(:setup
  (exists (?k - block ?o - hexagonal_bin)
    (game-optional
      (or
        (or
          (in_motion agent)
          (adjacent ?o)
        )
        (and
          (adjacent ?o)
          (and
            (in ?o)
            (in ?o)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?s - game_object)
        (then
          (once (agent_holds ?s) )
          (once (and (touch ?s ?s) (above ?s) ) )
          (once (= 1 (distance room_center room_center)) )
          (once (not (agent_holds ?s) ) )
        )
      )
    )
  )
)
(:terminal
  (> (count preference1:beachball:dodgeball:red) 100 )
)
(:scoring
  4
)
)

(define (game game-id-832) (:domain medium-objects-room-v1)
(:setup
  (forall (?w - hexagonal_bin)
    (game-conserved
      (not
        (not
          (in_motion ?w door)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?s - hexagonal_bin ?r - dodgeball)
        (then
          (once (on agent) )
          (once (or (between ?r) (same_type ?r) ) )
          (once (adjacent desk) )
        )
      )
    )
  )
)
(:terminal
  (or
    (and
      (>= (* (count-once-per-objects preference1:hexagonal_bin:red) (* (= 3 3 )
            5
            (count preference1:yellow)
            (count-once-per-external-objects preference1:golfball)
          )
        )
        (+ (count preference1) (count-shortest preference1:red:yellow) )
      )
      (>= (count-measure preference1:doggie_bed:dodgeball) (total-score) )
    )
    (or
      (and
        (>= (* (* (= (count preference1:basketball) (* (* (* (count preference1:dodgeball) (/ (+ 2 (+ 5 (* (* (* (count preference1:beachball) (total-time) )
                                3
                              )
                              (* (count-overlapping preference1:hexagonal_bin) 60 )
                              (count preference1:dodgeball)
                            )
                          )
                          (+ (* (* (count preference1) (* (> (* (* (count-once-per-objects preference1:top_drawer:golfball) 8 (count-once-per-objects preference1:purple:golfball) )
                                      0.5
                                    )
                                    3
                                  )
                                  (+ (= (count preference1:basketball) )
                                    30
                                  )
                                )
                              )
                              3
                            )
                            30
                          )
                        )
                        (+ 3 3 )
                      )
                      (* 10 (* (count preference1:dodgeball) (* 3 6 )
                        )
                        (count-once-per-external-objects preference1:dodgeball:tan)
                      )
                      (count-once-per-objects preference1:purple)
                      (+ (count preference1:basketball) (count-once preference1:dodgeball) )
                      (count-once-per-objects preference1:beachball)
                      (+ (- (- (+ 2 9 )
                          )
                        )
                        2
                      )
                    )
                    (* 1 (total-time) )
                  )
                  2
                  (count preference1)
                )
              )
              (external-forall-minimize
                (count preference1:block)
              )
            )
            300
            8
            (count preference1)
          )
          (count preference1:tan)
        )
        (not
          (or
            (>= (* (count preference1:basketball:golfball:basketball) 10 )
              (+ 20 (count preference1:basketball:beachball) )
            )
            (>= (>= (count-longest preference1:yellow) (count preference1:pink_dodgeball:purple) )
              (count-once-per-objects preference1:yellow:rug)
            )
            (<= 2 (count-once-per-objects preference1:beachball) )
          )
        )
        (= (+ (* 1 30 )
            20
            (* 3 (count-once-per-objects preference1:dodgeball) )
          )
          (total-time)
        )
      )
      (>= 100 10 )
      (>= 2 1 )
    )
  )
)
(:scoring
  (count-once-per-objects preference1:dodgeball)
)
)

(define (game game-id-833) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?i - game_object)
      (game-optional
        (in_motion ?i ?i)
      )
    )
  )
)
(:constraints
  (and
    (forall (?v - chair)
      (and
        (preference preference1
          (exists (?f - dodgeball)
            (then
              (hold (in_motion ?f) )
              (once (and (on ?v) (in_motion left) (not (and (and (agent_holds ?v) (not (is_setup_object ?v ?v) ) ) (on rug ?f) (agent_holds ?v) ) ) (not (in_motion ?v) ) (in_motion side_table) (not (< 1 1) ) ) )
              (hold (agent_holds ?v) )
            )
          )
        )
        (preference preference2
          (exists (?f - ball)
            (then
              (hold-while (on ?v) (in_motion ?v ?f) )
              (once (and (not (and (on ?v agent) (not (on ?v ?f) ) (and (agent_holds ?f rug) (not (agent_holds ?v) ) ) (in_motion ) ) ) (agent_holds ?f) ) )
              (once (and (and (and (in_motion ?v ?v) (agent_holds ?f) ) (same_color ?f ?f) (in_motion ?f rug) ) ) )
            )
          )
        )
        (preference preference3
          (exists (?z ?h - hexagonal_bin)
            (at-end
              (agent_holds ?v)
            )
          )
        )
      )
    )
    (preference preference4
      (exists (?k - bridge_block ?z - sliding_door)
        (then
          (hold (is_setup_object ?z ?z) )
          (once (in_motion ?z) )
          (once (not (or (exists (?f - pillow) (not (on ?z top_shelf) ) ) (and (agent_holds bed ?z) (not (not (and (in_motion floor) (on ?z) ) ) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (>= (* (count-unique-positions preference2:beachball) (and 5 (count preference4:yellow:red) (+ (count-once-per-objects preference2:tan:beachball) (* (+ (* (count-increasing-measure preference2) (count-once preference4:beachball) )
                  (total-score)
                )
                5
              )
            )
          )
          (count-once-per-objects preference1:yellow)
          0.7
          7
          (count-once-per-objects preference3:green)
        )
        300
      )
      30
    )
    (>= 1 (and (+ (count-unique-positions preference2:yellow) (- (count preference2:golfball) 3 ) )
        (count-once-per-objects preference2:yellow)
        (count-once preference1:golfball)
      )
    )
  )
)
(:scoring
  (count-overlapping preference3:dodgeball)
)
)

(define (game game-id-834) (:domain few-objects-room-v1)
(:setup
  (forall (?a - game_object ?p - curved_wooden_ramp)
    (and
      (game-optional
        (= (distance agent ?p) 1)
      )
      (game-optional
        (in ?p agent)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?h - red_dodgeball ?s - hexagonal_bin)
        (then
          (once (in_motion ?s ?s) )
          (once (on ?s ?s) )
          (once (not (in_motion ?s ?s) ) )
        )
      )
    )
    (preference preference2
      (exists (?u - dodgeball)
        (then
          (once (not (in desk ?u) ) )
          (once (not (and (not (and (exists (?f - hexagonal_bin ?y - shelf) (and (and (adjacent ?y) (and (not (or (and (< (distance agent agent) (distance ?u ?y)) (agent_holds ?y) ) (adjacent agent) ) ) (and (and (agent_holds upside_down ?y) (in_motion ?u) ) (agent_holds ?y) (in agent) ) (and (and (agent_holds agent ?u) (< 1 (distance room_center desk)) ) (in_motion ?u) ) (and (in_motion ?y ?y) (and (object_orientation ?u) (rug_color_under ?u) ) ) ) (and (and (not (on ?y door) ) (and (not (agent_holds ?y ?y) ) (in_motion ?y ?y) ) ) (in ?y) (and (agent_holds desk ?u agent) (exists (?f - hexagonal_bin) (touch ?f ?f) ) ) ) ) (adjacent_side east_sliding_door) ) ) (not (between ?u front) ) (and (not (and (or (same_color ?u) (agent_holds ?u) ) (in_motion ?u ?u) ) ) (on ?u ?u) ) ) ) (agent_holds brown) (not (not (same_color ?u ?u) ) ) (and (< 1 1) (in_motion ?u) ) ) ) )
          (once (same_color ?u) )
        )
      )
    )
    (preference preference3
      (exists (?u - doggie_bed)
        (then
          (hold (same_object ?u ?u) )
          (hold (not (in_motion ?u) ) )
          (once (not (and (and (and (not (not (on ?u ?u) ) ) (exists (?x - dodgeball ?a ?i - curved_wooden_ramp) (not (< (distance agent 2) (distance ?a ?a)) ) ) ) (in ?u) ) (not (not (not (and (not (agent_holds bed) ) (game_over ?u ?u ?u) ) ) ) ) ) ) )
        )
      )
    )
    (preference preference4
      (exists (?q - hexagonal_bin ?v - wall)
        (then
          (hold (agent_holds ?v ?v) )
          (hold (and (adjacent_side ?v) (touch ?v) (on ?v) (in ?v ?v) (forall (?n - hexagonal_bin) (on pillow sideways) ) (and (in_motion ?v) (agent_holds ?v) ) (on ?v) ) )
          (hold (not (adjacent_side south_wall) ) )
        )
      )
    )
    (preference preference5
      (exists (?g - game_object)
        (at-end
          (and
            (agent_holds ?g ?g)
            (not
              (on desk ?g)
            )
          )
        )
      )
    )
    (preference preference6
      (exists (?m ?l - hexagonal_bin ?d - hexagonal_bin)
        (then
          (once (and (not (agent_holds ?d ?d) ) (and (and (touch pink_dodgeball) (not (adjacent_side top_shelf) ) ) (agent_holds blue) ) ) )
          (hold (and (agent_holds ?d) (on ?d) (agent_holds ?d) ) )
          (once (in_motion ?d ?d) )
        )
      )
    )
  )
)
(:terminal
  (< 30 (+ (* (count-once-per-objects preference5:basketball) 10 )
      5
      (* (count preference1:pink:golfball) (* (* 50 (= 1 3 )
          )
          (* (count preference1:green) (count preference5:pink:purple) )
        )
      )
    )
  )
)
(:scoring
  2
)
)

(define (game game-id-835) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (not
        (exists (?j - curved_wooden_ramp)
          (exists (?h - (either dodgeball laptop main_light_switch dodgeball))
            (game-conserved
              (agent_holds ?h)
            )
          )
        )
      )
      (game-optional
        (not
          (adjacent ?xxx)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?x - wall)
        (then
          (once (< 4 1) )
          (once (not (not (same_color ?x ?x) ) ) )
          (hold (on ?x ?x ?x) )
        )
      )
    )
    (preference preference2
      (exists (?h - (either dodgeball triangle_block) ?b - dodgeball)
        (then
          (once (game_over ?b ?b) )
          (once (and (agent_holds ?b floor ?b) (not (in_motion ?b) ) ) )
          (once (in_motion ?b ?b) )
        )
      )
    )
    (preference preference3
      (exists (?k - (either golfball dodgeball dodgeball laptop floor dodgeball flat_block) ?z - teddy_bear)
        (then
          (hold (and (agent_holds ?z ?z) (and (< 1 0.5) (on ?z) ) ) )
          (once (on floor) )
        )
      )
    )
    (preference preference4
      (exists (?j - (either key_chain bridge_block key_chain))
        (then
          (hold (and (exists (?r - shelf) (equal_x_position ?r ?j) ) (and (agent_holds ?j) (in_motion ?j) ) ) )
          (once (agent_holds ?j) )
          (once (not (on ?j) ) )
        )
      )
    )
    (preference preference5
      (exists (?r - teddy_bear ?p - (either hexagonal_bin desktop) ?c - shelf ?j - hexagonal_bin ?z - chair)
        (then
          (once (in ?z ?z) )
          (once (and (and (in ?z) (and (on ?z) (and (not (agent_holds ?z ?z) ) (on ?z) ) ) ) (< (x_position 10 ?z) 1) ) )
          (once (and (forall (?p - game_object) (< 4 1) ) (object_orientation ?z) ) )
        )
      )
    )
    (preference preference6
      (exists (?h - (either tall_cylindrical_block dodgeball pillow))
        (then
          (once (object_orientation ?h ?h) )
          (once (< (distance_side ?h ?h) 9) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (count-once-per-objects preference5:dodgeball) )
)
(:scoring
  1
)
)

(define (game game-id-836) (:domain few-objects-room-v1)
(:setup
  (exists (?t - shelf)
    (game-optional
      (adjacent ?t)
    )
  )
)
(:constraints
  (and
    (forall (?v - hexagonal_bin)
      (and
        (preference preference1
          (exists (?f ?y ?c ?d ?r - shelf ?l - dodgeball ?a - hexagonal_bin)
            (then
              (once (agent_holds ?a ?v) )
              (once (agent_holds ?a) )
              (hold (adjacent ?v) )
            )
          )
        )
      )
    )
    (forall (?m ?k - game_object ?m - building)
      (and
        (preference preference2
          (exists (?d - dodgeball)
            (then
              (hold-while (agent_holds floor) (in pink_dodgeball ?d) )
              (hold (in_motion bed ?d) )
              (once (or (is_setup_object ?m) (not (in_motion ?m bed) ) ) )
            )
          )
        )
        (preference preference3
          (exists (?q - doggie_bed)
            (then
              (once (and (on ?m ?q) (not (in_motion bed blue) ) ) )
              (once (in_motion ?m front) )
              (once (in ?m) )
            )
          )
        )
        (preference preference4
          (exists (?n - cube_block)
            (then
              (once (agent_holds floor) )
              (once (same_type ?m ?m) )
              (once (agent_holds ?m ?m) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (* (* 10 (= 5 (count-once preference4:red) )
        )
        (+ (count-once-per-objects preference4:pink_dodgeball:dodgeball) 300 )
      )
      10
    )
  )
)
(:scoring
  (count-once-per-objects preference1:basketball)
)
)

(define (game game-id-837) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?u ?a - desk_shelf)
      (game-optional
        (in_motion ?a desk)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?h - golfball)
        (then
          (once (in_motion agent ?h) )
          (once (not (and (agent_holds block) (touch ?h) ) ) )
          (hold (and (not (exists (?s - blinds ?e - golfball) (in_motion ?h) ) ) (in_motion ?h ?h) ) )
        )
      )
    )
  )
)
(:terminal
  (= (count-once preference1:blue_dodgeball) 10 )
)
(:scoring
  10
)
)

(define (game game-id-838) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?g - hexagonal_bin)
      (game-conserved
        (not
          (and
            (in ?g)
            (and
              (in ?g)
              (adjacent_side ?g ?g)
            )
            (not
              (in_motion ?g)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - blue_cube_block ?n - hexagonal_bin)
      (and
        (preference preference1
          (exists (?x - sliding_door ?g - ball)
            (then
              (once (in_motion ?n) )
              (once (not (and (in_motion ?n ?n) (not (in_motion ?n ?n) ) ) ) )
              (once (not (not (in_motion agent ?g) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (count preference1:basketball) 1 )
  )
)
(:scoring
  (* (count-once-per-objects preference1:basketball) 5 )
)
)

(define (game game-id-839) (:domain many-objects-room-v1)
(:setup
  (exists (?u ?o - (either cellphone blue_cube_block triangle_block) ?x - block ?k ?u - (either book key_chain) ?r - shelf)
    (game-optional
      (agent_holds pink_dodgeball)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?x - game_object)
        (then
          (hold (not (agent_holds ?x ?x) ) )
          (once (adjacent ?x) )
          (once (and (on ?x agent) (in upside_down) ) )
        )
      )
    )
    (preference preference2
      (exists (?k ?d - (either dodgeball cellphone chair))
        (then
          (hold (in_motion ?d) )
          (hold-to-end (and (on agent ?d) (and (in_motion ?k) (on ?k ?k) ) (not (on ?k ?k) ) ) )
          (once (in ?k) )
        )
      )
    )
  )
)
(:terminal
  (or
    (and
      (and
        (>= (count-once-per-objects preference2:beachball) 6 )
        (>= (* (count-once-per-objects preference2:dodgeball) (+ 5 (count preference1:dodgeball) )
            (* (count-once preference1:golfball) 3 (count-once preference1:book) 10 (+ 180 2 )
              2
            )
            (count preference1:top_drawer)
            (count-once preference1:red)
            (count preference1:doggie_bed:golfball)
            (count-once-per-objects preference1:dodgeball)
          )
          (* (count preference1:basketball) (count-once-per-objects preference1:book:dodgeball) )
        )
        (>= (- 2 )
          (total-score)
        )
      )
      (not
        (< (count preference2:yellow) (count-once-per-objects preference1:dodgeball) )
      )
    )
    (or
      (= (not (count preference2:yellow) ) (* (count preference2) (+ 10 (+ (* (* (+ (count preference2:basketball) 8 )
                  (+ (not (count preference1:beachball:red) ) 4 (count-once-per-objects preference1:beachball) )
                )
                (count preference1:basketball)
                (count preference2:green)
              )
              1
            )
          )
        )
      )
      (>= (* (count preference1:dodgeball) (+ (count preference2:dodgeball) (>= (total-time) 8 )
          )
        )
        (total-score)
      )
    )
  )
)
(:scoring
  (count-once preference1)
)
)

(define (game game-id-840) (:domain many-objects-room-v1)
(:setup
  (exists (?c - game_object)
    (game-conserved
      (not
        (on agent)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?n - block)
        (then
          (hold (< (distance ?n ?n) 6) )
          (once (on agent) )
          (hold (and (= (distance 8 desk) 1) (and (agent_holds ?n ?n) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (count preference1:basketball) (count preference1:dodgeball) )
      (>= (count-shortest preference1:alarm_clock:basketball) (count-unique-positions preference1:golfball) )
    )
    (> 2 (count preference1:blue_dodgeball) )
  )
)
(:scoring
  (count preference1:basketball)
)
)

(define (game game-id-841) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds ?xxx)
  )
)
(:constraints
  (and
    (forall (?a - dodgeball)
      (and
        (preference preference1
          (exists (?u - chair)
            (then
              (hold (in ?u) )
              (once (and (in_motion ?a bed) (and (not (game_over ?u) ) (on ?a ?u) ) (agent_holds ?u) (and (agent_holds ?a) (and (adjacent_side ?u) (not (agent_holds ?a ?u) ) (forall (?r - game_object) (not (not (and (in_motion ?u ?u) (and (and (on ?r ?a ?a) (adjacent ?r ?a) ) (and (agent_holds ?r pink) (agent_holds ?u) (not (agent_holds ?u) ) ) (agent_holds agent) ) (agent_holds ?u) (in_motion agent) (in_motion west_wall) ) ) ) ) ) ) ) )
              (hold (adjacent ?a ?u) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* 5 0 )
    (<= (count-once preference1:basketball) 8 )
  )
)
(:scoring
  (count preference1:golfball)
)
)

(define (game game-id-842) (:domain medium-objects-room-v1)
(:setup
  (forall (?q - game_object)
    (game-conserved
      (in_motion ?q ?q)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?k - (either book wall) ?u - dodgeball ?d - hexagonal_bin)
        (then
          (hold (in_motion ?d) )
          (hold (not (in ?d) ) )
          (hold (in_motion ?d front) )
        )
      )
    )
  )
)
(:terminal
  (> (count preference1:orange:dodgeball) (count preference1:dodgeball) )
)
(:scoring
  4
)
)

(define (game game-id-843) (:domain few-objects-room-v1)
(:setup
  (exists (?d - red_dodgeball)
    (forall (?q - (either hexagonal_bin golfball))
      (exists (?y - pyramid_block)
        (game-conserved
          (touch rug ?q)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?x - wall)
        (at-end
          (and
            (and
              (in_motion agent)
              (in ?x)
              (in_motion ?x ?x)
            )
            (exists (?j - game_object ?p - ball)
              (agent_holds ?x)
            )
          )
        )
      )
    )
    (preference preference2
      (then
        (hold (agent_holds ?xxx rug) )
        (once (= (distance 10 5) (distance ?xxx 3)) )
        (once (or (agent_holds ?xxx pink) (not (is_setup_object agent) ) ) )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference1:cube_block) 1 )
)
(:scoring
  (count preference1:dodgeball:hexagonal_bin)
)
)

(define (game game-id-844) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-conserved
      (= 8 1 (distance 6 ?xxx))
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?e - doggie_bed ?z - hexagonal_bin)
        (then
          (hold (adjacent ?z) )
          (hold (and (agent_holds ?z left) ) )
          (once (in_motion ?z) )
        )
      )
    )
    (preference preference2
      (exists (?z - ball)
        (at-end
          (not
            (in rug)
          )
        )
      )
    )
  )
)
(:terminal
  (> (count-once preference1:yellow:basketball) (count-once-per-objects preference2:side_table) )
)
(:scoring
  (count-once-per-objects preference1:orange)
)
)

(define (game game-id-845) (:domain many-objects-room-v1)
(:setup
  (forall (?f ?q ?z ?t ?i ?g - hexagonal_bin)
    (and
      (forall (?y ?j - wall ?r - chair)
        (game-conserved
          (in_motion ?i ?z)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?v - hexagonal_bin)
        (then
          (hold (exists (?w - dodgeball) (and (not (in_motion ?w ?w) ) (in_motion pink agent) ) ) )
          (once (agent_holds yellow door) )
        )
      )
    )
  )
)
(:terminal
  (> (< (and (> (count-once-per-external-objects preference1:cylindrical_block) (count-once preference1:green) )
        5
      )
      (total-time)
    )
    (count preference1:brown)
  )
)
(:scoring
  (count preference1:doggie_bed:golfball)
)
)

(define (game game-id-846) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (game-optional
        (in_motion floor)
      )
      (game-conserved
        (in ball)
      )
    )
    (and
      (and
        (exists (?i - doggie_bed)
          (game-conserved
            (in_motion ?i ?i)
          )
        )
      )
      (game-conserved
        (agent_holds ?xxx)
      )
      (and
        (exists (?o - triangular_ramp)
          (exists (?z - red_dodgeball ?c - block)
            (exists (?u - hexagonal_bin)
              (game-optional
                (on north_wall ?u ?u)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?x - (either laptop pencil doggie_bed hexagonal_bin tall_cylindrical_block alarm_clock yellow_cube_block) ?g - cube_block)
      (and
        (preference preference1
          (exists (?j - hexagonal_bin)
            (then
              (once (in_motion ?j) )
              (once (adjacent ?j) )
              (once (and (and (in ?j) (agent_holds ?g) ) (exists (?t - dodgeball) (not (agent_holds ?g) ) ) (on ?g bed) (in_motion south_wall ?j) ) )
            )
          )
        )
        (preference preference2
          (at-end
            (touch ?g ?g)
          )
        )
      )
    )
  )
)
(:terminal
  (> (count preference1:beachball) (* 3 (count preference1:hexagonal_bin:dodgeball) )
  )
)
(:scoring
  (count-once-per-objects preference2:blue_dodgeball:dodgeball)
)
)

(define (game game-id-847) (:domain many-objects-room-v1)
(:setup
  (and
    (game-optional
      (touch ?xxx ?xxx ?xxx)
    )
    (and
      (game-optional
        (on ?xxx ?xxx)
      )
    )
  )
)
(:constraints
  (and
    (forall (?a ?b ?x ?j - dodgeball ?u - building)
      (and
        (preference preference1
          (exists (?v - dodgeball)
            (then
              (once (in_motion ?u) )
              (hold (= 1 (distance )) )
              (once (and (on ?v ?u) (and (in_motion rug) (not (touch ?u) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= 50 (<= (count-total preference1:doggie_bed) (count preference1) )
    )
    (or
      (or
        (>= (* (count-once-per-objects preference1:golfball) (count preference1:pink:dodgeball:dodgeball) )
          (count-once-per-objects preference1:blue_dodgeball)
        )
        (or
          (>= (* 4 (* (* (count-once-per-objects preference1:pink:yellow) 1 )
                (external-forall-maximize
                  (* (* (count preference1:dodgeball:alarm_clock) (* 7 (* (count-unique-positions preference1:red) (count-once-per-objects preference1:golfball:red) )
                      )
                    )
                    2
                  )
                )
              )
              5
              (count-shortest preference1:dodgeball:dodgeball)
              3
              (+ (count-total preference1:beachball) 3 )
              7
              2
              (count-overlapping preference1:red)
            )
            0
          )
          (<= 2 6 )
          (or
            (>= (count preference1:golfball:basketball) (count-once-per-objects preference1:beachball) )
            (or
              (>= (count-once preference1:hexagonal_bin) 300 )
              (> 1 (count preference1:red) )
            )
          )
        )
        (>= (total-time) (* (count-once preference1:rug) (* (count-once-per-objects preference1:beachball) (* (* 7 2 )
                2
              )
            )
            (* (count-once-per-objects preference1:dodgeball) (external-forall-maximize (count preference1:pink_dodgeball) ) )
            2
          )
        )
      )
      (= 8 (* 6 (* (count preference1:pyramid_block:side_table:pink) (count-once-per-objects preference1:dodgeball:dodgeball) )
          (count preference1:beachball)
        )
      )
    )
  )
)
(:scoring
  5
)
)

(define (game game-id-848) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?u - cube_block ?n - hexagonal_bin)
      (and
        (game-conserved
          (same_object ?n ?n)
        )
        (exists (?h - ball ?o - pillow)
          (and
            (exists (?m - hexagonal_bin)
              (forall (?s - hexagonal_bin ?e - (either golfball basketball) ?v - cube_block ?s - doggie_bed)
                (game-optional
                  (on ?s)
                )
              )
            )
          )
        )
        (and
          (exists (?o - cube_block)
            (and
              (and
                (and
                  (and
                    (or
                      (and
                        (game-optional
                          (not
                            (not
                              (on ?n)
                            )
                          )
                        )
                      )
                      (not
                        (game-conserved
                          (agent_holds ?o ?o)
                        )
                      )
                      (game-conserved
                        (exists (?i - dodgeball ?h - hexagonal_bin ?y - ball)
                          (agent_holds ?n upright)
                        )
                      )
                    )
                  )
                  (game-conserved
                    (agent_holds ?n)
                  )
                  (and
                    (game-optional
                      (and
                        (in_motion ?n)
                        (exists (?l - ball ?u - hexagonal_bin)
                          (not
                            (and
                              (equal_z_position ?u ?u)
                              (and
                                (and
                                  (and
                                    (rug_color_under ?n desk)
                                    (adjacent_side ?n)
                                  )
                                  (not
                                    (agent_holds ?u)
                                  )
                                  (not
                                    (not
                                      (not
                                        (and
                                          (in_motion ?u)
                                          (in floor)
                                        )
                                      )
                                    )
                                  )
                                )
                                (and
                                  (not
                                    (and
                                      (in ?u)
                                      (in_motion ?u rug)
                                    )
                                  )
                                  (in_motion ?n ?u)
                                  (not
                                    (and
                                      (same_type ?n ?o)
                                      (same_color )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
              (exists (?d - (either laptop cube_block))
                (and
                  (and
                    (and
                      (and
                        (game-optional
                          (touch ?n ?d)
                        )
                        (or
                          (game-optional
                            (faces south_west_corner color)
                          )
                          (game-conserved
                            (not
                              (and
                                (in_motion ?o)
                                (forall (?t - color)
                                  (and
                                    (adjacent ?o ?d ?o)
                                    (and
                                      (and
                                        (exists (?q - block)
                                          (on ?n ?q)
                                        )
                                        (not
                                          (on bed ?d)
                                        )
                                      )
                                      (agent_holds ?n)
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                        (game-optional
                          (and
                            (not
                              (in ?d ?n)
                            )
                            (exists (?f - hexagonal_bin)
                              (< 9 1)
                            )
                            (and
                              (on ?n ?o)
                              (not
                                (forall (?p - building)
                                  (not
                                    (in ?p)
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                    (game-conserved
                      (and
                        (not
                          (in_motion ?n)
                        )
                        (agent_holds ?n)
                      )
                    )
                    (and
                      (exists (?z - hexagonal_bin)
                        (game-optional
                          (and
                            (and
                              (not
                                (agent_holds ?d)
                              )
                              (or
                                (agent_holds bed)
                                (and
                                  (in_motion ?d)
                                  (in_motion ?n)
                                )
                              )
                              (in_motion ?o)
                            )
                            (agent_holds ?n ?o)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
          (forall (?g - blue_pyramid_block ?i - hexagonal_bin)
            (or
              (game-conserved
                (exists (?e - bridge_block)
                  (not
                    (agent_holds desk)
                  )
                )
              )
              (forall (?u - hexagonal_bin ?j - hexagonal_bin)
                (forall (?q - cube_block ?v - dodgeball)
                  (game-conserved
                    (and
                      (in_motion ?j ?j)
                      (in_motion ?v ?i)
                    )
                  )
                )
              )
            )
          )
          (and
            (forall (?u - hexagonal_bin ?p - dodgeball ?x - cube_block ?d - building)
              (game-conserved
                (in_motion ?d ?n)
              )
            )
          )
        )
      )
    )
    (and
      (game-conserved
        (and
          (on ?xxx ?xxx)
          (in_motion ?xxx ?xxx)
        )
      )
      (game-conserved
        (in_motion ?xxx)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?m - blinds ?d - wall)
        (then
          (hold (not (not (not (not (in_motion ?d) ) ) ) ) )
          (once (agent_holds ?d) )
          (hold (forall (?o - hexagonal_bin) (on agent ?d) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= 2 (/ (count-once preference1:hexagonal_bin:yellow) (count-once-per-external-objects preference1:dodgeball) ) )
      (< (+ (count-same-positions preference1:blue_dodgeball) 3 )
        (* (* (count-once-per-objects preference1:purple) (* (* (count-overlapping preference1:golfball) (* (count preference1:dodgeball:beachball) (* 6 (count-once-per-objects preference1:orange) (+ (count preference1:basketball) (* (count preference1:green:tall_cylindrical_block) 10 (count preference1:blue_cube_block) 3 (= 5 (+ (* 3 5 )
                            (count-once-per-objects preference1:beachball:cube_block)
                          )
                        )
                        3
                      )
                      (count-once-per-objects preference1:golfball:beachball:beachball)
                      (+ (count-once-per-objects preference1:red_pyramid_block) (> (* 8 (* 50 (+ (* 3 (* (+ 2 (+ (* 5 (* (count preference1:doggie_bed:pyramid_block:pink) 2 )
                                        )
                                        (count-overlapping preference1)
                                      )
                                    )
                                    (count preference1:basketball)
                                  )
                                )
                                (count-once preference1:basketball)
                              )
                              (+ (- (= (* 9 (+ (count-once-per-objects preference1:dodgeball) (count preference1:yellow) )
                                    )
                                    (* 18 3 (+ (count preference1:purple:pyramid_block) (count-once-per-objects preference1:blue) )
                                    )
                                  )
                                )
                                9
                              )
                            )
                          )
                          (count-once-per-objects preference1:block)
                        )
                      )
                      (count preference1:blue_dodgeball)
                      10
                    )
                  )
                )
              )
            )
          )
          (count-overlapping preference1:rug:pink)
        )
      )
      (not
        (>= (* 2 (* (count-same-positions preference1:green:blue_dodgeball) (count-increasing-measure preference1:blue_cube_block) )
          )
          (external-forall-maximize
            3
          )
        )
      )
    )
    (> (count-once-per-objects preference1:pyramid_block) (count-once-per-objects preference1:red) )
  )
)
(:scoring
  3
)
)

(define (game game-id-849) (:domain many-objects-room-v1)
(:setup
  (forall (?o - (either key_chain))
    (exists (?b ?g ?k - (either pencil wall))
      (exists (?m - doggie_bed ?p - doggie_bed)
        (game-optional
          (in ?p ?o)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?n - hexagonal_bin)
        (then
          (hold (> 1 (distance room_center room_center)) )
          (once (in_motion ?n ?n) )
          (hold-while (agent_holds ?n) (and (adjacent ?n) ) (touch ?n) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count-once-per-external-objects preference1:rug) 7 )
    (count preference1:golfball)
  )
)
(:scoring
  20
)
)

(define (game game-id-850) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (in_motion ?xxx ?xxx)
  )
)
(:constraints
  (and
    (forall (?n - hexagonal_bin)
      (and
        (preference preference1
          (exists (?b ?u - ball ?u - golfball)
            (then
              (hold (not (not (on ?u) ) ) )
              (hold (on ?u ?n) )
              (once (agent_holds ?u) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?i ?t ?n - chair ?u ?r - ball)
        (then
          (once (and (on ?u ?r) (agent_holds floor ?r) ) )
          (hold (not (above ?r) ) )
          (hold (in_motion ?u ?u) )
        )
      )
    )
    (preference preference3
      (exists (?n ?h - ball)
        (then
          (once (< 1 7) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count-once preference3:golfball:dodgeball) 3 )
    (* (+ (+ (count-total preference3:blue_dodgeball) (* 4 (count preference1:golfball) )
        )
        (* (count preference3:dodgeball) (count preference3:hexagonal_bin) (count-once-per-objects preference2:yellow:pink) )
        (* (or (count preference2:pink:rug) (+ (- (count-once preference3:yellow) )
              (count preference1:pink:cube_block)
              (count preference3:hexagonal_bin:yellow:beachball)
            )
          )
          (* 1 )
          12
          (count-once preference2:pink_dodgeball)
          (= 30 )
          (+ (count-once-per-external-objects preference3:top_drawer:cube_block) (and (count-once-per-external-objects preference2:dodgeball:pink) (and 4 3 2 ) (* (total-time) 10 )
            )
          )
          10
          (count preference3:pink:beachball)
          (* 4 (count preference1:doggie_bed) )
        )
        (* 15 (and (+ (count preference3:pink) (- (total-time) )
            )
            (count preference1:yellow:orange)
            (+ 30 (+ (* (+ (count-once-per-external-objects preference1:basketball) 10 )
                  (count preference2:blue_dodgeball)
                )
                (external-forall-minimize
                  30
                )
              )
            )
          )
        )
        (count-once-per-objects preference2:yellow_cube_block)
        (+ (+ (+ (external-forall-minimize 4 ) (count preference3:dodgeball:doggie_bed) )
            (* (count preference1) (count-once-per-external-objects preference3:hexagonal_bin:yellow) )
          )
          (count preference2:basketball:beachball)
        )
        (- 10 )
        (count preference1:golfball:alarm_clock:red_pyramid_block)
        100
        3
        (* (* (count preference2:pink_dodgeball) (count-once preference3:golfball) )
          (count-overlapping preference2:pink_dodgeball:dodgeball)
        )
        10
      )
      (count-once preference1:beachball)
    )
  )
)
(:scoring
  6
)
)

(define (game game-id-851) (:domain many-objects-room-v1)
(:setup
  (exists (?l - (either cellphone yellow_cube_block hexagonal_bin))
    (forall (?o - bridge_block)
      (and
        (exists (?e - (either doggie_bed book teddy_bear yellow_cube_block))
          (and
            (and
              (and
                (exists (?p - hexagonal_bin)
                  (and
                    (exists (?t - block ?b - hexagonal_bin)
                      (and
                        (and
                          (game-conserved
                            (not
                              (agent_holds ?l)
                            )
                          )
                          (game-conserved
                            (not
                              (agent_holds ?l)
                            )
                          )
                        )
                        (and
                          (forall (?n - ball)
                            (exists (?q - (either golfball book mug))
                              (and
                                (game-optional
                                  (and
                                    (and
                                      (on door)
                                      (same_color ?b)
                                    )
                                    (not
                                      (and
                                        (and
                                          (and
                                            (or
                                              (opposite ?n)
                                              (on ?p ?p)
                                            )
                                            (in_motion ?l ?e)
                                          )
                                          (touch ?l ?n)
                                        )
                                        (and
                                          (not
                                            (not
                                              (in_motion ?n)
                                            )
                                          )
                                          (on ?o ?n)
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                    (forall (?f - color ?k - ball)
                      (game-conserved
                        (agent_holds ?p desk ?p)
                      )
                    )
                    (and
                      (game-optional
                        (on ?o)
                      )
                      (and
                        (and
                          (and
                            (game-optional
                              (not
                                (and
                                  (not
                                    (exists (?k - color ?h ?k - game_object)
                                      (adjacent ?k)
                                    )
                                  )
                                  (not
                                    (not
                                      (in_motion ?p agent)
                                    )
                                  )
                                )
                              )
                            )
                          )
                          (exists (?f - hexagonal_bin)
                            (exists (?w - chair)
                              (and
                                (and
                                  (game-optional
                                    (and
                                      (and
                                        (between south_west_corner ?p)
                                        (agent_holds ?l)
                                        (> (distance agent ?l) 3)
                                        (adjacent ?o ?o)
                                        (and
                                          (not
                                            (not
                                              (not
                                                (agent_holds ?e)
                                              )
                                            )
                                          )
                                        )
                                        (adjacent ?o)
                                      )
                                      (touch ?f)
                                    )
                                  )
                                  (game-optional
                                    (in_motion sideways)
                                  )
                                )
                                (and
                                  (and
                                    (not
                                      (forall (?z - hexagonal_bin ?b - pillow)
                                        (exists (?m - building ?u - cylindrical_block)
                                          (exists (?a - dodgeball ?v ?q - doggie_bed ?a ?n - shelf ?m - triangular_ramp)
                                            (game-conserved
                                              (touch floor)
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                  (game-optional
                                    (adjacent door ?e)
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                      (and
                        (game-conserved
                          (agent_holds rug ?l)
                        )
                      )
                    )
                  )
                )
                (and
                  (and
                    (and
                      (game-conserved
                        (agent_holds ?o)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?p ?i - wall)
        (then
          (hold (and (exists (?g - hexagonal_bin) (agent_holds ?p) ) (in_motion door ?i) ) )
          (once (adjacent_side ?p) )
          (once (toggled_on ?p) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 3 (count preference1:white) )
  )
)
(:scoring
  (count preference1:pyramid_block:green:beachball)
)
)

(define (game game-id-852) (:domain medium-objects-room-v1)
(:setup
  (forall (?q - ball ?h - cylindrical_block)
    (forall (?x - red_dodgeball)
      (forall (?r ?w - (either dodgeball tall_cylindrical_block book rug cube_block))
        (game-optional
          (in_motion ?x ?w)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?i - hexagonal_bin ?d - hexagonal_bin ?o - game_object)
        (at-end
          (and
            (not
              (in_motion ?o ?o)
            )
            (and
              (agent_holds ?o)
              (same_type ?o)
            )
            (in_motion ?o)
          )
        )
      )
    )
    (preference preference2
      (exists (?a - block)
        (then
          (hold (in ?a) )
          (hold (in_motion ?a) )
          (once (agent_holds ?a) )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (= (and 5 ) (* (- (count-once-per-objects preference1:yellow) )
        (+ (count preference1:basketball) (count-once preference1) )
      )
    )
  )
)
(:scoring
  (count preference1:yellow_cube_block)
)
)

(define (game game-id-853) (:domain few-objects-room-v1)
(:setup
  (exists (?s - ball ?s - doggie_bed)
    (or
      (game-optional
        (not
          (in_motion ?s)
        )
      )
      (and
        (and
          (game-conserved
            (in_motion ?s north_wall)
          )
          (exists (?a - teddy_bear)
            (game-conserved
              (in_motion ?a)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?v - bridge_block)
      (and
        (preference preference1
          (exists (?k - chair)
            (then
              (once (touch ?v) )
              (once (in_motion ?v) )
              (hold-for 10 (and (adjacent ?k) (not (and (in_motion ?v ?k) (not (agent_holds ?v ?v ?v) ) ) ) ) )
            )
          )
        )
        (preference preference2
          (exists (?l - (either golfball laptop) ?k - teddy_bear)
            (then
              (once (in_motion ?v ?v) )
              (once (agent_holds ?v ?v) )
              (once (game_over ?k ?k) )
            )
          )
        )
      )
    )
    (forall (?a - pyramid_block)
      (and
        (preference preference3
          (exists (?e - hexagonal_bin ?d - block ?p - dodgeball)
            (then
              (once (not (or (agent_holds ?p rug) ) ) )
              (hold-for 9 (not (agent_holds ?p) ) )
              (hold (in ?a ?p) )
            )
          )
        )
        (preference preference4
          (exists (?l - hexagonal_bin)
            (at-end
              (touch ?l ?a)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= (= 2 (count preference4:hexagonal_bin) )
    (count preference2:orange)
  )
)
(:scoring
  (count preference4:basketball)
)
)

(define (game game-id-854) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (and
        (game-optional
          (adjacent agent ?xxx)
        )
      )
      (and
        (forall (?k - (either mug cube_block dodgeball))
          (and
            (exists (?l - teddy_bear ?j - (either dodgeball hexagonal_bin))
              (exists (?t - hexagonal_bin)
                (and
                  (game-conserved
                    (< 1 0)
                  )
                )
              )
            )
            (not
              (and
                (and
                  (and
                    (and
                      (game-conserved
                        (agent_holds bed)
                      )
                    )
                    (and
                      (game-optional
                        (agent_holds ?k ?k)
                      )
                    )
                    (and
                      (forall (?c - rug)
                        (game-conserved
                          (agent_holds agent ?k)
                        )
                      )
                    )
                  )
                  (game-optional
                    (and
                      (on ?k)
                    )
                  )
                  (and
                    (game-optional
                      (and
                        (on ?k)
                        (in ?k ?k)
                      )
                    )
                    (forall (?v - ball)
                      (and
                        (game-conserved
                          (agent_holds ?k ?v)
                        )
                      )
                    )
                    (game-conserved
                      (agent_holds pink_dodgeball)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?t - hexagonal_bin)
        (then
          (once (not (in ?t ?t) ) )
          (hold (and (exists (?y - block ?r - hexagonal_bin) (agent_holds rug) ) (in ?t) ) )
          (hold (in_motion ?t desk agent) )
        )
      )
    )
  )
)
(:terminal
  (> 3 7 )
)
(:scoring
  9
)
)

(define (game game-id-855) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (and
      (not
        (on ?xxx ?xxx)
      )
      (>= 1 (distance agent ?xxx))
      (not
        (in ?xxx)
      )
    )
  )
)
(:constraints
  (and
    (forall (?a - hexagonal_bin)
      (and
        (preference preference1
          (exists (?o - pillow)
            (then
              (once (and (exists (?p - beachball) (not (agent_holds ?p ?a) ) ) (in_motion ?a) ) )
              (hold-while (and (not (and (< 1 1) ) ) (and (in_motion ?a green pink_dodgeball) (agent_holds ?o) ) ) (not (in ?a) ) (and (not (game_start ?o ?a) ) (not (on ?a) ) ) (and (in_motion ?a ?a) (game_over bed agent) ) )
              (once (not (not (in_motion ?a) ) ) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?r - dodgeball)
        (then
          (once (and (same_color ?r) (in_motion ) ) )
          (once (game_start ?r) )
          (once (adjacent ?r ?r) )
        )
      )
    )
    (preference preference3
      (exists (?w - teddy_bear)
        (then
          (once (< 2 (distance 4 ?w)) )
          (hold-while (< 0 8) (faces ?w desk) )
          (any)
        )
      )
    )
    (forall (?b - teddy_bear)
      (and
        (preference preference4
          (exists (?y - triangular_ramp)
            (then
              (hold-for 7 (and (and (and (not (and (rug_color_under ?b) (not (and (in ?y) (>= (distance ?y 7) (distance ?b ?b)) ) ) (touch ?b) (agent_holds ?y) ) ) (in ?y ?y) ) (in ?y) ) (in_motion agent) ) )
              (once (not (on ?b ?y ?y) ) )
              (once (not (in_motion ?y) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (external-forall-maximize (total-time) ) (count preference1:cube_block:top_drawer) )
)
(:scoring
  (count preference4:blue_dodgeball)
)
)

(define (game game-id-856) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (and
      (not
        (not
          (and
            (in_motion rug)
            (agent_holds ?xxx)
          )
        )
      )
      (and
        (agent_holds ?xxx ?xxx)
        (equal_z_position ?xxx)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?h - hexagonal_bin)
        (then
          (once (not (in_motion ?h drawer) ) )
          (once (in ?h ?h) )
          (hold-while (not (not (not (touch agent) ) ) ) (not (faces ?h) ) (and (agent_holds ?h) (and (and (and (agent_holds ?h ?h) (agent_holds ?h pink_dodgeball) (not (in ?h) ) ) (agent_holds ?h) ) (on ?h ?h) ) ) (not (on agent ?h ?h) ) )
        )
      )
    )
  )
)
(:terminal
  (<= (count preference1:pink_dodgeball) (* (count preference1:cube_block) (count-once-per-objects preference1:pink:side_table) )
  )
)
(:scoring
  (count preference1:dodgeball:basketball)
)
)

(define (game game-id-857) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?w - hexagonal_bin)
      (and
        (game-conserved
          (in ?w ?w)
        )
        (game-conserved
          (on ?w ?w)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?f - color ?u ?w - (either dodgeball))
      (and
        (preference preference1
          (then
            (hold-while (between ?w) (in_motion ?w ?u) )
            (once (on rug) )
            (once (in_motion bed ?u) )
          )
        )
      )
    )
    (preference preference2
      (exists (?k ?e - cube_block)
        (then
          (once (on agent ?e) )
          (once (and (and (faces ?e ?e) (adjacent upside_down ?e) ) (and (in floor ?e) (and (and (in_motion ?k) (in ?k ?k) ) (in_motion ?e ?k) ) ) ) )
          (once (>= 1 1) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (count-total preference2:book) (count-once-per-objects preference2:blue_dodgeball:dodgeball) )
  )
)
(:scoring
  (count preference1:hexagonal_bin)
)
)

(define (game game-id-858) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (in_motion ?xxx ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?e - watch ?v - (either blue_cube_block basketball yellow) ?p - desk_shelf)
        (then
          (hold (agent_holds ?p ?p) )
          (hold (in_motion ?p) )
          (once (not (object_orientation ?p) ) )
        )
      )
    )
    (forall (?t - dodgeball ?s - hexagonal_bin)
      (and
        (preference preference2
          (exists (?g - chair ?n - chair)
            (then
              (hold-while (in ?n) (agent_holds ?s) (in_motion front ?s) )
              (once (not (in_motion ?s ?n) ) )
              (once (agent_holds ?n) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< (- (count preference2:beachball) )
    3
  )
)
(:scoring
  (count-once-per-objects preference2:red_pyramid_block)
)
)

(define (game game-id-859) (:domain few-objects-room-v1)
(:setup
  (and
    (or
      (and
        (exists (?d - (either alarm_clock pink yellow_cube_block pyramid_block))
          (and
            (game-conserved
              (not
                (agent_holds ?d ?d)
              )
            )
            (game-conserved
              (agent_holds floor)
            )
            (game-optional
              (not
                (not
                  (and
                    (and
                      (in_motion ?d ?d)
                      (in_motion ?d)
                    )
                    (on ?d)
                    (< 1 1)
                  )
                )
              )
            )
          )
        )
        (and
          (game-optional
            (in_motion ?xxx ?xxx)
          )
        )
      )
      (game-conserved
        (on ?xxx ?xxx)
      )
    )
    (game-conserved
      (exists (?e - curved_wooden_ramp ?u - game_object ?v ?t - dodgeball)
        (and
          (on ?t)
          (in ?t ?v)
        )
      )
    )
    (game-conserved
      (in_motion ?xxx ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?k - dodgeball)
        (then
          (once (forall (?g - teddy_bear ?g - game_object) (exists (?q - flat_block) (in ?g) ) ) )
          (once (not (between ?k) ) )
          (once (on ?k) )
          (once (on ?k) )
        )
      )
    )
    (preference preference2
      (exists (?f - dodgeball)
        (at-end
          (in_motion ?f)
        )
      )
    )
    (preference preference3
      (exists (?g - curved_wooden_ramp)
        (then
          (once-measure (touch tan) (distance room_center desk) )
          (hold (adjacent ?g ?g) )
          (once (exists (?o - hexagonal_bin) (< 0.5 1) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 2 6 )
    (>= (+ 3 (+ (* (* 3 (* (- (* (count preference1:wall) (+ 5 (+ (count-once-per-objects preference1:yellow) (total-score) )
                    )
                  )
                )
                (count preference2:dodgeball)
              )
            )
            5
          )
          (count preference1)
        )
      )
      (total-time)
    )
  )
)
(:scoring
  3
)
)

(define (game game-id-860) (:domain many-objects-room-v1)
(:setup
  (exists (?k - cube_block)
    (and
      (and
        (game-conserved
          (in_motion ?k)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?n - hexagonal_bin ?h - dodgeball)
        (then
          (hold (and (or (not (on ?h ?h) ) (not (rug_color_under ?h) ) (not (and (and (in_motion ?h) (on ?h ?h) ) (and (and (on ?h) (agent_holds ?h ?h) ) (touch agent) ) (agent_holds ?h) ) ) ) (agent_holds ?h) ) )
          (once (on ?h ?h agent) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (count preference1:beachball) )
)
(:scoring
  5
)
)

(define (game game-id-861) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (equal_z_position front)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?f - dodgeball ?q - block)
        (then
          (once (and (and (in_motion ?q ?q) (and (in ?q) (on ?q bed) ) ) (in ?q) ) )
          (once (agent_holds ?q) )
          (once (not (not (not (exists (?a - drawer ?z - block) (adjacent ?q) ) ) ) ) )
        )
      )
    )
    (preference preference2
      (exists (?i - doggie_bed)
        (then
          (once (in_motion ?i ?i) )
          (once (on ?i bed) )
          (once (and (and (object_orientation ?i ?i) (object_orientation ?i) (agent_holds ?i ?i) ) (touch ?i ?i) (exists (?k - chair) (agent_holds agent) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (* (+ (count-once preference2:book) (count preference1:beachball) )
        7
      )
      4
      (count-once-per-objects preference2:dodgeball)
      (count-longest preference2:green:beachball)
    )
    (count preference1)
  )
)
(:scoring
  2
)
)

(define (game game-id-862) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (and
      (in ?xxx)
      (= (distance ?xxx 10) (distance 8 ?xxx))
      (not
        (and
          (in_motion top_shelf ?xxx)
          (in ?xxx ?xxx)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?x - game_object)
        (at-end
          (and
            (equal_z_position ?x ?x ?x)
            (agent_holds ?x ?x)
            (and
              (and
                (agent_holds ?x rug)
                (exists (?q - cube_block)
                  (exists (?o ?t ?r - game_object)
                    (adjacent agent ?r)
                  )
                )
              )
              (and
                (in_motion rug ?x)
                (in_motion ?x ?x)
              )
            )
            (and
              (and
                (not
                  (in_motion ?x)
                )
                (not
                  (agent_holds ?x)
                )
              )
              (>= (distance 6 door) 2)
            )
          )
        )
      )
    )
    (forall (?g - shelf ?w - cube_block ?a - wall ?m - dodgeball)
      (and
        (preference preference2
          (exists (?z ?j - (either alarm_clock alarm_clock))
            (at-end
              (in_motion ?z)
            )
          )
        )
        (preference preference3
          (exists (?x - pillow)
            (then
              (once (and (not (agent_holds ?x) ) (and (in_motion ?x ?m) (and (touch ?m) (in_motion ?m) ) ) ) )
            )
          )
        )
        (preference preference4
          (exists (?j - doggie_bed)
            (then
              (once (and (and (rug_color_under ?j) (not (exists (?p - hexagonal_bin) (not (agent_holds ?j) ) ) ) (in_motion ?j) (not (not (not (adjacent ?j ?j) ) ) ) (agent_holds front) (and (in_motion ?m ?j) (not (in_motion ?j ?j) ) ) (in_motion pink ?m) ) (not (agent_holds ?j ?m) ) ) )
              (once (in_motion ?m ?j) )
              (hold-while (and (agent_holds ?m) (not (not (not (and (agent_holds bed) (in_motion ?j) ) ) ) ) ) (not (not (object_orientation ?j) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (= 1 (/ (or (count preference1:rug) (count-once-per-objects preference1:pink) 2 ) (- (count-once-per-objects preference4:tall_cylindrical_block) )
    )
  )
)
(:scoring
  (total-time)
)
)

(define (game game-id-863) (:domain many-objects-room-v1)
(:setup
  (exists (?a - game_object)
    (and
      (game-optional
        (in ?a)
      )
      (game-optional
        (< (distance ?a 7) 10)
      )
    )
  )
)
(:constraints
  (and
    (forall (?f - ball)
      (and
        (preference preference1
          (exists (?o - wall)
            (then
              (hold (not (on ?o) ) )
              (once (touch ?f) )
              (once (not (agent_holds ?f ?o) ) )
            )
          )
        )
        (preference preference2
          (then
            (once (not (adjacent_side top_drawer) ) )
            (once (in_motion ?f bed ?f) )
            (hold (and (agent_holds ?f) (in ?f) ) )
            (once (on bed ?f) )
            (once (object_orientation ?f) )
          )
        )
      )
    )
    (preference preference3
      (exists (?k - pillow ?u - game_object)
        (then
          (once (in_motion ?u) )
          (once (in_motion ?u) )
          (once (agent_holds back) )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (count-once preference2:green:dodgeball) )
)
(:scoring
  (count preference1:basketball:basketball:green)
)
)

(define (game game-id-864) (:domain many-objects-room-v1)
(:setup
  (exists (?y - dodgeball)
    (and
      (and
        (game-optional
          (same_color ?y ?y)
        )
      )
      (game-optional
        (not
          (and
            (in_motion pink ?y)
            (on ?y ?y)
            (adjacent ?y)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?z - beachball)
        (then
          (hold (and (touch ?z) (agent_holds ?z) ) )
          (once (and (not (on floor rug) ) (exists (?g - (either cylindrical_block dodgeball pyramid_block)) (not (on ?g ?z) ) ) ) )
        )
      )
    )
    (forall (?z - block)
      (and
        (preference preference2
          (exists (?j - triangular_ramp)
            (then
              (hold-while (and (on ?j side_table) (not (in ?z ?j) ) ) (and (not (in agent) ) (and (and (not (in ?j) ) (agent_holds drawer) ) (exists (?e ?v ?i ?m - dodgeball ?h - ball) (on ?j bed) ) (in ?j) ) ) (and (and (in_motion ?j ?z) (faces ?z ?z) ) (is_setup_object ?z) ) )
              (once (< (distance room_center 6 ?z) 1) )
              (once (not (in_motion top_drawer) ) )
            )
          )
        )
        (preference preference3
          (exists (?a - teddy_bear)
            (then
              (once (not (not (in_motion ?z) ) ) )
              (once (and (not (not (agent_holds agent) ) ) (in_motion ?a) ) )
              (once (and (and (in_motion ?z ?z) ) (in ?z) (in_motion ?z) ) )
            )
          )
        )
      )
    )
    (preference preference4
      (exists (?w - dodgeball ?f - game_object)
        (then
          (hold (not (agent_holds ?f floor) ) )
          (once (and (in ?f) (in green_golfball) ) )
          (once-measure (not (in_motion ?f) ) (distance agent side_table) )
        )
      )
    )
  )
)
(:terminal
  (<= 1 (count-once-per-external-objects preference4:dodgeball) )
)
(:scoring
  (< (count-shortest preference2:dodgeball) 1 )
)
)

(define (game game-id-865) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (same_color ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?t - dodgeball ?j - (either block hexagonal_bin book alarm_clock))
        (then
          (once (and (agent_holds ?j) (and (agent_holds ?j ?j) (adjacent ?j) (not (and (agent_holds agent ?j) (in_motion ?j) ) ) ) ) )
          (hold (not (and (and (not (and (and (not (and (in_motion ?j pillow) (not (on ) ) (on floor) ) ) (agent_holds ?j ?j) ) (agent_holds ?j) ) ) (rug_color_under ?j ?j) ) (adjacent ?j ?j) ) ) )
          (hold (exists (?e ?d - book) (in ?j ?e) ) )
        )
      )
    )
    (preference preference2
      (exists (?l - (either desktop yellow_cube_block))
        (then
          (once (agent_holds ?l ?l) )
          (once (< (distance ?l ?l) 2) )
          (once (agent_holds ?l ?l) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (count preference2:golfball) (* (count preference1:book:dodgeball) (count preference2:basketball:blue_dodgeball) )
    )
    (count preference1:green)
  )
)
(:scoring
  3
)
)

(define (game game-id-866) (:domain medium-objects-room-v1)
(:setup
  (exists (?f - teddy_bear)
    (and
      (forall (?q - cube_block)
        (and
          (exists (?z - hexagonal_bin ?r - dodgeball)
            (game-conserved
              (not
                (on ?r ?q)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?y ?u ?e - doggie_bed ?v - dodgeball ?k - teddy_bear ?v - red_pyramid_block)
      (and
        (preference preference1
          (exists (?d - teddy_bear ?w ?j - wall ?r - color)
            (at-end
              (faces ?v upright)
            )
          )
        )
      )
    )
    (forall (?p - wall ?z - chair)
      (and
        (preference preference2
          (exists (?s - building ?y ?f - block)
            (at-end
              (= 2 (distance agent 0 desk))
            )
          )
        )
        (preference preference3
          (exists (?v - desktop)
            (then
              (once (agent_holds ?z) )
              (hold (not (and (agent_holds rug desk) (agent_holds ?z floor) ) ) )
              (once (in_motion ?z) )
              (once (agent_holds floor) )
              (hold (in ?v ?z) )
            )
          )
        )
        (preference preference4
          (exists (?b - triangular_ramp)
            (at-end
              (in_motion ?z ?z)
            )
          )
        )
      )
    )
    (preference preference5
      (exists (?z - (either alarm_clock curved_wooden_ramp floor))
        (then
          (hold-while (not (not (in_motion ?z) ) ) (and (not (agent_holds ?z) ) (adjacent ?z) (in_motion ?z) ) )
          (hold (touch rug ?z) )
          (once (on ?z ?z) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (and (or (count preference2:green:dodgeball) ) (count-once preference2:basketball:dodgeball) 7 ) (* (- (external-forall-maximize (count preference1:beachball) ) )
        (count-once-per-objects preference2:cylindrical_block)
      )
    )
    (>= 7 (* 2 3 )
    )
    (>= 5 10 )
  )
)
(:scoring
  (+ (* 10 5 )
    1
  )
)
)

(define (game game-id-867) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (game-conserved
        (and
          (agent_holds ?xxx ?xxx)
          (and
            (agent_holds ?xxx)
            (in_motion ?xxx)
          )
        )
      )
      (game-conserved
        (in_motion ?xxx)
      )
      (and
        (game-optional
          (agent_holds ?xxx ?xxx)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?o - (either dodgeball dodgeball key_chain) ?t - hexagonal_bin)
        (then
          (once (in ?t) )
          (once (in ?t) )
          (hold-while (exists (?y - cube_block) (agent_holds desk) ) (< (distance 1 room_center) 1) (not (not (not (in ?t) ) ) ) )
        )
      )
    )
    (forall (?x - chair)
      (and
        (preference preference2
          (exists (?l - hexagonal_bin)
            (then
              (once (and (not (not (adjacent ?l) ) ) (agent_holds ?x) ) )
              (hold (agent_holds ?x) )
              (hold (agent_holds ?l ?x) )
              (once (not (adjacent_side ?l) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:blue_cube_block) (* (count-unique-positions preference2:dodgeball) (count-once-per-objects preference2:wall) )
  )
)
(:scoring
  (count preference1:golfball)
)
)

(define (game game-id-868) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (and
        (and
          (game-conserved
            (exists (?u - (either key_chain pyramid_block) ?x - (either dodgeball ball doggie_bed))
              (agent_holds ?x ?x)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?b - hexagonal_bin)
        (at-end
          (in_motion ?b)
        )
      )
    )
    (preference preference2
      (exists (?b - hexagonal_bin)
        (then
          (hold (not (game_over ?b ?b) ) )
          (once (adjacent ?b) )
          (hold (< 0 2) )
        )
      )
    )
  )
)
(:terminal
  (not
    (<= 3 (+ (* (count-once-per-objects preference1:beachball) (total-score) )
        (count preference2:pink)
        (count-once-per-objects preference1:blue_pyramid_block)
        10
      )
    )
  )
)
(:scoring
  (+ (+ (* (* 5 (external-forall-maximize (count-once-per-external-objects preference1) ) )
        4
        30
        (count-once-per-objects preference2:dodgeball)
      )
      3
    )
  )
)
)

(define (game game-id-869) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?b - bridge_block)
      (game-conserved
        (and
          (agent_holds ?b)
          (and
            (and
              (not
                (agent_holds door ?b)
              )
            )
            (agent_holds ?b)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?m - hexagonal_bin)
        (at-end
          (and
            (< 1 1)
            (agent_holds desk ?m)
            (in_motion bed ?m)
            (not
              (in_motion desk ?m)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 5 3 )
)
(:scoring
  (> 3 (count-overlapping preference1:brown) )
)
)

(define (game game-id-870) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?n - block)
      (forall (?i - (either dodgeball golfball dodgeball cube_block) ?y - teddy_bear ?u - shelf)
        (and
          (game-conserved
            (in_motion ?u)
          )
          (and
            (and
              (and
                (or
                  (or
                    (game-conserved
                      (and
                        (agent_holds agent)
                        (in_motion ?u)
                      )
                    )
                  )
                  (exists (?e - ball)
                    (forall (?f - wall ?x - doggie_bed)
                      (game-conserved
                        (in_motion ?n)
                      )
                    )
                  )
                )
              )
            )
            (and
              (forall (?v - color ?b - block)
                (exists (?m - curved_wooden_ramp)
                  (game-optional
                    (agent_holds desk ?n)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?p - hexagonal_bin)
        (then
          (hold-while (and (on ?p) (in ?p) ) (agent_holds ?p ?p) )
          (hold (in_motion ?p agent) )
          (hold (in desk ?p) )
        )
      )
    )
  )
)
(:terminal
  (>= (external-forall-minimize 3 ) 10 )
)
(:scoring
  5
)
)

(define (game game-id-871) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (exists (?h - sliding_door)
        (game-conserved
          (and
            (in_motion ?h)
            (and
              (not
                (on ?h)
              )
              (agent_holds ?h)
            )
            (on ?h)
          )
        )
      )
    )
    (game-conserved
      (and
        (in_motion bed ?xxx)
        (or
          (agent_holds ?xxx)
          (not
            (> 9 1)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?e - hexagonal_bin)
      (and
        (preference preference1
          (exists (?x - (either golfball doggie_bed))
            (then
              (once (and (and (agent_holds ?e) (touch ?e ?x) ) (in_motion ?x) ) )
              (once (not (in_motion ?x) ) )
              (once (and (in ?e) (and (and (and (not (in_motion ?x) ) (agent_holds ?e) ) (same_color ?e) ) (agent_holds ?x) ) ) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?h - hexagonal_bin)
        (then
          (once (and (or (and (and (on back ?h) (agent_holds ?h) ) (agent_holds ?h ?h) ) (not (and (agent_holds ?h) (in ?h) (exists (?z - game_object) (in_motion ?h) ) (and (and (agent_holds ?h ?h) (>= 1 1) ) (on ?h bed) ) ) ) ) (on ?h) ) )
          (once (not (agent_holds ?h) ) )
          (hold (and (in_motion ?h) (not (agent_holds ?h) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (count-once-per-objects preference2:wall) )
)
(:scoring
  10
)
)

(define (game game-id-872) (:domain many-objects-room-v1)
(:setup
  (forall (?i - wall ?i - shelf)
    (game-optional
      (object_orientation bridge_block)
    )
  )
)
(:constraints
  (and
    (forall (?d - doggie_bed)
      (and
        (preference preference1
          (exists (?j - triangular_ramp)
            (then
              (once (on ?j) )
              (once (agent_holds agent) )
              (hold-while (not (on ?j) ) (agent_holds ?j) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?p - dodgeball)
        (then
          (once-measure (and (on ?p) (not (in ?p) ) (and (exists (?b - game_object) (not (< 6 (distance ?b ?b)) ) ) (and (exists (?a - pillow) (in_motion ?p ?a) ) (in_motion agent) ) ) ) (distance ?p room_center) )
          (hold (in_motion ?p ?p) )
          (hold-while (< (distance 9 door) 1) (and (not (not (agent_holds top_shelf ?p) ) ) (in_motion ?p) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 8 (count preference2:yellow) )
)
(:scoring
  (total-score)
)
)

(define (game game-id-873) (:domain many-objects-room-v1)
(:setup
  (exists (?z - dodgeball)
    (exists (?u - dodgeball)
      (and
        (game-conserved
          (and
            (in_motion ?u ?z ?z)
            (on blinds)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?p - game_object)
        (at-end
          (in_motion ?p floor)
        )
      )
    )
    (preference preference2
      (at-end
        (agent_holds ?xxx)
      )
    )
    (preference preference3
      (exists (?j - (either floor game_object) ?d - ball)
        (at-end
          (= (distance 1 8) (distance 0 ?d))
        )
      )
    )
    (preference preference4
      (then
        (hold (and (not (and (in ?xxx) (and (forall (?m - shelf ?h - curved_wooden_ramp) (<= (building_size desk ?h) 1) ) (on ?xxx ?xxx) ) (in_motion ?xxx) ) ) (and (not (rug_color_under ?xxx ?xxx) ) (agent_holds front) ) ) )
        (once (not (not (not (in_motion ?xxx) ) ) ) )
        (once (same_object ?xxx) )
      )
    )
  )
)
(:terminal
  (>= (count preference2:green:blue_cube_block) (count preference1:dodgeball) )
)
(:scoring
  (count preference4:beachball)
)
)

(define (game game-id-874) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (in_motion ?xxx agent)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?r - sliding_door)
        (then
          (once (or (and (agent_holds ?r ?r) (and (touch agent) (rug_color_under ?r) ) ) (in_motion ?r) (agent_holds ?r) ) )
          (hold (in_motion ?r ?r) )
          (hold (and (in ?r ?r) (and (in_motion desk) (in_motion ?r ?r) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (count-overlapping preference1:book) )
)
(:scoring
  (total-time)
)
)

(define (game game-id-875) (:domain few-objects-room-v1)
(:setup
  (forall (?m - curved_wooden_ramp)
    (and
      (forall (?q - shelf)
        (forall (?j - game_object)
          (exists (?r - dodgeball ?l - (either blue_cube_block tall_cylindrical_block hexagonal_bin))
            (forall (?a - block ?f - chair)
              (game-conserved
                (not
                  (in ?m)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?z - cube_block)
        (then
          (once (and (and (touch ?z ?z) (and (and (touch front upright) (in_motion ?z) (agent_holds ?z ?z) ) (same_color ?z ?z) (in_motion ?z) (in ?z) (on ?z) (in ?z) (on ?z ?z) ) (and (agent_holds ?z ?z) (exists (?b - cube_block) (in_motion ?b) ) ) ) (agent_holds ?z) ) )
          (once (in_motion ?z) )
          (hold (exists (?b - cylindrical_block) (and (in_motion ?b) (not (and (object_orientation ?b) (and (in_motion ?z ?b) (agent_holds ?b) (and (agent_holds ?b ?b) (and (and (agent_holds ?z) (is_setup_object ?b) (on ?b ?b) ) (in_motion ?z) ) ) ) ) ) ) ) )
        )
      )
    )
    (forall (?v - curved_wooden_ramp)
      (and
        (preference preference2
          (exists (?e ?p - game_object ?i - (either blue_cube_block dodgeball))
            (then
              (once (not (< 5 9) ) )
              (once (not (on ?i) ) )
              (hold (agent_holds ?v rug) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> 2 (count preference1:cube_block) )
)
(:scoring
  (count preference1:pink_dodgeball)
)
)

(define (game game-id-876) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (opposite ?xxx agent)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?o - (either credit_card side_table doggie_bed book) ?o - cube_block ?t - dodgeball ?h - teddy_bear)
        (then
          (once (agent_holds ?h agent) )
          (once (on ?h ?h) )
          (once (in_motion ?h ?h) )
        )
      )
    )
    (preference preference2
      (exists (?o - hexagonal_bin)
        (then
          (once (and (not (on agent ?o) ) (on ?o ?o) ) )
          (once (same_color agent bed) )
          (once (in_motion ?o) )
        )
      )
    )
  )
)
(:terminal
  (>= 4 (+ (count preference2) (+ (+ (count preference2:dodgeball:green) 15 )
        (* 0.5 (* 10 (count-total preference2:basketball) )
        )
      )
    )
  )
)
(:scoring
  (count preference2:yellow)
)
)

(define (game game-id-877) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (not
      (not
        (on ?xxx ?xxx)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?b - game_object)
        (at-end
          (between ?b)
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 6 (count preference1:dodgeball) )
    (>= (count-once-per-objects preference1:pink:doggie_bed) 5 )
    (> 10 (* (count preference1:hexagonal_bin) (count preference1:basketball:beachball:pyramid_block) (count-once-per-objects preference1:red) (count preference1:purple) (and 4 2 ) )
    )
  )
)
(:scoring
  (count-once-per-external-objects preference1:blue_pyramid_block)
)
)

(define (game game-id-878) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (in ?xxx ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?p - ball ?c - dodgeball ?a ?u - blue_cube_block)
        (then
          (once (adjacent ?a ?a) )
          (once (not (object_orientation ?a ?a) ) )
          (hold (and (is_setup_object ?u) (not (not (in ?a) ) ) (agent_holds ?u) (on ?u) ) )
        )
      )
    )
    (preference preference2
      (exists (?n - dodgeball ?a - pillow)
        (then
          (once (and (and (agent_holds ) (not (< (distance ?a ?a) (distance bed ?a)) ) ) (not (and (in_motion ?a desk) (not (< 9 10) ) ) ) ) )
          (once (adjacent ?a ?a) )
          (once (and (in ?a) (on ?a ?a) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (>= (not (* (count preference2:pink) (count-once-per-objects preference1:beachball) )
      )
      (+ (external-forall-minimize 6 ) 3 (count-overlapping preference1:yellow_pyramid_block) (count preference1:blue_dodgeball:beachball) (count-once-per-objects preference2:dodgeball) (- (+ (+ (count preference1:beachball) (- 10 )
            )
            (count preference1:yellow:side_table)
          )
          5
        )
      )
    )
  )
)
(:scoring
  (count preference2:alarm_clock)
)
)

(define (game game-id-879) (:domain few-objects-room-v1)
(:setup
  (forall (?f - building ?a - (either alarm_clock pillow))
    (and
      (forall (?v - building)
        (game-conserved
          (in ?a blue)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?f - hexagonal_bin ?x - dodgeball)
        (at-end
          (not
            (agent_holds yellow)
          )
        )
      )
    )
    (forall (?h - dodgeball ?w - (either ball laptop book))
      (and
        (preference preference2
          (exists (?k - triangular_ramp ?p - hexagonal_bin)
            (then
              (once (not (exists (?v - cube_block ?j - cube_block) (in_motion front) ) ) )
              (once (in_motion ?p) )
              (hold-to-end (not (agent_holds ?w ?p) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= (or (count preference2:basketball) ) (+ (- 10 )
      (count preference2:yellow_pyramid_block)
    )
  )
)
(:scoring
  30
)
)

(define (game game-id-880) (:domain few-objects-room-v1)
(:setup
  (forall (?p - ball)
    (and
      (game-conserved
        (on ?p)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (then
        (hold (in_motion ?xxx ?xxx) )
        (hold (agent_holds desk) )
        (once (in_motion door) )
      )
    )
    (forall (?x - dodgeball ?u - hexagonal_bin)
      (and
        (preference preference2
          (exists (?m - (either cd pencil))
            (then
              (once (agent_holds rug) )
              (once (not (agent_holds ?u) ) )
              (once (and (same_color ?u) (and (object_orientation ?u desk) (agent_holds floor) ) ) )
            )
          )
        )
        (preference preference3
          (exists (?h - game_object)
            (then
              (once (on bed) )
              (hold (not (agent_holds ?h) ) )
              (hold-while (and (agent_holds ?h) (and (not (and (in_motion ?h) (not (in_motion ?h) ) ) ) (agent_holds ?h ?u) ) ) (not (< 7 1) ) (adjacent_side ?u) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (< (count-overlapping preference1:golfball:hexagonal_bin) (= 3 (* 4 (* (* 3 (count preference2:beachball) )
              (+ 8 3 )
            )
          )
          (count-once-per-objects preference2:beachball)
        )
      )
      (>= (count preference1:beachball) (count-total preference1:dodgeball) )
    )
    (and
      (or
        (>= (count-once-per-objects preference3:red) 15 )
        (> (count preference3:purple) (count-once-per-objects preference2:pink_dodgeball) )
      )
      (>= 5 0 )
    )
    (or
      (>= 10 (* (* 3 )
          (count preference1:beachball)
          (count-unique-positions preference3:basketball)
        )
      )
      (or
        (>= (count-once preference3:pink) (+ (count-increasing-measure preference1:golfball) (= (count-once-per-objects preference1:beachball) (* (count preference2:pink) 7 )
            )
          )
        )
        (>= (count preference2:beachball) (count-once-per-objects preference1:beachball:blue_dodgeball) )
      )
      (>= (* 3 10 )
        (+ (count preference3:pink_dodgeball) )
      )
    )
  )
)
(:scoring
  5
)
)

(define (game game-id-881) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (not
      (in_motion ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?z - ball ?e - hexagonal_bin)
        (at-end
          (on ?e)
        )
      )
    )
    (forall (?p ?t ?v ?q - (either red pillow pen laptop))
      (and
        (preference preference2
          (exists (?y - hexagonal_bin ?c - (either bridge_block dodgeball))
            (at-end
              (same_color ?t)
            )
          )
        )
        (preference preference3
          (exists (?g - cube_block)
            (then
              (once (not (and (in_motion ?v ?p) (not (touch ?t ?g) ) ) ) )
              (once (in agent pink) )
              (hold (and (same_object agent) (agent_holds ?g) ) )
            )
          )
        )
      )
    )
    (forall (?m - (either red dodgeball))
      (and
        (preference preference4
          (exists (?i - hexagonal_bin ?r - dodgeball ?b - (either golfball golfball chair))
            (then
              (once (or (in_motion bed ?b) (< (distance ?b desk) (distance desk 6)) ) )
              (once (agent_holds ?b) )
              (once (and (and (on ?b ?m) (agent_holds ?b bed) (not (agent_holds front) ) (and (agent_holds ?b) (on ?m) ) ) (is_setup_object ?b ?m) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once preference2:hexagonal_bin:basketball) (count preference2:dodgeball) )
)
(:scoring
  (and
    20
    16
  )
)
)

(define (game game-id-882) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (exists (?q - dodgeball ?a - (either blue_cube_block laptop doggie_bed alarm_clock cube_block))
      (not
        (in_motion ?a ?a)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?i - ball ?k - curved_wooden_ramp)
        (at-end
          (and
            (not
              (not
                (not
                  (< 4 5)
                )
              )
            )
            (not
              (same_object ?k)
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?c - golfball)
        (at-end
          (on agent)
        )
      )
    )
  )
)
(:terminal
  (> 5 6 )
)
(:scoring
  (* (* 3 (count-same-positions preference2:block:yellow_cube_block) )
    (not
      (count preference2:dodgeball)
    )
    2
    (count-once preference2)
    5
    (count-once preference2:book)
    5
  )
)
)

(define (game game-id-883) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (not
      (and
        (touch floor ?xxx)
        (faces bed ?xxx)
      )
    )
  )
)
(:constraints
  (and
    (forall (?j - dodgeball ?z - (either pencil bridge_block dodgeball))
      (and
        (preference preference1
          (exists (?l - doggie_bed)
            (then
              (once (in ?z ?l) )
            )
          )
        )
        (preference preference2
          (at-end
            (agent_holds ?z ?z)
          )
        )
        (preference preference3
          (exists (?r - game_object)
            (then
              (once (in_motion ?r ?z) )
              (once (in_motion agent floor) )
              (once (not (in_motion ?r ?z) ) )
              (hold-while (agent_holds ?z) (same_type ?z) )
            )
          )
        )
      )
    )
    (preference preference4
      (exists (?g - block ?q - pillow)
        (then
          (once (same_color ?q west_wall) )
          (hold (in_motion bed ?q) )
          (once (agent_holds ?q) )
        )
      )
    )
    (preference preference5
      (exists (?a - block)
        (then
          (hold-while (not (< (distance ?a ?a) 1) ) (exists (?d - (either beachball pink)) (and (and (and (opposite ?a ?a ?d) (agent_holds ?d) ) ) (and (is_setup_object ?d agent) (and (and (agent_holds ?a) (in_motion ?a ?d) ) (on ?d) ) ) ) ) )
          (once (in ?a pink) )
          (once (in_motion agent ?a) )
        )
      )
    )
    (forall (?g - hexagonal_bin ?u - hexagonal_bin ?s - hexagonal_bin ?w - curved_wooden_ramp ?b - block)
      (and
        (preference preference6
          (exists (?e - doggie_bed)
            (then
              (hold (agent_holds ?b ?b) )
              (once (opposite ?e ?e) )
              (once (not (in_motion ?b) ) )
            )
          )
        )
      )
    )
    (preference preference7
      (exists (?b - block)
        (then
          (once (in ?b ?b) )
          (hold (not (adjacent ?b) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (not (count preference3:dodgeball) ) (count-once-per-objects preference3:hexagonal_bin:golfball) )
    (>= 300 (count-once-per-objects preference3:yellow_cube_block:basketball) )
  )
)
(:scoring
  (* (count preference1:pink:golfball) 5 )
)
)

(define (game game-id-884) (:domain many-objects-room-v1)
(:setup
  (exists (?s - block ?z - ball ?h - cube_block ?h - (either ball cylindrical_block tall_cylindrical_block laptop wall beachball dodgeball))
    (and
      (game-conserved
        (agent_holds ?h ?h)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?j - hexagonal_bin ?h - (either cube_block pyramid_block) ?z - curved_wooden_ramp ?m - bridge_block)
        (then
          (hold (and (adjacent_side ?m ?m ?m) (and (not (and (toggled_on ?m) (agent_holds ?m agent) ) ) (agent_holds ?m ?m) ) ) )
          (once (on ?m) )
          (hold-while (on ?m) (in ?m) )
        )
      )
    )
    (preference preference2
      (then
        (once (<= 1 1) )
        (hold-while (and (and (in_motion ?xxx) (in_motion ?xxx) ) (>= (distance ?xxx ?xxx) (distance ?xxx desk ?xxx)) ) (and (on rug ?xxx) (adjacent_side ?xxx) ) )
        (once (in_motion ?xxx ?xxx) )
      )
    )
    (preference preference3
      (exists (?l ?q - hexagonal_bin ?u - hexagonal_bin)
        (then
          (hold (and (not (< (distance ?u ?u) 7) ) (faces ?u ?u) ) )
          (hold (and (and (same_color ?u back) (between ?u ?u) (agent_holds ?u ?u) (and (in_motion agent ?u) (in ?u) ) (agent_holds ?u ?u) (adjacent ?u) ) (and (agent_crouches ?u) (not (in_motion ?u ?u) ) ) ) )
          (any)
        )
      )
    )
  )
)
(:terminal
  (< (external-forall-minimize (count preference2:orange) ) (+ (total-score) 4 )
  )
)
(:scoring
  (+ (not 5 ) (count-increasing-measure preference1:beachball:cube_block) )
)
)

(define (game game-id-885) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (in ?xxx agent)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?f - (either golfball book))
        (then
          (once (in_motion floor) )
          (once (in_motion ?f agent) )
          (once (agent_holds bed) )
        )
      )
    )
    (preference preference2
      (exists (?s - ball)
        (at-end
          (not
            (in ?s)
          )
        )
      )
    )
  )
)
(:terminal
  (>= 7 (- (count-once-per-objects preference1:hexagonal_bin:blue_pyramid_block) )
  )
)
(:scoring
  0.7
)
)

(define (game game-id-886) (:domain medium-objects-room-v1)
(:setup
  (not
    (and
      (game-conserved
        (not
          (agent_holds ?xxx)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?s - ball)
        (then
          (hold (in_motion ?s south_west_corner) )
          (once (agent_holds ?s ?s) )
          (once (in_motion rug ?s) )
        )
      )
    )
  )
)
(:terminal
  (>= (= 4 9 )
    (count-once-per-objects preference1:wall)
  )
)
(:scoring
  (* (* (count-once-per-objects preference1:beachball:pink) (count preference1:beachball) )
    (* (count-once-per-objects preference1:blue_dodgeball) (- 1 )
    )
  )
)
)

(define (game game-id-887) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?m - teddy_bear ?e - hexagonal_bin)
      (and
        (and
          (exists (?q - (either dodgeball teddy_bear) ?k - drawer)
            (and
              (not
                (and
                  (exists (?g - ball)
                    (game-optional
                      (opposite ?g)
                    )
                  )
                )
              )
              (and
                (and
                  (exists (?z - block ?m ?i ?g - shelf)
                    (game-conserved
                      (in ?i ?k)
                    )
                  )
                )
                (or
                  (and
                    (game-optional
                      (in_motion ?e)
                    )
                    (forall (?q ?w - building)
                      (exists (?x - cylindrical_block)
                        (and
                          (and
                            (game-conserved
                              (not
                                (in desk ?x)
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - dodgeball ?r - ball)
      (and
        (preference preference1
          (exists (?i - wall)
            (then
              (once (in_motion rug) )
              (hold-while (and (not (adjacent ?i ?r) ) (not (and (and (not (not (not (in_motion ?r) ) ) ) (agent_holds ?r ?r) ) (in_motion pink_dodgeball) ) ) ) (on ?i) )
              (once (in_motion ?r) )
            )
          )
        )
        (preference preference2
          (exists (?j - (either pink cube_block yellow_cube_block))
            (then
              (once (< (distance ?j agent) 2) )
              (once (agent_holds ?r ?j) )
              (hold (not (agent_holds ?j) ) )
            )
          )
        )
      )
    )
    (forall (?n - ball ?j - pillow)
      (and
        (preference preference3
          (then
            (once (and (and (forall (?b - teddy_bear) (and (adjacent ?b ?b) (in_motion ?j ?j) ) ) (agent_holds ?j) (not (same_type ?j) ) ) ) )
            (hold (not (in_motion agent ?j) ) )
            (hold (same_color ?j ?j) )
          )
        )
      )
    )
    (preference preference4
      (exists (?o - (either dodgeball yellow_cube_block dodgeball) ?r - red_dodgeball)
        (at-end
          (< (distance room_center 7) (distance 9 agent))
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (external-forall-maximize (count-once-per-objects preference2:wall:dodgeball) ) 3 )
  )
)
(:scoring
  (* 300 (count-once-per-objects preference3:blue_pyramid_block) (external-forall-maximize (count-once-per-external-objects preference4:hexagonal_bin) ) )
)
)

(define (game game-id-888) (:domain medium-objects-room-v1)
(:setup
  (exists (?f - cube_block)
    (game-optional
      (and
        (adjacent floor)
        (in_motion ?f)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (then
        (hold-to-end (agent_holds ?xxx) )
        (hold (in ?xxx) )
        (once (adjacent desk) )
      )
    )
  )
)
(:terminal
  (> (count-once-per-objects preference1:yellow:green) (count-once-per-objects preference1:beachball:dodgeball) )
)
(:scoring
  (* (count preference1:dodgeball:golfball) (count preference1:yellow) )
)
)

(define (game game-id-889) (:domain few-objects-room-v1)
(:setup
  (exists (?a - hexagonal_bin ?c - dodgeball)
    (exists (?x - pillow)
      (not
        (and
          (and
            (game-conserved
              (and
                (>= 5 1)
                (not
                  (not
                    (< 1 (distance ?c ?c))
                  )
                )
              )
            )
            (game-optional
              (and
                (not
                  (object_orientation ?c ?x)
                )
                (and
                  (> 9 (distance 0 bed))
                  (not
                    (on agent)
                  )
                )
                (on pink_dodgeball)
              )
            )
            (game-optional
              (exists (?b - bridge_block)
                (not
                  (on ?c)
                )
              )
            )
          )
          (forall (?e - (either cube_block cellphone))
            (exists (?r - curved_wooden_ramp ?b - teddy_bear)
              (forall (?z - hexagonal_bin)
                (game-conserved
                  (and
                    (and
                      (in_motion ?x)
                      (and
                        (in ?b)
                        (and
                          (exists (?g - shelf ?y - triangular_ramp)
                            (and
                              (exists (?f - (either dodgeball basketball))
                                (and
                                  (not
                                    (exists (?u ?v ?d - block)
                                      (not
                                        (adjacent ?f)
                                      )
                                    )
                                  )
                                  (in_motion bed)
                                )
                              )
                              (same_type ?x ?z)
                            )
                          )
                          (agent_holds ?e ?x)
                        )
                      )
                      (<= 2 (distance ?z ?e))
                      (agent_holds ?x ?z)
                      (agent_holds ?b)
                      (not
                        (or
                          (not
                            (agent_holds ?z)
                          )
                          (on ?e)
                        )
                      )
                      (and
                        (< 10 2)
                        (not
                          (and
                            (in ?z ?x)
                            (< 1 0)
                            (and
                              (not
                                (agent_holds ?z)
                              )
                              (and
                                (and
                                  (not
                                    (and
                                      (and
                                        (agent_holds rug)
                                        (and
                                          (agent_holds bed)
                                          (not
                                            (touch ?z ?b)
                                          )
                                        )
                                        (agent_holds ?x ?c ?x)
                                      )
                                      (agent_holds ?c ?c)
                                      (not
                                        (agent_holds rug)
                                      )
                                    )
                                  )
                                  (not
                                    (agent_holds ?x ?e ?b)
                                  )
                                )
                                (in_motion ?z brown)
                              )
                            )
                          )
                        )
                      )
                    )
                    (and
                      (adjacent floor)
                      (exists (?d - hexagonal_bin ?w - flat_block)
                        (in_motion ?c)
                      )
                    )
                    (not
                      (in_motion ?x ?z)
                    )
                  )
                )
              )
            )
          )
          (game-conserved
            (or
              (< (distance ?x ?x) 3)
              (not
                (not
                  (adjacent ?c)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?n - (either alarm_clock tall_cylindrical_block dodgeball))
        (then
          (once (not (rug_color_under ?n) ) )
          (once (not (agent_holds ?n) ) )
          (hold (< 1 10) )
          (hold (agent_holds ?n agent) )
          (hold-to-end (agent_holds ?n pink) )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (> 2 15 )
  )
)
(:scoring
  (* (+ 4 5 )
    (+ (count preference1:red) (count preference1:pink) )
  )
)
)

(define (game game-id-890) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?l - game_object ?x - cube_block)
      (exists (?u - cube_block)
        (and
          (game-optional
            (in ?u)
          )
          (forall (?w - (either cd yellow_cube_block side_table))
            (game-conserved
              (in_motion door)
            )
          )
        )
      )
    )
    (exists (?n - hexagonal_bin)
      (forall (?z - (either wall teddy_bear bed dodgeball blue_cube_block cube_block golfball))
        (game-conserved
          (not
            (not
              (not
                (< 1 (distance ?z agent))
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?b ?z - block)
        (then
          (hold (in_motion ?b) )
          (once (< (distance ?b ?z) (distance agent ?b)) )
          (hold (not (in_motion ?z rug) ) )
        )
      )
    )
    (preference preference2
      (exists (?q - hexagonal_bin)
        (at-end
          (agent_holds ?q)
        )
      )
    )
    (forall (?t ?i ?s - doggie_bed)
      (and
        (preference preference3
          (exists (?c ?y - dodgeball)
            (then
              (hold (not (and (touch ?c) (agent_holds ?y) ) ) )
              (once (and (not (in_motion ?s ?i) ) (agent_holds ?s) ) )
              (once (in_motion floor) )
            )
          )
        )
        (preference preference4
          (exists (?k - bridge_block)
            (then
              (hold (and (in_motion ?k) (agent_holds ?t) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (count preference2:beachball) )
)
(:scoring
  (count preference4:purple:dodgeball)
)
)

(define (game game-id-891) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (and
      (in_motion agent)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?t - hexagonal_bin)
        (then
          (forall-sequence (?y ?f - curved_wooden_ramp)
            (then
              (hold (and (open ?f) (in ?y ?f) ) )
              (hold-while (exists (?u - dodgeball) (and (not (and (on desk ?t) (not (and (not (not (forall (?c - (either hexagonal_bin dodgeball)) (and (agent_holds ?f ?t) ) ) ) ) (in ?f ?u) ) ) ) ) ) ) (and (exists (?i - (either key_chain hexagonal_bin cube_block) ?i - chair) (same_object ?t ?f) ) (exists (?k - hexagonal_bin ?n - hexagonal_bin) (and (not (not (on ?n) ) ) (in_motion ?t) ) ) ) (agent_holds ?f ?y) )
              (once (in ?t) )
            )
          )
          (hold-while (> (distance ?t) (distance ?t ?t)) (toggled_on ?t) )
          (hold-while (< (distance ?t ?t ?t) (distance ?t agent)) (not (< 6 (distance 7 ?t)) ) )
        )
      )
    )
    (preference preference2
      (exists (?c - hexagonal_bin)
        (then
          (hold (agent_holds ?c) )
          (once (in_motion yellow ?c) )
          (once (in_motion desk) )
        )
      )
    )
  )
)
(:terminal
  (or
    (> 30 6 )
    (or
      (> (+ (count preference2:dodgeball:basketball) 10 )
        6
      )
      (and
        (> 10 (- 2 )
        )
        (not
          (and
            (> (count-once-per-objects preference2:beachball) (count preference1:yellow) )
          )
        )
        (> (* 3 (count preference1:golfball) 6 (count preference1:dodgeball) (+ (count preference1:doggie_bed) (- (count-once-per-external-objects preference2:dodgeball) )
            )
          )
          2
        )
      )
    )
  )
)
(:scoring
  (external-forall-maximize
    (count preference2:red:book)
  )
)
)

(define (game game-id-892) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (and
        (game-optional
          (in_motion ?xxx ?xxx)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?t - ball)
        (then
          (once (agent_holds ?t) )
          (once (and (in_motion ?t ?t) (not (agent_holds rug) ) ) )
          (once (not (not (not (= (distance desk desk) (distance )) ) ) ) )
          (once (between ?t ?t) )
        )
      )
    )
    (forall (?e - hexagonal_bin)
      (and
        (preference preference2
          (exists (?z ?l - doggie_bed ?l - hexagonal_bin)
            (then
              (once (and (and (not (agent_holds brown) ) (on bed ?e) ) (in_motion ?e) (in_motion ?e) (in_motion ?e ?e) ) )
              (once (in_motion ?l ?e) )
              (hold (not (agent_holds ?e) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 2 6 )
)
(:scoring
  (count-once-per-objects preference1:pink)
)
)

(define (game game-id-893) (:domain medium-objects-room-v1)
(:setup
  (exists (?m - ball)
    (game-conserved
      (in_motion ?m)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?m - color ?q - block)
        (then
          (once (in_motion ?q) )
          (once (on ?q) )
          (once (same_color ?q) )
        )
      )
    )
    (forall (?w - hexagonal_bin)
      (and
        (preference preference2
          (exists (?g - cube_block)
            (then
              (once (on ?w ?g) )
              (hold (and (not (agent_holds ?w) ) (adjacent ?g) (agent_holds floor) (on ?g ?g) (in_motion ?g ?w) (agent_holds rug) (not (agent_holds ?w ?g) ) (agent_holds ?g) (in_motion ?w) (in_motion ?g blue) ) )
              (once (< (distance ?g ?w) 1) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (not 4 ) 10 )
)
(:scoring
  (count preference2:basketball)
)
)

(define (game game-id-894) (:domain few-objects-room-v1)
(:setup
  (and
    (game-optional
      (not
        (on ?xxx ?xxx)
      )
    )
    (exists (?w - triangular_ramp ?g - block)
      (game-conserved
        (object_orientation ?g)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?x - game_object ?s - dodgeball)
        (then
          (once (and (in_motion ?s ?s) (touch ?s ?s) ) )
          (once (forall (?z - dodgeball) (agent_holds ?s ?s) ) )
          (hold (<= (distance desk room_center) 2) )
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (or
        (> (count preference1:doggie_bed) (count preference1:dodgeball) )
        (or
          (>= 8 (* 6 (external-forall-maximize (+ (count preference1:hexagonal_bin:pyramid_block) (total-time) )
              )
            )
          )
          (>= (* (/ 3 10 ) (count preference1:golfball:basketball) )
            (+ 10 (count-once-per-objects preference1:dodgeball) )
          )
        )
      )
    )
  )
)
(:scoring
  (count preference1:brown)
)
)

(define (game game-id-895) (:domain few-objects-room-v1)
(:setup
  (and
    (game-conserved
      (touch ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?q - triangular_ramp)
        (at-end
          (not
            (agent_holds ?q ?q)
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (not
      (>= 100 (count-once-per-objects preference1:dodgeball) )
    )
  )
)
(:scoring
  0
)
)

(define (game game-id-896) (:domain many-objects-room-v1)
(:setup
  (forall (?z - doggie_bed)
    (not
      (not
        (forall (?y - bridge_block ?l - dodgeball ?f - hexagonal_bin)
          (game-optional
            (not
              (adjacent ?f)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?a - (either golfball doggie_bed) ?h - game_object)
        (then
          (hold-while (on floor ?h) (and (on ?h ?h) (and (in_motion ?h) (in_motion ?h) ) ) (and (and (and (same_type ?h ?h) (and (on ?h ?h) (exists (?i - cube_block) (not (in_motion agent) ) ) ) ) (touch ?h bed) ) (same_object ?h ?h) ) )
          (once (in_motion ?h) )
          (hold (agent_holds ?h) )
        )
      )
    )
    (preference preference2
      (at-end
        (and
          (and
            (object_orientation ?xxx)
            (or
              (not
                (= (distance 5 ?xxx) 0.5)
              )
              (exists (?x - (either cube_block cube_block cd cube_block))
                (or
                  (on ?x)
                  (and
                    (same_color ?x ?x)
                    (not
                      (agent_holds block)
                    )
                  )
                )
              )
              (agent_holds ?xxx ?xxx)
            )
            (and
              (not
                (exists (?w - hexagonal_bin)
                  (rug_color_under ?w ?w)
                )
              )
              (on ?xxx ?xxx)
            )
            (on ?xxx)
          )
          (in_motion ?xxx ?xxx)
        )
      )
    )
  )
)
(:terminal
  (>= 8 (* (+ (count preference1:bed) (= 0 50 )
      )
      2
      (external-forall-minimize
        (- (total-time) )
      )
    )
  )
)
(:scoring
  (- (count preference1:pink_dodgeball) )
)
)

(define (game game-id-897) (:domain few-objects-room-v1)
(:setup
  (exists (?z - teddy_bear)
    (exists (?s - beachball ?h - building ?h - chair ?x - dodgeball)
      (game-optional
        (not
          (on ?x)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?y - curved_wooden_ramp)
      (and
        (preference preference1
          (exists (?b - hexagonal_bin)
            (then
              (once (open ?y) )
              (hold (touch ?b) )
              (once (in_motion ?y) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (+ 1 (count preference1:alarm_clock) )
  )
)
(:scoring
  (count-increasing-measure preference1:tall_cylindrical_block)
)
)

(define (game game-id-898) (:domain many-objects-room-v1)
(:setup
  (or
    (and
      (and
        (not
          (exists (?w - hexagonal_bin ?l - red_pyramid_block)
            (or
              (or
                (game-optional
                  (and
                    (in_motion ?l ?l)
                    (and
                      (not
                        (on ?l)
                      )
                      (in_motion ?l)
                    )
                    (and
                      (and
                        (agent_holds bed ?l)
                        (in_motion pink_dodgeball)
                        (on ?l)
                      )
                      (in_motion ?l)
                    )
                    (is_setup_object ?l agent)
                  )
                )
              )
              (and
                (exists (?b - (either cylindrical_block chair))
                  (exists (?d - ball)
                    (forall (?f - ball ?o - (either laptop wall block))
                      (game-optional
                        (in_motion rug)
                      )
                    )
                  )
                )
              )
              (and
                (forall (?d - game_object ?w - hexagonal_bin)
                  (or
                    (game-optional
                      (not
                        (not
                          (and
                            (exists (?b - dodgeball)
                              (touch ?w ?l)
                            )
                            (or
                              (and
                                (and
                                  (agent_holds ?w ?w)
                                  (not
                                    (adjacent ?w ?l)
                                  )
                                )
                                (not
                                  (and
                                    (adjacent ?l)
                                    (not
                                      (forall (?j - game_object ?i - dodgeball)
                                        (agent_holds agent ?w)
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                    (game-conserved
                      (and
                        (agent_holds agent)
                        (on ?w)
                        (and
                          (touch ?w)
                          (exists (?i - hexagonal_bin)
                            (agent_holds ?i)
                          )
                        )
                        (open ?l ?w)
                        (and
                          (not
                            (in_motion agent)
                          )
                          (agent_holds rug)
                        )
                        (not
                          (not
                            (not
                              (in agent ?l)
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
    (and
      (and
        (exists (?r - hexagonal_bin)
          (forall (?o - hexagonal_bin)
            (exists (?g - hexagonal_bin)
              (exists (?q - chair)
                (and
                  (game-conserved
                    (agent_holds ?o)
                  )
                )
              )
            )
          )
        )
      )
    )
    (forall (?c - ball ?o - wall)
      (exists (?r ?z - hexagonal_bin)
        (game-conserved
          (in_motion floor ?r)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?o - hexagonal_bin)
        (then
          (once (in_motion color) )
          (once (agent_holds ?o ?o) )
          (hold-while (and (agent_holds desk) (toggled_on west_wall) ) (and (agent_holds ?o ?o) (agent_holds rug) ) (in_motion ?o ?o) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (- (external-forall-maximize (external-forall-maximize (count-same-positions preference1:hexagonal_bin) ) ) )
      (external-forall-maximize
        0
      )
      (+ (* 6 (or (count preference1:yellow_cube_block:beachball:alarm_clock) 4 ) )
        (count-once-per-objects preference1:golfball)
        (external-forall-maximize
          (count-once-per-external-objects preference1:red)
        )
        (count preference1:blue_dodgeball)
      )
      1
      (* (* (count-once-per-objects preference1:book) (total-time) (+ 5 (count-measure preference1:pink:dodgeball) )
        )
        (* (* (- (* (total-score) (* (total-score) (* (+ (* (external-forall-maximize (* (count-once-per-objects preference1:wall) (and (count-once-per-external-objects preference1:orange) ) (count-once-per-objects preference1:tan) )
                        )
                        10
                        (+ (- 3 )
                          6
                        )
                      )
                      (count-once-per-objects preference1:book)
                    )
                    (* (* 10 (count-unique-positions preference1:dodgeball) (count-once-per-objects preference1:golfball) )
                      (count-once-per-external-objects preference1:beachball:green)
                    )
                    2
                  )
                )
              )
            )
            3
          )
          (- 20 )
          3
        )
      )
      (* (external-forall-maximize 5 ) (* 3 (count preference1:dodgeball:beachball) )
      )
    )
    3
  )
)
(:scoring
  (count-increasing-measure preference1:dodgeball)
)
)

(define (game game-id-899) (:domain many-objects-room-v1)
(:setup
  (exists (?a - teddy_bear)
    (or
      (game-optional
        (adjacent ?a ?a ?a)
      )
      (exists (?g - bridge_block ?g - pillow)
        (game-optional
          (not
            (not
              (agent_holds ?a ?g)
            )
          )
        )
      )
      (forall (?k - ball)
        (exists (?f ?d ?y ?l ?r ?q ?n ?e ?o ?w - tall_cylindrical_block ?o - game_object ?g - hexagonal_bin)
          (and
            (exists (?b - game_object ?z - teddy_bear)
              (game-optional
                (same_type ?g ?k)
              )
            )
            (game-optional
              (and
                (adjacent ?a)
                (and
                  (and
                    (and
                      (in pink_dodgeball)
                      (adjacent bed)
                    )
                  )
                  (<= (distance ?k 0 3) (distance desk ?g))
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?p - ball ?v ?r ?q - hexagonal_bin)
        (then
          (once (not (and (agent_holds ?v) (same_color ?v desk) ) ) )
          (once (agent_holds green) )
          (hold (and (agent_holds ?q) (in rug ?q) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count preference1:golfball:brown) (count preference1:doggie_bed) )
    (* 1 (and 20 50 ) 1 )
  )
)
(:scoring
  (+ (+ (= (* (count-once-per-external-objects preference1:book:dodgeball:pink_dodgeball) )
        (count preference1:pink)
      )
      2
    )
    2
  )
)
)

(define (game game-id-900) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-optional
      (agent_holds ?xxx)
    )
  )
)
(:constraints
  (and
    (forall (?p - hexagonal_bin)
      (and
        (preference preference1
          (exists (?z - (either wall golfball))
            (then
              (once (not (and (agent_holds ?p) (agent_holds ?z ?p) ) ) )
              (once (on ?p) )
              (once-measure (in_motion ?p) (distance ?z ?p) )
            )
          )
        )
      )
    )
    (forall (?a - doggie_bed ?u - hexagonal_bin)
      (and
        (preference preference2
          (then
            (hold (agent_holds ?u ?u) )
            (hold (agent_holds ?u) )
            (once (and (on ) (and (and (in_motion ?u ?u ?u) (adjacent_side bed) ) (< 1 1) (adjacent ?u) ) ) )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (and
      (or
        (< 6 (total-score) )
        (or
          (> (count-once preference2:pink) 4 )
          (>= (* (count-once-per-objects preference2:blue_dodgeball) 10 )
            (* (count preference2:dodgeball) 15 (total-score) )
          )
        )
      )
    )
  )
)
(:scoring
  (* (count-once-per-objects preference2:cylindrical_block) (count preference2:yellow:basketball) )
)
)

(define (game game-id-901) (:domain many-objects-room-v1)
(:setup
  (exists (?j - dodgeball)
    (exists (?d - dodgeball ?h - doggie_bed)
      (or
        (game-conserved
          (not
            (in_motion ?j agent)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (then
        (once (not (on floor) ) )
        (once (not (not (on ?xxx pink_dodgeball) ) ) )
        (once (agent_holds ?xxx) )
      )
    )
    (preference preference2
      (exists (?h - curved_wooden_ramp ?f ?x ?h ?g - hexagonal_bin)
        (then
          (once (forall (?w - chair ?n - ball ?d - shelf) (and (in_motion ?g ?h) (on ?f ?f) ) ) )
          (hold (agent_holds ?x) )
          (once (not (not (agent_holds ?f) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 20 2 )
)
(:scoring
  10
)
)

(define (game game-id-902) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (agent_holds ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?u ?b ?n ?y - hexagonal_bin)
        (at-end
          (in_motion ?n ?n)
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-once-per-objects preference1:beachball) (* (count-total preference1:dodgeball) 3 )
    )
    (> (* 3 (count preference1:dodgeball) (count preference1:blue_dodgeball:red) )
      (* 300 (count preference1:tall_cylindrical_block:red_pyramid_block) )
    )
    (>= (external-forall-maximize (+ (* 4 (count preference1:yellow_cube_block:yellow:dodgeball) )
          (>= 3 (- (and (count preference1:blue_dodgeball) ) )
          )
        )
      )
      (total-time)
    )
  )
)
(:scoring
  2
)
)

(define (game game-id-903) (:domain few-objects-room-v1)
(:setup
  (exists (?q - ball ?c - dodgeball)
    (and
      (exists (?a - doggie_bed)
        (exists (?z - dodgeball ?v - cube_block ?f - chair)
          (forall (?q - building)
            (exists (?w - hexagonal_bin)
              (game-optional
                (in bed)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?i - dodgeball ?z - block)
        (then
          (once (< 5 (distance ?z ?z)) )
          (once (adjacent_side ?z) )
          (once (on pink_dodgeball) )
        )
      )
    )
  )
)
(:terminal
  (>= 50 5 )
)
(:scoring
  (count preference1:purple)
)
)

(define (game game-id-904) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (exists (?h ?s ?w ?e - dodgeball ?k - desktop ?n - hexagonal_bin)
        (exists (?a - building)
          (and
            (and
              (forall (?h - hexagonal_bin ?b - dodgeball)
                (game-optional
                  (game_start ?b ?a)
                )
              )
            )
          )
        )
      )
      (game-optional
        (not
          (in ?xxx)
        )
      )
      (exists (?b - ball ?t - (either pencil basketball))
        (exists (?o - cube_block ?x - hexagonal_bin)
          (game-optional
            (and
              (not
                (and
                  (on ?t ?t)
                  (object_orientation ?t)
                )
              )
              (in ?t ?t)
              (and
                (not
                  (agent_holds ?x)
                )
                (and
                  (in_motion ?t ?t)
                  (not
                    (on ?x)
                  )
                  (and
                    (is_setup_object ?t)
                    (not
                      (and
                        (not
                          (agent_holds ?t desk)
                        )
                        (agent_holds ?t)
                      )
                    )
                  )
                )
              )
              (opposite ?x)
              (not
                (and
                  (and
                    (agent_holds ?t)
                    (or
                      (in ?t)
                      (agent_holds ?x)
                    )
                  )
                  (game_start agent floor)
                  (adjacent ?x)
                )
              )
              (in_motion desk ?t)
              (not
                (and
                  (and
                    (not
                      (in ?x)
                    )
                    (and
                      (agent_holds ?x)
                      (on ?t)
                    )
                  )
                  (between rug ?t)
                )
              )
              (exists (?g - ball)
                (on ?g)
              )
              (= (distance ?x ?t) 4)
              (agent_holds ?x)
              (in_motion desk)
              (agent_holds ?x)
            )
          )
        )
      )
      (forall (?o - hexagonal_bin ?w ?d ?x - hexagonal_bin)
        (and
          (game-conserved
            (and
              (agent_holds ?x brown)
              (and
                (or
                  (and
                    (agent_holds ?x)
                    (not
                      (agent_holds ?d)
                    )
                  )
                  (not
                    (agent_holds ?w)
                  )
                )
                (in_motion ?w ?d)
              )
            )
          )
        )
      )
      (game-conserved
        (adjacent floor)
      )
    )
    (game-conserved
      (same_color ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?t - dodgeball)
        (then
          (once (and (adjacent ?t) (touch ?t) ) )
          (once (in_motion ?t) )
          (once (not (agent_holds ?t ?t) ) )
        )
      )
    )
    (preference preference2
      (exists (?v - cube_block)
        (then
          (once (on ?v ?v) )
          (hold (in ?v) )
          (hold (agent_holds ?v) )
        )
      )
    )
  )
)
(:terminal
  (> (count-longest preference2:beachball) (* (+ 10 (* (count-once-per-objects preference1:dodgeball) (count-once preference2:basketball) (count preference1:dodgeball) 3 5 (/ 30 (count-once-per-objects preference1:book) ) )
        (* 10 (total-time) )
      )
      10
    )
  )
)
(:scoring
  (+ (+ (count preference1:brown) 0 )
    2
  )
)
)

(define (game game-id-905) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (is_setup_object ?xxx)
  )
)
(:constraints
  (and
    (forall (?p - curved_wooden_ramp)
      (and
        (preference preference1
          (exists (?r - chair)
            (then
              (once (adjacent front) )
              (once (not (and (and (in_motion ?r ?r) (in_motion ?r) ) ) ) )
              (once (and (touch ?p) (and (in ?p ?p) (and (and (agent_holds ?p ?p) (on ?p) ) (and (in_motion brown) (on ?p ?r) ) (not (forall (?q - chair) (not (on desk) ) ) ) (and (agent_holds ?p) (not (and (adjacent ?p) (agent_holds ?p) ) ) ) ) (agent_holds ?r) (agent_holds ?r) ) ) )
            )
          )
        )
        (preference preference2
          (then
            (once (in_motion ?p ?p) )
            (hold-for 1 (exists (?r - hexagonal_bin) (not (agent_holds ?p) ) ) )
            (once (adjacent ?p) )
          )
        )
        (preference preference3
          (at-end
            (adjacent upright ?p ?p)
          )
        )
      )
    )
    (preference preference4
      (at-end
        (and
          (and
            (agent_crouches ?xxx)
            (and
              (agent_holds ?xxx ?xxx)
              (not
                (and
                  (in_motion desk pink_dodgeball)
                  (not
                    (and
                      (object_orientation bed ?xxx)
                      (touch ?xxx)
                    )
                  )
                  (on ?xxx ?xxx)
                )
              )
              (and
                (< 1 2)
                (in_motion ?xxx ?xxx)
                (in_motion ?xxx ?xxx)
              )
            )
            (in_motion ?xxx)
          )
          (agent_holds pink_dodgeball desk)
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:pink_dodgeball:orange) (+ (count-once-per-external-objects preference3:basketball) (* (* 2 (count preference2:beachball:basketball:yellow) )
        (< 3 3 )
        4
        15
        (count-same-positions preference1:golfball)
        (count-shortest preference3:triangle_block)
      )
    )
  )
)
(:scoring
  7
)
)

(define (game game-id-906) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?j ?w - dodgeball)
      (and
        (game-conserved
          (agent_holds ?w)
        )
      )
    )
    (exists (?f - ball ?t - cube_block)
      (and
        (game-conserved
          (in_motion ?t ?t)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - color ?q - flat_block)
      (and
        (preference preference1
          (exists (?t - hexagonal_bin ?o - red_dodgeball)
            (then
              (once (and (on ?q) (not (in_motion ?o ?q) ) (touch ?o) ) )
              (once (and (and (and (not (< (distance bed ?q) 1) ) ) (toggled_on ?q pink) (faces ?o) (on ?o) (and (and (in_motion ?q) (touch ?o door) (agent_holds ?q agent) ) (agent_holds ?o) ) (equal_x_position agent ?q) ) (is_setup_object ?o) ) )
              (hold (on ?o) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?c - hexagonal_bin ?r - block)
        (then
          (once (not (in_motion ?r ?r ?r) ) )
          (once (agent_holds ?r) )
          (once (agent_holds agent bed) )
        )
      )
    )
    (preference preference3
      (exists (?e - cylindrical_block)
        (then
          (hold (in_motion ?e) )
          (hold (in_motion pink ?e) )
          (once (agent_holds ?e) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ 5 (count preference1:doggie_bed:orange) 4 300 (count-once-per-objects preference2:doggie_bed) 7 )
    (+ 10 )
  )
)
(:scoring
  3
)
)

(define (game game-id-907) (:domain many-objects-room-v1)
(:setup
  (forall (?e - hexagonal_bin ?u - cube_block)
    (exists (?q - (either book rug) ?r - hexagonal_bin ?r - hexagonal_bin)
      (exists (?d - beachball)
        (exists (?k - ball)
          (and
            (exists (?x - pillow)
              (game-optional
                (not
                  (or
                    (in_motion ?u ?k)
                    (in_motion ?k ?r)
                  )
                )
              )
            )
            (exists (?f - hexagonal_bin ?j - cube_block)
              (game-conserved
                (and
                  (on ?r ?u)
                  (touch rug)
                )
              )
            )
            (game-optional
              (agent_holds ?d)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?f - cube_block)
      (and
        (preference preference1
          (exists (?y - building)
            (then
              (once (adjacent_side agent ?y) )
              (once (and (agent_holds agent) (not (and (in ?y ?y) (not (agent_holds ?y) ) ) ) ) )
              (once (not (agent_holds ?f) ) )
            )
          )
        )
        (preference preference2
          (exists (?m - (either desktop desktop) ?x - chair)
            (at-end
              (agent_holds ?f)
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?d - (either bridge_block yellow ball) ?e - wall ?x - ball)
        (then
          (once (in agent ?x) )
          (once (in_motion ?x) )
          (hold (adjacent agent) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (total-time) (+ (* (total-score) 2 )
        5
      )
    )
    (total-time)
  )
)
(:scoring
  (total-score)
)
)

(define (game game-id-908) (:domain few-objects-room-v1)
(:setup
  (exists (?v - chair)
    (exists (?n - hexagonal_bin)
      (game-conserved
        (and
          (agent_holds ?n pink_dodgeball)
          (agent_holds block)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?c ?z - chair ?p - game_object)
        (then
          (hold (not (equal_x_position bed ?p ?p) ) )
          (once (and (and (exists (?v - curved_wooden_ramp) (agent_holds ?v) ) (and (and (> 2 1) (not (and (and (not (in_motion ?p) ) (agent_holds ?p ?p) ) (in_motion rug ?p) (in ?p ?p) (forall (?h - building) (agent_holds ?h ?h ?h) ) (in agent ?p) (and (in_motion desk) (<= 1 1) ) ) ) ) (adjacent ?p) ) ) (agent_holds ?p) ) )
        )
      )
    )
    (forall (?t - hexagonal_bin)
      (and
        (preference preference2
          (exists (?l - (either dodgeball doggie_bed) ?i - hexagonal_bin)
            (then
              (once (touch ?t ?i ?t) )
              (once (in pink) )
              (hold-to-end (agent_holds bed ?t) )
            )
          )
        )
        (preference preference3
          (exists (?i - dodgeball ?r - (either dodgeball pyramid_block golfball))
            (then
              (once (in_motion pink_dodgeball) )
              (hold (agent_holds ?r ?r) )
              (hold (agent_holds ?t) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count preference2:dodgeball) (external-forall-maximize 0.7 ) )
    (count preference3:blue_dodgeball)
  )
)
(:scoring
  (* (external-forall-maximize (count-once preference3:beachball:golfball) ) 3 (count preference3:golfball) )
)
)

(define (game game-id-909) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-conserved
      (on back bed)
    )
    (game-conserved
      (on ?xxx)
    )
    (game-conserved
      (adjacent ?xxx)
    )
  )
)
(:constraints
  (and
    (forall (?j - teddy_bear)
      (and
        (preference preference1
          (exists (?k - ball)
            (then
              (once (agent_holds ?k) )
              (hold (in_motion ?j upright) )
              (once (agent_holds bed) )
            )
          )
        )
      )
    )
    (forall (?u - doggie_bed)
      (and
        (preference preference2
          (exists (?a - curved_wooden_ramp ?f - hexagonal_bin)
            (then
              (once (and (in ?f ?u) (on ?u) ) )
              (hold (not (not (agent_holds ?u) ) ) )
              (hold-while (and (and (and (and (and (not (in_motion ?f) ) (agent_holds ?f) ) (agent_holds ?f ?u) ) (same_color agent) (agent_holds ?f) (agent_holds ?u ?f) (adjacent upright ?f) (or (agent_holds ?u) (same_type ?u) ) ) (in_motion ?f) ) (and (and (and (agent_holds ?f) (< 1 (distance 4 desk)) ) (and (not (in ?f) ) (agent_holds ?u) (in ?u) ) ) (on ?u desk) ) (< (distance 8 2) 1) ) (agent_holds ?u ?u) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference1:doggie_bed) (* 3 (count-once-per-objects preference2:blue_pyramid_block) )
  )
)
(:scoring
  10
)
)

(define (game game-id-910) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (and
      (not
        (and
          (agent_holds ?xxx bed)
          (on ?xxx)
        )
      )
      (agent_holds ?xxx ?xxx)
      (forall (?d - game_object)
        (in ?d)
      )
      (not
        (or
          (forall (?n - hexagonal_bin)
            (on bed)
          )
          (adjacent_side ?xxx agent ?xxx)
        )
      )
      (not
        (adjacent ?xxx)
      )
      (in_motion blue ?xxx)
      (not
        (in_motion ?xxx)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?d - wall ?r - hexagonal_bin ?x ?d - game_object)
        (then
          (once (and (on ?x) (not (adjacent ?x) ) ) )
          (once (in ?x) )
          (hold (not (on ) ) )
        )
      )
    )
    (preference preference2
      (exists (?d - game_object ?o - chair)
        (then
          (once (< 1 (distance )) )
          (hold (in_motion ?o) )
          (once (in ?o) )
        )
      )
    )
  )
)
(:terminal
  (> (* 1 10 (count preference1:book) )
    9
  )
)
(:scoring
  (* 8 (count preference1:purple) )
)
)

(define (game game-id-911) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?f ?u ?z - hexagonal_bin)
      (and
        (and
          (and
            (and
              (not
                (exists (?s - dodgeball ?x - book ?r - (either lamp laptop teddy_bear))
                  (forall (?t - building ?t - chair)
                    (game-optional
                      (in_motion ?u ?u ?r)
                    )
                  )
                )
              )
            )
            (game-conserved
              (on ?u ?f)
            )
          )
          (game-conserved
            (and
              (and
                (and
                  (exists (?e - game_object ?b - ball ?v - hexagonal_bin ?j - ball)
                    (in_motion ?f)
                  )
                  (in ?f)
                )
                (and
                  (not
                    (and
                      (not
                        (adjacent ?f)
                      )
                      (in_motion agent ?f)
                    )
                  )
                  (not
                    (and
                      (in_motion ?f)
                      (in ?u)
                    )
                  )
                  (in_motion ?u)
                )
              )
              (agent_holds door ?f)
            )
          )
          (or
            (game-optional
              (touch upright)
            )
          )
        )
        (forall (?h - ball)
          (and
            (forall (?r - cube_block)
              (exists (?v - block)
                (exists (?j - hexagonal_bin ?q - hexagonal_bin ?q - building)
                  (game-conserved
                    (forall (?a - game_object ?y - block ?g - block)
                      (and
                        (in_motion ?v desk ?h)
                        (agent_holds )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?m - hexagonal_bin)
      (and
        (preference preference1
          (exists (?r - hexagonal_bin ?i - hexagonal_bin)
            (then
              (hold (touch agent) )
              (hold (in_motion ?m) )
              (once (and (in ?i) (<= (distance desk green_golfball) 1) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (= 100 (count preference1:golfball) )
    (>= (* 8 5 )
      (+ (- (count-once preference1:pink) )
        (count preference1:doggie_bed:dodgeball:beachball)
      )
    )
    (> (count preference1:pyramid_block) (* (* (count preference1:doggie_bed) (- 12 )
        )
        (count preference1:dodgeball)
        (< 20 (+ (count-once-per-objects preference1:basketball) 10 )
        )
        (* (* (* (+ (* (count preference1:yellow) (count preference1) )
                (count preference1:hexagonal_bin:basketball)
              )
              5
            )
            (* (not 7 ) (count preference1:green) )
          )
          (>= 3 (count preference1:beachball) )
        )
      )
    )
    (>= (* 8 (* (count-once-per-objects preference1:hexagonal_bin) (external-forall-minimize 180 ) )
      )
      (* (count-once-per-objects preference1:dodgeball) (count preference1:green) )
    )
  )
)
(:scoring
  10
)
)

(define (game game-id-912) (:domain medium-objects-room-v1)
(:setup
  (exists (?i - hexagonal_bin ?a ?l - hexagonal_bin ?h ?d ?w ?r - dodgeball ?p ?e - triangular_ramp ?u - beachball)
    (and
      (and
        (and
          (game-conserved
            (agent_holds ?u)
          )
        )
      )
      (forall (?w - (either blue_cube_block pillow))
        (exists (?t - hexagonal_bin)
          (game-conserved
            (touch ?u ?t)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?j - curved_wooden_ramp)
        (at-end
          (not
            (not
              (adjacent ?j ?j)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< (* (* 3 (count-once-per-external-objects preference1:block) )
      (* (total-time) (count-once-per-objects preference1:purple:golfball) )
    )
    1
  )
)
(:scoring
  (+ (count preference1:purple) (* 2 (count preference1:cube_block) )
    (* 5 (external-forall-minimize (count preference1:dodgeball) ) )
    (count-once-per-objects preference1:pink_dodgeball:red)
    (count preference1:alarm_clock)
    (count-longest preference1:purple:dodgeball)
  )
)
)

(define (game game-id-913) (:domain few-objects-room-v1)
(:setup
  (exists (?i - hexagonal_bin ?s - (either doggie_bed dodgeball))
    (and
      (and
        (exists (?j - curved_wooden_ramp)
          (and
            (game-optional
              (agent_holds ?s)
            )
          )
        )
        (game-optional
          (on ?s)
        )
        (game-conserved
          (and
            (and
              (agent_holds ?s)
              (in_motion ?s ?s)
            )
            (agent_crouches ?s)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?x - dodgeball)
      (and
        (preference preference1
          (exists (?n - hexagonal_bin ?a ?v - ball)
            (then
              (once (agent_holds ?x) )
              (hold (and (is_setup_object ?x) (<= 1 1) ) )
              (once (adjacent ?v bed) )
            )
          )
        )
      )
    )
    (forall (?j - block)
      (and
        (preference preference2
          (exists (?m - hexagonal_bin)
            (then
              (once (not (>= (distance ?j ?m) 2) ) )
              (once (exists (?p - game_object) (adjacent_side ?j) ) )
              (once (adjacent ?m ?m desk) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference2:blue_pyramid_block) (count preference2:cube_block:orange) )
)
(:scoring
  (count preference2:basketball:red)
)
)

(define (game game-id-914) (:domain many-objects-room-v1)
(:setup
  (and
    (game-optional
      (and
        (touch ?xxx)
        (in_motion ?xxx)
      )
    )
    (forall (?m - (either book golfball))
      (and
        (exists (?c - curved_wooden_ramp)
          (game-conserved
            (same_type ?c ?m)
          )
        )
        (game-conserved
          (agent_holds bed)
        )
      )
    )
    (exists (?a - (either flat_block cylindrical_block) ?c - dodgeball)
      (game-conserved
        (or
          (agent_holds ?c)
          (and
            (touch ?c)
            (and
              (or
                (touch ?c ?c)
                (adjacent ?c ?c)
              )
              (not
                (not
                  (agent_holds ?c ?c ?c)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?j - dodgeball ?f - game_object)
        (then
          (once (in_motion agent) )
          (hold-while (not (not (agent_holds agent) ) ) (not (on ?f ?f) ) (agent_holds ?f) )
          (hold (forall (?y - hexagonal_bin) (and (and (in ?f agent) (on ?f ?y) (in ?y ?f) ) (in_motion ?f) ) ) )
        )
      )
    )
  )
)
(:terminal
  (> 6 (count preference1:orange) )
)
(:scoring
  25
)
)

(define (game game-id-915) (:domain few-objects-room-v1)
(:setup
  (exists (?m - hexagonal_bin ?k - (either pencil basketball laptop))
    (game-optional
      (and
        (agent_holds ?k)
        (not
          (in_motion rug ?k)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?u - hexagonal_bin ?y - hexagonal_bin)
        (then
          (once (forall (?f - (either wall cylindrical_block) ?d - triangular_ramp) (agent_holds ?d) ) )
          (once (agent_holds ?y) )
        )
      )
    )
  )
)
(:terminal
  (>= 10 15 )
)
(:scoring
  5
)
)

(define (game game-id-916) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (in_motion ?xxx ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?k - dodgeball)
        (then
          (once (not (on brown ?k) ) )
          (hold (agent_holds ?k) )
          (once (agent_holds ?k) )
        )
      )
    )
    (preference preference2
      (exists (?z - teddy_bear)
        (then
          (hold-while (in_motion ?z) (and (agent_holds desk) (in_motion ?z ?z) ) (not (agent_holds ?z) ) )
          (once (in_motion ?z) )
          (once (and (agent_holds ?z ?z) (and (= (distance ) (distance room_center ?z)) (in_motion ?z ?z) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (* (count preference1:red) (count preference2:pink_dodgeball:green) )
      10
      3
    )
    (count preference2:pink:dodgeball)
  )
)
(:scoring
  (* (* (count preference1:alarm_clock) (total-score) (not (count-once-per-objects preference1:orange) ) (external-forall-minimize (* (total-score) (count-once-per-objects preference1:purple:dodgeball) )
      )
      (* (count-once-per-objects preference1:basketball) 10 )
      (count-once-per-objects preference2:brown)
    )
    (count-once-per-objects preference1:pink_dodgeball)
    (= 10 (external-forall-maximize 3 ) )
  )
)
)

(define (game game-id-917) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (on door)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?z - (either book teddy_bear))
        (then
          (once (is_setup_object door) )
          (once (and (not (not (in_motion ?z) ) ) (in_motion ?z ?z) ) )
          (hold-while (and (in_motion ?z) (not (agent_holds floor) ) (in_motion ?z) ) (and (and (object_orientation agent ?z) (adjacent ?z) ) (agent_holds ?z ?z) ) )
        )
      )
    )
    (forall (?g - drawer ?t - shelf)
      (and
        (preference preference2
          (exists (?s - dodgeball ?g - hexagonal_bin ?p - hexagonal_bin)
            (then
              (hold (agent_holds ?p ?p) )
              (hold (not (adjacent ?p) ) )
              (once (not (touch ?t) ) )
            )
          )
        )
        (preference preference3
          (exists (?i - hexagonal_bin ?z ?d - hexagonal_bin)
            (then
              (hold (not (agent_holds ?d) ) )
              (hold-while (agent_holds ?z) (on ?t) (in ?t ?d) (in_motion ?t ?z) )
              (once (agent_holds ?z) )
            )
          )
        )
        (preference preference4
          (exists (?n - block)
            (then
              (once (on ?n ?n) )
              (once (not (agent_holds ?n) ) )
              (once (rug_color_under desk agent) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-once preference3:cylindrical_block) (count-once preference4:dodgeball) )
  )
)
(:scoring
  3
)
)

(define (game game-id-918) (:domain few-objects-room-v1)
(:setup
  (or
    (and
      (game-conserved
        (forall (?w - beachball)
          (on ?w)
        )
      )
      (forall (?q - hexagonal_bin)
        (and
          (and
            (forall (?e - block)
              (game-conserved
                (not
                  (not
                    (and
                      (on ?e ?e)
                      (on ?q)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
    (exists (?q - teddy_bear)
      (exists (?g - color ?v - wall)
        (and
          (game-conserved
            (adjacent agent)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (then
        (hold (same_type ?xxx) )
        (hold-while (agent_holds ?xxx) (in ?xxx ?xxx) )
        (hold-while (on ?xxx) (on pink) )
      )
    )
    (forall (?p ?c - game_object ?g ?r - hexagonal_bin)
      (and
        (preference preference2
          (exists (?i - chair ?f - game_object)
            (then
              (hold-while (and (and (and (in desktop) (in ?r ?g) ) (and (and (adjacent ?r ?f) (in_motion rug ?f) (in desk) ) (and (not (and (on agent ?f) (and (not (and (in pink ?g) (exists (?c - doggie_bed) (touch ?c ?c) ) ) ) (in_motion ?r ?g) ) ) ) (not (< 7 (distance ?f agent)) ) ) ) ) (touch ?g ?f) ) (agent_holds ?f ?r) (adjacent ?r agent) (adjacent ?r) )
              (once (agent_holds ?f) )
              (once (and (same_color bed) (agent_holds ?f agent) (in ) (adjacent ?r east_sliding_door) ) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?f - hexagonal_bin ?u ?s - hexagonal_bin)
        (at-end
          (in_motion ?s)
        )
      )
    )
    (forall (?m - game_object)
      (and
        (preference preference4
          (exists (?k - drawer ?s - building ?o - game_object)
            (then
              (once (in rug) )
              (once (on ?o) )
              (hold (not (not (exists (?u - building) (agent_holds ?o) ) ) ) )
            )
          )
        )
        (preference preference5
          (exists (?i - hexagonal_bin ?q - hexagonal_bin ?l - cube_block)
            (then
              (once (on ?l ?m) )
              (once (on ?l ?l) )
              (once (agent_holds ?l) )
            )
          )
        )
        (preference preference6
          (exists (?x - chair ?h - book)
            (then
              (forall-sequence (?l - tall_cylindrical_block)
                (then
                  (once (agent_holds agent) )
                  (once (in_motion ?l rug) )
                  (hold (in_motion ?m) )
                )
              )
              (once (>= (x_position ?m room_center) (distance 0 agent)) )
              (once (and (and (on ?m ?m) (and (adjacent rug) (agent_holds ?m) (not (in_motion ?h ?m) ) (agent_holds ?m) (exists (?a - dodgeball) (object_orientation ?a) ) (not (same_type ?h) ) (exists (?w - triangular_ramp) (agent_holds ?w ?h) ) (in_motion bed) (toggled_on desk ?h) (and (in_motion ?m ?m) (in_motion ?h) ) ) ) (> (distance ?h room_center 3) (distance room_center ?h)) (not (not (not (in ?m) ) ) ) ) )
              (hold (agent_holds ?h) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= 3 (external-forall-maximize 5 ) )
  )
)
(:scoring
  (total-time)
)
)

(define (game game-id-919) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (not
      (in_motion ?xxx ?xxx)
    )
  )
)
(:constraints
  (and
    (forall (?y ?t - golfball ?r - building)
      (and
        (preference preference1
          (exists (?k - blue_cube_block)
            (then
              (once (and (touch ?r ?r) (and (not (agent_holds ?k blue) ) (< 2 1) ) ) )
              (once (in_motion ?r ?r) )
              (once (agent_holds ?k) )
            )
          )
        )
        (preference preference2
          (exists (?k - (either book golfball))
            (then
              (once (not (and (on ?k ?k) (agent_holds ?k ?r) (and (not (on door ?r) ) (not (is_setup_object ?k) ) ) ) ) )
              (hold (and (and (in_motion ?r ?r) (on ?r) (agent_holds rug) (not (not (adjacent ?r) ) ) ) (agent_holds ?k) ) )
              (once (not (or (agent_holds ?k) (not (> 1 (distance 10)) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (and
      (>= (count preference2:basketball) (external-forall-maximize (external-forall-maximize (count-once preference1:basketball) ) ) )
    )
    (> 1 3 )
  )
)
(:scoring
  (total-score)
)
)

(define (game game-id-920) (:domain few-objects-room-v1)
(:setup
  (exists (?g - hexagonal_bin)
    (and
      (game-conserved
        (or
          (and
            (agent_holds ?g)
            (in_motion ?g)
          )
          (agent_holds desk)
        )
      )
      (game-conserved
        (touch ?g)
      )
      (game-optional
        (and
          (and
            (in ?g)
            (not
              (and
                (in_motion ?g)
                (not
                  (and
                    (not
                      (adjacent ?g rug)
                    )
                    (in_motion desk)
                  )
                )
                (and
                  (adjacent ?g)
                  (and
                    (on ?g)
                    (on top_shelf)
                  )
                  (in_motion ?g ?g)
                )
              )
            )
          )
          (and
            (in ?g ?g)
            (in_motion ?g)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?j - building)
        (then
          (once (agent_holds ?j) )
          (once (on ?j ?j) )
          (once (agent_holds ?j door) )
        )
      )
    )
  )
)
(:terminal
  (<= (count-once-per-objects preference1:orange) (count preference1:yellow) )
)
(:scoring
  (count-overlapping preference1:dodgeball)
)
)

(define (game game-id-921) (:domain few-objects-room-v1)
(:setup
  (forall (?b - building)
    (and
      (and
        (and
          (and
            (exists (?t - cube_block)
              (exists (?n - yellow_cube_block ?k - hexagonal_bin)
                (game-conserved
                  (is_setup_object north_wall ?k ?b)
                )
              )
            )
            (game-optional
              (= 1 1)
            )
            (game-conserved
              (and
                (not
                  (agent_holds ?b)
                )
                (in ?b)
              )
            )
          )
        )
        (exists (?s - yellow_pyramid_block)
          (forall (?r ?u - hexagonal_bin)
            (or
              (game-optional
                (and
                  (on ?r)
                  (in agent bed)
                  (agent_holds ?u)
                )
              )
            )
          )
        )
        (game-conserved
          (between agent)
        )
        (and
          (not
            (game-conserved
              (or
                (in_motion ?b)
                (in_motion ?b)
              )
            )
          )
          (and
            (exists (?d - game_object)
              (and
                (not
                  (exists (?x ?p - dodgeball)
                    (game-conserved
                      (in_motion ?b)
                    )
                  )
                )
              )
            )
          )
          (and
            (exists (?a - hexagonal_bin ?u - hexagonal_bin)
              (forall (?h ?t - curved_wooden_ramp ?z ?s - ball)
                (game-conserved
                  (not
                    (not
                      (not
                        (agent_holds ?z agent)
                      )
                    )
                  )
                )
              )
            )
            (exists (?a - pillow)
              (not
                (forall (?t - (either game_object pyramid_block) ?w - hexagonal_bin)
                  (game-optional
                    (adjacent ?b)
                  )
                )
              )
            )
          )
        )
        (game-optional
          (and
            (and
              (not
                (and
                  (in ?b)
                  (in floor ?b)
                )
              )
              (not
                (not
                  (agent_holds ?b)
                )
              )
            )
            (not
              (agent_holds color)
            )
            (not
              (exists (?g - dodgeball ?n - (either golfball basketball key_chain))
                (not
                  (not
                    (and
                      (in_motion ?n)
                      (adjacent ?n)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?t - block)
        (at-end
          (and
            (on ?t)
            (adjacent ?t ?t)
          )
        )
      )
    )
    (preference preference2
      (exists (?h - (either blue_cube_block triangle_block) ?f - hexagonal_bin)
        (then
          (once (and (in ?f) (<= 7 7) ) )
          (forall-sequence (?z - dodgeball ?v - hexagonal_bin)
            (then
              (once (same_type ?f) )
              (once (in_motion ?v ?f) )
              (once (and (not (and (agent_holds ?f) (= (distance ?v ?f) (distance room_center 2 ?f)) ) ) (and (touch blue) (and (game_over ?f) (on pink_dodgeball) ) ) ) )
              (hold (= 1 1) )
              (forall-sequence (?a - block)
                (then
                  (once (not (on ?f) ) )
                  (once (agent_holds ?a) )
                  (once (and (and (not (and (not (and (exists (?r - dodgeball ?g - dodgeball) (not (on ?f ?g) ) ) (and (same_type ) (agent_holds ?v) ) (in bed) ) ) (in ?v) ) ) (not (agent_holds ?v) ) ) (and (in_motion rug ?f ?f) (and (and (in_motion ?v ?f) (and (exists (?i - (either wall bridge_block)) (in_motion ?f ?f) ) (on agent ?f) ) (in_motion blue ?a) ) (< (distance 3 bed) 1) ) ) (forall (?e - dodgeball ?t - hexagonal_bin) (rug_color_under ?v) ) ) )
                )
              )
            )
          )
          (once (and (in ?f) (in_motion ?f ?f) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (count-once-per-objects preference1:alarm_clock) )
)
(:scoring
  5
)
)

(define (game game-id-922) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (and
      (or
        (agent_holds ?xxx)
        (in_motion agent)
      )
      (on ?xxx)
      (not
        (in_motion ?xxx side_table)
      )
      (on ?xxx)
      (not
        (in_motion ?xxx)
      )
      (and
        (and
          (on ?xxx ?xxx)
          (and
            (on agent ?xxx ?xxx)
            (and
              (in_motion ?xxx)
              (on bed)
              (exists (?o - pyramid_block ?d - dodgeball)
                (agent_holds agent agent)
              )
            )
            (>= (distance ) 1)
          )
        )
        (and
          (= (distance ?xxx 9 9))
          (and
            (in desk ?xxx)
            (<= (distance ?xxx ?xxx) 1)
          )
        )
      )
      (agent_holds ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?e - block)
        (at-end
          (agent_holds ?e)
        )
      )
    )
  )
)
(:terminal
  (or
    (< (count-increasing-measure preference1:beachball) (count-increasing-measure preference1:dodgeball:golfball) )
    (>= (+ 2 (count preference1:yellow) )
      (count-once-per-objects preference1:basketball:brown)
    )
  )
)
(:scoring
  (+ (count preference1:doggie_bed) (* (* 5 (count-once-per-external-objects preference1:blue_pyramid_block) )
      (* (count-shortest preference1:golfball) (count preference1:pink) )
      (* (+ (* 10 (count preference1:dodgeball:brown:basketball) 3 )
          (+ (* 30 2 )
            (* 3 (+ (count-once-per-objects preference1:pink) (or (+ (count-once-per-objects preference1:dodgeball) (count preference1:beachball) )
                  (count-once preference1:yellow_cube_block)
                  (* (- (+ 2 (count-once-per-external-objects preference1:dodgeball) )
                    )
                    10
                  )
                )
              )
            )
          )
        )
        (count-once-per-objects preference1:green:basketball)
      )
    )
    (- (count preference1:green:alarm_clock) )
  )
)
)

(define (game game-id-923) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (in_motion ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?n - hexagonal_bin)
        (then
          (once (in_motion ?n ?n) )
          (once (not (broken ?n) ) )
          (once (in_motion ?n) )
        )
      )
    )
    (preference preference2
      (exists (?q - dodgeball)
        (then
          (once (on ?q) )
          (once (on ?q upright ?q) )
          (once (opposite ?q) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (+ 4 (* (count preference2:basketball) (* (* (* (count-same-positions preference1:hexagonal_bin) (count-measure preference1:beachball) )
              (count-once-per-objects preference2)
            )
            10
          )
        )
      )
      (* (count preference2:beachball) (count-once-per-objects preference2:beachball) )
    )
    (count-once preference1:basketball)
  )
)
(:scoring
  (- (count preference2:orange:doggie_bed:orange) )
)
)

(define (game game-id-924) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?v - wall ?j - dodgeball)
      (exists (?e - sliding_door)
        (game-optional
          (and
            (between ?e)
            (in floor)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?y - bridge_block)
        (then
          (hold (agent_holds floor ?y) )
        )
      )
    )
    (forall (?l - chair ?r - ball ?o - flat_block)
      (and
        (preference preference2
          (then
            (once (in rug) )
            (hold (in_motion ?o) )
            (once (same_color ?o) )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (<= (total-score) (+ (count preference1:dodgeball:cube_block) (count-once-per-objects preference2:golfball:dodgeball) )
    )
  )
)
(:scoring
  (count-once preference2:pink_dodgeball)
)
)

(define (game game-id-925) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (and
      (not
        (on ?xxx ?xxx)
      )
      (and
        (on ?xxx ?xxx)
        (in ?xxx)
        (in_motion desk)
        (adjacent ?xxx ?xxx)
        (and
          (is_setup_object ?xxx sideways)
          (agent_holds ?xxx ?xxx)
        )
        (not
          (and
            (faces ?xxx)
            (and
              (adjacent ?xxx)
              (in_motion ?xxx ?xxx)
            )
          )
        )
        (not
          (agent_holds ?xxx)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?k - building ?t - dodgeball)
      (and
        (preference preference1
          (exists (?i - book)
            (then
              (once (not (not (on ?t) ) ) )
            )
          )
        )
        (preference preference2
          (exists (?o ?y ?c - hexagonal_bin)
            (then
              (once (< 1 7) )
              (once (agent_holds ?y) )
              (hold (< 7 (distance ?o ?o)) )
            )
          )
        )
        (preference preference3
          (exists (?o - game_object)
            (then
              (once (> 1 (distance )) )
              (hold (in_motion ?o ?t) )
              (once (and (agent_holds ?o) (and (and (is_setup_object ?t) (in_motion ?o ?t) ) (in south_wall) ) ) )
            )
          )
        )
      )
    )
    (forall (?y - pillow ?p - ball ?r - hexagonal_bin ?e ?v ?t - building)
      (and
        (preference preference4
          (exists (?h - beachball ?y - hexagonal_bin)
            (then
              (once (on ?t ?e) )
              (once (agent_holds ?v) )
              (once (>= 0 3) )
              (once (on upright) )
            )
          )
        )
        (preference preference5
          (exists (?f - hexagonal_bin)
            (then
              (once (agent_holds ?t ?t) )
              (once (not (and (in_motion ?f) (and (in ?f) (and (on ?f ?f) (not (exists (?u - hexagonal_bin ?s - wall) (not (agent_holds agent ?e) ) ) ) ) ) ) ) )
              (hold (and (in ?f agent) (and (in_motion ?v) (< 5 (distance ?v ?e)) ) (not (and (in_motion bed top_shelf) (in_motion ?e ?f) ) ) ) )
            )
          )
        )
        (preference preference6
          (exists (?y - hexagonal_bin)
            (then
              (hold-for 5 (touch ?t ?v) )
              (once (in ?t ?e) )
              (once (not (not (on pink ?t) ) ) )
            )
          )
        )
      )
    )
    (preference preference7
      (exists (?k - hexagonal_bin)
        (then
          (once (in_motion agent) )
          (once (in ?k ?k) )
          (once (not (< (distance room_center ?k) 9) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (not
      (> (count preference5:red:hexagonal_bin:green) (count preference3:pink) )
    )
    (>= 1 (external-forall-maximize (external-forall-maximize (* 1 1 )
        )
      )
    )
  )
)
(:scoring
  6
)
)

(define (game game-id-926) (:domain many-objects-room-v1)
(:setup
  (forall (?x - game_object ?n - hexagonal_bin ?v - dodgeball)
    (exists (?f - cube_block)
      (exists (?d ?b - hexagonal_bin)
        (game-conserved
          (adjacent desk)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?z - pyramid_block)
        (then
          (hold (and (on ?z) (on brown ?z) ) )
          (hold (not (adjacent ?z) ) )
          (once (in_motion ?z) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (* (* 3 9 (not (count preference1:beachball:red) ) )
        3
      )
      (count-once-per-objects preference1:dodgeball)
      (+ 2 (- (count-once preference1:pink:blue_dodgeball) )
      )
    )
    25
  )
)
(:scoring
  2
)
)

(define (game game-id-927) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (in_motion ?xxx ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?g - tall_cylindrical_block ?i ?d ?x - hexagonal_bin)
        (then
          (hold-while (in_motion ?d ?d) (above ?i) )
          (hold-while (on ?d) (agent_holds desk) (in front) )
          (once (in_motion ?x ?d) )
        )
      )
    )
    (preference preference2
      (exists (?m - hexagonal_bin)
        (then
          (once (agent_holds agent ?m) )
          (once (agent_holds ?m) )
          (once (and (agent_holds ?m rug) (and (forall (?z ?i - game_object) (and (not (in_motion ?i ?i) ) ) ) (open ?m) ) ) )
        )
      )
    )
    (preference preference3
      (at-end
        (not
          (forall (?q - pillow)
            (and
              (broken ?q)
              (and
                (in ?q ?q)
                (agent_holds ?q ?q)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 6 3 )
)
(:scoring
  4
)
)

(define (game game-id-928) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (in pink_dodgeball ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?e - red_pyramid_block)
        (then
          (hold (in_motion ?e) )
          (hold (agent_holds ) )
          (once (in_motion ?e) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-once-per-objects preference1:dodgeball) (* 8 (count preference1:pink_dodgeball) )
    )
    (or
      (>= (and (* 2 1 )
        )
        (count preference1:tall_cylindrical_block)
      )
      (>= (external-forall-maximize 2 ) 6 )
    )
    (>= (count-once-per-objects preference1:orange) (count-once preference1:dodgeball) )
  )
)
(:scoring
  (+ (count preference1:pink_dodgeball:dodgeball) (count preference1:pink) )
)
)

(define (game game-id-929) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (and
      (adjacent_side ?xxx)
      (agent_holds front)
    )
  )
)
(:constraints
  (and
    (forall (?t - hexagonal_bin)
      (and
        (preference preference1
          (then
            (once (and (agent_holds ?t) (in_motion ?t ?t) ) )
            (once (in_motion agent ?t) )
            (once (in_motion agent) )
            (once (in_motion ?t) )
            (hold-while (not (agent_holds pink_dodgeball desk) ) (not (not (opposite ?t ?t) ) ) )
          )
        )
      )
    )
    (preference preference2
      (exists (?y - hexagonal_bin)
        (then
          (once (adjacent ?y) )
          (once (not (and (on ?y ?y) (agent_holds ?y) ) ) )
          (once (not (on ?y) ) )
        )
      )
    )
  )
)
(:terminal
  (> 2 (count-once-per-objects preference1:blue_dodgeball) )
)
(:scoring
  5
)
)

(define (game game-id-930) (:domain few-objects-room-v1)
(:setup
  (forall (?q - game_object)
    (exists (?g - doggie_bed ?k - hexagonal_bin ?n - curved_wooden_ramp)
      (exists (?z - block)
        (game-conserved
          (in_motion ?q ?z)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?w - hexagonal_bin ?k - curved_wooden_ramp)
      (and
        (preference preference1
          (exists (?m - cube_block)
            (then
              (once (in_motion ?k ?m) )
              (hold (not (in_motion ?m ?m) ) )
              (hold (not (and (not (and (not (> 0.5 2) ) (adjacent ?m) ) ) (and (on ?m) (forall (?e - cube_block) (not (and (exists (?c - (either laptop dodgeball) ?q - (either book golfball pen)) (not (agent_holds ?m) ) ) (or (not (agent_holds ?k ?m) ) (on ?e) (adjacent ?k) ) ) ) ) ) ) ) )
            )
          )
        )
        (preference preference2
          (exists (?p - game_object)
            (at-end
              (on ?k)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (external-forall-maximize (count-once-per-objects preference1:dodgeball) ) )
)
(:scoring
  3
)
)

(define (game game-id-931) (:domain few-objects-room-v1)
(:setup
  (exists (?l - teddy_bear ?n - shelf)
    (forall (?d - hexagonal_bin)
      (forall (?j - teddy_bear ?e - (either alarm_clock))
        (exists (?r - shelf ?z - hexagonal_bin)
          (game-conserved
            (on ?n)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?n - hexagonal_bin)
        (at-end
          (and
            (in_motion ?n ?n)
            (touch ?n ?n)
          )
        )
      )
    )
  )
)
(:terminal
  (<= 2 (count preference1:basketball) )
)
(:scoring
  (count-once-per-objects preference1:alarm_clock)
)
)

(define (game game-id-932) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (not
      (equal_z_position upside_down)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?g ?b - hexagonal_bin)
        (then
          (once (in ?b) )
          (once (on ?b) )
          (once (not (adjacent bed) ) )
        )
      )
    )
    (forall (?w - hexagonal_bin)
      (and
        (preference preference2
          (exists (?i - shelf)
            (then
              (once (and (in back ?i) (not (agent_holds ?w ?w) ) (not (agent_holds ?w ?i) ) ) )
              (hold (not (in_motion ?i) ) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?c - sliding_door ?i - hexagonal_bin)
        (at-end
          (and
            (in_motion ?i)
            (in_motion ?i ?i)
            (on ?i)
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 9 (count-once-per-objects preference2:blue_pyramid_block) )
  )
)
(:scoring
  5
)
)

(define (game game-id-933) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (exists (?c - dodgeball)
      (not
        (exists (?u - hexagonal_bin)
          (and
            (is_setup_object ?u)
            (and
              (in_motion ?u)
              (not
                (and
                  (agent_holds front ?c)
                  (touch ?u ?u)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?a - (either pink pink))
      (and
        (preference preference1
          (exists (?e - golfball ?e - cube_block)
            (then
              (once (in ?e) )
              (once (and (adjacent pink_dodgeball ?e) (exists (?s - game_object) (and (not (< 8 1) ) (game_start ?a) ) ) ) )
              (once (and (not (and (not (in_motion ?a) ) (and (same_color ?e) (and (on bed) (not (not (on floor) ) ) ) (and (on ?a ?a) (< (distance 8 ?a) (distance ?a ?e)) ) ) ) ) (agent_holds agent) ) )
            )
          )
        )
        (preference preference2
          (exists (?l - doggie_bed ?p - hexagonal_bin ?n - ball)
            (then
              (hold (and (agent_holds desk) (and (not (agent_holds ?n ?a ?a) ) (agent_holds ?a ?n) ) (in ?n) ) )
              (hold (and (< 10 (distance ?n ?n)) (in_motion ?a) ) )
              (hold-while (and (agent_holds pink_dodgeball ?n) (in_motion ?a ?a) ) (agent_holds ?a ?n ?n) (and (not (on ?a ?a) ) (agent_holds ?n) ) (object_orientation ?n ?a) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?i - game_object ?w ?v - hexagonal_bin ?r - game_object)
        (then
          (once (in_motion ?r ?r) )
          (once (in_motion desktop ?r) )
          (once (not (and (touch rug) (agent_holds ?r ?r) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (+ 100 4 )
      (count preference1:dodgeball)
    )
    15
  )
)
(:scoring
  (= (count preference1:dodgeball:dodgeball) (count preference2:beachball) )
)
)

(define (game game-id-934) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (exists (?z - (either cd main_light_switch))
        (game-optional
          (same_object ?z)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?t ?q - dodgeball ?d - block)
      (and
        (preference preference1
          (exists (?z - (either blue_cube_block cylindrical_block yellow_cube_block))
            (at-end
              (equal_z_position ?d ?z)
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?n - ball)
        (then
          (hold (and (and (in_motion ?n) (agent_holds ?n ?n) ) (not (agent_holds ?n) ) ) )
          (once (not (not (in ?n ?n) ) ) )
          (once (in_motion ?n) )
        )
      )
    )
  )
)
(:terminal
  (or
    (= 4 (count preference1:basketball) )
    (>= (count preference2:dodgeball) 6 )
    (> (count-once-per-objects preference2:blue_pyramid_block:hexagonal_bin) 3 )
  )
)
(:scoring
  (count-once-per-objects preference2:dodgeball:tan)
)
)

(define (game game-id-935) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (not
      (on ?xxx ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?k - chair)
        (then
          (hold (not (agent_holds ?k ?k) ) )
          (once (not (adjacent ?k) ) )
          (once (in_motion top_drawer) )
        )
      )
    )
    (forall (?t ?g - game_object)
      (and
        (preference preference2
          (exists (?w - pillow)
            (then
              (hold (and (not (object_orientation ?w) ) (adjacent ?g) ) )
              (hold (and (agent_holds ?w) (not (agent_holds ?g ?g) ) ) )
              (once (or (touch ?g rug) (and (not (< (distance ?t agent) 1) ) (agent_holds ?t) ) (= 9 (distance agent 1 ?t)) ) )
            )
          )
        )
        (preference preference3
          (exists (?y - dodgeball)
            (then
              (hold (not (adjacent ?y) ) )
              (once (in_motion floor) )
              (hold (agent_holds upright ?y) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once preference1:orange:pink) (* 3 (total-score) )
  )
)
(:scoring
  2
)
)

(define (game game-id-936) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (not
      (and
        (not
          (in ?xxx bed)
        )
        (agent_holds ?xxx)
        (same_color ?xxx ?xxx)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?y - hexagonal_bin)
        (then
          (any)
          (hold (adjacent ?y ?y) )
          (once (between ?y) )
        )
      )
    )
    (preference preference2
      (then
        (once (in_motion ?xxx ?xxx) )
        (hold (agent_holds drawer) )
        (hold (and (same_color bed) (in_motion ?xxx) ) )
      )
    )
    (forall (?o - hexagonal_bin)
      (and
        (preference preference3
          (exists (?j - (either cylindrical_block book golfball))
            (then
              (once (adjacent ?j) )
              (once (< 6 1) )
              (hold (agent_holds agent) )
              (hold-while (= 0 (distance bed ?j)) (in_motion ?o) (not (not (agent_holds ?o) ) ) (in_motion upright ?o) )
              (hold (in ?j) )
              (once (and (and (not (agent_holds blue) ) (adjacent ?j ?j) ) (and (and (in_motion ?j) (not (agent_holds ?j) ) ) (on ?j ?j) ) (adjacent ?j ?o) (> 9 2) (or (and (not (and (agent_holds agent ?j) (and (on ?o) (and (and (in ?o) (on ?o bed ?j agent) ) (touch ?j ?o) ) ) ) ) (touch ?o ?j) (agent_holds ?o agent) ) (in_motion ?j) ) (and (in_motion ?o) (and (rug_color_under ?o ?j) (< (distance ?j room_center) 2) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= 3 (count preference3:basketball) )
  )
)
(:scoring
  (count preference3)
)
)

(define (game game-id-937) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (and
        (game-conserved
          (not
            (not
              (< 2 (distance ?xxx ?xxx))
            )
          )
        )
      )
      (game-conserved
        (adjacent_side ?xxx)
      )
      (forall (?z - hexagonal_bin)
        (and
          (exists (?k - pillow)
            (game-conserved
              (and
                (not
                  (adjacent ?z ?k)
                )
                (not
                  (on agent ?k)
                )
              )
            )
          )
          (game-conserved
            (not
              (same_type ?z bed ?z)
            )
          )
        )
      )
    )
    (game-conserved
      (forall (?q - dodgeball)
        (touch ?q)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?b - beachball)
        (then
          (once (adjacent_side ?b) )
          (once (or (on ?b ?b) (and (on ?b ?b ?b) (not (not (not (in_motion ?b ?b) ) ) ) ) ) )
          (hold (= (distance ?b 9) (distance room_center door)) )
        )
      )
    )
    (preference preference2
      (exists (?d - ball)
        (then
          (once (agent_holds ?d) )
          (once (and (or (not (in_motion ?d ?d) ) (in_motion ?d) ) (adjacent ?d) ) )
          (once (and (in ?d ?d) (exists (?g - triangular_ramp) (and (not (and (in_motion ?g) (agent_holds ?g) (open ?g ?d) ) ) (exists (?r - wall ?m - doggie_bed) (and (adjacent ?d ?d) (and (in ?g ?m) (agent_holds ?g desktop) ) ) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (total-score) 8 )
    (or
      (and
        (< 40 (- (count preference2:red) )
        )
      )
      (>= 5 (count-once-per-objects preference1:basketball) )
    )
    (>= (* 8 (* 10 2 )
      )
      (* (count preference2:dodgeball:dodgeball) (count preference1:pink:blue_dodgeball) 2 (+ 3 (* (total-time) 7 )
        )
        (* (* (count-once-per-objects preference1:cube_block) 40 )
          (- (+ (* (count-once-per-objects preference1:dodgeball) (count-once-per-objects preference2:red:yellow) (count preference1:cube_block) (* 2 3 (count preference2:beachball:pink) 3 15 )
                (count-once-per-objects preference2:blue_dodgeball)
                (count-once preference2:pink)
                (count-once-per-objects preference1:pink_dodgeball:bed)
                5
                (* (= 5 (not (count preference1:red) ) )
                  (external-forall-maximize
                    (* (count preference1:basketball:dodgeball) (+ 2 (count preference2:dodgeball:dodgeball) )
                    )
                  )
                  300
                  2
                )
                10
                (count-same-positions preference1:dodgeball)
                4
              )
              5
            )
          )
        )
        5
      )
    )
  )
)
(:scoring
  40
)
)

(define (game game-id-938) (:domain medium-objects-room-v1)
(:setup
  (forall (?c - dodgeball)
    (and
      (exists (?z - (either blue_cube_block dodgeball) ?e - (either doggie_bed cd))
        (game-conserved
          (not
            (not
              (and
                (exists (?y - color)
                  (< 0.5 1)
                )
                (adjacent bed ?c)
                (in_motion ?c)
                (not
                  (on ?c)
                )
                (in ?e rug)
                (not
                  (not
                    (and
                      (not
                        (<= 3 4)
                      )
                      (and
                        (in ?e)
                        (on ?e desk ?e)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
      (game-conserved
        (and
          (in_motion ?c ?c)
          (on ?c desk)
          (above ?c)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?t - curved_wooden_ramp ?x - hexagonal_bin)
        (then
          (hold (not (not (and (on ?x) (< (distance 1 room_center) 1) ) ) ) )
          (once (on ?x upright) )
          (hold (agent_holds ?x blinds) )
        )
      )
    )
    (preference preference2
      (exists (?d - color)
        (at-end
          (in_motion ?d ?d)
        )
      )
    )
  )
)
(:terminal
  (>= 2 (count-once-per-objects preference2:golfball:blue_dodgeball) )
)
(:scoring
  6
)
)

(define (game game-id-939) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (not
      (on ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (at-end
        (not
          (on ?xxx ?xxx)
        )
      )
    )
    (preference preference2
      (exists (?e - pyramid_block)
        (at-end
          (>= (distance room_center ?e) 2)
        )
      )
    )
    (forall (?a - hexagonal_bin)
      (and
        (preference preference3
          (exists (?f - dodgeball)
            (then
              (once (not (on ?a) ) )
              (hold-to-end (touch ?f) )
              (once (in_motion ?a) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (or (* (count-once-per-external-objects preference3:green) 20 )
          (count-once-per-objects preference2:alarm_clock)
          2
        )
        (- 3 )
      )
      (not
        (>= (* (count-once-per-objects preference2:blue_pyramid_block) (count-once-per-objects preference1:red) )
          10
        )
      )
    )
  )
)
(:scoring
  5
)
)

(define (game game-id-940) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (on ?xxx)
  )
)
(:constraints
  (and
    (forall (?t - dodgeball)
      (and
        (preference preference1
          (exists (?l - cube_block)
            (then
              (once (< (distance ?l ?t) (distance ?t ?l)) )
              (hold (agent_holds ?l ?l) )
              (hold (adjacent agent) )
            )
          )
        )
        (preference preference2
          (exists (?v - beachball ?w - pyramid_block)
            (then
              (once (agent_holds top_drawer ?t) )
              (once (in_motion ?t ?t) )
              (hold-while (agent_holds ?t) (agent_holds ?w) (in_motion agent ?w) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (> (* 5 (external-forall-maximize (total-score) ) )
        (* 3 (total-score) )
      )
      (<= 5 6 )
      (and
        (<= (+ (count preference2:block) 7 )
          (count-once-per-objects preference2:beachball)
        )
        (>= (count preference2:hexagonal_bin) (not (count-once-per-objects preference1:blue_cube_block) ) )
      )
    )
    (or
      (or
        (>= 4 (* (total-score) )
        )
        (or
          (< (not 10 ) 2 )
          (>= (count-once-per-objects preference1:orange:hexagonal_bin:dodgeball) 2 )
          (>= (* 2 (external-forall-maximize 15 ) )
            (* 10 9 2 20 5 3 )
          )
        )
      )
      (not
        (or
          (>= (- (count preference1:hexagonal_bin) )
            (count preference1:tall_cylindrical_block)
          )
          (<= (count-once-per-objects preference2:basketball:yellow_cube_block:beachball) 7 )
        )
      )
    )
  )
)
(:scoring
  (>= (count-once-per-objects preference1:purple) (count preference1:green:dodgeball) )
)
)

(define (game game-id-941) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (and
      (and
        (in_motion ?xxx ?xxx bridge_block)
        (not
          (in_motion ?xxx ?xxx)
        )
      )
      (and
        (in_motion desk ?xxx)
        (adjacent ?xxx ?xxx)
      )
      (not
        (not
          (= (distance ?xxx desk) 0.5)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?f ?j - hexagonal_bin ?p - curved_wooden_ramp)
        (then
          (once (and (rug_color_under ?p agent) (not (agent_holds ?p) ) ) )
          (hold (on ?p) )
          (hold (not (game_over ?p ?p) ) )
        )
      )
    )
    (forall (?g - hexagonal_bin ?g - block)
      (and
        (preference preference2
          (exists (?f - (either dodgeball dodgeball))
            (at-end
              (on ?f)
            )
          )
        )
      )
    )
    (forall (?h - block ?m - hexagonal_bin)
      (and
        (preference preference3
          (exists (?p - (either blue_cube_block golfball doggie_bed))
            (at-end
              (and
                (and
                  (not
                    (and
                      (not
                        (and
                          (adjacent ?m ?m)
                          (and
                            (in_motion ?p)
                            (agent_holds ?m)
                          )
                        )
                      )
                      (not
                        (in_motion ?p ?p)
                      )
                      (same_color door)
                    )
                  )
                  (agent_holds ?m)
                )
                (in_motion agent)
                (agent_holds ?p top_shelf)
                (is_setup_object desk)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (count preference1:pink) 4 )
)
(:scoring
  (count preference2:green:hexagonal_bin)
)
)

(define (game game-id-942) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (and
      (not
        (not
          (and
            (agent_holds ?xxx)
            (not
              (not
                (and
                  (in_motion ?xxx)
                  (in_motion ?xxx ?xxx)
                )
              )
            )
            (in_motion ?xxx)
          )
        )
      )
      (and
        (not
          (not
            (not
              (and
                (in_motion ?xxx)
                (not
                  (in_motion ?xxx)
                )
              )
            )
          )
        )
        (and
          (in_motion ?xxx)
          (agent_holds ?xxx)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?d - block)
        (then
          (once (in pink) )
          (hold (in_motion ?d) )
          (hold (in_motion rug) )
        )
      )
    )
    (preference preference2
      (exists (?l ?a - game_object)
        (then
          (once (on ?l ?l) )
          (hold (on ?a) )
          (hold (not (not (on ?l ?l) ) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (>= (* (count preference2:pink) (count-once-per-external-objects preference2:book:pink_dodgeball:pink) )
        (count-once preference1:basketball)
      )
    )
    (or
      (not
        (>= (count preference2:pink) 3 )
      )
      (or
        (or
          (= (count preference1:green) (* (count-once-per-objects preference1:yellow_pyramid_block) (* 2 (count preference2:doggie_bed) )
            )
          )
          (or
            (or
              (> (count preference2:orange) 10 )
              (>= (count preference1:yellow:blue_pyramid_block) (count preference1:pink_dodgeball) )
            )
            (> (count preference1:basketball:purple) (* (count-once-per-objects preference1:beachball) 15 )
            )
          )
          (or
            (>= (count-once-per-objects preference1:dodgeball) (count preference1:doggie_bed) )
            (>= (count preference2:orange:purple) (* (count preference2:basketball:dodgeball) (count preference2:orange) (- 20 )
                (= (count-once-per-objects preference1:pink) (>= (count preference2:dodgeball:basketball) 7 )
                )
                (count preference2:cube_block)
                (count-same-positions preference2:red)
              )
            )
            (>= 20 (count-shortest preference2:dodgeball:green) )
          )
        )
        (>= (count-once-per-objects preference1:basketball:hexagonal_bin) (count-same-positions preference2:pink:golfball) )
        (> (* 4 (count preference2:dodgeball) )
          10
        )
      )
    )
  )
)
(:scoring
  (count preference1:beachball)
)
)

(define (game game-id-943) (:domain few-objects-room-v1)
(:setup
  (exists (?n - ball ?e - building ?t - ball ?h ?k ?j - drawer)
    (forall (?i - building ?b - (either pen))
      (and
        (forall (?a - (either bridge_block flat_block cellphone))
          (game-optional
            (on ?a)
          )
        )
        (exists (?l - hexagonal_bin)
          (exists (?p - dodgeball)
            (and
              (and
                (exists (?q - dodgeball ?r - flat_block)
                  (forall (?d - hexagonal_bin ?u - game_object)
                    (game-conserved
                      (agent_holds ?u)
                    )
                  )
                )
              )
            )
          )
        )
        (and
          (exists (?g - dodgeball)
            (and
              (and
                (game-optional
                  (and
                    (not
                      (in_motion ?g ?j)
                    )
                    (and
                      (in_motion ?j)
                      (and
                        (not
                          (agent_holds ?j)
                        )
                        (and
                          (in_motion ?b)
                          (and
                            (on agent)
                            (agent_holds ?h)
                            (not
                              (and
                                (on ?h ?g)
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
              (game-conserved
                (and
                  (adjacent ?j)
                  (and
                    (agent_holds ?j ?h)
                    (and
                      (not
                        (agent_holds ball)
                      )
                      (adjacent_side upright)
                    )
                  )
                )
              )
              (and
                (game-optional
                  (on ?h)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?o - hexagonal_bin)
        (at-end
          (agent_holds agent)
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:yellow) (total-time) )
)
(:scoring
  10
)
)

(define (game game-id-944) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (and
      (on ?xxx ?xxx)
      (adjacent ?xxx ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?e - wall)
        (then
          (once (agent_holds ?e) )
          (once (agent_holds floor ?e) )
          (hold (on ?e ?e) )
        )
      )
    )
  )
)
(:terminal
  (>= (- (count-shortest preference1:blue_dodgeball) )
    (* 25 3 )
  )
)
(:scoring
  (count-once preference1:doggie_bed)
)
)

(define (game game-id-945) (:domain many-objects-room-v1)
(:setup
  (forall (?q - doggie_bed ?t - dodgeball)
    (forall (?x ?c - dodgeball ?l - ball)
      (and
        (game-optional
          (agent_holds ?t ?l)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?z - (either yellow_cube_block mug))
      (and
        (preference preference1
          (exists (?h ?k - hexagonal_bin)
            (then
              (once (agent_holds ?h ?h) )
              (once (or (not (not (agent_holds ?h) ) ) (agent_holds agent) (not (not (agent_holds ?z) ) ) ) )
            )
          )
        )
        (preference preference2
          (exists (?b ?s - (either hexagonal_bin flat_block))
            (then
              (hold-to-end (in_motion ?b) )
              (hold (and (and (in_motion ?s) (and (not (and (not (adjacent ?z) ) (agent_holds ?z agent) (touch ?s) (agent_holds rug) ) ) (< (distance room_center ?z) (distance ?b side_table)) ) ) (in_motion ?b) ) )
              (any)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< (- (count-same-positions preference2:beachball) )
    15
  )
)
(:scoring
  (count preference2:pyramid_block)
)
)

(define (game game-id-946) (:domain medium-objects-room-v1)
(:setup
  (exists (?w ?h - chair)
    (exists (?n - hexagonal_bin)
      (exists (?j - (either dodgeball blue_cube_block cube_block))
        (and
          (exists (?e - ball ?g - curved_wooden_ramp)
            (game-conserved
              (agent_holds ?h)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?t - cube_block)
        (then
          (once (not (adjacent ?t) ) )
          (once (agent_holds ?t) )
          (hold (= (distance ?t) 3) )
        )
      )
    )
    (preference preference2
      (then
        (hold (not (in_motion ?xxx) ) )
        (once (adjacent ?xxx) )
        (once (not (agent_holds ?xxx) ) )
      )
    )
  )
)
(:terminal
  (not
    (= (count-once-per-objects preference1:beachball) (* (count-overlapping preference2:dodgeball) (count-once preference1:alarm_clock) 10 )
    )
  )
)
(:scoring
  (or
    (* 2 (+ (count-once-per-objects preference2:beachball) (+ (and 0.7 (+ 2 (count preference1:golfball) )
          )
          10
          1
        )
      )
    )
    (count preference2:orange)
  )
)
)

(define (game game-id-947) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (not
      (exists (?z - cube_block)
        (on ?z)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?h - (either floor mug yellow_cube_block))
        (then
          (once (and (and (not (agent_holds ?h ?h) ) (on ?h) (and (not (and (adjacent ?h) (in_motion ?h) ) ) (not (and (= (x_position 7 room_center room_center) (distance ?h ?h)) (or (agent_holds ?h ?h) (agent_holds ?h ?h) ) (not (exists (?i - hexagonal_bin) (and (agent_holds ?i ?i) (object_orientation pink_dodgeball) (agent_holds ?i) (in_motion ?i ?h) ) ) ) ) ) ) ) (agent_holds ?h) ) )
          (once (on ?h) )
          (once (in_motion ?h bed) )
        )
      )
    )
  )
)
(:terminal
  (> (+ (count-once-per-external-objects preference1:beachball) (count preference1:yellow) )
    (count-once preference1:doggie_bed)
  )
)
(:scoring
  15
)
)

(define (game game-id-948) (:domain medium-objects-room-v1)
(:setup
  (forall (?b - tall_cylindrical_block)
    (and
      (exists (?d - dodgeball)
        (game-conserved
          (not
            (forall (?r - red_dodgeball ?u - (either cylindrical_block cd alarm_clock) ?t - teddy_bear)
              (agent_holds ?d ?d)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?z - hexagonal_bin)
      (and
        (preference preference1
          (exists (?i - dodgeball)
            (then
              (hold-while (in_motion ?z ?z) (not (not (on ?i ?z) ) ) )
              (once (same_type ?z) )
              (once (and (< (distance ?i ?i) 0) (agent_holds ?i) ) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?o - beachball)
        (at-end
          (not
            (agent_holds ?o)
          )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (* 6 (+ (count preference2:pink) (>= (+ (count-once-per-external-objects preference2:dodgeball) 1 (* (count preference2:dodgeball:dodgeball) (* (count preference2:basketball) (count-once-per-objects preference1:blue_pyramid_block:green) )
              )
            )
            (count-total preference1:dodgeball)
          )
        )
      )
      3
    )
    (count-once-per-objects preference1:dodgeball)
  )
)
(:scoring
  (count preference1:pink_dodgeball:beachball)
)
)

(define (game game-id-949) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (agent_holds )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?b - (either tall_cylindrical_block hexagonal_bin))
        (then
          (once (and (on ?b ?b) ) )
          (once (agent_holds ?b ?b) )
          (once (same_type ?b) )
        )
      )
    )
    (preference preference2
      (exists (?u - hexagonal_bin ?o ?z - hexagonal_bin)
        (at-end
          (not
            (in ?o)
          )
        )
      )
    )
  )
)
(:terminal
  (>= (+ 10 (count preference1:dodgeball:yellow:brown) )
    (total-score)
  )
)
(:scoring
  (+ 2 3 )
)
)

(define (game game-id-950) (:domain medium-objects-room-v1)
(:setup
  (exists (?g - dodgeball)
    (forall (?a - curved_wooden_ramp)
      (exists (?o - hexagonal_bin ?v - cube_block ?h - block ?s - hexagonal_bin)
        (and
          (game-conserved
            (on ?a ?a)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?i - yellow_cube_block)
      (and
        (preference preference1
          (exists (?w - wall)
            (then
              (once (not (agent_holds ?w) ) )
              (once (not (same_color ?i) ) )
              (hold-while (and (not (in ?i) ) (< (distance ?w door) 2) ) (not (not (agent_holds ?i) ) ) )
            )
          )
        )
        (preference preference2
          (exists (?v - dodgeball ?c - dodgeball)
            (then
              (once (agent_holds ?c) )
              (hold-while (touch ?i ?i) (agent_holds ?c ?i) )
              (once (in_motion ?i) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?r - hexagonal_bin ?c - cube_block)
        (at-end
          (or
            (not
              (on ?c)
            )
            (not
              (not
                (exists (?d - pillow)
                  (game_over ?d)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 3 1 )
)
(:scoring
  (+ (count-once preference3:beachball) 10 )
)
)

(define (game game-id-951) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (on agent)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?u - hexagonal_bin)
        (then
          (once (object_orientation ?u ?u) )
          (once (forall (?c - game_object) (and (and (exists (?n - dodgeball ?w - teddy_bear) (in_motion ?c) ) (in_motion ?u ?u) ) (in_motion ?c ?u) ) ) )
          (once (and (touch ?u ?u) (touch ?u ?u) ) )
        )
      )
    )
    (preference preference2
      (exists (?f - flat_block)
        (then
          (once (not (in_motion ?f) ) )
          (once (not (and (touch ?f) (in ?f) ) ) )
          (once (agent_holds ?f ?f) )
        )
      )
    )
    (preference preference3
      (exists (?y - shelf ?s - block)
        (then
          (hold (< 5 3) )
          (once (not (agent_holds ?s) ) )
          (once (in_motion ?s) )
          (hold-while (and (agent_holds ?s) (in_motion ?s ?s) ) (or (on ?s) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 1 15 )
)
(:scoring
  (count preference2:basketball)
)
)

(define (game game-id-952) (:domain medium-objects-room-v1)
(:setup
  (forall (?z - cube_block)
    (game-optional
      (and
        (agent_holds desk ?z)
        (and
          (and
            (on ?z)
            (and
              (on right)
              (and
                (and
                  (not
                    (in ?z ?z)
                  )
                  (<= 1 1)
                )
                (not
                  (adjacent ?z)
                )
              )
            )
          )
          (agent_holds ?z)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?k - dodgeball ?x ?q - hexagonal_bin ?x - hexagonal_bin)
      (and
        (preference preference1
          (exists (?i - building)
            (then
              (once (exists (?v - (either dodgeball pillow wall)) (and (and (and (in_motion ?x pink) (agent_holds ?v) ) (on ?x ?v) ) (in_motion ?x ?i) ) ) )
              (hold (not (agent_holds agent) ) )
              (once (and (same_object ?i ?i) (not (in ?x) ) ) )
            )
          )
        )
        (preference preference2
          (exists (?l - hexagonal_bin ?r - block ?v - bridge_block)
            (at-end
              (and
                (not
                  (agent_holds pink desk)
                )
                (touch desk ?v)
                (agent_holds ?x)
                (not
                  (touch ?x ?v)
                )
                (exists (?f ?h - shelf ?p - hexagonal_bin)
                  (and
                    (and
                      (not
                        (in_motion desk ?v)
                      )
                      (on ?x)
                    )
                    (agent_holds ?x ?v)
                  )
                )
                (< (distance 2 ?x room_center) (distance ))
              )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?k - (either cellphone blue_cube_block))
        (at-end
          (in agent)
        )
      )
    )
    (forall (?e - beachball)
      (and
        (preference preference4
          (exists (?i - game_object)
            (at-end
              (exists (?x - cube_block)
                (> 4 3)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 15 8 )
)
(:scoring
  10
)
)

(define (game game-id-953) (:domain medium-objects-room-v1)
(:setup
  (forall (?p - hexagonal_bin ?z - block)
    (and
      (and
        (game-conserved
          (and
            (in ?z ?z)
            (adjacent_side agent)
            (in_motion ?z)
            (not
              (and
                (on rug ?z)
                (in_motion ?z ?z ?z)
              )
            )
            (in_motion ?z)
            (agent_holds ?z)
            (and
              (between ?z)
              (not
                (not
                  (not
                    (agent_holds ?z ?z)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?a - (either key_chain) ?b - wall)
      (and
        (preference preference1
          (then
            (once (not (and (not (not (agent_holds ?b agent) ) ) (and (agent_holds rug) (< (distance ?b ?b) 7) ) ) ) )
            (once (in_motion ?b) )
            (once (on ?b) )
            (hold (in_motion ?b) )
            (hold (agent_holds ?b) )
          )
        )
      )
    )
    (preference preference2
      (exists (?o ?h ?s ?t - pyramid_block ?g - hexagonal_bin)
        (then
          (once (and (in_motion ?g ?g) (exists (?z - chair ?d - hexagonal_bin) (on bed ?d) ) (and (< 7 (distance_side 10 agent)) (agent_holds ?g ?g) ) ) )
        )
      )
    )
    (preference preference3
      (exists (?h - doggie_bed)
        (then
          (hold (not (above ?h ?h) ) )
          (once (in_motion ?h ?h) )
          (once (agent_holds ?h) )
        )
      )
    )
  )
)
(:terminal
  (> 2 (count-once-per-objects preference1:dodgeball) )
)
(:scoring
  (* (* (count preference2:beachball) 2 (count preference3:alarm_clock:yellow) (+ (count preference3:brown:hexagonal_bin) 6 )
      8
      (external-forall-maximize
        (count-once-per-objects preference1:yellow)
      )
      (count preference3:dodgeball:green)
      (count-once-per-objects preference3:pink_dodgeball)
      5
    )
    (total-score)
  )
)
)

(define (game game-id-954) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (in_motion ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?a - flat_block)
        (then
          (once (in_motion ?a) )
          (once (in_motion ?a floor) )
          (once (not (not (in_motion agent) ) ) )
        )
      )
    )
    (preference preference2
      (exists (?t - hexagonal_bin ?c - (either cube_block cellphone) ?v ?h - hexagonal_bin)
        (then
          (hold (agent_holds ?v bed) )
          (once (on ?v) )
          (once (same_object agent) )
        )
      )
    )
    (preference preference3
      (exists (?y - ball ?n - (either pyramid_block bridge_block))
        (then
          (once (in ?n front) )
          (hold (not (or (and (adjacent_side agent) ) (agent_holds ?n ?n) ) ) )
          (once (agent_holds ?n) )
        )
      )
    )
  )
)
(:terminal
  (>= 15 3 )
)
(:scoring
  (count preference1:pyramid_block)
)
)

(define (game game-id-955) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (not
      (and
        (and
          (agent_holds ?xxx rug)
          (not
            (in_motion agent)
          )
        )
        (object_orientation ?xxx)
      )
    )
  )
)
(:constraints
  (and
    (forall (?c - book)
      (and
        (preference preference1
          (exists (?x - chair ?o - hexagonal_bin)
            (at-end
              (and
                (not
                  (in_motion ?o)
                )
                (and
                  (< 1 (distance ?o ?c))
                  (exists (?h - curved_wooden_ramp ?g - block)
                    (in_motion ?c)
                  )
                  (in agent)
                )
              )
            )
          )
        )
        (preference preference2
          (exists (?l - hexagonal_bin ?z - building)
            (then
              (once (in ?z ?z) )
              (once (in_motion ?z ?z) )
              (hold (in_motion ?z ?z) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 10 10 )
)
(:scoring
  (count preference1)
)
)

(define (game game-id-956) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (not
      (in_motion ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?w - yellow_pyramid_block)
        (then
          (hold-while (and (agent_holds ?w ?w) (and (and (in_motion ?w agent) ) (agent_holds ?w ?w ?w) ) ) (in_motion ?w ?w) )
          (once (and (and (on ?w agent) (in ?w) ) (not (and (and (not (opposite ?w) ) (agent_holds agent ?w) ) (in_motion ?w) ) ) (and (and (on ?w) (agent_holds ?w) (< 1 (distance door ?w)) ) (adjacent ?w) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:yellow_cube_block) (* (count preference1:cube_block) (not 5 ) )
  )
)
(:scoring
  (+ 10 (count preference1:beachball) )
)
)

(define (game game-id-957) (:domain medium-objects-room-v1)
(:setup
  (or
    (forall (?k - cube_block)
      (game-optional
        (in_motion ?k)
      )
    )
  )
)
(:constraints
  (and
    (forall (?j - dodgeball)
      (and
        (preference preference1
          (exists (?c - hexagonal_bin)
            (then
              (once (between ?j) )
              (once (not (< (distance ?c ?j) 1) ) )
              (once (agent_holds ?j) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?w - building ?q - hexagonal_bin ?k - wall)
        (then
          (once (adjacent ?k) )
          (hold (in_motion ?k) )
          (once (< 1 (distance door room_center)) )
        )
      )
    )
    (preference preference3
      (exists (?t - dodgeball)
        (at-end
          (agent_holds ?t ?t)
        )
      )
    )
  )
)
(:terminal
  (>= (* (count-once-per-objects preference2:golfball) (count preference2:dodgeball:dodgeball) )
    (count-once-per-objects preference2:green:dodgeball)
  )
)
(:scoring
  (external-forall-maximize
    3
  )
)
)

(define (game game-id-958) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?m - building)
      (exists (?x - building)
        (exists (?r ?t - flat_block ?b - drawer)
          (exists (?c - shelf)
            (game-conserved
              (or
                (agent_holds ?b ?x)
                (touch ?c ?c)
              )
            )
          )
        )
      )
    )
    (not
      (and
        (game-conserved
          (not
            (in ?xxx ?xxx)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?b - drawer)
        (then
          (hold (on ?b ?b) )
          (once (agent_holds ?b ?b) )
          (once (object_orientation ?b ?b) )
        )
      )
    )
    (preference preference2
      (then
        (once (not (in south_wall) ) )
        (once (not (in ?xxx ?xxx) ) )
        (once (and (in_motion ?xxx ?xxx) (and (in_motion rug ?xxx) (and (in_motion ?xxx ?xxx) (agent_holds ?xxx ?xxx) ) (in_motion pink_dodgeball ?xxx) ) (and (not (in_motion ?xxx) ) (on ?xxx) ) (agent_holds desk) (and (in ?xxx) (not (not (not (and (and (in_motion ?xxx) (and (and (in ?xxx ?xxx) (agent_holds ?xxx) (or (< (distance desk ?xxx) (distance ?xxx ?xxx)) (not (and (agent_holds ?xxx ?xxx) (in_motion floor ?xxx) (and (agent_holds ?xxx) (in_motion ?xxx ?xxx) (game_over ?xxx) (and (not (and (not (and (toggled_on ?xxx ?xxx) (not (in_motion ?xxx) ) (agent_holds front ?xxx) (not (agent_holds brown) ) (exists (?e - shelf) (on upright ?e) ) (not (faces agent ?xxx) ) ) ) (agent_holds ?xxx ?xxx) ) ) ) (> (distance door ?xxx) (distance ?xxx ?xxx)) (in_motion ?xxx ?xxx agent) (not (and (adjacent ?xxx ?xxx) (not (and (agent_holds ?xxx ?xxx) (agent_holds bed ?xxx) (<= (distance ?xxx 2) 1) ) ) ) ) (in ?xxx) (agent_holds ?xxx) (in ?xxx) ) ) ) ) ) (<= (distance agent 10) 2) ) ) (in_motion ?xxx ?xxx) ) ) ) ) ) (and (touch ?xxx) (in_motion ?xxx ?xxx) ) ) )
      )
    )
  )
)
(:terminal
  (>= 5 6 )
)
(:scoring
  3
)
)

(define (game game-id-959) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (= 6 9)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?z - building ?l - doggie_bed)
        (at-end
          (and
            (not
              (and
                (not
                  (and
                    (not
                      (touch ?l)
                    )
                    (not
                      (and
                        (not
                          (in ?l)
                        )
                        (and
                          (agent_holds )
                          (not
                            (and
                              (agent_holds ?l)
                              (in ?l green_golfball)
                            )
                          )
                          (in_motion ?l ?l)
                        )
                      )
                    )
                  )
                )
                (on ?l ?l)
              )
            )
            (not
              (and
                (and
                  (agent_holds ?l)
                  (in_motion ?l ?l)
                  (agent_holds west_wall bed)
                )
                (forall (?f - dodgeball)
                  (not
                    (< 2 4)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (not
      (or
        (>= 7 (* (count preference1:pink) (- 1 )
            (total-score)
            (count-total preference1:red:dodgeball)
            3
            (count-once-per-objects preference1:golfball)
          )
        )
        (= (+ (count preference1:purple) (+ 5 (- (count preference1:cube_block) )
            )
          )
          50
        )
      )
    )
    (or
      (or
        (>= 5 2 )
        (= 6 5 )
      )
    )
  )
)
(:scoring
  (* (+ (count-total preference1:blue_dodgeball) (* (* (* 1 (count-overlapping preference1:dodgeball) (count preference1:blue_dodgeball) )
          (+ (count-increasing-measure preference1:beachball) (count-once-per-external-objects preference1:basketball:beachball:golfball) 10 )
        )
        (count-unique-positions preference1:dodgeball)
      )
      2
    )
    (count-once preference1:doggie_bed)
  )
)
)

(define (game game-id-960) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (and
      (not
        (in_motion ?xxx)
      )
      (not
        (not
          (agent_holds top_shelf ?xxx front)
        )
      )
      (on ?xxx ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?s - wall ?l - hexagonal_bin ?s - block)
        (then
          (once (agent_holds ?s) )
          (once (not (not (in_motion ?s) ) ) )
          (hold (and (not (exists (?d - ball) (and (and (and (agent_holds ?d desk) (= 9 (distance ?s ?d)) ) (agent_holds ?d) ) (in ?d) (and (not (exists (?v - yellow_cube_block) (in_motion ?v) ) ) (agent_holds ?s) ) (> 1 1) ) ) ) (<= 1 6) ) )
        )
      )
    )
    (forall (?w - hexagonal_bin ?c - (either blue_cube_block golfball dodgeball))
      (and
        (preference preference2
          (then
            (hold-while (in_motion ?c) (not (and (not (touch ?c) ) (agent_holds ?c ?c) (agent_holds bed) (and (touch ?c ?c) (in_motion ?c desk) ) ) ) )
            (hold-while (on ?c ?c) (and (and (> (distance ?c 4) (distance 6 bed)) (or (in_motion ?c) (in_motion ?c) ) ) (exists (?i - dodgeball) (and (on ?c rug) (not (in_motion door) ) ) ) ) (in_motion ?c desk) (in ?c) )
            (once (adjacent ?c) )
          )
        )
        (preference preference3
          (exists (?o - dodgeball)
            (then
              (once (in_motion ?o) )
              (once (in_motion agent) )
              (once (and (not (on ?c ?c) ) (not (not (in ?o ?c) ) ) ) )
            )
          )
        )
      )
    )
    (preference preference4
      (exists (?k ?t - hexagonal_bin)
        (then
          (hold (on ?t block) )
          (once (and (agent_holds ?t ?t) (< (distance_side 8 ?t) (distance ?k ?k room_center)) (touch ?t) ) )
          (once (on ?t ?t) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count preference3:alarm_clock) (count preference1:orange) )
  )
)
(:scoring
  3
)
)

(define (game game-id-961) (:domain many-objects-room-v1)
(:setup
  (exists (?s ?a - (either bridge_block flat_block))
    (game-conserved
      (not
        (in_motion ?a)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?o - chair)
        (at-end
          (agent_holds ?o)
        )
      )
    )
    (preference preference2
      (exists (?r - building)
        (then
          (once (< 6 1) )
          (once (in_motion rug ?r ?r) )
          (hold (agent_holds ?r ?r) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (- (* (+ (- (count-once-per-objects preference1) )
            1
            (count-once-per-objects preference2:golfball)
            5
            (count preference2:red)
            10
          )
          (count preference1:basketball)
        )
      )
      (count-once-per-objects preference2:pink:dodgeball)
    )
    (count preference1:hexagonal_bin)
  )
)
(:scoring
  (* (>= (count preference1:dodgeball) 60 )
    (* (count preference2:orange) 5 )
  )
)
)

(define (game game-id-962) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (agent_holds bed ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (then
        (once (and (on rug ?xxx) (agent_holds ?xxx ?xxx ?xxx ?xxx) ) )
        (once (not (not (agent_holds ?xxx) ) ) )
        (once (in_motion ?xxx) )
      )
    )
    (preference preference2
      (exists (?f - hexagonal_bin ?i - (either pyramid_block))
        (then
          (hold-while (not (on ?i ?i) ) (touch top_drawer floor) )
          (once (adjacent ?i) )
          (hold (touch bed) )
        )
      )
    )
    (forall (?g - ball ?d - hexagonal_bin ?s - doggie_bed ?g - hexagonal_bin)
      (and
        (preference preference3
          (exists (?h - hexagonal_bin)
            (then
              (hold (adjacent ?h) )
              (once (and (adjacent ?h) (exists (?i - wall) (adjacent ?h) ) (and (and (and (agent_holds ?g) (not (not (not (in_motion ?g) ) ) ) ) (agent_holds ?g) (adjacent ?g ?h ?h) (exists (?m - hexagonal_bin) (not (in_motion ?g) ) ) (adjacent ?h) (in_motion ?h) (agent_holds rug) ) (agent_holds ?h) ) (not (agent_holds ?h agent) ) (not (adjacent ?g) ) (and (> 7 2) (on ?g ?h) ) (on ?g pink) (agent_holds ?h ?h) (agent_holds ?h ?g) (not (on ?h ?h ?h) ) (exists (?f - game_object ?l - ball) (exists (?e - dodgeball ?m - teddy_bear) (and (in ?g ?l) (agent_holds ?l ?g) ) ) ) (and (and (and (same_type bed) (adjacent ?g agent) ) (in_motion agent) ) ) ) )
              (once (exists (?v - (either triangle_block basketball) ?c - cube_block) (and (in_motion desk) (in ?g) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 8 (count-once-per-external-objects preference3:hexagonal_bin) )
)
(:scoring
  (* 2 (count preference3:doggie_bed) (count preference1:orange:beachball) )
)
)

(define (game game-id-963) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (and
        (and
          (forall (?j - hexagonal_bin)
            (game-conserved
              (and
                (not
                  (and
                    (and
                      (faces ?j)
                      (and
                        (and
                          (on ?j)
                          (not
                            (in_motion ?j ?j)
                          )
                        )
                        (same_object agent ?j ?j)
                      )
                      (in ?j)
                    )
                    (on ?j ?j)
                  )
                )
              )
            )
          )
        )
        (exists (?h - beachball ?q - hexagonal_bin)
          (exists (?i - hexagonal_bin ?d - (either cube_block golfball blue_cube_block))
            (game-conserved
              (not
                (not
                  (not
                    (agent_holds rug)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (then
        (once (and (and (not (and (in ?xxx pink_dodgeball ?xxx) (adjacent ?xxx ?xxx) ) ) (agent_holds ?xxx ?xxx) ) (and (and (< (distance ?xxx) (distance agent room_center)) (agent_holds ?xxx ?xxx) ) (agent_holds ?xxx ?xxx) ) (not (agent_holds ?xxx ?xxx) ) ) )
        (once (and (in_motion front) (not (in ?xxx ?xxx) ) ) )
        (hold (touch ?xxx) )
      )
    )
    (preference preference2
      (exists (?g - hexagonal_bin)
        (then
          (once (not (not (agent_holds ?g) ) ) )
          (once (on ?g) )
          (hold (< (distance ?g) (distance 4 desk)) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference2:pink:basketball:yellow) 2 )
)
(:scoring
  (count-measure preference2:doggie_bed:orange)
)
)

(define (game game-id-964) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (not
      (and
        (and
          (game_start ?xxx)
          (and
            (adjacent ?xxx green)
            (in_motion ?xxx)
          )
          (and
            (< (distance 2 front) 2)
            (equal_z_position agent ?xxx)
            (in door)
          )
        )
        (and
          (in_motion ?xxx)
          (and
            (in_motion ?xxx)
          )
        )
        (and
          (in bed)
          (in ?xxx bed)
        )
        (not
          (< 1 6)
        )
        (not
          (in blue ?xxx)
        )
        (adjacent ?xxx)
        (and
          (and
            (and
              (and
                (in_motion rug)
              )
              (touch ?xxx ?xxx)
            )
            (not
              (not
                (in ?xxx ?xxx)
              )
            )
          )
          (< (distance 4 bed) 1)
          (in_motion ?xxx ?xxx)
          (not
            (in ?xxx ?xxx)
          )
        )
        (not
          (in_motion ?xxx ?xxx)
        )
        (not
          (or
            (not
              (> (distance ?xxx desk) (distance 2 2))
            )
          )
        )
        (in_motion ?xxx)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?x - golfball ?m - dodgeball ?x - chair)
        (then
          (hold-while (agent_holds ?x) (agent_holds ?x) (and (equal_z_position ?x) (> (building_size 0 desk) (distance ?x 6)) ) (in_motion agent ?x) )
          (once (in rug pink_dodgeball) )
          (hold (in ?x) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference1:blue) (external-forall-minimize 1 ) )
)
(:scoring
  3
)
)

(define (game game-id-965) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-optional
      (not
        (not
          (not
            (on ?xxx)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?w - hexagonal_bin)
      (and
        (preference preference1
          (exists (?f - cube_block ?r - hexagonal_bin ?o - hexagonal_bin ?d - hexagonal_bin)
            (then
              (hold (in_motion ?w ?d) )
              (once (agent_holds agent agent) )
              (once (< 6 (distance )) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?l - (either dodgeball) ?p - sliding_door)
        (at-end
          (and
            (agent_holds ?p)
            (agent_holds ?p)
          )
        )
      )
    )
    (preference preference3
      (exists (?g - sliding_door ?u - cube_block)
        (at-end
          (and
            (adjacent ?u ?u)
            (or
              (agent_holds front)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference3:pink:pink_dodgeball) 7 )
)
(:scoring
  1
)
)

(define (game game-id-966) (:domain many-objects-room-v1)
(:setup
  (and
    (game-optional
      (in_motion desk)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?f - ball ?h ?y ?u - (either cd) ?l - hexagonal_bin)
        (then
          (once (in_motion ?l agent) )
          (once (agent_holds ?l ?l) )
          (hold (in ?l) )
        )
      )
    )
  )
)
(:terminal
  (>= 40 (= (* (count preference1:yellow) (* (external-forall-maximize (count preference1:block) ) (* (count-once-per-objects preference1:beachball) (- (count-once-per-external-objects preference1) )
          )
        )
      )
      (count-increasing-measure preference1:orange)
    )
  )
)
(:scoring
  (count preference1:triangle_block:dodgeball:blue_cube_block)
)
)

(define (game game-id-967) (:domain many-objects-room-v1)
(:setup
  (exists (?r - dodgeball ?h - red_dodgeball ?z - wall ?x - cube_block)
    (and
      (game-conserved
        (not
          (in_motion ?x)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (at-end
        (not
          (agent_holds ?xxx agent)
        )
      )
    )
    (preference preference2
      (exists (?o - building ?u - game_object)
        (at-end
          (exists (?p - hexagonal_bin)
            (on ?u ?p)
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (>= (count-once-per-objects preference2:beachball) (= (count preference2:dodgeball:block) (+ 1 (+ 10 (count preference1:red:yellow) )
          )
        )
      )
      (or
        (>= 3 5 )
        (>= (and 3 ) (* 1 10 )
        )
      )
      (>= 9 (external-forall-maximize (count preference2:basketball) ) )
    )
  )
)
(:scoring
  (count preference2:beachball:hexagonal_bin)
)
)

(define (game game-id-968) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?r - hexagonal_bin ?f - ball)
      (forall (?v - dodgeball)
        (forall (?k - ball)
          (forall (?a - pillow)
            (game-conserved
              (adjacent bed)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?e - yellow_pyramid_block)
        (then
          (once (and (> 1 (distance ?e ?e)) (and (in_motion ?e) (in ?e door) ) ) )
          (once (<= (distance ?e ?e room_center) (distance agent desk)) )
          (once (agent_holds ?e) )
        )
      )
    )
  )
)
(:terminal
  (or
    (and
      (or
        (>= (count preference1:golfball) 2 )
        (or
          (>= (+ (count-once-per-objects preference1:beachball:green) (total-score) )
            (* (count-unique-positions preference1:yellow) (count preference1:dodgeball) (* (- (total-time) )
                12
              )
              (+ 10 (count preference1:golfball) )
            )
          )
        )
      )
    )
    (>= (* 2 (count-overlapping preference1:beachball) (count-same-positions preference1:yellow_cube_block) (count preference1:beachball) (count preference1:wall) (count preference1:dodgeball) )
      (count-once-per-objects preference1:golfball)
    )
    (>= (count preference1:yellow) (* (* 1 (* (* (count preference1:dodgeball) (+ (- 4 )
              )
            )
            (count-once-per-objects preference1:pink_dodgeball)
            (count-once preference1:block:tan:beachball)
            (- 5 )
          )
          0.5
          (>= (- (count-once-per-objects preference1:beachball:basketball) )
            (count-overlapping preference1:pink_dodgeball)
          )
          16
        )
        (external-forall-maximize
          7
        )
        5
        8
        (* (>= (<= (external-forall-minimize 1 ) (- 6 )
            )
            5
          )
          (count preference1:red)
        )
        (count-once-per-objects preference1:basketball)
        2
        (count-once preference1)
        (- (* (count preference1:hexagonal_bin:dodgeball) (* (count preference1:basketball) 3 (+ 1 (* (count-overlapping preference1:bed) (count preference1:doggie_bed:yellow) )
              )
            )
          )
        )
      )
    )
  )
)
(:scoring
  (count-once preference1:dodgeball)
)
)

(define (game game-id-969) (:domain few-objects-room-v1)
(:setup
  (and
    (game-optional
      (and
        (not
          (and
            (in_motion ?xxx ?xxx)
            (agent_holds ?xxx)
          )
        )
        (agent_holds sideways)
      )
    )
    (exists (?p - doggie_bed ?z - block)
      (game-optional
        (in agent)
      )
    )
    (exists (?f - golfball)
      (and
        (exists (?h - (either pillow wall beachball pyramid_block) ?z - block)
          (game-optional
            (agent_holds ?z ?f ?z)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?d - (either laptop desktop laptop) ?f - doggie_bed)
        (at-end
          (and
            (rug_color_under ?f ?f)
            (and
              (agent_holds ?f)
              (and
                (not
                  (not
                    (and
                      (in_motion ?f ?f)
                      (on )
                      (and
                        (and
                          (adjacent ?f)
                          (on bed)
                        )
                        (same_color ?f)
                      )
                    )
                  )
                )
                (on ?f ?f desk)
                (not
                  (agent_holds bed ?f)
                )
              )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?h - dodgeball ?d - block)
        (then
          (hold (in bed ?d) )
          (hold (in ?d ?d) )
          (hold-while (in_motion ?d ?d) (exists (?p - hexagonal_bin) (and (and (touch ?d) (and (agent_holds ?d floor) (not (touch ?p) ) ) (on ?d) (in_motion ?p) (and (not (or (or (agent_holds ?p) (agent_holds ?d ?d) (on ?d ?d) ) ) ) (not (in_motion ?d front_left_corner) ) ) (on ?p agent) (in_motion ?p) (exists (?s - hexagonal_bin ?h - (either laptop cylindrical_block golfball) ?o - block) (adjacent ?d ?o) ) (adjacent ?d) (and (is_setup_object ?d) (and (faces ?p) (and (and (or (agent_holds ?p upright) (touch ?d ?p) ) (not (same_color ) ) ) (< 2 0.5) ) ) ) ) (in ?p ?p) ) ) (agent_holds ?d) )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (count-once-per-objects preference2:basketball) )
)
(:scoring
  (not
    (total-score)
  )
)
)

(define (game game-id-970) (:domain few-objects-room-v1)
(:setup
  (forall (?j - ball)
    (and
      (game-conserved
        (is_setup_object ?j)
      )
      (exists (?g - block ?y - (either tall_cylindrical_block cellphone tall_cylindrical_block lamp basketball) ?a - hexagonal_bin ?v - hexagonal_bin)
        (game-optional
          (agent_holds ?v ?j)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?n - teddy_bear)
        (then
          (once (not (not (on ?n) ) ) )
          (hold-for 9 (on rug) )
          (once (agent_holds ?n) )
        )
      )
    )
    (preference preference2
      (then
        (once (not (in_motion ?xxx ?xxx) ) )
      )
    )
    (forall (?k ?p ?s ?f ?o ?x ?h ?e ?v ?u - dodgeball)
      (and
        (preference preference3
          (exists (?z - cube_block ?w - dodgeball)
            (then
              (once (in ?w) )
            )
          )
        )
      )
    )
    (preference preference4
      (exists (?s ?h - dodgeball)
        (at-end
          (agent_holds ?h ?h)
        )
      )
    )
    (preference preference5
      (exists (?h - hexagonal_bin ?n - yellow_pyramid_block)
        (then
          (hold (agent_holds ?n ?n) )
          (once (and (not (agent_holds ?n) ) (< (distance ?n door) (distance door desk)) ) )
          (hold (in_motion ?n ?n) )
          (hold-for 2 (adjacent top_shelf ?n) )
        )
      )
    )
  )
)
(:terminal
  (> (count preference5:side_table:side_table:brown) (count preference4:beachball) )
)
(:scoring
  (external-forall-maximize
    (or
      (count-once-per-objects preference2:beachball)
    )
  )
)
)

(define (game game-id-971) (:domain medium-objects-room-v1)
(:setup
  (exists (?d - (either credit_card))
    (exists (?h - beachball)
      (game-conserved
        (and
          (in_motion agent ?h)
          (< 1 4)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (then
        (once (and (on ?xxx) (adjacent ?xxx ?xxx) ) )
        (hold (not (in ?xxx ?xxx) ) )
        (once (in brown) )
        (once (in ?xxx) )
      )
    )
    (preference preference2
      (exists (?o - game_object ?v - building)
        (then
          (hold (in_motion ?v ?v) )
          (once (on ?v ?v) )
          (once (in_motion ?v) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (count preference1:blue_pyramid_block) )
)
(:scoring
  (external-forall-maximize
    1
  )
)
)

(define (game game-id-972) (:domain few-objects-room-v1)
(:setup
  (forall (?j - ball ?n - curved_wooden_ramp)
    (exists (?o - hexagonal_bin)
      (and
        (exists (?k ?w - pyramid_block ?q - hexagonal_bin)
          (and
            (exists (?x - hexagonal_bin)
              (game-optional
                (in_motion top_shelf)
              )
            )
            (game-optional
              (in ?n)
            )
          )
        )
        (game-optional
          (agent_holds ?o ?n)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?y ?h - yellow_cube_block)
        (at-end
          (exists (?v ?c - triangular_ramp)
            (adjacent ?h)
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (<= 50 (count preference1:yellow) )
    (>= 2 (count preference1:yellow:hexagonal_bin) )
    (or
      (> 7 (count-measure preference1:dodgeball) )
      (>= 5 (count-once-per-objects preference1:dodgeball) )
      (<= 15 (* 4 (= 2 (external-forall-maximize 2 ) (- 2 10 ) )
        )
      )
    )
  )
)
(:scoring
  0
)
)

(define (game game-id-973) (:domain many-objects-room-v1)
(:setup
  (forall (?q - curved_wooden_ramp ?b - curved_wooden_ramp)
    (forall (?l - block)
      (and
        (exists (?h - chair)
          (and
            (exists (?a - building)
              (or
                (game-optional
                  (on desk ?b)
                )
                (and
                  (exists (?m - block ?x - wall)
                    (game-conserved
                      (and
                        (equal_z_position upright)
                        (object_orientation ?l)
                        (in_motion ?l ?b)
                      )
                    )
                  )
                )
                (forall (?j - curved_wooden_ramp)
                  (game-conserved
                    (agent_holds ?j)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?q - game_object)
        (then
          (once (on rug) )
          (once (agent_holds desk) )
          (once (in_motion ?q) )
        )
      )
    )
    (forall (?s - game_object ?b - hexagonal_bin)
      (and
        (preference preference2
          (exists (?a - ball)
            (then
              (once (and (agent_holds ?a ?a) (and (not (and (= 1 (distance ) 1 3) (same_color ?a ?b ?a) (not (< 0.5 (distance 6 ?b)) ) ) ) (adjacent_side main_light_switch) ) ) )
              (once (not (or (in_motion ?a ?b) (not (in ?b ?a) ) (and (not (not (and (agent_holds ?a) (agent_holds ?a) ) ) ) (in_motion ?a ?a) ) ) ) )
              (once (not (and (same_type agent) (in_motion ?a) ) ) )
            )
          )
        )
        (preference preference3
          (exists (?r - color ?k - block)
            (then
              (once (and (object_orientation agent) (agent_holds desk ?k) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference2:doggie_bed) (count preference3:dodgeball) )
)
(:scoring
  (+ (count preference1:dodgeball:dodgeball) (count-once preference1:basketball) )
)
)

(define (game game-id-974) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?q - (either golfball dodgeball))
      (and
        (game-conserved
          (in agent ?q)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?q - ball)
        (then
          (once (in ?q) )
          (once (in_motion ?q) )
          (hold-while (touch ?q) (in ?q) )
        )
      )
    )
    (preference preference2
      (exists (?t - hexagonal_bin ?e - building)
        (then
          (hold (not (in_motion desk) ) )
          (hold (agent_holds ?e ?e) )
          (hold-to-end (on ?e ?e) )
        )
      )
    )
    (forall (?k - block)
      (and
        (preference preference3
          (exists (?n - hexagonal_bin)
            (at-end
              (adjacent ?k)
            )
          )
        )
        (preference preference4
          (then
            (once (in_motion ?k brown) )
            (once (and (agent_holds ?k) (and (agent_holds green ?k) (agent_holds ?k) ) ) )
            (hold (in_motion bed) )
          )
        )
      )
    )
    (preference preference5
      (exists (?f - ball ?r - (either cylindrical_block key_chain bridge_block))
        (then
          (hold (agent_holds ?r) )
        )
      )
    )
  )
)
(:terminal
  (not
    (> 5 (count preference4:beachball) )
  )
)
(:scoring
  (* (count preference3:dodgeball) (count-once-per-objects preference1:basketball) )
)
)

(define (game game-id-975) (:domain few-objects-room-v1)
(:setup
  (and
    (game-conserved
      (and
        (exists (?t - hexagonal_bin)
          (on ?t back)
        )
        (not
          (not
            (not
              (same_type agent ?xxx)
            )
          )
        )
        (not
          (and
            (agent_holds bed ?xxx)
            (not
              (agent_holds ?xxx ?xxx)
            )
          )
        )
      )
    )
    (or
      (and
        (game-conserved
          (on ?xxx)
        )
        (game-optional
          (on bed)
        )
      )
      (exists (?l - dodgeball)
        (and
          (and
            (game-conserved
              (not
                (in_motion floor ?l)
              )
            )
            (and
              (game-conserved
                (and
                  (in_motion ?l)
                  (exists (?s - chair)
                    (not
                      (and
                        (in_motion ?s ?l)
                        (and
                          (agent_holds ?s ?l)
                          (on ?s)
                        )
                        (forall (?c - game_object)
                          (agent_holds ?c)
                        )
                        (on ?l ?l)
                      )
                    )
                  )
                  (agent_holds ?l)
                )
              )
              (game-conserved
                (in_motion upright)
              )
              (exists (?c - ball ?x - triangular_ramp)
                (exists (?p - cube_block)
                  (exists (?a - dodgeball)
                    (and
                      (game-conserved
                        (touch ?a ?x)
                      )
                    )
                  )
                )
              )
            )
            (exists (?v - (either dodgeball red) ?z - (either side_table chair blue_cube_block))
              (and
                (game-optional
                  (not
                    (not
                      (not
                        (touch ?z ?l)
                      )
                    )
                  )
                )
                (forall (?g - dodgeball)
                  (forall (?i - hexagonal_bin ?v - dodgeball)
                    (forall (?x - teddy_bear)
                      (exists (?i ?h - shelf ?w ?n - block)
                        (exists (?r - cube_block ?q - doggie_bed)
                          (and
                            (exists (?d ?u ?p - hexagonal_bin ?b ?d ?a - block)
                              (exists (?u - hexagonal_bin ?s - hexagonal_bin ?f - hexagonal_bin ?y - (either key_chain pencil))
                                (game-optional
                                  (and
                                    (forall (?u - hexagonal_bin)
                                      (and
                                        (touch ?v)
                                        (agent_holds ?l floor)
                                      )
                                    )
                                    (not
                                      (and
                                        (in agent ?w)
                                        (equal_x_position ?n left)
                                        (agent_holds ?a ?q)
                                      )
                                    )
                                    (and
                                      (in_motion ?x)
                                      (not
                                        (in ?y)
                                      )
                                      (and
                                        (and
                                          (and
                                            (agent_holds ?v)
                                            (in_motion rug ?n)
                                          )
                                          (in_motion agent ?q)
                                        )
                                        (and
                                          (and
                                            (and
                                              (< 2 (distance ?y 0))
                                              (and
                                                (in ?y ?b)
                                                (not
                                                  (in ?v ?w)
                                                )
                                              )
                                            )
                                            (and
                                              (touch ?z)
                                              (> 1 (distance 6))
                                              (and
                                                (in_motion agent)
                                                (adjacent ?b)
                                              )
                                            )
                                          )
                                          (not
                                            (in_motion agent ?x)
                                          )
                                        )
                                      )
                                    )
                                    (< (distance ?q room_center) (distance 9 ?d))
                                  )
                                )
                              )
                            )
                            (forall (?h - hexagonal_bin)
                              (game-optional
                                (not
                                  (agent_holds ?h agent)
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
                (and
                  (game-optional
                    (on ?l)
                  )
                )
              )
            )
          )
        )
      )
    )
    (game-conserved
      (not
        (in ?xxx ?xxx)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?n - doggie_bed)
        (at-end
          (in_motion ?n)
        )
      )
    )
  )
)
(:terminal
  (< 7 (count preference1:pink_dodgeball) )
)
(:scoring
  (count preference1:yellow:green)
)
)

(define (game game-id-976) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (agent_holds ?xxx ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?o - hexagonal_bin)
        (then
          (hold (is_setup_object rug) )
          (once (is_setup_object front) )
          (once (and (and (and (not (not (agent_holds ?o ?o) ) ) (in_motion ?o ?o) ) (between desk ?o) ) (agent_holds ?o ?o) (< 8 9) (in ?o) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 3 10 )
)
(:scoring
  5
)
)

(define (game game-id-977) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (and
      (in_motion ?xxx)
      (and
        (not
          (and
            (and
              (not
                (not
                  (in_motion agent)
                )
              )
              (agent_holds agent)
              (in pillow ?xxx)
            )
            (agent_holds agent)
          )
        )
        (and
          (not
            (agent_holds rug ?xxx ?xxx)
          )
          (agent_holds ?xxx)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?e - hexagonal_bin ?g ?w - dodgeball)
      (and
        (preference preference1
          (exists (?i - (either book cube_block))
            (then
              (once (open ?i) )
              (once (not (< (distance green_golfball ?w) (distance ?g room_center)) ) )
              (once-measure (not (= 4 (distance ?g ?g)) ) (distance side_table ?i) )
            )
          )
        )
        (preference preference2
          (exists (?n - teddy_bear)
            (then
              (once (touch floor ?g) )
              (once (in_motion ?w) )
              (once (in_motion yellow) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?u ?l ?y ?r - dodgeball)
        (then
          (hold (and (and (and (agent_holds drawer ?l) (agent_holds ?r) ) (in_motion tan ?y) (and (and (in_motion ?l) (on floor) ) (and (in_motion ?l ?r) (not (and (agent_holds ?l) (on ?r) ) ) ) ) ) (and (not (not (or (rug_color_under bridge_block ?u) (and (and (agent_holds ?r) (agent_holds ?r) (adjacent ?y) (adjacent ?l) ) (agent_holds agent) ) ) ) ) (adjacent desk ?u) ) ) )
          (once (touch ?y) )
          (hold (and (and (< (distance bed ?r) (distance ?l ?y)) (in ?l) (same_color ?l ?r) (and (in_motion ?y ?l) (and (not (agent_holds ?u) ) (in agent) ) ) ) (not (in_motion ) ) ) )
          (once (and (not (< (distance ?u room_center) (distance ?y ?y)) ) (in_motion door) (in_motion north_wall ?y) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (< (* (count preference1:beachball) 9 )
      3
    )
    (count-once-per-objects preference2:dodgeball:basketball)
  )
)
(:scoring
  5
)
)

(define (game game-id-978) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-optional
      (and
        (not
          (< (distance room_center ?xxx) (distance ?xxx 0))
        )
        (not
          (broken rug ball)
        )
      )
    )
    (forall (?t - hexagonal_bin)
      (and
        (game-optional
          (is_setup_object ?t ?t)
        )
      )
    )
    (and
      (exists (?s - rug)
        (forall (?c - (either cylindrical_block dodgeball))
          (game-conserved
            (and
              (on ?c)
              (not
                (and
                  (agent_holds rug)
                  (in_motion ?s ?s)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?g - block ?u - bridge_block ?h - (either hexagonal_bin pyramid_block))
      (and
        (preference preference1
          (exists (?v ?l - dodgeball)
            (then
              (hold-while (and (and (in_motion ?v bed) (and (in_motion ?v) (opposite agent ?h) ) ) (touch ?l ?l) (exists (?b - block) (and (agent_holds ?h agent) (on ?v ?v) (same_type ?b) (agent_holds ?h ?v) ) ) ) (agent_holds agent rug) (not (adjacent ?h ?l) ) )
              (once (and (object_orientation ?l) (touch ?h) (agent_holds ?l ?v ?l) (on pillow ?h) ) )
              (once (not (touch ?h ?h) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:dodgeball) (count-once preference1:basketball) )
)
(:scoring
  (count preference1:book:hexagonal_bin)
)
)

(define (game game-id-979) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (and
      (in agent)
      (and
        (and
          (and
            (agent_holds brown ?xxx)
            (in_motion agent floor)
          )
          (not
            (not
              (agent_holds ?xxx ?xxx)
            )
          )
        )
        (adjacent ?xxx)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (at-end
        (in_motion ?xxx ?xxx)
      )
    )
    (forall (?u - (either golfball block))
      (and
        (preference preference2
          (exists (?x - triangular_ramp)
            (at-end
              (in ?u)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:green:blue_cube_block) (and (+ (+ 5 (+ (count preference1:basketball) (count-once-per-objects preference2:beachball) )
        )
        (* (* 1 (* (count preference2:pink_dodgeball) (> (+ (count preference1:dodgeball) (+ (+ (count-once-per-objects preference2:pink_dodgeball) (count preference1:red) )
                    (count preference1:dodgeball)
                    (count preference2:yellow:dodgeball)
                    (count preference1)
                    (count-once-per-objects preference2:pyramid_block)
                    (* (count preference1:golfball:beachball) (/ (total-score) 9 ) )
                  )
                )
                20
              )
            )
          )
          (count-once-per-objects preference1:dodgeball)
        )
      )
      6
      (+ (+ (* (count preference1:basketball) (- 10 )
          )
          4
          (total-time)
          (* (* (* (>= 1 (count preference2:pyramid_block) )
                (count preference2:dodgeball)
              )
              (< 1 (count preference2:side_table) )
              2
            )
            (count-overlapping preference2:dodgeball)
          )
          (+ (* (- (* (- 2 )
                  (count preference1:hexagonal_bin:dodgeball)
                )
              )
              0
              (+ 2 (+ (count preference1:golfball) (count preference1:book:dodgeball) )
              )
              (+ (count preference2:dodgeball) 4 )
            )
            2
          )
          (not
            (* 3 (+ (count-once-per-objects preference2:red_pyramid_block:orange) (= (count preference1:dodgeball) (+ 4 (count-once-per-external-objects preference1:yellow) 5 3 (count-once-per-objects preference2:red:red) )
                )
              )
            )
          )
          (* 15 (count-once-per-objects preference1:golfball:cube_block) )
          (* (* (* (count preference2:hexagonal_bin) (* 15 (+ (count-once-per-objects preference2:pyramid_block) (count-once-per-objects preference1:yellow) )
                )
              )
              (count-once-per-external-objects preference1:red)
              (+ 2 4 20 )
            )
            3
          )
          (count preference1:red)
        )
        (count preference2:pink:golfball)
      )
    )
  )
)
(:scoring
  (count preference2:basketball)
)
)

(define (game game-id-980) (:domain medium-objects-room-v1)
(:setup
  (exists (?s - teddy_bear)
    (exists (?k - flat_block)
      (game-conserved
        (and
          (forall (?b - (either dodgeball pink))
            (> 9 (x_position 2 7))
          )
          (and
            (agent_holds ?s ?s)
            (and
              (and
                (same_object ?s)
                (in_motion rug ?k)
                (not
                  (not
                    (not
                      (in_motion ?k)
                    )
                  )
                )
              )
              (in_motion ?s)
            )
            (in_motion agent)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?z - game_object ?z - dodgeball)
      (and
        (preference preference1
          (then
            (once (touch ?z) )
            (once (not (and (not (and (agent_holds ?z) (and (agent_holds desk) (not (not (on ?z) ) ) ) ) ) (agent_holds agent) ) ) )
            (hold (and (not (and (and (not (in_motion ?z rug) ) (touch pink ?z) ) (not (same_color upright) ) ) ) (adjacent ?z ?z) ) )
          )
        )
      )
    )
    (preference preference2
      (exists (?c - dodgeball ?x - hexagonal_bin ?e - ball ?n - shelf)
        (then
          (once (and (and (and (agent_holds west_wall ?n) (in_motion ?n ?n) (in_motion blue agent) ) (in_motion ?n top_drawer) ) (and (touch ?n ?n) (< (distance ?n ?n) 0) ) ) )
          (hold (exists (?r - dodgeball) (in_motion ?r) ) )
          (once (adjacent ?n) )
        )
      )
    )
    (preference preference3
      (exists (?o - dodgeball)
        (then
          (once (in_motion ?o) )
          (once (agent_holds ?o) )
          (once (not (and (adjacent ?o) (not (not (not (on blue) ) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (> (count-once-per-objects preference1:pink_dodgeball) (count preference2:red) )
)
(:scoring
  3
)
)

(define (game game-id-981) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-conserved
      (in ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?y - (either cube_block dodgeball) ?j - hexagonal_bin)
        (then
          (once (rug_color_under ?j) )
          (once (not (in_motion ?j) ) )
          (hold (not (not (adjacent ?j) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:triangle_block:yellow) (* (* (count-once-per-objects preference1:blue_dodgeball) (+ (count preference1:golfball) (count preference1:beachball) )
      )
      (+ (* 10 (+ (count-once-per-objects preference1:beachball) )
        )
        (count preference1:purple:white)
      )
    )
  )
)
(:scoring
  (count preference1:yellow:yellow:golfball)
)
)

(define (game game-id-982) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-conserved
      (= (distance agent 4) (distance door desk))
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?q - ball ?j - cube_block)
        (then
          (once (on ?j) )
          (once (in ?j ?j bed) )
          (once (exists (?c - hexagonal_bin ?o - block ?s ?k - wall) (in_motion ?j ?j) ) )
        )
      )
    )
    (preference preference2
      (exists (?d - dodgeball ?i - hexagonal_bin)
        (then
          (hold-to-end (in ?i) )
          (hold (agent_holds ?i ?i) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count preference2:basketball) (count-measure preference1:pink) )
    (>= (count preference2:tan) (count preference1) )
    (= (* (* 10 5 )
        (* 4 5 (count-once-per-objects preference2:beachball:beachball) )
        (* 1 10 )
        (* 3 (= 1 (count preference1:pink) )
        )
        (count-overlapping preference2:dodgeball:pink)
        (total-score)
        (* 3 (count preference2:doggie_bed) )
        (+ 40 (+ (count preference1:basketball:dodgeball) 4 (count-overlapping preference2:basketball) 3 )
          (* (count preference2:golfball) )
        )
        (count preference2:beachball)
      )
      (count preference2)
    )
    (>= (* (count preference1:blue_dodgeball) 3 )
      (count-once-per-objects preference2:dodgeball)
    )
  )
)
(:scoring
  (count-once preference1:blue_pyramid_block:dodgeball)
)
)

(define (game game-id-983) (:domain few-objects-room-v1)
(:setup
  (exists (?a - book ?w - dodgeball)
    (game-conserved
      (not
        (agent_holds ?w)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?q - pillow ?c - dodgeball ?n - curved_wooden_ramp)
        (then
          (once (in ?n ?n) )
        )
      )
    )
    (forall (?u - hexagonal_bin)
      (and
        (preference preference2
          (exists (?t - hexagonal_bin ?d - (either doggie_bed golfball pyramid_block desktop) ?k - (either wall mug desktop) ?k - game_object)
            (then
              (hold (and (in_motion ?k ?k) (not (adjacent ?u ?u) ) ) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?p - ball)
        (then
          (once (= (distance door ?p) 0.5) )
          (once (is_setup_object floor) )
          (once (in_motion ?p) )
        )
      )
    )
    (forall (?w - (either pyramid_block cellphone dodgeball))
      (and
        (preference preference4
          (exists (?g - dodgeball ?i - (either blue_cube_block cube_block))
            (then
              (once (and (agent_holds rug ?w) (and (in_motion ?i ?w) (not (not (in_motion ?i) ) ) ) ) )
              (once (not (and (and (and (and (not (not (on ?w) ) ) (not (in ?w) ) ) (<= (distance room_center ?w) (distance green_golfball ?i ?i)) ) (in_motion ?w) ) (in_motion agent ?w) ) ) )
              (hold (and (agent_holds ?i ?w) (agent_holds ?i) (not (agent_holds ?i) ) ) )
              (hold (and (and (in_motion ?i) (not (in_motion ?w ?i) ) ) (faces ?w) (not (not (not (and (not (not (> 4 5) ) ) (in_motion ?i) (and (not (object_orientation ?w) ) (in ?w) ) ) ) ) ) ) )
            )
          )
        )
      )
    )
    (forall (?y - building)
      (and
        (preference preference5
          (exists (?v - dodgeball)
            (then
              (once (not (> 7 1) ) )
              (hold (and (not (or (not (in_motion ?y) ) (in ?y) ) ) (in_motion ?y) ) )
              (hold (on ?v ?v) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (total-score) (count preference3:wall) )
)
(:scoring
  (= (* (count-once-per-objects preference5:doggie_bed) (count-same-positions preference3:dodgeball) )
    (count-once preference4:beachball)
    (* (+ 10 4 )
      2
    )
  )
)
)

(define (game game-id-984) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (or
      (and
        (> 0.5 3)
        (in ?xxx)
      )
      (and
        (and
          (in_motion bottom_shelf)
          (not
            (in_motion ?xxx top_shelf ?xxx)
          )
        )
        (equal_z_position ?xxx)
      )
    )
  )
)
(:constraints
  (and
    (forall (?m - hexagonal_bin)
      (and
        (preference preference1
          (exists (?y - ball)
            (then
              (hold (is_setup_object ?y) )
              (once (not (in_motion ?m ?m) ) )
              (once (same_object ?m) )
            )
          )
        )
      )
    )
    (forall (?i - block)
      (and
        (preference preference2
          (exists (?e - hexagonal_bin)
            (then
              (once (not (not (in_motion ?i) ) ) )
              (once (agent_holds ?e) )
              (once (toggled_on desk) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (or 3 1 ) 20 )
    3
  )
)
(:scoring
  3
)
)

(define (game game-id-985) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (game-optional
        (in_motion ?xxx ?xxx)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?e - tan_cube_block)
        (then
          (once (on ?e) )
          (hold-while (in_motion ?e) (on ?e ?e) )
          (hold (exists (?u - golfball) (in_motion ?u ?u) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (count-same-positions preference1:pink_dodgeball:basketball) (count-once preference1:yellow) (count-once preference1:dodgeball) )
    5
  )
)
(:scoring
  (count-same-positions preference1:brown)
)
)

(define (game game-id-986) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?u - wall)
      (exists (?o - (either pillow golfball))
        (and
          (game-conserved
            (and
              (not
                (and
                  (not
                    (agent_holds ?o)
                  )
                  (and
                    (in ?u)
                    (or
                      (not
                        (not
                          (touch ?o)
                        )
                      )
                      (agent_holds ?u)
                    )
                  )
                  (agent_holds ?u)
                )
              )
              (in ?u)
            )
          )
        )
      )
    )
    (and
      (exists (?e - yellow_pyramid_block)
        (exists (?w - dodgeball)
          (game-conserved
            (in_motion ?w)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?q - hexagonal_bin ?x - doggie_bed)
        (then
          (hold (not (in_motion ?x ?x) ) )
          (hold-for 5 (object_orientation ?x ?x) )
          (hold-while (not (and (agent_holds green) (and (not (on ?x) ) (not (not (not (< 10 1) ) ) ) ) (and (not (agent_holds ?x ?x) ) (agent_holds ?x ?x) ) ) ) (and (not (in_motion pink ?x) ) (not (agent_holds ?x) ) ) )
        )
      )
    )
  )
)
(:terminal
  (<= (* (count preference1:pink:beachball) )
    10
  )
)
(:scoring
  4
)
)

(define (game game-id-987) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (and
      (is_setup_object ?xxx)
      (and
        (and
          (and
            (and
              (in_motion ?xxx ?xxx)
              (rug_color_under agent ?xxx)
            )
            (same_color ?xxx)
          )
          (and
            (in ?xxx)
            (equal_z_position ?xxx ?xxx)
          )
        )
        (in_motion ?xxx)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (then
        (once (not (in ?xxx) ) )
      )
    )
    (forall (?u - hexagonal_bin ?b - curved_wooden_ramp ?c - hexagonal_bin)
      (and
        (preference preference2
          (exists (?m - (either dodgeball cylindrical_block))
            (then
              (hold (agent_holds south_wall ?m) )
              (hold (on green_golfball) )
              (once (or (is_setup_object ?m floor) ) )
              (once (agent_holds ?m desk) )
            )
          )
        )
      )
    )
    (preference preference3
      (exists (?y - game_object)
        (at-end
          (on ?y)
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (not
        (>= (and 3 (or (count preference3:beachball) ) ) (count-once-per-objects preference1:doggie_bed) )
      )
      (= 3 30 )
    )
  )
)
(:scoring
  (* 10 4 )
)
)

(define (game game-id-988) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (above ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?s ?r - pyramid_block)
        (then
          (once (and (in_motion ?s) (on ?r ?s) ) )
          (once (and (same_color ?r ?r) (on ?r) ) )
          (hold (adjacent agent) )
        )
      )
    )
    (preference preference2
      (exists (?o - (either wall flat_block))
        (then
          (once (agent_holds ?o) )
          (once (and (and (agent_holds ?o) (agent_holds ?o) ) (agent_holds pink ?o) ) )
          (hold-while (and (and (in ?o agent) (agent_holds ?o ?o) ) (and (agent_holds ?o) (in_motion ?o) ) ) (not (< (distance agent desk) (distance ?o desk)) ) (in_motion ?o) )
          (hold (touch ?o) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (- 15 )
      (external-forall-maximize
        (external-forall-maximize
          0
        )
      )
    )
    (<= (* 5 (count-once-per-objects preference1:beachball) )
      (and
        10
      )
    )
  )
)
(:scoring
  (count preference2:side_table)
)
)

(define (game game-id-989) (:domain few-objects-room-v1)
(:setup
  (forall (?b - building ?u - drawer)
    (and
      (and
        (or
          (game-optional
            (adjacent ?u)
          )
          (game-conserved
            (or
              (toggled_on ?u)
            )
          )
          (exists (?t - (either pyramid_block cellphone))
            (game-optional
              (not
                (not
                  (in_motion ?t ?u)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?k - doggie_bed)
        (at-end
          (in_motion ?k ?k)
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (>= 7 (+ (= (* (+ (count-once-per-objects preference1:beachball) (count-longest preference1:dodgeball) )
              (< 3 (count preference1:golfball) )
            )
            15
          )
          (count-once preference1:yellow:basketball)
        )
      )
      (>= (count-once-per-objects preference1:red) 40 )
    )
  )
)
(:scoring
  (< 2 7 )
)
)

(define (game game-id-990) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (and
        (and
          (forall (?v - dodgeball ?j - cube_block)
            (game-conserved
              (in_motion ?j)
            )
          )
          (exists (?w - triangular_ramp ?k ?p - (either cellphone cellphone book) ?a - hexagonal_bin ?u - hexagonal_bin)
            (exists (?d - pyramid_block)
              (and
                (game-conserved
                  (on ?d ?u)
                )
                (forall (?q - hexagonal_bin)
                  (not
                    (game-conserved
                      (not
                        (not
                          (on bed ?q)
                        )
                      )
                    )
                  )
                )
                (forall (?c - bridge_block ?y - hexagonal_bin ?p - (either triangle_block yellow_cube_block) ?t ?y ?c - color)
                  (and
                    (and
                      (game-conserved
                        (in_motion ?c ?d)
                      )
                    )
                  )
                )
              )
            )
          )
          (game-conserved
            (and
              (not
                (agent_holds ?xxx)
              )
              (in_motion ?xxx)
              (and
                (not
                  (agent_holds ?xxx ?xxx ?xxx)
                )
                (in_motion ?xxx ?xxx)
                (< (distance bed ?xxx) (distance desk ?xxx))
                (in_motion ?xxx ?xxx)
                (touch ?xxx)
                (exists (?n - game_object)
                  (not
                    (in_motion ?n ?n)
                  )
                )
                (in_motion ?xxx)
                (and
                  (= 1)
                  (and
                    (on ?xxx)
                    (not
                      (not
                        (and
                          (and
                            (agent_holds ?xxx)
                            (and
                              (agent_holds desk ?xxx)
                              (not
                                (on ?xxx)
                              )
                              (object_orientation ?xxx)
                            )
                          )
                          (is_setup_object main_light_switch)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
        (and
          (exists (?q - (either desktop blue_cube_block))
            (game-optional
              (agent_holds ?q)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?o - hexagonal_bin)
        (then
          (hold (agent_holds ?o) )
          (once (and (in desk) (and (agent_crouches ?o desk) (object_orientation back) ) ) )
          (once (in ?o desk) )
          (once (and (on ?o) (not (not (< 6 8) ) ) (in_motion ?o ?o) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (or (external-forall-maximize (- (count preference1:dodgeball) )
      )
    )
    10
  )
)
(:scoring
  (count preference1:pink:pink_dodgeball)
)
)

(define (game game-id-991) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (agent_holds ?xxx)
  )
)
(:constraints
  (and
    (forall (?k - dodgeball)
      (and
        (preference preference1
          (exists (?s - building ?p - dodgeball)
            (at-end
              (and
                (not
                  (in_motion ?k ?k)
                )
                (in_motion ?p bed)
              )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?f - dodgeball ?s - hexagonal_bin ?k - hexagonal_bin ?y - (either cellphone bridge_block))
        (then
          (once (and (not (opposite ?y ?y) ) (in ?y ?y) (on ?y) ) )
          (once (game_start ?y ?y) )
          (once (in_motion desktop) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count-once-per-objects preference1:cube_block) (- (external-forall-maximize (count-once-per-objects preference2:dodgeball) ) )
    )
    2
  )
)
(:scoring
  (count-once-per-objects preference2:green)
)
)

(define (game game-id-992) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (game-conserved
        (not
          (in_motion bed ?xxx)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?x - hexagonal_bin)
        (then
          (hold (agent_holds ?x ?x) )
          (hold (touch ?x ?x) )
          (hold (and (and (in_motion ?x ?x) (< (distance desk agent) (distance ?x ?x)) (agent_holds ?x ?x floor) ) (and (in_motion ?x) (on ?x) ) (and (agent_holds ?x) (agent_holds desktop) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:orange:dodgeball) 4 )
)
(:scoring
  (<= 20 (count-once-per-external-objects preference1:wall) )
)
)

(define (game game-id-993) (:domain medium-objects-room-v1)
(:setup
  (exists (?u - (either dodgeball cylindrical_block) ?v - triangular_ramp)
    (forall (?s - block)
      (game-conserved
        (in_motion ?v)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?q - block)
        (then
          (hold (touch top_shelf) )
          (hold (and (and (in_motion ?q ?q) (in_motion door) ) (and (agent_holds rug) (not (not (not (on ?q brown) ) ) ) ) ) )
          (hold (adjacent ?q) )
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (>= (* (count preference1:red:doggie_bed) (count preference1:blue_dodgeball) )
        (count preference1:basketball)
      )
      (>= (count-longest preference1:blue_dodgeball:purple) (count preference1:basketball:pink) )
    )
  )
)
(:scoring
  (* 3 (total-score) )
)
)

(define (game game-id-994) (:domain many-objects-room-v1)
(:setup
  (exists (?p - game_object ?g - dodgeball)
    (forall (?o - shelf)
      (exists (?d - hexagonal_bin)
        (and
          (and
            (forall (?p - hexagonal_bin)
              (game-conserved
                (adjacent green ?o)
              )
            )
            (and
              (not
                (game-conserved
                  (not
                    (on pink_dodgeball ?o)
                  )
                )
              )
            )
            (game-optional
              (in_motion ?g ?o)
            )
          )
          (forall (?v - pyramid_block ?k - color)
            (game-conserved
              (on ?k ?g)
            )
          )
          (game-conserved
            (in_motion ?o)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?k - building ?a - dodgeball)
      (and
        (preference preference1
          (exists (?p - doggie_bed)
            (at-end
              (agent_holds ?a ?p)
            )
          )
        )
        (preference preference2
          (exists (?o - dodgeball)
            (then
              (once (and (not (and (forall (?r - hexagonal_bin) (equal_z_position ?o) ) (and (in_motion agent ?a) (in_motion desk pillow ?a) ) ) ) ) )
              (once (on ?o) )
              (hold-while (in_motion ?a top_drawer) (agent_holds desk) )
            )
          )
        )
        (preference preference3
          (exists (?n - (either game_object dodgeball cube_block))
            (then
              (hold (on ?a desk) )
              (once (and (adjacent ?n) ) )
              (hold (and (< (distance room_center room_center) (distance agent room_center)) (< (distance agent ?n) (distance )) (agent_holds ?n) ) )
            )
          )
        )
      )
    )
    (forall (?x - dodgeball ?i - dodgeball)
      (and
        (preference preference4
          (exists (?l - dodgeball)
            (then
              (once (in_motion blue desk) )
              (once (on bed ?l) )
              (hold-while (not (and (agent_holds ?l ?i) (adjacent_side ?l) ) ) (faces ?i) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (= (+ (* 1 7 )
          (count-once-per-objects preference1:orange:blue_dodgeball)
        )
        (external-forall-maximize
          (count preference2:basketball)
        )
      )
      (and
        (>= (- (- 7 )
          )
          (count preference3:dodgeball)
        )
        (and
          (>= 30 (count-once-per-external-objects preference1:pink) )
          (>= (count-once-per-objects preference2:hexagonal_bin) 1 )
        )
        (and
          (or
            (>= (+ (* (count-once-per-objects preference3:purple) 3 )
                (* (+ (count-overlapping preference2:dodgeball:yellow:beachball) (count-once preference3:cube_block:cylindrical_block) )
                  5
                )
              )
              (count-once-per-objects preference4:dodgeball)
            )
            (> (total-score) 2 )
            (or
              (not
                (>= 5 2 )
              )
              (>= (count-once-per-objects preference1:doggie_bed) (count-longest preference3:tall_cylindrical_block:dodgeball) )
              (>= (* 1 (count-once-per-objects preference3:brown) )
                (total-time)
              )
            )
          )
        )
      )
    )
    (and
      (>= (* (count-increasing-measure preference4:pink) (+ 5 (* 2 (total-score) )
          )
        )
        4
      )
    )
    (= (external-forall-minimize (count-once-per-objects preference1:purple) ) (* (count preference2:green) (external-forall-minimize 3 ) )
    )
  )
)
(:scoring
  (+ (* (- (count preference4:blue_cube_block) )
      (count preference2:golfball:cube_block)
    )
    2
  )
)
)

(define (game game-id-995) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?b - color)
      (game-optional
        (and
          (agent_holds ?b)
          (adjacent ?b)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?c - (either golfball dodgeball cd))
        (then
          (once (in_motion ?c) )
        )
      )
    )
    (preference preference2
      (exists (?a - building ?r - doggie_bed)
        (at-end
          (not
            (in ?r)
          )
        )
      )
    )
    (preference preference3
      (exists (?j - chair)
        (then
          (once (in rug) )
          (once (not (not (not (and (not (same_object ?j ?j) ) (and (agent_holds ?j ?j) (same_type ?j ?j) ) ) ) ) ) )
          (once (adjacent ?j ?j) )
          (hold (agent_holds front_left_corner ?j) )
        )
      )
    )
  )
)
(:terminal
  (<= (count preference3:beachball:golfball) (+ (count preference1:hexagonal_bin) )
  )
)
(:scoring
  (count preference2:blue_dodgeball)
)
)

(define (game game-id-996) (:domain few-objects-room-v1)
(:setup
  (exists (?v - cube_block)
    (exists (?c ?h - cube_block)
      (game-conserved
        (not
          (in_motion ?c ?v)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?v - curved_wooden_ramp)
        (then
          (hold (on ?v ?v) )
          (hold-while (not (in_motion ?v) ) (on bed) (<= 2 (distance 4 7 room_center)) )
          (once (adjacent floor) )
        )
      )
    )
    (preference preference2
      (exists (?o - curved_wooden_ramp ?u - chair)
        (then
          (once (agent_holds ?u) )
          (once (is_setup_object ?u) )
          (once (same_type ?u) )
        )
      )
    )
    (preference preference3
      (exists (?o - doggie_bed)
        (at-end
          (exists (?k - dodgeball ?e - wall)
            (adjacent sideways)
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (not (count-same-positions preference1:beachball) ) (count preference1:tan) )
    (>= (count-overlapping preference1:rug) (+ (count-once-per-external-objects preference2:red:golfball) 3 )
    )
  )
)
(:scoring
  (count-once-per-objects preference1:blue_dodgeball:hexagonal_bin)
)
)

(define (game game-id-997) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (in_motion upright desk)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?a - (either dodgeball alarm_clock))
        (then
          (hold (not (on ?a) ) )
          (hold-to-end (and (agent_holds ?a) (same_type ?a ?a) ) )
          (once (not (not (on ?a) ) ) )
        )
      )
    )
    (forall (?r - game_object)
      (and
        (preference preference2
          (exists (?p - hexagonal_bin ?m ?v ?f ?k - (either golfball dodgeball) ?x - (either triangle_block beachball dodgeball) ?y - cube_block)
            (then
              (once (in ?r ?y) )
              (hold-while (on ?r) (and (not (agent_holds ?y) ) (agent_crouches agent) ) )
              (hold (on floor) )
            )
          )
        )
        (preference preference3
          (exists (?n - game_object)
            (then
              (once (agent_holds ?n) )
              (once (in desk ?r) )
              (once (not (and (not (and (in ?r) (not (and (and (adjacent ?n) (agent_holds ?n bed) ) ) ) ) ) (object_orientation ?r ?n) ) ) )
            )
          )
        )
      )
    )
    (preference preference4
      (at-end
        (not
          (agent_holds top_drawer ?xxx)
        )
      )
    )
  )
)
(:terminal
  (= (- (* 2 (- (+ (total-score) (* 9 5 )
          )
        )
      )
      (count preference4:golfball:dodgeball)
    )
    (count-once-per-objects preference2:golfball)
  )
)
(:scoring
  (count preference2:book)
)
)

(define (game game-id-998) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (on green ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?s - hexagonal_bin ?g - hexagonal_bin)
        (then
          (once (agent_holds agent) )
          (once (not (or (on ?g ?g) (in_motion ?g ?g) (and (and (in_motion ?g) (and (and (on ?g ?g) (not (in_motion ?g) ) ) (in ?g ?g) ) ) (and (not (or (not (in_motion rug) ) (not (in_motion ?g) ) ) ) (agent_holds ?g ?g) ) ) (in_motion blue) ) ) )
          (once (>= (distance room_center 2) (distance 3 ?g)) )
        )
      )
    )
    (forall (?a - game_object)
      (and
        (preference preference2
          (exists (?n - game_object)
            (then
              (once (and (and (not (agent_holds ?a) ) (in ?n ?n) (above ?n ?a) ) (in ?n) ) )
              (once (is_setup_object ?n) )
              (once (on pillow ?a) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (= (* (total-time) 3 )
      (* (count-once-per-objects preference1:beachball) (* 10 300 )
      )
      (count-once-per-objects preference1:dodgeball)
    )
    (count preference2:yellow)
  )
)
(:scoring
  (count preference1)
)
)

(define (game game-id-999) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (game-optional
        (on ?xxx)
      )
      (game-conserved
        (not
          (on agent)
        )
      )
      (game-conserved
        (agent_holds ?xxx floor)
      )
    )
    (game-optional
      (in_motion ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?g - game_object ?z - teddy_bear ?p - red_pyramid_block ?w - doggie_bed)
        (then
          (hold-while (not (same_color ?w) ) (not (not (agent_holds ?w) ) ) )
          (hold (exists (?z - shelf ?a - hexagonal_bin) (and (in ?a) (in_motion ?a ?w) ) ) )
          (hold (not (and (in_motion ?w) (and (in_motion ?w floor) (not (= 10 (distance ?w) 4) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (< 4 (total-score) )
)
(:scoring
  (* (count preference1:purple:book) 4 (* (+ (+ 0 (count-once preference1:basketball) )
        (count-same-positions preference1:rug)
      )
      5
      (count preference1)
      (* (and (* 4 (count-overlapping preference1:red:bed) )
          (= (count-once preference1:yellow) (count preference1:blue_pyramid_block) )
        )
        (not
          2
        )
      )
      (count preference1:purple)
      (count preference1)
    )
  )
)
)

(define (game game-id-1000) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (not
      (agent_holds ?xxx ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?u - hexagonal_bin ?r - wall)
        (then
          (once (= 2 4) )
          (once (not (and (not (adjacent_side ?r) ) (not (agent_holds ?r) ) ) ) )
          (once (or (not (not (not (agent_holds ?r) ) ) ) (in_motion ?r door) (adjacent ?r) ) )
        )
      )
    )
    (preference preference2
      (exists (?w - hexagonal_bin)
        (then
          (hold-while (same_object ?w ?w) (agent_holds ?w) )
          (once (and (on ?w) (not (not (in_motion ?w ?w) ) ) ) )
          (hold (adjacent upside_down agent) )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (= (count preference2:blue_dodgeball) (count-once-per-objects preference2:dodgeball) )
  )
)
(:scoring
  (count preference2:hexagonal_bin:basketball)
)
)

(define (game game-id-1001) (:domain many-objects-room-v1)
(:setup
  (not
    (forall (?s - (either laptop alarm_clock rug) ?q - ball)
      (game-conserved
        (agent_holds ?q)
      )
    )
  )
)
(:constraints
  (and
    (forall (?o ?x - doggie_bed ?y - building)
      (and
        (preference preference1
          (exists (?v - red_dodgeball)
            (then
              (hold (agent_holds ?v) )
              (once (agent_holds floor) )
              (once (and (on ?v) (exists (?r ?x - hexagonal_bin ?i - (either teddy_bear tall_cylindrical_block) ?r ?l - wall ?d - ball) (not (adjacent ?y ?y) ) ) ) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?e - ball ?b - wall)
        (then
          (hold (and (agent_holds desk pink_dodgeball) (touch agent) (in_motion agent ?b) (agent_holds ?b agent) (in_motion ?b bed) (in_motion ?b) ) )
          (hold (on ?b) )
          (once (< (distance 1 ?b) 3) )
        )
      )
    )
    (preference preference3
      (then
        (hold (agent_holds ?xxx ?xxx) )
        (once (agent_holds top_shelf) )
        (once (agent_holds ?xxx) )
      )
    )
  )
)
(:terminal
  (>= (external-forall-maximize 4 ) (count preference1:purple) )
)
(:scoring
  (count preference2:blue_dodgeball)
)
)

(define (game game-id-1002) (:domain many-objects-room-v1)
(:setup
  (exists (?n ?x ?c - dodgeball)
    (exists (?f - wall ?v - ball)
      (and
        (game-optional
          (in_motion ?c ?n)
        )
        (and
          (game-conserved
            (and
              (agent_holds ?n bed)
              (in_motion ?v)
            )
          )
        )
        (exists (?s - dodgeball)
          (forall (?h ?k - drawer ?k - hexagonal_bin ?l - tall_cylindrical_block)
            (exists (?t ?w - hexagonal_bin)
              (and
                (and
                  (game-conserved
                    (< 1 (distance ?t ?c))
                  )
                  (and
                    (not
                      (forall (?a - sliding_door)
                        (exists (?k - dodgeball)
                          (forall (?u - (either basketball dodgeball golfball))
                            (and
                              (game-optional
                                (on ?n ?k)
                              )
                              (and
                                (and
                                  (game-optional
                                    (in_motion ?u)
                                  )
                                )
                                (game-conserved
                                  (or
                                    (not
                                      (and
                                        (exists (?m - golfball)
                                          (agent_holds ?w)
                                        )
                                        (adjacent ?u)
                                      )
                                    )
                                    (exists (?r - dodgeball)
                                      (in_motion ?n)
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?r - ball ?u - building)
        (then
          (hold (and (in_motion ?u) (= (distance ?u 3) (distance ?u ?u)) (in_motion ?u) (not (= (distance ) 1) ) ) )
          (hold (agent_holds ?u) )
          (hold (not (and (not (agent_holds ?u bed) ) (adjacent ?u) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:hexagonal_bin) (/ 50 (count-once-per-external-objects preference1:basketball:dodgeball) ) )
)
(:scoring
  (+ (count-longest preference1:beachball) (count preference1) 10 (+ 5 (count-once preference1:book) )
  )
)
)

(define (game game-id-1003) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?c - game_object ?w ?d - game_object)
        (then
          (once (and (exists (?s - hexagonal_bin) (on ?s) ) (same_type ?w) (same_type ?w ?d) ) )
          (once (in_motion agent) )
          (once (game_start ?d) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (count-same-positions preference1:book:dodgeball) (count preference1:beachball:basketball) (* (* (count-total preference1:dodgeball) (external-forall-maximize (* 6 (count-once-per-objects preference1:yellow_pyramid_block) (+ (+ (+ (count-increasing-measure preference1:golfball) 10 10 )
                  (* (* 0 (count preference1:block:pink) )
                    1
                  )
                  10
                  (count preference1:green)
                  6
                  (count preference1:yellow)
                )
                4
              )
            )
          )
          4
          (count-once preference1:blue_dodgeball:yellow:block)
          2
          (count-once-per-objects preference1:dodgeball)
        )
        (count preference1:red)
      )
    )
    (count-once-per-objects preference1:red)
  )
)
(:scoring
  (count preference1:golfball)
)
)

(define (game game-id-1004) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (on ?xxx rug)
  )
)
(:constraints
  (and
    (forall (?d - dodgeball)
      (and
        (preference preference1
          (exists (?p - game_object ?u - hexagonal_bin)
            (then
              (hold (on ?u) )
              (once (on ?d ?u bed) )
              (once (on pink_dodgeball ?u) )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?r - curved_wooden_ramp ?m ?g - ball)
        (then
          (once (in_motion ?m) )
          (once (on ?g) )
          (once (agent_holds ?g) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:brown:pink:basketball) (* (count preference2:dodgeball) 7 (count preference2:book) (count preference2:cube_block) 100 (total-score) 2 (count preference1:blue) 9 )
  )
)
(:scoring
  4
)
)

(define (game game-id-1005) (:domain many-objects-room-v1)
(:setup
  (forall (?y ?d - hexagonal_bin ?r - (either desktop pyramid_block cube_block))
    (exists (?f - doggie_bed)
      (game-optional
        (and
          (in ?f ?r)
          (agent_holds ?f)
          (rug_color_under ?f ?r)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?e - (either cube_block dodgeball cylindrical_block yellow_cube_block) ?c - ball)
        (at-end
          (in_motion ?c)
        )
      )
    )
    (preference preference2
      (exists (?c ?q - hexagonal_bin)
        (at-end
          (agent_holds ?q)
        )
      )
    )
    (preference preference3
      (exists (?t - cube_block)
        (then
          (once (in_motion ?t) )
          (once (in ?t ?t) )
          (once (agent_holds agent) )
        )
      )
    )
    (preference preference4
      (exists (?n - pyramid_block)
        (then
          (once (forall (?q - blue_pyramid_block) (not (in_motion ?n ?n) ) ) )
          (once (and (touch ?n ?n) (and (in_motion ?n ?n) (or (agent_holds ?n ?n) (agent_holds ?n) ) ) ) )
          (once (< (distance 8 ?n) (distance ?n 10)) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (- 5 3 ) (+ 6 (- 3 )
      )
    )
  )
)
(:scoring
  10
)
)

(define (game game-id-1006) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (not
      (agent_holds ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?o - block)
        (then
          (once (not (and (and (agent_holds ?o) (agent_holds ?o) ) (agent_holds ?o ?o) ) ) )
          (once (same_type agent ?o) )
        )
      )
    )
    (forall (?x - (either book golfball) ?i - game_object ?w - cube_block)
      (and
        (preference preference2
          (exists (?v - dodgeball ?n - game_object)
            (then
              (once (exists (?h - dodgeball) (agent_holds east_sliding_door ?h) ) )
              (hold (in_motion ?n ?w ?w) )
              (hold (toggled_on south_west_corner ?w) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 4 (external-forall-maximize 5 ) )
    (or
      (>= 4 (total-score) )
      (>= (- 180 )
        (+ 180 (count-once preference2:pink) )
      )
    )
  )
)
(:scoring
  (count preference2:dodgeball:pink)
)
)

(define (game game-id-1007) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (not
      (and
        (not
          (in_motion ?xxx)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?z - game_object ?a - (either dodgeball golfball) ?h - desktop)
        (then
          (any)
          (once (agent_holds ?h) )
          (once (agent_holds ?h desk) )
        )
      )
    )
    (forall (?n - game_object ?j - cube_block)
      (and
        (preference preference2
          (exists (?q ?h - triangular_ramp)
            (then
              (hold (agent_holds ?q) )
              (once (in ?j ?j) )
              (once (and (in_motion ?j desk) (agent_holds ?q agent) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:pink) (count preference2:beachball) )
)
(:scoring
  (count preference1:hexagonal_bin)
)
)

(define (game game-id-1008) (:domain many-objects-room-v1)
(:setup
  (and
    (not
      (game-conserved
        (not
          (and
            (agent_holds ?xxx)
            (and
              (adjacent ?xxx)
              (on ?xxx ?xxx)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?k - chair)
        (then
          (hold (in_motion ?k) )
          (once (agent_holds ?k) )
          (once (in_motion ?k ?k) )
        )
      )
    )
    (forall (?p - hexagonal_bin)
      (and
        (preference preference2
          (at-end
            (agent_holds ?p)
          )
        )
        (preference preference3
          (exists (?f ?y - (either dodgeball cube_block) ?g - hexagonal_bin)
            (then
              (hold (object_orientation ?p) )
              (hold (not (not (in_motion ?g) ) ) )
              (hold (agent_holds ?p ?p desk) )
            )
          )
        )
      )
    )
    (forall (?n - hexagonal_bin)
      (and
        (preference preference4
          (exists (?g - hexagonal_bin ?i - golfball ?e - hexagonal_bin)
            (then
              (hold (not (adjacent agent) ) )
              (once (and (in_motion desk) (and (agent_holds ?n ?e) (not (adjacent desk) ) ) ) )
              (once (not (agent_holds ?e ?n) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference2:purple) (count-once-per-objects preference2:dodgeball) )
)
(:scoring
  (count preference2:yellow_pyramid_block)
)
)

(define (game game-id-1009) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (in ?xxx)
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?y - chair)
        (then
          (hold (and (in_motion ?y) (in_motion ?y) ) )
          (hold-while (and (in_motion ?y) (not (or (agent_holds ?y ?y) ) ) ) (and (not (in agent) ) (not (in_motion agent) ) (and (and (exists (?j - hexagonal_bin) (and (and (not (not (in_motion ?y ?y) ) ) (and (and (< 1 2) (agent_holds ?y) ) (agent_holds ?y) ) (between ?y) (agent_holds ?y) (on ?y agent) (not (in_motion ?y) ) ) (in ?y ?y) ) ) (not (touch ?y ?y) ) ) (and (agent_holds ?y ?y) (same_type ) ) ) (< 8 (distance agent ?y)) ) )
          (once (in_motion ?y) )
          (once (and (in_motion agent) (in_motion ?y) ) )
          (once (in_motion floor ?y) )
          (once (agent_holds agent ?y) )
        )
      )
    )
    (preference preference2
      (exists (?b - (either floor hexagonal_bin) ?u - cube_block ?d - color)
        (then
          (once (in_motion ?d ?d) )
          (once (on ?d ?d) )
          (once (on ?d ?d) )
        )
      )
    )
  )
)
(:terminal
  (< 4 (count-measure preference1:brown) )
)
(:scoring
  (count preference2)
)
)

(define (game game-id-1010) (:domain many-objects-room-v1)
(:setup
  (exists (?f - (either alarm_clock golfball) ?w - triangular_ramp)
    (game-optional
      (and
        (and
          (on ?w ?w)
          (adjacent_side ?w ?w)
        )
        (not
          (and
            (in_motion ?w ?w)
            (agent_holds ?w ?w)
            (not
              (and
                (>= (distance bed desk) (distance 5 ?w))
                (and
                  (not
                    (not
                      (and
                        (agent_holds ?w)
                        (agent_holds ?w ?w)
                      )
                    )
                  )
                  (and
                    (agent_holds ?w)
                    (> (distance room_center ?w) 0.5)
                  )
                  (not
                    (or
                      (agent_holds ?w agent)
                      (touch ?w ?w floor)
                    )
                  )
                )
              )
            )
          )
        )
        (in_motion pink)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?d - hexagonal_bin)
        (then
          (any)
          (once-measure (in ?d) (building_size 1 9) )
          (hold (faces ?d ?d) )
          (hold (and (and (not (in_motion ?d ?d) ) (touch ?d) ) (forall (?e - hexagonal_bin) (not (agent_holds ?e ?e) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (<= (* (* 3 (count-once-per-external-objects preference1:basketball:dodgeball) )
      (count preference1:cube_block)
    )
    (* (count preference1:pink) (total-score) )
  )
)
(:scoring
  (count preference1:golfball)
)
)

(define (game game-id-1011) (:domain medium-objects-room-v1)
(:setup
  (forall (?x - hexagonal_bin ?z - hexagonal_bin)
    (game-conserved
      (< (distance ?z 0) (distance ))
    )
  )
)
(:constraints
  (and
    (forall (?k - red_pyramid_block)
      (and
        (preference preference1
          (exists (?u - flat_block)
            (at-end
              (exists (?v - curved_wooden_ramp)
                (< 6 (distance ))
              )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?e - shelf ?o ?m - curved_wooden_ramp)
        (then
          (once (in ?m) )
          (hold (in_motion ?m) )
          (hold-for 4 (in_motion ?o desk) )
        )
      )
    )
    (preference preference3
      (exists (?h - ball ?d - chair)
        (then
          (hold (not (in_motion ?d) ) )
          (hold (and (and (toggled_on ?d ?d) (on ?d) ) (on ?d agent) ) )
          (once (agent_holds ?d) )
        )
      )
    )
  )
)
(:terminal
  (>= (count preference1:pink_dodgeball:dodgeball:dodgeball) (count preference2:hexagonal_bin) )
)
(:scoring
  (* (* 2 (count-once-per-objects preference3:basketball:yellow_pyramid_block) )
    (count-once preference2:blue_pyramid_block)
  )
)
)

(define (game game-id-1012) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (and
      (and
        (in_motion ?xxx)
        (in_motion ?xxx desk)
      )
      (on ?xxx ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?x - beachball ?z - bridge_block)
        (then
          (hold (< 8 (distance )) )
          (once (= (distance ) 0) )
          (once (and (adjacent ?z) (on pink ?z) ) )
        )
      )
    )
  )
)
(:terminal
  (> 2 (* (count-once-per-objects preference1:basketball) 0 )
  )
)
(:scoring
  (count preference1:basketball)
)
)

(define (game game-id-1013) (:domain medium-objects-room-v1)
(:setup
  (exists (?c ?o - hexagonal_bin)
    (exists (?p - red_dodgeball)
      (and
        (not
          (not
            (exists (?k ?z - (either golfball pencil) ?q - cylindrical_block)
              (exists (?k - game_object)
                (exists (?b ?r ?e ?g - dodgeball)
                  (forall (?l - doggie_bed)
                    (exists (?y - cube_block ?x - hexagonal_bin)
                      (exists (?n - game_object)
                        (or
                          (game-optional
                            (agent_holds ?n bed)
                          )
                          (and
                            (exists (?d - ball)
                              (forall (?y - ball ?s - golfball)
                                (exists (?i ?m - hexagonal_bin)
                                  (exists (?w - rug)
                                    (exists (?y - (either beachball cylindrical_block cellphone))
                                      (exists (?t - hexagonal_bin)
                                        (game-optional
                                          (and
                                            (not
                                              (object_orientation ?r)
                                            )
                                            (< (distance ?r 7) 4)
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
        (game-conserved
          (in ?p ?p)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?a - yellow_pyramid_block)
      (and
        (preference preference1
          (exists (?k - bridge_block)
            (then
              (once (not (> 1 6) ) )
              (once (in_motion floor ?k) )
              (once (not (and (and (above floor ?a) (in ?k) ) (agent_holds ?k) (or (agent_holds ?k) (agent_holds ?k) ) (agent_holds ?a) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (external-forall-minimize 3 ) (count preference1:pink:purple) )
)
(:scoring
  (total-time)
)
)

(define (game game-id-1014) (:domain medium-objects-room-v1)
(:setup
  (exists (?f - block)
    (exists (?k - ball ?p - (either key_chain dodgeball doggie_bed))
      (and
        (game-conserved
          (in_motion ?f)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?s - dodgeball)
      (and
        (preference preference1
          (exists (?t - wall ?z - hexagonal_bin)
            (then
              (once (agent_holds ?s pink_dodgeball) )
              (once (same_type ?s ?s) )
              (hold-while (agent_holds desk) (in_motion ?z ?z) (exists (?j - hexagonal_bin) (in_motion rug ?s ?s) ) )
            )
          )
        )
      )
    )
    (forall (?k - ball)
      (and
        (preference preference2
          (then
            (any)
            (once (and (exists (?c - game_object) (equal_z_position door ?c ?k) ) (< (distance back ?k) 1) ) )
            (once (agent_holds ?k) )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once preference2:golfball) (count-once-per-objects preference2:pyramid_block:hexagonal_bin) )
)
(:scoring
  (* (count preference1:beachball) (+ 50 (< (<= 1 (or (count preference2:red) (count preference1:golfball) ) )
        3
      )
    )
  )
)
)

(define (game game-id-1015) (:domain medium-objects-room-v1)
(:setup
  (forall (?m - hexagonal_bin ?a - teddy_bear)
    (exists (?v - wall)
      (or
        (and
          (game-conserved
            (and
              (not
                (not
                  (not
                    (agent_holds ?v ?a)
                  )
                )
              )
              (game_start ?a ?v)
              (in_motion desk)
            )
          )
          (exists (?o - hexagonal_bin ?i - hexagonal_bin)
            (forall (?x - dodgeball)
              (forall (?n - block)
                (exists (?j - building)
                  (and
                    (exists (?p - (either golfball tall_cylindrical_block))
                      (game-optional
                        (not
                          (and
                            (and
                              (agent_holds ?v)
                              (in ?j ?n)
                            )
                            (on ?j)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
          (exists (?p - pillow ?d - dodgeball)
            (game-conserved
              (and
                (and
                  (agent_holds ?d ?a)
                  (and
                    (and
                      (same_color ?a)
                      (agent_holds desk)
                    )
                    (on ?v agent)
                  )
                )
              )
            )
          )
        )
        (exists (?p - building ?w - ball)
          (game-optional
            (and
              (agent_holds ?v upside_down)
              (touch ?v)
            )
          )
        )
        (exists (?i - hexagonal_bin)
          (game-conserved
            (and
              (not
                (in_motion ?i)
              )
              (in ?i ?v)
              (and
                (and
                  (< 1 (distance bed ?a))
                  (adjacent_side ?i)
                )
                (in ?v ?i)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?k ?n - ball ?u - doggie_bed ?w - hexagonal_bin)
        (then
          (once (in ?w) )
          (once (and (and (not (agent_holds ?w ?w) ) (agent_holds agent) ) (not (not (not (> (distance agent ?w) (distance ?w desk)) ) ) ) ) )
          (once (touch sideways) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 5 1 )
    15
  )
)
(:scoring
  (count preference1:basketball)
)
)

(define (game game-id-1016) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (and
      (and
        (in_motion ?xxx ?xxx)
        (not
          (and
            (is_setup_object floor rug)
            (on ?xxx)
          )
        )
        (in_motion ?xxx ?xxx)
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?t - doggie_bed ?d - red_pyramid_block ?v ?c ?u - (either desktop))
        (then
          (once (not (adjacent ?c) ) )
          (once (and (in_motion floor ?c) (= (distance ?v agent) 3) (in_motion ?u) ) )
          (once (in_motion ?u) )
        )
      )
    )
    (preference preference2
      (then
        (hold (and (in_motion ?xxx ?xxx) (adjacent agent ?xxx) ) )
        (any)
        (hold-while (agent_holds ?xxx ?xxx) (and (in_motion ?xxx ?xxx) (in desk ?xxx) (in_motion ?xxx ?xxx) ) )
      )
    )
  )
)
(:terminal
  (< 0 (* (total-score) (* (count-once preference2:cube_block) (count preference2:yellow) 3 )
    )
  )
)
(:scoring
  (* (* (count preference1:golfball) (count preference1:dodgeball) )
    10
  )
)
)

(define (game game-id-1017) (:domain medium-objects-room-v1)
(:setup
  (exists (?x - dodgeball)
    (game-conserved
      (and
        (and
          (on agent brown)
          (agent_holds ?x)
          (agent_holds ?x)
        )
        (not
          (agent_crouches ?x)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?v - game_object ?m - hexagonal_bin)
      (and
        (preference preference1
          (exists (?z - wall)
            (then
              (hold (and (not (< 1 (distance 7 ?m)) ) (agent_holds ?z) ) )
              (hold (on ?z) )
              (once (adjacent ?z) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< 10 (count-once-per-external-objects preference1:dodgeball) )
)
(:scoring
  (= 16 (+ (* (count-longest preference1:blue:tan) (+ 5 (count-once-per-objects preference1:dodgeball:dodgeball) )
        (* (count-once preference1:doggie_bed) (* 10 (* (* 2 10 )
              (* (count-once-per-objects preference1:blue_dodgeball) (count-once-per-external-objects preference1:pink) )
            )
          )
          (* (count-once preference1:pink_dodgeball:dodgeball) 300 )
          (count-once-per-objects preference1:basketball)
          (* 5 (count-once-per-objects preference1:basketball) (count-once preference1:blue_pyramid_block:basketball) (count preference1:hexagonal_bin) )
          (count preference1:yellow)
          3
          5
          (count-once-per-objects preference1:blue_pyramid_block)
        )
      )
      (count-once-per-objects preference1:golfball:basketball)
    )
  )
)
)

(define (game game-id-1018) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (and
      (toggled_on ?xxx ?xxx)
      (touch ?xxx ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?p - hexagonal_bin)
        (then
          (once (not (in ?p) ) )
          (once (on ?p ?p) )
          (once (and (same_color bed ?p) (in ?p) ) )
        )
      )
    )
  )
)
(:terminal
  (<= (count-once-per-objects preference1:pink) (count preference1:yellow) )
)
(:scoring
  4
)
)

(define (game game-id-1019) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (in_motion ?xxx)
  )
)
(:constraints
  (and
    (forall (?r - hexagonal_bin)
      (and
        (preference preference1
          (exists (?p - dodgeball)
            (then
              (once (above ?r) )
              (once (not (adjacent ?r) ) )
              (once (and (in_motion ?p ?r) (not (adjacent ?p ?r) ) ) )
            )
          )
        )
        (preference preference2
          (exists (?k - doggie_bed)
            (at-end
              (in_motion ?k)
            )
          )
        )
        (preference preference3
          (exists (?d - hexagonal_bin)
            (at-end
              (agent_holds ?d ?r ?r)
            )
          )
        )
      )
    )
    (preference preference4
      (exists (?r - hexagonal_bin)
        (then
          (once (agent_holds ?r) )
          (once (and (in ?r) (not (or (agent_holds ?r) (agent_holds brown) ) ) ) )
          (once (agent_holds ?r ?r) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects preference1:beachball) (* (* (count preference4:beachball) (* 3 6 )
      )
      50
      4
    )
  )
)
(:scoring
  (count preference4:golfball)
)
)

(define (game game-id-1020) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (not
      (and
        (in_motion ?xxx floor)
        (not
          (in_motion ?xxx ?xxx)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?v - teddy_bear ?l - building)
        (then
          (once (and (agent_holds ?l) (in agent ?l) ) )
          (hold (exists (?i - hexagonal_bin) (in_motion ?i) ) )
          (once (in_motion agent ?l) )
          (hold-while (< (x_position ?l 7) 3) (in_motion agent ?l) (agent_holds ?l ?l) )
          (once (in_motion ?l) )
          (once (same_type ?l) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (+ (count preference1:beachball) (count-once-per-objects preference1:cylindrical_block) )
        (count-increasing-measure preference1:beachball:basketball)
      )
      (>= (* (= 1 (count-once-per-objects preference1:golfball:yellow) 10 )
          (count-once-per-objects preference1:dodgeball)
        )
        (+ (count preference1:cube_block) (count preference1:dodgeball) )
      )
    )
  )
)
(:scoring
  (= (count preference1:yellow) (* (count preference1:dodgeball) (* (or (count-same-positions preference1:beachball) ) (count preference1:pink_dodgeball) )
    )
  )
)
)

(define (game game-id-1021) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?v - ball ?a - building ?o - pyramid_block)
      (and
        (forall (?t - beachball)
          (game-conserved
            (agent_holds ?o)
          )
        )
      )
    )
    (game-optional
      (not
        (not
          (agent_holds ?xxx ?xxx agent)
        )
      )
    )
    (game-optional
      (and
        (in_motion ?xxx ?xxx)
        (not
          (and
            (in_motion ?xxx)
            (in_motion ?xxx)
            (not
              (touch ?xxx)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (then
        (hold (not (= 1 (distance ?xxx ?xxx) 4) ) )
        (hold (and (same_type ?xxx ?xxx) (agent_holds agent ?xxx) (agent_holds ?xxx) ) )
        (once (in ?xxx) )
      )
    )
  )
)
(:terminal
  (>= (* 5 (count-once-per-objects preference1:basketball) )
    (+ (total-score) 5 )
  )
)
(:scoring
  15
)
)

(define (game game-id-1022) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (and
      (is_setup_object ?xxx)
      (toggled_on ?xxx ?xxx)
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?b - (either golfball hexagonal_bin))
        (then
          (once (on ?b) )
          (hold (agent_holds ?b ?b) )
          (once (and (not (in_motion door yellow) ) (in_motion agent) ) )
        )
      )
    )
    (forall (?z - hexagonal_bin)
      (and
        (preference preference2
          (exists (?b - dodgeball)
            (then
              (hold-to-end (and (on ?b ?z) (in_motion ?z) ) )
              (hold (not (adjacent ?b) ) )
              (once (not (< (distance_side 4 7) 1) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (not
      (< 5 (count-once-per-objects preference1:dodgeball) )
    )
    (not
      (<= (* (* (count preference2:beachball) )
          (+ (+ (count preference2:basketball) (count preference2:yellow_pyramid_block) )
            (+ (count-once-per-objects preference2:beachball) (+ (+ (count-same-positions preference1:cube_block) (+ (* (count-measure preference1:beachball) (count-increasing-measure preference1:dodgeball) )
                    6
                  )
                )
                1
              )
            )
          )
        )
        (count preference2:yellow)
      )
    )
    (and
      (>= (+ (count-once preference1:dodgeball) 1 )
        (* (count preference2:beachball:basketball) (count-total preference1:red:red) )
      )
      (not
        (>= (count-increasing-measure preference1:pink:basketball) (count preference1:purple) )
      )
    )
  )
)
(:scoring
  (count-measure preference2:pink)
)
)

(define (game game-id-1023) (:domain few-objects-room-v1)
(:setup
  (exists (?p - dodgeball ?f - ball)
    (game-optional
      (and
        (and
          (not
            (agent_holds ?f)
          )
          (not
            (and
              (and
                (and
                  (on ?f)
                  (and
                    (not
                      (agent_holds ?f)
                    )
                    (not
                      (and
                        (agent_holds ?f)
                        (in_motion ?f ?f)
                      )
                    )
                  )
                )
                (agent_holds desk)
              )
              (touch ?f agent)
            )
          )
        )
        (not
          (in ?f)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference preference1
      (exists (?a - block)
        (at-end
          (and
            (in_motion ?a ?a)
            (and
              (in_motion ?a)
              (in_motion ?a)
              (agent_holds rug sideways ?a)
            )
            (on ?a)
            (and
              (in_motion ?a)
              (not
                (agent_holds ?a)
              )
            )
          )
        )
      )
    )
    (preference preference2
      (exists (?u - (either desktop cube_block) ?b - chair)
        (then
          (hold (in ?b ?b) )
          (hold (in_motion ?b ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (* (= 2 (count-increasing-measure preference1:tan) )
        (- (count-once-per-objects preference2:basketball) )
      )
      7
    )
    (+ (count-measure preference2:yellow) (count-increasing-measure preference2:dodgeball) 6 (count preference2:basketball:blue_pyramid_block) )
  )
)
(:scoring
  (count preference1:basketball)
)
)
